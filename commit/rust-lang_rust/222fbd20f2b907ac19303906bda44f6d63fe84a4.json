{"sha": "222fbd20f2b907ac19303906bda44f6d63fe84a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyMmZiZDIwZjJiOTA3YWMxOTMwMzkwNmJkYTQ0ZjZkNjNmZTg0YTQ=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-05-29T16:47:40Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-05-29T16:47:52Z"}, "message": "fix encode with shorthand for Predicate", "tree": {"sha": "a9ae34f7fa6109a9b07d39a0ed237d419277dbe8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a9ae34f7fa6109a9b07d39a0ed237d419277dbe8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/222fbd20f2b907ac19303906bda44f6d63fe84a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/222fbd20f2b907ac19303906bda44f6d63fe84a4", "html_url": "https://github.com/rust-lang/rust/commit/222fbd20f2b907ac19303906bda44f6d63fe84a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/222fbd20f2b907ac19303906bda44f6d63fe84a4/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96dd4690c3aa70ec312448c3f2d50e6dc6fb87df", "url": "https://api.github.com/repos/rust-lang/rust/commits/96dd4690c3aa70ec312448c3f2d50e6dc6fb87df", "html_url": "https://github.com/rust-lang/rust/commit/96dd4690c3aa70ec312448c3f2d50e6dc6fb87df"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "8bc69a9d1231288897f46ca1d100b0013c824013", "filename": "src/librustc_middle/ty/codec.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/222fbd20f2b907ac19303906bda44f6d63fe84a4/src%2Flibrustc_middle%2Fty%2Fcodec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/222fbd20f2b907ac19303906bda44f6d63fe84a4/src%2Flibrustc_middle%2Fty%2Fcodec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fcodec.rs?ref=222fbd20f2b907ac19303906bda44f6d63fe84a4", "patch": "@@ -39,9 +39,9 @@ impl<'tcx> EncodableWithShorthand for Ty<'tcx> {\n }\n \n impl<'tcx> EncodableWithShorthand for ty::Predicate<'tcx> {\n-    type Variant = ty::Predicate<'tcx>;\n+    type Variant = ty::PredicateKind<'tcx>;\n     fn variant(&self) -> &Self::Variant {\n-        self\n+        self.kind()\n     }\n }\n "}]}