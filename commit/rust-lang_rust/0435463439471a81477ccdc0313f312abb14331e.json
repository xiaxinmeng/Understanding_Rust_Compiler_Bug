{"sha": "0435463439471a81477ccdc0313f312abb14331e", "node_id": "C_kwDOAAsO6NoAKDA0MzU0NjM0Mzk0NzFhODE0NzdjY2RjMDMxM2YzMTJhYmIxNDMzMWU", "commit": {"author": {"name": "Benjamin Coenen", "email": "5719034+bnjjj@users.noreply.github.com", "date": "2021-12-30T14:49:31Z"}, "committer": {"name": "Benjamin Coenen", "email": "5719034+bnjjj@users.noreply.github.com", "date": "2021-12-30T14:49:31Z"}, "message": "feat(diagnostics): use Default::default() expression instead of todo! when missing fields\n\nSigned-off-by: Benjamin Coenen <5719034+bnjjj@users.noreply.github.com>", "tree": {"sha": "2376b5090d3be60a212cd2a9cb51c24ea74c8da5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2376b5090d3be60a212cd2a9cb51c24ea74c8da5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0435463439471a81477ccdc0313f312abb14331e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0435463439471a81477ccdc0313f312abb14331e", "html_url": "https://github.com/rust-lang/rust/commit/0435463439471a81477ccdc0313f312abb14331e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0435463439471a81477ccdc0313f312abb14331e/comments", "author": {"login": "bnjjj", "id": 5719034, "node_id": "MDQ6VXNlcjU3MTkwMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5719034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnjjj", "html_url": "https://github.com/bnjjj", "followers_url": "https://api.github.com/users/bnjjj/followers", "following_url": "https://api.github.com/users/bnjjj/following{/other_user}", "gists_url": "https://api.github.com/users/bnjjj/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnjjj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnjjj/subscriptions", "organizations_url": "https://api.github.com/users/bnjjj/orgs", "repos_url": "https://api.github.com/users/bnjjj/repos", "events_url": "https://api.github.com/users/bnjjj/events{/privacy}", "received_events_url": "https://api.github.com/users/bnjjj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bnjjj", "id": 5719034, "node_id": "MDQ6VXNlcjU3MTkwMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5719034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnjjj", "html_url": "https://github.com/bnjjj", "followers_url": "https://api.github.com/users/bnjjj/followers", "following_url": "https://api.github.com/users/bnjjj/following{/other_user}", "gists_url": "https://api.github.com/users/bnjjj/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnjjj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnjjj/subscriptions", "organizations_url": "https://api.github.com/users/bnjjj/orgs", "repos_url": "https://api.github.com/users/bnjjj/repos", "events_url": "https://api.github.com/users/bnjjj/events{/privacy}", "received_events_url": "https://api.github.com/users/bnjjj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d63abf1d868218613f33dc59968d3671f7f14a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d63abf1d868218613f33dc59968d3671f7f14a8", "html_url": "https://github.com/rust-lang/rust/commit/3d63abf1d868218613f33dc59968d3671f7f14a8"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "715ac8f9740773cda2a0a7142225c6b2e4a1ddf9", "filename": "crates/ide_diagnostics/src/handlers/missing_fields.rs", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/0435463439471a81477ccdc0313f312abb14331e/crates%2Fide_diagnostics%2Fsrc%2Fhandlers%2Fmissing_fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0435463439471a81477ccdc0313f312abb14331e/crates%2Fide_diagnostics%2Fsrc%2Fhandlers%2Fmissing_fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_diagnostics%2Fsrc%2Fhandlers%2Fmissing_fields.rs?ref=0435463439471a81477ccdc0313f312abb14331e", "patch": "@@ -1,6 +1,6 @@\n use either::Either;\n-use hir::{db::AstDatabase, InFile};\n-use ide_db::{assists::Assist, source_change::SourceChange};\n+use hir::{db::AstDatabase, InFile, Type};\n+use ide_db::{assists::Assist, helpers::FamousDefs, source_change::SourceChange};\n use rustc_hash::FxHashMap;\n use stdx::format_to;\n use syntax::{algo, ast::make, AstNode, SyntaxNodePtr};\n@@ -63,17 +63,30 @@ fn fixes(ctx: &DiagnosticsContext<'_>, d: &hir::MissingFields) -> Option<Vec<Ass\n         }\n     });\n     let missing_fields = ctx.sema.record_literal_missing_fields(&field_list_parent);\n+\n+    let generate_default_expr = |ty: &Type| {\n+        let krate = ctx.sema.to_module_def(d.file.original_file(ctx.sema.db))?.krate();\n+        let default_trait = FamousDefs(&ctx.sema, Some(krate)).core_default_Default();\n+\n+        match default_trait {\n+            Some(default_trait) if ty.impls_trait(ctx.sema.db, default_trait, &[]) => {\n+                Some(make::ext::expr_default())\n+            }\n+            _ => Some(make::ext::expr_todo()),\n+        }\n+    };\n+\n     for (f, ty) in missing_fields.iter() {\n         let field_expr = if let Some(local_candidate) = locals.get(&f.name(ctx.sema.db)) {\n             cov_mark::hit!(field_shorthand);\n             let candidate_ty = local_candidate.ty(ctx.sema.db);\n             if ty.could_unify_with(ctx.sema.db, &candidate_ty) {\n                 None\n             } else {\n-                Some(make::ext::expr_todo())\n+                generate_default_expr(ty)\n             }\n         } else {\n-            Some(make::ext::expr_todo())\n+            generate_default_expr(ty)\n         };\n         let field =\n             make::record_expr_field(make::name_ref(&f.name(ctx.sema.db).to_smol_str()), field_expr)"}, {"sha": "1a46b84c966bcf8c30b76fe94fabf2db91fb0ee5", "filename": "crates/syntax/src/ast/make.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0435463439471a81477ccdc0313f312abb14331e/crates%2Fsyntax%2Fsrc%2Fast%2Fmake.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0435463439471a81477ccdc0313f312abb14331e/crates%2Fsyntax%2Fsrc%2Fast%2Fmake.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Fmake.rs?ref=0435463439471a81477ccdc0313f312abb14331e", "patch": "@@ -59,6 +59,9 @@ pub mod ext {\n     pub fn expr_todo() -> ast::Expr {\n         expr_from_text(\"todo!()\")\n     }\n+    pub fn expr_default() -> ast::Expr {\n+        expr_from_text(\"Default::default()\")\n+    }\n     pub fn empty_block_expr() -> ast::BlockExpr {\n         block_expr(None, None)\n     }"}]}