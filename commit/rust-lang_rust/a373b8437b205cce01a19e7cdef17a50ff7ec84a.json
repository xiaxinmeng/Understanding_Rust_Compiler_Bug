{"sha": "a373b8437b205cce01a19e7cdef17a50ff7ec84a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzNzNiODQzN2IyMDVjY2UwMWExOWU3Y2RlZjE3YTUwZmY3ZWM4NGE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-07-27T12:50:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-27T12:50:27Z"}, "message": "Auto merge of #33363 - japaric:target, r=japaric\n\nfix built-in target detection\n\npreviously the logic was accepting wrong triples (like\n`x86_64_unknown-linux-musl`) as valid ones (like `x86_64-unknown-linux-musl`) if\nthey contained an underscore instead of a dash.\n\nfixes #33329\n\n---\n\nr? @brson\n\nI wanted to use a compile-fail test at first. But, you can't pass an extra `--target` flag to `rustc` for those because they already call `rustc --target $HOST` so you get a `error: Option 'target' given more than once.`. The run-make test used here works fine though.", "tree": {"sha": "761825197c8933c7bfc987ab300837d4a33b9f62", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/761825197c8933c7bfc987ab300837d4a33b9f62"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a373b8437b205cce01a19e7cdef17a50ff7ec84a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a373b8437b205cce01a19e7cdef17a50ff7ec84a", "html_url": "https://github.com/rust-lang/rust/commit/a373b8437b205cce01a19e7cdef17a50ff7ec84a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a373b8437b205cce01a19e7cdef17a50ff7ec84a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "422ebd5328e485462c675af9304f3b5b86e5b893", "url": "https://api.github.com/repos/rust-lang/rust/commits/422ebd5328e485462c675af9304f3b5b86e5b893", "html_url": "https://github.com/rust-lang/rust/commit/422ebd5328e485462c675af9304f3b5b86e5b893"}, {"sha": "f438801528fd03a12339c843e6d516ca3526e8e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f438801528fd03a12339c843e6d516ca3526e8e1", "html_url": "https://github.com/rust-lang/rust/commit/f438801528fd03a12339c843e6d516ca3526e8e1"}], "stats": {"total": 40, "additions": 27, "deletions": 13}, "files": [{"sha": "99bc26848025ec0ec030a28776c5b3634226a455", "filename": "src/librustc_back/target/mod.rs", "status": "modified", "additions": 11, "deletions": 13, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/a373b8437b205cce01a19e7cdef17a50ff7ec84a/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a373b8437b205cce01a19e7cdef17a50ff7ec84a/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmod.rs?ref=a373b8437b205cce01a19e7cdef17a50ff7ec84a", "patch": "@@ -70,20 +70,18 @@ macro_rules! supported_targets {\n         /// List of supported targets\n         pub const TARGETS: &'static [&'static str] = &[$($triple),*];\n \n-        // this would use a match if stringify! were allowed in pattern position\n         fn load_specific(target: &str) -> Option<Target> {\n-            let target = target.replace(\"-\", \"_\");\n-            if false { }\n-            $(\n-                else if target == stringify!($module) {\n-                    let mut t = $module::target();\n-                    t.options.is_builtin = true;\n-                    debug!(\"Got builtin target: {:?}\", t);\n-                    return Some(t);\n-                }\n-            )*\n-\n-            None\n+            match target {\n+                $(\n+                    $triple => {\n+                        let mut t = $module::target();\n+                        t.options.is_builtin = true;\n+                        debug!(\"Got builtin target: {:?}\", t);\n+                        Some(t)\n+                    },\n+                )+\n+                _ => None\n+            }\n         }\n     )\n }"}, {"sha": "c53f51d5bf5842567ff1d6e5c00ab3c3d7e83f07", "filename": "src/test/run-make/issue-33329/Makefile", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a373b8437b205cce01a19e7cdef17a50ff7ec84a/src%2Ftest%2Frun-make%2Fissue-33329%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/a373b8437b205cce01a19e7cdef17a50ff7ec84a/src%2Ftest%2Frun-make%2Fissue-33329%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-33329%2FMakefile?ref=a373b8437b205cce01a19e7cdef17a50ff7ec84a", "patch": "@@ -0,0 +1,5 @@\n+-include ../tools.mk\n+\n+all:\n+\t$(RUSTC) --target x86_64_unknown-linux-musl main.rs 2>&1 | \\\n+\t\tgrep \"error: Error loading target specification: Could not find specification for target\""}, {"sha": "e06c0a5ec2a4cf45084f385854e83ec00ac110ff", "filename": "src/test/run-make/issue-33329/main.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a373b8437b205cce01a19e7cdef17a50ff7ec84a/src%2Ftest%2Frun-make%2Fissue-33329%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a373b8437b205cce01a19e7cdef17a50ff7ec84a/src%2Ftest%2Frun-make%2Fissue-33329%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-33329%2Fmain.rs?ref=a373b8437b205cce01a19e7cdef17a50ff7ec84a", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {}"}]}