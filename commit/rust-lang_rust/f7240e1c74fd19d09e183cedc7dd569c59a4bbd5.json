{"sha": "f7240e1c74fd19d09e183cedc7dd569c59a4bbd5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3MjQwZTFjNzRmZDE5ZDA5ZTE4M2NlZGM3ZGQ1NjljNTlhNGJiZDU=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-09-03T20:24:11Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-09-29T16:14:34Z"}, "message": "Improve error display for codeblocks in rustdoc", "tree": {"sha": "59232befc5bb436a310d17a0ddc36127729591e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59232befc5bb436a310d17a0ddc36127729591e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7240e1c74fd19d09e183cedc7dd569c59a4bbd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7240e1c74fd19d09e183cedc7dd569c59a4bbd5", "html_url": "https://github.com/rust-lang/rust/commit/f7240e1c74fd19d09e183cedc7dd569c59a4bbd5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7240e1c74fd19d09e183cedc7dd569c59a4bbd5/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20dc0c50704ba1fc8c56a88ae2bf05ddb3e419bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/20dc0c50704ba1fc8c56a88ae2bf05ddb3e419bc", "html_url": "https://github.com/rust-lang/rust/commit/20dc0c50704ba1fc8c56a88ae2bf05ddb3e419bc"}], "stats": {"total": 62, "additions": 55, "deletions": 7}, "files": [{"sha": "a83f80dcc348838a4a17800390bdcfc51a84b121", "filename": "src/librustdoc/html/highlight.rs", "status": "modified", "additions": 18, "deletions": 7, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/f7240e1c74fd19d09e183cedc7dd569c59a4bbd5/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7240e1c74fd19d09e183cedc7dd569c59a4bbd5/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs?ref=f7240e1c74fd19d09e183cedc7dd569c59a4bbd5", "patch": "@@ -44,9 +44,21 @@ pub fn render_with_highlighting(src: &str, class: Option<&str>,\n     }\n     write_header(class, &mut out).unwrap();\n \n-    let mut classifier = Classifier::new(lexer::StringReader::new(&sess, fm, None),\n-                                         sess.source_map());\n+    let lexer = match lexer::StringReader::new_without_err(&sess, fm, None) {\n+        Ok(l) => l,\n+        Err(_) => {\n+            let first_line = src.lines().next().unwrap_or_else(|| \"\");\n+            let mut err = sess.span_diagnostic\n+                              .struct_warn(&format!(\"Invalid doc comment starting with: `{}`\\n\\\n+                                                     (Ignoring this codeblock)\",\n+                                                    first_line));\n+            err.emit();\n+            return String::new();\n+        }\n+    };\n+    let mut classifier = Classifier::new(lexer, sess.source_map());\n     if classifier.write_source(&mut out).is_err() {\n+        classifier.lexer.emit_fatal_errors();\n         return format!(\"<pre>{}</pre>\", src);\n     }\n \n@@ -162,11 +174,10 @@ impl<'a> Classifier<'a> {\n         match self.lexer.try_next_token() {\n             Ok(tas) => Ok(tas),\n             Err(_) => {\n-                self.lexer.emit_fatal_errors();\n-                self.lexer.sess.span_diagnostic\n-                    .struct_warn(\"Backing out of syntax highlighting\")\n-                    .note(\"You probably did not intend to render this as a rust code-block\")\n-                    .emit();\n+                let mut err = self.lexer.sess.span_diagnostic\n+                                  .struct_warn(\"Backing out of syntax highlighting\");\n+                err.note(\"You probably did not intend to render this as a rust code-block\");\n+                err.emit();\n                 Err(io::Error::new(io::ErrorKind::Other, \"\"))\n             }\n         }"}, {"sha": "7132dc342d259c3f1b2b06833142b380e3c27ab3", "filename": "src/libsyntax/parse/lexer/mod.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f7240e1c74fd19d09e183cedc7dd569c59a4bbd5/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7240e1c74fd19d09e183cedc7dd569c59a4bbd5/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs?ref=f7240e1c74fd19d09e183cedc7dd569c59a4bbd5", "patch": "@@ -238,6 +238,17 @@ impl<'a> StringReader<'a> {\n         sr\n     }\n \n+    pub fn new_without_err(sess: &'a ParseSess,\n+                           source_file: Lrc<syntax_pos::SourceFile>,\n+                           override_span: Option<Span>) -> Result<Self, ()> {\n+        let mut sr = StringReader::new_raw(sess, source_file, override_span);\n+        if sr.advance_token().is_err() {\n+            sr.emit_fatal_errors();\n+            return Err(());\n+        }\n+        Ok(sr)\n+    }\n+\n     pub fn retokenize(sess: &'a ParseSess, mut span: Span) -> Self {\n         let begin = sess.source_map().lookup_byte_offset(span.lo());\n         let end = sess.source_map().lookup_byte_offset(span.hi());"}, {"sha": "8c790d7d07e152c3dbbce7cbc6eb1946c0748759", "filename": "src/test/rustdoc-ui/invalid-syntax.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f7240e1c74fd19d09e183cedc7dd569c59a4bbd5/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7240e1c74fd19d09e183cedc7dd569c59a4bbd5/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.rs?ref=f7240e1c74fd19d09e183cedc7dd569c59a4bbd5", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-pass\n+// compile-flags: --error-format=human\n+\n+/// ```\n+/// \\__________pkt->size___________/          \\_result->size_/ \\__pkt->size__/\n+/// ```\n+pub fn foo() {}"}, {"sha": "0661f0ab00510d280fabb2ec3ab8eadb381d0de5", "filename": "src/test/rustdoc-ui/invalid-syntax.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f7240e1c74fd19d09e183cedc7dd569c59a4bbd5/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7240e1c74fd19d09e183cedc7dd569c59a4bbd5/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.stderr?ref=f7240e1c74fd19d09e183cedc7dd569c59a4bbd5", "patch": "@@ -0,0 +1,9 @@\n+error: unknown start of token: /\n+ --> <stdin>:1:1\n+  |\n+1 | /__________pkt->size___________/          /_result->size_/ /__pkt->size__/\n+  | ^\n+\n+warning: Invalid doc comment starting with: `/__________pkt->size___________/          /_result->size_/ /__pkt->size__/`\n+(Ignoring this codeblock)\n+"}]}