{"sha": "5d75ca5ef4e947d3316e3aef7b5bd4b58028b943", "node_id": "C_kwDOAAsO6NoAKDVkNzVjYTVlZjRlOTQ3ZDMzMTZlM2FlZjdiNWJkNGI1ODAyOGI5NDM", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-08-07T15:33:37Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-08-07T15:51:55Z"}, "message": "Remove unused hashing infra.", "tree": {"sha": "348422de6058b0f28466acb2c7a5b112581c9562", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/348422de6058b0f28466acb2c7a5b112581c9562"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d75ca5ef4e947d3316e3aef7b5bd4b58028b943", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d75ca5ef4e947d3316e3aef7b5bd4b58028b943", "html_url": "https://github.com/rust-lang/rust/commit/5d75ca5ef4e947d3316e3aef7b5bd4b58028b943", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d75ca5ef4e947d3316e3aef7b5bd4b58028b943/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a4cbcf2207cc6ee489e1c3fea9e7d8dfeb396d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a4cbcf2207cc6ee489e1c3fea9e7d8dfeb396d9", "html_url": "https://github.com/rust-lang/rust/commit/8a4cbcf2207cc6ee489e1c3fea9e7d8dfeb396d9"}], "stats": {"total": 35, "additions": 9, "deletions": 26}, "files": [{"sha": "43c70eaa7c7f08148a151e88c3b075741ea41b71", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5d75ca5ef4e947d3316e3aef7b5bd4b58028b943/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d75ca5ef4e947d3316e3aef7b5bd4b58028b943/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=5d75ca5ef4e947d3316e3aef7b5bd4b58028b943", "patch": "@@ -631,14 +631,12 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n     ) -> (Fingerprint, Fingerprint) {\n         self.tcx.with_stable_hashing_context(|mut hcx| {\n             let mut stable_hasher = StableHasher::new();\n-            hcx.with_hir_bodies(true, node.def_id(), bodies, |hcx| {\n+            hcx.with_hir_bodies(node.def_id(), bodies, |hcx| {\n                 node.hash_stable(hcx, &mut stable_hasher)\n             });\n             let hash_including_bodies = stable_hasher.finish();\n             let mut stable_hasher = StableHasher::new();\n-            hcx.with_hir_bodies(false, node.def_id(), bodies, |hcx| {\n-                node.hash_stable(hcx, &mut stable_hasher)\n-            });\n+            hcx.without_hir_bodies(|hcx| node.hash_stable(hcx, &mut stable_hasher));\n             let hash_without_bodies = stable_hasher.finish();\n             (hash_including_bodies, hash_without_bodies)\n         })"}, {"sha": "a09b8ca30e138068118f6b086164379448744c1e", "filename": "compiler/rustc_query_system/src/ich/hcx.rs", "status": "modified", "additions": 5, "deletions": 20, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/5d75ca5ef4e947d3316e3aef7b5bd4b58028b943/compiler%2Frustc_query_system%2Fsrc%2Fich%2Fhcx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d75ca5ef4e947d3316e3aef7b5bd4b58028b943/compiler%2Frustc_query_system%2Fsrc%2Fich%2Fhcx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fich%2Fhcx.rs?ref=5d75ca5ef4e947d3316e3aef7b5bd4b58028b943", "patch": "@@ -40,11 +40,8 @@ pub struct StableHashingContext<'a> {\n #[derive(Clone, Copy)]\n pub(super) enum BodyResolver<'tcx> {\n     Forbidden,\n-    Traverse {\n-        hash_bodies: bool,\n-        owner: LocalDefId,\n-        bodies: &'tcx SortedMap<hir::ItemLocalId, &'tcx hir::Body<'tcx>>,\n-    },\n+    Ignore,\n+    Traverse { owner: LocalDefId, bodies: &'tcx SortedMap<hir::ItemLocalId, &'tcx hir::Body<'tcx>> },\n }\n \n impl<'a> StableHashingContext<'a> {\n@@ -98,32 +95,20 @@ impl<'a> StableHashingContext<'a> {\n         Self::new_with_or_without_spans(sess, definitions, cstore, source_span, always_ignore_spans)\n     }\n \n-    /// Allow hashing\n     #[inline]\n-    pub fn while_hashing_hir_bodies(&mut self, hb: bool, f: impl FnOnce(&mut Self)) {\n-        let prev = match &mut self.body_resolver {\n-            BodyResolver::Forbidden => panic!(\"Hashing HIR bodies is forbidden.\"),\n-            BodyResolver::Traverse { ref mut hash_bodies, .. } => {\n-                std::mem::replace(hash_bodies, hb)\n-            }\n-        };\n-        f(self);\n-        match &mut self.body_resolver {\n-            BodyResolver::Forbidden => unreachable!(),\n-            BodyResolver::Traverse { ref mut hash_bodies, .. } => *hash_bodies = prev,\n-        }\n+    pub fn without_hir_bodies(&mut self, f: impl FnOnce(&mut StableHashingContext<'_>)) {\n+        f(&mut StableHashingContext { body_resolver: BodyResolver::Ignore, ..self.clone() });\n     }\n \n     #[inline]\n     pub fn with_hir_bodies(\n         &mut self,\n-        hash_bodies: bool,\n         owner: LocalDefId,\n         bodies: &SortedMap<hir::ItemLocalId, &hir::Body<'_>>,\n         f: impl FnOnce(&mut StableHashingContext<'_>),\n     ) {\n         f(&mut StableHashingContext {\n-            body_resolver: BodyResolver::Traverse { hash_bodies, owner, bodies },\n+            body_resolver: BodyResolver::Traverse { owner, bodies },\n             ..self.clone()\n         });\n     }"}, {"sha": "aa008d404c3eab9b21b9d330973036b422103ddb", "filename": "compiler/rustc_query_system/src/ich/impls_hir.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5d75ca5ef4e947d3316e3aef7b5bd4b58028b943/compiler%2Frustc_query_system%2Fsrc%2Fich%2Fimpls_hir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d75ca5ef4e947d3316e3aef7b5bd4b58028b943/compiler%2Frustc_query_system%2Fsrc%2Fich%2Fimpls_hir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fich%2Fimpls_hir.rs?ref=5d75ca5ef4e947d3316e3aef7b5bd4b58028b943", "patch": "@@ -12,8 +12,8 @@ impl<'ctx> rustc_hir::HashStableContext for StableHashingContext<'ctx> {\n         let hcx = self;\n         match hcx.body_resolver {\n             BodyResolver::Forbidden => panic!(\"Hashing HIR bodies is forbidden.\"),\n-            BodyResolver::Traverse { hash_bodies: false, .. } => {}\n-            BodyResolver::Traverse { hash_bodies: true, owner, bodies } => {\n+            BodyResolver::Ignore => {}\n+            BodyResolver::Traverse { owner, bodies } => {\n                 assert_eq!(id.hir_id.owner, owner);\n                 bodies[&id.hir_id.local_id].hash_stable(hcx, hasher);\n             }"}]}