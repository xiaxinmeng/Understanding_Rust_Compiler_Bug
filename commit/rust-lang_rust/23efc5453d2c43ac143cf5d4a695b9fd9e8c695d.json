{"sha": "23efc5453d2c43ac143cf5d4a695b9fd9e8c695d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzZWZjNTQ1M2QyYzQzYWMxNDNjZjVkNGE2OTViOWZkOWU4YzY5NWQ=", "commit": {"author": {"name": "aclarry", "email": "admclarry@gmail.com", "date": "2016-09-16T04:10:32Z"}, "committer": {"name": "aclarry", "email": "admclarry@gmail.com", "date": "2016-09-20T20:59:48Z"}, "message": "Update E0560 to include label", "tree": {"sha": "fb56780cfe41fec9344eb033745918f32c13bdc1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb56780cfe41fec9344eb033745918f32c13bdc1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23efc5453d2c43ac143cf5d4a695b9fd9e8c695d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23efc5453d2c43ac143cf5d4a695b9fd9e8c695d", "html_url": "https://github.com/rust-lang/rust/commit/23efc5453d2c43ac143cf5d4a695b9fd9e8c695d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23efc5453d2c43ac143cf5d4a695b9fd9e8c695d/comments", "author": {"login": "aclarry", "id": 9892079, "node_id": "MDQ6VXNlcjk4OTIwNzk=", "avatar_url": "https://avatars.githubusercontent.com/u/9892079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aclarry", "html_url": "https://github.com/aclarry", "followers_url": "https://api.github.com/users/aclarry/followers", "following_url": "https://api.github.com/users/aclarry/following{/other_user}", "gists_url": "https://api.github.com/users/aclarry/gists{/gist_id}", "starred_url": "https://api.github.com/users/aclarry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aclarry/subscriptions", "organizations_url": "https://api.github.com/users/aclarry/orgs", "repos_url": "https://api.github.com/users/aclarry/repos", "events_url": "https://api.github.com/users/aclarry/events{/privacy}", "received_events_url": "https://api.github.com/users/aclarry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aclarry", "id": 9892079, "node_id": "MDQ6VXNlcjk4OTIwNzk=", "avatar_url": "https://avatars.githubusercontent.com/u/9892079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aclarry", "html_url": "https://github.com/aclarry", "followers_url": "https://api.github.com/users/aclarry/followers", "following_url": "https://api.github.com/users/aclarry/following{/other_user}", "gists_url": "https://api.github.com/users/aclarry/gists{/gist_id}", "starred_url": "https://api.github.com/users/aclarry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aclarry/subscriptions", "organizations_url": "https://api.github.com/users/aclarry/orgs", "repos_url": "https://api.github.com/users/aclarry/repos", "events_url": "https://api.github.com/users/aclarry/events{/privacy}", "received_events_url": "https://api.github.com/users/aclarry/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af67f0b389abca6851bbed78f25046a8c783d6b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/af67f0b389abca6851bbed78f25046a8c783d6b3", "html_url": "https://github.com/rust-lang/rust/commit/af67f0b389abca6851bbed78f25046a8c783d6b3"}], "stats": {"total": 48, "additions": 35, "deletions": 13}, "files": [{"sha": "7c9467bc5fed6faaa037d3cf2856fe419d9e962a", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/23efc5453d2c43ac143cf5d4a695b9fd9e8c695d/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23efc5453d2c43ac143cf5d4a695b9fd9e8c695d/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=23efc5453d2c43ac143cf5d4a695b9fd9e8c695d", "patch": "@@ -3094,7 +3094,18 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n         if let Some(field_name) = Self::suggest_field_name(variant,\n                                                            &field.name,\n                                                            skip_fields.collect()) {\n-            err.span_label(field.name.span,&format!(\"did you mean `{}`?\",field_name));\n+            err.span_label(field.name.span,\n+                           &format!(\"field does not exist - did you mean `{}`?\", field_name));\n+        } else {\n+            match ty.sty {\n+                ty::TyAdt(adt, ..) if adt.is_enum() => {\n+                    err.span_label(field.name.span, &format!(\"`{}::{}` does not have this field\",\n+                                                             ty, variant.name.as_str()));\n+                }\n+                _ => {\n+                    err.span_label(field.name.span, &format!(\"`{}` does not have this field\", ty));\n+                }\n+            }\n         };\n         err.emit();\n     }"}, {"sha": "fa6c885843e4c1768e5991873a76d02df55edf2e", "filename": "src/test/compile-fail/E0559.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/23efc5453d2c43ac143cf5d4a695b9fd9e8c695d/src%2Ftest%2Fcompile-fail%2FE0559.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23efc5453d2c43ac143cf5d4a695b9fd9e8c695d/src%2Ftest%2Fcompile-fail%2FE0559.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0559.rs?ref=23efc5453d2c43ac143cf5d4a695b9fd9e8c695d", "patch": "@@ -15,5 +15,5 @@ enum Field {\n fn main() {\n     let s = Field::Fool { joke: 0 };\n     //~^ ERROR E0559\n-    //~| NOTE did you mean `x`?\n+    //~| NOTE field does not exist - did you mean `x`?\n }"}, {"sha": "c6326a0f97740d954318ae126b3b9b4329674618", "filename": "src/test/compile-fail/E0560.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/23efc5453d2c43ac143cf5d4a695b9fd9e8c695d/src%2Ftest%2Fcompile-fail%2FE0560.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23efc5453d2c43ac143cf5d4a695b9fd9e8c695d/src%2Ftest%2Fcompile-fail%2FE0560.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0560.rs?ref=23efc5453d2c43ac143cf5d4a695b9fd9e8c695d", "patch": "@@ -13,5 +13,7 @@ struct Simba {\n }\n \n fn main() {\n-    let s = Simba { mother: 1, father: 0 }; //~ ERROR E0560\n+    let s = Simba { mother: 1, father: 0 };\n+    //~^ ERROR E0560\n+    //~| NOTE `Simba` does not have this field\n }"}, {"sha": "d7b2f2b3f991ec4760d110568c99057b3da26d65", "filename": "src/test/compile-fail/issue-19922.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/23efc5453d2c43ac143cf5d4a695b9fd9e8c695d/src%2Ftest%2Fcompile-fail%2Fissue-19922.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23efc5453d2c43ac143cf5d4a695b9fd9e8c695d/src%2Ftest%2Fcompile-fail%2Fissue-19922.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-19922.rs?ref=23efc5453d2c43ac143cf5d4a695b9fd9e8c695d", "patch": "@@ -15,4 +15,5 @@ enum Homura {\n fn main() {\n     let homura = Homura::Akemi { kaname: () };\n     //~^ ERROR variant `Homura::Akemi` has no field named `kaname`\n+    //~| NOTE field does not exist - did you mean `madoka`?\n }"}, {"sha": "a67707257d2f2ac44a1bd757c1142f07839a70b0", "filename": "src/test/compile-fail/numeric-fields.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/23efc5453d2c43ac143cf5d4a695b9fd9e8c695d/src%2Ftest%2Fcompile-fail%2Fnumeric-fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23efc5453d2c43ac143cf5d4a695b9fd9e8c695d/src%2Ftest%2Fcompile-fail%2Fnumeric-fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnumeric-fields.rs?ref=23efc5453d2c43ac143cf5d4a695b9fd9e8c695d", "patch": "@@ -13,8 +13,12 @@\n struct S(u8, u16);\n \n fn main() {\n-    let s = S{0b1: 10, 0: 11}; //~ ERROR struct `S` has no field named `0b1`\n+    let s = S{0b1: 10, 0: 11};\n+    //~^ ERROR struct `S` has no field named `0b1`\n+    //~| NOTE field does not exist - did you mean `1`?\n     match s {\n-        S{0: a, 0x1: b, ..} => {} //~ ERROR does not have a field named `0x1`\n+        S{0: a, 0x1: b, ..} => {}\n+        //~^ ERROR does not have a field named `0x1`\n+        //~| NOTE struct `S::{{constructor}}` does not have field `0x1`\n     }\n }"}, {"sha": "de78503d9044f55666f432c94914e746255e6077", "filename": "src/test/compile-fail/struct-fields-hints-no-dupe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/23efc5453d2c43ac143cf5d4a695b9fd9e8c695d/src%2Ftest%2Fcompile-fail%2Fstruct-fields-hints-no-dupe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23efc5453d2c43ac143cf5d4a695b9fd9e8c695d/src%2Ftest%2Fcompile-fail%2Fstruct-fields-hints-no-dupe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstruct-fields-hints-no-dupe.rs?ref=23efc5453d2c43ac143cf5d4a695b9fd9e8c695d", "patch": "@@ -19,7 +19,7 @@ fn main() {\n         foo : 5,\n         bar : 42,\n         //~^ ERROR struct `A` has no field named `bar`\n-        //~| NOTE did you mean `barr`?\n+        //~| NOTE field does not exist - did you mean `barr`?\n         car : 9,\n     };\n }"}, {"sha": "628f03f3272cae15d30f7e5719c14a4cc7aa5c81", "filename": "src/test/compile-fail/struct-fields-hints.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/23efc5453d2c43ac143cf5d4a695b9fd9e8c695d/src%2Ftest%2Fcompile-fail%2Fstruct-fields-hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23efc5453d2c43ac143cf5d4a695b9fd9e8c695d/src%2Ftest%2Fcompile-fail%2Fstruct-fields-hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstruct-fields-hints.rs?ref=23efc5453d2c43ac143cf5d4a695b9fd9e8c695d", "patch": "@@ -19,6 +19,6 @@ fn main() {\n         foo : 5,\n         bar : 42,\n         //~^ ERROR struct `A` has no field named `bar`\n-        //~| NOTE did you mean `car`?\n+        //~| NOTE field does not exist - did you mean `car`?\n     };\n }"}, {"sha": "0848ada731a651bcd208471fc8ea985b6de5b2c1", "filename": "src/test/compile-fail/struct-fields-too-many.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/23efc5453d2c43ac143cf5d4a695b9fd9e8c695d/src%2Ftest%2Fcompile-fail%2Fstruct-fields-too-many.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23efc5453d2c43ac143cf5d4a695b9fd9e8c695d/src%2Ftest%2Fcompile-fail%2Fstruct-fields-too-many.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstruct-fields-too-many.rs?ref=23efc5453d2c43ac143cf5d4a695b9fd9e8c695d", "patch": "@@ -15,6 +15,8 @@ struct BuildData {\n fn main() {\n     let foo = BuildData {\n         foo: 0,\n-        bar: 0 //~ ERROR struct `BuildData` has no field named `bar`\n+        bar: 0\n+        //~^ ERROR struct `BuildData` has no field named `bar`\n+        //~| NOTE `BuildData` does not have this field\n     };\n }"}, {"sha": "3672e0e90c2a2d8888bed10428e3dff2e3049417", "filename": "src/test/compile-fail/suggest-private-fields.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/23efc5453d2c43ac143cf5d4a695b9fd9e8c695d/src%2Ftest%2Fcompile-fail%2Fsuggest-private-fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23efc5453d2c43ac143cf5d4a695b9fd9e8c695d/src%2Ftest%2Fcompile-fail%2Fsuggest-private-fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsuggest-private-fields.rs?ref=23efc5453d2c43ac143cf5d4a695b9fd9e8c695d", "patch": "@@ -24,18 +24,18 @@ fn main () {\n     let k = B {\n         aa: 20,\n         //~^ ERROR struct `xc::B` has no field named `aa`\n-        //~| NOTE did you mean `a`?\n+        //~| NOTE field does not exist - did you mean `a`?\n         bb: 20,\n         //~^ ERROR struct `xc::B` has no field named `bb`\n-        //~| NOTE did you mean `a`?\n+        //~| NOTE field does not exist - did you mean `a`?\n     };\n     // local crate struct\n     let l = A {\n         aa: 20,\n         //~^ ERROR struct `A` has no field named `aa`\n-        //~| NOTE did you mean `a`?\n+        //~| NOTE field does not exist - did you mean `a`?\n         bb: 20,\n         //~^ ERROR struct `A` has no field named `bb`\n-        //~| NOTE did you mean `b`?\n+        //~| NOTE field does not exist - did you mean `b`?\n     };\n }"}, {"sha": "3ee95c2ef4258b2e7834d506646da569f5f5292e", "filename": "src/test/compile-fail/union/union-fields.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/23efc5453d2c43ac143cf5d4a695b9fd9e8c695d/src%2Ftest%2Fcompile-fail%2Funion%2Funion-fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23efc5453d2c43ac143cf5d4a695b9fd9e8c695d/src%2Ftest%2Fcompile-fail%2Funion%2Funion-fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funion%2Funion-fields.rs?ref=23efc5453d2c43ac143cf5d4a695b9fd9e8c695d", "patch": "@@ -21,6 +21,7 @@ fn main() {\n     let u = U { a: 0, b: 1 }; //~ ERROR union expressions should have exactly one field\n     let u = U { a: 0, b: 1, c: 2 }; //~ ERROR union expressions should have exactly one field\n                                     //~^ ERROR union `U` has no field named `c`\n+                                    //~| NOTE `U` does not have this field\n     let u = U { ..u }; //~ ERROR union expressions should have exactly one field\n                        //~^ ERROR functional record update syntax requires a struct\n \n@@ -29,6 +30,7 @@ fn main() {\n     let U { a, b } = u; //~ ERROR union patterns should have exactly one field\n     let U { a, b, c } = u; //~ ERROR union patterns should have exactly one field\n                            //~^ ERROR union `U` does not have a field named `c`\n+                           //~| NOTE union `U` does not have field `c`\n     let U { .. } = u; //~ ERROR union patterns should have exactly one field\n                       //~^ ERROR `..` cannot be used in union patterns\n     let U { a, .. } = u; //~ ERROR `..` cannot be used in union patterns"}, {"sha": "ce421428d883be4e11ae879ff0b76376d61338a4", "filename": "src/test/compile-fail/union/union-suggest-field.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/23efc5453d2c43ac143cf5d4a695b9fd9e8c695d/src%2Ftest%2Fcompile-fail%2Funion%2Funion-suggest-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23efc5453d2c43ac143cf5d4a695b9fd9e8c695d/src%2Ftest%2Fcompile-fail%2Funion%2Funion-suggest-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funion%2Funion-suggest-field.rs?ref=23efc5453d2c43ac143cf5d4a695b9fd9e8c695d", "patch": "@@ -21,7 +21,7 @@ impl U {\n fn main() {\n     let u = U { principle: 0 };\n     //~^ ERROR union `U` has no field named `principle`\n-    //~| NOTE did you mean `principal`?\n+    //~| NOTE field does not exist - did you mean `principal`?\n     let w = u.principial; //~ ERROR attempted access of field `principial` on type `U`\n                           //~^ HELP did you mean `principal`?\n "}]}