{"sha": "a1909b7b07105a9237883634f33b723bfab43dc1", "node_id": "C_kwDOAAsO6NoAKGExOTA5YjdiMDcxMDVhOTIzNzg4MzYzNGYzM2I3MjNiZmFiNDNkYzE", "commit": {"author": {"name": "Albert Larsan", "email": "74931857+albertlarsan68@users.noreply.github.com", "date": "2022-11-11T11:17:32Z"}, "committer": {"name": "Albert Larsan", "email": "74931857+albertlarsan68@users.noreply.github.com", "date": "2022-11-11T11:17:32Z"}, "message": "Try another way", "tree": {"sha": "7e84d1f5c3ed848e053fdcc633d3986c903346e2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e84d1f5c3ed848e053fdcc633d3986c903346e2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1909b7b07105a9237883634f33b723bfab43dc1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEECtuvMkQcAKCG3qpZknCbiLuPE+oFAmNuL78ACgkQknCbiLuP\nE+pY4xAAhKDccJsHOm3xkDBt9ARJyKfq6VB1Yc9wYFBhHeTrDbgboZSaHOKHPlrb\nVhjGhSBN9REY8Fe2yM0TARN5033eh/hQizR6fzGukHgqsaLCj3hBlJrGctu/b8Pc\n6P6FYN/3X91EDG+EoTCLPbYekzFn5ZBMuaqspPESxJ9gn0vExP2JuvflXe+bkkB8\ndo7V6Sf+nNoIiEzLBJZ/5SQpWwV47NSxtvBkE9/AEFYsKDwtGoE9fi0jdqBB8Txr\nhtusblUiQyZOH4mhBVahHPXuKuKcYZrotxaBYUd6zGoZ86R90yUQXM0juTHIUzBG\n/sGtNMx0SG3ibNwd52KkrXFpvrPQM/Z4hjayOhoC/SKr+N8cPCpZghyeNlUy1Dwn\nX3vJbjdZA4Q2BcmIM2tVsQZr+rAXK/sT8g22AWROHa/g2qZMO+8IFUq7f6TleiwL\nkVPu/F1foxvzoLjxK9Ci5WTJ/l9iGGxvBITTa8snlGLo9Ml+sKSF2u5D6FNFr5ml\nJCW/puhgGKjjSH9Z0b5ab808D3eZls3s4PJKHWDO1/lse1jaBm5hrvBu9F7GnME9\n8Tlb7vBSFW5BLY6Div7x/LZwMohsvAOgXCcPvKxnWsKcHCXC6kiRh88Qt6Uyeb/j\nYOdE8NWlSg7neQyGeFKL7D3qjJ5IEJGgzkayVOXrhvG8nC8KazM=\n=YDpi\n-----END PGP SIGNATURE-----", "payload": "tree 7e84d1f5c3ed848e053fdcc633d3986c903346e2\nparent fb98796892db43ed5db3d38edea5146a4cadcacc\nauthor Albert Larsan <74931857+albertlarsan68@users.noreply.github.com> 1668165452 +0100\ncommitter Albert Larsan <74931857+albertlarsan68@users.noreply.github.com> 1668165452 +0100\n\nTry another way\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1909b7b07105a9237883634f33b723bfab43dc1", "html_url": "https://github.com/rust-lang/rust/commit/a1909b7b07105a9237883634f33b723bfab43dc1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1909b7b07105a9237883634f33b723bfab43dc1/comments", "author": {"login": "albertlarsan68", "id": 74931857, "node_id": "MDQ6VXNlcjc0OTMxODU3", "avatar_url": "https://avatars.githubusercontent.com/u/74931857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albertlarsan68", "html_url": "https://github.com/albertlarsan68", "followers_url": "https://api.github.com/users/albertlarsan68/followers", "following_url": "https://api.github.com/users/albertlarsan68/following{/other_user}", "gists_url": "https://api.github.com/users/albertlarsan68/gists{/gist_id}", "starred_url": "https://api.github.com/users/albertlarsan68/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albertlarsan68/subscriptions", "organizations_url": "https://api.github.com/users/albertlarsan68/orgs", "repos_url": "https://api.github.com/users/albertlarsan68/repos", "events_url": "https://api.github.com/users/albertlarsan68/events{/privacy}", "received_events_url": "https://api.github.com/users/albertlarsan68/received_events", "type": "User", "site_admin": false}, "committer": {"login": "albertlarsan68", "id": 74931857, "node_id": "MDQ6VXNlcjc0OTMxODU3", "avatar_url": "https://avatars.githubusercontent.com/u/74931857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albertlarsan68", "html_url": "https://github.com/albertlarsan68", "followers_url": "https://api.github.com/users/albertlarsan68/followers", "following_url": "https://api.github.com/users/albertlarsan68/following{/other_user}", "gists_url": "https://api.github.com/users/albertlarsan68/gists{/gist_id}", "starred_url": "https://api.github.com/users/albertlarsan68/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albertlarsan68/subscriptions", "organizations_url": "https://api.github.com/users/albertlarsan68/orgs", "repos_url": "https://api.github.com/users/albertlarsan68/repos", "events_url": "https://api.github.com/users/albertlarsan68/events{/privacy}", "received_events_url": "https://api.github.com/users/albertlarsan68/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb98796892db43ed5db3d38edea5146a4cadcacc", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb98796892db43ed5db3d38edea5146a4cadcacc", "html_url": "https://github.com/rust-lang/rust/commit/fb98796892db43ed5db3d38edea5146a4cadcacc"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "4ae1f3c37ebd2090346d8b642110c3311585d18c", "filename": "library/core/src/num/int_macros.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a1909b7b07105a9237883634f33b723bfab43dc1/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1909b7b07105a9237883634f33b723bfab43dc1/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs?ref=a1909b7b07105a9237883634f33b723bfab43dc1", "patch": "@@ -108,8 +108,7 @@ macro_rules! int_impl {\n         /// Returns the number of leading zeros in the binary representation of `self`.\n         ///\n         /// Depending on what you're doing with the value, you might also be interested in the\n-        #[doc = concat!(\"[`\", stringify!($SelfTy), \"::ilog2()`]\")]\n-        /// function which returns a consistent number, even if the type widens.\n+        /// [`ilog2`] function which returns a consistent number, even if the type widens.\n         ///\n         /// # Examples\n         ///\n@@ -120,6 +119,7 @@ macro_rules! int_impl {\n         ///\n         /// assert_eq!(n.leading_zeros(), 0);\n         /// ```\n+        #[doc = concat!(\"[`ilog2`]: \", stringify!($SelfT), \"::ilog2\")]\n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n         #[rustc_const_stable(feature = \"const_int_methods\", since = \"1.32.0\")]\n         #[must_use = \"this returns the result of the operation, \\"}, {"sha": "cd60e09d8809a49fa5572ad2345982770a404786", "filename": "library/core/src/num/uint_macros.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a1909b7b07105a9237883634f33b723bfab43dc1/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1909b7b07105a9237883634f33b723bfab43dc1/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs?ref=a1909b7b07105a9237883634f33b723bfab43dc1", "patch": "@@ -110,8 +110,7 @@ macro_rules! uint_impl {\n         /// Returns the number of leading zeros in the binary representation of `self`.\n         ///\n         /// Depending on what you're doing with the value, you might also be interested in the\n-        #[doc = concat!(\"[`\", stringify!($SelfTy), \"::ilog2()`]\")]\n-        /// function which returns a consistent number, even if the type widens.\n+        /// [`ilog2`] function which returns a consistent number, even if the type widens.\n         ///\n         /// # Examples\n         ///\n@@ -122,6 +121,7 @@ macro_rules! uint_impl {\n         ///\n         /// assert_eq!(n.leading_zeros(), 2);\n         /// ```\n+        #[doc = concat!(\"[`ilog2`]: \", stringify!($SelfT), \"::ilog2\")]\n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n         #[rustc_const_stable(feature = \"const_math\", since = \"1.32.0\")]\n         #[must_use = \"this returns the result of the operation, \\"}, {"sha": "be7de3ebaf5712979fc6976b8a2edd4b1693d8e4", "filename": "src/etc/pre-push.sh", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a1909b7b07105a9237883634f33b723bfab43dc1/src%2Fetc%2Fpre-push.sh", "raw_url": "https://github.com/rust-lang/rust/raw/a1909b7b07105a9237883634f33b723bfab43dc1/src%2Fetc%2Fpre-push.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fpre-push.sh?ref=a1909b7b07105a9237883634f33b723bfab43dc1", "patch": "@@ -12,9 +12,11 @@ unset GIT_DIR\n ROOT_DIR=\"$(git rev-parse --show-toplevel)\"\n COMMAND=\"$ROOT_DIR/x.py test tidy\"\n \n-\n-COMMAND=\"python3.10 $COMMAND\"\n-\n+if [[ \"$OSTYPE\" == \"msys\" || \"$OSTYPE\" == \"win32\" ]]; then\n+  COMMAND=\"python $COMMAND\"\n+elif ! command -v python &> /dev/null; then\n+  COMMAND=\"python3 $COMMAND\"\n+fi\n \n echo \"Running pre-push script '$COMMAND'\"\n "}]}