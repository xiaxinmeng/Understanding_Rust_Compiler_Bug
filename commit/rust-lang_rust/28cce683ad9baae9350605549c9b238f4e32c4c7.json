{"sha": "28cce683ad9baae9350605549c9b238f4e32c4c7", "node_id": "C_kwDOAAsO6NoAKDI4Y2NlNjgzYWQ5YmFhZTkzNTA2MDU1NDljOWIyMzhmNGUzMmM0Yzc", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-07-17T04:08:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-17T04:08:51Z"}, "message": "Rollup merge of #99302 - yaahc:gma-tracking-issue, r=joshtriplett\n\nadd tracking issue to generic member access APIs\n\nMissed as part of https://github.com/rust-lang/rust/pull/98072", "tree": {"sha": "a1e2489c2d25d5387399df92a21faad7ff32a4cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1e2489c2d25d5387399df92a21faad7ff32a4cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28cce683ad9baae9350605549c9b238f4e32c4c7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi04tTCRBK7hj4Ov3rIwAAFqQIAK/ORyOM/Oj3lHV0UVK8O4+1\nRgn6vtRxF2kCR1f5Wpl9xpzo8YDRWmrcL6I+/CFKAzEcdv0IUTV0TMgsj4ttD4Vy\nyWPfkwDaySnKJz9al/swdLjMcEsTtFxL2Y8fe66cQnJrmz8MIQh6k/Y4cO52YofT\nzouWIQw1Dx38u6pNgIK/8IIZcjRB+1uYMJLcN+I9vu1jwI71Fh5M7atA9eb9ShaK\n32sFqIa/kujdPKonak5qzwSt0vhMYz83PxCwqZupGBWFTTT5nqHdvqnbxlOCITuI\nZGV+QvyG506istG+fbghW9hbqGX8w0NBjIFZhYuFTZCjMIqVcsKAGaDgJZRURKE=\n=6688\n-----END PGP SIGNATURE-----\n", "payload": "tree a1e2489c2d25d5387399df92a21faad7ff32a4cd\nparent f49d2671365f1b9d66815c414d498fcff76fda82\nparent a9d2ed2ab131ddbd218d32b396189bcd8e480e39\nauthor Yuki Okushi <jtitor@2k36.org> 1658030931 +0900\ncommitter GitHub <noreply@github.com> 1658030931 +0900\n\nRollup merge of #99302 - yaahc:gma-tracking-issue, r=joshtriplett\n\nadd tracking issue to generic member access APIs\n\nMissed as part of https://github.com/rust-lang/rust/pull/98072\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28cce683ad9baae9350605549c9b238f4e32c4c7", "html_url": "https://github.com/rust-lang/rust/commit/28cce683ad9baae9350605549c9b238f4e32c4c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28cce683ad9baae9350605549c9b238f4e32c4c7/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f49d2671365f1b9d66815c414d498fcff76fda82", "url": "https://api.github.com/repos/rust-lang/rust/commits/f49d2671365f1b9d66815c414d498fcff76fda82", "html_url": "https://github.com/rust-lang/rust/commit/f49d2671365f1b9d66815c414d498fcff76fda82"}, {"sha": "a9d2ed2ab131ddbd218d32b396189bcd8e480e39", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9d2ed2ab131ddbd218d32b396189bcd8e480e39", "html_url": "https://github.com/rust-lang/rust/commit/a9d2ed2ab131ddbd218d32b396189bcd8e480e39"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "ff7b70c328daf6b62e29e7b3b1aa5b34a4c3ddb2", "filename": "library/std/src/error.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/28cce683ad9baae9350605549c9b238f4e32c4c7/library%2Fstd%2Fsrc%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28cce683ad9baae9350605549c9b238f4e32c4c7/library%2Fstd%2Fsrc%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ferror.rs?ref=28cce683ad9baae9350605549c9b238f4e32c4c7", "patch": "@@ -364,12 +364,12 @@ pub trait Error: Debug + Display {\n     ///     assert!(core::ptr::eq(&error.backtrace, backtrace_ref));\n     /// }\n     /// ```\n-    #[unstable(feature = \"error_generic_member_access\", issue = \"none\")]\n+    #[unstable(feature = \"error_generic_member_access\", issue = \"99301\")]\n     #[allow(unused_variables)]\n     fn provide<'a>(&'a self, req: &mut Demand<'a>) {}\n }\n \n-#[unstable(feature = \"error_generic_member_access\", issue = \"none\")]\n+#[unstable(feature = \"error_generic_member_access\", issue = \"99301\")]\n impl Provider for dyn Error + 'static {\n     fn provide<'a>(&'a self, req: &mut Demand<'a>) {\n         self.provide(req)\n@@ -912,13 +912,13 @@ impl dyn Error + 'static {\n     }\n \n     /// Request a reference of type `T` as context about this error.\n-    #[unstable(feature = \"error_generic_member_access\", issue = \"none\")]\n+    #[unstable(feature = \"error_generic_member_access\", issue = \"99301\")]\n     pub fn request_ref<T: ?Sized + 'static>(&self) -> Option<&T> {\n         core::any::request_ref(self)\n     }\n \n     /// Request a value of type `T` as context about this error.\n-    #[unstable(feature = \"error_generic_member_access\", issue = \"none\")]\n+    #[unstable(feature = \"error_generic_member_access\", issue = \"99301\")]\n     pub fn request_value<T: 'static>(&self) -> Option<T> {\n         core::any::request_value(self)\n     }\n@@ -947,13 +947,13 @@ impl dyn Error + 'static + Send {\n     }\n \n     /// Request a reference of type `T` as context about this error.\n-    #[unstable(feature = \"error_generic_member_access\", issue = \"none\")]\n+    #[unstable(feature = \"error_generic_member_access\", issue = \"99301\")]\n     pub fn request_ref<T: ?Sized + 'static>(&self) -> Option<&T> {\n         <dyn Error + 'static>::request_ref(self)\n     }\n \n     /// Request a value of type `T` as context about this error.\n-    #[unstable(feature = \"error_generic_member_access\", issue = \"none\")]\n+    #[unstable(feature = \"error_generic_member_access\", issue = \"99301\")]\n     pub fn request_value<T: 'static>(&self) -> Option<T> {\n         <dyn Error + 'static>::request_value(self)\n     }\n@@ -982,13 +982,13 @@ impl dyn Error + 'static + Send + Sync {\n     }\n \n     /// Request a reference of type `T` as context about this error.\n-    #[unstable(feature = \"error_generic_member_access\", issue = \"none\")]\n+    #[unstable(feature = \"error_generic_member_access\", issue = \"99301\")]\n     pub fn request_ref<T: ?Sized + 'static>(&self) -> Option<&T> {\n         <dyn Error + 'static>::request_ref(self)\n     }\n \n     /// Request a value of type `T` as context about this error.\n-    #[unstable(feature = \"error_generic_member_access\", issue = \"none\")]\n+    #[unstable(feature = \"error_generic_member_access\", issue = \"99301\")]\n     pub fn request_value<T: 'static>(&self) -> Option<T> {\n         <dyn Error + 'static>::request_value(self)\n     }"}]}