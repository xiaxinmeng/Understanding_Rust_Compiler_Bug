{"sha": "cb2be32dbd518badcecb5c43cfc30e3db857e5ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiMmJlMzJkYmQ1MThiYWRjZWNiNWM0M2NmYzMwZTNkYjg1N2U1ZWY=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-09-03T11:30:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-03T11:30:46Z"}, "message": "Rollup merge of #88202 - azdavis:master, r=jyn514\n\nAdd an example for deriving PartialOrd on enums\n\nFor some reason, I always forget which variants are smaller and which\nare larger when you derive PartialOrd on an enum. And the wording in the\ncurrent docs is not entirely clear to me.\n\nSo, I often end up making a small enum, deriving PartialOrd on it, and\nthen writing a `#[test]` with an assert that the top one is smaller than\nthe bottom one (or the other way around) to figure out which way the\nderiving goes.\n\nSo then I figured, it would be great if the standard library docs just\nhad that example, so if I keep forgetting, at least I can figure it out\nquickly by looking at std's docs.", "tree": {"sha": "2b0f933dded6001d26203ae336cb60b051df583d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b0f933dded6001d26203ae336cb60b051df583d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb2be32dbd518badcecb5c43cfc30e3db857e5ef", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhMgdmCRBK7hj4Ov3rIwAAz98IAEGogJQVHH976zR/CmktTxDw\n2MR8HjvSbbje2+JiUKVozvlI2haULQZIzgITWOhybSnxk1lwSTlAy2imja50FjIl\n8S7V7aEupEpRBh9FW+HyjUgQwhHIUqK4DCuVWesjPYcmUxLuAVQ4O0emL8adfXlG\nqI3EOBvpyezt6VXPoGz+v8Z2vzf0U26dGXFPgH8c14nW9nLX0h0aJlw0m9rcTVdv\nYzihSSfnR2RSxBGmY7ndlEItcX3Pu73GXCZI+r0OjjKqg7qYJdtvt/s+8CtXNeA1\n1T0JmT6+W+5sO7MekeIoMUo5SHkw+PiERJMIk6M/B5FLXk2807tNrf8IT8s5zW0=\n=fuO4\n-----END PGP SIGNATURE-----\n", "payload": "tree 2b0f933dded6001d26203ae336cb60b051df583d\nparent fbdff7fae941bce21fd3047f87777c84b866850e\nparent 003a636e760d50f4e1e96101f8e9994ac3758135\nauthor Mara Bos <m-ou.se@m-ou.se> 1630668646 +0200\ncommitter GitHub <noreply@github.com> 1630668646 +0200\n\nRollup merge of #88202 - azdavis:master, r=jyn514\n\nAdd an example for deriving PartialOrd on enums\n\nFor some reason, I always forget which variants are smaller and which\nare larger when you derive PartialOrd on an enum. And the wording in the\ncurrent docs is not entirely clear to me.\n\nSo, I often end up making a small enum, deriving PartialOrd on it, and\nthen writing a `#[test]` with an assert that the top one is smaller than\nthe bottom one (or the other way around) to figure out which way the\nderiving goes.\n\nSo then I figured, it would be great if the standard library docs just\nhad that example, so if I keep forgetting, at least I can figure it out\nquickly by looking at std's docs.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb2be32dbd518badcecb5c43cfc30e3db857e5ef", "html_url": "https://github.com/rust-lang/rust/commit/cb2be32dbd518badcecb5c43cfc30e3db857e5ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb2be32dbd518badcecb5c43cfc30e3db857e5ef/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fbdff7fae941bce21fd3047f87777c84b866850e", "url": "https://api.github.com/repos/rust-lang/rust/commits/fbdff7fae941bce21fd3047f87777c84b866850e", "html_url": "https://github.com/rust-lang/rust/commit/fbdff7fae941bce21fd3047f87777c84b866850e"}, {"sha": "003a636e760d50f4e1e96101f8e9994ac3758135", "url": "https://api.github.com/repos/rust-lang/rust/commits/003a636e760d50f4e1e96101f8e9994ac3758135", "html_url": "https://github.com/rust-lang/rust/commit/003a636e760d50f4e1e96101f8e9994ac3758135"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "4e82b65539460eeaffeb71fe8839a79c93359548", "filename": "library/core/src/cmp.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/cb2be32dbd518badcecb5c43cfc30e3db857e5ef/library%2Fcore%2Fsrc%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb2be32dbd518badcecb5c43cfc30e3db857e5ef/library%2Fcore%2Fsrc%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fcmp.rs?ref=cb2be32dbd518badcecb5c43cfc30e3db857e5ef", "patch": "@@ -660,6 +660,18 @@ impl<T: Clone> Clone for Reverse<T> {\n /// This trait can be used with `#[derive]`. When `derive`d on structs, it will produce a\n /// [lexicographic](https://en.wikipedia.org/wiki/Lexicographic_order) ordering based on the top-to-bottom declaration order of the struct's members.\n /// When `derive`d on enums, variants are ordered by their top-to-bottom discriminant order.\n+/// This means variants at the top are less than variants at the bottom.\n+/// Here's an example:\n+///\n+/// ```\n+/// #[derive(PartialEq, PartialOrd)]\n+/// enum Size {\n+///     Small,\n+///     Large,\n+/// }\n+///\n+/// assert!(Size::Small < Size::Large);\n+/// ```\n ///\n /// ## Lexicographical comparison\n ///"}]}