{"sha": "57ee5cf5a93923dae9c98bffb11545fc3a31368d", "node_id": "C_kwDOAAsO6NoAKDU3ZWU1Y2Y1YTkzOTIzZGFlOWM5OGJmZmIxMTU0NWZjM2EzMTM2OGQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-27T10:45:57Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-27T10:45:57Z"}, "message": "Auto merge of #102306 - lcnr:rustc_hir_analysis, r=compiler-errors\n\nrename rustc_typeck to rustc_hir_analysis\n\nfirst part of https://github.com/rust-lang/compiler-team/issues/529\n\nr? `@compiler-errors`", "tree": {"sha": "abd98065e805dca388767b651ae60673397fea9d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/abd98065e805dca388767b651ae60673397fea9d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57ee5cf5a93923dae9c98bffb11545fc3a31368d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57ee5cf5a93923dae9c98bffb11545fc3a31368d", "html_url": "https://github.com/rust-lang/rust/commit/57ee5cf5a93923dae9c98bffb11545fc3a31368d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57ee5cf5a93923dae9c98bffb11545fc3a31368d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9297d22ad9edc2b56f0dd8734c1187a0c88be69", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9297d22ad9edc2b56f0dd8734c1187a0c88be69", "html_url": "https://github.com/rust-lang/rust/commit/d9297d22ad9edc2b56f0dd8734c1187a0c88be69"}, {"sha": "1fc86a63f451b81606e4787692517dc613f333db", "url": "https://api.github.com/repos/rust-lang/rust/commits/1fc86a63f451b81606e4787692517dc613f333db", "html_url": "https://github.com/rust-lang/rust/commit/1fc86a63f451b81606e4787692517dc613f333db"}], "stats": {"total": 203, "additions": 101, "deletions": 102}, "files": [{"sha": "c99a07f40b2e5ca70863d5b20a6090c74aaae9d4", "filename": "Cargo.lock", "status": "modified", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -3394,6 +3394,7 @@ dependencies = [\n  \"rustc_errors\",\n  \"rustc_feature\",\n  \"rustc_hir\",\n+ \"rustc_hir_analysis\",\n  \"rustc_hir_pretty\",\n  \"rustc_interface\",\n  \"rustc_lint\",\n@@ -3407,7 +3408,6 @@ dependencies = [\n  \"rustc_session\",\n  \"rustc_span\",\n  \"rustc_target\",\n- \"rustc_typeck\",\n  \"serde_json\",\n  \"tracing\",\n  \"winapi\",\n@@ -3512,6 +3512,35 @@ dependencies = [\n  \"tracing\",\n ]\n \n+[[package]]\n+name = \"rustc_hir_analysis\"\n+version = \"0.0.0\"\n+dependencies = [\n+ \"rustc_arena\",\n+ \"rustc_ast\",\n+ \"rustc_attr\",\n+ \"rustc_data_structures\",\n+ \"rustc_errors\",\n+ \"rustc_feature\",\n+ \"rustc_graphviz\",\n+ \"rustc_hir\",\n+ \"rustc_hir_pretty\",\n+ \"rustc_index\",\n+ \"rustc_infer\",\n+ \"rustc_lint\",\n+ \"rustc_macros\",\n+ \"rustc_middle\",\n+ \"rustc_serialize\",\n+ \"rustc_session\",\n+ \"rustc_span\",\n+ \"rustc_target\",\n+ \"rustc_trait_selection\",\n+ \"rustc_ty_utils\",\n+ \"rustc_type_ir\",\n+ \"smallvec\",\n+ \"tracing\",\n+]\n+\n [[package]]\n name = \"rustc_hir_pretty\"\n version = \"0.0.0\"\n@@ -3591,6 +3620,7 @@ dependencies = [\n  \"rustc_errors\",\n  \"rustc_expand\",\n  \"rustc_hir\",\n+ \"rustc_hir_analysis\",\n  \"rustc_incremental\",\n  \"rustc_lint\",\n  \"rustc_macros\",\n@@ -3613,7 +3643,6 @@ dependencies = [\n  \"rustc_trait_selection\",\n  \"rustc_traits\",\n  \"rustc_ty_utils\",\n- \"rustc_typeck\",\n  \"smallvec\",\n  \"tracing\",\n  \"winapi\",\n@@ -3923,12 +3952,12 @@ dependencies = [\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n  \"rustc_hir\",\n+ \"rustc_hir_analysis\",\n  \"rustc_macros\",\n  \"rustc_middle\",\n  \"rustc_session\",\n  \"rustc_span\",\n  \"rustc_trait_selection\",\n- \"rustc_typeck\",\n  \"tracing\",\n ]\n \n@@ -4212,35 +4241,6 @@ dependencies = [\n  \"smallvec\",\n ]\n \n-[[package]]\n-name = \"rustc_typeck\"\n-version = \"0.0.0\"\n-dependencies = [\n- \"rustc_arena\",\n- \"rustc_ast\",\n- \"rustc_attr\",\n- \"rustc_data_structures\",\n- \"rustc_errors\",\n- \"rustc_feature\",\n- \"rustc_graphviz\",\n- \"rustc_hir\",\n- \"rustc_hir_pretty\",\n- \"rustc_index\",\n- \"rustc_infer\",\n- \"rustc_lint\",\n- \"rustc_macros\",\n- \"rustc_middle\",\n- \"rustc_serialize\",\n- \"rustc_session\",\n- \"rustc_span\",\n- \"rustc_target\",\n- \"rustc_trait_selection\",\n- \"rustc_ty_utils\",\n- \"rustc_type_ir\",\n- \"smallvec\",\n- \"tracing\",\n-]\n-\n [[package]]\n name = \"rustc_version\"\n version = \"0.4.0\""}, {"sha": "ee2fc65e37b832ccc61dfb931362fe106f714296", "filename": "compiler/rustc_codegen_llvm/src/consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_codegen_llvm%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_codegen_llvm%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fconsts.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -552,7 +552,7 @@ impl<'ll> StaticMethods for CodegenCx<'ll, '_> {\n                 // `#[used(compiler)]` is explicitly requested. This is to avoid similar breakage\n                 // on other targets, in particular MachO targets have *their* static constructor\n                 // lists broken if `llvm.compiler.used` is emitted rather than llvm.used. However,\n-                // that check happens when assigning the `CodegenFnAttrFlags` in `rustc_typeck`,\n+                // that check happens when assigning the `CodegenFnAttrFlags` in `rustc_hir_analysis`,\n                 // so we don't need to take care of it here.\n                 self.add_compiler_used_global(g);\n             }"}, {"sha": "450672fb94122c5695587f3c9513f1a4c8ec130b", "filename": "compiler/rustc_codegen_ssa/src/traits/intrinsic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftraits%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftraits%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftraits%2Fintrinsic.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -5,7 +5,7 @@ use rustc_span::Span;\n use rustc_target::abi::call::FnAbi;\n \n pub trait IntrinsicCallMethods<'tcx>: BackendTypes {\n-    /// Remember to add all intrinsics here, in `compiler/rustc_typeck/src/check/mod.rs`,\n+    /// Remember to add all intrinsics here, in `compiler/rustc_hir_analysis/src/check/mod.rs`,\n     /// and in `library/core/src/intrinsics.rs`; if you need access to any LLVM intrinsics,\n     /// add them to `compiler/rustc_codegen_llvm/src/context.rs`.\n     fn codegen_intrinsic_call("}, {"sha": "59e937777483ec1941854b6d66d5b29c26ea4a49", "filename": "compiler/rustc_driver/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_driver%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_driver%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2FCargo.toml?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -30,7 +30,7 @@ rustc_error_codes = { path = \"../rustc_error_codes\" }\n rustc_interface = { path = \"../rustc_interface\" }\n rustc_ast = { path = \"../rustc_ast\" }\n rustc_span = { path = \"../rustc_span\" }\n-rustc_typeck = { path = \"../rustc_typeck\" }\n+rustc_hir_analysis = { path = \"../rustc_hir_analysis\" }\n \n [target.'cfg(unix)'.dependencies]\n libc = \"0.2\""}, {"sha": "f9b1316d2eb5f632da4474ae56720ff1881cbf40", "filename": "compiler/rustc_driver/src/pretty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_driver%2Fsrc%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_driver%2Fsrc%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Fpretty.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -502,7 +502,7 @@ fn print_with_analysis(\n \n         ThirTree => {\n             let mut out = String::new();\n-            abort_on_err(rustc_typeck::check_crate(tcx), tcx.sess);\n+            abort_on_err(rustc_hir_analysis::check_crate(tcx), tcx.sess);\n             debug!(\"pretty printing THIR tree\");\n             for did in tcx.hir().body_owners() {\n                 let _ = writeln!("}, {"sha": "dd26b3da7bcf62236e5787905b74dca845fda3d2", "filename": "compiler/rustc_hir_analysis/Cargo.toml", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2FCargo.toml?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -1,5 +1,5 @@\n [package]\n-name = \"rustc_typeck\"\n+name = \"rustc_hir_analysis\"\n version = \"0.0.0\"\n edition = \"2021\"\n ", "previous_filename": "compiler/rustc_typeck/Cargo.toml"}, {"sha": "b61dbd8c9648e9d7b7023ddea262865b0c13b38b", "filename": "compiler/rustc_hir_analysis/README.md", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2FREADME.md?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/README.md"}, {"sha": "a9152bdc59787a2f586138c43e550ce83178566c", "filename": "compiler/rustc_hir_analysis/src/astconv/errors.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Ferrors.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/astconv/errors.rs"}, {"sha": "afac75de2d96d8e831fab717695e89e896938bd7", "filename": "compiler/rustc_hir_analysis/src/astconv/generics.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fgenerics.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/astconv/generics.rs"}, {"sha": "b3cbb606c728d40c156fbaffc5d484d06b66bd11", "filename": "compiler/rustc_hir_analysis/src/astconv/mod.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/astconv/mod.rs"}, {"sha": "6a28bb16a20acf2945f940d3f376d957529c3adf", "filename": "compiler/rustc_hir_analysis/src/bounds.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fbounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fbounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fbounds.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/bounds.rs"}, {"sha": "201927091a60a489e0d11aee3554aa9d0ec459f8", "filename": "compiler/rustc_hir_analysis/src/check/_match.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2F_match.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/_match.rs"}, {"sha": "59c366ad7d776cb41868bc18140e042f70ccab60", "filename": "compiler/rustc_hir_analysis/src/check/autoderef.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fautoderef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fautoderef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fautoderef.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/autoderef.rs"}, {"sha": "c82a31e65cf1557f98b294f84dcfe8be8c743607", "filename": "compiler/rustc_hir_analysis/src/check/callee.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcallee.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/callee.rs"}, {"sha": "81a979865acc3bef7e38809da9397e043c55c4a9", "filename": "compiler/rustc_hir_analysis/src/check/cast.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcast.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/cast.rs"}, {"sha": "d82ee8f48c52bf790eccf82cb926e4f9af581ace", "filename": "compiler/rustc_hir_analysis/src/check/check.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcheck.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/check.rs"}, {"sha": "84ea06a460bb2674d680e78243f561ef2d9a639e", "filename": "compiler/rustc_hir_analysis/src/check/closure.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fclosure.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/closure.rs"}, {"sha": "d738e56325613de26a07c91ad77d0957a24cb08b", "filename": "compiler/rustc_hir_analysis/src/check/coercion.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcoercion.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/coercion.rs"}, {"sha": "ae98a8f6209debdb2321e7ab594ee5955db6705c", "filename": "compiler/rustc_hir_analysis/src/check/compare_method.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcompare_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcompare_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcompare_method.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/compare_method.rs"}, {"sha": "264df8b914b06cd1b1ac8393db279f2986a9fb0b", "filename": "compiler/rustc_hir_analysis/src/check/demand.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fdemand.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/demand.rs"}, {"sha": "963a93a95c2bbc386dd026010593d883e6d621f9", "filename": "compiler/rustc_hir_analysis/src/check/diverges.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fdiverges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fdiverges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fdiverges.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/diverges.rs"}, {"sha": "e5b212eb757b6a8070cd44cdc679a71f009f1803", "filename": "compiler/rustc_hir_analysis/src/check/dropck.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fdropck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fdropck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fdropck.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -1,4 +1,4 @@\n-// FIXME(@lcnr): Move this module out of `rustc_typeck`.\n+// FIXME(@lcnr): Move this module out of `rustc_hir_analysis`.\n //\n // We don't do any drop checking during hir typeck.\n use crate::hir::def_id::{DefId, LocalDefId};", "previous_filename": "compiler/rustc_typeck/src/check/dropck.rs"}, {"sha": "e9e810344776b963d52a0eeb85fbd6ecbcc8c376", "filename": "compiler/rustc_hir_analysis/src/check/expectation.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fexpectation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fexpectation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fexpectation.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/expectation.rs"}, {"sha": "48a4f40780bf43e9ff101ccb6acd7e9fd32663fd", "filename": "compiler/rustc_hir_analysis/src/check/expr.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fexpr.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/expr.rs"}, {"sha": "4059b3403b19fe4851db0658c6d1fe870b8a9a3d", "filename": "compiler/rustc_hir_analysis/src/check/fallback.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Ffallback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Ffallback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Ffallback.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/fallback.rs"}, {"sha": "4522678802ba9b76c324824c8037510c01b76903", "filename": "compiler/rustc_hir_analysis/src/check/fn_ctxt/_impl.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Ffn_ctxt%2F_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Ffn_ctxt%2F_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Ffn_ctxt%2F_impl.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/fn_ctxt/_impl.rs"}, {"sha": "fc83994caf53966aff1ba74745ca44856349f233", "filename": "compiler/rustc_hir_analysis/src/check/fn_ctxt/arg_matrix.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Ffn_ctxt%2Farg_matrix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Ffn_ctxt%2Farg_matrix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Ffn_ctxt%2Farg_matrix.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/fn_ctxt/arg_matrix.rs"}, {"sha": "64e7fa1a42bf7b0e5c0f1fc7380f5bd7e172cbc0", "filename": "compiler/rustc_hir_analysis/src/check/fn_ctxt/checks.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/fn_ctxt/checks.rs"}, {"sha": "d929a3e6548fbc89f47fcbc7d87c377f78740d68", "filename": "compiler/rustc_hir_analysis/src/check/fn_ctxt/mod.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Ffn_ctxt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Ffn_ctxt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Ffn_ctxt%2Fmod.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/fn_ctxt/mod.rs"}, {"sha": "c32d13090311631d4d3d9ae09c4ea6f73596c9cb", "filename": "compiler/rustc_hir_analysis/src/check/fn_ctxt/suggestions.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Ffn_ctxt%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Ffn_ctxt%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Ffn_ctxt%2Fsuggestions.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/fn_ctxt/suggestions.rs"}, {"sha": "8f34a970f6ff7694ea9eb69468d0392e0e21f934", "filename": "compiler/rustc_hir_analysis/src/check/gather_locals.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fgather_locals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fgather_locals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fgather_locals.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/gather_locals.rs"}, {"sha": "254a19368bfe2bc6fbc4364021d6c1f32edec394", "filename": "compiler/rustc_hir_analysis/src/check/generator_interior.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fgenerator_interior.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fgenerator_interior.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fgenerator_interior.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/generator_interior.rs"}, {"sha": "518cd7342366c09a1fce6eb4e8dd3db31554626b", "filename": "compiler/rustc_hir_analysis/src/check/generator_interior/drop_ranges.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fgenerator_interior%2Fdrop_ranges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fgenerator_interior%2Fdrop_ranges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fgenerator_interior%2Fdrop_ranges.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/generator_interior/drop_ranges.rs"}, {"sha": "016f4056bd90302ad9aeb4553a9802d878c5e5b0", "filename": "compiler/rustc_hir_analysis/src/check/generator_interior/drop_ranges/cfg_build.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fgenerator_interior%2Fdrop_ranges%2Fcfg_build.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fgenerator_interior%2Fdrop_ranges%2Fcfg_build.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fgenerator_interior%2Fdrop_ranges%2Fcfg_build.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/generator_interior/drop_ranges/cfg_build.rs"}, {"sha": "139d17d2e1ca186d72705afb98d310597a1c09f5", "filename": "compiler/rustc_hir_analysis/src/check/generator_interior/drop_ranges/cfg_propagate.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fgenerator_interior%2Fdrop_ranges%2Fcfg_propagate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fgenerator_interior%2Fdrop_ranges%2Fcfg_propagate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fgenerator_interior%2Fdrop_ranges%2Fcfg_propagate.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/generator_interior/drop_ranges/cfg_propagate.rs"}, {"sha": "c0a0bfe8e1c00a98cb53dd41b5d1e6e9bb7ba82c", "filename": "compiler/rustc_hir_analysis/src/check/generator_interior/drop_ranges/cfg_visualize.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fgenerator_interior%2Fdrop_ranges%2Fcfg_visualize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fgenerator_interior%2Fdrop_ranges%2Fcfg_visualize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fgenerator_interior%2Fdrop_ranges%2Fcfg_visualize.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/generator_interior/drop_ranges/cfg_visualize.rs"}, {"sha": "e22675e9d5f4e5ebc45155f2166788600eafc481", "filename": "compiler/rustc_hir_analysis/src/check/generator_interior/drop_ranges/record_consumed_borrow.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fgenerator_interior%2Fdrop_ranges%2Frecord_consumed_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fgenerator_interior%2Fdrop_ranges%2Frecord_consumed_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fgenerator_interior%2Fdrop_ranges%2Frecord_consumed_borrow.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/generator_interior/drop_ranges/record_consumed_borrow.rs"}, {"sha": "37c830d4e3850f14c63e2ce1b918b8ae70ae0997", "filename": "compiler/rustc_hir_analysis/src/check/inherited.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Finherited.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Finherited.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Finherited.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/inherited.rs"}, {"sha": "ae484b4fedaf96b7418f83c1d8d7a193a06ae0f4", "filename": "compiler/rustc_hir_analysis/src/check/intrinsic.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fintrinsic.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/intrinsic.rs"}, {"sha": "d8fe63dbf084aee940e8bfb7a283a647c6e6b754", "filename": "compiler/rustc_hir_analysis/src/check/intrinsicck.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fintrinsicck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fintrinsicck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fintrinsicck.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/intrinsicck.rs"}, {"sha": "30731cbd03d3bf8209c31acfd48f450c2434f787", "filename": "compiler/rustc_hir_analysis/src/check/method/confirm.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fmethod%2Fconfirm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fmethod%2Fconfirm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fmethod%2Fconfirm.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/method/confirm.rs"}, {"sha": "3fe9bea2299dfd3184ab0254f958685934d99138", "filename": "compiler/rustc_hir_analysis/src/check/method/mod.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fmethod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fmethod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fmethod%2Fmod.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/method/mod.rs"}, {"sha": "392695cca6849fd09ad026dce49981875915c645", "filename": "compiler/rustc_hir_analysis/src/check/method/prelude2021.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fmethod%2Fprelude2021.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fmethod%2Fprelude2021.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fmethod%2Fprelude2021.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/method/prelude2021.rs"}, {"sha": "6cd7ced01a3bfd66a3fed3efb0732d2cfc46d9c1", "filename": "compiler/rustc_hir_analysis/src/check/method/probe.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fmethod%2Fprobe.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/method/probe.rs"}, {"sha": "0e77ed0a4fe28b34e6c95a7a7f823cd45c845aa1", "filename": "compiler/rustc_hir_analysis/src/check/method/suggest.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/method/suggest.rs"}, {"sha": "593a9776bde30fc48f91389a53516e8b85561e9b", "filename": "compiler/rustc_hir_analysis/src/check/mod.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fmod.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/mod.rs"}, {"sha": "4754717c29aba777494a494f9822e8f7b9cfdad9", "filename": "compiler/rustc_hir_analysis/src/check/op.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fop.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/op.rs"}, {"sha": "8906b622b68e4d8291ed407169e3fec202b5fabb", "filename": "compiler/rustc_hir_analysis/src/check/pat.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fpat.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/pat.rs"}, {"sha": "2e0f37eba232d4762d11b13ae1880f6b4fc6d05d", "filename": "compiler/rustc_hir_analysis/src/check/place_op.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fplace_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fplace_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fplace_op.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/place_op.rs"}, {"sha": "b89db79bef8d9513646b955a3c57fa9001289cc2", "filename": "compiler/rustc_hir_analysis/src/check/region.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fregion.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/region.rs"}, {"sha": "22c9e7961070c6d14e6761bd16f230e408b8d3f1", "filename": "compiler/rustc_hir_analysis/src/check/rvalue_scopes.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Frvalue_scopes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Frvalue_scopes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Frvalue_scopes.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/rvalue_scopes.rs"}, {"sha": "0b207a6c0bee1d8fbf3b5a1941bf565075c2ebc0", "filename": "compiler/rustc_hir_analysis/src/check/upvar.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fupvar.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/upvar.rs"}, {"sha": "7965ec1b43f414120cf33e5d8d890b010e2c7d26", "filename": "compiler/rustc_hir_analysis/src/check/wfcheck.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fwfcheck.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/wfcheck.rs"}, {"sha": "680dbf7037fad501467923c117155c71b818ccb7", "filename": "compiler/rustc_hir_analysis/src/check/writeback.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fwriteback.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check/writeback.rs"}, {"sha": "1d23ed9292180263f7be92f54688ad83f178f3e1", "filename": "compiler/rustc_hir_analysis/src/check_unused.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck_unused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck_unused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck_unused.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/check_unused.rs"}, {"sha": "d4eb826f0b4d39a4f108f37606ad685503e7be7d", "filename": "compiler/rustc_hir_analysis/src/coherence/builtin.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Fbuiltin.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/coherence/builtin.rs"}, {"sha": "308ad5d5fc2c238efc3825a4959f8bd4251a80c3", "filename": "compiler/rustc_hir_analysis/src/coherence/inherent_impls.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Finherent_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Finherent_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Finherent_impls.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/coherence/inherent_impls.rs"}, {"sha": "03e076bf5ec894ab5c2c7984bb50721b279f7786", "filename": "compiler/rustc_hir_analysis/src/coherence/inherent_impls_overlap.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Finherent_impls_overlap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Finherent_impls_overlap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Finherent_impls_overlap.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/coherence/inherent_impls_overlap.rs"}, {"sha": "ae9ebe590914455b372b8326b43aaa4b3f414153", "filename": "compiler/rustc_hir_analysis/src/coherence/mod.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Fmod.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/coherence/mod.rs"}, {"sha": "7d15e5a7f3c223fb2c851191a002d8becc051ac4", "filename": "compiler/rustc_hir_analysis/src/coherence/orphan.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Forphan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Forphan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Forphan.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/coherence/orphan.rs"}, {"sha": "e45fb5fe41c02599502b5bb5bca5f1eea8ea11f5", "filename": "compiler/rustc_hir_analysis/src/coherence/unsafety.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Funsafety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Funsafety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Funsafety.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/coherence/unsafety.rs"}, {"sha": "e7deae2b557cddd29fdd58cef7ed5a4ac64feba7", "filename": "compiler/rustc_hir_analysis/src/collect.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/collect.rs"}, {"sha": "0d34a8bfee333d3d457fd32e15cfc101eb5ad474", "filename": "compiler/rustc_hir_analysis/src/collect/item_bounds.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Fitem_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Fitem_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Fitem_bounds.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/collect/item_bounds.rs"}, {"sha": "24fb0b1fd26b58ff0c6b607a6e56a90f30cc66e6", "filename": "compiler/rustc_hir_analysis/src/collect/type_of.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Ftype_of.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/collect/type_of.rs"}, {"sha": "8428e46640671e2dcca2082db884d6fc41b2c714", "filename": "compiler/rustc_hir_analysis/src/constrained_generic_params.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fconstrained_generic_params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fconstrained_generic_params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fconstrained_generic_params.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/constrained_generic_params.rs"}, {"sha": "44df47e2fa00c47ec15b3f0fd5caf4bc92172322", "filename": "compiler/rustc_hir_analysis/src/errors.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Ferrors.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/errors.rs"}, {"sha": "f483342b445f60471f3c643dea136efd0b696cfa", "filename": "compiler/rustc_hir_analysis/src/expr_use_visitor.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fexpr_use_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fexpr_use_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fexpr_use_visitor.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/expr_use_visitor.rs"}, {"sha": "7b080dc2942e06afb03b6642821be02055e5a6cc", "filename": "compiler/rustc_hir_analysis/src/hir_wf_check.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fhir_wf_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fhir_wf_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fhir_wf_check.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/hir_wf_check.rs"}, {"sha": "c499364056ff9569b61034fd39fb0b1d6158a3c2", "filename": "compiler/rustc_hir_analysis/src/impl_wf_check.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fimpl_wf_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fimpl_wf_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fimpl_wf_check.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/impl_wf_check.rs"}, {"sha": "5bebd7dee09b922004dc287838460b0670d4d9e6", "filename": "compiler/rustc_hir_analysis/src/impl_wf_check/min_specialization.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fimpl_wf_check%2Fmin_specialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fimpl_wf_check%2Fmin_specialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fimpl_wf_check%2Fmin_specialization.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/impl_wf_check/min_specialization.rs"}, {"sha": "1859473166a7890f1920edc626e78453a8115db4", "filename": "compiler/rustc_hir_analysis/src/lib.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Flib.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/lib.rs"}, {"sha": "39610e3ae38057228ec2d97c6690806261aeabfe", "filename": "compiler/rustc_hir_analysis/src/mem_categorization.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fmem_categorization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fmem_categorization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fmem_categorization.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/mem_categorization.rs"}, {"sha": "7534482cce9bba7f3deccbe62887ac6e42554efa", "filename": "compiler/rustc_hir_analysis/src/outlives/explicit.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Foutlives%2Fexplicit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Foutlives%2Fexplicit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Foutlives%2Fexplicit.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/outlives/explicit.rs"}, {"sha": "064a70107fe83ab42742c8b964160be18400e1df", "filename": "compiler/rustc_hir_analysis/src/outlives/implicit_infer.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Foutlives%2Fimplicit_infer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Foutlives%2Fimplicit_infer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Foutlives%2Fimplicit_infer.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/outlives/implicit_infer.rs"}, {"sha": "e50c267659e3f3b5a754e80966f59d2ea23eb75c", "filename": "compiler/rustc_hir_analysis/src/outlives/mod.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Foutlives%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Foutlives%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Foutlives%2Fmod.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/outlives/mod.rs"}, {"sha": "eb0e1203405cb509681d591115f2a42a9116bebb", "filename": "compiler/rustc_hir_analysis/src/outlives/test.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Foutlives%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Foutlives%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Foutlives%2Ftest.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/outlives/test.rs"}, {"sha": "0409c7081dc4f5cde6e626905b82b9255e83f6f2", "filename": "compiler/rustc_hir_analysis/src/outlives/utils.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Foutlives%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Foutlives%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Foutlives%2Futils.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/outlives/utils.rs"}, {"sha": "0b46fce17354996354b6a607ca412fb5d88c72b6", "filename": "compiler/rustc_hir_analysis/src/structured_errors.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fstructured_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fstructured_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fstructured_errors.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/structured_errors.rs"}, {"sha": "324df313ef1d8bbc49370e6c4f389207304cadc6", "filename": "compiler/rustc_hir_analysis/src/structured_errors/missing_cast_for_variadic_arg.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fstructured_errors%2Fmissing_cast_for_variadic_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fstructured_errors%2Fmissing_cast_for_variadic_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fstructured_errors%2Fmissing_cast_for_variadic_arg.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/structured_errors/missing_cast_for_variadic_arg.rs"}, {"sha": "bb608805488ef1850755e0009d1ab097551d381b", "filename": "compiler/rustc_hir_analysis/src/structured_errors/sized_unsized_cast.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fstructured_errors%2Fsized_unsized_cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fstructured_errors%2Fsized_unsized_cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fstructured_errors%2Fsized_unsized_cast.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/structured_errors/sized_unsized_cast.rs"}, {"sha": "4359124646df15b984a0662344532fe93821feca", "filename": "compiler/rustc_hir_analysis/src/structured_errors/wrong_number_of_generic_args.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fstructured_errors%2Fwrong_number_of_generic_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fstructured_errors%2Fwrong_number_of_generic_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fstructured_errors%2Fwrong_number_of_generic_args.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/structured_errors/wrong_number_of_generic_args.rs"}, {"sha": "eaf0310d57aeca595c744cf9ee437a31610091c1", "filename": "compiler/rustc_hir_analysis/src/variance/constraints.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fvariance%2Fconstraints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fvariance%2Fconstraints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fvariance%2Fconstraints.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/variance/constraints.rs"}, {"sha": "82103c5a03b6e04fe52fcf2ba3ba2af3ed57b1f5", "filename": "compiler/rustc_hir_analysis/src/variance/mod.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fvariance%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fvariance%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fvariance%2Fmod.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/variance/mod.rs"}, {"sha": "97aca621aa21745e78cfc319bd6acf089c5e9fd4", "filename": "compiler/rustc_hir_analysis/src/variance/solve.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fvariance%2Fsolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fvariance%2Fsolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fvariance%2Fsolve.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/variance/solve.rs"}, {"sha": "1f763011e061433e34869534cd81ca265d1e0aa1", "filename": "compiler/rustc_hir_analysis/src/variance/terms.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fvariance%2Fterms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fvariance%2Fterms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fvariance%2Fterms.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/variance/terms.rs"}, {"sha": "2ba87db880b4671440cc85f394d86209d6858258", "filename": "compiler/rustc_hir_analysis/src/variance/test.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fvariance%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fvariance%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fvariance%2Ftest.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/variance/test.rs"}, {"sha": "027f0859fcd54943cda23de168370b25448e9716", "filename": "compiler/rustc_hir_analysis/src/variance/xform.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fvariance%2Fxform.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_hir_analysis%2Fsrc%2Fvariance%2Fxform.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fvariance%2Fxform.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "previous_filename": "compiler/rustc_typeck/src/variance/xform.rs"}, {"sha": "99de5b65981264981b95249f4d78d3db7f5133f3", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -1862,7 +1862,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n \n         // In some (most?) cases cause.body_id points to actual body, but in some cases\n         // it's an actual definition. According to the comments (e.g. in\n-        // librustc_typeck/check/compare_method.rs:compare_predicate_entailment) the latter\n+        // rustc_hir_analysis/check/compare_method.rs:compare_predicate_entailment) the latter\n         // is relied upon by some other code. This might (or might not) need cleanup.\n         let body_owner_def_id =\n             self.tcx.hir().opt_local_def_id(cause.body_id).unwrap_or_else(|| {"}, {"sha": "b9fd79e0d2f3ac23ca6875be3236e3e258c6f4c6", "filename": "compiler/rustc_infer/src/infer/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -581,7 +581,7 @@ impl<'tcx> TyCtxtInferExt<'tcx> for TyCtxt<'tcx> {\n }\n \n impl<'tcx> InferCtxtBuilder<'tcx> {\n-    /// Used only by `rustc_typeck` during body type-checking/inference,\n+    /// Used only by `rustc_hir_analysis` during body type-checking/inference,\n     /// will initialize `in_progress_typeck_results` with fresh `TypeckResults`.\n     /// Will also change the scope for opaque type defining use checks to the given owner.\n     pub fn with_fresh_in_progress_typeck_results(mut self, table_owner: OwnerId) -> Self {"}, {"sha": "e040634edb088da85d65e9dd86aab0dda27b22b3", "filename": "compiler/rustc_infer/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_infer%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_infer%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Flib.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -2,7 +2,7 @@\n //!\n //! - **Type inference.** The type inference code can be found in the `infer` module;\n //!   this code handles low-level equality and subtyping operations. The\n-//!   type check pass in the compiler is found in the `rustc_typeck` crate.\n+//!   type check pass in the compiler is found in the `rustc_hir_analysis` crate.\n //!\n //! For more information about how rustc works, see the [rustc dev guide].\n //!"}, {"sha": "f3c38875b37c6d9bfe41b06ecf649a0d25c92566", "filename": "compiler/rustc_interface/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_interface%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_interface%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2FCargo.toml?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -38,7 +38,7 @@ rustc_mir_build = { path = \"../rustc_mir_build\" }\n rustc_mir_transform = { path = \"../rustc_mir_transform\" }\n rustc_monomorphize = { path = \"../rustc_monomorphize\" }\n rustc_passes = { path = \"../rustc_passes\" }\n-rustc_typeck = { path = \"../rustc_typeck\" }\n+rustc_hir_analysis = { path = \"../rustc_hir_analysis\" }\n rustc_lint = { path = \"../rustc_lint\" }\n rustc_errors = { path = \"../rustc_errors\" }\n rustc_plugin_impl = { path = \"../rustc_plugin_impl\" }"}, {"sha": "ad3e020b581bf8de32367f258abf80a236234175", "filename": "compiler/rustc_interface/src/passes.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -37,7 +37,6 @@ use rustc_session::{Limit, Session};\n use rustc_span::symbol::{sym, Symbol};\n use rustc_span::FileName;\n use rustc_trait_selection::traits;\n-use rustc_typeck as typeck;\n \n use std::any::Any;\n use std::cell::RefCell;\n@@ -736,7 +735,7 @@ pub static DEFAULT_QUERY_PROVIDERS: LazyLock<Providers> = LazyLock::new(|| {\n     rustc_mir_transform::provide(providers);\n     rustc_monomorphize::provide(providers);\n     rustc_privacy::provide(providers);\n-    typeck::provide(providers);\n+    rustc_hir_analysis::provide(providers);\n     ty::provide(providers);\n     traits::provide(providers);\n     rustc_passes::provide(providers);\n@@ -880,7 +879,7 @@ fn analysis(tcx: TyCtxt<'_>, (): ()) -> Result<()> {\n     });\n \n     // passes are timed inside typeck\n-    typeck::check_crate(tcx)?;\n+    rustc_hir_analysis::check_crate(tcx)?;\n \n     sess.time(\"misc_checking_2\", || {\n         parallel!("}, {"sha": "2de27102bcc0bf094bac269e1c8393bd9a2be4ca", "filename": "compiler/rustc_middle/src/ty/cast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcast.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -38,7 +38,7 @@ pub enum CastTy<'tcx> {\n }\n \n /// Cast Kind. See [RFC 401](https://rust-lang.github.io/rfcs/0401-coercions.html)\n-/// (or librustc_typeck/check/cast.rs).\n+/// (or rustc_hir_analysis/check/cast.rs).\n #[derive(Copy, Clone, Debug, TyEncodable, TyDecodable, HashStable)]\n pub enum CastKind {\n     CoercionCast,"}, {"sha": "4781585b82c3897ba0dffad02795a61f2edd599c", "filename": "compiler/rustc_middle/src/ty/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -574,7 +574,7 @@ pub struct TypeckResults<'tcx> {\n \n     /// Tracks the rvalue scoping rules which defines finer scoping for rvalue expressions\n     /// by applying extended parameter rules.\n-    /// Details may be find in `rustc_typeck::check::rvalue_scopes`.\n+    /// Details may be find in `rustc_hir_analysis::check::rvalue_scopes`.\n     pub rvalue_scopes: RvalueScopes,\n \n     /// Stores the type, expression, span and optional scope span of all types"}, {"sha": "e79b79a25aec9de6e892d93985d98d26f3a06435", "filename": "compiler/rustc_middle/src/ty/rvalue_scopes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_middle%2Fsrc%2Fty%2Frvalue_scopes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_middle%2Fsrc%2Fty%2Frvalue_scopes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Frvalue_scopes.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -3,7 +3,7 @@ use rustc_data_structures::fx::FxHashMap;\n use rustc_hir as hir;\n \n /// `RvalueScopes` is a mapping from sub-expressions to _extended_ lifetime as determined by\n-/// rules laid out in `rustc_typeck::check::rvalue_scopes`.\n+/// rules laid out in `rustc_hir_analysis::check::rvalue_scopes`.\n #[derive(TyEncodable, TyDecodable, Clone, Debug, Default, Eq, PartialEq, HashStable)]\n pub struct RvalueScopes {\n     map: FxHashMap<hir::ItemLocalId, Option<Scope>>,"}, {"sha": "2f6ec836c3c06179b92d6952b6976a35a8a44f75", "filename": "compiler/rustc_middle/src/ty/sty.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -315,7 +315,7 @@ impl<'tcx> ClosureSubsts<'tcx> {\n     /// closure.\n     // FIXME(eddyb) this should be unnecessary, as the shallowly resolved\n     // type is known at the time of the creation of `ClosureSubsts`,\n-    // see `rustc_typeck::check::closure`.\n+    // see `rustc_hir_analysis::check::closure`.\n     pub fn sig_as_fn_ptr_ty(self) -> Ty<'tcx> {\n         self.split().closure_sig_as_fn_ptr_ty.expect_ty()\n     }\n@@ -2121,7 +2121,7 @@ impl<'tcx> Ty<'tcx> {\n     ///\n     /// Note that during type checking, we use an inference variable\n     /// to represent the closure kind, because it has not yet been\n-    /// inferred. Once upvar inference (in `rustc_typeck/src/check/upvar.rs`)\n+    /// inferred. Once upvar inference (in `rustc_hir_analysis/src/check/upvar.rs`)\n     /// is complete, that type variable will be unified.\n     pub fn to_opt_closure_kind(self) -> Option<ty::ClosureKind> {\n         match self.kind() {"}, {"sha": "bcf2ed6817210542f46969908a47cf07fb810cc5", "filename": "compiler/rustc_mir_build/src/thir/cx/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fcx%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fcx%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fcx%2Fexpr.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -998,7 +998,7 @@ impl<'tcx> Cx<'tcx> {\n             .temporary_scope(self.region_scope_tree, closure_expr.hir_id.local_id);\n         let var_ty = place.base_ty;\n \n-        // The result of capture analysis in `rustc_typeck/check/upvar.rs`represents a captured path\n+        // The result of capture analysis in `rustc_hir_analysis/check/upvar.rs`represents a captured path\n         // as it's seen for use within the closure and not at the time of closure creation.\n         //\n         // That is we see expect to see it start from a captured upvar and not something that is local"}, {"sha": "cd186421bb13b5a76180c34b6d719379f623cab4", "filename": "compiler/rustc_mir_build/src/thir/pattern/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fmod.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -86,7 +86,7 @@ impl<'a, 'tcx> PatCtxt<'a, 'tcx> {\n         // ```\n         //\n         // the type assigned to `Some(n)` in `unadjusted_pat` would be `Option<i32>` (this is\n-        // determined in rustc_typeck::check::match). The adjustments would be\n+        // determined in rustc_hir_analysis::check::match). The adjustments would be\n         //\n         // `vec![&&Option<i32>, &Option<i32>]`.\n         //"}, {"sha": "22b58837148981c669b6eef88e8157165c2a921d", "filename": "compiler/rustc_mir_build/src/thir/pattern/usefulness.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fusefulness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fusefulness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fusefulness.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -746,7 +746,7 @@ impl<'p, 'tcx> Witness<'p, 'tcx> {\n /// Report that a match of a `non_exhaustive` enum marked with `non_exhaustive_omitted_patterns`\n /// is not exhaustive enough.\n ///\n-/// NB: The partner lint for structs lives in `compiler/rustc_typeck/src/check/pat.rs`.\n+/// NB: The partner lint for structs lives in `compiler/rustc_hir_analysis/src/check/pat.rs`.\n fn lint_non_exhaustive_omitted_patterns<'p, 'tcx>(\n     cx: &MatchCheckCtxt<'p, 'tcx>,\n     scrut_ty: Ty<'tcx>,"}, {"sha": "897a0db930c79d9677a97adcae09bbf0fc1a4627", "filename": "compiler/rustc_passes/src/check_attr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -1744,7 +1744,7 @@ impl CheckAttrVisitor<'_> {\n                     }\n                 }\n                 Some(_) => {\n-                    // This error case is handled in rustc_typeck::collect.\n+                    // This error case is handled in rustc_hir_analysis::collect.\n                 }\n                 None => {\n                     // Default case (compiler) when arg isn't defined."}, {"sha": "832fdc9f01668f00c90b324ae8cd93679f12b30e", "filename": "compiler/rustc_privacy/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_privacy%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_privacy%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_privacy%2FCargo.toml?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -14,5 +14,5 @@ rustc_middle = { path = \"../rustc_middle\" }\n rustc_session = { path = \"../rustc_session\" }\n rustc_span = { path = \"../rustc_span\" }\n rustc_trait_selection = { path = \"../rustc_trait_selection\" }\n-rustc_typeck = { path = \"../rustc_typeck\" }\n+rustc_hir_analysis = { path = \"../rustc_hir_analysis\" }\n tracing = \"0.1\""}, {"sha": "7ab07a671c47b99ecd946db66239fd3fb215d358", "filename": "compiler/rustc_privacy/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_privacy%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_privacy%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_privacy%2Fsrc%2Flib.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -1207,7 +1207,7 @@ impl<'tcx> Visitor<'tcx> for TypePrivacyVisitor<'tcx> {\n             // Types in signatures.\n             // FIXME: This is very ineffective. Ideally each HIR type should be converted\n             // into a semantic type only once and the result should be cached somehow.\n-            if self.visit(rustc_typeck::hir_ty_to_ty(self.tcx, hir_ty)).is_break() {\n+            if self.visit(rustc_hir_analysis::hir_ty_to_ty(self.tcx, hir_ty)).is_break() {\n                 return;\n             }\n         }\n@@ -1236,7 +1236,7 @@ impl<'tcx> Visitor<'tcx> for TypePrivacyVisitor<'tcx> {\n         if self.maybe_typeck_results.is_none() {\n             // Avoid calling `hir_trait_to_predicates` in bodies, it will ICE.\n             // The traits' privacy in bodies is already checked as a part of trait object types.\n-            let bounds = rustc_typeck::hir_trait_to_predicates(\n+            let bounds = rustc_hir_analysis::hir_trait_to_predicates(\n                 self.tcx,\n                 trait_ref,\n                 // NOTE: This isn't really right, but the actual type doesn't matter here. It's"}, {"sha": "01c3801f223293609814b96b3fd727f10fd53eb5", "filename": "compiler/rustc_resolve/src/check_unused.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_resolve%2Fsrc%2Fcheck_unused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_resolve%2Fsrc%2Fcheck_unused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fcheck_unused.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -6,7 +6,7 @@\n // `use` items.\n //\n // Unused trait imports can't be checked until the method resolution. We save\n-// candidates here, and do the actual check in librustc_typeck/check_unused.rs.\n+// candidates here, and do the actual check in rustc_hir_analysis/check_unused.rs.\n //\n // Checking for unused imports is split into three steps:\n //"}, {"sha": "9b52decd9c77002309a8b804d3117143d18d4272", "filename": "compiler/rustc_resolve/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flib.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -4,7 +4,7 @@\n //! Paths in macros, imports, expressions, types, patterns are resolved here.\n //! Label and lifetime names are resolved here as well.\n //!\n-//! Type-relative name resolution (methods, fields, associated items) happens in `rustc_typeck`.\n+//! Type-relative name resolution (methods, fields, associated items) happens in `rustc_hir_analysis`.\n \n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/nightly-rustc/\")]\n #![feature(box_patterns)]"}, {"sha": "fa1dc90e4a24bc32e3d353a4d923c39200d587cb", "filename": "compiler/rustc_ty_utils/src/instance.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_ty_utils%2Fsrc%2Finstance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/compiler%2Frustc_ty_utils%2Fsrc%2Finstance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ty_utils%2Fsrc%2Finstance.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -187,7 +187,7 @@ fn resolve_associated_item<'tcx>(\n             // we know the error would've been caught (e.g. in an upstream crate).\n             //\n             // A better approach might be to just introduce a query (returning\n-            // `Result<(), ErrorGuaranteed>`) for the check that `rustc_typeck`\n+            // `Result<(), ErrorGuaranteed>`) for the check that `rustc_hir_analysis`\n             // performs (i.e. that the definition's type in the `impl` matches\n             // the declaration in the `trait`), so that we can cheaply check\n             // here if it failed, instead of approximating it."}, {"sha": "704292c10486bdf8f8d42152c7081f07a8113a9b", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -17,6 +17,7 @@ use rustc_hir as hir;\n use rustc_hir::def::{CtorKind, DefKind, Res};\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n use rustc_hir::PredicateOrigin;\n+use rustc_hir_analysis::hir_ty_to_ty;\n use rustc_infer::infer::region_constraints::{Constraint, RegionConstraintData};\n use rustc_middle::middle::resolve_lifetime as rl;\n use rustc_middle::ty::fold::TypeFolder;\n@@ -26,7 +27,6 @@ use rustc_middle::{bug, span_bug};\n use rustc_span::hygiene::{AstPass, MacroKind};\n use rustc_span::symbol::{kw, sym, Ident, Symbol};\n use rustc_span::{self, ExpnKind};\n-use rustc_typeck::hir_ty_to_ty;\n \n use std::assert_matches::assert_matches;\n use std::collections::hash_map::Entry;\n@@ -632,7 +632,7 @@ fn clean_ty_generics<'tcx>(\n     let mut impl_trait = BTreeMap::<ImplTraitParam, Vec<GenericBound>>::default();\n \n     // Bounds in the type_params and lifetimes fields are repeated in the\n-    // predicates field (see rustc_typeck::collect::ty_generics), so remove\n+    // predicates field (see rustc_hir_analysis::collect::ty_generics), so remove\n     // them.\n     let stripped_params = gens\n         .params"}, {"sha": "e53e93c4defb14dc8bb9e0ea9573c56185a4c936", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -21,6 +21,7 @@ use rustc_hir::def::{CtorKind, DefKind, Res};\n use rustc_hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n use rustc_hir::lang_items::LangItem;\n use rustc_hir::{BodyId, Mutability};\n+use rustc_hir_analysis::check::intrinsic::intrinsic_operation_unsafety;\n use rustc_index::vec::IndexVec;\n use rustc_middle::ty::fast_reject::SimplifiedType;\n use rustc_middle::ty::{self, TyCtxt};\n@@ -31,7 +32,6 @@ use rustc_span::symbol::{kw, sym, Ident, Symbol};\n use rustc_span::{self, FileName, Loc};\n use rustc_target::abi::VariantIdx;\n use rustc_target::spec::abi::Abi;\n-use rustc_typeck::check::intrinsic::intrinsic_operation_unsafety;\n \n use crate::clean::cfg::Cfg;\n use crate::clean::clean_visibility;"}, {"sha": "09a26cbac3e498bd7dc83bc132fae77c098ced0e", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -293,7 +293,7 @@ pub(crate) fn create_config(\n         override_queries: Some(|_sess, providers, _external_providers| {\n             // Most lints will require typechecking, so just don't run them.\n             providers.lint_mod = |_, _| {};\n-            // Prevent `rustc_typeck::check_crate` from calling `typeck` on all bodies.\n+            // Prevent `rustc_hir_analysis::check_crate` from calling `typeck` on all bodies.\n             providers.typeck_item_bodies = |_, _| {};\n             // hack so that `used_trait_imports` won't try to call typeck\n             providers.used_trait_imports = |_, _| {"}, {"sha": "ef01b854e5a6961cbeb60c6f4afc41bd2e1b870d", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -41,6 +41,7 @@ extern crate rustc_errors;\n extern crate rustc_expand;\n extern crate rustc_feature;\n extern crate rustc_hir;\n+extern crate rustc_hir_analysis;\n extern crate rustc_hir_pretty;\n extern crate rustc_index;\n extern crate rustc_infer;\n@@ -59,7 +60,6 @@ extern crate rustc_session;\n extern crate rustc_span;\n extern crate rustc_target;\n extern crate rustc_trait_selection;\n-extern crate rustc_typeck;\n extern crate test;\n \n // See docs in https://github.com/rust-lang/rust/blob/master/compiler/rustc/src/main.rs"}, {"sha": "47c38c979c3282d86d8f03e5e14eaab4897f1790", "filename": "src/test/ui/rfc-2632-const-trait-impl/trait-where-clause-const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ftrait-where-clause-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ftrait-where-clause-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Ftrait-where-clause-const.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -1,6 +1,6 @@\n // Like trait-where-clause.rs, but we are calling from a const context.\n // Checking the validity of traits' where clauses happen at a later stage.\n-// (`rustc_const_eval` instead of `rustc_typeck`) Therefore one file as a\n+// (`rustc_const_eval` instead of `rustc_hir_analysis`) Therefore one file as a\n // test is not enough.\n #![feature(const_trait_impl)]\n "}, {"sha": "a7a3f98180a3fe9bd8c72362f8a6988b5b962922", "filename": "src/test/ui/suggestions/non-existent-field-present-in-subfield-recursion-limit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftest%2Fui%2Fsuggestions%2Fnon-existent-field-present-in-subfield-recursion-limit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftest%2Fui%2Fsuggestions%2Fnon-existent-field-present-in-subfield-recursion-limit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fnon-existent-field-present-in-subfield-recursion-limit.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -1,4 +1,4 @@\n-// In rustc_typeck::check::expr::no_such_field_err we recursively\n+// In rustc_hir_analysis::check::expr::no_such_field_err we recursively\n // look in subfields for the field. This recursive search is limited\n // in depth for compile-time reasons and to avoid infinite recursion\n // in case of cycles. This file tests that the limit in the recursion"}, {"sha": "3905a6c2e211998f0cfb8a2fdd33948c03402d41", "filename": "src/tools/clippy/clippy_lints/src/default_union_representation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fdefault_union_representation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fdefault_union_representation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fdefault_union_representation.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -4,7 +4,7 @@ use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::ty::layout::LayoutOf;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::sym;\n-use rustc_typeck::hir_ty_to_ty;\n+use rustc_hir_analysis::hir_ty_to_ty;\n \n declare_clippy_lint! {\n     /// ### What it does"}, {"sha": "8ccc969646ec5f4aa2b29d1459664c0b21ca34af", "filename": "src/tools/clippy/clippy_lints/src/escape.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fescape.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -10,7 +10,7 @@ use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Span;\n use rustc_span::symbol::kw;\n use rustc_target::spec::abi::Abi;\n-use rustc_typeck::expr_use_visitor::{Delegate, ExprUseVisitor, PlaceBase, PlaceWithHirId};\n+use rustc_hir_analysis::expr_use_visitor::{Delegate, ExprUseVisitor, PlaceBase, PlaceWithHirId};\n \n #[derive(Copy, Clone)]\n pub struct BoxedLocal {\n@@ -177,7 +177,7 @@ impl<'a, 'tcx> Delegate<'tcx> for EscapeDelegate<'a, 'tcx> {\n         }\n     }\n \n-    fn fake_read(&mut self, _: &rustc_typeck::expr_use_visitor::PlaceWithHirId<'tcx>, _: FakeReadCause, _: HirId) {}\n+    fn fake_read(&mut self, _: &rustc_hir_analysis::expr_use_visitor::PlaceWithHirId<'tcx>, _: FakeReadCause, _: HirId) {}\n }\n \n impl<'a, 'tcx> EscapeDelegate<'a, 'tcx> {"}, {"sha": "a920c3bba2aedaee0c9de062ba9cb5041f6d1fd3", "filename": "src/tools/clippy/clippy_lints/src/implicit_hasher.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fimplicit_hasher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fimplicit_hasher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fimplicit_hasher.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -12,7 +12,7 @@ use rustc_middle::ty::{Ty, TypeckResults};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n use rustc_span::symbol::sym;\n-use rustc_typeck::hir_ty_to_ty;\n+use rustc_hir_analysis::hir_ty_to_ty;\n \n use if_chain::if_chain;\n "}, {"sha": "d6eb53ae29b5afdbee434cb6042f59aedce9f8cd", "filename": "src/tools/clippy/clippy_lints/src/large_const_arrays.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Flarge_const_arrays.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Flarge_const_arrays.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Flarge_const_arrays.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -7,7 +7,7 @@ use rustc_middle::ty::layout::LayoutOf;\n use rustc_middle::ty::{self, ConstKind};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::{BytePos, Pos, Span};\n-use rustc_typeck::hir_ty_to_ty;\n+use rustc_hir_analysis::hir_ty_to_ty;\n \n declare_clippy_lint! {\n     /// ### What it does"}, {"sha": "c3db194c4ad85cfbfdb6b39b0a4fd71707a37853", "filename": "src/tools/clippy/clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Flib.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -43,7 +43,7 @@ extern crate rustc_session;\n extern crate rustc_span;\n extern crate rustc_target;\n extern crate rustc_trait_selection;\n-extern crate rustc_typeck;\n+extern crate rustc_hir_analysis;\n \n #[macro_use]\n extern crate clippy_utils;"}, {"sha": "6d585c2e45de6ba52d213a8330ef61dbbe4f2d2b", "filename": "src/tools/clippy/clippy_lints/src/loops/mut_range_bound.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Floops%2Fmut_range_bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Floops%2Fmut_range_bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Floops%2Fmut_range_bound.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -8,7 +8,7 @@ use rustc_infer::infer::TyCtxtInferExt;\n use rustc_lint::LateContext;\n use rustc_middle::{mir::FakeReadCause, ty};\n use rustc_span::source_map::Span;\n-use rustc_typeck::expr_use_visitor::{Delegate, ExprUseVisitor, PlaceBase, PlaceWithHirId};\n+use rustc_hir_analysis::expr_use_visitor::{Delegate, ExprUseVisitor, PlaceBase, PlaceWithHirId};\n \n pub(super) fn check(cx: &LateContext<'_>, arg: &Expr<'_>, body: &Expr<'_>) {\n     if_chain! {\n@@ -114,7 +114,7 @@ impl<'tcx> Delegate<'tcx> for MutatePairDelegate<'_, 'tcx> {\n         }\n     }\n \n-    fn fake_read(&mut self, _: &rustc_typeck::expr_use_visitor::PlaceWithHirId<'tcx>, _: FakeReadCause, _: HirId) {}\n+    fn fake_read(&mut self, _: &rustc_hir_analysis::expr_use_visitor::PlaceWithHirId<'tcx>, _: FakeReadCause, _: HirId) {}\n }\n \n impl MutatePairDelegate<'_, '_> {"}, {"sha": "f1f58db80b306e52537cde492ce943ba131a02f9", "filename": "src/tools/clippy/clippy_lints/src/loops/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Floops%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Floops%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Floops%2Futils.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -10,7 +10,7 @@ use rustc_middle::hir::nested_filter;\n use rustc_middle::ty::{self, Ty};\n use rustc_span::source_map::Spanned;\n use rustc_span::symbol::{sym, Symbol};\n-use rustc_typeck::hir_ty_to_ty;\n+use rustc_hir_analysis::hir_ty_to_ty;\n use std::iter::Iterator;\n \n #[derive(Debug, PartialEq, Eq)]"}, {"sha": "58ea43e69d9b1fa2f6ddbd3674d673b4735e5a85", "filename": "src/tools/clippy/clippy_lints/src/matches/needless_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmatches%2Fneedless_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmatches%2Fneedless_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmatches%2Fneedless_match.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -11,7 +11,7 @@ use rustc_hir::LangItem::OptionNone;\n use rustc_hir::{Arm, BindingAnnotation, ByRef, Expr, ExprKind, FnRetTy, Guard, Node, Pat, PatKind, Path, QPath};\n use rustc_lint::LateContext;\n use rustc_span::sym;\n-use rustc_typeck::hir_ty_to_ty;\n+use rustc_hir_analysis::hir_ty_to_ty;\n \n pub(crate) fn check_match(cx: &LateContext<'_>, ex: &Expr<'_>, arms: &[Arm<'_>], expr: &Expr<'_>) {\n     if arms.len() > 1 && expr_ty_matches_p_ty(cx, ex, expr) && check_all_arms(cx, ex, arms) {"}, {"sha": "428a354ec6b1ea4f2651423d299310d63ed7dd57", "filename": "src/tools/clippy/clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -115,7 +115,7 @@ use rustc_middle::ty::{self, TraitRef, Ty};\n use rustc_semver::RustcVersion;\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::{sym, Span};\n-use rustc_typeck::hir_ty_to_ty;\n+use rustc_hir_analysis::hir_ty_to_ty;\n \n declare_clippy_lint! {\n     /// ### What it does"}, {"sha": "559f32a563ed90f0b77355f686d2c636a5db86ab", "filename": "src/tools/clippy/clippy_lints/src/methods/unnecessary_to_owned.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmethods%2Funnecessary_to_owned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmethods%2Funnecessary_to_owned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmethods%2Funnecessary_to_owned.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -18,7 +18,7 @@ use rustc_middle::ty::{self, ParamTy, PredicateKind, ProjectionPredicate, TraitP\n use rustc_semver::RustcVersion;\n use rustc_span::{sym, Symbol};\n use rustc_trait_selection::traits::{query::evaluate_obligation::InferCtxtExt as _, Obligation, ObligationCause};\n-use rustc_typeck::check::{FnCtxt, Inherited};\n+use rustc_hir_analysis::check::{FnCtxt, Inherited};\n use std::cmp::max;\n \n use super::UNNECESSARY_TO_OWNED;"}, {"sha": "00376f0d79022396d63edfa9890ab913da680474", "filename": "src/tools/clippy/clippy_lints/src/missing_const_for_fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmissing_const_for_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmissing_const_for_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmissing_const_for_fn.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -13,7 +13,7 @@ use rustc_middle::lint::in_external_macro;\n use rustc_semver::RustcVersion;\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::Span;\n-use rustc_typeck::hir_ty_to_ty;\n+use rustc_hir_analysis::hir_ty_to_ty;\n \n declare_clippy_lint! {\n     /// ### What it does"}, {"sha": "4f46872439c3c5d867d8e98787bd31849c881b45", "filename": "src/tools/clippy/clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -22,7 +22,7 @@ use rustc_span::{sym, Span};\n use rustc_target::spec::abi::Abi;\n use rustc_trait_selection::traits;\n use rustc_trait_selection::traits::misc::can_type_implement_copy;\n-use rustc_typeck::expr_use_visitor as euv;\n+use rustc_hir_analysis::expr_use_visitor as euv;\n use std::borrow::Cow;\n \n declare_clippy_lint! {\n@@ -341,5 +341,5 @@ impl<'tcx> euv::Delegate<'tcx> for MovedVariablesCtxt {\n \n     fn mutate(&mut self, _: &euv::PlaceWithHirId<'tcx>, _: HirId) {}\n \n-    fn fake_read(&mut self, _: &rustc_typeck::expr_use_visitor::PlaceWithHirId<'tcx>, _: FakeReadCause, _: HirId) {}\n+    fn fake_read(&mut self, _: &rustc_hir_analysis::expr_use_visitor::PlaceWithHirId<'tcx>, _: FakeReadCause, _: HirId) {}\n }"}, {"sha": "48ff737dae7bc764e354b8019bceb3cba97d26c8", "filename": "src/tools/clippy/clippy_lints/src/non_copy_const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fnon_copy_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fnon_copy_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fnon_copy_const.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -20,7 +20,7 @@ use rustc_middle::ty::adjustment::Adjust;\n use rustc_middle::ty::{self, Ty};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::{sym, InnerSpan, Span, DUMMY_SP};\n-use rustc_typeck::hir_ty_to_ty;\n+use rustc_hir_analysis::hir_ty_to_ty;\n \n // FIXME: this is a correctness problem but there's no suitable\n // warn-by-default category."}, {"sha": "f134c6c4cdba5c884b918e5446f0b532579a1e4f", "filename": "src/tools/clippy/clippy_lints/src/operators/assign_op_pattern.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Foperators%2Fassign_op_pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Foperators%2Fassign_op_pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Foperators%2Fassign_op_pattern.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -11,7 +11,7 @@ use rustc_lint::LateContext;\n use rustc_middle::mir::FakeReadCause;\n use rustc_middle::ty::BorrowKind;\n use rustc_trait_selection::infer::TyCtxtInferExt;\n-use rustc_typeck::expr_use_visitor::{Delegate, ExprUseVisitor, PlaceBase, PlaceWithHirId};\n+use rustc_hir_analysis::expr_use_visitor::{Delegate, ExprUseVisitor, PlaceBase, PlaceWithHirId};\n \n use super::ASSIGN_OP_PATTERN;\n "}, {"sha": "fdf847bf44593514cfc701881d56bcc2bfecdd4f", "filename": "src/tools/clippy/clippy_lints/src/transmute/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftransmute%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftransmute%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftransmute%2Futils.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -2,7 +2,7 @@ use rustc_hir::Expr;\n use rustc_lint::LateContext;\n use rustc_middle::ty::{cast::CastKind, Ty};\n use rustc_span::DUMMY_SP;\n-use rustc_typeck::check::{cast::{self, CastCheckResult}, FnCtxt, Inherited};\n+use rustc_hir_analysis::check::{cast::{self, CastCheckResult}, FnCtxt, Inherited};\n \n // check if the component types of the transmuted collection and the result have different ABI,\n // size or alignment"}, {"sha": "d81c5c83845d852f759d6ef551eb9f6c9551f22a", "filename": "src/tools/clippy/clippy_lints/src/types/redundant_allocation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftypes%2Fredundant_allocation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftypes%2Fredundant_allocation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftypes%2Fredundant_allocation.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -5,7 +5,7 @@ use rustc_errors::Applicability;\n use rustc_hir::{self as hir, def_id::DefId, QPath, TyKind};\n use rustc_lint::LateContext;\n use rustc_span::symbol::sym;\n-use rustc_typeck::hir_ty_to_ty;\n+use rustc_hir_analysis::hir_ty_to_ty;\n \n use super::{utils, REDUNDANT_ALLOCATION};\n "}, {"sha": "236f9955722d02726eb04e82050c0d550772deda", "filename": "src/tools/clippy/clippy_lints/src/types/vec_box.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftypes%2Fvec_box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftypes%2Fvec_box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftypes%2Fvec_box.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -8,7 +8,7 @@ use rustc_lint::LateContext;\n use rustc_middle::ty::layout::LayoutOf;\n use rustc_middle::ty::TypeVisitable;\n use rustc_span::symbol::sym;\n-use rustc_typeck::hir_ty_to_ty;\n+use rustc_hir_analysis::hir_ty_to_ty;\n \n use super::VEC_BOX;\n "}, {"sha": "6a767967ef4093068e2b2f12d39590676765cd51", "filename": "src/tools/clippy/clippy_lints/src/use_self.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fuse_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fuse_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fuse_self.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -16,7 +16,7 @@ use rustc_lint::{LateContext, LateLintPass};\n use rustc_semver::RustcVersion;\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::Span;\n-use rustc_typeck::hir_ty_to_ty;\n+use rustc_hir_analysis::hir_ty_to_ty;\n \n declare_clippy_lint! {\n     /// ### What it does"}, {"sha": "78c036186f506d7cc7a5fbb6d8415564f22a64b4", "filename": "src/tools/clippy/clippy_lints/src/utils/internal_lints.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Futils%2Finternal_lints.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -32,7 +32,7 @@ use rustc_session::{declare_lint_pass, declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Spanned;\n use rustc_span::symbol::Symbol;\n use rustc_span::{sym, BytePos, Span};\n-use rustc_typeck::hir_ty_to_ty;\n+use rustc_hir_analysis::hir_ty_to_ty;\n \n use std::borrow::{Borrow, Cow};\n "}, {"sha": "703ba2ef4b054d106ec3d6810e8964659cbd0d47", "filename": "src/tools/clippy/clippy_lints/src/zero_sized_map_values.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fzero_sized_map_values.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fzero_sized_map_values.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fzero_sized_map_values.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -7,7 +7,7 @@ use rustc_middle::ty::layout::LayoutOf as _;\n use rustc_middle::ty::{Adt, Ty, TypeVisitable};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::sym;\n-use rustc_typeck::hir_ty_to_ty;\n+use rustc_hir_analysis::hir_ty_to_ty;\n \n declare_clippy_lint! {\n     /// ### What it does"}, {"sha": "627d6b51944a6d5026576321558bb157a1c5029b", "filename": "src/tools/clippy/clippy_utils/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Flib.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -32,7 +32,7 @@ extern crate rustc_session;\n extern crate rustc_span;\n extern crate rustc_target;\n extern crate rustc_trait_selection;\n-extern crate rustc_typeck;\n+extern crate rustc_hir_analysis;\n \n #[macro_use]\n pub mod sym_helper;\n@@ -1386,7 +1386,7 @@ pub fn is_integer_literal(expr: &Expr<'_>, value: u128) -> bool {\n /// Examples of coercions can be found in the Nomicon at\n /// <https://doc.rust-lang.org/nomicon/coercions.html>.\n ///\n-/// See `rustc_middle::ty::adjustment::Adjustment` and `rustc_typeck::check::coercion` for more\n+/// See `rustc_middle::ty::adjustment::Adjustment` and `rustc_hir_analysis::check::coercion` for more\n /// information on adjustments and coercions.\n pub fn is_adjusted(cx: &LateContext<'_>, e: &Expr<'_>) -> bool {\n     cx.typeck_results().adjustments().get(e.hir_id).is_some()"}, {"sha": "e53c40e95760be06f4a4ca0193bfb288624856ba", "filename": "src/tools/clippy/clippy_utils/src/sugg.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fsugg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fsugg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fsugg.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -16,7 +16,7 @@ use rustc_middle::hir::place::ProjectionKind;\n use rustc_middle::mir::{FakeReadCause, Mutability};\n use rustc_middle::ty;\n use rustc_span::source_map::{BytePos, CharPos, Pos, Span, SyntaxContext};\n-use rustc_typeck::expr_use_visitor::{Delegate, ExprUseVisitor, PlaceBase, PlaceWithHirId};\n+use rustc_hir_analysis::expr_use_visitor::{Delegate, ExprUseVisitor, PlaceBase, PlaceWithHirId};\n use std::borrow::Cow;\n use std::fmt::{Display, Write as _};\n use std::ops::{Add, Neg, Not, Sub};\n@@ -1056,7 +1056,7 @@ impl<'tcx> Delegate<'tcx> for DerefDelegate<'_, 'tcx> {\n \n     fn mutate(&mut self, _: &PlaceWithHirId<'tcx>, _: HirId) {}\n \n-    fn fake_read(&mut self, _: &rustc_typeck::expr_use_visitor::PlaceWithHirId<'tcx>, _: FakeReadCause, _: HirId) {}\n+    fn fake_read(&mut self, _: &rustc_hir_analysis::expr_use_visitor::PlaceWithHirId<'tcx>, _: FakeReadCause, _: HirId) {}\n }\n \n #[cfg(test)]"}, {"sha": "76bfec75726dfc7fcf942de82491e56e6e0d411b", "filename": "src/tools/clippy/clippy_utils/src/usage.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fusage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fusage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fusage.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -9,7 +9,7 @@ use rustc_lint::LateContext;\n use rustc_middle::hir::nested_filter;\n use rustc_middle::mir::FakeReadCause;\n use rustc_middle::ty;\n-use rustc_typeck::expr_use_visitor::{Delegate, ExprUseVisitor, PlaceBase, PlaceWithHirId};\n+use rustc_hir_analysis::expr_use_visitor::{Delegate, ExprUseVisitor, PlaceBase, PlaceWithHirId};\n \n /// Returns a set of mutated local variable IDs, or `None` if mutations could not be determined.\n pub fn mutated_variables<'tcx>(expr: &'tcx Expr<'_>, cx: &LateContext<'tcx>) -> Option<HirIdSet> {\n@@ -73,7 +73,7 @@ impl<'tcx> Delegate<'tcx> for MutVarsDelegate {\n         self.update(cmt);\n     }\n \n-    fn fake_read(&mut self, _: &rustc_typeck::expr_use_visitor::PlaceWithHirId<'tcx>, _: FakeReadCause, _: HirId) {}\n+    fn fake_read(&mut self, _: &rustc_hir_analysis::expr_use_visitor::PlaceWithHirId<'tcx>, _: FakeReadCause, _: HirId) {}\n }\n \n pub struct ParamBindingIdCollector {"}, {"sha": "7263abac15dfb96978597c5af32f24a4fb12ad25", "filename": "src/tools/clippy/tests/ui/transmutes_expressible_as_ptr_casts.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ftransmutes_expressible_as_ptr_casts.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ftransmutes_expressible_as_ptr_casts.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ftransmutes_expressible_as_ptr_casts.fixed?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -8,7 +8,7 @@\n \n use std::mem::{size_of, transmute};\n \n-// rustc_typeck::check::cast contains documentation about when a cast `e as U` is\n+// rustc_hir_analysis::check::cast contains documentation about when a cast `e as U` is\n // valid, which we quote from below.\n fn main() {\n     // We should see an error message for each transmute, and no error messages for"}, {"sha": "d8e4421d4c18e2a3743100bc15e037d3b8525e24", "filename": "src/tools/clippy/tests/ui/transmutes_expressible_as_ptr_casts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ftransmutes_expressible_as_ptr_casts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ftransmutes_expressible_as_ptr_casts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ftransmutes_expressible_as_ptr_casts.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -8,7 +8,7 @@\n \n use std::mem::{size_of, transmute};\n \n-// rustc_typeck::check::cast contains documentation about when a cast `e as U` is\n+// rustc_hir_analysis::check::cast contains documentation about when a cast `e as U` is\n // valid, which we quote from below.\n fn main() {\n     // We should see an error message for each transmute, and no error messages for"}, {"sha": "e106c4c2cfd6a2f5105c58e47429297514145a99", "filename": "src/tools/rust-analyzer/crates/hir-ty/src/autoderef.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Frust-analyzer%2Fcrates%2Fhir-ty%2Fsrc%2Fautoderef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Frust-analyzer%2Fcrates%2Fhir-ty%2Fsrc%2Fautoderef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frust-analyzer%2Fcrates%2Fhir-ty%2Fsrc%2Fautoderef.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -1,7 +1,7 @@\n //! In certain situations, rust automatically inserts derefs as necessary: for\n //! example, field accesses `foo.bar` still work when `foo` is actually a\n //! reference to a type with the field `bar`. This is an approximation of the\n-//! logic in rustc (which lives in librustc_typeck/check/autoderef.rs).\n+//! logic in rustc (which lives in rustc_hir_analysis/check/autoderef.rs).\n \n use std::sync::Arc;\n "}, {"sha": "9dbeba4f9f48f900bf0afd09ef9ba2e11522e667", "filename": "src/tools/rust-analyzer/crates/hir-ty/src/infer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Frust-analyzer%2Fcrates%2Fhir-ty%2Fsrc%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Frust-analyzer%2Fcrates%2Fhir-ty%2Fsrc%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frust-analyzer%2Fcrates%2Fhir-ty%2Fsrc%2Finfer.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -2,7 +2,7 @@\n //! the type of each expression and pattern.\n //!\n //! For type inference, compare the implementations in rustc (the various\n-//! check_* methods in librustc_typeck/check/mod.rs are a good entry point) and\n+//! check_* methods in rustc_hir_analysis/check/mod.rs are a good entry point) and\n //! IntelliJ-Rust (org.rust.lang.core.types.infer). Our entry point for\n //! inference here is the `infer` function, which infers the types of all\n //! expressions in a given function."}, {"sha": "8df25c83c6eb7d5b35a910881403186861be2a11", "filename": "src/tools/rust-analyzer/crates/hir-ty/src/infer/coerce.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Frust-analyzer%2Fcrates%2Fhir-ty%2Fsrc%2Finfer%2Fcoerce.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Frust-analyzer%2Fcrates%2Fhir-ty%2Fsrc%2Finfer%2Fcoerce.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frust-analyzer%2Fcrates%2Fhir-ty%2Fsrc%2Finfer%2Fcoerce.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -3,7 +3,7 @@\n //! like going from `&Vec<T>` to `&[T]`.\n //!\n //! See <https://doc.rust-lang.org/nomicon/coercions.html> and\n-//! `librustc_typeck/check/coercion.rs`.\n+//! `rustc_hir_analysis/check/coercion.rs`.\n \n use std::{iter, sync::Arc};\n "}, {"sha": "cc21990d5537186fb89d0d4abc92737c0e702838", "filename": "src/tools/rust-analyzer/crates/hir-ty/src/method_resolution.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Frust-analyzer%2Fcrates%2Fhir-ty%2Fsrc%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57ee5cf5a93923dae9c98bffb11545fc3a31368d/src%2Ftools%2Frust-analyzer%2Fcrates%2Fhir-ty%2Fsrc%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frust-analyzer%2Fcrates%2Fhir-ty%2Fsrc%2Fmethod_resolution.rs?ref=57ee5cf5a93923dae9c98bffb11545fc3a31368d", "patch": "@@ -1,7 +1,7 @@\n //! This module is concerned with finding methods that a given type provides.\n //! For details about how this works in rustc, see the method lookup page in the\n //! [rustc guide](https://rust-lang.github.io/rustc-guide/method-lookup.html)\n-//! and the corresponding code mostly in librustc_typeck/check/method/probe.rs.\n+//! and the corresponding code mostly in rustc_hir_analysis/check/method/probe.rs.\n use std::{iter, ops::ControlFlow, sync::Arc};\n \n use arrayvec::ArrayVec;"}]}