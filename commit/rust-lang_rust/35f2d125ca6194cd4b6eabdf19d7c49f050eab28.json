{"sha": "35f2d125ca6194cd4b6eabdf19d7c49f050eab28", "node_id": "C_kwDOAAsO6NoAKDM1ZjJkMTI1Y2E2MTk0Y2Q0YjZlYWJkZjE5ZDdjNDlmMDUwZWFiMjg", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-08-23T15:10:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-23T15:10:04Z"}, "message": "Rollup merge of #100768 - Facel3ss1:plugin-impl-translation, r=davidtwco\n\nMigrate `rustc_plugin_impl` to `SessionDiagnostic`\n\nMigration of the `rustc_plugin_impl` crate.\n~Draft PR because it is blocked on #100694 for `#[fatal(...)]` support~ (this has been merged, and I've changed over to `#[diag(...)]` now too), but I would also like to know if what I did with `LoadPluginError` is okay, because all it does is display the error message from `libloading` ([See conversation on zulip](https://rust-lang.zulipchat.com/#narrow/stream/147480-t-compiler.2Fwg-diagnostics/topic/.23100717.20diagnostic.20translation/near/294327843)). This crate is apparently for a deprecated feature which is used by servo, so I don't know how much this matters anyway.", "tree": {"sha": "0c1319a576dec756e8fc7b234b9c76aa8470335f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c1319a576dec756e8fc7b234b9c76aa8470335f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35f2d125ca6194cd4b6eabdf19d7c49f050eab28", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjBO3MCRBK7hj4Ov3rIwAAqPUIAJvAhn0bK1v3E56U3YhJqf+W\nCBUWcUAlTnMPB+42nyU9Sw1RMpuZFEk2kDQ6rm7yQGQXAEVbSYTvV4VkMbysg46J\n8te6Fm+94ihKx51SuieWCb6hQaUXeOXABepYkTIQ4ltWiSngdnmymLuPOEx9deL7\nM8608ET6q/NXE2w0pOYCSbaAoZmPqjNFHPXfErLqDxwSWr2tCeKezrHX9IimiuoY\nK/z22VxvYMIsRmrhd0jNVO2K2zE9QFe8XExTAXZsx2pWo2WX33uGfNIZ8stFXV1d\nJr7Hb/7TlwsMUkRpKS6otY3iV5iOPUn27UuAyThmcQiJpt0BI2T3utPCkXw/PhY=\n=aC1Y\n-----END PGP SIGNATURE-----\n", "payload": "tree 0c1319a576dec756e8fc7b234b9c76aa8470335f\nparent f42cdf76e16693b5d5e677a41dd31c7d5cc42a14\nparent 8c2413c4c609127db344044d6740c9de03aa7ce2\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1661267404 +0530\ncommitter GitHub <noreply@github.com> 1661267404 +0530\n\nRollup merge of #100768 - Facel3ss1:plugin-impl-translation, r=davidtwco\n\nMigrate `rustc_plugin_impl` to `SessionDiagnostic`\n\nMigration of the `rustc_plugin_impl` crate.\n~Draft PR because it is blocked on #100694 for `#[fatal(...)]` support~ (this has been merged, and I've changed over to `#[diag(...)]` now too), but I would also like to know if what I did with `LoadPluginError` is okay, because all it does is display the error message from `libloading` ([See conversation on zulip](https://rust-lang.zulipchat.com/#narrow/stream/147480-t-compiler.2Fwg-diagnostics/topic/.23100717.20diagnostic.20translation/near/294327843)). This crate is apparently for a deprecated feature which is used by servo, so I don't know how much this matters anyway.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35f2d125ca6194cd4b6eabdf19d7c49f050eab28", "html_url": "https://github.com/rust-lang/rust/commit/35f2d125ca6194cd4b6eabdf19d7c49f050eab28", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35f2d125ca6194cd4b6eabdf19d7c49f050eab28/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f42cdf76e16693b5d5e677a41dd31c7d5cc42a14", "url": "https://api.github.com/repos/rust-lang/rust/commits/f42cdf76e16693b5d5e677a41dd31c7d5cc42a14", "html_url": "https://github.com/rust-lang/rust/commit/f42cdf76e16693b5d5e677a41dd31c7d5cc42a14"}, {"sha": "8c2413c4c609127db344044d6740c9de03aa7ce2", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c2413c4c609127db344044d6740c9de03aa7ce2", "html_url": "https://github.com/rust-lang/rust/commit/8c2413c4c609127db344044d6740c9de03aa7ce2"}], "stats": {"total": 46, "additions": 35, "deletions": 11}, "files": [{"sha": "9d91dcde9b4138e685b543f1dbeefe5c73238171", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/35f2d125ca6194cd4b6eabdf19d7c49f050eab28/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/35f2d125ca6194cd4b6eabdf19d7c49f050eab28/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=35f2d125ca6194cd4b6eabdf19d7c49f050eab28", "patch": "@@ -4321,6 +4321,7 @@ dependencies = [\n  \"rustc_ast\",\n  \"rustc_errors\",\n  \"rustc_lint\",\n+ \"rustc_macros\",\n  \"rustc_metadata\",\n  \"rustc_session\",\n  \"rustc_span\","}, {"sha": "8db32a42c1deac0c1a01520c4e0cfe607c85b028", "filename": "compiler/rustc_error_messages/locales/en-US/plugin_impl.ftl", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/35f2d125ca6194cd4b6eabdf19d7c49f050eab28/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fplugin_impl.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/35f2d125ca6194cd4b6eabdf19d7c49f050eab28/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fplugin_impl.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fplugin_impl.ftl?ref=35f2d125ca6194cd4b6eabdf19d7c49f050eab28", "patch": "@@ -0,0 +1,4 @@\n+plugin_impl_load_plugin_error = {$msg}\n+\n+plugin_impl_malformed_plugin_attribute = malformed `plugin` attribute\n+    .label = malformed attribute"}, {"sha": "3e66d12bb37ecdd0c0f8b28526bc622251fe2e20", "filename": "compiler/rustc_error_messages/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/35f2d125ca6194cd4b6eabdf19d7c49f050eab28/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35f2d125ca6194cd4b6eabdf19d7c49f050eab28/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs?ref=35f2d125ca6194cd4b6eabdf19d7c49f050eab28", "patch": "@@ -41,6 +41,7 @@ fluent_messages! {\n     lint => \"../locales/en-US/lint.ftl\",\n     parser => \"../locales/en-US/parser.ftl\",\n     passes => \"../locales/en-US/passes.ftl\",\n+    plugin_impl => \"../locales/en-US/plugin_impl.ftl\",\n     privacy => \"../locales/en-US/privacy.ftl\",\n     typeck => \"../locales/en-US/typeck.ftl\",\n }"}, {"sha": "c409b6c3e5440716e5512b3c8acb9d24071932d2", "filename": "compiler/rustc_plugin_impl/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/35f2d125ca6194cd4b6eabdf19d7c49f050eab28/compiler%2Frustc_plugin_impl%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/35f2d125ca6194cd4b6eabdf19d7c49f050eab28/compiler%2Frustc_plugin_impl%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_plugin_impl%2FCargo.toml?ref=35f2d125ca6194cd4b6eabdf19d7c49f050eab28", "patch": "@@ -11,6 +11,7 @@ doctest = false\n libloading = \"0.7.1\"\n rustc_errors = { path = \"../rustc_errors\" }\n rustc_lint = { path = \"../rustc_lint\" }\n+rustc_macros = { path = \"../rustc_macros\" }\n rustc_metadata = { path = \"../rustc_metadata\" }\n rustc_ast = { path = \"../rustc_ast\" }\n rustc_session = { path = \"../rustc_session\" }"}, {"sha": "2bdb6e4feca9dbb356c7fb36536542be34f81419", "filename": "compiler/rustc_plugin_impl/src/errors.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/35f2d125ca6194cd4b6eabdf19d7c49f050eab28/compiler%2Frustc_plugin_impl%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35f2d125ca6194cd4b6eabdf19d7c49f050eab28/compiler%2Frustc_plugin_impl%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_plugin_impl%2Fsrc%2Ferrors.rs?ref=35f2d125ca6194cd4b6eabdf19d7c49f050eab28", "patch": "@@ -0,0 +1,20 @@\n+//! Errors emitted by plugin_impl\n+\n+use rustc_macros::SessionDiagnostic;\n+use rustc_span::Span;\n+\n+#[derive(SessionDiagnostic)]\n+#[diag(plugin_impl::load_plugin_error)]\n+pub struct LoadPluginError {\n+    #[primary_span]\n+    pub span: Span,\n+    pub msg: String,\n+}\n+\n+#[derive(SessionDiagnostic)]\n+#[diag(plugin_impl::malformed_plugin_attribute, code = \"E0498\")]\n+pub struct MalformedPluginAttribute {\n+    #[primary_span]\n+    #[label]\n+    pub span: Span,\n+}"}, {"sha": "9ac27c65da82e3f504ad78e495ef79a6665ef191", "filename": "compiler/rustc_plugin_impl/src/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/35f2d125ca6194cd4b6eabdf19d7c49f050eab28/compiler%2Frustc_plugin_impl%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35f2d125ca6194cd4b6eabdf19d7c49f050eab28/compiler%2Frustc_plugin_impl%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_plugin_impl%2Fsrc%2Flib.rs?ref=35f2d125ca6194cd4b6eabdf19d7c49f050eab28", "patch": "@@ -8,9 +8,12 @@\n \n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/nightly-rustc/\")]\n #![recursion_limit = \"256\"]\n+#![deny(rustc::untranslatable_diagnostic)]\n+#![deny(rustc::diagnostic_outside_of_impl)]\n \n use rustc_lint::LintStore;\n \n+mod errors;\n pub mod load;\n \n /// Structure used to register plugins."}, {"sha": "8e75e969ae032064d832dfb6eda2164c3078c752", "filename": "compiler/rustc_plugin_impl/src/load.rs", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/35f2d125ca6194cd4b6eabdf19d7c49f050eab28/compiler%2Frustc_plugin_impl%2Fsrc%2Fload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35f2d125ca6194cd4b6eabdf19d7c49f050eab28/compiler%2Frustc_plugin_impl%2Fsrc%2Fload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_plugin_impl%2Fsrc%2Fload.rs?ref=35f2d125ca6194cd4b6eabdf19d7c49f050eab28", "patch": "@@ -1,29 +1,21 @@\n //! Used by `rustc` when loading a plugin.\n \n+use crate::errors::{LoadPluginError, MalformedPluginAttribute};\n use crate::Registry;\n use libloading::Library;\n use rustc_ast::Crate;\n-use rustc_errors::struct_span_err;\n use rustc_metadata::locator;\n use rustc_session::cstore::MetadataLoader;\n use rustc_session::Session;\n use rustc_span::symbol::{sym, Ident};\n-use rustc_span::Span;\n \n-use std::borrow::ToOwned;\n use std::env;\n use std::mem;\n use std::path::PathBuf;\n \n /// Pointer to a registrar function.\n type PluginRegistrarFn = fn(&mut Registry<'_>);\n \n-fn call_malformed_plugin_attribute(sess: &Session, span: Span) {\n-    struct_span_err!(sess, span, E0498, \"malformed `plugin` attribute\")\n-        .span_label(span, \"malformed attribute\")\n-        .emit();\n-}\n-\n /// Read plugin metadata and dynamically load registrar functions.\n pub fn load_plugins(\n     sess: &Session,\n@@ -42,7 +34,9 @@ pub fn load_plugins(\n                 Some(ident) if plugin.is_word() => {\n                     load_plugin(&mut plugins, sess, metadata_loader, ident)\n                 }\n-                _ => call_malformed_plugin_attribute(sess, plugin.span()),\n+                _ => {\n+                    sess.emit_err(MalformedPluginAttribute { span: plugin.span() });\n+                }\n             }\n         }\n     }\n@@ -60,7 +54,7 @@ fn load_plugin(\n     let fun = dylink_registrar(lib).unwrap_or_else(|err| {\n         // This is fatal: there are almost certainly macros we need inside this crate, so\n         // continuing would spew \"macro undefined\" errors.\n-        sess.span_fatal(ident.span, &err.to_string());\n+        sess.emit_fatal(LoadPluginError { span: ident.span, msg: err.to_string() });\n     });\n     plugins.push(fun);\n }"}]}