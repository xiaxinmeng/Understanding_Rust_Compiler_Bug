{"sha": "2d8ef7387e737ce1d8ea6f6b9a75626529fff234", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkOGVmNzM4N2U3MzdjZTFkOGVhNmY2YjlhNzU2MjY1MjlmZmYyMzQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-31T01:46:32Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-01T02:51:30Z"}, "message": "rt: Add some more locking asserts to rust_sched_loop", "tree": {"sha": "f90da90d540cde0cc7093c2ad18bc974ff49d569", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f90da90d540cde0cc7093c2ad18bc974ff49d569"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d8ef7387e737ce1d8ea6f6b9a75626529fff234", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d8ef7387e737ce1d8ea6f6b9a75626529fff234", "html_url": "https://github.com/rust-lang/rust/commit/2d8ef7387e737ce1d8ea6f6b9a75626529fff234", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d8ef7387e737ce1d8ea6f6b9a75626529fff234/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8dc6fcb4cd29e5fb6c509149871b869b951295d", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8dc6fcb4cd29e5fb6c509149871b869b951295d", "html_url": "https://github.com/rust-lang/rust/commit/c8dc6fcb4cd29e5fb6c509149871b869b951295d"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "45c8ac6c27592cd7736f3d474a77dafb3df4bbc5", "filename": "src/rt/rust_sched_loop.cpp", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2d8ef7387e737ce1d8ea6f6b9a75626529fff234/src%2Frt%2Frust_sched_loop.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/2d8ef7387e737ce1d8ea6f6b9a75626529fff234/src%2Frt%2Frust_sched_loop.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_sched_loop.cpp?ref=2d8ef7387e737ce1d8ea6f6b9a75626529fff234", "patch": "@@ -44,6 +44,7 @@ rust_sched_loop::rust_sched_loop(rust_scheduler *sched,\n \n void\n rust_sched_loop::activate(rust_task *task) {\n+    lock.must_have_lock();\n     task->ctx.next = &c_context;\n     DLOG(this, task, \"descheduling...\");\n     lock.unlock();\n@@ -147,6 +148,7 @@ rust_sched_loop::release_task(rust_task *task) {\n  */\n rust_task *\n rust_sched_loop::schedule_task() {\n+    lock.must_have_lock();\n     I(this, this);\n     // FIXME: in the face of failing tasks, this is not always right.\n     // I(this, n_live_tasks() > 0);"}]}