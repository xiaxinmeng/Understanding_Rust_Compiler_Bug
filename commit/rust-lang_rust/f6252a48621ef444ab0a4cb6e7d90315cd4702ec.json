{"sha": "f6252a48621ef444ab0a4cb6e7d90315cd4702ec", "node_id": "C_kwDOAAsO6NoAKGY2MjUyYTQ4NjIxZWY0NDRhYjBhNGNiNmU3ZDkwMzE1Y2Q0NzAyZWM", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-08-30T10:06:19Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-08-30T10:06:19Z"}, "message": "remove path string", "tree": {"sha": "2d40e71854d703dd1b164abdc75e61b6c5480611", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d40e71854d703dd1b164abdc75e61b6c5480611"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6252a48621ef444ab0a4cb6e7d90315cd4702ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6252a48621ef444ab0a4cb6e7d90315cd4702ec", "html_url": "https://github.com/rust-lang/rust/commit/f6252a48621ef444ab0a4cb6e7d90315cd4702ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6252a48621ef444ab0a4cb6e7d90315cd4702ec/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0d07093f80a0206f42d3dbada66212eda52b694", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0d07093f80a0206f42d3dbada66212eda52b694", "html_url": "https://github.com/rust-lang/rust/commit/a0d07093f80a0206f42d3dbada66212eda52b694"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "e2b8bdb93eaf97b1c271c0b2e1281e83adb76714", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/f6252a48621ef444ab0a4cb6e7d90315cd4702ec/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6252a48621ef444ab0a4cb6e7d90315cd4702ec/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=f6252a48621ef444ab0a4cb6e7d90315cd4702ec", "patch": "@@ -2044,22 +2044,22 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n             (exp_found.expected.kind(), exp_found.found.kind())\n         {\n             if let ty::Adt(found_def, found_substs) = *found_ty.kind() {\n-                let path_str = format!(\"{:?}\", exp_def);\n                 if exp_def == &found_def {\n-                    let opt_msg = \"you can convert from `&Option<T>` to `Option<&T>` using \\\n-                                       `.as_ref()`\";\n-                    let result_msg = \"you can convert from `&Result<T, E>` to \\\n-                                          `Result<&T, &E>` using `.as_ref()`\";\n                     let have_as_ref = &[\n-                        (\"std::option::Option\", opt_msg),\n-                        (\"core::option::Option\", opt_msg),\n-                        (\"std::result::Result\", result_msg),\n-                        (\"core::result::Result\", result_msg),\n+                        (\n+                            sym::Option,\n+                            \"you can convert from `&Option<T>` to `Option<&T>` using \\\n+                        `.as_ref()`\",\n+                        ),\n+                        (\n+                            sym::Result,\n+                            \"you can convert from `&Result<T, E>` to \\\n+                        `Result<&T, &E>` using `.as_ref()`\",\n+                        ),\n                     ];\n-                    if let Some(msg) = have_as_ref\n-                        .iter()\n-                        .find_map(|(path, msg)| (&path_str == path).then_some(msg))\n-                    {\n+                    if let Some(msg) = have_as_ref.iter().find_map(|(name, msg)| {\n+                        self.tcx.is_diagnostic_item(*name, exp_def.did()).then_some(msg)\n+                    }) {\n                         let mut show_suggestion = true;\n                         for (exp_ty, found_ty) in\n                             iter::zip(exp_substs.types(), found_substs.types())"}]}