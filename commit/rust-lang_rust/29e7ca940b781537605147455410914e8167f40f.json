{"sha": "29e7ca940b781537605147455410914e8167f40f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5ZTdjYTk0MGI3ODE1Mzc2MDUxNDc0NTU0MTA5MTRlODE2N2Y0MGY=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-12-10T11:53:46Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-12-12T14:50:12Z"}, "message": "Add test of current behavior (infer free region within closure body) previously not in test suite.", "tree": {"sha": "d54acee452ae4b06ca378c4ed751213beb2a9908", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d54acee452ae4b06ca378c4ed751213beb2a9908"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29e7ca940b781537605147455410914e8167f40f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29e7ca940b781537605147455410914e8167f40f", "html_url": "https://github.com/rust-lang/rust/commit/29e7ca940b781537605147455410914e8167f40f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29e7ca940b781537605147455410914e8167f40f/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae3833db3b0acd5d7f06cad333e61e21e39be295", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae3833db3b0acd5d7f06cad333e61e21e39be295", "html_url": "https://github.com/rust-lang/rust/commit/ae3833db3b0acd5d7f06cad333e61e21e39be295"}], "stats": {"total": 74, "additions": 74, "deletions": 0}, "files": [{"sha": "24676fe5e5bd9dffbcea74991d93b37f96e53faa", "filename": "src/test/ui/regions/issue-56537-closure-uses-region-from-container.rs", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/29e7ca940b781537605147455410914e8167f40f/src%2Ftest%2Fui%2Fregions%2Fissue-56537-closure-uses-region-from-container.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29e7ca940b781537605147455410914e8167f40f/src%2Ftest%2Fui%2Fregions%2Fissue-56537-closure-uses-region-from-container.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fissue-56537-closure-uses-region-from-container.rs?ref=29e7ca940b781537605147455410914e8167f40f", "patch": "@@ -0,0 +1,74 @@\n+// This is a collection of examples where a function's formal\n+// parameter has an explicit lifetime and a closure within that\n+// function returns that formal parameter. The closure's return type,\n+// to be correctly inferred, needs to include the lifetime introduced\n+// by the function.\n+//\n+// This works today, which precludes changing things so that closures\n+// follow the same lifetime-elision rules used elsehwere. See\n+// rust-lang/rust#56537\n+\n+// compile-pass\n+// We are already testing NLL explicitly via the revision system below.\n+// ignore-compare-mode-nll\n+\n+// revisions: ll nll migrate\n+//[ll] compile-flags:-Zborrowck=ast\n+//[nll] compile-flags:-Zborrowck=mir -Z two-phase-borrows\n+//[migrate] compile-flags:-Zborrowck=migrate -Z two-phase-borrows\n+\n+fn willy_no_annot<'w>(p: &'w str, q: &str) -> &'w str {\n+    let free_dumb = |_x| { p }; // no type annotation at all\n+    let hello = format!(\"Hello\");\n+    free_dumb(&hello)\n+}\n+\n+fn willy_ret_type_annot<'w>(p: &'w str, q: &str) -> &'w str {\n+    let free_dumb = |_x| -> &str { p }; // type annotation on the return type\n+    let hello = format!(\"Hello\");\n+    free_dumb(&hello)\n+}\n+\n+fn willy_ret_region_annot<'w>(p: &'w str, q: &str) -> &'w str {\n+    let free_dumb = |_x| -> &'w str { p }; // type+region annotation on return type\n+    let hello = format!(\"Hello\");\n+    free_dumb(&hello)\n+}\n+\n+fn willy_arg_type_ret_type_annot<'w>(p: &'w str, q: &str) -> &'w str {\n+    let free_dumb = |_x: &str| -> &str { p }; // type annotation on arg and return types\n+    let hello = format!(\"Hello\");\n+    free_dumb(&hello)\n+}\n+\n+fn willy_arg_type_ret_region_annot<'w>(p: &'w str, q: &str) -> &'w str {\n+    let free_dumb = |_x: &str| -> &'w str { p }; // fully annotated\n+    let hello = format!(\"Hello\");\n+    free_dumb(&hello)\n+}\n+\n+fn main() {\n+    let world = format!(\"World\");\n+    let w1: &str = {\n+        let hello = format!(\"He11o\");\n+        willy_no_annot(&world, &hello)\n+    };\n+    let w2: &str = {\n+        let hello = format!(\"He22o\");\n+        willy_ret_type_annot(&world, &hello)\n+    };\n+    let w3: &str = {\n+        let hello = format!(\"He33o\");\n+        willy_ret_region_annot(&world, &hello)\n+    };\n+    let w4: &str = {\n+        let hello = format!(\"He44o\");\n+        willy_arg_type_ret_type_annot(&world, &hello)\n+    };\n+    let w5: &str = {\n+        let hello = format!(\"He55o\");\n+        willy_arg_type_ret_region_annot(&world, &hello)\n+    };\n+    assert_eq!((w1, w2, w3, w4, w5),\n+               (\"World\",\"World\",\"World\",\"World\",\"World\"));\n+}"}]}