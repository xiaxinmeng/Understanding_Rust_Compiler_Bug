{"sha": "722706fe41e556530bd9b49c8afa8c7ade577919", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyMjcwNmZlNDFlNTU2NTMwYmQ5YjQ5YzhhZmE4YzdhZGU1Nzc5MTk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-09-15T23:12:53Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-09-15T23:12:53Z"}, "message": "get rid of commandspeck", "tree": {"sha": "1b2bab8ff925ea9c23350bea9a6b3698ede79fca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b2bab8ff925ea9c23350bea9a6b3698ede79fca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/722706fe41e556530bd9b49c8afa8c7ade577919", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/722706fe41e556530bd9b49c8afa8c7ade577919", "html_url": "https://github.com/rust-lang/rust/commit/722706fe41e556530bd9b49c8afa8c7ade577919", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/722706fe41e556530bd9b49c8afa8c7ade577919/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3993bb4de95af407e5edc1fe551bec0f001a3f0f", "url": "https://api.github.com/repos/rust-lang/rust/commits/3993bb4de95af407e5edc1fe551bec0f001a3f0f", "html_url": "https://github.com/rust-lang/rust/commit/3993bb4de95af407e5edc1fe551bec0f001a3f0f"}], "stats": {"total": 43, "additions": 21, "deletions": 22}, "files": [{"sha": "d03910986f97a15706ab3cd1a767a71f41a63c85", "filename": "crates/tools/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/722706fe41e556530bd9b49c8afa8c7ade577919/crates%2Ftools%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/722706fe41e556530bd9b49c8afa8c7ade577919/crates%2Ftools%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftools%2FCargo.toml?ref=722706fe41e556530bd9b49c8afa8c7ade577919", "patch": "@@ -11,5 +11,4 @@ itertools = \"0.7.8\"\n tera = \"0.11\"\n clap = \"2.32.0\"\n failure = \"0.1.1\"\n-commandspec = \"0.10\"\n heck = \"0.3.0\""}, {"sha": "3f9caa4be608dc60b0437a61840c7497a6d8eade", "filename": "crates/tools/src/main.rs", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/722706fe41e556530bd9b49c8afa8c7ade577919/crates%2Ftools%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/722706fe41e556530bd9b49c8afa8c7ade577919/crates%2Ftools%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftools%2Fsrc%2Fmain.rs?ref=722706fe41e556530bd9b49c8afa8c7ade577919", "patch": "@@ -5,8 +5,6 @@ extern crate ron;\n extern crate tera;\n extern crate tools;\n extern crate walkdir;\n-#[macro_use]\n-extern crate commandspec;\n extern crate heck;\n \n use clap::{App, Arg, SubCommand};\n@@ -15,6 +13,7 @@ use std::{\n     collections::HashMap,\n     fs,\n     path::{Path, PathBuf},\n+    process::Command,\n };\n use tools::{collect_tests, Test};\n \n@@ -191,24 +190,25 @@ fn existing_tests(dir: &Path) -> Result<HashMap<String, (PathBuf, Test)>> {\n }\n \n fn install_code_extension() -> Result<()> {\n-    execute!(r\"cargo install --path crates/server --force\")?;\n-    execute!(\n-        r\"\n-cd code\n-npm install\n-    \"\n-    )?;\n-    execute!(\n-        r\"\n-cd code\n-./node_modules/vsce/out/vsce package\n-    \"\n-    )?;\n-    execute!(\n-        r\"\n-cd code\n-code --install-extension ./rcf-lsp-0.0.1.vsix\n-    \"\n-    )?;\n+    run(\"cargo install --path crates/server --force\", \".\")?;\n+    run(r\"npm install\", \"./code\")?;\n+    run(r\"./node_modules/vsce/out/vsce package\", \"./code\")?;\n+    run(r\"code --install-extension ./rcf-lsp-0.0.1.vsix\", \"./code\")?;\n+    Ok(())\n+}\n+\n+fn run(cmdline: &'static str, dir: &str) -> Result<()> {\n+    eprintln!(\"\\nwill run: {}\", cmdline);\n+    let manifest_dir = env!(\"CARGO_MANIFEST_DIR\");\n+    let project_dir = Path::new(manifest_dir).ancestors().nth(2).unwrap().join(dir);\n+    let mut args = cmdline.split_whitespace();\n+    let exec = args.next().unwrap();\n+    let status = Command::new(exec)\n+        .args(args)\n+        .current_dir(project_dir)\n+        .status()?;\n+    if !status.success() {\n+        bail!(\"`{}` exited with {}\", cmdline, status);\n+    }\n     Ok(())\n }"}]}