{"sha": "e0a60e71d7aab59858f62a16fce52ba35aeafc28", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwYTYwZTcxZDdhYWI1OTg1OGY2MmExNmZjZTUyYmEzNWFlYWZjMjg=", "commit": {"author": {"name": "unexge", "email": "unexge@gmail.com", "date": "2021-04-21T07:57:36Z"}, "committer": {"name": "unexge", "email": "unexge@gmail.com", "date": "2021-04-21T07:57:36Z"}, "message": "Add larger example for \"Convert to named struct\" assist", "tree": {"sha": "759e3149a0f63017fac8374f9b763fb931f517fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/759e3149a0f63017fac8374f9b763fb931f517fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0a60e71d7aab59858f62a16fce52ba35aeafc28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0a60e71d7aab59858f62a16fce52ba35aeafc28", "html_url": "https://github.com/rust-lang/rust/commit/e0a60e71d7aab59858f62a16fce52ba35aeafc28", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0a60e71d7aab59858f62a16fce52ba35aeafc28/comments", "author": {"login": "unexge", "id": 16212576, "node_id": "MDQ6VXNlcjE2MjEyNTc2", "avatar_url": "https://avatars.githubusercontent.com/u/16212576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unexge", "html_url": "https://github.com/unexge", "followers_url": "https://api.github.com/users/unexge/followers", "following_url": "https://api.github.com/users/unexge/following{/other_user}", "gists_url": "https://api.github.com/users/unexge/gists{/gist_id}", "starred_url": "https://api.github.com/users/unexge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unexge/subscriptions", "organizations_url": "https://api.github.com/users/unexge/orgs", "repos_url": "https://api.github.com/users/unexge/repos", "events_url": "https://api.github.com/users/unexge/events{/privacy}", "received_events_url": "https://api.github.com/users/unexge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "unexge", "id": 16212576, "node_id": "MDQ6VXNlcjE2MjEyNTc2", "avatar_url": "https://avatars.githubusercontent.com/u/16212576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unexge", "html_url": "https://github.com/unexge", "followers_url": "https://api.github.com/users/unexge/followers", "following_url": "https://api.github.com/users/unexge/following{/other_user}", "gists_url": "https://api.github.com/users/unexge/gists{/gist_id}", "starred_url": "https://api.github.com/users/unexge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unexge/subscriptions", "organizations_url": "https://api.github.com/users/unexge/orgs", "repos_url": "https://api.github.com/users/unexge/repos", "events_url": "https://api.github.com/users/unexge/events{/privacy}", "received_events_url": "https://api.github.com/users/unexge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53599d11f6fec625bef69aeb699e657cfc37c310", "url": "https://api.github.com/repos/rust-lang/rust/commits/53599d11f6fec625bef69aeb699e657cfc37c310", "html_url": "https://github.com/rust-lang/rust/commit/53599d11f6fec625bef69aeb699e657cfc37c310"}], "stats": {"total": 68, "additions": 60, "deletions": 8}, "files": [{"sha": "ee6ddfbc6012d60a6cab2c3b85642123907e177d", "filename": "crates/ide_assists/src/handlers/convert_tuple_struct_to_named_struct.rs", "status": "modified", "additions": 30, "deletions": 4, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/e0a60e71d7aab59858f62a16fce52ba35aeafc28/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fconvert_tuple_struct_to_named_struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0a60e71d7aab59858f62a16fce52ba35aeafc28/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fconvert_tuple_struct_to_named_struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fconvert_tuple_struct_to_named_struct.rs?ref=e0a60e71d7aab59858f62a16fce52ba35aeafc28", "patch": "@@ -12,13 +12,39 @@ use crate::{assist_context::AssistBuilder, AssistContext, AssistId, AssistKind,\n // Converts tuple struct to struct with named fields.\n //\n // ```\n-// struct Inner;\n-// struct A$0(Inner);\n+// struct Point$0(f32, f32);\n+//\n+// impl Point {\n+//     pub fn new(x: f32, y: f32) -> Self {\n+//         Point(x, y)\n+//     }\n+//\n+//     pub fn x(&self) -> f32 {\n+//         self.0\n+//     }\n+//\n+//     pub fn y(&self) -> f32 {\n+//         self.1\n+//     }\n+// }\n // ```\n // ->\n // ```\n-// struct Inner;\n-// struct A { field1: Inner }\n+// struct Point { field1: f32, field2: f32 }\n+//\n+// impl Point {\n+//     pub fn new(x: f32, y: f32) -> Self {\n+//         Point { field1: x, field2: y }\n+//     }\n+//\n+//     pub fn x(&self) -> f32 {\n+//         self.field1\n+//     }\n+//\n+//     pub fn y(&self) -> f32 {\n+//         self.field2\n+//     }\n+// }\n // ```\n pub(crate) fn convert_tuple_struct_to_named_struct(\n     acc: &mut Assists,"}, {"sha": "f4a4749c80669d7a3dd270112d5ddc6b16063915", "filename": "crates/ide_assists/src/tests/generated.rs", "status": "modified", "additions": 30, "deletions": 4, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/e0a60e71d7aab59858f62a16fce52ba35aeafc28/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0a60e71d7aab59858f62a16fce52ba35aeafc28/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs?ref=e0a60e71d7aab59858f62a16fce52ba35aeafc28", "patch": "@@ -296,12 +296,38 @@ fn doctest_convert_tuple_struct_to_named_struct() {\n     check_doc_test(\n         \"convert_tuple_struct_to_named_struct\",\n         r#####\"\n-struct Inner;\n-struct A$0(Inner);\n+struct Point$0(f32, f32);\n+\n+impl Point {\n+    pub fn new(x: f32, y: f32) -> Self {\n+        Point(x, y)\n+    }\n+\n+    pub fn x(&self) -> f32 {\n+        self.0\n+    }\n+\n+    pub fn y(&self) -> f32 {\n+        self.1\n+    }\n+}\n \"#####,\n         r#####\"\n-struct Inner;\n-struct A { field1: Inner }\n+struct Point { field1: f32, field2: f32 }\n+\n+impl Point {\n+    pub fn new(x: f32, y: f32) -> Self {\n+        Point { field1: x, field2: y }\n+    }\n+\n+    pub fn x(&self) -> f32 {\n+        self.field1\n+    }\n+\n+    pub fn y(&self) -> f32 {\n+        self.field2\n+    }\n+}\n \"#####,\n     )\n }"}]}