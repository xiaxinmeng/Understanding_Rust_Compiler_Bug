{"sha": "d547de998d33e5b688533f4159ea997c940d9431", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1NDdkZTk5OGQzM2U1YjY4ODUzM2Y0MTU5ZWE5OTdjOTQwZDk0MzE=", "commit": {"author": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2014-05-14T21:57:27Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-05-15T20:50:29Z"}, "message": "Make Vec.truncate() resilient against failure in Drop\n\nIf a vector element fails in Drop, Vec needs to make sure it doesn't try\nto re-drop any elements it already dropped.", "tree": {"sha": "d2c3c712bb14cda67dbecb92d7d25858fe3a3dab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2c3c712bb14cda67dbecb92d7d25858fe3a3dab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d547de998d33e5b688533f4159ea997c940d9431", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d547de998d33e5b688533f4159ea997c940d9431", "html_url": "https://github.com/rust-lang/rust/commit/d547de998d33e5b688533f4159ea997c940d9431", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d547de998d33e5b688533f4159ea997c940d9431/comments", "author": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4bcc4d76a049a50474764383889e4ede9388da9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bcc4d76a049a50474764383889e4ede9388da9f", "html_url": "https://github.com/rust-lang/rust/commit/4bcc4d76a049a50474764383889e4ede9388da9f"}], "stats": {"total": 45, "additions": 40, "deletions": 5}, "files": [{"sha": "57f8d78948fa0ac5faab057f25693e42daf2c9c4", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 40, "deletions": 5, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/d547de998d33e5b688533f4159ea997c940d9431/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d547de998d33e5b688533f4159ea997c940d9431/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=d547de998d33e5b688533f4159ea997c940d9431", "patch": "@@ -635,14 +635,14 @@ impl<T> Vec<T> {\n     /// ```\n     pub fn truncate(&mut self, len: uint) {\n         unsafe {\n-            let mut i = len;\n             // drop any extra elements\n-            while i < self.len {\n-                ptr::read(self.as_slice().unsafe_ref(i));\n-                i += 1;\n+            while len < self.len {\n+                // decrement len before the read(), so a failure on Drop doesn't\n+                // re-drop the just-failed value.\n+                self.len -= 1;\n+                ptr::read(self.as_slice().unsafe_ref(self.len));\n             }\n         }\n-        self.len = len;\n     }\n \n     /// Work with `self` as a mutable slice.\n@@ -1862,4 +1862,39 @@ mod tests {\n         assert_eq!(b[0].x, 42);\n         assert_eq!(b[1].x, 84);\n     }\n+\n+    #[test]\n+    fn test_vec_truncate_drop() {\n+        static mut drops: uint = 0;\n+        struct Elem(int);\n+        impl Drop for Elem {\n+            fn drop(&mut self) {\n+                unsafe { drops += 1; }\n+            }\n+        }\n+\n+        let mut v = vec![Elem(1), Elem(2), Elem(3), Elem(4), Elem(5)];\n+        assert_eq!(unsafe { drops }, 0);\n+        v.truncate(3);\n+        assert_eq!(unsafe { drops }, 2);\n+        v.truncate(0);\n+        assert_eq!(unsafe { drops }, 5);\n+    }\n+\n+    #[test]\n+    #[should_fail]\n+    fn test_vec_truncate_fail() {\n+        struct BadElem(int);\n+        impl Drop for BadElem {\n+            fn drop(&mut self) {\n+                let BadElem(ref mut x) = *self;\n+                if *x == 0xbadbeef {\n+                    fail!(\"BadElem failure: 0xbadbeef\")\n+                }\n+            }\n+        }\n+\n+        let mut v = vec![BadElem(1), BadElem(2), BadElem(0xbadbeef), BadElem(4)];\n+        v.truncate(0);\n+    }\n }"}]}