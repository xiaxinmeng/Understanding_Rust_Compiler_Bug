{"sha": "b0ef791496d22201e33bb06864c66f82db27a358", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwZWY3OTE0OTZkMjIyMDFlMzNiYjA2ODY0YzY2ZjgyZGIyN2EzNTg=", "commit": {"author": {"name": "Flavio Percoco", "email": "flaper87@gmail.com", "date": "2014-02-09T12:44:10Z"}, "committer": {"name": "Flavio Percoco", "email": "flaper87@gmail.com", "date": "2014-02-09T18:46:44Z"}, "message": "Make `if` and `while` conditions temporary\n\nCloses #12033", "tree": {"sha": "01ef24fccf9409b7090732e83112c2af6dcdec09", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01ef24fccf9409b7090732e83112c2af6dcdec09"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b0ef791496d22201e33bb06864c66f82db27a358", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b0ef791496d22201e33bb06864c66f82db27a358", "html_url": "https://github.com/rust-lang/rust/commit/b0ef791496d22201e33bb06864c66f82db27a358", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b0ef791496d22201e33bb06864c66f82db27a358/comments", "author": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49ac48db3fe2666751908668ba8e5ab16e2fb07a", "url": "https://api.github.com/repos/rust-lang/rust/commits/49ac48db3fe2666751908668ba8e5ab16e2fb07a", "html_url": "https://github.com/rust-lang/rust/commit/49ac48db3fe2666751908668ba8e5ab16e2fb07a"}], "stats": {"total": 61, "additions": 58, "deletions": 3}, "files": [{"sha": "232b35bb82afce3412d2215a3e143e228a3521f8", "filename": "src/librustc/middle/region.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b0ef791496d22201e33bb06864c66f82db27a358/src%2Flibrustc%2Fmiddle%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0ef791496d22201e33bb06864c66f82db27a358/src%2Flibrustc%2Fmiddle%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fregion.rs?ref=b0ef791496d22201e33bb06864c66f82db27a358", "patch": "@@ -501,12 +501,17 @@ fn resolve_expr(visitor: &mut RegionResolutionVisitor,\n             visitor.region_maps.mark_as_terminating_scope(otherwise.id);\n         }\n \n-        ast::ExprIf(_, then, None) => {\n+        ast::ExprIf(expr, then, None) => {\n+            visitor.region_maps.mark_as_terminating_scope(expr.id);\n             visitor.region_maps.mark_as_terminating_scope(then.id);\n         }\n \n-        ast::ExprLoop(body, _) |\n-        ast::ExprWhile(_, body) => {\n+        ast::ExprLoop(body, _) => {\n+            visitor.region_maps.mark_as_terminating_scope(body.id);\n+        }\n+\n+        ast::ExprWhile(expr, body) => {\n+            visitor.region_maps.mark_as_terminating_scope(expr.id);\n             visitor.region_maps.mark_as_terminating_scope(body.id);\n         }\n "}, {"sha": "1985970b1071cf7522b4336cf42d29c26dee21a4", "filename": "src/test/run-pass/temporary-lifetime-for-conditions.rs", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/b0ef791496d22201e33bb06864c66f82db27a358/src%2Ftest%2Frun-pass%2Ftemporary-lifetime-for-conditions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0ef791496d22201e33bb06864c66f82db27a358/src%2Ftest%2Frun-pass%2Ftemporary-lifetime-for-conditions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftemporary-lifetime-for-conditions.rs?ref=b0ef791496d22201e33bb06864c66f82db27a358", "patch": "@@ -0,0 +1,50 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+\n+// This test verifies that temporaries created for `while`'s\n+// and `if` conditions are correctly cleaned up.\n+\n+struct Temporary;\n+\n+static mut DROPPED: int = 0;\n+\n+impl Drop for Temporary {\n+    fn drop(&mut self) {\n+        unsafe { DROPPED += 1; }\n+    }\n+}\n+\n+impl Temporary {\n+    fn do(&self) -> bool {true}\n+}\n+\n+fn borrow() -> ~Temporary { ~Temporary }\n+\n+\n+pub fn main() {\n+    let mut i = 0;\n+\n+    // This loop's condition\n+    // should call `Temporary`'s\n+    // `drop` 6 times.\n+    while borrow().do() {\n+        i += 1;\n+        if i > 5 {\n+            break;\n+        }\n+    }\n+\n+    // This if condition should\n+    // call it 1 time\n+    if borrow().do() {\n+        unsafe { assert_eq!(DROPPED, 7) }\n+    }\n+}"}]}