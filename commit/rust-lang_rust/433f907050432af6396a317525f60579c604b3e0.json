{"sha": "433f907050432af6396a317525f60579c604b3e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzM2Y5MDcwNTA0MzJhZjYzOTZhMzE3NTI1ZjYwNTc5YzYwNGIzZTA=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-05-09T19:50:22Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-05-09T21:59:44Z"}, "message": "Rollup merge of #33514 - birkenfeld:issue-29503, r=alexcrichton\n\nrustdoc: do not strip blanket impls in crate of origin\n\nIn `impl<T> Trait for T`, the blanket type parameters `T` were recognized as \"local\" and \"not exported\", so these impls were thrown out.\n\nNow we check if they are generic, and keep them in that case.\n\nFixes: #29503", "tree": {"sha": "b35a16896654d95a6a0474c6c80f3a14e47d7cd8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b35a16896654d95a6a0474c6c80f3a14e47d7cd8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/433f907050432af6396a317525f60579c604b3e0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXMQhQAAoJEDu/TT4u95+YDHcQANiOWuuORxlP6PI1o2DSKLjQ\ndSkfENuneTdEbiPfZQZaHftDoAaoGe0ZZireCoP1bEnbOxnu8gCFX04Bnz3Fmr5C\nv7Uu5gbdz2DV8m09tzWkFUUloko/MER/HbDX5p3p9lzB/7Sdt6s4fEeOz8dL+ZCQ\nRfrfrIZMdM3vJdAFucVQX2eclEbXvZI0eGAy2LSTfxyzu8X51YqZEBXznbQmT751\nf9dh7i3mgq16m9STQIn1qM1Eo/leJlxGxEQm0iFj6L3rfwZqFinCRkwzLNVyPvSF\nKT75a67nfPflk+fRLnCH6OgYpwU9YpzcIj7BHX+WyL3RXW24pIAQz1doF4L0lqui\nDk288pXhPCapqifI3Fpnp9I6iIrW0/asBENf6uxlRrGYpLQ3n2ofFvU7UgP0GASd\ntpMO0rQ5a2NqX3HyG63No4AFBu1juKsQwj9Pnhi5oB9vluczwyAF/ewy9IfjIuWx\nEHK2EHRawjaI3BhVCvm4MDMcHUSPbi5tzGD2x2+osgGUQ4ABjrnv5oFJf74rVLsT\nh64h1VgqMpzAc0cF2ky/HYByEvhU2mYV0Stw1Jp0HSF7kVUIsSHt5antp03pCtDQ\nks5H9udK4NQc/++hRuADLRO9OXsrqp6o87DXdYYMQ1ay6RStkoljM9ZwYVTvV7hV\nHHQ3/u8V7DB8/1GK5RDb\n=h8KD\n-----END PGP SIGNATURE-----", "payload": "tree b35a16896654d95a6a0474c6c80f3a14e47d7cd8\nparent fb382df1f8e9f7124659f4cdb02f0ab311ea02b4\nparent 6100b70b98ee090c9b8e7b4788e4513e64fcc3ff\nauthor Manish Goregaokar <manishsmail@gmail.com> 1462823422 -0700\ncommitter Manish Goregaokar <manishsmail@gmail.com> 1462831184 -0700\n\nRollup merge of #33514 - birkenfeld:issue-29503, r=alexcrichton\n\nrustdoc: do not strip blanket impls in crate of origin\n\nIn `impl<T> Trait for T`, the blanket type parameters `T` were recognized as \"local\" and \"not exported\", so these impls were thrown out.\n\nNow we check if they are generic, and keep them in that case.\n\nFixes: #29503\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/433f907050432af6396a317525f60579c604b3e0", "html_url": "https://github.com/rust-lang/rust/commit/433f907050432af6396a317525f60579c604b3e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/433f907050432af6396a317525f60579c604b3e0/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb382df1f8e9f7124659f4cdb02f0ab311ea02b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb382df1f8e9f7124659f4cdb02f0ab311ea02b4", "html_url": "https://github.com/rust-lang/rust/commit/fb382df1f8e9f7124659f4cdb02f0ab311ea02b4"}, {"sha": "6100b70b98ee090c9b8e7b4788e4513e64fcc3ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/6100b70b98ee090c9b8e7b4788e4513e64fcc3ff", "html_url": "https://github.com/rust-lang/rust/commit/6100b70b98ee090c9b8e7b4788e4513e64fcc3ff"}], "stats": {"total": 41, "additions": 38, "deletions": 3}, "files": [{"sha": "a47b66bf2f72ebf21d09b1007885c5d96be21ecb", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/433f907050432af6396a317525f60579c604b3e0/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/433f907050432af6396a317525f60579c604b3e0/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=433f907050432af6396a317525f60579c604b3e0", "patch": "@@ -1540,6 +1540,13 @@ impl Type {\n             _ => None,\n         }\n     }\n+\n+    pub fn is_generic(&self) -> bool {\n+        match *self {\n+            ResolvedPath { is_generic, .. } => is_generic,\n+            _ => false,\n+        }\n+    }\n }\n \n impl GetDefId for Type {"}, {"sha": "1980d1f9cc45fc54ab9ccffde89ed3938a580e7f", "filename": "src/librustdoc/passes.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/433f907050432af6396a317525f60579c604b3e0/src%2Flibrustdoc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/433f907050432af6396a317525f60579c604b3e0/src%2Flibrustdoc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses.rs?ref=433f907050432af6396a317525f60579c604b3e0", "patch": "@@ -115,9 +115,9 @@ impl<'a> fold::DocFolder for Stripper<'a> {\n \n             // trait impls for private items should be stripped\n             clean::ImplItem(clean::Impl{\n-                for_: clean::ResolvedPath{ did, .. }, ..\n+                for_: clean::ResolvedPath{ did, is_generic, .. }, ..\n             }) => {\n-                if did.is_local() && !self.access_levels.is_exported(did) {\n+                if did.is_local() && !is_generic && !self.access_levels.is_exported(did) {\n                     return None;\n                 }\n             }\n@@ -183,7 +183,9 @@ impl<'a> fold::DocFolder for ImplStripper<'a> {\n     fn fold_item(&mut self, i: Item) -> Option<Item> {\n         if let clean::ImplItem(ref imp) = i.inner {\n             if let Some(did) = imp.for_.def_id() {\n-                if did.is_local() && !self.retained.contains(&did) {\n+                if did.is_local() && !imp.for_.is_generic() &&\n+                    !self.retained.contains(&did)\n+                {\n                     return None;\n                 }\n             }"}, {"sha": "d8b484f6b501bd705f4c2e3044b6b132e8a1065c", "filename": "src/test/rustdoc/issue-29503.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/433f907050432af6396a317525f60579c604b3e0/src%2Ftest%2Frustdoc%2Fissue-29503.rs", "raw_url": "https://github.com/rust-lang/rust/raw/433f907050432af6396a317525f60579c604b3e0/src%2Ftest%2Frustdoc%2Fissue-29503.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-29503.rs?ref=433f907050432af6396a317525f60579c604b3e0", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::fmt;\n+\n+// @has issue_29503/trait.MyTrait.html\n+pub trait MyTrait {\n+    fn my_string(&self) -> String;\n+}\n+\n+// @has - \"//ul[@id='implementors-list']/li\" \"impl<T> MyTrait for T where T: Debug\"\n+impl<T> MyTrait for T where T: fmt::Debug {\n+    fn my_string(&self) -> String {\n+        format!(\"{:?}\", self)\n+    }\n+}\n+\n+pub fn main() {\n+}"}]}