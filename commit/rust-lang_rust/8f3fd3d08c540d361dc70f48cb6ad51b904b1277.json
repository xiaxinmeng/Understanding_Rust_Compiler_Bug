{"sha": "8f3fd3d08c540d361dc70f48cb6ad51b904b1277", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmM2ZkM2QwOGM1NDBkMzYxZGM3MGY0OGNiNmFkNTFiOTA0YjEyNzc=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2021-08-14T18:17:28Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2021-09-13T15:41:43Z"}, "message": "Add support for primitives in \"jump to definition\" feature", "tree": {"sha": "860a2f5a791dbecfa7f4352d223f1feb0733ce48", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/860a2f5a791dbecfa7f4352d223f1feb0733ce48"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f3fd3d08c540d361dc70f48cb6ad51b904b1277", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f3fd3d08c540d361dc70f48cb6ad51b904b1277", "html_url": "https://github.com/rust-lang/rust/commit/8f3fd3d08c540d361dc70f48cb6ad51b904b1277", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f3fd3d08c540d361dc70f48cb6ad51b904b1277/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1cd17addad57e2aaf5dc6d3febe042ebb733bee3", "url": "https://api.github.com/repos/rust-lang/rust/commits/1cd17addad57e2aaf5dc6d3febe042ebb733bee3", "html_url": "https://github.com/rust-lang/rust/commit/1cd17addad57e2aaf5dc6d3febe042ebb733bee3"}], "stats": {"total": 26, "additions": 19, "deletions": 7}, "files": [{"sha": "ece3ee640e2a69a6f8193a4f2672032b87b8097c", "filename": "src/librustdoc/html/highlight.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8f3fd3d08c540d361dc70f48cb6ad51b904b1277/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f3fd3d08c540d361dc70f48cb6ad51b904b1277/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs?ref=8f3fd3d08c540d361dc70f48cb6ad51b904b1277", "patch": "@@ -5,6 +5,7 @@\n //!\n //! Use the `render_with_highlighting` to highlight some rust code.\n \n+use crate::clean::PrimitiveType;\n use crate::html::escape::Escape;\n use crate::html::render::Context;\n \n@@ -584,6 +585,13 @@ fn string<T: Display>(\n                             .ok()\n                             .map(|(url, _, _)| url)\n                     }\n+                    LinkFromSrc::Primitive(prim) => format::href_with_root_path(\n+                        PrimitiveType::primitive_locations(context.tcx())[&prim],\n+                        context,\n+                        Some(context_info.root_path),\n+                    )\n+                    .ok()\n+                    .map(|(url, _, _)| url),\n                 }\n             })\n         {"}, {"sha": "d517f3ac0e3a9e1a16db7d886a31dc263bedc90b", "filename": "src/librustdoc/html/render/span_map.rs", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/8f3fd3d08c540d361dc70f48cb6ad51b904b1277/src%2Flibrustdoc%2Fhtml%2Frender%2Fspan_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f3fd3d08c540d361dc70f48cb6ad51b904b1277/src%2Flibrustdoc%2Fhtml%2Frender%2Fspan_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fspan_map.rs?ref=8f3fd3d08c540d361dc70f48cb6ad51b904b1277", "patch": "@@ -1,4 +1,4 @@\n-use crate::clean;\n+use crate::clean::{self, PrimitiveType};\n use crate::html::sources;\n \n use rustc_data_structures::fx::FxHashMap;\n@@ -22,6 +22,7 @@ use std::path::{Path, PathBuf};\n crate enum LinkFromSrc {\n     Local(clean::Span),\n     External(DefId),\n+    Primitive(PrimitiveType),\n }\n \n /// This function will do at most two things:\n@@ -73,17 +74,20 @@ impl<'tcx> SpanMapVisitor<'tcx> {\n                 Some(def_id)\n             }\n             Res::Local(_) => None,\n+            Res::PrimTy(p) => {\n+                // FIXME: Doesn't handle \"path-like\" primitives like arrays or tuples.\n+                let span = path_span.unwrap_or(path.span);\n+                self.matches.insert(span, LinkFromSrc::Primitive(PrimitiveType::from(p)));\n+                return;\n+            }\n             Res::Err => return,\n             _ => return,\n         };\n         if let Some(span) = self.tcx.hir().res_span(path.res) {\n-            self.matches.insert(\n-                path_span.unwrap_or_else(|| path.span),\n-                LinkFromSrc::Local(clean::Span::new(span)),\n-            );\n-        } else if let Some(def_id) = info {\n             self.matches\n-                .insert(path_span.unwrap_or_else(|| path.span), LinkFromSrc::External(def_id));\n+                .insert(path_span.unwrap_or(path.span), LinkFromSrc::Local(clean::Span::new(span)));\n+        } else if let Some(def_id) = info {\n+            self.matches.insert(path_span.unwrap_or(path.span), LinkFromSrc::External(def_id));\n         }\n     }\n }"}]}