{"sha": "0c5c644c91edf6ed949cfa5ffc524f43369df604", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjNWM2NDRjOTFlZGY2ZWQ5NDljZmE1ZmZjNTI0ZjQzMzY5ZGY2MDQ=", "commit": {"author": {"name": "TrolledWoods", "email": "trolledwoods@gmail.com", "date": "2020-06-01T06:18:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-01T06:18:34Z"}, "message": "Mention that BTreeMap::new() doesn't allocate\n\nI think it would be nice to mention this, so you don't have to dig through the src to look at the definition of new().", "tree": {"sha": "7ddfc3eb47d5a5e760304faf3ec27b47f6da8d19", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ddfc3eb47d5a5e760304faf3ec27b47f6da8d19"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c5c644c91edf6ed949cfa5ffc524f43369df604", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe1J26CRBK7hj4Ov3rIwAAdHIIAJ0U/COGntmPbxjVNv1InYps\nqsR72n+AVxYJY/ELeTRoIKDWsLR3HrlYeE309jnJFKUucMRQi8DlXBxrw6zJpNwf\nHSv2h8pms5IRlxKyL/ji/8WE1HlPcDvTuMhdfUU5+Hgxs8F2ApPR5hONrUyA701Q\nBvmki4tiqSxNlI6WoLK85afCQBaP/bN0GyZeGYQaU76IWzjVildcV2ql3wvvkPDy\nnLL+7x7H03MCez/AkWYy7VlrDQ1i2agaWuvAugdj347z5IyCcKv+Kfy/ao1tLU/q\nyGz6F8ukl/EZkcOWK2iX3CMbf/WGJUzFJ/5lQXVn1CsVa7XHj3Kr9HU748GWREg=\n=YHRs\n-----END PGP SIGNATURE-----\n", "payload": "tree 7ddfc3eb47d5a5e760304faf3ec27b47f6da8d19\nparent 0d93d3f4a42fd45b2a0da658d39555316a1b6793\nauthor TrolledWoods <trolledwoods@gmail.com> 1590992314 +0200\ncommitter GitHub <noreply@github.com> 1590992314 +0200\n\nMention that BTreeMap::new() doesn't allocate\n\nI think it would be nice to mention this, so you don't have to dig through the src to look at the definition of new()."}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c5c644c91edf6ed949cfa5ffc524f43369df604", "html_url": "https://github.com/rust-lang/rust/commit/0c5c644c91edf6ed949cfa5ffc524f43369df604", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c5c644c91edf6ed949cfa5ffc524f43369df604/comments", "author": {"login": "TrolledWoods", "id": 26680270, "node_id": "MDQ6VXNlcjI2NjgwMjcw", "avatar_url": "https://avatars.githubusercontent.com/u/26680270?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TrolledWoods", "html_url": "https://github.com/TrolledWoods", "followers_url": "https://api.github.com/users/TrolledWoods/followers", "following_url": "https://api.github.com/users/TrolledWoods/following{/other_user}", "gists_url": "https://api.github.com/users/TrolledWoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/TrolledWoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TrolledWoods/subscriptions", "organizations_url": "https://api.github.com/users/TrolledWoods/orgs", "repos_url": "https://api.github.com/users/TrolledWoods/repos", "events_url": "https://api.github.com/users/TrolledWoods/events{/privacy}", "received_events_url": "https://api.github.com/users/TrolledWoods/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d93d3f4a42fd45b2a0da658d39555316a1b6793", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d93d3f4a42fd45b2a0da658d39555316a1b6793", "html_url": "https://github.com/rust-lang/rust/commit/0d93d3f4a42fd45b2a0da658d39555316a1b6793"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "688d660a02afd87e311919eb9e89722925214b97", "filename": "src/liballoc/collections/btree/map.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0c5c644c91edf6ed949cfa5ffc524f43369df604/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c5c644c91edf6ed949cfa5ffc524f43369df604/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fbtree%2Fmap.rs?ref=0c5c644c91edf6ed949cfa5ffc524f43369df604", "patch": "@@ -490,6 +490,8 @@ struct MergeIter<K, V, I: Iterator<Item = (K, V)>> {\n impl<K: Ord, V> BTreeMap<K, V> {\n     /// Makes a new empty BTreeMap with a reasonable choice for B.\n     ///\n+    /// Does not allocate anything on its own.\n+    ///\n     /// # Examples\n     ///\n     /// Basic usage:"}]}