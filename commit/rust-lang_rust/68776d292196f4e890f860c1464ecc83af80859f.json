{"sha": "68776d292196f4e890f860c1464ecc83af80859f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4Nzc2ZDI5MjE5NmY0ZTg5MGY4NjBjMTQ2NGVjYzgzYWY4MDg1OWY=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-10-03T12:32:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-03T12:32:30Z"}, "message": "Add FIXME about type of `addr` in futex implementation.\n\nCo-authored-by: Ralf Jung <post@ralfj.de>", "tree": {"sha": "c37fb481132308cadbb99750bfc216fb708c54c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c37fb481132308cadbb99750bfc216fb708c54c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68776d292196f4e890f860c1464ecc83af80859f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfeG9eCRBK7hj4Ov3rIwAAdHIIAA2z0yupn+zRMyVSnhVFg2gm\nTzuQx7KPQ2Ep9EkNxqvTIo44aq4PP09S28Zp0zwr28zqT+kbjh+tsYyJI8YU5C3F\nGEHv0vMeaTZhcJFY0ehxqOh1mPSwZq/bTZQKWCv96IjPSirOaqecLx2h7TRoN995\nm4HyNtuS37lLzl6wpd+tYo3o+VM06dlhReb2ERlWsybzvqQBzgsdqXKsux2Q84Ok\n/vgwlnflnmZ8lYzzZLTvQK3yj10l+ytiSy04pqL0zghlnGHqQCimns84u7cHkDqw\nJQl2aMvE+vxaIwyuFM6LzXtA8otOFkEA/z/SoKKmhPMBUY8zUU5jVjwh3no6lJI=\n=7RYW\n-----END PGP SIGNATURE-----\n", "payload": "tree c37fb481132308cadbb99750bfc216fb708c54c5\nparent c268ee2bcbffeef4f0c0e8ef121188729933078b\nauthor Mara Bos <m-ou.se@m-ou.se> 1601728350 +0200\ncommitter GitHub <noreply@github.com> 1601728350 +0200\n\nAdd FIXME about type of `addr` in futex implementation.\n\nCo-authored-by: Ralf Jung <post@ralfj.de>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68776d292196f4e890f860c1464ecc83af80859f", "html_url": "https://github.com/rust-lang/rust/commit/68776d292196f4e890f860c1464ecc83af80859f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68776d292196f4e890f860c1464ecc83af80859f/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c268ee2bcbffeef4f0c0e8ef121188729933078b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c268ee2bcbffeef4f0c0e8ef121188729933078b", "html_url": "https://github.com/rust-lang/rust/commit/c268ee2bcbffeef4f0c0e8ef121188729933078b"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "d7ecb45279debc5a452844b465a43016d502e3e9", "filename": "src/shims/posix/linux/sync.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/68776d292196f4e890f860c1464ecc83af80859f/src%2Fshims%2Fposix%2Flinux%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68776d292196f4e890f860c1464ecc83af80859f/src%2Fshims%2Fposix%2Flinux%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fposix%2Flinux%2Fsync.rs?ref=68776d292196f4e890f860c1464ecc83af80859f", "patch": "@@ -77,6 +77,7 @@ pub fn futex<'tcx>(\n             this.memory.check_ptr_access(addr.to_scalar()?, Size::from_bytes(4), Align::from_bytes(4).unwrap())?;\n             // Read an `i32` through the pointer, regardless of any wrapper types.\n             // It's not uncommon for `addr` to be passed as another type than `*mut i32`, such as `*const AtomicI32`.\n+            // FIXME: this fails if `addr` is not a pointer type.\n             let futex_val = this.read_scalar_at_offset(addr.into(), 0, this.machine.layouts.i32)?.to_i32()?;\n             if val == futex_val {\n                 // The value still matches, so we block the trait make it wait for FUTEX_WAKE."}]}