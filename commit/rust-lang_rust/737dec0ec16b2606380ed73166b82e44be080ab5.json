{"sha": "737dec0ec16b2606380ed73166b82e44be080ab5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczN2RlYzBlYzE2YjI2MDYzODBlZDczMTY2YjgyZTQ0YmUwODBhYjU=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-11-19T18:54:52Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-11-19T18:54:52Z"}, "message": "Fix change to predicates", "tree": {"sha": "fe76f28561bd57120f48d3618e30219f354884a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe76f28561bd57120f48d3618e30219f354884a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/737dec0ec16b2606380ed73166b82e44be080ab5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/737dec0ec16b2606380ed73166b82e44be080ab5", "html_url": "https://github.com/rust-lang/rust/commit/737dec0ec16b2606380ed73166b82e44be080ab5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/737dec0ec16b2606380ed73166b82e44be080ab5/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ab70fab1970ea665c0969f04adc66195703a7bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ab70fab1970ea665c0969f04adc66195703a7bc", "html_url": "https://github.com/rust-lang/rust/commit/0ab70fab1970ea665c0969f04adc66195703a7bc"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "fab618d9c8ec843b23763a95188db35dca20fba2", "filename": "src/librustc_lint/unused.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/737dec0ec16b2606380ed73166b82e44be080ab5/src%2Flibrustc_lint%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/737dec0ec16b2606380ed73166b82e44be080ab5/src%2Flibrustc_lint%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Funused.rs?ref=737dec0ec16b2606380ed73166b82e44be080ab5", "patch": "@@ -68,7 +68,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnusedResults {\n                 ty::Adt(def, _) => check_must_use(cx, def.did, s.span, \"\", \"\"),\n                 ty::Opaque(def, _) => {\n                     let mut must_use = false;\n-                    for (predicate, _) in cx.tcx.predicates_of(def).predicates {\n+                    for (predicate, _) in &cx.tcx.predicates_of(def).predicates {\n                         if let ty::Predicate::Trait(ref poly_trait_predicate) = predicate {\n                             let trait_ref = poly_trait_predicate.skip_binder().trait_ref;\n                             if check_must_use(cx, trait_ref.def_id, s.span, \"implementer of \", \"\") {"}]}