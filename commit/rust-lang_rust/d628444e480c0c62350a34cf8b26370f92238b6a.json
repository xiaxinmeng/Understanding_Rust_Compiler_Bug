{"sha": "d628444e480c0c62350a34cf8b26370f92238b6a", "node_id": "C_kwDOAAsO6NoAKGQ2Mjg0NDRlNDgwYzBjNjIzNTBhMzRjZjhiMjYzNzBmOTIyMzhiNmE", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-06-02T18:50:45Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-06-02T18:50:45Z"}, "message": "Remove workaround for bytecodealliance/wasmtime#3963", "tree": {"sha": "25968268c6910fbd4b92ccc0aa9b454da5695431", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25968268c6910fbd4b92ccc0aa9b454da5695431"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d628444e480c0c62350a34cf8b26370f92238b6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d628444e480c0c62350a34cf8b26370f92238b6a", "html_url": "https://github.com/rust-lang/rust/commit/d628444e480c0c62350a34cf8b26370f92238b6a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d628444e480c0c62350a34cf8b26370f92238b6a/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e97e40de22ad93e16c0a2aa59433dabe16e4dc79", "url": "https://api.github.com/repos/rust-lang/rust/commits/e97e40de22ad93e16c0a2aa59433dabe16e4dc79", "html_url": "https://github.com/rust-lang/rust/commit/e97e40de22ad93e16c0a2aa59433dabe16e4dc79"}], "stats": {"total": 13, "additions": 2, "deletions": 11}, "files": [{"sha": "e8adf8246d1bd0a53f35883fd4fbdc5dee39e40e", "filename": "src/cast.rs", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d628444e480c0c62350a34cf8b26370f92238b6a/src%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d628444e480c0c62350a34cf8b26370f92238b6a/src%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcast.rs?ref=d628444e480c0c62350a34cf8b26370f92238b6a", "patch": "@@ -149,17 +149,8 @@ pub(crate) fn clif_int_or_float_cast(\n         }\n \n         let is_not_nan = fx.bcx.ins().fcmp(FloatCC::Equal, from, from);\n-        if to_ty == types::I128 {\n-            // FIXME(bytecodealliance/wasmtime#3963): select.i128 on fcmp eq miscompiles\n-            let (lsb, msb) = fx.bcx.ins().isplit(val);\n-            let zero = fx.bcx.ins().iconst(types::I64, 0);\n-            let lsb = fx.bcx.ins().select(is_not_nan, lsb, zero);\n-            let msb = fx.bcx.ins().select(is_not_nan, msb, zero);\n-            fx.bcx.ins().iconcat(lsb, msb)\n-        } else {\n-            let zero = fx.bcx.ins().iconst(to_ty, 0);\n-            fx.bcx.ins().select(is_not_nan, val, zero)\n-        }\n+        let zero = fx.bcx.ins().iconst(to_ty, 0);\n+        fx.bcx.ins().select(is_not_nan, val, zero)\n     } else if from_ty.is_float() && to_ty.is_float() {\n         // float -> float\n         match (from_ty, to_ty) {"}]}