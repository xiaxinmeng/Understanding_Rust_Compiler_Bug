{"sha": "520fafe5c2b3fe20c89282dc0c0fbc6395e4c2e2", "node_id": "C_kwDOAAsO6NoAKDUyMGZhZmU1YzJiM2ZlMjBjODkyODJkYzBjMGZiYzYzOTVlNGMyZTI", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-11-19T22:17:14Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-11-19T22:17:14Z"}, "message": "Create def_id for async fns during lowering", "tree": {"sha": "ead78424ec5ece72946762ffcbaa3c56d8b9aba4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ead78424ec5ece72946762ffcbaa3c56d8b9aba4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/520fafe5c2b3fe20c89282dc0c0fbc6395e4c2e2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmN5VeoACgkQgTGiTgx5\n76+O4g/+JIZuLXp44+Bkw6vAGRvFEIwlEgqQtgruy3iF0WP5Hm/CSFnvP260vgEl\nhora6rx+/2xXnxft+XKgEWwn7qjiPCFq41vNZleYHKHJSU9UVo2fKlAmGqoCks92\nJFnLJuVrrJCaoiiTHbusefcX9E1XkdY9wyp2nhtdz0N6arxdJvFT9wHNc+3ruuea\n4zyiwtxTSPqKU8yUhlv5pgO1YhmUZ6yV73eVie2s3PgXf4qJH2w3vEFF05LiyD8m\nH25QzGPZwi5p25avWDhI3xzMoDeNHomMn56z1IlV30gPKKZbWCZ2YO2fClpj6wBc\nBCjIxoFSRJwAC1RUzbI8Z0v1Kdmp9jDDMog5OTSfMg0PiKaabkwFNI4D3UF7sHul\nm/+nK75CErjhIum5pJ9XDW4kb/RnqKYmmYVIaHukMzY6oOCQ8fa8sSg8ZXZpuydG\nWd+8u9blnyCWuKlOFtJa9+yUqVVBLgGjO1MXZ8l32nAMLKkbpwItCargBX5GaTBn\nyFChK7UtGik0ejoxkwv7EdUf2jkRmX7hJAIkl0Q4p106aF75GE3xlLvWRv8y0mt0\nxhn9SVhOMd4+jSk2tn1NZDRzDPk1kn3LEKQzVq/LowPJ9+1UZgqixI+TofZLP81b\nVm1uiq71HombHle4aXumbqgeS5E/u6ULovkwSCf8biGimdBaZbg=\n=+ZjL\n-----END PGP SIGNATURE-----", "payload": "tree ead78424ec5ece72946762ffcbaa3c56d8b9aba4\nparent 9d46c7a3e69966782e163877151c1f0cea8b630a\nauthor Santiago Pastorino <spastorino@gmail.com> 1668896234 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1668896234 -0300\n\nCreate def_id for async fns during lowering\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/520fafe5c2b3fe20c89282dc0c0fbc6395e4c2e2", "html_url": "https://github.com/rust-lang/rust/commit/520fafe5c2b3fe20c89282dc0c0fbc6395e4c2e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/520fafe5c2b3fe20c89282dc0c0fbc6395e4c2e2/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d46c7a3e69966782e163877151c1f0cea8b630a", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d46c7a3e69966782e163877151c1f0cea8b630a", "html_url": "https://github.com/rust-lang/rust/commit/9d46c7a3e69966782e163877151c1f0cea8b630a"}], "stats": {"total": 13, "additions": 5, "deletions": 8}, "files": [{"sha": "0bcb10be35403837aa0c44f60d26e542d884df6c", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/520fafe5c2b3fe20c89282dc0c0fbc6395e4c2e2/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/520fafe5c2b3fe20c89282dc0c0fbc6395e4c2e2/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=520fafe5c2b3fe20c89282dc0c0fbc6395e4c2e2", "patch": "@@ -1839,9 +1839,11 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n \n         let opaque_ty_span = self.mark_span_with_reason(DesugaringKind::Async, span, None);\n \n-        let opaque_ty_def_id = self.local_def_id(opaque_ty_node_id);\n         let fn_def_id = self.local_def_id(fn_node_id);\n \n+        let opaque_ty_def_id =\n+            self.create_def(fn_def_id, opaque_ty_node_id, DefPathData::ImplTrait);\n+\n         // When we create the opaque type for this async fn, it is going to have\n         // to capture all the lifetimes involved in the signature (including in the\n         // return type). This is done by introducing lifetime parameters for:"}, {"sha": "7187811a4dd0f2961724f1c0eacbdc61a4fb8491", "filename": "compiler/rustc_resolve/src/def_collector.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/520fafe5c2b3fe20c89282dc0c0fbc6395e4c2e2/compiler%2Frustc_resolve%2Fsrc%2Fdef_collector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/520fafe5c2b3fe20c89282dc0c0fbc6395e4c2e2/compiler%2Frustc_resolve%2Fsrc%2Fdef_collector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdef_collector.rs?ref=520fafe5c2b3fe20c89282dc0c0fbc6395e4c2e2", "patch": "@@ -131,22 +131,17 @@ impl<'a, 'b> visit::Visitor<'a> for DefCollector<'a, 'b> {\n \n     fn visit_fn(&mut self, fn_kind: FnKind<'a>, span: Span, _: NodeId) {\n         if let FnKind::Fn(_, _, sig, _, generics, body) = fn_kind {\n-            if let Async::Yes { closure_id, return_impl_trait_id, .. } = sig.header.asyncness {\n+            if let Async::Yes { closure_id, .. } = sig.header.asyncness {\n                 self.visit_generics(generics);\n \n-                let return_impl_trait_id =\n-                    self.create_def(return_impl_trait_id, DefPathData::ImplTrait, span);\n-\n                 // For async functions, we need to create their inner defs inside of a\n                 // closure to match their desugared representation. Besides that,\n                 // we must mirror everything that `visit::walk_fn` below does.\n                 self.visit_fn_header(&sig.header);\n                 for param in &sig.decl.inputs {\n                     self.visit_param(param);\n                 }\n-                self.with_parent(return_impl_trait_id, |this| {\n-                    this.visit_fn_ret_ty(&sig.decl.output)\n-                });\n+                self.visit_fn_ret_ty(&sig.decl.output);\n                 // If this async fn has no body (i.e. it's an async fn signature in a trait)\n                 // then the closure_def will never be used, and we should avoid generating a\n                 // def-id for it."}]}