{"sha": "6e4c842305fc8370de730bf919a6fd1fc4aca962", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlNGM4NDIzMDVmYzgzNzBkZTczMGJmOTE5YTZmZDFmYzRhY2E5NjI=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-05-07T14:19:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-07T14:19:20Z"}, "message": "Rollup merge of #84866 - petrochenkov:wholesome, r=Mark-Simulacrum\n\nlinker: Avoid library duplication with `/WHOLEARCHIVE`\n\nLooks like in #72785 I misinterpreted how the `link.exe`'s `/WHOLEARCHIVE` flag works.\n\nIt's not necessary to write `mylib /WHOLEARCHIVE:mylib` to mark `mylib` as whole archive, `/WHOLEARCHIVE:mylib` alone is enough.\n\nhttps://docs.microsoft.com/en-us/cpp/build/reference/wholearchive-include-all-library-object-files?view=msvc-160", "tree": {"sha": "576006a607eaff1ba756975bd823208c9c891e40", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/576006a607eaff1ba756975bd823208c9c891e40"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e4c842305fc8370de730bf919a6fd1fc4aca962", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJglUxpCRBK7hj4Ov3rIwAANZIIAH1sLU7I780abHxC0EsPCeF/\n7cCH9QiO9T/H5hUzslDxRqG6Hc/fhxAPtcn9SpJ5eku28NYOTcZO/xzhdn9s3EH9\nmcE5xHWNapb+S3wizq04toLLYtEmatmrkgZaFwztrmpgJnI40Aw3XftSlmlAxZtn\nNW04J5eETEjHuaOuzq4/GVzjYYpAWW8KDafKNFeW8ITby2+5PQ3H9an4X3A+sP87\nB+bIuxQD8tgXiAXzsUkf2JXe5d0y8flM+GhEMwLOv/8rP8niakQCkROBL47drodf\na1cdfOR+6FTTfiAAwuBG4W/A9l67iKyUOrH+TzZvVDCbGd3QEknTpdrhx8mph+k=\n=8N8X\n-----END PGP SIGNATURE-----\n", "payload": "tree 576006a607eaff1ba756975bd823208c9c891e40\nparent 8f0b1863d0617be844112778e77544a5bcee79cd\nparent fb9feb35eda218133e4fb8944e66d41b904fc9f8\nauthor Dylan DPC <dylan.dpc@gmail.com> 1620397160 +0200\ncommitter GitHub <noreply@github.com> 1620397160 +0200\n\nRollup merge of #84866 - petrochenkov:wholesome, r=Mark-Simulacrum\n\nlinker: Avoid library duplication with `/WHOLEARCHIVE`\n\nLooks like in #72785 I misinterpreted how the `link.exe`'s `/WHOLEARCHIVE` flag works.\n\nIt's not necessary to write `mylib /WHOLEARCHIVE:mylib` to mark `mylib` as whole archive, `/WHOLEARCHIVE:mylib` alone is enough.\n\nhttps://docs.microsoft.com/en-us/cpp/build/reference/wholearchive-include-all-library-object-files?view=msvc-160\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e4c842305fc8370de730bf919a6fd1fc4aca962", "html_url": "https://github.com/rust-lang/rust/commit/6e4c842305fc8370de730bf919a6fd1fc4aca962", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e4c842305fc8370de730bf919a6fd1fc4aca962/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f0b1863d0617be844112778e77544a5bcee79cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f0b1863d0617be844112778e77544a5bcee79cd", "html_url": "https://github.com/rust-lang/rust/commit/8f0b1863d0617be844112778e77544a5bcee79cd"}, {"sha": "fb9feb35eda218133e4fb8944e66d41b904fc9f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb9feb35eda218133e4fb8944e66d41b904fc9f8", "html_url": "https://github.com/rust-lang/rust/commit/fb9feb35eda218133e4fb8944e66d41b904fc9f8"}], "stats": {"total": 2, "additions": 0, "deletions": 2}, "files": [{"sha": "929bdf227558206080eada53a94fa0c4d904a90b", "filename": "compiler/rustc_codegen_ssa/src/back/linker.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6e4c842305fc8370de730bf919a6fd1fc4aca962/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e4c842305fc8370de730bf919a6fd1fc4aca962/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs?ref=6e4c842305fc8370de730bf919a6fd1fc4aca962", "patch": "@@ -821,11 +821,9 @@ impl<'a> Linker for MsvcLinker<'a> {\n     }\n \n     fn link_whole_staticlib(&mut self, lib: Symbol, verbatim: bool, _search_path: &[PathBuf]) {\n-        self.link_staticlib(lib, verbatim);\n         self.cmd.arg(format!(\"/WHOLEARCHIVE:{}{}\", lib, if verbatim { \"\" } else { \".lib\" }));\n     }\n     fn link_whole_rlib(&mut self, path: &Path) {\n-        self.link_rlib(path);\n         let mut arg = OsString::from(\"/WHOLEARCHIVE:\");\n         arg.push(path);\n         self.cmd.arg(arg);"}]}