{"sha": "d17a30a05d6212d80466f3bfca9b7021b0bb581c", "node_id": "C_kwDOAAsO6NoAKGQxN2EzMGEwNWQ2MjEyZDgwNDY2ZjNiZmNhOWI3MDIxYjBiYjU4MWM", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-03-12T18:36:11Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-08-01T19:38:16Z"}, "message": "Store associated item defaultness in impl_defaultness.", "tree": {"sha": "019f22a01eebd8e7270f6b3459a780a9257d4a95", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/019f22a01eebd8e7270f6b3459a780a9257d4a95"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d17a30a05d6212d80466f3bfca9b7021b0bb581c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d17a30a05d6212d80466f3bfca9b7021b0bb581c", "html_url": "https://github.com/rust-lang/rust/commit/d17a30a05d6212d80466f3bfca9b7021b0bb581c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d17a30a05d6212d80466f3bfca9b7021b0bb581c/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80a56878cf02c2e8c3bff05f5831fe50b3847eb5", "url": "https://api.github.com/repos/rust-lang/rust/commits/80a56878cf02c2e8c3bff05f5831fe50b3847eb5", "html_url": "https://github.com/rust-lang/rust/commit/80a56878cf02c2e8c3bff05f5831fe50b3847eb5"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "9e14ccd34334b96b9a02b645870797e129738b60", "filename": "clippy_lints/src/missing_inline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d17a30a05d6212d80466f3bfca9b7021b0bb581c/clippy_lints%2Fsrc%2Fmissing_inline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d17a30a05d6212d80466f3bfca9b7021b0bb581c/clippy_lints%2Fsrc%2Fmissing_inline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_inline.rs?ref=d17a30a05d6212d80466f3bfca9b7021b0bb581c", "patch": "@@ -105,7 +105,7 @@ impl<'tcx> LateLintPass<'tcx> for MissingInline {\n                     match tit_.kind {\n                         hir::TraitItemKind::Const(..) | hir::TraitItemKind::Type(..) => {},\n                         hir::TraitItemKind::Fn(..) => {\n-                            if tit.defaultness.has_value() {\n+                            if cx.tcx.impl_defaultness(tit.id.def_id).has_value() {\n                                 // trait method with default body needs inline in case\n                                 // an impl is not provided\n                                 let desc = \"a default trait method\";"}]}