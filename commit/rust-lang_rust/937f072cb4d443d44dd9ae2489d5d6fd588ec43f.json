{"sha": "937f072cb4d443d44dd9ae2489d5d6fd588ec43f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzN2YwNzJjYjRkNDQzZDQ0ZGQ5YWUyNDg5ZDVkNmZkNTg4ZWM0M2Y=", "commit": {"author": {"name": "ggomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-07-04T12:20:45Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-07-11T21:24:49Z"}, "message": "Fix typos", "tree": {"sha": "71fc199fa706a3f8b573d03b8102d04dc7c2e5ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71fc199fa706a3f8b573d03b8102d04dc7c2e5ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/937f072cb4d443d44dd9ae2489d5d6fd588ec43f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/937f072cb4d443d44dd9ae2489d5d6fd588ec43f", "html_url": "https://github.com/rust-lang/rust/commit/937f072cb4d443d44dd9ae2489d5d6fd588ec43f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/937f072cb4d443d44dd9ae2489d5d6fd588ec43f/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8dc79ecd13785c42464be7ad792c5a9fcd8ae1f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/8dc79ecd13785c42464be7ad792c5a9fcd8ae1f4", "html_url": "https://github.com/rust-lang/rust/commit/8dc79ecd13785c42464be7ad792c5a9fcd8ae1f4"}], "stats": {"total": 54, "additions": 28, "deletions": 26}, "files": [{"sha": "260575d42e78836cc184c419bc043b0246b96d74", "filename": "src/libsyntax/diagnostic_list.rs", "status": "modified", "additions": 28, "deletions": 26, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/937f072cb4d443d44dd9ae2489d5d6fd588ec43f/src%2Flibsyntax%2Fdiagnostic_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/937f072cb4d443d44dd9ae2489d5d6fd588ec43f/src%2Flibsyntax%2Fdiagnostic_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fdiagnostic_list.rs?ref=937f072cb4d443d44dd9ae2489d5d6fd588ec43f", "patch": "@@ -16,7 +16,7 @@\n register_long_diagnostics! {\n \n E0533: r##\"\n-The export_name attribute was badly formatted.\n+The `export_name` attribute was malformed.\n \n Erroneous code example:\n \n@@ -27,19 +27,19 @@ pub fn something() {}\n fn main() {}\n ```\n \n-The export_name attribute expects a string in order to determine the name of\n+The `export_name` attribute expects a string in order to determine the name of\n the exported symbol. Example:\n \n ```\n-#[export_name = \"some function\"] // ok!\n+#[export_name = \"some_function\"] // ok!\n pub fn something() {}\n \n fn main() {}\n ```\n \"##,\n \n E0534: r##\"\n-The inline attribute was badly used.\n+The `inline` attribute was malformed.\n \n Erroneous code example:\n \n@@ -50,30 +50,32 @@ pub fn something() {}\n fn main() {}\n ```\n \n-The inline attribute can be used without arguments:\n+The parenthesized `inline` attribute requires the parameter to be specified:\n \n-```\n-#[inline] // ok!\n-pub fn something() {}\n+```ignore\n+#[inline(always)]\n+fn something() {}\n \n-fn main() {}\n+// or:\n+\n+#[inline(never)]\n+fn something() {}\n ```\n \n-Or with arguments (and parens have to be used for this case!):\n+Alternatively, a paren-less version of the attribute may be used to hint the\n+compiler about inlining opportunity:\n \n ```\n-#[inline(always)] // ok!\n-pub fn something() {}\n-\n-fn main() {}\n+#[inline]\n+fn something() {}\n ```\n \n-For more information about the inline attribute, take a look here:\n+For more information about the inline attribute, read:\n https://doc.rust-lang.org/reference.html#inline-attributes\n \"##,\n \n E0535: r##\"\n-An unknown argument was given to inline attribute.\n+An unknown argument was given to the `inline` attribute.\n \n Erroneous code example:\n \n@@ -84,12 +86,12 @@ pub fn something() {}\n fn main() {}\n ```\n \n-The inline attribute only knows two arguments:\n+The `inline` attribute only supports two arguments:\n \n  * always\n  * never\n \n-All other arguments given to the inline attribute will return this error.\n+All other arguments given to the `inline` attribute will return this error.\n Example:\n \n ```\n@@ -99,12 +101,12 @@ pub fn something() {}\n fn main() {}\n ```\n \n-For more information about the inline attribute, take a look here:\n-https://doc.rust-lang.org/reference.html#inline-attributes\n+For more information about the inline attribute, https:\n+read://doc.rust-lang.org/reference.html#inline-attributes\n \"##,\n \n E0536: r##\"\n-No cfg-pattern was found for `not` statement.\n+The `not` cfg-predicate was malformed.\n \n Erroneous code example:\n \n@@ -115,7 +117,7 @@ pub fn something() {}\n pub fn main() {}\n ```\n \n-The `not` statement expects at least one cfg-pattern. Example:\n+The `not` predicate expects one cfg-pattern. Example:\n \n ```\n #[cfg(not(target_os = \"linux\"))] // ok!\n@@ -124,12 +126,12 @@ pub fn something() {}\n pub fn main() {}\n ```\n \n-For more information about the cfg attribute, take a look here:\n+For more information about the cfg attribute, read:\n https://doc.rust-lang.org/reference.html#conditional-compilation\n \"##,\n \n E0537: r##\"\n-A unknown predicate was used inside the cfg attribute.\n+An unknown predicate was used inside the `cfg` attribute.\n \n Erroneous code example:\n \n@@ -140,7 +142,7 @@ pub fn something() {}\n pub fn main() {}\n ```\n \n-There are only three predicates for the cfg attribute:\n+The `cfg` attribute supports only three kinds of predicates:\n \n  * any\n  * all\n@@ -155,7 +157,7 @@ pub fn something() {}\n pub fn main() {}\n ```\n \n-For more information about the cfg attribute, take a look here:\n+For more information about the cfg attribute, read:\n https://doc.rust-lang.org/reference.html#conditional-compilation\n \"##,\n "}]}