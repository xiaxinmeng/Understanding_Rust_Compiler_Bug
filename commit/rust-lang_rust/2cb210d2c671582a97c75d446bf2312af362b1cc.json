{"sha": "2cb210d2c671582a97c75d446bf2312af362b1cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjYjIxMGQyYzY3MTU4MmE5N2M3NWQ0NDZiZjIzMTJhZjM2MmIxY2M=", "commit": {"author": {"name": "wickerwaka", "email": "martin.donlon@gmail.com", "date": "2014-09-01T15:59:23Z"}, "committer": {"name": "wickerwaka", "email": "martin.donlon@gmail.com", "date": "2014-09-01T16:02:00Z"}, "message": "Updated to new extern crate syntax.\nAdded warning for old deprecated syntax", "tree": {"sha": "ff71e04887f9a2d4683269672dbfde1e5ac231d8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff71e04887f9a2d4683269672dbfde1e5ac231d8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2cb210d2c671582a97c75d446bf2312af362b1cc", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2cb210d2c671582a97c75d446bf2312af362b1cc", "html_url": "https://github.com/rust-lang/rust/commit/2cb210d2c671582a97c75d446bf2312af362b1cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2cb210d2c671582a97c75d446bf2312af362b1cc/comments", "author": null, "committer": null, "parents": [{"sha": "b42e079c6f6445b4e2adfaf9a30e8a06403f75c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/b42e079c6f6445b4e2adfaf9a30e8a06403f75c8", "html_url": "https://github.com/rust-lang/rust/commit/b42e079c6f6445b4e2adfaf9a30e8a06403f75c8"}], "stats": {"total": 45, "additions": 25, "deletions": 20}, "files": [{"sha": "8ac09ed909b6c6bad0d989684b27e889733263ab", "filename": "src/driver/driver.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2cb210d2c671582a97c75d446bf2312af362b1cc/src%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cb210d2c671582a97c75d446bf2312af362b1cc/src%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Fdriver.rs?ref=2cb210d2c671582a97c75d446bf2312af362b1cc", "patch": "@@ -9,9 +9,9 @@\n // except according to those terms.\n \n #[cfg(rustdoc)]\n-extern crate this = \"rustdoc\";\n+extern crate \"rustdoc\" as this;\n \n #[cfg(rustc)]\n-extern crate this = \"rustc\";\n+extern crate \"rustc\" as this;\n \n fn main() { this::main() }"}, {"sha": "c79905b9595c25ca1e7a69159cc37bf1b9feb03b", "filename": "src/libregex/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2cb210d2c671582a97c75d446bf2312af362b1cc/src%2Flibregex%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cb210d2c671582a97c75d446bf2312af362b1cc/src%2Flibregex%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibregex%2Flib.rs?ref=2cb210d2c671582a97c75d446bf2312af362b1cc", "patch": "@@ -372,7 +372,7 @@\n #![deny(missing_doc)]\n \n #[cfg(test)]\n-extern crate stdtest = \"test\";\n+extern crate \"test\" as stdtest;\n #[cfg(test)]\n extern crate rand;\n "}, {"sha": "32e0c323d1f94f0014358340bfe0f2a74d1d4991", "filename": "src/librustc/front/std_inject.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2cb210d2c671582a97c75d446bf2312af362b1cc/src%2Flibrustc%2Ffront%2Fstd_inject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cb210d2c671582a97c75d446bf2312af362b1cc/src%2Flibrustc%2Ffront%2Fstd_inject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ffront%2Fstd_inject.rs?ref=2cb210d2c671582a97c75d446bf2312af362b1cc", "patch": "@@ -62,7 +62,7 @@ struct StandardLibraryInjector<'a> {\n impl<'a> fold::Folder for StandardLibraryInjector<'a> {\n     fn fold_crate(&mut self, mut krate: ast::Crate) -> ast::Crate {\n \n-        // The name to use in `extern crate std = \"name\";`\n+        // The name to use in `extern crate \"name\" as std;`\n         let actual_crate_name = match self.sess.opts.alt_std_name {\n             Some(ref s) => token::intern_and_get_ident(s.as_slice()),\n             None => token::intern_and_get_ident(\"std\"),"}, {"sha": "03dfcec18dbdb10d730a77c3107691d43b889b37", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2cb210d2c671582a97c75d446bf2312af362b1cc/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cb210d2c671582a97c75d446bf2312af362b1cc/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=2cb210d2c671582a97c75d446bf2312af362b1cc", "patch": "@@ -42,8 +42,8 @@ extern crate flate;\n extern crate getopts;\n extern crate graphviz;\n extern crate libc;\n-extern crate llvm = \"rustc_llvm\";\n-extern crate rustc_back = \"rustc_back\";\n+extern crate \"rustc_llvm\" as llvm;\n+extern crate \"rustc_back\" as rustc_back;\n extern crate serialize;\n extern crate rbml;\n extern crate time;"}, {"sha": "29e7c051162f33bddec99bf0c703e91e68900bfa", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2cb210d2c671582a97c75d446bf2312af362b1cc/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cb210d2c671582a97c75d446bf2312af362b1cc/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=2cb210d2c671582a97c75d446bf2312af362b1cc", "patch": "@@ -23,7 +23,7 @@ extern crate libc;\n extern crate rustc;\n extern crate serialize;\n extern crate syntax;\n-extern crate testing = \"test\";\n+extern crate \"test\" as testing;\n extern crate time;\n #[phase(plugin, link)] extern crate log;\n "}, {"sha": "b4ad1f23154b4d83a225ba0e4a594209b529d8c7", "filename": "src/librustrt/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2cb210d2c671582a97c75d446bf2312af362b1cc/src%2Flibrustrt%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cb210d2c671582a97c75d446bf2312af362b1cc/src%2Flibrustrt%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustrt%2Flib.rs?ref=2cb210d2c671582a97c75d446bf2312af362b1cc", "patch": "@@ -27,7 +27,7 @@ extern crate alloc;\n extern crate libc;\n extern crate collections;\n \n-#[cfg(test)] extern crate realrustrt = \"rustrt\";\n+#[cfg(test)] extern crate \"rustrt\" as realrustrt;\n #[cfg(test)] extern crate test;\n #[cfg(test)] extern crate native;\n "}, {"sha": "abc55b67b3bc82dd7c1b025676cd19660a132e9d", "filename": "src/librustuv/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2cb210d2c671582a97c75d446bf2312af362b1cc/src%2Flibrustuv%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cb210d2c671582a97c75d446bf2312af362b1cc/src%2Flibrustuv%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustuv%2Flib.rs?ref=2cb210d2c671582a97c75d446bf2312af362b1cc", "patch": "@@ -52,7 +52,7 @@ via `close` and `delete` methods.\n \n #[cfg(test)] extern crate green;\n #[cfg(test)] extern crate debug;\n-#[cfg(test)] extern crate realrustuv = \"rustuv\";\n+#[cfg(test)] extern crate \"rustuv\" as realrustuv;\n extern crate libc;\n extern crate alloc;\n "}, {"sha": "b29e5b7c14851b17797962dec9a214b17039aaaa", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2cb210d2c671582a97c75d446bf2312af362b1cc/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cb210d2c671582a97c75d446bf2312af362b1cc/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=2cb210d2c671582a97c75d446bf2312af362b1cc", "patch": "@@ -129,14 +129,14 @@\n extern crate alloc;\n extern crate unicode;\n extern crate core;\n-extern crate core_collections = \"collections\";\n-extern crate core_rand = \"rand\";\n-extern crate core_sync = \"sync\";\n+extern crate \"collections\" as core_collections;\n+extern crate \"rand\" as core_rand;\n+extern crate \"sync\" as core_sync;\n extern crate libc;\n extern crate rustrt;\n \n // Make std testable by not duplicating lang items. See #2912\n-#[cfg(test)] extern crate realstd = \"std\";\n+#[cfg(test)] extern crate \"std\" as realstd;\n #[cfg(test)] pub use realstd::kinds;\n #[cfg(test)] pub use realstd::ops;\n #[cfg(test)] pub use realstd::cmp;"}, {"sha": "66807c4639e0faf0a9ad25dfa3b5b7b079fbb2e5", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/2cb210d2c671582a97c75d446bf2312af362b1cc/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cb210d2c671582a97c75d446bf2312af362b1cc/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=2cb210d2c671582a97c75d446bf2312af362b1cc", "patch": "@@ -4773,11 +4773,16 @@ impl<'a> Parser<'a> {\n             token::IDENT(..) => {\n                 let the_ident = self.parse_ident();\n                 self.expect_one_of(&[], &[token::EQ, token::SEMI]);\n-                // NOTE - #16689 change this to a warning once\n-                //        the 'as' support is in stage0\n                 let path = if self.token == token::EQ {\n                     self.bump();\n-                    Some(self.parse_str())\n+                    let path = self.parse_str();\n+                    let span = self.span;\n+                    self.span_warn(span,\n+                            format!(\"this extern crate syntax is deprecated. \\\n+                            Use: extern create \\\"{}\\\" as {};\",\n+                            the_ident.as_str(), path.ref0().get() ).as_slice()\n+                    );\n+                    Some(path)\n                 } else {None};\n \n                 self.expect(&token::SEMI);"}, {"sha": "218e9dba065b9ff0a0dfe62cf91550b4c4388cd2", "filename": "src/test/compile-fail/issue-16725.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2cb210d2c671582a97c75d446bf2312af362b1cc/src%2Ftest%2Fcompile-fail%2Fissue-16725.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cb210d2c671582a97c75d446bf2312af362b1cc/src%2Ftest%2Fcompile-fail%2Fissue-16725.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-16725.rs?ref=2cb210d2c671582a97c75d446bf2312af362b1cc", "patch": "@@ -10,7 +10,7 @@\n \n // aux-build:issue-16725.rs\n \n-extern crate foo = \"issue-16725\";\n+extern crate \"issue-16725\" as foo;\n \n fn main() {\n     unsafe { foo::bar(); }"}, {"sha": "06f26800b5031cd20091d345cc13b05360f47d86", "filename": "src/test/compile-fail/regions-bounded-method-type-parameters-cross-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2cb210d2c671582a97c75d446bf2312af362b1cc/src%2Ftest%2Fcompile-fail%2Fregions-bounded-method-type-parameters-cross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cb210d2c671582a97c75d446bf2312af362b1cc/src%2Ftest%2Fcompile-fail%2Fregions-bounded-method-type-parameters-cross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-bounded-method-type-parameters-cross-crate.rs?ref=2cb210d2c671582a97c75d446bf2312af362b1cc", "patch": "@@ -12,7 +12,7 @@\n \n // Check explicit region bounds on methods in the cross crate case.\n \n-extern crate lib = \"regions-bounded-method-type-parameters-cross-crate-lib\";\n+extern crate \"regions-bounded-method-type-parameters-cross-crate-lib\" as lib;\n \n use lib::Inv;\n use lib::MaybeOwned;"}, {"sha": "82f53ea7cd408a0333fef195c72d7269aebaf7c4", "filename": "src/test/run-pass/issue-15562.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2cb210d2c671582a97c75d446bf2312af362b1cc/src%2Ftest%2Frun-pass%2Fissue-15562.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cb210d2c671582a97c75d446bf2312af362b1cc/src%2Ftest%2Frun-pass%2Fissue-15562.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-15562.rs?ref=2cb210d2c671582a97c75d446bf2312af362b1cc", "patch": "@@ -10,7 +10,7 @@\n \n // aux-build:issue-15562.rs\n \n-extern crate i = \"issue-15562\";\n+extern crate \"issue-15562\" as i;\n \n pub fn main() {\n     extern {"}, {"sha": "b118c9573cdcf751c9949b6e4ab0c603fad9d374", "filename": "src/test/run-pass/issue-16643.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2cb210d2c671582a97c75d446bf2312af362b1cc/src%2Ftest%2Frun-pass%2Fissue-16643.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cb210d2c671582a97c75d446bf2312af362b1cc/src%2Ftest%2Frun-pass%2Fissue-16643.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-16643.rs?ref=2cb210d2c671582a97c75d446bf2312af362b1cc", "patch": "@@ -10,7 +10,7 @@\n \n // aux-build:issue-16643.rs\n \n-extern crate i = \"issue-16643\";\n+extern crate \"issue-16643\" as i;\n \n pub fn main() {\n     i::TreeBuilder::<uint>.process_token();"}]}