{"sha": "2ad41b881cb8389cb690c643e41c27f6c34270d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhZDQxYjg4MWNiODM4OWNiNjkwYzY0M2U0MWMyN2Y2YzM0MjcwZDU=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "etryzelaar@iqt.org", "date": "2012-12-19T02:54:25Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-12-19T04:54:13Z"}, "message": "core: add unwrap methods to dvec, either, and mutable", "tree": {"sha": "d9e9ebd8aa07351acfe41a25899408e698b9ae2b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d9e9ebd8aa07351acfe41a25899408e698b9ae2b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ad41b881cb8389cb690c643e41c27f6c34270d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ad41b881cb8389cb690c643e41c27f6c34270d5", "html_url": "https://github.com/rust-lang/rust/commit/2ad41b881cb8389cb690c643e41c27f6c34270d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ad41b881cb8389cb690c643e41c27f6c34270d5/comments", "author": null, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82a983de6803c7b1026ba0b553186306e842e427", "url": "https://api.github.com/repos/rust-lang/rust/commits/82a983de6803c7b1026ba0b553186306e842e427", "html_url": "https://github.com/rust-lang/rust/commit/82a983de6803c7b1026ba0b553186306e842e427"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "b02a6f5c8b5381b6502665b09644a19a23e2dd7c", "filename": "src/libcore/dvec.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2ad41b881cb8389cb690c643e41c27f6c34270d5/src%2Flibcore%2Fdvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ad41b881cb8389cb690c643e41c27f6c34270d5/src%2Flibcore%2Fdvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fdvec.rs?ref=2ad41b881cb8389cb690c643e41c27f6c34270d5", "patch": "@@ -110,6 +110,9 @@ priv impl<A> DVec<A> {\n             self.data = move data;\n         }\n     }\n+\n+    #[inline(always)]\n+    fn unwrap(self) -> ~[A] { unwrap(self) }\n }\n \n // In theory, most everything should work with any A, but in practice"}, {"sha": "6c0254ff7790257b25a2ba6342089841887786a0", "filename": "src/libcore/either.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2ad41b881cb8389cb690c643e41c27f6c34270d5/src%2Flibcore%2Feither.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ad41b881cb8389cb690c643e41c27f6c34270d5/src%2Flibcore%2Feither.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Feither.rs?ref=2ad41b881cb8389cb690c643e41c27f6c34270d5", "patch": "@@ -142,6 +142,14 @@ pub pure fn unwrap_right<T,U>(eith: Either<T,U>) -> U {\n     }\n }\n \n+impl<T, U> Either<T, U> {\n+    #[inline(always)]\n+    fn unwrap_left(self) -> T { unwrap_left(self) }\n+\n+    #[inline(always)]\n+    fn unwrap_right(self) -> U { unwrap_right(self) }\n+}\n+\n #[test]\n fn test_either_left() {\n     let val = Left(10);"}, {"sha": "e5090f02b41bc02c2b48001001706142a61c829c", "filename": "src/libcore/mutable.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2ad41b881cb8389cb690c643e41c27f6c34270d5/src%2Flibcore%2Fmutable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ad41b881cb8389cb690c643e41c27f6c34270d5/src%2Flibcore%2Fmutable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmutable.rs?ref=2ad41b881cb8389cb690c643e41c27f6c34270d5", "patch": "@@ -73,6 +73,9 @@ impl<T> Data<T> {\n             op(unsafe{transmute_immut(&mut self.value)})\n         }\n     }\n+\n+    #[inline(always)]\n+    fn unwrap(self) -> T { unwrap(self) }\n }\n \n #[test]"}]}