{"sha": "59abf75d9e810f2a88c6dd0f37cfcbd6989a6446", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5YWJmNzVkOWU4MTBmMmE4OGM2ZGQwZjM3Y2ZjYmQ2OTg5YTY0NDY=", "commit": {"author": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2014-11-15T12:57:54Z"}, "committer": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2014-11-16T01:41:55Z"}, "message": "Move IntoString to collections::string", "tree": {"sha": "a3ee597b66f94ea16e11e1c4fb6ce56dc571068a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3ee597b66f94ea16e11e1c4fb6ce56dc571068a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/59abf75d9e810f2a88c6dd0f37cfcbd6989a6446", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/59abf75d9e810f2a88c6dd0f37cfcbd6989a6446", "html_url": "https://github.com/rust-lang/rust/commit/59abf75d9e810f2a88c6dd0f37cfcbd6989a6446", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/59abf75d9e810f2a88c6dd0f37cfcbd6989a6446/comments", "author": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d8ca045d6d143819fe386bff37ff7ecb0e380d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d8ca045d6d143819fe386bff37ff7ecb0e380d0", "html_url": "https://github.com/rust-lang/rust/commit/2d8ca045d6d143819fe386bff37ff7ecb0e380d0"}], "stats": {"total": 19, "additions": 9, "deletions": 10}, "files": [{"sha": "b5ed7e6a07780c20cf08a8dff0162d655d68f59d", "filename": "src/libcollections/string.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/59abf75d9e810f2a88c6dd0f37cfcbd6989a6446/src%2Flibcollections%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59abf75d9e810f2a88c6dd0f37cfcbd6989a6446/src%2Flibcollections%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstring.rs?ref=59abf75d9e810f2a88c6dd0f37cfcbd6989a6446", "patch": "@@ -802,6 +802,12 @@ impl FromStr for String {\n     }\n }\n \n+/// Trait for converting a type to a string, consuming it in the process.\n+pub trait IntoString {\n+    /// Consume and convert to a string.\n+    fn into_string(self) -> String;\n+}\n+\n /// Unsafe operations\n #[unstable = \"waiting on raw module conventions\"]\n pub mod raw {"}, {"sha": "923349b1bf74089ba378064d222e9e8e56cf0b02", "filename": "src/libstd/ascii.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/59abf75d9e810f2a88c6dd0f37cfcbd6989a6446/src%2Flibstd%2Fascii.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59abf75d9e810f2a88c6dd0f37cfcbd6989a6446/src%2Flibstd%2Fascii.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fascii.rs?ref=59abf75d9e810f2a88c6dd0f37cfcbd6989a6446", "patch": "@@ -21,8 +21,7 @@ use mem;\n use option::{Option, Some, None};\n use slice::{SlicePrelude, AsSlice};\n use str::{Str, StrPrelude};\n-use string::{mod, String};\n-use to_string::IntoString;\n+use string::{mod, String, IntoString};\n use vec::Vec;\n \n /// Datatype to hold one ascii character. It wraps a `u8`, with the highest bit always zero."}, {"sha": "a75c51b9f9f719b3b892d922eb8dcf8c0efde44c", "filename": "src/libstd/prelude.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/59abf75d9e810f2a88c6dd0f37cfcbd6989a6446/src%2Flibstd%2Fprelude.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59abf75d9e810f2a88c6dd0f37cfcbd6989a6446/src%2Flibstd%2Fprelude.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprelude.rs?ref=59abf75d9e810f2a88c6dd0f37cfcbd6989a6446", "patch": "@@ -76,14 +76,14 @@\n #[doc(no_inline)] pub use io::{Buffer, Writer, Reader, Seek};\n #[doc(no_inline)] pub use str::{Str, StrVector, StrPrelude};\n #[doc(no_inline)] pub use str::{IntoMaybeOwned, StrAllocating, UnicodeStrPrelude};\n-#[doc(no_inline)] pub use to_string::{ToString, IntoString};\n+#[doc(no_inline)] pub use to_string::ToString;\n #[doc(no_inline)] pub use tuple::{Tuple1, Tuple2, Tuple3, Tuple4};\n #[doc(no_inline)] pub use tuple::{Tuple5, Tuple6, Tuple7, Tuple8};\n #[doc(no_inline)] pub use tuple::{Tuple9, Tuple10, Tuple11, Tuple12};\n #[doc(no_inline)] pub use slice::{SlicePrelude, AsSlice, CloneSlicePrelude};\n #[doc(no_inline)] pub use slice::{VectorVector, PartialEqSlicePrelude, OrdSlicePrelude};\n #[doc(no_inline)] pub use slice::{CloneSliceAllocPrelude, OrdSliceAllocPrelude, SliceAllocPrelude};\n-#[doc(no_inline)] pub use string::String;\n+#[doc(no_inline)] pub use string::{IntoString, String};\n #[doc(no_inline)] pub use vec::Vec;\n \n // Reexported runtime types"}, {"sha": "327410b320db06f06d6538ce7cc095be76067bf9", "filename": "src/libstd/to_string.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/59abf75d9e810f2a88c6dd0f37cfcbd6989a6446/src%2Flibstd%2Fto_string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59abf75d9e810f2a88c6dd0f37cfcbd6989a6446/src%2Flibstd%2Fto_string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fto_string.rs?ref=59abf75d9e810f2a88c6dd0f37cfcbd6989a6446", "patch": "@@ -25,12 +25,6 @@ pub trait ToString {\n     fn to_string(&self) -> String;\n }\n \n-/// Trait for converting a type to a string, consuming it in the process.\n-pub trait IntoString {\n-    /// Consume and convert to a string.\n-    fn into_string(self) -> String;\n-}\n-\n impl<T: fmt::Show> ToString for T {\n     fn to_string(&self) -> String {\n         format!(\"{}\", *self)"}]}