{"sha": "2228b3f08631b5e9b32e6b6c82e758fe4bcbbd60", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyMjhiM2YwODYzMWI1ZTliMzJlNmI2YzgyZTc1OGZlNGJjYmJkNjA=", "commit": {"author": {"name": "Andreas Molzer", "email": "andreas.molzer@gmx.de", "date": "2019-08-17T17:49:51Z"}, "committer": {"name": "Andreas Molzer", "email": "andreas.molzer@gmx.de", "date": "2019-08-17T17:58:15Z"}, "message": "Derive HashStable for Allocation\n\nRequires a manual implementation for Relocations since dereferencing to\nSortedMap is not always implemented but that one is far more trivial.\nAdded fields could otherwise be silently forgotten since private fields\nmake destructing outside the module possible only with `..` pattern\nwhich would then also be applicable to newly added public fields.", "tree": {"sha": "8209c518d8cd231be57cad0ab84a43f58db1e3c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8209c518d8cd231be57cad0ab84a43f58db1e3c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2228b3f08631b5e9b32e6b6c82e758fe4bcbbd60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2228b3f08631b5e9b32e6b6c82e758fe4bcbbd60", "html_url": "https://github.com/rust-lang/rust/commit/2228b3f08631b5e9b32e6b6c82e758fe4bcbbd60", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2228b3f08631b5e9b32e6b6c82e758fe4bcbbd60/comments", "author": {"login": "HeroicKatora", "id": 5550310, "node_id": "MDQ6VXNlcjU1NTAzMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/5550310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HeroicKatora", "html_url": "https://github.com/HeroicKatora", "followers_url": "https://api.github.com/users/HeroicKatora/followers", "following_url": "https://api.github.com/users/HeroicKatora/following{/other_user}", "gists_url": "https://api.github.com/users/HeroicKatora/gists{/gist_id}", "starred_url": "https://api.github.com/users/HeroicKatora/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HeroicKatora/subscriptions", "organizations_url": "https://api.github.com/users/HeroicKatora/orgs", "repos_url": "https://api.github.com/users/HeroicKatora/repos", "events_url": "https://api.github.com/users/HeroicKatora/events{/privacy}", "received_events_url": "https://api.github.com/users/HeroicKatora/received_events", "type": "User", "site_admin": false}, "committer": {"login": "HeroicKatora", "id": 5550310, "node_id": "MDQ6VXNlcjU1NTAzMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/5550310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HeroicKatora", "html_url": "https://github.com/HeroicKatora", "followers_url": "https://api.github.com/users/HeroicKatora/followers", "following_url": "https://api.github.com/users/HeroicKatora/following{/other_user}", "gists_url": "https://api.github.com/users/HeroicKatora/gists{/gist_id}", "starred_url": "https://api.github.com/users/HeroicKatora/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HeroicKatora/subscriptions", "organizations_url": "https://api.github.com/users/HeroicKatora/orgs", "repos_url": "https://api.github.com/users/HeroicKatora/repos", "events_url": "https://api.github.com/users/HeroicKatora/events{/privacy}", "received_events_url": "https://api.github.com/users/HeroicKatora/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b9eecf964235f781806ce3e026c1522eb35e013", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b9eecf964235f781806ce3e026c1522eb35e013", "html_url": "https://github.com/rust-lang/rust/commit/9b9eecf964235f781806ce3e026c1522eb35e013"}], "stats": {"total": 39, "additions": 20, "deletions": 19}, "files": [{"sha": "be7669fcad875aabb90e9d2cb2c9ad6660a0bd3f", "filename": "src/librustc/ich/impls_ty.rs", "status": "modified", "additions": 8, "deletions": 18, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/2228b3f08631b5e9b32e6b6c82e758fe4bcbbd60/src%2Flibrustc%2Fich%2Fimpls_ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2228b3f08631b5e9b32e6b6c82e758fe4bcbbd60/src%2Flibrustc%2Fich%2Fimpls_ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_ty.rs?ref=2228b3f08631b5e9b32e6b6c82e758fe4bcbbd60", "patch": "@@ -168,31 +168,21 @@ impl<'a> HashStable<StableHashingContext<'a>> for mir::interpret::AllocId {\n     }\n }\n \n-// Allocations treat their relocations specially\n-impl<'a> HashStable<StableHashingContext<'a>> for mir::interpret::Allocation {\n+// `Relocations` with default type parameters is a sorted map.\n+impl<'a, Tag> HashStable<StableHashingContext<'a>>\n+for mir::interpret::Relocations<Tag>\n+where\n+    Tag: HashStable<StableHashingContext<'a>>,\n+{\n     fn hash_stable<W: StableHasherResult>(\n         &self,\n         hcx: &mut StableHashingContext<'a>,\n         hasher: &mut StableHasher<W>,\n     ) {\n-        let mir::interpret::Allocation {\n-            relocations, align, mutability, size,\n-            extra: _,\n-            .. /* private bytes and undef_mask */\n-        } = self;\n-\n-        let bytes = self.inspect_with_undef_and_ptr_outside_interpreter(0..self.len());\n-        let undef_mask = self.undef_mask();\n-\n-        bytes.hash_stable(hcx, hasher);\n-        relocations.len().hash_stable(hcx, hasher);\n-        for reloc in relocations.iter() {\n+        self.len().hash_stable(hcx, hasher);\n+        for reloc in self.iter() {\n             reloc.hash_stable(hcx, hasher);\n         }\n-        undef_mask.hash_stable(hcx, hasher);\n-        size.hash_stable(hcx, hasher);\n-        align.hash_stable(hcx, hasher);\n-        mutability.hash_stable(hcx, hasher);\n     }\n }\n "}, {"sha": "363fcaae5b266f79649407b90da7e269d9242887", "filename": "src/librustc/mir/interpret/allocation.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2228b3f08631b5e9b32e6b6c82e758fe4bcbbd60/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2228b3f08631b5e9b32e6b6c82e758fe4bcbbd60/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs?ref=2228b3f08631b5e9b32e6b6c82e758fe4bcbbd60", "patch": "@@ -13,7 +13,18 @@ use rustc_data_structures::sorted_map::SortedMap;\n use rustc_target::abi::HasDataLayout;\n use std::borrow::Cow;\n \n-#[derive(Clone, Debug, Eq, PartialEq, PartialOrd, Ord, Hash, RustcEncodable, RustcDecodable)]\n+#[derive(\n+    Clone,\n+    Debug,\n+    Eq,\n+    PartialEq,\n+    PartialOrd,\n+    Ord,\n+    Hash,\n+    RustcEncodable,\n+    RustcDecodable,\n+    HashStable,\n+)]\n pub struct Allocation<Tag=(),Extra=()> {\n     /// The actual bytes of the allocation.\n     /// Note that the bytes of a pointer represent the offset of the pointer."}]}