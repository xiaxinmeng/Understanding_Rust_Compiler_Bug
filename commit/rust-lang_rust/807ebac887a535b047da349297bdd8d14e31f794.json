{"sha": "807ebac887a535b047da349297bdd8d14e31f794", "node_id": "C_kwDOAAsO6NoAKDgwN2ViYWM4ODdhNTM1YjA0N2RhMzQ5Mjk3YmRkOGQxNGUzMWY3OTQ", "commit": {"author": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2023-01-05T19:43:08Z"}, "committer": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2023-01-29T12:01:35Z"}, "message": "Insert whitespace to avoid ident concatenation in suggestion", "tree": {"sha": "0f5995cf65277e6dafade4479b0fcaf643cfd462", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f5995cf65277e6dafade4479b0fcaf643cfd462"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/807ebac887a535b047da349297bdd8d14e31f794", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEkSbsQIURluxz4rzf4laYqTBYYXEFAmPWYB8ACgkQ4laYqTBY\nYXEaEg//fn7DqGpgmLbRIXs9SO+XYiAkalsNvd+El3vtfcUOQ4cuSyfGT9xTx2nS\nPFqHDjRcAtK7wdxUU/j1lQISugqdwV9/5TktbKah07kS2EPEbB+OaG4rGXoIk2XP\nFb9RubinIVIGCtrnDV9TitZfEq9xq3tOUkLRUcQiriO/0L77R0i+EFXoR2LTHIhD\nrwwUrX03KzGZrzwS0vvCQeUxulS7nEZ6eW6xbzZ+fmsfioxfUN/Bxd/GAPQqoaWW\nh11rOUOAf1qd5RhoA29VtwRswJ424cFRLVJRvV8FUM9yn5IWBnY+rSWjol/+bFRv\njUT9QaYpt+t9fK7o3zIyoN1oG5nkPq+SpJzE3VAq4Uymx/JKLDME94zPaX1cDSsb\nMftcqXloalGhAAlU/f18SLHihSyRCoe2dBwEI7C5s7+d3fX/qlkZHwVT2IyYR1Do\ns35D7dQS2083Q8BGTLS6fZ0K7mi2DuFz2PSQwbWGX37zv//mknh8ttv+fzdzUWXL\nyTCVmZKbgw6nDAo5pHd5N9sOPlwHY9nJRjvHxlAoJfcpHd08SuJYInUtq2qpjn4u\nY6GzQsAXaSz9PKKQeiL8abOtbxTS3ro74naZWaEMtNZuR4A6g/mHzGaT5EQkAlQj\nEnW48eDAq7a/pWxVgDkaJyjg+mmYKIR9+fmbh2qHN5xvVKkfL30=\n=17zd\n-----END PGP SIGNATURE-----", "payload": "tree 0f5995cf65277e6dafade4479b0fcaf643cfd462\nparent a29efccb1eff324c63454677688b5d7e08b5f40f\nauthor Ryo Yoshida <low.ryoshida@gmail.com> 1672947788 +0900\ncommitter Ryo Yoshida <low.ryoshida@gmail.com> 1674993695 +0900\n\nInsert whitespace to avoid ident concatenation in suggestion\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/807ebac887a535b047da349297bdd8d14e31f794", "html_url": "https://github.com/rust-lang/rust/commit/807ebac887a535b047da349297bdd8d14e31f794", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/807ebac887a535b047da349297bdd8d14e31f794/comments", "author": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a29efccb1eff324c63454677688b5d7e08b5f40f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a29efccb1eff324c63454677688b5d7e08b5f40f", "html_url": "https://github.com/rust-lang/rust/commit/a29efccb1eff324c63454677688b5d7e08b5f40f"}], "stats": {"total": 32, "additions": 23, "deletions": 9}, "files": [{"sha": "82d9138c7a331948c16e4c50bf711f558a845d33", "filename": "compiler/rustc_parse/src/parser/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/807ebac887a535b047da349297bdd8d14e31f794/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/807ebac887a535b047da349297bdd8d14e31f794/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fty.rs?ref=807ebac887a535b047da349297bdd8d14e31f794", "patch": "@@ -1048,7 +1048,7 @@ impl<'a> Parser<'a> {\n                 self.parse_remaining_bounds(bounds, true)?;\n                 self.expect(&token::CloseDelim(Delimiter::Parenthesis))?;\n                 let sp = vec![lo, self.prev_token.span];\n-                let sugg: Vec<_> = sp.iter().map(|sp| (*sp, String::new())).collect();\n+                let sugg = vec![(lo, String::from(\" \")), (self.prev_token.span, String::new())];\n                 self.struct_span_err(sp, \"incorrect braces around trait bounds\")\n                     .multipart_suggestion(\n                         \"remove the parentheses\","}, {"sha": "c41cda18743c81c37c7369a5d315bbf6ce749fae", "filename": "tests/ui/parser/trait-object-delimiters.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/807ebac887a535b047da349297bdd8d14e31f794/tests%2Fui%2Fparser%2Ftrait-object-delimiters.rs", "raw_url": "https://github.com/rust-lang/rust/raw/807ebac887a535b047da349297bdd8d14e31f794/tests%2Fui%2Fparser%2Ftrait-object-delimiters.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fparser%2Ftrait-object-delimiters.rs?ref=807ebac887a535b047da349297bdd8d14e31f794", "patch": "@@ -5,6 +5,8 @@ fn foo1(_: &dyn Drop + AsRef<str>) {} //~ ERROR ambiguous `+` in a type\n \n fn foo2(_: &dyn (Drop + AsRef<str>)) {} //~ ERROR incorrect braces around trait bounds\n \n+fn foo2_no_space(_: &dyn(Drop + AsRef<str>)) {} //~ ERROR incorrect braces around trait bounds\n+\n fn foo3(_: &dyn {Drop + AsRef<str>}) {} //~ ERROR expected parameter name, found `{`\n //~^ ERROR expected one of `!`, `(`, `)`, `*`, `,`, `?`, `for`, `~`, lifetime, or path, found `{`\n //~| ERROR at least one trait is required for an object type"}, {"sha": "ccce3a8053e703c4e15030c576873eddc0abbb11", "filename": "tests/ui/parser/trait-object-delimiters.stderr", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/807ebac887a535b047da349297bdd8d14e31f794/tests%2Fui%2Fparser%2Ftrait-object-delimiters.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/807ebac887a535b047da349297bdd8d14e31f794/tests%2Fui%2Fparser%2Ftrait-object-delimiters.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fparser%2Ftrait-object-delimiters.stderr?ref=807ebac887a535b047da349297bdd8d14e31f794", "patch": "@@ -13,31 +13,43 @@ LL | fn foo2(_: &dyn (Drop + AsRef<str>)) {}\n help: remove the parentheses\n    |\n LL - fn foo2(_: &dyn (Drop + AsRef<str>)) {}\n-LL + fn foo2(_: &dyn Drop + AsRef<str>) {}\n+LL + fn foo2(_: &dyn  Drop + AsRef<str>) {}\n+   |\n+\n+error: incorrect braces around trait bounds\n+  --> $DIR/trait-object-delimiters.rs:8:25\n+   |\n+LL | fn foo2_no_space(_: &dyn(Drop + AsRef<str>)) {}\n+   |                         ^                 ^\n+   |\n+help: remove the parentheses\n+   |\n+LL - fn foo2_no_space(_: &dyn(Drop + AsRef<str>)) {}\n+LL + fn foo2_no_space(_: &dyn Drop + AsRef<str>) {}\n    |\n \n error: expected parameter name, found `{`\n-  --> $DIR/trait-object-delimiters.rs:8:17\n+  --> $DIR/trait-object-delimiters.rs:10:17\n    |\n LL | fn foo3(_: &dyn {Drop + AsRef<str>}) {}\n    |                 ^ expected parameter name\n \n error: expected one of `!`, `(`, `)`, `*`, `,`, `?`, `for`, `~`, lifetime, or path, found `{`\n-  --> $DIR/trait-object-delimiters.rs:8:17\n+  --> $DIR/trait-object-delimiters.rs:10:17\n    |\n LL | fn foo3(_: &dyn {Drop + AsRef<str>}) {}\n    |                -^ expected one of 10 possible tokens\n    |                |\n    |                help: missing `,`\n \n error: expected identifier, found `<`\n-  --> $DIR/trait-object-delimiters.rs:12:17\n+  --> $DIR/trait-object-delimiters.rs:14:17\n    |\n LL | fn foo4(_: &dyn <Drop + AsRef<str>>) {}\n    |                 ^ expected identifier\n \n error: invalid `dyn` keyword\n-  --> $DIR/trait-object-delimiters.rs:14:25\n+  --> $DIR/trait-object-delimiters.rs:16:25\n    |\n LL | fn foo5(_: &(dyn Drop + dyn AsRef<str>)) {}\n    |                         ^^^ help: remove this keyword\n@@ -56,13 +68,13 @@ LL | fn foo1(_: &dyn Drop + AsRef<str>) {}\n    = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0224]: at least one trait is required for an object type\n-  --> $DIR/trait-object-delimiters.rs:8:13\n+  --> $DIR/trait-object-delimiters.rs:10:13\n    |\n LL | fn foo3(_: &dyn {Drop + AsRef<str>}) {}\n    |             ^^^\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n-  --> $DIR/trait-object-delimiters.rs:14:29\n+  --> $DIR/trait-object-delimiters.rs:16:29\n    |\n LL | fn foo5(_: &(dyn Drop + dyn AsRef<str>)) {}\n    |                  ----       ^^^^^^^^^^ additional non-auto trait\n@@ -72,7 +84,7 @@ LL | fn foo5(_: &(dyn Drop + dyn AsRef<str>)) {}\n    = help: consider creating a new trait with all of these as supertraits and using that trait here instead: `trait NewTrait: Drop + AsRef<str> {}`\n    = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n-error: aborting due to 9 previous errors\n+error: aborting due to 10 previous errors\n \n Some errors have detailed explanations: E0224, E0225.\n For more information about an error, try `rustc --explain E0224`."}]}