{"sha": "a090bb1dea18af72dce2195fa4de396bcb51061b", "node_id": "C_kwDOAAsO6NoAKGEwOTBiYjFkZWExOGFmNzJkY2UyMTk1ZmE0ZGUzOTZiY2I1MTA2MWI", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-01-25T18:47:10Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-01-25T18:47:10Z"}, "message": "Remove delayed bug when encountering label in bad turbofish", "tree": {"sha": "6dc713dc36ed7fbee4b5483792db4e3a68fa0cd7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6dc713dc36ed7fbee4b5483792db4e3a68fa0cd7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a090bb1dea18af72dce2195fa4de396bcb51061b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a090bb1dea18af72dce2195fa4de396bcb51061b", "html_url": "https://github.com/rust-lang/rust/commit/a090bb1dea18af72dce2195fa4de396bcb51061b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a090bb1dea18af72dce2195fa4de396bcb51061b/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7825f2b690c9a0d21b6f6d84c404bb53b151b38", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7825f2b690c9a0d21b6f6d84c404bb53b151b38", "html_url": "https://github.com/rust-lang/rust/commit/e7825f2b690c9a0d21b6f6d84c404bb53b151b38"}], "stats": {"total": 51, "additions": 45, "deletions": 6}, "files": [{"sha": "15f29d083dbe1db9ec4e45b52c4c9d1d18fad0b6", "filename": "compiler/rustc_parse/src/parser/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a090bb1dea18af72dce2195fa4de396bcb51061b/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a090bb1dea18af72dce2195fa4de396bcb51061b/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs?ref=a090bb1dea18af72dce2195fa4de396bcb51061b", "patch": "@@ -737,7 +737,7 @@ impl<'a> Parser<'a> {\n                                     \"::\".to_string(),\n                                     Applicability::MaybeIncorrect,\n                                 );\n-                                if self.check(&TokenKind::Semi) {\n+                                if matches!(self.token.kind, token::Semi | token::CloseDelim(_)) {\n                                     turbo_err.emit();\n                                     *expr = self.mk_expr_err(expr.span);\n                                     return Ok(());"}, {"sha": "19ad1b3cec8a3593a2d51a469b59ecd0bd045335", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a090bb1dea18af72dce2195fa4de396bcb51061b/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a090bb1dea18af72dce2195fa4de396bcb51061b/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=a090bb1dea18af72dce2195fa4de396bcb51061b", "patch": "@@ -1448,6 +1448,8 @@ impl<'a> Parser<'a> {\n         let lo = label.ident.span;\n         let label = Some(label);\n         let ate_colon = self.eat(&token::Colon);\n+        let msg = \"expected `while`, `for`, `loop` or `{` after a label\";\n+\n         let expr = if self.eat_keyword(kw::While) {\n             self.parse_while_expr(label, lo, attrs)\n         } else if self.eat_keyword(kw::For) {\n@@ -1457,13 +1459,12 @@ impl<'a> Parser<'a> {\n         } else if self.check(&token::OpenDelim(token::Brace)) || self.token.is_whole_block() {\n             self.parse_block_expr(label, lo, BlockCheckMode::Default, attrs)\n         } else if !ate_colon && (self.check(&TokenKind::Comma) || self.check(&TokenKind::Gt)) {\n+            self.struct_span_err(self.token.span, msg).span_label(self.token.span, msg).emit();\n             // We're probably inside of a `Path<'a>` that needs a turbofish, so suppress the\n             // \"must be followed by a colon\" error.\n-            self.diagnostic().delay_span_bug(lo, \"this label wasn't parsed correctly\");\n             consume_colon = false;\n             Ok(self.mk_expr_err(lo))\n         } else {\n-            let msg = \"expected `while`, `for`, `loop` or `{` after a label\";\n             self.struct_span_err(self.token.span, msg).span_label(self.token.span, msg).emit();\n             // Continue as an expression in an effort to recover on `'label: non_block_expr`.\n             self.parse_expr()"}, {"sha": "85a11866867085def49a1ef02c1511a5711eafa9", "filename": "src/test/ui/parser/issues/issue-93282.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a090bb1dea18af72dce2195fa4de396bcb51061b/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-93282.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a090bb1dea18af72dce2195fa4de396bcb51061b/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-93282.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-93282.rs?ref=a090bb1dea18af72dce2195fa4de396bcb51061b", "patch": "@@ -0,0 +1,5 @@\n+fn main() {\n+    f<'a,>\n+    //~^ ERROR expected\n+    //~| ERROR expected\n+}"}, {"sha": "a66beacc81d0e73f5db0840fff1e21521ddf1c4f", "filename": "src/test/ui/parser/issues/issue-93282.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a090bb1dea18af72dce2195fa4de396bcb51061b/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-93282.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a090bb1dea18af72dce2195fa4de396bcb51061b/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-93282.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-93282.stderr?ref=a090bb1dea18af72dce2195fa4de396bcb51061b", "patch": "@@ -0,0 +1,19 @@\n+error: expected `while`, `for`, `loop` or `{` after a label\n+  --> $DIR/issue-93282.rs:2:9\n+   |\n+LL |     f<'a,>\n+   |         ^ expected `while`, `for`, `loop` or `{` after a label\n+\n+error: expected one of `.`, `:`, `;`, `?`, `for`, `loop`, `while`, `{`, `}`, or an operator, found `,`\n+  --> $DIR/issue-93282.rs:2:9\n+   |\n+LL |     f<'a,>\n+   |         ^ expected one of 10 possible tokens\n+   |\n+help: use `::<...>` instead of `<...>` to specify lifetime, type, or const arguments\n+   |\n+LL |     f::<'a,>\n+   |      ++\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "aaa703f763e14a11647a2b382cf5fd08d5662512", "filename": "src/test/ui/parser/require-parens-for-chained-comparison.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a090bb1dea18af72dce2195fa4de396bcb51061b/src%2Ftest%2Fui%2Fparser%2Frequire-parens-for-chained-comparison.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a090bb1dea18af72dce2195fa4de396bcb51061b/src%2Ftest%2Fui%2Fparser%2Frequire-parens-for-chained-comparison.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Frequire-parens-for-chained-comparison.rs?ref=a090bb1dea18af72dce2195fa4de396bcb51061b", "patch": "@@ -21,10 +21,12 @@ fn main() {\n \n     let _ = f<'_, i8>();\n     //~^ ERROR expected one of\n+    //~| ERROR expected\n     //~| HELP use `::<...>` instead of `<...>` to specify lifetime, type, or const arguments\n \n     f<'_>();\n     //~^ comparison operators cannot be chained\n+    //~| ERROR expected\n     //~| HELP use `::<...>` instead of `<...>` to specify lifetime, type, or const arguments\n \n     let _ = f<u8>;"}, {"sha": "92d700753dc1b24665bce4e45eb9e056f363e215", "filename": "src/test/ui/parser/require-parens-for-chained-comparison.stderr", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a090bb1dea18af72dce2195fa4de396bcb51061b/src%2Ftest%2Fui%2Fparser%2Frequire-parens-for-chained-comparison.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a090bb1dea18af72dce2195fa4de396bcb51061b/src%2Ftest%2Fui%2Fparser%2Frequire-parens-for-chained-comparison.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Frequire-parens-for-chained-comparison.stderr?ref=a090bb1dea18af72dce2195fa4de396bcb51061b", "patch": "@@ -53,6 +53,12 @@ help: use `::<...>` instead of `<...>` to specify lifetime, type, or const argum\n LL |     let _ = f::<u8, i8>();\n    |              ++\n \n+error: expected `while`, `for`, `loop` or `{` after a label\n+  --> $DIR/require-parens-for-chained-comparison.rs:22:17\n+   |\n+LL |     let _ = f<'_, i8>();\n+   |                 ^ expected `while`, `for`, `loop` or `{` after a label\n+\n error: expected one of `.`, `:`, `;`, `?`, `else`, `for`, `loop`, `while`, `{`, or an operator, found `,`\n   --> $DIR/require-parens-for-chained-comparison.rs:22:17\n    |\n@@ -64,8 +70,14 @@ help: use `::<...>` instead of `<...>` to specify lifetime, type, or const argum\n LL |     let _ = f::<'_, i8>();\n    |              ++\n \n+error: expected `while`, `for`, `loop` or `{` after a label\n+  --> $DIR/require-parens-for-chained-comparison.rs:27:9\n+   |\n+LL |     f<'_>();\n+   |         ^ expected `while`, `for`, `loop` or `{` after a label\n+\n error: comparison operators cannot be chained\n-  --> $DIR/require-parens-for-chained-comparison.rs:26:6\n+  --> $DIR/require-parens-for-chained-comparison.rs:27:6\n    |\n LL |     f<'_>();\n    |      ^  ^\n@@ -76,13 +88,13 @@ LL |     f::<'_>();\n    |      ++\n \n error: comparison operators cannot be chained\n-  --> $DIR/require-parens-for-chained-comparison.rs:30:14\n+  --> $DIR/require-parens-for-chained-comparison.rs:32:14\n    |\n LL |     let _ = f<u8>;\n    |              ^  ^\n    |\n    = help: use `::<...>` instead of `<...>` to specify lifetime, type, or const arguments\n    = help: or use `(...)` if you meant to specify fn arguments\n \n-error: aborting due to 8 previous errors\n+error: aborting due to 10 previous errors\n "}]}