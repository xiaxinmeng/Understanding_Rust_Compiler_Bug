{"sha": "65c53c3bb6190319e210c94164b05a17997073f2", "node_id": "C_kwDOAAsO6NoAKDY1YzUzYzNiYjYxOTAzMTllMjEwYzk0MTY0YjA1YTE3OTk3MDczZjI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-17T14:51:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-17T14:51:10Z"}, "message": "Auto merge of #105800 - lqd:dylib-thinlto, r=bjorn3\n\nDon't copy symbols from dylibs with `-Zdylib-lto`\n\nWhen `rustc_driver` started being built with `-Zdylib-lto -Clto=thin`, some libstd symbols were copied by the LTO process into the dylib. That causes duplicate local symbols that are not present otherwise.\n\nDepending on the situation (lib loading order apparently), the duplicated symbols could cause issues: `rustc_driver` overrode the panic hook, but it didn't apply to rustc main's hook (the default from libstd). This is the cause of #105637, in some situations the panic hook installed by `rustc_driver` isn't executed, and only libstd's backtrace is shown (and a double panic). The query stack, as well as the various notes to open a GH about the ICE, don't appear.\n\nIt's not clear exactly what is needed to trigger the issue, but I have simulated a reproducer [here](https://github.com/lqd/issue-105637) with cargo involved, the incorrect panic hook is executed on my machine. It is hard to reproduce in a unit test: `cargo run` + `rustup` involves LD_LIBRARY_PATH, which is not the case for `compiletest`. cargo also adds unconditional flags that are then overridden in [`bootstrap` when building rustc with `rust.lto = thin`](https://github.com/rust-lang/rust/blob/9c07efe84f28a44f3044237696acc295aa407ee5/src/bootstrap/compile.rs#L702-L714) as done on CI).\n\nAll this to say the compilation and execution environment in `bootstrap` leading to the bug building `rustc_driver` is different from our UI tests, and I believe one of the reasons it's hard to make an exact reproducer test. Thankfully there's _still_ a difference in the behavior though: although in the unit test the correct panic hook seems to be executed compared to my repro and the current nightly, only the fix removes the double panic here.\n\nThe `7e8277aefa12f1469fb1df01418ff5846a7854a9` `try` build:\n- fixes the reproducer repo linked above\n- restores the ICE messages from https://github.com/rust-lang/rust/issues/105321 back to the state in its OP compared to the description in https://github.com/rust-lang/rust/issues/105637\n- restores the ICE message and the query stack from https://github.com/rust-lang/rust/issues/105777 compared to nightly\n\nWhile I believe this technically fixes the P-critical issue https://github.com/rust-lang/rust/issues/105637, I would not want to close it yet as we may want to backport to beta/stable (if a point release happens, it would fix the ICEs reported on 1.66.0, which is built with ThinLTO on linux). Once this PR lands, I'll also open another PR to re-enable ThinLTO on x64 darwin's dist builder.", "tree": {"sha": "966a83c7690834b44e046db0737746034ec760c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/966a83c7690834b44e046db0737746034ec760c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65c53c3bb6190319e210c94164b05a17997073f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65c53c3bb6190319e210c94164b05a17997073f2", "html_url": "https://github.com/rust-lang/rust/commit/65c53c3bb6190319e210c94164b05a17997073f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65c53c3bb6190319e210c94164b05a17997073f2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aef17b7ae6160352e2814c8686f7e4b2ee04d9e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/aef17b7ae6160352e2814c8686f7e4b2ee04d9e4", "html_url": "https://github.com/rust-lang/rust/commit/aef17b7ae6160352e2814c8686f7e4b2ee04d9e4"}, {"sha": "be5685bb4d2190b6f5274d6d23dce3542cdf95b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/be5685bb4d2190b6f5274d6d23dce3542cdf95b5", "html_url": "https://github.com/rust-lang/rust/commit/be5685bb4d2190b6f5274d6d23dce3542cdf95b5"}], "stats": {"total": 54, "additions": 53, "deletions": 1}, "files": [{"sha": "fe2e4b36cd0f1eeb82cf29f2be8c0f8296634365", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/65c53c3bb6190319e210c94164b05a17997073f2/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65c53c3bb6190319e210c94164b05a17997073f2/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=65c53c3bb6190319e210c94164b05a17997073f2", "patch": "@@ -253,7 +253,7 @@ pub fn each_linked_rlib(\n     };\n     for &cnum in crates {\n         match fmts.get(cnum.as_usize() - 1) {\n-            Some(&Linkage::NotLinked | &Linkage::IncludedFromDylib) => continue,\n+            Some(&Linkage::NotLinked | &Linkage::Dynamic | &Linkage::IncludedFromDylib) => continue,\n             Some(_) => {}\n             None => return Err(errors::LinkRlibError::MissingFormat),\n         }"}, {"sha": "9d17c35dafc25cfe3168ca4054cc72c5773a8e81", "filename": "src/test/ui/lto/auxiliary/thinlto-dylib.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/65c53c3bb6190319e210c94164b05a17997073f2/src%2Ftest%2Fui%2Flto%2Fauxiliary%2Fthinlto-dylib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65c53c3bb6190319e210c94164b05a17997073f2/src%2Ftest%2Fui%2Flto%2Fauxiliary%2Fthinlto-dylib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flto%2Fauxiliary%2Fthinlto-dylib.rs?ref=65c53c3bb6190319e210c94164b05a17997073f2", "patch": "@@ -0,0 +1,23 @@\n+// Auxiliary crate for test issue-105637: the LTOed dylib which had duplicate symbols from libstd,\n+// breaking the panic hook feature.\n+//\n+// This simulates the `rustc_driver` crate, and the main crate simulates rustc's main binary hooking\n+// into this driver.\n+\n+// compile-flags: -Zdylib-lto -C lto=thin\n+\n+use std::panic;\n+\n+pub fn main() {\n+    // Install the hook we want to see executed\n+    panic::set_hook(Box::new(|_| {\n+        eprintln!(\"LTOed auxiliary crate panic hook\");\n+    }));\n+\n+    // Trigger the panic hook with an ICE\n+    run_compiler();\n+}\n+\n+fn run_compiler() {\n+    panic!(\"ICEing\");\n+}"}, {"sha": "0d9f0bec00fd3bac79667b4333b7969b0639df3c", "filename": "src/test/ui/lto/issue-105637.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/65c53c3bb6190319e210c94164b05a17997073f2/src%2Ftest%2Fui%2Flto%2Fissue-105637.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65c53c3bb6190319e210c94164b05a17997073f2/src%2Ftest%2Fui%2Flto%2Fissue-105637.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flto%2Fissue-105637.rs?ref=65c53c3bb6190319e210c94164b05a17997073f2", "patch": "@@ -0,0 +1,28 @@\n+// Regression test for issue #105637: `-Zdylib-lto` with LTO duplicated symbols from other dylibs,\n+// in this case from libstd.\n+//\n+// That manifested as both `rustc_driver` and rustc's \"main\" (`compiler/rustc`) having their own\n+// `std::panicking::HOOK` static, and the hook in rustc's main (the default stdlib's) being executed\n+// when rustc ICEs, instead of the overriden hook from `rustc_driver` (which also displays the query\n+// stack and information on how to open a GH issue for the encountered ICE).\n+//\n+// In this test, we reproduce this setup by installing a panic hook in both the main and an LTOed\n+// dylib: the last hook set should be the one being executed, the dylib's.\n+\n+// aux-build: thinlto-dylib.rs\n+// run-fail\n+// check-run-results\n+\n+extern crate thinlto_dylib;\n+\n+use std::panic;\n+\n+fn main() {\n+    // We don't want to see this panic hook executed\n+    std::panic::set_hook(Box::new(|_| {\n+        eprintln!(\"main crate panic hook\");\n+    }));\n+\n+    // Have the LTOed dylib install its own hook and panic, we want to see its hook executed.\n+    thinlto_dylib::main();\n+}"}, {"sha": "43388e7763ee282da9f9fbcda7a4414c04a59de3", "filename": "src/test/ui/lto/issue-105637.run.stderr", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/65c53c3bb6190319e210c94164b05a17997073f2/src%2Ftest%2Fui%2Flto%2Fissue-105637.run.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/65c53c3bb6190319e210c94164b05a17997073f2/src%2Ftest%2Fui%2Flto%2Fissue-105637.run.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flto%2Fissue-105637.run.stderr?ref=65c53c3bb6190319e210c94164b05a17997073f2", "patch": "@@ -0,0 +1 @@\n+LTOed auxiliary crate panic hook"}]}