{"sha": "89fbed98c260fa30bf54138b3c8677f3d17845e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5ZmJlZDk4YzI2MGZhMzBiZjU0MTM4YjNjODY3N2YzZDE3ODQ1ZTI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-31T18:19:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-31T18:19:33Z"}, "message": "Rollup merge of #67685 - lukaslueg:const_result, r=oli-obk\n\nConstify Result\n\nr? @oli-obk\n\nThis is just the `Result`-part of #67494 which I'll resubmit once #66254 has landed.", "tree": {"sha": "c41e553a488c754c3421d65cd18490c74de2453f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c41e553a488c754c3421d65cd18490c74de2453f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/89fbed98c260fa30bf54138b3c8677f3d17845e2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeC5E1CRBK7hj4Ov3rIwAAdHIIAHf6xpw5njnJcp3xtujDyhBm\nLEXlerGWJ/lTJyZ7+b/9I90NaBuXfamX+JrUNje2w6gE5d0L6COLTdR6H7OSe08g\n79NkjLI7BCVP1pVOW8wGUGgYZToErl9Squ1hJXDiAvzfhBVBx+UxARDHjQ4KtKe9\nm1SO3vN2M+u2ivWuRRJudsGkX3zWuVbOMy8txEwNtzX8vdLbozi0IjE93yC7EDv+\nism1CQkOWSFeVc+ohugHiSDMNKZmsIic472G9nRCadMwF7w4dz43NN1TgltCQdLg\noKqYtb0zQCDOBFRDsSTBJ0SQku/SHPqqyxBOTpUwvuyuYMwcRQDNmFde6jpBsVk=\n=o2u3\n-----END PGP SIGNATURE-----\n", "payload": "tree c41e553a488c754c3421d65cd18490c74de2453f\nparent 3cf2bc0e51f012b0fb590536a9125c7b67883bb9\nparent 954c432a87fc5069ac10cc5a92fd44106be1e7fd\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1577816373 +0100\ncommitter GitHub <noreply@github.com> 1577816373 +0100\n\nRollup merge of #67685 - lukaslueg:const_result, r=oli-obk\n\nConstify Result\n\nr? @oli-obk\n\nThis is just the `Result`-part of #67494 which I'll resubmit once #66254 has landed.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/89fbed98c260fa30bf54138b3c8677f3d17845e2", "html_url": "https://github.com/rust-lang/rust/commit/89fbed98c260fa30bf54138b3c8677f3d17845e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/89fbed98c260fa30bf54138b3c8677f3d17845e2/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3cf2bc0e51f012b0fb590536a9125c7b67883bb9", "url": "https://api.github.com/repos/rust-lang/rust/commits/3cf2bc0e51f012b0fb590536a9125c7b67883bb9", "html_url": "https://github.com/rust-lang/rust/commit/3cf2bc0e51f012b0fb590536a9125c7b67883bb9"}, {"sha": "954c432a87fc5069ac10cc5a92fd44106be1e7fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/954c432a87fc5069ac10cc5a92fd44106be1e7fd", "html_url": "https://github.com/rust-lang/rust/commit/954c432a87fc5069ac10cc5a92fd44106be1e7fd"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "8e1273c3172d3a4fbaa463b86bfeaa7bc53801eb", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/89fbed98c260fa30bf54138b3c8677f3d17845e2/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89fbed98c260fa30bf54138b3c8677f3d17845e2/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=89fbed98c260fa30bf54138b3c8677f3d17845e2", "patch": "@@ -76,6 +76,7 @@\n #![feature(const_fn_union)]\n #![feature(const_generics)]\n #![feature(const_ptr_offset_from)]\n+#![feature(const_result)]\n #![feature(const_type_name)]\n #![feature(custom_inner_attributes)]\n #![feature(decl_macro)]"}, {"sha": "5cfc81097dd44a3b9b7a5e3381c5e08ab34bbe7c", "filename": "src/libcore/result.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/89fbed98c260fa30bf54138b3c8677f3d17845e2/src%2Flibcore%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89fbed98c260fa30bf54138b3c8677f3d17845e2/src%2Flibcore%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fresult.rs?ref=89fbed98c260fa30bf54138b3c8677f3d17845e2", "patch": "@@ -278,9 +278,10 @@ impl<T, E> Result<T, E> {\n     /// assert_eq!(x.is_ok(), false);\n     /// ```\n     #[must_use = \"if you intended to assert that this is ok, consider `.unwrap()` instead\"]\n+    #[rustc_const_unstable(feature = \"const_result\", issue = \"67520\")]\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn is_ok(&self) -> bool {\n+    pub const fn is_ok(&self) -> bool {\n         match *self {\n             Ok(_) => true,\n             Err(_) => false,\n@@ -303,9 +304,10 @@ impl<T, E> Result<T, E> {\n     /// assert_eq!(x.is_err(), true);\n     /// ```\n     #[must_use = \"if you intended to assert that this is err, consider `.unwrap_err()` instead\"]\n+    #[rustc_const_unstable(feature = \"const_result\", issue = \"67520\")]\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn is_err(&self) -> bool {\n+    pub const fn is_err(&self) -> bool {\n         !self.is_ok()\n     }\n \n@@ -446,8 +448,9 @@ impl<T, E> Result<T, E> {\n     /// assert_eq!(x.as_ref(), Err(&\"Error\"));\n     /// ```\n     #[inline]\n+    #[rustc_const_unstable(feature = \"const_result\", issue = \"67520\")]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn as_ref(&self) -> Result<&T, &E> {\n+    pub const fn as_ref(&self) -> Result<&T, &E> {\n         match *self {\n             Ok(ref x) => Ok(x),\n             Err(ref x) => Err(x),"}]}