{"sha": "1adb4d6e5f5d242459655a6ef071669422ce0019", "node_id": "C_kwDOAAsO6NoAKDFhZGI0ZDZlNWY1ZDI0MjQ1OTY1NWE2ZWYwNzE2Njk0MjJjZTAwMTk", "commit": {"author": {"name": "Ikko Eltociear Ashimine", "email": "eltociear@gmail.com", "date": "2023-01-20T08:56:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-20T08:56:29Z"}, "message": "Fix typo in opaque_types.rs\n\nparamters -> parameters", "tree": {"sha": "21375dd854efb777958da478f8736c1b07a4ee7d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/21375dd854efb777958da478f8736c1b07a4ee7d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1adb4d6e5f5d242459655a6ef071669422ce0019", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjylc9CRBK7hj4Ov3rIwAAa1wIAC1nt1xmMIkMff3jbTGGOEKJ\n+c1dvUK+JD3yX+IG0eR5xQs0e5MhRFAuPjBRz1BxGoZ5HPvIwCr89tYX/SaR80dh\n6Oqx+hwZDHwzD1MaGUFIPuqR/b2GLswomXeI95NSIBopF3QFPI24qJiXNgvb4QAc\nuN0k/L7eV/9HjiTJaS0ZLd58MCGYyw+Jp7dYQlGuG20OvT9zcTA+hNcP7hxJgJb4\n+FkH0WkjFizG+z65Q2jTrmI/DDmQ2cgQ+QFEj+CIB1c6L4GvmFr/kwmppIzGsbhq\ndSw6ZRpyfGY9Fnp797F7fKy/3iQgytXpHMYf5B0IRiwj4jvWBnMSFGP/WND8gTo=\n=uceG\n-----END PGP SIGNATURE-----\n", "payload": "tree 21375dd854efb777958da478f8736c1b07a4ee7d\nparent 56ee85274e5a3a4dda92f3bf73d1664c74ff9c15\nauthor Ikko Eltociear Ashimine <eltociear@gmail.com> 1674204989 +0900\ncommitter GitHub <noreply@github.com> 1674204989 +0900\n\nFix typo in opaque_types.rs\n\nparamters -> parameters"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1adb4d6e5f5d242459655a6ef071669422ce0019", "html_url": "https://github.com/rust-lang/rust/commit/1adb4d6e5f5d242459655a6ef071669422ce0019", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1adb4d6e5f5d242459655a6ef071669422ce0019/comments", "author": {"login": "eltociear", "id": 22633385, "node_id": "MDQ6VXNlcjIyNjMzMzg1", "avatar_url": "https://avatars.githubusercontent.com/u/22633385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eltociear", "html_url": "https://github.com/eltociear", "followers_url": "https://api.github.com/users/eltociear/followers", "following_url": "https://api.github.com/users/eltociear/following{/other_user}", "gists_url": "https://api.github.com/users/eltociear/gists{/gist_id}", "starred_url": "https://api.github.com/users/eltociear/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eltociear/subscriptions", "organizations_url": "https://api.github.com/users/eltociear/orgs", "repos_url": "https://api.github.com/users/eltociear/repos", "events_url": "https://api.github.com/users/eltociear/events{/privacy}", "received_events_url": "https://api.github.com/users/eltociear/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56ee85274e5a3a4dda92f3bf73d1664c74ff9c15", "url": "https://api.github.com/repos/rust-lang/rust/commits/56ee85274e5a3a4dda92f3bf73d1664c74ff9c15", "html_url": "https://github.com/rust-lang/rust/commit/56ee85274e5a3a4dda92f3bf73d1664c74ff9c15"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "c54c66eab27998cdf0616e36d25404fdc417a143", "filename": "compiler/rustc_infer/src/infer/opaque_types.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1adb4d6e5f5d242459655a6ef071669422ce0019/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fopaque_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1adb4d6e5f5d242459655a6ef071669422ce0019/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fopaque_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fopaque_types.rs?ref=1adb4d6e5f5d242459655a6ef071669422ce0019", "patch": "@@ -479,7 +479,7 @@ where\n             }\n \n             ty::Alias(ty::Opaque, ty::AliasTy { def_id, ref substs, .. }) => {\n-                // Skip lifetime paramters that are not captures.\n+                // Skip lifetime parameters that are not captures.\n                 let variances = self.tcx.variances_of(*def_id);\n \n                 for (v, s) in std::iter::zip(variances, substs.iter()) {\n@@ -492,7 +492,7 @@ where\n             ty::Alias(ty::Projection, proj)\n                 if self.tcx.def_kind(proj.def_id) == DefKind::ImplTraitPlaceholder =>\n             {\n-                // Skip lifetime paramters that are not captures.\n+                // Skip lifetime parameters that are not captures.\n                 let variances = self.tcx.variances_of(proj.def_id);\n \n                 for (v, s) in std::iter::zip(variances, proj.substs.iter()) {"}]}