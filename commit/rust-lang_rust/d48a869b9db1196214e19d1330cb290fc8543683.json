{"sha": "d48a869b9db1196214e19d1330cb290fc8543683", "node_id": "C_kwDOAAsO6NoAKGQ0OGE4NjliOWRiMTE5NjIxNGUxOWQxMzMwY2IyOTBmYzg1NDM2ODM", "commit": {"author": {"name": "Jubilee Young", "email": "workingjubilee@gmail.com", "date": "2022-07-26T21:10:26Z"}, "committer": {"name": "Jubilee Young", "email": "workingjubilee@gmail.com", "date": "2022-07-26T21:45:28Z"}, "message": "Force the Cow into a String", "tree": {"sha": "ad063abe43c51b373cc229d3512415c82fc33ae6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad063abe43c51b373cc229d3512415c82fc33ae6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d48a869b9db1196214e19d1330cb290fc8543683", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d48a869b9db1196214e19d1330cb290fc8543683", "html_url": "https://github.com/rust-lang/rust/commit/d48a869b9db1196214e19d1330cb290fc8543683", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d48a869b9db1196214e19d1330cb290fc8543683/comments", "author": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79e05430600dca42571ba38703af2969bab48760", "url": "https://api.github.com/repos/rust-lang/rust/commits/79e05430600dca42571ba38703af2969bab48760", "html_url": "https://github.com/rust-lang/rust/commit/79e05430600dca42571ba38703af2969bab48760"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "59066a33c965eecce361b9869e2b593d3b7a775a", "filename": "library/core/src/ffi/c_str.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d48a869b9db1196214e19d1330cb290fc8543683/library%2Fcore%2Fsrc%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d48a869b9db1196214e19d1330cb290fc8543683/library%2Fcore%2Fsrc%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fffi%2Fc_str.rs?ref=d48a869b9db1196214e19d1330cb290fc8543683", "patch": "@@ -65,9 +65,9 @@ use crate::str;\n /// extern \"C\" { fn my_string() -> *const c_char; }\n ///\n /// fn my_string_safe() -> String {\n-///     unsafe {\n-///         String::from_utf8_lossy(CStr::from_ptr(my_string()))\n-///     }\n+///     let cstr = unsafe { CStr::from_ptr(my_string()) };\n+///     // Get copy-on-write Cow<'_, str>, then guarantee a freshly-owned String allocation\n+///     String::from_utf8_lossy(cstr.to_bytes()).to_string()\n /// }\n ///\n /// println!(\"string: {}\", my_string_safe());"}]}