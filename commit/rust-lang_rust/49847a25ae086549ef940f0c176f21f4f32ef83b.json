{"sha": "49847a25ae086549ef940f0c176f21f4f32ef83b", "node_id": "C_kwDOAAsO6NoAKDQ5ODQ3YTI1YWUwODY1NDllZjk0MGYwYzE3NmYyMWY0ZjMyZWY4M2I", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-04-12T15:17:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-12T15:17:00Z"}, "message": "Merge #11883\n\n11883: fix(ide): move moudle directory when rename r=rainy-me a=rainy-me\n\nfix: #10992\r\n\r\nAdded `FileSystemEdit::MoveDir` variant for move dirs. Original implemented as recursively move child mod files but had many issues like\r\n\r\n1. left empty dir after rename file\r\n2. only affect rust file\r\n3. not performant\r\n\r\nso changed to current version\n\nCo-authored-by: rainy-me <github@yue.coffee>", "tree": {"sha": "8dbcc59691a4072267a34a126f68112e8b314473", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8dbcc59691a4072267a34a126f68112e8b314473"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49847a25ae086549ef940f0c176f21f4f32ef83b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiVZfsCRBK7hj4Ov3rIwAAhMIIAFvEf37CE5+67mxkCyhPB988\nCGST0g1fyTMwo8xCCFAX6sWjimdtDiDlyBS9omJeeg3XjohBi042Tevlf+CBqNRK\neCq0OEUpct1+37ViNo7kljvTa2inq5/ZB3oVNxtHMC1czzAXjPXvUWSe34jwgA8q\naGTCzPJ8AyqkxJ6Zh6hOj2Sknk/b0ew5Z3nYyyF8hPYMVgjhBirfb+H5QschxN5H\nVq4DjRiOooVQaa4zrs5dzB6yH9gTRTTUmTQ+7FSt/UbXCEXwCYuJ52Wo/0KHxPrO\nEFlLQFrCwlQjNzkOFdTEjNB3uYVz0napIZM9Mz56CJXa1ni2SLDLwfqtbOW6OXY=\n=mJ3w\n-----END PGP SIGNATURE-----\n", "payload": "tree 8dbcc59691a4072267a34a126f68112e8b314473\nparent 12fb8ab3b2dd5544e3a67be63e1bf569b0c944c5\nparent 3dd581b97d051e091037abca62564630d51bfea8\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1649776620 +0000\ncommitter GitHub <noreply@github.com> 1649776620 +0000\n\nMerge #11883\n\n11883: fix(ide): move moudle directory when rename r=rainy-me a=rainy-me\n\nfix: #10992\r\n\r\nAdded `FileSystemEdit::MoveDir` variant for move dirs. Original implemented as recursively move child mod files but had many issues like\r\n\r\n1. left empty dir after rename file\r\n2. only affect rust file\r\n3. not performant\r\n\r\nso changed to current version\n\nCo-authored-by: rainy-me <github@yue.coffee>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49847a25ae086549ef940f0c176f21f4f32ef83b", "html_url": "https://github.com/rust-lang/rust/commit/49847a25ae086549ef940f0c176f21f4f32ef83b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49847a25ae086549ef940f0c176f21f4f32ef83b/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12fb8ab3b2dd5544e3a67be63e1bf569b0c944c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/12fb8ab3b2dd5544e3a67be63e1bf569b0c944c5", "html_url": "https://github.com/rust-lang/rust/commit/12fb8ab3b2dd5544e3a67be63e1bf569b0c944c5"}, {"sha": "3dd581b97d051e091037abca62564630d51bfea8", "url": "https://api.github.com/repos/rust-lang/rust/commits/3dd581b97d051e091037abca62564630d51bfea8", "html_url": "https://github.com/rust-lang/rust/commit/3dd581b97d051e091037abca62564630d51bfea8"}], "stats": {"total": 119, "additions": 106, "deletions": 13}, "files": [{"sha": "f5bff5fd91832ce054d17686b77ba8edb10da188", "filename": "crates/ide/src/rename.rs", "status": "modified", "additions": 71, "deletions": 3, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/49847a25ae086549ef940f0c176f21f4f32ef83b/crates%2Fide%2Fsrc%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49847a25ae086549ef940f0c176f21f4f32ef83b/crates%2Fide%2Fsrc%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Frename.rs?ref=49847a25ae086549ef940f0c176f21f4f32ef83b", "patch": "@@ -968,15 +968,21 @@ mod fo$0o;\n                         },\n                     },\n                     file_system_edits: [\n-                        MoveFile {\n-                            src: FileId(\n+                        MoveDir {\n+                            src: AnchoredPathBuf {\n+                                anchor: FileId(\n+                                    1,\n+                                ),\n+                                path: \"foo\",\n+                            },\n+                            src_id: FileId(\n                                 1,\n                             ),\n                             dst: AnchoredPathBuf {\n                                 anchor: FileId(\n                                     1,\n                                 ),\n-                                path: \"../foo2/mod.rs\",\n+                                path: \"foo2\",\n                             },\n                         },\n                     ],\n@@ -1113,6 +1119,68 @@ pub mod foo$0;\n         );\n     }\n \n+    #[test]\n+    fn test_rename_mod_recursive() {\n+        check_expect(\n+            \"foo2\",\n+            r#\"\n+//- /lib.rs\n+mod foo$0;\n+\n+//- /foo.rs\n+mod bar;\n+mod corge;\n+\n+//- /foo/bar.rs\n+mod qux;\n+\n+//- /foo/bar/qux.rs\n+mod quux;\n+\n+//- /foo/bar/qux/quux/mod.rs\n+// empty\n+\n+//- /foo/corge.rs\n+// empty\n+\"#,\n+            expect![[r#\"\n+                SourceChange {\n+                    source_file_edits: {\n+                        FileId(\n+                            0,\n+                        ): TextEdit {\n+                            indels: [\n+                                Indel {\n+                                    insert: \"foo2\",\n+                                    delete: 4..7,\n+                                },\n+                            ],\n+                        },\n+                    },\n+                    file_system_edits: [\n+                        MoveDir {\n+                            src: AnchoredPathBuf {\n+                                anchor: FileId(\n+                                    1,\n+                                ),\n+                                path: \"foo\",\n+                            },\n+                            src_id: FileId(\n+                                1,\n+                            ),\n+                            dst: AnchoredPathBuf {\n+                                anchor: FileId(\n+                                    1,\n+                                ),\n+                                path: \"foo2\",\n+                            },\n+                        },\n+                    ],\n+                    is_snippet: false,\n+                }\n+            \"#]],\n+        )\n+    }\n     #[test]\n     fn test_rename_mod_ref_by_super() {\n         check("}, {"sha": "b3a0bd277304ed811b5b3d0f864d97250acaab64", "filename": "crates/ide_assists/src/tests.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/49847a25ae086549ef940f0c176f21f4f32ef83b/crates%2Fide_assists%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49847a25ae086549ef940f0c176f21f4f32ef83b/crates%2Fide_assists%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Ftests.rs?ref=49847a25ae086549ef940f0c176f21f4f32ef83b", "patch": "@@ -162,6 +162,10 @@ fn check(handler: Handler, before: &str, expected: ExpectedResult, assist_label:\n                     FileSystemEdit::MoveFile { src, dst } => {\n                         (dst, db.file_text(src).as_ref().to_owned())\n                     }\n+                    FileSystemEdit::MoveDir { src, src_id, dst } => {\n+                        // temporary placeholder for MoveDir since we are not using MoveDir in ide assists yet.\n+                        (dst, format!(\"{:?}\\n{:?}\", src_id, src))\n+                    }\n                 };\n                 let sr = db.file_source_root(dst.anchor);\n                 let sr = db.source_root(sr);"}, {"sha": "589975406a4ffa2354ad726c3eed365760bf1b22", "filename": "crates/ide_db/src/rename.rs", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/49847a25ae086549ef940f0c176f21f4f32ef83b/crates%2Fide_db%2Fsrc%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49847a25ae086549ef940f0c176f21f4f32ef83b/crates%2Fide_db%2Fsrc%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Frename.rs?ref=49847a25ae086549ef940f0c176f21f4f32ef83b", "patch": "@@ -178,17 +178,23 @@ fn rename_mod(\n     let mut source_change = SourceChange::default();\n \n     let InFile { file_id, value: def_source } = module.definition_source(sema.db);\n-    let file_id = file_id.original_file(sema.db);\n     if let ModuleSource::SourceFile(..) = def_source {\n-        // mod is defined in path/to/dir/mod.rs\n-        let path = if module.is_mod_rs(sema.db) {\n-            format!(\"../{}/mod.rs\", new_name)\n-        } else {\n-            format!(\"{}.rs\", new_name)\n-        };\n-        let dst = AnchoredPathBuf { anchor: file_id, path };\n-        let move_file = FileSystemEdit::MoveFile { src: file_id, dst };\n-        source_change.push_file_system_edit(move_file);\n+        let anchor = file_id.original_file(sema.db);\n+        // not mod.rs and doesn't has children, rename file only\n+        if !module.is_mod_rs(sema.db) && module.children(sema.db).next().is_none() {\n+            let path = format!(\"{}.rs\", new_name);\n+            let dst = AnchoredPathBuf { anchor, path };\n+            source_change.push_file_system_edit(FileSystemEdit::MoveFile { src: anchor, dst })\n+        } else if let Some(mod_name) = module.name(sema.db) {\n+            // is mod.rs or has children, rename dir\n+            let src = AnchoredPathBuf { anchor, path: mod_name.to_string() };\n+            let dst = AnchoredPathBuf { anchor, path: new_name.to_string() };\n+            source_change.push_file_system_edit(FileSystemEdit::MoveDir {\n+                src,\n+                src_id: anchor,\n+                dst,\n+            })\n+        }\n     }\n \n     if let Some(src) = module.declaration_source(sema.db) {"}, {"sha": "8132c73ef26b056becf17018f209828926cc4806", "filename": "crates/ide_db/src/source_change.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49847a25ae086549ef940f0c176f21f4f32ef83b/crates%2Fide_db%2Fsrc%2Fsource_change.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49847a25ae086549ef940f0c176f21f4f32ef83b/crates%2Fide_db%2Fsrc%2Fsource_change.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fsource_change.rs?ref=49847a25ae086549ef940f0c176f21f4f32ef83b", "patch": "@@ -85,6 +85,7 @@ impl From<FxHashMap<FileId, TextEdit>> for SourceChange {\n pub enum FileSystemEdit {\n     CreateFile { dst: AnchoredPathBuf, initial_contents: String },\n     MoveFile { src: FileId, dst: AnchoredPathBuf },\n+    MoveDir { src: AnchoredPathBuf, src_id: FileId, dst: AnchoredPathBuf },\n }\n \n impl From<FileSystemEdit> for SourceChange {"}, {"sha": "3d83f090e2ebd681f6c0d58288f15a2c065ef9d2", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/49847a25ae086549ef940f0c176f21f4f32ef83b/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49847a25ae086549ef940f0c176f21f4f32ef83b/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=49847a25ae086549ef940f0c176f21f4f32ef83b", "patch": "@@ -866,6 +866,20 @@ pub(crate) fn snippet_text_document_ops(\n                 rename_file,\n             )))\n         }\n+        FileSystemEdit::MoveDir { src, src_id, dst } => {\n+            let old_uri = snap.anchored_path(&src);\n+            let new_uri = snap.anchored_path(&dst);\n+            let mut rename_file =\n+                lsp_types::RenameFile { old_uri, new_uri, options: None, annotation_id: None };\n+            if snap.analysis.is_library_file(src_id).ok() == Some(true)\n+                && snap.config.change_annotation_support()\n+            {\n+                rename_file.annotation_id = Some(outside_workspace_annotation_id())\n+            }\n+            ops.push(lsp_ext::SnippetDocumentChangeOperation::Op(lsp_types::ResourceOp::Rename(\n+                rename_file,\n+            )))\n+        }\n     }\n     Ok(ops)\n }"}]}