{"sha": "1d7d82472617a4a0fea59c7e239c8a48c8ac5c34", "node_id": "C_kwDOAAsO6NoAKDFkN2Q4MjQ3MjYxN2E0YTBmZWE1OWM3ZTIzOWM4YTQ4YzhhYzVjMzQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-06-17T03:28:53Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-06-17T03:28:53Z"}, "message": "Auto merge of #112407 - tgross35:ci-docs-publish, r=Mark-Simulacrum\n\nPublish docs as github artifacts during CI\n\nDiscussed here: https://rust-lang.zulipchat.com/#narrow/stream/242791-t-infra/topic/Building.20docs.20for.20PR.20CI\n\nThe goal is to make docs available for download after CI runs on PRs, for easy review of API changes.\n\nNotes:\n\n- Currently this only captures library documentation (`core`, `alloc`, `std`, `test`, `proc_macro`)\n- You can't see artifacts until the entire workflow run has completed https://github.com/actions/upload-artifact/issues/53\n- There is currently a generic file name `ci-artifacts`. No way to customize this based on contained files unfortunately https://github.com/actions/upload-artifact/issues/349\n\nYou can find the results at the bottom of the CI \"summary\" page:\n\n<img width=\"379\" alt=\"image\" src=\"https://github.com/rust-lang/rust/assets/13724985/d3748e59-242c-40f8-9f54-82177b9b481b\">", "tree": {"sha": "ea7bd8fbd577e66f64a46f88ca6272494982cf98", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea7bd8fbd577e66f64a46f88ca6272494982cf98"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d7d82472617a4a0fea59c7e239c8a48c8ac5c34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d7d82472617a4a0fea59c7e239c8a48c8ac5c34", "html_url": "https://github.com/rust-lang/rust/commit/1d7d82472617a4a0fea59c7e239c8a48c8ac5c34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d7d82472617a4a0fea59c7e239c8a48c8ac5c34/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0cc541e4b2eb957e71490cf44df1ac09f6d18132", "url": "https://api.github.com/repos/rust-lang/rust/commits/0cc541e4b2eb957e71490cf44df1ac09f6d18132", "html_url": "https://github.com/rust-lang/rust/commit/0cc541e4b2eb957e71490cf44df1ac09f6d18132"}, {"sha": "696b0dd472d42c7e71c992bd2e3def2d40fadebb", "url": "https://api.github.com/repos/rust-lang/rust/commits/696b0dd472d42c7e71c992bd2e3def2d40fadebb", "html_url": "https://github.com/rust-lang/rust/commit/696b0dd472d42c7e71c992bd2e3def2d40fadebb"}], "stats": {"total": 97, "additions": 97, "deletions": 0}, "files": [{"sha": "398a70ee6a236303d398de66a31c03d9b6a21e7a", "filename": ".github/workflows/ci.yml", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/1d7d82472617a4a0fea59c7e239c8a48c8ac5c34/.github%2Fworkflows%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/1d7d82472617a4a0fea59c7e239c8a48c8ac5c34/.github%2Fworkflows%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yml?ref=1d7d82472617a4a0fea59c7e239c8a48c8ac5c34", "patch": "@@ -38,6 +38,7 @@ jobs:\n     env:\n       CI_JOB_NAME: \"${{ matrix.name }}\"\n       CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse\n+      HEAD_SHA: \"${{ github.event.pull_request.head.sha || github.sha }}\"\n       SCCACHE_BUCKET: rust-lang-ci-sccache2\n       TOOLSTATE_REPO: \"https://github.com/rust-lang-nursery/rust-toolstate\"\n       CACHE_DOMAIN: ci-caches.rust-lang.org\n@@ -143,6 +144,17 @@ jobs:\n           AWS_SECRET_ACCESS_KEY: \"${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.CACHES_AWS_ACCESS_KEY_ID)] }}\"\n           TOOLSTATE_REPO_ACCESS_TOKEN: \"${{ secrets.TOOLSTATE_REPO_ACCESS_TOKEN }}\"\n         if: success() && !env.SKIP_JOB\n+      - name: create github artifacts\n+        run: src/ci/scripts/create-doc-artifacts.sh\n+        if: success() && !env.SKIP_JOB\n+      - name: upload artifacts to github\n+        uses: actions/upload-artifact@v3\n+        with:\n+          name: \"${{ env.DOC_ARTIFACT_NAME }}\"\n+          path: obj/artifacts/doc\n+          if-no-files-found: ignore\n+          retention-days: 5\n+        if: success() && !env.SKIP_JOB\n       - name: upload artifacts to S3\n         run: src/ci/scripts/upload-artifacts.sh\n         env:\n@@ -156,6 +168,7 @@ jobs:\n     env:\n       CI_JOB_NAME: \"${{ matrix.name }}\"\n       CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse\n+      HEAD_SHA: \"${{ github.event.pull_request.head.sha || github.sha }}\"\n       SCCACHE_BUCKET: rust-lang-ci-sccache2\n       DEPLOY_BUCKET: rust-lang-ci2\n       TOOLSTATE_REPO: \"https://github.com/rust-lang-nursery/rust-toolstate\"\n@@ -557,6 +570,17 @@ jobs:\n           AWS_SECRET_ACCESS_KEY: \"${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.CACHES_AWS_ACCESS_KEY_ID)] }}\"\n           TOOLSTATE_REPO_ACCESS_TOKEN: \"${{ secrets.TOOLSTATE_REPO_ACCESS_TOKEN }}\"\n         if: success() && !env.SKIP_JOB\n+      - name: create github artifacts\n+        run: src/ci/scripts/create-doc-artifacts.sh\n+        if: success() && !env.SKIP_JOB\n+      - name: upload artifacts to github\n+        uses: actions/upload-artifact@v3\n+        with:\n+          name: \"${{ env.DOC_ARTIFACT_NAME }}\"\n+          path: obj/artifacts/doc\n+          if-no-files-found: ignore\n+          retention-days: 5\n+        if: success() && !env.SKIP_JOB\n       - name: upload artifacts to S3\n         run: src/ci/scripts/upload-artifacts.sh\n         env:\n@@ -571,6 +595,7 @@ jobs:\n       DIST_TRY_BUILD: 1\n       CI_JOB_NAME: \"${{ matrix.name }}\"\n       CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse\n+      HEAD_SHA: \"${{ github.event.pull_request.head.sha || github.sha }}\"\n       SCCACHE_BUCKET: rust-lang-ci-sccache2\n       DEPLOY_BUCKET: rust-lang-ci2\n       TOOLSTATE_REPO: \"https://github.com/rust-lang-nursery/rust-toolstate\"\n@@ -672,6 +697,17 @@ jobs:\n           AWS_SECRET_ACCESS_KEY: \"${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.CACHES_AWS_ACCESS_KEY_ID)] }}\"\n           TOOLSTATE_REPO_ACCESS_TOKEN: \"${{ secrets.TOOLSTATE_REPO_ACCESS_TOKEN }}\"\n         if: success() && !env.SKIP_JOB\n+      - name: create github artifacts\n+        run: src/ci/scripts/create-doc-artifacts.sh\n+        if: success() && !env.SKIP_JOB\n+      - name: upload artifacts to github\n+        uses: actions/upload-artifact@v3\n+        with:\n+          name: \"${{ env.DOC_ARTIFACT_NAME }}\"\n+          path: obj/artifacts/doc\n+          if-no-files-found: ignore\n+          retention-days: 5\n+        if: success() && !env.SKIP_JOB\n       - name: upload artifacts to S3\n         run: src/ci/scripts/upload-artifacts.sh\n         env:"}, {"sha": "85a9a5d33752f13ac37f6f471675f61165961e9d", "filename": "src/ci/docker/host-x86_64/mingw-check/Dockerfile", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1d7d82472617a4a0fea59c7e239c8a48c8ac5c34/src%2Fci%2Fdocker%2Fhost-x86_64%2Fmingw-check%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/1d7d82472617a4a0fea59c7e239c8a48c8ac5c34/src%2Fci%2Fdocker%2Fhost-x86_64%2Fmingw-check%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fmingw-check%2FDockerfile?ref=1d7d82472617a4a0fea59c7e239c8a48c8ac5c34", "patch": "@@ -45,6 +45,9 @@ ENV SCRIPT python3 ../x.py --stage 2 test src/tools/expand-yaml-anchors && \\\n            python3 ../x.py test --stage 0 src/tools/compiletest && \\\n            python3 ../x.py test --stage 0 core alloc std test proc_macro && \\\n            # Build both public and internal documentation.\n+           RUSTDOCFLAGS=\\\"--document-private-items --document-hidden-items\\\" python3 ../x.py doc --stage 0 library && \\\n+           mkdir -p /checkout/obj/staging/doc && \\\n+           cp -r build/x86_64-unknown-linux-gnu/doc /checkout/obj/staging && \\\n            RUSTDOCFLAGS=\\\"--document-private-items --document-hidden-items\\\" python3 ../x.py doc --stage 0 compiler && \\\n            RUSTDOCFLAGS=\\\"--document-private-items --document-hidden-items\\\" python3 ../x.py doc --stage 0 library/test && \\\n            /scripts/validate-toolstate.sh && \\"}, {"sha": "efffc38224265a6e636b42d2a564855117fdf8ac", "filename": "src/ci/github-actions/ci.yml", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1d7d82472617a4a0fea59c7e239c8a48c8ac5c34/src%2Fci%2Fgithub-actions%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/1d7d82472617a4a0fea59c7e239c8a48c8ac5c34/src%2Fci%2Fgithub-actions%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fgithub-actions%2Fci.yml?ref=1d7d82472617a4a0fea59c7e239c8a48c8ac5c34", "patch": "@@ -34,6 +34,8 @@ x--expand-yaml-anchors--remove:\n   - &shared-ci-variables\n     CI_JOB_NAME: ${{ matrix.name }}\n     CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse\n+    # commit of PR sha or commit sha. `GITHUB_SHA` is not accurate for PRs.\n+    HEAD_SHA: ${{ github.event.pull_request.head.sha || github.sha }}\n \n   - &public-variables\n     SCCACHE_BUCKET: rust-lang-ci-sccache2\n@@ -229,6 +231,20 @@ x--expand-yaml-anchors--remove:\n           TOOLSTATE_REPO_ACCESS_TOKEN: ${{ secrets.TOOLSTATE_REPO_ACCESS_TOKEN }}\n         <<: *step\n \n+      - name: create github artifacts\n+        run: src/ci/scripts/create-doc-artifacts.sh\n+        <<: *step\n+\n+      - name: upload artifacts to github\n+        uses: actions/upload-artifact@v3\n+        with:\n+          # name is set in previous step\n+          name: ${{ env.DOC_ARTIFACT_NAME }}\n+          path: obj/artifacts/doc\n+          if-no-files-found: ignore\n+          retention-days: 5\n+        <<: *step\n+\n       - name: upload artifacts to S3\n         run: src/ci/scripts/upload-artifacts.sh\n         env:"}, {"sha": "2516b0d850594d5cfd1f1f42e076625e327e3844", "filename": "src/ci/scripts/create-doc-artifacts.sh", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/1d7d82472617a4a0fea59c7e239c8a48c8ac5c34/src%2Fci%2Fscripts%2Fcreate-doc-artifacts.sh", "raw_url": "https://github.com/rust-lang/rust/raw/1d7d82472617a4a0fea59c7e239c8a48c8ac5c34/src%2Fci%2Fscripts%2Fcreate-doc-artifacts.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fscripts%2Fcreate-doc-artifacts.sh?ref=1d7d82472617a4a0fea59c7e239c8a48c8ac5c34", "patch": "@@ -0,0 +1,42 @@\n+#!/bin/bash\n+# Compress doc artifacts and name them based on the commit, or the date if\n+# commit is not available.\n+\n+set -euox pipefail\n+\n+# Try to get short commit hash, fallback to date\n+if [ -n \"$HEAD_SHA\" ]; then\n+    short_rev=$(echo \"${HEAD_SHA}\" | cut -c1-8)\n+else\n+    short_rev=$(git rev-parse --short HEAD || date -u +'%Y-%m-%dT%H%M%SZ')\n+fi\n+\n+# Try to get branch, fallback to none\n+branch=$(git branch --show-current || echo)\n+\n+if [ -n \"$branch\" ]; then\n+    branch=\"${branch}-\"\n+fi\n+\n+if [ \"${GITHUB_EVENT_NAME:=none}\" = \"pull_request\" ]; then\n+    pr_num=$(echo \"$GITHUB_REF_NAME\" | cut -d'/' -f1)\n+    name=\"doc-${pr_num}-${short_rev}\"\n+else\n+    name=\"doc-${branch}${short_rev}\"\n+fi\n+\n+\n+if [ -d \"obj/staging/doc\" ]; then\n+    mkdir -p obj/artifacts/doc\n+\n+    # Level 12 seems to give a good tradeoff of time vs. space savings\n+    ZSTD_CLEVEL=12 ZSTD_NBTHREADS=4 \\\n+    tar --zstd -cf \"obj/artifacts/doc/${name}.tar.zst\" -C obj/staging/doc .\n+\n+    ls -lh obj/artifacts/doc\n+fi\n+\n+# Set this environment variable for future use if running in CI\n+if [ -n \"$GITHUB_ENV\" ]; then\n+    echo \"DOC_ARTIFACT_NAME=${name}\" >> \"$GITHUB_ENV\"\n+fi"}]}