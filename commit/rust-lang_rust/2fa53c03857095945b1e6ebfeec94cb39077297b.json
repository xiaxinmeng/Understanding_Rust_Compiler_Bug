{"sha": "2fa53c03857095945b1e6ebfeec94cb39077297b", "node_id": "C_kwDOAAsO6NoAKDJmYTUzYzAzODU3MDk1OTQ1YjFlNmViZmVlYzk0Y2IzOTA3NzI5N2I", "commit": {"author": {"name": "Mateusz Gienieczko", "email": "mat@gienieczko.com", "date": "2022-05-21T19:42:25Z"}, "committer": {"name": "Mateusz Gienieczko", "email": "mat@gienieczko.com", "date": "2022-05-21T19:42:25Z"}, "message": "Dynamic offset calculation in GetSystemInfo.", "tree": {"sha": "988c1489645bbac956ba959615a54a1b4b0e1810", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/988c1489645bbac956ba959615a54a1b4b0e1810"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2fa53c03857095945b1e6ebfeec94cb39077297b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYIAB0WIQS6ttWmD/dycqbuYdU4bLXkFRN0aQUCYolAoQAKCRA4bLXkFRN0\naQSyAQCySSTJsVvjgYrAGwVuQUS/cCGEgVS6n9O12w+lkVbkQQD9ETOgWtpkvlS6\n4MgnzIpcXn3ZDcTpmknG30zdA9OnEgs=\n=1TQC\n-----END PGP SIGNATURE-----", "payload": "tree 988c1489645bbac956ba959615a54a1b4b0e1810\nparent 63e98aee0cc005c27431a0eca317fecf6706b072\nauthor Mateusz Gienieczko <mat@gienieczko.com> 1653162145 +0200\ncommitter Mateusz Gienieczko <mat@gienieczko.com> 1653162145 +0200\n\nDynamic offset calculation in GetSystemInfo.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2fa53c03857095945b1e6ebfeec94cb39077297b", "html_url": "https://github.com/rust-lang/rust/commit/2fa53c03857095945b1e6ebfeec94cb39077297b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2fa53c03857095945b1e6ebfeec94cb39077297b/comments", "author": {"login": "V0ldek", "id": 20441980, "node_id": "MDQ6VXNlcjIwNDQxOTgw", "avatar_url": "https://avatars.githubusercontent.com/u/20441980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/V0ldek", "html_url": "https://github.com/V0ldek", "followers_url": "https://api.github.com/users/V0ldek/followers", "following_url": "https://api.github.com/users/V0ldek/following{/other_user}", "gists_url": "https://api.github.com/users/V0ldek/gists{/gist_id}", "starred_url": "https://api.github.com/users/V0ldek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/V0ldek/subscriptions", "organizations_url": "https://api.github.com/users/V0ldek/orgs", "repos_url": "https://api.github.com/users/V0ldek/repos", "events_url": "https://api.github.com/users/V0ldek/events{/privacy}", "received_events_url": "https://api.github.com/users/V0ldek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "V0ldek", "id": 20441980, "node_id": "MDQ6VXNlcjIwNDQxOTgw", "avatar_url": "https://avatars.githubusercontent.com/u/20441980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/V0ldek", "html_url": "https://github.com/V0ldek", "followers_url": "https://api.github.com/users/V0ldek/followers", "following_url": "https://api.github.com/users/V0ldek/following{/other_user}", "gists_url": "https://api.github.com/users/V0ldek/gists{/gist_id}", "starred_url": "https://api.github.com/users/V0ldek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/V0ldek/subscriptions", "organizations_url": "https://api.github.com/users/V0ldek/orgs", "repos_url": "https://api.github.com/users/V0ldek/repos", "events_url": "https://api.github.com/users/V0ldek/events{/privacy}", "received_events_url": "https://api.github.com/users/V0ldek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63e98aee0cc005c27431a0eca317fecf6706b072", "url": "https://api.github.com/repos/rust-lang/rust/commits/63e98aee0cc005c27431a0eca317fecf6706b072", "html_url": "https://github.com/rust-lang/rust/commit/63e98aee0cc005c27431a0eca317fecf6706b072"}], "stats": {"total": 36, "additions": 34, "deletions": 2}, "files": [{"sha": "f2852d6bcca09b1daada1e0504eb257a88458b68", "filename": "src/shims/windows/foreign_items.rs", "status": "modified", "additions": 34, "deletions": 2, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/2fa53c03857095945b1e6ebfeec94cb39077297b/src%2Fshims%2Fwindows%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fa53c03857095945b1e6ebfeec94cb39077297b/src%2Fshims%2Fwindows%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fwindows%2Fforeign_items.rs?ref=2fa53c03857095945b1e6ebfeec94cb39077297b", "patch": "@@ -8,6 +8,7 @@ use rustc_target::spec::abi::Abi;\n use crate::*;\n use shims::foreign_items::EmulateByNameResult;\n use shims::windows::sync::EvalContextExt as _;\n+use smallvec::SmallVec;\n \n impl<'mir, 'tcx: 'mir> EvalContextExt<'mir, 'tcx> for crate::MiriEvalContext<'mir, 'tcx> {}\n pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx> {\n@@ -122,11 +123,42 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                     iter::repeat(0u8).take(system_info.layout.size.bytes() as usize),\n                 )?;\n                 // Set selected fields.\n+                let word_ty = this.tcx.mk_ty(TyKind::Uint(UintTy::U16));\n                 let dword_ty = this.tcx.mk_ty(TyKind::Uint(UintTy::U32));\n+                let usize_ty = this.tcx.mk_ty(TyKind::Uint(UintTy::Usize));\n+                let word_layout = this.layout_of(word_ty)?;\n                 let dword_layout = this.layout_of(dword_ty)?;\n+                let usize_layout = this.layout_of(usize_ty)?;\n+\n+                // Using `mplace_field` is error-prone, see: https://github.com/rust-lang/miri/issues/2136.\n+                // Pointer fields have different sizes on different targets.\n+                // To avoid all these issue we calculate the offsets dynamically.\n+                let field_sizes = [\n+                    word_layout.size,  // 0,  wProcessorArchitecture      : WORD\n+                    word_layout.size,  // 1,  wReserved                   : WORD\n+                    dword_layout.size, // 2,  dwPageSize                  : DWORD\n+                    usize_layout.size, // 3,  lpMinimumApplicationAddress : LPVOID\n+                    usize_layout.size, // 4,  lpMaximumApplicationAddress : LPVOID\n+                    usize_layout.size, // 5,  dwActiveProcessorMask       : DWORD_PTR\n+                    dword_layout.size, // 6,  dwNumberOfProcessors        : DWORD\n+                    dword_layout.size, // 7,  dwProcessorType             : DWORD\n+                    dword_layout.size, // 8,  dwAllocationGranularity     : DWORD\n+                    word_layout.size,  // 9,  wProcessorLevel             : WORD\n+                    word_layout.size,  // 10, wProcessorRevision          : WORD\n+                ];\n+                let field_offsets: SmallVec<[Size; 11]> = field_sizes\n+                    .iter()\n+                    .copied()\n+                    .scan(Size::ZERO, |a, x| {\n+                        let res = Some(*a);\n+                        *a += x;\n+                        res\n+                    })\n+                    .collect();\n+\n                 // Set page size.\n                 let page_size = system_info.offset(\n-                    Size::from_bytes(4),\n+                    field_offsets[2],\n                     MemPlaceMeta::None,\n                     dword_layout,\n                     &this.tcx,\n@@ -137,7 +169,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 )?;\n                 // Set number of processors.\n                 let num_cpus = system_info.offset(\n-                    Size::from_bytes(32),\n+                    field_offsets[6],\n                     MemPlaceMeta::None,\n                     dword_layout,\n                     &this.tcx,"}]}