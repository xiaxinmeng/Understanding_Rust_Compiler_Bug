{"sha": "02b44006b8e37a8cd3f96d5b1c949d62e01be2e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyYjQ0MDA2YjhlMzdhOGNkM2Y5NmQ1YjFjOTQ5ZDYyZTAxYmUyZTg=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-03-13T11:55:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-13T11:55:04Z"}, "message": "Merge #3575\n\n3575: Restore cargo-fmt gating r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "69121d32a0a4e6484945fe1afa7724ea11ed223a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69121d32a0a4e6484945fe1afa7724ea11ed223a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02b44006b8e37a8cd3f96d5b1c949d62e01be2e8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJea3SYCRBK7hj4Ov3rIwAAdHIIAKA61absCKGRxjoS2Lr/ePlQ\nhBXQ08Te+DwfjjOwtp/RfvFxoDthTqaRI2wJVNluyIIiGqGPTDjiOecGJnYw2eUB\nUQQE9IkIXf/aeySOepcTB5BbVua8eM5WLiW0p2jiraadep1i8L448wSO/2Alu5M3\nzos2nGWrfpA7YXAlkhA5SmsKmu/hfa+U5O3uthXopvO0R66m6DCVU5qSQ3qX+5Ey\nlPduRNTPn90SbxEnA+VHaUl62exedS+SvXeDzaSl1U2h9Kg9IKOP3/0zizp6Nhgi\n9tXg7Mwjcs7X2ZXjQC1GIWb/L5Sauc19iNankTAvNnlt/p//rznAbTo9jbRxBdM=\n=EV2X\n-----END PGP SIGNATURE-----\n", "payload": "tree 69121d32a0a4e6484945fe1afa7724ea11ed223a\nparent b0ed808266e346b0f9330822f874e930710df4ec\nparent 680182d0a0853a3a76fd1cae9838feb5b0acf31c\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1584100504 +0000\ncommitter GitHub <noreply@github.com> 1584100504 +0000\n\nMerge #3575\n\n3575: Restore cargo-fmt gating r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02b44006b8e37a8cd3f96d5b1c949d62e01be2e8", "html_url": "https://github.com/rust-lang/rust/commit/02b44006b8e37a8cd3f96d5b1c949d62e01be2e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02b44006b8e37a8cd3f96d5b1c949d62e01be2e8/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0ed808266e346b0f9330822f874e930710df4ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0ed808266e346b0f9330822f874e930710df4ec", "html_url": "https://github.com/rust-lang/rust/commit/b0ed808266e346b0f9330822f874e930710df4ec"}, {"sha": "680182d0a0853a3a76fd1cae9838feb5b0acf31c", "url": "https://api.github.com/repos/rust-lang/rust/commits/680182d0a0853a3a76fd1cae9838feb5b0acf31c", "html_url": "https://github.com/rust-lang/rust/commit/680182d0a0853a3a76fd1cae9838feb5b0acf31c"}], "stats": {"total": 199, "additions": 103, "deletions": 96}, "files": [{"sha": "2854631c6f70b24192b77b168115f4afc6fb7b63", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/02b44006b8e37a8cd3f96d5b1c949d62e01be2e8/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02b44006b8e37a8cd3f96d5b1c949d62e01be2e8/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=02b44006b8e37a8cd3f96d5b1c949d62e01be2e8", "patch": "@@ -227,11 +227,9 @@ impl Module {\n                     Some((name, def))\n                 }\n             })\n-            .flat_map(|(name, def)|\n-                ScopeDef::all_items(def)\n-                    .into_iter()\n-                    .map(move |item| (name.clone(), item))\n-            )\n+            .flat_map(|(name, def)| {\n+                ScopeDef::all_items(def).into_iter().map(move |item| (name.clone(), item))\n+            })\n             .collect()\n     }\n \n@@ -1298,10 +1296,8 @@ impl ScopeDef {\n         let mut items = ArrayVec::new();\n \n         match (def.take_types(), def.take_values()) {\n-            (Some(m1), None) => \n-                items.push(ScopeDef::ModuleDef(m1.into())),\n-            (None, Some(m2)) =>\n-                items.push(ScopeDef::ModuleDef(m2.into())),\n+            (Some(m1), None) => items.push(ScopeDef::ModuleDef(m1.into())),\n+            (None, Some(m2)) => items.push(ScopeDef::ModuleDef(m2.into())),\n             (Some(m1), Some(m2)) => {\n                 // Some items, like unit structs and enum variants, are\n                 // returned as both a type and a value. Here we want\n@@ -1312,8 +1308,8 @@ impl ScopeDef {\n                 } else {\n                     items.push(ScopeDef::ModuleDef(m1.into()));\n                 }\n-            },\n-            (None, None) => {},\n+            }\n+            (None, None) => {}\n         };\n \n         if let Some(macro_def_id) = def.take_macros() {"}, {"sha": "788bb3eb7a343bf4a4d135d76ea0ce0886b69ad4", "filename": "crates/ra_hir/src/semantics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/02b44006b8e37a8cd3f96d5b1c949d62e01be2e8/crates%2Fra_hir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02b44006b8e37a8cd3f96d5b1c949d62e01be2e8/crates%2Fra_hir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsemantics.rs?ref=02b44006b8e37a8cd3f96d5b1c949d62e01be2e8", "patch": "@@ -349,8 +349,8 @@ impl<'a, DB: HirDatabase> SemanticsScope<'a, DB> {\n                     for item in items {\n                         f(name.clone(), item);\n                     }\n-                    return\n-                },\n+                    return;\n+                }\n                 resolver::ScopeDef::ImplSelfType(it) => ScopeDef::ImplSelfType(it.into()),\n                 resolver::ScopeDef::AdtSelfType(it) => ScopeDef::AdtSelfType(it.into()),\n                 resolver::ScopeDef::GenericParam(id) => ScopeDef::GenericParam(TypeParam { id }),"}, {"sha": "65b3bf6e6439c6b11a30bcbc203c96c779957d4f", "filename": "crates/ra_ide/src/completion/complete_path.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/02b44006b8e37a8cd3f96d5b1c949d62e01be2e8/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02b44006b8e37a8cd3f96d5b1c949d62e01be2e8/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_path.rs?ref=02b44006b8e37a8cd3f96d5b1c949d62e01be2e8", "patch": "@@ -1005,5 +1005,4 @@ mod tests {\n         \"###\n         );\n     }\n-\n }"}, {"sha": "3ca32185c11de762c96fe551a1d1a79971b17609", "filename": "crates/ra_parser/src/grammar/params.rs", "status": "modified", "additions": 2, "deletions": 20, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/02b44006b8e37a8cd3f96d5b1c949d62e01be2e8/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fparams.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02b44006b8e37a8cd3f96d5b1c949d62e01be2e8/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fparams.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fparams.rs?ref=02b44006b8e37a8cd3f96d5b1c949d62e01be2e8", "patch": "@@ -82,26 +82,8 @@ const VALUE_PARAMETER_FIRST: TokenSet = patterns::PATTERN_FIRST.union(types::TYP\n fn value_parameter(p: &mut Parser, flavor: Flavor) {\n     let m = p.start();\n     match flavor {\n-        // test trait_fn_placeholder_parameter\n-        // trait Foo {\n-        //     fn bar(_: u64, mut x: i32);\n-        // }\n-\n-        // test trait_fn_patterns\n-        // trait T {\n-        //     fn f1((a, b): (usize, usize)) {}\n-        //     fn f2(S { a, b }: S) {}\n-        //     fn f3(NewType(a): NewType) {}\n-        //     fn f4(&&a: &&usize) {}\n-        // }\n-\n-        // test fn_patterns\n-        // impl U {\n-        //     fn f1((a, b): (usize, usize)) {}\n-        //     fn f2(S { a, b }: S) {}\n-        //     fn f3(NewType(a): NewType) {}\n-        //     fn f4(&&a: &&usize) {}\n-        // }\n+        // test fn_def_param\n+        // fn foo((x, y): (i32, i32)) {}\n         Flavor::FnDef => {\n             patterns::pattern(p);\n             types::ascription(p);"}, {"sha": "472cb8803f907799865a0b9dd62f1ea15dbe513e", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0116_trait_fn_placeholder_parameter.rs", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b0ed808266e346b0f9330822f874e930710df4ec/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0116_trait_fn_placeholder_parameter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0ed808266e346b0f9330822f874e930710df4ec/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0116_trait_fn_placeholder_parameter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0116_trait_fn_placeholder_parameter.rs?ref=b0ed808266e346b0f9330822f874e930710df4ec", "patch": "@@ -1,3 +0,0 @@\n-trait Foo {\n-    fn bar(_: u64, mut x: i32);\n-}"}, {"sha": "158236c5a93a57840f9832dde4de4a409b74b22d", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0116_trait_fn_placeholder_parameter.txt", "status": "removed", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/b0ed808266e346b0f9330822f874e930710df4ec/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0116_trait_fn_placeholder_parameter.txt", "raw_url": "https://github.com/rust-lang/rust/raw/b0ed808266e346b0f9330822f874e930710df4ec/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0116_trait_fn_placeholder_parameter.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0116_trait_fn_placeholder_parameter.txt?ref=b0ed808266e346b0f9330822f874e930710df4ec", "patch": "@@ -1,47 +0,0 @@\n-SOURCE_FILE@[0; 46)\n-  TRAIT_DEF@[0; 45)\n-    TRAIT_KW@[0; 5) \"trait\"\n-    WHITESPACE@[5; 6) \" \"\n-    NAME@[6; 9)\n-      IDENT@[6; 9) \"Foo\"\n-    WHITESPACE@[9; 10) \" \"\n-    ITEM_LIST@[10; 45)\n-      L_CURLY@[10; 11) \"{\"\n-      WHITESPACE@[11; 16) \"\\n    \"\n-      FN_DEF@[16; 43)\n-        FN_KW@[16; 18) \"fn\"\n-        WHITESPACE@[18; 19) \" \"\n-        NAME@[19; 22)\n-          IDENT@[19; 22) \"bar\"\n-        PARAM_LIST@[22; 42)\n-          L_PAREN@[22; 23) \"(\"\n-          PARAM@[23; 29)\n-            PLACEHOLDER_PAT@[23; 24)\n-              UNDERSCORE@[23; 24) \"_\"\n-            COLON@[24; 25) \":\"\n-            WHITESPACE@[25; 26) \" \"\n-            PATH_TYPE@[26; 29)\n-              PATH@[26; 29)\n-                PATH_SEGMENT@[26; 29)\n-                  NAME_REF@[26; 29)\n-                    IDENT@[26; 29) \"u64\"\n-          COMMA@[29; 30) \",\"\n-          WHITESPACE@[30; 31) \" \"\n-          PARAM@[31; 41)\n-            BIND_PAT@[31; 36)\n-              MUT_KW@[31; 34) \"mut\"\n-              WHITESPACE@[34; 35) \" \"\n-              NAME@[35; 36)\n-                IDENT@[35; 36) \"x\"\n-            COLON@[36; 37) \":\"\n-            WHITESPACE@[37; 38) \" \"\n-            PATH_TYPE@[38; 41)\n-              PATH@[38; 41)\n-                PATH_SEGMENT@[38; 41)\n-                  NAME_REF@[38; 41)\n-                    IDENT@[38; 41) \"i32\"\n-          R_PAREN@[41; 42) \")\"\n-        SEMI@[42; 43) \";\"\n-      WHITESPACE@[43; 44) \"\\n\"\n-      R_CURLY@[44; 45) \"}\"\n-  WHITESPACE@[45; 46) \"\\n\""}, {"sha": "7b277c16b1510c56d1a313771cb72e9522cd6b45", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0156_fn_def_param.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/02b44006b8e37a8cd3f96d5b1c949d62e01be2e8/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0156_fn_def_param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02b44006b8e37a8cd3f96d5b1c949d62e01be2e8/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0156_fn_def_param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0156_fn_def_param.rs?ref=02b44006b8e37a8cd3f96d5b1c949d62e01be2e8", "patch": "@@ -0,0 +1 @@\n+fn foo((x, y): (i32, i32)) {}"}, {"sha": "103e254a62b20e57dd9ed728ad54ea3ee1239e9f", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0156_fn_def_param.txt", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/02b44006b8e37a8cd3f96d5b1c949d62e01be2e8/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0156_fn_def_param.txt", "raw_url": "https://github.com/rust-lang/rust/raw/02b44006b8e37a8cd3f96d5b1c949d62e01be2e8/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0156_fn_def_param.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0156_fn_def_param.txt?ref=02b44006b8e37a8cd3f96d5b1c949d62e01be2e8", "patch": "@@ -0,0 +1,44 @@\n+SOURCE_FILE@[0; 30)\n+  FN_DEF@[0; 29)\n+    FN_KW@[0; 2) \"fn\"\n+    WHITESPACE@[2; 3) \" \"\n+    NAME@[3; 6)\n+      IDENT@[3; 6) \"foo\"\n+    PARAM_LIST@[6; 26)\n+      L_PAREN@[6; 7) \"(\"\n+      PARAM@[7; 25)\n+        TUPLE_PAT@[7; 13)\n+          L_PAREN@[7; 8) \"(\"\n+          BIND_PAT@[8; 9)\n+            NAME@[8; 9)\n+              IDENT@[8; 9) \"x\"\n+          COMMA@[9; 10) \",\"\n+          WHITESPACE@[10; 11) \" \"\n+          BIND_PAT@[11; 12)\n+            NAME@[11; 12)\n+              IDENT@[11; 12) \"y\"\n+          R_PAREN@[12; 13) \")\"\n+        COLON@[13; 14) \":\"\n+        WHITESPACE@[14; 15) \" \"\n+        TUPLE_TYPE@[15; 25)\n+          L_PAREN@[15; 16) \"(\"\n+          PATH_TYPE@[16; 19)\n+            PATH@[16; 19)\n+              PATH_SEGMENT@[16; 19)\n+                NAME_REF@[16; 19)\n+                  IDENT@[16; 19) \"i32\"\n+          COMMA@[19; 20) \",\"\n+          WHITESPACE@[20; 21) \" \"\n+          PATH_TYPE@[21; 24)\n+            PATH@[21; 24)\n+              PATH_SEGMENT@[21; 24)\n+                NAME_REF@[21; 24)\n+                  IDENT@[21; 24) \"i32\"\n+          R_PAREN@[24; 25) \")\"\n+      R_PAREN@[25; 26) \")\"\n+    WHITESPACE@[26; 27) \" \"\n+    BLOCK_EXPR@[27; 29)\n+      BLOCK@[27; 29)\n+        L_CURLY@[27; 28) \"{\"\n+        R_CURLY@[28; 29) \"}\"\n+  WHITESPACE@[29; 30) \"\\n\""}, {"sha": "3b666af8eed3ba35dc92fd67efe849ae04180c1e", "filename": "crates/ra_syntax/test_data/parser/ok/0063_trait_fn_patterns.rs", "status": "renamed", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/02b44006b8e37a8cd3f96d5b1c949d62e01be2e8/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0063_trait_fn_patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02b44006b8e37a8cd3f96d5b1c949d62e01be2e8/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0063_trait_fn_patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0063_trait_fn_patterns.rs?ref=02b44006b8e37a8cd3f96d5b1c949d62e01be2e8", "patch": "@@ -3,4 +3,5 @@ trait T {\n     fn f2(S { a, b }: S) {}\n     fn f3(NewType(a): NewType) {}\n     fn f4(&&a: &&usize) {}\n+    fn bar(_: u64, mut x: i32);\n }", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0153_trait_fn_patterns.rs"}, {"sha": "eb2e3a5030dae499c3ae5edd638831bc2d4a4d76", "filename": "crates/ra_syntax/test_data/parser/ok/0063_trait_fn_patterns.txt", "status": "renamed", "additions": 41, "deletions": 6, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/02b44006b8e37a8cd3f96d5b1c949d62e01be2e8/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0063_trait_fn_patterns.txt", "raw_url": "https://github.com/rust-lang/rust/raw/02b44006b8e37a8cd3f96d5b1c949d62e01be2e8/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0063_trait_fn_patterns.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0063_trait_fn_patterns.txt?ref=02b44006b8e37a8cd3f96d5b1c949d62e01be2e8", "patch": "@@ -1,11 +1,11 @@\n-SOURCE_FILE@[0; 138)\n-  TRAIT_DEF@[0; 137)\n+SOURCE_FILE@[0; 170)\n+  TRAIT_DEF@[0; 169)\n     TRAIT_KW@[0; 5) \"trait\"\n     WHITESPACE@[5; 6) \" \"\n     NAME@[6; 7)\n       IDENT@[6; 7) \"T\"\n     WHITESPACE@[7; 8) \" \"\n-    ITEM_LIST@[8; 137)\n+    ITEM_LIST@[8; 169)\n       L_CURLY@[8; 9) \"{\"\n       WHITESPACE@[9; 14) \"\\n    \"\n       FN_DEF@[14; 46)\n@@ -156,6 +156,41 @@ SOURCE_FILE@[0; 138)\n           BLOCK@[133; 135)\n             L_CURLY@[133; 134) \"{\"\n             R_CURLY@[134; 135) \"}\"\n-      WHITESPACE@[135; 136) \"\\n\"\n-      R_CURLY@[136; 137) \"}\"\n-  WHITESPACE@[137; 138) \"\\n\"\n+      WHITESPACE@[135; 140) \"\\n    \"\n+      FN_DEF@[140; 167)\n+        FN_KW@[140; 142) \"fn\"\n+        WHITESPACE@[142; 143) \" \"\n+        NAME@[143; 146)\n+          IDENT@[143; 146) \"bar\"\n+        PARAM_LIST@[146; 166)\n+          L_PAREN@[146; 147) \"(\"\n+          PARAM@[147; 153)\n+            PLACEHOLDER_PAT@[147; 148)\n+              UNDERSCORE@[147; 148) \"_\"\n+            COLON@[148; 149) \":\"\n+            WHITESPACE@[149; 150) \" \"\n+            PATH_TYPE@[150; 153)\n+              PATH@[150; 153)\n+                PATH_SEGMENT@[150; 153)\n+                  NAME_REF@[150; 153)\n+                    IDENT@[150; 153) \"u64\"\n+          COMMA@[153; 154) \",\"\n+          WHITESPACE@[154; 155) \" \"\n+          PARAM@[155; 165)\n+            BIND_PAT@[155; 160)\n+              MUT_KW@[155; 158) \"mut\"\n+              WHITESPACE@[158; 159) \" \"\n+              NAME@[159; 160)\n+                IDENT@[159; 160) \"x\"\n+            COLON@[160; 161) \":\"\n+            WHITESPACE@[161; 162) \" \"\n+            PATH_TYPE@[162; 165)\n+              PATH@[162; 165)\n+                PATH_SEGMENT@[162; 165)\n+                  NAME_REF@[162; 165)\n+                    IDENT@[162; 165) \"i32\"\n+          R_PAREN@[165; 166) \")\"\n+        SEMI@[166; 167) \";\"\n+      WHITESPACE@[167; 168) \"\\n\"\n+      R_CURLY@[168; 169) \"}\"\n+  WHITESPACE@[169; 170) \"\\n\"", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0153_trait_fn_patterns.txt"}, {"sha": "b49e872d79da2c64686cde445c33e9dc5a7834d9", "filename": "crates/ra_syntax/test_data/parser/ok/0064_impl_fn_params.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/02b44006b8e37a8cd3f96d5b1c949d62e01be2e8/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0064_impl_fn_params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02b44006b8e37a8cd3f96d5b1c949d62e01be2e8/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0064_impl_fn_params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0064_impl_fn_params.rs?ref=02b44006b8e37a8cd3f96d5b1c949d62e01be2e8", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0152_fn_patterns.rs"}, {"sha": "b30030de367dc0e135bfe097ec7aad195c33f608", "filename": "crates/ra_syntax/test_data/parser/ok/0064_impl_fn_params.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/02b44006b8e37a8cd3f96d5b1c949d62e01be2e8/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0064_impl_fn_params.txt", "raw_url": "https://github.com/rust-lang/rust/raw/02b44006b8e37a8cd3f96d5b1c949d62e01be2e8/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0064_impl_fn_params.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0064_impl_fn_params.txt?ref=02b44006b8e37a8cd3f96d5b1c949d62e01be2e8", "previous_filename": "crates/ra_syntax/test_data/parser/inline/ok/0152_fn_patterns.txt"}, {"sha": "db03df1c45cb0643f9fab0971d6cda9ee1f7042d", "filename": "crates/test_utils/src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/02b44006b8e37a8cd3f96d5b1c949d62e01be2e8/crates%2Ftest_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02b44006b8e37a8cd3f96d5b1c949d62e01be2e8/crates%2Ftest_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftest_utils%2Fsrc%2Flib.rs?ref=02b44006b8e37a8cd3f96d5b1c949d62e01be2e8", "patch": "@@ -397,6 +397,8 @@ pub fn skip_slow_tests() -> bool {\n     should_skip\n }\n \n+const REWRITE: bool = false;\n+\n /// Asserts that `expected` and `actual` strings are equal. If they differ only\n /// in trailing or leading whitespace the test won't fail and\n /// the contents of `actual` will be written to the file located at `path`.\n@@ -412,7 +414,6 @@ fn assert_equal_text(expected: &str, actual: &str, path: &Path) {\n         fs::write(path, actual).unwrap();\n         return;\n     }\n-    const REWRITE: bool = false;\n     if REWRITE {\n         println!(\"rewriting {}\", pretty_path.display());\n         fs::write(path, actual).unwrap();"}, {"sha": "e1472e85d8963b36a056a7c7c001d7952e333082", "filename": "xtask/src/lib.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/02b44006b8e37a8cd3f96d5b1c949d62e01be2e8/xtask%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02b44006b8e37a8cd3f96d5b1c949d62e01be2e8/xtask%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Flib.rs?ref=02b44006b8e37a8cd3f96d5b1c949d62e01be2e8", "patch": "@@ -38,13 +38,11 @@ pub fn project_root() -> PathBuf {\n }\n \n pub fn run_rustfmt(mode: Mode) -> Result<()> {\n+    let _dir = pushd(project_root());\n     ensure_rustfmt()?;\n \n-    if mode == Mode::Verify {\n-        run!(\"rustup run {} -- cargo fmt -- --check\", TOOLCHAIN)?;\n-    } else {\n-        run!(\"rustup run {} -- cargo fmt\", TOOLCHAIN)?;\n-    }\n+    let check = if mode == Mode::Verify { \"--check\" } else { \"\" };\n+    run!(\"rustup run {} -- cargo fmt -- {}\", TOOLCHAIN, check)?;\n     Ok(())\n }\n "}]}