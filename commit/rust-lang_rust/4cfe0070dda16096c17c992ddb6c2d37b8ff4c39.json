{"sha": "4cfe0070dda16096c17c992ddb6c2d37b8ff4c39", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjZmUwMDcwZGRhMTYwOTZjMTdjOTkyZGRiNmMyZDM3YjhmZjRjMzk=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-07-04T18:00:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-04T18:00:17Z"}, "message": "Merge #4864\n\n4864: Add optional target to crates in json project r=Nashenas88 a=Nashenas88\n\nLookup default cfgs per target when generating cfg list.\r\n\r\nShould fully address #4840\r\n\r\nCC @woody77 \n\nCo-authored-by: Paul Daniel Faria <Nashenas88@users.noreply.github.com>\nCo-authored-by: Paul Daniel Faria <nashenas88@users.noreply.github.com>", "tree": {"sha": "241c448b6c5781a703bad41d7fc0baf71acc7c31", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/241c448b6c5781a703bad41d7fc0baf71acc7c31"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4cfe0070dda16096c17c992ddb6c2d37b8ff4c39", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfAMOxCRBK7hj4Ov3rIwAAdHIIAAJTbYH9/9SI29/U2Q4Blk42\nnCTGCD9R+yhltFLnVR9Ghzb0lN3dTBMwvyVNMw2P+4fqMRk72cp9QZ2XtdVuCiLS\nGQwDYH+mMYVUf9LQc5RxbYKs2Yj4nQ72NV2H63SjYDc7XHUy2ATtPIS5/QX9AWMp\n4PmM4PRuN37TOCeHNc6tHi/OAYlr7BetkobFRpsVlztwGj4iLmqalW4jL8vwHNBm\nR5sNOEEajiB3Yura/mWoGU15E7/MBE7FKYrUmKp9Ms4hkMypcEhraiJ6Uy2Kg1jC\nam80c6yUHBQflsdI4CZabKM5OMVRiSmZyub+/5Nfs+/hnMLLyZS7ToZPdau5l7s=\n=7H97\n-----END PGP SIGNATURE-----\n", "payload": "tree 241c448b6c5781a703bad41d7fc0baf71acc7c31\nparent c815d5b49660e9b93c6a70039abef5fa02ae8013\nparent 5b96d4103ea25a2dbb9811b082365ff77a89c94d\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1593885617 +0000\ncommitter GitHub <noreply@github.com> 1593885617 +0000\n\nMerge #4864\n\n4864: Add optional target to crates in json project r=Nashenas88 a=Nashenas88\n\nLookup default cfgs per target when generating cfg list.\r\n\r\nShould fully address #4840\r\n\r\nCC @woody77 \n\nCo-authored-by: Paul Daniel Faria <Nashenas88@users.noreply.github.com>\nCo-authored-by: Paul Daniel Faria <nashenas88@users.noreply.github.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4cfe0070dda16096c17c992ddb6c2d37b8ff4c39", "html_url": "https://github.com/rust-lang/rust/commit/4cfe0070dda16096c17c992ddb6c2d37b8ff4c39", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4cfe0070dda16096c17c992ddb6c2d37b8ff4c39/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c815d5b49660e9b93c6a70039abef5fa02ae8013", "url": "https://api.github.com/repos/rust-lang/rust/commits/c815d5b49660e9b93c6a70039abef5fa02ae8013", "html_url": "https://github.com/rust-lang/rust/commit/c815d5b49660e9b93c6a70039abef5fa02ae8013"}, {"sha": "5b96d4103ea25a2dbb9811b082365ff77a89c94d", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b96d4103ea25a2dbb9811b082365ff77a89c94d", "html_url": "https://github.com/rust-lang/rust/commit/5b96d4103ea25a2dbb9811b082365ff77a89c94d"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "f9c73ece145ec0a4d3db8d1a16be374a6f37c27c", "filename": "crates/ra_cfg/src/lib.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4cfe0070dda16096c17c992ddb6c2d37b8ff4c39/crates%2Fra_cfg%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4cfe0070dda16096c17c992ddb6c2d37b8ff4c39/crates%2Fra_cfg%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cfg%2Fsrc%2Flib.rs?ref=4cfe0070dda16096c17c992ddb6c2d37b8ff4c39", "patch": "@@ -46,4 +46,14 @@ impl CfgOptions {\n     pub fn insert_key_value(&mut self, key: SmolStr, value: SmolStr) {\n         self.key_values.insert((key, value));\n     }\n+\n+    pub fn append(&mut self, other: &CfgOptions) {\n+        for atom in &other.atoms {\n+            self.atoms.insert(atom.clone());\n+        }\n+\n+        for (key, value) in &other.key_values {\n+            self.key_values.insert((key.clone(), value.clone()));\n+        }\n+    }\n }"}, {"sha": "5d1f871c412c1b19079efd528c6a0c2942def48b", "filename": "crates/ra_project_model/src/lib.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4cfe0070dda16096c17c992ddb6c2d37b8ff4c39/crates%2Fra_project_model%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4cfe0070dda16096c17c992ddb6c2d37b8ff4c39/crates%2Fra_project_model%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Flib.rs?ref=4cfe0070dda16096c17c992ddb6c2d37b8ff4c39", "patch": "@@ -246,6 +246,7 @@ impl ProjectWorkspace {\n         let mut crate_graph = CrateGraph::default();\n         match self {\n             ProjectWorkspace::Json { project } => {\n+                let mut target_cfg_map = FxHashMap::<Option<&str>, CfgOptions>::default();\n                 let crates: FxHashMap<_, _> = project\n                     .crates\n                     .iter()\n@@ -265,6 +266,14 @@ impl ProjectWorkspace {\n                             .proc_macro_dylib_path\n                             .clone()\n                             .map(|it| proc_macro_client.by_dylib_path(&it));\n+\n+                        let target = krate.target.as_deref().or(target);\n+                        let target_cfgs = target_cfg_map\n+                            .entry(target.clone())\n+                            .or_insert_with(|| get_rustc_cfg_options(target.as_deref()));\n+                        let mut cfg_options = krate.cfg.clone();\n+                        cfg_options.append(target_cfgs);\n+\n                         // FIXME: No crate name in json definition such that we cannot add OUT_DIR to env\n                         Some((\n                             CrateId(seq_index as u32),\n@@ -273,7 +282,7 @@ impl ProjectWorkspace {\n                                 krate.edition,\n                                 // FIXME json definitions can store the crate name\n                                 None,\n-                                krate.cfg.clone(),\n+                                cfg_options,\n                                 env,\n                                 proc_macro.unwrap_or_default(),\n                             ),"}, {"sha": "b962279496a743eeacabdf5629e530f27698eb54", "filename": "crates/ra_project_model/src/project_json.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4cfe0070dda16096c17c992ddb6c2d37b8ff4c39/crates%2Fra_project_model%2Fsrc%2Fproject_json.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4cfe0070dda16096c17c992ddb6c2d37b8ff4c39/crates%2Fra_project_model%2Fsrc%2Fproject_json.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Fproject_json.rs?ref=4cfe0070dda16096c17c992ddb6c2d37b8ff4c39", "patch": "@@ -31,6 +31,7 @@ pub struct Crate {\n     pub(crate) edition: Edition,\n     pub(crate) deps: Vec<Dependency>,\n     pub(crate) cfg: CfgOptions,\n+    pub(crate) target: Option<String>,\n     pub(crate) out_dir: Option<AbsPathBuf>,\n     pub(crate) proc_macro_dylib_path: Option<AbsPathBuf>,\n }\n@@ -65,6 +66,7 @@ impl ProjectJson {\n                         }\n                         cfg\n                     },\n+                    target: crate_data.target,\n                     out_dir: crate_data.out_dir.map(|it| base.join(it)),\n                     proc_macro_dylib_path: crate_data.proc_macro_dylib_path.map(|it| base.join(it)),\n                 })\n@@ -86,6 +88,7 @@ struct CrateData {\n     deps: Vec<DepData>,\n     #[serde(default)]\n     cfg: FxHashSet<String>,\n+    target: Option<String>,\n     out_dir: Option<PathBuf>,\n     proc_macro_dylib_path: Option<PathBuf>,\n }"}]}