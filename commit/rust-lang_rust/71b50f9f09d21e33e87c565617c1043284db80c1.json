{"sha": "71b50f9f09d21e33e87c565617c1043284db80c1", "node_id": "C_kwDOAAsO6NoAKDcxYjUwZjlmMDlkMjFlMzNlODdjNTY1NjE3YzEwNDMyODRkYjgwYzE", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-04-16T14:11:59Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-04-16T14:11:59Z"}, "message": "Record eager expansion errors in EagerCallInfo", "tree": {"sha": "53c8daa93bdae03f4123577d577dcc01db140e19", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53c8daa93bdae03f4123577d577dcc01db140e19"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71b50f9f09d21e33e87c565617c1043284db80c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71b50f9f09d21e33e87c565617c1043284db80c1", "html_url": "https://github.com/rust-lang/rust/commit/71b50f9f09d21e33e87c565617c1043284db80c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71b50f9f09d21e33e87c565617c1043284db80c1/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ae8d49e1554cbf99387ed83079277f5f854d187", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ae8d49e1554cbf99387ed83079277f5f854d187", "html_url": "https://github.com/rust-lang/rust/commit/6ae8d49e1554cbf99387ed83079277f5f854d187"}], "stats": {"total": 26, "additions": 14, "deletions": 12}, "files": [{"sha": "e8fba15601be471566265b77467138aeb2dcf81f", "filename": "crates/hir-expand/src/db.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/71b50f9f09d21e33e87c565617c1043284db80c1/crates%2Fhir-expand%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71b50f9f09d21e33e87c565617c1043284db80c1/crates%2Fhir-expand%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-expand%2Fsrc%2Fdb.rs?ref=71b50f9f09d21e33e87c565617c1043284db80c1", "patch": "@@ -451,8 +451,7 @@ fn macro_expand(\n     if let Some(eager) = &loc.eager {\n         return ExpandResult {\n             value: Some(eager.arg_or_expansion.clone()),\n-            // FIXME: There could be errors here!\n-            err: None,\n+            err: eager.error.clone(),\n         };\n     }\n "}, {"sha": "7d00b682a9359591c0751acf9454d962ae45bde3", "filename": "crates/hir-expand/src/eager.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/71b50f9f09d21e33e87c565617c1043284db80c1/crates%2Fhir-expand%2Fsrc%2Feager.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71b50f9f09d21e33e87c565617c1043284db80c1/crates%2Fhir-expand%2Fsrc%2Feager.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-expand%2Fsrc%2Feager.rs?ref=71b50f9f09d21e33e87c565617c1043284db80c1", "patch": "@@ -60,10 +60,11 @@ pub fn expand_eager_macro(\n     let arg_id = db.intern_macro_call(MacroCallLoc {\n         def,\n         krate,\n-        eager: Some(EagerCallInfo {\n+        eager: Some(Box::new(EagerCallInfo {\n             arg_or_expansion: Arc::new(parsed_args.clone()),\n             included_file: None,\n-        }),\n+            error: None,\n+        })),\n         kind: MacroCallKind::FnLike { ast_id: call_id, expand_to: ExpandTo::Expr },\n     });\n \n@@ -88,10 +89,11 @@ pub fn expand_eager_macro(\n     let loc = MacroCallLoc {\n         def,\n         krate,\n-        eager: Some(EagerCallInfo {\n+        eager: Some(Box::new(EagerCallInfo {\n             arg_or_expansion: Arc::new(res.value.subtree),\n             included_file: res.value.included_file,\n-        }),\n+            error: err.clone(),\n+        })),\n         kind: MacroCallKind::FnLike { ast_id: call_id, expand_to },\n     };\n "}, {"sha": "9685320cf5d5a9351e5ab8873a25de6ffb232b60", "filename": "crates/hir-expand/src/lib.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/71b50f9f09d21e33e87c565617c1043284db80c1/crates%2Fhir-expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71b50f9f09d21e33e87c565617c1043284db80c1/crates%2Fhir-expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-expand%2Fsrc%2Flib.rs?ref=71b50f9f09d21e33e87c565617c1043284db80c1", "patch": "@@ -52,7 +52,7 @@ use crate::{\n \n pub type ExpandResult<T> = ValueResult<T, ExpandError>;\n \n-#[derive(Debug, PartialEq, Eq, Clone)]\n+#[derive(Debug, PartialEq, Eq, Clone, Hash)]\n pub enum ExpandError {\n     UnresolvedProcMacro(CrateId),\n     Mbe(mbe::ExpandError),\n@@ -114,7 +114,7 @@ impl_intern_key!(MacroCallId);\n pub struct MacroCallLoc {\n     pub def: MacroDefId,\n     pub(crate) krate: CrateId,\n-    eager: Option<EagerCallInfo>,\n+    eager: Option<Box<EagerCallInfo>>,\n     pub kind: MacroCallKind,\n }\n \n@@ -141,6 +141,7 @@ struct EagerCallInfo {\n     /// NOTE: This can be *either* the expansion result, *or* the argument to the eager macro!\n     arg_or_expansion: Arc<tt::Subtree>,\n     included_file: Option<(FileId, TokenMap)>,\n+    error: Option<ExpandError>,\n }\n \n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n@@ -206,8 +207,8 @@ impl HirFileId {\n                 HirFileIdRepr::FileId(id) => break id,\n                 HirFileIdRepr::MacroFile(MacroFile { macro_call_id }) => {\n                     let loc: MacroCallLoc = db.lookup_intern_macro_call(macro_call_id);\n-                    file_id = match loc.eager {\n-                        Some(EagerCallInfo { included_file: Some((file, _)), .. }) => file.into(),\n+                    file_id = match loc.eager.as_deref() {\n+                        Some(&EagerCallInfo { included_file: Some((file, _)), .. }) => file.into(),\n                         _ => loc.kind.file_id(),\n                     };\n                 }\n@@ -320,7 +321,7 @@ impl HirFileId {\n         match self.macro_file() {\n             Some(macro_file) => {\n                 let loc: MacroCallLoc = db.lookup_intern_macro_call(macro_file.macro_call_id);\n-                matches!(loc.eager, Some(EagerCallInfo { included_file: Some(..), .. }))\n+                matches!(loc.eager.as_deref(), Some(EagerCallInfo { included_file: Some(..), .. }))\n             }\n             _ => false,\n         }"}, {"sha": "23ec3235d2d0fbfba08336749d5f56accb05a38b", "filename": "crates/mbe/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/71b50f9f09d21e33e87c565617c1043284db80c1/crates%2Fmbe%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71b50f9f09d21e33e87c565617c1043284db80c1/crates%2Fmbe%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Flib.rs?ref=71b50f9f09d21e33e87c565617c1043284db80c1", "patch": "@@ -69,7 +69,7 @@ impl fmt::Display for ParseError {\n     }\n }\n \n-#[derive(Debug, PartialEq, Eq, Clone)]\n+#[derive(Debug, PartialEq, Eq, Clone, Hash)]\n pub enum ExpandError {\n     BindingError(Box<Box<str>>),\n     LeftoverTokens,"}]}