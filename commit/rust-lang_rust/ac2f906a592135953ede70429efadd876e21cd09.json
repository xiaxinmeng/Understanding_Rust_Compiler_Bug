{"sha": "ac2f906a592135953ede70429efadd876e21cd09", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjMmY5MDZhNTkyMTM1OTUzZWRlNzA0MjllZmFkZDg3NmUyMWNkMDk=", "commit": {"author": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2019-10-16T04:48:20Z"}, "committer": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2019-10-16T04:48:20Z"}, "message": "Make use of the return value of `HashSet::insert`", "tree": {"sha": "7a1adb0a133d65e14bca4eb198048eac2f51c8be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a1adb0a133d65e14bca4eb198048eac2f51c8be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac2f906a592135953ede70429efadd876e21cd09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac2f906a592135953ede70429efadd876e21cd09", "html_url": "https://github.com/rust-lang/rust/commit/ac2f906a592135953ede70429efadd876e21cd09", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac2f906a592135953ede70429efadd876e21cd09/comments", "author": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5ffd36a6cd6fa03b09a60a3835ce6ca90c310ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5ffd36a6cd6fa03b09a60a3835ce6ca90c310ff", "html_url": "https://github.com/rust-lang/rust/commit/d5ffd36a6cd6fa03b09a60a3835ce6ca90c310ff"}], "stats": {"total": 22, "additions": 6, "deletions": 16}, "files": [{"sha": "b8d1a549ecda3b786b333370eaa4043378d4d76b", "filename": "src/librustc/middle/stability.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ac2f906a592135953ede70429efadd876e21cd09/src%2Flibrustc%2Fmiddle%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac2f906a592135953ede70429efadd876e21cd09/src%2Flibrustc%2Fmiddle%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fstability.rs?ref=ac2f906a592135953ede70429efadd876e21cd09", "patch": "@@ -905,11 +905,10 @@ pub fn check_unused_or_stable_features(tcx: TyCtxt<'_>) {\n             // Warn if the user has enabled an already-stable lang feature.\n             unnecessary_stable_feature_lint(tcx, span, feature, since);\n         }\n-        if lang_features.contains(&feature) {\n+        if !lang_features.insert(feature) {\n             // Warn if the user enables a lang feature multiple times.\n             duplicate_feature_err(tcx.sess, span, feature);\n         }\n-        lang_features.insert(feature);\n     }\n \n     let declared_lib_features = &tcx.features().declared_lib_features;"}, {"sha": "7bd82ced3c386f7f777bc4897bbb5fe660320698", "filename": "src/librustc_codegen_llvm/debuginfo/metadata.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ac2f906a592135953ede70429efadd876e21cd09/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac2f906a592135953ede70429efadd876e21cd09/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs?ref=ac2f906a592135953ede70429efadd876e21cd09", "patch": "@@ -2069,11 +2069,9 @@ fn set_members_of_composite_type(cx: &CodegenCx<'ll, 'tcx>,\n     {\n         let mut composite_types_completed =\n             debug_context(cx).composite_types_completed.borrow_mut();\n-        if composite_types_completed.contains(&composite_type_metadata) {\n+        if !composite_types_completed.insert(&composite_type_metadata) {\n             bug!(\"debuginfo::set_members_of_composite_type() - \\\n                   Already completed forward declaration re-encountered.\");\n-        } else {\n-            composite_types_completed.insert(composite_type_metadata);\n         }\n     }\n "}, {"sha": "a58db6a903bb99f1622fce33cfeb7d42a0d981db", "filename": "src/librustc_metadata/native_libs.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ac2f906a592135953ede70429efadd876e21cd09/src%2Flibrustc_metadata%2Fnative_libs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac2f906a592135953ede70429efadd876e21cd09/src%2Flibrustc_metadata%2Fnative_libs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fnative_libs.rs?ref=ac2f906a592135953ede70429efadd876e21cd09", "patch": "@@ -198,12 +198,10 @@ impl Collector<'tcx> {\n                     self.tcx.sess.err(&format!(\"renaming of the library `{}` was specified, \\\n                                                 however this crate contains no `#[link(...)]` \\\n                                                 attributes referencing this library.\", name));\n-                } else if renames.contains(name) {\n+                } else if !renames.insert(name) {\n                     self.tcx.sess.err(&format!(\"multiple renamings were \\\n                                                 specified for library `{}` .\",\n                                                name));\n-                } else {\n-                    renames.insert(name);\n                 }\n             }\n         }"}, {"sha": "4c469a82ac3d6b9dc1bce871165c0d47a824707a", "filename": "src/librustc_mir/borrow_check/conflict_errors.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ac2f906a592135953ede70429efadd876e21cd09/src%2Flibrustc_mir%2Fborrow_check%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac2f906a592135953ede70429efadd876e21cd09/src%2Flibrustc_mir%2Fborrow_check%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fconflict_errors.rs?ref=ac2f906a592135953ede70429efadd876e21cd09", "patch": "@@ -78,16 +78,14 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n                 .last()\n                 .unwrap();\n \n-            if self.uninitialized_error_reported.contains(&root_place) {\n+            if !self.uninitialized_error_reported.insert(root_place) {\n                 debug!(\n                     \"report_use_of_moved_or_uninitialized place: error about {:?} suppressed\",\n                     root_place\n                 );\n                 return;\n             }\n \n-            self.uninitialized_error_reported.insert(root_place);\n-\n             let item_msg = match self.describe_place_with_options(used_place,\n                                                                   IncludingDowncast(true)) {\n                 Some(name) => format!(\"`{}`\", name),"}, {"sha": "158b730b9bd43735e0ce5f1ae22981e75d6bb7d8", "filename": "src/librustc_mir/lints.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ac2f906a592135953ede70429efadd876e21cd09/src%2Flibrustc_mir%2Flints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac2f906a592135953ede70429efadd876e21cd09/src%2Flibrustc_mir%2Flints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Flints.rs?ref=ac2f906a592135953ede70429efadd876e21cd09", "patch": "@@ -72,13 +72,11 @@ fn check_fn_for_unconditional_recursion(\n     let caller_substs = &InternalSubsts::identity_for_item(tcx, def_id)[..trait_substs_count];\n \n     while let Some(bb) = reachable_without_self_call_queue.pop() {\n-        if visited.contains(bb) {\n+        if !visited.insert(bb) {\n             //already done\n             continue;\n         }\n \n-        visited.insert(bb);\n-\n         let block = &basic_blocks[bb];\n \n         if let Some(ref terminator) = block.terminator {"}, {"sha": "0a734d881efe069349b4dfb4cbc0bff97bd86c97", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ac2f906a592135953ede70429efadd876e21cd09/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac2f906a592135953ede70429efadd876e21cd09/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=ac2f906a592135953ede70429efadd876e21cd09", "patch": "@@ -670,13 +670,12 @@ impl<'a, 'b> ImportResolver<'a, 'b> {\n                     self.throw_unresolved_import_error(errors, None);\n                     errors = vec![];\n                 }\n-                if !seen_spans.contains(&err.span) {\n+                if seen_spans.insert(err.span) {\n                     let path = import_path_to_string(\n                         &import.module_path.iter().map(|seg| seg.ident).collect::<Vec<_>>(),\n                         &import.subclass,\n                         err.span,\n                     );\n-                    seen_spans.insert(err.span);\n                     errors.push((path, err));\n                     prev_root_id = import.root_id;\n                 }"}]}