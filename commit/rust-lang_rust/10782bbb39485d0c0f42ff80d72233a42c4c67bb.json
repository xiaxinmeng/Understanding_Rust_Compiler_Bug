{"sha": "10782bbb39485d0c0f42ff80d72233a42c4c67bb", "node_id": "C_kwDOAAsO6NoAKDEwNzgyYmJiMzk0ODVkMGMwZjQyZmY4MGQ3MjIzM2E0MmM0YzY3YmI", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-11-05T11:25:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-05T11:25:17Z"}, "message": "Merge #10685\n\n10685: fix: Enable markdown tables r=Veykril a=Veykril\n\nShould fix https://github.com/rust-analyzer/rust-analyzer/issues/10655\r\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "ab5065529393dddc66a09bb0665d4bec1603bcfa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab5065529393dddc66a09bb0665d4bec1603bcfa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10782bbb39485d0c0f42ff80d72233a42c4c67bb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhhRSdCRBK7hj4Ov3rIwAAtDMIAHfKOq3bJw+m0J0+BZbvaSxP\nDrN2KdlKXiGBMvNW8Jxx/snZY1gC74v7UXXwx4I8oggnG60z41pIZT92si8/DcwJ\nZhFq99nnVPtmGcuxOKp0Mbjtz894LrzMz6PipriQS/2RMwujtdq6oruc15AQCVry\nyawJb9fQeWjiSEz8YAjxJqo4vyTSekRt867N14K7e7A0amWl60YzF19v1I0hJw96\ncx8k4jlBG1o4nQi5MNupNhUls31qW8fAQL9A1UKL9qFr3ZwHWeZFV1LZM0U9dQmi\nqyc2ea7SCV7A8ynBYdpFeQXDdLM4ynEx3QIYer+oHzb+7n2+CgO27VDWb7HuHaY=\n=qzhR\n-----END PGP SIGNATURE-----\n", "payload": "tree ab5065529393dddc66a09bb0665d4bec1603bcfa\nparent 8720281f15e20b9caaad30f20b609a234c18184d\nparent 4d4574f5b69bca3938408bb324863a61d62950c2\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1636111517 +0000\ncommitter GitHub <noreply@github.com> 1636111517 +0000\n\nMerge #10685\n\n10685: fix: Enable markdown tables r=Veykril a=Veykril\n\nShould fix https://github.com/rust-analyzer/rust-analyzer/issues/10655\r\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10782bbb39485d0c0f42ff80d72233a42c4c67bb", "html_url": "https://github.com/rust-lang/rust/commit/10782bbb39485d0c0f42ff80d72233a42c4c67bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10782bbb39485d0c0f42ff80d72233a42c4c67bb/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8720281f15e20b9caaad30f20b609a234c18184d", "url": "https://api.github.com/repos/rust-lang/rust/commits/8720281f15e20b9caaad30f20b609a234c18184d", "html_url": "https://github.com/rust-lang/rust/commit/8720281f15e20b9caaad30f20b609a234c18184d"}, {"sha": "4d4574f5b69bca3938408bb324863a61d62950c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d4574f5b69bca3938408bb324863a61d62950c2", "html_url": "https://github.com/rust-lang/rust/commit/4d4574f5b69bca3938408bb324863a61d62950c2"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "703449fe404165e7db682fec3286e5aa61683465", "filename": "crates/ide/src/doc_links.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/10782bbb39485d0c0f42ff80d72233a42c4c67bb/crates%2Fide%2Fsrc%2Fdoc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10782bbb39485d0c0f42ff80d72233a42c4c67bb/crates%2Fide%2Fsrc%2Fdoc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdoc_links.rs?ref=10782bbb39485d0c0f42ff80d72233a42c4c67bb", "patch": "@@ -32,11 +32,13 @@ use crate::{\n /// Weblink to an item's documentation.\n pub(crate) type DocumentationLink = String;\n \n+const MARKDOWN_OPTIONS: Options =\n+    Options::ENABLE_FOOTNOTES.union(Options::ENABLE_TABLES).union(Options::ENABLE_TASKLISTS);\n+\n /// Rewrite documentation links in markdown to point to an online host (e.g. docs.rs)\n pub(crate) fn rewrite_links(db: &RootDatabase, markdown: &str, definition: Definition) -> String {\n     let mut cb = broken_link_clone_cb;\n-    let doc =\n-        Parser::new_with_broken_link_callback(markdown, Options::ENABLE_TASKLISTS, Some(&mut cb));\n+    let doc = Parser::new_with_broken_link_callback(markdown, MARKDOWN_OPTIONS, Some(&mut cb));\n \n     let doc = map_links(doc, |target, title| {\n         // This check is imperfect, there's some overlap between valid intra-doc links\n@@ -75,13 +77,11 @@ pub(crate) fn rewrite_links(db: &RootDatabase, markdown: &str, definition: Defin\n pub(crate) fn remove_links(markdown: &str) -> String {\n     let mut drop_link = false;\n \n-    let opts = Options::ENABLE_TASKLISTS | Options::ENABLE_FOOTNOTES;\n-\n     let mut cb = |_: BrokenLink| {\n         let empty = InlineStr::try_from(\"\").unwrap();\n         Some((CowStr::Inlined(empty), CowStr::Inlined(empty)))\n     };\n-    let doc = Parser::new_with_broken_link_callback(markdown, opts, Some(&mut cb));\n+    let doc = Parser::new_with_broken_link_callback(markdown, MARKDOWN_OPTIONS, Some(&mut cb));\n     let doc = doc.filter_map(move |evt| match evt {\n         Event::Start(Tag::Link(link_type, target, title)) => {\n             if link_type == LinkType::Inline && target.contains(\"://\") {\n@@ -151,7 +151,7 @@ pub(crate) fn extract_definitions_from_docs(\n ) -> Vec<(TextRange, String, Option<hir::Namespace>)> {\n     Parser::new_with_broken_link_callback(\n         docs.as_str(),\n-        Options::ENABLE_TASKLISTS,\n+        MARKDOWN_OPTIONS,\n         Some(&mut broken_link_clone_cb),\n     )\n     .into_offset_iter()"}]}