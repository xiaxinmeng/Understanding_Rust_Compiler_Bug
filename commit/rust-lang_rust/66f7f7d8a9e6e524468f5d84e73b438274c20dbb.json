{"sha": "66f7f7d8a9e6e524468f5d84e73b438274c20dbb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2ZjdmN2Q4YTllNmU1MjQ0NjhmNWQ4NGU3M2I0MzgyNzRjMjBkYmI=", "commit": {"author": {"name": "Martin Habovstiak", "email": "martin.habovstiak@gmail.com", "date": "2021-02-06T12:16:37Z"}, "committer": {"name": "Martin Habovstiak", "email": "martin.habovstiak@gmail.com", "date": "2021-02-06T21:16:54Z"}, "message": "Added `try_exists()` method to `std::path::Path`\n\nThis method is similar to the existing `exists()` method, except it\ndoesn't silently ignore the errors, leading to less error-prone code.\n\nThis change intentionally does NOT touch the documentation of `exists()`\nnor recommend people to use this method while it's unstable.\nSuch changes are reserved for stabilization to prevent confusing people.\n\nApart from that it avoids conflicts with #80979.", "tree": {"sha": "5a40ced7d98859d21e752101f44284c102a0c162", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a40ced7d98859d21e752101f44284c102a0c162"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66f7f7d8a9e6e524468f5d84e73b438274c20dbb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66f7f7d8a9e6e524468f5d84e73b438274c20dbb", "html_url": "https://github.com/rust-lang/rust/commit/66f7f7d8a9e6e524468f5d84e73b438274c20dbb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66f7f7d8a9e6e524468f5d84e73b438274c20dbb/comments", "author": {"login": "Kixunil", "id": 1178779, "node_id": "MDQ6VXNlcjExNzg3Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1178779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kixunil", "html_url": "https://github.com/Kixunil", "followers_url": "https://api.github.com/users/Kixunil/followers", "following_url": "https://api.github.com/users/Kixunil/following{/other_user}", "gists_url": "https://api.github.com/users/Kixunil/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kixunil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kixunil/subscriptions", "organizations_url": "https://api.github.com/users/Kixunil/orgs", "repos_url": "https://api.github.com/users/Kixunil/repos", "events_url": "https://api.github.com/users/Kixunil/events{/privacy}", "received_events_url": "https://api.github.com/users/Kixunil/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Kixunil", "id": 1178779, "node_id": "MDQ6VXNlcjExNzg3Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1178779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kixunil", "html_url": "https://github.com/Kixunil", "followers_url": "https://api.github.com/users/Kixunil/followers", "following_url": "https://api.github.com/users/Kixunil/following{/other_user}", "gists_url": "https://api.github.com/users/Kixunil/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kixunil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kixunil/subscriptions", "organizations_url": "https://api.github.com/users/Kixunil/orgs", "repos_url": "https://api.github.com/users/Kixunil/repos", "events_url": "https://api.github.com/users/Kixunil/events{/privacy}", "received_events_url": "https://api.github.com/users/Kixunil/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "399b6452b5d9982438be208668bc758479f13725", "url": "https://api.github.com/repos/rust-lang/rust/commits/399b6452b5d9982438be208668bc758479f13725", "html_url": "https://github.com/rust-lang/rust/commit/399b6452b5d9982438be208668bc758479f13725"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "4dd37f76efcb14799392bd761bf0a8031e00b0bb", "filename": "library/std/src/path.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/66f7f7d8a9e6e524468f5d84e73b438274c20dbb/library%2Fstd%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66f7f7d8a9e6e524468f5d84e73b438274c20dbb/library%2Fstd%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpath.rs?ref=66f7f7d8a9e6e524468f5d84e73b438274c20dbb", "patch": "@@ -2468,6 +2468,36 @@ impl Path {\n         fs::metadata(self).is_ok()\n     }\n \n+    /// Returns `Ok(true)` if the path points at an existing entity.\n+    ///\n+    /// This function will traverse symbolic links to query information about the\n+    /// destination file. In case of broken symbolic links this will return `Ok(false)`.\n+    ///\n+    /// As opposed to the `exists()` method, this one doesn't silently ignore errors\n+    /// unrelated to the path not existing. (E.g. it will return `Err(_)` in case of permission\n+    /// denied on some of the parent directories.)\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```no_run\n+    /// #![feature(path_try_exists)]\n+    ///\n+    /// use std::path::Path;\n+    /// assert!(!Path::new(\"does_not_exist.txt\").try_exists().expect(\"Can't check existence of file does_not_exist.txt\"));\n+    /// assert!(Path::new(\"/root/secret_file.txt\").try_exists().is_err());\n+    /// ```\n+    // FIXME: stabilization should modify documentation of `exists()` to recommend this method\n+    // instead.\n+    #[unstable(feature = \"path_try_exists\", issue = \"none\")]\n+    #[inline]\n+    pub fn try_exists(&self) -> io::Result<bool> {\n+        match fs::metadata(self) {\n+            Ok(_) => Ok(true),\n+            Err(error) if error.kind() == io::ErrorKind::NotFound => Ok(false),\n+            Err(error) => Err(error),\n+        }\n+    }\n+\n     /// Returns `true` if the path exists on disk and is pointing at a regular file.\n     ///\n     /// This function will traverse symbolic links to query information about the"}]}