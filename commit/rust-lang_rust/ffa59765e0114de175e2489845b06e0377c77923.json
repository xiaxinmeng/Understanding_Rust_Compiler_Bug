{"sha": "ffa59765e0114de175e2489845b06e0377c77923", "node_id": "C_kwDOAAsO6NoAKGZmYTU5NzY1ZTAxMTRkZTE3NWUyNDg5ODQ1YjA2ZTAzNzdjNzc5MjM", "commit": {"author": {"name": "Jakub Ber\u00e1nek", "email": "berykubik@gmail.com", "date": "2022-03-07T14:54:17Z"}, "committer": {"name": "Jakub Ber\u00e1nek", "email": "berykubik@gmail.com", "date": "2022-03-07T14:54:17Z"}, "message": "Gather more profile data for LLVM PGO", "tree": {"sha": "ba5f758e9cf9482f8fdf062358ae65f9de2eef2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba5f758e9cf9482f8fdf062358ae65f9de2eef2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ffa59765e0114de175e2489845b06e0377c77923", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEg8FrwI85f934CWFa28VT5UDC9hkFAmImHJkACgkQ28VT5UDC\n9hn/Dgv/eHXMovS85Sm2sLPoa4bw2i3K7jNiBGavcke+zcCzKT12awdpqAk7HAO1\nKzNkVsFpTfv6QZs6fswmhTLDgDuFAmEc4hO+BddJ7ozmkpvBU/r6GbIgmjNv1+Z0\nuGxy377EX+zRXv8dcpU85mHC5PA0q9rhVLPZOufIAVGjhBzhO9DzZeMtK1Q/ybM5\nXPLCkwD169MFPlhoufeTejgmfbI9VsHgJMWg1w4ViiTHjwghIxfLByDrva5Glsw6\nMRn8LfCwqOB4If6iQ2Q7wgrVYTbYwhSeyHltlPdw05QbCaC2B2UX6jCpJOa1sCau\n7t5HAFtK1BlPwiyUG+lsrpEOvJHKTmbKh2Uvlj9uq6JdFUjlw9vSydCQi+2kxDnv\n7qszn9h/EVXWNx8Q5/RV4s+wxcWG8D9mobbw0v7V+fVgAZtiEcGdJD5O/l6RBJkF\nalhRb8Fc6+kkBm7/eQ0caiqWxax+ZauxHY6DNbsmOch8t7HNDAGNYV0mPr3kPq1q\nQDsz+NUF\n=M2X4\n-----END PGP SIGNATURE-----", "payload": "tree ba5f758e9cf9482f8fdf062358ae65f9de2eef2c\nparent 297273c45b205820a4c055082c71677197a40b55\nauthor Jakub Ber\u00e1nek <berykubik@gmail.com> 1646664857 +0100\ncommitter Jakub Ber\u00e1nek <berykubik@gmail.com> 1646664857 +0100\n\nGather more profile data for LLVM PGO\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ffa59765e0114de175e2489845b06e0377c77923", "html_url": "https://github.com/rust-lang/rust/commit/ffa59765e0114de175e2489845b06e0377c77923", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ffa59765e0114de175e2489845b06e0377c77923/comments", "author": {"login": "Kobzol", "id": 4539057, "node_id": "MDQ6VXNlcjQ1MzkwNTc=", "avatar_url": "https://avatars.githubusercontent.com/u/4539057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kobzol", "html_url": "https://github.com/Kobzol", "followers_url": "https://api.github.com/users/Kobzol/followers", "following_url": "https://api.github.com/users/Kobzol/following{/other_user}", "gists_url": "https://api.github.com/users/Kobzol/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kobzol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kobzol/subscriptions", "organizations_url": "https://api.github.com/users/Kobzol/orgs", "repos_url": "https://api.github.com/users/Kobzol/repos", "events_url": "https://api.github.com/users/Kobzol/events{/privacy}", "received_events_url": "https://api.github.com/users/Kobzol/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Kobzol", "id": 4539057, "node_id": "MDQ6VXNlcjQ1MzkwNTc=", "avatar_url": "https://avatars.githubusercontent.com/u/4539057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kobzol", "html_url": "https://github.com/Kobzol", "followers_url": "https://api.github.com/users/Kobzol/followers", "following_url": "https://api.github.com/users/Kobzol/following{/other_user}", "gists_url": "https://api.github.com/users/Kobzol/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kobzol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kobzol/subscriptions", "organizations_url": "https://api.github.com/users/Kobzol/orgs", "repos_url": "https://api.github.com/users/Kobzol/repos", "events_url": "https://api.github.com/users/Kobzol/events{/privacy}", "received_events_url": "https://api.github.com/users/Kobzol/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "297273c45b205820a4c055082c71677197a40b55", "url": "https://api.github.com/repos/rust-lang/rust/commits/297273c45b205820a4c055082c71677197a40b55", "html_url": "https://github.com/rust-lang/rust/commit/297273c45b205820a4c055082c71677197a40b55"}], "stats": {"total": 38, "additions": 28, "deletions": 10}, "files": [{"sha": "1917d4e69800af4e4916ca5a641f4603f1943b08", "filename": "src/ci/pgo.sh", "status": "modified", "additions": 28, "deletions": 10, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/ffa59765e0114de175e2489845b06e0377c77923/src%2Fci%2Fpgo.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ffa59765e0114de175e2489845b06e0377c77923/src%2Fci%2Fpgo.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fpgo.sh?ref=ffa59765e0114de175e2489845b06e0377c77923", "patch": "@@ -19,6 +19,34 @@ RUSTC_BOOTSTRAP=1 ./build/$PGO_HOST/stage2/bin/rustc \\\n RUSTC_BOOTSTRAP=1 ./build/$PGO_HOST/stage2/bin/rustc \\\n     --edition=2021 --crate-type=lib -Copt-level=3 ../library/core/src/lib.rs\n \n+cp -r /tmp/rustc-perf ./\n+chown -R $(whoami): ./rustc-perf\n+cd rustc-perf\n+\n+# Build the collector ahead of time, which is needed to make sure the rustc-fake\n+# binary used by the collector is present.\n+RUSTC=/checkout/obj/build/$PGO_HOST/stage0/bin/rustc \\\n+RUSTC_BOOTSTRAP=1 \\\n+/checkout/obj/build/$PGO_HOST/stage0/bin/cargo build -p collector\n+\n+# Gather LLVM PGO profiles from real-world crates.\n+# Benchmark using profile_local with eprintln, which essentially just means\n+# don't actually benchmark -- just make sure we run rustc a bunch of times.\n+RUST_LOG=collector=debug \\\n+RUSTC=/checkout/obj/build/$PGO_HOST/stage0/bin/rustc \\\n+RUSTC_BOOTSTRAP=1 \\\n+/checkout/obj/build/$PGO_HOST/stage0/bin/cargo run -p collector --bin collector -- \\\n+        profile_local \\\n+        eprintln \\\n+        /checkout/obj/build/$PGO_HOST/stage2/bin/rustc \\\n+        Test \\\n+        --builds Debug,Opt \\\n+        --cargo /checkout/obj/build/$PGO_HOST/stage0/bin/cargo \\\n+        --runs All \\\n+        --include syn,cargo,serde,ripgrep,regex,clap-rs,hyper-2\n+\n+cd /checkout/obj\n+\n # Merge the profile data we gathered for LLVM\n # Note that this uses the profdata from the clang we used to build LLVM,\n # which likely has a different version than our in-tree clang.\n@@ -42,18 +70,8 @@ RUSTC_BOOTSTRAP=1 ./build/$PGO_HOST/stage2/bin/rustc \\\n RUSTC_BOOTSTRAP=1 ./build/$PGO_HOST/stage2/bin/rustc \\\n     --edition=2021 --crate-type=lib -Copt-level=3 ../library/core/src/lib.rs\n \n-cp -r /tmp/rustc-perf ./\n-chown -R $(whoami): ./rustc-perf\n cd rustc-perf\n \n-# Build the collector ahead of time, which is needed to make sure the rustc-fake\n-# binary used by the collector is present.\n-RUSTC=/checkout/obj/build/$PGO_HOST/stage0/bin/rustc \\\n-RUSTC_BOOTSTRAP=1 \\\n-/checkout/obj/build/$PGO_HOST/stage0/bin/cargo build -p collector\n-\n-# benchmark using profile_local with eprintln, which essentially just means\n-# don't actually benchmark -- just make sure we run rustc a bunch of times.\n RUST_LOG=collector=debug \\\n RUSTC=/checkout/obj/build/$PGO_HOST/stage0/bin/rustc \\\n RUSTC_BOOTSTRAP=1 \\"}]}