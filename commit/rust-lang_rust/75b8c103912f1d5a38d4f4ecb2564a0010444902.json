{"sha": "75b8c103912f1d5a38d4f4ecb2564a0010444902", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1YjhjMTAzOTEyZjFkNWEzOGQ0ZjRlY2IyNTY0YTAwMTA0NDQ5MDI=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-03-01T07:33:31Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-03-01T17:29:40Z"}, "message": "Rollup merge of #48522 - etaoins:fix-find-width-of-character-at-span-bounds-check, r=estebank\n\nFix find_width_of_character_at_span bounds check\n\nCommit 0bd96671f0 added bounds checking of our current target byte position to prevent infinite loops. Unfortunately it was comparing the file-relative `target` versus the global `file_start_pos` and `file_end_pos`.\n\nThe result is failing to detect multibyte characters unless their file-relative offset fit within their global offset. This causes other parts of the compiler to generate spans pointing to the middle of a\nmultibyte character which will ultimately panic in `bytepos_to_file_charpos`.\n\nFix by comparing the `target` to the total file size when moving forward and doing checked subtraction when moving backwards. This should preserve the intent of the bounds check while removing the offset confusion.\n\ncc @davidtwco\n\nFixes #48508", "tree": {"sha": "3c4d4bf250db2c16837d587aced46f153ace1f7d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c4d4bf250db2c16837d587aced46f153ace1f7d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75b8c103912f1d5a38d4f4ecb2564a0010444902", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75b8c103912f1d5a38d4f4ecb2564a0010444902", "html_url": "https://github.com/rust-lang/rust/commit/75b8c103912f1d5a38d4f4ecb2564a0010444902", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75b8c103912f1d5a38d4f4ecb2564a0010444902/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38f4d557d0c227230a580b328ded5c06a4a20509", "url": "https://api.github.com/repos/rust-lang/rust/commits/38f4d557d0c227230a580b328ded5c06a4a20509", "html_url": "https://github.com/rust-lang/rust/commit/38f4d557d0c227230a580b328ded5c06a4a20509"}, {"sha": "363d6040fdac7baa8eb18a804f02832fec5ad35f", "url": "https://api.github.com/repos/rust-lang/rust/commits/363d6040fdac7baa8eb18a804f02832fec5ad35f", "html_url": "https://github.com/rust-lang/rust/commit/363d6040fdac7baa8eb18a804f02832fec5ad35f"}], "stats": {"total": 63, "additions": 55, "deletions": 8}, "files": [{"sha": "fcd2b236213c023d81b1f955171076ed3796b875", "filename": "src/libsyntax/codemap.rs", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/75b8c103912f1d5a38d4f4ecb2564a0010444902/src%2Flibsyntax%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75b8c103912f1d5a38d4f4ecb2564a0010444902/src%2Flibsyntax%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fcodemap.rs?ref=75b8c103912f1d5a38d4f4ecb2564a0010444902", "patch": "@@ -705,17 +705,20 @@ impl CodeMap {\n         };\n         debug!(\"find_width_of_character_at_span: snippet=`{:?}`\", snippet);\n \n-        let file_start_pos = local_begin.fm.start_pos.to_usize();\n-        let file_end_pos = local_begin.fm.end_pos.to_usize();\n-        debug!(\"find_width_of_character_at_span: file_start_pos=`{:?}` file_end_pos=`{:?}`\",\n-               file_start_pos, file_end_pos);\n-\n         let mut target = if forwards { end_index + 1 } else { end_index - 1 };\n         debug!(\"find_width_of_character_at_span: initial target=`{:?}`\", target);\n \n-        while !snippet.is_char_boundary(target - start_index)\n-                && target >= file_start_pos && target <= file_end_pos {\n-            target = if forwards { target + 1 } else { target - 1 };\n+        while !snippet.is_char_boundary(target - start_index) && target < source_len {\n+            target = if forwards {\n+                target + 1\n+            } else {\n+                match target.checked_sub(1) {\n+                    Some(target) => target,\n+                    None => {\n+                        break;\n+                    }\n+                }\n+            };\n             debug!(\"find_width_of_character_at_span: target=`{:?}`\", target);\n         }\n         debug!(\"find_width_of_character_at_span: final target=`{:?}`\", target);"}, {"sha": "a00361a2c9d33d1e8c078d59f0202bc9d722b1f1", "filename": "src/test/run-pass/issue-48508-aux.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/75b8c103912f1d5a38d4f4ecb2564a0010444902/src%2Ftest%2Frun-pass%2Fissue-48508-aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75b8c103912f1d5a38d4f4ecb2564a0010444902/src%2Ftest%2Frun-pass%2Fissue-48508-aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-48508-aux.rs?ref=75b8c103912f1d5a38d4f4ecb2564a0010444902", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-test Not a test. Used by issue-48508.rs\n+\n+pub fn other() -> f64 {\n+    let \u00b5 = 1.0;\n+    \u00b5\n+}"}, {"sha": "1b10d873f11c413654aa844be4ee32c3989b91dc", "filename": "src/test/run-pass/issue-48508.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/75b8c103912f1d5a38d4f4ecb2564a0010444902/src%2Ftest%2Frun-pass%2Fissue-48508.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75b8c103912f1d5a38d4f4ecb2564a0010444902/src%2Ftest%2Frun-pass%2Fissue-48508.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-48508.rs?ref=75b8c103912f1d5a38d4f4ecb2564a0010444902", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Regression test for issue #48508:\n+//\n+// Confusion between global and local file offsets caused incorrect handling of multibyte character\n+// spans when compiling multiple files. One visible effect was an ICE generating debug information\n+// when a multibyte character is at the end of a scope. The problematic code is actually in\n+// issue-48508-aux.rs\n+\n+// compile-flags:-g\n+// ignore-pretty issue #37195\n+\n+#![feature(non_ascii_idents)]\n+\n+#[path = \"issue-48508-aux.rs\"]\n+mod other_file;\n+\n+fn main() {\n+    other_file::other();\n+}"}]}