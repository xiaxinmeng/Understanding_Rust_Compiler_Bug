{"sha": "f3cfd8afb6db1ee0a8449655703172a0c8cf5411", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzY2ZkOGFmYjZkYjFlZTBhODQ0OTY1NTcwMzE3MmEwYzhjZjU0MTE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-05-25T13:14:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-25T13:14:34Z"}, "message": "Merge #8988\n\n8988: feat: go to implementation on trait functions r=matklad a=lf-\n\nFix #8537.\r\n\r\nGIF:\r\n![output](https://user-images.githubusercontent.com/6652840/119501981-45a45c00-bd1e-11eb-8336-9145f2888643.gif)\n\nCo-authored-by: Jade <software@lfcode.ca>", "tree": {"sha": "ebe514af32ccc6e9b03a203080f9c6b6466dbb6e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ebe514af32ccc6e9b03a203080f9c6b6466dbb6e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3cfd8afb6db1ee0a8449655703172a0c8cf5411", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgrPg6CRBK7hj4Ov3rIwAAv4gIADAD1ORRLjbsG5mW9KiXpAWf\nI7a7eSVg3cRzvT3qTXhk8X3OUpZWcQdwivhyWarX5KNr1WlwCFPt2Qv6SN3xPYxQ\nB5LpLMqpx5tkep/G6gZEZwnVQYkAHSnMkV8K/HdpvSjNm98c+aoV9AXT8XOwheCe\nbJZPHAYvUtPKgTaj0EbutMLmVbMNRfS4WO4B3PcQjERcgCOofTeFZAFlGOopE2u0\nhTYIGgmeetNfVhI8/FvAhBS0a/BX3QILYdRBOOLtwu2koL/9NQdM5JS0q9g71Qe/\n5roxlC0s7Vxy5BLh9crxyoDMqzZRX8JR120BD93kTZ/qRzc2NNlJJQbw5iAwZfI=\n=2AB8\n-----END PGP SIGNATURE-----\n", "payload": "tree ebe514af32ccc6e9b03a203080f9c6b6466dbb6e\nparent ddc2fb392303379316b84da3cdcb281d8413e18a\nparent 3e4dfaf97af127ed85ecac809fe4dbaad4c7531c\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1621948474 +0000\ncommitter GitHub <noreply@github.com> 1621948474 +0000\n\nMerge #8988\n\n8988: feat: go to implementation on trait functions r=matklad a=lf-\n\nFix #8537.\r\n\r\nGIF:\r\n![output](https://user-images.githubusercontent.com/6652840/119501981-45a45c00-bd1e-11eb-8336-9145f2888643.gif)\n\nCo-authored-by: Jade <software@lfcode.ca>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3cfd8afb6db1ee0a8449655703172a0c8cf5411", "html_url": "https://github.com/rust-lang/rust/commit/f3cfd8afb6db1ee0a8449655703172a0c8cf5411", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3cfd8afb6db1ee0a8449655703172a0c8cf5411/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddc2fb392303379316b84da3cdcb281d8413e18a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddc2fb392303379316b84da3cdcb281d8413e18a", "html_url": "https://github.com/rust-lang/rust/commit/ddc2fb392303379316b84da3cdcb281d8413e18a"}, {"sha": "3e4dfaf97af127ed85ecac809fe4dbaad4c7531c", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e4dfaf97af127ed85ecac809fe4dbaad4c7531c", "html_url": "https://github.com/rust-lang/rust/commit/3e4dfaf97af127ed85ecac809fe4dbaad4c7531c"}], "stats": {"total": 46, "additions": 45, "deletions": 1}, "files": [{"sha": "5a8d3c3f98fd89a4d1a2a8dcd89013009b44dde8", "filename": "crates/ide/src/goto_implementation.rs", "status": "modified", "additions": 45, "deletions": 1, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/f3cfd8afb6db1ee0a8449655703172a0c8cf5411/crates%2Fide%2Fsrc%2Fgoto_implementation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3cfd8afb6db1ee0a8449655703172a0c8cf5411/crates%2Fide%2Fsrc%2Fgoto_implementation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fgoto_implementation.rs?ref=f3cfd8afb6db1ee0a8449655703172a0c8cf5411", "patch": "@@ -1,4 +1,4 @@\n-use hir::{Impl, Semantics};\n+use hir::{AsAssocItem, Impl, Semantics};\n use ide_db::{\n     defs::{Definition, NameClass, NameRefClass},\n     RootDatabase,\n@@ -36,6 +36,7 @@ pub(crate) fn goto_implementation(\n         }\n         ast::NameLike::Lifetime(_) => None,\n     }?;\n+\n     let def = match def {\n         Definition::ModuleDef(def) => def,\n         _ => return None,\n@@ -48,6 +49,12 @@ pub(crate) fn goto_implementation(\n             let module = sema.to_module_def(position.file_id)?;\n             impls_for_ty(&sema, builtin.ty(sema.db, module))\n         }\n+        hir::ModuleDef::Function(f) => {\n+            let assoc = f.as_assoc_item(sema.db)?;\n+            let name = assoc.name(sema.db)?;\n+            let trait_ = assoc.containing_trait(sema.db)?;\n+            impls_for_trait_fn(&sema, trait_, name)\n+        }\n         _ => return None,\n     };\n     Some(RangeInfo { range: node.syntax().text_range(), info: navs })\n@@ -64,6 +71,23 @@ fn impls_for_trait(sema: &Semantics<RootDatabase>, trait_: hir::Trait) -> Vec<Na\n         .collect()\n }\n \n+fn impls_for_trait_fn(\n+    sema: &Semantics<RootDatabase>,\n+    trait_: hir::Trait,\n+    fun_name: hir::Name,\n+) -> Vec<NavigationTarget> {\n+    Impl::all_for_trait(sema.db, trait_)\n+        .into_iter()\n+        .filter_map(|imp| {\n+            let item = imp.items(sema.db).iter().find_map(|itm| {\n+                let itm_name = itm.name(sema.db)?;\n+                (itm_name == fun_name).then(|| itm.clone())\n+            })?;\n+            item.try_to_nav(sema.db)\n+        })\n+        .collect()\n+}\n+\n #[cfg(test)]\n mod tests {\n     use ide_db::base_db::FileRange;\n@@ -259,6 +283,26 @@ fn foo(_: bool$0) {{}}\n #[lang = \"bool\"]\n impl bool {}\n    //^^^^\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn goto_implementation_trait_functions() {\n+        check(\n+            r#\"\n+trait Tr {\n+    fn f$0();\n+}\n+\n+struct S;\n+\n+impl Tr for S {\n+    fn f() {\n+     //^\n+        println!(\"Hello, world!\");\n+    }\n+}\n \"#,\n         );\n     }"}]}