{"sha": "8dd903cc774e7376f4c66e7940fae8a420b25123", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkZDkwM2NjNzc0ZTczNzZmNGM2NmU3OTQwZmFlOGE0MjBiMjUxMjM=", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2021-07-16T18:30:53Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2021-07-16T18:38:42Z"}, "message": "implement ConstSizeIntoIterator for &[T;N] in addition to [T;N]\n\nDue to #20400 the corresponding TrustedLen impls need a helper trait\ninstead of directly adding `Item = &[T;N]` bounds.\nSince TrustedLen is a public trait this in turn means\nthe helper trait needs to be public. Since it's just a workaround\nfor a compiler deficit it's marked hidden, unstable and unsafe.", "tree": {"sha": "5709480b7b25f927f137ade1e0aab450f24a92c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5709480b7b25f927f137ade1e0aab450f24a92c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8dd903cc774e7376f4c66e7940fae8a420b25123", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8dd903cc774e7376f4c66e7940fae8a420b25123", "html_url": "https://github.com/rust-lang/rust/commit/8dd903cc774e7376f4c66e7940fae8a420b25123", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8dd903cc774e7376f4c66e7940fae8a420b25123/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18a034f97e8f69c8086301dad5ade9759883d775", "url": "https://api.github.com/repos/rust-lang/rust/commits/18a034f97e8f69c8086301dad5ade9759883d775", "html_url": "https://github.com/rust-lang/rust/commit/18a034f97e8f69c8086301dad5ade9759883d775"}], "stats": {"total": 71, "additions": 68, "deletions": 3}, "files": [{"sha": "9e0f6d2905d094dccf7a228f508ffb05db400e40", "filename": "library/core/src/iter/adapters/flatten.rs", "status": "modified", "additions": 52, "deletions": 3, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/8dd903cc774e7376f4c66e7940fae8a420b25123/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fflatten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dd903cc774e7376f4c66e7940fae8a420b25123/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fflatten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fflatten.rs?ref=8dd903cc774e7376f4c66e7940fae8a420b25123", "patch": "@@ -122,6 +122,22 @@ where\n {\n }\n \n+#[unstable(feature = \"trusted_len\", issue = \"37572\")]\n+unsafe impl<'a, T, I, F, const N: usize> TrustedLen for FlatMap<I, &'a [T; N], F>\n+where\n+    I: TrustedLen,\n+    F: FnMut(I::Item) -> &'a [T; N],\n+{\n+}\n+\n+#[unstable(feature = \"trusted_len\", issue = \"37572\")]\n+unsafe impl<'a, T, I, F, const N: usize> TrustedLen for FlatMap<I, &'a mut [T; N], F>\n+where\n+    I: TrustedLen,\n+    F: FnMut(I::Item) -> &'a mut [T; N],\n+{\n+}\n+\n /// An iterator that flattens one level of nesting in an iterator of things\n /// that can be turned into iterators.\n ///\n@@ -239,8 +255,10 @@ where\n }\n \n #[unstable(feature = \"trusted_len\", issue = \"37572\")]\n-unsafe impl<T, I, const N: usize> TrustedLen for Flatten<I> where\n-    I: Iterator<Item = [T; N]> + TrustedLen\n+unsafe impl<I> TrustedLen for Flatten<I>\n+where\n+    I: TrustedLen,\n+    <I as Iterator>::Item: TrustedConstSize,\n {\n }\n \n@@ -475,10 +493,14 @@ where\n }\n \n trait ConstSizeIntoIterator: IntoIterator {\n+    // FIXME(#31844): convert to an associated const once specialization supports that\n     fn size() -> Option<usize>;\n }\n \n-impl<T> ConstSizeIntoIterator for T where T: IntoIterator {\n+impl<T> ConstSizeIntoIterator for T\n+where\n+    T: IntoIterator,\n+{\n     #[inline]\n     default fn size() -> Option<usize> {\n         None\n@@ -491,3 +513,30 @@ impl<T, const N: usize> ConstSizeIntoIterator for [T; N] {\n         Some(N)\n     }\n }\n+\n+impl<T, const N: usize> ConstSizeIntoIterator for &[T; N] {\n+    #[inline]\n+    fn size() -> Option<usize> {\n+        Some(N)\n+    }\n+}\n+\n+impl<T, const N: usize> ConstSizeIntoIterator for &mut [T; N] {\n+    #[inline]\n+    fn size() -> Option<usize> {\n+        Some(N)\n+    }\n+}\n+\n+#[doc(hidden)]\n+#[unstable(feature = \"std_internals\", issue = \"none\")]\n+// FIXME(#20400): Instead of this helper trait there should be multiple impl TrustedLen for Flatten<>\n+//   blocks with different bounds on Iterator::Item but the compiler erroneously considers them overlapping\n+pub unsafe trait TrustedConstSize: IntoIterator {}\n+\n+#[unstable(feature = \"std_internals\", issue = \"none\")]\n+unsafe impl<T, const N: usize> TrustedConstSize for [T; N] {}\n+#[unstable(feature = \"std_internals\", issue = \"none\")]\n+unsafe impl<T, const N: usize> TrustedConstSize for &'_ [T; N] {}\n+#[unstable(feature = \"std_internals\", issue = \"none\")]\n+unsafe impl<T, const N: usize> TrustedConstSize for &'_ mut [T; N] {}"}, {"sha": "aaac39c297933f240d386f9e5123e9bfcd9da815", "filename": "library/core/tests/iter/adapters/flatten.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8dd903cc774e7376f4c66e7940fae8a420b25123/library%2Fcore%2Ftests%2Fiter%2Fadapters%2Fflatten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dd903cc774e7376f4c66e7940fae8a420b25123/library%2Fcore%2Ftests%2Fiter%2Fadapters%2Fflatten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fiter%2Fadapters%2Fflatten.rs?ref=8dd903cc774e7376f4c66e7940fae8a420b25123", "patch": "@@ -129,7 +129,23 @@ fn test_trusted_len_flatten() {\n     let iter = array::IntoIter::new([[(); usize::MAX]; 2]).flatten();\n     assert_eq!(iter.size_hint(), (usize::MAX, None));\n \n+    let mut a = [(); 10];\n+    let mut b = [(); 10];\n+\n+    let iter = array::IntoIter::new([&mut a, &mut b]).flatten();\n+    assert_trusted_len(&iter);\n+    assert_eq!(iter.size_hint(), (20, Some(20)));\n+    core::mem::drop(iter);\n+\n+    let iter = array::IntoIter::new([&a, &b]).flatten();\n+    assert_trusted_len(&iter);\n+    assert_eq!(iter.size_hint(), (20, Some(20)));\n+\n     let iter = [(), (), ()].iter().flat_map(|_| [(); 1000]);\n     assert_trusted_len(&iter);\n     assert_eq!(iter.size_hint(), (3000, Some(3000)));\n+\n+    let iter = [(), ()].iter().flat_map(|_| &a);\n+    assert_trusted_len(&iter);\n+    assert_eq!(iter.size_hint(), (20, Some(20)));\n }"}]}