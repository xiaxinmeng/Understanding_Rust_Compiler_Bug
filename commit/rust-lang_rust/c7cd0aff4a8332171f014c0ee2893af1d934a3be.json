{"sha": "c7cd0aff4a8332171f014c0ee2893af1d934a3be", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3Y2QwYWZmNGE4MzMyMTcxZjAxNGMwZWUyODkzYWYxZDkzNGEzYmU=", "commit": {"author": {"name": "ivan770", "email": "leshenko.ivan770@gmail.com", "date": "2021-03-27T09:10:20Z"}, "committer": {"name": "ivan770", "email": "leshenko.ivan770@gmail.com", "date": "2021-03-27T09:10:20Z"}, "message": "Remove dbg expression and newline as whole", "tree": {"sha": "f536809747b65e4894f3b7156fc385f8a38cb6ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f536809747b65e4894f3b7156fc385f8a38cb6ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c7cd0aff4a8332171f014c0ee2893af1d934a3be", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEcPkYW+t8+2SKgl5T2MS9WuTZzE0FAmBe9nwACgkQ2MS9WuTZ\nzE0tfwgAwBeTdRF23t6dJUU3rKrXkV65+5MW8vwoelLd/+A07rdbblxQc+uKx2Iu\naZvnXpp71SSI6i3GmsTU/PHtzs78u0MG1hUWXsB/Ztd0a9bCF6uwU17MbHl4Y9ZM\nFnTQXj/pLXY39psBXpRgtO46aDUpzoVIpuDYxQB/l5ezuWad352ZkAuVzwDVm3hx\nXRnIzvk7ejFaPNH+JpMBvQa/MwJ6bkiA4V0q4ys869TstoATEoDJBWK+JM6H8N4N\ns3xD+jwyDXzMt9PVm0aoVVB/9JtWfH4wmHCgB29c9z/2wRdnpwUcDrHrxX/voJJ4\n1tg9VhoHCWwHoryiM957Ezw/8yF4Yw==\n=Ul2Q\n-----END PGP SIGNATURE-----", "payload": "tree f536809747b65e4894f3b7156fc385f8a38cb6ba\nparent 2292ff64f1d8460324236ac3f13af47553ad90b5\nauthor ivan770 <leshenko.ivan770@gmail.com> 1616836220 +0200\ncommitter ivan770 <leshenko.ivan770@gmail.com> 1616836220 +0200\n\nRemove dbg expression and newline as whole\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c7cd0aff4a8332171f014c0ee2893af1d934a3be", "html_url": "https://github.com/rust-lang/rust/commit/c7cd0aff4a8332171f014c0ee2893af1d934a3be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c7cd0aff4a8332171f014c0ee2893af1d934a3be/comments", "author": {"login": "ivan770", "id": 14003886, "node_id": "MDQ6VXNlcjE0MDAzODg2", "avatar_url": "https://avatars.githubusercontent.com/u/14003886?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivan770", "html_url": "https://github.com/ivan770", "followers_url": "https://api.github.com/users/ivan770/followers", "following_url": "https://api.github.com/users/ivan770/following{/other_user}", "gists_url": "https://api.github.com/users/ivan770/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivan770/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivan770/subscriptions", "organizations_url": "https://api.github.com/users/ivan770/orgs", "repos_url": "https://api.github.com/users/ivan770/repos", "events_url": "https://api.github.com/users/ivan770/events{/privacy}", "received_events_url": "https://api.github.com/users/ivan770/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ivan770", "id": 14003886, "node_id": "MDQ6VXNlcjE0MDAzODg2", "avatar_url": "https://avatars.githubusercontent.com/u/14003886?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivan770", "html_url": "https://github.com/ivan770", "followers_url": "https://api.github.com/users/ivan770/followers", "following_url": "https://api.github.com/users/ivan770/following{/other_user}", "gists_url": "https://api.github.com/users/ivan770/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivan770/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivan770/subscriptions", "organizations_url": "https://api.github.com/users/ivan770/orgs", "repos_url": "https://api.github.com/users/ivan770/repos", "events_url": "https://api.github.com/users/ivan770/events{/privacy}", "received_events_url": "https://api.github.com/users/ivan770/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2292ff64f1d8460324236ac3f13af47553ad90b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/2292ff64f1d8460324236ac3f13af47553ad90b5", "html_url": "https://github.com/rust-lang/rust/commit/2292ff64f1d8460324236ac3f13af47553ad90b5"}], "stats": {"total": 34, "additions": 28, "deletions": 6}, "files": [{"sha": "449795efd6f54d2581d5e166f004fc14490800f7", "filename": "crates/ide_assists/src/handlers/remove_dbg.rs", "status": "modified", "additions": 28, "deletions": 6, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/c7cd0aff4a8332171f014c0ee2893af1d934a3be/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fremove_dbg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7cd0aff4a8332171f014c0ee2893af1d934a3be/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fremove_dbg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fremove_dbg.rs?ref=c7cd0aff4a8332171f014c0ee2893af1d934a3be", "patch": "@@ -1,5 +1,5 @@\n use syntax::{\n-    ast::{self, AstNode},\n+    ast::{self, AstNode, AstToken},\n     match_ast, SyntaxElement, TextRange, TextSize, T,\n };\n \n@@ -24,11 +24,25 @@ pub(crate) fn remove_dbg(acc: &mut Assists, ctx: &AssistContext) -> Option<()> {\n     let macro_call = ctx.find_node_at_offset::<ast::MacroCall>()?;\n     let new_contents = adjusted_macro_contents(&macro_call)?;\n \n-    let macro_text_range = macro_call.syntax().text_range();\n-    let macro_end = if macro_call.semicolon_token().is_some() {\n-        macro_text_range.end() - TextSize::of(';')\n+    let macro_text_range = if new_contents.is_empty() {\n+        let parent = macro_call.syntax().parent()?;\n+\n+        let start = parent\n+            .prev_sibling_or_token()\n+            .and_then(|el| {\n+                Some(el.into_token().and_then(ast::Whitespace::cast)?.syntax().text_range().start())\n+            })\n+            .unwrap_or(parent.text_range().start());\n+        let end = parent.text_range().end();\n+\n+        TextRange::new(start, end)\n     } else {\n-        macro_text_range.end()\n+        macro_call.syntax().text_range()\n+    };\n+\n+    let macro_end = match macro_call.semicolon_token() {\n+        Some(_) => macro_text_range.end() - TextSize::of(';'),\n+        None => macro_text_range.end(),\n     };\n \n     acc.add(\n@@ -417,6 +431,14 @@ fn main() {\n \n     #[test]\n     fn test_remove_empty_dbg() {\n-        check_assist(remove_dbg, r#\"$0dbg!()\"#, r#\"\"#);\n+        check_assist(remove_dbg, r#\"fn foo() { $0dbg!(); }\"#, r#\"fn foo() { }\"#);\n+        check_assist(\n+            remove_dbg,\n+            r#\"fn foo() {\n+$0dbg!();\n+}\"#,\n+            r#\"fn foo() {\n+}\"#,\n+        );\n     }\n }"}]}