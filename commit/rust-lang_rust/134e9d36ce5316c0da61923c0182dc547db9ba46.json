{"sha": "134e9d36ce5316c0da61923c0182dc547db9ba46", "node_id": "C_kwDOAAsO6NoAKDEzNGU5ZDM2Y2U1MzE2YzBkYTYxOTIzYzAxODJkYzU0N2RiOWJhNDY", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-10-07T00:57:25Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-10-18T20:23:14Z"}, "message": "Inline and remove `scoped_thread`.\n\nIt has a single call site, and removing it slightly improves the\nconfusing tangle of nested closures present at startup.", "tree": {"sha": "68fd0ac841b1f3ef6761a658729df315d0f3a0af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68fd0ac841b1f3ef6761a658729df315d0f3a0af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/134e9d36ce5316c0da61923c0182dc547db9ba46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/134e9d36ce5316c0da61923c0182dc547db9ba46", "html_url": "https://github.com/rust-lang/rust/commit/134e9d36ce5316c0da61923c0182dc547db9ba46", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/134e9d36ce5316c0da61923c0182dc547db9ba46/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a62c92b25a8fbaf0fdd0fa8f8baabf7be9d9a91", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a62c92b25a8fbaf0fdd0fa8f8baabf7be9d9a91", "html_url": "https://github.com/rust-lang/rust/commit/2a62c92b25a8fbaf0fdd0fa8f8baabf7be9d9a91"}], "stats": {"total": 24, "additions": 9, "deletions": 15}, "files": [{"sha": "fa2a085f53c9d2710bc60cfefa4f2ba505337e64", "filename": "compiler/rustc_interface/src/util.rs", "status": "modified", "additions": 9, "deletions": 15, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/134e9d36ce5316c0da61923c0182dc547db9ba46/compiler%2Frustc_interface%2Fsrc%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/134e9d36ce5316c0da61923c0182dc547db9ba46/compiler%2Frustc_interface%2Fsrc%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Futil.rs?ref=134e9d36ce5316c0da61923c0182dc547db9ba46", "patch": "@@ -130,33 +130,27 @@ fn get_stack_size() -> Option<usize> {\n     env::var_os(\"RUST_MIN_STACK\").is_none().then_some(STACK_SIZE)\n }\n \n-/// Like a `thread::Builder::spawn` followed by a `join()`, but avoids the need\n-/// for `'static` bounds.\n-#[cfg(not(parallel_compiler))]\n-fn scoped_thread<F: FnOnce() -> R + Send, R: Send>(cfg: thread::Builder, f: F) -> R {\n-    // SAFETY: join() is called immediately, so any closure captures are still\n-    // alive.\n-    match unsafe { cfg.spawn_unchecked(f) }.unwrap().join() {\n-        Ok(v) => v,\n-        Err(e) => panic::resume_unwind(e),\n-    }\n-}\n-\n #[cfg(not(parallel_compiler))]\n pub fn run_in_thread_pool_with_globals<F: FnOnce() -> R + Send, R: Send>(\n     edition: Edition,\n     _threads: usize,\n     f: F,\n ) -> R {\n+    // The thread pool is a single thread in the non-parallel compiler.\n     let mut cfg = thread::Builder::new().name(\"rustc\".to_string());\n-\n     if let Some(size) = get_stack_size() {\n         cfg = cfg.stack_size(size);\n     }\n \n-    let main_handler = move || rustc_span::create_session_globals_then(edition, f);\n+    let f = move || rustc_span::create_session_globals_then(edition, f);\n \n-    scoped_thread(cfg, main_handler)\n+    // This avoids the need for `'static` bounds.\n+    //\n+    // SAFETY: join() is called immediately, so any closure captures are still alive.\n+    match unsafe { cfg.spawn_unchecked(f) }.unwrap().join() {\n+        Ok(v) => v,\n+        Err(e) => panic::resume_unwind(e),\n+    }\n }\n \n /// Creates a new thread and forwards information in thread locals to it."}]}