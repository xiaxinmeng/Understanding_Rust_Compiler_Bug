{"sha": "073225572a1c7c7dc9f7c2740514557105950807", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3MzIyNTU3MmExYzdjN2RjOWY3YzI3NDA1MTQ1NTcxMDU5NTA4MDc=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-05-18T08:44:44Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-05-18T08:44:44Z"}, "message": "iterator: reword docstring", "tree": {"sha": "88289f31eaf837211edb3bde4f76d42e30f17a79", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88289f31eaf837211edb3bde4f76d42e30f17a79"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/073225572a1c7c7dc9f7c2740514557105950807", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/073225572a1c7c7dc9f7c2740514557105950807", "html_url": "https://github.com/rust-lang/rust/commit/073225572a1c7c7dc9f7c2740514557105950807", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/073225572a1c7c7dc9f7c2740514557105950807/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "883d583faa9f33e69dce4b913f47a2d09e8b584d", "url": "https://api.github.com/repos/rust-lang/rust/commits/883d583faa9f33e69dce4b913f47a2d09e8b584d", "html_url": "https://github.com/rust-lang/rust/commit/883d583faa9f33e69dce4b913f47a2d09e8b584d"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "0bf61b66f753231c71c838fe2b89d697f28d9b0f", "filename": "src/libcore/iterator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/073225572a1c7c7dc9f7c2740514557105950807/src%2Flibcore%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/073225572a1c7c7dc9f7c2740514557105950807/src%2Flibcore%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiterator.rs?ref=073225572a1c7c7dc9f7c2740514557105950807", "patch": "@@ -184,7 +184,7 @@ impl<A, T: Iterator<A>> IteratorUtil<A> for T {\n         return accum;\n     }\n \n-    /// Count the number of an iterator elemenrs\n+    /// Count the number of items yielded by an iterator\n     #[inline(always)]\n     fn count(&mut self) -> uint { self.fold(0, |cnt, _x| cnt + 1) }\n "}]}