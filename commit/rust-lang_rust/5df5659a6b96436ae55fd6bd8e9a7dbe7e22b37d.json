{"sha": "5df5659a6b96436ae55fd6bd8e9a7dbe7e22b37d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkZjU2NTlhNmI5NjQzNmFlNTVmZDZiZDhlOWE3ZGJlN2UyMmIzN2Q=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2021-08-25T22:14:50Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2021-08-25T22:14:50Z"}, "message": "Revert \"Add type of a let tait test impl trait straight in let\"\n\nThis reverts commit dbadab54df148b55b2e884440bfaeaa38517e6e8.\nThis is not part of TAITs, so, if tested should probably be done\nelsewhere.", "tree": {"sha": "373477730da73e0ce38f4d7d69f42211999779d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/373477730da73e0ce38f4d7d69f42211999779d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5df5659a6b96436ae55fd6bd8e9a7dbe7e22b37d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmEmwPQACgkQgTGiTgx5\n76+HpBAAv7wX7x0Y0ayLwbp/l4hm0+AD4I1pM8Wp/Yauao3W3EcmrVp6WaxF3mna\n4gisTH5LW+gsvdQxAtJZZX3j2y9+Efa2PVccLE9gVljBjauh61D+Jdrlcl5Loo1L\niywVdtZJS/LZ1mQ6CNzZHYrGxu9AkptPbmAmXB4+w/dqKPbC2sSkl2l4XnKuH7Yr\nuhaCTqAm9Q3z4jXIqpCR+12PK65Ics2VvXSKIRyU4ikyLZwA/is5x6tIFEdeUVM3\ntsyJzyeoYFG/f0YRHwpvirakwO/p9MQpneqiTkQ1D9KH8bKUjRqE12aa79lVZH8d\n6l6qSmSFygHHioIIvSCEfZ3e8QjIEE8QW2Y5RuONTk/xAGk8aTG3DxRQkdMELdaw\nQvwGDY3wFkq+OiIxZ4/j4iQ2+VJ/laWmNlb+YvecD5JcLzoT5HiwLMchykbAeGPz\n3En2S0mnwuFHMngcYVAEfsmFTeDs66vz9Hz4QRsPuHw7PG7ka3s/N/VhYiYqdOmK\nkLdIrOJgMN1e9f+UygwEpxkkcjsdtG8ILqdF5k1amqbItPzLVO0MOW8y1NY4L4LO\nQjSFtJ6Xi5EoI9dejbbcyxqld2L3aTtK24bnpTL2oSJ2b8LAxAf1xgVVDKAptBMd\nVG3xqRNFy15t4c80WfY4DOMcTQrjW+wNWF+yvi3d4XtxgEUKMY0=\n=2ljb\n-----END PGP SIGNATURE-----", "payload": "tree 373477730da73e0ce38f4d7d69f42211999779d1\nparent 7b0e554ee2c94e9b3865a8c2d24d720224512dec\nauthor Santiago Pastorino <spastorino@gmail.com> 1629929690 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1629929690 -0300\n\nRevert \"Add type of a let tait test impl trait straight in let\"\n\nThis reverts commit dbadab54df148b55b2e884440bfaeaa38517e6e8.\nThis is not part of TAITs, so, if tested should probably be done\nelsewhere.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5df5659a6b96436ae55fd6bd8e9a7dbe7e22b37d", "html_url": "https://github.com/rust-lang/rust/commit/5df5659a6b96436ae55fd6bd8e9a7dbe7e22b37d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5df5659a6b96436ae55fd6bd8e9a7dbe7e22b37d/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b0e554ee2c94e9b3865a8c2d24d720224512dec", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b0e554ee2c94e9b3865a8c2d24d720224512dec", "html_url": "https://github.com/rust-lang/rust/commit/7b0e554ee2c94e9b3865a8c2d24d720224512dec"}], "stats": {"total": 46, "additions": 0, "deletions": 46}, "files": [{"sha": "33d3f164ce15eaec80f44835b7a4046b10303c14", "filename": "src/test/ui/type-alias-impl-trait/type_of_a_let2.rs", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/7b0e554ee2c94e9b3865a8c2d24d720224512dec/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype_of_a_let2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b0e554ee2c94e9b3865a8c2d24d720224512dec/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype_of_a_let2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype_of_a_let2.rs?ref=7b0e554ee2c94e9b3865a8c2d24d720224512dec", "patch": "@@ -1,25 +0,0 @@\n-#![feature(type_alias_impl_trait)]\n-#![allow(dead_code)]\n-\n-// FIXME This should be under a feature flag\n-\n-use std::fmt::Debug;\n-\n-fn foo1() -> u32 {\n-    let x: impl Debug = 22_u32;\n-    //~^ ERROR: `impl Trait` not allowed outside of function and method return types [E0562]\n-    x // ERROR: we only know x: Debug, we don't know x = u32\n-}\n-\n-fn foo2() -> u32 {\n-    let x: impl Debug = 22_u32;\n-    //~^ ERROR: `impl Trait` not allowed outside of function and method return types [E0562]\n-    let y: impl Debug = x;\n-    //~^ ERROR: `impl Trait` not allowed outside of function and method return types [E0562]\n-    same_type((x, y)); // ERROR\n-    x\n-}\n-\n-fn same_type<T>(x: (T, T)) {}\n-\n-fn main() {}"}, {"sha": "7a1825a8e2d9a9a35afd57b4db9609a3a95d849e", "filename": "src/test/ui/type-alias-impl-trait/type_of_a_let2.stderr", "status": "removed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/7b0e554ee2c94e9b3865a8c2d24d720224512dec/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype_of_a_let2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7b0e554ee2c94e9b3865a8c2d24d720224512dec/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype_of_a_let2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Ftype_of_a_let2.stderr?ref=7b0e554ee2c94e9b3865a8c2d24d720224512dec", "patch": "@@ -1,21 +0,0 @@\n-error[E0562]: `impl Trait` not allowed outside of function and method return types\n-  --> $DIR/type_of_a_let2.rs:9:12\n-   |\n-LL |     let x: impl Debug = 22_u32;\n-   |            ^^^^^^^^^^\n-\n-error[E0562]: `impl Trait` not allowed outside of function and method return types\n-  --> $DIR/type_of_a_let2.rs:15:12\n-   |\n-LL |     let x: impl Debug = 22_u32;\n-   |            ^^^^^^^^^^\n-\n-error[E0562]: `impl Trait` not allowed outside of function and method return types\n-  --> $DIR/type_of_a_let2.rs:17:12\n-   |\n-LL |     let y: impl Debug = x;\n-   |            ^^^^^^^^^^\n-\n-error: aborting due to 3 previous errors\n-\n-For more information about this error, try `rustc --explain E0562`."}]}