{"sha": "dd85a7682cf17103ec72eb1606fabf04bbf52971", "node_id": "C_kwDOAAsO6NoAKGRkODVhNzY4MmNmMTcxMDNlYzcyZWIxNjA2ZmFiZjA0YmJmNTI5NzE", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-04-02T14:25:06Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-04-02T15:19:29Z"}, "message": "refine wording and describe alternatives", "tree": {"sha": "692e8eaac2068780bcf6dbc0b860909534d4ec37", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/692e8eaac2068780bcf6dbc0b860909534d4ec37"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd85a7682cf17103ec72eb1606fabf04bbf52971", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd85a7682cf17103ec72eb1606fabf04bbf52971", "html_url": "https://github.com/rust-lang/rust/commit/dd85a7682cf17103ec72eb1606fabf04bbf52971", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd85a7682cf17103ec72eb1606fabf04bbf52971/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d74528c21d352969eb044a87d3686a92c9c02bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d74528c21d352969eb044a87d3686a92c9c02bd", "html_url": "https://github.com/rust-lang/rust/commit/2d74528c21d352969eb044a87d3686a92c9c02bd"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "4a98b480c9d169b0dc067acbcd4ca13e85205371", "filename": "library/core/src/intrinsics.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/dd85a7682cf17103ec72eb1606fabf04bbf52971/library%2Fcore%2Fsrc%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd85a7682cf17103ec72eb1606fabf04bbf52971/library%2Fcore%2Fsrc%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fintrinsics.rs?ref=dd85a7682cf17103ec72eb1606fabf04bbf52971", "patch": "@@ -993,9 +993,13 @@ extern \"rust-intrinsic\" {\n     ///\n     /// Note that using `transmute` to turn a pointer to a `usize` is (as noted above) [undefined\n     /// behavior][ub] in `const` contexts. Also outside of consts, this operation might not behave\n-    /// as expected -- this is touching on many unspecified aspects of the Rust memory model. To\n-    /// make sure your code is well-defined, the conversion of pointers to integers and back should\n-    /// always be done explicitly via casts.\n+    /// as expected -- this is touching on many unspecified aspects of the Rust memory model.\n+    /// Depending on what the code is doing, the following alternatives are preferrable to\n+    /// pointer-to-integer transmutation:\n+    /// - If the code just wants to store data of arbitrary type in some buffer and needs to pick a\n+    ///   type for that buffer, it can use [`MaybeUninit`][mem::MaybeUninit].\n+    /// - If the code actually wants to work on the address the pointer points to, it can use `as`\n+    ///   casts or [`ptr.addr()`][pointer::addr].\n     ///\n     /// Turning a `*mut T` into an `&mut T`:\n     ///"}]}