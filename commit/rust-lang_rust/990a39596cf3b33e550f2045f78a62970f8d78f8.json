{"sha": "990a39596cf3b33e550f2045f78a62970f8d78f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5MGEzOTU5NmNmM2IzM2U1NTBmMjA0NWY3OGE2Mjk3MGY4ZDc4Zjg=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2020-09-01T14:55:49Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2020-09-02T12:37:48Z"}, "message": "Prevent ICE on uninhabited MIR interpretation", "tree": {"sha": "348d5c777cdd2ff8874692b0c3175665a9c3e220", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/348d5c777cdd2ff8874692b0c3175665a9c3e220"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/990a39596cf3b33e550f2045f78a62970f8d78f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/990a39596cf3b33e550f2045f78a62970f8d78f8", "html_url": "https://github.com/rust-lang/rust/commit/990a39596cf3b33e550f2045f78a62970f8d78f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/990a39596cf3b33e550f2045f78a62970f8d78f8/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e023158145ece18176a2e93420600ccda0d0bc58", "url": "https://api.github.com/repos/rust-lang/rust/commits/e023158145ece18176a2e93420600ccda0d0bc58", "html_url": "https://github.com/rust-lang/rust/commit/e023158145ece18176a2e93420600ccda0d0bc58"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "cb94994fef2f829755d4dd4d3b329d9dd3abcc5d", "filename": "compiler/rustc_mir/src/interpret/cast.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/990a39596cf3b33e550f2045f78a62970f8d78f8/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/990a39596cf3b33e550f2045f78a62970f8d78f8/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fcast.rs?ref=990a39596cf3b33e550f2045f78a62970f8d78f8", "patch": "@@ -139,9 +139,14 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n \n         // # First handle non-scalar source values.\n \n-        // Handle cast from a univariant (ZST) enum.\n+        // Handle cast from a ZST enum (0 or 1 variants).\n         match src.layout.variants {\n             Variants::Single { index } => {\n+                if src.layout.abi.is_uninhabited() {\n+                    // This is dead code, because an uninhabited enum is UB to\n+                    // instantiate.\n+                    throw_ub!(Unreachable);\n+                }\n                 if let Some(discr) = src.layout.ty.discriminant_for_variant(*self.tcx, index) {\n                     assert!(src.layout.is_zst());\n                     let discr_layout = self.layout_of(discr.ty)?;"}]}