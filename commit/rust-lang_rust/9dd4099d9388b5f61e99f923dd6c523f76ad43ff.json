{"sha": "9dd4099d9388b5f61e99f923dd6c523f76ad43ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkZDQwOTlkOTM4OGI1ZjYxZTk5ZjkyM2RkNmM1MjNmNzZhZDQzZmY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-15T15:45:01Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-15T15:45:01Z"}, "message": "remove Cancelable from static&const API", "tree": {"sha": "c4f4a4b83eb7d5ac094b31d46979eaa513e81518", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4f4a4b83eb7d5ac094b31d46979eaa513e81518"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9dd4099d9388b5f61e99f923dd6c523f76ad43ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9dd4099d9388b5f61e99f923dd6c523f76ad43ff", "html_url": "https://github.com/rust-lang/rust/commit/9dd4099d9388b5f61e99f923dd6c523f76ad43ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9dd4099d9388b5f61e99f923dd6c523f76ad43ff/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9446be29992fe14ec529874622311c3ae7a49b0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/9446be29992fe14ec529874622311c3ae7a49b0e", "html_url": "https://github.com/rust-lang/rust/commit/9446be29992fe14ec529874622311c3ae7a49b0e"}], "stats": {"total": 27, "additions": 12, "deletions": 15}, "files": [{"sha": "f6d1d6b23b97f29ca8dd6405d2ab369d61e374d7", "filename": "crates/ra_hir/src/code_model_api.rs", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/9dd4099d9388b5f61e99f923dd6c523f76ad43ff/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dd4099d9388b5f61e99f923dd6c523f76ad43ff/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs?ref=9dd4099d9388b5f61e99f923dd6c523f76ad43ff", "patch": "@@ -333,8 +333,8 @@ impl Const {\n         Const { def_id }\n     }\n \n-    pub fn source(&self, db: &impl HirDatabase) -> Cancelable<(HirFileId, TreeArc<ast::ConstDef>)> {\n-        Ok(def_id_to_ast(db, self.def_id))\n+    pub fn source(&self, db: &impl HirDatabase) -> (HirFileId, TreeArc<ast::ConstDef>) {\n+        def_id_to_ast(db, self.def_id)\n     }\n }\n \n@@ -348,11 +348,8 @@ impl Static {\n         Static { def_id }\n     }\n \n-    pub fn source(\n-        &self,\n-        db: &impl HirDatabase,\n-    ) -> Cancelable<(HirFileId, TreeArc<ast::StaticDef>)> {\n-        Ok(def_id_to_ast(db, self.def_id))\n+    pub fn source(&self, db: &impl HirDatabase) -> (HirFileId, TreeArc<ast::StaticDef>) {\n+        def_id_to_ast(db, self.def_id)\n     }\n }\n \n@@ -366,8 +363,8 @@ impl Trait {\n         Trait { def_id }\n     }\n \n-    pub fn source(&self, db: &impl HirDatabase) -> Cancelable<(HirFileId, TreeArc<ast::TraitDef>)> {\n-        Ok(def_id_to_ast(db, self.def_id))\n+    pub fn source(&self, db: &impl HirDatabase) -> (HirFileId, TreeArc<ast::TraitDef>) {\n+        def_id_to_ast(db, self.def_id)\n     }\n }\n \n@@ -381,7 +378,7 @@ impl Type {\n         Type { def_id }\n     }\n \n-    pub fn source(&self, db: &impl HirDatabase) -> Cancelable<(HirFileId, TreeArc<ast::TypeDef>)> {\n-        Ok(def_id_to_ast(db, self.def_id))\n+    pub fn source(&self, db: &impl HirDatabase) -> (HirFileId, TreeArc<ast::TypeDef>) {\n+        def_id_to_ast(db, self.def_id)\n     }\n }"}, {"sha": "965dfc0ca17fea589a02831102ea6592bc6f2e68", "filename": "crates/ra_ide_api/src/navigation_target.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9dd4099d9388b5f61e99f923dd6c523f76ad43ff/crates%2Fra_ide_api%2Fsrc%2Fnavigation_target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dd4099d9388b5f61e99f923dd6c523f76ad43ff/crates%2Fra_ide_api%2Fsrc%2Fnavigation_target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fnavigation_target.rs?ref=9dd4099d9388b5f61e99f923dd6c523f76ad43ff", "patch": "@@ -128,19 +128,19 @@ impl NavigationTarget {\n                 NavigationTarget::from_named(file_id.original_file(db), &*node)\n             }\n             Def::Trait(f) => {\n-                let (file_id, node) = f.source(db)?;\n+                let (file_id, node) = f.source(db);\n                 NavigationTarget::from_named(file_id.original_file(db), &*node)\n             }\n             Def::Type(f) => {\n-                let (file_id, node) = f.source(db)?;\n+                let (file_id, node) = f.source(db);\n                 NavigationTarget::from_named(file_id.original_file(db), &*node)\n             }\n             Def::Static(f) => {\n-                let (file_id, node) = f.source(db)?;\n+                let (file_id, node) = f.source(db);\n                 NavigationTarget::from_named(file_id.original_file(db), &*node)\n             }\n             Def::Const(f) => {\n-                let (file_id, node) = f.source(db)?;\n+                let (file_id, node) = f.source(db);\n                 NavigationTarget::from_named(file_id.original_file(db), &*node)\n             }\n             Def::Module(m) => NavigationTarget::from_module(db, m)?,"}]}