{"sha": "705f472c5509ec3a8fe3448541282eca1386344a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwNWY0NzJjNTUwOWVjM2E4ZmUzNDQ4NTQxMjgyZWNhMTM4NjM0NGE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-12-31T02:43:03Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-12-31T02:44:57Z"}, "message": "Add rust_fail. #11219", "tree": {"sha": "cd18bed3b322b7259a5f5e5091ec3eb1d05549eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd18bed3b322b7259a5f5e5091ec3eb1d05549eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/705f472c5509ec3a8fe3448541282eca1386344a", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/705f472c5509ec3a8fe3448541282eca1386344a", "html_url": "https://github.com/rust-lang/rust/commit/705f472c5509ec3a8fe3448541282eca1386344a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/705f472c5509ec3a8fe3448541282eca1386344a/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1502b1197b78624aad5180fa8eff3f77f6f0abfc", "url": "https://api.github.com/repos/rust-lang/rust/commits/1502b1197b78624aad5180fa8eff3f77f6f0abfc", "html_url": "https://github.com/rust-lang/rust/commit/1502b1197b78624aad5180fa8eff3f77f6f0abfc"}], "stats": {"total": 35, "additions": 21, "deletions": 14}, "files": [{"sha": "358df7260f4af6b500782855ae85fe0d3f3aa0cc", "filename": "src/libstd/rt/unwind.rs", "status": "modified", "additions": 21, "deletions": 14, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/705f472c5509ec3a8fe3448541282eca1386344a/src%2Flibstd%2Frt%2Funwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/705f472c5509ec3a8fe3448541282eca1386344a/src%2Flibstd%2Frt%2Funwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Funwind.rs?ref=705f472c5509ec3a8fe3448541282eca1386344a", "patch": "@@ -180,22 +180,29 @@ impl Unwinder {\n         self.unwinding = true;\n         self.cause = Some(cause);\n \n-        unsafe {\n-            let exception = ~uw::_Unwind_Exception {\n-                exception_class: rust_exception_class(),\n-                exception_cleanup: exception_cleanup,\n-                private_1: 0,\n-                private_2: 0\n-            };\n-            let error = uw::_Unwind_RaiseException(cast::transmute(exception));\n-            rtabort!(\"Could not unwind stack, error = {}\", error as int)\n-        }\n+        rust_fail();\n \n-        extern \"C\" fn exception_cleanup(_unwind_code: uw::_Unwind_Reason_Code,\n-                                        exception: *uw::_Unwind_Exception) {\n-            rtdebug!(\"exception_cleanup()\");\n+        // An uninlined, unmangled function upon which to slap yer breakpoints\n+        #[inline(never)]\n+        #[no_mangle]\n+        fn rust_fail() -> ! {\n             unsafe {\n-                let _: ~uw::_Unwind_Exception = cast::transmute(exception);\n+                let exception = ~uw::_Unwind_Exception {\n+                    exception_class: rust_exception_class(),\n+                    exception_cleanup: exception_cleanup,\n+                    private_1: 0,\n+                    private_2: 0\n+                };\n+                let error = uw::_Unwind_RaiseException(cast::transmute(exception));\n+                rtabort!(\"Could not unwind stack, error = {}\", error as int)\n+            }\n+\n+            extern \"C\" fn exception_cleanup(_unwind_code: uw::_Unwind_Reason_Code,\n+                                            exception: *uw::_Unwind_Exception) {\n+                rtdebug!(\"exception_cleanup()\");\n+                unsafe {\n+                    let _: ~uw::_Unwind_Exception = cast::transmute(exception);\n+                }\n             }\n         }\n     }"}]}