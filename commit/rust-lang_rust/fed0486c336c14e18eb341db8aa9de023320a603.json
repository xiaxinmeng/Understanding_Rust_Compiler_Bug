{"sha": "fed0486c336c14e18eb341db8aa9de023320a603", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlZDA0ODZjMzM2YzE0ZTE4ZWIzNDFkYjhhYTlkZTAyMzMyMGE2MDM=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-05-21T00:36:33Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-05-21T01:20:54Z"}, "message": "Annotate erroring functions in session and parser", "tree": {"sha": "238e4ec48d98c8067f43b167d714d5c4e0be1d80", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/238e4ec48d98c8067f43b167d714d5c4e0be1d80"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fed0486c336c14e18eb341db8aa9de023320a603", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fed0486c336c14e18eb341db8aa9de023320a603", "html_url": "https://github.com/rust-lang/rust/commit/fed0486c336c14e18eb341db8aa9de023320a603", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fed0486c336c14e18eb341db8aa9de023320a603/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90dd6e7044f0b13af5f471785426dc29acdae88b", "url": "https://api.github.com/repos/rust-lang/rust/commits/90dd6e7044f0b13af5f471785426dc29acdae88b", "html_url": "https://github.com/rust-lang/rust/commit/90dd6e7044f0b13af5f471785426dc29acdae88b"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "09cf76b9cc951752667071bce87df394cd095c1b", "filename": "src/comp/driver/session.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fed0486c336c14e18eb341db8aa9de023320a603/src%2Fcomp%2Fdriver%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fed0486c336c14e18eb341db8aa9de023320a603/src%2Fcomp%2Fdriver%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Fsession.rs?ref=fed0486c336c14e18eb341db8aa9de023320a603", "patch": "@@ -79,13 +79,13 @@ state obj session(ast::crate_num cnum,\n         ret cnum;\n     }\n \n-    fn span_err(span sp, str msg) {\n+    fn span_err(span sp, str msg) -> ! {\n         // FIXME: Use constants, but rustboot doesn't know how to export them.\n         emit_diagnostic(sp, msg, \"error\", 9u8, cm);\n         fail;\n     }\n \n-    fn err(str msg) {\n+    fn err(str msg) -> ! {\n         log_err #fmt(\"error: %s\", msg);\n         fail;\n     }\n@@ -107,19 +107,19 @@ state obj session(ast::crate_num cnum,\n         emit_diagnostic(sp, msg, \"note\", 10u8, cm);\n     }\n \n-    fn bug(str msg) {\n+    fn bug(str msg) -> ! {\n         log_err #fmt(\"error: internal compiler error %s\", msg);\n         fail;\n     }\n \n-    fn span_unimpl(span sp, str msg) {\n+    fn span_unimpl(span sp, str msg) -> ! {\n         // FIXME: Use constants, but rustboot doesn't know how to export them.\n         emit_diagnostic(sp, \"internal compiler error: unimplemented \" + msg,\n                         \"error\", 9u8, cm);\n         fail;\n     }\n-\n-    fn unimpl(str msg) {\n+    \n+    fn unimpl(str msg) -> ! {\n         log_err #fmt(\"error: unimplemented %s\", msg);\n         fail;\n     }"}, {"sha": "a2f877f2c239ef6891092fc9a84a42dd3afe4128", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fed0486c336c14e18eb341db8aa9de023320a603/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fed0486c336c14e18eb341db8aa9de023320a603/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=fed0486c336c14e18eb341db8aa9de023320a603", "patch": "@@ -31,7 +31,7 @@ state type parser =\n     state obj {\n           fn peek() -> token::token;\n           fn bump();\n-          fn err(str s);\n+          fn err(str s) -> !;\n           fn restrict(restriction r);\n           fn get_restriction() -> restriction;\n           fn get_file_type() -> file_type;\n@@ -85,7 +85,7 @@ fn new_parser(session::session sess,\n                 hi = rdr.get_chpos();\n             }\n \n-            fn err(str m) {\n+            fn err(str m) -> ! {\n                 sess.span_err(rec(lo=lo, hi=hi), m);\n             }\n \n@@ -217,7 +217,7 @@ fn bad_expr_word_table() -> std::map::hashmap[str, ()] {\n     ret words;\n }\n \n-fn unexpected(&parser p, token::token t) {\n+fn unexpected(&parser p, token::token t) -> ! {\n     let str s = \"unexpected token: \";\n     s += token::to_str(p.get_reader(), t);\n     p.err(s);"}]}