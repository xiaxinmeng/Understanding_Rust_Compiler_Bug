{"sha": "d1eceefeb8b683da3f64b89446f04f01803962e1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxZWNlZWZlYjhiNjgzZGEzZjY0Yjg5NDQ2ZjA0ZjAxODAzOTYyZTE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-13T14:42:43Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-13T14:42:43Z"}, "message": "dyn type", "tree": {"sha": "b5e80856cadc70dbc5f9a8e2cbe6cbf751e5f716", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5e80856cadc70dbc5f9a8e2cbe6cbf751e5f716"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1eceefeb8b683da3f64b89446f04f01803962e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1eceefeb8b683da3f64b89446f04f01803962e1", "html_url": "https://github.com/rust-lang/rust/commit/d1eceefeb8b683da3f64b89446f04f01803962e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1eceefeb8b683da3f64b89446f04f01803962e1/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a56ac4b72e7f57fb20d49bcf531611f144cc0e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a56ac4b72e7f57fb20d49bcf531611f144cc0e0", "html_url": "https://github.com/rust-lang/rust/commit/5a56ac4b72e7f57fb20d49bcf531611f144cc0e0"}], "stats": {"total": 112, "additions": 111, "deletions": 1}, "files": [{"sha": "cfaa3bc9b5b9fd2c9e4d070b3f86f89a0eb24c9b", "filename": "crates/libsyntax2/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d1eceefeb8b683da3f64b89446f04f01803962e1/crates%2Flibsyntax2%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d1eceefeb8b683da3f64b89446f04f01803962e1/crates%2Flibsyntax2%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2FCargo.toml?ref=d1eceefeb8b683da3f64b89446f04f01803962e1", "patch": "@@ -14,3 +14,4 @@ smol_str = { path = \"../smol_str\" }\n \n [dev-dependencies]\n assert_eq_text = { path = \"../assert_eq_text\" }\n+walkdir = \"2.2.0\""}, {"sha": "c07ed42031ca04f99d3f2be0ee9a4c75af37ddaf", "filename": "crates/libsyntax2/src/grammar.ron", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1eceefeb8b683da3f64b89446f04f01803962e1/crates%2Flibsyntax2%2Fsrc%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/d1eceefeb8b683da3f64b89446f04f01803962e1/crates%2Flibsyntax2%2Fsrc%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar.ron?ref=d1eceefeb8b683da3f64b89446f04f01803962e1", "patch": "@@ -55,6 +55,7 @@ Grammar(\n         \"enum\",\n         \"trait\",\n         \"impl\",\n+        \"dyn\",\n         \"true\",\n         \"false\",\n         \"as\",\n@@ -134,6 +135,7 @@ Grammar(\n         \"FN_POINTER_TYPE\",\n         \"FOR_TYPE\",\n         \"IMPL_TRAIT_TYPE\",\n+        \"DYN_TRAIT_TYPE\",\n \n         \"REF_PAT\",\n         \"BIND_PAT\","}, {"sha": "5ba3fcca0dd1fdf7619c82743cd421cc528bc3a8", "filename": "crates/libsyntax2/src/grammar/types.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d1eceefeb8b683da3f64b89446f04f01803962e1/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1eceefeb8b683da3f64b89446f04f01803962e1/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar%2Ftypes.rs?ref=d1eceefeb8b683da3f64b89446f04f01803962e1", "patch": "@@ -11,9 +11,10 @@ pub(super) fn type_(p: &mut Parser) {\n         FN_KW | UNSAFE_KW | EXTERN_KW => fn_pointer_type(p),\n         FOR_KW => for_type(p),\n         IMPL_KW => impl_trait_type(p),\n+        DYN_KW => dyn_trait_type(p),\n         _ if paths::is_path_start(p) => path_type(p),\n         _ => {\n-            p.error(\"expected type\");\n+            p.err_and_bump(\"expected type\");\n         }\n     }\n }\n@@ -194,6 +195,16 @@ fn impl_trait_type(p: &mut Parser) {\n     m.complete(p, IMPL_TRAIT_TYPE);\n }\n \n+// test dyn_trait_type\n+// type A = dyn Iterator<Item=Foo<'a>> + 'a;\n+fn dyn_trait_type(p: &mut Parser) {\n+    assert!(p.at(DYN_KW));\n+    let m = p.start();\n+    p.bump();\n+    type_params::bounds_without_colon(p);\n+    m.complete(p, DYN_TRAIT_TYPE);\n+}\n+\n // test path_type\n // type A = Foo;\n // type B = ::Foo;"}, {"sha": "f5f8fe1ef6dfd6453736db06acc18a7f8f2157a4", "filename": "crates/libsyntax2/src/syntax_kinds/generated.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d1eceefeb8b683da3f64b89446f04f01803962e1/crates%2Flibsyntax2%2Fsrc%2Fsyntax_kinds%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1eceefeb8b683da3f64b89446f04f01803962e1/crates%2Flibsyntax2%2Fsrc%2Fsyntax_kinds%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fsyntax_kinds%2Fgenerated.rs?ref=d1eceefeb8b683da3f64b89446f04f01803962e1", "patch": "@@ -62,6 +62,7 @@ pub enum SyntaxKind {\n     ENUM_KW,\n     TRAIT_KW,\n     IMPL_KW,\n+    DYN_KW,\n     TRUE_KW,\n     FALSE_KW,\n     AS_KW,\n@@ -133,6 +134,7 @@ pub enum SyntaxKind {\n     FN_POINTER_TYPE,\n     FOR_TYPE,\n     IMPL_TRAIT_TYPE,\n+    DYN_TRAIT_TYPE,\n     REF_PAT,\n     BIND_PAT,\n     PLACEHOLDER_PAT,\n@@ -210,6 +212,7 @@ impl SyntaxKind {\n             | ENUM_KW\n             | TRAIT_KW\n             | IMPL_KW\n+            | DYN_KW\n             | TRUE_KW\n             | FALSE_KW\n             | AS_KW\n@@ -297,6 +300,7 @@ impl SyntaxKind {\n             ENUM_KW => &SyntaxInfo { name: \"ENUM_KW\" },\n             TRAIT_KW => &SyntaxInfo { name: \"TRAIT_KW\" },\n             IMPL_KW => &SyntaxInfo { name: \"IMPL_KW\" },\n+            DYN_KW => &SyntaxInfo { name: \"DYN_KW\" },\n             TRUE_KW => &SyntaxInfo { name: \"TRUE_KW\" },\n             FALSE_KW => &SyntaxInfo { name: \"FALSE_KW\" },\n             AS_KW => &SyntaxInfo { name: \"AS_KW\" },\n@@ -368,6 +372,7 @@ impl SyntaxKind {\n             FN_POINTER_TYPE => &SyntaxInfo { name: \"FN_POINTER_TYPE\" },\n             FOR_TYPE => &SyntaxInfo { name: \"FOR_TYPE\" },\n             IMPL_TRAIT_TYPE => &SyntaxInfo { name: \"IMPL_TRAIT_TYPE\" },\n+            DYN_TRAIT_TYPE => &SyntaxInfo { name: \"DYN_TRAIT_TYPE\" },\n             REF_PAT => &SyntaxInfo { name: \"REF_PAT\" },\n             BIND_PAT => &SyntaxInfo { name: \"BIND_PAT\" },\n             PLACEHOLDER_PAT => &SyntaxInfo { name: \"PLACEHOLDER_PAT\" },\n@@ -445,6 +450,7 @@ impl SyntaxKind {\n             \"enum\" => ENUM_KW,\n             \"trait\" => TRAIT_KW,\n             \"impl\" => IMPL_KW,\n+            \"dyn\" => DYN_KW,\n             \"true\" => TRUE_KW,\n             \"false\" => FALSE_KW,\n             \"as\" => AS_KW,"}, {"sha": "20dde3bc30fdacae54af0a9517a3f9850d443f66", "filename": "crates/libsyntax2/tests/data/parser/err/0013_invalid_type.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d1eceefeb8b683da3f64b89446f04f01803962e1/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0013_invalid_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1eceefeb8b683da3f64b89446f04f01803962e1/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0013_invalid_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0013_invalid_type.rs?ref=d1eceefeb8b683da3f64b89446f04f01803962e1", "patch": "@@ -0,0 +1,7 @@\n+pub struct Cache(\n+    RefCell<HashMap<\n+        TypeId,\n+        Box<@ Any>,\n+    >>\n+);\n+"}, {"sha": "8b56f699f550cc59c9a8f6a7a0957bfb476ae95d", "filename": "crates/libsyntax2/tests/data/parser/err/0013_invalid_type.txt", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/d1eceefeb8b683da3f64b89446f04f01803962e1/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0013_invalid_type.txt", "raw_url": "https://github.com/rust-lang/rust/raw/d1eceefeb8b683da3f64b89446f04f01803962e1/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0013_invalid_type.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Fdata%2Fparser%2Ferr%2F0013_invalid_type.txt?ref=d1eceefeb8b683da3f64b89446f04f01803962e1", "patch": "@@ -0,0 +1,82 @@\n+FILE@[0; 86)\n+  STRUCT@[0; 84)\n+    VISIBILITY@[0; 3)\n+      PUB_KW@[0; 3)\n+    WHITESPACE@[3; 4)\n+    STRUCT_KW@[4; 10)\n+    WHITESPACE@[10; 11)\n+    NAME@[11; 16)\n+      IDENT@[11; 16) \"Cache\"\n+    L_PAREN@[16; 17)\n+    WHITESPACE@[17; 22)\n+    POS_FIELD@[22; 68)\n+      PATH_TYPE@[22; 68)\n+        PATH@[22; 68)\n+          PATH_SEGMENT@[22; 68)\n+            NAME_REF@[22; 29)\n+              IDENT@[22; 29) \"RefCell\"\n+            TYPE_ARG_LIST@[29; 68)\n+              L_ANGLE@[29; 30)\n+              TYPE_ARG@[30; 68)\n+                PATH_TYPE@[30; 68)\n+                  PATH@[30; 68)\n+                    PATH_SEGMENT@[30; 68)\n+                      NAME_REF@[30; 37)\n+                        IDENT@[30; 37) \"HashMap\"\n+                      TYPE_ARG_LIST@[37; 68)\n+                        L_ANGLE@[37; 38)\n+                        WHITESPACE@[38; 47)\n+                        TYPE_ARG@[47; 53)\n+                          PATH_TYPE@[47; 53)\n+                            PATH@[47; 53)\n+                              PATH_SEGMENT@[47; 53)\n+                                NAME_REF@[47; 53)\n+                                  IDENT@[47; 53) \"TypeId\"\n+                        COMMA@[53; 54)\n+                        WHITESPACE@[54; 63)\n+                        TYPE_ARG@[63; 68)\n+                          PATH_TYPE@[63; 68)\n+                            PATH@[63; 68)\n+                              PATH_SEGMENT@[63; 68)\n+                                NAME_REF@[63; 66)\n+                                  IDENT@[63; 66) \"Box\"\n+                                TYPE_ARG_LIST@[66; 68)\n+                                  L_ANGLE@[66; 67)\n+                                  err: `expected type`\n+                                  TYPE_ARG@[67; 68)\n+                                    ERROR@[67; 68)\n+                                      AT@[67; 68)\n+                                      err: `expected COMMA`\n+                                      err: `expected R_ANGLE`\n+                                      err: `expected COMMA`\n+                                      err: `expected R_ANGLE`\n+                                      err: `expected COMMA`\n+                                      err: `expected R_ANGLE`\n+                                      err: `expected COMMA`\n+    WHITESPACE@[68; 69)\n+    POS_FIELD@[69; 72)\n+      PATH_TYPE@[69; 72)\n+        PATH@[69; 72)\n+          PATH_SEGMENT@[69; 72)\n+            NAME_REF@[69; 72)\n+              IDENT@[69; 72) \"Any\"\n+              err: `expected COMMA`\n+              err: `expected type`\n+    POS_FIELD@[72; 73)\n+      ERROR@[72; 73)\n+        R_ANGLE@[72; 73)\n+    COMMA@[73; 74)\n+    WHITESPACE@[74; 79)\n+    err: `expected type`\n+    POS_FIELD@[79; 80)\n+      ERROR@[79; 80)\n+        R_ANGLE@[79; 80)\n+        err: `expected COMMA`\n+        err: `expected type`\n+    POS_FIELD@[80; 81)\n+      ERROR@[80; 81)\n+        R_ANGLE@[80; 81)\n+    WHITESPACE@[81; 82)\n+    R_PAREN@[82; 83)\n+    SEMI@[83; 84)\n+  WHITESPACE@[84; 86)"}, {"sha": "6b0a44d0ca40f55e7425b6279ccb132e569ce836", "filename": "crates/libsyntax2/tests/test/main.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d1eceefeb8b683da3f64b89446f04f01803962e1/crates%2Flibsyntax2%2Ftests%2Ftest%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1eceefeb8b683da3f64b89446f04f01803962e1/crates%2Flibsyntax2%2Ftests%2Ftest%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Ftests%2Ftest%2Fmain.rs?ref=d1eceefeb8b683da3f64b89446f04f01803962e1", "patch": "@@ -1,6 +1,7 @@\n extern crate libsyntax2;\n #[macro_use]\n extern crate assert_eq_text;\n+extern crate walkdir;\n \n use std::{\n     fs,"}]}