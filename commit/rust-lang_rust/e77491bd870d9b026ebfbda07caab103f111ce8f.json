{"sha": "e77491bd870d9b026ebfbda07caab103f111ce8f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3NzQ5MWJkODcwZDliMDI2ZWJmYmRhMDdjYWFiMTAzZjExMWNlOGY=", "commit": {"author": {"name": "Paul Stansifer", "email": "paul.stansifer@gmail.com", "date": "2012-11-19T05:36:26Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-11-29T20:09:10Z"}, "message": "Make the parser handle stmt macros that might be exprs at the end of blocks.", "tree": {"sha": "a36388ace408393ef3994fc1a1b89641e58cdc31", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a36388ace408393ef3994fc1a1b89641e58cdc31"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e77491bd870d9b026ebfbda07caab103f111ce8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e77491bd870d9b026ebfbda07caab103f111ce8f", "html_url": "https://github.com/rust-lang/rust/commit/e77491bd870d9b026ebfbda07caab103f111ce8f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e77491bd870d9b026ebfbda07caab103f111ce8f/comments", "author": {"login": "paulstansifer", "id": 1431, "node_id": "MDQ6VXNlcjE0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulstansifer", "html_url": "https://github.com/paulstansifer", "followers_url": "https://api.github.com/users/paulstansifer/followers", "following_url": "https://api.github.com/users/paulstansifer/following{/other_user}", "gists_url": "https://api.github.com/users/paulstansifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulstansifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulstansifer/subscriptions", "organizations_url": "https://api.github.com/users/paulstansifer/orgs", "repos_url": "https://api.github.com/users/paulstansifer/repos", "events_url": "https://api.github.com/users/paulstansifer/events{/privacy}", "received_events_url": "https://api.github.com/users/paulstansifer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd92499c5e65248b3dd2078e2f428f33004cba3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd92499c5e65248b3dd2078e2f428f33004cba3d", "html_url": "https://github.com/rust-lang/rust/commit/bd92499c5e65248b3dd2078e2f428f33004cba3d"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "b548695d187188d4163ce05a1723a1b2bf4b5d82", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/e77491bd870d9b026ebfbda07caab103f111ce8f/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e77491bd870d9b026ebfbda07caab103f111ce8f/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=e77491bd870d9b026ebfbda07caab103f111ce8f", "patch": "@@ -2380,6 +2380,25 @@ impl Parser {\n                             }\n                         }\n \n+                        stmt_mac(m) => {\n+                            // Statement macro; might be an expr\n+                            match self.token {\n+                                token::SEMI => {\n+                                    self.bump();\n+                                    stmts.push(stmt);\n+                                }\n+                                token::RBRACE => {\n+                                    // if a block ends in `m!(arg)` without\n+                                    // a `;`, it must be an expr\n+                                    expr = Some(\n+                                        self.mk_mac_expr(stmt.span.lo,\n+                                                         stmt.span.hi,\n+                                                         m.node));\n+                                }\n+                                _ => { stmts.push(stmt); }\n+                            }\n+                        }\n+\n                         _ => { // All other kinds of statements:\n                             stmts.push(stmt);\n \n@@ -3567,6 +3586,10 @@ impl Parser {\n             // item macro.\n             let pth = self.parse_path_without_tps();\n             self.expect(token::NOT);\n+\n+            // a 'special' identifier (like what `macro_rules!` uses)\n+            // is optional. We should eventually unify invoc syntax\n+            // and remove this.\n             let id = if self.token == token::LPAREN {\n                 token::special_idents::invalid // no special identifier\n             } else {"}]}