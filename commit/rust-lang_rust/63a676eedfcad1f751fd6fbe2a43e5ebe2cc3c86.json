{"sha": "63a676eedfcad1f751fd6fbe2a43e5ebe2cc3c86", "node_id": "C_kwDOAAsO6NoAKDYzYTY3NmVlZGZjYWQxZjc1MWZkNmZiZTJhNDNlNWViZTJjYzNjODY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-24T15:16:36Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-24T15:16:36Z"}, "message": "Auto merge of #13576 - Bben01:supress_missing_impl_inside_block, r=jonas-schievink\n\nSuppress \"Implement default members\" inside contained items\n\nFixes #13561", "tree": {"sha": "b77a58c493fe060c5a345e74d678fb2fe1c2ce2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b77a58c493fe060c5a345e74d678fb2fe1c2ce2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63a676eedfcad1f751fd6fbe2a43e5ebe2cc3c86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63a676eedfcad1f751fd6fbe2a43e5ebe2cc3c86", "html_url": "https://github.com/rust-lang/rust/commit/63a676eedfcad1f751fd6fbe2a43e5ebe2cc3c86", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63a676eedfcad1f751fd6fbe2a43e5ebe2cc3c86/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81d26e730eccb3c7b51d5d36b06950bfe84a81f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/81d26e730eccb3c7b51d5d36b06950bfe84a81f6", "html_url": "https://github.com/rust-lang/rust/commit/81d26e730eccb3c7b51d5d36b06950bfe84a81f6"}, {"sha": "95b4a7487b4055d951b59967caffcdc92a733c84", "url": "https://api.github.com/repos/rust-lang/rust/commits/95b4a7487b4055d951b59967caffcdc92a733c84", "html_url": "https://github.com/rust-lang/rust/commit/95b4a7487b4055d951b59967caffcdc92a733c84"}], "stats": {"total": 99, "additions": 99, "deletions": 0}, "files": [{"sha": "161bcc5c8da5f388863af7139447818a5aabbe7f", "filename": "crates/ide-assists/src/handlers/add_missing_impl_members.rs", "status": "modified", "additions": 99, "deletions": 0, "changes": 99, "blob_url": "https://github.com/rust-lang/rust/blob/63a676eedfcad1f751fd6fbe2a43e5ebe2cc3c86/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fadd_missing_impl_members.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63a676eedfcad1f751fd6fbe2a43e5ebe2cc3c86/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fadd_missing_impl_members.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fadd_missing_impl_members.rs?ref=63a676eedfcad1f751fd6fbe2a43e5ebe2cc3c86", "patch": "@@ -107,6 +107,14 @@ fn add_missing_impl_members_inner(\n ) -> Option<()> {\n     let _p = profile::span(\"add_missing_impl_members_inner\");\n     let impl_def = ctx.find_node_at_offset::<ast::Impl>()?;\n+\n+    if ctx.token_at_offset().all(|t| {\n+        t.parent_ancestors()\n+            .any(|s| ast::BlockExpr::can_cast(s.kind()) || ast::ParamList::can_cast(s.kind()))\n+    }) {\n+        return None;\n+    }\n+\n     let target_scope = ctx.sema.scope(impl_def.syntax())?;\n     let trait_ = resolve_target_trait(&ctx.sema, &impl_def)?;\n \n@@ -1343,4 +1351,95 @@ impl PartialEq for SomeStruct {\n \"#,\n         );\n     }\n+\n+    #[test]\n+    fn test_ignore_function_body() {\n+        check_assist_not_applicable(\n+            add_missing_default_members,\n+            r#\"\n+trait Trait {\n+    type X;\n+    fn foo(&self);\n+    fn bar(&self) {}\n+}\n+\n+impl Trait for () {\n+    type X = u8;\n+    fn foo(&self) {$0\n+        let x = 5;\n+    }\n+}\"#,\n+        )\n+    }\n+\n+    #[test]\n+    fn test_ignore_param_list() {\n+        check_assist_not_applicable(\n+            add_missing_impl_members,\n+            r#\"\n+trait Trait {\n+    type X;\n+    fn foo(&self);\n+    fn bar(&self);\n+}\n+\n+impl Trait for () {\n+    type X = u8;\n+    fn foo(&self$0) {\n+        let x = 5;\n+    }\n+}\"#,\n+        )\n+    }\n+\n+    #[test]\n+    fn test_ignore_scope_inside_function() {\n+        check_assist_not_applicable(\n+            add_missing_impl_members,\n+            r#\"\n+trait Trait {\n+    type X;\n+    fn foo(&self);\n+    fn bar(&self);\n+}\n+\n+impl Trait for () {\n+    type X = u8;\n+    fn foo(&self) {\n+        let x = async {$0 5 };\n+    }\n+}\"#,\n+        )\n+    }\n+\n+    #[test]\n+    fn test_apply_outside_function() {\n+        check_assist(\n+            add_missing_default_members,\n+            r#\"\n+trait Trait {\n+    type X;\n+    fn foo(&self);\n+    fn bar(&self) {}\n+}\n+\n+impl Trait for () {\n+    type X = u8;\n+    fn foo(&self)$0 {}\n+}\"#,\n+            r#\"\n+trait Trait {\n+    type X;\n+    fn foo(&self);\n+    fn bar(&self) {}\n+}\n+\n+impl Trait for () {\n+    type X = u8;\n+    fn foo(&self) {}\n+\n+    $0fn bar(&self) {}\n+}\"#,\n+        )\n+    }\n }"}]}