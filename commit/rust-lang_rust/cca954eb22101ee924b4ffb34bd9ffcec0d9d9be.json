{"sha": "cca954eb22101ee924b4ffb34bd9ffcec0d9d9be", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjYTk1NGViMjIxMDFlZTkyNGI0ZmZiMzRiZDlmZmNlYzBkOWQ5YmU=", "commit": {"author": {"name": "Matthew Kraai", "email": "kraai@ftbfs.org", "date": "2019-12-08T03:59:14Z"}, "committer": {"name": "Matthew Kraai", "email": "kraai@ftbfs.org", "date": "2019-12-08T13:21:27Z"}, "message": "Change \"`alloc`/`realloc`\" to \"`realloc/dealloc`\"", "tree": {"sha": "da36b87e194567b8e1172d6f1c1bfe2d3ed0ad70", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da36b87e194567b8e1172d6f1c1bfe2d3ed0ad70"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cca954eb22101ee924b4ffb34bd9ffcec0d9d9be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cca954eb22101ee924b4ffb34bd9ffcec0d9d9be", "html_url": "https://github.com/rust-lang/rust/commit/cca954eb22101ee924b4ffb34bd9ffcec0d9d9be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cca954eb22101ee924b4ffb34bd9ffcec0d9d9be/comments", "author": {"login": "kraai", "id": 552646, "node_id": "MDQ6VXNlcjU1MjY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/552646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kraai", "html_url": "https://github.com/kraai", "followers_url": "https://api.github.com/users/kraai/followers", "following_url": "https://api.github.com/users/kraai/following{/other_user}", "gists_url": "https://api.github.com/users/kraai/gists{/gist_id}", "starred_url": "https://api.github.com/users/kraai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kraai/subscriptions", "organizations_url": "https://api.github.com/users/kraai/orgs", "repos_url": "https://api.github.com/users/kraai/repos", "events_url": "https://api.github.com/users/kraai/events{/privacy}", "received_events_url": "https://api.github.com/users/kraai/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kraai", "id": 552646, "node_id": "MDQ6VXNlcjU1MjY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/552646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kraai", "html_url": "https://github.com/kraai", "followers_url": "https://api.github.com/users/kraai/followers", "following_url": "https://api.github.com/users/kraai/following{/other_user}", "gists_url": "https://api.github.com/users/kraai/gists{/gist_id}", "starred_url": "https://api.github.com/users/kraai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kraai/subscriptions", "organizations_url": "https://api.github.com/users/kraai/orgs", "repos_url": "https://api.github.com/users/kraai/repos", "events_url": "https://api.github.com/users/kraai/events{/privacy}", "received_events_url": "https://api.github.com/users/kraai/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2392fddab7b153b6c7083371a80f36bb3005cd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2392fddab7b153b6c7083371a80f36bb3005cd7", "html_url": "https://github.com/rust-lang/rust/commit/b2392fddab7b153b6c7083371a80f36bb3005cd7"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "c8a3a2d9fe5a18205dfdd2278c1bbfa9142d26c0", "filename": "src/libcore/alloc.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cca954eb22101ee924b4ffb34bd9ffcec0d9d9be/src%2Flibcore%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cca954eb22101ee924b4ffb34bd9ffcec0d9d9be/src%2Flibcore%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Falloc.rs?ref=cca954eb22101ee924b4ffb34bd9ffcec0d9d9be", "patch": "@@ -1046,7 +1046,7 @@ pub unsafe trait Alloc {\n     /// Captures a common usage pattern for allocators.\n     ///\n     /// The returned block is suitable for passing to the\n-    /// `alloc`/`realloc` methods of this allocator.\n+    /// `realloc`/`dealloc` methods of this allocator.\n     ///\n     /// Note to implementors: If this returns `Ok(ptr)`, then `ptr`\n     /// must be considered \"currently allocated\" and must be\n@@ -1112,7 +1112,7 @@ pub unsafe trait Alloc {\n     /// Captures a common usage pattern for allocators.\n     ///\n     /// The returned block is suitable for passing to the\n-    /// `alloc`/`realloc` methods of this allocator.\n+    /// `realloc`/`dealloc` methods of this allocator.\n     ///\n     /// Note to implementors: If this returns `Ok(ptr)`, then `ptr`\n     /// must be considered \"currently allocated\" and must be\n@@ -1159,7 +1159,7 @@ pub unsafe trait Alloc {\n     /// Captures a common usage pattern for allocators.\n     ///\n     /// The returned block is suitable for passing to the\n-    /// `alloc`/`realloc` methods of this allocator.\n+    /// `realloc`/`dealloc` methods of this allocator.\n     ///\n     /// # Safety\n     ///"}]}