{"sha": "97d438cd314d33c976cc0bb7fbfa08150270cbe2", "node_id": "C_kwDOAAsO6NoAKDk3ZDQzOGNkMzE0ZDMzYzk3NmNjMGJiN2ZiZmEwODE1MDI3MGNiZTI", "commit": {"author": {"name": "Josh Triplett", "email": "josh@joshtriplett.org", "date": "2022-09-09T13:01:26Z"}, "committer": {"name": "Josh Triplett", "email": "josh@joshtriplett.org", "date": "2022-10-14T23:35:39Z"}, "message": "Use Align8 to avoid misalignment if the allocator or Vec doesn't align allocations", "tree": {"sha": "d54949d818f70ec420d6320784cc00a83375e3db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d54949d818f70ec420d6320784cc00a83375e3db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97d438cd314d33c976cc0bb7fbfa08150270cbe2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97d438cd314d33c976cc0bb7fbfa08150270cbe2", "html_url": "https://github.com/rust-lang/rust/commit/97d438cd314d33c976cc0bb7fbfa08150270cbe2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97d438cd314d33c976cc0bb7fbfa08150270cbe2/comments", "author": {"login": "joshtriplett", "id": 162737, "node_id": "MDQ6VXNlcjE2MjczNw==", "avatar_url": "https://avatars.githubusercontent.com/u/162737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshtriplett", "html_url": "https://github.com/joshtriplett", "followers_url": "https://api.github.com/users/joshtriplett/followers", "following_url": "https://api.github.com/users/joshtriplett/following{/other_user}", "gists_url": "https://api.github.com/users/joshtriplett/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshtriplett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshtriplett/subscriptions", "organizations_url": "https://api.github.com/users/joshtriplett/orgs", "repos_url": "https://api.github.com/users/joshtriplett/repos", "events_url": "https://api.github.com/users/joshtriplett/events{/privacy}", "received_events_url": "https://api.github.com/users/joshtriplett/received_events", "type": "User", "site_admin": false}, "committer": {"login": "joshtriplett", "id": 162737, "node_id": "MDQ6VXNlcjE2MjczNw==", "avatar_url": "https://avatars.githubusercontent.com/u/162737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshtriplett", "html_url": "https://github.com/joshtriplett", "followers_url": "https://api.github.com/users/joshtriplett/followers", "following_url": "https://api.github.com/users/joshtriplett/following{/other_user}", "gists_url": "https://api.github.com/users/joshtriplett/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshtriplett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshtriplett/subscriptions", "organizations_url": "https://api.github.com/users/joshtriplett/orgs", "repos_url": "https://api.github.com/users/joshtriplett/repos", "events_url": "https://api.github.com/users/joshtriplett/events{/privacy}", "received_events_url": "https://api.github.com/users/joshtriplett/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a79da9ab7fbf5d50034751f4c3c185a1144d49b", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a79da9ab7fbf5d50034751f4c3c185a1144d49b", "html_url": "https://github.com/rust-lang/rust/commit/6a79da9ab7fbf5d50034751f4c3c185a1144d49b"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "0879ef199338e8160eeacd863ce32f296642968c", "filename": "library/std/src/sys/windows/io.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/97d438cd314d33c976cc0bb7fbfa08150270cbe2/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97d438cd314d33c976cc0bb7fbfa08150270cbe2/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fio.rs?ref=97d438cd314d33c976cc0bb7fbfa08150270cbe2", "patch": "@@ -2,7 +2,7 @@ use crate::marker::PhantomData;\n use crate::mem::size_of;\n use crate::os::windows::io::{AsHandle, AsRawHandle, BorrowedHandle};\n use crate::slice;\n-use crate::sys::c;\n+use crate::sys::{c, Align8};\n use core;\n use libc;\n \n@@ -120,21 +120,21 @@ unsafe fn handle_is_console(handle: BorrowedHandle<'_>) -> bool {\n }\n \n unsafe fn msys_tty_on(handle: c::HANDLE) -> bool {\n-    let size = size_of::<c::FILE_NAME_INFO>() + c::MAX_PATH * size_of::<c::WCHAR>();\n-    let mut name_info_bytes = vec![0u8; size];\n+    const SIZE: usize = size_of::<c::FILE_NAME_INFO>() + c::MAX_PATH * size_of::<c::WCHAR>();\n+    let mut name_info_bytes = Align8([0u8; SIZE]);\n     let res = c::GetFileInformationByHandleEx(\n         handle,\n         c::FileNameInfo,\n-        name_info_bytes.as_mut_ptr() as *mut libc::c_void,\n-        size as u32,\n+        name_info_bytes.0.as_mut_ptr() as *mut libc::c_void,\n+        SIZE as u32,\n     );\n     if res == 0 {\n         return false;\n     }\n-    let name_info: &c::FILE_NAME_INFO = &*(name_info_bytes.as_ptr() as *const c::FILE_NAME_INFO);\n+    let name_info: &c::FILE_NAME_INFO = &*(name_info_bytes.0.as_ptr() as *const c::FILE_NAME_INFO);\n     let name_len = name_info.FileNameLength as usize / 2;\n     // Offset to get the `FileName` field.\n-    let name_ptr = name_info_bytes.as_ptr().offset(size_of::<c::DWORD>() as isize).cast::<u16>();\n+    let name_ptr = name_info_bytes.0.as_ptr().offset(size_of::<c::DWORD>() as isize).cast::<u16>();\n     let s = core::slice::from_raw_parts(name_ptr, name_len);\n     let name = String::from_utf16_lossy(s);\n     // This checks whether 'pty' exists in the file name, which indicates that"}]}