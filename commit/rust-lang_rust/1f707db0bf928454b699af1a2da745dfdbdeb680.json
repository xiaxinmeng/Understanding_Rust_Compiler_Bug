{"sha": "1f707db0bf928454b699af1a2da745dfdbdeb680", "node_id": "C_kwDOAAsO6NoAKDFmNzA3ZGIwYmY5Mjg0NTRiNjk5YWYxYTJkYTc0NWRmZGJkZWI2ODA", "commit": {"author": {"name": "Preston From", "email": "prestonfrom@gmail.com", "date": "2022-06-23T04:34:49Z"}, "committer": {"name": "Preston From", "email": "prestonfrom@gmail.com", "date": "2022-06-23T04:34:49Z"}, "message": "Update messages for clarity when linting", "tree": {"sha": "96985ed7ecc1fbee8752722711215bd31bad35be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96985ed7ecc1fbee8752722711215bd31bad35be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f707db0bf928454b699af1a2da745dfdbdeb680", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f707db0bf928454b699af1a2da745dfdbdeb680", "html_url": "https://github.com/rust-lang/rust/commit/1f707db0bf928454b699af1a2da745dfdbdeb680", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f707db0bf928454b699af1a2da745dfdbdeb680/comments", "author": {"login": "PrestonFrom", "id": 12164367, "node_id": "MDQ6VXNlcjEyMTY0MzY3", "avatar_url": "https://avatars.githubusercontent.com/u/12164367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PrestonFrom", "html_url": "https://github.com/PrestonFrom", "followers_url": "https://api.github.com/users/PrestonFrom/followers", "following_url": "https://api.github.com/users/PrestonFrom/following{/other_user}", "gists_url": "https://api.github.com/users/PrestonFrom/gists{/gist_id}", "starred_url": "https://api.github.com/users/PrestonFrom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PrestonFrom/subscriptions", "organizations_url": "https://api.github.com/users/PrestonFrom/orgs", "repos_url": "https://api.github.com/users/PrestonFrom/repos", "events_url": "https://api.github.com/users/PrestonFrom/events{/privacy}", "received_events_url": "https://api.github.com/users/PrestonFrom/received_events", "type": "User", "site_admin": false}, "committer": {"login": "PrestonFrom", "id": 12164367, "node_id": "MDQ6VXNlcjEyMTY0MzY3", "avatar_url": "https://avatars.githubusercontent.com/u/12164367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PrestonFrom", "html_url": "https://github.com/PrestonFrom", "followers_url": "https://api.github.com/users/PrestonFrom/followers", "following_url": "https://api.github.com/users/PrestonFrom/following{/other_user}", "gists_url": "https://api.github.com/users/PrestonFrom/gists{/gist_id}", "starred_url": "https://api.github.com/users/PrestonFrom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PrestonFrom/subscriptions", "organizations_url": "https://api.github.com/users/PrestonFrom/orgs", "repos_url": "https://api.github.com/users/PrestonFrom/repos", "events_url": "https://api.github.com/users/PrestonFrom/events{/privacy}", "received_events_url": "https://api.github.com/users/PrestonFrom/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2476100c857147c3402b1b7c05ed65a84ceb228e", "url": "https://api.github.com/repos/rust-lang/rust/commits/2476100c857147c3402b1b7c05ed65a84ceb228e", "html_url": "https://github.com/rust-lang/rust/commit/2476100c857147c3402b1b7c05ed65a84ceb228e"}], "stats": {"total": 122, "additions": 64, "deletions": 58}, "files": [{"sha": "98884ac7d7372ad276e8f983ffcda7037bd487a6", "filename": "clippy_lints/src/matches/significant_drop_in_scrutinee.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1f707db0bf928454b699af1a2da745dfdbdeb680/clippy_lints%2Fsrc%2Fmatches%2Fsignificant_drop_in_scrutinee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f707db0bf928454b699af1a2da745dfdbdeb680/clippy_lints%2Fsrc%2Fmatches%2Fsignificant_drop_in_scrutinee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches%2Fsignificant_drop_in_scrutinee.rs?ref=1f707db0bf928454b699af1a2da745dfdbdeb680", "patch": "@@ -27,10 +27,10 @@ pub(super) fn check<'tcx>(\n                 diag.span_label(s, \"original temporary lives until here\");\n                 if let Some(spans) = has_significant_drop_in_arms(cx, arms) {\n                     for span in spans {\n-                        diag.span_label(span, \"significant drop in arm here\");\n+                        diag.span_label(span, \"another temporary with significant `Drop` created here\");\n                     }\n-                    diag.note(\"this might lead to deadlocks or other unexpected behavior\");\n                 }\n+                diag.note(\"this might lead to deadlocks or other unexpected behavior\");\n             });\n         }\n     }\n@@ -89,9 +89,9 @@ fn has_significant_drop_in_scrutinee<'tcx, 'a>(\n     let mut helper = SigDropHelper::new(cx);\n     helper.find_sig_drop(scrutinee).map(|drops| {\n         let message = if source == MatchSource::Normal {\n-            \"temporary with drop impl with side effects in match scrutinee lives to end of block\"\n+            \"temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\"\n         } else {\n-            \"temporary with drop impl with side effects in for loop condition lives to end of block\"\n+            \"temporary with significant `Drop` in `for` loop condition will live until the end of the `for` expression\"\n         };\n         (drops, message)\n     })"}, {"sha": "f97b606c4747d14764d3441976629380fbefcb6e", "filename": "tests/ui/significant_drop_in_scrutinee.stderr", "status": "modified", "additions": 60, "deletions": 54, "changes": 114, "blob_url": "https://github.com/rust-lang/rust/blob/1f707db0bf928454b699af1a2da745dfdbdeb680/tests%2Fui%2Fsignificant_drop_in_scrutinee.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f707db0bf928454b699af1a2da745dfdbdeb680/tests%2Fui%2Fsignificant_drop_in_scrutinee.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsignificant_drop_in_scrutinee.stderr?ref=1f707db0bf928454b699af1a2da745dfdbdeb680", "patch": "@@ -1,11 +1,11 @@\n-error: temporary with drop impl with side effects in match scrutinee lives to end of block\n+error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n   --> $DIR/significant_drop_in_scrutinee.rs:59:11\n    |\n LL |     match mutex.lock().unwrap().foo() {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n LL |         true => {\n LL |             mutex.lock().unwrap().bar();\n-   |             --------------------- significant drop in arm here\n+   |             --------------------- another temporary with significant `Drop` created here\n ...\n LL |     };\n    |      - original temporary lives until here\n@@ -18,14 +18,14 @@ LL ~     let value = mutex.lock().unwrap().foo();\n LL ~     match value {\n    |\n \n-error: temporary with drop impl with side effects in match scrutinee lives to end of block\n+error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n   --> $DIR/significant_drop_in_scrutinee.rs:132:11\n    |\n LL |     match s.lock_m().get_the_value() {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL |             println!(\"{}\", s.lock_m().get_the_value());\n-   |                            ---------- significant drop in arm here\n+   |                            ---------- another temporary with significant `Drop` created here\n ...\n LL |     }\n    |      - original temporary lives until here\n@@ -37,14 +37,14 @@ LL ~     let value = s.lock_m().get_the_value();\n LL ~     match value {\n    |\n \n-error: temporary with drop impl with side effects in match scrutinee lives to end of block\n+error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n   --> $DIR/significant_drop_in_scrutinee.rs:153:11\n    |\n LL |     match s.lock_m_m().get_the_value() {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL |             println!(\"{}\", s.lock_m().get_the_value());\n-   |                            ---------- significant drop in arm here\n+   |                            ---------- another temporary with significant `Drop` created here\n ...\n LL |     }\n    |      - original temporary lives until here\n@@ -56,7 +56,7 @@ LL ~     let value = s.lock_m_m().get_the_value();\n LL ~     match value {\n    |\n \n-error: temporary with drop impl with side effects in match scrutinee lives to end of block\n+error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n   --> $DIR/significant_drop_in_scrutinee.rs:201:11\n    |\n LL |     match counter.temp_increment().len() {\n@@ -65,20 +65,21 @@ LL |     match counter.temp_increment().len() {\n LL |     };\n    |      - original temporary lives until here\n    |\n+   = note: this might lead to deadlocks or other unexpected behavior\n help: try moving the temporary above the match\n    |\n LL ~     let value = counter.temp_increment().len();\n LL ~     match value {\n    |\n \n-error: temporary with drop impl with side effects in match scrutinee lives to end of block\n+error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n   --> $DIR/significant_drop_in_scrutinee.rs:224:16\n    |\n LL |         match (mutex1.lock().unwrap().s.len(), true) {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL |                 mutex1.lock().unwrap().s.len();\n-   |                 ---------------------- significant drop in arm here\n+   |                 ---------------------- another temporary with significant `Drop` created here\n ...\n LL |         };\n    |          - original temporary lives until here\n@@ -90,14 +91,14 @@ LL ~         let value = mutex1.lock().unwrap().s.len();\n LL ~         match (value, true) {\n    |\n \n-error: temporary with drop impl with side effects in match scrutinee lives to end of block\n+error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n   --> $DIR/significant_drop_in_scrutinee.rs:233:22\n    |\n LL |         match (true, mutex1.lock().unwrap().s.len(), true) {\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL |                 mutex1.lock().unwrap().s.len();\n-   |                 ---------------------- significant drop in arm here\n+   |                 ---------------------- another temporary with significant `Drop` created here\n ...\n LL |         };\n    |          - original temporary lives until here\n@@ -109,16 +110,16 @@ LL ~         let value = mutex1.lock().unwrap().s.len();\n LL ~         match (true, value, true) {\n    |\n \n-error: temporary with drop impl with side effects in match scrutinee lives to end of block\n+error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n   --> $DIR/significant_drop_in_scrutinee.rs:243:16\n    |\n LL |         match (mutex1.lock().unwrap().s.len(), true, mutex2.lock().unwrap().s.len()) {\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL |                 mutex1.lock().unwrap().s.len();\n-   |                 ---------------------- significant drop in arm here\n+   |                 ---------------------- another temporary with significant `Drop` created here\n LL |                 mutex2.lock().unwrap().s.len();\n-   |                 ---------------------- significant drop in arm here\n+   |                 ---------------------- another temporary with significant `Drop` created here\n ...\n LL |         };\n    |          - original temporary lives until here\n@@ -130,16 +131,16 @@ LL ~         let value = mutex1.lock().unwrap().s.len();\n LL ~         match (value, true, mutex2.lock().unwrap().s.len()) {\n    |\n \n-error: temporary with drop impl with side effects in match scrutinee lives to end of block\n+error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n   --> $DIR/significant_drop_in_scrutinee.rs:243:54\n    |\n LL |         match (mutex1.lock().unwrap().s.len(), true, mutex2.lock().unwrap().s.len()) {\n    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL |                 mutex1.lock().unwrap().s.len();\n-   |                 ---------------------- significant drop in arm here\n+   |                 ---------------------- another temporary with significant `Drop` created here\n LL |                 mutex2.lock().unwrap().s.len();\n-   |                 ---------------------- significant drop in arm here\n+   |                 ---------------------- another temporary with significant `Drop` created here\n ...\n LL |         };\n    |          - original temporary lives until here\n@@ -151,46 +152,46 @@ LL ~         let value = mutex2.lock().unwrap().s.len();\n LL ~         match (mutex1.lock().unwrap().s.len(), true, value) {\n    |\n \n-error: temporary with drop impl with side effects in match scrutinee lives to end of block\n+error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n   --> $DIR/significant_drop_in_scrutinee.rs:254:15\n    |\n LL |         match mutex3.lock().unwrap().s.as_str() {\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL |                 mutex1.lock().unwrap().s.len();\n-   |                 ---------------------- significant drop in arm here\n+   |                 ---------------------- another temporary with significant `Drop` created here\n LL |                 mutex2.lock().unwrap().s.len();\n-   |                 ---------------------- significant drop in arm here\n+   |                 ---------------------- another temporary with significant `Drop` created here\n ...\n LL |         };\n    |          - original temporary lives until here\n    |\n    = note: this might lead to deadlocks or other unexpected behavior\n \n-error: temporary with drop impl with side effects in match scrutinee lives to end of block\n+error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n   --> $DIR/significant_drop_in_scrutinee.rs:264:22\n    |\n LL |         match (true, mutex3.lock().unwrap().s.as_str()) {\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL |                 mutex1.lock().unwrap().s.len();\n-   |                 ---------------------- significant drop in arm here\n+   |                 ---------------------- another temporary with significant `Drop` created here\n LL |                 mutex2.lock().unwrap().s.len();\n-   |                 ---------------------- significant drop in arm here\n+   |                 ---------------------- another temporary with significant `Drop` created here\n ...\n LL |         };\n    |          - original temporary lives until here\n    |\n    = note: this might lead to deadlocks or other unexpected behavior\n \n-error: temporary with drop impl with side effects in match scrutinee lives to end of block\n+error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n   --> $DIR/significant_drop_in_scrutinee.rs:283:11\n    |\n LL |     match mutex.lock().unwrap().s.len() > 1 {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n LL |         true => {\n LL |             mutex.lock().unwrap().s.len();\n-   |             --------------------- significant drop in arm here\n+   |             --------------------- another temporary with significant `Drop` created here\n ...\n LL |     };\n    |      - original temporary lives until here\n@@ -202,14 +203,14 @@ LL ~     let value = mutex.lock().unwrap().s.len() > 1;\n LL ~     match value {\n    |\n \n-error: temporary with drop impl with side effects in match scrutinee lives to end of block\n+error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n   --> $DIR/significant_drop_in_scrutinee.rs:290:11\n    |\n LL |     match 1 < mutex.lock().unwrap().s.len() {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n LL |         true => {\n LL |             mutex.lock().unwrap().s.len();\n-   |             --------------------- significant drop in arm here\n+   |             --------------------- another temporary with significant `Drop` created here\n ...\n LL |     };\n    |      - original temporary lives until here\n@@ -221,16 +222,16 @@ LL ~     let value = 1 < mutex.lock().unwrap().s.len();\n LL ~     match value {\n    |\n \n-error: temporary with drop impl with side effects in match scrutinee lives to end of block\n+error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n   --> $DIR/significant_drop_in_scrutinee.rs:308:11\n    |\n LL |     match mutex1.lock().unwrap().s.len() < mutex2.lock().unwrap().s.len() {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL |                 mutex1.lock().unwrap().s.len(),\n-   |                 ---------------------- significant drop in arm here\n+   |                 ---------------------- another temporary with significant `Drop` created here\n LL |                 mutex2.lock().unwrap().s.len()\n-   |                 ---------------------- significant drop in arm here\n+   |                 ---------------------- another temporary with significant `Drop` created here\n ...\n LL |     };\n    |      - original temporary lives until here\n@@ -242,16 +243,16 @@ LL ~     let value = mutex1.lock().unwrap().s.len() < mutex2.lock().unwrap().s.l\n LL ~     match value {\n    |\n \n-error: temporary with drop impl with side effects in match scrutinee lives to end of block\n+error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n   --> $DIR/significant_drop_in_scrutinee.rs:319:11\n    |\n LL |     match mutex1.lock().unwrap().s.len() >= mutex2.lock().unwrap().s.len() {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL |                 mutex1.lock().unwrap().s.len(),\n-   |                 ---------------------- significant drop in arm here\n+   |                 ---------------------- another temporary with significant `Drop` created here\n LL |                 mutex2.lock().unwrap().s.len()\n-   |                 ---------------------- significant drop in arm here\n+   |                 ---------------------- another temporary with significant `Drop` created here\n ...\n LL |     };\n    |      - original temporary lives until here\n@@ -263,14 +264,14 @@ LL ~     let value = mutex1.lock().unwrap().s.len() >= mutex2.lock().unwrap().s.\n LL ~     match value {\n    |\n \n-error: temporary with drop impl with side effects in match scrutinee lives to end of block\n+error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n   --> $DIR/significant_drop_in_scrutinee.rs:354:11\n    |\n LL |     match get_mutex_guard().s.len() > 1 {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n LL |         true => {\n LL |             mutex1.lock().unwrap().s.len();\n-   |             ---------------------- significant drop in arm here\n+   |             ---------------------- another temporary with significant `Drop` created here\n ...\n LL |     };\n    |      - original temporary lives until here\n@@ -282,7 +283,7 @@ LL ~     let value = get_mutex_guard().s.len() > 1;\n LL ~     match value {\n    |\n \n-error: temporary with drop impl with side effects in match scrutinee lives to end of block\n+error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n   --> $DIR/significant_drop_in_scrutinee.rs:371:11\n    |\n LL |       match match i {\n@@ -296,7 +297,7 @@ LL | |         > 1\n    | |___________^\n ...\n LL |               mutex1.lock().unwrap().s.len();\n-   |               ---------------------- significant drop in arm here\n+   |               ---------------------- another temporary with significant `Drop` created here\n ...\n LL |       };\n    |        - original temporary lives until here\n@@ -312,7 +313,7 @@ LL +     .s\n LL +     .len()\n  ...\n \n-error: temporary with drop impl with side effects in match scrutinee lives to end of block\n+error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n   --> $DIR/significant_drop_in_scrutinee.rs:397:11\n    |\n LL |       match if i > 1 {\n@@ -326,7 +327,7 @@ LL | |         > 1\n    | |___________^\n ...\n LL |               mutex1.lock().unwrap().s.len();\n-   |               ---------------------- significant drop in arm here\n+   |               ---------------------- another temporary with significant `Drop` created here\n ...\n LL |       };\n    |        - original temporary lives until here\n@@ -342,14 +343,14 @@ LL +     }\n LL +     .s\n  ...\n \n-error: temporary with drop impl with side effects in match scrutinee lives to end of block\n+error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n   --> $DIR/significant_drop_in_scrutinee.rs:451:11\n    |\n LL |     match s.lock().deref().deref() {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^\n LL |         0 | 1 => println!(\"Value was less than 2\"),\n LL |         _ => println!(\"Value is {}\", s.lock().deref()),\n-   |                                      ---------------- significant drop in arm here\n+   |                                      ---------------- another temporary with significant `Drop` created here\n LL |     };\n    |      - original temporary lives until here\n    |\n@@ -360,27 +361,27 @@ LL ~     let value = *s.lock().deref().deref();\n LL ~     match value {\n    |\n \n-error: temporary with drop impl with side effects in match scrutinee lives to end of block\n+error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n   --> $DIR/significant_drop_in_scrutinee.rs:479:11\n    |\n LL |     match s.lock().deref().deref() {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^\n LL |         matcher => println!(\"Value is {}\", s.lock().deref()),\n-   |                                            ---------------- significant drop in arm here\n+   |                                            ---------------- another temporary with significant `Drop` created here\n LL |         _ => println!(\"Value was not a match\"),\n LL |     };\n    |      - original temporary lives until here\n    |\n    = note: this might lead to deadlocks or other unexpected behavior\n \n-error: temporary with drop impl with side effects in match scrutinee lives to end of block\n+error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n   --> $DIR/significant_drop_in_scrutinee.rs:498:11\n    |\n LL |     match mutex.lock().unwrap().i = i {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n LL |         _ => {\n LL |             println!(\"{}\", mutex.lock().unwrap().i);\n-   |                            --------------------- significant drop in arm here\n+   |                            --------------------- another temporary with significant `Drop` created here\n LL |         },\n LL |     };\n    |      - original temporary lives until here\n@@ -392,14 +393,14 @@ LL ~     mutex.lock().unwrap().i = i;\n LL ~     match () {\n    |\n \n-error: temporary with drop impl with side effects in match scrutinee lives to end of block\n+error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n   --> $DIR/significant_drop_in_scrutinee.rs:504:11\n    |\n LL |     match i = mutex.lock().unwrap().i {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n LL |         _ => {\n LL |             println!(\"{}\", mutex.lock().unwrap().i);\n-   |                            --------------------- significant drop in arm here\n+   |                            --------------------- another temporary with significant `Drop` created here\n LL |         },\n LL |     };\n    |      - original temporary lives until here\n@@ -411,14 +412,14 @@ LL ~     i = mutex.lock().unwrap().i;\n LL ~     match () {\n    |\n \n-error: temporary with drop impl with side effects in match scrutinee lives to end of block\n+error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n   --> $DIR/significant_drop_in_scrutinee.rs:510:11\n    |\n LL |     match mutex.lock().unwrap().i += 1 {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n LL |         _ => {\n LL |             println!(\"{}\", mutex.lock().unwrap().i);\n-   |                            --------------------- significant drop in arm here\n+   |                            --------------------- another temporary with significant `Drop` created here\n LL |         },\n LL |     };\n    |      - original temporary lives until here\n@@ -430,14 +431,14 @@ LL ~     mutex.lock().unwrap().i += 1;\n LL ~     match () {\n    |\n \n-error: temporary with drop impl with side effects in match scrutinee lives to end of block\n+error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n   --> $DIR/significant_drop_in_scrutinee.rs:516:11\n    |\n LL |     match i += mutex.lock().unwrap().i {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n LL |         _ => {\n LL |             println!(\"{}\", mutex.lock().unwrap().i);\n-   |                            --------------------- significant drop in arm here\n+   |                            --------------------- another temporary with significant `Drop` created here\n LL |         },\n LL |     };\n    |      - original temporary lives until here\n@@ -449,25 +450,29 @@ LL ~     i += mutex.lock().unwrap().i;\n LL ~     match () {\n    |\n \n-error: temporary with drop impl with side effects in match scrutinee lives to end of block\n+error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n   --> $DIR/significant_drop_in_scrutinee.rs:579:11\n    |\n LL |     match rwlock.read().unwrap().to_number() {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL |     };\n    |      - original temporary lives until here\n+   |\n+   = note: this might lead to deadlocks or other unexpected behavior\n \n-error: temporary with drop impl with side effects in for loop condition lives to end of block\n+error: temporary with significant `Drop` in `for` loop condition will live until the end of the `for` expression\n   --> $DIR/significant_drop_in_scrutinee.rs:589:14\n    |\n LL |     for s in rwlock.read().unwrap().iter() {\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n LL |         println!(\"{}\", s);\n LL |     }\n    |      - original temporary lives until here\n+   |\n+   = note: this might lead to deadlocks or other unexpected behavior\n \n-error: temporary with drop impl with side effects in match scrutinee lives to end of block\n+error: temporary with significant `Drop` in `match` scrutinee will live until the end of the `match` expression\n   --> $DIR/significant_drop_in_scrutinee.rs:604:11\n    |\n LL |     match mutex.lock().unwrap().foo() {\n@@ -476,6 +481,7 @@ LL |     match mutex.lock().unwrap().foo() {\n LL |     };\n    |      - original temporary lives until here\n    |\n+   = note: this might lead to deadlocks or other unexpected behavior\n help: try moving the temporary above the match\n    |\n LL ~     let value = mutex.lock().unwrap().foo();"}]}