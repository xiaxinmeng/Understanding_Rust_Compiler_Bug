{"sha": "1c866573cb4f8ec4801cf58da86f298cad2906e6", "node_id": "C_kwDOAAsO6NoAKDFjODY2NTczY2I0ZjhlYzQ4MDFjZjU4ZGE4NmYyOThjYWQyOTA2ZTY", "commit": {"author": {"name": "Wesley Norris", "email": "repnop@outlook.com", "date": "2022-01-17T22:06:10Z"}, "committer": {"name": "Wesley Norris", "email": "repnop@outlook.com", "date": "2022-01-17T22:06:10Z"}, "message": "fix: insert auto-imports after header comments\n\nFixes #8607.\n\nThis commit changes the auto-import functionality and causes it to add\nimports after any leading comments, which are commonly license headers.\nThis does not affect comments on items as they're considered part of the\nitem itself and not separate.", "tree": {"sha": "a52465887f72a1e53adb6463e1ed633fe6a307aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a52465887f72a1e53adb6463e1ed633fe6a307aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c866573cb4f8ec4801cf58da86f298cad2906e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c866573cb4f8ec4801cf58da86f298cad2906e6", "html_url": "https://github.com/rust-lang/rust/commit/1c866573cb4f8ec4801cf58da86f298cad2906e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c866573cb4f8ec4801cf58da86f298cad2906e6/comments", "author": {"login": "repnop", "id": 24203105, "node_id": "MDQ6VXNlcjI0MjAzMTA1", "avatar_url": "https://avatars.githubusercontent.com/u/24203105?v=4", "gravatar_id": "", "url": "https://api.github.com/users/repnop", "html_url": "https://github.com/repnop", "followers_url": "https://api.github.com/users/repnop/followers", "following_url": "https://api.github.com/users/repnop/following{/other_user}", "gists_url": "https://api.github.com/users/repnop/gists{/gist_id}", "starred_url": "https://api.github.com/users/repnop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/repnop/subscriptions", "organizations_url": "https://api.github.com/users/repnop/orgs", "repos_url": "https://api.github.com/users/repnop/repos", "events_url": "https://api.github.com/users/repnop/events{/privacy}", "received_events_url": "https://api.github.com/users/repnop/received_events", "type": "User", "site_admin": false}, "committer": {"login": "repnop", "id": 24203105, "node_id": "MDQ6VXNlcjI0MjAzMTA1", "avatar_url": "https://avatars.githubusercontent.com/u/24203105?v=4", "gravatar_id": "", "url": "https://api.github.com/users/repnop", "html_url": "https://github.com/repnop", "followers_url": "https://api.github.com/users/repnop/followers", "following_url": "https://api.github.com/users/repnop/following{/other_user}", "gists_url": "https://api.github.com/users/repnop/gists{/gist_id}", "starred_url": "https://api.github.com/users/repnop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/repnop/subscriptions", "organizations_url": "https://api.github.com/users/repnop/orgs", "repos_url": "https://api.github.com/users/repnop/repos", "events_url": "https://api.github.com/users/repnop/events{/privacy}", "received_events_url": "https://api.github.com/users/repnop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8be2be8c794192c32b1814d6a0be04c68af13855", "url": "https://api.github.com/repos/rust-lang/rust/commits/8be2be8c794192c32b1814d6a0be04c68af13855", "html_url": "https://github.com/rust-lang/rust/commit/8be2be8c794192c32b1814d6a0be04c68af13855"}], "stats": {"total": 31, "additions": 27, "deletions": 4}, "files": [{"sha": "d6f8cd0f4b72be45e384e2f91a6c387e6e933f57", "filename": "crates/ide_db/src/helpers/insert_use.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1c866573cb4f8ec4801cf58da86f298cad2906e6/crates%2Fide_db%2Fsrc%2Fhelpers%2Finsert_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c866573cb4f8ec4801cf58da86f298cad2906e6/crates%2Fide_db%2Fsrc%2Fhelpers%2Finsert_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fhelpers%2Finsert_use.rs?ref=1c866573cb4f8ec4801cf58da86f298cad2906e6", "patch": "@@ -401,7 +401,7 @@ fn insert_use_(\n         .children_with_tokens()\n         .filter(|child| match child {\n             NodeOrToken::Node(node) => is_inner_attribute(node.clone()),\n-            NodeOrToken::Token(token) => is_inner_comment(token.clone()),\n+            NodeOrToken::Token(token) => is_comment(token.clone()),\n         })\n         .last()\n     {\n@@ -440,7 +440,6 @@ fn is_inner_attribute(node: SyntaxNode) -> bool {\n     ast::Attr::cast(node).map(|attr| attr.kind()) == Some(ast::AttrKind::Inner)\n }\n \n-fn is_inner_comment(token: SyntaxToken) -> bool {\n-    ast::Comment::cast(token).and_then(|comment| comment.kind().doc)\n-        == Some(ast::CommentPlacement::Inner)\n+fn is_comment(token: SyntaxToken) -> bool {\n+    ast::Comment::cast(token).is_some()\n }"}, {"sha": "abd5e64c54f5775909c113cd26da71fe674113f9", "filename": "crates/ide_db/src/helpers/insert_use/tests.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/1c866573cb4f8ec4801cf58da86f298cad2906e6/crates%2Fide_db%2Fsrc%2Fhelpers%2Finsert_use%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c866573cb4f8ec4801cf58da86f298cad2906e6/crates%2Fide_db%2Fsrc%2Fhelpers%2Finsert_use%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fhelpers%2Finsert_use%2Ftests.rs?ref=1c866573cb4f8ec4801cf58da86f298cad2906e6", "patch": "@@ -390,6 +390,30 @@ use foo::bar::Baz;\"#,\n     );\n }\n \n+#[test]\n+fn inserts_after_single_line_comments() {\n+    check_none(\n+        \"foo::bar::Baz\",\n+        \"// Represents a possible license header and/or general module comments\",\n+        r#\"// Represents a possible license header and/or general module comments\n+\n+use foo::bar::Baz;\"#,\n+    );\n+}\n+\n+#[test]\n+fn inserts_before_single_line_item_comments() {\n+    check_none(\n+        \"foo::bar::Baz\",\n+        r#\"// Represents a comment about a function\n+fn foo() {}\"#,\n+        r#\"use foo::bar::Baz;\n+\n+// Represents a comment about a function\n+fn foo() {}\"#,\n+    );\n+}\n+\n #[test]\n fn inserts_after_multiline_inner_comments() {\n     check_none("}]}