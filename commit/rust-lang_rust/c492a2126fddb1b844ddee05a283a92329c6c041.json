{"sha": "c492a2126fddb1b844ddee05a283a92329c6c041", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0OTJhMjEyNmZkZGIxYjg0NGRkZWUwNWEyODNhOTIzMjljNmMwNDE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2013-05-29T22:10:34Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2013-05-30T13:54:39Z"}, "message": "Remove some spurious copies that are identified by later patches", "tree": {"sha": "6abb1a4f73a090453927dc3497275ce6ceca0c66", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6abb1a4f73a090453927dc3497275ce6ceca0c66"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c492a2126fddb1b844ddee05a283a92329c6c041", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c492a2126fddb1b844ddee05a283a92329c6c041", "html_url": "https://github.com/rust-lang/rust/commit/c492a2126fddb1b844ddee05a283a92329c6c041", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c492a2126fddb1b844ddee05a283a92329c6c041/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7dfb865339c85139682d74acf0f90984aee8f2a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/7dfb865339c85139682d74acf0f90984aee8f2a2", "html_url": "https://github.com/rust-lang/rust/commit/7dfb865339c85139682d74acf0f90984aee8f2a2"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "6399fa5eedff9b1dd59286c4d9f9896ff112bc1e", "filename": "src/librustc/middle/trans/_match.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c492a2126fddb1b844ddee05a283a92329c6c041/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c492a2126fddb1b844ddee05a283a92329c6c041/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs?ref=c492a2126fddb1b844ddee05a283a92329c6c041", "patch": "@@ -674,8 +674,8 @@ pub fn enter_tup<'r>(bcx: block,\n     let dummy = @ast::pat {id: 0, node: ast::pat_wild, span: dummy_sp()};\n     do enter_match(bcx, dm, m, col, val) |p| {\n         match p.node {\n-            ast::pat_tup(/*bad*/copy elts) => {\n-                Some(elts)\n+            ast::pat_tup(ref elts) => {\n+                Some(copy *elts)\n             }\n             _ => {\n                 assert_is_binding_or_wild(bcx, p);\n@@ -702,7 +702,7 @@ pub fn enter_tuple_struct<'r>(bcx: block,\n     let dummy = @ast::pat {id: 0, node: ast::pat_wild, span: dummy_sp()};\n     do enter_match(bcx, dm, m, col, val) |p| {\n         match p.node {\n-            ast::pat_enum(_, Some(/*bad*/copy elts)) => Some(elts),\n+            ast::pat_enum(_, Some(ref elts)) => Some(copy *elts),\n             _ => {\n                 assert_is_binding_or_wild(bcx, p);\n                 Some(vec::from_elem(n_elts, dummy))"}, {"sha": "539dc3e1f00098f3bc505913894a3456fbae1f51", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c492a2126fddb1b844ddee05a283a92329c6c041/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c492a2126fddb1b844ddee05a283a92329c6c041/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=c492a2126fddb1b844ddee05a283a92329c6c041", "patch": "@@ -1726,7 +1726,7 @@ pub fn copy_args_to_allocas(fcx: fn_ctxt,\n     let mut bcx = bcx;\n \n     match fcx.llself {\n-      Some(copy slf) => {\n+      Some(slf) => {\n         // We really should do this regardless of whether self is owned, but\n         // it doesn't work right with default method impls yet. (FIXME: #2794)\n         if slf.is_owned {\n@@ -1801,7 +1801,7 @@ pub fn build_return_block(fcx: fn_ctxt) {\n pub fn tie_up_header_blocks(fcx: fn_ctxt, lltop: BasicBlockRef) {\n     let _icx = fcx.insn_ctxt(\"tie_up_header_blocks\");\n     match fcx.llloadenv {\n-        Some(copy ll) => {\n+        Some(ll) => {\n             Br(raw_block(fcx, false, fcx.llstaticallocas), ll);\n             Br(raw_block(fcx, false, ll), lltop);\n         }"}, {"sha": "77b2586781f11fd8b223f5587c639777eb4bff50", "filename": "src/librustc/middle/trans/type_use.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c492a2126fddb1b844ddee05a283a92329c6c041/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c492a2126fddb1b844ddee05a283a92329c6c041/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_use.rs?ref=c492a2126fddb1b844ddee05a283a92329c6c041", "patch": "@@ -85,8 +85,8 @@ pub fn type_uses_for(ccx: @CrateContext, fn_id: def_id, n_tps: uint)\n     }\n \n     if fn_id_loc.crate != local_crate {\n-        let Context { uses: @uses, _ } = cx;\n-        let uses = @uses; // mutability\n+        let Context { uses, _ } = cx;\n+        let uses = @copy *uses; // freeze\n         ccx.type_use_cache.insert(fn_id, uses);\n         return uses;\n     }\n@@ -173,8 +173,8 @@ pub fn type_uses_for(ccx: @CrateContext, fn_id: def_id, n_tps: uint)\n                                 ccx.tcx.sess.parse_sess.interner)));\n       }\n     }\n-    let Context { uses: @uses, _ } = cx;\n-    let uses = @uses; // mutability\n+    let Context { uses, _ } = cx;\n+    let uses = @copy *uses; // freeze\n     ccx.type_use_cache.insert(fn_id, uses);\n     uses\n }"}]}