{"sha": "132409f0c6c2a849e376ee708ee5427657178371", "node_id": "C_kwDOAAsO6NoAKDEzMjQwOWYwYzZjMmE4NDllMzc2ZWU3MDhlZTU0Mjc2NTcxNzgzNzE", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2021-10-22T18:44:47Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2021-10-22T18:49:54Z"}, "message": "Assemple trait alias candidates for negative polarity\n\nThis doesn't work properly yet, we would probably need to implement an\n`assembly_neg_candidates` and consider things like `T: !AB` as `T: !A`\n|| `T: !B`", "tree": {"sha": "581f5189a2a9e2ddec464932a93d44fa270b58a6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/581f5189a2a9e2ddec464932a93d44fa270b58a6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/132409f0c6c2a849e376ee708ee5427657178371", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmFzB9IACgkQgTGiTgx5\n769LIQ/7Bx0hsjTjTE1TBynShUXFuhzU4aj4syh8bMFAroTDeM4c9l6q9ulmMujV\nh0VC+Dy4zlZXxDgQ0E89X4WK3IlXEYosEzxazCzdY8fcDqzngUfFODG0npQeHBlY\nw0Ir7mg8ujGh4YwGT9MYNOmfOvl50s+JaCxRpCcxuB/L4LG30yX19f0lhlfj+trm\nyjU/0QGdYUY5YY2BY0dka2XiuSi9+Hj8whLNv9WU0xv2ReLytJjSZLTqJx/tYP6o\nwMESlhYuEJVXcU8rxq5UkoiKGFw3m4kYuBDktro1EsXDDb5EGdu32MspuJfBYOaI\nrq8yUhEq52P03b8tqneEPhALiDMq3hkfZrRqEeL36D3TOdCbYt1nKId4C6+sPduG\nKzbgAnp3hjWZcwNFwKkgbBGvxZm6ZCknJoZLyo5YJeDZcAtER5ifBjtYIsbzKLJL\nXhH9kQWyjpp61VLK8BrMXVFzV7oYMMNqn8Wao9Nv5GyCJEkUfPCNrLe1visgdYT/\nEpGC6Dxa3rNA/D/Dyrb4SyH/yg5e/zBz56n5ElWsfPhOyS/Uxajm6Fq9nZgs6jrp\nEHaFC2iDktjAqITFCE8gGWukWYxJInw0kt2lsdiSruPvHoFqGpKMCN7SswWpdjbq\nd5bdvc4ah9sp98jh81qGEQW2NQ0mbnjXBnIhTbsZ+DlQWxH6YSg=\n=fo+S\n-----END PGP SIGNATURE-----", "payload": "tree 581f5189a2a9e2ddec464932a93d44fa270b58a6\nparent da79fa964cfe82cfca3d9db6e32108888c837459\nauthor Santiago Pastorino <spastorino@gmail.com> 1634928287 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1634928594 -0300\n\nAssemple trait alias candidates for negative polarity\n\nThis doesn't work properly yet, we would probably need to implement an\n`assembly_neg_candidates` and consider things like `T: !AB` as `T: !A`\n|| `T: !B`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/132409f0c6c2a849e376ee708ee5427657178371", "html_url": "https://github.com/rust-lang/rust/commit/132409f0c6c2a849e376ee708ee5427657178371", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/132409f0c6c2a849e376ee708ee5427657178371/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da79fa964cfe82cfca3d9db6e32108888c837459", "url": "https://api.github.com/repos/rust-lang/rust/commits/da79fa964cfe82cfca3d9db6e32108888c837459", "html_url": "https://github.com/rust-lang/rust/commit/da79fa964cfe82cfca3d9db6e32108888c837459"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "575766eade54a687870cfb64148ec751cfbaffac", "filename": "compiler/rustc_trait_selection/src/traits/select/candidate_assembly.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/132409f0c6c2a849e376ee708ee5427657178371/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fcandidate_assembly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/132409f0c6c2a849e376ee708ee5427657178371/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fcandidate_assembly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fcandidate_assembly.rs?ref=132409f0c6c2a849e376ee708ee5427657178371", "patch": "@@ -259,6 +259,7 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n         // The only way to prove a NotImplemented(T: Foo) predicate is via a negative impl.\n         // There are no compiler built-in rules for this.\n         if obligation.polarity() == ty::ImplPolarity::Negative {\n+            self.assemble_candidates_for_trait_alias(obligation, &mut candidates);\n             self.assemble_candidates_from_impls(obligation, &mut candidates);\n         } else {\n             self.assemble_candidates_for_trait_alias(obligation, &mut candidates);"}]}