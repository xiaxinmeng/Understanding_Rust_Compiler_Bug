{"sha": "061610640c9032fd54ad922e4d88631f9ba6f532", "node_id": "C_kwDOAAsO6NoAKDA2MTYxMDY0MGM5MDMyZmQ1NGFkOTIyZTRkODg2MzFmOWJhNmY1MzI", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-11-15T07:43:50Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-11-15T07:43:50Z"}, "message": "simplify `emit_unused_delims_expr`", "tree": {"sha": "0d65c4a4362b4d8bedfc07a730b8120c2b2bef52", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d65c4a4362b4d8bedfc07a730b8120c2b2bef52"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/061610640c9032fd54ad922e4d88631f9ba6f532", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/061610640c9032fd54ad922e4d88631f9ba6f532", "html_url": "https://github.com/rust-lang/rust/commit/061610640c9032fd54ad922e4d88631f9ba6f532", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/061610640c9032fd54ad922e4d88631f9ba6f532/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca08a3265511d3b0c2f3c3cf06e7acc10b73a5ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca08a3265511d3b0c2f3c3cf06e7acc10b73a5ce", "html_url": "https://github.com/rust-lang/rust/commit/ca08a3265511d3b0c2f3c3cf06e7acc10b73a5ce"}], "stats": {"total": 13, "additions": 3, "deletions": 10}, "files": [{"sha": "766194b15c8d662354cd35e7b85cf7fd826a7763", "filename": "compiler/rustc_lint/src/unused.rs", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/061610640c9032fd54ad922e4d88631f9ba6f532/compiler%2Frustc_lint%2Fsrc%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/061610640c9032fd54ad922e4d88631f9ba6f532/compiler%2Frustc_lint%2Fsrc%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Funused.rs?ref=061610640c9032fd54ad922e4d88631f9ba6f532", "patch": "@@ -517,16 +517,9 @@ trait UnusedDelimLint {\n         right_pos: Option<BytePos>,\n     ) {\n         let spans = match value.kind {\n-            ast::ExprKind::Block(ref block, None) if block.stmts.len() > 0 => {\n-                let start = block.stmts[0].span;\n-                let end = block.stmts[block.stmts.len() - 1].span;\n-                if let Some(start) = start.find_ancestor_inside(value.span)\n-                    && let Some(end) = end.find_ancestor_inside(value.span)\n-                {\n-                    Some((\n-                        value.span.with_hi(start.lo()),\n-                        value.span.with_lo(end.hi()),\n-                    ))\n+            ast::ExprKind::Block(ref block, None) if block.stmts.len() == 1 => {\n+                if let Some(span) = block.stmts[0].span.find_ancestor_inside(value.span) {\n+                    Some((value.span.with_hi(span.lo()), value.span.with_lo(span.hi())))\n                 } else {\n                     None\n                 }"}]}