{"sha": "a54b91ff5bb1672ba0dc83a5ead0e599723714f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1NGI5MWZmNWJiMTY3MmJhMGRjODNhNWVhZDBlNTk5NzIzNzE0ZjY=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-08-21T18:43:02Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-08-21T18:43:02Z"}, "message": "remove use of swap_remove and compress the list as we go instead", "tree": {"sha": "eb66335d7040c2fe6d51350e8f7c243ae53e7aee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb66335d7040c2fe6d51350e8f7c243ae53e7aee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a54b91ff5bb1672ba0dc83a5ead0e599723714f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a54b91ff5bb1672ba0dc83a5ead0e599723714f6", "html_url": "https://github.com/rust-lang/rust/commit/a54b91ff5bb1672ba0dc83a5ead0e599723714f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a54b91ff5bb1672ba0dc83a5ead0e599723714f6/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b247402666d1c149005de1d341f3fa49fb2943a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/b247402666d1c149005de1d341f3fa49fb2943a4", "html_url": "https://github.com/rust-lang/rust/commit/b247402666d1c149005de1d341f3fa49fb2943a4"}], "stats": {"total": 25, "additions": 12, "deletions": 13}, "files": [{"sha": "e58dee8c018b784d220ba4d6338f45932e548a6e", "filename": "src/librustc_data_structures/transitive_relation.rs", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/a54b91ff5bb1672ba0dc83a5ead0e599723714f6/src%2Flibrustc_data_structures%2Ftransitive_relation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a54b91ff5bb1672ba0dc83a5ead0e599723714f6/src%2Flibrustc_data_structures%2Ftransitive_relation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Ftransitive_relation.rs?ref=a54b91ff5bb1672ba0dc83a5ead0e599723714f6", "patch": "@@ -267,8 +267,7 @@ impl<T:Debug+PartialEq> TransitiveRelation<T> {\n /// there exists an earlier element i<j such that i -> j. That is,\n /// after you run `pare_down`, you know that for all elements that\n /// remain in candidates, they cannot reach any of the elements that\n-/// come after them. (Note that it may permute the ordering in some\n-/// cases.)\n+/// come after them.\n ///\n /// Examples follow. Assume that a -> b -> c and x -> y -> z.\n ///\n@@ -278,24 +277,24 @@ impl<T:Debug+PartialEq> TransitiveRelation<T> {\n fn pare_down(candidates: &mut Vec<usize>, closure: &BitMatrix) {\n     let mut i = 0;\n     while i < candidates.len() {\n-        let candidate = candidates[i];\n+        let candidate_i = candidates[i];\n         i += 1;\n \n         let mut j = i;\n+        let mut dead = 0;\n         while j < candidates.len() {\n-            if closure.contains(candidate, candidates[j]) {\n-                // If `i` can reach `j`, then we can remove `j`. Given\n-                // how careful this algorithm is about ordering, it\n-                // may seem odd to use swap-remove. The reason it is\n-                // ok is that we are swapping two elements (`j` and\n-                // `max`) that are both to the right of our cursor\n-                // `i`, and the invariant that we are establishing\n-                // continues to hold for everything left of `i`.\n-                candidates.swap_remove(j);\n+            let candidate_j = candidates[j];\n+            if closure.contains(candidate_i, candidate_j) {\n+                // If `i` can reach `j`, then we can remove `j`. So just\n+                // mark it as dead and move on; subsequent indices will be\n+                // shifted into its place.\n+                dead += 1;\n             } else {\n-                j += 1;\n+                candidates[j - dead] = candidate_j;\n             }\n+            j += 1;\n         }\n+        candidates.truncate(j - dead);\n     }\n }\n "}]}