{"sha": "86b900a3eaaf84b48f080dab14b7994385bd19b8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2YjkwMGEzZWFhZjg0YjQ4ZjA4MGRhYjE0Yjc5OTQzODViZDE5Yjg=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-01-12T07:13:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-12T07:13:15Z"}, "message": "Rollup merge of #79757 - jryans:long-line-tab-handling-early-expand, r=estebank\n\nReplace tabs earlier in diagnostics\n\nThis replaces tabs earlier in the diagnostics emitting process, which allows various margin calculations to ignore the existence of tabs. It does add a string copy for the source lines that are emitted.\n\nFixes https://github.com/rust-lang/rust/issues/78438\n\nr? `@estebank`", "tree": {"sha": "71863c956dabedf7685842fc8546fa90e8f3c2f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71863c956dabedf7685842fc8546fa90e8f3c2f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86b900a3eaaf84b48f080dab14b7994385bd19b8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf/UwMCRBK7hj4Ov3rIwAAdHIIAItbJtC1rXIstjbwxtby7YwH\nsldcGLZXjzsr//Cy3oG90NDqPGUA3q5qnpImHHWYE+oTrt5ZUGdtQXbNcHiTwioB\nwTRjkBQ/QHKH24rcBeCnCZwAm7dQVTNJyrSQSU1zcRlIEFiwcgRTJmsVhlb1WX56\ngYUKY2+j55SrzulHwMPhrK2+MTPGJrBzda/7GIRZ4Rr2Sj2GArYndJkA/yRIm7/U\n9UXWwcdU3vJNA37GApCAF/1z3a7kW5bCkvAqbSlZ6CzIgP3sHodjW6Mze/151WJz\n2S8loYoF+gjpJH5XtCyxZbWFtgOMJXgjl6qWgxjdcDDnSg6J1wX7US2gcZFqK2w=\n=BbEI\n-----END PGP SIGNATURE-----\n", "payload": "tree 71863c956dabedf7685842fc8546fa90e8f3c2f0\nparent 467f5e99a541db94235f0c173bdffc8aeb177522\nparent 3537bd80ff1ef12c9fa994133969d8cfcaa356d3\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1610435595 +0900\ncommitter GitHub <noreply@github.com> 1610435595 +0900\n\nRollup merge of #79757 - jryans:long-line-tab-handling-early-expand, r=estebank\n\nReplace tabs earlier in diagnostics\n\nThis replaces tabs earlier in the diagnostics emitting process, which allows various margin calculations to ignore the existence of tabs. It does add a string copy for the source lines that are emitted.\n\nFixes https://github.com/rust-lang/rust/issues/78438\n\nr? `@estebank`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86b900a3eaaf84b48f080dab14b7994385bd19b8", "html_url": "https://github.com/rust-lang/rust/commit/86b900a3eaaf84b48f080dab14b7994385bd19b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86b900a3eaaf84b48f080dab14b7994385bd19b8/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "467f5e99a541db94235f0c173bdffc8aeb177522", "url": "https://api.github.com/repos/rust-lang/rust/commits/467f5e99a541db94235f0c173bdffc8aeb177522", "html_url": "https://github.com/rust-lang/rust/commit/467f5e99a541db94235f0c173bdffc8aeb177522"}, {"sha": "3537bd80ff1ef12c9fa994133969d8cfcaa356d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/3537bd80ff1ef12c9fa994133969d8cfcaa356d3", "html_url": "https://github.com/rust-lang/rust/commit/3537bd80ff1ef12c9fa994133969d8cfcaa356d3"}], "stats": {"total": 77, "additions": 48, "deletions": 29}, "files": [{"sha": "00882bb287a4fa3772d6c491107cd55c8ddfac10", "filename": "compiler/rustc_errors/src/emitter.rs", "status": "modified", "additions": 20, "deletions": 5, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/86b900a3eaaf84b48f080dab14b7994385bd19b8/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86b900a3eaaf84b48f080dab14b7994385bd19b8/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Femitter.rs?ref=86b900a3eaaf84b48f080dab14b7994385bd19b8", "patch": "@@ -644,6 +644,8 @@ impl EmitterWriter {\n         code_offset: usize,\n         margin: Margin,\n     ) {\n+        // Tabs are assumed to have been replaced by spaces in calling code.\n+        assert!(!source_string.contains('\\t'));\n         let line_len = source_string.len();\n         // Create the source line we will highlight.\n         let left = margin.left(line_len);\n@@ -707,7 +709,7 @@ impl EmitterWriter {\n         }\n \n         let source_string = match file.get_line(line.line_index - 1) {\n-            Some(s) => s,\n+            Some(s) => replace_tabs(&*s),\n             None => return Vec::new(),\n         };\n \n@@ -1376,8 +1378,17 @@ impl EmitterWriter {\n                     let file = annotated_file.file.clone();\n                     let line = &annotated_file.lines[line_idx];\n                     if let Some(source_string) = file.get_line(line.line_index - 1) {\n-                        let leading_whitespace =\n-                            source_string.chars().take_while(|c| c.is_whitespace()).count();\n+                        let leading_whitespace = source_string\n+                            .chars()\n+                            .take_while(|c| c.is_whitespace())\n+                            .map(|c| {\n+                                match c {\n+                                    // Tabs are displayed as 4 spaces\n+                                    '\\t' => 4,\n+                                    _ => 1,\n+                                }\n+                            })\n+                            .sum();\n                         if source_string.chars().any(|c| !c.is_whitespace()) {\n                             whitespace_margin = min(whitespace_margin, leading_whitespace);\n                         }\n@@ -1502,7 +1513,7 @@ impl EmitterWriter {\n \n                             self.draw_line(\n                                 &mut buffer,\n-                                &unannotated_line,\n+                                &replace_tabs(&unannotated_line),\n                                 annotated_file.lines[line_idx + 1].line_index - 1,\n                                 last_buffer_line_num,\n                                 width_offset,\n@@ -1598,7 +1609,7 @@ impl EmitterWriter {\n                 );\n                 // print the suggestion\n                 draw_col_separator(&mut buffer, row_num, max_line_num_len + 1);\n-                buffer.append(row_num, line, Style::NoStyle);\n+                buffer.append(row_num, &replace_tabs(line), Style::NoStyle);\n                 row_num += 1;\n             }\n \n@@ -1930,6 +1941,10 @@ impl FileWithAnnotatedLines {\n     }\n }\n \n+fn replace_tabs(str: &str) -> String {\n+    str.replace('\\t', \"    \")\n+}\n+\n fn draw_col_separator(buffer: &mut StyledBuffer, line: usize, col: usize) {\n     buffer.puts(line, col, \"| \", Style::LineNumber);\n }"}, {"sha": "a4dd0f391bd3a788fd9cd3f10f77c0f9f58a7620", "filename": "compiler/rustc_errors/src/styled_buffer.rs", "status": "modified", "additions": 3, "deletions": 24, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/86b900a3eaaf84b48f080dab14b7994385bd19b8/compiler%2Frustc_errors%2Fsrc%2Fstyled_buffer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86b900a3eaaf84b48f080dab14b7994385bd19b8/compiler%2Frustc_errors%2Fsrc%2Fstyled_buffer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Fstyled_buffer.rs?ref=86b900a3eaaf84b48f080dab14b7994385bd19b8", "patch": "@@ -13,34 +13,13 @@ impl StyledBuffer {\n         StyledBuffer { text: vec![], styles: vec![] }\n     }\n \n-    fn replace_tabs(&mut self) {\n-        for (line_pos, line) in self.text.iter_mut().enumerate() {\n-            let mut tab_pos = vec![];\n-            for (pos, c) in line.iter().enumerate() {\n-                if *c == '\\t' {\n-                    tab_pos.push(pos);\n-                }\n-            }\n-            // start with the tabs at the end of the line to replace them with 4 space chars\n-            for pos in tab_pos.iter().rev() {\n-                assert_eq!(line.remove(*pos), '\\t');\n-                // fix the position of the style to match up after replacing the tabs\n-                let s = self.styles[line_pos].remove(*pos);\n-                for _ in 0..4 {\n-                    line.insert(*pos, ' ');\n-                    self.styles[line_pos].insert(*pos, s);\n-                }\n-            }\n-        }\n-    }\n+    pub fn render(&self) -> Vec<Vec<StyledString>> {\n+        // Tabs are assumed to have been replaced by spaces in calling code.\n+        assert!(self.text.iter().all(|r| !r.contains(&'\\t')));\n \n-    pub fn render(&mut self) -> Vec<Vec<StyledString>> {\n         let mut output: Vec<Vec<StyledString>> = vec![];\n         let mut styled_vec: Vec<StyledString> = vec![];\n \n-        // before we render, replace tabs with spaces\n-        self.replace_tabs();\n-\n         for (row, row_style) in self.text.iter().zip(&self.styles) {\n             let mut current_style = Style::NoStyle;\n             let mut current_text = String::new();"}, {"sha": "ade21753b457c8084d47cec2e909122630a7700b", "filename": "src/test/ui/terminal-width/tabs-trimming.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/86b900a3eaaf84b48f080dab14b7994385bd19b8/src%2Ftest%2Fui%2Fterminal-width%2Ftabs-trimming.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86b900a3eaaf84b48f080dab14b7994385bd19b8/src%2Ftest%2Fui%2Fterminal-width%2Ftabs-trimming.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fterminal-width%2Ftabs-trimming.rs?ref=86b900a3eaaf84b48f080dab14b7994385bd19b8", "patch": "@@ -0,0 +1,13 @@\n+// Test for #78438: ensure underline alignment with many tabs on the left, long line on the right\n+\n+// ignore-tidy-linelength\n+// ignore-tidy-tab\n+\n+\t\t\t\t\tfn main() {\n+\t\t\t\t\t\tlet money = 42i32;\n+\t\t\t\t\t\tmatch money {\n+\t\t\t\t\t\t\tv @ 1 | 2 | 3 => panic!(\"You gave me too little money {}\", v), // Long text here: TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT\n+\t\t\t\t\t\t\t//~^ ERROR variable `v` is not bound in all patterns\n+\t\t\t\t\t\t\tv => println!(\"Enough money {}\", v),\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}"}, {"sha": "6c8d9afc73b2aabb35bf5e98266ce9f32cda4277", "filename": "src/test/ui/terminal-width/tabs-trimming.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/86b900a3eaaf84b48f080dab14b7994385bd19b8/src%2Ftest%2Fui%2Fterminal-width%2Ftabs-trimming.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/86b900a3eaaf84b48f080dab14b7994385bd19b8/src%2Ftest%2Fui%2Fterminal-width%2Ftabs-trimming.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fterminal-width%2Ftabs-trimming.stderr?ref=86b900a3eaaf84b48f080dab14b7994385bd19b8", "patch": "@@ -0,0 +1,12 @@\n+error[E0408]: variable `v` is not bound in all patterns\n+  --> $DIR/tabs-trimming.rs:9:16\n+   |\n+LL | ...   v @ 1 | 2 | 3 => panic!(\"You gave me too little money {}\", v), // Long text here: TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT...\n+   |       -       ^   ^ pattern doesn't bind `v`\n+   |       |       |\n+   |       |       pattern doesn't bind `v`\n+   |       variable not in all patterns\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0408`."}]}