{"sha": "734f375019ecceaf4adad2423b0035f070dda354", "node_id": "C_kwDOAAsO6NoAKDczNGYzNzUwMTllY2NlYWY0YWRhZDI0MjNiMDAzNWYwNzBkZGEzNTQ", "commit": {"author": {"name": "--global", "email": "39689890+timrobertsdev@users.noreply.github.com", "date": "2022-11-08T15:24:06Z"}, "committer": {"name": "Tim Roberts", "email": "tim@idk", "date": "2023-01-20T07:26:12Z"}, "message": "Change `bindings_with_variant_name` to deny-by-default", "tree": {"sha": "d8b96c838a90afa955465a1c847c142f04219d1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8b96c838a90afa955465a1c847c142f04219d1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/734f375019ecceaf4adad2423b0035f070dda354", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/734f375019ecceaf4adad2423b0035f070dda354", "html_url": "https://github.com/rust-lang/rust/commit/734f375019ecceaf4adad2423b0035f070dda354", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/734f375019ecceaf4adad2423b0035f070dda354/comments", "author": {"login": "timrobertsdev", "id": 39689890, "node_id": "MDQ6VXNlcjM5Njg5ODkw", "avatar_url": "https://avatars.githubusercontent.com/u/39689890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timrobertsdev", "html_url": "https://github.com/timrobertsdev", "followers_url": "https://api.github.com/users/timrobertsdev/followers", "following_url": "https://api.github.com/users/timrobertsdev/following{/other_user}", "gists_url": "https://api.github.com/users/timrobertsdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/timrobertsdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timrobertsdev/subscriptions", "organizations_url": "https://api.github.com/users/timrobertsdev/orgs", "repos_url": "https://api.github.com/users/timrobertsdev/repos", "events_url": "https://api.github.com/users/timrobertsdev/events{/privacy}", "received_events_url": "https://api.github.com/users/timrobertsdev/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "51d50ea96ecc9c681a0054e5eb8e5e1d4ab38906", "url": "https://api.github.com/repos/rust-lang/rust/commits/51d50ea96ecc9c681a0054e5eb8e5e1d4ab38906", "html_url": "https://github.com/rust-lang/rust/commit/51d50ea96ecc9c681a0054e5eb8e5e1d4ab38906"}], "stats": {"total": 117, "additions": 54, "deletions": 63}, "files": [{"sha": "0748dd94c457cfad2d956b6a396ec2bfde1d117b", "filename": "compiler/rustc_lint_defs/src/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/734f375019ecceaf4adad2423b0035f070dda354/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/734f375019ecceaf4adad2423b0035f070dda354/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs?ref=734f375019ecceaf4adad2423b0035f070dda354", "patch": "@@ -743,7 +743,7 @@ declare_lint! {\n     /// [identifier pattern]: https://doc.rust-lang.org/reference/patterns.html#identifier-patterns\n     /// [path pattern]: https://doc.rust-lang.org/reference/patterns.html#path-patterns\n     pub BINDINGS_WITH_VARIANT_NAME,\n-    Warn,\n+    Deny,\n     \"detects pattern bindings with the same name as one of the matched variants\"\n }\n "}, {"sha": "029855de2dea0e594b4d4b64019fc358c967f95d", "filename": "tests/ui/issues/issue-19100.fixed", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/734f375019ecceaf4adad2423b0035f070dda354/tests%2Fui%2Fissues%2Fissue-19100.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/734f375019ecceaf4adad2423b0035f070dda354/tests%2Fui%2Fissues%2Fissue-19100.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-19100.fixed?ref=734f375019ecceaf4adad2423b0035f070dda354", "patch": "@@ -1,4 +1,3 @@\n-// run-pass\n // run-rustfix\n \n #![allow(non_snake_case)]\n@@ -16,11 +15,11 @@ impl Foo {\n         match self {\n             &\n Foo::Bar if true\n-//~^ WARN pattern binding `Bar` is named the same as one of the variants of the type `Foo`\n+//~^ ERROR pattern binding `Bar` is named the same as one of the variants of the type `Foo`\n => println!(\"bar\"),\n             &\n Foo::Baz if false\n-//~^ WARN pattern binding `Baz` is named the same as one of the variants of the type `Foo`\n+//~^ ERROR pattern binding `Baz` is named the same as one of the variants of the type `Foo`\n => println!(\"baz\"),\n _ => ()\n         }"}, {"sha": "bd9e4ea5b601b0c1f894dca181225a43d76ad40c", "filename": "tests/ui/issues/issue-19100.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/734f375019ecceaf4adad2423b0035f070dda354/tests%2Fui%2Fissues%2Fissue-19100.rs", "raw_url": "https://github.com/rust-lang/rust/raw/734f375019ecceaf4adad2423b0035f070dda354/tests%2Fui%2Fissues%2Fissue-19100.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-19100.rs?ref=734f375019ecceaf4adad2423b0035f070dda354", "patch": "@@ -1,4 +1,3 @@\n-// run-pass\n // run-rustfix\n \n #![allow(non_snake_case)]\n@@ -16,11 +15,11 @@ impl Foo {\n         match self {\n             &\n Bar if true\n-//~^ WARN pattern binding `Bar` is named the same as one of the variants of the type `Foo`\n+//~^ ERROR pattern binding `Bar` is named the same as one of the variants of the type `Foo`\n => println!(\"bar\"),\n             &\n Baz if false\n-//~^ WARN pattern binding `Baz` is named the same as one of the variants of the type `Foo`\n+//~^ ERROR pattern binding `Baz` is named the same as one of the variants of the type `Foo`\n => println!(\"baz\"),\n _ => ()\n         }"}, {"sha": "ebbf083b7dea8d1e1fa76ab98303a7fe2d22f02e", "filename": "tests/ui/issues/issue-19100.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/734f375019ecceaf4adad2423b0035f070dda354/tests%2Fui%2Fissues%2Fissue-19100.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/734f375019ecceaf4adad2423b0035f070dda354/tests%2Fui%2Fissues%2Fissue-19100.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-19100.stderr?ref=734f375019ecceaf4adad2423b0035f070dda354", "patch": "@@ -1,17 +1,17 @@\n-warning[E0170]: pattern binding `Bar` is named the same as one of the variants of the type `Foo`\n-  --> $DIR/issue-19100.rs:18:1\n+error[E0170]: pattern binding `Bar` is named the same as one of the variants of the type `Foo`\n+  --> $DIR/issue-19100.rs:17:1\n    |\n LL | Bar if true\n    | ^^^ help: to match on the variant, qualify the path: `Foo::Bar`\n    |\n-   = note: `#[warn(bindings_with_variant_name)]` on by default\n+   = note: `#[deny(bindings_with_variant_name)]` on by default\n \n-warning[E0170]: pattern binding `Baz` is named the same as one of the variants of the type `Foo`\n-  --> $DIR/issue-19100.rs:22:1\n+error[E0170]: pattern binding `Baz` is named the same as one of the variants of the type `Foo`\n+  --> $DIR/issue-19100.rs:21:1\n    |\n LL | Baz if false\n    | ^^^ help: to match on the variant, qualify the path: `Foo::Baz`\n \n-warning: 2 warnings emitted\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0170`."}, {"sha": "5eccb8cd5d8d2cc59ea45992eac2ddd530285a9e", "filename": "tests/ui/lint/issue-30302.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/734f375019ecceaf4adad2423b0035f070dda354/tests%2Fui%2Flint%2Fissue-30302.rs", "raw_url": "https://github.com/rust-lang/rust/raw/734f375019ecceaf4adad2423b0035f070dda354/tests%2Fui%2Flint%2Fissue-30302.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint%2Fissue-30302.rs?ref=734f375019ecceaf4adad2423b0035f070dda354", "patch": "@@ -11,7 +11,7 @@ enum Stack<T> {\n fn is_empty<T>(s: Stack<T>) -> bool {\n     match s {\n         Nil => true,\n-//~^ WARN pattern binding `Nil` is named the same as one of the variants of the type `Stack`\n+//~^ ERROR pattern binding `Nil` is named the same as one of the variants of the type `Stack`\n         _ => false\n //~^ ERROR unreachable pattern\n     }"}, {"sha": "baf6c0d7a59d84da505cd17ade601b2efb33496e", "filename": "tests/ui/lint/issue-30302.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/734f375019ecceaf4adad2423b0035f070dda354/tests%2Fui%2Flint%2Fissue-30302.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/734f375019ecceaf4adad2423b0035f070dda354/tests%2Fui%2Flint%2Fissue-30302.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint%2Fissue-30302.stderr?ref=734f375019ecceaf4adad2423b0035f070dda354", "patch": "@@ -1,10 +1,10 @@\n-warning[E0170]: pattern binding `Nil` is named the same as one of the variants of the type `Stack`\n+error[E0170]: pattern binding `Nil` is named the same as one of the variants of the type `Stack`\n   --> $DIR/issue-30302.rs:13:9\n    |\n LL |         Nil => true,\n    |         ^^^ help: to match on the variant, qualify the path: `Stack::Nil`\n    |\n-   = note: `#[warn(bindings_with_variant_name)]` on by default\n+   = note: `#[deny(bindings_with_variant_name)]` on by default\n \n error: unreachable pattern\n   --> $DIR/issue-30302.rs:15:9\n@@ -21,6 +21,6 @@ note: the lint level is defined here\n LL | #![deny(unreachable_patterns)]\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0170`."}, {"sha": "59dba536f24b61bf5635cad404d4ba8695bbedbf", "filename": "tests/ui/lint/lint-uppercase-variables.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/734f375019ecceaf4adad2423b0035f070dda354/tests%2Fui%2Flint%2Flint-uppercase-variables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/734f375019ecceaf4adad2423b0035f070dda354/tests%2Fui%2Flint%2Flint-uppercase-variables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint%2Flint-uppercase-variables.rs?ref=734f375019ecceaf4adad2423b0035f070dda354", "patch": "@@ -21,18 +21,18 @@ fn main() {\n     match foo::Foo::Foo {\n         Foo => {}\n     //~^ ERROR variable `Foo` should have a snake case name\n-    //~^^ WARN `Foo` is named the same as one of the variants of the type `foo::Foo`\n+    //~^^ ERROR `Foo` is named the same as one of the variants of the type `foo::Foo`\n     //~^^^ WARN unused variable: `Foo`\n     }\n \n     let Foo = foo::Foo::Foo;\n     //~^ ERROR variable `Foo` should have a snake case name\n-    //~^^ WARN `Foo` is named the same as one of the variants of the type `foo::Foo`\n+    //~^^ ERROR `Foo` is named the same as one of the variants of the type `foo::Foo`\n     //~^^^ WARN unused variable: `Foo`\n \n     fn in_param(Foo: foo::Foo) {}\n     //~^ ERROR variable `Foo` should have a snake case name\n-    //~^^ WARN `Foo` is named the same as one of the variants of the type `foo::Foo`\n+    //~^^ ERROR `Foo` is named the same as one of the variants of the type `foo::Foo`\n     //~^^^ WARN unused variable: `Foo`\n \n     test(1);"}, {"sha": "42ec9364bc6e68f973295fb9258b34da958bc89d", "filename": "tests/ui/lint/lint-uppercase-variables.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/734f375019ecceaf4adad2423b0035f070dda354/tests%2Fui%2Flint%2Flint-uppercase-variables.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/734f375019ecceaf4adad2423b0035f070dda354/tests%2Fui%2Flint%2Flint-uppercase-variables.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint%2Flint-uppercase-variables.stderr?ref=734f375019ecceaf4adad2423b0035f070dda354", "patch": "@@ -1,18 +1,18 @@\n-warning[E0170]: pattern binding `Foo` is named the same as one of the variants of the type `foo::Foo`\n+error[E0170]: pattern binding `Foo` is named the same as one of the variants of the type `foo::Foo`\n   --> $DIR/lint-uppercase-variables.rs:22:9\n    |\n LL |         Foo => {}\n    |         ^^^ help: to match on the variant, qualify the path: `foo::Foo::Foo`\n    |\n-   = note: `#[warn(bindings_with_variant_name)]` on by default\n+   = note: `#[deny(bindings_with_variant_name)]` on by default\n \n-warning[E0170]: pattern binding `Foo` is named the same as one of the variants of the type `foo::Foo`\n+error[E0170]: pattern binding `Foo` is named the same as one of the variants of the type `foo::Foo`\n   --> $DIR/lint-uppercase-variables.rs:28:9\n    |\n LL |     let Foo = foo::Foo::Foo;\n    |         ^^^ help: to match on the variant, qualify the path: `foo::Foo::Foo`\n \n-warning[E0170]: pattern binding `Foo` is named the same as one of the variants of the type `foo::Foo`\n+error[E0170]: pattern binding `Foo` is named the same as one of the variants of the type `foo::Foo`\n   --> $DIR/lint-uppercase-variables.rs:33:17\n    |\n LL |     fn in_param(Foo: foo::Foo) {}\n@@ -85,6 +85,6 @@ error: variable `Foo` should have a snake case name\n LL |     fn in_param(Foo: foo::Foo) {}\n    |                 ^^^ help: convert the identifier to snake case (notice the capitalization): `foo`\n \n-error: aborting due to 6 previous errors; 6 warnings emitted\n+error: aborting due to 9 previous errors; 3 warnings emitted\n \n For more information about this error, try `rustc --explain E0170`."}, {"sha": "13427d2c9b208cb923b66d92cd25800f23d8c2e0", "filename": "tests/ui/pattern/issue-14221.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/734f375019ecceaf4adad2423b0035f070dda354/tests%2Fui%2Fpattern%2Fissue-14221.rs", "raw_url": "https://github.com/rust-lang/rust/raw/734f375019ecceaf4adad2423b0035f070dda354/tests%2Fui%2Fpattern%2Fissue-14221.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpattern%2Fissue-14221.rs?ref=734f375019ecceaf4adad2423b0035f070dda354", "patch": "@@ -11,9 +11,9 @@ pub mod b {\n     pub fn key(e: ::E) -> &'static str {\n         match e {\n             A => \"A\",\n-//~^ WARN pattern binding `A` is named the same as one of the variants of the type `E`\n+//~^ ERROR pattern binding `A` is named the same as one of the variants of the type `E`\n             B => \"B\", //~ ERROR: unreachable pattern\n-//~^ WARN pattern binding `B` is named the same as one of the variants of the type `E`\n+//~^ ERROR pattern binding `B` is named the same as one of the variants of the type `E`\n         }\n     }\n }"}, {"sha": "7ea51b5f804c074abe85ce83a95ba042bbc67948", "filename": "tests/ui/pattern/issue-14221.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/734f375019ecceaf4adad2423b0035f070dda354/tests%2Fui%2Fpattern%2Fissue-14221.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/734f375019ecceaf4adad2423b0035f070dda354/tests%2Fui%2Fpattern%2Fissue-14221.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpattern%2Fissue-14221.stderr?ref=734f375019ecceaf4adad2423b0035f070dda354", "patch": "@@ -1,12 +1,12 @@\n-warning[E0170]: pattern binding `A` is named the same as one of the variants of the type `E`\n+error[E0170]: pattern binding `A` is named the same as one of the variants of the type `E`\n   --> $DIR/issue-14221.rs:13:13\n    |\n LL |             A => \"A\",\n    |             ^ help: to match on the variant, qualify the path: `E::A`\n    |\n-   = note: `#[warn(bindings_with_variant_name)]` on by default\n+   = note: `#[deny(bindings_with_variant_name)]` on by default\n \n-warning[E0170]: pattern binding `B` is named the same as one of the variants of the type `E`\n+error[E0170]: pattern binding `B` is named the same as one of the variants of the type `E`\n   --> $DIR/issue-14221.rs:15:13\n    |\n LL |             B => \"B\",\n@@ -27,6 +27,6 @@ note: the lint level is defined here\n LL | #![deny(unreachable_patterns)]\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error; 2 warnings emitted\n+error: aborting due to 3 previous errors\n \n For more information about this error, try `rustc --explain E0170`."}, {"sha": "05d097eaf14e4a02a789cfc56f621dfedb80ad80", "filename": "tests/ui/pattern/issue-67776-match-same-name-enum-variant-refs.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/734f375019ecceaf4adad2423b0035f070dda354/tests%2Fui%2Fpattern%2Fissue-67776-match-same-name-enum-variant-refs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/734f375019ecceaf4adad2423b0035f070dda354/tests%2Fui%2Fpattern%2Fissue-67776-match-same-name-enum-variant-refs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpattern%2Fissue-67776-match-same-name-enum-variant-refs.rs?ref=734f375019ecceaf4adad2423b0035f070dda354", "patch": "@@ -1,7 +1,5 @@\n // Test for issue #67776: binding named the same as enum variant\n-// should report a warning even when matching against a reference type\n-\n-// check-pass\n+// should report an error even when matching against a reference type\n \n #![allow(unused_variables)]\n #![allow(non_snake_case)]\n@@ -15,27 +13,27 @@ enum Foo {\n fn fn1(e: Foo) {\n     match e {\n         Bar => {},\n-        //~^ WARNING named the same as one of the variants of the type `Foo`\n+        //~^ ERROR named the same as one of the variants of the type `Foo`\n         Baz => {},\n-        //~^ WARNING named the same as one of the variants of the type `Foo`\n+        //~^ ERROR named the same as one of the variants of the type `Foo`\n     }\n }\n \n fn fn2(e: &Foo) {\n     match e {\n         Bar => {},\n-        //~^ WARNING named the same as one of the variants of the type `Foo`\n+        //~^ ERROR named the same as one of the variants of the type `Foo`\n         Baz => {},\n-        //~^ WARNING named the same as one of the variants of the type `Foo`\n+        //~^ ERROR named the same as one of the variants of the type `Foo`\n     }\n }\n \n fn fn3(e: &mut &&mut Foo) {\n     match e {\n         Bar => {},\n-        //~^ WARNING named the same as one of the variants of the type `Foo`\n+        //~^ ERROR named the same as one of the variants of the type `Foo`\n         Baz => {},\n-        //~^ WARNING named the same as one of the variants of the type `Foo`\n+        //~^ ERROR named the same as one of the variants of the type `Foo`\n     }\n }\n "}, {"sha": "da580c7accb97c6574e1b0ae0af332b8fb073973", "filename": "tests/ui/pattern/issue-67776-match-same-name-enum-variant-refs.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/734f375019ecceaf4adad2423b0035f070dda354/tests%2Fui%2Fpattern%2Fissue-67776-match-same-name-enum-variant-refs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/734f375019ecceaf4adad2423b0035f070dda354/tests%2Fui%2Fpattern%2Fissue-67776-match-same-name-enum-variant-refs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpattern%2Fissue-67776-match-same-name-enum-variant-refs.stderr?ref=734f375019ecceaf4adad2423b0035f070dda354", "patch": "@@ -1,41 +1,41 @@\n-warning[E0170]: pattern binding `Bar` is named the same as one of the variants of the type `Foo`\n-  --> $DIR/issue-67776-match-same-name-enum-variant-refs.rs:17:9\n+error[E0170]: pattern binding `Bar` is named the same as one of the variants of the type `Foo`\n+  --> $DIR/issue-67776-match-same-name-enum-variant-refs.rs:15:9\n    |\n LL |         Bar => {},\n    |         ^^^ help: to match on the variant, qualify the path: `Foo::Bar`\n    |\n-   = note: `#[warn(bindings_with_variant_name)]` on by default\n+   = note: `#[deny(bindings_with_variant_name)]` on by default\n \n-warning[E0170]: pattern binding `Baz` is named the same as one of the variants of the type `Foo`\n-  --> $DIR/issue-67776-match-same-name-enum-variant-refs.rs:19:9\n+error[E0170]: pattern binding `Baz` is named the same as one of the variants of the type `Foo`\n+  --> $DIR/issue-67776-match-same-name-enum-variant-refs.rs:17:9\n    |\n LL |         Baz => {},\n    |         ^^^ help: to match on the variant, qualify the path: `Foo::Baz`\n \n-warning[E0170]: pattern binding `Bar` is named the same as one of the variants of the type `Foo`\n-  --> $DIR/issue-67776-match-same-name-enum-variant-refs.rs:26:9\n+error[E0170]: pattern binding `Bar` is named the same as one of the variants of the type `Foo`\n+  --> $DIR/issue-67776-match-same-name-enum-variant-refs.rs:24:9\n    |\n LL |         Bar => {},\n    |         ^^^ help: to match on the variant, qualify the path: `Foo::Bar`\n \n-warning[E0170]: pattern binding `Baz` is named the same as one of the variants of the type `Foo`\n-  --> $DIR/issue-67776-match-same-name-enum-variant-refs.rs:28:9\n+error[E0170]: pattern binding `Baz` is named the same as one of the variants of the type `Foo`\n+  --> $DIR/issue-67776-match-same-name-enum-variant-refs.rs:26:9\n    |\n LL |         Baz => {},\n    |         ^^^ help: to match on the variant, qualify the path: `Foo::Baz`\n \n-warning[E0170]: pattern binding `Bar` is named the same as one of the variants of the type `Foo`\n-  --> $DIR/issue-67776-match-same-name-enum-variant-refs.rs:35:9\n+error[E0170]: pattern binding `Bar` is named the same as one of the variants of the type `Foo`\n+  --> $DIR/issue-67776-match-same-name-enum-variant-refs.rs:33:9\n    |\n LL |         Bar => {},\n    |         ^^^ help: to match on the variant, qualify the path: `Foo::Bar`\n \n-warning[E0170]: pattern binding `Baz` is named the same as one of the variants of the type `Foo`\n-  --> $DIR/issue-67776-match-same-name-enum-variant-refs.rs:37:9\n+error[E0170]: pattern binding `Baz` is named the same as one of the variants of the type `Foo`\n+  --> $DIR/issue-67776-match-same-name-enum-variant-refs.rs:35:9\n    |\n LL |         Baz => {},\n    |         ^^^ help: to match on the variant, qualify the path: `Foo::Baz`\n \n-warning: 6 warnings emitted\n+error: aborting due to 6 previous errors\n \n For more information about this error, try `rustc --explain E0170`."}, {"sha": "d161ed284f6d9dd292ce523ffb1ebaa99e4c7e67", "filename": "tests/ui/suggestions/issue-88730.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/734f375019ecceaf4adad2423b0035f070dda354/tests%2Fui%2Fsuggestions%2Fissue-88730.rs", "raw_url": "https://github.com/rust-lang/rust/raw/734f375019ecceaf4adad2423b0035f070dda354/tests%2Fui%2Fsuggestions%2Fissue-88730.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fissue-88730.rs?ref=734f375019ecceaf4adad2423b0035f070dda354", "patch": "@@ -1,9 +1,8 @@\n #![allow(unused, nonstandard_style)]\n-#![deny(bindings_with_variant_name)]\n \n // If an enum has two different variants,\n // then it cannot be matched upon in a function argument.\n-// It still gets a warning, but no suggestions.\n+// It still gets an error, but no suggestions.\n enum Foo {\n     C,\n     D,"}, {"sha": "0bd1b7ba4bacfdbe35e8f85a82a2b8b96fe115ac", "filename": "tests/ui/suggestions/issue-88730.stderr", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/734f375019ecceaf4adad2423b0035f070dda354/tests%2Fui%2Fsuggestions%2Fissue-88730.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/734f375019ecceaf4adad2423b0035f070dda354/tests%2Fui%2Fsuggestions%2Fissue-88730.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fissue-88730.stderr?ref=734f375019ecceaf4adad2423b0035f070dda354", "patch": "@@ -1,17 +1,13 @@\n error[E0170]: pattern binding `C` is named the same as one of the variants of the type `Foo`\n-  --> $DIR/issue-88730.rs:12:8\n+  --> $DIR/issue-88730.rs:11:8\n    |\n LL | fn foo(C: Foo) {}\n    |        ^\n    |\n-note: the lint level is defined here\n-  --> $DIR/issue-88730.rs:2:9\n-   |\n-LL | #![deny(bindings_with_variant_name)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   = note: `#[deny(bindings_with_variant_name)]` on by default\n \n error[E0170]: pattern binding `C` is named the same as one of the variants of the type `Foo`\n-  --> $DIR/issue-88730.rs:15:9\n+  --> $DIR/issue-88730.rs:14:9\n    |\n LL |     let C = Foo::D;\n    |         ^"}]}