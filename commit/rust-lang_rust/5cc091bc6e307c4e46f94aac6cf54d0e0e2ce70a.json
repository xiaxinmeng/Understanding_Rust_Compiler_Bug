{"sha": "5cc091bc6e307c4e46f94aac6cf54d0e0e2ce70a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjYzA5MWJjNmUzMDdjNGU0NmY5NGFhYzZjZjU0ZDBlMGUyY2U3MGE=", "commit": {"author": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-02-22T01:10:20Z"}, "committer": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-04-05T15:05:14Z"}, "message": "Add test of recursive mutex using libc FFI", "tree": {"sha": "f5acd0521f1f8970149f19c00707744c512978ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5acd0521f1f8970149f19c00707744c512978ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5cc091bc6e307c4e46f94aac6cf54d0e0e2ce70a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5cc091bc6e307c4e46f94aac6cf54d0e0e2ce70a", "html_url": "https://github.com/rust-lang/rust/commit/5cc091bc6e307c4e46f94aac6cf54d0e0e2ce70a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5cc091bc6e307c4e46f94aac6cf54d0e0e2ce70a/comments", "author": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "committer": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c773ca8614772115788fb59a8cdab49efd09e477", "url": "https://api.github.com/repos/rust-lang/rust/commits/c773ca8614772115788fb59a8cdab49efd09e477", "html_url": "https://github.com/rust-lang/rust/commit/c773ca8614772115788fb59a8cdab49efd09e477"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "b247061083798411ec252fa8a126d9f20533bb92", "filename": "tests/run-pass/sync.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/5cc091bc6e307c4e46f94aac6cf54d0e0e2ce70a/tests%2Frun-pass%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cc091bc6e307c4e46f94aac6cf54d0e0e2ce70a/tests%2Frun-pass%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fsync.rs?ref=5cc091bc6e307c4e46f94aac6cf54d0e0e2ce70a", "patch": "@@ -8,6 +8,7 @@ fn main() {\n     test_mutex();\n     #[cfg(not(target_os = \"windows\"))] // TODO: implement RwLock on Windows\n     {\n+        test_mutex_libc_recursive();\n         test_rwlock_stdlib();\n         test_rwlock_libc_init();\n         test_rwlock_libc_static_initializer();\n@@ -24,6 +25,28 @@ fn test_mutex() {\n     drop(m);\n }\n \n+#[cfg(not(target_os = \"windows\"))]\n+fn test_mutex_libc_recursive() {\n+    unsafe {\n+        let mut attr: libc::pthread_mutexattr_t = std::mem::zeroed();\n+        assert_eq!(libc::pthread_mutexattr_init(&mut attr as *mut _), 0);\n+        assert_eq!(libc::pthread_mutexattr_settype(&mut attr as *mut _, libc::PTHREAD_MUTEX_RECURSIVE), 0);\n+        let mut mutex: libc::pthread_mutex_t = std::mem::zeroed();\n+        assert_eq!(libc::pthread_mutex_init(&mut mutex as *mut _, &mut attr as *mut _), 0);\n+        assert_eq!(libc::pthread_mutex_lock(&mut mutex as *mut _), 0);\n+        assert_eq!(libc::pthread_mutex_trylock(&mut mutex as *mut _), 0);\n+        assert_eq!(libc::pthread_mutex_unlock(&mut mutex as *mut _), 0);\n+        assert_eq!(libc::pthread_mutex_unlock(&mut mutex as *mut _), 0);\n+        assert_eq!(libc::pthread_mutex_trylock(&mut mutex as *mut _), 0);\n+        assert_eq!(libc::pthread_mutex_lock(&mut mutex as *mut _), 0);\n+        assert_eq!(libc::pthread_mutex_unlock(&mut mutex as *mut _), 0);\n+        assert_eq!(libc::pthread_mutex_unlock(&mut mutex as *mut _), 0);\n+        assert_eq!(libc::pthread_mutex_unlock(&mut mutex as *mut _), libc::EPERM);\n+        assert_eq!(libc::pthread_mutex_destroy(&mut mutex as *mut _), 0);\n+        assert_eq!(libc::pthread_mutexattr_destroy(&mut attr as *mut _), 0);\n+    }\n+}\n+\n #[cfg(not(target_os = \"windows\"))]\n fn test_rwlock_stdlib() {\n     let rw = RwLock::new(0);"}]}