{"sha": "f3b8920d4bcd9cc55ea2b5041f4341c1337933f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzYjg5MjBkNGJjZDljYzU1ZWEyYjUwNDFmNDM0MWMxMzM3OTMzZjg=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2021-03-03T21:30:42Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2021-03-05T20:13:56Z"}, "message": "Bump all mir_opt_level 3 to 4", "tree": {"sha": "478b9a18fa4df168b89f100962cd1e29735f4cf7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/478b9a18fa4df168b89f100962cd1e29735f4cf7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3b8920d4bcd9cc55ea2b5041f4341c1337933f8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmBCkQQACgkQgTGiTgx5\n76/Xsw//bTLZLv2YmYH4bLiPxKB+uDKF94AGMCL12b7+rcMCFFx2BxpdW80hi3/v\ntiMKjLmPe5KqEICqc5fqbEItVi99OvRqWFecdeGVZaO9t9hh6H+fcRupxjjqOH0E\nqniYqqiyAOmvAER/OnKE6hxiWao4SXcpLpVozUJRLYldYdH92H2x5WaYmoEU1P+P\nShD2PcSFu4jOJ6qobtmoUUqydClAgnynTCVHa/LnRbuXuu02EHomKrrbY6OmIYx4\njliHzOO2hVQAnmVeLTs1QaRBrYgBHLo16mNE/p0EwJPhEe6bJJjQ2oJ2hWWv3Laz\nGtxnuUiPKZ4sRq3OcYNzfywInE2UwdRR211YTQXK7ata/BseSc/zIntRbvvJ+E1x\ne93keUbP3JLIXIyK0/arWjfQAqWjF1s21VBrUe+pBj7Kr7rOurmQvMkir0BxPmwn\nupHzDGX3c6WuLIl45P+AXCRj+7en2FvS6W4xdtv8+kX67jOpgD8m2gPcHn7HI1/l\n0GVH2xm5iFDNlC1PxMBL1vKdFucSNZBcxJ4ZJwpdXa4w67mNWl5M/0yzbCILdDpF\n2ML8LX/8LSQTb5sFHXPRgQ82/5GPksSKevvIMkdg4Fwx+x0IC/EB9DD3cPblhQTl\nmeyqZPKgzxnKpYiUr+b+r5rM36bqNQszoprBgPsgmjz9J1pnCds=\n=MWCb\n-----END PGP SIGNATURE-----", "payload": "tree 478b9a18fa4df168b89f100962cd1e29735f4cf7\nparent fde8d6ee817b8e8f4f900849697e6a427c6781dd\nauthor Santiago Pastorino <spastorino@gmail.com> 1614807042 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1614975236 -0300\n\nBump all mir_opt_level 3 to 4\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3b8920d4bcd9cc55ea2b5041f4341c1337933f8", "html_url": "https://github.com/rust-lang/rust/commit/f3b8920d4bcd9cc55ea2b5041f4341c1337933f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3b8920d4bcd9cc55ea2b5041f4341c1337933f8/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fde8d6ee817b8e8f4f900849697e6a427c6781dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/fde8d6ee817b8e8f4f900849697e6a427c6781dd", "html_url": "https://github.com/rust-lang/rust/commit/fde8d6ee817b8e8f4f900849697e6a427c6781dd"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "b5c8b4bebc360496349001822c0dc24c1bece0f2", "filename": "compiler/rustc_mir/src/transform/const_goto.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3b8920d4bcd9cc55ea2b5041f4341c1337933f8/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_goto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3b8920d4bcd9cc55ea2b5041f4341c1337933f8/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_goto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_goto.rs?ref=f3b8920d4bcd9cc55ea2b5041f4341c1337933f8", "patch": "@@ -28,7 +28,7 @@ pub struct ConstGoto;\n \n impl<'tcx> MirPass<'tcx> for ConstGoto {\n     fn run_pass(&self, tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n-        if tcx.sess.mir_opt_level() < 3 {\n+        if tcx.sess.mir_opt_level() < 4 {\n             return;\n         }\n         trace!(\"Running ConstGoto on {:?}\", body.source);"}, {"sha": "e5fb0e597c0c5c0493c20d9bc7b735780e4b3d78", "filename": "compiler/rustc_mir/src/transform/const_prop.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f3b8920d4bcd9cc55ea2b5041f4341c1337933f8/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3b8920d4bcd9cc55ea2b5041f4341c1337933f8/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_prop.rs?ref=f3b8920d4bcd9cc55ea2b5041f4341c1337933f8", "patch": "@@ -725,7 +725,7 @@ impl<'mir, 'tcx> ConstPropagator<'mir, 'tcx> {\n             return None;\n         }\n \n-        if self.tcx.sess.mir_opt_level() >= 3 {\n+        if self.tcx.sess.mir_opt_level() >= 4 {\n             self.eval_rvalue_with_identities(rvalue, place)\n         } else {\n             self.use_ecx(|this| this.ecx.eval_rvalue_into_place(rvalue, place))\n@@ -1253,7 +1253,7 @@ impl<'mir, 'tcx> MutVisitor<'tcx> for ConstPropagator<'mir, 'tcx> {\n             TerminatorKind::SwitchInt { ref mut discr, .. } => {\n                 // FIXME: This is currently redundant with `visit_operand`, but sadly\n                 // always visiting operands currently causes a perf regression in LLVM codegen, so\n-                // `visit_operand` currently only runs for propagates places for `mir_opt_level=3`.\n+                // `visit_operand` currently only runs for propagates places for `mir_opt_level=4`.\n                 self.propagate_operand(discr)\n             }\n             // None of these have Operands to const-propagate."}, {"sha": "c4b51099f538953a2927a1213db0d8ea8becfefd", "filename": "compiler/rustc_mir/src/transform/deduplicate_blocks.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3b8920d4bcd9cc55ea2b5041f4341c1337933f8/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fdeduplicate_blocks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3b8920d4bcd9cc55ea2b5041f4341c1337933f8/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fdeduplicate_blocks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fdeduplicate_blocks.rs?ref=f3b8920d4bcd9cc55ea2b5041f4341c1337933f8", "patch": "@@ -16,7 +16,7 @@ pub struct DeduplicateBlocks;\n \n impl<'tcx> MirPass<'tcx> for DeduplicateBlocks {\n     fn run_pass(&self, tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n-        if tcx.sess.mir_opt_level() < 3 {\n+        if tcx.sess.mir_opt_level() < 4 {\n             return;\n         }\n         debug!(\"Running DeduplicateBlocks on `{:?}`\", body.source);"}, {"sha": "4aaa0baa9f46a26fb640f59b73e5f322eb84c6db", "filename": "compiler/rustc_mir/src/transform/multiple_return_terminators.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3b8920d4bcd9cc55ea2b5041f4341c1337933f8/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmultiple_return_terminators.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3b8920d4bcd9cc55ea2b5041f4341c1337933f8/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmultiple_return_terminators.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmultiple_return_terminators.rs?ref=f3b8920d4bcd9cc55ea2b5041f4341c1337933f8", "patch": "@@ -10,7 +10,7 @@ pub struct MultipleReturnTerminators;\n \n impl<'tcx> MirPass<'tcx> for MultipleReturnTerminators {\n     fn run_pass(&self, tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n-        if tcx.sess.mir_opt_level() < 3 {\n+        if tcx.sess.mir_opt_level() < 4 {\n             return;\n         }\n "}, {"sha": "658c6b6e9db20086855c89e94b73799352195b87", "filename": "compiler/rustc_mir/src/transform/unreachable_prop.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f3b8920d4bcd9cc55ea2b5041f4341c1337933f8/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Funreachable_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3b8920d4bcd9cc55ea2b5041f4341c1337933f8/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Funreachable_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Funreachable_prop.rs?ref=f3b8920d4bcd9cc55ea2b5041f4341c1337933f8", "patch": "@@ -12,8 +12,8 @@ pub struct UnreachablePropagation;\n \n impl MirPass<'_> for UnreachablePropagation {\n     fn run_pass<'tcx>(&self, tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n-        if tcx.sess.mir_opt_level() < 3 {\n-            // Enable only under -Zmir-opt-level=3 as in some cases (check the deeply-nested-opt\n+        if tcx.sess.mir_opt_level() < 4 {\n+            // Enable only under -Zmir-opt-level=4 as in some cases (check the deeply-nested-opt\n             // perf benchmark) LLVM may spend quite a lot of time optimizing the generated code.\n             return;\n         }"}]}