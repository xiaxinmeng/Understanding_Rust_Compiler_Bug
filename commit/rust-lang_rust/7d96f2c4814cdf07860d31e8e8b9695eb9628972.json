{"sha": "7d96f2c4814cdf07860d31e8e8b9695eb9628972", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkOTZmMmM0ODE0Y2RmMDc4NjBkMzFlOGU4Yjk2OTVlYjk2Mjg5NzI=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-11-20T11:25:44Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-11-20T11:25:44Z"}, "message": "Document qualify_consts more", "tree": {"sha": "7081ff4bdf88c0bbdeff02bc10ea0bc4079d4df8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7081ff4bdf88c0bbdeff02bc10ea0bc4079d4df8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d96f2c4814cdf07860d31e8e8b9695eb9628972", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d96f2c4814cdf07860d31e8e8b9695eb9628972", "html_url": "https://github.com/rust-lang/rust/commit/7d96f2c4814cdf07860d31e8e8b9695eb9628972", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d96f2c4814cdf07860d31e8e8b9695eb9628972/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f70abe8d07023bc58cac03a989ddbd37332fa10f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f70abe8d07023bc58cac03a989ddbd37332fa10f", "html_url": "https://github.com/rust-lang/rust/commit/f70abe8d07023bc58cac03a989ddbd37332fa10f"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "f8ecd9634579aa2c69d08b2983ac0cde84bdd5dc", "filename": "src/librustc_mir/transform/qualify_consts.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7d96f2c4814cdf07860d31e8e8b9695eb9628972/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d96f2c4814cdf07860d31e8e8b9695eb9628972/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs?ref=7d96f2c4814cdf07860d31e8e8b9695eb9628972", "patch": "@@ -247,11 +247,16 @@ impl<'a, 'tcx> Qualifier<'a, 'tcx, 'tcx> {\n             let mut dest = dest;\n             let index = loop {\n                 match dest {\n+                    // with `const_let` active, we treat all locals equal\n                     Place::Local(index) => break *index,\n+                    // projections are transparent for assignments\n+                    // we qualify the entire destination at once, even if just a field would have\n+                    // stricter qualification\n                     Place::Projection(proj) => dest = &proj.base,\n                     Place::Promoted(..) => bug!(\"promoteds don't exist yet during promotion\"),\n                     Place::Static(..) => {\n-                        // Catch more errors in the destination.\n+                        // Catch more errors in the destination. `visit_place` also checks that we\n+                        // do not try to access statics from constants or try to mutate statics\n                         self.visit_place(\n                             dest,\n                             PlaceContext::MutatingUse(MutatingUseContext::Store),"}]}