{"sha": "6a4276d30c87233bc6dad983ae91c7a9181fc91a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhNDI3NmQzMGM4NzIzM2JjNmRhZDk4M2FlOTFjN2E5MTgxZmM5MWE=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-07-20T19:30:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-20T19:30:20Z"}, "message": "Rollup merge of #74376 - lcnr:type-dependent-path-cleanup, r=eddyb\n\ntest caching opt_const_param_of on disc\n\nFollowup to #74113, implements parts of #74360\n\nTried caching `opt_const_param_of` on disk and adding an early exit if `tcx.dep_kind(def_id) != DefKind::AnonConst`.\n\nEnded up causing a perf regression instead, so we just remove the FIXME and a short note to `opt_const_param_of`.\n\nr? @eddyb", "tree": {"sha": "a01de942cdffd0eabfdc67e86ade802d59ee3dce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a01de942cdffd0eabfdc67e86ade802d59ee3dce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a4276d30c87233bc6dad983ae91c7a9181fc91a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfFfDMCRBK7hj4Ov3rIwAAdHIIAHhJIx07i/h/Kp1Lky6xt3uy\nMowguKUrya33dkc4jRAuEB2xQvfw7SntsuboP8urB7D9eh3mPIK3kCH1sDB1e63V\ngTMDzno8xMMEgkv3C/MvU2jYyh4Zf7x32n7SR07PbBbg5xzp8BIwsQNcuyX8WBSx\nTJzQse3vSGP7b1EIQm+fuYvFiqhfBu89C8bP2XAfHmgg/qMJizqCmzetW8an9rA9\nHQQeM0TFyeZKgghRS/oAvG1CQzBfiqJ57PkAaN3YUU/NIiWJ78WW5jIjpbNs7nLg\nXQf0uc4YtfzUN5Yh8FlKhORmzTiFRnPpru1l2OgvVAZrfO+TQfugTb8Qpt3WnMA=\n=2vMW\n-----END PGP SIGNATURE-----\n", "payload": "tree a01de942cdffd0eabfdc67e86ade802d59ee3dce\nparent 991da05c32c98ec58f2f312b6dca96d998dbaf34\nparent e8d16fdf9f95e4110df53650779be842b6749f60\nauthor Manish Goregaokar <manishsmail@gmail.com> 1595273420 -0700\ncommitter GitHub <noreply@github.com> 1595273420 -0700\n\nRollup merge of #74376 - lcnr:type-dependent-path-cleanup, r=eddyb\n\ntest caching opt_const_param_of on disc\n\nFollowup to #74113, implements parts of #74360\n\nTried caching `opt_const_param_of` on disk and adding an early exit if `tcx.dep_kind(def_id) != DefKind::AnonConst`.\n\nEnded up causing a perf regression instead, so we just remove the FIXME and a short note to `opt_const_param_of`.\n\nr? @eddyb\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a4276d30c87233bc6dad983ae91c7a9181fc91a", "html_url": "https://github.com/rust-lang/rust/commit/6a4276d30c87233bc6dad983ae91c7a9181fc91a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a4276d30c87233bc6dad983ae91c7a9181fc91a/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "991da05c32c98ec58f2f312b6dca96d998dbaf34", "url": "https://api.github.com/repos/rust-lang/rust/commits/991da05c32c98ec58f2f312b6dca96d998dbaf34", "html_url": "https://github.com/rust-lang/rust/commit/991da05c32c98ec58f2f312b6dca96d998dbaf34"}, {"sha": "e8d16fdf9f95e4110df53650779be842b6749f60", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8d16fdf9f95e4110df53650779be842b6749f60", "html_url": "https://github.com/rust-lang/rust/commit/e8d16fdf9f95e4110df53650779be842b6749f60"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "f479a030d6325fb2a7e18aaa876b117e90859f36", "filename": "src/librustc_middle/query/mod.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6a4276d30c87233bc6dad983ae91c7a9181fc91a/src%2Flibrustc_middle%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a4276d30c87233bc6dad983ae91c7a9181fc91a/src%2Flibrustc_middle%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fquery%2Fmod.rs?ref=6a4276d30c87233bc6dad983ae91c7a9181fc91a", "patch": "@@ -103,9 +103,13 @@ rustc_queries! {\n         /// // ^ While calling `opt_const_param_of` for other bodies returns `None`.\n         /// }\n         /// ```\n+        // It looks like caching this query on disk actually slightly\n+        // worsened performance in #74376.\n+        //\n+        // Once const generics are more prevalently used, we might want to\n+        // consider only caching calls returning `Some`.\n         query opt_const_param_of(key: LocalDefId) -> Option<DefId> {\n             desc { |tcx| \"computing the optional const parameter of `{}`\", tcx.def_path_str(key.to_def_id()) }\n-            // FIXME(#74113): consider storing this query on disk.\n         }\n \n         /// Records the type of every item."}]}