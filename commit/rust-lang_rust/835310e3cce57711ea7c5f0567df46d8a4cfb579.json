{"sha": "835310e3cce57711ea7c5f0567df46d8a4cfb579", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzNTMxMGUzY2NlNTc3MTFlYTdjNWYwNTY3ZGY0NmQ4YTRjZmI1Nzk=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-11-01T10:53:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-01T10:53:29Z"}, "message": "Rollup merge of #78073 - fusion-engineering-forks:inline, r=eddyb\n\nAdd #[inline] to some functions in core::str.\n\nAlmost all str functions already had #[inline].", "tree": {"sha": "fb40a4a74e05a7e0e4cf39fd30cfe1b01fe88cb1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb40a4a74e05a7e0e4cf39fd30cfe1b01fe88cb1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/835310e3cce57711ea7c5f0567df46d8a4cfb579", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfnpOqCRBK7hj4Ov3rIwAAdHIIAI4qeL/P/1uooSadAo14UTvm\nyBejyX0g89Wrq5EBAYlCg+Xb1wjR6CfFC7Y1V9fmiD0tapmqzbjJ8AkuTTN/Udzt\nSIgEfpJCMqS8Eu/tqT1a5tM8QIlAd3WQGW18ElAcCmFZkwjNrf/S2DNe69k/Wgbd\nU+F27wrPl6mHZ5VhMiT5Oqo0AR+Tj+C7tfxpNOMtFZjR0p7XeWojZC7ttYx+wxm0\nZ6WAeO7fy86f4hw59ADuivglgrvg7VRvclKbOdZY+/N5Cl56eEQLf3jJdqLGG93j\nYciS00bv2ClqWtTBAyJYn5IvXlsMtkDyGWDIWDggvltjGCdI3cRcBoJ3+sZCKBM=\n=oQ4o\n-----END PGP SIGNATURE-----\n", "payload": "tree fb40a4a74e05a7e0e4cf39fd30cfe1b01fe88cb1\nparent 1d5b7c3c96a86c96f1fbf1441475028df94d165a\nparent cc850ecba0641f0ec56507ee656ad9a301705c83\nauthor Mara Bos <m-ou.se@m-ou.se> 1604228009 +0100\ncommitter GitHub <noreply@github.com> 1604228009 +0100\n\nRollup merge of #78073 - fusion-engineering-forks:inline, r=eddyb\n\nAdd #[inline] to some functions in core::str.\n\nAlmost all str functions already had #[inline].\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/835310e3cce57711ea7c5f0567df46d8a4cfb579", "html_url": "https://github.com/rust-lang/rust/commit/835310e3cce57711ea7c5f0567df46d8a4cfb579", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/835310e3cce57711ea7c5f0567df46d8a4cfb579/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d5b7c3c96a86c96f1fbf1441475028df94d165a", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d5b7c3c96a86c96f1fbf1441475028df94d165a", "html_url": "https://github.com/rust-lang/rust/commit/1d5b7c3c96a86c96f1fbf1441475028df94d165a"}, {"sha": "cc850ecba0641f0ec56507ee656ad9a301705c83", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc850ecba0641f0ec56507ee656ad9a301705c83", "html_url": "https://github.com/rust-lang/rust/commit/cc850ecba0641f0ec56507ee656ad9a301705c83"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "ccf7b20285cb36615fe229386de0f0b32f453bc4", "filename": "library/core/src/str/error.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/835310e3cce57711ea7c5f0567df46d8a4cfb579/library%2Fcore%2Fsrc%2Fstr%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/835310e3cce57711ea7c5f0567df46d8a4cfb579/library%2Fcore%2Fsrc%2Fstr%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fstr%2Ferror.rs?ref=835310e3cce57711ea7c5f0567df46d8a4cfb579", "patch": "@@ -72,6 +72,7 @@ impl Utf8Error {\n     /// assert_eq!(1, error.valid_up_to());\n     /// ```\n     #[stable(feature = \"utf8_error\", since = \"1.5.0\")]\n+    #[inline]\n     pub fn valid_up_to(&self) -> usize {\n         self.valid_up_to\n     }\n@@ -92,6 +93,7 @@ impl Utf8Error {\n     ///\n     /// [U+FFFD]: ../../std/char/constant.REPLACEMENT_CHARACTER.html\n     #[stable(feature = \"utf8_error_error_len\", since = \"1.20.0\")]\n+    #[inline]\n     pub fn error_len(&self) -> Option<usize> {\n         self.error_len.map(|len| len as usize)\n     }"}, {"sha": "28cd350019ebf1603b200c3bb1ba64c697c8fc73", "filename": "library/core/src/str/iter.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/835310e3cce57711ea7c5f0567df46d8a4cfb579/library%2Fcore%2Fsrc%2Fstr%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/835310e3cce57711ea7c5f0567df46d8a4cfb579/library%2Fcore%2Fsrc%2Fstr%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fstr%2Fiter.rs?ref=835310e3cce57711ea7c5f0567df46d8a4cfb579", "patch": "@@ -326,6 +326,7 @@ unsafe impl TrustedLen for Bytes<'_> {}\n #[doc(hidden)]\n #[unstable(feature = \"trusted_random_access\", issue = \"none\")]\n unsafe impl TrustedRandomAccess for Bytes<'_> {\n+    #[inline]\n     fn may_have_side_effect() -> bool {\n         false\n     }"}, {"sha": "ab0c8739330304d4f1d73fdc7b6efb6da814b511", "filename": "library/core/src/str/mod.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/835310e3cce57711ea7c5f0567df46d8a4cfb579/library%2Fcore%2Fsrc%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/835310e3cce57711ea7c5f0567df46d8a4cfb579/library%2Fcore%2Fsrc%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fstr%2Fmod.rs?ref=835310e3cce57711ea7c5f0567df46d8a4cfb579", "patch": "@@ -1712,6 +1712,7 @@ impl str {\n     ///\n     /// assert_eq!(\"Hello\\tworld\", s.trim());\n     /// ```\n+    #[inline]\n     #[must_use = \"this returns the trimmed string as a slice, \\\n                   without modifying the original\"]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -1749,6 +1750,7 @@ impl str {\n     /// let s = \"  \u05e2\u05d1\u05e8\u05d9\u05ea  \";\n     /// assert!(Some('\u05e2') == s.trim_start().chars().next());\n     /// ```\n+    #[inline]\n     #[must_use = \"this returns the trimmed string as a new slice, \\\n                   without modifying the original\"]\n     #[stable(feature = \"trim_direction\", since = \"1.30.0\")]\n@@ -1786,6 +1788,7 @@ impl str {\n     /// let s = \"  \u05e2\u05d1\u05e8\u05d9\u05ea  \";\n     /// assert!(Some('\u05ea') == s.trim_end().chars().rev().next());\n     /// ```\n+    #[inline]\n     #[must_use = \"this returns the trimmed string as a new slice, \\\n                   without modifying the original\"]\n     #[stable(feature = \"trim_direction\", since = \"1.30.0\")]\n@@ -1824,6 +1827,7 @@ impl str {\n     /// let s = \"  \u05e2\u05d1\u05e8\u05d9\u05ea\";\n     /// assert!(Some('\u05e2') == s.trim_left().chars().next());\n     /// ```\n+    #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[rustc_deprecated(\n         since = \"1.33.0\",\n@@ -1865,6 +1869,7 @@ impl str {\n     /// let s = \"\u05e2\u05d1\u05e8\u05d9\u05ea  \";\n     /// assert!(Some('\u05ea') == s.trim_right().chars().rev().next());\n     /// ```\n+    #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[rustc_deprecated(\n         since = \"1.33.0\",\n@@ -2260,6 +2265,7 @@ impl str {\n     /// assert_eq!(\"GR\u00fc\u00dfE, J\u00fcRGEN \u2764\", s);\n     /// ```\n     #[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]\n+    #[inline]\n     pub fn make_ascii_uppercase(&mut self) {\n         // SAFETY: safe because we transmute two types with the same layout.\n         let me = unsafe { self.as_bytes_mut() };\n@@ -2286,6 +2292,7 @@ impl str {\n     /// assert_eq!(\"gr\u00dc\u00dfe, j\u00dcrgen \u2764\", s);\n     /// ```\n     #[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]\n+    #[inline]\n     pub fn make_ascii_lowercase(&mut self) {\n         // SAFETY: safe because we transmute two types with the same layout.\n         let me = unsafe { self.as_bytes_mut() };\n@@ -2423,6 +2430,7 @@ impl AsRef<[u8]> for str {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl Default for &str {\n     /// Creates an empty str\n+    #[inline]\n     fn default() -> Self {\n         \"\"\n     }\n@@ -2431,6 +2439,7 @@ impl Default for &str {\n #[stable(feature = \"default_mut_str\", since = \"1.28.0\")]\n impl Default for &mut str {\n     /// Creates an empty mutable str\n+    #[inline]\n     fn default() -> Self {\n         // SAFETY: The empty string is valid UTF-8.\n         unsafe { from_utf8_unchecked_mut(&mut []) }"}]}