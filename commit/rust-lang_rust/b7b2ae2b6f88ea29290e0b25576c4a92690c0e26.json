{"sha": "b7b2ae2b6f88ea29290e0b25576c4a92690c0e26", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3YjJhZTJiNmY4OGVhMjkyOTBlMGIyNTU3NmM0YTkyNjkwYzBlMjY=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-04-04T09:07:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-04-04T09:07:10Z"}, "message": "Rollup merge of #49179 - varkor:future-deprecation, r=QuietMisdreavus,GuillaumeGomez\n\nHandle future deprecation annotations\n\nThis adds special handling to the `since` parameter of the `deprecated` attribute: in particular, if the `since` version exceeds the version of the compiler, the deprecation notice will not be printed; but a note is added to the documentation stating that the item will be deprecated in a later version.\n\n(I've used `since` for this, rather than adding a new attribute, because it's more seamless and, I feel, intuitive. Plus it involves less code churn.)\n\n![image](https://user-images.githubusercontent.com/3943692/37611317-ef5cdf16-2b99-11e8-8251-e35e8f7b0137.png)\n![image](https://user-images.githubusercontent.com/3943692/37611323-f748c2d0-2b99-11e8-966b-11408c73d416.png)\n\nThis is a prerequisite for doing things renaming methods in the standard library (e.g. #30459). Resolves #30785.", "tree": {"sha": "f0b86b0d4b20c17cc0a29484d6b6d271357c4acb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f0b86b0d4b20c17cc0a29484d6b6d271357c4acb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7b2ae2b6f88ea29290e0b25576c4a92690c0e26", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaxJW+CRBK7hj4Ov3rIwAAdHIIAKAFUxtufZkA/2X/jHT2dED5\nR3xAHmJbZ+lEBZP6gfakTimZq+YKskJFJElh9IKvscBwhXNDGa8QRQvGbdg2Jmdy\niJXYlxTHoxEnX1Nhe0ggUZXv7NC7+YZadlEKDuMKJG5qCqABWZMdr2safwzH0uiG\ndw5GevttgLKw+oEUiRlYY/O3cWIljWU+aBbZHIBFMzDWvq/ySyQHAdxvpRu7DYFZ\njCToJnOHSua2Ju51iL2XoVN0gXYMAHdOUsXlTr3t1evymQt+vfOu28BA+F/NPLgk\nOhxJcg/r5pcbWwMH85ziWnzBfXLc6VqgCog5sW3CTd2K3r3uSBD3nRzswLxqXlk=\n=tKJU\n-----END PGP SIGNATURE-----\n", "payload": "tree f0b86b0d4b20c17cc0a29484d6b6d271357c4acb\nparent 5758c2dd14fd29caf7c7bb2123eb6b23443b9233\nparent b2ed9dd546e33ded4a80acd02e1710fe811936b2\nauthor kennytm <kennytm@gmail.com> 1522832830 +0200\ncommitter GitHub <noreply@github.com> 1522832830 +0200\n\nRollup merge of #49179 - varkor:future-deprecation, r=QuietMisdreavus,GuillaumeGomez\n\nHandle future deprecation annotations\n\nThis adds special handling to the `since` parameter of the `deprecated` attribute: in particular, if the `since` version exceeds the version of the compiler, the deprecation notice will not be printed; but a note is added to the documentation stating that the item will be deprecated in a later version.\n\n(I've used `since` for this, rather than adding a new attribute, because it's more seamless and, I feel, intuitive. Plus it involves less code churn.)\n\n![image](https://user-images.githubusercontent.com/3943692/37611317-ef5cdf16-2b99-11e8-8251-e35e8f7b0137.png)\n![image](https://user-images.githubusercontent.com/3943692/37611323-f748c2d0-2b99-11e8-966b-11408c73d416.png)\n\nThis is a prerequisite for doing things renaming methods in the standard library (e.g. #30459). Resolves #30785.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7b2ae2b6f88ea29290e0b25576c4a92690c0e26", "html_url": "https://github.com/rust-lang/rust/commit/b7b2ae2b6f88ea29290e0b25576c4a92690c0e26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7b2ae2b6f88ea29290e0b25576c4a92690c0e26/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5758c2dd14fd29caf7c7bb2123eb6b23443b9233", "url": "https://api.github.com/repos/rust-lang/rust/commits/5758c2dd14fd29caf7c7bb2123eb6b23443b9233", "html_url": "https://github.com/rust-lang/rust/commit/5758c2dd14fd29caf7c7bb2123eb6b23443b9233"}, {"sha": "b2ed9dd546e33ded4a80acd02e1710fe811936b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2ed9dd546e33ded4a80acd02e1710fe811936b2", "html_url": "https://github.com/rust-lang/rust/commit/b2ed9dd546e33ded4a80acd02e1710fe811936b2"}], "stats": {"total": 84, "additions": 78, "deletions": 6}, "files": [{"sha": "328b2db2b58282ade9b5d6267842fb50af59aa29", "filename": "src/librustc/middle/stability.rs", "status": "modified", "additions": 36, "deletions": 2, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/b7b2ae2b6f88ea29290e0b25576c4a92690c0e26/src%2Flibrustc%2Fmiddle%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7b2ae2b6f88ea29290e0b25576c4a92690c0e26/src%2Flibrustc%2Fmiddle%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fstability.rs?ref=b7b2ae2b6f88ea29290e0b25576c4a92690c0e26", "patch": "@@ -470,6 +470,30 @@ pub fn check_unstable_api_usage<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>) {\n     tcx.hir.krate().visit_all_item_likes(&mut checker.as_deep_visitor());\n }\n \n+/// Check whether an item marked with `deprecated(since=\"X\")` is currently\n+/// deprecated (i.e. whether X is not greater than the current rustc version).\n+pub fn deprecation_in_effect(since: &str) -> bool {\n+    fn parse_version(ver: &str) -> Vec<u32> {\n+        // We ignore non-integer components of the version (e.g. \"nightly\").\n+        ver.split(|c| c == '.' || c == '-').flat_map(|s| s.parse()).collect()\n+    }\n+\n+    if let Some(rustc) = option_env!(\"CFG_RELEASE\") {\n+        let since: Vec<u32> = parse_version(since);\n+        let rustc: Vec<u32> = parse_version(rustc);\n+        // We simply treat invalid `since` attributes as relating to a previous\n+        // Rust version, thus always displaying the warning.\n+        if since.len() != 3 {\n+            return true;\n+        }\n+        since <= rustc\n+    } else {\n+        // By default, a deprecation warning applies to\n+        // the current version of the compiler.\n+        true\n+    }\n+}\n+\n struct Checker<'a, 'tcx: 'a> {\n     tcx: TyCtxt<'a, 'tcx, 'tcx>,\n }\n@@ -559,9 +583,19 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n         // Deprecated attributes apply in-crate and cross-crate.\n         if let Some(id) = id {\n             if let Some(depr_entry) = self.lookup_deprecation_entry(def_id) {\n+                // If the deprecation is scheduled for a future Rust\n+                // version, then we should display no warning message.\n+                let deprecated_in_future_version = if let Some(sym) = depr_entry.attr.since {\n+                    let since = sym.as_str();\n+                    !deprecation_in_effect(&since)\n+                } else {\n+                    false\n+                };\n+\n                 let parent_def_id = self.hir.local_def_id(self.hir.get_parent(id));\n-                let skip = self.lookup_deprecation_entry(parent_def_id)\n-                    .map_or(false, |parent_depr| parent_depr.same_origin(&depr_entry));\n+                let skip = deprecated_in_future_version ||\n+                           self.lookup_deprecation_entry(parent_def_id)\n+                               .map_or(false, |parent_depr| parent_depr.same_origin(&depr_entry));\n                 if !skip {\n                     lint_deprecated(def_id, id, depr_entry.attr.note);\n                 }"}, {"sha": "ab292cdac6b2125b0940e3cc7e65bae7bb3085e0", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/b7b2ae2b6f88ea29290e0b25576c4a92690c0e26/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7b2ae2b6f88ea29290e0b25576c4a92690c0e26/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=b7b2ae2b6f88ea29290e0b25576c4a92690c0e26", "patch": "@@ -2113,9 +2113,15 @@ fn short_stability(item: &clean::Item, cx: &Context, show_reason: bool) -> Vec<S\n             } else {\n                 String::new()\n             };\n-            let text = format!(\"Deprecated{}{}\",\n-                               since,\n-                               MarkdownHtml(&deprecated_reason));\n+            let text = if stability::deprecation_in_effect(&stab.deprecated_since) {\n+                format!(\"Deprecated{}{}\",\n+                        since,\n+                        MarkdownHtml(&deprecated_reason))\n+            } else {\n+                format!(\"Deprecating in {}{}\",\n+                        Escape(&stab.deprecated_since),\n+                        MarkdownHtml(&deprecated_reason))\n+            };\n             stability.push(format!(\"<div class='stab deprecated'>{}</div>\", text))\n         };\n \n@@ -2165,7 +2171,15 @@ fn short_stability(item: &clean::Item, cx: &Context, show_reason: bool) -> Vec<S\n             String::new()\n         };\n \n-        let text = format!(\"Deprecated{}{}\", since, MarkdownHtml(&note));\n+        let text = if stability::deprecation_in_effect(&depr.since) {\n+            format!(\"Deprecated{}{}\",\n+                    since,\n+                    MarkdownHtml(&note))\n+        } else {\n+            format!(\"Deprecating in {}{}\",\n+                    Escape(&depr.since),\n+                    MarkdownHtml(&note))\n+        };\n         stability.push(format!(\"<div class='stab deprecated'>{}</div>\", text))\n     }\n "}, {"sha": "93eb6b6b11544b0b9c6ec7ad4efc3b0c96d5196a", "filename": "src/test/compile-fail/deprecation-lint.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b7b2ae2b6f88ea29290e0b25576c4a92690c0e26/src%2Ftest%2Fcompile-fail%2Fdeprecation-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7b2ae2b6f88ea29290e0b25576c4a92690c0e26/src%2Ftest%2Fcompile-fail%2Fdeprecation-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdeprecation-lint.rs?ref=b7b2ae2b6f88ea29290e0b25576c4a92690c0e26", "patch": "@@ -180,6 +180,11 @@ mod this_crate {\n     #[deprecated(since = \"1.0.0\", note = \"text\")]\n     pub fn deprecated_text() {}\n \n+    #[deprecated(since = \"99.99.99\", note = \"text\")]\n+    pub fn deprecated_future() {}\n+    #[deprecated(since = \"99.99.99\", note = \"text\")]\n+    pub fn deprecated_future_text() {}\n+\n     pub struct MethodTester;\n \n     impl MethodTester {\n@@ -266,6 +271,9 @@ mod this_crate {\n         <Foo>::trait_deprecated_text(&foo); //~ ERROR use of deprecated item 'this_crate::Trait::trait_deprecated_text': text\n         <Foo as Trait>::trait_deprecated_text(&foo); //~ ERROR use of deprecated item 'this_crate::Trait::trait_deprecated_text': text\n \n+        deprecated_future(); // Fine; no error.\n+        deprecated_future_text(); // Fine; no error.\n+\n         let _ = DeprecatedStruct {\n             //~^ ERROR use of deprecated item 'this_crate::DeprecatedStruct': text\n             i: 0 //~ ERROR use of deprecated item 'this_crate::DeprecatedStruct::i': text"}, {"sha": "6feb98dad09c6511ff940a7f6d6fe21f6f359669", "filename": "src/test/rustdoc/deprecated-future.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b7b2ae2b6f88ea29290e0b25576c4a92690c0e26/src%2Ftest%2Frustdoc%2Fdeprecated-future.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7b2ae2b6f88ea29290e0b25576c4a92690c0e26/src%2Ftest%2Frustdoc%2Fdeprecated-future.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fdeprecated-future.rs?ref=b7b2ae2b6f88ea29290e0b25576c4a92690c0e26", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(deprecated)]\n+\n+// @has deprecated_future/struct.S.html '//*[@class=\"stab deprecated\"]' \\\n+//      'Deprecating in 99.99.99: effectively never'\n+#[deprecated(since = \"99.99.99\", note = \"effectively never\")]\n+pub struct S;"}]}