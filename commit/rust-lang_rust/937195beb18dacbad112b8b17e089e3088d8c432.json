{"sha": "937195beb18dacbad112b8b17e089e3088d8c432", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzNzE5NWJlYjE4ZGFjYmFkMTEyYjhiMTdlMDg5ZTMwODhkOGM0MzI=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-11-17T04:36:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-17T04:36:21Z"}, "message": "Rollup merge of #66466 - RalfJung:seh, r=oli-obk\n\nmiri panic_unwind: fix hack for SEH platforms\n\nThe old hack didn't work as we ended up duplicating the `eh_personality` lang item...\n\nI have no idea if rustc cares that `eh_catch_typeinfo` has a certain shape, but better safe than sorry. I cannot test this locally.\n\nr? @oli-obk Cc @Aaron1011", "tree": {"sha": "fd44c4744dda42414321096fc9de95c1dabf4696", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd44c4744dda42414321096fc9de95c1dabf4696"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/937195beb18dacbad112b8b17e089e3088d8c432", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd0M5FCRBK7hj4Ov3rIwAAdHIIAAghG+ch2Gyrjmy57JpWngFL\nj62w2xEtEA5uMDrhM3FAQbb6l+YSUBhvVNT8d9l8/7b32ZyeACT3YFdKj6bJ1uEk\nlwmq8o9DBxWQ+B+SPyzBzI/ndPjUWSIPPpjsCFAL72rY55rHFeR2n3yuscnOwovY\nYOkJSG4PJjo2KtVGnB5H8kFtui0O29MXw6rS/rF1IizHfTvNMdnNb3UlYJzl7U07\n2RLbeOTFrqolQcWicQ+24i2/7GEHwMaz8/4YN71Z1vk8my4qfaAqcysSMFwyBECJ\njlRexMyBnTE6dldHISqaTkXSMKnxEnkLrjK6Wu2tuMoZXKK9no3pdHiVthv1wIo=\n=hg/k\n-----END PGP SIGNATURE-----\n", "payload": "tree fd44c4744dda42414321096fc9de95c1dabf4696\nparent 404081fd480d468318ded3650ff53bdae507293e\nparent e8ff4656fcfc4df97f5d0124c999cb5392a15dcb\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1573965381 +0900\ncommitter GitHub <noreply@github.com> 1573965381 +0900\n\nRollup merge of #66466 - RalfJung:seh, r=oli-obk\n\nmiri panic_unwind: fix hack for SEH platforms\n\nThe old hack didn't work as we ended up duplicating the `eh_personality` lang item...\n\nI have no idea if rustc cares that `eh_catch_typeinfo` has a certain shape, but better safe than sorry. I cannot test this locally.\n\nr? @oli-obk Cc @Aaron1011\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/937195beb18dacbad112b8b17e089e3088d8c432", "html_url": "https://github.com/rust-lang/rust/commit/937195beb18dacbad112b8b17e089e3088d8c432", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/937195beb18dacbad112b8b17e089e3088d8c432/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "404081fd480d468318ded3650ff53bdae507293e", "url": "https://api.github.com/repos/rust-lang/rust/commits/404081fd480d468318ded3650ff53bdae507293e", "html_url": "https://github.com/rust-lang/rust/commit/404081fd480d468318ded3650ff53bdae507293e"}, {"sha": "e8ff4656fcfc4df97f5d0124c999cb5392a15dcb", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8ff4656fcfc4df97f5d0124c999cb5392a15dcb", "html_url": "https://github.com/rust-lang/rust/commit/e8ff4656fcfc4df97f5d0124c999cb5392a15dcb"}], "stats": {"total": 26, "additions": 20, "deletions": 6}, "files": [{"sha": "d97a7a8a87d8d20ae244cc0585d9614e6bd6218f", "filename": "src/libpanic_unwind/lib.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/937195beb18dacbad112b8b17e089e3088d8c432/src%2Flibpanic_unwind%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/937195beb18dacbad112b8b17e089e3088d8c432/src%2Flibpanic_unwind%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibpanic_unwind%2Flib.rs?ref=937195beb18dacbad112b8b17e089e3088d8c432", "patch": "@@ -39,11 +39,6 @@ cfg_if::cfg_if! {\n     if #[cfg(miri)] {\n         #[path = \"miri.rs\"]\n         mod imp;\n-        // On MSVC we need the SEH lang items as well...\n-        // This should match the conditions of the `seh.rs` import below.\n-        #[cfg(all(target_env = \"msvc\", not(target_arch = \"aarch64\")))]\n-        #[allow(unused)]\n-        mod seh;\n     } else if #[cfg(target_os = \"emscripten\")] {\n         #[path = \"emcc.rs\"]\n         mod imp;"}, {"sha": "f26c42fd4bcbaac9c707b22ff7b50fd961b64e98", "filename": "src/libpanic_unwind/miri.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/937195beb18dacbad112b8b17e089e3088d8c432/src%2Flibpanic_unwind%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/937195beb18dacbad112b8b17e089e3088d8c432/src%2Flibpanic_unwind%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibpanic_unwind%2Fmiri.rs?ref=937195beb18dacbad112b8b17e089e3088d8c432", "patch": "@@ -1,3 +1,5 @@\n+#![allow(nonstandard_style)]\n+\n use core::any::Any;\n use alloc::boxed::Box;\n \n@@ -13,11 +15,28 @@ pub unsafe fn cleanup(ptr: *mut u8) -> Box<dyn Any + Send> {\n     Box::from_raw(ptr)\n }\n \n-\n // This is required by the compiler to exist (e.g., it's a lang item),\n // but is never used by Miri. Therefore, we just use a stub here\n #[lang = \"eh_personality\"]\n #[cfg(not(test))]\n fn rust_eh_personality() {\n     unsafe { core::intrinsics::abort() }\n }\n+\n+// The rest is required on *some* targets to exist (specifically, MSVC targets that use SEH).\n+// We just add it on all targets. Copied from `seh.rs`.\n+#[repr(C)]\n+pub struct _TypeDescriptor {\n+    pub pVFTable: *const u8,\n+    pub spare: *mut u8,\n+    pub name: [u8; 11],\n+}\n+\n+const TYPE_NAME: [u8; 11] = *b\"rust_panic\\0\";\n+\n+#[cfg_attr(not(test), lang = \"eh_catch_typeinfo\")]\n+static mut TYPE_DESCRIPTOR: _TypeDescriptor = _TypeDescriptor {\n+    pVFTable: core::ptr::null(),\n+    spare: core::ptr::null_mut(),\n+    name: TYPE_NAME,\n+};"}]}