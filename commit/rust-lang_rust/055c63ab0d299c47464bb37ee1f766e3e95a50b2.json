{"sha": "055c63ab0d299c47464bb37ee1f766e3e95a50b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1NWM2M2FiMGQyOTljNDc0NjRiYjM3ZWUxZjc2NmUzZTk1YTUwYjI=", "commit": {"author": {"name": "Tim", "email": "t.diekmann.3dv@gmail.com", "date": "2018-09-06T14:07:13Z"}, "committer": {"name": "Tim", "email": "t.diekmann.3dv@gmail.com", "date": "2018-09-06T14:07:13Z"}, "message": "Remove unchecked_shr/shl from intrinsics", "tree": {"sha": "1c8cb36728c1d868414ee0e905d5340a244e0b68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c8cb36728c1d868414ee0e905d5340a244e0b68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/055c63ab0d299c47464bb37ee1f766e3e95a50b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/055c63ab0d299c47464bb37ee1f766e3e95a50b2", "html_url": "https://github.com/rust-lang/rust/commit/055c63ab0d299c47464bb37ee1f766e3e95a50b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/055c63ab0d299c47464bb37ee1f766e3e95a50b2/comments", "author": null, "committer": null, "parents": [{"sha": "5a8b46d993520af54e5eb3084319837037268b80", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a8b46d993520af54e5eb3084319837037268b80", "html_url": "https://github.com/rust-lang/rust/commit/5a8b46d993520af54e5eb3084319837037268b80"}], "stats": {"total": 36, "additions": 0, "deletions": 36}, "files": [{"sha": "a57307ed12e78a190650d42c37c1ee4b8df29c73", "filename": "src/intrinsic.rs", "status": "modified", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/055c63ab0d299c47464bb37ee1f766e3e95a50b2/src%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/055c63ab0d299c47464bb37ee1f766e3e95a50b2/src%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsic.rs?ref=055c63ab0d299c47464bb37ee1f766e3e95a50b2", "patch": "@@ -443,42 +443,6 @@ impl<'a, 'mir, 'tcx> EvalContextExt<'tcx> for EvalContext<'a, 'mir, 'tcx, super:\n                 self.write_value(value, dest)?;\n             }\n \n-            \"unchecked_shl\" => {\n-                let bits = dest.layout.size.bytes() as u128 * 8;\n-                let l = self.read_value(args[0])?;\n-                let r = self.read_value(args[1])?;\n-                let rval = r.to_scalar()?.to_bytes()?;\n-                if rval >= bits {\n-                    return err!(Intrinsic(\n-                        format!(\"Overflowing shift by {} in unchecked_shl\", rval),\n-                    ));\n-                }\n-                self.binop_ignore_overflow(\n-                    mir::BinOp::Shl,\n-                    l,\n-                    r,\n-                    dest,\n-                )?;\n-            }\n-\n-            \"unchecked_shr\" => {\n-                let bits = dest.layout.size.bytes() as u128 * 8;\n-                let l = self.read_value(args[0])?;\n-                let r = self.read_value(args[1])?;\n-                let rval = r.to_scalar()?.to_bytes()?;\n-                if rval >= bits {\n-                    return err!(Intrinsic(\n-                        format!(\"Overflowing shift by {} in unchecked_shr\", rval),\n-                    ));\n-                }\n-                self.binop_ignore_overflow(\n-                    mir::BinOp::Shr,\n-                    l,\n-                    r,\n-                    dest,\n-                )?;\n-            }\n-\n             \"unchecked_div\" => {\n                 let l = self.read_value(args[0])?;\n                 let r = self.read_value(args[1])?;"}]}