{"sha": "1b839a61c4ac44cd98195da424db00fa7d011b6a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiODM5YTYxYzRhYzQ0Y2Q5ODE5NWRhNDI0ZGIwMGZhN2QwMTFiNmE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-18T23:02:23Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-18T23:02:43Z"}, "message": "rustdoc: Write markdown for fn arguments", "tree": {"sha": "e0fb56bc3211d61d536345fc95c0f1e1ab450a67", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0fb56bc3211d61d536345fc95c0f1e1ab450a67"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b839a61c4ac44cd98195da424db00fa7d011b6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b839a61c4ac44cd98195da424db00fa7d011b6a", "html_url": "https://github.com/rust-lang/rust/commit/1b839a61c4ac44cd98195da424db00fa7d011b6a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b839a61c4ac44cd98195da424db00fa7d011b6a/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29df58d73babbc6bf5af285162ea03170b8ff9ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/29df58d73babbc6bf5af285162ea03170b8ff9ab", "html_url": "https://github.com/rust-lang/rust/commit/29df58d73babbc6bf5af285162ea03170b8ff9ab"}], "stats": {"total": 38, "additions": 34, "deletions": 4}, "files": [{"sha": "ce5ed876b52f37a4c7224bcdac7ef31b4a08fe7c", "filename": "src/rustdoc/gen.rs", "status": "modified", "additions": 34, "deletions": 4, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/1b839a61c4ac44cd98195da424db00fa7d011b6a/src%2Frustdoc%2Fgen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b839a61c4ac44cd98195da424db00fa7d011b6a/src%2Frustdoc%2Fgen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fgen.rs?ref=1b839a61c4ac44cd98195da424db00fa7d011b6a", "patch": "@@ -127,11 +127,39 @@ fn write_args(\n     ctxt: ctxt,\n     args: [doc::argdoc]\n ) {\n-    for arg in args {\n-        ctxt.w.write_str(\"### Argument `\" + arg.name + \"`: \");\n+    if vec::is_not_empty(args) {\n+        ctxt.w.write_line(\"Arguments:\");\n+        ctxt.w.write_line(\"\");\n+        vec::iter(args) {|arg| write_arg(ctxt, arg) };\n+        ctxt.w.write_line(\"\");\n     }\n }\n \n+fn write_arg(ctxt: ctxt, arg: doc::argdoc) {\n+    ctxt.w.write_line(#fmt(\"* %s\", arg.name));\n+}\n+\n+#[test]\n+fn should_write_argument_list() {\n+    let source = \"fn a(b: int, c: int) { }\";\n+    let markdown = test::render(source);\n+    assert str::contains(\n+        markdown,\n+        \"Arguments:\\n\\\n+         \\n\\\n+         * b\\n\\\n+         * c\\n\\\n+         \\n\"\n+    );\n+}\n+\n+#[test]\n+fn should_not_write_arguments_if_none() {\n+    let source = \"fn a() { } fn b() { }\";\n+    let markdown = test::render(source);\n+    assert !str::contains(markdown, \"Arguments\");\n+}\n+\n fn write_return(\n     ctxt: ctxt,\n     return: option<doc::retdoc>\n@@ -157,13 +185,15 @@ fn write_return(\n }\n \n #[cfg(test)]\n-mod tests {\n+mod test {\n     fn render(source: str) -> str {\n         let srv = astsrv::mk_srv_from_str(source);\n         let doc = extract::from_srv(srv, \"\");\n         let doc = attr_pass::mk_pass()(srv, doc);\n         let doc = tystr_pass::mk_pass()(srv, doc);\n-        write_markdown_str(doc)\n+        let markdown = write_markdown_str(doc);\n+        #debug(\"markdown: %s\", markdown);\n+        markdown\n     }\n \n     fn write_markdown_str("}]}