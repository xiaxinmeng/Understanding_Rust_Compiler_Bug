{"sha": "b0d831a48675d54ae7ab9dea2a603c356b79d54b", "node_id": "C_kwDOAAsO6NoAKGIwZDgzMWE0ODY3NWQ1NGFlN2FiOWRlYTJhNjAzYzM1NmI3OWQ1NGI", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-03T20:41:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-03T20:41:54Z"}, "message": "Rollup merge of #98764 - InfRandomness:miri-rustdoc, r=jyn514\n\nadd Miri to the nightly docs\n\nThis is a follow-up to https://github.com/rust-lang/rust/pull/97773 and to https://github.com/rust-lang/rust/pull/98714\n\nIt adds miri to the doc.rust-lang.org/nightly/nightly-rustc](https://doc.rust-lang.org/nightly/nightly-rustc/", "tree": {"sha": "a3889ce17d16db598a5d93e205e1b5cf21fdc498", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3889ce17d16db598a5d93e205e1b5cf21fdc498"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b0d831a48675d54ae7ab9dea2a603c356b79d54b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiwf8SCRBK7hj4Ov3rIwAAh3UIAFmmX+QOPt9yGlLRT0HeHgBw\noi69x+IMSh3WU1wcjoEZtvyprJJmtZw2F3tIJtaYWNbvALgpypJnNbCo55eZj54m\n85zn94TKJInLlPjesFdISfn+maMtc1pUFg/c1+V+m4zpycYwUMKAkEaKhUHHYDvN\nasDalUs19yChy4EGtjySblxoXx7Rz8XKAxq27mO6cUv+DQ+Qx9+XGoBdJHfZBHa2\nzbS3GbzeSMuiTZpgrEPrx51zcmkgGfTo2Zh51mH6Ng8cTrkR4F+Fjl+zCNQnJoRp\nto+yhm3/Y6Jx8r89I6MBIE0QuTHNevj9OrBr3v4zfEThweSbwCPsjjoRHO3xS9k=\n=WPdQ\n-----END PGP SIGNATURE-----\n", "payload": "tree a3889ce17d16db598a5d93e205e1b5cf21fdc498\nparent ff5e5ec71f934f7d8f273151b3843167e14549bc\nparent ed92d88ff4c71e2ae02511c040f0e2a88e57a262\nauthor Ralf Jung <post@ralfj.de> 1656880914 -0400\ncommitter GitHub <noreply@github.com> 1656880914 -0400\n\nRollup merge of #98764 - InfRandomness:miri-rustdoc, r=jyn514\n\nadd Miri to the nightly docs\n\nThis is a follow-up to https://github.com/rust-lang/rust/pull/97773 and to https://github.com/rust-lang/rust/pull/98714\n\nIt adds miri to the doc.rust-lang.org/nightly/nightly-rustc](https://doc.rust-lang.org/nightly/nightly-rustc/\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b0d831a48675d54ae7ab9dea2a603c356b79d54b", "html_url": "https://github.com/rust-lang/rust/commit/b0d831a48675d54ae7ab9dea2a603c356b79d54b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b0d831a48675d54ae7ab9dea2a603c356b79d54b/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff5e5ec71f934f7d8f273151b3843167e14549bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff5e5ec71f934f7d8f273151b3843167e14549bc", "html_url": "https://github.com/rust-lang/rust/commit/ff5e5ec71f934f7d8f273151b3843167e14549bc"}, {"sha": "ed92d88ff4c71e2ae02511c040f0e2a88e57a262", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed92d88ff4c71e2ae02511c040f0e2a88e57a262", "html_url": "https://github.com/rust-lang/rust/commit/ed92d88ff4c71e2ae02511c040f0e2a88e57a262"}], "stats": {"total": 35, "additions": 30, "deletions": 5}, "files": [{"sha": "fa2a530d9db680723263eacb574792bc7340ace7", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b0d831a48675d54ae7ab9dea2a603c356b79d54b/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0d831a48675d54ae7ab9dea2a603c356b79d54b/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=b0d831a48675d54ae7ab9dea2a603c356b79d54b", "patch": "@@ -694,6 +694,7 @@ impl<'a> Builder<'a> {\n                 doc::RustcBook,\n                 doc::CargoBook,\n                 doc::Clippy,\n+                doc::Miri,\n                 doc::EmbeddedBook,\n                 doc::EditionGuide,\n             ),"}, {"sha": "3cf0f9b9f9927f521f669ae4cde8d9a9ff041c6b", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 29, "deletions": 5, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/b0d831a48675d54ae7ab9dea2a603c356b79d54b/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0d831a48675d54ae7ab9dea2a603c356b79d54b/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=b0d831a48675d54ae7ab9dea2a603c356b79d54b", "patch": "@@ -643,7 +643,7 @@ impl Step for Rustc {\n }\n \n macro_rules! tool_doc {\n-    ($tool: ident, $should_run: literal, $path: literal, [$($krate: literal),+ $(,)?] $(,)?) => {\n+    ($tool: ident, $should_run: literal, $path: literal, [$($krate: literal),+ $(,)?], in_tree = $in_tree:expr $(,)?) => {\n         #[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]\n         pub struct $tool {\n             target: TargetSelection,\n@@ -699,6 +699,12 @@ macro_rules! tool_doc {\n                 t!(fs::create_dir_all(&out_dir));\n                 t!(symlink_dir_force(&builder.config, &out, &out_dir));\n \n+                let source_type = if $in_tree == true {\n+                    SourceType::InTree\n+                } else {\n+                    SourceType::Submodule\n+                };\n+\n                 // Build cargo command.\n                 let mut cargo = prepare_tool_cargo(\n                     builder,\n@@ -707,7 +713,7 @@ macro_rules! tool_doc {\n                     target,\n                     \"doc\",\n                     $path,\n-                    SourceType::InTree,\n+                    source_type,\n                     &[],\n                 );\n \n@@ -723,20 +729,38 @@ macro_rules! tool_doc {\n                 cargo.rustdocflag(\"--show-type-layout\");\n                 cargo.rustdocflag(\"--generate-link-to-definition\");\n                 cargo.rustdocflag(\"-Zunstable-options\");\n-                builder.run(&mut cargo.into());\n+                if $in_tree == true {\n+                    builder.run(&mut cargo.into());\n+                } else {\n+                    // Allow out-of-tree docs to fail (since the tool might be in a broken state).\n+                    if !builder.try_run(&mut cargo.into()) {\n+                        builder.info(&format!(\n+                            \"WARNING: tool {} failed to document; ignoring failure because it is an out-of-tree tool\",\n+                            stringify!($tool).to_lowercase(),\n+                        ));\n+                    }\n+                }\n             }\n         }\n     }\n }\n \n-tool_doc!(Rustdoc, \"rustdoc-tool\", \"src/tools/rustdoc\", [\"rustdoc\", \"rustdoc-json-types\"]);\n+tool_doc!(\n+    Rustdoc,\n+    \"rustdoc-tool\",\n+    \"src/tools/rustdoc\",\n+    [\"rustdoc\", \"rustdoc-json-types\"],\n+    in_tree = true\n+);\n tool_doc!(\n     Rustfmt,\n     \"rustfmt-nightly\",\n     \"src/tools/rustfmt\",\n     [\"rustfmt-nightly\", \"rustfmt-config_proc_macro\"],\n+    in_tree = true\n );\n-tool_doc!(Clippy, \"clippy\", \"src/tools/clippy\", [\"clippy_utils\"]);\n+tool_doc!(Clippy, \"clippy\", \"src/tools/clippy\", [\"clippy_utils\"], in_tree = true);\n+tool_doc!(Miri, \"miri\", \"src/tools/miri\", [\"miri\"], in_tree = false);\n \n #[derive(Ord, PartialOrd, Debug, Copy, Clone, Hash, PartialEq, Eq)]\n pub struct ErrorIndex {"}]}