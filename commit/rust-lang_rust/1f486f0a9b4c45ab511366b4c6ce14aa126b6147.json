{"sha": "1f486f0a9b4c45ab511366b4c6ce14aa126b6147", "node_id": "C_kwDOAAsO6NoAKDFmNDg2ZjBhOWI0YzQ1YWI1MTEzNjZiNGM2Y2UxNGFhMTI2YjYxNDc", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-02-14T17:02:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-14T17:02:51Z"}, "message": "Rollup merge of #108003 - chenyukang:yukang/fix-107998, r=compiler-errors\n\nAvoid ICE when the generic_span is empty\n\nFixes #107998\nr? ```@TaKO8Ki```", "tree": {"sha": "ff158326954e0c3762148abb302d197675221fe0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff158326954e0c3762148abb302d197675221fe0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f486f0a9b4c45ab511366b4c6ce14aa126b6147", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj6767CRBK7hj4Ov3rIwAA2wAIAHrCzLw0XfzcT2w8tjy7mStu\nHzdrY45RG6khIC9CP2SHnUcmKWKdVY5XDS6bXZ7SmugxKluwvXiMOxGAY4StWChq\n1CHqAnzzEZ1lgLIpM8Jx6z+dhDE+WmUmTMxwZORg+HeIEOp17i7THSoHyM46652g\nhXi0ZVdHBPj+CwfCSFqYvzUGWjz9Xm/5EqoInpKpA7S04jO/gxHeLmP3+2hYbREo\npZJkpxcEFuoYmBntt0fPM9OVreiSMSYzzkQIVbffdwqrsyP6dlp+qV2RV0PANgR7\n8S0ns4BKxPPb0nNYXY+3WIDivbDpHcybM05WRCRZHbkq9P2Y7Mbk6LdEgJ/M7aU=\n=ENg1\n-----END PGP SIGNATURE-----\n", "payload": "tree ff158326954e0c3762148abb302d197675221fe0\nparent 9ee3c7ac4b25fe6109346d8ad230dd4639385d4b\nparent 3180f1c828636a247777d277f10c9695d7141d20\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1676394171 +0100\ncommitter GitHub <noreply@github.com> 1676394171 +0100\n\nRollup merge of #108003 - chenyukang:yukang/fix-107998, r=compiler-errors\n\nAvoid ICE when the generic_span is empty\n\nFixes #107998\nr? ```@TaKO8Ki```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f486f0a9b4c45ab511366b4c6ce14aa126b6147", "html_url": "https://github.com/rust-lang/rust/commit/1f486f0a9b4c45ab511366b4c6ce14aa126b6147", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f486f0a9b4c45ab511366b4c6ce14aa126b6147/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ee3c7ac4b25fe6109346d8ad230dd4639385d4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ee3c7ac4b25fe6109346d8ad230dd4639385d4b", "html_url": "https://github.com/rust-lang/rust/commit/9ee3c7ac4b25fe6109346d8ad230dd4639385d4b"}, {"sha": "3180f1c828636a247777d277f10c9695d7141d20", "url": "https://api.github.com/repos/rust-lang/rust/commits/3180f1c828636a247777d277f10c9695d7141d20", "html_url": "https://github.com/rust-lang/rust/commit/3180f1c828636a247777d277f10c9695d7141d20"}], "stats": {"total": 49, "additions": 48, "deletions": 1}, "files": [{"sha": "972240f42cf4649b667ecbf286a16ecc8a12654f", "filename": "compiler/rustc_lint/src/context.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1f486f0a9b4c45ab511366b4c6ce14aa126b6147/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f486f0a9b4c45ab511366b4c6ce14aa126b6147/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs?ref=1f486f0a9b4c45ab511366b4c6ce14aa126b6147", "patch": "@@ -837,9 +837,17 @@ pub trait LintContext: Sized {\n                             (use_span, \"'_\".to_owned())\n                         };\n                         debug!(?deletion_span, ?use_span);\n+\n+                        // issue 107998 for the case such as a wrong function pointer type\n+                        // `deletion_span` is empty and there is no need to report lifetime uses here\n+                        let suggestions = if deletion_span.is_empty() {\n+                            vec![(use_span, replace_lt)]\n+                        } else {\n+                            vec![(deletion_span, String::new()), (use_span, replace_lt)]\n+                        };\n                         db.multipart_suggestion(\n                             msg,\n-                            vec![(deletion_span, String::new()), (use_span, replace_lt)],\n+                            suggestions,\n                             Applicability::MachineApplicable,\n                         );\n                     }"}, {"sha": "f32688d205813b454f68648b0d5ef87694c8f62a", "filename": "tests/ui/single-use-lifetime/issue-107998.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1f486f0a9b4c45ab511366b4c6ce14aa126b6147/tests%2Fui%2Fsingle-use-lifetime%2Fissue-107998.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f486f0a9b4c45ab511366b4c6ce14aa126b6147/tests%2Fui%2Fsingle-use-lifetime%2Fissue-107998.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle-use-lifetime%2Fissue-107998.rs?ref=1f486f0a9b4c45ab511366b4c6ce14aa126b6147", "patch": "@@ -0,0 +1,9 @@\n+#![deny(single_use_lifetimes)]\n+\n+fn with<R>(f: &fn<'a>(x: &'a i32) -> R) -> R {\n+    //~^ ERROR function pointer types may not have generic parameters\n+    //~| ERROR lifetime parameter `'a` only used once\n+    f(&3)\n+}\n+\n+fn main() {}"}, {"sha": "e870351de9eaec72dc32327f5e33968a7d58c355", "filename": "tests/ui/single-use-lifetime/issue-107998.stderr", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/1f486f0a9b4c45ab511366b4c6ce14aa126b6147/tests%2Fui%2Fsingle-use-lifetime%2Fissue-107998.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f486f0a9b4c45ab511366b4c6ce14aa126b6147/tests%2Fui%2Fsingle-use-lifetime%2Fissue-107998.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle-use-lifetime%2Fissue-107998.stderr?ref=1f486f0a9b4c45ab511366b4c6ce14aa126b6147", "patch": "@@ -0,0 +1,30 @@\n+error: function pointer types may not have generic parameters\n+  --> $DIR/issue-107998.rs:3:18\n+   |\n+LL | fn with<R>(f: &fn<'a>(x: &'a i32) -> R) -> R {\n+   |                  ^^^^\n+   |\n+help: consider moving the lifetime parameter to a `for` parameter list\n+   |\n+LL - fn with<R>(f: &fn<'a>(x: &'a i32) -> R) -> R {\n+LL + fn with<R>(f: &for<'a> fn(x: &'a i32) -> R) -> R {\n+   |\n+\n+error: lifetime parameter `'a` only used once\n+  --> $DIR/issue-107998.rs:3:19\n+   |\n+LL | fn with<R>(f: &fn<'a>(x: &'a i32) -> R) -> R {\n+   |                   ^^      ---\n+   |                   |       |\n+   |                   |       ...is used only here\n+   |                   |       help: elide the single-use lifetime\n+   |                   this lifetime...\n+   |\n+note: the lint level is defined here\n+  --> $DIR/issue-107998.rs:1:9\n+   |\n+LL | #![deny(single_use_lifetimes)]\n+   |         ^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+"}]}