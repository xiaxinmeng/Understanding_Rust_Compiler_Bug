{"sha": "a3ccbdc90472345bc96fcb3142631a3d75ffb1ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzY2NiZGM5MDQ3MjM0NWJjOTZmY2IzMTQyNjMxYTNkNzVmZmIxYWI=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-09-30T18:44:25Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-09-30T19:32:04Z"}, "message": "rustdoc: Generate valid code for struct-variants\n\nCloses #9587", "tree": {"sha": "5c73223c50315b949cf25b380fe47c9f1fe13600", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c73223c50315b949cf25b380fe47c9f1fe13600"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a3ccbdc90472345bc96fcb3142631a3d75ffb1ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a3ccbdc90472345bc96fcb3142631a3d75ffb1ab", "html_url": "https://github.com/rust-lang/rust/commit/a3ccbdc90472345bc96fcb3142631a3d75ffb1ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a3ccbdc90472345bc96fcb3142631a3d75ffb1ab/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8174618a05c44a9b90806aa7b848cb9b7ab62d25", "url": "https://api.github.com/repos/rust-lang/rust/commits/8174618a05c44a9b90806aa7b848cb9b7ab62d25", "html_url": "https://github.com/rust-lang/rust/commit/8174618a05c44a9b90806aa7b848cb9b7ab62d25"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "4ed91437628b0115af23a9da9279ff9f93bccb7e", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a3ccbdc90472345bc96fcb3142631a3d75ffb1ab/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3ccbdc90472345bc96fcb3142631a3d75ffb1ab/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=a3ccbdc90472345bc96fcb3142631a3d75ffb1ab", "patch": "@@ -1050,7 +1050,7 @@ fn render_method(w: &mut io::Writer, meth: &clean::Item, withlink: bool) {\n \n fn item_struct(w: &mut io::Writer, it: &clean::Item, s: &clean::Struct) {\n     write!(w, \"<pre class='struct'>\");\n-    render_struct(w, it, Some(&s.generics), s.struct_type, s.fields, \"\");\n+    render_struct(w, it, Some(&s.generics), s.struct_type, s.fields, \"\", true);\n     write!(w, \"</pre>\");\n \n     document(w, it);\n@@ -1082,8 +1082,10 @@ fn item_enum(w: &mut io::Writer, it: &clean::Item, e: &clean::Enum) {\n                             write!(w, \"),\\n\");\n                         }\n                         clean::StructVariant(ref s) => {\n+                            write!(w, \"    \");\n                             render_struct(w, v, None, s.struct_type, s.fields,\n-                                          \"    \");\n+                                          \"    \", false);\n+                            write!(w, \",\\n\");\n                         }\n                     }\n                 }\n@@ -1102,17 +1104,19 @@ fn render_struct(w: &mut io::Writer, it: &clean::Item,\n                  g: Option<&clean::Generics>,\n                  ty: doctree::StructType,\n                  fields: &[clean::Item],\n-                 tab: &str) {\n-    write!(w, \"{}struct {}\",\n+                 tab: &str,\n+                 structhead: bool) {\n+    write!(w, \"{}{}{}\",\n            VisSpace(it.visibility),\n+           if structhead {\"struct \"} else {\"\"},\n            it.name.get_ref().as_slice());\n     match g {\n         Some(g) => write!(w, \"{}\", *g),\n         None => {}\n     }\n     match ty {\n         doctree::Plain => {\n-            write!(w, \" \\\\{\\n\");\n+            write!(w, \" \\\\{\\n{}\", tab);\n             for field in fields.iter() {\n                 match field.inner {\n                     clean::StructFieldItem(ref ty) => {"}]}