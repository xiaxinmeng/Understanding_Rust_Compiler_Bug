{"sha": "009f2cf7dd97d952b78bb68a95f661cecfb1562f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwOWYyY2Y3ZGQ5N2Q5NTJiNzhiYjY4YTk1ZjY2MWNlY2ZiMTU2MmY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-09-14T05:08:27Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-09-14T05:08:27Z"}, "message": "Auto merge of #28392 - arielb1:sort-bounds-list, r=eddyb\n\nThe sort key is a (DefId, Name), which is *not* stable between\r\nruns, so we must re-sort when loading.\r\n\r\nFixes #24063\r\nFixes #25467\r\nFixes #27222\r\nFixes #28377\r\n\r\nr? @eddyb", "tree": {"sha": "a3ce07cb1bd9a3cf76afb2a8b8a7c261c605816e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3ce07cb1bd9a3cf76afb2a8b8a7c261c605816e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/009f2cf7dd97d952b78bb68a95f661cecfb1562f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/009f2cf7dd97d952b78bb68a95f661cecfb1562f", "html_url": "https://github.com/rust-lang/rust/commit/009f2cf7dd97d952b78bb68a95f661cecfb1562f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/009f2cf7dd97d952b78bb68a95f661cecfb1562f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "341a91902a9cb030b67a4873aa8f4d93fa488c00", "url": "https://api.github.com/repos/rust-lang/rust/commits/341a91902a9cb030b67a4873aa8f4d93fa488c00", "html_url": "https://github.com/rust-lang/rust/commit/341a91902a9cb030b67a4873aa8f4d93fa488c00"}, {"sha": "8478acf695ccd3bf4abe8c65f153dfbc99f3d28c", "url": "https://api.github.com/repos/rust-lang/rust/commits/8478acf695ccd3bf4abe8c65f153dfbc99f3d28c", "html_url": "https://github.com/rust-lang/rust/commit/8478acf695ccd3bf4abe8c65f153dfbc99f3d28c"}], "stats": {"total": 70, "additions": 59, "deletions": 11}, "files": [{"sha": "7856890724cb65c7d01c1ca1e5be3a554f76b7d4", "filename": "src/librustc/metadata/tydecode.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/009f2cf7dd97d952b78bb68a95f661cecfb1562f/src%2Flibrustc%2Fmetadata%2Ftydecode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/009f2cf7dd97d952b78bb68a95f661cecfb1562f/src%2Flibrustc%2Fmetadata%2Ftydecode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Ftydecode.rs?ref=009f2cf7dd97d952b78bb68a95f661cecfb1562f", "patch": "@@ -682,9 +682,8 @@ impl<'a,'tcx> TyDecoder<'a,'tcx> {\n             }\n         }\n \n-        return ty::ExistentialBounds { region_bound: region_bound,\n-                                       builtin_bounds: builtin_bounds,\n-                                       projection_bounds: projection_bounds };\n+        ty::ExistentialBounds::new(\n+            region_bound, builtin_bounds, projection_bounds)\n     }\n \n     fn parse_builtin_bounds(&mut self) -> ty::BuiltinBounds {"}, {"sha": "7f61526a8f903b487e04cc8b7d7bd524d9782730", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/009f2cf7dd97d952b78bb68a95f661cecfb1562f/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/009f2cf7dd97d952b78bb68a95f661cecfb1562f/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=009f2cf7dd97d952b78bb68a95f661cecfb1562f", "patch": "@@ -2143,6 +2143,21 @@ pub struct ExistentialBounds<'tcx> {\n     pub projection_bounds: Vec<PolyProjectionPredicate<'tcx>>,\n }\n \n+impl<'tcx> ExistentialBounds<'tcx> {\n+    pub fn new(region_bound: ty::Region,\n+               builtin_bounds: BuiltinBounds,\n+               projection_bounds: Vec<PolyProjectionPredicate<'tcx>>)\n+               -> Self {\n+        let mut projection_bounds = projection_bounds;\n+        ty::sort_bounds_list(&mut projection_bounds);\n+        ExistentialBounds {\n+            region_bound: region_bound,\n+            builtin_bounds: builtin_bounds,\n+            projection_bounds: projection_bounds\n+        }\n+    }\n+}\n+\n #[derive(Clone, Copy, PartialEq, Eq, Hash, Debug)]\n pub struct BuiltinBounds(EnumSet<BuiltinBound>);\n "}, {"sha": "fb61f1ef42d7b5438a1a75cb8e4fd6c99c3a3085", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/009f2cf7dd97d952b78bb68a95f661cecfb1562f/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/009f2cf7dd97d952b78bb68a95f661cecfb1562f/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=009f2cf7dd97d952b78bb68a95f661cecfb1562f", "patch": "@@ -2019,7 +2019,7 @@ pub fn conv_existential_bounds_from_partitioned_bounds<'tcx>(\n     rscope: &RegionScope,\n     span: Span,\n     principal_trait_ref: ty::PolyTraitRef<'tcx>,\n-    mut projection_bounds: Vec<ty::PolyProjectionPredicate<'tcx>>, // Empty for boxed closures\n+    projection_bounds: Vec<ty::PolyProjectionPredicate<'tcx>>, // Empty for boxed closures\n     partitioned_bounds: PartitionedBounds)\n     -> ty::ExistentialBounds<'tcx>\n {\n@@ -2058,13 +2058,7 @@ pub fn conv_existential_bounds_from_partitioned_bounds<'tcx>(\n \n     debug!(\"region_bound: {:?}\", region_bound);\n \n-    ty::sort_bounds_list(&mut projection_bounds);\n-\n-    ty::ExistentialBounds {\n-        region_bound: region_bound,\n-        builtin_bounds: builtin_bounds,\n-        projection_bounds: projection_bounds,\n-    }\n+    ty::ExistentialBounds::new(region_bound, builtin_bounds, projection_bounds)\n }\n \n /// Given the bounds on an object, determines what single region bound"}, {"sha": "e358cde15737dbbfb57fded1ac601ff1324f879a", "filename": "src/test/auxiliary/issue-25467.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/009f2cf7dd97d952b78bb68a95f661cecfb1562f/src%2Ftest%2Fauxiliary%2Fissue-25467.rs", "raw_url": "https://github.com/rust-lang/rust/raw/009f2cf7dd97d952b78bb68a95f661cecfb1562f/src%2Ftest%2Fauxiliary%2Fissue-25467.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-25467.rs?ref=009f2cf7dd97d952b78bb68a95f661cecfb1562f", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type=\"lib\"]\n+\n+pub trait Trait {\n+    // the issue is sensitive to interning order - so use names\n+    // unlikely to appear in libstd.\n+    type Issue25467FooT;\n+    type Issue25467BarT;\n+}\n+\n+pub type Object = Option<Box<Trait<Issue25467FooT=(),Issue25467BarT=()>>>;"}, {"sha": "4775876826983fe4773ff9f2af839b8d6397077f", "filename": "src/test/run-pass/issue-25467.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/009f2cf7dd97d952b78bb68a95f661cecfb1562f/src%2Ftest%2Frun-pass%2Fissue-25467.rs", "raw_url": "https://github.com/rust-lang/rust/raw/009f2cf7dd97d952b78bb68a95f661cecfb1562f/src%2Ftest%2Frun-pass%2Fissue-25467.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-25467.rs?ref=009f2cf7dd97d952b78bb68a95f661cecfb1562f", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:issue-25467.rs\n+\n+pub type Issue25467BarT = ();\n+pub type Issue25467FooT = ();\n+\n+extern crate issue_25467 as aux;\n+\n+fn main() {\n+    let o: aux::Object = None;\n+}"}]}