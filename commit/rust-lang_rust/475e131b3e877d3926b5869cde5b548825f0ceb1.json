{"sha": "475e131b3e877d3926b5869cde5b548825f0ceb1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3NWUxMzFiM2U4NzdkMzkyNmI1ODY5Y2RlNWI1NDg4MjVmMGNlYjE=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-10-01T06:03:25Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-10-01T06:06:38Z"}, "message": "Inline and remove `intern_method!`.\n\nIt's only used in two places, and the code is shorter and more readable\nwith it gone.", "tree": {"sha": "af59fbce5c6794a97a8b857a156b891918cc9d16", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af59fbce5c6794a97a8b857a156b891918cc9d16"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/475e131b3e877d3926b5869cde5b548825f0ceb1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/475e131b3e877d3926b5869cde5b548825f0ceb1", "html_url": "https://github.com/rust-lang/rust/commit/475e131b3e877d3926b5869cde5b548825f0ceb1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/475e131b3e877d3926b5869cde5b548825f0ceb1/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3724e37b5a21c497a295129af0fe67072c6b89d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/3724e37b5a21c497a295129af0fe67072c6b89d1", "html_url": "https://github.com/rust-lang/rust/commit/3724e37b5a21c497a295129af0fe67072c6b89d1"}], "stats": {"total": 40, "additions": 14, "deletions": 26}, "files": [{"sha": "b520e66fc49227bb866549694183630963d096f0", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 14, "deletions": 26, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/475e131b3e877d3926b5869cde5b548825f0ceb1/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/475e131b3e877d3926b5869cde5b548825f0ceb1/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=475e131b3e877d3926b5869cde5b548825f0ceb1", "patch": "@@ -2154,23 +2154,6 @@ impl<'tcx> Borrow<[Goal<'tcx>]> for Interned<'tcx, List<Goal<'tcx>>> {\n     }\n }\n \n-macro_rules! intern_method {\n-    ($lt_tcx:tt, $name:ident: $method:ident($alloc:ty,\n-                                            $alloc_method:expr,\n-                                            $alloc_to_key:expr) -> $ty:ty) => {\n-        impl<$lt_tcx> TyCtxt<$lt_tcx> {\n-            pub fn $method(self, v: $alloc) -> &$lt_tcx $ty {\n-                let key = ($alloc_to_key)(&v);\n-\n-                self.interners.$name.intern_ref(key, || {\n-                    Interned($alloc_method(&self.interners.arena, v))\n-\n-                }).0\n-            }\n-        }\n-    }\n-}\n-\n macro_rules! direct_interners {\n     ($lt_tcx:tt, $($name:ident: $method:ident($ty:ty)),+) => {\n         $(impl<$lt_tcx> PartialEq for Interned<$lt_tcx, $ty> {\n@@ -2187,11 +2170,13 @@ macro_rules! direct_interners {\n             }\n         }\n \n-        intern_method!(\n-            $lt_tcx,\n-            $name: $method($ty,\n-                           |a: &$lt_tcx SyncDroplessArena, v| -> &$lt_tcx $ty { a.alloc(v) },\n-                           |x| x) -> $ty);)+\n+        impl<$lt_tcx> TyCtxt<$lt_tcx> {\n+            pub fn $method(self, v: $ty) -> &$lt_tcx $ty {\n+                self.interners.$name.intern_ref(&v, || {\n+                    Interned(self.interners.arena.alloc(v))\n+                }).0\n+            }\n+        })+\n     }\n }\n \n@@ -2207,10 +2192,13 @@ direct_interners!('tcx,\n \n macro_rules! slice_interners {\n     ($($field:ident: $method:ident($ty:ty)),+) => (\n-        $(intern_method!( 'tcx, $field: $method(\n-            &[$ty],\n-            |a, v| List::from_arena(a, v),\n-            Deref::deref) -> List<$ty>);)+\n+        $(impl<'tcx> TyCtxt<'tcx> {\n+            pub fn $method(self, v: &[$ty]) -> &'tcx List<$ty> {\n+                self.interners.$field.intern_ref(v, || {\n+                    Interned(List::from_arena(&self.interners.arena, v))\n+                }).0\n+            }\n+        })+\n     );\n }\n "}]}