{"sha": "5fa60a5d25739142cd45aed22df3b10739066854", "node_id": "C_kwDOAAsO6NoAKDVmYTYwYTVkMjU3MzkxNDJjZDQ1YWVkMjJkZjNiMTA3MzkwNjY4NTQ", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2023-02-16T18:29:11Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2023-02-25T05:11:01Z"}, "message": "Reduce calls to `current_query_job`", "tree": {"sha": "425e10500ae21f568872981a432ebfa5dea3f59a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/425e10500ae21f568872981a432ebfa5dea3f59a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5fa60a5d25739142cd45aed22df3b10739066854", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5fa60a5d25739142cd45aed22df3b10739066854", "html_url": "https://github.com/rust-lang/rust/commit/5fa60a5d25739142cd45aed22df3b10739066854", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5fa60a5d25739142cd45aed22df3b10739066854/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f0bc76ac41a0a832c9ee621e31aaf1f515d3d6a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0bc76ac41a0a832c9ee621e31aaf1f515d3d6a5", "html_url": "https://github.com/rust-lang/rust/commit/f0bc76ac41a0a832c9ee621e31aaf1f515d3d6a5"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "0338a3523061401a7656a07f07d373294a8e65e5", "filename": "compiler/rustc_query_system/src/query/plumbing.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5fa60a5d25739142cd45aed22df3b10739066854/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fa60a5d25739142cd45aed22df3b10739066854/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs?ref=5fa60a5d25739142cd45aed22df3b10739066854", "patch": "@@ -188,12 +188,12 @@ where\n         #[cfg(not(parallel_compiler))]\n         let mut state_lock = state.active.lock();\n         let lock = &mut *state_lock;\n+        let current_job_id = qcx.current_query_job();\n \n         match lock.entry(key) {\n             Entry::Vacant(entry) => {\n                 let id = qcx.next_job_id();\n-                let job = qcx.current_query_job();\n-                let job = QueryJob::new(id, span, job);\n+                let job = QueryJob::new(id, span, current_job_id);\n \n                 let key = *entry.key();\n                 entry.insert(QueryResult::Started(job));\n@@ -212,7 +212,7 @@ where\n                         // so we just return the error.\n                         return TryGetJob::Cycle(id.find_cycle_in_stack(\n                             qcx.try_collect_active_jobs().unwrap(),\n-                            &qcx.current_query_job(),\n+                            &current_job_id,\n                             span,\n                         ));\n                     }\n@@ -230,7 +230,7 @@ where\n \n                         // With parallel queries we might just have to wait on some other\n                         // thread.\n-                        let result = latch.wait_on(qcx.current_query_job(), span);\n+                        let result = latch.wait_on(current_job_id, span);\n \n                         match result {\n                             Ok(()) => TryGetJob::JobCompleted(query_blocked_prof_timer),"}]}