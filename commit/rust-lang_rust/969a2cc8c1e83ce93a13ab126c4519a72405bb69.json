{"sha": "969a2cc8c1e83ce93a13ab126c4519a72405bb69", "node_id": "C_kwDOAAsO6NoAKDk2OWEyY2M4YzFlODNjZTkzYTEzYWIxMjZjNDUxOWE3MjQwNWJiNjk", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-06-15T07:44:53Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-06-15T23:51:48Z"}, "message": "Fix quadratic behaviour in the `MissingDoc` lint.\n\nThe `MissingDoc` lint has quadratic behaviour when processing doc comments.\nThis is a problem for large doc comments (e.g. 1000+ lines) when\n`deny(missing_code)` is enabled.\n\nA 1000-line doc comment using `//!` comments is represented as 1000 attributes\non an item. The lint machinery iterates over each attribute with\n`visit_attribute`. `MissingDoc`'s impl of that function calls\n`with_lint_attrs`, which calls `enter_attrs`, which iterates over all 1000\nattributes looking for a `doc(hidden)` attribute. I.e. for every attribute we\niterate over all the other attributes.\n\nThe fix is simple: don't call `with_lint_attrs` on attributes. This makes\nsense: `with_lint_attrs` is intended to iterate over the attributes on a\nlanguage fragment like a statement or expression, but it doesn't need to\nbe called on attributes themselves.", "tree": {"sha": "8cc8f0db26f6b0ba0dfd6819b720a2fc8ca0eff1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8cc8f0db26f6b0ba0dfd6819b720a2fc8ca0eff1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/969a2cc8c1e83ce93a13ab126c4519a72405bb69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/969a2cc8c1e83ce93a13ab126c4519a72405bb69", "html_url": "https://github.com/rust-lang/rust/commit/969a2cc8c1e83ce93a13ab126c4519a72405bb69", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/969a2cc8c1e83ce93a13ab126c4519a72405bb69/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca983054e19afd74d63c3ed37997f3bf30fe85d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca983054e19afd74d63c3ed37997f3bf30fe85d0", "html_url": "https://github.com/rust-lang/rust/commit/ca983054e19afd74d63c3ed37997f3bf30fe85d0"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "9ca80334e053186b9a6d0be24fc1ee21cded4fe0", "filename": "compiler/rustc_lint/src/late.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/969a2cc8c1e83ce93a13ab126c4519a72405bb69/compiler%2Frustc_lint%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/969a2cc8c1e83ce93a13ab126c4519a72405bb69/compiler%2Frustc_lint%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flate.rs?ref=969a2cc8c1e83ce93a13ab126c4519a72405bb69", "patch": "@@ -337,10 +337,8 @@ impl<'tcx, T: LateLintPass<'tcx>> hir_visit::Visitor<'tcx> for LateContextAndPas\n         hir_visit::walk_path(self, p);\n     }\n \n-    fn visit_attribute(&mut self, hir_id: hir::HirId, attr: &'tcx ast::Attribute) {\n-        self.with_lint_attrs(hir_id, |cx| {\n-            lint_callback!(cx, check_attribute, attr);\n-        })\n+    fn visit_attribute(&mut self, _hir_id: hir::HirId, attr: &'tcx ast::Attribute) {\n+        lint_callback!(self, check_attribute, attr);\n     }\n }\n "}]}