{"sha": "3137215e8db7aafb17860d30a2d2b39178112366", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxMzcyMTVlOGRiN2FhZmIxNzg2MGQzMGEyZDJiMzkxNzgxMTIzNjY=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-01-23T11:39:14Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-01-23T11:40:21Z"}, "message": "Provide more runners for potential tests", "tree": {"sha": "bd13eb571ee0b7eb3c2464417590e12aaf590e60", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd13eb571ee0b7eb3c2464417590e12aaf590e60"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3137215e8db7aafb17860d30a2d2b39178112366", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3137215e8db7aafb17860d30a2d2b39178112366", "html_url": "https://github.com/rust-lang/rust/commit/3137215e8db7aafb17860d30a2d2b39178112366", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3137215e8db7aafb17860d30a2d2b39178112366/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2fb8a461225800ca605a9f2e997cd5e82fb37574", "url": "https://api.github.com/repos/rust-lang/rust/commits/2fb8a461225800ca605a9f2e997cd5e82fb37574", "html_url": "https://github.com/rust-lang/rust/commit/2fb8a461225800ca605a9f2e997cd5e82fb37574"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "8622dd9560b6c54b424eb7b5912a5d80b73e709f", "filename": "crates/ra_ide/src/runnables.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3137215e8db7aafb17860d30a2d2b39178112366/crates%2Fra_ide%2Fsrc%2Frunnables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3137215e8db7aafb17860d30a2d2b39178112366/crates%2Fra_ide%2Fsrc%2Frunnables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Frunnables.rs?ref=3137215e8db7aafb17860d30a2d2b39178112366", "patch": "@@ -43,7 +43,7 @@ fn runnable_fn(fn_def: ast::FnDef) -> Option<Runnable> {\n     let name = fn_def.name()?.text().clone();\n     let kind = if name == \"main\" {\n         RunnableKind::Bin\n-    } else if fn_def.has_atom_attr(\"test\") {\n+    } else if has_test_related_attribute(&fn_def) {\n         RunnableKind::Test { name: name.to_string() }\n     } else if fn_def.has_atom_attr(\"bench\") {\n         RunnableKind::Bench { name: name.to_string() }\n@@ -53,6 +53,20 @@ fn runnable_fn(fn_def: ast::FnDef) -> Option<Runnable> {\n     Some(Runnable { range: fn_def.syntax().text_range(), kind })\n }\n \n+/// This is a method with a heuristics to support test methods annotated with custom test annotations, such as\n+/// `#[test_case(...)]`, `#[tokio::test]` and similar.\n+/// Also a regular `#[test]` annotation is supported.\n+///\n+/// It may produce false positives, for example, `#[wasm_bindgen_test]` requires a different command to run the test,\n+/// but it's better than not to have the runnables for the tests at all.\n+fn has_test_related_attribute(fn_def: &ast::FnDef) -> bool {\n+    fn_def\n+        .attrs()\n+        .filter_map(|attr| attr.path())\n+        .map(|path| path.syntax().to_string().to_lowercase())\n+        .any(|attribute_text| attribute_text.contains(\"test\"))\n+}\n+\n fn runnable_mod(db: &RootDatabase, file_id: FileId, module: ast::Module) -> Option<Runnable> {\n     let has_test_function = module\n         .item_list()?"}]}