{"sha": "ae312680d6d7bb0cc00d2b8d9799249d36e0136e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlMzEyNjgwZDZkN2JiMGNjMDBkMmI4ZDk3OTkyNDlkMzZlMDEzNmU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-02-11T18:31:54Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-02-11T18:31:54Z"}, "message": "docs", "tree": {"sha": "6547cd1d0e5b7494ac6b9ec9b446ba0db4c149ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6547cd1d0e5b7494ac6b9ec9b446ba0db4c149ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae312680d6d7bb0cc00d2b8d9799249d36e0136e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae312680d6d7bb0cc00d2b8d9799249d36e0136e", "html_url": "https://github.com/rust-lang/rust/commit/ae312680d6d7bb0cc00d2b8d9799249d36e0136e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae312680d6d7bb0cc00d2b8d9799249d36e0136e/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d34a256de5d33565e9a62d53bf149cf59510937", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d34a256de5d33565e9a62d53bf149cf59510937", "html_url": "https://github.com/rust-lang/rust/commit/0d34a256de5d33565e9a62d53bf149cf59510937"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "848c785f8e81b866d3bb9deae96ac52e6666488c", "filename": "crates/ra_mbe/src/syntax_bridge.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ae312680d6d7bb0cc00d2b8d9799249d36e0136e/crates%2Fra_mbe%2Fsrc%2Fsyntax_bridge.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae312680d6d7bb0cc00d2b8d9799249d36e0136e/crates%2Fra_mbe%2Fsrc%2Fsyntax_bridge.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Fsyntax_bridge.rs?ref=ae312680d6d7bb0cc00d2b8d9799249d36e0136e", "patch": "@@ -3,12 +3,15 @@ use ra_syntax::{\n     ast, SyntaxKind::*, TextUnit\n };\n \n+/// Maps `tt::TokenId` to the relative range of the original token.\n #[derive(Default)]\n pub struct TokenMap {\n     /// Maps `tt::TokenId` to the *relative* source range.\n     toknes: Vec<TextRange>,\n }\n \n+/// Convert the syntax tree (what user has written) to a `TokenTree` (what macro\n+/// will consume).\n pub fn ast_to_token_tree(ast: &ast::TokenTree) -> Option<(tt::Subtree, TokenMap)> {\n     let mut token_map = TokenMap::default();\n     let node = ast.syntax();\n@@ -17,6 +20,11 @@ pub fn ast_to_token_tree(ast: &ast::TokenTree) -> Option<(tt::Subtree, TokenMap)\n }\n \n impl TokenMap {\n+    pub fn relative_range_of(&self, tt: tt::TokenId) -> Option<TextRange> {\n+        let idx = tt.0 as usize;\n+        self.toknes.get(idx).map(|&it| it)\n+    }\n+\n     fn alloc(&mut self, relative_range: TextRange) -> tt::TokenId {\n         let id = self.toknes.len();\n         self.toknes.push(relative_range);"}, {"sha": "c1f37b8897cb706358a5070f7b883df59763b24b", "filename": "crates/ra_tt/src/lib.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ae312680d6d7bb0cc00d2b8d9799249d36e0136e/crates%2Fra_tt%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae312680d6d7bb0cc00d2b8d9799249d36e0136e/crates%2Fra_tt%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_tt%2Fsrc%2Flib.rs?ref=ae312680d6d7bb0cc00d2b8d9799249d36e0136e", "patch": "@@ -1,4 +1,4 @@\n-/// `tt` crate defines a `TokenTree` datastructure: this is the interface (both\n+/// `tt` crate defines a `TokenTree` data structure: this is the interface (both\n /// input and output) of macros. It closely mirrors `proc_macro` crate's\n /// `TokenTree`.\n \n@@ -18,6 +18,12 @@ use std::fmt;\n \n use smol_str::SmolStr;\n \n+/// Represents identity of the token.\n+///\n+/// For hygiene purposes, we need to track which expanded tokens originated from\n+/// which source tokens. We do it by assigning an distinct identity to each\n+/// source token and making sure that identities are preserved during macro\n+/// expansion.\n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n pub struct TokenId(pub u32);\n "}]}