{"sha": "2102597392169083c52f01fe35bd2f18ed3c219b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxMDI1OTczOTIxNjkwODNjNTJmMDFmZTM1YmQyZjE4ZWQzYzIxOWI=", "commit": {"author": {"name": "Young-il Choi", "email": "duddlf.choi@samsung.com", "date": "2013-03-01T11:02:29Z"}, "committer": {"name": "Young-il Choi", "email": "duddlf.choi@samsung.com", "date": "2013-03-01T11:02:29Z"}, "message": "mk: mingw32 flags added", "tree": {"sha": "73df59e0444833ada00bf17d6ea164b03d212222", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73df59e0444833ada00bf17d6ea164b03d212222"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2102597392169083c52f01fe35bd2f18ed3c219b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2102597392169083c52f01fe35bd2f18ed3c219b", "html_url": "https://github.com/rust-lang/rust/commit/2102597392169083c52f01fe35bd2f18ed3c219b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2102597392169083c52f01fe35bd2f18ed3c219b/comments", "author": {"login": "yichoi", "id": 3222276, "node_id": "MDQ6VXNlcjMyMjIyNzY=", "avatar_url": "https://avatars.githubusercontent.com/u/3222276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yichoi", "html_url": "https://github.com/yichoi", "followers_url": "https://api.github.com/users/yichoi/followers", "following_url": "https://api.github.com/users/yichoi/following{/other_user}", "gists_url": "https://api.github.com/users/yichoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/yichoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yichoi/subscriptions", "organizations_url": "https://api.github.com/users/yichoi/orgs", "repos_url": "https://api.github.com/users/yichoi/repos", "events_url": "https://api.github.com/users/yichoi/events{/privacy}", "received_events_url": "https://api.github.com/users/yichoi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yichoi", "id": 3222276, "node_id": "MDQ6VXNlcjMyMjIyNzY=", "avatar_url": "https://avatars.githubusercontent.com/u/3222276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yichoi", "html_url": "https://github.com/yichoi", "followers_url": "https://api.github.com/users/yichoi/followers", "following_url": "https://api.github.com/users/yichoi/following{/other_user}", "gists_url": "https://api.github.com/users/yichoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/yichoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yichoi/subscriptions", "organizations_url": "https://api.github.com/users/yichoi/orgs", "repos_url": "https://api.github.com/users/yichoi/repos", "events_url": "https://api.github.com/users/yichoi/events{/privacy}", "received_events_url": "https://api.github.com/users/yichoi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "26a5dc593c1895b4dd9a024ef785cb3682cb064a", "url": "https://api.github.com/repos/rust-lang/rust/commits/26a5dc593c1895b4dd9a024ef785cb3682cb064a", "html_url": "https://github.com/rust-lang/rust/commit/26a5dc593c1895b4dd9a024ef785cb3682cb064a"}], "stats": {"total": 133, "additions": 70, "deletions": 63}, "files": [{"sha": "5e4ab2bfdb1311406e89c2d3262fb96ab61970a9", "filename": "configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2102597392169083c52f01fe35bd2f18ed3c219b/configure", "raw_url": "https://github.com/rust-lang/rust/raw/2102597392169083c52f01fe35bd2f18ed3c219b/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=2102597392169083c52f01fe35bd2f18ed3c219b", "patch": "@@ -595,7 +595,7 @@ do\n   make_dir rt/$t\n   for i in                                          \\\n     isaac linenoise sync test arch/i386 arch/x86_64 arch/arm   \\\n-    libuv\n+    libuv libuv/src\n   do\n     make_dir rt/$t/$i\n   done"}, {"sha": "7680f70157a0efa3950d948169cd61a4a8c918ea", "filename": "mk/platform.mk", "status": "modified", "additions": 69, "deletions": 62, "changes": 131, "blob_url": "https://github.com/rust-lang/rust/blob/2102597392169083c52f01fe35bd2f18ed3c219b/mk%2Fplatform.mk", "raw_url": "https://github.com/rust-lang/rust/raw/2102597392169083c52f01fe35bd2f18ed3c219b/mk%2Fplatform.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fplatform.mk?ref=2102597392169083c52f01fe35bd2f18ed3c219b", "patch": "@@ -36,21 +36,7 @@ CFG_GCCISH_CFLAGS += -fno-omit-frame-pointer\n # embedded into the executable, so use a no-op command.\n CFG_DSYMUTIL := true\n \n-# Hack: not sure how to test if a file exists in make other than this\n-OS_SUPP = $(patsubst %,--suppressions=%,\\\n-      $(wildcard $(CFG_SRC_DIR)src/etc/$(CFG_OSTYPE).supp*))\n-\n-ifneq ($(findstring mingw,$(CFG_OSTYPE)),)\n-  CFG_WINDOWSY := 1\n-endif\n-\n-ifdef CFG_DISABLE_OPTIMIZE_CXX\n-  $(info cfg: disabling C++ optimization (CFG_DISABLE_OPTIMIZE_CXX))\n-  CFG_GCCISH_CFLAGS += -O0\n-else\n-  CFG_GCCISH_CFLAGS += -O2\n-endif\n-\n+# x86_64-unknown-linux-gnu configuration\n CFG_LIB_NAME_x86_64-unknown-linux-gnu=lib$(1).so\n CFG_LIB_GLOB_x86_64-unknown-linux-gnu=lib$(1)-*.so\n CFG_LIB_DSYM_GLOB_x86_64-unknown-linux-gnu=lib$(1)-*.dylib.dSYM\n@@ -62,10 +48,9 @@ CFG_GCCISH_PRE_LIB_FLAGS_x86_64-unknown-linux-gnu := -Wl,-whole-archive\n CFG_GCCISH_POST_LIB_FLAGS_x86_64-unknown-linux-gnu := -Wl,-no-whole-archive -Wl,-znoexecstack\n CFG_DEF_SUFFIX_x86_64-unknown-linux-gnu := .linux.def\n CFG_INSTALL_NAME_x86_64-unknown-linux-gnu =\n-CFG_UNIXY := 1\n-CFG_LDENV := LD_LIBRARY_PATH\n CFG_GCCISH_CROSS_x86_64-unknown-linux-gnu =\n \n+# x86_64-apple-darwin configuration\n CFG_LIB_NAME_x86_64-apple-darwin=lib$(1).dylib\n CFG_LIB_GLOB_x86_64-apple-darwin=lib$(1)-*.dylib\n CFG_LIB_DSYM_GLOB_x86_64-apple-darwin=lib$(1)-*.dylib.dSYM\n@@ -78,10 +63,11 @@ CFG_GCCISH_POST_LIB_FLAGS_x86_64-apple-darwin :=\n CFG_DEF_SUFFIX_x86_64-apple-darwin := .darwin.def\n CFG_INSTALL_NAME_x86_64-apple-darwin = -Wl,-install_name,@rpath/$(1)\n \n+# arm-unknown-android configuration\n CFG_LIB_NAME_arm-unknown-android=lib$(1).so\n CFG_LIB_GLOB_arm-unknown-android=lib$(1)-*.so\n CFG_LIB_DSYM_GLOB_arm-unknown-android=lib$(1)-*.dylib.dSYM\n-CFG_GCCISH_CFLAGS_arm-unknown-android := -fPIC -Wall -g -D__arm__ -DANDROID -D__ANDROID__\n+CFG_GCCISH_CFLAGS_arm-unknown-android := -Wall -g -fPIC -D__arm__ -DANDROID -D__ANDROID__\n CFG_GCCISH_CXXFLAGS_arm-unknown-android := -fno-rtti\n CFG_GCCISH_LINK_FLAGS_arm-unknown-android := -shared -fPIC -ldl -g -lm -lsupc++ -lgnustl_shared\n CFG_GCCISH_DEF_FLAG_arm-unknown-android := -Wl,--export-dynamic,--dynamic-list=\n@@ -91,6 +77,51 @@ CFG_DEF_SUFFIX_arm-unknown-android := .android.def\n CFG_INSTALL_NAME_arm-unknown-android =\n CFG_GCCISH_CROSS_arm-unknown-android = $(CFG_CROSS_PREFIX_arm)\n \n+# i686-pc-mingw32 configuration\n+CFG_LIB_NAME_i686-pc-mingw32=lib$(1).dll\n+CFG_LIB_GLOB_i686-pc-mingw32=lib$(1)-*.dll\n+CFG_LIB_DSYM_GLOB_i686-pc-mingw32=lib$(1)-*.dylib.dSYM\n+CFG_GCCISH_CFLAGS_i686-pc-mingw32 := -Wall -Werror -g -march=i686\n+CFG_GCCISH_CXXFLAGS_i686-pc-mingw32 := -fno-rtti\n+CFG_GCCISH_LINK_FLAGS_i686-pc-mingw32 := -shared -fPIC -g\n+CFG_GCCISH_DEF_FLAG_i686-pc-mingw32 :=\n+CFG_GCCISH_PRE_LIB_FLAGS_i686-pc-mingw32 := \n+CFG_GCCISH_POST_LIB_FLAGS_i686-pc-mingw32 := \n+CFG_DEF_SUFFIX_i686-pc-mingw32 := .def\n+CFG_INSTALL_NAME_i686-pc-mingw32 =\n+CFG_GCCISH_CROSS_i686-pc-mingw32 =\n+\n+# Hack: not sure how to test if a file exists in make other than this\n+OS_SUPP = $(patsubst %,--suppressions=%,\\\n+      $(wildcard $(CFG_SRC_DIR)src/etc/$(CFG_OSTYPE).supp*))\n+\n+ifneq ($(findstring mingw,$(CFG_OSTYPE)),)\n+  CFG_WINDOWSY := 1\n+endif\n+ifneq ($(findstring linux,$(CFG_OSTYPE)),)\n+  CFG_UNIXY := 1\n+endif\n+ifneq ($(findstring darwin,$(CFG_OSTYPE)),)\n+  CFG_UNIXY := 1\n+endif\n+\n+ifdef CFG_DISABLE_OPTIMIZE_CXX\n+  $(info cfg: disabling C++ optimization (CFG_DISABLE_OPTIMIZE_CXX))\n+  CFG_GCCISH_CFLAGS += -O0\n+else\n+  CFG_GCCISH_CFLAGS += -O2\n+endif\n+\n+CFG_TESTLIB=$(CFG_BUILD_DIR)/$(2)/$(strip \\\n+ $(if $(findstring stage0,$(1)), \\\n+       stage0/$(CFG_LIBDIR), \\\n+      $(if $(findstring stage1,$(1)), \\\n+           stage1/$(CFG_LIBDIR), \\\n+          $(if $(findstring stage2,$(1)), \\\n+               stage2/$(CFG_LIBDIR), \\\n+               $(if $(findstring stage3,$(1)), \\\n+                    stage3/$(CFG_LIBDIR), \\\n+               )))))/rustc/$(CFG_HOST_TRIPLE)/$(CFG_LIBDIR)\n \n ifneq ($(findstring linux,$(CFG_OSTYPE)),)\n   # -znoexecstack is here because librt is for some reason being created\n@@ -123,30 +154,26 @@ ifdef CFG_UNIXY\n   CFG_RUN_TARG=$(call CFG_RUN,,$(2))\n   CFG_RUN_TEST=$(call CFG_RUN,,$(CFG_VALGRIND) $(1))\n   CFG_LIBUV_LINK_FLAGS=\n-  ifdef CFG_FBSD\n-    CFG_LIBUV_LINK_FLAGS=-lpthread -lkvm\n-  endif\n \n-  # FIXME: This is surely super broken\n-  # ifdef CFG_ENABLE_MINGW_CROSS\n-  #   CFG_WINDOWSY := 1\n-  #   CFG_INFO := $(info cfg: mingw-cross)\n-  #   CFG_GCCISH_CROSS := i586-mingw32msvc-\n-  #   ifdef CFG_VALGRIND\n-  #     CFG_VALGRIND += wine\n-  #   endif\n-\n-  #   CFG_GCCISH_CFLAGS := -march=i586\n-  #   CFG_GCCISH_PRE_LIB_FLAGS :=\n-  #   CFG_GCCISH_POST_LIB_FLAGS :=\n-  #   CFG_GCCISH_DEF_FLAG :=\n-  #   CFG_GCCISH_LINK_FLAGS := -shared\n-\n-  #   ifeq ($(CFG_CPUTYPE), x86_64)\n-  #     CFG_GCCISH_CFLAGS += -m32\n-  #     CFG_GCCISH_LINK_FLAGS += -m32\n-  #   endif\n-  # endif\n+  ifdef CFG_ENABLE_MINGW_CROSS\n+    CFG_WINDOWSY := 1\n+    CFG_INFO := $(info cfg: mingw-cross)\n+    CFG_GCCISH_CROSS := i586-mingw32msvc-\n+    ifdef CFG_VALGRIND\n+      CFG_VALGRIND += wine\n+    endif\n+\n+    CFG_GCCISH_CFLAGS := -march=i586\n+    CFG_GCCISH_PRE_LIB_FLAGS :=\n+    CFG_GCCISH_POST_LIB_FLAGS :=\n+    CFG_GCCISH_DEF_FLAG :=\n+    CFG_GCCISH_LINK_FLAGS := -shared\n+\n+    ifeq ($(CFG_CPUTYPE), x86_64)\n+      CFG_GCCISH_CFLAGS += -m32\n+      CFG_GCCISH_LINK_FLAGS += -m32\n+    endif\n+  endif\n   ifdef CFG_VALGRIND\n     CFG_VALGRIND += --error-exitcode=100 \\\n                     --quiet \\\n@@ -161,48 +188,28 @@ ifdef CFG_UNIXY\n   endif\n endif\n \n-\n ifdef CFG_WINDOWSY\n   CFG_INFO := $(info cfg: windows-y environment)\n \n   CFG_EXE_SUFFIX := .exe\n-  CFG_LIB_NAME=$(1).dll\n-  CFG_LIB_GLOB=$(1)-*.dll\n-  CFG_DEF_SUFFIX := .def\n ifdef MSYSTEM\n   CFG_LDPATH :=$(CFG_LDPATH):$$PATH\n   CFG_RUN=PATH=\"$(CFG_LDPATH):$(1)\" $(2)\n else\n   CFG_LDPATH :=\n   CFG_RUN=$(2)\n endif\n-\n-  CFG_TESTLIB=$(CFG_BUILD_DIR)/$(2)/$(strip \\\n-   $(if $(findstring stage0,$(1)), \\\n-       stage0/$(CFG_LIBDIR), \\\n-      $(if $(findstring stage1,$(1)), \\\n-           stage1/$(CFG_LIBDIR), \\\n-          $(if $(findstring stage2,$(1)), \\\n-               stage2/$(CFG_LIBDIR), \\\n-               $(if $(findstring stage3,$(1)), \\\n-                    stage3/$(CFG_LIBDIR), \\\n-               )))))/rustc/$(CFG_BUILD_TRIPLE)/$(CFG_LIBDIR)\n-\n-  CFG_RUN_TARG=$(call CFG_RUN,$(HLIB$(1)_H_$(CFG_BUILD_TRIPLE)),$(2))\n+  CFG_RUN_TARG=$(call CFG_RUN,$(HLIB$(1)_H_$(CFG_HOST_TRIPLE)),$(2))\n   CFG_RUN_TEST=$(call CFG_RUN,$(call CFG_TESTLIB,$(1),$(3)),$(1))\n   CFG_LIBUV_LINK_FLAGS=-lWs2_32 -lpsapi -liphlpapi\n \n   ifndef CFG_ENABLE_MINGW_CROSS\n     CFG_PATH_MUNGE := $(strip perl -i.bak -p             \\\n                              -e 's@\\\\(\\S)@/\\1@go;'       \\\n                              -e 's@^/([a-zA-Z])/@\\1:/@o;')\n-    CFG_GCCISH_CFLAGS += -march=i686\n-    CFG_GCCISH_LINK_FLAGS += -shared -fPIC\n   endif\n-  CFG_INSTALL_NAME =\n endif\n \n-\n CFG_INFO := $(info cfg: using $(CFG_C_COMPILER))\n ifeq ($(CFG_C_COMPILER),clang)\n   ifeq ($(origin CC),default)"}]}