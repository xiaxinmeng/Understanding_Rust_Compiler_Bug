{"sha": "2ae90165534f18aa5020ae84f5e3768e99139069", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhZTkwMTY1NTM0ZjE4YWE1MDIwYWU4NGY1ZTM3NjhlOTkxMzkwNjk=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-09-22T18:27:55Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-09-22T18:27:55Z"}, "message": "Point at definition when misusing ADT\n\nWhen given `struct Foo(usize)` and using it as `Foo {}` or `Foo`, point at\n`Foo`'s definition in the error.", "tree": {"sha": "0403924bb6b595a5bf9b3c529d8d821a8328b23d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0403924bb6b595a5bf9b3c529d8d821a8328b23d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ae90165534f18aa5020ae84f5e3768e99139069", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ae90165534f18aa5020ae84f5e3768e99139069", "html_url": "https://github.com/rust-lang/rust/commit/2ae90165534f18aa5020ae84f5e3768e99139069", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ae90165534f18aa5020ae84f5e3768e99139069/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ff32c07da9d97e6dc315a4a5c9ffbb797cb27bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ff32c07da9d97e6dc315a4a5c9ffbb797cb27bb", "html_url": "https://github.com/rust-lang/rust/commit/4ff32c07da9d97e6dc315a4a5c9ffbb797cb27bb"}], "stats": {"total": 150, "additions": 126, "deletions": 24}, "files": [{"sha": "c7385f8a991765f92ed901b5ec8f0c4c054cc3e9", "filename": "src/librustc_resolve/late/diagnostics.rs", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs?ref=2ae90165534f18aa5020ae84f5e3768e99139069", "patch": "@@ -348,7 +348,7 @@ impl<'a> LateResolutionVisitor<'a, '_> {\n             _ => false,\n         };\n \n-        let mut bad_struct_syntax_suggestion = || {\n+        let mut bad_struct_syntax_suggestion = |def_id: DefId| {\n             let (followed_by_brace, closing_brace) = self.followed_by_brace(span);\n             let mut suggested = false;\n             match source {\n@@ -374,6 +374,9 @@ impl<'a> LateResolutionVisitor<'a, '_> {\n                 _ => {}\n             }\n             if !suggested {\n+                if let Some(span) = self.r.definitions.opt_span(def_id) {\n+                    err.span_label(span, &format!(\"`{}` defined here\", path_str));\n+                }\n                 err.span_label(\n                     span,\n                     format!(\"did you mean `{} {{ /* fields */ }}`?\", path_str),\n@@ -437,18 +440,21 @@ impl<'a> LateResolutionVisitor<'a, '_> {\n                         );\n                     }\n                 } else {\n-                    bad_struct_syntax_suggestion();\n+                    bad_struct_syntax_suggestion(def_id);\n                 }\n             }\n-            (Res::Def(DefKind::Union, _), _) |\n-            (Res::Def(DefKind::Variant, _), _) |\n-            (Res::Def(DefKind::Ctor(_, CtorKind::Fictive), _), _) if ns == ValueNS => {\n-                bad_struct_syntax_suggestion();\n+            (Res::Def(DefKind::Union, def_id), _) |\n+            (Res::Def(DefKind::Variant, def_id), _) |\n+            (Res::Def(DefKind::Ctor(_, CtorKind::Fictive), def_id), _) if ns == ValueNS => {\n+                bad_struct_syntax_suggestion(def_id);\n             }\n-            (Res::Def(DefKind::Ctor(_, CtorKind::Fn), _), _) if ns == ValueNS => {\n+            (Res::Def(DefKind::Ctor(_, CtorKind::Fn), def_id), _) if ns == ValueNS => {\n+                if let Some(span) = self.r.definitions.opt_span(def_id) {\n+                    err.span_label(span, &format!(\"`{}` defined here\", path_str));\n+                }\n                 err.span_label(\n                     span,\n-                    format!(\"did you mean `{} ( /* fields */ )`?\", path_str),\n+                    format!(\"did you mean `{}( /* fields */ )`?\", path_str),\n                 );\n             }\n             (Res::SelfTy(..), _) if ns == ValueNS => {"}, {"sha": "97121575527168bada13f139fba18282b884ec43", "filename": "src/test/ui/empty/empty-struct-braces-expr.stderr", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-expr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-expr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-expr.stderr?ref=2ae90165534f18aa5020ae84f5e3768e99139069", "patch": "@@ -1,6 +1,9 @@\n error[E0423]: expected value, found struct `Empty1`\n   --> $DIR/empty-struct-braces-expr.rs:15:14\n    |\n+LL | struct Empty1 {}\n+   | ---------------- `Empty1` defined here\n+...\n LL |     let e1 = Empty1;\n    |              ^^^^^^\n    |              |\n@@ -10,6 +13,9 @@ LL |     let e1 = Empty1;\n error[E0423]: expected function, found struct `Empty1`\n   --> $DIR/empty-struct-braces-expr.rs:16:14\n    |\n+LL | struct Empty1 {}\n+   | ---------------- `Empty1` defined here\n+...\n LL |     let e1 = Empty1();\n    |              ^^^^^^\n    |              |\n@@ -19,12 +25,18 @@ LL |     let e1 = Empty1();\n error[E0423]: expected value, found struct variant `E::Empty3`\n   --> $DIR/empty-struct-braces-expr.rs:17:14\n    |\n+LL |     Empty3 {}\n+   |     --------- `E::Empty3` defined here\n+...\n LL |     let e3 = E::Empty3;\n    |              ^^^^^^^^^ did you mean `E::Empty3 { /* fields */ }`?\n \n error[E0423]: expected function, found struct variant `E::Empty3`\n   --> $DIR/empty-struct-braces-expr.rs:18:14\n    |\n+LL |     Empty3 {}\n+   |     --------- `E::Empty3` defined here\n+...\n LL |     let e3 = E::Empty3();\n    |              ^^^^^^^^^ did you mean `E::Empty3 { /* fields */ }`?\n "}, {"sha": "271e811a2fd65738ce8f8b96a89074d991b4ae30", "filename": "src/test/ui/empty/empty-struct-braces-pat-1.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-pat-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-pat-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-pat-1.stderr?ref=2ae90165534f18aa5020ae84f5e3768e99139069", "patch": "@@ -1,6 +1,9 @@\n error[E0532]: expected unit struct/variant or constant, found struct variant `E::Empty3`\n   --> $DIR/empty-struct-braces-pat-1.rs:24:9\n    |\n+LL |     Empty3 {}\n+   |     --------- `E::Empty3` defined here\n+...\n LL |         E::Empty3 => ()\n    |         ^^^^^^^^^ did you mean `E::Empty3 { /* fields */ }`?\n "}, {"sha": "33524737888944217b98933d79e23078d7e431ef", "filename": "src/test/ui/empty/empty-struct-braces-pat-2.stderr", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-pat-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-pat-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-pat-2.stderr?ref=2ae90165534f18aa5020ae84f5e3768e99139069", "patch": "@@ -1,6 +1,9 @@\n error[E0532]: expected tuple struct/variant, found struct `Empty1`\n   --> $DIR/empty-struct-braces-pat-2.rs:15:9\n    |\n+LL | struct Empty1 {}\n+   | ---------------- `Empty1` defined here\n+...\n LL |         Empty1() => ()\n    |         ^^^^^^\n    |         |\n@@ -19,6 +22,9 @@ LL |         XEmpty1() => ()\n error[E0532]: expected tuple struct/variant, found struct `Empty1`\n   --> $DIR/empty-struct-braces-pat-2.rs:21:9\n    |\n+LL | struct Empty1 {}\n+   | ---------------- `Empty1` defined here\n+...\n LL |         Empty1(..) => ()\n    |         ^^^^^^\n    |         |"}, {"sha": "aefdd772b1bfda3f8e382b84592598416b33f3a2", "filename": "src/test/ui/empty/empty-struct-braces-pat-3.stderr", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-pat-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-pat-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-pat-3.stderr?ref=2ae90165534f18aa5020ae84f5e3768e99139069", "patch": "@@ -1,6 +1,9 @@\n error[E0532]: expected tuple struct/variant, found struct variant `E::Empty3`\n   --> $DIR/empty-struct-braces-pat-3.rs:17:9\n    |\n+LL |     Empty3 {}\n+   |     --------- `E::Empty3` defined here\n+...\n LL |         E::Empty3() => ()\n    |         ^^^^^^^^^ did you mean `E::Empty3 { /* fields */ }`?\n \n@@ -16,6 +19,9 @@ LL |         XE::XEmpty3() => ()\n error[E0532]: expected tuple struct/variant, found struct variant `E::Empty3`\n   --> $DIR/empty-struct-braces-pat-3.rs:25:9\n    |\n+LL |     Empty3 {}\n+   |     --------- `E::Empty3` defined here\n+...\n LL |         E::Empty3(..) => ()\n    |         ^^^^^^^^^ did you mean `E::Empty3 { /* fields */ }`?\n "}, {"sha": "4b828c0d942e38f28b9f81847a88fd609ace0a5c", "filename": "src/test/ui/empty/empty-struct-tuple-pat.stderr", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Ftest%2Fui%2Fempty%2Fempty-struct-tuple-pat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Ftest%2Fui%2Fempty%2Fempty-struct-tuple-pat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fempty-struct-tuple-pat.stderr?ref=2ae90165534f18aa5020ae84f5e3768e99139069", "patch": "@@ -19,8 +19,11 @@ LL |         XEmpty6 => ()\n error[E0532]: expected unit struct/variant or constant, found tuple variant `E::Empty4`\n   --> $DIR/empty-struct-tuple-pat.rs:29:9\n    |\n+LL |     Empty4()\n+   |     -------- `E::Empty4` defined here\n+...\n LL |         E::Empty4 => ()\n-   |         ^^^^^^^^^ did you mean `E::Empty4 ( /* fields */ )`?\n+   |         ^^^^^^^^^ did you mean `E::Empty4( /* fields */ )`?\n \n error[E0532]: expected unit struct/variant or constant, found tuple variant `XE::XEmpty5`\n   --> $DIR/empty-struct-tuple-pat.rs:33:9\n@@ -29,7 +32,7 @@ LL |         XE::XEmpty5 => (),\n    |         ^^^^-------\n    |         |   |\n    |         |   help: a unit variant with a similar name exists: `XEmpty4`\n-   |         did you mean `XE::XEmpty5 ( /* fields */ )`?\n+   |         did you mean `XE::XEmpty5( /* fields */ )`?\n \n error: aborting due to 4 previous errors\n "}, {"sha": "ce631ca4bf786ec3e2ca69a41ff1b0a5c047d5e4", "filename": "src/test/ui/error-codes/E0423.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Ftest%2Fui%2Ferror-codes%2FE0423.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Ftest%2Fui%2Ferror-codes%2FE0423.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0423.stderr?ref=2ae90165534f18aa5020ae84f5e3768e99139069", "patch": "@@ -27,6 +27,9 @@ LL |     for _ in (std::ops::Range { start: 0, end: 10 }) {}\n error[E0423]: expected function, found struct `Foo`\n   --> $DIR/E0423.rs:4:13\n    |\n+LL |     struct Foo { a: bool };\n+   |     ---------------------- `Foo` defined here\n+LL | \n LL |     let f = Foo();\n    |             ^^^\n    |             |"}, {"sha": "e2229cbc20922caa236d2738e13b6be53136359b", "filename": "src/test/ui/issues/issue-19086.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Ftest%2Fui%2Fissues%2Fissue-19086.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Ftest%2Fui%2Fissues%2Fissue-19086.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-19086.stderr?ref=2ae90165534f18aa5020ae84f5e3768e99139069", "patch": "@@ -1,6 +1,9 @@\n error[E0532]: expected tuple struct/variant, found struct variant `FooB`\n   --> $DIR/issue-19086.rs:10:9\n    |\n+LL |     FooB { x: i32, y: i32 }\n+   |     ----------------------- `FooB` defined here\n+...\n LL |         FooB(a, b) => println!(\"{} {}\", a, b),\n    |         ^^^^ did you mean `FooB { /* fields */ }`?\n "}, {"sha": "e9a5e217392a6e349c7c616e90c50598eb0b4ecf", "filename": "src/test/ui/issues/issue-32004.stderr", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Ftest%2Fui%2Fissues%2Fissue-32004.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Ftest%2Fui%2Fissues%2Fissue-32004.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-32004.stderr?ref=2ae90165534f18aa5020ae84f5e3768e99139069", "patch": "@@ -1,11 +1,14 @@\n error[E0532]: expected unit struct/variant or constant, found tuple variant `Foo::Bar`\n   --> $DIR/issue-32004.rs:10:9\n    |\n+LL |     Bar(i32),\n+   |     -------- `Foo::Bar` defined here\n+...\n LL |         Foo::Bar => {}\n    |         ^^^^^---\n    |         |    |\n    |         |    help: a unit variant with a similar name exists: `Baz`\n-   |         did you mean `Foo::Bar ( /* fields */ )`?\n+   |         did you mean `Foo::Bar( /* fields */ )`?\n \n error[E0532]: expected tuple struct/variant, found unit struct `S`\n   --> $DIR/issue-32004.rs:16:9"}, {"sha": "8949c475b6f727e24b839fdb37e0846fa9311051", "filename": "src/test/ui/issues/issue-63983.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Ftest%2Fui%2Fissues%2Fissue-63983.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Ftest%2Fui%2Fissues%2Fissue-63983.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-63983.stderr?ref=2ae90165534f18aa5020ae84f5e3768e99139069", "patch": "@@ -1,12 +1,18 @@\n error[E0532]: expected unit struct/variant or constant, found tuple variant `MyEnum::Tuple`\n   --> $DIR/issue-63983.rs:8:9\n    |\n+LL |     Tuple(i32),\n+   |     ---------- `MyEnum::Tuple` defined here\n+...\n LL |         MyEnum::Tuple => \"\",\n-   |         ^^^^^^^^^^^^^ did you mean `MyEnum::Tuple ( /* fields */ )`?\n+   |         ^^^^^^^^^^^^^ did you mean `MyEnum::Tuple( /* fields */ )`?\n \n error[E0532]: expected unit struct/variant or constant, found struct variant `MyEnum::Struct`\n   --> $DIR/issue-63983.rs:10:9\n    |\n+LL |     Struct{ s: i32 },\n+   |     ---------------- `MyEnum::Struct` defined here\n+...\n LL |         MyEnum::Struct => \"\",\n    |         ^^^^^^^^^^^^^^ did you mean `MyEnum::Struct { /* fields */ }`?\n "}, {"sha": "900e9cf54c97a5dc3bdcfa6da938af6ff357d6b8", "filename": "src/test/ui/namespace/namespace-mix.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Ftest%2Fui%2Fnamespace%2Fnamespace-mix.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Ftest%2Fui%2Fnamespace%2Fnamespace-mix.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnamespace%2Fnamespace-mix.stderr?ref=2ae90165534f18aa5020ae84f5e3768e99139069", "patch": "@@ -37,6 +37,9 @@ LL | use namespace_mix::xm2::S;\n error[E0423]: expected value, found struct variant `m7::V`\n   --> $DIR/namespace-mix.rs:100:11\n    |\n+LL |         V {},\n+   |         ---- `m7::V` defined here\n+...\n LL |     check(m7::V);\n    |           ^^^^^ did you mean `m7::V { /* fields */ }`?\n help: a tuple variant with a similar name exists"}, {"sha": "32bb88d31c4c7ccf5a2e43cc32b3062d6f2e8f8f", "filename": "src/test/ui/parser/recover-from-bad-variant.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Ftest%2Fui%2Fparser%2Frecover-from-bad-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Ftest%2Fui%2Fparser%2Frecover-from-bad-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Frecover-from-bad-variant.stderr?ref=2ae90165534f18aa5020ae84f5e3768e99139069", "patch": "@@ -12,6 +12,9 @@ LL |     let x = Enum::Foo(a: 3, b: 4);\n error[E0532]: expected tuple struct/variant, found struct variant `Enum::Foo`\n   --> $DIR/recover-from-bad-variant.rs:10:9\n    |\n+LL |     Foo { a: usize, b: usize },\n+   |     -------------------------- `Enum::Foo` defined here\n+...\n LL |         Enum::Foo(a, b) => {}\n    |         ^^^^^^^^^ did you mean `Enum::Foo { /* fields */ }`?\n "}, {"sha": "c76e5ef8b3617dddbd083030b8e452d31e4374ef", "filename": "src/test/ui/resolve/issue-18252.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Ftest%2Fui%2Fresolve%2Fissue-18252.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Ftest%2Fui%2Fresolve%2Fissue-18252.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-18252.stderr?ref=2ae90165534f18aa5020ae84f5e3768e99139069", "patch": "@@ -1,6 +1,9 @@\n error[E0423]: expected function, found struct variant `Foo::Variant`\n   --> $DIR/issue-18252.rs:6:13\n    |\n+LL |     Variant { x: usize }\n+   |     -------------------- `Foo::Variant` defined here\n+...\n LL |     let f = Foo::Variant(42);\n    |             ^^^^^^^^^^^^ did you mean `Foo::Variant { /* fields */ }`?\n "}, {"sha": "4d20f1580264c6db3f20419fa70179edb146666a", "filename": "src/test/ui/resolve/issue-19452.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Ftest%2Fui%2Fresolve%2Fissue-19452.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Ftest%2Fui%2Fresolve%2Fissue-19452.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-19452.stderr?ref=2ae90165534f18aa5020ae84f5e3768e99139069", "patch": "@@ -1,6 +1,9 @@\n error[E0423]: expected value, found struct variant `Homura::Madoka`\n   --> $DIR/issue-19452.rs:10:18\n    |\n+LL |     Madoka { age: u32 }\n+   |     ------------------- `Homura::Madoka` defined here\n+...\n LL |     let homura = Homura::Madoka;\n    |                  ^^^^^^^^^^^^^^ did you mean `Homura::Madoka { /* fields */ }`?\n "}, {"sha": "d9a28e63dce8bda73e8653b06778158d4601ba10", "filename": "src/test/ui/resolve/issue-39226.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Ftest%2Fui%2Fresolve%2Fissue-39226.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Ftest%2Fui%2Fresolve%2Fissue-39226.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-39226.stderr?ref=2ae90165534f18aa5020ae84f5e3768e99139069", "patch": "@@ -1,6 +1,9 @@\n error[E0423]: expected value, found struct `Handle`\n   --> $DIR/issue-39226.rs:11:17\n    |\n+LL | struct Handle {}\n+   | ---------------- `Handle` defined here\n+...\n LL |         handle: Handle\n    |                 ^^^^^^\n    |                 |"}, {"sha": "3fdc7acb274e511433d8e6011c43534adf6cd70c", "filename": "src/test/ui/resolve/issue-6702.stderr", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Ftest%2Fui%2Fresolve%2Fissue-6702.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Ftest%2Fui%2Fresolve%2Fissue-6702.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-6702.stderr?ref=2ae90165534f18aa5020ae84f5e3768e99139069", "patch": "@@ -1,8 +1,13 @@\n error[E0423]: expected function, found struct `Monster`\n   --> $DIR/issue-6702.rs:7:14\n    |\n-LL |     let _m = Monster();\n-   |              ^^^^^^^ did you mean `Monster { /* fields */ }`?\n+LL | / struct Monster {\n+LL | |     damage: isize\n+LL | | }\n+   | |_- `Monster` defined here\n+...\n+LL |       let _m = Monster();\n+   |                ^^^^^^^ did you mean `Monster { /* fields */ }`?\n \n error: aborting due to previous error\n "}, {"sha": "7d8d1d0abfc210947b51f521207bacf6ca07535f", "filename": "src/test/ui/resolve/privacy-enum-ctor.stderr", "status": "modified", "additions": 28, "deletions": 8, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Ftest%2Fui%2Fresolve%2Fprivacy-enum-ctor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Ftest%2Fui%2Fresolve%2Fprivacy-enum-ctor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fprivacy-enum-ctor.stderr?ref=2ae90165534f18aa5020ae84f5e3768e99139069", "patch": "@@ -33,8 +33,13 @@ LL |         m::Z::Unit;\n error[E0423]: expected value, found struct variant `Z::Struct`\n   --> $DIR/privacy-enum-ctor.rs:29:20\n    |\n-LL |         let _: Z = Z::Struct;\n-   |                    ^^^^^^^^^ did you mean `Z::Struct { /* fields */ }`?\n+LL | /             Struct {\n+LL | |                 s: u8,\n+LL | |             },\n+   | |_____________- `Z::Struct` defined here\n+...\n+LL |           let _: Z = Z::Struct;\n+   |                      ^^^^^^^^^ did you mean `Z::Struct { /* fields */ }`?\n \n error[E0423]: expected value, found enum `m::E`\n   --> $DIR/privacy-enum-ctor.rs:41:16\n@@ -63,8 +68,13 @@ LL | use std::f64::consts::E;\n error[E0423]: expected value, found struct variant `m::E::Struct`\n   --> $DIR/privacy-enum-ctor.rs:45:16\n    |\n-LL |     let _: E = m::E::Struct;\n-   |                ^^^^^^^^^^^^ did you mean `m::E::Struct { /* fields */ }`?\n+LL | /         Struct {\n+LL | |             s: u8,\n+LL | |         },\n+   | |_________- `m::E::Struct` defined here\n+...\n+LL |       let _: E = m::E::Struct;\n+   |                  ^^^^^^^^^^^^ did you mean `m::E::Struct { /* fields */ }`?\n \n error[E0423]: expected value, found enum `E`\n   --> $DIR/privacy-enum-ctor.rs:49:16\n@@ -89,8 +99,13 @@ LL | use std::f64::consts::E;\n error[E0423]: expected value, found struct variant `E::Struct`\n   --> $DIR/privacy-enum-ctor.rs:53:16\n    |\n-LL |     let _: E = E::Struct;\n-   |                ^^^^^^^^^ did you mean `E::Struct { /* fields */ }`?\n+LL | /         Struct {\n+LL | |             s: u8,\n+LL | |         },\n+   | |_________- `E::Struct` defined here\n+...\n+LL |       let _: E = E::Struct;\n+   |                  ^^^^^^^^^ did you mean `E::Struct { /* fields */ }`?\n \n error[E0412]: cannot find type `Z` in this scope\n   --> $DIR/privacy-enum-ctor.rs:57:12\n@@ -151,8 +166,13 @@ LL | use m::n::Z;\n error[E0423]: expected value, found struct variant `m::n::Z::Struct`\n   --> $DIR/privacy-enum-ctor.rs:64:16\n    |\n-LL |     let _: Z = m::n::Z::Struct;\n-   |                ^^^^^^^^^^^^^^^ did you mean `m::n::Z::Struct { /* fields */ }`?\n+LL | /             Struct {\n+LL | |                 s: u8,\n+LL | |             },\n+   | |_____________- `m::n::Z::Struct` defined here\n+...\n+LL |       let _: Z = m::n::Z::Struct;\n+   |                  ^^^^^^^^^^^^^^^ did you mean `m::n::Z::Struct { /* fields */ }`?\n \n error[E0412]: cannot find type `Z` in this scope\n   --> $DIR/privacy-enum-ctor.rs:68:12"}, {"sha": "979367bc623fd4ec5985136b5c417ab302b6ffdc", "filename": "src/test/ui/resolve/privacy-struct-ctor.stderr", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr?ref=2ae90165534f18aa5020ae84f5e3768e99139069", "patch": "@@ -16,8 +16,13 @@ LL |     S;\n error[E0423]: expected value, found struct `S2`\n   --> $DIR/privacy-struct-ctor.rs:38:5\n    |\n-LL |     S2;\n-   |     ^^ did you mean `S2 { /* fields */ }`?\n+LL | /     pub struct S2 {\n+LL | |         s: u8\n+LL | |     }\n+   | |_____- `S2` defined here\n+...\n+LL |       S2;\n+   |       ^^ did you mean `S2 { /* fields */ }`?\n \n error[E0423]: expected value, found struct `xcrate::S`\n   --> $DIR/privacy-struct-ctor.rs:43:5"}, {"sha": "1af0f7a191e80d1056b787436c7a45ec71d92c42", "filename": "src/test/ui/suggestions/fn-or-tuple-struct-without-args.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Ftest%2Fui%2Fsuggestions%2Ffn-or-tuple-struct-without-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Ftest%2Fui%2Fsuggestions%2Ffn-or-tuple-struct-without-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Ffn-or-tuple-struct-without-args.stderr?ref=2ae90165534f18aa5020ae84f5e3768e99139069", "patch": "@@ -1,6 +1,9 @@\n error[E0423]: expected value, found struct variant `E::B`\n   --> $DIR/fn-or-tuple-struct-without-args.rs:36:16\n    |\n+LL |     B { a: usize },\n+   |     -------------- `E::B` defined here\n+...\n LL |     let _: E = E::B;\n    |                ^^^-\n    |                |  |"}, {"sha": "fbcfba6653f274bf3e1a7d2873420f54d78267c4", "filename": "src/test/ui/suggestions/issue-61226.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Ftest%2Fui%2Fsuggestions%2Fissue-61226.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ae90165534f18aa5020ae84f5e3768e99139069/src%2Ftest%2Fui%2Fsuggestions%2Fissue-61226.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-61226.stderr?ref=2ae90165534f18aa5020ae84f5e3768e99139069", "patch": "@@ -1,6 +1,9 @@\n error[E0423]: expected value, found struct `X`\n   --> $DIR/issue-61226.rs:3:10\n    |\n+LL | struct X {}\n+   | ----------- `X` defined here\n+LL | fn main() {\n LL |     vec![X]; //\u2026\n    |          ^ did you mean `X { /* fields */ }`?\n "}]}