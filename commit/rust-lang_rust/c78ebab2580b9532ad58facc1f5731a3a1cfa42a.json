{"sha": "c78ebab2580b9532ad58facc1f5731a3a1cfa42a", "node_id": "C_kwDOAAsO6NoAKGM3OGViYWIyNTgwYjk1MzJhZDU4ZmFjYzFmNTczMWEzYTFjZmE0MmE", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2023-03-03T13:54:56Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2023-03-24T12:41:21Z"}, "message": "Add regression tests for #108653", "tree": {"sha": "3c7d52964549efe2838fdf85e31593eea965c695", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c7d52964549efe2838fdf85e31593eea965c695"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c78ebab2580b9532ad58facc1f5731a3a1cfa42a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c78ebab2580b9532ad58facc1f5731a3a1cfa42a", "html_url": "https://github.com/rust-lang/rust/commit/c78ebab2580b9532ad58facc1f5731a3a1cfa42a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c78ebab2580b9532ad58facc1f5731a3a1cfa42a/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e193950c3c087c1acba48e75f6ac27d3dad1586d", "url": "https://api.github.com/repos/rust-lang/rust/commits/e193950c3c087c1acba48e75f6ac27d3dad1586d", "html_url": "https://github.com/rust-lang/rust/commit/e193950c3c087c1acba48e75f6ac27d3dad1586d"}], "stats": {"total": 441, "additions": 416, "deletions": 25}, "files": [{"sha": "9e12bb5efc3fe97a4811928814be0ff65bde8490", "filename": "tests/rustdoc-ui/intra-doc/ambiguity.stderr", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/c78ebab2580b9532ad58facc1f5731a3a1cfa42a/tests%2Frustdoc-ui%2Fintra-doc%2Fambiguity.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c78ebab2580b9532ad58facc1f5731a3a1cfa42a/tests%2Frustdoc-ui%2Fintra-doc%2Fambiguity.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fintra-doc%2Fambiguity.stderr?ref=c78ebab2580b9532ad58facc1f5731a3a1cfa42a", "patch": "@@ -18,84 +18,84 @@ help: to link to the builtin type, prefix with `prim@`\n LL | /// [prim@true]\n    |      +++++\n \n-error: `ambiguous` is both a struct and a function\n+error: `ambiguous` is both a function and a struct\n   --> $DIR/ambiguity.rs:27:7\n    |\n LL | /// [`ambiguous`] is ambiguous.\n    |       ^^^^^^^^^ ambiguous link\n    |\n-help: to link to the struct, prefix with `struct@`\n-   |\n-LL | /// [`struct@ambiguous`] is ambiguous.\n-   |       +++++++\n help: to link to the function, add parentheses\n    |\n LL | /// [`ambiguous()`] is ambiguous.\n    |                ++\n+help: to link to the struct, prefix with `struct@`\n+   |\n+LL | /// [`struct@ambiguous`] is ambiguous.\n+   |       +++++++\n \n-error: `ambiguous` is both a struct and a function\n+error: `ambiguous` is both a function and a struct\n   --> $DIR/ambiguity.rs:29:6\n    |\n LL | /// [ambiguous] is ambiguous.\n    |      ^^^^^^^^^ ambiguous link\n    |\n-help: to link to the struct, prefix with `struct@`\n-   |\n-LL | /// [struct@ambiguous] is ambiguous.\n-   |      +++++++\n help: to link to the function, add parentheses\n    |\n LL | /// [ambiguous()] is ambiguous.\n    |               ++\n+help: to link to the struct, prefix with `struct@`\n+   |\n+LL | /// [struct@ambiguous] is ambiguous.\n+   |      +++++++\n \n-error: `multi_conflict` is a struct, a function, and a macro\n+error: `multi_conflict` is a function, a struct, and a macro\n   --> $DIR/ambiguity.rs:31:7\n    |\n LL | /// [`multi_conflict`] is a three-way conflict.\n    |       ^^^^^^^^^^^^^^ ambiguous link\n    |\n-help: to link to the struct, prefix with `struct@`\n-   |\n-LL | /// [`struct@multi_conflict`] is a three-way conflict.\n-   |       +++++++\n help: to link to the function, add parentheses\n    |\n LL | /// [`multi_conflict()`] is a three-way conflict.\n    |                     ++\n+help: to link to the struct, prefix with `struct@`\n+   |\n+LL | /// [`struct@multi_conflict`] is a three-way conflict.\n+   |       +++++++\n help: to link to the macro, add an exclamation mark\n    |\n LL | /// [`multi_conflict!`] is a three-way conflict.\n    |                     +\n \n-error: `type_and_value` is both a module and a constant\n+error: `type_and_value` is both a constant and a module\n   --> $DIR/ambiguity.rs:33:16\n    |\n LL | /// Ambiguous [type_and_value].\n    |                ^^^^^^^^^^^^^^ ambiguous link\n    |\n-help: to link to the module, prefix with `mod@`\n-   |\n-LL | /// Ambiguous [mod@type_and_value].\n-   |                ++++\n help: to link to the constant, prefix with `const@`\n    |\n LL | /// Ambiguous [const@type_and_value].\n    |                ++++++\n+help: to link to the module, prefix with `mod@`\n+   |\n+LL | /// Ambiguous [mod@type_and_value].\n+   |                ++++\n \n-error: `foo::bar` is both an enum and a function\n+error: `foo::bar` is both a function and an enum\n   --> $DIR/ambiguity.rs:35:43\n    |\n LL | /// Ambiguous non-implied shortcut link [`foo::bar`].\n    |                                           ^^^^^^^^ ambiguous link\n    |\n-help: to link to the enum, prefix with `enum@`\n-   |\n-LL | /// Ambiguous non-implied shortcut link [`enum@foo::bar`].\n-   |                                           +++++\n help: to link to the function, add parentheses\n    |\n LL | /// Ambiguous non-implied shortcut link [`foo::bar()`].\n    |                                                   ++\n+help: to link to the enum, prefix with `enum@`\n+   |\n+LL | /// Ambiguous non-implied shortcut link [`enum@foo::bar`].\n+   |                                           +++++\n \n error: aborting due to 6 previous errors\n "}, {"sha": "cbe60f746b682a42febea1f0ea41e22bb1673250", "filename": "tests/rustdoc-ui/intra-doc/issue-108653-associated-items-2.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c78ebab2580b9532ad58facc1f5731a3a1cfa42a/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c78ebab2580b9532ad58facc1f5731a3a1cfa42a/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-2.rs?ref=c78ebab2580b9532ad58facc1f5731a3a1cfa42a", "patch": "@@ -0,0 +1,17 @@\n+// This is ensuring that the UI output for associated items is as expected.\n+\n+#![deny(rustdoc::broken_intra_doc_links)]\n+\n+/// [`Trait::IDENT`]\n+//~^ ERROR both an associated constant and an associated type\n+pub trait Trait {\n+    type IDENT;\n+    const IDENT: usize;\n+}\n+\n+/// [`Trait2::IDENT`]\n+//~^ ERROR both an associated function and an associated type\n+pub trait Trait2 {\n+    type IDENT;\n+    fn IDENT() {}\n+}"}, {"sha": "952392548da8a34a6de94a6696b92d1045a50da6", "filename": "tests/rustdoc-ui/intra-doc/issue-108653-associated-items-2.stderr", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/c78ebab2580b9532ad58facc1f5731a3a1cfa42a/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c78ebab2580b9532ad58facc1f5731a3a1cfa42a/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-2.stderr?ref=c78ebab2580b9532ad58facc1f5731a3a1cfa42a", "patch": "@@ -0,0 +1,37 @@\n+error: `Trait::IDENT` is both an associated constant and an associated type\n+  --> $DIR/issue-108653-associated-items-2.rs:5:7\n+   |\n+LL | /// [`Trait::IDENT`]\n+   |       ^^^^^^^^^^^^ ambiguous link\n+   |\n+note: the lint level is defined here\n+  --> $DIR/issue-108653-associated-items-2.rs:3:9\n+   |\n+LL | #![deny(rustdoc::broken_intra_doc_links)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+help: to link to the associated constant, prefix with `const@`\n+   |\n+LL | /// [`const@Trait::IDENT`]\n+   |       ++++++\n+help: to link to the associated type, prefix with `type@`\n+   |\n+LL | /// [`type@Trait::IDENT`]\n+   |       +++++\n+\n+error: `Trait2::IDENT` is both an associated function and an associated type\n+  --> $DIR/issue-108653-associated-items-2.rs:12:7\n+   |\n+LL | /// [`Trait2::IDENT`]\n+   |       ^^^^^^^^^^^^^ ambiguous link\n+   |\n+help: to link to the associated function, add parentheses\n+   |\n+LL | /// [`Trait2::IDENT()`]\n+   |                    ++\n+help: to link to the associated type, prefix with `type@`\n+   |\n+LL | /// [`type@Trait2::IDENT`]\n+   |       +++++\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "7ffd0a40e7cfe15d5d452b97822cacf8fd4f0a65", "filename": "tests/rustdoc-ui/intra-doc/issue-108653-associated-items-3.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c78ebab2580b9532ad58facc1f5731a3a1cfa42a/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c78ebab2580b9532ad58facc1f5731a3a1cfa42a/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-3.rs?ref=c78ebab2580b9532ad58facc1f5731a3a1cfa42a", "patch": "@@ -0,0 +1,16 @@\n+// This is ensuring that the UI output for associated items works when it's being documented\n+// from another item.\n+\n+#![deny(rustdoc::broken_intra_doc_links)]\n+#![allow(nonstandard_style)]\n+\n+pub trait Trait {\n+    type Trait;\n+    const Trait: usize;\n+}\n+\n+/// [`Trait`]\n+//~^ ERROR both a constant and a trait\n+/// [`Trait::Trait`]\n+//~^ ERROR both an associated constant and an associated type\n+pub const Trait: usize = 0;"}, {"sha": "6401dacb57a8e02d9f0564896fdbc15c7adeaac7", "filename": "tests/rustdoc-ui/intra-doc/issue-108653-associated-items-3.stderr", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/c78ebab2580b9532ad58facc1f5731a3a1cfa42a/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c78ebab2580b9532ad58facc1f5731a3a1cfa42a/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-3.stderr?ref=c78ebab2580b9532ad58facc1f5731a3a1cfa42a", "patch": "@@ -0,0 +1,37 @@\n+error: `Trait` is both a constant and a trait\n+  --> $DIR/issue-108653-associated-items-3.rs:12:7\n+   |\n+LL | /// [`Trait`]\n+   |       ^^^^^ ambiguous link\n+   |\n+note: the lint level is defined here\n+  --> $DIR/issue-108653-associated-items-3.rs:4:9\n+   |\n+LL | #![deny(rustdoc::broken_intra_doc_links)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+help: to link to the constant, prefix with `const@`\n+   |\n+LL | /// [`const@Trait`]\n+   |       ++++++\n+help: to link to the trait, prefix with `trait@`\n+   |\n+LL | /// [`trait@Trait`]\n+   |       ++++++\n+\n+error: `Trait::Trait` is both an associated constant and an associated type\n+  --> $DIR/issue-108653-associated-items-3.rs:14:7\n+   |\n+LL | /// [`Trait::Trait`]\n+   |       ^^^^^^^^^^^^ ambiguous link\n+   |\n+help: to link to the associated constant, prefix with `const@`\n+   |\n+LL | /// [`const@Trait::Trait`]\n+   |       ++++++\n+help: to link to the associated type, prefix with `type@`\n+   |\n+LL | /// [`type@Trait::Trait`]\n+   |       +++++\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "537d61364bb1a19b1b7ce828fc661b2d3c4f6f89", "filename": "tests/rustdoc-ui/intra-doc/issue-108653-associated-items-4.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/c78ebab2580b9532ad58facc1f5731a3a1cfa42a/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c78ebab2580b9532ad58facc1f5731a3a1cfa42a/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-4.rs?ref=c78ebab2580b9532ad58facc1f5731a3a1cfa42a", "patch": "@@ -0,0 +1,21 @@\n+// This is ensuring that the UI output for associated items works when it's being documented\n+// from another item.\n+\n+#![deny(rustdoc::broken_intra_doc_links)]\n+#![allow(nonstandard_style)]\n+\n+pub trait Trait {\n+    type Trait;\n+}\n+\n+/// [`Struct::Trait`]\n+//~^ ERROR both an associated constant and an associated type\n+pub struct Struct;\n+\n+impl Trait for Struct {\n+    type Trait = Struct;\n+}\n+\n+impl Struct {\n+    pub const Trait: usize = 0;\n+}"}, {"sha": "a8dc91204c0836887959ec0d487d03cfce4ca226", "filename": "tests/rustdoc-ui/intra-doc/issue-108653-associated-items-4.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c78ebab2580b9532ad58facc1f5731a3a1cfa42a/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c78ebab2580b9532ad58facc1f5731a3a1cfa42a/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-4.stderr?ref=c78ebab2580b9532ad58facc1f5731a3a1cfa42a", "patch": "@@ -0,0 +1,22 @@\n+error: `Struct::Trait` is both an associated constant and an associated type\n+  --> $DIR/issue-108653-associated-items-4.rs:11:7\n+   |\n+LL | /// [`Struct::Trait`]\n+   |       ^^^^^^^^^^^^^ ambiguous link\n+   |\n+note: the lint level is defined here\n+  --> $DIR/issue-108653-associated-items-4.rs:4:9\n+   |\n+LL | #![deny(rustdoc::broken_intra_doc_links)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+help: to link to the associated constant, prefix with `const@`\n+   |\n+LL | /// [`const@Struct::Trait`]\n+   |       ++++++\n+help: to link to the associated type, prefix with `type@`\n+   |\n+LL | /// [`type@Struct::Trait`]\n+   |       +++++\n+\n+error: aborting due to previous error\n+"}, {"sha": "bc28bc5442181c0a47a386aca23304b2e6e82df4", "filename": "tests/rustdoc-ui/intra-doc/issue-108653-associated-items-5.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c78ebab2580b9532ad58facc1f5731a3a1cfa42a/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c78ebab2580b9532ad58facc1f5731a3a1cfa42a/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-5.rs?ref=c78ebab2580b9532ad58facc1f5731a3a1cfa42a", "patch": "@@ -0,0 +1,8 @@\n+#![deny(rustdoc::broken_intra_doc_links)]\n+#![allow(nonstandard_style)]\n+\n+/// [`u32::MAX`]\n+//~^ ERROR both an associated constant and a trait\n+pub mod u32 {\n+    pub trait MAX {}\n+}"}, {"sha": "7430044ac3f1bc698364f7731774c343a313ab15", "filename": "tests/rustdoc-ui/intra-doc/issue-108653-associated-items-5.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c78ebab2580b9532ad58facc1f5731a3a1cfa42a/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-5.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c78ebab2580b9532ad58facc1f5731a3a1cfa42a/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-5.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-5.stderr?ref=c78ebab2580b9532ad58facc1f5731a3a1cfa42a", "patch": "@@ -0,0 +1,22 @@\n+error: `u32::MAX` is both an associated constant and a trait\n+  --> $DIR/issue-108653-associated-items-5.rs:4:7\n+   |\n+LL | /// [`u32::MAX`]\n+   |       ^^^^^^^^ ambiguous link\n+   |\n+note: the lint level is defined here\n+  --> $DIR/issue-108653-associated-items-5.rs:1:9\n+   |\n+LL | #![deny(rustdoc::broken_intra_doc_links)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+help: to link to the associated constant, prefix with `const@`\n+   |\n+LL | /// [`const@u32::MAX`]\n+   |       ++++++\n+help: to link to the trait, prefix with `trait@`\n+   |\n+LL | /// [`trait@u32::MAX`]\n+   |       ++++++\n+\n+error: aborting due to previous error\n+"}, {"sha": "d5ba259d54b8918a5eeb6967f68a0f3036c5dc81", "filename": "tests/rustdoc-ui/intra-doc/issue-108653-associated-items-6.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c78ebab2580b9532ad58facc1f5731a3a1cfa42a/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c78ebab2580b9532ad58facc1f5731a3a1cfa42a/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-6.rs?ref=c78ebab2580b9532ad58facc1f5731a3a1cfa42a", "patch": "@@ -0,0 +1,8 @@\n+#![deny(rustdoc::broken_intra_doc_links)]\n+#![allow(nonstandard_style)]\n+\n+/// [`u32::MAX`]\n+//~^ ERROR both an associated constant and a builtin type\n+pub mod u32 {\n+    pub use std::primitive::u32 as MAX;\n+}"}, {"sha": "af138a75682799bb2fa217afd55755ddfcab6416", "filename": "tests/rustdoc-ui/intra-doc/issue-108653-associated-items-6.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c78ebab2580b9532ad58facc1f5731a3a1cfa42a/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-6.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c78ebab2580b9532ad58facc1f5731a3a1cfa42a/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-6.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-6.stderr?ref=c78ebab2580b9532ad58facc1f5731a3a1cfa42a", "patch": "@@ -0,0 +1,22 @@\n+error: `u32::MAX` is both an associated constant and a builtin type\n+  --> $DIR/issue-108653-associated-items-6.rs:4:7\n+   |\n+LL | /// [`u32::MAX`]\n+   |       ^^^^^^^^ ambiguous link\n+   |\n+note: the lint level is defined here\n+  --> $DIR/issue-108653-associated-items-6.rs:1:9\n+   |\n+LL | #![deny(rustdoc::broken_intra_doc_links)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+help: to link to the associated constant, prefix with `const@`\n+   |\n+LL | /// [`const@u32::MAX`]\n+   |       ++++++\n+help: to link to the builtin type, prefix with `prim@`\n+   |\n+LL | /// [`prim@u32::MAX`]\n+   |       +++++\n+\n+error: aborting due to previous error\n+"}, {"sha": "6e99f4365a78d0dcc580d1f8a09da3042b7b87c5", "filename": "tests/rustdoc-ui/intra-doc/issue-108653-associated-items-7.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c78ebab2580b9532ad58facc1f5731a3a1cfa42a/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c78ebab2580b9532ad58facc1f5731a3a1cfa42a/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-7.rs?ref=c78ebab2580b9532ad58facc1f5731a3a1cfa42a", "patch": "@@ -0,0 +1,12 @@\n+#![deny(rustdoc::broken_intra_doc_links)]\n+#![allow(nonstandard_style)]\n+\n+pub trait Trait {\n+    type MAX;\n+}\n+\n+/// [`u32::MAX`]\n+//~^ ERROR both an associated constant and an associated type\n+impl Trait for u32 {\n+    type MAX = u32;\n+}"}, {"sha": "1d302ff42e86f1b89e5f5adffc7160ce25f8e9e7", "filename": "tests/rustdoc-ui/intra-doc/issue-108653-associated-items-7.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c78ebab2580b9532ad58facc1f5731a3a1cfa42a/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-7.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c78ebab2580b9532ad58facc1f5731a3a1cfa42a/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-7.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-7.stderr?ref=c78ebab2580b9532ad58facc1f5731a3a1cfa42a", "patch": "@@ -0,0 +1,22 @@\n+error: `u32::MAX` is both an associated constant and an associated type\n+  --> $DIR/issue-108653-associated-items-7.rs:8:7\n+   |\n+LL | /// [`u32::MAX`]\n+   |       ^^^^^^^^ ambiguous link\n+   |\n+note: the lint level is defined here\n+  --> $DIR/issue-108653-associated-items-7.rs:1:9\n+   |\n+LL | #![deny(rustdoc::broken_intra_doc_links)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+help: to link to the associated constant, prefix with `const@`\n+   |\n+LL | /// [`const@u32::MAX`]\n+   |       ++++++\n+help: to link to the associated type, prefix with `type@`\n+   |\n+LL | /// [`type@u32::MAX`]\n+   |       +++++\n+\n+error: aborting due to previous error\n+"}, {"sha": "2f8ee1566bd4e76cf3dc2c21f87b8fbd08b752f6", "filename": "tests/rustdoc-ui/intra-doc/issue-108653-associated-items-8.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c78ebab2580b9532ad58facc1f5731a3a1cfa42a/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c78ebab2580b9532ad58facc1f5731a3a1cfa42a/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-8.rs?ref=c78ebab2580b9532ad58facc1f5731a3a1cfa42a", "patch": "@@ -0,0 +1,12 @@\n+#![deny(rustdoc::broken_intra_doc_links)]\n+#![allow(nonstandard_style)]\n+\n+/// [`u32::MAX`]\n+//~^ ERROR both an associated constant and an associated type\n+pub trait T {\n+    type MAX;\n+}\n+\n+impl T for u32 {\n+    type MAX = ();\n+}"}, {"sha": "efed0e2ce0ff54fdda62860991725ef899582bee", "filename": "tests/rustdoc-ui/intra-doc/issue-108653-associated-items-8.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c78ebab2580b9532ad58facc1f5731a3a1cfa42a/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-8.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c78ebab2580b9532ad58facc1f5731a3a1cfa42a/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-8.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-8.stderr?ref=c78ebab2580b9532ad58facc1f5731a3a1cfa42a", "patch": "@@ -0,0 +1,22 @@\n+error: `u32::MAX` is both an associated constant and an associated type\n+  --> $DIR/issue-108653-associated-items-8.rs:4:7\n+   |\n+LL | /// [`u32::MAX`]\n+   |       ^^^^^^^^ ambiguous link\n+   |\n+note: the lint level is defined here\n+  --> $DIR/issue-108653-associated-items-8.rs:1:9\n+   |\n+LL | #![deny(rustdoc::broken_intra_doc_links)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+help: to link to the associated constant, prefix with `const@`\n+   |\n+LL | /// [`const@u32::MAX`]\n+   |       ++++++\n+help: to link to the associated type, prefix with `type@`\n+   |\n+LL | /// [`type@u32::MAX`]\n+   |       +++++\n+\n+error: aborting due to previous error\n+"}, {"sha": "3357ccf2460d819a21344a491b253e55efa25d44", "filename": "tests/rustdoc-ui/intra-doc/issue-108653-associated-items-9.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c78ebab2580b9532ad58facc1f5731a3a1cfa42a/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-9.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c78ebab2580b9532ad58facc1f5731a3a1cfa42a/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-9.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-9.rs?ref=c78ebab2580b9532ad58facc1f5731a3a1cfa42a", "patch": "@@ -0,0 +1,11 @@\n+// check-pass\n+\n+#![deny(warnings)]\n+\n+//! [usize::Item]\n+\n+pub trait Foo { type Item; }\n+pub trait Bar { type Item; }\n+\n+impl Foo for usize { type Item = u32; }\n+impl Bar for usize { type Item = i32; }"}, {"sha": "0a393e26d6a96ee2f3007593f9fbeb8dcde3a95a", "filename": "tests/rustdoc-ui/intra-doc/issue-108653-associated-items.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/c78ebab2580b9532ad58facc1f5731a3a1cfa42a/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c78ebab2580b9532ad58facc1f5731a3a1cfa42a/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items.rs?ref=c78ebab2580b9532ad58facc1f5731a3a1cfa42a", "patch": "@@ -0,0 +1,35 @@\n+// This is ensuring that the UI output for associated items is as expected.\n+\n+#![deny(rustdoc::broken_intra_doc_links)]\n+\n+pub enum Enum {\n+    IDENT,\n+}\n+\n+/// [`Self::IDENT`]\n+//~^ ERROR both an associated function and an associated type\n+pub trait Trait {\n+    type IDENT;\n+    fn IDENT();\n+}\n+\n+/// [`Self::IDENT`]\n+//~^ ERROR both an associated function and a variant\n+impl Trait for Enum {\n+    type IDENT = usize;\n+    fn IDENT() {}\n+}\n+\n+/// [`Self::IDENT2`]\n+//~^ ERROR both an associated constant and an associated type\n+pub trait Trait2 {\n+    type IDENT2;\n+    const IDENT2: usize;\n+}\n+\n+/// [`Self::IDENT2`]\n+//~^ ERROR both an associated constant and an associated type\n+impl Trait2 for Enum {\n+    type IDENT2 = usize;\n+    const IDENT2: usize = 0;\n+}"}, {"sha": "084aefc97c8348f72f4f91e616fd4f26669330fb", "filename": "tests/rustdoc-ui/intra-doc/issue-108653-associated-items.stderr", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/c78ebab2580b9532ad58facc1f5731a3a1cfa42a/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c78ebab2580b9532ad58facc1f5731a3a1cfa42a/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items.stderr?ref=c78ebab2580b9532ad58facc1f5731a3a1cfa42a", "patch": "@@ -0,0 +1,67 @@\n+error: `Self::IDENT` is both an associated function and an associated type\n+  --> $DIR/issue-108653-associated-items.rs:9:7\n+   |\n+LL | /// [`Self::IDENT`]\n+   |       ^^^^^^^^^^^ ambiguous link\n+   |\n+note: the lint level is defined here\n+  --> $DIR/issue-108653-associated-items.rs:3:9\n+   |\n+LL | #![deny(rustdoc::broken_intra_doc_links)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+help: to link to the associated function, add parentheses\n+   |\n+LL | /// [`Self::IDENT()`]\n+   |                  ++\n+help: to link to the associated type, prefix with `type@`\n+   |\n+LL | /// [`type@Self::IDENT`]\n+   |       +++++\n+\n+error: `Self::IDENT2` is both an associated constant and an associated type\n+  --> $DIR/issue-108653-associated-items.rs:23:7\n+   |\n+LL | /// [`Self::IDENT2`]\n+   |       ^^^^^^^^^^^^ ambiguous link\n+   |\n+help: to link to the associated constant, prefix with `const@`\n+   |\n+LL | /// [`const@Self::IDENT2`]\n+   |       ++++++\n+help: to link to the associated type, prefix with `type@`\n+   |\n+LL | /// [`type@Self::IDENT2`]\n+   |       +++++\n+\n+error: `Self::IDENT2` is both an associated constant and an associated type\n+  --> $DIR/issue-108653-associated-items.rs:30:7\n+   |\n+LL | /// [`Self::IDENT2`]\n+   |       ^^^^^^^^^^^^ ambiguous link\n+   |\n+help: to link to the associated constant, prefix with `const@`\n+   |\n+LL | /// [`const@Self::IDENT2`]\n+   |       ++++++\n+help: to link to the associated type, prefix with `type@`\n+   |\n+LL | /// [`type@Self::IDENT2`]\n+   |       +++++\n+\n+error: `Self::IDENT` is both an associated function and a variant\n+  --> $DIR/issue-108653-associated-items.rs:16:7\n+   |\n+LL | /// [`Self::IDENT`]\n+   |       ^^^^^^^^^^^ ambiguous link\n+   |\n+help: to link to the associated function, add parentheses\n+   |\n+LL | /// [`Self::IDENT()`]\n+   |                  ++\n+help: to link to the variant, prefix with `type@`\n+   |\n+LL | /// [`type@Self::IDENT`]\n+   |       +++++\n+\n+error: aborting due to 4 previous errors\n+"}]}