{"sha": "24ef90527351bb1a52c8b54e948cdbba8db3eef6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0ZWY5MDUyNzM1MWJiMWE1MmM4YjU0ZTk0OGNkYmJhOGRiM2VlZjY=", "commit": {"author": {"name": "Geoffry Song", "email": "goffrie@gmail.com", "date": "2015-04-26T05:09:36Z"}, "committer": {"name": "Geoffry Song", "email": "goffrie@gmail.com", "date": "2015-04-26T05:09:36Z"}, "message": "Remove FakeExtCtxt from qquote tests.\n\nInstead create an ExtCtxt structure.", "tree": {"sha": "a6b97b9d9ec58838cd4205bf459af90c17d04552", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6b97b9d9ec58838cd4205bf459af90c17d04552"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24ef90527351bb1a52c8b54e948cdbba8db3eef6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24ef90527351bb1a52c8b54e948cdbba8db3eef6", "html_url": "https://github.com/rust-lang/rust/commit/24ef90527351bb1a52c8b54e948cdbba8db3eef6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24ef90527351bb1a52c8b54e948cdbba8db3eef6/comments", "author": {"login": "goffrie", "id": 1240398, "node_id": "MDQ6VXNlcjEyNDAzOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1240398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goffrie", "html_url": "https://github.com/goffrie", "followers_url": "https://api.github.com/users/goffrie/followers", "following_url": "https://api.github.com/users/goffrie/following{/other_user}", "gists_url": "https://api.github.com/users/goffrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/goffrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goffrie/subscriptions", "organizations_url": "https://api.github.com/users/goffrie/orgs", "repos_url": "https://api.github.com/users/goffrie/repos", "events_url": "https://api.github.com/users/goffrie/events{/privacy}", "received_events_url": "https://api.github.com/users/goffrie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "goffrie", "id": 1240398, "node_id": "MDQ6VXNlcjEyNDAzOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1240398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goffrie", "html_url": "https://github.com/goffrie", "followers_url": "https://api.github.com/users/goffrie/followers", "following_url": "https://api.github.com/users/goffrie/following{/other_user}", "gists_url": "https://api.github.com/users/goffrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/goffrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goffrie/subscriptions", "organizations_url": "https://api.github.com/users/goffrie/orgs", "repos_url": "https://api.github.com/users/goffrie/repos", "events_url": "https://api.github.com/users/goffrie/events{/privacy}", "received_events_url": "https://api.github.com/users/goffrie/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea892dc70b1a773b85410716b5822cc814542ecc", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea892dc70b1a773b85410716b5822cc814542ecc", "html_url": "https://github.com/rust-lang/rust/commit/ea892dc70b1a773b85410716b5822cc814542ecc"}], "stats": {"total": 86, "additions": 30, "deletions": 56}, "files": [{"sha": "cf68efe5855b754659c918c778da6e5de52be419", "filename": "src/test/compile-fail-fulldeps/qquote.rs", "status": "modified", "additions": 15, "deletions": 28, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/24ef90527351bb1a52c8b54e948cdbba8db3eef6/src%2Ftest%2Fcompile-fail-fulldeps%2Fqquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24ef90527351bb1a52c8b54e948cdbba8db3eef6/src%2Ftest%2Fcompile-fail-fulldeps%2Fqquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fqquote.rs?ref=24ef90527351bb1a52c8b54e948cdbba8db3eef6", "patch": "@@ -15,38 +15,25 @@\n extern crate syntax;\n \n use syntax::ast;\n-use syntax::codemap;\n+use syntax::codemap::{self, DUMMY_SP};\n use syntax::parse;\n use syntax::print::pprust;\n \n-trait FakeExtCtxt {\n-    fn call_site(&self) -> codemap::Span;\n-    fn cfg(&self) -> ast::CrateConfig;\n-    fn ident_of(&self, st: &str) -> ast::Ident;\n-    fn name_of(&self, st: &str) -> ast::Name;\n-    fn parse_sess(&self) -> &parse::ParseSess;\n-}\n-\n-impl FakeExtCtxt for parse::ParseSess {\n-    fn call_site(&self) -> codemap::Span {\n-        codemap::Span {\n-            lo: codemap::BytePos(0),\n-            hi: codemap::BytePos(0),\n-            expn_id: codemap::NO_EXPANSION,\n-        }\n-    }\n-    fn cfg(&self) -> ast::CrateConfig { Vec::new() }\n-    fn ident_of(&self, st: &str) -> ast::Ident {\n-        parse::token::str_to_ident(st)\n-    }\n-    fn name_of(&self, st: &str) -> ast::Name {\n-        parse::token::intern(st)\n-    }\n-    fn parse_sess(&self) -> &parse::ParseSess { self }\n-}\n-\n fn main() {\n-    let cx = parse::new_parse_sess();\n+    let ps = syntax::parse::new_parse_sess();\n+    let mut cx = syntax::ext::base::ExtCtxt::new(\n+        &ps, vec![],\n+        syntax::ext::expand::ExpansionConfig::default(\"qquote\".to_string()));\n+    cx.bt_push(syntax::codemap::ExpnInfo {\n+        call_site: DUMMY_SP,\n+        callee: syntax::codemap::NameAndSpan {\n+            name: \"\".to_string(),\n+            format: syntax::codemap::MacroBang,\n+            allow_internal_unstable: false,\n+            span: None,\n+        }\n+    });\n+    let cx = &mut cx;\n \n     assert_eq!(pprust::expr_to_string(&*quote_expr!(&cx, 23)), \"23\");\n "}, {"sha": "6ae22392b939eff3d10ee811caa08710edb70d96", "filename": "src/test/run-fail/qquote.rs", "status": "modified", "additions": 15, "deletions": 28, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/24ef90527351bb1a52c8b54e948cdbba8db3eef6/src%2Ftest%2Frun-fail%2Fqquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24ef90527351bb1a52c8b54e948cdbba8db3eef6/src%2Ftest%2Frun-fail%2Fqquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fqquote.rs?ref=24ef90527351bb1a52c8b54e948cdbba8db3eef6", "patch": "@@ -17,38 +17,25 @@\n extern crate syntax;\n \n use syntax::ast;\n-use syntax::codemap;\n+use syntax::codemap::{self, DUMMY_SP};\n use syntax::parse;\n use syntax::print::pprust;\n \n-trait FakeExtCtxt {\n-    fn call_site(&self) -> codemap::Span;\n-    fn cfg(&self) -> ast::CrateConfig;\n-    fn ident_of(&self, st: &str) -> ast::Ident;\n-    fn name_of(&self, st: &str) -> ast::Name;\n-    fn parse_sess(&self) -> &parse::ParseSess;\n-}\n-\n-impl FakeExtCtxt for parse::ParseSess {\n-    fn call_site(&self) -> codemap::Span {\n-        codemap::Span {\n-            lo: codemap::BytePos(0),\n-            hi: codemap::BytePos(0),\n-            expn_id: codemap::NO_EXPANSION,\n-        }\n-    }\n-    fn cfg(&self) -> ast::CrateConfig { Vec::new() }\n-    fn ident_of(&self, st: &str) -> ast::Ident {\n-        parse::token::str_to_ident(st)\n-    }\n-    fn name_of(&self, st: &str) -> ast::Name {\n-        parse::token::intern(st)\n-    }\n-    fn parse_sess(&self) -> &parse::ParseSess { self }\n-}\n-\n fn main() {\n-    let cx = parse::new_parse_sess();\n+    let ps = syntax::parse::new_parse_sess();\n+    let mut cx = syntax::ext::base::ExtCtxt::new(\n+        &ps, vec![],\n+        syntax::ext::expand::ExpansionConfig::default(\"qquote\".to_string()));\n+    cx.bt_push(syntax::codemap::ExpnInfo {\n+        call_site: DUMMY_SP,\n+        callee: syntax::codemap::NameAndSpan {\n+            name: \"\".to_string(),\n+            format: syntax::codemap::MacroBang,\n+            allow_internal_unstable: false,\n+            span: None,\n+        }\n+    });\n+    let cx = &mut cx;\n \n     assert_eq!(pprust::expr_to_string(&*quote_expr!(&cx, 23)), \"23\");\n "}]}