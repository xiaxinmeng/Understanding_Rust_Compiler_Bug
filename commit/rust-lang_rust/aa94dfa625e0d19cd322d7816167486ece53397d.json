{"sha": "aa94dfa625e0d19cd322d7816167486ece53397d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhOTRkZmE2MjVlMGQxOWNkMzIyZDc4MTYxNjc0ODZlY2U1MzM5N2Q=", "commit": {"author": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2013-08-01T22:54:58Z"}, "committer": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2013-08-01T22:54:58Z"}, "message": "str: Add method .into_owned(self) -> ~str to Str\n\nThe method .into_owned() is meant to be used as an optimization when you\nneed to get a ~str from a Str, but don't want to unnecessarily copy it\nif it's already a ~str.\n\nThis is meant to ease functions that look like\n\n  fn foo<S: Str>(strs: &[S])\n\nPreviously they could work with the strings as slices using .as_slice(),\nbut producing ~str required copying the string, even if the vector\nturned out be a &[~str] already.", "tree": {"sha": "7e1a470d8d4fbd0d06a5adc6ab12e8533460835a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e1a470d8d4fbd0d06a5adc6ab12e8533460835a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa94dfa625e0d19cd322d7816167486ece53397d", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa94dfa625e0d19cd322d7816167486ece53397d", "html_url": "https://github.com/rust-lang/rust/commit/aa94dfa625e0d19cd322d7816167486ece53397d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa94dfa625e0d19cd322d7816167486ece53397d/comments", "author": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82b24559e6aa0914f8a49e0a9dbfb3cf35372515", "url": "https://api.github.com/repos/rust-lang/rust/commits/82b24559e6aa0914f8a49e0a9dbfb3cf35372515", "html_url": "https://github.com/rust-lang/rust/commit/82b24559e6aa0914f8a49e0a9dbfb3cf35372515"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "c30888529be10adacc8e324ffe47729f7c787a4e", "filename": "src/libstd/str.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/aa94dfa625e0d19cd322d7816167486ece53397d/src%2Flibstd%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa94dfa625e0d19cd322d7816167486ece53397d/src%2Flibstd%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstr.rs?ref=aa94dfa625e0d19cd322d7816167486ece53397d", "patch": "@@ -1079,25 +1079,37 @@ pub mod traits {}\n pub trait Str {\n     /// Work with `self` as a slice.\n     fn as_slice<'a>(&'a self) -> &'a str;\n+\n+    /// Convert `self` into a ~str.\n+    fn into_owned(self) -> ~str;\n }\n \n impl<'self> Str for &'self str {\n     #[inline]\n     fn as_slice<'a>(&'a self) -> &'a str { *self }\n+\n+    #[inline]\n+    fn into_owned(self) -> ~str { self.to_owned() }\n }\n \n impl<'self> Str for ~str {\n     #[inline]\n     fn as_slice<'a>(&'a self) -> &'a str {\n         let s: &'a str = *self; s\n     }\n+\n+    #[inline]\n+    fn into_owned(self) -> ~str { self }\n }\n \n impl<'self> Str for @str {\n     #[inline]\n     fn as_slice<'a>(&'a self) -> &'a str {\n         let s: &'a str = *self; s\n     }\n+\n+    #[inline]\n+    fn into_owned(self) -> ~str { self.to_owned() }\n }\n \n impl<'self> Container for &'self str {"}]}