{"sha": "7ee01b4b800233db0d494d433b318ce06ec25115", "node_id": "C_kwDOAAsO6NoAKDdlZTAxYjRiODAwMjMzZGIwZDQ5NGQ0MzNiMzE4Y2UwNmVjMjUxMTU", "commit": {"author": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2023-02-23T18:51:31Z"}, "committer": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2023-02-23T18:51:31Z"}, "message": "Lazily compute crate name for consider_optimizing\n\nThe extra query is unnecessary in the common case of not having fuel.", "tree": {"sha": "1b023e2b7470f2e3aa1a0bf18454a47429877543", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b023e2b7470f2e3aa1a0bf18454a47429877543"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ee01b4b800233db0d494d433b318ce06ec25115", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ee01b4b800233db0d494d433b318ce06ec25115", "html_url": "https://github.com/rust-lang/rust/commit/7ee01b4b800233db0d494d433b318ce06ec25115", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ee01b4b800233db0d494d433b318ce06ec25115/comments", "author": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b869e84e581612f4a30a4bca63bd9e90e9a17003", "url": "https://api.github.com/repos/rust-lang/rust/commits/b869e84e581612f4a30a4bca63bd9e90e9a17003", "html_url": "https://github.com/rust-lang/rust/commit/b869e84e581612f4a30a4bca63bd9e90e9a17003"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "9027422167d049fcecf00514c09066a254fbfb00", "filename": "compiler/rustc_middle/src/ty/context.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7ee01b4b800233db0d494d433b318ce06ec25115/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ee01b4b800233db0d494d433b318ce06ec25115/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs?ref=7ee01b4b800233db0d494d433b318ce06ec25115", "patch": "@@ -793,8 +793,7 @@ impl<'tcx> TyCtxt<'tcx> {\n     }\n \n     pub fn consider_optimizing<T: Fn() -> String>(self, msg: T) -> bool {\n-        let cname = self.crate_name(LOCAL_CRATE);\n-        self.sess.consider_optimizing(cname.as_str(), msg)\n+        self.sess.consider_optimizing(|| self.crate_name(LOCAL_CRATE), msg)\n     }\n \n     /// Obtain all lang items of this crate and all dependencies (recursively)"}, {"sha": "12634f67185fd94e200b3b2116279a4e5c905a33", "filename": "compiler/rustc_session/src/session.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7ee01b4b800233db0d494d433b318ce06ec25115/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ee01b4b800233db0d494d433b318ce06ec25115/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fsession.rs?ref=7ee01b4b800233db0d494d433b318ce06ec25115", "patch": "@@ -882,10 +882,14 @@ impl Session {\n \n     /// We want to know if we're allowed to do an optimization for crate foo from -z fuel=foo=n.\n     /// This expends fuel if applicable, and records fuel if applicable.\n-    pub fn consider_optimizing<T: Fn() -> String>(&self, crate_name: &str, msg: T) -> bool {\n+    pub fn consider_optimizing(\n+        &self,\n+        get_crate_name: impl Fn() -> Symbol,\n+        msg: impl Fn() -> String,\n+    ) -> bool {\n         let mut ret = true;\n         if let Some((ref c, _)) = self.opts.unstable_opts.fuel {\n-            if c == crate_name {\n+            if c == get_crate_name().as_str() {\n                 assert_eq!(self.threads(), 1);\n                 let mut fuel = self.optimization_fuel.lock();\n                 ret = fuel.remaining != 0;\n@@ -903,7 +907,7 @@ impl Session {\n             }\n         }\n         if let Some(ref c) = self.opts.unstable_opts.print_fuel {\n-            if c == crate_name {\n+            if c == get_crate_name().as_str() {\n                 assert_eq!(self.threads(), 1);\n                 self.print_fuel.fetch_add(1, SeqCst);\n             }"}]}