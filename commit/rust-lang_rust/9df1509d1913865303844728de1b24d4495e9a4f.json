{"sha": "9df1509d1913865303844728de1b24d4495e9a4f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkZjE1MDlkMTkxMzg2NTMwMzg0NDcyOGRlMWIyNGQ0NDk1ZTlhNGY=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-06-12T08:25:07Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-06-12T08:25:07Z"}, "message": "Use rewrite instead of visitor for attributes", "tree": {"sha": "2d9fa59e122576f68d9412160c1ffd30bb95f858", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d9fa59e122576f68d9412160c1ffd30bb95f858"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9df1509d1913865303844728de1b24d4495e9a4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9df1509d1913865303844728de1b24d4495e9a4f", "html_url": "https://github.com/rust-lang/rust/commit/9df1509d1913865303844728de1b24d4495e9a4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9df1509d1913865303844728de1b24d4495e9a4f/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "272b0b6f495aa09e885f46ae80561ad787caf9da", "url": "https://api.github.com/repos/rust-lang/rust/commits/272b0b6f495aa09e885f46ae80561ad787caf9da", "html_url": "https://github.com/rust-lang/rust/commit/272b0b6f495aa09e885f46ae80561ad787caf9da"}], "stats": {"total": 15, "additions": 4, "deletions": 11}, "files": [{"sha": "e6889991b07e91747d4d1478d3caa7ae4913d650", "filename": "src/expr.rs", "status": "modified", "additions": 4, "deletions": 11, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/9df1509d1913865303844728de1b24d4495e9a4f/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9df1509d1913865303844728de1b24d4495e9a4f/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=9df1509d1913865303844728de1b24d4495e9a4f", "patch": "@@ -1321,20 +1321,13 @@ impl Rewrite for ast::Arm {\n             ref body,\n         } = self;\n \n-        // FIXME this is all a bit grotty, would be nice to abstract out the\n-        // treatment of attributes.\n         let attr_str = if !attrs.is_empty() {\n-            // We only use this visitor for the attributes, should we use it for\n-            // more?\n-            let mut attr_visitor = FmtVisitor::from_codemap(context.parse_session, context.config);\n-            attr_visitor.block_indent = shape.indent.block_only();\n-            attr_visitor.last_pos = attrs[0].span.lo;\n-            if attr_visitor.visit_attrs(attrs) {\n-                // Attributes included a skip instruction.\n+            if contains_skip(attrs) {\n                 return None;\n             }\n-            attr_visitor.format_missing(pats[0].span.lo);\n-            attr_visitor.buffer.to_string()\n+            format!(\"{}\\n{}\",\n+                    try_opt!(attrs.rewrite(context, shape)),\n+                    shape.indent.to_string(context.config))\n         } else {\n             String::new()\n         };"}]}