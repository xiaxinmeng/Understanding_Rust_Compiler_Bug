{"sha": "7ba93cb8cf964ca9f5dbf5d51f69f2221b9bd2e9", "node_id": "C_kwDOAAsO6NoAKDdiYTkzY2I4Y2Y5NjRjYTlmNWRiZjVkNTFmNjlmMjIyMWI5YmQyZTk", "commit": {"author": {"name": "hkalbasi", "email": "hamidrezakalbasi@protonmail.com", "date": "2023-04-06T21:02:28Z"}, "committer": {"name": "hkalbasi", "email": "hamidrezakalbasi@protonmail.com", "date": "2023-04-06T21:02:28Z"}, "message": "Always reborrow reference receiver in methods", "tree": {"sha": "1cf65c635034e4d9acba3032dfc43a884b2ff17c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1cf65c635034e4d9acba3032dfc43a884b2ff17c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ba93cb8cf964ca9f5dbf5d51f69f2221b9bd2e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ba93cb8cf964ca9f5dbf5d51f69f2221b9bd2e9", "html_url": "https://github.com/rust-lang/rust/commit/7ba93cb8cf964ca9f5dbf5d51f69f2221b9bd2e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ba93cb8cf964ca9f5dbf5d51f69f2221b9bd2e9/comments", "author": {"login": "HKalbasi", "id": 45197576, "node_id": "MDQ6VXNlcjQ1MTk3NTc2", "avatar_url": "https://avatars.githubusercontent.com/u/45197576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HKalbasi", "html_url": "https://github.com/HKalbasi", "followers_url": "https://api.github.com/users/HKalbasi/followers", "following_url": "https://api.github.com/users/HKalbasi/following{/other_user}", "gists_url": "https://api.github.com/users/HKalbasi/gists{/gist_id}", "starred_url": "https://api.github.com/users/HKalbasi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HKalbasi/subscriptions", "organizations_url": "https://api.github.com/users/HKalbasi/orgs", "repos_url": "https://api.github.com/users/HKalbasi/repos", "events_url": "https://api.github.com/users/HKalbasi/events{/privacy}", "received_events_url": "https://api.github.com/users/HKalbasi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "HKalbasi", "id": 45197576, "node_id": "MDQ6VXNlcjQ1MTk3NTc2", "avatar_url": "https://avatars.githubusercontent.com/u/45197576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HKalbasi", "html_url": "https://github.com/HKalbasi", "followers_url": "https://api.github.com/users/HKalbasi/followers", "following_url": "https://api.github.com/users/HKalbasi/following{/other_user}", "gists_url": "https://api.github.com/users/HKalbasi/gists{/gist_id}", "starred_url": "https://api.github.com/users/HKalbasi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HKalbasi/subscriptions", "organizations_url": "https://api.github.com/users/HKalbasi/orgs", "repos_url": "https://api.github.com/users/HKalbasi/repos", "events_url": "https://api.github.com/users/HKalbasi/events{/privacy}", "received_events_url": "https://api.github.com/users/HKalbasi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea22d245b671f97b820cf761108251c6292c3152", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea22d245b671f97b820cf761108251c6292c3152", "html_url": "https://github.com/rust-lang/rust/commit/ea22d245b671f97b820cf761108251c6292c3152"}], "stats": {"total": 41, "additions": 39, "deletions": 2}, "files": [{"sha": "938427d807581e1d54683fe58a6e63a54455281f", "filename": "crates/hir-ty/src/method_resolution.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7ba93cb8cf964ca9f5dbf5d51f69f2221b9bd2e9/crates%2Fhir-ty%2Fsrc%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ba93cb8cf964ca9f5dbf5d51f69f2221b9bd2e9/crates%2Fhir-ty%2Fsrc%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Fmethod_resolution.rs?ref=7ba93cb8cf964ca9f5dbf5d51f69f2221b9bd2e9", "patch": "@@ -952,7 +952,14 @@ fn iterate_method_candidates_with_autoref(\n         )\n     };\n \n-    iterate_method_candidates_by_receiver(receiver_ty, first_adjustment.clone())?;\n+    let mut maybe_reborrowed = first_adjustment.clone();\n+    if let Some((_, _, m)) = receiver_ty.value.as_reference() {\n+        // Prefer reborrow of references to move\n+        maybe_reborrowed.autoref = Some(m);\n+        maybe_reborrowed.autoderefs += 1;\n+    }\n+\n+    iterate_method_candidates_by_receiver(receiver_ty, maybe_reborrowed)?;\n \n     let refed = Canonical {\n         value: TyKind::Ref(Mutability::Not, static_lifetime(), receiver_ty.value.clone())"}, {"sha": "f62a3cfabe895958f1057f7030b69dd3f6399671", "filename": "crates/hir-ty/src/tests/method_resolution.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7ba93cb8cf964ca9f5dbf5d51f69f2221b9bd2e9/crates%2Fhir-ty%2Fsrc%2Ftests%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ba93cb8cf964ca9f5dbf5d51f69f2221b9bd2e9/crates%2Fhir-ty%2Fsrc%2Ftests%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Ftests%2Fmethod_resolution.rs?ref=7ba93cb8cf964ca9f5dbf5d51f69f2221b9bd2e9", "patch": "@@ -388,6 +388,24 @@ mod bar_test {\n     );\n }\n \n+#[test]\n+fn infer_trait_method_multiple_mutable_reference() {\n+    check_types(\n+        r#\"\n+trait Trait {\n+    fn method(&mut self) -> i32 { 5 }\n+}\n+struct S;\n+impl Trait for &mut &mut S {}\n+fn test() {\n+    let s = &mut &mut &mut S;\n+    s.method();\n+  //^^^^^^^^^^ i32\n+}\n+        \"#,\n+    );\n+}\n+\n #[test]\n fn infer_trait_method_generic_1() {\n     // the trait implementation is intentionally incomplete -- it shouldn't matter\n@@ -1722,7 +1740,7 @@ fn test() {\n     Foo.foo();\n   //^^^ adjustments: Borrow(Ref(Not))\n     (&Foo).foo();\n-  // ^^^^ adjustments: ,\n+  // ^^^^ adjustments: Deref(None), Borrow(Ref(Not))\n }\n \"#,\n     );"}, {"sha": "0b1460919566df21189b310d787fe42e6ada56f6", "filename": "crates/ide/src/inlay_hints/adjustment.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7ba93cb8cf964ca9f5dbf5d51f69f2221b9bd2e9/crates%2Fide%2Fsrc%2Finlay_hints%2Fadjustment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ba93cb8cf964ca9f5dbf5d51f69f2221b9bd2e9/crates%2Fide%2Fsrc%2Finlay_hints%2Fadjustment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints%2Fadjustment.rs?ref=7ba93cb8cf964ca9f5dbf5d51f69f2221b9bd2e9", "patch": "@@ -315,13 +315,17 @@ fn main() {\n     (&Struct).consume();\n    //^^^^^^^*\n     (&Struct).by_ref();\n+   //^^^^^^^&\n+   //^^^^^^^*\n \n     (&mut Struct).consume();\n    //^^^^^^^^^^^*\n     (&mut Struct).by_ref();\n    //^^^^^^^^^^^&\n    //^^^^^^^^^^^*\n     (&mut Struct).by_ref_mut();\n+   //^^^^^^^^^^^&mut $\n+   //^^^^^^^^^^^*\n \n     // Check that block-like expressions don't duplicate hints\n     let _: &mut [u32] = (&mut []);\n@@ -414,6 +418,10 @@ fn main() {\n    //^^^^^^^)\n    //^^^^^^^.*\n     (&Struct).by_ref();\n+   //^^^^^^^(\n+   //^^^^^^^)\n+   //^^^^^^^.*\n+   //^^^^^^^.&\n \n     (&mut Struct).consume();\n    //^^^^^^^^^^^(\n@@ -425,6 +433,10 @@ fn main() {\n    //^^^^^^^^^^^.*\n    //^^^^^^^^^^^.&\n     (&mut Struct).by_ref_mut();\n+   //^^^^^^^^^^^(\n+   //^^^^^^^^^^^)\n+   //^^^^^^^^^^^.*\n+   //^^^^^^^^^^^.&mut\n \n     // Check that block-like expressions don't duplicate hints\n     let _: &mut [u32] = (&mut []);"}]}