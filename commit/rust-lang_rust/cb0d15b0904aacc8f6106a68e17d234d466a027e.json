{"sha": "cb0d15b0904aacc8f6106a68e17d234d466a027e", "node_id": "C_kwDOAAsO6NoAKGNiMGQxNWIwOTA0YWFjYzhmNjEwNmE2OGUxN2QyMzRkNDY2YTAyN2U", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-03-30T02:34:37Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-03-31T12:57:45Z"}, "message": "test const size_of_val_raw on big value", "tree": {"sha": "4046386ccfdc8263fd2c17b142e4ceb159e3c87a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4046386ccfdc8263fd2c17b142e4ceb159e3c87a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb0d15b0904aacc8f6106a68e17d234d466a027e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb0d15b0904aacc8f6106a68e17d234d466a027e", "html_url": "https://github.com/rust-lang/rust/commit/cb0d15b0904aacc8f6106a68e17d234d466a027e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb0d15b0904aacc8f6106a68e17d234d466a027e/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a417911c16d1465f10ddda6cceb34f35edad05eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/a417911c16d1465f10ddda6cceb34f35edad05eb", "html_url": "https://github.com/rust-lang/rust/commit/a417911c16d1465f10ddda6cceb34f35edad05eb"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "5a78313c483504849499f4a03719aab3a4b14011", "filename": "src/test/ui/consts/const-size_of_val-align_of_val.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cb0d15b0904aacc8f6106a68e17d234d466a027e/src%2Ftest%2Fui%2Fconsts%2Fconst-size_of_val-align_of_val.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb0d15b0904aacc8f6106a68e17d234d466a027e/src%2Ftest%2Fui%2Fconsts%2Fconst-size_of_val-align_of_val.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-size_of_val-align_of_val.rs?ref=cb0d15b0904aacc8f6106a68e17d234d466a027e", "patch": "@@ -2,8 +2,9 @@\n \n #![feature(const_size_of_val, const_align_of_val)]\n #![feature(const_size_of_val_raw, const_align_of_val_raw, layout_for_ptr)]\n+#![feature(const_slice_from_raw_parts)]\n \n-use std::mem;\n+use std::{mem, ptr};\n \n struct Foo(u32);\n \n@@ -34,6 +35,8 @@ const ALIGN_OF_UGH: usize = mem::align_of_val(&UGH);\n const SIZE_OF_SLICE: usize = mem::size_of_val(\"foobar\".as_bytes());\n \n const SIZE_OF_DANGLING: usize = unsafe { mem::size_of_val_raw(0x100 as *const i32) };\n+const SIZE_OF_BIG: usize =\n+    unsafe { mem::size_of_val_raw(ptr::slice_from_raw_parts(0 as *const u8, isize::MAX as usize)) };\n const ALIGN_OF_DANGLING: usize = unsafe { mem::align_of_val_raw(0x100 as *const i16) };\n \n fn main() {\n@@ -46,6 +49,7 @@ fn main() {\n     assert_eq!(ALIGN_OF_UGH, mem::align_of::<Ugh>());\n \n     assert_eq!(SIZE_OF_DANGLING, mem::size_of::<i32>());\n+    assert_eq!(SIZE_OF_BIG, isize::MAX as usize);\n     assert_eq!(ALIGN_OF_DANGLING, mem::align_of::<i16>());\n \n     assert_eq!(SIZE_OF_SLICE, \"foobar\".len());"}]}