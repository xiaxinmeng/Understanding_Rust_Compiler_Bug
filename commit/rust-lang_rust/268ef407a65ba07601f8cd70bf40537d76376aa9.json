{"sha": "268ef407a65ba07601f8cd70bf40537d76376aa9", "node_id": "C_kwDOAAsO6NoAKDI2OGVmNDA3YTY1YmEwNzYwMWY4Y2Q3MGJmNDA1MzdkNzYzNzZhYTk", "commit": {"author": {"name": "ThibsG", "email": "thibsg@pm.me", "date": "2021-10-01T15:08:22Z"}, "committer": {"name": "ThibsG", "email": "thibsg@pm.me", "date": "2021-11-20T08:40:11Z"}, "message": "Add test case for references bindings", "tree": {"sha": "b2998f503536594c6c1eed16c3e252756bdfd06b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b2998f503536594c6c1eed16c3e252756bdfd06b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/268ef407a65ba07601f8cd70bf40537d76376aa9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/268ef407a65ba07601f8cd70bf40537d76376aa9", "html_url": "https://github.com/rust-lang/rust/commit/268ef407a65ba07601f8cd70bf40537d76376aa9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/268ef407a65ba07601f8cd70bf40537d76376aa9/comments", "author": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90a72f506c55b2c2fc1f64b13c9c048a65846bba", "url": "https://api.github.com/repos/rust-lang/rust/commits/90a72f506c55b2c2fc1f64b13c9c048a65846bba", "html_url": "https://github.com/rust-lang/rust/commit/90a72f506c55b2c2fc1f64b13c9c048a65846bba"}], "stats": {"total": 48, "additions": 46, "deletions": 2}, "files": [{"sha": "240a6957893135d178d58599de238cf1c10e7ddd", "filename": "tests/ui/search_is_some_fixable_none.fixed", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/268ef407a65ba07601f8cd70bf40537d76376aa9/tests%2Fui%2Fsearch_is_some_fixable_none.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/268ef407a65ba07601f8cd70bf40537d76376aa9/tests%2Fui%2Fsearch_is_some_fixable_none.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsearch_is_some_fixable_none.fixed?ref=268ef407a65ba07601f8cd70bf40537d76376aa9", "patch": "@@ -174,4 +174,9 @@ mod issue7392 {\n         let vfoo = vec![Foo { bar: 1 }];\n         let _ = !vfoo.iter().any(|v| v.by_ref(&v.bar));\n     }\n+\n+    fn ref_bindings() {\n+        let _ = ![&(&1, 2), &(&3, 4), &(&5, 4)].iter().any(|(&x, y)| x == *y);\n+        let _ = ![&(&1, 2), &(&3, 4), &(&5, 4)].iter().any(|(&x, y)| x == *y);\n+    }\n }"}, {"sha": "7e8fc14a7bd4944b7b502e2de01359657f663b66", "filename": "tests/ui/search_is_some_fixable_none.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/268ef407a65ba07601f8cd70bf40537d76376aa9/tests%2Fui%2Fsearch_is_some_fixable_none.rs", "raw_url": "https://github.com/rust-lang/rust/raw/268ef407a65ba07601f8cd70bf40537d76376aa9/tests%2Fui%2Fsearch_is_some_fixable_none.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsearch_is_some_fixable_none.rs?ref=268ef407a65ba07601f8cd70bf40537d76376aa9", "patch": "@@ -180,4 +180,9 @@ mod issue7392 {\n         let vfoo = vec![Foo { bar: 1 }];\n         let _ = vfoo.iter().find(|v| v.by_ref(&v.bar)).is_none();\n     }\n+\n+    fn ref_bindings() {\n+        let _ = [&(&1, 2), &(&3, 4), &(&5, 4)].iter().find(|(&x, y)| x == *y).is_none();\n+        let _ = [&(&1, 2), &(&3, 4), &(&5, 4)].iter().find(|&(&x, y)| x == *y).is_none();\n+    }\n }"}, {"sha": "c78830a3b5ddba1102c174ad5bcc8b3b7ea0c6fb", "filename": "tests/ui/search_is_some_fixable_none.stderr", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/268ef407a65ba07601f8cd70bf40537d76376aa9/tests%2Fui%2Fsearch_is_some_fixable_none.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/268ef407a65ba07601f8cd70bf40537d76376aa9/tests%2Fui%2Fsearch_is_some_fixable_none.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsearch_is_some_fixable_none.stderr?ref=268ef407a65ba07601f8cd70bf40537d76376aa9", "patch": "@@ -227,5 +227,17 @@ error: called `is_none()` after searching an `Iterator` with `find`\n LL |         let _ = vfoo.iter().find(|v| v.by_ref(&v.bar)).is_none();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `!_.any()` instead: `!vfoo.iter().any(|v| v.by_ref(&v.bar))`\n \n-error: aborting due to 34 previous errors\n+error: called `is_none()` after searching an `Iterator` with `find`\n+  --> $DIR/search_is_some_fixable_none.rs:185:17\n+   |\n+LL |         let _ = [&(&1, 2), &(&3, 4), &(&5, 4)].iter().find(|(&x, y)| x == *y).is_none();\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `!_.any()` instead: `![&(&1, 2), &(&3, 4), &(&5, 4)].iter().any(|(&x, y)| x == *y)`\n+\n+error: called `is_none()` after searching an `Iterator` with `find`\n+  --> $DIR/search_is_some_fixable_none.rs:186:17\n+   |\n+LL |         let _ = [&(&1, 2), &(&3, 4), &(&5, 4)].iter().find(|&(&x, y)| x == *y).is_none();\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `!_.any()` instead: `![&(&1, 2), &(&3, 4), &(&5, 4)].iter().any(|(&x, y)| x == *y)`\n+\n+error: aborting due to 36 previous errors\n "}, {"sha": "267324cbe6a8f813c49ee53a41008e41724be2c5", "filename": "tests/ui/search_is_some_fixable_some.fixed", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/268ef407a65ba07601f8cd70bf40537d76376aa9/tests%2Fui%2Fsearch_is_some_fixable_some.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/268ef407a65ba07601f8cd70bf40537d76376aa9/tests%2Fui%2Fsearch_is_some_fixable_some.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsearch_is_some_fixable_some.fixed?ref=268ef407a65ba07601f8cd70bf40537d76376aa9", "patch": "@@ -176,4 +176,9 @@ mod issue7392 {\n         let vfoo = vec![Foo { bar: 1 }];\n         let _ = vfoo.iter().any(|v| v.by_ref(&v.bar));\n     }\n+\n+    fn ref_bindings() {\n+        let _ = [&(&1, 2), &(&3, 4), &(&5, 4)].iter().any(|(&x, y)| x == *y);\n+        let _ = [&(&1, 2), &(&3, 4), &(&5, 4)].iter().any(|(&x, y)| x == *y);\n+    }\n }"}, {"sha": "53f80e2c87ea33ce253074f71fe74984586ce8a2", "filename": "tests/ui/search_is_some_fixable_some.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/268ef407a65ba07601f8cd70bf40537d76376aa9/tests%2Fui%2Fsearch_is_some_fixable_some.rs", "raw_url": "https://github.com/rust-lang/rust/raw/268ef407a65ba07601f8cd70bf40537d76376aa9/tests%2Fui%2Fsearch_is_some_fixable_some.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsearch_is_some_fixable_some.rs?ref=268ef407a65ba07601f8cd70bf40537d76376aa9", "patch": "@@ -179,4 +179,9 @@ mod issue7392 {\n         let vfoo = vec![Foo { bar: 1 }];\n         let _ = vfoo.iter().find(|v| v.by_ref(&v.bar)).is_some();\n     }\n+\n+    fn ref_bindings() {\n+        let _ = [&(&1, 2), &(&3, 4), &(&5, 4)].iter().find(|(&x, y)| x == *y).is_some();\n+        let _ = [&(&1, 2), &(&3, 4), &(&5, 4)].iter().find(|&(&x, y)| x == *y).is_some();\n+    }\n }"}, {"sha": "e8784bba6eb6d5f5d7e78f2f88ffddbde501f97b", "filename": "tests/ui/search_is_some_fixable_some.stderr", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/268ef407a65ba07601f8cd70bf40537d76376aa9/tests%2Fui%2Fsearch_is_some_fixable_some.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/268ef407a65ba07601f8cd70bf40537d76376aa9/tests%2Fui%2Fsearch_is_some_fixable_some.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsearch_is_some_fixable_some.stderr?ref=268ef407a65ba07601f8cd70bf40537d76376aa9", "patch": "@@ -210,5 +210,17 @@ error: called `is_some()` after searching an `Iterator` with `find`\n LL |         let _ = vfoo.iter().find(|v| v.by_ref(&v.bar)).is_some();\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `any()` instead: `any(|v| v.by_ref(&v.bar))`\n \n-error: aborting due to 34 previous errors\n+error: called `is_some()` after searching an `Iterator` with `find`\n+  --> $DIR/search_is_some_fixable_some.rs:184:55\n+   |\n+LL |         let _ = [&(&1, 2), &(&3, 4), &(&5, 4)].iter().find(|(&x, y)| x == *y).is_some();\n+   |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `any()` instead: `any(|(&x, y)| x == *y)`\n+\n+error: called `is_some()` after searching an `Iterator` with `find`\n+  --> $DIR/search_is_some_fixable_some.rs:185:55\n+   |\n+LL |         let _ = [&(&1, 2), &(&3, 4), &(&5, 4)].iter().find(|&(&x, y)| x == *y).is_some();\n+   |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `any()` instead: `any(|(&x, y)| x == *y)`\n+\n+error: aborting due to 36 previous errors\n "}]}