{"sha": "294916065a0692aa6b0c2c9e009da887cf897038", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5NDkxNjA2NWEwNjkyYWE2YjBjMmM5ZTAwOWRhODg3Y2Y4OTcwMzg=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-05-28T19:25:21Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-05-28T20:35:20Z"}, "message": "Fix nits", "tree": {"sha": "9db0ba59ef34e06a5602f50b9781aef45af0e0f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9db0ba59ef34e06a5602f50b9781aef45af0e0f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/294916065a0692aa6b0c2c9e009da887cf897038", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/294916065a0692aa6b0c2c9e009da887cf897038", "html_url": "https://github.com/rust-lang/rust/commit/294916065a0692aa6b0c2c9e009da887cf897038", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/294916065a0692aa6b0c2c9e009da887cf897038/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3a13fdd13e11e11410e42a53f48c7d675f9963f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3a13fdd13e11e11410e42a53f48c7d675f9963f", "html_url": "https://github.com/rust-lang/rust/commit/b3a13fdd13e11e11410e42a53f48c7d675f9963f"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "95bae8f2bd1afb7b4326f18be4ecf1dd3f4f296e", "filename": "src/librustc/infer/resolve.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/294916065a0692aa6b0c2c9e009da887cf897038/src%2Flibrustc%2Finfer%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/294916065a0692aa6b0c2c9e009da887cf897038/src%2Flibrustc%2Finfer%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fresolve.rs?ref=294916065a0692aa6b0c2c9e009da887cf897038", "patch": "@@ -4,9 +4,9 @@ use crate::ty::{self, Ty, Const, TyCtxt, TypeFoldable, InferConst, TypeFlags};\n use crate::ty::fold::{TypeFolder, TypeVisitor};\n \n ///////////////////////////////////////////////////////////////////////////\n-// OPPORTUNISTIC KIND RESOLVER\n+// OPPORTUNISTIC VAR RESOLVER\n \n-/// The opportunistic kind resolver can be used at any time. It simply replaces\n+/// The opportunistic resolver can be used at any time. It simply replaces\n /// type/const variables that have been unified with the things they have\n /// been unified with (similar to `shallow_resolve`, but deep). This is\n /// useful for printing messages etc but also required at various"}, {"sha": "0440be13a7271faa361d58ee08ba859f74937170", "filename": "src/librustc/ty/relate.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/294916065a0692aa6b0c2c9e009da887cf897038/src%2Flibrustc%2Fty%2Frelate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/294916065a0692aa6b0c2c9e009da887cf897038/src%2Flibrustc%2Fty%2Frelate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Frelate.rs?ref=294916065a0692aa6b0c2c9e009da887cf897038", "patch": "@@ -475,9 +475,8 @@ pub fn super_relate_tys<'a, 'gcx, 'tcx, R>(relation: &mut R,\n             match relation.relate(&sz_a, &sz_b) {\n                 Ok(sz) => Ok(tcx.mk_ty(ty::Array(t, sz))),\n                 Err(err) => {\n-                    // Check whether the lengths are both `usize`s,\n-                    // but differ in value, for better diagnostics.\n-                    // FIXME(eddyb) get the right param_env.\n+                    // Check whether the lengths are both concrete/known values,\n+                    // but are unequal, for better diagnostics.\n                     match (sz_a.assert_usize(tcx), sz_b.assert_usize(tcx)) {\n                         (Some(sz_a_val), Some(sz_b_val)) => {\n                             Err(TypeError::FixedArraySize("}]}