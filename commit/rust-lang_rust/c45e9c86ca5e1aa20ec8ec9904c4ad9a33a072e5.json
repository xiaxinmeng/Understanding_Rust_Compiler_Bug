{"sha": "c45e9c86ca5e1aa20ec8ec9904c4ad9a33a072e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0NWU5Yzg2Y2E1ZTFhYTIwZWM4ZWM5OTA0YzRhZDlhMzNhMDcyZTU=", "commit": {"author": {"name": "Naz\u0131m Can Alt\u0131nova", "email": "canaltinova@gmail.com", "date": "2020-07-17T20:03:33Z"}, "committer": {"name": "Naz\u0131m Can Alt\u0131nova", "email": "canaltinova@gmail.com", "date": "2020-07-17T20:03:33Z"}, "message": "Add a test for const unsafe_unreachable that triggers UB", "tree": {"sha": "67cbf84c100d88483c93ac57d996c4eb20bb88ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/67cbf84c100d88483c93ac57d996c4eb20bb88ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c45e9c86ca5e1aa20ec8ec9904c4ad9a33a072e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c45e9c86ca5e1aa20ec8ec9904c4ad9a33a072e5", "html_url": "https://github.com/rust-lang/rust/commit/c45e9c86ca5e1aa20ec8ec9904c4ad9a33a072e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c45e9c86ca5e1aa20ec8ec9904c4ad9a33a072e5/comments", "author": {"login": "canova", "id": 466239, "node_id": "MDQ6VXNlcjQ2NjIzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/466239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canova", "html_url": "https://github.com/canova", "followers_url": "https://api.github.com/users/canova/followers", "following_url": "https://api.github.com/users/canova/following{/other_user}", "gists_url": "https://api.github.com/users/canova/gists{/gist_id}", "starred_url": "https://api.github.com/users/canova/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canova/subscriptions", "organizations_url": "https://api.github.com/users/canova/orgs", "repos_url": "https://api.github.com/users/canova/repos", "events_url": "https://api.github.com/users/canova/events{/privacy}", "received_events_url": "https://api.github.com/users/canova/received_events", "type": "User", "site_admin": false}, "committer": {"login": "canova", "id": 466239, "node_id": "MDQ6VXNlcjQ2NjIzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/466239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canova", "html_url": "https://github.com/canova", "followers_url": "https://api.github.com/users/canova/followers", "following_url": "https://api.github.com/users/canova/following{/other_user}", "gists_url": "https://api.github.com/users/canova/gists{/gist_id}", "starred_url": "https://api.github.com/users/canova/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canova/subscriptions", "organizations_url": "https://api.github.com/users/canova/orgs", "repos_url": "https://api.github.com/users/canova/repos", "events_url": "https://api.github.com/users/canova/events{/privacy}", "received_events_url": "https://api.github.com/users/canova/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f28d5945dab495a77c67c6051eea116ce9ceee2", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f28d5945dab495a77c67c6051eea116ce9ceee2", "html_url": "https://github.com/rust-lang/rust/commit/2f28d5945dab495a77c67c6051eea116ce9ceee2"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "2e4dfd1522b9a559a6c1f4c6bd1fbec44442e53c", "filename": "src/test/ui/consts/const_unsafe_unreachable_ub.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c45e9c86ca5e1aa20ec8ec9904c4ad9a33a072e5/src%2Ftest%2Fui%2Fconsts%2Fconst_unsafe_unreachable_ub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c45e9c86ca5e1aa20ec8ec9904c4ad9a33a072e5/src%2Ftest%2Fui%2Fconsts%2Fconst_unsafe_unreachable_ub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_unsafe_unreachable_ub.rs?ref=c45e9c86ca5e1aa20ec8ec9904c4ad9a33a072e5", "patch": "@@ -0,0 +1,15 @@\n+#![feature(const_fn)]\n+#![feature(const_unreachable_unchecked)]\n+\n+const unsafe fn foo(x: bool) -> bool {\n+    match x {\n+        true => true,\n+        false => std::hint::unreachable_unchecked(),\n+    }\n+}\n+\n+const BAR: bool = unsafe { foo(false) };\n+\n+fn main() {\n+  assert_eq!(BAR, true);\n+}"}, {"sha": "0a7aa4e00214f67608765dc9ec8c31399c0641b2", "filename": "src/test/ui/consts/const_unsafe_unreachable_ub.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c45e9c86ca5e1aa20ec8ec9904c4ad9a33a072e5/src%2Ftest%2Fui%2Fconsts%2Fconst_unsafe_unreachable_ub.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c45e9c86ca5e1aa20ec8ec9904c4ad9a33a072e5/src%2Ftest%2Fui%2Fconsts%2Fconst_unsafe_unreachable_ub.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_unsafe_unreachable_ub.stderr?ref=c45e9c86ca5e1aa20ec8ec9904c4ad9a33a072e5", "patch": "@@ -0,0 +1,20 @@\n+error: any use of this value will cause an error\n+  --> $SRC_DIR/libcore/hint.rs:LL:COL\n+   |\n+LL |     unsafe { intrinsics::unreachable() }\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              |\n+   |              entering unreachable code\n+   |              inside `std::hint::unreachable_unchecked` at $SRC_DIR/libcore/hint.rs:LL:COL\n+   |              inside `foo` at $DIR/const_unsafe_unreachable_ub.rs:7:18\n+   |              inside `BAR` at $DIR/const_unsafe_unreachable_ub.rs:11:28\n+   | \n+  ::: $DIR/const_unsafe_unreachable_ub.rs:11:1\n+   |\n+LL | const BAR: bool = unsafe { foo(false) };\n+   | ----------------------------------------\n+   |\n+   = note: `#[deny(const_err)]` on by default\n+\n+error: aborting due to previous error\n+"}]}