{"sha": "debd45cc7be97c8a7c50c2822593471d04d87366", "node_id": "C_kwDOAAsO6NoAKGRlYmQ0NWNjN2JlOTdjOGE3YzUwYzI4MjI1OTM0NzFkMDRkODczNjY", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-12-13T17:34:08Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-12-22T14:02:47Z"}, "message": "Update to cranelift 0.91\n\nCloses #1307", "tree": {"sha": "ea03e07234eafd71ea73aaf4ff26f36a0d2f21f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea03e07234eafd71ea73aaf4ff26f36a0d2f21f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/debd45cc7be97c8a7c50c2822593471d04d87366", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/debd45cc7be97c8a7c50c2822593471d04d87366", "html_url": "https://github.com/rust-lang/rust/commit/debd45cc7be97c8a7c50c2822593471d04d87366", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/debd45cc7be97c8a7c50c2822593471d04d87366/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b478012086f4df5c21e4ec0016631fac163133f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b478012086f4df5c21e4ec0016631fac163133f", "html_url": "https://github.com/rust-lang/rust/commit/8b478012086f4df5c21e4ec0016631fac163133f"}], "stats": {"total": 130, "additions": 76, "deletions": 54}, "files": [{"sha": "3bc2bf31d666d6c8063d9a7be6fb337357b830b1", "filename": "Cargo.lock", "status": "modified", "additions": 54, "deletions": 40, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/debd45cc7be97c8a7c50c2822593471d04d87366/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/debd45cc7be97c8a7c50c2822593471d04d87366/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=debd45cc7be97c8a7c50c2822593471d04d87366", "patch": "@@ -57,18 +57,18 @@ checksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n \n [[package]]\n name = \"cranelift-bforest\"\n-version = \"0.90.1\"\n+version = \"0.91.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"b62c772976416112fa4484cbd688cb6fb35fd430005c1c586224fc014018abad\"\n+checksum = \"fc952b310b24444fc14ab8b9cbe3fafd7e7329e3eec84c3a9b11d2b5cf6f3be1\"\n dependencies = [\n  \"cranelift-entity\",\n ]\n \n [[package]]\n name = \"cranelift-codegen\"\n-version = \"0.90.1\"\n+version = \"0.91.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"9b40ed2dd13c2ac7e24f88a3090c68ad3414eb1d066a95f8f1f7b3b819cb4e46\"\n+checksum = \"e73470419b33011e50dbf0f6439cbccbaabe9381de172da4e1b6efcda4bb8fa7\"\n dependencies = [\n  \"arrayvec\",\n  \"bumpalo\",\n@@ -87,24 +87,24 @@ dependencies = [\n \n [[package]]\n name = \"cranelift-codegen-meta\"\n-version = \"0.90.1\"\n+version = \"0.91.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"bb927a8f1c27c34ee3759b6b0ffa528d2330405d5cc4511f0cab33fe2279f4b5\"\n+checksum = \"911a1872464108a11ac9965c2b079e61bbdf1bc2e0b9001264264add2e12a38f\"\n dependencies = [\n  \"cranelift-codegen-shared\",\n ]\n \n [[package]]\n name = \"cranelift-codegen-shared\"\n-version = \"0.90.1\"\n+version = \"0.91.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"43dfa417b884a9ab488d95fd6b93b25e959321fe7bfd7a0a960ba5d7fb7ab927\"\n+checksum = \"e036f3f07adb24a86fb46e977e8fe03b18bb16b1eada949cf2c48283e5f8a862\"\n \n [[package]]\n name = \"cranelift-egraph\"\n-version = \"0.90.1\"\n+version = \"0.91.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"e0a66b39785efd8513d2cca967ede56d6cc57c8d7986a595c7c47d0c78de8dce\"\n+checksum = \"2d6c623f4b5d2a6bad32c403f03765d4484a827eb93ee78f8cb6219ef118fd59\"\n dependencies = [\n  \"cranelift-entity\",\n  \"fxhash\",\n@@ -116,15 +116,15 @@ dependencies = [\n \n [[package]]\n name = \"cranelift-entity\"\n-version = \"0.90.1\"\n+version = \"0.91.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"0637ffde963cb5d759bc4d454cfa364b6509e6c74cdaa21298add0ed9276f346\"\n+checksum = \"74385eb5e405b3562f0caa7bcc4ab9a93c7958dd5bcd0e910bffb7765eacd6fc\"\n \n [[package]]\n name = \"cranelift-frontend\"\n-version = \"0.90.1\"\n+version = \"0.91.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"fb72b8342685e850cb037350418f62cc4fc55d6c2eb9c7ca01b82f9f1a6f3d56\"\n+checksum = \"8a4ac920422ee36bff2c66257fec861765e3d95a125cdf58d8c0f3bba7e40e61\"\n dependencies = [\n  \"cranelift-codegen\",\n  \"log\",\n@@ -134,15 +134,15 @@ dependencies = [\n \n [[package]]\n name = \"cranelift-isle\"\n-version = \"0.90.1\"\n+version = \"0.91.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"850579cb9e4b448f7c301f1e6e6cbad99abe3f1f1d878a4994cb66e33c6db8cd\"\n+checksum = \"c541263fb37ad2baa53ec8c37218ee5d02fa0984670d9419dedd8002ea68ff08\"\n \n [[package]]\n name = \"cranelift-jit\"\n-version = \"0.90.1\"\n+version = \"0.91.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"9add822ad66dcbe152b5ab57de10240a2df4505099f2f6c27159acb711890bd4\"\n+checksum = \"48a844e3500d313b69f3eec4b4e15bf9cdbd529756add06a468e0e281c0f6bee\"\n dependencies = [\n  \"anyhow\",\n  \"cranelift-codegen\",\n@@ -159,19 +159,19 @@ dependencies = [\n \n [[package]]\n name = \"cranelift-module\"\n-version = \"0.90.1\"\n+version = \"0.91.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"406b772626fc2664864cf947f3895a23b619895c7fff635f3622e2d857f4492f\"\n+checksum = \"0699ea5fc6ca943456ba80ad49f80212bd6e2b846b992ec59f0f2b912a1d25fa\"\n dependencies = [\n  \"anyhow\",\n  \"cranelift-codegen\",\n ]\n \n [[package]]\n name = \"cranelift-native\"\n-version = \"0.90.1\"\n+version = \"0.91.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"2d0a279e5bcba3e0466c734d8d8eb6bfc1ad29e95c37f3e4955b492b5616335e\"\n+checksum = \"1de5d7a063e8563d670aaca38de16591a9b70dc66cbad4d49a7b4ae8395fd1ce\"\n dependencies = [\n  \"cranelift-codegen\",\n  \"libc\",\n@@ -180,9 +180,9 @@ dependencies = [\n \n [[package]]\n name = \"cranelift-object\"\n-version = \"0.90.1\"\n+version = \"0.91.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"39793c550f0c1d7db96c2fc1324583670c8143befe6edbfbaf1c68aba53be983\"\n+checksum = \"307735148f6a556388aabf1ea31f46ccd378ed0739f3e9bdda2029639d701ab7\"\n dependencies = [\n  \"anyhow\",\n  \"cranelift-codegen\",\n@@ -317,9 +317,9 @@ checksum = \"86f0b0d4bf799edbc74508c1e8bf170ff5f41238e5f8225603ca7caaae2b7860\"\n \n [[package]]\n name = \"regalloc2\"\n-version = \"0.4.2\"\n+version = \"0.5.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"91b2eab54204ea0117fe9a060537e0b07a4e72f7c7d182361ecc346cab2240e5\"\n+checksum = \"300d4fbfb40c1c66a78ba3ddd41c1110247cf52f97b87d0f2fc9209bd49b030c\"\n dependencies = [\n  \"fxhash\",\n  \"log\",\n@@ -396,9 +396,9 @@ checksum = \"9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423\"\n \n [[package]]\n name = \"wasmtime-jit-icache-coherence\"\n-version = \"2.0.1\"\n+version = \"3.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"e6bbabb309c06cc238ee91b1455b748c45f0bdcab0dda2c2db85b0a1e69fcb66\"\n+checksum = \"22d9c2e92b0fc124d2cad6cb497a4c840580a7dd2414a37109e8c7cfe699c0ea\"\n dependencies = [\n  \"cfg-if\",\n  \"libc\",\n@@ -429,43 +429,57 @@ checksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n \n [[package]]\n name = \"windows-sys\"\n-version = \"0.36.1\"\n+version = \"0.42.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"ea04155a16a59f9eab786fe12a4a450e75cdb175f9e0d80da1e17db09f55b8d2\"\n+checksum = \"5a3e1820f08b8513f676f7ab6c1f99ff312fb97b553d30ff4dd86f9f15728aa7\"\n dependencies = [\n+ \"windows_aarch64_gnullvm\",\n  \"windows_aarch64_msvc\",\n  \"windows_i686_gnu\",\n  \"windows_i686_msvc\",\n  \"windows_x86_64_gnu\",\n+ \"windows_x86_64_gnullvm\",\n  \"windows_x86_64_msvc\",\n ]\n \n+[[package]]\n+name = \"windows_aarch64_gnullvm\"\n+version = \"0.42.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"41d2aa71f6f0cbe00ae5167d90ef3cfe66527d6f613ca78ac8024c3ccab9a19e\"\n+\n [[package]]\n name = \"windows_aarch64_msvc\"\n-version = \"0.36.1\"\n+version = \"0.42.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"9bb8c3fd39ade2d67e9874ac4f3db21f0d710bee00fe7cab16949ec184eeaa47\"\n+checksum = \"dd0f252f5a35cac83d6311b2e795981f5ee6e67eb1f9a7f64eb4500fbc4dcdb4\"\n \n [[package]]\n name = \"windows_i686_gnu\"\n-version = \"0.36.1\"\n+version = \"0.42.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"180e6ccf01daf4c426b846dfc66db1fc518f074baa793aa7d9b9aaeffad6a3b6\"\n+checksum = \"fbeae19f6716841636c28d695375df17562ca208b2b7d0dc47635a50ae6c5de7\"\n \n [[package]]\n name = \"windows_i686_msvc\"\n-version = \"0.36.1\"\n+version = \"0.42.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"e2e7917148b2812d1eeafaeb22a97e4813dfa60a3f8f78ebe204bcc88f12f024\"\n+checksum = \"84c12f65daa39dd2babe6e442988fc329d6243fdce47d7d2d155b8d874862246\"\n \n [[package]]\n name = \"windows_x86_64_gnu\"\n-version = \"0.36.1\"\n+version = \"0.42.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"bf7b1b21b5362cbc318f686150e5bcea75ecedc74dd157d874d754a2ca44b0ed\"\n+\n+[[package]]\n+name = \"windows_x86_64_gnullvm\"\n+version = \"0.42.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"4dcd171b8776c41b97521e5da127a2d86ad280114807d0b2ab1e462bc764d9e1\"\n+checksum = \"09d525d2ba30eeb3297665bd434a54297e4170c7f1a44cad4ef58095b4cd2028\"\n \n [[package]]\n name = \"windows_x86_64_msvc\"\n-version = \"0.36.1\"\n+version = \"0.42.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"c811ca4a8c853ef420abd8592ba53ddbbac90410fab6903b3e79972a631f7680\"\n+checksum = \"f40009d85759725a34da6d89a94e63d7bdc50a862acf0dbc7c8e488f1edcb6f5\""}, {"sha": "f03cc34a81081b2acc79fbac7651fff575080a6e", "filename": "Cargo.toml", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/debd45cc7be97c8a7c50c2822593471d04d87366/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/debd45cc7be97c8a7c50c2822593471d04d87366/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=debd45cc7be97c8a7c50c2822593471d04d87366", "patch": "@@ -15,12 +15,12 @@ crate-type = [\"dylib\"]\n \n [dependencies]\n # These have to be in sync with each other\n-cranelift-codegen = { version = \"0.90.1\", features = [\"unwind\", \"all-arch\"] }\n-cranelift-frontend = \"0.90.1\"\n-cranelift-module = \"0.90.1\"\n-cranelift-native = \"0.90.1\"\n-cranelift-jit = { version = \"0.90.1\", optional = true }\n-cranelift-object = \"0.90.1\"\n+cranelift-codegen = { version = \"0.91\", features = [\"unwind\", \"all-arch\"] }\n+cranelift-frontend = \"0.91\"\n+cranelift-module = \"0.91\"\n+cranelift-native = \"0.91\"\n+cranelift-jit = { version = \"0.91\", optional = true }\n+cranelift-object = \"0.91\"\n target-lexicon = \"0.12.0\"\n gimli = { version = \"0.26.0\", default-features = false, features = [\"write\"]}\n object = { version = \"0.29.0\", default-features = false, features = [\"std\", \"read_core\", \"write\", \"archive\", \"coff\", \"elf\", \"macho\", \"pe\"] }"}, {"sha": "0df3ffc4bd89028a33bd6457d3bad0b54b8dab38", "filename": "src/base.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/debd45cc7be97c8a7c50c2822593471d04d87366/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/debd45cc7be97c8a7c50c2822593471d04d87366/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=debd45cc7be97c8a7c50c2822593471d04d87366", "patch": "@@ -113,6 +113,8 @@ pub(crate) fn codegen_fn<'tcx>(\n     };\n \n     tcx.sess.time(\"codegen clif ir\", || codegen_fn_body(&mut fx, start_block));\n+    fx.bcx.seal_all_blocks();\n+    fx.bcx.finalize();\n \n     // Recover all necessary data from fx, before accessing func will prevent future access to it.\n     let symbol_name = fx.symbol_name;\n@@ -487,9 +489,6 @@ fn codegen_fn_body(fx: &mut FunctionCx<'_, '_, '_>, start_block: Block) {\n             }\n         };\n     }\n-\n-    fx.bcx.seal_all_blocks();\n-    fx.bcx.finalize();\n }\n \n fn codegen_stmt<'tcx>("}, {"sha": "869977104e361513f2062dc293f05c530bfec70a", "filename": "src/common.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/debd45cc7be97c8a7c50c2822593471d04d87366/src%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/debd45cc7be97c8a7c50c2822593471d04d87366/src%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcommon.rs?ref=debd45cc7be97c8a7c50c2822593471d04d87366", "patch": "@@ -167,6 +167,15 @@ pub(crate) fn codegen_icmp_imm(\n     }\n }\n \n+pub(crate) fn codegen_bitcast(fx: &mut FunctionCx<'_, '_, '_>, dst_ty: Type, val: Value) -> Value {\n+    let mut flags = MemFlags::new();\n+    flags.set_endianness(match fx.tcx.data_layout.endian {\n+        rustc_target::abi::Endian::Big => cranelift_codegen::ir::Endianness::Big,\n+        rustc_target::abi::Endian::Little => cranelift_codegen::ir::Endianness::Little,\n+    });\n+    fx.bcx.ins().bitcast(dst_ty, flags, val)\n+}\n+\n pub(crate) fn type_zero_value(bcx: &mut FunctionBuilder<'_>, ty: Type) -> Value {\n     if ty == types::I128 {\n         let zero = bcx.ins().iconst(types::I64, 0);"}, {"sha": "d2ae6978ca2a8ee84e63410dd0d6d6aa1985461b", "filename": "src/intrinsics/llvm_x86.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/debd45cc7be97c8a7c50c2822593471d04d87366/src%2Fintrinsics%2Fllvm_x86.rs", "raw_url": "https://github.com/rust-lang/rust/raw/debd45cc7be97c8a7c50c2822593471d04d87366/src%2Fintrinsics%2Fllvm_x86.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fllvm_x86.rs?ref=debd45cc7be97c8a7c50c2822593471d04d87366", "patch": "@@ -33,8 +33,8 @@ pub(crate) fn codegen_x86_llvm_intrinsic_call<'tcx>(\n \n                 // cast float to int\n                 let a_lane = match lane_ty {\n-                    types::F32 => fx.bcx.ins().bitcast(types::I32, a_lane),\n-                    types::F64 => fx.bcx.ins().bitcast(types::I64, a_lane),\n+                    types::F32 => codegen_bitcast(fx, types::I32, a_lane),\n+                    types::F64 => codegen_bitcast(fx, types::I64, a_lane),\n                     _ => a_lane,\n                 };\n "}, {"sha": "3681154e7888fb959c7dd5f6b7482273a267af6d", "filename": "src/intrinsics/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/debd45cc7be97c8a7c50c2822593471d04d87366/src%2Fintrinsics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/debd45cc7be97c8a7c50c2822593471d04d87366/src%2Fintrinsics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fmod.rs?ref=debd45cc7be97c8a7c50c2822593471d04d87366", "patch": "@@ -200,7 +200,7 @@ fn bool_to_zero_or_max_uint<'tcx>(\n     let mut res = fx.bcx.ins().bmask(int_ty, val);\n \n     if ty.is_float() {\n-        res = fx.bcx.ins().bitcast(ty, res);\n+        res = codegen_bitcast(fx, ty, res);\n     }\n \n     res"}, {"sha": "fa06d6c3ba7f3a2a27b9f14b73d8862cfac75d87", "filename": "src/value_and_place.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/debd45cc7be97c8a7c50c2822593471d04d87366/src%2Fvalue_and_place.rs", "raw_url": "https://github.com/rust-lang/rust/raw/debd45cc7be97c8a7c50c2822593471d04d87366/src%2Fvalue_and_place.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvalue_and_place.rs?ref=debd45cc7be97c8a7c50c2822593471d04d87366", "patch": "@@ -514,8 +514,8 @@ impl<'tcx> CPlace<'tcx> {\n                 (types::I32, types::F32)\n                 | (types::F32, types::I32)\n                 | (types::I64, types::F64)\n-                | (types::F64, types::I64) => fx.bcx.ins().bitcast(dst_ty, data),\n-                _ if src_ty.is_vector() && dst_ty.is_vector() => fx.bcx.ins().bitcast(dst_ty, data),\n+                | (types::F64, types::I64) => codegen_bitcast(fx, dst_ty, data),\n+                _ if src_ty.is_vector() && dst_ty.is_vector() => codegen_bitcast(fx, dst_ty, data),\n                 _ if src_ty.is_vector() || dst_ty.is_vector() => {\n                     // FIXME do something more efficient for transmutes between vectors and integers.\n                     let stack_slot = fx.bcx.create_sized_stack_slot(StackSlotData {"}]}