{"sha": "b7e009b386260732755784e93f9a347dca40d912", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3ZTAwOWIzODYyNjA3MzI3NTU3ODRlOTNmOWEzNDdkY2E0MGQ5MTI=", "commit": {"author": {"name": "Alisdair Owens", "email": "awo101@zepler.net", "date": "2015-08-12T19:50:49Z"}, "committer": {"name": "Alisdair Owens", "email": "awo101@zepler.net", "date": "2015-08-12T19:50:49Z"}, "message": "Add long diagnostics for E0366 and E0367", "tree": {"sha": "57b560c0e7c0cb62d07a2355c6db9a99906fbd45", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57b560c0e7c0cb62d07a2355c6db9a99906fbd45"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7e009b386260732755784e93f9a347dca40d912", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7e009b386260732755784e93f9a347dca40d912", "html_url": "https://github.com/rust-lang/rust/commit/b7e009b386260732755784e93f9a347dca40d912", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7e009b386260732755784e93f9a347dca40d912/comments", "author": {"login": "AlisdairO", "id": 6296622, "node_id": "MDQ6VXNlcjYyOTY2MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6296622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlisdairO", "html_url": "https://github.com/AlisdairO", "followers_url": "https://api.github.com/users/AlisdairO/followers", "following_url": "https://api.github.com/users/AlisdairO/following{/other_user}", "gists_url": "https://api.github.com/users/AlisdairO/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlisdairO/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlisdairO/subscriptions", "organizations_url": "https://api.github.com/users/AlisdairO/orgs", "repos_url": "https://api.github.com/users/AlisdairO/repos", "events_url": "https://api.github.com/users/AlisdairO/events{/privacy}", "received_events_url": "https://api.github.com/users/AlisdairO/received_events", "type": "User", "site_admin": false}, "committer": {"login": "AlisdairO", "id": 6296622, "node_id": "MDQ6VXNlcjYyOTY2MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6296622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlisdairO", "html_url": "https://github.com/AlisdairO", "followers_url": "https://api.github.com/users/AlisdairO/followers", "following_url": "https://api.github.com/users/AlisdairO/following{/other_user}", "gists_url": "https://api.github.com/users/AlisdairO/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlisdairO/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlisdairO/subscriptions", "organizations_url": "https://api.github.com/users/AlisdairO/orgs", "repos_url": "https://api.github.com/users/AlisdairO/repos", "events_url": "https://api.github.com/users/AlisdairO/events{/privacy}", "received_events_url": "https://api.github.com/users/AlisdairO/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81c9ff24fe6d53eb51d9427302ec842da49b9edc", "url": "https://api.github.com/repos/rust-lang/rust/commits/81c9ff24fe6d53eb51d9427302ec842da49b9edc", "html_url": "https://github.com/rust-lang/rust/commit/81c9ff24fe6d53eb51d9427302ec842da49b9edc"}], "stats": {"total": 73, "additions": 71, "deletions": 2}, "files": [{"sha": "75adbc9e7853f53b8063ecfaddaca30061187107", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 71, "deletions": 2, "changes": 73, "blob_url": "https://github.com/rust-lang/rust/blob/b7e009b386260732755784e93f9a347dca40d912/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7e009b386260732755784e93f9a347dca40d912/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=b7e009b386260732755784e93f9a347dca40d912", "patch": "@@ -2410,6 +2410,77 @@ fn main() {\n ```\n \"##,\n \n+E0366: r##\"\n+An attempt was made to implement `Drop` on a concrete specialization of a\n+generic type. An example is shown below:\n+\n+```\n+struct Foo<T> {\n+    t: T\n+}\n+\n+impl Drop for Foo<u32> {\n+    fn drop(&mut self) {}\n+}\n+```\n+\n+This code is not legal: it is not possible to specialize `Drop` to a subset of\n+implementations of a generic type. One workaround for this is to wrap the\n+generic type, as shown below:\n+\n+```\n+struct Foo<T> {\n+    t: T\n+}\n+\n+struct Bar {\n+    t: Foo<u32>\n+}\n+\n+impl Drop for Bar {\n+    fn drop(&mut self) {}\n+}\n+```\n+\"##,\n+\n+E0367: r##\"\n+An attempt was made to implement `Drop` on a specialization of a generic type.\n+An example is shown below:\n+\n+```\n+trait Foo{}\n+\n+struct MyStruct<T> {\n+    t: T\n+}\n+\n+impl<T: Foo> Drop for MyStruct<T> {\n+    fn drop(&mut self) {}\n+}\n+```\n+\n+This code is not legal: it is not possible to specialize `Drop` to a subset of\n+implementations of a generic type. In order for this code to work, `MyStruct`\n+must also require that `T` implements `Foo`. Alternatively, another option is\n+to wrap the generic type in another that specializes appropriately:\n+\n+```\n+trait Foo{}\n+\n+struct MyStruct<T> {\n+    t: T\n+}\n+\n+struct MyStructWrapper<T: Foo> {\n+    t: MyStruct<T>\n+}\n+\n+impl <T: Foo> Drop for MyStructWrapper<T> {\n+    fn drop(&mut self) {}\n+}\n+```\n+\"##,\n+\n E0368: r##\"\n This error indicates that a binary assignment operator like `+=` or `^=` was\n applied to the wrong types. For example:\n@@ -2641,8 +2712,6 @@ register_diagnostics! {\n     E0325, // implemented an associated type when another trait item expected\n     E0328, // cannot implement Unsize explicitly\n     E0329, // associated const depends on type parameter or Self.\n-    E0366, // dropck forbid specialization to concrete type or region\n-    E0367, // dropck forbid specialization to predicate not in struct/enum\n     E0369, // binary operation `<op>` cannot be applied to types\n     E0370, // discriminant overflow\n     E0374, // the trait `CoerceUnsized` may only be implemented for a coercion"}]}