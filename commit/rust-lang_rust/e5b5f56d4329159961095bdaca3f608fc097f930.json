{"sha": "e5b5f56d4329159961095bdaca3f608fc097f930", "node_id": "C_kwDOAAsO6NoAKGU1YjVmNTZkNDMyOTE1OTk2MTA5NWJkYWNhM2Y2MDhmYzA5N2Y5MzA", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-08-01T06:46:08Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-08-16T03:41:34Z"}, "message": "Rename some things related to literals.\n\n- Rename `ast::Lit::token` as `ast::Lit::token_lit`, because its type is\n  `token::Lit`, which is not a token. (This has been confusing me for a\n  long time.)\n  reasonable because we have an `ast::token::Lit` inside an `ast::Lit`.\n- Rename `LitKind::{from,to}_lit_token` as\n  `LitKind::{from,to}_token_lit`, to match the above change and\n  `token::Lit`.", "tree": {"sha": "d231f9117677a6759f23397da8775a860b2e57f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d231f9117677a6759f23397da8775a860b2e57f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5b5f56d4329159961095bdaca3f608fc097f930", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5b5f56d4329159961095bdaca3f608fc097f930", "html_url": "https://github.com/rust-lang/rust/commit/e5b5f56d4329159961095bdaca3f608fc097f930", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5b5f56d4329159961095bdaca3f608fc097f930/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76be14b5cadd56e18af721c830c5592621b19cb7", "url": "https://api.github.com/repos/rust-lang/rust/commits/76be14b5cadd56e18af721c830c5592621b19cb7", "html_url": "https://github.com/rust-lang/rust/commit/76be14b5cadd56e18af721c830c5592621b19cb7"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "3105882e2d308085a6e0f8ab2269e47594a0d8b2", "filename": "src/expr.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e5b5f56d4329159961095bdaca3f608fc097f930/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5b5f56d4329159961095bdaca3f608fc097f930/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=e5b5f56d4329159961095bdaca3f608fc097f930", "patch": "@@ -79,7 +79,7 @@ pub(crate) fn format_expr(\n             if let Some(expr_rw) = rewrite_literal(context, l, shape) {\n                 Some(expr_rw)\n             } else {\n-                if let LitKind::StrRaw(_) = l.token.kind {\n+                if let LitKind::StrRaw(_) = l.token_lit.kind {\n                     Some(context.snippet(l.span).trim().into())\n                 } else {\n                     None\n@@ -1226,7 +1226,7 @@ fn rewrite_string_lit(context: &RewriteContext<'_>, span: Span, shape: Shape) ->\n \n fn rewrite_int_lit(context: &RewriteContext<'_>, lit: &ast::Lit, shape: Shape) -> Option<String> {\n     let span = lit.span;\n-    let symbol = lit.token.symbol.as_str();\n+    let symbol = lit.token_lit.symbol.as_str();\n \n     if let Some(symbol_stripped) = symbol.strip_prefix(\"0x\") {\n         let hex_lit = match context.config.hex_literal_case() {\n@@ -1239,7 +1239,9 @@ fn rewrite_int_lit(context: &RewriteContext<'_>, lit: &ast::Lit, shape: Shape) -\n                 format!(\n                     \"0x{}{}\",\n                     hex_lit,\n-                    lit.token.suffix.map_or(String::new(), |s| s.to_string())\n+                    lit.token_lit\n+                        .suffix\n+                        .map_or(String::new(), |s| s.to_string())\n                 ),\n                 context.config.max_width(),\n                 shape,"}]}