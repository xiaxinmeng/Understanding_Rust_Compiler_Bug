{"sha": "73a979ad63ea20821996809aaccb82767ac84658", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczYTk3OWFkNjNlYTIwODIxOTk2ODA5YWFjY2I4Mjc2N2FjODQ2NTg=", "commit": {"author": {"name": "ashtneoi", "email": "ashtneoi@gmail.com", "date": "2018-07-11T07:44:55Z"}, "committer": {"name": "ashtneoi", "email": "ashtneoi@gmail.com", "date": "2018-07-13T05:51:30Z"}, "message": "Simplify match expression", "tree": {"sha": "7aa5a47f87591df41f3bf082a825412ec0bbd049", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7aa5a47f87591df41f3bf082a825412ec0bbd049"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73a979ad63ea20821996809aaccb82767ac84658", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73a979ad63ea20821996809aaccb82767ac84658", "html_url": "https://github.com/rust-lang/rust/commit/73a979ad63ea20821996809aaccb82767ac84658", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73a979ad63ea20821996809aaccb82767ac84658/comments", "author": {"login": "ashtneoi", "id": 33603534, "node_id": "MDQ6VXNlcjMzNjAzNTM0", "avatar_url": "https://avatars.githubusercontent.com/u/33603534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashtneoi", "html_url": "https://github.com/ashtneoi", "followers_url": "https://api.github.com/users/ashtneoi/followers", "following_url": "https://api.github.com/users/ashtneoi/following{/other_user}", "gists_url": "https://api.github.com/users/ashtneoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashtneoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashtneoi/subscriptions", "organizations_url": "https://api.github.com/users/ashtneoi/orgs", "repos_url": "https://api.github.com/users/ashtneoi/repos", "events_url": "https://api.github.com/users/ashtneoi/events{/privacy}", "received_events_url": "https://api.github.com/users/ashtneoi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ashtneoi", "id": 33603534, "node_id": "MDQ6VXNlcjMzNjAzNTM0", "avatar_url": "https://avatars.githubusercontent.com/u/33603534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashtneoi", "html_url": "https://github.com/ashtneoi", "followers_url": "https://api.github.com/users/ashtneoi/followers", "following_url": "https://api.github.com/users/ashtneoi/following{/other_user}", "gists_url": "https://api.github.com/users/ashtneoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashtneoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashtneoi/subscriptions", "organizations_url": "https://api.github.com/users/ashtneoi/orgs", "repos_url": "https://api.github.com/users/ashtneoi/repos", "events_url": "https://api.github.com/users/ashtneoi/events{/privacy}", "received_events_url": "https://api.github.com/users/ashtneoi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8b04f6385ce9909a165ff47c5ebf49ded1fc6db", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8b04f6385ce9909a165ff47c5ebf49ded1fc6db", "html_url": "https://github.com/rust-lang/rust/commit/b8b04f6385ce9909a165ff47c5ebf49ded1fc6db"}], "stats": {"total": 18, "additions": 8, "deletions": 10}, "files": [{"sha": "b754fde9069a59d84f89238bb0e90ba439dc15f4", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/73a979ad63ea20821996809aaccb82767ac84658/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73a979ad63ea20821996809aaccb82767ac84658/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=73a979ad63ea20821996809aaccb82767ac84658", "patch": "@@ -1841,31 +1841,29 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n                 elem: ProjectionElem::Deref,\n             }) if self.mir.local_decls[*local].is_user_variable.is_some() => {\n                 let local_decl = &self.mir.local_decls[*local];\n-                let suggestion = match local_decl.is_user_variable {\n-                    Some(ClearCrossCrate::Set(mir::BindingForm::ImplicitSelf)) => {\n+                let suggestion = match local_decl.is_user_variable.as_ref().unwrap() {\n+                    ClearCrossCrate::Set(mir::BindingForm::ImplicitSelf) => {\n                         Some(suggest_ampmut_self(local_decl))\n                     },\n \n-                    Some(ClearCrossCrate::Set(mir::BindingForm::Var(mir::VarBindingForm {\n+                    ClearCrossCrate::Set(mir::BindingForm::Var(mir::VarBindingForm {\n                         binding_mode: ty::BindingMode::BindByValue(_),\n                         opt_ty_info,\n                         ..\n-                    }))) => Some(suggest_ampmut(\n+                    })) => Some(suggest_ampmut(\n                         self.tcx,\n                         self.mir,\n                         *local,\n                         local_decl,\n-                        opt_ty_info,\n+                        *opt_ty_info,\n                     )),\n \n-                    Some(ClearCrossCrate::Set(mir::BindingForm::Var(mir::VarBindingForm {\n+                    ClearCrossCrate::Set(mir::BindingForm::Var(mir::VarBindingForm {\n                         binding_mode: ty::BindingMode::BindByReference(_),\n                         ..\n-                    }))) => suggest_ref_mut(self.tcx, local_decl),\n-\n-                    Some(ClearCrossCrate::Clear) => bug!(\"saw cleared local state\"),\n+                    })) => suggest_ref_mut(self.tcx, local_decl),\n \n-                    None => bug!(),\n+                    ClearCrossCrate::Clear => bug!(\"saw cleared local state\"),\n                 };\n \n                 if let Some((err_help_span, suggested_code)) = suggestion {"}]}