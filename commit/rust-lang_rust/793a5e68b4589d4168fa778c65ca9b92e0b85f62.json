{"sha": "793a5e68b4589d4168fa778c65ca9b92e0b85f62", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5M2E1ZTY4YjQ1ODlkNDE2OGZhNzc4YzY1Y2E5YjkyZTBiODVmNjI=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-02-04T20:51:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-04T20:51:58Z"}, "message": "Rollup merge of #68819 - estebank:split_at_mut, r=oli-obk\n\nSuggest `split_at_mut` on multiple mutable index access\n\ncc #58792.", "tree": {"sha": "471915cc7224f9d29ca58fbc8975feffc92152f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/471915cc7224f9d29ca58fbc8975feffc92152f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/793a5e68b4589d4168fa778c65ca9b92e0b85f62", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeOdluCRBK7hj4Ov3rIwAAdHIIAAGSIXbMPD57PVr+iYBW2OXE\ncBehMitxxCCcd3f4Zbaafg5Xq8f6Ancmcv03mbyyUgyhqR9zLNkypdDBZbIzS3w7\nv4Up/06CrMI2bEsDgLZXivYgD8XLNMZLYeOmyKVBoGPr/SHgGO7Oyif4hinilbcu\nhlTEn2Q/aV/6jUQd12jKSFpEeT0fMbgy0/Seetm4reMv12cBArVV4jiKKqUpAV4k\nTYrqtvpb+qyBdNNlMcuU9gd0yN0oX8g24EDpr1yk2L2D/ZLYtTHd+UXSVRESdl72\ntDFq0g1mf2y5GWf2qhqXKoIdkWuYZMjbtGqXfBTBy2eYA5Zw8pM4PkXQDOAg4DU=\n=JAHW\n-----END PGP SIGNATURE-----\n", "payload": "tree 471915cc7224f9d29ca58fbc8975feffc92152f5\nparent a25ce40bc9f0206128825676ec0e63a3c032ea4e\nparent 0f73133be6a6915e2d5836ce9986eaffc1b2954d\nauthor Dylan DPC <dylan.dpc@gmail.com> 1580849518 +0100\ncommitter GitHub <noreply@github.com> 1580849518 +0100\n\nRollup merge of #68819 - estebank:split_at_mut, r=oli-obk\n\nSuggest `split_at_mut` on multiple mutable index access\n\ncc #58792.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/793a5e68b4589d4168fa778c65ca9b92e0b85f62", "html_url": "https://github.com/rust-lang/rust/commit/793a5e68b4589d4168fa778c65ca9b92e0b85f62", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/793a5e68b4589d4168fa778c65ca9b92e0b85f62/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a25ce40bc9f0206128825676ec0e63a3c032ea4e", "url": "https://api.github.com/repos/rust-lang/rust/commits/a25ce40bc9f0206128825676ec0e63a3c032ea4e", "html_url": "https://github.com/rust-lang/rust/commit/a25ce40bc9f0206128825676ec0e63a3c032ea4e"}, {"sha": "0f73133be6a6915e2d5836ce9986eaffc1b2954d", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f73133be6a6915e2d5836ce9986eaffc1b2954d", "html_url": "https://github.com/rust-lang/rust/commit/0f73133be6a6915e2d5836ce9986eaffc1b2954d"}], "stats": {"total": 50, "additions": 48, "deletions": 2}, "files": [{"sha": "b49e7b7f0d9f897895f4d3077ec3dc61cf2ff7dd", "filename": "src/librustc_mir/borrow_check/diagnostics/conflict_errors.rs", "status": "modified", "additions": 25, "deletions": 2, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/793a5e68b4589d4168fa778c65ca9b92e0b85f62/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/793a5e68b4589d4168fa778c65ca9b92e0b85f62/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs?ref=793a5e68b4589d4168fa778c65ca9b92e0b85f62", "patch": "@@ -397,14 +397,20 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n \n             (BorrowKind::Mut { .. }, BorrowKind::Mut { .. }) => {\n                 first_borrow_desc = \"first \";\n-                self.cannot_mutably_borrow_multiply(\n+                let mut err = self.cannot_mutably_borrow_multiply(\n                     span,\n                     &desc_place,\n                     &msg_place,\n                     issued_span,\n                     &msg_borrow,\n                     None,\n-                )\n+                );\n+                self.suggest_split_at_mut_if_applicable(\n+                    &mut err,\n+                    &place,\n+                    &issued_borrow.borrowed_place,\n+                );\n+                err\n             }\n \n             (BorrowKind::Unique, BorrowKind::Unique) => {\n@@ -549,6 +555,23 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n         err\n     }\n \n+    fn suggest_split_at_mut_if_applicable(\n+        &self,\n+        err: &mut DiagnosticBuilder<'_>,\n+        place: &Place<'tcx>,\n+        borrowed_place: &Place<'tcx>,\n+    ) {\n+        match (&place.projection[..], &borrowed_place.projection[..]) {\n+            ([ProjectionElem::Index(_)], [ProjectionElem::Index(_)]) => {\n+                err.help(\n+                    \"consider using `.split_at_mut(position)` or similar method to obtain \\\n+                     two mutable non-overlapping sub-slices\",\n+                );\n+            }\n+            _ => {}\n+        }\n+    }\n+\n     /// Returns the description of the root place for a conflicting borrow and the full\n     /// descriptions of the places that caused the conflict.\n     ///"}, {"sha": "d294c20b8240eacdc5511728120c9c153f2c0a5a", "filename": "src/test/ui/suggestions/suggest-split-at-mut.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/793a5e68b4589d4168fa778c65ca9b92e0b85f62/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-split-at-mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/793a5e68b4589d4168fa778c65ca9b92e0b85f62/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-split-at-mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-split-at-mut.rs?ref=793a5e68b4589d4168fa778c65ca9b92e0b85f62", "patch": "@@ -0,0 +1,8 @@\n+fn main() {\n+    let mut foo = [1, 2, 3, 4];\n+    let a = &mut foo[2];\n+    let b = &mut foo[3]; //~ ERROR cannot borrow `foo[_]` as mutable more than once at a time\n+    *a = 5;\n+    *b = 6;\n+    println!(\"{:?} {:?}\", a, b);\n+}"}, {"sha": "330f012b2a9be2dabc367f980fa0b6f0b9e11191", "filename": "src/test/ui/suggestions/suggest-split-at-mut.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/793a5e68b4589d4168fa778c65ca9b92e0b85f62/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-split-at-mut.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/793a5e68b4589d4168fa778c65ca9b92e0b85f62/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-split-at-mut.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-split-at-mut.stderr?ref=793a5e68b4589d4168fa778c65ca9b92e0b85f62", "patch": "@@ -0,0 +1,15 @@\n+error[E0499]: cannot borrow `foo[_]` as mutable more than once at a time\n+  --> $DIR/suggest-split-at-mut.rs:4:13\n+   |\n+LL |     let a = &mut foo[2];\n+   |             ----------- first mutable borrow occurs here\n+LL |     let b = &mut foo[3];\n+   |             ^^^^^^^^^^^ second mutable borrow occurs here\n+LL |     *a = 5;\n+   |     ------ first borrow later used here\n+   |\n+   = help: consider using `.split_at_mut(position)` or similar method to obtain two mutable non-overlapping sub-slices\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0499`."}]}