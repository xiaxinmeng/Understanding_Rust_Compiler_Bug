{"sha": "2bbf44f655bc6b1073009cab56884b09666de6c3", "node_id": "C_kwDOAAsO6NoAKDJiYmY0NGY2NTViYzZiMTA3MzAwOWNhYjU2ODg0YjA5NjY2ZGU2YzM", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-06-14T19:21:38Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-06-14T19:21:38Z"}, "message": "rustdoc: change \"variadic tuple\" notation to look less like real syntax", "tree": {"sha": "ac413ddf6bb610e6581a30901bce91f233c58520", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac413ddf6bb610e6581a30901bce91f233c58520"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2bbf44f655bc6b1073009cab56884b09666de6c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2bbf44f655bc6b1073009cab56884b09666de6c3", "html_url": "https://github.com/rust-lang/rust/commit/2bbf44f655bc6b1073009cab56884b09666de6c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2bbf44f655bc6b1073009cab56884b09666de6c3/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94396711dd4a4c535664c0b85696bbe089198b8e", "url": "https://api.github.com/repos/rust-lang/rust/commits/94396711dd4a4c535664c0b85696bbe089198b8e", "html_url": "https://github.com/rust-lang/rust/commit/94396711dd4a4c535664c0b85696bbe089198b8e"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "00793f7f9204dafd7e85e6f350ecc9a528f48d90", "filename": "library/core/src/primitive_docs.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2bbf44f655bc6b1073009cab56884b09666de6c3/library%2Fcore%2Fsrc%2Fprimitive_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bbf44f655bc6b1073009cab56884b09666de6c3/library%2Fcore%2Fsrc%2Fprimitive_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fprimitive_docs.rs?ref=2bbf44f655bc6b1073009cab56884b09666de6c3", "patch": "@@ -918,10 +918,10 @@ mod prim_str {}\n // linked to as `#trait-implementations-1`\n /// # Trait implementations\n ///\n-/// In this documentation the shorthand `(T, ...)` is used to represent tuples of varying length.\n-/// When that is used, any trait bound expressed on `T` applies to each element of the tuple\n-/// independently. Note that this is a convenience notation to avoid repetitive documentation,\n-/// not valid Rust syntax.\n+/// In this documentation the shorthand `(T\u2081, T\u2082, \u2026, T\u2099)` is used to represent tuples of varying\n+/// length. When that is used, any trait bound expressed on `T` applies to each element of the\n+/// tuple independently. Note that this is a convenience notation to avoid repetitive\n+/// documentation, not valid Rust syntax.\n ///\n /// Due to a temporary restriction in Rust\u2019s type system, the following traits are only\n /// implemented on tuples of arity 12 or less. In the future, this may change:"}, {"sha": "00793f7f9204dafd7e85e6f350ecc9a528f48d90", "filename": "library/std/src/primitive_docs.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2bbf44f655bc6b1073009cab56884b09666de6c3/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bbf44f655bc6b1073009cab56884b09666de6c3/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprimitive_docs.rs?ref=2bbf44f655bc6b1073009cab56884b09666de6c3", "patch": "@@ -918,10 +918,10 @@ mod prim_str {}\n // linked to as `#trait-implementations-1`\n /// # Trait implementations\n ///\n-/// In this documentation the shorthand `(T, ...)` is used to represent tuples of varying length.\n-/// When that is used, any trait bound expressed on `T` applies to each element of the tuple\n-/// independently. Note that this is a convenience notation to avoid repetitive documentation,\n-/// not valid Rust syntax.\n+/// In this documentation the shorthand `(T\u2081, T\u2082, \u2026, T\u2099)` is used to represent tuples of varying\n+/// length. When that is used, any trait bound expressed on `T` applies to each element of the\n+/// tuple independently. Note that this is a convenience notation to avoid repetitive\n+/// documentation, not valid Rust syntax.\n ///\n /// Due to a temporary restriction in Rust\u2019s type system, the following traits are only\n /// implemented on tuples of arity 12 or less. In the future, this may change:"}, {"sha": "5520430b043027697a7d543ec15b9af7c111189b", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2bbf44f655bc6b1073009cab56884b09666de6c3/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bbf44f655bc6b1073009cab56884b09666de6c3/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=2bbf44f655bc6b1073009cab56884b09666de6c3", "patch": "@@ -1079,7 +1079,7 @@ impl clean::Impl {\n                 (self.kind.is_tuple_variadic() || self.kind.is_auto()) {\n                 // Hardcoded anchor library/core/src/primitive_docs.rs\n                 // Link should match `# Trait implementations`\n-                primitive_link_fragment(f, PrimitiveType::Tuple, &format!(\"({name}, ...)\"), \"#trait-implementations-1\", cx)?;\n+                primitive_link_fragment(f, PrimitiveType::Tuple, &format!(\"({name}\u2081, {name}\u2082, \u2026, {name}\u2099)\"), \"#trait-implementations-1\", cx)?;\n             } else if let Some(ty) = self.kind.as_blanket_ty() {\n                 fmt_type(ty, f, use_absolute, cx)?;\n             } else {"}]}