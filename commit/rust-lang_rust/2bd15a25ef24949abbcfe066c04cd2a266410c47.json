{"sha": "2bd15a25ef24949abbcfe066c04cd2a266410c47", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiZDE1YTI1ZWYyNDk0OWFiYmNmZTA2NmMwNGNkMmEyNjY0MTBjNDc=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-07-15T01:07:56Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-07-18T04:03:57Z"}, "message": "Add missing `visit_expr_field`", "tree": {"sha": "be4393fcf20c54be6b128a7abc11330e242caf5b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be4393fcf20c54be6b128a7abc11330e242caf5b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2bd15a25ef24949abbcfe066c04cd2a266410c47", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAmDzqC0ACgkQtAh+UQ6Y\nsWR9AxAAuG5IhHoXofJiE5ewVVleOfembHSqOxklTHPvsEzMYGNpELHMcVmvVHK1\nlQhuOuj32wGwrJEyi3clSzOi+xTnGt7MFU113JDThfsOkCMNIeQSasskz1VQZcrH\nrzSsIDBIN7YfpOZHRbZCTN59IPTn0OEcq5fDAXag/TsWqKsOGAA49B4wSSiM7Q4h\nQVs8jm/YV/wYX7dIPRzqZA2lvvdc/cyxiJX0n20Ne6ZLO+KVH5uro9y3CF1e7+bq\n2Yy7mgudKmcqP3oK0Dlu/TmI7TJr+EuGy+ke4RjHtjr/BEdUk+VfnlvOFlJjAqa8\nB57e/onR9/hj7J/oKdF6ujn81o8Qx3YLBsJrw0uikwBdEiXT0RVFux3gPepvxRE2\nX1Mker1ojSsLm8JMc6Y66swbCkUNqLSZBvU9U0fTfG3/FPlDQvy6T1hqegIAF3AD\nc0mzhHFJ1mHSBzKi6WV9u/bDNHNbTTWtpLbFbdtfWmNtpLnXuj+ONuTUK1Q0ptmd\nujS7ADenhOpwgLbk+53u/7rBXZnqhGs5eVwORpCJgoZgigKBzS0gVnhYLfdjVDTB\nW5X3Mn+DZEsPd1hTELw2BzIOXgS2w+tGdn00auPG3usQ9ESeomXIwfGgSI5sGkD6\n/ablEQmreTIH1H5AhGfJmjW0iOi3J7beyuKVSP6j6wXmvMUYCAg=\n=3LW2\n-----END PGP SIGNATURE-----", "payload": "tree be4393fcf20c54be6b128a7abc11330e242caf5b\nparent ddd544856ecd181ee02490d12f723be549d3ecb3\nauthor Aaron Hill <aa1ronham@gmail.com> 1626311276 -0500\ncommitter Aaron Hill <aa1ronham@gmail.com> 1626581037 -0500\n\nAdd missing `visit_expr_field`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2bd15a25ef24949abbcfe066c04cd2a266410c47", "html_url": "https://github.com/rust-lang/rust/commit/2bd15a25ef24949abbcfe066c04cd2a266410c47", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2bd15a25ef24949abbcfe066c04cd2a266410c47/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddd544856ecd181ee02490d12f723be549d3ecb3", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddd544856ecd181ee02490d12f723be549d3ecb3", "html_url": "https://github.com/rust-lang/rust/commit/ddd544856ecd181ee02490d12f723be549d3ecb3"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "63e2f66f8102b04542193ef37cf94bb6de6040d2", "filename": "compiler/rustc_lint/src/early.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/2bd15a25ef24949abbcfe066c04cd2a266410c47/compiler%2Frustc_lint%2Fsrc%2Fearly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bd15a25ef24949abbcfe066c04cd2a266410c47/compiler%2Frustc_lint%2Fsrc%2Fearly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fearly.rs?ref=2bd15a25ef24949abbcfe066c04cd2a266410c47", "patch": "@@ -120,6 +120,12 @@ impl<'a, T: EarlyLintPass> ast_visit::Visitor<'a> for EarlyContextAndPass<'a, T>\n         })\n     }\n \n+    fn visit_expr_field(&mut self, f: &'a ast::ExprField) {\n+        self.with_lint_attrs(f.id, &f.attrs, |cx| {\n+            ast_visit::walk_expr_field(cx, f);\n+        })\n+    }\n+\n     fn visit_stmt(&mut self, s: &'a ast::Stmt) {\n         // Add the statement's lint attributes to our\n         // current state when checking the statement itself.\n@@ -389,9 +395,15 @@ pub fn check_ast_crate<T: EarlyLintPass>(\n     // All of the buffered lints should have been emitted at this point.\n     // If not, that means that we somehow buffered a lint for a node id\n     // that was not lint-checked (perhaps it doesn't exist?). This is a bug.\n-    for (_id, lints) in buffered.map {\n+    for (id, lints) in buffered.map {\n         for early_lint in lints {\n-            sess.delay_span_bug(early_lint.span, \"failed to process buffered lint here\");\n+            sess.delay_span_bug(\n+                early_lint.span,\n+                &format!(\n+                    \"failed to process buffered lint here (dummy = {})\",\n+                    id == ast::DUMMY_NODE_ID\n+                ),\n+            );\n         }\n     }\n }"}]}