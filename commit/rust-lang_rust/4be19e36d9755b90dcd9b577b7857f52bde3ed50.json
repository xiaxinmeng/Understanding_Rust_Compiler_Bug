{"sha": "4be19e36d9755b90dcd9b577b7857f52bde3ed50", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiZTE5ZTM2ZDk3NTViOTBkY2Q5YjU3N2I3ODU3ZjUyYmRlM2VkNTA=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-03-22T18:31:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-03-22T18:31:40Z"}, "message": "Rollup merge of #59347 - petrochenkov:nomake, r=davidtwco\n\nMove one test from run-make-fulldeps to ui\n\nThe test was written when `--extern` without path didn't exist.", "tree": {"sha": "72716aa9048f5decfc9bf0febd4cd8b1fa3c2507", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72716aa9048f5decfc9bf0febd4cd8b1fa3c2507"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4be19e36d9755b90dcd9b577b7857f52bde3ed50", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJclSoMCRBK7hj4Ov3rIwAAdHIIAAC7ziAfbIl5Th3IxnVxs0+k\nRZa8fD0UqOUHw6rmfYfDq2lb2tShWL7kLbA1s24B9g11GNzM7yUED616Rm/zYjEY\n8MNZhVSoPMtIT28i/vKxHOMk0PU0cVtSalnnIze0EUlfVYp3yo6qAZM9yf1Pwql1\npJSjSMF9BmGfqHLUNajNWE4KTcWR4HHWwJhDogTsWWtAz+1s/TJUHmrLeOaU2W0r\nV7wirCyqUrwQ/OJMA+ykFId3N2mLBI8+V9Js6zjmMDtt0ITCvWjp2patnp10N93/\nMxm+AIUf9XVktxAQISGxdAo0JFuwo6GW3Zk3vBb2OIQQ7Y7Pq0+nMZC1DTNIsLI=\n=VBqN\n-----END PGP SIGNATURE-----\n", "payload": "tree 72716aa9048f5decfc9bf0febd4cd8b1fa3c2507\nparent aae75cf4e1aaf73bd045c8b68e7956d2cea5a64d\nparent 6389478d7030f1d807a46599dfb7a0a2ba97a240\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1553279500 +0100\ncommitter GitHub <noreply@github.com> 1553279500 +0100\n\nRollup merge of #59347 - petrochenkov:nomake, r=davidtwco\n\nMove one test from run-make-fulldeps to ui\n\nThe test was written when `--extern` without path didn't exist.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4be19e36d9755b90dcd9b577b7857f52bde3ed50", "html_url": "https://github.com/rust-lang/rust/commit/4be19e36d9755b90dcd9b577b7857f52bde3ed50", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4be19e36d9755b90dcd9b577b7857f52bde3ed50/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aae75cf4e1aaf73bd045c8b68e7956d2cea5a64d", "url": "https://api.github.com/repos/rust-lang/rust/commits/aae75cf4e1aaf73bd045c8b68e7956d2cea5a64d", "html_url": "https://github.com/rust-lang/rust/commit/aae75cf4e1aaf73bd045c8b68e7956d2cea5a64d"}, {"sha": "6389478d7030f1d807a46599dfb7a0a2ba97a240", "url": "https://api.github.com/repos/rust-lang/rust/commits/6389478d7030f1d807a46599dfb7a0a2ba97a240", "html_url": "https://github.com/rust-lang/rust/commit/6389478d7030f1d807a46599dfb7a0a2ba97a240"}], "stats": {"total": 107, "additions": 57, "deletions": 50}, "files": [{"sha": "69af01ccf0369210e4dceb47ff105693c53bb134", "filename": "src/test/run-make-fulldeps/extern-prelude/Makefile", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/aae75cf4e1aaf73bd045c8b68e7956d2cea5a64d/src%2Ftest%2Frun-make-fulldeps%2Fextern-prelude%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/aae75cf4e1aaf73bd045c8b68e7956d2cea5a64d/src%2Ftest%2Frun-make-fulldeps%2Fextern-prelude%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fextern-prelude%2FMakefile?ref=aae75cf4e1aaf73bd045c8b68e7956d2cea5a64d", "patch": "@@ -1,11 +0,0 @@\n--include ../tools.mk\n-\n-all:\n-\t$(RUSTC) ep-lib.rs\n-\t$(RUSTC) ep-vec.rs\n-\n-\t$(RUSTC) basic.rs --extern ep_lib=$(TMPDIR)/libep_lib.rlib\n-\t$(RUSTC) shadow-mod.rs --extern ep_lib=$(TMPDIR)/libep_lib.rlib\n-\t$(RUSTC) shadow-prelude.rs --extern Vec=$(TMPDIR)/libep_vec.rlib\n-\t$(RUSTC) relative-only.rs --extern ep_lib=$(TMPDIR)/libep_lib.rlib 2>&1 | $(CGREP) \"unresolved import\"\n-\t$(RUSTC) relative-only.rs --extern ep_lib=$(TMPDIR)/libep_lib.rlib 2>&1 | $(CGREP) \"failed to resolve\""}, {"sha": "dc7cc1f27b6f6a4e20fe693573653d9106ca2cf1", "filename": "src/test/run-make-fulldeps/extern-prelude/basic.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/aae75cf4e1aaf73bd045c8b68e7956d2cea5a64d/src%2Ftest%2Frun-make-fulldeps%2Fextern-prelude%2Fbasic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aae75cf4e1aaf73bd045c8b68e7956d2cea5a64d/src%2Ftest%2Frun-make-fulldeps%2Fextern-prelude%2Fbasic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fextern-prelude%2Fbasic.rs?ref=aae75cf4e1aaf73bd045c8b68e7956d2cea5a64d", "patch": "@@ -1,6 +0,0 @@\n-#![feature(extern_prelude)]\n-\n-fn main() {\n-    let s = ep_lib::S; // It works\n-    s.external();\n-}"}, {"sha": "0fdf3b49d96b4486ba62035ffc286a2072ba75d3", "filename": "src/test/run-make-fulldeps/extern-prelude/relative-only.rs", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/aae75cf4e1aaf73bd045c8b68e7956d2cea5a64d/src%2Ftest%2Frun-make-fulldeps%2Fextern-prelude%2Frelative-only.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aae75cf4e1aaf73bd045c8b68e7956d2cea5a64d/src%2Ftest%2Frun-make-fulldeps%2Fextern-prelude%2Frelative-only.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fextern-prelude%2Frelative-only.rs?ref=aae75cf4e1aaf73bd045c8b68e7956d2cea5a64d", "patch": "@@ -1,9 +0,0 @@\n-// Extern prelude names are not available by absolute paths\n-\n-#![feature(extern_prelude)]\n-\n-use ep_lib::S;\n-\n-fn main() {\n-    let s = ::ep_lib::S;\n-}"}, {"sha": "69411aaf57c713a2906a1401275a75b4d41e0403", "filename": "src/test/run-make-fulldeps/extern-prelude/shadow-mod.rs", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/aae75cf4e1aaf73bd045c8b68e7956d2cea5a64d/src%2Ftest%2Frun-make-fulldeps%2Fextern-prelude%2Fshadow-mod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aae75cf4e1aaf73bd045c8b68e7956d2cea5a64d/src%2Ftest%2Frun-make-fulldeps%2Fextern-prelude%2Fshadow-mod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fextern-prelude%2Fshadow-mod.rs?ref=aae75cf4e1aaf73bd045c8b68e7956d2cea5a64d", "patch": "@@ -1,14 +0,0 @@\n-// Local module shadows `ep_lib` from extern prelude\n-\n-mod ep_lib {\n-    pub struct S;\n-\n-    impl S {\n-        pub fn internal(&self) {}\n-    }\n-}\n-\n-fn main() {\n-    let s = ep_lib::S;\n-    s.internal(); // OK\n-}"}, {"sha": "6c6ce12708d79b063ce2f4844307b07cd8a58e58", "filename": "src/test/run-make-fulldeps/extern-prelude/shadow-prelude.rs", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/aae75cf4e1aaf73bd045c8b68e7956d2cea5a64d/src%2Ftest%2Frun-make-fulldeps%2Fextern-prelude%2Fshadow-prelude.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aae75cf4e1aaf73bd045c8b68e7956d2cea5a64d/src%2Ftest%2Frun-make-fulldeps%2Fextern-prelude%2Fshadow-prelude.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fextern-prelude%2Fshadow-prelude.rs?ref=aae75cf4e1aaf73bd045c8b68e7956d2cea5a64d", "patch": "@@ -1,7 +0,0 @@\n-// Extern prelude shadows standard library prelude\n-\n-#![feature(extern_prelude)]\n-\n-fn main() {\n-    let x = Vec::new(0f32, ()); // OK\n-}"}, {"sha": "a643c8889109a5806341eba8b507e1e7e99930a4", "filename": "src/test/ui/auxiliary/extern-prelude-vec.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4be19e36d9755b90dcd9b577b7857f52bde3ed50/src%2Ftest%2Fui%2Fauxiliary%2Fextern-prelude-vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4be19e36d9755b90dcd9b577b7857f52bde3ed50/src%2Ftest%2Fui%2Fauxiliary%2Fextern-prelude-vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fauxiliary%2Fextern-prelude-vec.rs?ref=4be19e36d9755b90dcd9b577b7857f52bde3ed50", "patch": "@@ -1,3 +1,3 @@\n-#![crate_type = \"rlib\"]\n+#![crate_name = \"Vec\"]\n \n pub fn new(arg1: f32, arg2: ()) {}", "previous_filename": "src/test/run-make-fulldeps/extern-prelude/ep-vec.rs"}, {"sha": "2fdfd85a1da30f1b1228fdcbd24c407a7db3d7aa", "filename": "src/test/ui/auxiliary/extern-prelude.rs", "status": "renamed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4be19e36d9755b90dcd9b577b7857f52bde3ed50/src%2Ftest%2Fui%2Fauxiliary%2Fextern-prelude.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4be19e36d9755b90dcd9b577b7857f52bde3ed50/src%2Ftest%2Fui%2Fauxiliary%2Fextern-prelude.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fauxiliary%2Fextern-prelude.rs?ref=4be19e36d9755b90dcd9b577b7857f52bde3ed50", "patch": "@@ -1,5 +1,3 @@\n-#![crate_type = \"rlib\"]\n-\n pub struct S;\n \n impl S {", "previous_filename": "src/test/run-make-fulldeps/extern-prelude/ep-lib.rs"}, {"sha": "7d387025ad44d0a183261a0e59492190f7d3d290", "filename": "src/test/ui/extern-prelude-fail.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4be19e36d9755b90dcd9b577b7857f52bde3ed50/src%2Ftest%2Fui%2Fextern-prelude-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4be19e36d9755b90dcd9b577b7857f52bde3ed50/src%2Ftest%2Fui%2Fextern-prelude-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextern-prelude-fail.rs?ref=4be19e36d9755b90dcd9b577b7857f52bde3ed50", "patch": "@@ -0,0 +1,9 @@\n+// compile-flags:--extern extern_prelude\n+// aux-build:extern-prelude.rs\n+\n+// Extern prelude names are not available by absolute paths\n+\n+fn main() {\n+    use extern_prelude::S; //~ ERROR unresolved import `extern_prelude`\n+    let s = ::extern_prelude::S; //~ ERROR failed to resolve\n+}"}, {"sha": "ad148c04d08af219e9df60ba6f560b74511a1eed", "filename": "src/test/ui/extern-prelude-fail.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/4be19e36d9755b90dcd9b577b7857f52bde3ed50/src%2Ftest%2Fui%2Fextern-prelude-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4be19e36d9755b90dcd9b577b7857f52bde3ed50/src%2Ftest%2Fui%2Fextern-prelude-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextern-prelude-fail.stderr?ref=4be19e36d9755b90dcd9b577b7857f52bde3ed50", "patch": "@@ -0,0 +1,16 @@\n+error[E0432]: unresolved import `extern_prelude`\n+  --> $DIR/extern-prelude-fail.rs:7:9\n+   |\n+LL |     use extern_prelude::S;\n+   |         ^^^^^^^^^^^^^^ maybe a missing `extern crate extern_prelude;`?\n+\n+error[E0433]: failed to resolve: maybe a missing `extern crate extern_prelude;`?\n+  --> $DIR/extern-prelude-fail.rs:8:15\n+   |\n+LL |     let s = ::extern_prelude::S;\n+   |               ^^^^^^^^^^^^^^ maybe a missing `extern crate extern_prelude;`?\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors occurred: E0432, E0433.\n+For more information about an error, try `rustc --explain E0432`."}, {"sha": "0e52f2c5158d422845b021639e0b8eafdcbcbef1", "filename": "src/test/ui/extern-prelude.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/4be19e36d9755b90dcd9b577b7857f52bde3ed50/src%2Ftest%2Fui%2Fextern-prelude.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4be19e36d9755b90dcd9b577b7857f52bde3ed50/src%2Ftest%2Fui%2Fextern-prelude.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextern-prelude.rs?ref=4be19e36d9755b90dcd9b577b7857f52bde3ed50", "patch": "@@ -0,0 +1,31 @@\n+// compile-pass\n+// compile-flags:--extern extern_prelude --extern Vec\n+// aux-build:extern-prelude.rs\n+// aux-build:extern-prelude-vec.rs\n+\n+fn basic() {\n+    // It works\n+    let s = extern_prelude::S;\n+    s.external();\n+}\n+\n+fn shadow_mod() {\n+    // Local module shadows `extern_prelude` from extern prelude\n+    mod extern_prelude {\n+        pub struct S;\n+\n+        impl S {\n+            pub fn internal(&self) {}\n+        }\n+    }\n+\n+    let s = extern_prelude::S;\n+    s.internal(); // OK\n+}\n+\n+fn shadow_prelude() {\n+    // Extern prelude shadows standard library prelude\n+    let x = Vec::new(0f32, ()); // OK\n+}\n+\n+fn main() {}"}]}