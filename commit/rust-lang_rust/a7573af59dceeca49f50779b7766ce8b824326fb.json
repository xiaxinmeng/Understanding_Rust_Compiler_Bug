{"sha": "a7573af59dceeca49f50779b7766ce8b824326fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3NTczYWY1OWRjZWVjYTQ5ZjUwNzc5Yjc3NjZjZThiODI0MzI2ZmI=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-11-18T15:15:46Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-11-18T15:15:46Z"}, "message": "Add some tests for new kind system\n\nIssue #1177", "tree": {"sha": "bc3975faae4733d6e97b68c01a5fc554e4f36adc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc3975faae4733d6e97b68c01a5fc554e4f36adc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7573af59dceeca49f50779b7766ce8b824326fb", "comment_count": 1, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7573af59dceeca49f50779b7766ce8b824326fb", "html_url": "https://github.com/rust-lang/rust/commit/a7573af59dceeca49f50779b7766ce8b824326fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7573af59dceeca49f50779b7766ce8b824326fb/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "196b2b920f9094cb78cc041709b3c3456b020fbd", "url": "https://api.github.com/repos/rust-lang/rust/commits/196b2b920f9094cb78cc041709b3c3456b020fbd", "html_url": "https://github.com/rust-lang/rust/commit/196b2b920f9094cb78cc041709b3c3456b020fbd"}], "stats": {"total": 103, "additions": 30, "deletions": 73}, "files": [{"sha": "358277c4785ef9e419db96b4aef6c70982c3bfa8", "filename": "src/test/compile-fail/copy-res-into-tag.rs", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/196b2b920f9094cb78cc041709b3c3456b020fbd/src%2Ftest%2Fcompile-fail%2Fcopy-res-into-tag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/196b2b920f9094cb78cc041709b3c3456b020fbd/src%2Ftest%2Fcompile-fail%2Fcopy-res-into-tag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcopy-res-into-tag.rs?ref=196b2b920f9094cb78cc041709b3c3456b020fbd", "patch": "@@ -1,20 +0,0 @@\n-// xfail-test\n-// error-pattern:mismatched kinds for tag parameter\n-resource r(i: @mutable int) {\n-    *i = *i + 1;\n-}\n-\n-tag t {\n-    t0(r);\n-}\n-\n-fn main() {\n-    let i = @mutable 0;\n-    {\n-        let j <- r(i);\n-        // No no no no no\n-        let k <- t0(j);\n-    }\n-    log_err *i;\n-    assert *i == 2;\n-}\n\\ No newline at end of file"}, {"sha": "f439d387aa78decaee985eaa1504b85604c5d6a1", "filename": "src/test/compile-fail/resource-vec-copy.rs", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/196b2b920f9094cb78cc041709b3c3456b020fbd/src%2Ftest%2Fcompile-fail%2Fresource-vec-copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/196b2b920f9094cb78cc041709b3c3456b020fbd/src%2Ftest%2Fcompile-fail%2Fresource-vec-copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fresource-vec-copy.rs?ref=196b2b920f9094cb78cc041709b3c3456b020fbd", "patch": "@@ -1,18 +0,0 @@\n-// xfail-test\n-// error-pattern:mismatched kind\n-\n-resource r(i: @mutable int) {\n-    *i = *i + 1;\n-}\n-\n-fn main() {\n-    let a = @mutable 0;\n-    {\n-        let i <- r(a);\n-        // Can't copy into here\n-        let j <- [i];\n-    }\n-    log_err *a;\n-    // this is no good\n-    assert *a == 2;\n-}\n\\ No newline at end of file"}, {"sha": "6526214bf5c7b262909430f9d318330f83df897e", "filename": "src/test/compile-fail/unique-pinned-nocopy-3.rs", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/196b2b920f9094cb78cc041709b3c3456b020fbd/src%2Ftest%2Fcompile-fail%2Funique-pinned-nocopy-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/196b2b920f9094cb78cc041709b3c3456b020fbd/src%2Ftest%2Fcompile-fail%2Funique-pinned-nocopy-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funique-pinned-nocopy-3.rs?ref=196b2b920f9094cb78cc041709b3c3456b020fbd", "patch": "@@ -1,18 +0,0 @@\n-// xfail-test\n-// error-pattern:mismatched kind\n-\n-resource r(i: @mutable int) {\n-    *i = *i + 1;\n-}\n-\n-fn main() {\n-    let a = @mutable 0;\n-    {\n-        let i <- ~r(a);\n-        // Can't copy into here\n-        let j <- [i];\n-    }\n-    log_err *a;\n-    // this is no good\n-    assert *a == 2;\n-}\n\\ No newline at end of file"}, {"sha": "3ac3ad50a3ccec83dbabaee907345bb6debe20c6", "filename": "src/test/run-pass/init-res-into-things.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a7573af59dceeca49f50779b7766ce8b824326fb/src%2Ftest%2Frun-pass%2Finit-res-into-things.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7573af59dceeca49f50779b7766ce8b824326fb/src%2Ftest%2Frun-pass%2Finit-res-into-things.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finit-res-into-things.rs?ref=a7573af59dceeca49f50779b7766ce8b824326fb", "patch": "@@ -1,5 +1,5 @@\n-// Resources can't be copied into other types but still need to be able\n-// to find their way into things.\n+// Resources can't be copied, but storing into data structures counts\n+// as a move unless the stored thing is used afterwards.\n \n resource r(i: @mutable int) {\n     *i = *i + 1;\n@@ -59,6 +59,14 @@ fn test_box_rec() {\n     assert *i == 1;\n }\n \n+fn test_obj() {\n+    obj o(_f: r) {}\n+    let i = @mutable 0;\n+    let rr = r(i);\n+    { let _oo = o(rr); }\n+    assert *i == 1;\n+}\n+\n fn main() {\n     test_box();\n     test_rec();\n@@ -67,4 +75,5 @@ fn main() {\n     test_tup();\n     test_unique();\n     test_box_rec();\n+    test_obj();\n }"}, {"sha": "2c597da4173588c09afa024ee32468ddc94b7e00", "filename": "src/test/run-pass/resource-assign-is-not-copy.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a7573af59dceeca49f50779b7766ce8b824326fb/src%2Ftest%2Frun-pass%2Fresource-assign-is-not-copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7573af59dceeca49f50779b7766ce8b824326fb/src%2Ftest%2Frun-pass%2Fresource-assign-is-not-copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fresource-assign-is-not-copy.rs?ref=a7573af59dceeca49f50779b7766ce8b824326fb", "patch": "@@ -1,7 +1,13 @@\n-resource r(i: int) {\n-}\n+resource r(i: @mutable int) { *i += 1; }\n \n fn main() {\n-    // Even though this looks like a copy, it's guaranteed not to be\n-    let a = r(0);\n-}\n\\ No newline at end of file\n+    let i = @mutable 0;\n+    // Even though these look like copies, they are guaranteed not to be\n+    {\n+        let a = r(i);\n+        let b = (a, 10);\n+        let (c, _d) = b;\n+        log c;\n+    }\n+    assert *i == 1;\n+}"}, {"sha": "def6e72f4d9a4e5eb81fa37defdb973e35561d85", "filename": "src/test/run-pass/type-param-constraints.rs", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a7573af59dceeca49f50779b7766ce8b824326fb/src%2Ftest%2Frun-pass%2Ftype-param-constraints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7573af59dceeca49f50779b7766ce8b824326fb/src%2Ftest%2Frun-pass%2Ftype-param-constraints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftype-param-constraints.rs?ref=a7573af59dceeca49f50779b7766ce8b824326fb", "patch": "@@ -5,21 +5,19 @@ fn u_foo<send T>(unique: T) { }\n resource r(i: int) { }\n \n fn main() {\n-    // FIXME: passing resources doesn't work?\n-    //p_foo(r(10));\n-    //p_foo(@r(10));\n-    // FIXME: unique boxes not yet supported.\n-    // p_foo(~r(10));\n+    p_foo(r(10));\n+    p_foo(@r(10));\n+\n+    p_foo(~r(10));\n     p_foo(@10);\n-    // p_foo(~10);\n+    p_foo(~10);\n     p_foo(10);\n \n-    //s_foo(@r(10));\n-    //s_foo(~r(10));\n+    s_foo(@r(10));\n     s_foo(@10);\n-    //s_foo(~10);\n+    s_foo(~10);\n     s_foo(10);\n \n-    //u_foo(~10);\n+    u_foo(~10);\n     u_foo(10);\n }"}]}