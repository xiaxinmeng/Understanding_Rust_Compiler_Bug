{"sha": "0bb3dc19bf8962b04d96456524fe021b3938ba97", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiYjNkYzE5YmY4OTYyYjA0ZDk2NDU2NTI0ZmUwMjFiMzkzOGJhOTc=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2017-09-08T06:52:03Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-09-20T13:36:24Z"}, "message": "Mark yields after visiting subexpressions. Never ignore yields for scopes in bindings.", "tree": {"sha": "79411f338409f28e0462ac967b18b413f7752f9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79411f338409f28e0462ac967b18b413f7752f9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0bb3dc19bf8962b04d96456524fe021b3938ba97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0bb3dc19bf8962b04d96456524fe021b3938ba97", "html_url": "https://github.com/rust-lang/rust/commit/0bb3dc19bf8962b04d96456524fe021b3938ba97", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0bb3dc19bf8962b04d96456524fe021b3938ba97/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bf7b551585b1474521540cb9a95ac51d97fc60b", "url": "https://api.github.com/repos/rust-lang/rust/commits/0bf7b551585b1474521540cb9a95ac51d97fc60b", "html_url": "https://github.com/rust-lang/rust/commit/0bf7b551585b1474521540cb9a95ac51d97fc60b"}], "stats": {"total": 57, "additions": 18, "deletions": 39}, "files": [{"sha": "fef8431debb5eed9258212229aad093489fad417", "filename": "src/librustc/middle/region.rs", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/0bb3dc19bf8962b04d96456524fe021b3938ba97/src%2Flibrustc%2Fmiddle%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bb3dc19bf8962b04d96456524fe021b3938ba97/src%2Flibrustc%2Fmiddle%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fregion.rs?ref=0bb3dc19bf8962b04d96456524fe021b3938ba97", "patch": "@@ -822,23 +822,6 @@ fn resolve_expr<'a, 'tcx>(visitor: &mut RegionResolutionVisitor<'a, 'tcx>, expr:\n                 // record_superlifetime(new_cx, expr.callee_id);\n             }\n \n-            hir::ExprYield(..) => {\n-                // Mark this expr's scope and all parent scopes as containing `yield`.\n-                let mut scope = Scope::Node(expr.hir_id.local_id);\n-                loop {\n-                    visitor.scope_tree.yield_in_scope.insert(scope,\n-                        (expr.span, visitor.expr_count));\n-\n-                    // Keep traversing up while we can.\n-                    match visitor.scope_tree.parent_map.get(&scope) {\n-                        // Don't cross from closure bodies to their parent.\n-                        Some(&Scope::CallSite(_)) => break,\n-                        Some(&superscope) => scope = superscope,\n-                        None => break\n-                    }\n-                }\n-            }\n-\n             _ => {}\n         }\n     }\n@@ -854,6 +837,23 @@ fn resolve_expr<'a, 'tcx>(visitor: &mut RegionResolutionVisitor<'a, 'tcx>, expr:\n         _ => intravisit::walk_expr(visitor, expr)\n     }\n \n+    if let hir::ExprYield(..) = expr.node {\n+        // Mark this expr's scope and all parent scopes as containing `yield`.\n+        let mut scope = Scope::Node(expr.hir_id.local_id);\n+        loop {\n+            visitor.scope_tree.yield_in_scope.insert(scope,\n+                (expr.span, visitor.expr_count));\n+\n+            // Keep traversing up while we can.\n+            match visitor.scope_tree.parent_map.get(&scope) {\n+                // Don't cross from closure bodies to their parent.\n+                Some(&Scope::CallSite(_)) => break,\n+                Some(&superscope) => scope = superscope,\n+                None => break\n+            }\n+        }\n+    }\n+\n     visitor.cx = prev_cx;\n }\n "}, {"sha": "8f4ee6290c199ad0ae61ca47312599bb2a0775cb", "filename": "src/librustc_typeck/check/generator_interior.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0bb3dc19bf8962b04d96456524fe021b3938ba97/src%2Flibrustc_typeck%2Fcheck%2Fgenerator_interior.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bb3dc19bf8962b04d96456524fe021b3938ba97/src%2Flibrustc_typeck%2Fcheck%2Fgenerator_interior.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fgenerator_interior.rs?ref=0bb3dc19bf8962b04d96456524fe021b3938ba97", "patch": "@@ -36,7 +36,7 @@ impl<'a, 'gcx, 'tcx> InteriorVisitor<'a, 'gcx, 'tcx> {\n         let live_across_yield = scope.map_or(Some(DUMMY_SP), |s| {\n             self.region_scope_tree.yield_in_scope(s).and_then(|(span, expr_count)| {\n                 // Check if the span in the region comes after the expression\n-                if expr_count > self.expr_count {\n+                if expr.is_none() || expr_count >= self.expr_count {\n                     Some(span)\n                 } else {\n                     None"}, {"sha": "50981df7566f9ae8ca0b9a5065dabb7f01e0bfca", "filename": "src/test/run-pass/generator/borrow-in-yield-expr.rs", "status": "removed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/0bf7b551585b1474521540cb9a95ac51d97fc60b/src%2Ftest%2Frun-pass%2Fgenerator%2Fborrow-in-yield-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bf7b551585b1474521540cb9a95ac51d97fc60b/src%2Ftest%2Frun-pass%2Fgenerator%2Fborrow-in-yield-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgenerator%2Fborrow-in-yield-expr.rs?ref=0bf7b551585b1474521540cb9a95ac51d97fc60b", "patch": "@@ -1,21 +0,0 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#![feature(generators, generator_trait, conservative_impl_trait)]\n-\n-use std::ops::Generator;\n-\n-fn bar(baz: String) -> impl Generator<Yield=(), Return=()> {\n-    move || {\n-        yield drop(&baz);\n-    }\n-}\n-\n-fn main() {}\n\\ No newline at end of file"}]}