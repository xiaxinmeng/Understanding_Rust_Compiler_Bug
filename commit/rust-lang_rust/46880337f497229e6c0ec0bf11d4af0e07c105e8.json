{"sha": "46880337f497229e6c0ec0bf11d4af0e07c105e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2ODgwMzM3ZjQ5NzIyOWU2YzBlYzBiZjExZDRhZjBlMDdjMTA1ZTg=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-01-16T10:28:39Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-01-16T11:19:41Z"}, "message": "clean up tempfile module and rm FIXME\n\nThis removes the FIXME suggesting that mkdtemp should rely on the\ndefault umask, because that would make it unusable for making a secure\nwork area in a world writable directory (have to assume that other users\nhave created files, directories, hard links, etc. in your directory).\nThe POSIX mkdtemp function creates a directory with 700 permissions to\navoid this problem.", "tree": {"sha": "fe464b0dcf05bb86099345791454654f4a9dbfd1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe464b0dcf05bb86099345791454654f4a9dbfd1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46880337f497229e6c0ec0bf11d4af0e07c105e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46880337f497229e6c0ec0bf11d4af0e07c105e8", "html_url": "https://github.com/rust-lang/rust/commit/46880337f497229e6c0ec0bf11d4af0e07c105e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46880337f497229e6c0ec0bf11d4af0e07c105e8/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "989667e545cb45265d3cb4b19500224459c3bf8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/989667e545cb45265d3cb4b19500224459c3bf8c", "html_url": "https://github.com/rust-lang/rust/commit/989667e545cb45265d3cb4b19500224459c3bf8c"}], "stats": {"total": 24, "additions": 8, "deletions": 16}, "files": [{"sha": "f10d54f32719288cd5763703aa36b281c642a729", "filename": "src/libstd/tempfile.rs", "status": "modified", "additions": 8, "deletions": 16, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/46880337f497229e6c0ec0bf11d4af0e07c105e8/src%2Flibstd%2Ftempfile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46880337f497229e6c0ec0bf11d4af0e07c105e8/src%2Flibstd%2Ftempfile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftempfile.rs?ref=46880337f497229e6c0ec0bf11d4af0e07c105e8", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -19,26 +19,18 @@ use core::str;\n \n pub fn mkdtemp(tmpdir: &Path, suffix: &str) -> Option<Path> {\n     let r = rand::Rng();\n-    let mut i = 0u;\n-    while (i < 1000u) {\n-        let p = tmpdir.push(r.gen_str(16u) +\n-                            str::from_slice(suffix));\n-        if os::make_dir(&p, 0x1c0i32) {  // FIXME: u+rwx (#2349)\n+    for 1000.times {\n+        let p = tmpdir.push(r.gen_str(16) + suffix);\n+        if os::make_dir(&p, 0x1c0) { // 700\n             return Some(p);\n         }\n-        i += 1u;\n     }\n-    return None;\n+    None\n }\n \n #[test]\n fn test_mkdtemp() {\n-    let r = mkdtemp(&Path(\".\"), \"foobar\");\n-    match r {\n-        Some(ref p) => {\n-            os::remove_dir(p);\n-            assert(str::ends_with(p.to_str(), \"foobar\"));\n-        }\n-        _ => assert(false)\n-    }\n+    let p = mkdtemp(&Path(\".\"), \"foobar\").unwrap();\n+    os::remove_dir(&p);\n+    assert str::ends_with(p.to_str(), \"foobar\");\n }"}]}