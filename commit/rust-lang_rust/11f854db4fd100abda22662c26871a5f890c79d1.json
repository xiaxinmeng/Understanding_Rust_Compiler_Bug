{"sha": "11f854db4fd100abda22662c26871a5f890c79d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExZjg1NGRiNGZkMTAwYWJkYTIyNjYyYzI2ODcxYTVmODkwYzc5ZDE=", "commit": {"author": {"name": "Jacob Hoffman-Andrews", "email": "github@hoffman-andrews.com", "date": "2021-04-13T07:35:36Z"}, "committer": {"name": "Jacob Hoffman-Andrews", "email": "github@hoffman-andrews.com", "date": "2021-04-13T07:35:36Z"}, "message": "Further consolidate search-related vars and funcs", "tree": {"sha": "995c666fa56c8c663638ccb40284b2057a53a225", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/995c666fa56c8c663638ccb40284b2057a53a225"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11f854db4fd100abda22662c26871a5f890c79d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11f854db4fd100abda22662c26871a5f890c79d1", "html_url": "https://github.com/rust-lang/rust/commit/11f854db4fd100abda22662c26871a5f890c79d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11f854db4fd100abda22662c26871a5f890c79d1/comments", "author": {"login": "jsha", "id": 220205, "node_id": "MDQ6VXNlcjIyMDIwNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/220205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsha", "html_url": "https://github.com/jsha", "followers_url": "https://api.github.com/users/jsha/followers", "following_url": "https://api.github.com/users/jsha/following{/other_user}", "gists_url": "https://api.github.com/users/jsha/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsha/subscriptions", "organizations_url": "https://api.github.com/users/jsha/orgs", "repos_url": "https://api.github.com/users/jsha/repos", "events_url": "https://api.github.com/users/jsha/events{/privacy}", "received_events_url": "https://api.github.com/users/jsha/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsha", "id": 220205, "node_id": "MDQ6VXNlcjIyMDIwNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/220205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsha", "html_url": "https://github.com/jsha", "followers_url": "https://api.github.com/users/jsha/followers", "following_url": "https://api.github.com/users/jsha/following{/other_user}", "gists_url": "https://api.github.com/users/jsha/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsha/subscriptions", "organizations_url": "https://api.github.com/users/jsha/orgs", "repos_url": "https://api.github.com/users/jsha/repos", "events_url": "https://api.github.com/users/jsha/events{/privacy}", "received_events_url": "https://api.github.com/users/jsha/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95d652ebce010d3b090af81508e9cf3d7096d1e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/95d652ebce010d3b090af81508e9cf3d7096d1e4", "html_url": "https://github.com/rust-lang/rust/commit/95d652ebce010d3b090af81508e9cf3d7096d1e4"}], "stats": {"total": 137, "additions": 61, "deletions": 76}, "files": [{"sha": "80d6997751a51d90e0589a56969e9a1aef616ab1", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 61, "deletions": 76, "changes": 137, "blob_url": "https://github.com/rust-lang/rust/blob/11f854db4fd100abda22662c26871a5f890c79d1/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/11f854db4fd100abda22662c26871a5f890c79d1/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=11f854db4fd100abda22662c26871a5f890c79d1", "patch": "@@ -76,10 +76,6 @@ function getVirtualKey(ev) {\n     return String.fromCharCode(c);\n }\n \n-function getSearchInput() {\n-    return document.getElementsByClassName(\"search-input\")[0];\n-}\n-\n var THEME_PICKER_ELEMENT_ID = \"theme-picker\";\n var THEMES_ELEMENT_ID = \"theme-choices\";\n \n@@ -96,16 +92,6 @@ function getNakedUrl() {\n     return window.location.href.split(\"?\")[0].split(\"#\")[0];\n }\n \n-// Sets the focus on the search bar at the top of the page\n-function focusSearchBar() {\n-    getSearchInput().focus();\n-}\n-\n-// Removes the focus from the search bar.\n-function defocusSearchBar() {\n-    getSearchInput().blur();\n-}\n-\n function showThemeButtonState() {\n     var themePicker = getThemePickerElement();\n     var themeChoices = getThemesElement();\n@@ -170,7 +156,7 @@ function hideThemeButtonState() {\n \n     window.searchState = {\n       loadingText: \"Loading search results...\",\n-      input: getSearchInput(),\n+      input: document.getElementsByClassName(\"search-input\")[0],\n       outputElement: function() {\n         return document.getElementById(\"search\");\n       },\n@@ -190,6 +176,14 @@ function hideThemeButtonState() {\n             searchState.timeout = null;\n         }\n       },\n+      // Sets the focus on the search bar at the top of the page\n+      focus: function() {\n+          searchState.input.focus();\n+      },\n+      // Removes the focus from the search bar.\n+      defocus: function() {\n+          searchState.input.blur();\n+      },\n       showResults: function(search) {\n         if (search === null || typeof search === 'undefined') {\n             search = searchState.outputElement();\n@@ -237,7 +231,11 @@ function hideThemeButtonState() {\n       browserSupportsHistoryApi: function() {\n           return window.history && typeof window.history.pushState === \"function\";\n       },\n-      setupLoader: function() {\n+      setup: function() {\n+        var search_input = searchState.input;\n+        if (!searchState.input) {\n+            return;\n+        }\n         function loadScript(url) {\n             var script = document.createElement('script');\n             script.src = url;\n@@ -252,38 +250,57 @@ function hideThemeButtonState() {\n             }\n         }\n \n-        // `crates{version}.js` should always be loaded before this script, so we can use it safely.\n-        addSearchOptions(window.ALL_CRATES);\n-        addSidebarCrates(window.ALL_CRATES);\n-\n-        searchState.input.addEventListener(\"focus\", function() {\n-            searchState.input.origPlaceholder = searchState.input.placeholder;\n-            searchState.input.placeholder = \"Type your search here.\";\n+        search_input.addEventListener(\"focus\", function() {\n+            searchState.putBackSearch(this);\n+            search_input.origPlaceholder = searchState.input.placeholder;\n+            search_input.placeholder = \"Type your search here.\";\n             loadSearch();\n         });\n-        searchState.input.addEventListener(\"blur\", function() {\n-            searchState.input.placeholder = searchState.input.origPlaceholder;\n+        search_input.addEventListener(\"blur\", function() {\n+            search_input.placeholder = searchState.input.origPlaceholder;\n         });\n-        searchState.input.removeAttribute('disabled');\n \n-        var crateSearchDropDown = document.getElementById(\"crate-search\");\n-        // `crateSearchDropDown` can be null in case there is only crate because in that case, the\n-        // crate filter dropdown is removed.\n-        if (crateSearchDropDown) {\n-            crateSearchDropDown.addEventListener(\"focus\", loadSearch);\n-        }\n+        document.addEventListener(\"mousemove\", function() {\n+          searchState.mouseMovedAfterSearch = true;\n+        });\n+\n+        search_input.removeAttribute('disabled');\n+\n+        // `crates{version}.js` should always be loaded before this script, so we can use it safely.\n+        searchState.addCrateDropdown(window.ALL_CRATES);\n         var params = searchState.getQueryStringParams();\n         if (params.search !== undefined) {\n+            var search = searchState.outputElement();\n+            search.innerHTML = \"<h3 style=\\\"text-align: center;\\\">\" +\n+               searchState.loadingText + \"</h3>\";\n+            searchState.showResults(search);\n             loadSearch();\n         }\n       },\n-    };\n+      addCrateDropdown: function(crates) {\n+        var elem = document.getElementById(\"crate-search\");\n \n-    if (searchState.input) {\n-        searchState.input.onfocus = function() {\n-            searchState.putBackSearch(this);\n-        };\n-    }\n+        if (!elem) {\n+            return;\n+        }\n+        var savedCrate = getSettingValue(\"saved-filter-crate\");\n+        for (var i = 0, len = crates.length; i < len; ++i) {\n+            var option = document.createElement(\"option\");\n+            option.value = crates[i];\n+            option.innerText = crates[i];\n+            elem.appendChild(option);\n+            // Set the crate filter from saved storage, if the current page has the saved crate\n+            // filter.\n+            //\n+            // If not, ignore the crate filter -- we want to support filtering for crates on sites\n+            // like doc.rust-lang.org where the crates may differ from page to page while on the\n+            // same domain.\n+            if (crates[i] === savedCrate) {\n+                elem.value = savedCrate;\n+            }\n+        }\n+      },\n+    };\n \n     function getPageId() {\n         if (window.location.hash) {\n@@ -491,7 +508,7 @@ function hideThemeButtonState() {\n             ev.preventDefault();\n             searchState.hideResults(search);\n         }\n-        defocusSearchBar();\n+        searchState.defocus();\n         hideThemeButtonState();\n     }\n \n@@ -518,7 +535,7 @@ function hideThemeButtonState() {\n             case \"S\":\n                 displayHelp(false, ev);\n                 ev.preventDefault();\n-                focusSearchBar();\n+                searchState.focus();\n                 break;\n \n             case \"+\":\n@@ -605,10 +622,6 @@ function hideThemeButtonState() {\n     document.addEventListener(\"keypress\", handleShortcut);\n     document.addEventListener(\"keydown\", handleShortcut);\n \n-    document.addEventListener(\"mousemove\", function() {\n-      searchState.mouseMovedAfterSearch = true;\n-    });\n-\n     var handleSourceHighlight = (function() {\n         var prev_line_id = 0;\n \n@@ -789,6 +802,9 @@ function hideThemeButtonState() {\n         block(\"foreigntype\", \"Foreign Types\");\n         block(\"keyword\", \"Keywords\");\n         block(\"traitalias\", \"Trait Aliases\");\n+\n+        // `crates{version}.js` should always be loaded before this script, so we can use it safely.\n+        addSidebarCrates(window.ALL_CRATES);\n     };\n \n     window.register_implementors = function(imp) {\n@@ -1420,13 +1436,6 @@ function hideThemeButtonState() {\n         };\n     });\n \n-    var params = searchState.getQueryStringParams();\n-    if (params && params.search) {\n-        var search = searchState.outputElement();\n-        search.innerHTML = \"<h3 style=\\\"text-align: center;\\\">\" + searchState.loadingText + \"</h3>\";\n-        searchState.showResults(search);\n-    }\n-\n     var sidebar_menu = document.getElementsByClassName(\"sidebar-menu\")[0];\n     if (sidebar_menu) {\n         sidebar_menu.onclick = function() {\n@@ -1459,30 +1468,6 @@ function hideThemeButtonState() {\n         });\n     }\n \n-    function addSearchOptions(crates) {\n-        var elem = document.getElementById(\"crate-search\");\n-\n-        if (!elem) {\n-            return;\n-        }\n-        var savedCrate = getSettingValue(\"saved-filter-crate\");\n-        for (var i = 0, len = crates.length; i < len; ++i) {\n-            var option = document.createElement(\"option\");\n-            option.value = crates[i];\n-            option.innerText = crates[i];\n-            elem.appendChild(option);\n-            // Set the crate filter from saved storage, if the current page has the saved crate\n-            // filter.\n-            //\n-            // If not, ignore the crate filter -- we want to support filtering for crates on sites\n-            // like doc.rust-lang.org where the crates may differ from page to page while on the\n-            // same domain.\n-            if (crates[i] === savedCrate) {\n-                elem.value = savedCrate;\n-            }\n-        }\n-    };\n-\n     function buildHelperPopup() {\n         var popup = document.createElement(\"aside\");\n         addClass(popup, \"hidden\");\n@@ -1547,7 +1532,7 @@ function hideThemeButtonState() {\n \n     onHashChange(null);\n     window.onhashchange = onHashChange;\n-    searchState.setupLoader();\n+    searchState.setup();\n }());\n \n function copy_path(but) {"}]}