{"sha": "a2b6734ea40dcd53e1bdad6d8dc3e31c0fec929a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyYjY3MzRlYTQwZGNkNTNlMWJkYWQ2ZDhkYzNlMzFjMGZlYzkyOWE=", "commit": {"author": {"name": "Sean McArthur", "email": "sean@seanmonstar.com", "date": "2019-03-13T21:24:42Z"}, "committer": {"name": "Alexander Regueiro", "email": "alexreg@me.com", "date": "2019-03-23T01:15:45Z"}, "message": "resolve: collect trait aliases along with traits", "tree": {"sha": "dfe0ddf991512aa578c3b9fdf0efe91c888c6d93", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dfe0ddf991512aa578c3b9fdf0efe91c888c6d93"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2b6734ea40dcd53e1bdad6d8dc3e31c0fec929a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2b6734ea40dcd53e1bdad6d8dc3e31c0fec929a", "html_url": "https://github.com/rust-lang/rust/commit/a2b6734ea40dcd53e1bdad6d8dc3e31c0fec929a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2b6734ea40dcd53e1bdad6d8dc3e31c0fec929a/comments", "author": {"login": "seanmonstar", "id": 51479, "node_id": "MDQ6VXNlcjUxNDc5", "avatar_url": "https://avatars.githubusercontent.com/u/51479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seanmonstar", "html_url": "https://github.com/seanmonstar", "followers_url": "https://api.github.com/users/seanmonstar/followers", "following_url": "https://api.github.com/users/seanmonstar/following{/other_user}", "gists_url": "https://api.github.com/users/seanmonstar/gists{/gist_id}", "starred_url": "https://api.github.com/users/seanmonstar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seanmonstar/subscriptions", "organizations_url": "https://api.github.com/users/seanmonstar/orgs", "repos_url": "https://api.github.com/users/seanmonstar/repos", "events_url": "https://api.github.com/users/seanmonstar/events{/privacy}", "received_events_url": "https://api.github.com/users/seanmonstar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexreg", "id": 67036, "node_id": "MDQ6VXNlcjY3MDM2", "avatar_url": "https://avatars.githubusercontent.com/u/67036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexreg", "html_url": "https://github.com/alexreg", "followers_url": "https://api.github.com/users/alexreg/followers", "following_url": "https://api.github.com/users/alexreg/following{/other_user}", "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions", "organizations_url": "https://api.github.com/users/alexreg/orgs", "repos_url": "https://api.github.com/users/alexreg/repos", "events_url": "https://api.github.com/users/alexreg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexreg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f91bee03f3eea93285330354dda54706028671c", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f91bee03f3eea93285330354dda54706028671c", "html_url": "https://github.com/rust-lang/rust/commit/9f91bee03f3eea93285330354dda54706028671c"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "e50cda602c2bf75b8de2506af5b9773c955c4abc", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/a2b6734ea40dcd53e1bdad6d8dc3e31c0fec929a/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2b6734ea40dcd53e1bdad6d8dc3e31c0fec929a/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=a2b6734ea40dcd53e1bdad6d8dc3e31c0fec929a", "patch": "@@ -1195,6 +1195,13 @@ impl<'a> ModuleData<'a> {\n         }\n     }\n \n+    fn is_trait_alias(&self) -> bool {\n+        match self.kind {\n+            ModuleKind::Def(Def::TraitAlias(_), _) => true,\n+            _ => false,\n+        }\n+    }\n+\n     fn nearest_item_scope(&'a self) -> Module<'a> {\n         if self.is_trait() { self.parent.unwrap() } else { self }\n     }\n@@ -4369,8 +4376,10 @@ impl<'a> Resolver<'a> {\n             let mut collected_traits = Vec::new();\n             module.for_each_child(|name, ns, binding| {\n                 if ns != TypeNS { return }\n-                if let Def::Trait(_) = binding.def() {\n-                    collected_traits.push((name, binding));\n+                match binding.def() {\n+                    Def::Trait(_) |\n+                    Def::TraitAlias(_) => collected_traits.push((name, binding)),\n+                    _ => (),\n                 }\n             });\n             *traits = Some(collected_traits.into_boxed_slice());\n@@ -4834,6 +4843,7 @@ impl<'a> Resolver<'a> {\n         let container = match parent.kind {\n             ModuleKind::Def(Def::Mod(_), _) => \"module\",\n             ModuleKind::Def(Def::Trait(_), _) => \"trait\",\n+            ModuleKind::Def(Def::TraitAlias(_), _) => \"trait alias\",\n             ModuleKind::Block(..) => \"block\",\n             _ => \"enum\",\n         };\n@@ -4862,6 +4872,7 @@ impl<'a> Resolver<'a> {\n             (TypeNS, _) if old_binding.is_extern_crate() => \"extern crate\",\n             (TypeNS, Some(module)) if module.is_normal() => \"module\",\n             (TypeNS, Some(module)) if module.is_trait() => \"trait\",\n+            (TypeNS, Some(module)) if module.is_trait_alias() => \"trait alias\",\n             (TypeNS, _) => \"type\",\n         };\n "}, {"sha": "9def1f0d4804c50d70a6c2fdeb3cd67a38a129db", "filename": "src/test/run-pass/traits/trait-alias-import.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/a2b6734ea40dcd53e1bdad6d8dc3e31c0fec929a/src%2Ftest%2Frun-pass%2Ftraits%2Ftrait-alias-import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2b6734ea40dcd53e1bdad6d8dc3e31c0fec929a/src%2Ftest%2Frun-pass%2Ftraits%2Ftrait-alias-import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftraits%2Ftrait-alias-import.rs?ref=a2b6734ea40dcd53e1bdad6d8dc3e31c0fec929a", "patch": "@@ -0,0 +1,23 @@\n+#![feature(trait_alias)]\n+\n+mod inner {\n+    pub trait Foo {\n+        fn foo(&self);\n+    }\n+\n+    pub struct Qux;\n+\n+    impl Foo for Qux {\n+        fn foo(&self) {}\n+    }\n+\n+    pub trait Bar = Foo;\n+}\n+\n+// Import only the alias, not the `Foo` trait.\n+use inner::{Bar, Qux};\n+\n+fn main() {\n+    let q = Qux;\n+    q.foo();\n+}"}]}