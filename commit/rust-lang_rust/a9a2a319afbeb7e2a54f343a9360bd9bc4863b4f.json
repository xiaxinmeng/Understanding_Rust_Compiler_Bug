{"sha": "a9a2a319afbeb7e2a54f343a9360bd9bc4863b4f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5YTJhMzE5YWZiZWI3ZTJhNTRmMzQzYTkzNjBiZDliYzQ4NjNiNGY=", "commit": {"author": {"name": "dylan_DPC", "email": "dylan.dpc@gmail.com", "date": "2020-03-26T22:18:37Z"}, "committer": {"name": "dylan_DPC", "email": "dylan.dpc@gmail.com", "date": "2020-03-26T22:18:37Z"}, "message": "fix docs", "tree": {"sha": "ef6f3d595da1a0e23f30c83beb35712d54842fc4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef6f3d595da1a0e23f30c83beb35712d54842fc4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9a2a319afbeb7e2a54f343a9360bd9bc4863b4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9a2a319afbeb7e2a54f343a9360bd9bc4863b4f", "html_url": "https://github.com/rust-lang/rust/commit/a9a2a319afbeb7e2a54f343a9360bd9bc4863b4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9a2a319afbeb7e2a54f343a9360bd9bc4863b4f/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b429fd1219bfd15ec3fd9ce3cb073cdae6ed03c", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b429fd1219bfd15ec3fd9ce3cb073cdae6ed03c", "html_url": "https://github.com/rust-lang/rust/commit/9b429fd1219bfd15ec3fd9ce3cb073cdae6ed03c"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "853059f98a609d95bac7ff5647de5a59b6f11c16", "filename": "src/libcore/iter/traits/iterator.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a9a2a319afbeb7e2a54f343a9360bd9bc4863b4f/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9a2a319afbeb7e2a54f343a9360bd9bc4863b4f/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs?ref=a9a2a319afbeb7e2a54f343a9360bd9bc4863b4f", "patch": "@@ -2015,6 +2015,9 @@ pub trait Iterator {\n     /// Find the maximum value:\n     ///\n     /// ```\n+    /// #![feature(iterator_fold_self)]\n+    /// use std::cmp::Ordering;\n+    ///\n     /// fn find_max<I>(iter: I) -> Option<I::Item>\n     ///     where I: Iterator,\n     ///           I::Item: Ord,\n@@ -2027,9 +2030,9 @@ pub trait Iterator {\n     ///     })\n     /// }\n     /// let a = [10, 20, 5, -23, 0];\n-    /// let b = [];\n+    /// let b: [u32; 0] = [];\n     ///\n-    /// assert_eq!(find_max(a.iter()), Some(20));\n+    /// assert_eq!(find_max(a.iter()), Some(&20));\n     /// assert_eq!(find_max(b.iter()), None);\n     /// ```\n     #[inline]"}]}