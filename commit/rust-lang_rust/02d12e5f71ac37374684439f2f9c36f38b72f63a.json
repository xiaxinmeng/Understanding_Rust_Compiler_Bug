{"sha": "02d12e5f71ac37374684439f2f9c36f38b72f63a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyZDEyZTVmNzFhYzM3Mzc0Njg0NDM5ZjJmOWMzNmYzOGI3MmY2M2E=", "commit": {"author": {"name": "OGINO Masanori", "email": "masanori.ogino@gmail.com", "date": "2014-07-29T20:53:40Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-07-29T22:44:31Z"}, "message": "Elide lifetimes around Arc<T>.\n\nIt's a small step forward in application of RFC 39 to the code base\nitself.\n\nSigned-off-by: OGINO Masanori <masanori.ogino@gmail.com>", "tree": {"sha": "7338023c7f4b472fefbcd83589d35e9a43444736", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7338023c7f4b472fefbcd83589d35e9a43444736"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02d12e5f71ac37374684439f2f9c36f38b72f63a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02d12e5f71ac37374684439f2f9c36f38b72f63a", "html_url": "https://github.com/rust-lang/rust/commit/02d12e5f71ac37374684439f2f9c36f38b72f63a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02d12e5f71ac37374684439f2f9c36f38b72f63a/comments", "author": {"login": "omasanori", "id": 167209, "node_id": "MDQ6VXNlcjE2NzIwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/167209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omasanori", "html_url": "https://github.com/omasanori", "followers_url": "https://api.github.com/users/omasanori/followers", "following_url": "https://api.github.com/users/omasanori/following{/other_user}", "gists_url": "https://api.github.com/users/omasanori/gists{/gist_id}", "starred_url": "https://api.github.com/users/omasanori/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omasanori/subscriptions", "organizations_url": "https://api.github.com/users/omasanori/orgs", "repos_url": "https://api.github.com/users/omasanori/repos", "events_url": "https://api.github.com/users/omasanori/events{/privacy}", "received_events_url": "https://api.github.com/users/omasanori/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04fa9066480d172ffd4b6d02f9edf5b3d31fef56", "url": "https://api.github.com/repos/rust-lang/rust/commits/04fa9066480d172ffd4b6d02f9edf5b3d31fef56", "html_url": "https://github.com/rust-lang/rust/commit/04fa9066480d172ffd4b6d02f9edf5b3d31fef56"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "bf477781aabf6a8207d61956fc5682013783bb46", "filename": "src/liballoc/arc.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/02d12e5f71ac37374684439f2f9c36f38b72f63a/src%2Fliballoc%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02d12e5f71ac37374684439f2f9c36f38b72f63a/src%2Fliballoc%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Farc.rs?ref=02d12e5f71ac37374684439f2f9c36f38b72f63a", "patch": "@@ -92,7 +92,7 @@ impl<T: Share + Send> Arc<T> {\n     }\n \n     #[inline]\n-    fn inner<'a>(&'a self) -> &'a ArcInner<T> {\n+    fn inner(&self) -> &ArcInner<T> {\n         // This unsafety is ok because while this arc is alive we're guaranteed\n         // that the inner pointer is valid. Furthermore, we know that the\n         // `ArcInner` structure itself is `Share` because the inner data is\n@@ -142,7 +142,7 @@ impl<T: Share + Send> Clone for Arc<T> {\n #[experimental = \"Deref is experimental.\"]\n impl<T: Send + Share> Deref<T> for Arc<T> {\n     #[inline]\n-    fn deref<'a>(&'a self) -> &'a T {\n+    fn deref(&self) -> &T {\n         &self.inner().data\n     }\n }\n@@ -155,7 +155,7 @@ impl<T: Send + Share + Clone> Arc<T> {\n     /// data is cloned if the reference count is greater than one.\n     #[inline]\n     #[experimental]\n-    pub fn make_unique<'a>(&'a mut self) -> &'a mut T {\n+    pub fn make_unique(&mut self) -> &mut T {\n         // Note that we hold a strong reference, which also counts as\n         // a weak reference, so we only clone if there is an\n         // additional reference of either kind.\n@@ -238,7 +238,7 @@ impl<T: Share + Send> Weak<T> {\n     }\n \n     #[inline]\n-    fn inner<'a>(&'a self) -> &'a ArcInner<T> {\n+    fn inner(&self) -> &ArcInner<T> {\n         // See comments above for why this is \"safe\"\n         unsafe { &*self._ptr }\n     }"}]}