{"sha": "340d1cc7d701bf1c5bae6c2ad5b097462c5d1a7c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0MGQxY2M3ZDcwMWJmMWM1YmFlNmMyYWQ1YjA5NzQ2MmM1ZDFhN2M=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-03-05T11:39:12Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-03-05T11:39:12Z"}, "message": "Fix tag align tests for 32bit linux (fixes #7340)", "tree": {"sha": "55751ffd802cd44755b3306f15db11628e7084d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55751ffd802cd44755b3306f15db11628e7084d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/340d1cc7d701bf1c5bae6c2ad5b097462c5d1a7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/340d1cc7d701bf1c5bae6c2ad5b097462c5d1a7c", "html_url": "https://github.com/rust-lang/rust/commit/340d1cc7d701bf1c5bae6c2ad5b097462c5d1a7c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/340d1cc7d701bf1c5bae6c2ad5b097462c5d1a7c/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "455aa62e4d3766f0b092015c3e15d089bbe2129f", "url": "https://api.github.com/repos/rust-lang/rust/commits/455aa62e4d3766f0b092015c3e15d089bbe2129f", "html_url": "https://github.com/rust-lang/rust/commit/455aa62e4d3766f0b092015c3e15d089bbe2129f"}], "stats": {"total": 60, "additions": 27, "deletions": 33}, "files": [{"sha": "8d8d4caad2404ee69f149a52b4ca3afa3e54a098", "filename": "src/test/run-pass/tag-align-dyn-u64.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/340d1cc7d701bf1c5bae6c2ad5b097462c5d1a7c/src%2Ftest%2Frun-pass%2Ftag-align-dyn-u64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/340d1cc7d701bf1c5bae6c2ad5b097462c5d1a7c/src%2Ftest%2Frun-pass%2Ftag-align-dyn-u64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftag-align-dyn-u64.rs?ref=340d1cc7d701bf1c5bae6c2ad5b097462c5d1a7c", "patch": "@@ -8,9 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-linux #7340 fails on 32-bit Linux\n-// ignore-macos #7340 fails on 32-bit macos\n-\n use std::mem;\n \n enum Tag<A> {\n@@ -26,12 +23,13 @@ fn mk_rec() -> Rec {\n     return Rec { c8:0, t:Tag::Tag2(0) };\n }\n \n-fn is_8_byte_aligned(u: &Tag<u64>) -> bool {\n+fn is_u64_aligned(u: &Tag<u64>) -> bool {\n     let p: uint = unsafe { mem::transmute(u) };\n-    return (p & 7) == 0;\n+    let u64_align = std::mem::min_align_of::<u64>();\n+    return (p & (u64_align - 1)) == 0;\n }\n \n pub fn main() {\n     let x = mk_rec();\n-    assert!(is_8_byte_aligned(&x.t));\n+    assert!(is_u64_aligned(&x.t));\n }"}, {"sha": "917f2c5b37468fe90bf1ddc4e28fafb19a6e632c", "filename": "src/test/run-pass/tag-align-dyn-variants.rs", "status": "modified", "additions": 19, "deletions": 21, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/340d1cc7d701bf1c5bae6c2ad5b097462c5d1a7c/src%2Ftest%2Frun-pass%2Ftag-align-dyn-variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/340d1cc7d701bf1c5bae6c2ad5b097462c5d1a7c/src%2Ftest%2Frun-pass%2Ftag-align-dyn-variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftag-align-dyn-variants.rs?ref=340d1cc7d701bf1c5bae6c2ad5b097462c5d1a7c", "patch": "@@ -8,9 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-linux #7340 fails on 32-bit Linux\n-// ignore-macos #7340 fails on 32-bit macos\n-\n use std::mem;\n \n enum Tag<A,B> {\n@@ -42,33 +39,34 @@ fn variant_data_is_aligned<A,B>(amnt: uint, u: &Tag<A,B>) -> bool {\n }\n \n pub fn main() {\n-    let x = mk_rec(22, 23);\n-    assert!(is_aligned(8, &x.tA));\n-    assert!(variant_data_is_aligned(8, &x.tA));\n-    assert!(is_aligned(8, &x.tB));\n-    assert!(variant_data_is_aligned(8, &x.tB));\n+    let u64_align = std::mem::min_align_of::<u64>();\n+    let x = mk_rec(22u64, 23u64);\n+    assert!(is_aligned(u64_align, &x.tA));\n+    assert!(variant_data_is_aligned(u64_align, &x.tA));\n+    assert!(is_aligned(u64_align, &x.tB));\n+    assert!(variant_data_is_aligned(u64_align, &x.tB));\n \n-    let x = mk_rec(22, 23);\n-    assert!(is_aligned(8, &x.tA));\n-    assert!(variant_data_is_aligned(8, &x.tA));\n-    assert!(is_aligned(8, &x.tB));\n+    let x = mk_rec(22u64, 23u32);\n+    assert!(is_aligned(u64_align, &x.tA));\n+    assert!(variant_data_is_aligned(u64_align, &x.tA));\n+    assert!(is_aligned(u64_align, &x.tB));\n     assert!(variant_data_is_aligned(4, &x.tB));\n \n-    let x = mk_rec(22, 23);\n-    assert!(is_aligned(8, &x.tA));\n+    let x = mk_rec(22u32, 23u64);\n+    assert!(is_aligned(u64_align, &x.tA));\n     assert!(variant_data_is_aligned(4, &x.tA));\n-    assert!(is_aligned(8, &x.tB));\n-    assert!(variant_data_is_aligned(8, &x.tB));\n+    assert!(is_aligned(u64_align, &x.tB));\n+    assert!(variant_data_is_aligned(u64_align, &x.tB));\n \n-    let x = mk_rec(22, 23);\n+    let x = mk_rec(22u32, 23u32);\n     assert!(is_aligned(4, &x.tA));\n     assert!(variant_data_is_aligned(4, &x.tA));\n     assert!(is_aligned(4, &x.tB));\n     assert!(variant_data_is_aligned(4, &x.tB));\n \n     let x = mk_rec(22f64, 23f64);\n-    assert!(is_aligned(8, &x.tA));\n-    assert!(variant_data_is_aligned(8, &x.tA));\n-    assert!(is_aligned(8, &x.tB));\n-    assert!(variant_data_is_aligned(8, &x.tB));\n+    assert!(is_aligned(u64_align, &x.tA));\n+    assert!(variant_data_is_aligned(u64_align, &x.tA));\n+    assert!(is_aligned(u64_align, &x.tB));\n+    assert!(variant_data_is_aligned(u64_align, &x.tB));\n }"}, {"sha": "df99d77142c1b2880cac249744b04ff85f0e0f80", "filename": "src/test/run-pass/tag-align-u64.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/340d1cc7d701bf1c5bae6c2ad5b097462c5d1a7c/src%2Ftest%2Frun-pass%2Ftag-align-u64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/340d1cc7d701bf1c5bae6c2ad5b097462c5d1a7c/src%2Ftest%2Frun-pass%2Ftag-align-u64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftag-align-u64.rs?ref=340d1cc7d701bf1c5bae6c2ad5b097462c5d1a7c", "patch": "@@ -8,9 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-linux #7340 fails on 32-bit Linux\n-// ignore-macos #7340 fails on 32-bit macos\n-\n use std::mem;\n \n enum Tag {\n@@ -26,12 +23,13 @@ fn mk_rec() -> Rec {\n     return Rec { c8:0, t:Tag::TagInner(0) };\n }\n \n-fn is_8_byte_aligned(u: &Tag) -> bool {\n+fn is_u64_aligned(u: &Tag) -> bool {\n     let p: uint = unsafe { mem::transmute(u) };\n-    return (p & 7) == 0;\n+    let u64_align = std::mem::min_align_of::<u64>();\n+    return (p & (u64_align - 1)) == 0;\n }\n \n pub fn main() {\n     let x = mk_rec();\n-    assert!(is_8_byte_aligned(&x.t));\n+    assert!(is_u64_aligned(&x.t));\n }"}]}