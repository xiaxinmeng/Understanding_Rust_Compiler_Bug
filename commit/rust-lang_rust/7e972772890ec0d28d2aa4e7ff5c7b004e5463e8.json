{"sha": "7e972772890ec0d28d2aa4e7ff5c7b004e5463e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlOTcyNzcyODkwZWMwZDI4ZDJhYTRlN2ZmNWM3YjAwNGU1NDYzZTg=", "commit": {"author": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2013-07-11T16:44:40Z"}, "committer": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2013-07-11T16:46:05Z"}, "message": "transmute: Avoid double copy for immediate values\n\nCurrently, immediate values are copied into an alloca only to have an\naddressable storage so that it can be used with memcpy. Obviously we\ncan skip the memcpy in this case.", "tree": {"sha": "e5bc81493720ad60a3086f74c9c4b5991ce00c29", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5bc81493720ad60a3086f74c9c4b5991ce00c29"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e972772890ec0d28d2aa4e7ff5c7b004e5463e8", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e972772890ec0d28d2aa4e7ff5c7b004e5463e8", "html_url": "https://github.com/rust-lang/rust/commit/7e972772890ec0d28d2aa4e7ff5c7b004e5463e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e972772890ec0d28d2aa4e7ff5c7b004e5463e8/comments", "author": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e95fcfafc7a2349217096bc1ed8b8c273b6a0e2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e95fcfafc7a2349217096bc1ed8b8c273b6a0e2b", "html_url": "https://github.com/rust-lang/rust/commit/e95fcfafc7a2349217096bc1ed8b8c273b6a0e2b"}], "stats": {"total": 25, "additions": 11, "deletions": 14}, "files": [{"sha": "9019cd72ff8a7cd905722eb28dedead30b0609c1", "filename": "src/librustc/middle/trans/foreign.rs", "status": "modified", "additions": 11, "deletions": 14, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/7e972772890ec0d28d2aa4e7ff5c7b004e5463e8/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e972772890ec0d28d2aa4e7ff5c7b004e5463e8/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs?ref=7e972772890ec0d28d2aa4e7ff5c7b004e5463e8", "patch": "@@ -725,24 +725,21 @@ pub fn trans_intrinsic(ccx: @mut CrateContext,\n             }\n \n             if !ty::type_is_nil(out_type) {\n-                // NB: Do not use a Load and Store here. This causes massive\n-                // code bloat when `transmute` is used on large structural\n-                // types.\n                 let lldestptr = fcx.llretptr.get();\n-                let lldestptr = PointerCast(bcx, lldestptr, Type::i8p());\n-\n                 let llsrcval = get_param(decl, first_real_arg);\n-                let llsrcptr = if ty::type_is_immediate(ccx.tcx, in_type) {\n-                    let llsrcptr = alloca(bcx, llintype, \"__llsrcptr\");\n-                    Store(bcx, llsrcval, llsrcptr);\n-                    llsrcptr\n+                if ty::type_is_immediate(ccx.tcx, in_type) {\n+                    let lldestptr = PointerCast(bcx, lldestptr, llintype.ptr_to());\n+                    Store(bcx, llsrcval, lldestptr);\n                 } else {\n-                    llsrcval\n+                    // NB: Do not use a Load and Store here. This causes massive\n+                    // code bloat when `transmute` is used on large structural\n+                    // types.\n+                    let lldestptr = PointerCast(bcx, lldestptr, Type::i8p());\n+                    let llsrcptr = PointerCast(bcx, llsrcval, Type::i8p());\n+\n+                    let llsize = llsize_of(ccx, llintype);\n+                    call_memcpy(bcx, lldestptr, llsrcptr, llsize, 1);\n                 };\n-                let llsrcptr = PointerCast(bcx, llsrcptr, Type::i8p());\n-\n-                let llsize = llsize_of(ccx, llintype);\n-                call_memcpy(bcx, lldestptr, llsrcptr, llsize, 1);\n             }\n         }\n         \"needs_drop\" => {"}]}