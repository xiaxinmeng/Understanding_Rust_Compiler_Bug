{"sha": "5efd7782b33e396a8206fb7c919bede2a3a03a75", "node_id": "C_kwDOAAsO6NoAKDVlZmQ3NzgyYjMzZTM5NmE4MjA2ZmI3YzkxOWJlZGUyYTNhMDNhNzU", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-01-30T17:00:36Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-01-30T17:00:36Z"}, "message": "Don't generate unnecessary let $arg=$arg for intrinsics", "tree": {"sha": "9d5fe362a289abf4c7b5af276d297e8543576ed1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d5fe362a289abf4c7b5af276d297e8543576ed1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5efd7782b33e396a8206fb7c919bede2a3a03a75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5efd7782b33e396a8206fb7c919bede2a3a03a75", "html_url": "https://github.com/rust-lang/rust/commit/5efd7782b33e396a8206fb7c919bede2a3a03a75", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5efd7782b33e396a8206fb7c919bede2a3a03a75/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "246998f5ecd6e5b57a6a2707f0e899dea6352dee", "url": "https://api.github.com/repos/rust-lang/rust/commits/246998f5ecd6e5b57a6a2707f0e899dea6352dee", "html_url": "https://github.com/rust-lang/rust/commit/246998f5ecd6e5b57a6a2707f0e899dea6352dee"}], "stats": {"total": 16, "additions": 6, "deletions": 10}, "files": [{"sha": "098862b0662f398c0e917b2482dc492664843e93", "filename": "src/intrinsics/llvm.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efd7782b33e396a8206fb7c919bede2a3a03a75/src%2Fintrinsics%2Fllvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efd7782b33e396a8206fb7c919bede2a3a03a75/src%2Fintrinsics%2Fllvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fllvm.rs?ref=5efd7782b33e396a8206fb7c919bede2a3a03a75", "patch": "@@ -52,8 +52,8 @@ pub(crate) fn codegen_llvm_intrinsic_call<'tcx>(\n             ret.write_cvalue(fx, res);\n         };\n         \"llvm.x86.sse2.cmp.ps\" | \"llvm.x86.sse2.cmp.pd\", (c x, c y, o kind) {\n-            let kind_const = crate::constant::mir_operand_get_const_val(fx, kind).expect(\"llvm.x86.sse2.cmp.* kind not const\");\n-            let flt_cc = match kind_const.try_to_bits(Size::from_bytes(1)).unwrap_or_else(|| panic!(\"kind not scalar: {:?}\", kind_const)) {\n+            let kind = crate::constant::mir_operand_get_const_val(fx, kind).expect(\"llvm.x86.sse2.cmp.* kind not const\");\n+            let flt_cc = match kind.try_to_bits(Size::from_bytes(1)).unwrap_or_else(|| panic!(\"kind not scalar: {:?}\", kind)) {\n                 0 => FloatCC::Equal,\n                 1 => FloatCC::LessThan,\n                 2 => FloatCC::LessThanOrEqual,"}, {"sha": "3429a7a03aad572705a7ad925ab7cfeef2a1e588", "filename": "src/intrinsics/mod.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5efd7782b33e396a8206fb7c919bede2a3a03a75/src%2Fintrinsics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efd7782b33e396a8206fb7c919bede2a3a03a75/src%2Fintrinsics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fmod.rs?ref=5efd7782b33e396a8206fb7c919bede2a3a03a75", "patch": "@@ -31,14 +31,12 @@ macro intrinsic_pat {\n }\n \n macro intrinsic_arg {\n-    (o $fx:expr, $arg:ident) => {\n-        $arg\n-    },\n+    (o $fx:expr, $arg:ident) => {},\n     (c $fx:expr, $arg:ident) => {\n-        codegen_operand($fx, $arg)\n+        let $arg = codegen_operand($fx, $arg);\n     },\n     (v $fx:expr, $arg:ident) => {\n-        codegen_operand($fx, $arg).load_scalar($fx)\n+        let $arg = codegen_operand($fx, $arg).load_scalar($fx);\n     }\n }\n \n@@ -52,9 +50,7 @@ macro intrinsic_match {\n             $(\n                 $(intrinsic_pat!($($name).*))|* $(if $cond)? => {\n                     if let [$($arg),*] = $args {\n-                        let ($($arg,)*) = (\n-                            $(intrinsic_arg!($a $fx, $arg),)*\n-                        );\n+                        $(intrinsic_arg!($a $fx, $arg);)*\n                         $content\n                     } else {\n                         bug!(\"wrong number of args for intrinsic {:?}\", $intrinsic);"}]}