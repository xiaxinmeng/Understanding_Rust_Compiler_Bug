{"sha": "c8f909ee54f74b5fefa0d16afe92188368c9ccac", "node_id": "C_kwDOAAsO6NoAKGM4ZjkwOWVlNTRmNzRiNWZlZmEwZDE2YWZlOTIxODgzNjhjOWNjYWM", "commit": {"author": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2021-11-09T03:44:02Z"}, "committer": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2021-11-09T03:44:02Z"}, "message": "Improve variable naming", "tree": {"sha": "24f11732c8ca3651a44348a5779904792196d675", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24f11732c8ca3651a44348a5779904792196d675"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c8f909ee54f74b5fefa0d16afe92188368c9ccac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c8f909ee54f74b5fefa0d16afe92188368c9ccac", "html_url": "https://github.com/rust-lang/rust/commit/c8f909ee54f74b5fefa0d16afe92188368c9ccac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c8f909ee54f74b5fefa0d16afe92188368c9ccac/comments", "author": null, "committer": null, "parents": [{"sha": "f829523340a84624b07a929b5092a5b996f090a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/f829523340a84624b07a929b5092a5b996f090a6", "html_url": "https://github.com/rust-lang/rust/commit/f829523340a84624b07a929b5092a5b996f090a6"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "206cf8928bea14296d1e59bdd3f024461fe56966", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c8f909ee54f74b5fefa0d16afe92188368c9ccac/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8f909ee54f74b5fefa0d16afe92188368c9ccac/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=c8f909ee54f74b5fefa0d16afe92188368c9ccac", "patch": "@@ -1735,21 +1735,21 @@ where\n \n     let mut started = vec![];\n \n-    for RangeBound(_, kind, r) in values {\n+    for RangeBound(_, kind, range) in values {\n         match kind {\n-            BoundKind::Start => started.push(r),\n+            BoundKind::Start => started.push(range),\n             BoundKind::EndExcluded | BoundKind::EndIncluded => {\n                 let mut overlap = None;\n \n-                while let Some(sr) = started.pop() {\n-                    if sr == r {\n+                while let Some(last_started) = started.pop() {\n+                    if last_started == range {\n                         break;\n                     }\n-                    overlap = Some(sr);\n+                    overlap = Some(last_started);\n                 }\n \n-                if let Some(sr) = overlap {\n-                    return Some((r, sr));\n+                if let Some(first_overlapping) = overlap {\n+                    return Some((range, first_overlapping));\n                 }\n             },\n         }"}]}