{"sha": "6b96827ae971cec1f1bf83245d8356481e76b644", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiOTY4MjdhZTk3MWNlYzFmMWJmODMyNDVkODM1NjQ4MWU3NmI2NDQ=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-12-14T16:03:45Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-12-14T17:35:39Z"}, "message": "Remove dead code", "tree": {"sha": "464efef1cb6e620d308b9d0a14fe386592abd5a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/464efef1cb6e620d308b9d0a14fe386592abd5a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b96827ae971cec1f1bf83245d8356481e76b644", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b96827ae971cec1f1bf83245d8356481e76b644", "html_url": "https://github.com/rust-lang/rust/commit/6b96827ae971cec1f1bf83245d8356481e76b644", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b96827ae971cec1f1bf83245d8356481e76b644/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4dfb91d238bc1f43ae9494d6fa9fa23697bb5630", "url": "https://api.github.com/repos/rust-lang/rust/commits/4dfb91d238bc1f43ae9494d6fa9fa23697bb5630", "html_url": "https://github.com/rust-lang/rust/commit/4dfb91d238bc1f43ae9494d6fa9fa23697bb5630"}], "stats": {"total": 42, "additions": 0, "deletions": 42}, "files": [{"sha": "013085c156ee085a01695a44b04a4e413c1bd9e3", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6b96827ae971cec1f1bf83245d8356481e76b644/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b96827ae971cec1f1bf83245d8356481e76b644/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=6b96827ae971cec1f1bf83245d8356481e76b644", "patch": "@@ -25,7 +25,6 @@\n #![feature(rustc_diagnostic_macros)]\n #![feature(slice_sort_by_cached_key)]\n #![feature(set_stdio)]\n-#![feature(rustc_stack_internals)]\n #![feature(no_debug)]\n \n #![recursion_limit=\"256\"]"}, {"sha": "fdaf2a821faad876c653fd78c91ba12addf080db", "filename": "src/libstd/rt.rs", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6b96827ae971cec1f1bf83245d8356481e76b644/src%2Flibstd%2Frt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b96827ae971cec1f1bf83245d8356481e76b644/src%2Flibstd%2Frt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt.rs?ref=6b96827ae971cec1f1bf83245d8356481e76b644", "patch": "@@ -73,18 +73,3 @@ fn lang_start<T: ::process::Termination + 'static>\n {\n     lang_start_internal(&move || main().report(), argc, argv)\n }\n-\n-/// Function used for reverting changes to the main stack before setrlimit().\n-/// This is POSIX (non-Linux) specific and unlikely to be directly stabilized.\n-#[unstable(feature = \"rustc_stack_internals\", issue = \"0\")]\n-pub unsafe fn deinit_stack_guard() {\n-    ::sys::thread::guard::deinit();\n-}\n-\n-/// Function used for resetting the main stack guard address after setrlimit().\n-/// This is POSIX specific and unlikely to be directly stabilized.\n-#[unstable(feature = \"rustc_stack_internals\", issue = \"0\")]\n-pub unsafe fn update_stack_guard() {\n-    let main_guard = ::sys::thread::guard::init();\n-    ::sys_common::thread_info::reset_guard(main_guard);\n-}"}, {"sha": "54c79114be49067b71d0defa78cbe017ff8e5289", "filename": "src/libstd/sys/cloudabi/thread.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6b96827ae971cec1f1bf83245d8356481e76b644/src%2Flibstd%2Fsys%2Fcloudabi%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b96827ae971cec1f1bf83245d8356481e76b644/src%2Flibstd%2Fsys%2Fcloudabi%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcloudabi%2Fthread.rs?ref=6b96827ae971cec1f1bf83245d8356481e76b644", "patch": "@@ -119,7 +119,6 @@ pub mod guard {\n     pub unsafe fn init() -> Option<Guard> {\n         None\n     }\n-    pub unsafe fn deinit() {}\n }\n \n fn min_stack_size(_: *const libc::pthread_attr_t) -> usize {"}, {"sha": "ca014fd576bd3743b7d5a113844c36921502f559", "filename": "src/libstd/sys/redox/thread.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6b96827ae971cec1f1bf83245d8356481e76b644/src%2Flibstd%2Fsys%2Fredox%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b96827ae971cec1f1bf83245d8356481e76b644/src%2Flibstd%2Fsys%2Fredox%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Fthread.rs?ref=6b96827ae971cec1f1bf83245d8356481e76b644", "patch": "@@ -92,5 +92,4 @@ pub mod guard {\n     pub type Guard = !;\n     pub unsafe fn current() -> Option<Guard> { None }\n     pub unsafe fn init() -> Option<Guard> { None }\n-    pub unsafe fn deinit() {}\n }"}, {"sha": "9f3c4536cb5b6d6a91c773fd11d920b819111da1", "filename": "src/libstd/sys/sgx/thread.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6b96827ae971cec1f1bf83245d8356481e76b644/src%2Flibstd%2Fsys%2Fsgx%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b96827ae971cec1f1bf83245d8356481e76b644/src%2Flibstd%2Fsys%2Fsgx%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fsgx%2Fthread.rs?ref=6b96827ae971cec1f1bf83245d8356481e76b644", "patch": "@@ -97,5 +97,4 @@ pub mod guard {\n     pub type Guard = !;\n     pub unsafe fn current() -> Option<Guard> { None }\n     pub unsafe fn init() -> Option<Guard> { None }\n-    pub unsafe fn deinit() {}\n }"}, {"sha": "e0d2c620498b69398299b43d51ba1c4dbff56efe", "filename": "src/libstd/sys/unix/thread.rs", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/6b96827ae971cec1f1bf83245d8356481e76b644/src%2Flibstd%2Fsys%2Funix%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b96827ae971cec1f1bf83245d8356481e76b644/src%2Flibstd%2Fsys%2Funix%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fthread.rs?ref=6b96827ae971cec1f1bf83245d8356481e76b644", "patch": "@@ -211,7 +211,6 @@ pub mod guard {\n     pub type Guard = Range<usize>;\n     pub unsafe fn current() -> Option<Guard> { None }\n     pub unsafe fn init() -> Option<Guard> { None }\n-    pub unsafe fn deinit() {}\n }\n \n \n@@ -355,26 +354,6 @@ pub mod guard {\n         }\n     }\n \n-    pub unsafe fn deinit() {\n-        if !cfg!(target_os = \"linux\") {\n-            if let Some(stackaddr) = get_stack_start_aligned() {\n-                // Remove the protection on the guard page.\n-                // FIXME: we cannot unmap the page, because when we mmap()\n-                // above it may be already mapped by the OS, which we can't\n-                // detect from mmap()'s return value. If we unmap this page,\n-                // it will lead to failure growing stack size on platforms like\n-                // macOS. Instead, just restore the page to a writable state.\n-                // This ain't Linux, so we probably don't need to care about\n-                // execstack.\n-                let result = mprotect(stackaddr, PAGE_SIZE, PROT_READ | PROT_WRITE);\n-\n-                if result != 0 {\n-                    panic!(\"unable to reset the guard page\");\n-                }\n-            }\n-        }\n-    }\n-\n     #[cfg(any(target_os = \"macos\",\n               target_os = \"bitrig\",\n               target_os = \"openbsd\","}, {"sha": "f9abb0b825a3409f3b6216d87d7bae4d1ee995aa", "filename": "src/libstd/sys/wasm/thread.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6b96827ae971cec1f1bf83245d8356481e76b644/src%2Flibstd%2Fsys%2Fwasm%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b96827ae971cec1f1bf83245d8356481e76b644/src%2Flibstd%2Fsys%2Fwasm%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwasm%2Fthread.rs?ref=6b96827ae971cec1f1bf83245d8356481e76b644", "patch": "@@ -68,7 +68,6 @@ pub mod guard {\n     pub type Guard = !;\n     pub unsafe fn current() -> Option<Guard> { None }\n     pub unsafe fn init() -> Option<Guard> { None }\n-    pub unsafe fn deinit() {}\n }\n \n cfg_if! {"}, {"sha": "621ae2fda58c3556212e356f84634ad58ccf7089", "filename": "src/libstd/sys/windows/thread.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6b96827ae971cec1f1bf83245d8356481e76b644/src%2Flibstd%2Fsys%2Fwindows%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b96827ae971cec1f1bf83245d8356481e76b644/src%2Flibstd%2Fsys%2Fwindows%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fthread.rs?ref=6b96827ae971cec1f1bf83245d8356481e76b644", "patch": "@@ -98,5 +98,4 @@ pub mod guard {\n     pub type Guard = !;\n     pub unsafe fn current() -> Option<Guard> { None }\n     pub unsafe fn init() -> Option<Guard> { None }\n-    pub unsafe fn deinit() {}\n }"}]}