{"sha": "d1a5a353a131a9d74e880c02e607c8eeb573be88", "node_id": "C_kwDOAAsO6NoAKGQxYTVhMzUzYTEzMWE5ZDc0ZTg4MGMwMmU2MDdjOGVlYjU3M2JlODg", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-20T08:36:25Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-20T08:36:25Z"}, "message": "Auto merge of #10214 - xFrednet:changelog-1-67, r=Manishearth,giraffate\n\nChangelog for Rust 1.67 :lady_beetle:\n\nRoses are red,\nviolets are blue,\nif changelogs could talk,\nwhat would we do?\n\n---\n\nThe usual disclaimer: This PR is written, as if the version was already released. It should be merged with the coming release on 2023-01-26. So, please provide feedback and approve it, if everything looks good, but let's wait with the r+ until the release :)\n\n---\n\nchangelog: none", "tree": {"sha": "880cf5e408d5c25994534655b26aa2ef86f8f7e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/880cf5e408d5c25994534655b26aa2ef86f8f7e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1a5a353a131a9d74e880c02e607c8eeb573be88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1a5a353a131a9d74e880c02e607c8eeb573be88", "html_url": "https://github.com/rust-lang/rust/commit/d1a5a353a131a9d74e880c02e607c8eeb573be88", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1a5a353a131a9d74e880c02e607c8eeb573be88/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa0eb7fb1cc27d59375645b0f34c59dc85afb1ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa0eb7fb1cc27d59375645b0f34c59dc85afb1ec", "html_url": "https://github.com/rust-lang/rust/commit/aa0eb7fb1cc27d59375645b0f34c59dc85afb1ec"}, {"sha": "a7ae84bc84fbe35d3f07c4fb5c325e130b0b9d19", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7ae84bc84fbe35d3f07c4fb5c325e130b0b9d19", "html_url": "https://github.com/rust-lang/rust/commit/a7ae84bc84fbe35d3f07c4fb5c325e130b0b9d19"}], "stats": {"total": 214, "additions": 204, "deletions": 10}, "files": [{"sha": "d3cb880df57b0f348ee8044f11f0be38a9ccf378", "filename": "CHANGELOG.md", "status": "modified", "additions": 196, "deletions": 2, "changes": 198, "blob_url": "https://github.com/rust-lang/rust/blob/d1a5a353a131a9d74e880c02e607c8eeb573be88/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/d1a5a353a131a9d74e880c02e607c8eeb573be88/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=d1a5a353a131a9d74e880c02e607c8eeb573be88", "patch": "@@ -4,9 +4,202 @@ All notable changes to this project will be documented in this file.\n See [Changelog Update](book/src/development/infrastructure/changelog_update.md) if you want to update this\n document.\n \n-## Unreleased / Beta / In Rust Nightly\n+## Unreleased / In Rust Nightly\n \n-[4f142aa1...master](https://github.com/rust-lang/rust-clippy/compare/4f142aa1...master)\n+[d822110d...master](https://github.com/rust-lang/rust-clippy/compare/d822110d...master)\n+\n+## Rust 1.67\n+\n+Current beta, released 2023-01-26\n+\n+[4f142aa1...d822110d](https://github.com/rust-lang/rust-clippy/compare/4f142aa1...d822110d)\n+\n+### New Lints\n+\n+* [`seek_from_current`]\n+  [#9681](https://github.com/rust-lang/rust-clippy/pull/9681)\n+* [`from_raw_with_void_ptr`]\n+  [#9690](https://github.com/rust-lang/rust-clippy/pull/9690)\n+* [`misnamed_getters`]\n+  [#9770](https://github.com/rust-lang/rust-clippy/pull/9770)\n+* [`seek_to_start_instead_of_rewind`]\n+  [#9667](https://github.com/rust-lang/rust-clippy/pull/9667)\n+* [`suspicious_xor_used_as_pow`]\n+  [#9506](https://github.com/rust-lang/rust-clippy/pull/9506)\n+* [`unnecessary_safety_doc`]\n+  [#9822](https://github.com/rust-lang/rust-clippy/pull/9822)\n+* [`unchecked_duration_subtraction`]\n+  [#9570](https://github.com/rust-lang/rust-clippy/pull/9570)\n+* [`manual_is_ascii_check`]\n+  [#9765](https://github.com/rust-lang/rust-clippy/pull/9765)\n+* [`unnecessary_safety_comment`]\n+  [#9851](https://github.com/rust-lang/rust-clippy/pull/9851)\n+* [`let_underscore_future`]\n+  [#9760](https://github.com/rust-lang/rust-clippy/pull/9760)\n+* [`manual_let_else`]\n+  [#8437](https://github.com/rust-lang/rust-clippy/pull/8437)\n+\n+### Moves and Deprecations\n+\n+* Moved [`uninlined_format_args`] to `style` (Now warn-by-default)\n+  [#9865](https://github.com/rust-lang/rust-clippy/pull/9865)\n+* Moved [`needless_collect`] to `nursery` (Now allow-by-default)\n+  [#9705](https://github.com/rust-lang/rust-clippy/pull/9705)\n+* Moved [`or_fun_call`] to `nursery` (Now allow-by-default)\n+  [#9829](https://github.com/rust-lang/rust-clippy/pull/9829)\n+* Uplifted [`let_underscore_lock`] into rustc\n+  [#9697](https://github.com/rust-lang/rust-clippy/pull/9697)\n+* Uplifted [`let_underscore_drop`] into rustc\n+  [#9697](https://github.com/rust-lang/rust-clippy/pull/9697)\n+* Moved [`bool_to_int_with_if`] to `pedantic` (Now allow-by-default)\n+  [#9830](https://github.com/rust-lang/rust-clippy/pull/9830)\n+* Move `index_refutable_slice` to `pedantic` (Now warn-by-default)\n+  [#9975](https://github.com/rust-lang/rust-clippy/pull/9975)\n+* Moved [`manual_clamp`] to `nursery` (Now allow-by-default)\n+  [#10101](https://github.com/rust-lang/rust-clippy/pull/10101)\n+\n+### Enhancements\n+\n+* The scope of `#![clippy::msrv]` is now tracked correctly\n+  [#9924](https://github.com/rust-lang/rust-clippy/pull/9924)\n+* `#[clippy::msrv]` can now be used as an outer attribute\n+  [#9860](https://github.com/rust-lang/rust-clippy/pull/9860)\n+* Clippy will now avoid Cargo's cache, if `Cargo.toml` or `clippy.toml` have changed\n+  [#9707](https://github.com/rust-lang/rust-clippy/pull/9707)\n+* [`uninlined_format_args`]: Added a new config `allow-mixed-uninlined-format-args` to allow the\n+  lint, if only some arguments can be inlined\n+  [#9865](https://github.com/rust-lang/rust-clippy/pull/9865)\n+* [`needless_lifetimes`]: Now provides suggests for individual lifetimes\n+  [#9743](https://github.com/rust-lang/rust-clippy/pull/9743)\n+* [`needless_collect`]: Now detects needless `is_empty` and `contains` calls\n+  [#8744](https://github.com/rust-lang/rust-clippy/pull/8744)\n+* [`blanket_clippy_restriction_lints`]: Now lints, if `clippy::restriction` is enabled via the\n+  command line arguments\n+  [#9755](https://github.com/rust-lang/rust-clippy/pull/9755)\n+* [`mutable_key_type`]: Now has the `ignore-interior-mutability` configuration, to add types which\n+  should be ignored by the lint\n+  [#9692](https://github.com/rust-lang/rust-clippy/pull/9692)\n+* [`uninlined_format_args`]: Now works for multiline `format!` expressions\n+  [#9945](https://github.com/rust-lang/rust-clippy/pull/9945)\n+* [`cognitive_complexity`]: Now works for async functions\n+  [#9828](https://github.com/rust-lang/rust-clippy/pull/9828)\n+  [#9836](https://github.com/rust-lang/rust-clippy/pull/9836)\n+* [`vec_box`]: Now avoids an off-by-one error when using the `vec-box-size-threshold` configuration\n+  [#9848](https://github.com/rust-lang/rust-clippy/pull/9848)\n+* [`never_loop`]: Now correctly handles breaks in nested labeled blocks\n+  [#9858](https://github.com/rust-lang/rust-clippy/pull/9858)\n+  [#9837](https://github.com/rust-lang/rust-clippy/pull/9837)\n+* [`disallowed_methods`], [`disallowed_types`], [`disallowed_macros`]: Now correctly resolve\n+  paths, if a crate is used multiple times with different versions\n+  [#9800](https://github.com/rust-lang/rust-clippy/pull/9800)\n+* [`disallowed_methods`]: Can now be used for local methods\n+  [#9800](https://github.com/rust-lang/rust-clippy/pull/9800)\n+* [`print_stdout`], [`print_stderr`]: Can now be enabled in test with the `allow-print-in-tests`\n+  config value\n+  [#9797](https://github.com/rust-lang/rust-clippy/pull/9797)\n+* [`from_raw_with_void_ptr`]: Now works for `Rc`, `Arc`, `alloc::rc::Weak` and\n+  `alloc::sync::Weak` types.\n+  [#9700](https://github.com/rust-lang/rust-clippy/pull/9700)\n+* [`needless_borrowed_reference`]: Now works for struct and tuple patterns with wildcards\n+  [#9855](https://github.com/rust-lang/rust-clippy/pull/9855)\n+* [`or_fun_call`]: Now supports `map_or` methods\n+  [#9689](https://github.com/rust-lang/rust-clippy/pull/9689)\n+* [`unwrap_used`], [`expect_used`]: No longer lints in test code\n+  [#9686](https://github.com/rust-lang/rust-clippy/pull/9686)\n+* [`fn_params_excessive_bools`]: Is now emitted with the lint level at the linted function\n+  [#9698](https://github.com/rust-lang/rust-clippy/pull/9698)\n+\n+### False Positive Fixes\n+\n+* [`new_ret_no_self`]: No longer lints when `impl Trait<Self>` is returned\n+  [#9733](https://github.com/rust-lang/rust-clippy/pull/9733)\n+* [`unnecessary_lazy_evaluations`]: No longer lints, if the type has a significant drop\n+  [#9750](https://github.com/rust-lang/rust-clippy/pull/9750)\n+* [`option_if_let_else`]: No longer lints, if any arm has guard\n+  [#9747](https://github.com/rust-lang/rust-clippy/pull/9747)\n+* [`explicit_auto_deref`]: No longer lints, if the target type is a projection with generic\n+  arguments\n+  [#9813](https://github.com/rust-lang/rust-clippy/pull/9813)\n+* [`unnecessary_to_owned`]: No longer lints, if the suggestion effects types\n+  [#9796](https://github.com/rust-lang/rust-clippy/pull/9796)\n+* [`needless_borrow`]: No longer lints, if the suggestion is affected by `Deref`\n+  [#9674](https://github.com/rust-lang/rust-clippy/pull/9674)\n+* [`unused_unit`]: No longer lints, if lifetimes are bound to the return type\n+  [#9849](https://github.com/rust-lang/rust-clippy/pull/9849)\n+* [`mut_mut`]: No longer lints cases with unsized mutable references\n+  [#9835](https://github.com/rust-lang/rust-clippy/pull/9835)\n+* [`bool_to_int_with_if`]: No longer lints in const context\n+  [#9738](https://github.com/rust-lang/rust-clippy/pull/9738)\n+* [`use_self`]: No longer lints in macros\n+  [#9704](https://github.com/rust-lang/rust-clippy/pull/9704)\n+* [`unnecessary_operation`]: No longer lints, if multiple macros are involved\n+  [#9981](https://github.com/rust-lang/rust-clippy/pull/9981)\n+* [`allow_attributes_without_reason`]: No longer lints inside external macros\n+  [#9630](https://github.com/rust-lang/rust-clippy/pull/9630)\n+* [`question_mark`]: No longer lints for `if let Err()` with an `else` branch\n+  [#9722](https://github.com/rust-lang/rust-clippy/pull/9722)\n+* [`unnecessary_cast`]: No longer lints if the identifier and cast originate from different macros\n+  [#9980](https://github.com/rust-lang/rust-clippy/pull/9980)\n+* [`arithmetic_side_effects`]: Now detects operations with associated constants\n+  [#9592](https://github.com/rust-lang/rust-clippy/pull/9592)\n+* [`explicit_auto_deref`]: No longer lints, if the initial value is not a reference or reference\n+  receiver\n+  [#9997](https://github.com/rust-lang/rust-clippy/pull/9997)\n+* [`module_name_repetitions`], [`single_component_path_imports`]: Now handle `#[allow]`\n+  attributes correctly\n+  [#9879](https://github.com/rust-lang/rust-clippy/pull/9879)\n+* [`bool_to_int_with_if`]: No longer lints `if let` statements\n+  [#9714](https://github.com/rust-lang/rust-clippy/pull/9714)\n+* [`needless_borrow`]: No longer lints, `if`-`else`-statements that require the borrow\n+  [#9791](https://github.com/rust-lang/rust-clippy/pull/9791)\n+* [`needless_borrow`]: No longer lints borrows, if moves were illegal\n+  [#9711](https://github.com/rust-lang/rust-clippy/pull/9711)\n+* [`manual_swap`]: No longer lints in const context\n+  [#9871](https://github.com/rust-lang/rust-clippy/pull/9871)\n+\n+### Suggestion Fixes/Improvements\n+\n+* [`missing_safety_doc`], [`missing_errors_doc`], [`missing_panics_doc`]: No longer show the\n+  entire item in the lint emission.\n+  [#9772](https://github.com/rust-lang/rust-clippy/pull/9772)\n+* [`needless_lifetimes`]: Only suggests `'_` when it's applicable\n+  [#9743](https://github.com/rust-lang/rust-clippy/pull/9743)\n+* [`use_self`]: Now suggests full paths correctly\n+  [#9726](https://github.com/rust-lang/rust-clippy/pull/9726)\n+* [`redundant_closure_call`]: Now correctly deals with macros during suggestion creation\n+  [#9987](https://github.com/rust-lang/rust-clippy/pull/9987)\n+* [`unnecessary_cast`]: Suggestions now correctly deal with references\n+  [#9996](https://github.com/rust-lang/rust-clippy/pull/9996)\n+* [`unnecessary_join`]: Suggestions now correctly use [turbofish] operators\n+  [#9779](https://github.com/rust-lang/rust-clippy/pull/9779)\n+* [`equatable_if_let`]: Can now suggest `matches!` replacements\n+  [#9368](https://github.com/rust-lang/rust-clippy/pull/9368)\n+* [`string_extend_chars`]: Suggestions now correctly work for `str` slices\n+  [#9741](https://github.com/rust-lang/rust-clippy/pull/9741)\n+* [`redundant_closure_for_method_calls`]: Suggestions now include angle brackets and generic\n+  arguments if needed\n+  [#9745](https://github.com/rust-lang/rust-clippy/pull/9745)\n+* [`manual_let_else`]: Suggestions no longer expand macro calls\n+  [#9943](https://github.com/rust-lang/rust-clippy/pull/9943)\n+* [`infallible_destructuring_match`]: Suggestions now preserve references\n+  [#9850](https://github.com/rust-lang/rust-clippy/pull/9850)\n+* [`result_large_err`]: The error now shows the largest enum variant\n+  [#9662](https://github.com/rust-lang/rust-clippy/pull/9662)\n+* [`needless_return`]: Suggestions are now formatted better\n+  [#9967](https://github.com/rust-lang/rust-clippy/pull/9967)\n+* [`unused_rounding`]: The suggestion now preserves the original float literal notation\n+  [#9870](https://github.com/rust-lang/rust-clippy/pull/9870)\n+\n+[turbofish]: https://turbo.fish/::%3CClippy%3E\n+\n+### ICE Fixes\n+\n+* [`result_large_err`]: Fixed ICE for empty enums\n+  [#10007](https://github.com/rust-lang/rust-clippy/pull/10007)\n+* [`redundant_allocation`]: Fixed ICE for types with bounded variables\n+  [#9773](https://github.com/rust-lang/rust-clippy/pull/9773)\n+* [`unused_rounding`]: Fixed ICE, if `_` was used as a separator\n+  [#10001](https://github.com/rust-lang/rust-clippy/pull/10001)\n \n ## Rust 1.66\n \n@@ -166,6 +359,7 @@ Current stable, released 2022-12-15\n \n * [`unnecessary_to_owned`]: Avoid ICEs in favor of false negatives if information is missing\n   [#9505](https://github.com/rust-lang/rust-clippy/pull/9505)\n+  [#10027](https://github.com/rust-lang/rust-clippy/pull/10027)\n * [`manual_range_contains`]: No longer ICEs on values behind references\n   [#9627](https://github.com/rust-lang/rust-clippy/pull/9627)\n * [`needless_pass_by_value`]: No longer ICEs on unsized `dyn Fn` arguments"}, {"sha": "f7a3d6d53f7141c21400d1f64fa748af75a6eaf6", "filename": "clippy_lints/src/doc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1a5a353a131a9d74e880c02e607c8eeb573be88/clippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1a5a353a131a9d74e880c02e607c8eeb573be88/clippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdoc.rs?ref=d1a5a353a131a9d74e880c02e607c8eeb573be88", "patch": "@@ -251,7 +251,7 @@ declare_clippy_lint! {\n     ///     unimplemented!();\n     /// }\n     /// ```\n-    #[clippy::version = \"1.66.0\"]\n+    #[clippy::version = \"1.67.0\"]\n     pub UNNECESSARY_SAFETY_DOC,\n     restriction,\n     \"`pub fn` or `pub trait` with `# Safety` docs\""}, {"sha": "096508dc4f11e24dd135ed9d41e8ffeca79b1f41", "filename": "clippy_lints/src/from_raw_with_void_ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1a5a353a131a9d74e880c02e607c8eeb573be88/clippy_lints%2Fsrc%2Ffrom_raw_with_void_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1a5a353a131a9d74e880c02e607c8eeb573be88/clippy_lints%2Fsrc%2Ffrom_raw_with_void_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffrom_raw_with_void_ptr.rs?ref=d1a5a353a131a9d74e880c02e607c8eeb573be88", "patch": "@@ -31,7 +31,7 @@ declare_clippy_lint! {\n     /// let _ = unsafe { Box::from_raw(ptr as *mut usize) };\n     /// ```\n     ///\n-    #[clippy::version = \"1.66.0\"]\n+    #[clippy::version = \"1.67.0\"]\n     pub FROM_RAW_WITH_VOID_PTR,\n     suspicious,\n     \"creating a `Box` from a void raw pointer\""}, {"sha": "668110c7cc081c1e9da0fd1e62897c9d9d1dc757", "filename": "clippy_lints/src/instant_subtraction.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1a5a353a131a9d74e880c02e607c8eeb573be88/clippy_lints%2Fsrc%2Finstant_subtraction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1a5a353a131a9d74e880c02e607c8eeb573be88/clippy_lints%2Fsrc%2Finstant_subtraction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finstant_subtraction.rs?ref=d1a5a353a131a9d74e880c02e607c8eeb573be88", "patch": "@@ -59,7 +59,7 @@ declare_clippy_lint! {\n     ///\n     /// [`Duration`]: std::time::Duration\n     /// [`Instant::now()`]: std::time::Instant::now;\n-    #[clippy::version = \"1.65.0\"]\n+    #[clippy::version = \"1.67.0\"]\n     pub UNCHECKED_DURATION_SUBTRACTION,\n     pedantic,\n     \"finds unchecked subtraction of a 'Duration' from an 'Instant'\""}, {"sha": "f8e3595098088402e4414c9fb73e1f01b47fac9a", "filename": "clippy_lints/src/let_underscore.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1a5a353a131a9d74e880c02e607c8eeb573be88/clippy_lints%2Fsrc%2Flet_underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1a5a353a131a9d74e880c02e607c8eeb573be88/clippy_lints%2Fsrc%2Flet_underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flet_underscore.rs?ref=d1a5a353a131a9d74e880c02e607c8eeb573be88", "patch": "@@ -84,7 +84,7 @@ declare_clippy_lint! {\n     /// let _ = foo().await;\n     /// # }\n     /// ```\n-    #[clippy::version = \"1.66\"]\n+    #[clippy::version = \"1.67.0\"]\n     pub LET_UNDERSCORE_FUTURE,\n     suspicious,\n     \"non-binding `let` on a future\""}, {"sha": "2fd32c009eaa79374cbc9f5c8aabb915e41e7b84", "filename": "clippy_lints/src/manual_is_ascii_check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1a5a353a131a9d74e880c02e607c8eeb573be88/clippy_lints%2Fsrc%2Fmanual_is_ascii_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1a5a353a131a9d74e880c02e607c8eeb573be88/clippy_lints%2Fsrc%2Fmanual_is_ascii_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_is_ascii_check.rs?ref=d1a5a353a131a9d74e880c02e607c8eeb573be88", "patch": "@@ -43,7 +43,7 @@ declare_clippy_lint! {\n     ///     'A'.is_ascii_uppercase();\n     /// }\n     /// ```\n-    #[clippy::version = \"1.66.0\"]\n+    #[clippy::version = \"1.67.0\"]\n     pub MANUAL_IS_ASCII_CHECK,\n     style,\n     \"use dedicated method to check ascii range\""}, {"sha": "42377a3d138c2716d327daf2ca0df9b6825d9823", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1a5a353a131a9d74e880c02e607c8eeb573be88/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1a5a353a131a9d74e880c02e607c8eeb573be88/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=d1a5a353a131a9d74e880c02e607c8eeb573be88", "patch": "@@ -3102,7 +3102,7 @@ declare_clippy_lint! {\n     ///     Ok(())\n     /// }\n     /// ```\n-    #[clippy::version = \"1.66.0\"]\n+    #[clippy::version = \"1.67.0\"]\n     pub SEEK_FROM_CURRENT,\n     complexity,\n     \"use dedicated method for seek from current position\"\n@@ -3133,7 +3133,7 @@ declare_clippy_lint! {\n     ///     t.rewind();\n     /// }\n     /// ```\n-    #[clippy::version = \"1.66.0\"]\n+    #[clippy::version = \"1.67.0\"]\n     pub SEEK_TO_START_INSTEAD_OF_REWIND,\n     complexity,\n     \"jumping to the start of stream using `seek` method\""}, {"sha": "c181919b16470a328bbcc34dab9fb1390d5e6199", "filename": "clippy_lints/src/suspicious_xor_used_as_pow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1a5a353a131a9d74e880c02e607c8eeb573be88/clippy_lints%2Fsrc%2Fsuspicious_xor_used_as_pow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1a5a353a131a9d74e880c02e607c8eeb573be88/clippy_lints%2Fsrc%2Fsuspicious_xor_used_as_pow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsuspicious_xor_used_as_pow.rs?ref=d1a5a353a131a9d74e880c02e607c8eeb573be88", "patch": "@@ -18,7 +18,7 @@ declare_clippy_lint! {\n     /// ```rust\n     /// let x = 3_i32.pow(4);\n     /// ```\n-    #[clippy::version = \"1.66.0\"]\n+    #[clippy::version = \"1.67.0\"]\n     pub SUSPICIOUS_XOR_USED_AS_POW,\n     restriction,\n     \"XOR (`^`) operator possibly used as exponentiation operator\""}]}