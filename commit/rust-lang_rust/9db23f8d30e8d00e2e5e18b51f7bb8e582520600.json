{"sha": "9db23f8d30e8d00e2e5e18b51f7bb8e582520600", "node_id": "C_kwDOAAsO6NoAKDlkYjIzZjhkMzBlOGQwMGUyZTVlMThiNTFmN2JiOGU1ODI1MjA2MDA", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2022-11-18T22:48:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-18T22:48:19Z"}, "message": "Rollup merge of #104556 - notriddle:notriddle/variant, r=GuillaumeGomez\n\nrustdoc: use `code-header` class to format enum variants\n\nThe font size and weights should be exactly the same after this PR, but the spacing is changed to be the same as methods.\n\nPreview: http://notriddle.com/notriddle-rustdoc-demos/variant/test_dingus_enum/enum.TestEnum.html", "tree": {"sha": "39cfe78848e60f981dd45db69bfff7987a3602a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39cfe78848e60f981dd45db69bfff7987a3602a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9db23f8d30e8d00e2e5e18b51f7bb8e582520600", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjeAuzCRBK7hj4Ov3rIwAA0RMIAE5JlgJW7tyksTjYm4XdTzKT\n3D/wo1OGGzOS3wyklESUOMNzVVt2VVMw764xMZ6K/M9v45arUtftvuxTGNZVJuCH\n7qVFmkMUkuX38dNT5grc1y2/AXxpBZo4pcyeIzyczj3UKnqZXaiW5s98KnuZv3X5\nZjBCcmciCSV4WrFCL+x/laYX65yujVKarS7KpRAOCuqnSl/9GlQJHwoiRJqm/PXT\ncILq7zZoGT/ZwJWb88xXM+EsMUq1T+jd6ZyXwYxJ3XGRTqcfMCyoibec62n7B27Y\nwZWWfSV6JYaqBHXYgNO3WvNPIVFSlqi2B0HTYayhS5e/dnN5DJG5Ct5lF6MuawU=\n=/7r2\n-----END PGP SIGNATURE-----\n", "payload": "tree 39cfe78848e60f981dd45db69bfff7987a3602a7\nparent a065e97bdc599406f4cea8dad90cc5f215a4e61a\nparent 616f34e3c3068b0d39c969cb91695d3ea6e3a71c\nauthor Manish Goregaokar <manishsmail@gmail.com> 1668811699 -0500\ncommitter GitHub <noreply@github.com> 1668811699 -0500\n\nRollup merge of #104556 - notriddle:notriddle/variant, r=GuillaumeGomez\n\nrustdoc: use `code-header` class to format enum variants\n\nThe font size and weights should be exactly the same after this PR, but the spacing is changed to be the same as methods.\n\nPreview: http://notriddle.com/notriddle-rustdoc-demos/variant/test_dingus_enum/enum.TestEnum.html\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9db23f8d30e8d00e2e5e18b51f7bb8e582520600", "html_url": "https://github.com/rust-lang/rust/commit/9db23f8d30e8d00e2e5e18b51f7bb8e582520600", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9db23f8d30e8d00e2e5e18b51f7bb8e582520600/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a065e97bdc599406f4cea8dad90cc5f215a4e61a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a065e97bdc599406f4cea8dad90cc5f215a4e61a", "html_url": "https://github.com/rust-lang/rust/commit/a065e97bdc599406f4cea8dad90cc5f215a4e61a"}, {"sha": "616f34e3c3068b0d39c969cb91695d3ea6e3a71c", "url": "https://api.github.com/repos/rust-lang/rust/commits/616f34e3c3068b0d39c969cb91695d3ea6e3a71c", "html_url": "https://github.com/rust-lang/rust/commit/616f34e3c3068b0d39c969cb91695d3ea6e3a71c"}], "stats": {"total": 58, "additions": 29, "deletions": 29}, "files": [{"sha": "c95f117a205886dc06c5c32937884b07d3fd9d2a", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/9db23f8d30e8d00e2e5e18b51f7bb8e582520600/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9db23f8d30e8d00e2e5e18b51f7bb8e582520600/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=9db23f8d30e8d00e2e5e18b51f7bb8e582520600", "patch": "@@ -19,8 +19,8 @@ use super::{\n     collect_paths_for_type, document, ensure_trailing_slash, get_filtered_impls_for_reference,\n     item_ty_to_section, notable_traits_button, notable_traits_json, render_all_impls,\n     render_assoc_item, render_assoc_items, render_attributes_in_code, render_attributes_in_pre,\n-    render_impl, render_rightside, render_stability_since_raw, AssocItemLink, Context,\n-    ImplRenderingParameters,\n+    render_impl, render_rightside, render_stability_since_raw,\n+    render_stability_since_raw_with_extra, AssocItemLink, Context, ImplRenderingParameters,\n };\n use crate::clean;\n use crate::config::ModuleSorting;\n@@ -1267,30 +1267,30 @@ fn item_enum(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, e: &clean::\n             document_non_exhaustive_header(it)\n         );\n         document_non_exhaustive(w, it);\n+        write!(w, \"<div class=\\\"variants\\\">\");\n         for variant in e.variants() {\n             let id = cx.derive_id(format!(\"{}.{}\", ItemType::Variant, variant.name.unwrap()));\n             write!(\n                 w,\n-                \"<h3 id=\\\"{id}\\\" class=\\\"variant small-section-header\\\">\\\n-                    <a href=\\\"#{id}\\\" class=\\\"anchor field\\\"></a>\\\n-                    <code>{name}\",\n+                \"<section id=\\\"{id}\\\" class=\\\"variant\\\">\\\n+                    <a href=\\\"#{id}\\\" class=\\\"anchor\\\"></a>\",\n                 id = id,\n-                name = variant.name.unwrap()\n             );\n-            if let clean::VariantItem(clean::Variant::Tuple(ref s)) = *variant.kind {\n-                w.write_str(\"(\");\n-                print_tuple_struct_fields(w, cx, s);\n-                w.write_str(\")\");\n-            }\n-            w.write_str(\"</code>\");\n-            render_stability_since_raw(\n+            render_stability_since_raw_with_extra(\n                 w,\n                 variant.stable_since(tcx),\n                 variant.const_stability(tcx),\n                 it.stable_since(tcx),\n                 it.const_stable_since(tcx),\n+                \" rightside\",\n             );\n-            w.write_str(\"</h3>\");\n+            write!(w, \"<h3 class=\\\"code-header\\\">{name}\", name = variant.name.unwrap());\n+            if let clean::VariantItem(clean::Variant::Tuple(ref s)) = *variant.kind {\n+                w.write_str(\"(\");\n+                print_tuple_struct_fields(w, cx, s);\n+                w.write_str(\")\");\n+            }\n+            w.write_str(\"</h3></section>\");\n \n             use crate::clean::Variant;\n \n@@ -1324,7 +1324,7 @@ fn item_enum(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, e: &clean::\n                             write!(\n                                 w,\n                                 \"<div class=\\\"sub-variant-field\\\">\\\n-                                 <span id=\\\"{id}\\\" class=\\\"variant small-section-header\\\">\\\n+                                 <span id=\\\"{id}\\\" class=\\\"small-section-header\\\">\\\n                                      <a href=\\\"#{id}\\\" class=\\\"anchor field\\\"></a>\\\n                                      <code>{f}:&nbsp;{t}</code>\\\n                                  </span>\",\n@@ -1343,6 +1343,7 @@ fn item_enum(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, e: &clean::\n \n             document(w, cx, variant, Some(it), HeadingOffset::H4);\n         }\n+        write!(w, \"</div>\");\n     }\n     let def_id = it.item_id.expect_def_id();\n     render_assoc_items(w, cx, it, def_id, AssocItemRender::All);"}, {"sha": "27bd893b7aae55b7e3a5fdf140071bf99ff2cf50", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9db23f8d30e8d00e2e5e18b51f7bb8e582520600/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/9db23f8d30e8d00e2e5e18b51f7bb8e582520600/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=9db23f8d30e8d00e2e5e18b51f7bb8e582520600", "patch": "@@ -706,16 +706,14 @@ a {\n }\n \n .small-section-header {\n-\tdisplay: flex;\n-\tjustify-content: space-between;\n \tposition: relative;\n }\n \n .small-section-header:hover > .anchor {\n \tdisplay: initial;\n }\n \n-.impl:hover > .anchor, .trait-impl:hover > .anchor {\n+.impl:hover > .anchor, .trait-impl:hover > .anchor, .variant:hover > .anchor {\n \tdisplay: inline-block;\n \tposition: absolute;\n }\n@@ -1234,12 +1232,6 @@ a.test-arrow:hover {\n \tfont-size: 1.25rem;\n }\n \n-h3.variant {\n-\tfont-weight: 600;\n-\tfont-size: 1.125rem;\n-\tmargin-bottom: 10px;\n-}\n-\n .sub-variant h4 {\n \tfont-size: 1rem;\n \tfont-weight: 400;\n@@ -1908,6 +1900,7 @@ in storage.js\n \t}\n }\n \n+.variant,\n .implementors-toggle > summary,\n .impl,\n #implementors-list > .docblock,\n@@ -1919,6 +1912,7 @@ in storage.js\n \tmargin-bottom: 0.75em;\n }\n \n+.variants > .docblock,\n .impl-items > .rustdoc-toggle[open]:not(:last-child),\n .methods > .rustdoc-toggle[open]:not(:last-child),\n .implementors-toggle[open]:not(:last-child) {"}, {"sha": "230abb236bd64aa1fba2215737c68bd63bc3b0e4", "filename": "src/test/rustdoc-gui/enum-variants.goml", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9db23f8d30e8d00e2e5e18b51f7bb8e582520600/src%2Ftest%2Frustdoc-gui%2Fenum-variants.goml", "raw_url": "https://github.com/rust-lang/rust/raw/9db23f8d30e8d00e2e5e18b51f7bb8e582520600/src%2Ftest%2Frustdoc-gui%2Fenum-variants.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fenum-variants.goml?ref=9db23f8d30e8d00e2e5e18b51f7bb8e582520600", "patch": "@@ -0,0 +1,5 @@\n+// Verifies that there is non-zero margin on variants and their docblocks.\n+goto: \"file://\" + |DOC_PATH| + \"/test_docs/enum.WhoLetTheDogOut.html\"\n+\n+assert-css: (\".variants > .variant\", {\"margin\": \"0px 0px 12px\"})\n+assert-css: (\".variants > .docblock\", {\"margin\": \"0px 0px 32px 24px\"})"}, {"sha": "db0d102b741846292198e1d04994b908ac2827cc", "filename": "src/test/rustdoc/issue-88600.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9db23f8d30e8d00e2e5e18b51f7bb8e582520600/src%2Ftest%2Frustdoc%2Fissue-88600.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9db23f8d30e8d00e2e5e18b51f7bb8e582520600/src%2Ftest%2Frustdoc%2Fissue-88600.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-88600.rs?ref=9db23f8d30e8d00e2e5e18b51f7bb8e582520600", "patch": "@@ -8,22 +8,22 @@ pub struct S;\n \n // @has issue_88600/enum.FooEnum.html\n pub enum FooEnum {\n-    // @has - '//*[@id=\"variant.HiddenTupleItem\"]//code' 'HiddenTupleItem(_)'\n+    // @has - '//*[@id=\"variant.HiddenTupleItem\"]//h3' 'HiddenTupleItem(_)'\n     // @count - '//*[@id=\"variant.HiddenTupleItem.field.0\"]' 0\n     HiddenTupleItem(#[doc(hidden)] H),\n-    // @has - '//*[@id=\"variant.MultipleHidden\"]//code' 'MultipleHidden(_, _)'\n+    // @has - '//*[@id=\"variant.MultipleHidden\"]//h3' 'MultipleHidden(_, _)'\n     // @count - '//*[@id=\"variant.MultipleHidden.field.0\"]' 0\n     // @count - '//*[@id=\"variant.MultipleHidden.field.1\"]' 0\n     MultipleHidden(#[doc(hidden)] H, #[doc(hidden)] H),\n-    // @has - '//*[@id=\"variant.MixedHiddenFirst\"]//code' 'MixedHiddenFirst(_, S)'\n+    // @has - '//*[@id=\"variant.MixedHiddenFirst\"]//h3' 'MixedHiddenFirst(_, S)'\n     // @count - '//*[@id=\"variant.MixedHiddenFirst.field.0\"]' 0\n     // @has - '//*[@id=\"variant.MixedHiddenFirst.field.1\"]' '1: S'\n     MixedHiddenFirst(#[doc(hidden)] H, /** dox */ S),\n-    // @has - '//*[@id=\"variant.MixedHiddenLast\"]//code' 'MixedHiddenLast(S, _)'\n+    // @has - '//*[@id=\"variant.MixedHiddenLast\"]//h3' 'MixedHiddenLast(S, _)'\n     // @has - '//*[@id=\"variant.MixedHiddenLast.field.0\"]' '0: S'\n     // @count - '//*[@id=\"variant.MixedHiddenLast.field.1\"]' 0\n     MixedHiddenLast(/** dox */ S, #[doc(hidden)] H),\n-    // @has - '//*[@id=\"variant.HiddenStruct\"]//code' 'HiddenStruct'\n+    // @has - '//*[@id=\"variant.HiddenStruct\"]//h3' 'HiddenStruct'\n     // @count - '//*[@id=\"variant.HiddenStruct.field.h\"]' 0\n     // @has - '//*[@id=\"variant.HiddenStruct.field.s\"]' 's: S'\n     HiddenStruct {"}]}