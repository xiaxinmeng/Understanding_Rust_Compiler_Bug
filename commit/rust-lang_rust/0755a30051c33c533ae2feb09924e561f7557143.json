{"sha": "0755a30051c33c533ae2feb09924e561f7557143", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3NTVhMzAwNTFjMzNjNTMzYWUyZmViMDk5MjRlNTYxZjc1NTcxNDM=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-05-21T00:29:21Z"}, "committer": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-05-22T06:10:08Z"}, "message": "stdlib: Use if/alt expressions in std::deque", "tree": {"sha": "a4c24f6900fc74763d64466767c0f153d687b433", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4c24f6900fc74763d64466767c0f153d687b433"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0755a30051c33c533ae2feb09924e561f7557143", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0755a30051c33c533ae2feb09924e561f7557143", "html_url": "https://github.com/rust-lang/rust/commit/0755a30051c33c533ae2feb09924e561f7557143", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0755a30051c33c533ae2feb09924e561f7557143/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6432599c5d7f2646c0f91c6badef5496f2fbc119", "url": "https://api.github.com/repos/rust-lang/rust/commits/6432599c5d7f2646c0f91c6badef5496f2fbc119", "html_url": "https://github.com/rust-lang/rust/commit/6432599c5d7f2646c0f91c6badef5496f2fbc119"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "c293711827a589ad3d5a18eed96458b364b65053", "filename": "src/lib/deque.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0755a30051c33c533ae2feb09924e561f7557143/src%2Flib%2Fdeque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0755a30051c33c533ae2feb09924e561f7557143/src%2Flib%2Fdeque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fdeque.rs?ref=0755a30051c33c533ae2feb09924e561f7557143", "patch": "@@ -32,11 +32,11 @@ fn create[T]() -> t[T] {\n \n         fn fill[T](uint i, uint nelts, uint lo,\n                    vec[cell[T]] old) -> cell[T] {\n-            if (i < nelts) {\n-                ret old.((lo + i) % nelts);\n+            ret if (i < nelts) {\n+                old.((lo + i) % nelts)\n             } else {\n-                ret option::none[T];\n-            }\n+                option::none[T]\n+            };\n         }\n \n         let uint nalloc = uint::next_power_of_two(nelts + 1u);\n@@ -45,11 +45,10 @@ fn create[T]() -> t[T] {\n     }\n \n     fn get[T](vec[cell[T]] elts, uint i) -> T {\n-        alt (elts.(i)) {\n-            case (option::some[T](?t)) { ret t; }\n-            case (_) { fail; }\n-        }\n-        fail;   // FIXME: remove me when exhaustiveness checking works\n+        ret alt (elts.(i)) {\n+            case (option::some[T](?t)) { t }\n+            case (_) { fail }\n+        };\n     }\n \n     obj deque[T](mutable uint nelts,"}]}