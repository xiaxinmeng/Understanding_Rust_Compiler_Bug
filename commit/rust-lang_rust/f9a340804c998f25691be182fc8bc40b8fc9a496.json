{"sha": "f9a340804c998f25691be182fc8bc40b8fc9a496", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5YTM0MDgwNGM5OThmMjU2OTFiZTE4MmZjOGJjNDBiOGZjOWE0OTY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2016-09-07T07:13:49Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2016-09-07T19:33:10Z"}, "message": "Add a test for CString drop", "tree": {"sha": "03674650e28b0248ecaa764ca3115c8280e4fc2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/03674650e28b0248ecaa764ca3115c8280e4fc2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9a340804c998f25691be182fc8bc40b8fc9a496", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9a340804c998f25691be182fc8bc40b8fc9a496", "html_url": "https://github.com/rust-lang/rust/commit/f9a340804c998f25691be182fc8bc40b8fc9a496", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9a340804c998f25691be182fc8bc40b8fc9a496/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04b776e5eca7aa49618a1425f08c8825e51b19dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/04b776e5eca7aa49618a1425f08c8825e51b19dc", "html_url": "https://github.com/rust-lang/rust/commit/04b776e5eca7aa49618a1425f08c8825e51b19dc"}], "stats": {"total": 49, "additions": 49, "deletions": 0}, "files": [{"sha": "960391bb8deac7a788692d89de0325b9f6538b64", "filename": "src/test/run-pass/cstring-drop.rs", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/f9a340804c998f25691be182fc8bc40b8fc9a496/src%2Ftest%2Frun-pass%2Fcstring-drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9a340804c998f25691be182fc8bc40b8fc9a496/src%2Ftest%2Frun-pass%2Fcstring-drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcstring-drop.rs?ref=f9a340804c998f25691be182fc8bc40b8fc9a496", "patch": "@@ -0,0 +1,49 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-emscripten\n+\n+// Test that `CString::new(\"hello\").unwrap().as_ptr()` pattern\n+// leads to failure.\n+\n+use std::env;\n+use std::ffi::{CString, CStr};\n+use std::os::raw::c_char;\n+use std::process::{Command, Stdio};\n+\n+fn main() {\n+    let args: Vec<String> = env::args().collect();\n+    if args.len() > 1 && args[1] == \"child\" {\n+        // Repeat several times to be more confident that\n+        // it is `Drop` for `CString` that does the cleanup,\n+        // and not just some lucky UB.\n+        let xs = vec![CString::new(\"Hello\").unwrap(); 10];\n+        let ys = xs.iter().map(|s| s.as_ptr()).collect::<Vec<_>>();\n+        drop(xs);\n+        assert!(ys.into_iter().any(is_hello));\n+        return;\n+    }\n+\n+    let output = Command::new(&args[0]).arg(\"child\").output().unwrap();\n+    assert!(!output.status.success());\n+}\n+\n+fn is_hello(s: *const c_char) -> bool {\n+    // `s` is a dangling pointer and reading it is technically\n+    // undefined behavior. But we want to prevent the most diabolical\n+    // kind of UB (apart from nasal demons): reading a value that was\n+    // previously written.\n+    //\n+    // Segfaulting or reading an empty string is Ok,\n+    // reading \"Hello\" is bad.\n+    let s = unsafe { CStr::from_ptr(s) };\n+    let hello = CString::new(\"Hello\").unwrap();\n+    s == hello.as_ref()\n+}"}]}