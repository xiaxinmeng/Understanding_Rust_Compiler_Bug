{"sha": "25d0650d0fba54ec1971426b2be55e95f8a0655f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1ZDA2NTBkMGZiYTU0ZWMxOTcxNDI2YjJiZTU1ZTk1ZjhhMDY1NWY=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-10-04T02:45:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-04T02:45:04Z"}, "message": "Rollup merge of #77447 - ssomers:btree_cleanup_8, r=Mark-Simulacrum\n\nBTreeMap: document DrainFilterInner better\n\nr? @Mark-Simulacrum", "tree": {"sha": "942609ec345d8ad2c456bedaa844f64d53fda1f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/942609ec345d8ad2c456bedaa844f64d53fda1f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25d0650d0fba54ec1971426b2be55e95f8a0655f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfeTcxCRBK7hj4Ov3rIwAAdHIIALMZuFdE7s5kkr87Z3JJ55Yd\nT09UF54kAKaNTkPLpg0ejlUJ2Qs6JIQk9kQcLDis7zvY5nZ3fxhEVlXVDUPj3Ijt\nzNqPd7lsQEgoUPI/TSGzKJxlFk7ViykLby0JjH1UwNQR6VOUgZGQG12u3bsIVeQX\nPqaCVPMl+Dglf6uGRjM1lODuByNgQ+88PD42Z4hdQJ8dXSpSGJErhQopODyU7haO\nVd9t4YEcvZsC72vyzOag+qOo/9vCDNHrOCDYhtrNYUBlyCs4PO9bmfPt7EL8Gm63\nInYSTjaY8tbVeB0Ye85SyI+0RWoTlQYkfib0Qzud9ObKUBXnhWi6RARk96CJoIA=\n=boAi\n-----END PGP SIGNATURE-----\n", "payload": "tree 942609ec345d8ad2c456bedaa844f64d53fda1f0\nparent 830d1a0e32c7ad6d34e22e07d498f4f0eda6fb5b\nparent 90c8b43bc3cb867715bd08d93c3bb6e06819c3b1\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1601779504 +0900\ncommitter GitHub <noreply@github.com> 1601779504 +0900\n\nRollup merge of #77447 - ssomers:btree_cleanup_8, r=Mark-Simulacrum\n\nBTreeMap: document DrainFilterInner better\n\nr? @Mark-Simulacrum\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25d0650d0fba54ec1971426b2be55e95f8a0655f", "html_url": "https://github.com/rust-lang/rust/commit/25d0650d0fba54ec1971426b2be55e95f8a0655f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25d0650d0fba54ec1971426b2be55e95f8a0655f/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "830d1a0e32c7ad6d34e22e07d498f4f0eda6fb5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/830d1a0e32c7ad6d34e22e07d498f4f0eda6fb5b", "html_url": "https://github.com/rust-lang/rust/commit/830d1a0e32c7ad6d34e22e07d498f4f0eda6fb5b"}, {"sha": "90c8b43bc3cb867715bd08d93c3bb6e06819c3b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/90c8b43bc3cb867715bd08d93c3bb6e06819c3b1", "html_url": "https://github.com/rust-lang/rust/commit/90c8b43bc3cb867715bd08d93c3bb6e06819c3b1"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "04f317401f15da46d0e70f1ebe088a454ff9a8d2", "filename": "library/alloc/src/collections/btree/map.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/25d0650d0fba54ec1971426b2be55e95f8a0655f/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25d0650d0fba54ec1971426b2be55e95f8a0655f/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs?ref=25d0650d0fba54ec1971426b2be55e95f8a0655f", "patch": "@@ -1701,10 +1701,14 @@ where\n /// Most of the implementation of DrainFilter, independent of the type\n /// of the predicate, thus also serving for BTreeSet::DrainFilter.\n pub(super) struct DrainFilterInner<'a, K: 'a, V: 'a> {\n+    /// Reference to the length field in the borrowed map, updated live.\n     length: &'a mut usize,\n-    // dormant_root is wrapped in an Option to be able to `take` it.\n+    /// Burried reference to the root field in the borrowed map.\n+    /// Wrapped in `Option` to allow drop handler to `take` it.\n     dormant_root: Option<DormantMutRef<'a, node::Root<K, V>>>,\n-    // cur_leaf_edge is wrapped in an Option because maps without root lack a leaf edge.\n+    /// Contains a leaf edge preceding the next element to be returned, or the last leaf edge.\n+    /// Empty if the map has no root, if iteration went beyond the last leaf edge,\n+    /// or if a panic occurred in the predicate.\n     cur_leaf_edge: Option<Handle<NodeRef<marker::Mut<'a>, K, V, marker::Leaf>, marker::Edge>>,\n }\n "}]}