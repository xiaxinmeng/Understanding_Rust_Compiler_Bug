{"sha": "fb9ea2eaca50108bcf1da1bdc6067986410f4240", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiOWVhMmVhY2E1MDEwOGJjZjFkYTFiZGM2MDY3OTg2NDEwZjQyNDA=", "commit": {"author": {"name": "Adrien T\u00e9tar", "email": "adri-from-59@hotmail.fr", "date": "2014-04-12T19:06:02Z"}, "committer": {"name": "Adrien T\u00e9tar", "email": "adri-from-59@hotmail.fr", "date": "2014-04-19T12:25:35Z"}, "message": "doc: add webfonts and tweak the styles accordingly", "tree": {"sha": "42d4cfb9716717ff3548056b404de5a8d5780f28", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/42d4cfb9716717ff3548056b404de5a8d5780f28"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb9ea2eaca50108bcf1da1bdc6067986410f4240", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb9ea2eaca50108bcf1da1bdc6067986410f4240", "html_url": "https://github.com/rust-lang/rust/commit/fb9ea2eaca50108bcf1da1bdc6067986410f4240", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb9ea2eaca50108bcf1da1bdc6067986410f4240/comments", "author": {"login": "adrientetar", "id": 1250894, "node_id": "MDQ6VXNlcjEyNTA4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1250894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adrientetar", "html_url": "https://github.com/adrientetar", "followers_url": "https://api.github.com/users/adrientetar/followers", "following_url": "https://api.github.com/users/adrientetar/following{/other_user}", "gists_url": "https://api.github.com/users/adrientetar/gists{/gist_id}", "starred_url": "https://api.github.com/users/adrientetar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adrientetar/subscriptions", "organizations_url": "https://api.github.com/users/adrientetar/orgs", "repos_url": "https://api.github.com/users/adrientetar/repos", "events_url": "https://api.github.com/users/adrientetar/events{/privacy}", "received_events_url": "https://api.github.com/users/adrientetar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "adrientetar", "id": 1250894, "node_id": "MDQ6VXNlcjEyNTA4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1250894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adrientetar", "html_url": "https://github.com/adrientetar", "followers_url": "https://api.github.com/users/adrientetar/followers", "following_url": "https://api.github.com/users/adrientetar/following{/other_user}", "gists_url": "https://api.github.com/users/adrientetar/gists{/gist_id}", "starred_url": "https://api.github.com/users/adrientetar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adrientetar/subscriptions", "organizations_url": "https://api.github.com/users/adrientetar/orgs", "repos_url": "https://api.github.com/users/adrientetar/repos", "events_url": "https://api.github.com/users/adrientetar/events{/privacy}", "received_events_url": "https://api.github.com/users/adrientetar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "950312960a8d975f77c901d2710efcc59a5a3eb2", "url": "https://api.github.com/repos/rust-lang/rust/commits/950312960a8d975f77c901d2710efcc59a5a3eb2", "html_url": "https://github.com/rust-lang/rust/commit/950312960a8d975f77c901d2710efcc59a5a3eb2"}], "stats": {"total": 203, "additions": 129, "deletions": 74}, "files": [{"sha": "604a65dc8a9b98cd797e6555d1802a49c6067cef", "filename": "src/doc/full-toc.inc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/fb9ea2eaca50108bcf1da1bdc6067986410f4240/src%2Fdoc%2Ffull-toc.inc", "raw_url": "https://github.com/rust-lang/rust/raw/fb9ea2eaca50108bcf1da1bdc6067986410f4240/src%2Fdoc%2Ffull-toc.inc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ffull-toc.inc?ref=fb9ea2eaca50108bcf1da1bdc6067986410f4240", "patch": "@@ -1,6 +1,11 @@\n <style>\n   /* Display the full TOC */\n-  #TOC ul ul {\n+  nav {\n+    column-count: auto;\n+    -moz-column-count: auto;\n+    -webkit-column-count: auto;\n+  }\n+  nav ul ul {\n     display: block;\n     padding-left: 2em;\n   }"}, {"sha": "948347bfd090efd1cdda5733ea542b6dc58da341", "filename": "src/doc/guide-lifetimes.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fb9ea2eaca50108bcf1da1bdc6067986410f4240/src%2Fdoc%2Fguide-lifetimes.md", "raw_url": "https://github.com/rust-lang/rust/raw/fb9ea2eaca50108bcf1da1bdc6067986410f4240/src%2Fdoc%2Fguide-lifetimes.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fguide-lifetimes.md?ref=fb9ea2eaca50108bcf1da1bdc6067986410f4240", "patch": "@@ -236,7 +236,7 @@ it. It would violate memory safety for the box that was originally\n assigned to `x` to be garbage-collected, since a non-heap\n pointer *`y`* still points into it.\n \n-> ***Note:*** Our current implementation implements the garbage collector\n+> *Note:* Our current implementation implements the garbage collector\n > using reference counting and cycle detection.\n \n For this reason, whenever an `&` expression borrows the interior of a\n@@ -674,7 +674,7 @@ Named lifetime notation can also be used to control the flow of execution:\n }\n ~~~\n \n-> ***Note:*** Labelled breaks are not currently supported within `while` loops.\n+> *Note:* Labelled breaks are not currently supported within `while` loops.\n \n Named labels are hygienic and can be used safely within macros.\n See the macros guide section on hygiene for more details."}, {"sha": "e0d9a6050f41a2fb33b46e974289ef73ebb4f345", "filename": "src/doc/guide-tasks.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb9ea2eaca50108bcf1da1bdc6067986410f4240/src%2Fdoc%2Fguide-tasks.md", "raw_url": "https://github.com/rust-lang/rust/raw/fb9ea2eaca50108bcf1da1bdc6067986410f4240/src%2Fdoc%2Fguide-tasks.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fguide-tasks.md?ref=fb9ea2eaca50108bcf1da1bdc6067986410f4240", "patch": "@@ -462,7 +462,7 @@ an `Error` result.\n \n [`Result`]: std/result/index.html\n \n-> ***Note:*** A failed task does not currently produce a useful error\n+> *Note:* A failed task does not currently produce a useful error\n > value (`try` always returns `Err(())`). In the\n > future, it may be possible for tasks to intercept the value passed to\n > `fail!()`."}, {"sha": "721b5b2b659d1a376f3d14de09f5f3905bf99bea", "filename": "src/doc/po/ja/tutorial.md.po", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/fb9ea2eaca50108bcf1da1bdc6067986410f4240/src%2Fdoc%2Fpo%2Fja%2Ftutorial.md.po", "raw_url": "https://github.com/rust-lang/rust/raw/fb9ea2eaca50108bcf1da1bdc6067986410f4240/src%2Fdoc%2Fpo%2Fja%2Ftutorial.md.po", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fpo%2Fja%2Ftutorial.md.po?ref=fb9ea2eaca50108bcf1da1bdc6067986410f4240", "patch": "@@ -196,11 +196,11 @@ msgstr \"\"\n #. type: Plain text\n #: src/doc/tutorial.md:57\n msgid \"\"\n-\"> ***Warning:*** Rust is a language under ongoing development. Notes > about \"\n+\"> *Warning:* Rust is a language under ongoing development. Notes > about \"\n \"potential changes to the language, implementation > deficiencies, and other \"\n \"caveats appear offset in blockquotes.\"\n msgstr \"\"\n-\"> ***\u8b66\u544a:*** Rust \u306f\u958b\u767a\u9014\u4e0a\u306e\u8a00\u8a9e\u3067\u3059\u3002\u5c06\u6765\u4e88\u5b9a\u3055\u308c\u3066\u3044\u308b\u8a00\u8a9e\u3078\u306e\u5909\u66f4\u3084\u3001\u5b9f\"\n+\"> *\u8b66\u544a:* Rust \u306f\u958b\u767a\u9014\u4e0a\u306e\u8a00\u8a9e\u3067\u3059\u3002\u5c06\u6765\u4e88\u5b9a\u3055\u308c\u3066\u3044\u308b\u8a00\u8a9e\u3078\u306e\u5909\u66f4\u3084\u3001\u5b9f\"\n \"\u88c5\u4e0a\u306e\u4e0d\u5099\u3001\u305d\u306e\u4ed6\u306e\u6ce8\u610f\u4e8b\u9805\u306a\u3069\u3001 blockquote \u306e\u6bb5\u843d (\u3053\u306e\u6bb5\u843d\u3082\u305d\u3046\u3067\u3059) \u306b\"\n \"\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\"\n \n@@ -287,13 +287,13 @@ msgstr \"\"\n #. type: Plain text\n #: src/doc/tutorial.md:88\n msgid \"\"\n-\"> ***Note:*** Windows users should read the detailed > \\\"[getting started]\"\n+\"> *Note:* Windows users should read the detailed > \\\"[getting started]\"\n \"[wiki-start]\\\" notes on the wiki. Even when using > the binary installer, \"\n \"the Windows build requires a MinGW installation, > the precise details of \"\n \"which are not discussed here. Finally, `rustc` may > need to be [referred to \"\n \"as `rustc.exe`][bug-3319]. It's a bummer, we > know.\"\n msgstr \"\"\n-\"> ***\u6ce8\u610f:*** Windows \u30e6\u30fc\u30b6\u30fc\u306f wiki \u306e [getting started][wiki-start] \u306e\u8a18\u4e8b\"\n+\"> *\u6ce8\u610f:* Windows \u30e6\u30fc\u30b6\u30fc\u306f wiki \u306e [getting started][wiki-start] \u306e\u8a18\u4e8b\"\n \"\u3092\u8aad\u3093\u3067\u304f\u3060\u3055\u3044\u3002 \u672c\u66f8\u3067\u306f\u8a73\u7d30\u3092\u8aac\u660e\u3057\u307e\u305b\u3093\u304c\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u3067\"\n \"\u3082\u3001MinGW \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306a\u3069\u3001\u8ffd\u52a0\u306e\u624b\u9806\u304c\u5fc5\u8981\u3067\u3059\u3002\u307e\u305f\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f \"\n \"`rustc` \u3067\u306f\u306a\u304f\u3001 [`rustc.exe` \u3068\u3057\u3066\u547c\u3073\u51fa\u3059\u5fc5\u8981\u304c\u3042\u308b][bug-3319] \u304b\u3082\u3057\u308c\"\n@@ -1254,11 +1254,11 @@ msgstr \"\"\n #. type: Plain text\n #: src/doc/tutorial.md:504\n msgid \"\"\n-\"> ***Note:*** The following code makes use of tuples (`(f64, f64)`) which > \"\n+\"> *Note:* The following code makes use of tuples (`(f64, f64)`) which > \"\n \"are explained in section 5.3. For now you can think of tuples as a list of > \"\n \"items.\"\n msgstr \"\"\n-\"> ***\u6ce8\u610f:*** \u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u4f8b\u3067\u306f5.3 \u7bc0\u3067\u8aac\u660e\u3055\u308c\u308b\u30bf\u30d7\u30eb (`(f64, f64)`) \u3092\"\n+\"> *\u6ce8\u610f:* \u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u4f8b\u3067\u306f5.3 \u7bc0\u3067\u8aac\u660e\u3055\u308c\u308b\u30bf\u30d7\u30eb (`(f64, f64)`) \u3092\"\n \"\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\u73fe\u6642\u70b9\u3067\u306f\u3001\u30bf\u30d7\u30eb\u306f\u9805\u76ee\u306e\u30ea\u30b9\u30c8\u306e\u3088\u3046\u306a\u3082\u306e\u3060\u3068\u307f\u306a\u3057\u3066\u304f\u3060\u3055\"\n \"\u3044\u3002\"\n \n@@ -3005,11 +3005,11 @@ msgstr \"\"\n #. type: Plain text\n #: src/doc/tutorial.md:1774\n msgid \"\"\n-\"> ***Note:*** Both the syntax and the semantics will be changing > in small \"\n+\"> *Note:* Both the syntax and the semantics will be changing > in small \"\n \"ways. At the moment they can be unsound in some > scenarios, particularly \"\n \"with non-copyable types.\"\n msgstr \"\"\n-\"> ***\u6ce8\u610f*** \u30b3\u30fc\u30c9\u306e\u6587\u6cd5\u3068\u610f\u5473\u306f\u5c06\u6765\u7684\u306b\u5909\u66f4\u3055\u308c\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u73fe\u6642\u70b9\u3067\u306f\"\n+\"> *\u6ce8\u610f* \u30b3\u30fc\u30c9\u306e\u6587\u6cd5\u3068\u610f\u5473\u306f\u5c06\u6765\u7684\u306b\u5909\u66f4\u3055\u308c\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u73fe\u6642\u70b9\u3067\u306f\"\n \"\u3044\u304f\u3064\u304b\u306e\u72b6\u6cc1\u3001\u7279\u306b\u30b3\u30d4\u30fc\u3067\u304d\u306a\u3044\u578b\u304c\u95a2\u9023\u3059\u308b\u30b1\u30fc\u30b9\u306b\u304a\u3044\u3066\u671b\u307e\u3057\u304f\u306a\u3044\u632f\u308b\"\n \"\u821e\u3044\u304c\u8d77\u3053\u3055\u308c\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\"\n \n@@ -3660,10 +3660,10 @@ msgstr \"\"\n #. type: Plain text\n #: src/doc/tutorial.md:2099\n msgid \"\"\n-\"> ***Note:*** These two traits were referred to as 'kinds' in earlier > \"\n+\"> *Note:* These two traits were referred to as 'kinds' in earlier > \"\n \"iterations of the language, and often still are.\"\n msgstr \"\"\n-\"> ***\u6ce8\u610f*** \u3053\u308c\u30892\u3064\u306e\u30c8\u30ec\u30a4\u30c8\u306f\u3001\u4ee5\u524d\u306f \u300c\u7a2e\u300d (kind) \u3068\u547c\u3070\u308c\u3066\u304a\u308a\u3001\u73fe\u5728\"\n+\"> *\u6ce8\u610f* \u3053\u308c\u30892\u3064\u306e\u30c8\u30ec\u30a4\u30c8\u306f\u3001\u4ee5\u524d\u306f \u300c\u7a2e\u300d (kind) \u3068\u547c\u3070\u308c\u3066\u304a\u308a\u3001\u73fe\u5728\"\n \"\u3067\u3082\u305d\u3046\u547c\u3070\u308c\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\"\n \n #. type: Plain text\n@@ -4374,9 +4374,9 @@ msgstr \"\"\n \n #. type: Plain text\n #: src/doc/tutorial.md:2511\n-msgid \"> ***Note:*** Trait inheritance does not actually work with objects yet\"\n+msgid \"> *Note:* Trait inheritance does not actually work with objects yet\"\n msgstr \"\"\n-\"> ***\u6ce8\u610f*** \u30c8\u30ec\u30a4\u30c8\u306e\u7d99\u627f\u306f\u3001\u5b9f\u969b\u306b\u306f\u307e\u3060\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3057\u3066\u306f\u52d5\u4f5c\u3057\u307e\u305b\"\n+\"> *\u6ce8\u610f* \u30c8\u30ec\u30a4\u30c8\u306e\u7d99\u627f\u306f\u3001\u5b9f\u969b\u306b\u306f\u307e\u3060\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3057\u3066\u306f\u52d5\u4f5c\u3057\u307e\u305b\"\n \"\u3093\u3002\"\n \n #. type: Plain text"}, {"sha": "2177123cfde7bca345363f33848cbb9ee43eca5b", "filename": "src/doc/rust.css", "status": "modified", "additions": 79, "deletions": 22, "changes": 101, "blob_url": "https://github.com/rust-lang/rust/blob/fb9ea2eaca50108bcf1da1bdc6067986410f4240/src%2Fdoc%2Frust.css", "raw_url": "https://github.com/rust-lang/rust/raw/fb9ea2eaca50108bcf1da1bdc6067986410f4240/src%2Fdoc%2Frust.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frust.css?ref=fb9ea2eaca50108bcf1da1bdc6067986410f4240", "patch": "@@ -10,13 +10,43 @@\n  * option. This file may not be copied, modified, or distributed\n  * except according to those terms.\n  */\n+@font-face {\n+    font-family: 'Fira Sans';\n+    font-style: normal;\n+    font-weight: 400;\n+    src: local('Fira Sans'), url(\"http://rust-lang.org/fonts/FiraSans-Regular.woff\") format('woff');\n+}\n+@font-face {\n+    font-family: 'Fira Sans';\n+    font-style: normal;\n+    font-weight: 500;\n+    src: local('Fira Sans Medium'), url(\"http://rust-lang.org/fonts/FiraSans-Medium.woff\") format('woff');\n+}\n+@font-face {\n+    font-family: 'Heuristica';\n+    font-style: normal;\n+    font-weight: 400;\n+    src: local('Heuristica Regular'), url(\"http://rust-lang.org/fonts/Heuristica-Regular.woff\") format('woff');\n+}\n+@font-face {\n+    font-family: 'Heuristica';\n+    font-style: italic;\n+    font-weight: 400;\n+    src: local('Heuristica Italic'), url(\"http://rust-lang.org/fonts/Heuristica-Italic.woff\") format('woff');\n+}\n+@font-face {\n+    font-family: 'Heuristica';\n+    font-style: normal;\n+    font-weight: 700;\n+    src: local('Heuristica Bold'), url(\"http://rust-lang.org/fonts/Heuristica-Bold.woff\") format('woff');\n+}\n /* Global page semantics\n    ========================================================================== */\n body {\n     margin: 0 auto;\n     padding: 0 15px;\n-    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n-    font-size: 14px;\n+    font-family: Heuristica, \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n+    font-size: 18px;\n     color: #333;\n     line-height: 1.428571429;\n }\n@@ -26,24 +56,36 @@ body {\n     }\n }\n \n+h1, h2, h3, h4, h5, h6, nav, #versioninfo {\n+    font-family: \"Fira Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n+}\n h1, h2, h3, h4, h5, h6 {\n     color: black;\n-    font-weight: 500;\n+    font-weight: 400;\n     line-height: 1.1;\n }\n h1, h2, h3 {\n     margin-top: 20px;\n     margin-bottom: 10px;\n }\n+@media (min-width: 1170px) {\n+    h1, h2, h3 {\n+        margin-top: 30px;\n+        margin-bottom: 15px;\n+    }\n+}\n h4, h5, h6 {\n     margin-top: 12px;\n     margin-bottom: 10px;\n-    padding: .2em .8em;\n+    padding: 5px 10px;\n+}\n+h5, h6 {\n     text-decoration: underline;\n }\n \n h1 {\n-    font-size: 36px;\n+    font-size: 28px;\n+    font-weight: 500;\n     padding: .1em .4em;\n     margin: 0.67em 0;\n     border-bottom: 2px solid #ddd;\n@@ -52,7 +94,7 @@ h1.title {\n     line-height: 1.5em;\n }\n h2 {\n-    font-size: 30px;\n+    font-size: 26px;\n     padding: .2em .5em;\n     border-bottom: 1px solid #ddd;\n }\n@@ -62,17 +104,34 @@ h3 {\n     border-bottom: 1px solid #DDE8FC;\n }\n h4 {\n-    font-size: 18px;\n+    font-size: 22px;\n }\n h5 {\n-    font-size: 16px;\n+    font-size: 20px;\n }\n h6 {\n-    font-size: 14px;\n+    font-size: 18px;\n+}\n+@media (min-width: 992px) {\n+    h1 {\n+        font-size: 36px;\n+    }\n+    h2 {\n+        font-size: 30px;\n+    }\n+    h3 {\n+        font-size: 26px;\n+    }\n }\n \n+nav {\n+    column-count: 2;\n+    -moz-column-count: 2;\n+    -webkit-column-count: 2;\n+    font-size: 15px;\n+}\n p {\n-    margin: 0 0 10px;\n+    margin: 0 0 1em 0;\n }\n \n strong {\n@@ -85,10 +144,10 @@ em {\n \n footer {\n     border-top: 1px solid #ddd;\n-    font-size: 12px;\n+    font-size: 14.3px;\n     font-style: italic;\n-    padding-top: 4px;\n-    margin-top: 4em;\n+    padding-top: 5px;\n+    margin-top: 3em;\n     margin-bottom: 1em;\n }\n \n@@ -130,16 +189,14 @@ pre {\n     border-radius: 0.5em;\n     white-space: pre-wrap;\n     padding: 9.5px;\n-    margin: 10px 0;\n+    margin: 20px 0;\n     font-size: 13px;\n     word-break: break-all;\n     word-wrap: break-word;\n }\n code {\n-    padding: 2px 4px;\n-    font-size: 90%;\n-    color: #C7254E;\n-    background-color: #F9F2F4;\n+    padding: 0 2px;\n+    color: #8D1A38;\n     white-space: nowrap;\n }\n pre code {\n@@ -170,7 +227,7 @@ pre.rust .lifetime { color: #B76514; }\n     margin: 0.5em;\n     font-size: 1.1em;\n }\n-@media only screen, handheld and (min-width: 768px) {\n+@media handheld, only screen and (min-width: 768px) {\n     #versioninfo {\n         position: fixed;\n         bottom: 0px;\n@@ -185,7 +242,7 @@ pre.rust .lifetime { color: #B76514; }\n }\n #versioninfo a.hash {\n     color: gray;\n-    font-size: 70%;\n+    font-size: 80%;\n }\n \n blockquote {\n@@ -221,13 +278,13 @@ dd {\n     margin-left: 0;\n }\n \n-#TOC ul {\n+nav ul {\n     list-style-type: none;\n     padding-left: 0px;\n }\n \n /* Only display one level of hierarchy in the TOC */\n-#TOC ul ul {\n+nav ul ul {\n     display: none;\n }\n "}, {"sha": "93da526132244f18f8a6957abdda945e2f418ea7", "filename": "src/doc/rust.md", "status": "modified", "additions": 14, "deletions": 20, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/fb9ea2eaca50108bcf1da1bdc6067986410f4240/src%2Fdoc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/fb9ea2eaca50108bcf1da1bdc6067986410f4240/src%2Fdoc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frust.md?ref=fb9ea2eaca50108bcf1da1bdc6067986410f4240", "patch": "@@ -96,9 +96,9 @@ The section [Special Unicode Productions](#special-unicode-productions) lists th\n \n ## String table productions\n \n-Some rules in the grammar -- notably [unary\n+Some rules in the grammar &mdash; notably [unary\n operators](#unary-operator-expressions), [binary\n-operators](#binary-operator-expressions), and [keywords](#keywords) --\n+operators](#binary-operator-expressions), and [keywords](#keywords) &mdash;\n are given in a simplified form: as a listing of a table of unquoted,\n printable whitespace-separated strings. These cases form a subset of\n the rules regarding the [token](#tokens) rule, and are assumed to be\n@@ -645,7 +645,7 @@ The processing of that source file may result in other source files being loaded\n Source files have the extension `.rs`.\n \n A Rust source file describes a module, the name and\n-location of which -- in the module tree of the current crate -- are defined\n+location of which &mdash; in the module tree of the current crate &mdash; are defined\n from outside the source file: either by an explicit `mod_item` in\n a referencing source file, or by the name of the crate itself.\n \n@@ -709,7 +709,7 @@ Some items form an implicit scope for the declaration of sub-items. In other\n words, within a function or module, declarations of items can (in many cases)\n be mixed with the statements, control blocks, and similar artifacts that\n otherwise compose the item body. The meaning of these scoped items is the same\n-as if the item was declared outside the scope -- it is still a static item --\n+as if the item was declared outside the scope &mdash; it is still a static item &mdash;\n except that the item's *path name* within the module namespace is qualified by\n the name of the enclosing item, or is private to the enclosing item (in the\n case of functions).\n@@ -1332,7 +1332,6 @@ Traits are implemented for specific types through separate [implementations](#im\n ~~~~\n # type Surface = int;\n # type BoundingBox = int;\n-\n trait Shape {\n     fn draw(&self, Surface);\n     fn bounding_box(&self) -> BoundingBox;\n@@ -1363,7 +1362,6 @@ For example:\n ~~~~\n # type Surface = int;\n # trait Shape { fn draw(&self, Surface); }\n-\n fn draw_twice<T: Shape>(surface: Surface, sh: T) {\n     sh.draw(surface);\n     sh.draw(surface);\n@@ -1379,7 +1377,6 @@ to pointers to the trait name, used as a type.\n # trait Shape { }\n # impl Shape for int { }\n # let mycircle = 0;\n-\n let myshape: ~Shape = ~mycircle as ~Shape;\n ~~~~\n \n@@ -1440,7 +1437,6 @@ Likewise, supertrait methods may also be called on trait objects.\n # impl Shape for int { fn area(&self) -> f64 { 0.0 } }\n # impl Circle for int { fn radius(&self) -> f64 { 0.0 } }\n # let mycircle = 0;\n-\n let mycircle: Circle = ~mycircle as ~Circle;\n let nonsense = mycircle.radius() * mycircle.area();\n ~~~~\n@@ -1457,7 +1453,6 @@ Implementations are defined with the keyword `impl`.\n # struct BoundingBox {x: f64, y: f64, width: f64, height: f64};\n # trait Shape { fn draw(&self, Surface); fn bounding_box(&self) -> BoundingBox; }\n # fn do_draw_circle(s: Surface, c: Circle) { }\n-\n struct Circle {\n     radius: f64,\n     center: Point,\n@@ -1490,7 +1485,6 @@ Implementation parameters are written after the `impl` keyword.\n \n ~~~~\n # trait Seq<T> { }\n-\n impl<T> Seq<T> for ~[T] {\n    /* ... */\n }\n@@ -1730,7 +1724,7 @@ attr : ident [ '=' literal\n              | '(' attr_list ')' ] ? ;\n ~~~~\n \n-Static entities in Rust -- crates, modules and items -- may have _attributes_\n+Static entities in Rust &mdash; crates, modules and items &mdash; may have _attributes_\n applied to them. Attributes in Rust are modeled on Attributes in ECMA-335,\n with the syntax coming from ECMA-334 (C#). An attribute is a general,\n free-form metadatum that is interpreted according to name, convention, and\n@@ -2352,8 +2346,8 @@ The declared names may denote new slots or new items.\n #### Item declarations\n \n An _item declaration statement_ has a syntactic form identical to an\n-[item](#items) declaration within a module. Declaring an item -- a function,\n-enumeration, structure, type, static, trait, implementation or module -- locally\n+[item](#items) declaration within a module. Declaring an item &mdash; a function,\n+enumeration, structure, type, static, trait, implementation or module &mdash; locally\n within a statement block is simply a way of restricting its scope to a narrow\n region containing all of its uses; it is otherwise identical in meaning to\n declaring the item outside the statement block.\n@@ -3382,7 +3376,7 @@ but must be denoted by named reference to an [`enum` item](#enumerations).\n \n ### Recursive types\n \n-Nominal types -- [enumerations](#enumerated-types) and [structures](#structure-types) -- may be recursive.\n+Nominal types &mdash; [enumerations](#enumerated-types) and [structures](#structure-types) &mdash; may be recursive.\n That is, each `enum` constructor or `struct` field may refer, directly or indirectly, to the enclosing `enum` or `struct` type itself.\n Such recursion has restrictions:\n \n@@ -3692,7 +3686,7 @@ entry to each function as the task executes. A stack allocation is reclaimed\n when control leaves the frame containing it.\n \n The _heap_ is a general term that describes two separate sets of boxes:\n-managed boxes -- which may be subject to garbage collection -- and owned\n+managed boxes &mdash; which may be subject to garbage collection &mdash; and owned\n boxes.  The lifetime of an allocation in the heap depends on the lifetime of\n the box values pointing to it. Since box values may themselves be passed in\n and out of frames, or stored in the heap, heap allocations may outlive the\n@@ -3758,7 +3752,7 @@ initialized; this is enforced by the compiler.\n ### Owned boxes\n \n An  _owned box_ is a reference to a heap allocation holding another value, which is constructed\n-by the prefix *tilde* sigil `~`\n+by the prefix *tilde* sigil `~`.\n \n An example of an owned box type and value:\n \n@@ -3793,7 +3787,7 @@ The runtime scheduler maps tasks to a certain number of operating-system threads\n By default, the scheduler chooses the number of threads based on\n the number of concurrent physical CPUs detected at startup.\n It's also possible to override this choice at runtime.\n-When the number of tasks exceeds the number of threads -- which is likely --\n+When the number of tasks exceeds the number of threads &mdash; which is likely &mdash;\n the scheduler multiplexes the tasks onto threads.^[\n This is an M:N scheduler,\n which is known to give suboptimal results for CPU-bound concurrency problems.\n@@ -3832,14 +3826,14 @@ that cause transitions between the states. The lifecycle states of a task are:\n * failing\n * dead\n \n-A task begins its lifecycle -- once it has been spawned -- in the *running*\n+A task begins its lifecycle &mdash; once it has been spawned &mdash; in the *running*\n state. In this state it executes the statements of its entry function, and any\n functions called by the entry function.\n \n A task may transition from the *running* state to the *blocked*\n state any time it makes a blocking communication call. When the\n-call can be completed -- when a message arrives at a sender, or a\n-buffer opens to receive a message -- then the blocked task will\n+call can be completed &mdash; when a message arrives at a sender, or a\n+buffer opens to receive a message &mdash; then the blocked task will\n unblock and transition back to *running*.\n \n A task may transition to the *failing* state at any time, due being"}, {"sha": "ab946cb13d56562e76e04a71e7da020a90be1bf4", "filename": "src/doc/tutorial.md", "status": "modified", "additions": 15, "deletions": 16, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/fb9ea2eaca50108bcf1da1bdc6067986410f4240/src%2Fdoc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/fb9ea2eaca50108bcf1da1bdc6067986410f4240/src%2Fdoc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftutorial.md?ref=fb9ea2eaca50108bcf1da1bdc6067986410f4240", "patch": "@@ -51,13 +51,13 @@ fragments of programs that don't compile on their own. To try them\n out, you might have to wrap them in `fn main() { ... }`, and make sure\n they don't contain references to names that aren't actually defined.\n \n-> ***Warning:*** Rust is a language under ongoing development. Notes\n+> *Warning:* Rust is a language under ongoing development. Notes\n > about potential changes to the language, implementation\n > deficiencies, and other caveats appear offset in blockquotes.\n \n # Getting started\n \n-> ***Warning:*** The tarball and installer links are for the most recent\n+> *Warning:* The tarball and installer links are for the most recent\n > release, not master. To use master, you **must** build from [git].\n \n The Rust compiler currently must be built from a [tarball] or [git], unless\n@@ -79,7 +79,7 @@ Snapshot binaries are currently built and tested on several platforms:\n You may find that other platforms work, but these are our \"tier 1\"\n supported build environments that are most likely to work.\n \n-> ***Note:*** Windows users should read the detailed\n+> *Note:* Windows users should read the detailed\n > [Getting started][wiki-start] notes on the wiki. Even when using\n > the binary installer, the Windows build requires a MinGW installation,\n > the precise details of which are not discussed here.\n@@ -130,7 +130,7 @@ fn main() {\n     println!(\"hello?\");\n }\n ~~~~\n-> ***Note:*** An identifier followed by an exclamation point, like\n+> *Note:* An identifier followed by an exclamation point, like\n > `println!`, is a macro invocation.  Macros are explained\n > [later](#syntax-extensions); for now just remember to include the\n > exclamation point.\n@@ -498,7 +498,7 @@ omitted.\n A powerful application of pattern matching is *destructuring*:\n matching in order to bind names to the contents of data types.\n \n-> ***Note:*** The following code makes use of tuples (`(f64, f64)`) which\n+> *Note:* The following code makes use of tuples (`(f64, f64)`) which\n > are explained in section 5.3. For now you can think of tuples as a list of\n > items.\n \n@@ -781,7 +781,7 @@ fn area(sh: Shape) -> f64 {\n }\n ~~~~\n \n-> ***Note:*** This feature of the compiler is currently gated behind the\n+> *Note:* This feature of the compiler is currently gated behind the\n > `#[feature(struct_variant)]` directive. More about these directives can be\n > found in the manual.\n \n@@ -841,7 +841,6 @@ values can be extracted with pattern matching:\n \n ~~~\n # struct Inches(int);\n-\n let length_with_unit = Inches(10);\n let Inches(integer_length) = length_with_unit;\n println!(\"length is {} inches\", integer_length);\n@@ -1061,7 +1060,7 @@ list -> | Cons | 1 | ~ | -> | Cons | 2 | ~ | -> | Cons | 3 | ~ | -> | Nil\n         +--------------+    +--------------+    +--------------+    +--------------+\n ~~~\n \n-> ***Note:*** the above diagram shows the logical contents of the enum. The actual\n+> *Note:* the above diagram shows the logical contents of the enum. The actual\n > memory layout of the enum may vary. For example, for the `List` enum shown\n > above, Rust guarantees that there will be no enum tag field in the actual\n > structure. See the language reference for more details.\n@@ -1209,7 +1208,7 @@ let ys = Cons(5, ~Cons(10, ~Nil));\n assert!(eq(&xs, &ys));\n ~~~\n \n-> ***Note:*** Rust doesn't guarantee [tail-call](http://en.wikipedia.org/wiki/Tail_call) optimization,\n+> *Note:* Rust doesn't guarantee [tail-call](http://en.wikipedia.org/wiki/Tail_call) optimization,\n > but LLVM is able to handle a simple case like this with optimizations enabled.\n \n ## Lists of other types\n@@ -1220,7 +1219,7 @@ element type.\n \n The `u32` in the previous definition can be substituted with a type parameter:\n \n-> ***Note:*** The following code introduces generics, which are explained in a\n+> *Note:* The following code introduces generics, which are explained in a\n > [dedicated section](#generics).\n \n ~~~\n@@ -1794,7 +1793,7 @@ spawn(proc() {\n });\n ~~~~\n \n-> ***Note:*** If you want to see the output of `debug!` statements, you will need to turn on\n+> *Note:* If you want to see the output of `debug!` statements, you will need to turn on\n > `debug!` logging.  To enable `debug!` logging, set the RUST_LOG environment\n > variable to the name of your crate, which, for a file named `foo.rs`, will be\n > `foo` (e.g., with bash, `export RUST_LOG=foo`).\n@@ -1816,7 +1815,7 @@ call_twice(closure);\n call_twice(function);\n ~~~~\n \n-> ***Note:*** Both the syntax and the semantics will be changing\n+> *Note:* Both the syntax and the semantics will be changing\n > in small ways. At the moment they can be unsound in some\n > scenarios, particularly with non-copyable types.\n \n@@ -2011,7 +2010,7 @@ a function that returns `Option<T>` instead of `T`.\n fn radius(shape: Shape) -> Option<f64> {\n     match shape {\n         Circle(_, radius) => Some(radius),\n-        Rectangle(..)      => None\n+        Rectangle(..)     => None\n     }\n }\n ~~~~\n@@ -2101,7 +2100,7 @@ references, or types where the only contained references\n have the `'static` lifetime. (For more on named lifetimes and their uses,\n see the [references and lifetimes guide][lifetimes].)\n \n-> ***Note:*** These built-in traits were referred to as 'kinds' in earlier\n+> *Note:* These built-in traits were referred to as 'kinds' in earlier\n > iterations of the language, and often still are.\n \n Additionally, the `Drop` trait is used to define destructors. This\n@@ -2512,7 +2511,7 @@ let mycircle: ~Circle = concrete as ~Circle;\n let nonsense = mycircle.radius() * mycircle.area();\n ~~~\n \n-> ***Note:*** Trait inheritance does not actually work with objects yet\n+> *Note:* Trait inheritance does not actually work with objects yet\n \n ## Deriving implementations for traits\n \n@@ -2966,7 +2965,7 @@ use farm::*;\n # fn main() { cow(); chicken() }\n ~~~\n \n-> ***Note:*** This feature of the compiler is currently gated behind the\n+> *Note:* This feature of the compiler is currently gated behind the\n > `#[feature(globs)]` directive. More about these directives can be found in\n > the manual.\n "}]}