{"sha": "b87e4f6421ad3015251e0162c632e25fc7c90e4e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4N2U0ZjY0MjFhZDMwMTUyNTFlMDE2MmM2MzJlMjVmYzdjOTBlNGU=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-09-15T02:32:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-09-15T02:32:48Z"}, "message": "Rollup merge of #44541 - GuillaumeGomez:openoptions-docs, r=QuietMisdreavus\n\nOpenoptions docs\n\nr? @QuietMisdreavus", "tree": {"sha": "f4a9803c094feaa22c7290ddca6496c796c54ddb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4a9803c094feaa22c7290ddca6496c796c54ddb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b87e4f6421ad3015251e0162c632e25fc7c90e4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b87e4f6421ad3015251e0162c632e25fc7c90e4e", "html_url": "https://github.com/rust-lang/rust/commit/b87e4f6421ad3015251e0162c632e25fc7c90e4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b87e4f6421ad3015251e0162c632e25fc7c90e4e/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e478fd51226103660867d1bd6c9a78d38c1481b", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e478fd51226103660867d1bd6c9a78d38c1481b", "html_url": "https://github.com/rust-lang/rust/commit/3e478fd51226103660867d1bd6c9a78d38c1481b"}, {"sha": "c4044ee39a7da275dcbb3f382bda3d15a0e54f61", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4044ee39a7da275dcbb3f382bda3d15a0e54f61", "html_url": "https://github.com/rust-lang/rust/commit/c4044ee39a7da275dcbb3f382bda3d15a0e54f61"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "2a916b819cca32290a091321bc65d66ba533a262", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 23, "deletions": 5, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/b87e4f6421ad3015251e0162c632e25fc7c90e4e/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b87e4f6421ad3015251e0162c632e25fc7c90e4e/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=b87e4f6421ad3015251e0162c632e25fc7c90e4e", "patch": "@@ -560,14 +560,26 @@ impl OpenOptions {\n     ///\n     /// One maybe obvious note when using append-mode: make sure that all data\n     /// that belongs together is written to the file in one operation. This\n-    /// can be done by concatenating strings before passing them to `write()`,\n+    /// can be done by concatenating strings before passing them to [`write()`],\n     /// or using a buffered writer (with a buffer of adequate size),\n-    /// and calling `flush()` when the message is complete.\n+    /// and calling [`flush()`] when the message is complete.\n     ///\n     /// If a file is opened with both read and append access, beware that after\n     /// opening, and after every write, the position for reading may be set at the\n     /// end of the file. So, before writing, save the current position (using\n-    /// `seek(SeekFrom::Current(0))`, and restore it before the next read.\n+    /// [`seek`]`(`[`SeekFrom`]`::`[`Current`]`(0))`, and restore it before the next read.\n+    ///\n+    /// ## Note\n+    ///\n+    /// This function doesn't create the file if it doesn't exist. Use the [`create`]\n+    /// method to do so.\n+    ///\n+    /// [`write()`]: ../../std/fs/struct.File.html#method.write\n+    /// [`flush()`]: ../../std/fs/struct.File.html#method.flush\n+    /// [`seek`]: ../../std/fs/struct.File.html#method.seek\n+    /// [`SeekFrom`]: ../../std/io/enum.SeekFrom.html\n+    /// [`Current`]: ../../std/io/enum.SeekFrom.html#variant.Current\n+    /// [`create`]: #method.create\n     ///\n     /// # Examples\n     ///\n@@ -605,9 +617,12 @@ impl OpenOptions {\n     /// This option indicates whether a new file will be created if the file\n     /// does not yet already exist.\n     ///\n-    /// In order for the file to be created, `write` or `append` access must\n+    /// In order for the file to be created, [`write`] or [`append`] access must\n     /// be used.\n     ///\n+    /// [`write`]: #method.write\n+    /// [`append`]: #method.append\n+    ///\n     /// # Examples\n     ///\n     /// ```no_run\n@@ -630,12 +645,15 @@ impl OpenOptions {\n     /// whether a file exists and creating a new one, the file may have been\n     /// created by another process (a TOCTOU race condition / attack).\n     ///\n-    /// If `.create_new(true)` is set, `.create()` and `.truncate()` are\n+    /// If `.create_new(true)` is set, [`.create()`] and [`.truncate()`] are\n     /// ignored.\n     ///\n     /// The file must be opened with write or append access in order to create\n     /// a new file.\n     ///\n+    /// [`.create()`]: #method.create\n+    /// [`.truncate()`]: #method.truncate\n+    ///\n     /// # Examples\n     ///\n     /// ```no_run"}]}