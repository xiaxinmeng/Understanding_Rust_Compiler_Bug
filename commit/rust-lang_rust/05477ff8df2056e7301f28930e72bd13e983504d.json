{"sha": "05477ff8df2056e7301f28930e72bd13e983504d", "node_id": "C_kwDOAAsO6NoAKDA1NDc3ZmY4ZGYyMDU2ZTczMDFmMjg5MzBlNzJiZDEzZTk4MzUwNGQ", "commit": {"author": {"name": "alex-semenyuk", "email": "alexsemenyuk88@gmail.com", "date": "2022-11-26T16:21:07Z"}, "committer": {"name": "alex-semenyuk", "email": "alexsemenyuk88@gmail.com", "date": "2022-12-01T19:05:06Z"}, "message": "Fix manual_let_else produces a wrong suggestion with or-patterns", "tree": {"sha": "1794fa08fe30530398db8ac6bc7d8e5ee0fc25df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1794fa08fe30530398db8ac6bc7d8e5ee0fc25df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05477ff8df2056e7301f28930e72bd13e983504d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05477ff8df2056e7301f28930e72bd13e983504d", "html_url": "https://github.com/rust-lang/rust/commit/05477ff8df2056e7301f28930e72bd13e983504d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05477ff8df2056e7301f28930e72bd13e983504d/comments", "author": {"login": "alex-semenyuk", "id": 5480441, "node_id": "MDQ6VXNlcjU0ODA0NDE=", "avatar_url": "https://avatars.githubusercontent.com/u/5480441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex-semenyuk", "html_url": "https://github.com/alex-semenyuk", "followers_url": "https://api.github.com/users/alex-semenyuk/followers", "following_url": "https://api.github.com/users/alex-semenyuk/following{/other_user}", "gists_url": "https://api.github.com/users/alex-semenyuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex-semenyuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex-semenyuk/subscriptions", "organizations_url": "https://api.github.com/users/alex-semenyuk/orgs", "repos_url": "https://api.github.com/users/alex-semenyuk/repos", "events_url": "https://api.github.com/users/alex-semenyuk/events{/privacy}", "received_events_url": "https://api.github.com/users/alex-semenyuk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alex-semenyuk", "id": 5480441, "node_id": "MDQ6VXNlcjU0ODA0NDE=", "avatar_url": "https://avatars.githubusercontent.com/u/5480441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex-semenyuk", "html_url": "https://github.com/alex-semenyuk", "followers_url": "https://api.github.com/users/alex-semenyuk/followers", "following_url": "https://api.github.com/users/alex-semenyuk/following{/other_user}", "gists_url": "https://api.github.com/users/alex-semenyuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex-semenyuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex-semenyuk/subscriptions", "organizations_url": "https://api.github.com/users/alex-semenyuk/orgs", "repos_url": "https://api.github.com/users/alex-semenyuk/repos", "events_url": "https://api.github.com/users/alex-semenyuk/events{/privacy}", "received_events_url": "https://api.github.com/users/alex-semenyuk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d822110d3b5625b9dc80ccc442e06fc3cc851d76", "url": "https://api.github.com/repos/rust-lang/rust/commits/d822110d3b5625b9dc80ccc442e06fc3cc851d76", "html_url": "https://github.com/rust-lang/rust/commit/d822110d3b5625b9dc80ccc442e06fc3cc851d76"}], "stats": {"total": 29, "additions": 25, "deletions": 4}, "files": [{"sha": "9c6f8b43c078fbc77abd20dd5e7b374c47b6ffad", "filename": "clippy_lints/src/manual_let_else.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/05477ff8df2056e7301f28930e72bd13e983504d/clippy_lints%2Fsrc%2Fmanual_let_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05477ff8df2056e7301f28930e72bd13e983504d/clippy_lints%2Fsrc%2Fmanual_let_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_let_else.rs?ref=05477ff8df2056e7301f28930e72bd13e983504d", "patch": "@@ -151,7 +151,12 @@ fn emit_manual_let_else(cx: &LateContext<'_>, span: Span, expr: &Expr<'_>, pat:\n             } else {\n                 format!(\"{{ {sn_else} }}\")\n             };\n-            let sugg = format!(\"let {sn_pat} = {sn_expr} else {else_bl};\");\n+            let sn_bl = if matches!(pat.kind, PatKind::Or(..)) {\n+                format!(\"({sn_pat})\")\n+            } else {\n+                sn_pat.into_owned()\n+            };\n+            let sugg = format!(\"let {sn_bl} = {sn_expr} else {else_bl};\");\n             diag.span_suggestion(span, \"consider writing\", sugg, app);\n         },\n     );"}, {"sha": "28caed9d79df244f074eab27b108794139ca3ac2", "filename": "tests/ui/manual_let_else_match.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/05477ff8df2056e7301f28930e72bd13e983504d/tests%2Fui%2Fmanual_let_else_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05477ff8df2056e7301f28930e72bd13e983504d/tests%2Fui%2Fmanual_let_else_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_let_else_match.rs?ref=05477ff8df2056e7301f28930e72bd13e983504d", "patch": "@@ -64,6 +64,13 @@ fn fire() {\n         Ok(v) => v,\n         Err(()) => return,\n     };\n+\n+    let f = Variant::Bar(1);\n+\n+    let _value = match f {\n+        Variant::Bar(_) | Variant::Baz(_) => (),\n+        _ => return,\n+    };\n }\n \n fn not_fire() {"}, {"sha": "cd5e9a9ac39c0770fcd41351097e381cfe0f6ec4", "filename": "tests/ui/manual_let_else_match.stderr", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/05477ff8df2056e7301f28930e72bd13e983504d/tests%2Fui%2Fmanual_let_else_match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/05477ff8df2056e7301f28930e72bd13e983504d/tests%2Fui%2Fmanual_let_else_match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_let_else_match.stderr?ref=05477ff8df2056e7301f28930e72bd13e983504d", "patch": "@@ -25,7 +25,7 @@ LL | /         let v = match h() {\n LL | |             (Some(_), Some(_)) | (None, None) => continue,\n LL | |             (Some(v), None) | (None, Some(v)) => v,\n LL | |         };\n-   | |__________^ help: consider writing: `let (Some(v), None) | (None, Some(v)) = h() else { continue };`\n+   | |__________^ help: consider writing: `let ((Some(v), None) | (None, Some(v))) = h() else { continue };`\n \n error: this could be rewritten as `let...else`\n   --> $DIR/manual_let_else_match.rs:49:9\n@@ -34,7 +34,7 @@ LL | /         let v = match build_enum() {\n LL | |             _ => continue,\n LL | |             Variant::Bar(v) | Variant::Baz(v) => v,\n LL | |         };\n-   | |__________^ help: consider writing: `let Variant::Bar(v) | Variant::Baz(v) = build_enum() else { continue };`\n+   | |__________^ help: consider writing: `let (Variant::Bar(v) | Variant::Baz(v)) = build_enum() else { continue };`\n \n error: this could be rewritten as `let...else`\n   --> $DIR/manual_let_else_match.rs:57:5\n@@ -54,5 +54,14 @@ LL | |         Err(()) => return,\n LL | |     };\n    | |______^ help: consider writing: `let Ok(v) = f().map_err(|_| ()) else { return };`\n \n-error: aborting due to 6 previous errors\n+error: this could be rewritten as `let...else`\n+  --> $DIR/manual_let_else_match.rs:70:5\n+   |\n+LL | /     let _value = match f {\n+LL | |         Variant::Bar(_) | Variant::Baz(_) => (),\n+LL | |         _ => return,\n+LL | |     };\n+   | |______^ help: consider writing: `let (Variant::Bar(_) | Variant::Baz(_)) = f else { return };`\n+\n+error: aborting due to 7 previous errors\n "}]}