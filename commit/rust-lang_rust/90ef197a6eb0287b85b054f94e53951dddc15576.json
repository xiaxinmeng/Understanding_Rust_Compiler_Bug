{"sha": "90ef197a6eb0287b85b054f94e53951dddc15576", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwZWYxOTdhNmViMDI4N2I4NWIwNTRmOTRlNTM5NTFkZGRjMTU1NzY=", "commit": {"author": {"name": "Who? Me?!", "email": "mark-i-m@users.noreply.github.com", "date": "2019-12-20T20:49:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-20T20:49:32Z"}, "message": "Better comment\n\nCo-Authored-By: matthewjasper <mjjasper1@gmail.com>", "tree": {"sha": "e0ea7307a8d86ceee057c45538fd4aac83a9d0ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0ea7307a8d86ceee057c45538fd4aac83a9d0ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90ef197a6eb0287b85b054f94e53951dddc15576", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd/TPcCRBK7hj4Ov3rIwAAdHIIACqDQAvXQGESVSoS3W2nAxHd\nJSUqstUDODjYYrdo74nt2lgzgX9w7/fLY48pHsL4tsa8cQ4n5PY71aBub7blR1gU\naEqIN3bdlN4ylfOiDjauTxQsKs7UJh+GvdI2Zr24xlHrK2j6W4S/87SYLi1UrXiU\nDZU8hTOq8VAQJTW+fPnylrquhYY59Rbs7Lv465wSNvErLGwvMApbYTtGPBnSPWsI\nbqFaaTrkaMUPjXZZoSraiRJTOIAGlH0cLro91sJkM9oHx54RhZyaI3DIl9UUMImA\nZEC2pUIigRLG8VA4fd47GlWWw66hSRN2TlUzc7sCyl8q+0VV4FFpv6vQY0cPv2g=\n=k+Ic\n-----END PGP SIGNATURE-----\n", "payload": "tree e0ea7307a8d86ceee057c45538fd4aac83a9d0ac\nparent 4c7f5af42ac7e924ddbd66af91367578d2f35614\nauthor Who? Me?! <mark-i-m@users.noreply.github.com> 1576874972 -0600\ncommitter GitHub <noreply@github.com> 1576874972 -0600\n\nBetter comment\n\nCo-Authored-By: matthewjasper <mjjasper1@gmail.com>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90ef197a6eb0287b85b054f94e53951dddc15576", "html_url": "https://github.com/rust-lang/rust/commit/90ef197a6eb0287b85b054f94e53951dddc15576", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90ef197a6eb0287b85b054f94e53951dddc15576/comments", "author": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c7f5af42ac7e924ddbd66af91367578d2f35614", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c7f5af42ac7e924ddbd66af91367578d2f35614", "html_url": "https://github.com/rust-lang/rust/commit/4c7f5af42ac7e924ddbd66af91367578d2f35614"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "dedc6b9b09af2ee33c0e739cd7d22db43ea42710", "filename": "src/librustc_mir/borrow_check/region_infer/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90ef197a6eb0287b85b054f94e53951dddc15576/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90ef197a6eb0287b85b054f94e53951dddc15576/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fmod.rs?ref=90ef197a6eb0287b85b054f94e53951dddc15576", "patch": "@@ -1619,7 +1619,7 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n     }\n \n     /// Attempt to propagate a region error (e.g. `'a: 'b`) that is not met to a closure's\n-    /// creator. If we cannot, then we report an error to the user.\n+    /// creator. If we cannot, then the caller should report an error to the user.\n     ///\n     /// Returns `true` if the error was propagated, and `false` otherwise.\n     fn try_propagate_universal_region_error("}]}