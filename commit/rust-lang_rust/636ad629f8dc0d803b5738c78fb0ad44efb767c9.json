{"sha": "636ad629f8dc0d803b5738c78fb0ad44efb767c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzNmFkNjI5ZjhkYzBkODAzYjU3MzhjNzhmYjBhZDQ0ZWZiNzY3Yzk=", "commit": {"author": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-01-31T00:43:34Z"}, "committer": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-02-18T04:24:33Z"}, "message": "Functional test of cloned file handle", "tree": {"sha": "f87ee127ed80b4a9c1b9df190d5c3f5c7562f1e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f87ee127ed80b4a9c1b9df190d5c3f5c7562f1e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/636ad629f8dc0d803b5738c78fb0ad44efb767c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/636ad629f8dc0d803b5738c78fb0ad44efb767c9", "html_url": "https://github.com/rust-lang/rust/commit/636ad629f8dc0d803b5738c78fb0ad44efb767c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/636ad629f8dc0d803b5738c78fb0ad44efb767c9/comments", "author": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "committer": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eda35e153bc6f323d0707dff89a99d0034a1f39d", "url": "https://api.github.com/repos/rust-lang/rust/commits/eda35e153bc6f323d0707dff89a99d0034a1f39d", "html_url": "https://github.com/rust-lang/rust/commit/eda35e153bc6f323d0707dff89a99d0034a1f39d"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "324630df1e94f98c8811eacb29906118c4aead47", "filename": "tests/run-pass/fs.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/636ad629f8dc0d803b5738c78fb0ad44efb767c9/tests%2Frun-pass%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/636ad629f8dc0d803b5738c78fb0ad44efb767c9/tests%2Frun-pass%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Ffs.rs?ref=636ad629f8dc0d803b5738c78fb0ad44efb767c9", "patch": "@@ -41,8 +41,14 @@ fn main() {\n     // Reading until EOF should get the whole text.\n     file.read_to_end(&mut contents).unwrap();\n     assert_eq!(bytes, contents.as_slice());\n-    // Cloning a file should be successful\n-    file.try_clone().unwrap();\n+\n+    // Cloning a file should be successful.\n+    let file = File::open(&path).unwrap();\n+    let mut cloned = file.try_clone().unwrap();\n+    // Reading from a cloned file should get the same text.\n+    let mut contents = Vec::new();\n+    cloned.read_to_end(&mut contents).unwrap();\n+    assert_eq!(bytes, contents.as_slice());\n \n     // Test that seeking to the beginning and reading until EOF gets the text again.\n     file.seek(SeekFrom::Start(0)).unwrap();"}]}