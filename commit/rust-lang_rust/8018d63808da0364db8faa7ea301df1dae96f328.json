{"sha": "8018d63808da0364db8faa7ea301df1dae96f328", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwMThkNjM4MDhkYTAzNjRkYjhmYWE3ZWEzMDFkZjFkYWU5NmYzMjg=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-09-13T02:02:21Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-09-13T16:41:44Z"}, "message": "Rollup merge of #54119 - phansch:unit_test_find_best_match_for_name, r=nikomatsakis\n\nAdd some unit tests for find_best_match_for_name\n\nThere were only some UI tests that covered this function.\nSince there's more diagnostic work going on, I think it makes\nsense to have this unit tested.", "tree": {"sha": "98efd26d4291c9254e2608f8451674a96dd55a3f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/98efd26d4291c9254e2608f8451674a96dd55a3f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8018d63808da0364db8faa7ea301df1dae96f328", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAluak0gACgkQ/vbIBR0O\nATw5hA//WtHMRxra544d4eHo7CKPAzjD6SSVXw0LY9TFMrn9gFmC4Jo8HWBff5LT\nVtUz6Q3ZaIrEwlW74gvL2iLPNzpVNqhojIs4vdklj++OeW+aocbEpRCUcHzBSGHd\nMPSgL05Nm0EN4n3BCsAnIb7EmAtBR/hBoEX8PtJDHvQiWPEw+HGfwbimd7ylVgRB\nXB0Zpn6DPOR5keuhfkt5FlgCYc58aq4GY4GH6NgPphW1H74HkdWYf87Z5lKZfowK\ndIhza6Y6wlJ/7cDsYmHtcZFcjvK93CAL4k8MCfoUKXe2d/gw4pUnBMPRfR0sS7ai\nTw2H6OZfOOWF+9PYUID9UheMUn18xhQnin4NJeNKq92EE9T1U93od28Kxn4jjB/c\nXkMRWJQ8JDZXrj4tfsexbAKqLUfEifih2gTghTfbZm2JcSlB2JOY64S+67FT9qfl\nakJmt8074pfzi/4D0B2+1B5lRtyejF8vDcdIXYYdtWFtYEpKWI+bK06gBec8rPjd\nr8sQe4X/4PgkJt5Z+kwmD3sB1keRHiaZaaRGvhQzCSKTVbsVavWCQ5/muAPIy3aB\nmS3+25ujFsZrYyiM+Yp6AMa3xKdLnQmPlBa4lW9nhgGiCv2Zz3KYEonYHZLhxdEQ\naBay7gox7uHBNyMkgtBiAzB/RJ18OnqD6wSmt6WZ5FrmqvaMO8U=\n=op6B\n-----END PGP SIGNATURE-----", "payload": "tree 98efd26d4291c9254e2608f8451674a96dd55a3f\nparent 344dc53bc94e7d61879d4378dc528ff8bc8c34ac\nparent 09973d227d0cb61eadea535d678febcfd94b50c9\nauthor kennytm <kennytm@gmail.com> 1536804141 +0800\ncommitter kennytm <kennytm@gmail.com> 1536856904 +0800\n\nRollup merge of #54119 - phansch:unit_test_find_best_match_for_name, r=nikomatsakis\n\nAdd some unit tests for find_best_match_for_name\n\nThere were only some UI tests that covered this function.\nSince there's more diagnostic work going on, I think it makes\nsense to have this unit tested.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8018d63808da0364db8faa7ea301df1dae96f328", "html_url": "https://github.com/rust-lang/rust/commit/8018d63808da0364db8faa7ea301df1dae96f328", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8018d63808da0364db8faa7ea301df1dae96f328/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "344dc53bc94e7d61879d4378dc528ff8bc8c34ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/344dc53bc94e7d61879d4378dc528ff8bc8c34ac", "html_url": "https://github.com/rust-lang/rust/commit/344dc53bc94e7d61879d4378dc528ff8bc8c34ac"}, {"sha": "09973d227d0cb61eadea535d678febcfd94b50c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/09973d227d0cb61eadea535d678febcfd94b50c9", "html_url": "https://github.com/rust-lang/rust/commit/09973d227d0cb61eadea535d678febcfd94b50c9"}], "stats": {"total": 42, "additions": 40, "deletions": 2}, "files": [{"sha": "feee2422cb662030fadf96215346af3ed8ee312c", "filename": "src/libsyntax/util/lev_distance.rs", "status": "modified", "additions": 40, "deletions": 2, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/8018d63808da0364db8faa7ea301df1dae96f328/src%2Flibsyntax%2Futil%2Flev_distance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8018d63808da0364db8faa7ea301df1dae96f328/src%2Flibsyntax%2Futil%2Flev_distance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Futil%2Flev_distance.rs?ref=8018d63808da0364db8faa7ea301df1dae96f328", "patch": "@@ -11,7 +11,7 @@\n use std::cmp;\n use symbol::Symbol;\n \n-/// To find the Levenshtein distance between two strings\n+/// Find the Levenshtein distance between two strings\n pub fn lev_distance(a: &str, b: &str) -> usize {\n     // cases which don't require further computation\n     if a.is_empty() {\n@@ -41,10 +41,12 @@ pub fn lev_distance(a: &str, b: &str) -> usize {\n     } dcol[t_last + 1]\n }\n \n-/// To find the best match for a given string from an iterator of names\n+/// Find the best match for a given word in the given iterator\n+///\n /// As a loose rule to avoid the obviously incorrect suggestions, it takes\n /// an optional limit for the maximum allowable edit distance, which defaults\n /// to one-third of the given word.\n+///\n /// Besides Levenshtein, we use case insensitive comparison to improve accuracy on an edge case with\n /// a lower(upper)case letters mismatch.\n pub fn find_best_match_for_name<'a, T>(iter_names: T,\n@@ -105,3 +107,39 @@ fn test_lev_distance() {\n     assert_eq!(lev_distance(b, c), 1);\n     assert_eq!(lev_distance(c, b), 1);\n }\n+\n+#[test]\n+fn test_find_best_match_for_name() {\n+    use with_globals;\n+    with_globals(|| {\n+        let input = vec![Symbol::intern(\"aaab\"), Symbol::intern(\"aaabc\")];\n+        assert_eq!(\n+            find_best_match_for_name(input.iter(), \"aaaa\", None),\n+            Some(Symbol::intern(\"aaab\"))\n+        );\n+\n+        assert_eq!(\n+            find_best_match_for_name(input.iter(), \"1111111111\", None),\n+            None\n+        );\n+\n+        let input = vec![Symbol::intern(\"aAAA\")];\n+        assert_eq!(\n+            find_best_match_for_name(input.iter(), \"AAAA\", None),\n+            Some(Symbol::intern(\"aAAA\"))\n+        );\n+\n+        let input = vec![Symbol::intern(\"AAAA\")];\n+        // Returns None because `lev_distance > max_dist / 3`\n+        assert_eq!(\n+            find_best_match_for_name(input.iter(), \"aaaa\", None),\n+            None\n+        );\n+\n+        let input = vec![Symbol::intern(\"AAAA\")];\n+        assert_eq!(\n+            find_best_match_for_name(input.iter(), \"aaaa\", Some(4)),\n+            Some(Symbol::intern(\"AAAA\"))\n+        );\n+    })\n+}"}]}