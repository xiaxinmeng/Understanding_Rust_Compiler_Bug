{"sha": "419552227f51b400c1310c7e798074b466369a91", "node_id": "C_kwDOAAsO6NoAKDQxOTU1MjIyN2Y1MWI0MDBjMTMxMGM3ZTc5ODA3NGI0NjYzNjlhOTE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-23T10:13:41Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-23T10:13:41Z"}, "message": "Auto merge of #10701 - blyxyas:fix-fp-let_underscore_untyped, r=llogiq\n\nBugfix: Ignore `impl Trait`(s) @ `let_underscore_untyped`\n\nFixes #10411\n\nchangelog:[`let_underscore_untyped`]: Ignore `impl Trait`(s) that caused false positives.", "tree": {"sha": "8d20a6f1ed4578480c3ca1d64837fc09f6e46006", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d20a6f1ed4578480c3ca1d64837fc09f6e46006"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/419552227f51b400c1310c7e798074b466369a91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/419552227f51b400c1310c7e798074b466369a91", "html_url": "https://github.com/rust-lang/rust/commit/419552227f51b400c1310c7e798074b466369a91", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/419552227f51b400c1310c7e798074b466369a91/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a337784c68adcd837a543d0bfe99de53e55645c", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a337784c68adcd837a543d0bfe99de53e55645c", "html_url": "https://github.com/rust-lang/rust/commit/9a337784c68adcd837a543d0bfe99de53e55645c"}, {"sha": "bdd05456b1deba85fdeef948b20362145d63c1ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/bdd05456b1deba85fdeef948b20362145d63c1ec", "html_url": "https://github.com/rust-lang/rust/commit/bdd05456b1deba85fdeef948b20362145d63c1ec"}], "stats": {"total": 40, "additions": 24, "deletions": 16}, "files": [{"sha": "637b7de920e7902678c51556b170990caa34c4dd", "filename": "clippy_lints/src/let_underscore.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/419552227f51b400c1310c7e798074b466369a91/clippy_lints%2Fsrc%2Flet_underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/419552227f51b400c1310c7e798074b466369a91/clippy_lints%2Fsrc%2Flet_underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flet_underscore.rs?ref=419552227f51b400c1310c7e798074b466369a91", "patch": "@@ -1,7 +1,7 @@\n use clippy_utils::diagnostics::span_lint_and_help;\n use clippy_utils::ty::{implements_trait, is_must_use_ty, match_type};\n use clippy_utils::{is_must_use_func_call, paths};\n-use rustc_hir::{Local, PatKind};\n+use rustc_hir::{ExprKind, Local, PatKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::lint::in_external_macro;\n use rustc_middle::ty::subst::GenericArgKind;\n@@ -189,7 +189,18 @@ impl<'tcx> LateLintPass<'tcx> for LetUnderscore {\n \n             if local.pat.default_binding_modes && local.ty.is_none() {\n                 // When `default_binding_modes` is true, the `let` keyword is present.\n-                span_lint_and_help(\n+\n+\t\t\t\t// Ignore function calls that return impl traits...\n+\t\t\t\tif let Some(init) = local.init &&\n+\t\t\t\tmatches!(init.kind, ExprKind::Call(_, _) | ExprKind::MethodCall(_, _, _, _)) {\n+\t\t\t\t\tlet expr_ty = cx.typeck_results().expr_ty(init);\n+\t\t\t\t\tif expr_ty.is_impl_trait() {\n+\t\t\t\t\t\treturn;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\n+\n+\t\t\t\tspan_lint_and_help(\n                     cx,\n                     LET_UNDERSCORE_UNTYPED,\n                     local.span,"}, {"sha": "8486137d3a662f4b4e65d7230d187df3d1f8fa0d", "filename": "tests/ui/let_underscore_untyped.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/419552227f51b400c1310c7e798074b466369a91/tests%2Fui%2Flet_underscore_untyped.rs", "raw_url": "https://github.com/rust-lang/rust/raw/419552227f51b400c1310c7e798074b466369a91/tests%2Fui%2Flet_underscore_untyped.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_underscore_untyped.rs?ref=419552227f51b400c1310c7e798074b466369a91", "patch": "@@ -28,13 +28,18 @@ fn f() -> Box<dyn Display> {\n     Box::new(1)\n }\n \n+fn g() -> impl Fn() {\n+    || {}\n+}\n+\n fn main() {\n     let _ = a();\n     let _ = b(1);\n     let _ = c();\n     let _ = d(&1);\n     let _ = e();\n     let _ = f();\n+    let _ = g();\n \n     _ = a();\n     _ = b(1);"}, {"sha": "47e76ea1d04e95d32f76d451ce40308647298332", "filename": "tests/ui/let_underscore_untyped.stderr", "status": "modified", "additions": 6, "deletions": 14, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/419552227f51b400c1310c7e798074b466369a91/tests%2Fui%2Flet_underscore_untyped.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/419552227f51b400c1310c7e798074b466369a91/tests%2Fui%2Flet_underscore_untyped.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_underscore_untyped.stderr?ref=419552227f51b400c1310c7e798074b466369a91", "patch": "@@ -1,5 +1,5 @@\n error: non-binding `let` without a type annotation\n-  --> $DIR/let_underscore_untyped.rs:32:5\n+  --> $DIR/let_underscore_untyped.rs:36:5\n    |\n LL |     let _ = a();\n    |     ^^^^^^^^^^^^\n@@ -8,44 +8,36 @@ LL |     let _ = a();\n    = note: `-D clippy::let-underscore-untyped` implied by `-D warnings`\n \n error: non-binding `let` without a type annotation\n-  --> $DIR/let_underscore_untyped.rs:33:5\n+  --> $DIR/let_underscore_untyped.rs:37:5\n    |\n LL |     let _ = b(1);\n    |     ^^^^^^^^^^^^^\n    |\n    = help: consider adding a type annotation or removing the `let` keyword\n \n error: non-binding `let` without a type annotation\n-  --> $DIR/let_underscore_untyped.rs:34:5\n-   |\n-LL |     let _ = c();\n-   |     ^^^^^^^^^^^^\n-   |\n-   = help: consider adding a type annotation or removing the `let` keyword\n-\n-error: non-binding `let` without a type annotation\n-  --> $DIR/let_underscore_untyped.rs:35:5\n+  --> $DIR/let_underscore_untyped.rs:39:5\n    |\n LL |     let _ = d(&1);\n    |     ^^^^^^^^^^^^^^\n    |\n    = help: consider adding a type annotation or removing the `let` keyword\n \n error: non-binding `let` without a type annotation\n-  --> $DIR/let_underscore_untyped.rs:36:5\n+  --> $DIR/let_underscore_untyped.rs:40:5\n    |\n LL |     let _ = e();\n    |     ^^^^^^^^^^^^\n    |\n    = help: consider adding a type annotation or removing the `let` keyword\n \n error: non-binding `let` without a type annotation\n-  --> $DIR/let_underscore_untyped.rs:37:5\n+  --> $DIR/let_underscore_untyped.rs:41:5\n    |\n LL |     let _ = f();\n    |     ^^^^^^^^^^^^\n    |\n    = help: consider adding a type annotation or removing the `let` keyword\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 5 previous errors\n "}]}