{"sha": "e22d4795d849d2c6a229ccb666db922ae5b76410", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyMmQ0Nzk1ZDg0OWQyYzZhMjI5Y2NiNjY2ZGI5MjJhZTViNzY0MTA=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2020-04-16T10:48:17Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2020-04-16T16:00:30Z"}, "message": "Partially revert \"Do not ICE in the face of invalid enum discriminant\"\n\nThis (partially) reverts commit f47c4ffdfacc783b3fe4bad395a6e16ae296b3d1.", "tree": {"sha": "aa97f4f66ee4edc4fee0b0d8ce99d3c60f7e2068", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa97f4f66ee4edc4fee0b0d8ce99d3c60f7e2068"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e22d4795d849d2c6a229ccb666db922ae5b76410", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e22d4795d849d2c6a229ccb666db922ae5b76410", "html_url": "https://github.com/rust-lang/rust/commit/e22d4795d849d2c6a229ccb666db922ae5b76410", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e22d4795d849d2c6a229ccb666db922ae5b76410/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2deb39dd1fd7525eedbb9067ca52dfa71eed4fab", "url": "https://api.github.com/repos/rust-lang/rust/commits/2deb39dd1fd7525eedbb9067ca52dfa71eed4fab", "html_url": "https://github.com/rust-lang/rust/commit/2deb39dd1fd7525eedbb9067ca52dfa71eed4fab"}], "stats": {"total": 14, "additions": 4, "deletions": 10}, "files": [{"sha": "21d632b9f6b831ae320223cfcb94a68f95bd6b67", "filename": "src/librustc_mir_build/hair/cx/expr.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e22d4795d849d2c6a229ccb666db922ae5b76410/src%2Flibrustc_mir_build%2Fhair%2Fcx%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e22d4795d849d2c6a229ccb666db922ae5b76410/src%2Flibrustc_mir_build%2Fhair%2Fcx%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fcx%2Fexpr.rs?ref=e22d4795d849d2c6a229ccb666db922ae5b76410", "patch": "@@ -12,7 +12,7 @@ use rustc_middle::ty::adjustment::{\n     Adjust, Adjustment, AutoBorrow, AutoBorrowMutability, PointerCast,\n };\n use rustc_middle::ty::subst::{InternalSubsts, SubstsRef};\n-use rustc_middle::ty::{self, AdtKind, Ty, TypeFoldable};\n+use rustc_middle::ty::{self, AdtKind, Ty};\n use rustc_span::Span;\n \n impl<'tcx> Mirror<'tcx> for &'tcx hir::Expr<'tcx> {\n@@ -718,7 +718,8 @@ fn convert_path_expr<'a, 'tcx>(\n \n         Res::Def(DefKind::Ctor(_, CtorKind::Const), def_id) => {\n             let user_provided_types = cx.tables.user_provided_types();\n-            let user_ty = user_provided_types.get(expr.hir_id).copied();\n+            let user_provided_type = user_provided_types.get(expr.hir_id).copied();\n+            debug!(\"convert_path_expr: user_provided_type={:?}\", user_provided_type);\n             let ty = cx.tables().node_type(expr.hir_id);\n             match ty.kind {\n                 // A unit struct/variant which is used as a value.\n@@ -727,17 +728,10 @@ fn convert_path_expr<'a, 'tcx>(\n                     adt_def,\n                     variant_index: adt_def.variant_index_with_ctor_id(def_id),\n                     substs,\n-                    user_ty,\n+                    user_ty: user_provided_type,\n                     fields: vec![],\n                     base: None,\n                 },\n-                _ if ty.references_error() => {\n-                    // Handle degenerate input without ICE (#67377).\n-                    ExprKind::Literal {\n-                        literal: ty::Const::zero_sized(cx.tcx, cx.tcx.types.err),\n-                        user_ty: None,\n-                    }\n-                }\n                 _ => bug!(\"unexpected ty: {:?}\", ty),\n             }\n         }"}]}