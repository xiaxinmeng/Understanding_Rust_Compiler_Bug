{"sha": "c33202ec8245786932795478d650b686b136f913", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzMzIwMmVjODI0NTc4NjkzMjc5NTQ3OGQ2NTBiNjg2YjEzNmY5MTM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-20T12:43:43Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-21T08:27:01Z"}, "message": "complete completion section", "tree": {"sha": "c10fde8aa1f8f2e5587b75997a910ef17dc37452", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c10fde8aa1f8f2e5587b75997a910ef17dc37452"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c33202ec8245786932795478d650b686b136f913", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c33202ec8245786932795478d650b686b136f913", "html_url": "https://github.com/rust-lang/rust/commit/c33202ec8245786932795478d650b686b136f913", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c33202ec8245786932795478d650b686b136f913/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6789e5a6e788c06ab4605bf642b545243ee9ae7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/6789e5a6e788c06ab4605bf642b545243ee9ae7d", "html_url": "https://github.com/rust-lang/rust/commit/6789e5a6e788c06ab4605bf642b545243ee9ae7d"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "12db0a82dad0efdf17e194ca77576f73ac074665", "filename": "guide.md", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/c33202ec8245786932795478d650b686b136f913/guide.md", "raw_url": "https://github.com/rust-lang/rust/raw/c33202ec8245786932795478d650b686b136f913/guide.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/guide.md?ref=c33202ec8245786932795478d650b686b136f913", "patch": "@@ -524,6 +524,40 @@ message as a request for completion and [schedule it on the threadpool]. This is\n the place where we [catch] canceled error if, immediately after completion, the\n client sends some modification.\n \n+In [the handler] we deserialize LSP request into rust-analyzer specific data\n+types (by converting a file url into a numeric `FileId`), [ask analysis for\n+completion] and serializer results to LSP.\n+\n+[Completion implementation] is finally the place where we start doing the actual\n+work. The first step is to collection `CompletionContext` -- a struct which\n+describes the cursor position in terms of Rust syntax and semantics. For\n+example, `function_syntax: Option<&'a ast::FnDef>` stores a reference to\n+enclosing function *syntax*, while `function: Option<hir::Function>` is the\n+`Def` for this function.\n+\n+To construct the context, we first do an [\"IntelliJ Trick\"]: we insert a dummy\n+identifier at the cursor's position and parse this modified file, to get a\n+reasonably looking syntax tree. Then we do a bunch of \"classification\" routines\n+to figure out the context. For example, we [find ancestor fn node] and we get a\n+[semantic model] for it (using the lossy `source_binder` infrastructure).\n+\n+The second step is to run a [series of independent completion routines]. Let's\n+take a closer look at [`complete_dot`], which completes fields and methods in\n+`foo.bar|`. First we extract a semantic function and a syntactic receiver\n+expression out of the `Context`. Then we run type-inference for this single\n+function and map our syntactic expression to `ExprId`. Using the id, we figure\n+out the type of the receiver expression. Then we add all fields & methods from\n+the type to completion.\n+\n [receiving a message]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_lsp_server/src/main_loop.rs#L203\n [schedule it on the threadpool]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_lsp_server/src/main_loop.rs#L428\n [catch]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_lsp_server/src/main_loop.rs#L436-L442\n+[the handler]: https://salsa.zulipchat.com/#narrow/stream/181542-rfcs.2Fsalsa-query-group/topic/design.20next.20steps\n+[ask analysis for completion]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_ide_api/src/lib.rs#L439-L444\n+[Completion implementation]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_ide_api/src/completion.rs#L46-L62\n+[`CompletionContext`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_ide_api/src/completion/completion_context.rs#L14-L37\n+[\"IntelliJ Trick\"]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_ide_api/src/completion/completion_context.rs#L72-L75\n+[find ancestor fn node]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_ide_api/src/completion/completion_context.rs#L116-L120\n+[semantic model]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_ide_api/src/completion/completion_context.rs#L123\n+[series of independent completion routines]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_ide_api/src/completion.rs#L52-L59\n+[`complete_dot`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_ide_api/src/completion/complete_dot.rs#L6-L22"}]}