{"sha": "0e814a3b5f5c7d034b0249cfb4391d9fcb9d8e42", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlODE0YTNiNWY1YzdkMDM0YjAyNDljZmI0MzkxZDlmY2I5ZDhlNDI=", "commit": {"author": {"name": "Benjamin Coenen", "email": "5719034+bnjjj@users.noreply.github.com", "date": "2020-05-24T14:47:35Z"}, "committer": {"name": "Benjamin Coenen", "email": "5719034+bnjjj@users.noreply.github.com", "date": "2020-05-24T14:47:35Z"}, "message": "fix textedit range returned for completion when left token is a keyword #4545\n\nSigned-off-by: Benjamin Coenen <5719034+bnjjj@users.noreply.github.com>", "tree": {"sha": "f83cdc8f32c9a0110fc695f47b5df5a6868f50af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f83cdc8f32c9a0110fc695f47b5df5a6868f50af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e814a3b5f5c7d034b0249cfb4391d9fcb9d8e42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e814a3b5f5c7d034b0249cfb4391d9fcb9d8e42", "html_url": "https://github.com/rust-lang/rust/commit/0e814a3b5f5c7d034b0249cfb4391d9fcb9d8e42", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e814a3b5f5c7d034b0249cfb4391d9fcb9d8e42/comments", "author": {"login": "bnjjj", "id": 5719034, "node_id": "MDQ6VXNlcjU3MTkwMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5719034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnjjj", "html_url": "https://github.com/bnjjj", "followers_url": "https://api.github.com/users/bnjjj/followers", "following_url": "https://api.github.com/users/bnjjj/following{/other_user}", "gists_url": "https://api.github.com/users/bnjjj/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnjjj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnjjj/subscriptions", "organizations_url": "https://api.github.com/users/bnjjj/orgs", "repos_url": "https://api.github.com/users/bnjjj/repos", "events_url": "https://api.github.com/users/bnjjj/events{/privacy}", "received_events_url": "https://api.github.com/users/bnjjj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bnjjj", "id": 5719034, "node_id": "MDQ6VXNlcjU3MTkwMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5719034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnjjj", "html_url": "https://github.com/bnjjj", "followers_url": "https://api.github.com/users/bnjjj/followers", "following_url": "https://api.github.com/users/bnjjj/following{/other_user}", "gists_url": "https://api.github.com/users/bnjjj/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnjjj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnjjj/subscriptions", "organizations_url": "https://api.github.com/users/bnjjj/orgs", "repos_url": "https://api.github.com/users/bnjjj/repos", "events_url": "https://api.github.com/users/bnjjj/events{/privacy}", "received_events_url": "https://api.github.com/users/bnjjj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4f5fca10175b8d5fdfa36563c103f81b2b0acd3", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4f5fca10175b8d5fdfa36563c103f81b2b0acd3", "html_url": "https://github.com/rust-lang/rust/commit/f4f5fca10175b8d5fdfa36563c103f81b2b0acd3"}], "stats": {"total": 47, "additions": 46, "deletions": 1}, "files": [{"sha": "7c015aa98a72ecf87a93c9350b0df45b909e583d", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0e814a3b5f5c7d034b0249cfb4391d9fcb9d8e42/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e814a3b5f5c7d034b0249cfb4391d9fcb9d8e42/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=0e814a3b5f5c7d034b0249cfb4391d9fcb9d8e42", "patch": "@@ -1363,6 +1363,7 @@ impl HirDisplay for Type {\n }\n \n /// For IDE only\n+#[derive(Debug)]\n pub enum ScopeDef {\n     ModuleDef(ModuleDef),\n     MacroDef(MacroDef),"}, {"sha": "417a9200101369d94d6ab83d9d6877920007f17b", "filename": "crates/ra_ide/src/completion/complete_unqualified_path.rs", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/0e814a3b5f5c7d034b0249cfb4391d9fcb9d8e42/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_unqualified_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e814a3b5f5c7d034b0249cfb4391d9fcb9d8e42/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_unqualified_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_unqualified_path.rs?ref=0e814a3b5f5c7d034b0249cfb4391d9fcb9d8e42", "patch": "@@ -297,6 +297,41 @@ mod tests {\n         );\n     }\n \n+    #[test]\n+    fn completes_bindings_from_for_with_in_prefix() {\n+        assert_debug_snapshot!(\n+            do_reference_completion(\n+                r\"\n+                fn test() {\n+                    for index in &[1, 2, 3] {\n+                        let t = in<|>\n+                    }\n+                }\n+                \"\n+            ),\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"index\",\n+                source_range: 107..107,\n+                delete: 107..107,\n+                insert: \"index\",\n+                kind: Binding,\n+            },\n+            CompletionItem {\n+                label: \"test()\",\n+                source_range: 107..107,\n+                delete: 107..107,\n+                insert: \"test()$0\",\n+                kind: Function,\n+                lookup: \"test\",\n+                detail: \"fn test()\",\n+            },\n+        ]\n+        \"###\n+        );\n+    }\n+\n     #[test]\n     fn completes_generic_params() {\n         assert_debug_snapshot!("}, {"sha": "e8bf07d6eb487abbdfdd698a12b28277ce1bc8bb", "filename": "crates/ra_ide/src/completion/completion_context.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0e814a3b5f5c7d034b0249cfb4391d9fcb9d8e42/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e814a3b5f5c7d034b0249cfb4391d9fcb9d8e42/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs?ref=0e814a3b5f5c7d034b0249cfb4391d9fcb9d8e42", "patch": "@@ -169,7 +169,16 @@ impl<'a> CompletionContext<'a> {\n         match self.token.kind() {\n             // workaroud when completion is triggered by trigger characters.\n             IDENT => self.original_token.text_range(),\n-            _ => TextRange::empty(self.offset),\n+            _ => {\n+                // If we haven't characters between keyword and our cursor we take the keyword start range to edit\n+                if self.token.kind().is_keyword()\n+                    && self.offset == self.original_token.text_range().end()\n+                {\n+                    TextRange::empty(self.original_token.text_range().start())\n+                } else {\n+                    TextRange::empty(self.offset)\n+                }\n+            }\n         }\n     }\n "}]}