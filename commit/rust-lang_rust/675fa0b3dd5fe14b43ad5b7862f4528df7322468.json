{"sha": "675fa0b3dd5fe14b43ad5b7862f4528df7322468", "node_id": "C_kwDOAAsO6NoAKDY3NWZhMGIzZGQ1ZmUxNGI0M2FkNWI3ODYyZjQ1MjhkZjczMjI0Njg", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-12T18:29:33Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-12T20:27:45Z"}, "message": "\ud83d\udea8 fix unsoundness in bootstrap cache code", "tree": {"sha": "0fa647655dcb93fbb694d423f1ccf5de4f63b9dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0fa647655dcb93fbb694d423f1ccf5de4f63b9dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/675fa0b3dd5fe14b43ad5b7862f4528df7322468", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/675fa0b3dd5fe14b43ad5b7862f4528df7322468", "html_url": "https://github.com/rust-lang/rust/commit/675fa0b3dd5fe14b43ad5b7862f4528df7322468", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/675fa0b3dd5fe14b43ad5b7862f4528df7322468/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d137783642b0b98eda2796dc66bffc2b089a8327", "url": "https://api.github.com/repos/rust-lang/rust/commits/d137783642b0b98eda2796dc66bffc2b089a8327", "html_url": "https://github.com/rust-lang/rust/commit/d137783642b0b98eda2796dc66bffc2b089a8327"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "05f25af68ea8fe5985e11370df9bbe03c2951e01", "filename": "src/bootstrap/cache.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/675fa0b3dd5fe14b43ad5b7862f4528df7322468/src%2Fbootstrap%2Fcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/675fa0b3dd5fe14b43ad5b7862f4528df7322468/src%2Fbootstrap%2Fcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcache.rs?ref=675fa0b3dd5fe14b43ad5b7862f4528df7322468", "patch": "@@ -89,16 +89,16 @@ impl<T: Internable + Hash> Hash for Interned<T> {\n \n impl<T: Internable + Deref> Deref for Interned<T> {\n     type Target = T::Target;\n-    fn deref(&self) -> &'static Self::Target {\n+    fn deref(&self) -> &Self::Target {\n         let l = T::intern_cache().lock().unwrap();\n-        unsafe { mem::transmute::<&Self::Target, &'static Self::Target>(l.get(*self)) }\n+        unsafe { mem::transmute::<&Self::Target, &Self::Target>(l.get(*self)) }\n     }\n }\n \n impl<T: Internable + AsRef<U>, U: ?Sized> AsRef<U> for Interned<T> {\n-    fn as_ref(&self) -> &'static U {\n+    fn as_ref(&self) -> &U {\n         let l = T::intern_cache().lock().unwrap();\n-        unsafe { mem::transmute::<&U, &'static U>(l.get(*self).as_ref()) }\n+        unsafe { mem::transmute::<&U, &U>(l.get(*self).as_ref()) }\n     }\n }\n "}]}