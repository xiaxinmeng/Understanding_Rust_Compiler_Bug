{"sha": "0bb8456e7d7b6994c9e5efa9d5962f003ffa0a1e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiYjg0NTZlN2Q3YjY5OTRjOWU1ZWZhOWQ1OTYyZjAwM2ZmYTBhMWU=", "commit": {"author": {"name": "Jeff Muizelaar", "email": "jrmuizel@gmail.com", "date": "2019-02-03T03:36:26Z"}, "committer": {"name": "Jeff Muizelaar", "email": "jrmuizel@gmail.com", "date": "2019-02-03T03:39:45Z"}, "message": "Fill out test a little more\n\nThis factors out an assert_expansion function to make things\nmore managable.", "tree": {"sha": "268bf3bb4df0c8b3d3db3522a86ebe2edd5c97cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/268bf3bb4df0c8b3d3db3522a86ebe2edd5c97cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0bb8456e7d7b6994c9e5efa9d5962f003ffa0a1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0bb8456e7d7b6994c9e5efa9d5962f003ffa0a1e", "html_url": "https://github.com/rust-lang/rust/commit/0bb8456e7d7b6994c9e5efa9d5962f003ffa0a1e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0bb8456e7d7b6994c9e5efa9d5962f003ffa0a1e/comments", "author": {"login": "jrmuizel", "id": 332653, "node_id": "MDQ6VXNlcjMzMjY1Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/332653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrmuizel", "html_url": "https://github.com/jrmuizel", "followers_url": "https://api.github.com/users/jrmuizel/followers", "following_url": "https://api.github.com/users/jrmuizel/following{/other_user}", "gists_url": "https://api.github.com/users/jrmuizel/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrmuizel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrmuizel/subscriptions", "organizations_url": "https://api.github.com/users/jrmuizel/orgs", "repos_url": "https://api.github.com/users/jrmuizel/repos", "events_url": "https://api.github.com/users/jrmuizel/events{/privacy}", "received_events_url": "https://api.github.com/users/jrmuizel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jrmuizel", "id": 332653, "node_id": "MDQ6VXNlcjMzMjY1Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/332653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrmuizel", "html_url": "https://github.com/jrmuizel", "followers_url": "https://api.github.com/users/jrmuizel/followers", "following_url": "https://api.github.com/users/jrmuizel/following{/other_user}", "gists_url": "https://api.github.com/users/jrmuizel/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrmuizel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrmuizel/subscriptions", "organizations_url": "https://api.github.com/users/jrmuizel/orgs", "repos_url": "https://api.github.com/users/jrmuizel/repos", "events_url": "https://api.github.com/users/jrmuizel/events{/privacy}", "received_events_url": "https://api.github.com/users/jrmuizel/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31d143ba18b74bdbe032a305c7705123e055b39e", "url": "https://api.github.com/repos/rust-lang/rust/commits/31d143ba18b74bdbe032a305c7705123e055b39e", "html_url": "https://github.com/rust-lang/rust/commit/31d143ba18b74bdbe032a305c7705123e055b39e"}], "stats": {"total": 32, "additions": 18, "deletions": 14}, "files": [{"sha": "922256c03b10a40fc155ca673653b397ec1fa17a", "filename": "crates/ra_mbe/src/lib.rs", "status": "modified", "additions": 18, "deletions": 14, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/0bb8456e7d7b6994c9e5efa9d5962f003ffa0a1e/crates%2Fra_mbe%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bb8456e7d7b6994c9e5efa9d5962f003ffa0a1e/crates%2Fra_mbe%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Flib.rs?ref=0bb8456e7d7b6994c9e5efa9d5962f003ffa0a1e", "patch": "@@ -161,6 +161,20 @@ impl_froms!(TokenTree: Leaf, Subtree);\n     )\n     }\n \n+    fn assert_expansion(rules: &MacroRules, invocation: &str, expansion: &str) {\n+        let source_file = ast::SourceFile::parse(invocation);\n+        let macro_invocation = source_file\n+            .syntax()\n+            .descendants()\n+            .find_map(ast::MacroCall::cast)\n+            .unwrap();\n+\n+        let invocation_tt = ast_to_token_tree(macro_invocation.token_tree().unwrap()).unwrap();\n+\n+        let expaned = rules.expand(&invocation_tt).unwrap();\n+        assert_eq!(expaned.to_string(), expansion);\n+    }\n+\n     #[test]\n     fn test_fail_match_pattern_by_token() {\n         let macro_definition = r#\"\n@@ -177,29 +191,19 @@ impl_froms!(TokenTree: Leaf, Subtree);\n         }\n \"#;\n \n-        let macro_invocation = r#\"\n-foo! {   foo }\n-\"#;\n-\n         let source_file = ast::SourceFile::parse(macro_definition);\n         let macro_definition = source_file\n             .syntax()\n             .descendants()\n             .find_map(ast::MacroCall::cast)\n             .unwrap();\n \n-        let source_file = ast::SourceFile::parse(macro_invocation);\n-        let macro_invocation = source_file\n-            .syntax()\n-            .descendants()\n-            .find_map(ast::MacroCall::cast)\n-            .unwrap();\n-\n         let definition_tt = ast_to_token_tree(macro_definition.token_tree().unwrap()).unwrap();\n-        let invocation_tt = ast_to_token_tree(macro_invocation.token_tree().unwrap()).unwrap();\n         let rules = crate::MacroRules::parse(&definition_tt).unwrap();\n-        let expansion = rules.expand(&invocation_tt).unwrap();\n-        assert_eq!(expansion.to_string(), \"mod foo {}\")\n+\n+        assert_expansion(&rules, \"foo! { foo }\", \"mod foo {}\");\n+        assert_expansion(&rules, \"foo! { = bar }\", \"fn bar () {}\");\n+        assert_expansion(&rules, \"foo! { + Baz }\", \"struct Baz ;\");\n     }\n \n }"}]}