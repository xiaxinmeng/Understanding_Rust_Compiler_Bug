{"sha": "fed6131c4185aabcd8fa3e28851373944a407d21", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlZDYxMzFjNDE4NWFhYmNkOGZhM2UyODg1MTM3Mzk0NGE0MDdkMjE=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-22T11:35:51Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-23T14:43:54Z"}, "message": "Add note to 'macro not found' to point to identically-named imports.", "tree": {"sha": "6be3a3560c70a190ac2c25f474bb31b75eb782e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6be3a3560c70a190ac2c25f474bb31b75eb782e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fed6131c4185aabcd8fa3e28851373944a407d21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fed6131c4185aabcd8fa3e28851373944a407d21", "html_url": "https://github.com/rust-lang/rust/commit/fed6131c4185aabcd8fa3e28851373944a407d21", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fed6131c4185aabcd8fa3e28851373944a407d21/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5998c2e9adfb01f40ea9d0169488fbdaad10b035", "url": "https://api.github.com/repos/rust-lang/rust/commits/5998c2e9adfb01f40ea9d0169488fbdaad10b035", "html_url": "https://github.com/rust-lang/rust/commit/5998c2e9adfb01f40ea9d0169488fbdaad10b035"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "89b153a6c0e4299dec98586fa95fd78663a1064f", "filename": "compiler/rustc_resolve/src/macros.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/fed6131c4185aabcd8fa3e28851373944a407d21/compiler%2Frustc_resolve%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fed6131c4185aabcd8fa3e28851373944a407d21/compiler%2Frustc_resolve%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fmacros.rs?ref=fed6131c4185aabcd8fa3e28851373944a407d21", "patch": "@@ -19,7 +19,7 @@ use rustc_expand::base::{SyntaxExtension, SyntaxExtensionKind};\n use rustc_expand::compile_declarative_macro;\n use rustc_expand::expand::{AstFragment, Invocation, InvocationKind, SupportsMacroExpansion};\n use rustc_feature::is_builtin_attr_name;\n-use rustc_hir::def::{self, DefKind, NonMacroAttrKind};\n+use rustc_hir::def::{self, DefKind, Namespace, NonMacroAttrKind};\n use rustc_hir::def_id::{CrateNum, LocalDefId};\n use rustc_hir::PrimTy;\n use rustc_middle::middle::stability;\n@@ -1115,6 +1115,24 @@ impl<'a> Resolver<'a> {\n                     let msg = format!(\"cannot find {} `{}` in this scope\", expected, ident);\n                     let mut err = self.session.struct_span_err(ident.span, &msg);\n                     self.unresolved_macro_suggestions(&mut err, kind, &parent_scope, ident);\n+                    if let Ok(binding) = self.early_resolve_ident_in_lexical_scope(\n+                        ident,\n+                        ScopeSet::All(Namespace::TypeNS, false),\n+                        &parent_scope,\n+                        false,\n+                        false,\n+                        ident.span,\n+                    ) {\n+                        if let crate::NameBindingKind::Import { import, .. } = binding.kind {\n+                            err.span_note(\n+                                import.span,\n+                                &format!(\n+                                    \"`{}` is imported here, but it is not a {}\",\n+                                    ident, expected\n+                                ),\n+                            );\n+                        }\n+                    }\n                     err.emit();\n                 }\n             }"}]}