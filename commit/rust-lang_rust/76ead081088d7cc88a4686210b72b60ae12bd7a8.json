{"sha": "76ead081088d7cc88a4686210b72b60ae12bd7a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2ZWFkMDgxMDg4ZDdjYzg4YTQ2ODYyMTBiNzJiNjBhZTEyYmQ3YTg=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-03-21T10:02:56Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-03-23T22:05:20Z"}, "message": "Remove auto-deref'ing Pattern impl because it conflicts with other\npossible blanket impls and also triggers internal overflow. Add some\nspecial cases for common uses (&&str, &String) for now; bounds-targeting\nderef coercions are probably the right longer term answer.", "tree": {"sha": "05148b9c3c1c91227e68f92b4b0d70d95dbdc1cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05148b9c3c1c91227e68f92b4b0d70d95dbdc1cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76ead081088d7cc88a4686210b72b60ae12bd7a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76ead081088d7cc88a4686210b72b60ae12bd7a8", "html_url": "https://github.com/rust-lang/rust/commit/76ead081088d7cc88a4686210b72b60ae12bd7a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76ead081088d7cc88a4686210b72b60ae12bd7a8/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8bd8466e812e7c5acb99a50493e45aeb1bb81e93", "url": "https://api.github.com/repos/rust-lang/rust/commits/8bd8466e812e7c5acb99a50493e45aeb1bb81e93", "html_url": "https://github.com/rust-lang/rust/commit/8bd8466e812e7c5acb99a50493e45aeb1bb81e93"}], "stats": {"total": 42, "additions": 27, "deletions": 15}, "files": [{"sha": "7eccd5fa3b6059af835ff7e45248b0535ddd63b7", "filename": "src/libcollections/string.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/76ead081088d7cc88a4686210b72b60ae12bd7a8/src%2Flibcollections%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76ead081088d7cc88a4686210b72b60ae12bd7a8/src%2Flibcollections%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstring.rs?ref=76ead081088d7cc88a4686210b72b60ae12bd7a8", "patch": "@@ -25,6 +25,7 @@ use core::mem;\n use core::ops::{self, Deref, Add, Index};\n use core::ptr;\n use core::slice;\n+use core::str::Pattern;\n use unicode::str as unicode_str;\n use unicode::str::Utf16Item;\n \n@@ -765,6 +766,25 @@ impl<'a> Extend<&'a str> for String {\n     }\n }\n \n+/// A convenience impl that delegates to the impl for `&str`\n+impl<'a, 'b> Pattern<'a> for &'b String {\n+    type Searcher = <&'b str as Pattern<'a>>::Searcher;\n+\n+    fn into_searcher(self, haystack: &'a str) -> <&'b str as Pattern<'a>>::Searcher {\n+        self[..].into_searcher(haystack)\n+    }\n+\n+    #[inline]\n+    fn is_contained_in(self, haystack: &'a str) -> bool {\n+        self[..].is_contained_in(haystack)\n+    }\n+\n+    #[inline]\n+    fn is_prefix_of(self, haystack: &'a str) -> bool {\n+        self[..].is_prefix_of(haystack)\n+    }\n+}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl PartialEq for String {\n     #[inline]"}, {"sha": "98b6533980dd913728ff45724e01793ee26d1122", "filename": "src/libcore/str/pattern.rs", "status": "modified", "additions": 7, "deletions": 13, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/76ead081088d7cc88a4686210b72b60ae12bd7a8/src%2Flibcore%2Fstr%2Fpattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76ead081088d7cc88a4686210b72b60ae12bd7a8/src%2Flibcore%2Fstr%2Fpattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fpattern.rs?ref=76ead081088d7cc88a4686210b72b60ae12bd7a8", "patch": "@@ -474,22 +474,16 @@ impl<'a, 'b> Pattern<'a> for &'b [char] {\n                       s, CharEqPattern(s));\n }\n \n+/// A convenience impl that delegates to the impl for `&str`\n+impl<'a, 'b> Pattern<'a> for &'b &'b str {\n+    type Searcher =   <&'b str as Pattern<'a>>::Searcher;\n+    associated_items!(<&'b str as Pattern<'a>>::Searcher,\n+                      s, (*s));\n+}\n+\n /// Searches for chars that match the given predicate\n impl<'a, F> Pattern<'a> for F where F: FnMut(char) -> bool {\n     type Searcher =   <CharEqPattern<Self> as Pattern<'a>>::Searcher;\n     associated_items!(<CharEqPattern<Self> as Pattern<'a>>::Searcher,\n                       s, CharEqPattern(s));\n }\n-\n-// Deref-forward impl\n-\n-use ops::Deref;\n-\n-/// Delegates to the next deref coercion of `Self` that implements `Pattern`\n-impl<'a, 'b, P: 'b + ?Sized, T: Deref<Target = P> + ?Sized> Pattern<'a> for &'b T\n-    where &'b P: Pattern<'a>\n-{\n-    type Searcher =   <&'b P as Pattern<'a>>::Searcher;\n-    associated_items!(<&'b P as Pattern<'a>>::Searcher,\n-                      s, (&**s));\n-}"}, {"sha": "38cab4f0e0942440063c16e0bd3b1a3813fd9451", "filename": "src/libcoretest/str.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/76ead081088d7cc88a4686210b72b60ae12bd7a8/src%2Flibcoretest%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76ead081088d7cc88a4686210b72b60ae12bd7a8/src%2Flibcoretest%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Fstr.rs?ref=76ead081088d7cc88a4686210b72b60ae12bd7a8", "patch": "@@ -13,9 +13,7 @@ fn test_pattern_deref_forward() {\n     let data = \"aabcdaa\";\n     assert!(data.contains(\"bcd\"));\n     assert!(data.contains(&\"bcd\"));\n-    assert!(data.contains(&&\"bcd\"));\n     assert!(data.contains(&\"bcd\".to_string()));\n-    assert!(data.contains(&&\"bcd\".to_string()));\n }\n \n #[test]"}]}