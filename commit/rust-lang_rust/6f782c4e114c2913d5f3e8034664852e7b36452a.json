{"sha": "6f782c4e114c2913d5f3e8034664852e7b36452a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmNzgyYzRlMTE0YzI5MTNkNWYzZTgwMzQ2NjQ4NTJlN2IzNjQ1MmE=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-05-02T10:16:59Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-09-10T18:18:31Z"}, "message": "Add actual spans to the crate hash.\n\nNow that we encode spans relative to the items, the item's own span is\nnever actually hashed as part of the HIR.\nIn consequence, we explicitly include it in the crate hash to avoid\nmissing cross-crate invalidations.", "tree": {"sha": "1ef3e7cf434f964e9bd96f51f7e2abb43d924cfd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ef3e7cf434f964e9bd96f51f7e2abb43d924cfd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f782c4e114c2913d5f3e8034664852e7b36452a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f782c4e114c2913d5f3e8034664852e7b36452a", "html_url": "https://github.com/rust-lang/rust/commit/6f782c4e114c2913d5f3e8034664852e7b36452a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f782c4e114c2913d5f3e8034664852e7b36452a/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb5ced0fbd7625316ee28d4f2f7230aac35753dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb5ced0fbd7625316ee28d4f2f7230aac35753dd", "html_url": "https://github.com/rust-lang/rust/commit/fb5ced0fbd7625316ee28d4f2f7230aac35753dd"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "10714a4b706f6e0d8141a54f1589b22d53b27753", "filename": "compiler/rustc_middle/src/hir/map/mod.rs", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/6f782c4e114c2913d5f3e8034664852e7b36452a/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f782c4e114c2913d5f3e8034664852e7b36452a/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs?ref=6f782c4e114c2913d5f3e8034664852e7b36452a", "patch": "@@ -969,22 +969,12 @@ pub(super) fn crate_hash(tcx: TyCtxt<'_>, crate_num: CrateNum) -> Svh {\n         .iter_enumerated()\n         .filter_map(|(def_id, hod)| {\n             let def_path_hash = tcx.untracked_resolutions.definitions.def_path_hash(def_id);\n-            let mut hasher = StableHasher::new();\n-            hod.as_ref()?.hash_stable(&mut hcx, &mut hasher);\n-            AttributeMap { map: &tcx.untracked_crate.attrs, prefix: def_id }\n-                .hash_stable(&mut hcx, &mut hasher);\n-            Some((def_path_hash, hasher.finish()))\n+            let hash = hod.as_ref()?.hash;\n+            Some((def_path_hash, hash, def_id))\n         })\n         .collect();\n     hir_body_nodes.sort_unstable_by_key(|bn| bn.0);\n \n-    let node_hashes = hir_body_nodes.iter().fold(\n-        Fingerprint::ZERO,\n-        |combined_fingerprint, &(def_path_hash, fingerprint)| {\n-            combined_fingerprint.combine(def_path_hash.0.combine(fingerprint))\n-        },\n-    );\n-\n     let upstream_crates = upstream_crates(tcx);\n \n     // We hash the final, remapped names of all local source files so we\n@@ -1004,7 +994,17 @@ pub(super) fn crate_hash(tcx: TyCtxt<'_>, crate_num: CrateNum) -> Svh {\n     source_file_names.sort_unstable();\n \n     let mut stable_hasher = StableHasher::new();\n-    node_hashes.hash_stable(&mut hcx, &mut stable_hasher);\n+    for (def_path_hash, fingerprint, def_id) in hir_body_nodes.iter() {\n+        def_path_hash.0.hash_stable(&mut hcx, &mut stable_hasher);\n+        fingerprint.hash_stable(&mut hcx, &mut stable_hasher);\n+        AttributeMap { map: &tcx.untracked_crate.attrs, prefix: *def_id }\n+            .hash_stable(&mut hcx, &mut stable_hasher);\n+        if tcx.sess.opts.debugging_opts.incremental_relative_spans {\n+            let span = tcx.untracked_resolutions.definitions.def_span(*def_id);\n+            debug_assert_eq!(span.parent(), None);\n+            span.hash_stable(&mut hcx, &mut stable_hasher);\n+        }\n+    }\n     upstream_crates.hash_stable(&mut hcx, &mut stable_hasher);\n     source_file_names.hash_stable(&mut hcx, &mut stable_hasher);\n     tcx.sess.opts.dep_tracking_hash(true).hash_stable(&mut hcx, &mut stable_hasher);"}]}