{"sha": "bf2533406670078a9110122f8c90e53285f994b6", "node_id": "C_kwDOAAsO6NoAKGJmMjUzMzQwNjY3MDA3OGE5MTEwMTIyZjhjOTBlNTMyODVmOTk0YjY", "commit": {"author": {"name": "Jacob Hoffman-Andrews", "email": "github@hoffman-andrews.com", "date": "2022-09-29T06:52:00Z"}, "committer": {"name": "Jacob Hoffman-Andrews", "email": "github@hoffman-andrews.com", "date": "2022-10-29T19:47:51Z"}, "message": "Make --static-root-path point to static.files", "tree": {"sha": "71d27e559a60e805eb3dbe928fc62ba71e456c77", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71d27e559a60e805eb3dbe928fc62ba71e456c77"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf2533406670078a9110122f8c90e53285f994b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf2533406670078a9110122f8c90e53285f994b6", "html_url": "https://github.com/rust-lang/rust/commit/bf2533406670078a9110122f8c90e53285f994b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf2533406670078a9110122f8c90e53285f994b6/comments", "author": {"login": "jsha", "id": 220205, "node_id": "MDQ6VXNlcjIyMDIwNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/220205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsha", "html_url": "https://github.com/jsha", "followers_url": "https://api.github.com/users/jsha/followers", "following_url": "https://api.github.com/users/jsha/following{/other_user}", "gists_url": "https://api.github.com/users/jsha/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsha/subscriptions", "organizations_url": "https://api.github.com/users/jsha/orgs", "repos_url": "https://api.github.com/users/jsha/repos", "events_url": "https://api.github.com/users/jsha/events{/privacy}", "received_events_url": "https://api.github.com/users/jsha/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsha", "id": 220205, "node_id": "MDQ6VXNlcjIyMDIwNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/220205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsha", "html_url": "https://github.com/jsha", "followers_url": "https://api.github.com/users/jsha/followers", "following_url": "https://api.github.com/users/jsha/following{/other_user}", "gists_url": "https://api.github.com/users/jsha/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsha/subscriptions", "organizations_url": "https://api.github.com/users/jsha/orgs", "repos_url": "https://api.github.com/users/jsha/repos", "events_url": "https://api.github.com/users/jsha/events{/privacy}", "received_events_url": "https://api.github.com/users/jsha/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9e1f6ffdf03ec33cb29e20c88fc7bcc938c7f42", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9e1f6ffdf03ec33cb29e20c88fc7bcc938c7f42", "html_url": "https://github.com/rust-lang/rust/commit/f9e1f6ffdf03ec33cb29e20c88fc7bcc938c7f42"}], "stats": {"total": 32, "additions": 19, "deletions": 13}, "files": [{"sha": "c1b3526eb454167957c32be3d1a1b724fadb7dc0", "filename": "src/librustdoc/html/layout.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/bf2533406670078a9110122f8c90e53285f994b6/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf2533406670078a9110122f8c90e53285f994b6/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Flayout.rs?ref=bf2533406670078a9110122f8c90e53285f994b6", "patch": "@@ -35,15 +35,18 @@ pub(crate) struct Page<'a> {\n }\n \n impl<'a> Page<'a> {\n-    pub(crate) fn get_static_root_path(&self) -> &str {\n-        self.static_root_path.unwrap_or(self.root_path)\n+    pub(crate) fn get_static_root_path(&self) -> String {\n+        match self.static_root_path {\n+            Some(s) => s.to_string(),\n+            None => format!(\"{}{}\", self.root_path, \"static.files/\"),\n+        }\n     }\n }\n \n #[derive(Template)]\n #[template(path = \"page.html\")]\n struct PageLayout<'a> {\n-    static_root_path: &'a str,\n+    static_root_path: String,\n     page: &'a Page<'a>,\n     layout: &'a Layout,\n "}, {"sha": "51843a505f7095963ed97be0ba98f946439c869a", "filename": "src/librustdoc/html/render/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf2533406670078a9110122f8c90e53285f994b6/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf2533406670078a9110122f8c90e53285f994b6/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs?ref=bf2533406670078a9110122f8c90e53285f994b6", "patch": "@@ -636,7 +636,7 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n                      <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" \\\n                          href=\\\"{static_root_path}{settings_css}\\\">\\\n                      <script defer src=\\\"{static_root_path}{settings_js}\\\"></script>\",\n-                    static_root_path = page.static_root_path.unwrap_or(\"\"),\n+                    static_root_path = page.get_static_root_path(),\n                     settings_css = static_files::STATIC_FILES.settings_css,\n                     settings_js = static_files::STATIC_FILES.settings_js,\n                 )"}, {"sha": "2920a81e5b22ea2421d5a320f749a6adeb7ac416", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf2533406670078a9110122f8c90e53285f994b6/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf2533406670078a9110122f8c90e53285f994b6/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=bf2533406670078a9110122f8c90e53285f994b6", "patch": "@@ -147,7 +147,7 @@ pub(super) fn print_item(\n     };\n \n     let item_vars = ItemVars {\n-        static_root_path: page.get_static_root_path(),\n+        static_root_path: &page.get_static_root_path(),\n         clipboard_svg: &static_files::STATIC_FILES.clipboard_svg,\n         typ,\n         name: item.name.as_ref().unwrap().as_str(),"}, {"sha": "07d139e9e12129cb1986c81e69ddc2a7a1f5d7f4", "filename": "src/librustdoc/html/render/write_shared.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/bf2533406670078a9110122f8c90e53285f994b6/src%2Flibrustdoc%2Fhtml%2Frender%2Fwrite_shared.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf2533406670078a9110122f8c90e53285f994b6/src%2Flibrustdoc%2Fhtml%2Frender%2Fwrite_shared.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fwrite_shared.rs?ref=bf2533406670078a9110122f8c90e53285f994b6", "patch": "@@ -24,7 +24,8 @@ use crate::{try_err, try_none};\n ///    URL if the contents change, so they are safe to cache with the\n ///    `Cache-Control: immutable` directive. They are written under the static.files/\n ///    directory and are written when --emit-type is empty (default) or contains\n-///    \"toolchain-specific\".\n+///    \"toolchain-specific\". If using the --static-root-path flag, it should point\n+///    to a URL path prefix where each of these filenames can be fetched.\n ///  - Invocation specific files. These are generated based on the crate(s) being\n ///    documented. Their filenames need to be predictable without knowing their\n ///    contents, so they do not include a hash in their filename and are not safe to\n@@ -85,8 +86,10 @@ pub(super) fn write_shared(\n \n     if options.emit.is_empty() || options.emit.contains(&EmitType::Toolchain) {\n         for f in static_files::STATIC_FILES_LIST {\n-            let filename = static_files::static_filename(f.filename, f.bytes);\n-            cx.shared.fs.write(cx.dst.join(filename), f.minified())?;\n+            let filename = cx.dst.join(\n+                Path::new(\"static.files/\").join(static_files::static_filename(f.filename, f.bytes)),\n+            );\n+            cx.shared.fs.write(filename, f.minified())?;\n         }\n     }\n "}, {"sha": "c922890bc0ba2d113576a97cae044467936c7953", "filename": "src/librustdoc/html/static_files.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bf2533406670078a9110122f8c90e53285f994b6/src%2Flibrustdoc%2Fhtml%2Fstatic_files.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf2533406670078a9110122f8c90e53285f994b6/src%2Flibrustdoc%2Fhtml%2Fstatic_files.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic_files.rs?ref=bf2533406670078a9110122f8c90e53285f994b6", "patch": "@@ -5,7 +5,7 @@\n \n use rustc_data_structures::fx::FxHasher;\n use std::hash::Hasher;\n-use std::path::{Path, PathBuf};\n+use std::path::PathBuf;\n use std::{fmt, str};\n \n pub(crate) struct StaticFile {\n@@ -51,7 +51,7 @@ pub(crate) fn suffix_path(filename: &str, suffix: &str) -> PathBuf {\n \n pub(crate) fn static_filename(filename: &str, contents: &[u8]) -> PathBuf {\n     let filename = filename.rsplit(\"/\").next().unwrap();\n-    Path::new(\"static.files\").join(suffix_path(filename, &static_suffix(contents)))\n+    suffix_path(filename, &static_suffix(contents))\n }\n \n fn static_suffix(bytes: &[u8]) -> String {"}, {"sha": "86928b0fb0a807b6b0c3149ffb4a94c85c5c87d1", "filename": "src/test/rustdoc/static-root-path.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bf2533406670078a9110122f8c90e53285f994b6/src%2Ftest%2Frustdoc%2Fstatic-root-path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf2533406670078a9110122f8c90e53285f994b6/src%2Ftest%2Frustdoc%2Fstatic-root-path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fstatic-root-path.rs?ref=bf2533406670078a9110122f8c90e53285f994b6", "patch": "@@ -1,18 +1,18 @@\n // compile-flags:-Z unstable-options --static-root-path /cache/\n \n // @has static_root_path/struct.SomeStruct.html\n-// @matchesraw - '\"/cache/static.files/main-'\n+// @matchesraw - '\"/cache/main-'\n // @!matchesraw - '\"\\.\\./main'\n // @matchesraw - 'data-root-path=\"\\.\\./\"'\n // @!matchesraw - '\"/cache/search-index\\.js\"'\n pub struct SomeStruct;\n \n // @has src/static_root_path/static-root-path.rs.html\n-// @matchesraw - '\"/cache/static.files/source-script-'\n+// @matchesraw - '\"/cache/source-script-'\n // @!matchesraw - '\"\\.\\./\\.\\./source-script'\n // @matchesraw - '\"\\.\\./\\.\\./source-files.js\"'\n // @!matchesraw - '\"/cache/source-files\\.js\"'\n \n // @has settings.html\n-// @matchesraw - '/cache/static.files/settings-'\n+// @matchesraw - '/cache/settings-'\n // @!matchesraw - '\\../settings'"}]}