{"sha": "8a7b1bca045b3b582f53337799b90a9309adc96b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhN2IxYmNhMDQ1YjNiNTgyZjUzMzM3Nzk5YjkwYTkzMDlhZGM5NmI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-03-25T16:48:47Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-03-25T18:07:21Z"}, "message": "Update backtrace test for FIXME on windows", "tree": {"sha": "90944aea42ea9f5f4c753359800accdbe203c0d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/90944aea42ea9f5f4c753359800accdbe203c0d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a7b1bca045b3b582f53337799b90a9309adc96b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a7b1bca045b3b582f53337799b90a9309adc96b", "html_url": "https://github.com/rust-lang/rust/commit/8a7b1bca045b3b582f53337799b90a9309adc96b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a7b1bca045b3b582f53337799b90a9309adc96b/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24059f74d7669634dedc409293a0635f16c6ae76", "url": "https://api.github.com/repos/rust-lang/rust/commits/24059f74d7669634dedc409293a0635f16c6ae76", "html_url": "https://github.com/rust-lang/rust/commit/24059f74d7669634dedc409293a0635f16c6ae76"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "75f057e1e1d8f605ac722dc73787a52175208222", "filename": "src/test/run-pass/backtrace.rs", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/8a7b1bca045b3b582f53337799b90a9309adc96b/src%2Ftest%2Frun-pass%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a7b1bca045b3b582f53337799b90a9309adc96b/src%2Ftest%2Frun-pass%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbacktrace.rs?ref=8a7b1bca045b3b582f53337799b90a9309adc96b", "patch": "@@ -51,13 +51,30 @@ fn template(me: &str) -> Command {\n     return m;\n }\n \n+fn expected(fn_name: &str) -> String {\n+    // FIXME(#32481)\n+    //\n+    // On windows, we read the function name from debuginfo using some\n+    // system APIs. For whatever reason, these APIs seem to use the\n+    // \"name\" field, which is only the \"relative\" name, not the full\n+    // name with namespace info, so we just see `foo` and not\n+    // `backtrace::foo` as we see on linux (which uses the linkage\n+    // name).\n+\n+    if cfg!(windows) {\n+        format!(\" - {}\", fn_name)\n+    } else {\n+        format!(\" - backtrace::{}\", fn_name)\n+    }\n+}\n+\n fn runtest(me: &str) {\n     // Make sure that the stack trace is printed\n     let p = template(me).arg(\"fail\").env(\"RUST_BACKTRACE\", \"1\").spawn().unwrap();\n     let out = p.wait_with_output().unwrap();\n     assert!(!out.status.success());\n     let s = str::from_utf8(&out.stderr).unwrap();\n-    assert!(s.contains(\"stack backtrace\") && s.contains(\" - backtrace::foo\"),\n+    assert!(s.contains(\"stack backtrace\") && s.contains(&expected(\"foo\")),\n             \"bad output: {}\", s);\n \n     // Make sure the stack trace is *not* printed\n@@ -67,7 +84,7 @@ fn runtest(me: &str) {\n     let out = p.wait_with_output().unwrap();\n     assert!(!out.status.success());\n     let s = str::from_utf8(&out.stderr).unwrap();\n-    assert!(!s.contains(\"stack backtrace\") && !s.contains(\" - backtrace::foo\"),\n+    assert!(!s.contains(\"stack backtrace\") && !s.contains(&expected(\"foo\")),\n             \"bad output2: {}\", s);\n \n     // Make sure a stack trace is printed\n@@ -77,7 +94,7 @@ fn runtest(me: &str) {\n     let s = str::from_utf8(&out.stderr).unwrap();\n     // loosened the following from double::h to double:: due to\n     // spurious failures on mac, 32bit, optimized\n-    assert!(s.contains(\"stack backtrace\") && s.contains(\" - backtrace::double\"),\n+    assert!(s.contains(\"stack backtrace\") && s.contains(&expected(\"double\")),\n             \"bad output3: {}\", s);\n \n     // Make sure a stack trace isn't printed too many times"}]}