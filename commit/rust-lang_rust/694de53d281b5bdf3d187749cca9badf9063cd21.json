{"sha": "694de53d281b5bdf3d187749cca9badf9063cd21", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5NGRlNTNkMjgxYjViZGYzZDE4Nzc0OWNjYTliYWRmOTA2M2NkMjE=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-02-01T11:08:44Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-02-01T11:23:13Z"}, "message": "Make vec::pop efficient", "tree": {"sha": "c6d764148df4c1f204181a1a28a7b392eba2d713", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6d764148df4c1f204181a1a28a7b392eba2d713"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/694de53d281b5bdf3d187749cca9badf9063cd21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/694de53d281b5bdf3d187749cca9badf9063cd21", "html_url": "https://github.com/rust-lang/rust/commit/694de53d281b5bdf3d187749cca9badf9063cd21", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/694de53d281b5bdf3d187749cca9badf9063cd21/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2dbaa05af8f2aeef709712725e103836405fa5f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/2dbaa05af8f2aeef709712725e103836405fa5f5", "html_url": "https://github.com/rust-lang/rust/commit/2dbaa05af8f2aeef709712725e103836405fa5f5"}], "stats": {"total": 17, "additions": 4, "deletions": 13}, "files": [{"sha": "357df699f877a23343622a23d56d44ab4b206540", "filename": "src/libcore/vec.rs", "status": "modified", "additions": 4, "deletions": 13, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/694de53d281b5bdf3d187749cca9badf9063cd21/src%2Flibcore%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/694de53d281b5bdf3d187749cca9badf9063cd21/src%2Flibcore%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fvec.rs?ref=694de53d281b5bdf3d187749cca9badf9063cd21", "patch": "@@ -294,27 +294,18 @@ fn shift<T: copy>(&v: [const T]) -> T {\n     ret e;\n }\n \n-// TODO: Write this, unsafely, in a way that's not O(n).\n /*\n Function: pop\n \n Remove the last element from a vector and return it\n */\n-fn pop<T: copy>(&v: [const T]) -> T {\n+fn pop<T>(&v: [const T]) -> T unsafe {\n     let ln = len(v);\n-    assert (ln > 0u);\n-    ln -= 1u;\n-    let e = v[ln];\n-    v = slice(v, 0u, ln);\n-    ret e;\n-// FIXME use this implementation after the next snapshot (27.01.2012)\n-/*  let new_ln = len(v) - 1u;\n-    assert (new_ln > 0u);\n-    let valptr = ptr::mut_addr_of(v[new_ln]);\n+    assert ln > 0u;\n+    let valptr = ptr::mut_addr_of(v[ln - 1u]);\n     let val <- *valptr;\n-    unsafe::set_len(v, new_ln);\n+    unsafe::set_len(v, ln - 1u);\n     val\n-*/\n }\n \n /*"}]}