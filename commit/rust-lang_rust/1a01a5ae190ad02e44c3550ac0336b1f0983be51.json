{"sha": "1a01a5ae190ad02e44c3550ac0336b1f0983be51", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhMDFhNWFlMTkwYWQwMmU0NGMzNTUwYWMwMzM2YjFmMDk4M2JlNTE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-04-30T08:55:59Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-04-30T08:55:59Z"}, "message": "internal: fix naming polarity\n\nType Constructors have *parameters*, when they are substituted with type\n*arguments*, we have a type.", "tree": {"sha": "b779be1e0b4b4fa0a7afda5dc6d81ec11f5eb428", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b779be1e0b4b4fa0a7afda5dc6d81ec11f5eb428"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a01a5ae190ad02e44c3550ac0336b1f0983be51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a01a5ae190ad02e44c3550ac0336b1f0983be51", "html_url": "https://github.com/rust-lang/rust/commit/1a01a5ae190ad02e44c3550ac0336b1f0983be51", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a01a5ae190ad02e44c3550ac0336b1f0983be51/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb3ef552e873a86e94a3792160fadb5d937a6f5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb3ef552e873a86e94a3792160fadb5d937a6f5f", "html_url": "https://github.com/rust-lang/rust/commit/cb3ef552e873a86e94a3792160fadb5d937a6f5f"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "d8ccfde0cfb055b984274fc9e0a2588d9f79a910", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1a01a5ae190ad02e44c3550ac0336b1f0983be51/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a01a5ae190ad02e44c3550ac0336b1f0983be51/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=1a01a5ae190ad02e44c3550ac0336b1f0983be51", "patch": "@@ -1984,7 +1984,7 @@ impl Type {\n         None\n     }\n \n-    pub fn type_parameters(&self) -> impl Iterator<Item = Type> + '_ {\n+    pub fn type_arguments(&self) -> impl Iterator<Item = Type> + '_ {\n         self.ty\n             .strip_references()\n             .as_adt()"}, {"sha": "f76715d84f3f1151af7bd2ee6c12a943f94f78ee", "filename": "crates/ide/src/runnables.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1a01a5ae190ad02e44c3550ac0336b1f0983be51/crates%2Fide%2Fsrc%2Frunnables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a01a5ae190ad02e44c3550ac0336b1f0983be51/crates%2Fide%2Fsrc%2Frunnables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Frunnables.rs?ref=1a01a5ae190ad02e44c3550ac0336b1f0983be51", "patch": "@@ -304,11 +304,11 @@ fn module_def_doctest(sema: &Semantics<RootDatabase>, def: hir::ModuleDef) -> Op\n                         let name = adt.name(sema.db);\n                         let idx = path.rfind(':').map_or(0, |idx| idx + 1);\n                         let (prefix, suffix) = path.split_at(idx);\n-                        let mut ty_params = ty.type_parameters().peekable();\n-                        let params = if ty_params.peek().is_some() {\n+                        let mut ty_args = ty.type_arguments().peekable();\n+                        let params = if ty_args.peek().is_some() {\n                             format!(\n                                 \"<{}>\",\n-                                ty_params.format_with(\", \", |ty, cb| cb(&ty.display(sema.db)))\n+                                ty_args.format_with(\", \", |ty, cb| cb(&ty.display(sema.db)))\n                             )\n                         } else {\n                             String::new()"}, {"sha": "b30652a9de66f9796828b5a937f8c0b99d7b7792", "filename": "crates/ide_assists/src/handlers/extract_function.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1a01a5ae190ad02e44c3550ac0336b1f0983be51/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a01a5ae190ad02e44c3550ac0336b1f0983be51/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_function.rs?ref=1a01a5ae190ad02e44c3550ac0336b1f0983be51", "patch": "@@ -1183,7 +1183,7 @@ fn make_ret_ty(ctx: &AssistContext, module: hir::Module, fun: &Function) -> Opti\n         }\n         FlowHandler::Try { kind: TryKind::Result { ty: parent_ret_ty } } => {\n             let handler_ty = parent_ret_ty\n-                .type_parameters()\n+                .type_arguments()\n                 .nth(1)\n                 .map(|ty| make_ty(&ty, ctx, module))\n                 .unwrap_or_else(make::ty_unit);"}, {"sha": "deafcd630e542ed1149848dc9c7263ca1708c357", "filename": "crates/ide_assists/src/utils/suggest_name.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1a01a5ae190ad02e44c3550ac0336b1f0983be51/crates%2Fide_assists%2Fsrc%2Futils%2Fsuggest_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a01a5ae190ad02e44c3550ac0336b1f0983be51/crates%2Fide_assists%2Fsrc%2Futils%2Fsuggest_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Futils%2Fsuggest_name.rs?ref=1a01a5ae190ad02e44c3550ac0336b1f0983be51", "patch": "@@ -227,7 +227,7 @@ fn name_of_type(ty: &hir::Type, db: &RootDatabase) -> Option<String> {\n         let name = adt.name(db).to_string();\n \n         if WRAPPER_TYPES.contains(&name.as_str()) {\n-            let inner_ty = ty.type_parameters().next()?;\n+            let inner_ty = ty.type_arguments().next()?;\n             return name_of_type(&inner_ty, db);\n         }\n "}]}