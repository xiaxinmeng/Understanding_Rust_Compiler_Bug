{"sha": "0ba7e2eaebf335dbc31b5d6dbc9c354737c7fe54", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiYTdlMmVhZWJmMzM1ZGJjMzFiNWQ2ZGJjOWMzNTQ3MzdjN2ZlNTQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-22T21:15:03Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-22T22:24:53Z"}, "message": "ad status command", "tree": {"sha": "9adf247619c28ed5e7cdeee118897231d8f2320c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9adf247619c28ed5e7cdeee118897231d8f2320c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ba7e2eaebf335dbc31b5d6dbc9c354737c7fe54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ba7e2eaebf335dbc31b5d6dbc9c354737c7fe54", "html_url": "https://github.com/rust-lang/rust/commit/0ba7e2eaebf335dbc31b5d6dbc9c354737c7fe54", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ba7e2eaebf335dbc31b5d6dbc9c354737c7fe54/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e08df3219d7a06b1e38c632e7f13967fb540769b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e08df3219d7a06b1e38c632e7f13967fb540769b", "html_url": "https://github.com/rust-lang/rust/commit/e08df3219d7a06b1e38c632e7f13967fb540769b"}], "stats": {"total": 68, "additions": 68, "deletions": 0}, "files": [{"sha": "3c53e75ac43240797608cfbe42079bc7ebe8ea92", "filename": "crates/ra_ide_api/src/lib.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0ba7e2eaebf335dbc31b5d6dbc9c354737c7fe54/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ba7e2eaebf335dbc31b5d6dbc9c354737c7fe54/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Flib.rs?ref=0ba7e2eaebf335dbc31b5d6dbc9c354737c7fe54", "patch": "@@ -15,6 +15,7 @@ pub mod mock_analysis;\n mod symbol_index;\n mod navigation_target;\n \n+mod status;\n mod completion;\n mod runnables;\n mod goto_definition;\n@@ -293,6 +294,11 @@ pub struct Analysis {\n }\n \n impl Analysis {\n+    /// Debug info about the current state of the analysis\n+    pub fn status(&self) -> String {\n+        status::status(&*self.db)\n+    }\n+\n     /// Gets the text of the source file.\n     pub fn file_text(&self, file_id: FileId) -> Arc<String> {\n         self.db.file_text(file_id)"}, {"sha": "d3e04be230c233d12d972111bd250a3fd5ab3cc2", "filename": "crates/ra_ide_api/src/status.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/0ba7e2eaebf335dbc31b5d6dbc9c354737c7fe54/crates%2Fra_ide_api%2Fsrc%2Fstatus.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ba7e2eaebf335dbc31b5d6dbc9c354737c7fe54/crates%2Fra_ide_api%2Fsrc%2Fstatus.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fstatus.rs?ref=0ba7e2eaebf335dbc31b5d6dbc9c354737c7fe54", "patch": "@@ -0,0 +1,15 @@\n+use ra_db::{\n+    LocationIntener, SourceFileQuery,\n+    salsa::{Database, debug::DebugQueryTable},\n+};\n+\n+use crate::db::RootDatabase;\n+\n+pub(crate) fn status(db: &RootDatabase) -> String {\n+    let n_parsed_files = db.query(SourceFileQuery).keys::<Vec<_>>().len();\n+    let n_defs = {\n+        let interner: &LocationIntener<hir::DefLoc, hir::DefId> = db.as_ref();\n+        interner.len()\n+    };\n+    format!(\"#n_parsed_files {}\\n#n_defs {}\\n\", n_parsed_files, n_defs)\n+}"}, {"sha": "f51576521e93c6afd2548148de65a01f1314f94c", "filename": "crates/ra_lsp_server/src/main_loop.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0ba7e2eaebf335dbc31b5d6dbc9c354737c7fe54/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ba7e2eaebf335dbc31b5d6dbc9c354737c7fe54/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs?ref=0ba7e2eaebf335dbc31b5d6dbc9c354737c7fe54", "patch": "@@ -285,6 +285,7 @@ fn on_request(\n         sender,\n     };\n     let req = pool_dispatcher\n+        .on::<req::AnalyzerStatus>(handlers::handle_analyzer_status)?\n         .on::<req::SyntaxTree>(handlers::handle_syntax_tree)?\n         .on::<req::ExtendSelection>(handlers::handle_extend_selection)?\n         .on::<req::FindMatchingBrace>(handlers::handle_find_matching_brace)?"}, {"sha": "d84f762f4dd9565f397dd111e8c1865a5959da73", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0ba7e2eaebf335dbc31b5d6dbc9c354737c7fe54/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ba7e2eaebf335dbc31b5d6dbc9c354737c7fe54/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=0ba7e2eaebf335dbc31b5d6dbc9c354737c7fe54", "patch": "@@ -23,6 +23,10 @@ use crate::{\n     LspError, Result,\n };\n \n+pub fn handle_analyzer_status(world: ServerWorld, _: ()) -> Result<String> {\n+    Ok(world.status())\n+}\n+\n pub fn handle_syntax_tree(world: ServerWorld, params: req::SyntaxTreeParams) -> Result<String> {\n     let id = params.text_document.try_conv_with(&world)?;\n     let res = world.analysis().syntax_tree(id);"}, {"sha": "ec6b6d905cd859bcbd541e88b255c309308a66e3", "filename": "crates/ra_lsp_server/src/req.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0ba7e2eaebf335dbc31b5d6dbc9c354737c7fe54/crates%2Fra_lsp_server%2Fsrc%2Freq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ba7e2eaebf335dbc31b5d6dbc9c354737c7fe54/crates%2Fra_lsp_server%2Fsrc%2Freq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Freq.rs?ref=0ba7e2eaebf335dbc31b5d6dbc9c354737c7fe54", "patch": "@@ -11,6 +11,14 @@ pub use lsp_types::{\n     TextDocumentPositionParams, TextEdit, WorkspaceEdit, WorkspaceSymbolParams,\n };\n \n+pub enum AnalyzerStatus {}\n+\n+impl Request for AnalyzerStatus {\n+    type Params = ();\n+    type Result = String;\n+    const METHOD: &'static str = \"ra/analyzerStatus\";\n+}\n+\n pub enum SyntaxTree {}\n \n impl Request for SyntaxTree {"}, {"sha": "5cb97b29b70c27883c2c8cf82e2701defcccfca4", "filename": "crates/ra_lsp_server/src/server_world.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/0ba7e2eaebf335dbc31b5d6dbc9c354737c7fe54/crates%2Fra_lsp_server%2Fsrc%2Fserver_world.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ba7e2eaebf335dbc31b5d6dbc9c354737c7fe54/crates%2Fra_lsp_server%2Fsrc%2Fserver_world.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fserver_world.rs?ref=0ba7e2eaebf335dbc31b5d6dbc9c354737c7fe54", "patch": "@@ -264,4 +264,19 @@ impl ServerWorld {\n             .map_err(|_| format_err!(\"can't convert path to url: {}\", path.display()))?;\n         Ok(url)\n     }\n+\n+    pub fn status(&self) -> String {\n+        let mut res = String::new();\n+        if self.workspaces.is_empty() {\n+            res.push_str(\"no workspaces\\n\")\n+        } else {\n+            res.push_str(\"workspaces:\\n\");\n+            for w in self.workspaces.iter() {\n+                res += &format!(\"{} packages loaded\\n\", w.cargo.packages().count());\n+            }\n+        }\n+        res.push_str(\"\\nanalysis:\\n\");\n+        res.push_str(&self.analysis.status());\n+        res\n+    }\n }"}, {"sha": "3e07032c7ff0c6b72c16e2d3e06da6cc39856875", "filename": "editors/code/package.json", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0ba7e2eaebf335dbc31b5d6dbc9c354737c7fe54/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/0ba7e2eaebf335dbc31b5d6dbc9c354737c7fe54/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=0ba7e2eaebf335dbc31b5d6dbc9c354737c7fe54", "patch": "@@ -94,6 +94,10 @@\n             {\n                 \"command\": \"ra-lsp.run\",\n                 \"title\": \"Rust Run\"\n+            },\n+            {\n+                \"command\": \"ra-lsp.analyzerStatus\",\n+                \"title\": \"Status of rust-analyzer (debug)\"\n             }\n         ],\n         \"keybindings\": ["}, {"sha": "5c56b9c4cd53010d9d3dc7afe619e1bafaaf992f", "filename": "editors/code/src/commands/analyzer_status.ts", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0ba7e2eaebf335dbc31b5d6dbc9c354737c7fe54/editors%2Fcode%2Fsrc%2Fcommands%2Fanalyzer_status.ts", "raw_url": "https://github.com/rust-lang/rust/raw/0ba7e2eaebf335dbc31b5d6dbc9c354737c7fe54/editors%2Fcode%2Fsrc%2Fcommands%2Fanalyzer_status.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fanalyzer_status.ts?ref=0ba7e2eaebf335dbc31b5d6dbc9c354737c7fe54", "patch": "@@ -0,0 +1,12 @@\n+import * as vscode from 'vscode';\n+import { Server } from '../server';\n+\n+// Shows status of rust-analyzer (for debugging)\n+export async function handle() {\n+    const status = await Server.client.sendRequest<string>(\n+        'ra/analyzerStatus',\n+        null\n+    );\n+    const doc = await vscode.workspace.openTextDocument({ content: status });\n+    await vscode.window.showTextDocument(doc, vscode.ViewColumn.Two);\n+}"}, {"sha": "f36c4b040f556a0bf13a87e2d45f995c0c6bff0f", "filename": "editors/code/src/commands/index.ts", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0ba7e2eaebf335dbc31b5d6dbc9c354737c7fe54/editors%2Fcode%2Fsrc%2Fcommands%2Findex.ts", "raw_url": "https://github.com/rust-lang/rust/raw/0ba7e2eaebf335dbc31b5d6dbc9c354737c7fe54/editors%2Fcode%2Fsrc%2Fcommands%2Findex.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Findex.ts?ref=0ba7e2eaebf335dbc31b5d6dbc9c354737c7fe54", "patch": "@@ -1,3 +1,4 @@\n+import * as analyzerStatus from './analyzer_status';\n import * as applySourceChange from './apply_source_change';\n import * as extendSelection from './extend_selection';\n import * as joinLines from './join_lines';\n@@ -8,6 +9,7 @@ import * as runnables from './runnables';\n import * as syntaxTree from './syntaxTree';\n \n export {\n+    analyzerStatus,\n     applySourceChange,\n     extendSelection,\n     joinLines,"}, {"sha": "288a852aa3f8a9bf1874dfe70f993ae4b3e921ce", "filename": "editors/code/src/extension.ts", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0ba7e2eaebf335dbc31b5d6dbc9c354737c7fe54/editors%2Fcode%2Fsrc%2Fextension.ts", "raw_url": "https://github.com/rust-lang/rust/raw/0ba7e2eaebf335dbc31b5d6dbc9c354737c7fe54/editors%2Fcode%2Fsrc%2Fextension.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fextension.ts?ref=0ba7e2eaebf335dbc31b5d6dbc9c354737c7fe54", "patch": "@@ -45,6 +45,7 @@ export function activate(context: vscode.ExtensionContext) {\n     }\n \n     // Commands are requests from vscode to the language server\n+    registerCommand('ra-lsp.analyzerStatus', commands.analyzerStatus.handle);\n     registerCommand('ra-lsp.syntaxTree', commands.syntaxTree.handle);\n     registerCommand('ra-lsp.extendSelection', commands.extendSelection.handle);\n     registerCommand('ra-lsp.matchingBrace', commands.matchingBrace.handle);"}]}