{"sha": "a80e685e11a6876d3ec1e54f4e5fafd92c6c4eb2", "node_id": "C_kwDOAAsO6NoAKGE4MGU2ODVlMTFhNjg3NmQzZWMxZTU0ZjRlNWZhZmQ5MmM2YzRlYjI", "commit": {"author": {"name": "Stein Somers", "email": "git@steinsomers.be", "date": "2022-02-18T15:01:39Z"}, "committer": {"name": "Stein Somers", "email": "git@steinsomers.be", "date": "2022-05-02T08:07:51Z"}, "message": "Test leaking of BinaryHeap Drain iterators", "tree": {"sha": "27e5000b29463aa32e6632aacd03c06430773caa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27e5000b29463aa32e6632aacd03c06430773caa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a80e685e11a6876d3ec1e54f4e5fafd92c6c4eb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a80e685e11a6876d3ec1e54f4e5fafd92c6c4eb2", "html_url": "https://github.com/rust-lang/rust/commit/a80e685e11a6876d3ec1e54f4e5fafd92c6c4eb2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a80e685e11a6876d3ec1e54f4e5fafd92c6c4eb2/comments", "author": {"login": "ssomers", "id": 10174877, "node_id": "MDQ6VXNlcjEwMTc0ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/10174877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssomers", "html_url": "https://github.com/ssomers", "followers_url": "https://api.github.com/users/ssomers/followers", "following_url": "https://api.github.com/users/ssomers/following{/other_user}", "gists_url": "https://api.github.com/users/ssomers/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssomers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssomers/subscriptions", "organizations_url": "https://api.github.com/users/ssomers/orgs", "repos_url": "https://api.github.com/users/ssomers/repos", "events_url": "https://api.github.com/users/ssomers/events{/privacy}", "received_events_url": "https://api.github.com/users/ssomers/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ssomers", "id": 10174877, "node_id": "MDQ6VXNlcjEwMTc0ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/10174877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssomers", "html_url": "https://github.com/ssomers", "followers_url": "https://api.github.com/users/ssomers/followers", "following_url": "https://api.github.com/users/ssomers/following{/other_user}", "gists_url": "https://api.github.com/users/ssomers/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssomers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssomers/subscriptions", "organizations_url": "https://api.github.com/users/ssomers/orgs", "repos_url": "https://api.github.com/users/ssomers/repos", "events_url": "https://api.github.com/users/ssomers/events{/privacy}", "received_events_url": "https://api.github.com/users/ssomers/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "204f854586cebc5b2e46b1c83fb6d83fe01acf6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/204f854586cebc5b2e46b1c83fb6d83fe01acf6a", "html_url": "https://github.com/rust-lang/rust/commit/204f854586cebc5b2e46b1c83fb6d83fe01acf6a"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "4a4c6fbdcfe005f557f62e0d4171f6f28e7c7e68", "filename": "library/alloc/src/collections/binary_heap/tests.rs", "status": "modified", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/a80e685e11a6876d3ec1e54f4e5fafd92c6c4eb2/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a80e685e11a6876d3ec1e54f4e5fafd92c6c4eb2/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap%2Ftests.rs?ref=a80e685e11a6876d3ec1e54f4e5fafd92c6c4eb2", "patch": "@@ -317,6 +317,59 @@ fn test_drain_sorted_leak() {\n     assert!(q.is_empty());\n }\n \n+#[test]\n+fn test_drain_forget() {\n+    let a = CrashTestDummy::new(0);\n+    let b = CrashTestDummy::new(1);\n+    let c = CrashTestDummy::new(2);\n+    let mut q =\n+        BinaryHeap::from(vec![a.spawn(Panic::Never), b.spawn(Panic::Never), c.spawn(Panic::Never)]);\n+\n+    catch_unwind(AssertUnwindSafe(|| {\n+        let mut it = q.drain();\n+        it.next();\n+        mem::forget(it);\n+    }))\n+    .unwrap();\n+    // Behaviour after leaking is explicitly unspecified and order is arbitrary,\n+    // so it's fine if these start failing, but probably worth knowing.\n+    assert!(q.is_empty());\n+    assert_eq!(a.dropped() + b.dropped() + c.dropped(), 1);\n+    assert_eq!(a.dropped(), 0);\n+    assert_eq!(b.dropped(), 0);\n+    assert_eq!(c.dropped(), 1);\n+    drop(q);\n+    assert_eq!(a.dropped(), 0);\n+    assert_eq!(b.dropped(), 0);\n+    assert_eq!(c.dropped(), 1);\n+}\n+\n+#[test]\n+fn test_drain_sorted_forget() {\n+    let a = CrashTestDummy::new(0);\n+    let b = CrashTestDummy::new(1);\n+    let c = CrashTestDummy::new(2);\n+    let mut q =\n+        BinaryHeap::from(vec![a.spawn(Panic::Never), b.spawn(Panic::Never), c.spawn(Panic::Never)]);\n+\n+    catch_unwind(AssertUnwindSafe(|| {\n+        let mut it = q.drain_sorted();\n+        it.next();\n+        mem::forget(it);\n+    }))\n+    .unwrap();\n+    // Behaviour after leaking is explicitly unspecified,\n+    // so it's fine if these start failing, but probably worth knowing.\n+    assert_eq!(q.len(), 2);\n+    assert_eq!(a.dropped(), 0);\n+    assert_eq!(b.dropped(), 0);\n+    assert_eq!(c.dropped(), 1);\n+    drop(q);\n+    assert_eq!(a.dropped(), 1);\n+    assert_eq!(b.dropped(), 1);\n+    assert_eq!(c.dropped(), 1);\n+}\n+\n #[test]\n fn test_extend_ref() {\n     let mut a = BinaryHeap::new();"}]}