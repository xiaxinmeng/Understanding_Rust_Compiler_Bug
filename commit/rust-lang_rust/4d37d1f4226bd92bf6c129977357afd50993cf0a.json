{"sha": "4d37d1f4226bd92bf6c129977357afd50993cf0a", "node_id": "C_kwDOAAsO6NoAKDRkMzdkMWY0MjI2YmQ5MmJmNmMxMjk5NzczNTdhZmQ1MDk5M2NmMGE", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2022-04-03T20:19:30Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2022-04-03T20:19:30Z"}, "message": "Refer to the `exposed` versions of the methods instead\n\nChanging to those doesn't introduce any new unsoundness over the existing ones, so they're the better \"if you won't want to think about it\" replacement.  But also mention the strict provenance APIs, as that's what we'd rather they use instead.", "tree": {"sha": "a4d302c8923032b476de7ee265b063d4f0fd33fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4d302c8923032b476de7ee265b063d4f0fd33fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d37d1f4226bd92bf6c129977357afd50993cf0a", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmN8BQAACgkQ+boUO5X/\nbYJoMhAAnyjM50ijDkRKtc9XW2bQ/1Mvo/oeQLrmFMK/2cC26M2FSn6nV06xgqUA\nLF8M+llBgOba4oGvNS1inTRJI/LX1F6XJameHZNLDTMFUjlIydToX2p68QT8ce7Q\n/EPzRGxYEsKAEPXpRtk2dDps+ohtIstRXpTuNe/gXlfN7ljP5uQPZea7UpP9rcZX\npseNjiFbOKDxCiU/b4kiOb3SKYIyD4YC7TEIZaWVwtYb9ouZBCDSasxqcaG5ofPK\nPNct9RBsvh71OL4Lws+B5HcYNwK5G3MG1fQMIaYdXUVzj3pCikvXIHpbJZ5uWx60\n65HqvR2qeF3+nZoLSsC5zXG/JePm1epY2vZTYAuH9d1JrdanSE2hmIpmufq9pwkR\nibQOUGpSHLQMULyWxSdweBDaJG31cTc8t59FkSw2ENF9+fatHL1hEWBxp/FWQx1O\n2ASssHKcoHYKbSFNw7jn+9hAQ/+FFIh+MxgvSDSqumvIY87SDqZcvCX1H5j5o620\nRUGWF/Fl1KoZ07G/c0Q1m8Bi/vcI5D9EP2yyh8Wsq8pWUJSsekZpr0MwVyiJbI3L\nbXLj9p7DRAbbDhoYpO3yu+hinOjQ2Mi59niyyKTfr15SWLEdqYyJVYapZtMe/oi5\nmBMv6/8ZZWdfnwwsiGgurxSavZD8my9H/FYWJip8zPs/J4yj3VE=\n=Vvpz\n-----END PGP SIGNATURE-----", "payload": "tree a4d302c8923032b476de7ee265b063d4f0fd33fc\nparent 90722811c8818b1ce4c7819dac41f22837fa98c6\nauthor Scott McMurray <scottmcm@users.noreply.github.com> 1649017170 -0700\ncommitter Scott McMurray <scottmcm@users.noreply.github.com> 1649017170 -0700\n\nRefer to the `exposed` versions of the methods instead\n\nChanging to those doesn't introduce any new unsoundness over the existing ones, so they're the better \"if you won't want to think about it\" replacement.  But also mention the strict provenance APIs, as that's what we'd rather they use instead.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d37d1f4226bd92bf6c129977357afd50993cf0a", "html_url": "https://github.com/rust-lang/rust/commit/4d37d1f4226bd92bf6c129977357afd50993cf0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d37d1f4226bd92bf6c129977357afd50993cf0a/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90722811c8818b1ce4c7819dac41f22837fa98c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/90722811c8818b1ce4c7819dac41f22837fa98c6", "html_url": "https://github.com/rust-lang/rust/commit/90722811c8818b1ce4c7819dac41f22837fa98c6"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "2c371f635ab970b4f51623759980168b84374a11", "filename": "library/core/src/ptr/const_ptr.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4d37d1f4226bd92bf6c129977357afd50993cf0a/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d37d1f4226bd92bf6c129977357afd50993cf0a/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs?ref=4d37d1f4226bd92bf6c129977357afd50993cf0a", "patch": "@@ -119,7 +119,11 @@ impl<T: ?Sized> *const T {\n     /// assert_eq!(p1.to_bits() - p0.to_bits(), 4);\n     /// ```\n     #[unstable(feature = \"ptr_to_from_bits\", issue = \"91126\")]\n-    #[rustc_deprecated(since = \"1.62\", reason = \"replaced by the `addr` method\")]\n+    #[rustc_deprecated(\n+        since = \"1.62\",\n+        reason = \"replaced by the `exposed_addr` method, or update your code \\\n+            to follow the strict provenance rules using its APIs\"\n+    )]\n     pub fn to_bits(self) -> usize\n     where\n         T: Sized,\n@@ -143,7 +147,8 @@ impl<T: ?Sized> *const T {\n     #[unstable(feature = \"ptr_to_from_bits\", issue = \"91126\")]\n     #[rustc_deprecated(\n         since = \"1.62\",\n-        reason = \"replaced by the `with_addr` method or the `ptr::invalid` function\"\n+        reason = \"replaced by the `ptr::from_exposed_addr` function, or update \\\n+            your code to follow the strict provenance rules using its APIs\"\n     )]\n     #[allow(fuzzy_provenance_casts)] // this is an unstable and semi-deprecated cast function\n     pub fn from_bits(bits: usize) -> Self"}, {"sha": "7968253156237042e35c49db460a572373d9769d", "filename": "library/core/src/ptr/mut_ptr.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4d37d1f4226bd92bf6c129977357afd50993cf0a/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d37d1f4226bd92bf6c129977357afd50993cf0a/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs?ref=4d37d1f4226bd92bf6c129977357afd50993cf0a", "patch": "@@ -125,7 +125,11 @@ impl<T: ?Sized> *mut T {\n     /// assert_eq!(p1.to_bits() - p0.to_bits(), 4);\n     /// ```\n     #[unstable(feature = \"ptr_to_from_bits\", issue = \"91126\")]\n-    #[rustc_deprecated(since = \"1.62\", reason = \"replaced by the `addr` method\")]\n+    #[rustc_deprecated(\n+        since = \"1.62\",\n+        reason = \"replaced by the `exposed_addr` method, or update your code \\\n+            to follow the strict provenance rules using its APIs\"\n+    )]\n     pub fn to_bits(self) -> usize\n     where\n         T: Sized,\n@@ -149,7 +153,8 @@ impl<T: ?Sized> *mut T {\n     #[unstable(feature = \"ptr_to_from_bits\", issue = \"91126\")]\n     #[rustc_deprecated(\n         since = \"1.62\",\n-        reason = \"replaced by the `with_addr` method or the `ptr::invalid_mut` function\"\n+        reason = \"replaced by the `ptr::from_exposed_addr_mut` function, or \\\n+            update your code to follow the strict provenance rules using its APIs\"\n     )]\n     #[allow(fuzzy_provenance_casts)] // this is an unstable and semi-deprecated cast function\n     pub fn from_bits(bits: usize) -> Self"}]}