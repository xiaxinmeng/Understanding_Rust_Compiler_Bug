{"sha": "f955d06ca9bf424b3de679319b52c4f4a2d65aee", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5NTVkMDZjYTliZjQyNGIzZGU2NzkzMTliNTJjNGY0YTJkNjVhZWU=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-02T19:33:51Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-02T19:33:51Z"}, "message": "Don't unify the *input* to init-box with a box constraint, nurr.", "tree": {"sha": "c831e060c5bccaf66af181583769dc994f85196f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c831e060c5bccaf66af181583769dc994f85196f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f955d06ca9bf424b3de679319b52c4f4a2d65aee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f955d06ca9bf424b3de679319b52c4f4a2d65aee", "html_url": "https://github.com/rust-lang/rust/commit/f955d06ca9bf424b3de679319b52c4f4a2d65aee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f955d06ca9bf424b3de679319b52c4f4a2d65aee/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0efce5ebe2ffff47dd75ec68edc9dc4857da6c8d", "url": "https://api.github.com/repos/rust-lang/rust/commits/0efce5ebe2ffff47dd75ec68edc9dc4857da6c8d", "html_url": "https://github.com/rust-lang/rust/commit/0efce5ebe2ffff47dd75ec68edc9dc4857da6c8d"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "5eec68602d7b32e18ecb25e0afaba914495dbb05", "filename": "src/boot/me/type.ml", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f955d06ca9bf424b3de679319b52c4f4a2d65aee/src%2Fboot%2Fme%2Ftype.ml", "raw_url": "https://github.com/rust-lang/rust/raw/f955d06ca9bf424b3de679319b52c4f4a2d65aee/src%2Fboot%2Fme%2Ftype.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftype.ml?ref=f955d06ca9bf424b3de679319b52c4f4a2d65aee", "patch": "@@ -1275,9 +1275,10 @@ let process_crate (cx:ctxt) (crate:Ast.crate) : unit =\n             unify_lval rval_ctx lval (ty Ast.TY_task);\n \n         | Ast.STMT_init_box (dst, v) ->\n-            let tv = ref (TYSPEC_mutable (ref (TYSPEC_box (any())))) in\n+            let in_tv = any() in\n+            let tv = ref (TYSPEC_mutable (ref (TYSPEC_box in_tv))) in\n               unify_lval strict_ctx dst tv;\n-              unify_atom rval_ctx v tv;\n+              unify_atom rval_ctx v in_tv;\n \n         (* FIXME (issue #52): Finish these. *)\n         (* Fake-typecheck a few comm-related statements for now, just enough"}]}