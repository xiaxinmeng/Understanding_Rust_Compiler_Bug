{"sha": "ab93a139ef110f977f08d5bedc744654efe729f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiOTNhMTM5ZWYxMTBmOTc3ZjA4ZDViZWRjNzQ0NjU0ZWZlNzI5ZjY=", "commit": {"author": {"name": "Alessandro Decina", "email": "alessandro.d@gmail.com", "date": "2021-05-29T12:21:23Z"}, "committer": {"name": "Alessandro Decina", "email": "alessandro.d@gmail.com", "date": "2021-05-29T12:23:32Z"}, "message": "BPF: misc minor review fixes", "tree": {"sha": "083e8eaeb2a4865e2c1acb38cb4ec5fe72135d3c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/083e8eaeb2a4865e2c1acb38cb4ec5fe72135d3c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab93a139ef110f977f08d5bedc744654efe729f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab93a139ef110f977f08d5bedc744654efe729f6", "html_url": "https://github.com/rust-lang/rust/commit/ab93a139ef110f977f08d5bedc744654efe729f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab93a139ef110f977f08d5bedc744654efe729f6/comments", "author": {"login": "alessandrod", "id": 62002, "node_id": "MDQ6VXNlcjYyMDAy", "avatar_url": "https://avatars.githubusercontent.com/u/62002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alessandrod", "html_url": "https://github.com/alessandrod", "followers_url": "https://api.github.com/users/alessandrod/followers", "following_url": "https://api.github.com/users/alessandrod/following{/other_user}", "gists_url": "https://api.github.com/users/alessandrod/gists{/gist_id}", "starred_url": "https://api.github.com/users/alessandrod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alessandrod/subscriptions", "organizations_url": "https://api.github.com/users/alessandrod/orgs", "repos_url": "https://api.github.com/users/alessandrod/repos", "events_url": "https://api.github.com/users/alessandrod/events{/privacy}", "received_events_url": "https://api.github.com/users/alessandrod/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alessandrod", "id": 62002, "node_id": "MDQ6VXNlcjYyMDAy", "avatar_url": "https://avatars.githubusercontent.com/u/62002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alessandrod", "html_url": "https://github.com/alessandrod", "followers_url": "https://api.github.com/users/alessandrod/followers", "following_url": "https://api.github.com/users/alessandrod/following{/other_user}", "gists_url": "https://api.github.com/users/alessandrod/gists{/gist_id}", "starred_url": "https://api.github.com/users/alessandrod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alessandrod/subscriptions", "organizations_url": "https://api.github.com/users/alessandrod/orgs", "repos_url": "https://api.github.com/users/alessandrod/repos", "events_url": "https://api.github.com/users/alessandrod/events{/privacy}", "received_events_url": "https://api.github.com/users/alessandrod/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd8e5ce4b9353ad68b2180bf9f26e2d4cfcaf0af", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd8e5ce4b9353ad68b2180bf9f26e2d4cfcaf0af", "html_url": "https://github.com/rust-lang/rust/commit/bd8e5ce4b9353ad68b2180bf9f26e2d4cfcaf0af"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "764cc735d75d1b1d02b75d425b075e8153243e4e", "filename": "compiler/rustc_target/src/spec/bpf_base.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ab93a139ef110f977f08d5bedc744654efe729f6/compiler%2Frustc_target%2Fsrc%2Fspec%2Fbpf_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab93a139ef110f977f08d5bedc744654efe729f6/compiler%2Frustc_target%2Fsrc%2Fspec%2Fbpf_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fbpf_base.rs?ref=ab93a139ef110f977f08d5bedc744654efe729f6", "patch": "@@ -12,6 +12,10 @@ pub fn opts(endian: Endian) -> TargetOptions {\n         no_builtins: true,\n         panic_strategy: PanicStrategy::Abort,\n         position_independent_executables: true,\n+        // Disable MergeFunctions since:\n+        // - older kernels don't support bpf-to-bpf calls\n+        // - on newer kernels, userspace still needs to relocate before calling\n+        //   BPF_PROG_LOAD and not all BPF libraries do that yet\n         merge_functions: MergeFunctions::Disabled,\n         obj_is_bitcode: true,\n         requires_lto: false,"}, {"sha": "be78b2829fc965a9106313a008bd46e941afa3cb", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ab93a139ef110f977f08d5bedc744654efe729f6/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab93a139ef110f977f08d5bedc744654efe729f6/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=ab93a139ef110f977f08d5bedc744654efe729f6", "patch": "@@ -235,8 +235,8 @@ impl Step for Llvm {\n         let llvm_targets = match &builder.config.llvm_targets {\n             Some(s) => s,\n             None => {\n-                \"AArch64;ARM;Hexagon;MSP430;Mips;NVPTX;PowerPC;RISCV;\\\n-                     Sparc;SystemZ;WebAssembly;X86;BPF\"\n+                \"AArch64;ARM;BPF;Hexagon;MSP430;Mips;NVPTX;PowerPC;RISCV;\\\n+                     Sparc;SystemZ;WebAssembly;X86\"\n             }\n         };\n "}, {"sha": "03dbf4fb617f4c2fd7f8ed637ed124bc39a788f1", "filename": "src/doc/unstable-book/src/library-features/asm.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ab93a139ef110f977f08d5bedc744654efe729f6/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fasm.md", "raw_url": "https://github.com/rust-lang/rust/raw/ab93a139ef110f977f08d5bedc744654efe729f6/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fasm.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fasm.md?ref=ab93a139ef110f977f08d5bedc744654efe729f6", "patch": "@@ -571,8 +571,8 @@ Here is the list of currently supported register classes:\n | PowerPC | `reg_nonzero` | | `r[1-31]` | `b` |\n | PowerPC | `freg` | `f[0-31]` | `f` |\n | wasm32 | `local` | None\\* | `r` |\n-| BPF | `reg` |\u00a0`r[0-10]` | `r`|\n-| BPF | `wreg` |\u00a0`w[0-10]` | `w`|\n+| BPF | `reg` |\u00a0`r[0-10]` | `r` |\n+| BPF | `wreg` |\u00a0`w[0-10]` | `w` |\n \n > **Note**: On x86 we treat `reg_byte` differently from `reg` because the compiler can allocate `al` and `ah` separately whereas `reg` reserves the whole register.\n >\n@@ -619,7 +619,7 @@ Each register class has constraints on which value types they can be used with.\n | PowerPC | `freg` | None | `f32`, `f64` |\n | wasm32 | `local` | None | `i8` `i16` `i32` `i64` `f32` `f64` |\n | BPF |\u00a0`reg` |\u00a0None | `i8` `i16` `i32` `i64` |\n-| BPF |\u00a0`wreg` |\u00a0`alu32` | `i8` `i16` `i32`|\n+| BPF |\u00a0`wreg` |\u00a0`alu32` | `i8` `i16` `i32` |\n \n > **Note**: For the purposes of the above table pointers, function pointers and `isize`/`usize` are treated as the equivalent integer type (`i16`/`i32`/`i64` depending on the target).\n "}, {"sha": "e3e5489403812f3757b8a9425aa3fcf8150674fd", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ab93a139ef110f977f08d5bedc744654efe729f6/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab93a139ef110f977f08d5bedc744654efe729f6/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=ab93a139ef110f977f08d5bedc744654efe729f6", "patch": "@@ -2311,10 +2311,6 @@ impl<'test> TestCx<'test> {\n                 // No extra flags needed.\n             }\n \n-            Some(\"bpf-linker\") => {\n-                rustc.arg(\"-Clink-args=--emit=asm\");\n-            }\n-\n             Some(_) => self.fatal(\"unknown 'assembly-output' header\"),\n             None => self.fatal(\"missing 'assembly-output' header\"),\n         }"}, {"sha": "37164c4e5752a26aeb2e837a95a74c077d1b9bed", "filename": "src/tools/compiletest/src/util.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ab93a139ef110f977f08d5bedc744654efe729f6/src%2Ftools%2Fcompiletest%2Fsrc%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab93a139ef110f977f08d5bedc744654efe729f6/src%2Ftools%2Fcompiletest%2Fsrc%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Futil.rs?ref=ab93a139ef110f977f08d5bedc744654efe729f6", "patch": "@@ -48,8 +48,8 @@ const ARCH_TABLE: &[(&str, &str)] = &[\n     (\"armv7s\", \"arm\"),\n     (\"asmjs\", \"asmjs\"),\n     (\"avr\", \"avr\"),\n-    (\"bpfeb\", \"bpfeb\"),\n-    (\"bpfel\", \"bpfel\"),\n+    (\"bpfeb\", \"bpf\"),\n+    (\"bpfel\", \"bpf\"),\n     (\"hexagon\", \"hexagon\"),\n     (\"i386\", \"x86\"),\n     (\"i586\", \"x86\"),"}]}