{"sha": "21224e6ee07b917f7996b27f05c57327f806a026", "node_id": "C_kwDOAAsO6NoAKDIxMjI0ZTZlZTA3YjkxN2Y3OTk2YjI3ZjA1YzU3MzI3ZjgwNmEwMjY", "commit": {"author": {"name": "Esteban Kuber", "email": "esteban@kuber.com.ar", "date": "2021-09-09T17:05:03Z"}, "committer": {"name": "Esteban Kuber", "email": "esteban@kuber.com.ar", "date": "2021-11-23T20:36:19Z"}, "message": "Account for confusable codepoints when recovering emoji identifiers", "tree": {"sha": "de129d5fa6e809386bc0f0e92e1ee828c78dfbea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de129d5fa6e809386bc0f0e92e1ee828c78dfbea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21224e6ee07b917f7996b27f05c57327f806a026", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21224e6ee07b917f7996b27f05c57327f806a026", "html_url": "https://github.com/rust-lang/rust/commit/21224e6ee07b917f7996b27f05c57327f806a026", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21224e6ee07b917f7996b27f05c57327f806a026/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4489aeb907eb4de3fc6eeb132e281ab725cf6b89", "url": "https://api.github.com/repos/rust-lang/rust/commits/4489aeb907eb4de3fc6eeb132e281ab725cf6b89", "html_url": "https://github.com/rust-lang/rust/commit/4489aeb907eb4de3fc6eeb132e281ab725cf6b89"}], "stats": {"total": 37, "additions": 30, "deletions": 7}, "files": [{"sha": "9403e0af595e6552639d27d27cf01116fa570c53", "filename": "compiler/rustc_parse/src/lexer/mod.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/21224e6ee07b917f7996b27f05c57327f806a026/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21224e6ee07b917f7996b27f05c57327f806a026/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs?ref=21224e6ee07b917f7996b27f05c57327f806a026", "patch": "@@ -1,3 +1,4 @@\n+use crate::lexer::unicode_chars::UNICODE_ARRAY;\n use rustc_ast::ast::{self, AttrStyle};\n use rustc_ast::token::{self, CommentKind, Token, TokenKind};\n use rustc_ast::tokenstream::{Spacing, TokenStream};\n@@ -222,7 +223,17 @@ impl<'a> StringReader<'a> {\n                 }\n                 token::Ident(sym, is_raw_ident)\n             }\n-            rustc_lexer::TokenKind::InvalidIdent => {\n+            rustc_lexer::TokenKind::InvalidIdent\n+                // Do not recover an identifier with emojis if the codepoint is a confusable\n+                // with a recoverable substitution token, like `\u2796`.\n+                if UNICODE_ARRAY\n+                    .iter()\n+                    .find(|&&(c, _, _)| {\n+                        let sym = self.str_from(start);\n+                        sym.chars().count() == 1 && c == sym.chars().next().unwrap()\n+                    })\n+                    .is_none() =>\n+            {\n                 let sym = nfc_normalize(self.str_from(start));\n                 let span = self.mk_sp(start, self.pos);\n                 self.sess.bad_unicode_identifiers.borrow_mut().entry(sym).or_default().push(span);\n@@ -299,7 +310,7 @@ impl<'a> StringReader<'a> {\n             rustc_lexer::TokenKind::Caret => token::BinOp(token::Caret),\n             rustc_lexer::TokenKind::Percent => token::BinOp(token::Percent),\n \n-            rustc_lexer::TokenKind::Unknown => {\n+            rustc_lexer::TokenKind::Unknown | rustc_lexer::TokenKind::InvalidIdent => {\n                 let c = self.str_from(start).chars().next().unwrap();\n                 let mut err =\n                     self.struct_fatal_span_char(start, self.pos, \"unknown start of token\", c);"}, {"sha": "ccd11f06bc582e0fa8ddd9f9c9af39fac9433103", "filename": "compiler/rustc_parse/src/lexer/unicode_chars.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/21224e6ee07b917f7996b27f05c57327f806a026/compiler%2Frustc_parse%2Fsrc%2Flexer%2Funicode_chars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21224e6ee07b917f7996b27f05c57327f806a026/compiler%2Frustc_parse%2Fsrc%2Flexer%2Funicode_chars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Flexer%2Funicode_chars.rs?ref=21224e6ee07b917f7996b27f05c57327f806a026", "patch": "@@ -7,7 +7,7 @@ use rustc_errors::{Applicability, DiagnosticBuilder};\n use rustc_span::{symbol::kw, BytePos, Pos, Span};\n \n #[rustfmt::skip] // for line breaks\n-const UNICODE_ARRAY: &[(char, &str, char)] = &[\n+pub(crate) const UNICODE_ARRAY: &[(char, &str, char)] = &[\n     ('\u2028', \"Line Separator\", ' '),\n     ('\u2029', \"Paragraph Separator\", ' '),\n     ('\u1680', \"Ogham Space mark\", ' '),"}, {"sha": "e07e0573e759428683ad0623ce874128ca7ff6e8", "filename": "src/test/ui/parser/emoji-identifiers.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/21224e6ee07b917f7996b27f05c57327f806a026/src%2Ftest%2Fui%2Fparser%2Femoji-identifiers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21224e6ee07b917f7996b27f05c57327f806a026/src%2Ftest%2Fui%2Fparser%2Femoji-identifiers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Femoji-identifiers.rs?ref=21224e6ee07b917f7996b27f05c57327f806a026", "patch": "@@ -10,6 +10,7 @@ fn i_like_to_\ud83d\ude05_a_lot() -> \ud83d\udc40 { //~ ERROR identifiers cannot contain emojis\n     //~^ ERROR identifiers cannot contain emojis\n }\n fn main() {\n-    let _ = i_like_to_\ud83d\ude04_a_lot(); //~ ERROR cannot find function `i_like_to_\ud83d\ude04_a_lot` in this scope\n+    let _ = i_like_to_\ud83d\ude04_a_lot() \u2796 4; //~ ERROR cannot find function `i_like_to_\ud83d\ude04_a_lot` in this scope\n     //~^ ERROR identifiers cannot contain emojis\n+    //~| ERROR unknown start of token: \\u{2796}\n }"}, {"sha": "a73681d91966badb726975cd4571aec6122397b3", "filename": "src/test/ui/parser/emoji-identifiers.stderr", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/21224e6ee07b917f7996b27f05c57327f806a026/src%2Ftest%2Fui%2Fparser%2Femoji-identifiers.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/21224e6ee07b917f7996b27f05c57327f806a026/src%2Ftest%2Fui%2Fparser%2Femoji-identifiers.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Femoji-identifiers.stderr?ref=21224e6ee07b917f7996b27f05c57327f806a026", "patch": "@@ -1,16 +1,27 @@\n+error: unknown start of token: \\u{2796}\n+  --> $DIR/emoji-identifiers.rs:13:33\n+   |\n+LL |     let _ = i_like_to_\ud83d\ude04_a_lot() \u2796 4;\n+   |                                  ^^\n+   |\n+help: Unicode character '\u2796' (Heavy Minus Sign) looks like '-' (Minus/Hyphen), but it is not\n+   |\n+LL |     let _ = i_like_to_\ud83d\ude04_a_lot() - 4;\n+   |                                  ~\n+\n error[E0425]: cannot find function `i_like_to_\ud83d\ude04_a_lot` in this scope\n   --> $DIR/emoji-identifiers.rs:13:13\n    |\n LL | fn i_like_to_\ud83d\ude05_a_lot() -> \ud83d\udc40 {\n    | ----------------------------- similarly named function `i_like_to_\ud83d\ude05_a_lot` defined here\n ...\n-LL |     let _ = i_like_to_\ud83d\ude04_a_lot();\n+LL |     let _ = i_like_to_\ud83d\ude04_a_lot() \u2796 4;\n    |             ^^^^^^^^^^^^^^^^^^ help: a function with a similar name exists: `i_like_to_\ud83d\ude05_a_lot`\n \n error: identifiers cannot contain emojis: `i_like_to_\ud83d\ude04_a_lot`\n   --> $DIR/emoji-identifiers.rs:13:13\n    |\n-LL |     let _ = i_like_to_\ud83d\ude04_a_lot();\n+LL |     let _ = i_like_to_\ud83d\ude04_a_lot() \u2796 4;\n    |             ^^^^^^^^^^^^^^^^^^\n \n error: identifiers cannot contain emojis: `full_of_\u2728`\n@@ -66,7 +77,7 @@ LL |     \ud83d\udc40::full_of\u2728()\n    |         function or associated item not found in `\ud83d\udc40`\n    |         help: there is an associated function with a similar name: `full_of_\u2728`\n \n-error: aborting due to 8 previous errors\n+error: aborting due to 9 previous errors\n \n Some errors have detailed explanations: E0425, E0599.\n For more information about an error, try `rustc --explain E0425`."}]}