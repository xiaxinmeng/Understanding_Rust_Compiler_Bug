{"sha": "3eb57319f2cfd99f7ec0d0227864ea109fe627a2", "node_id": "C_kwDOAAsO6NoAKDNlYjU3MzE5ZjJjZmQ5OWY3ZWMwZDAyMjc4NjRlYTEwOWZlNjI3YTI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-02-14T17:02:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-14T17:02:52Z"}, "message": "Rollup merge of #108016 - tshepang:just-one-example, r=thomcc\n\n\"Basic usage\" is redundant for there is just one example", "tree": {"sha": "bf9dee33f02bf3cae710cf4522fb1db24b61faa0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf9dee33f02bf3cae710cf4522fb1db24b61faa0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3eb57319f2cfd99f7ec0d0227864ea109fe627a2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj6768CRBK7hj4Ov3rIwAAP2QIAGvf8+j+02Up61J9QAcH1sZT\ndwE6O7+SMQI9HGNVaG5FVZHhB18KFidtRlXy9mjNW3MyqauxtL4JAdkLiIMQppP9\nQ+dHuInc8bwdg/4rskFbyfG5WLy3OPbfLnsJuNrb2l1Tr7pv6T6zFX4xHt4KrPqw\n1XW1Ebb6Kiv8cm0S9VZCGId4nS18mdBoPTKpLwXy/dBcvkzfgGCWFT7SKYIGVnf0\n5ccYK+3cTjre9ZsvtYCwDQtbAdjejtms8tcsVUBHbWXtKRFLTYC8G8V+VznqXJk+\n29Q3pa0G9c8HB8JHbMgSREqFWVa5M6CLP+4hz8ihTIOe0FLkw5Sfimg9FnEJawg=\n=Jf5p\n-----END PGP SIGNATURE-----\n", "payload": "tree bf9dee33f02bf3cae710cf4522fb1db24b61faa0\nparent 1f486f0a9b4c45ab511366b4c6ce14aa126b6147\nparent ef6a59b7a921af918ea5e87ecd9d736899c9161b\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1676394172 +0100\ncommitter GitHub <noreply@github.com> 1676394172 +0100\n\nRollup merge of #108016 - tshepang:just-one-example, r=thomcc\n\n\"Basic usage\" is redundant for there is just one example\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3eb57319f2cfd99f7ec0d0227864ea109fe627a2", "html_url": "https://github.com/rust-lang/rust/commit/3eb57319f2cfd99f7ec0d0227864ea109fe627a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3eb57319f2cfd99f7ec0d0227864ea109fe627a2/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f486f0a9b4c45ab511366b4c6ce14aa126b6147", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f486f0a9b4c45ab511366b4c6ce14aa126b6147", "html_url": "https://github.com/rust-lang/rust/commit/1f486f0a9b4c45ab511366b4c6ce14aa126b6147"}, {"sha": "ef6a59b7a921af918ea5e87ecd9d736899c9161b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef6a59b7a921af918ea5e87ecd9d736899c9161b", "html_url": "https://github.com/rust-lang/rust/commit/ef6a59b7a921af918ea5e87ecd9d736899c9161b"}], "stats": {"total": 42, "additions": 0, "deletions": 42}, "files": [{"sha": "57e2ffe5d2068cab86e4bc12a37ed70cadb21847", "filename": "library/core/src/ptr/const_ptr.rs", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/3eb57319f2cfd99f7ec0d0227864ea109fe627a2/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3eb57319f2cfd99f7ec0d0227864ea109fe627a2/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs?ref=3eb57319f2cfd99f7ec0d0227864ea109fe627a2", "patch": "@@ -23,8 +23,6 @@ impl<T: ?Sized> *const T {\n     ///\n     /// # Examples\n     ///\n-    /// Basic usage:\n-    ///\n     /// ```\n     /// let s: &str = \"Follow the rabbit\";\n     /// let ptr: *const u8 = s.as_ptr();\n@@ -323,8 +321,6 @@ impl<T: ?Sized> *const T {\n     ///\n     /// # Examples\n     ///\n-    /// Basic usage:\n-    ///\n     /// ```\n     /// let ptr: *const u8 = &10u8 as *const u8;\n     ///\n@@ -384,8 +380,6 @@ impl<T: ?Sized> *const T {\n     ///\n     /// # Examples\n     ///\n-    /// Basic usage:\n-    ///\n     /// ```\n     /// #![feature(ptr_as_uninit)]\n     ///\n@@ -449,8 +443,6 @@ impl<T: ?Sized> *const T {\n     ///\n     /// # Examples\n     ///\n-    /// Basic usage:\n-    ///\n     /// ```\n     /// let s: &str = \"123\";\n     /// let ptr: *const u8 = s.as_ptr();\n@@ -526,8 +518,6 @@ impl<T: ?Sized> *const T {\n     ///\n     /// # Examples\n     ///\n-    /// Basic usage:\n-    ///\n     /// ```\n     /// // Iterate using a raw pointer in increments of two elements\n     /// let data = [1u8, 2, 3, 4, 5];\n@@ -908,8 +898,6 @@ impl<T: ?Sized> *const T {\n     ///\n     /// # Examples\n     ///\n-    /// Basic usage:\n-    ///\n     /// ```\n     /// let s: &str = \"123\";\n     /// let ptr: *const u8 = s.as_ptr();\n@@ -993,8 +981,6 @@ impl<T: ?Sized> *const T {\n     ///\n     /// # Examples\n     ///\n-    /// Basic usage:\n-    ///\n     /// ```\n     /// let s: &str = \"123\";\n     ///\n@@ -1072,8 +1058,6 @@ impl<T: ?Sized> *const T {\n     ///\n     /// # Examples\n     ///\n-    /// Basic usage:\n-    ///\n     /// ```\n     /// // Iterate using a raw pointer in increments of two elements\n     /// let data = [1u8, 2, 3, 4, 5];\n@@ -1152,8 +1136,6 @@ impl<T: ?Sized> *const T {\n     ///\n     /// # Examples\n     ///\n-    /// Basic usage:\n-    ///\n     /// ```\n     /// // Iterate using a raw pointer in increments of two elements (backwards)\n     /// let data = [1u8, 2, 3, 4, 5];\n@@ -1359,7 +1341,6 @@ impl<T: ?Sized> *const T {\n     ///\n     /// # Examples\n     ///\n-    /// Basic usage:\n     /// ```\n     /// #![feature(pointer_is_aligned)]\n     /// #![feature(pointer_byte_offsets)]\n@@ -1482,7 +1463,6 @@ impl<T: ?Sized> *const T {\n     ///\n     /// # Examples\n     ///\n-    /// Basic usage:\n     /// ```\n     /// #![feature(pointer_is_aligned)]\n     /// #![feature(pointer_byte_offsets)]"}, {"sha": "422d0f2b8f0c44be961843fa73d1165cd039af83", "filename": "library/core/src/ptr/mut_ptr.rs", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/3eb57319f2cfd99f7ec0d0227864ea109fe627a2/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3eb57319f2cfd99f7ec0d0227864ea109fe627a2/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs?ref=3eb57319f2cfd99f7ec0d0227864ea109fe627a2", "patch": "@@ -22,8 +22,6 @@ impl<T: ?Sized> *mut T {\n     ///\n     /// # Examples\n     ///\n-    /// Basic usage:\n-    ///\n     /// ```\n     /// let mut s = [1, 2, 3];\n     /// let ptr: *mut u32 = s.as_mut_ptr();\n@@ -332,8 +330,6 @@ impl<T: ?Sized> *mut T {\n     ///\n     /// # Examples\n     ///\n-    /// Basic usage:\n-    ///\n     /// ```\n     /// let ptr: *mut u8 = &mut 10u8 as *mut u8;\n     ///\n@@ -396,8 +392,6 @@ impl<T: ?Sized> *mut T {\n     ///\n     /// # Examples\n     ///\n-    /// Basic usage:\n-    ///\n     /// ```\n     /// #![feature(ptr_as_uninit)]\n     ///\n@@ -461,8 +455,6 @@ impl<T: ?Sized> *mut T {\n     ///\n     /// # Examples\n     ///\n-    /// Basic usage:\n-    ///\n     /// ```\n     /// let mut s = [1, 2, 3];\n     /// let ptr: *mut u32 = s.as_mut_ptr();\n@@ -539,8 +531,6 @@ impl<T: ?Sized> *mut T {\n     ///\n     /// # Examples\n     ///\n-    /// Basic usage:\n-    ///\n     /// ```\n     /// // Iterate using a raw pointer in increments of two elements\n     /// let mut data = [1u8, 2, 3, 4, 5];\n@@ -660,8 +650,6 @@ impl<T: ?Sized> *mut T {\n     ///\n     /// # Examples\n     ///\n-    /// Basic usage:\n-    ///\n     /// ```\n     /// let mut s = [1, 2, 3];\n     /// let ptr: *mut u32 = s.as_mut_ptr();\n@@ -1010,8 +998,6 @@ impl<T: ?Sized> *mut T {\n     ///\n     /// # Examples\n     ///\n-    /// Basic usage:\n-    ///\n     /// ```\n     /// let s: &str = \"123\";\n     /// let ptr: *const u8 = s.as_ptr();\n@@ -1095,8 +1081,6 @@ impl<T: ?Sized> *mut T {\n     ///\n     /// # Examples\n     ///\n-    /// Basic usage:\n-    ///\n     /// ```\n     /// let s: &str = \"123\";\n     ///\n@@ -1174,8 +1158,6 @@ impl<T: ?Sized> *mut T {\n     ///\n     /// # Examples\n     ///\n-    /// Basic usage:\n-    ///\n     /// ```\n     /// // Iterate using a raw pointer in increments of two elements\n     /// let data = [1u8, 2, 3, 4, 5];\n@@ -1254,8 +1236,6 @@ impl<T: ?Sized> *mut T {\n     ///\n     /// # Examples\n     ///\n-    /// Basic usage:\n-    ///\n     /// ```\n     /// // Iterate using a raw pointer in increments of two elements (backwards)\n     /// let data = [1u8, 2, 3, 4, 5];\n@@ -1627,7 +1607,6 @@ impl<T: ?Sized> *mut T {\n     ///\n     /// # Examples\n     ///\n-    /// Basic usage:\n     /// ```\n     /// #![feature(pointer_is_aligned)]\n     /// #![feature(pointer_byte_offsets)]\n@@ -1752,7 +1731,6 @@ impl<T: ?Sized> *mut T {\n     ///\n     /// # Examples\n     ///\n-    /// Basic usage:\n     /// ```\n     /// #![feature(pointer_is_aligned)]\n     /// #![feature(pointer_byte_offsets)]"}]}