{"sha": "c623aa4a54c875287858d7f524a9e4483ca2de64", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2MjNhYTRhNTRjODc1Mjg3ODU4ZDdmNTI0YTllNDQ4M2NhMmRlNjQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-24T21:45:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-24T21:45:13Z"}, "message": "Rollup merge of #63356 - ali-raheem:issue#63183, r=KodrAus\n\nIssue#63183: Add fs::read_dir() and ReadDir warning about iterator order + example\n\nAs per https://github.com/rust-lang/rust/issues/63183\n\nAdd warning about iterator order to read_dir and ReadDir, add example of explicitly ordering direntrys.", "tree": {"sha": "d2cf8af8e69b6eb90bd264d65a5383411004f211", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2cf8af8e69b6eb90bd264d65a5383411004f211"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c623aa4a54c875287858d7f524a9e4483ca2de64", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdio5pCRBK7hj4Ov3rIwAAdHIIAJO+FtgA6V8Mq4hhJguwSAIi\nTTfhFsPQefyacA+PD1BRmiGAYjs4CiyHqz1n1Kwyd7KRHgdFfzdBrnFCCLSO+62p\nn3giD5hpc6KmX4lct3cA/DWRFHn5sIjEahyHBgAB/lNpG9kyGXJ1NYT5M0irgUSn\nPg1onqpWKKKJyCY2NlsXWEdyvIzCLc3mnatSMo7ts0UqifTrwr2kuQXUJQYxUlga\neIYnmI0bgf6amf4pmXiE/M2OZJVYnS0BbbwVY3QuTow1YykpIiD3YBlC8jdLQ1BD\nJ9jm/3gdJFouFSxCYbXyiTByCFpDP2Fd+VECyYxTTUDrqO58qG1pZ0I8d8ZtSgE=\n=abe9\n-----END PGP SIGNATURE-----\n", "payload": "tree d2cf8af8e69b6eb90bd264d65a5383411004f211\nparent 6ef275e6c3cb1384ec78128eceeb4963ff788dca\nparent 1161aeb2b423da744e687315648a49cc4774220b\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1569361513 +0200\ncommitter GitHub <noreply@github.com> 1569361513 +0200\n\nRollup merge of #63356 - ali-raheem:issue#63183, r=KodrAus\n\nIssue#63183: Add fs::read_dir() and ReadDir warning about iterator order + example\n\nAs per https://github.com/rust-lang/rust/issues/63183\n\nAdd warning about iterator order to read_dir and ReadDir, add example of explicitly ordering direntrys.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c623aa4a54c875287858d7f524a9e4483ca2de64", "html_url": "https://github.com/rust-lang/rust/commit/c623aa4a54c875287858d7f524a9e4483ca2de64", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c623aa4a54c875287858d7f524a9e4483ca2de64/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ef275e6c3cb1384ec78128eceeb4963ff788dca", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ef275e6c3cb1384ec78128eceeb4963ff788dca", "html_url": "https://github.com/rust-lang/rust/commit/6ef275e6c3cb1384ec78128eceeb4963ff788dca"}, {"sha": "1161aeb2b423da744e687315648a49cc4774220b", "url": "https://api.github.com/repos/rust-lang/rust/commits/1161aeb2b423da744e687315648a49cc4774220b", "html_url": "https://github.com/rust-lang/rust/commit/1161aeb2b423da744e687315648a49cc4774220b"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "8933f027a065f8c0b727d085c4f976bfb565a354", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/c623aa4a54c875287858d7f524a9e4483ca2de64/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c623aa4a54c875287858d7f524a9e4483ca2de64/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=c623aa4a54c875287858d7f524a9e4483ca2de64", "patch": "@@ -114,6 +114,9 @@ pub struct Metadata(fs_imp::FileAttr);\n /// information like the entry's path and possibly other metadata can be\n /// learned.\n ///\n+/// The order in which this iterator returns entries is platform and filesystem\n+/// dependent.\n+///\n /// # Errors\n ///\n /// This [`io::Result`] will be an [`Err`] if there's some sort of intermittent\n@@ -1962,6 +1965,9 @@ pub fn remove_dir_all<P: AsRef<Path>>(path: P) -> io::Result<()> {\n ///\n /// [changes]: ../io/index.html#platform-specific-behavior\n ///\n+/// The order in which this iterator returns entries is platform and filesystem\n+/// dependent.\n+///\n /// # Errors\n ///\n /// This function will return an error in the following situations, but is not\n@@ -1994,6 +2000,25 @@ pub fn remove_dir_all<P: AsRef<Path>>(path: P) -> io::Result<()> {\n ///     Ok(())\n /// }\n /// ```\n+///\n+/// ```rust,no_run\n+/// use std::{fs, io};\n+///\n+/// fn main() -> io::Result<()> {\n+///     let mut entries = fs::read_dir(\".\")?\n+///         .map(|res| res.map(|e| e.path()))\n+///         .collect::<Result<Vec<_>, io::Error>>()?;\n+///\n+///     // The order in which `read_dir` returns entries is not guaranteed. If reproducible\n+///     // ordering is required the entries should be explicitly sorted.\n+///\n+///     entries.sort();\n+///\n+///     // The entries have now been sorted by their path.\n+///\n+///     Ok(())\n+/// }\n+/// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub fn read_dir<P: AsRef<Path>>(path: P) -> io::Result<ReadDir> {\n     fs_imp::readdir(path.as_ref()).map(ReadDir)"}]}