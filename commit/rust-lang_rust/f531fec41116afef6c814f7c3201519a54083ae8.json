{"sha": "f531fec41116afef6c814f7c3201519a54083ae8", "node_id": "C_kwDOAAsO6NoAKGY1MzFmZWM0MTExNmFmZWY2YzgxNGY3YzMyMDE1MTlhNTQwODNhZTg", "commit": {"author": {"name": "jyn", "email": "github@jyn.dev", "date": "2023-06-09T22:52:22Z"}, "committer": {"name": "jyn", "email": "github@jyn.dev", "date": "2023-06-09T23:20:38Z"}, "message": "Give more helpful progress messages in `Assemble`\n\nBefore (download-rustc):\n```\n # no output\n```\n\nAfter (download-rustc):\n```\nCreating a sysroot for stage2 compiler (use `rustup toolchain link 'name' build/host/stage2`)\n```\n\nBefore (compiling from source):\n```\nBuilding compiler artifacts (stage0 -> stage1, x86_64-unknown-linux-gnu)\nAssembling stage1 compiler\nBuild stage1 library artifacts (x86_64-unknown-linux-gnu -> i686-unknown-linux-gnu)\nBuilding compiler artifacts (stage0:x86_64-unknown-linux-gnu -> stage1:i686-unknown-linux-gnu)\nAssembling stage1 compiler (i686-unknown-linux-gnu)\n```\n\nAfter (compiling from source):\n```\nBuilding compiler artifacts (stage0 -> stage1, x86_64-unknown-linux-gnu)\nCreating a sysroot for stage1 compiler (use `rustup toolchain link 'name' build/host/stage1`)\nBuild stage1 library artifacts (x86_64-unknown-linux-gnu)\nBuilding compiler artifacts (stage0:x86_64-unknown-linux-gnu -> stage1:i686-unknown-linux-gnu)\nCreating a sysroot for stage1 compiler (i686-unknown-linux-gnu) (use `rustup toolchain link 'name' build/i686-unknown-linux-gnu/stage1`)\n```", "tree": {"sha": "204f6ae55dea5b778d6d700cc7d984c27ac233fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/204f6ae55dea5b778d6d700cc7d984c27ac233fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f531fec41116afef6c814f7c3201519a54083ae8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f531fec41116afef6c814f7c3201519a54083ae8", "html_url": "https://github.com/rust-lang/rust/commit/f531fec41116afef6c814f7c3201519a54083ae8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f531fec41116afef6c814f7c3201519a54083ae8/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9610dfe5a9a731ced1ea4923ecbd0c57fe367898", "url": "https://api.github.com/repos/rust-lang/rust/commits/9610dfe5a9a731ced1ea4923ecbd0c57fe367898", "html_url": "https://github.com/rust-lang/rust/commit/9610dfe5a9a731ced1ea4923ecbd0c57fe367898"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "b5870dd2093e59858705f81455eda267ed837a40", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f531fec41116afef6c814f7c3201519a54083ae8/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f531fec41116afef6c814f7c3201519a54083ae8/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=f531fec41116afef6c814f7c3201519a54083ae8", "patch": "@@ -1415,6 +1415,10 @@ impl Step for Assemble {\n             // Ensure that `libLLVM.so` ends up in the newly created target directory,\n             // so that tools using `rustc_private` can use it.\n             dist::maybe_install_llvm_target(builder, target_compiler.host, &sysroot);\n+            // Lower stages use `ci-rustc-sysroot`, not stageN\n+            if target_compiler.stage == builder.top_stage {\n+                builder.info(&format!(\"Creating a sysroot for stage{stage} compiler (use `rustup toolchain link 'name' build/host/stage{stage}`)\", stage=target_compiler.stage));\n+            }\n             return target_compiler;\n         }\n \n@@ -1452,11 +1456,18 @@ impl Step for Assemble {\n \n         let stage = target_compiler.stage;\n         let host = target_compiler.host;\n-        let msg = if build_compiler.host == host {\n-            format!(\"Assembling stage{} compiler\", stage)\n+        let (host_info, dir_name) = if build_compiler.host == host {\n+            (\"\".into(), \"host\".into())\n         } else {\n-            format!(\"Assembling stage{} compiler ({})\", stage, host)\n+            (format!(\" ({host})\"), host.to_string())\n         };\n+        // NOTE: \"Creating a sysroot\" is somewhat inconsistent with our internal terminology, since\n+        // sysroots can temporarily be empty until we put the compiler inside. However,\n+        // `ensure(Sysroot)` isn't really something that's user facing, so there shouldn't be any\n+        // ambiguity.\n+        let msg = format!(\n+            \"Creating a sysroot for stage{stage} compiler{host_info} (use `rustup toolchain link 'name' build/{dir_name}/stage{stage}`)\"\n+        );\n         builder.info(&msg);\n \n         // Link in all dylibs to the libdir"}]}