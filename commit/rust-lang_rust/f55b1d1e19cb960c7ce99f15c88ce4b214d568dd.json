{"sha": "f55b1d1e19cb960c7ce99f15c88ce4b214d568dd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1NWIxZDFlMTljYjk2MGM3Y2U5OWYxNWM4OGNlNGIyMTRkNTY4ZGQ=", "commit": {"author": {"name": "rezural", "email": "rezural@protonmail.com", "date": "2021-06-21T22:59:57Z"}, "committer": {"name": "rezural", "email": "rezural@protonmail.com", "date": "2021-06-21T22:59:57Z"}, "message": "add extra include paths, if target's path is manually set in Cargo.toml to be", "tree": {"sha": "0deed477c5b429a3c7bd0304c76ccffc0756058e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0deed477c5b429a3c7bd0304c76ccffc0756058e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f55b1d1e19cb960c7ce99f15c88ce4b214d568dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f55b1d1e19cb960c7ce99f15c88ce4b214d568dd", "html_url": "https://github.com/rust-lang/rust/commit/f55b1d1e19cb960c7ce99f15c88ce4b214d568dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f55b1d1e19cb960c7ce99f15c88ce4b214d568dd/comments", "author": {"login": "rezural", "id": 69941255, "node_id": "MDQ6VXNlcjY5OTQxMjU1", "avatar_url": "https://avatars.githubusercontent.com/u/69941255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rezural", "html_url": "https://github.com/rezural", "followers_url": "https://api.github.com/users/rezural/followers", "following_url": "https://api.github.com/users/rezural/following{/other_user}", "gists_url": "https://api.github.com/users/rezural/gists{/gist_id}", "starred_url": "https://api.github.com/users/rezural/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rezural/subscriptions", "organizations_url": "https://api.github.com/users/rezural/orgs", "repos_url": "https://api.github.com/users/rezural/repos", "events_url": "https://api.github.com/users/rezural/events{/privacy}", "received_events_url": "https://api.github.com/users/rezural/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rezural", "id": 69941255, "node_id": "MDQ6VXNlcjY5OTQxMjU1", "avatar_url": "https://avatars.githubusercontent.com/u/69941255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rezural", "html_url": "https://github.com/rezural", "followers_url": "https://api.github.com/users/rezural/followers", "following_url": "https://api.github.com/users/rezural/following{/other_user}", "gists_url": "https://api.github.com/users/rezural/gists{/gist_id}", "starred_url": "https://api.github.com/users/rezural/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rezural/subscriptions", "organizations_url": "https://api.github.com/users/rezural/orgs", "repos_url": "https://api.github.com/users/rezural/repos", "events_url": "https://api.github.com/users/rezural/events{/privacy}", "received_events_url": "https://api.github.com/users/rezural/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37dc2dfada170c28237f7bd20dec6476a420df32", "url": "https://api.github.com/repos/rust-lang/rust/commits/37dc2dfada170c28237f7bd20dec6476a420df32", "html_url": "https://github.com/rust-lang/rust/commit/37dc2dfada170c28237f7bd20dec6476a420df32"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "5c178785d808f3ab5acd4877a8343c567d68a41c", "filename": "crates/project_model/src/workspace.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f55b1d1e19cb960c7ce99f15c88ce4b214d568dd/crates%2Fproject_model%2Fsrc%2Fworkspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f55b1d1e19cb960c7ce99f15c88ce4b214d568dd/crates%2Fproject_model%2Fsrc%2Fworkspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject_model%2Fsrc%2Fworkspace.rs?ref=f55b1d1e19cb960c7ce99f15c88ce4b214d568dd", "patch": "@@ -234,6 +234,23 @@ impl ProjectWorkspace {\n                                 .and_then(|it| it.out_dir.clone()),\n                         );\n \n+                        // In case target's path is manually set in Cargo.toml to be\n+                        // outside the package root, add its parent as an extra include.\n+                        // An example of this situation would look like this:\n+                        //\n+                        // ```toml\n+                        // [lib]\n+                        // path = \"../../src/lib.rs\"\n+                        // ```\n+                        let extra_targets = cargo[pkg]\n+                            .targets\n+                            .iter()\n+                            .filter(|&&tgt| cargo[tgt].kind == TargetKind::Lib)\n+                            .filter_map(|&tgt| cargo[tgt].root.parent())\n+                            .map(|tgt| tgt.normalize().to_path_buf())\n+                            .filter(|path| !path.starts_with(pkg_root.clone()));\n+                        include.extend(extra_targets);\n+\n                         let mut exclude = vec![pkg_root.join(\".git\")];\n                         if is_member {\n                             exclude.push(pkg_root.join(\"target\"));"}]}