{"sha": "d9f0e88f19b691cd3e69be997c4ec75ea14c1db3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5ZjBlODhmMTliNjkxY2QzZTY5YmU5OTdjNGVjNzVlYTE0YzFkYjM=", "commit": {"author": {"name": "Dan Gohman", "email": "sunfish@mozilla.com", "date": "2017-11-10T19:00:52Z"}, "committer": {"name": "Dan Gohman", "email": "sunfish@mozilla.com", "date": "2017-11-10T19:46:06Z"}, "message": "Enable TrapUnreachable in LLVM.\n\nEnable LLVM's TrapUnreachable flag, which tells it to translate\n`unreachable` instructions into hardware trap instructions, rather\nthan allowing control flow to \"fall through\" into whatever code\nhappens to follow it in memory.", "tree": {"sha": "6b49a09e0f4c7308335ce42e10cb160091bede2b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b49a09e0f4c7308335ce42e10cb160091bede2b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d9f0e88f19b691cd3e69be997c4ec75ea14c1db3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d9f0e88f19b691cd3e69be997c4ec75ea14c1db3", "html_url": "https://github.com/rust-lang/rust/commit/d9f0e88f19b691cd3e69be997c4ec75ea14c1db3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d9f0e88f19b691cd3e69be997c4ec75ea14c1db3/comments", "author": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75d25acd977085e6ae01d6a5c56cbbfc97463f89", "url": "https://api.github.com/repos/rust-lang/rust/commits/75d25acd977085e6ae01d6a5c56cbbfc97463f89", "html_url": "https://github.com/rust-lang/rust/commit/75d25acd977085e6ae01d6a5c56cbbfc97463f89"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "1fc8c42f1dd5e92a5b53a0f6da319e4084966221", "filename": "src/rustllvm/PassWrapper.cpp", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d9f0e88f19b691cd3e69be997c4ec75ea14c1db3/src%2Frustllvm%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/d9f0e88f19b691cd3e69be997c4ec75ea14c1db3/src%2Frustllvm%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FPassWrapper.cpp?ref=d9f0e88f19b691cd3e69be997c4ec75ea14c1db3", "patch": "@@ -398,6 +398,12 @@ extern \"C\" LLVMTargetMachineRef LLVMRustCreateTargetMachine(\n   Options.DataSections = DataSections;\n   Options.FunctionSections = FunctionSections;\n \n+  // Tell LLVM to translate `unreachable` into an explicit trap instruction.\n+  // This limits the extent of possible undefined behavior in some cases, as it\n+  // prevents control flow from \"falling through\" into whatever code happens to\n+  // be layed out next in memory.\n+  Options.TrapUnreachable = true;\n+\n   TargetMachine *TM = TheTarget->createTargetMachine(\n       Trip.getTriple(), RealCPU, Feature, Options, RM, CM, OptLevel);\n   return wrap(TM);"}]}