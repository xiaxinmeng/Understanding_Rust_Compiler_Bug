{"sha": "9951ac4be90848bbc12e8187886047ae35795c8d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5NTFhYzRiZTkwODQ4YmJjMTJlODE4Nzg4NjA0N2FlMzU3OTVjOGQ=", "commit": {"author": {"name": "Kamal Marhubi", "email": "kamal@marhubi.com", "date": "2016-02-08T20:43:01Z"}, "committer": {"name": "Kamal Marhubi", "email": "kamal@marhubi.com", "date": "2016-02-08T22:15:24Z"}, "message": "driver: Pass session options to CompilerCallbacks::early_callback()", "tree": {"sha": "81ac67fc9de8c0a0cf9875025bc1c7ee732485b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81ac67fc9de8c0a0cf9875025bc1c7ee732485b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9951ac4be90848bbc12e8187886047ae35795c8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9951ac4be90848bbc12e8187886047ae35795c8d", "html_url": "https://github.com/rust-lang/rust/commit/9951ac4be90848bbc12e8187886047ae35795c8d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9951ac4be90848bbc12e8187886047ae35795c8d/comments", "author": {"login": "kamalmarhubi", "id": 50936, "node_id": "MDQ6VXNlcjUwOTM2", "avatar_url": "https://avatars.githubusercontent.com/u/50936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kamalmarhubi", "html_url": "https://github.com/kamalmarhubi", "followers_url": "https://api.github.com/users/kamalmarhubi/followers", "following_url": "https://api.github.com/users/kamalmarhubi/following{/other_user}", "gists_url": "https://api.github.com/users/kamalmarhubi/gists{/gist_id}", "starred_url": "https://api.github.com/users/kamalmarhubi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kamalmarhubi/subscriptions", "organizations_url": "https://api.github.com/users/kamalmarhubi/orgs", "repos_url": "https://api.github.com/users/kamalmarhubi/repos", "events_url": "https://api.github.com/users/kamalmarhubi/events{/privacy}", "received_events_url": "https://api.github.com/users/kamalmarhubi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kamalmarhubi", "id": 50936, "node_id": "MDQ6VXNlcjUwOTM2", "avatar_url": "https://avatars.githubusercontent.com/u/50936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kamalmarhubi", "html_url": "https://github.com/kamalmarhubi", "followers_url": "https://api.github.com/users/kamalmarhubi/followers", "following_url": "https://api.github.com/users/kamalmarhubi/following{/other_user}", "gists_url": "https://api.github.com/users/kamalmarhubi/gists{/gist_id}", "starred_url": "https://api.github.com/users/kamalmarhubi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kamalmarhubi/subscriptions", "organizations_url": "https://api.github.com/users/kamalmarhubi/orgs", "repos_url": "https://api.github.com/users/kamalmarhubi/repos", "events_url": "https://api.github.com/users/kamalmarhubi/events{/privacy}", "received_events_url": "https://api.github.com/users/kamalmarhubi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "601e04534f4f8117f4d121bdd9bfb5ed100c72e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/601e04534f4f8117f4d121bdd9bfb5ed100c72e6", "html_url": "https://github.com/rust-lang/rust/commit/601e04534f4f8117f4d121bdd9bfb5ed100c72e6"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "fbed5f31725ee157aa3556a1c382b5adcd29448b", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9951ac4be90848bbc12e8187886047ae35795c8d/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9951ac4be90848bbc12e8187886047ae35795c8d/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=9951ac4be90848bbc12e8187886047ae35795c8d", "patch": "@@ -164,7 +164,11 @@ pub fn run_compiler<'a>(args: &[String],\n \n     let descriptions = diagnostics_registry();\n \n-    do_or_return!(callbacks.early_callback(&matches, &descriptions, sopts.error_format), None);\n+    do_or_return!(callbacks.early_callback(&matches,\n+                                           &sopts,\n+                                           &descriptions,\n+                                           sopts.error_format),\n+                                           None);\n \n     let (odir, ofile) = make_output(&matches);\n     let (input, input_file_path) = match make_input(&matches.free) {\n@@ -251,6 +255,7 @@ pub trait CompilerCalls<'a> {\n     // else (e.g., selecting input and output).\n     fn early_callback(&mut self,\n                       _: &getopts::Matches,\n+                      _: &config::Options,\n                       _: &diagnostics::registry::Registry,\n                       _: ErrorOutputType)\n                       -> Compilation {\n@@ -327,6 +332,7 @@ pub struct RustcDefaultCalls;\n impl<'a> CompilerCalls<'a> for RustcDefaultCalls {\n     fn early_callback(&mut self,\n                       matches: &getopts::Matches,\n+                      _sopts: &config::Options,\n                       descriptions: &diagnostics::registry::Registry,\n                       output: ErrorOutputType)\n                       -> Compilation {"}, {"sha": "42784e009ee44a962b2259610754335e8771006b", "filename": "src/test/run-pass-fulldeps/compiler-calls.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9951ac4be90848bbc12e8187886047ae35795c8d/src%2Ftest%2Frun-pass-fulldeps%2Fcompiler-calls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9951ac4be90848bbc12e8187886047ae35795c8d/src%2Ftest%2Frun-pass-fulldeps%2Fcompiler-calls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fcompiler-calls.rs?ref=9951ac4be90848bbc12e8187886047ae35795c8d", "patch": "@@ -34,6 +34,7 @@ struct TestCalls {\n impl<'a> CompilerCalls<'a> for TestCalls {\n     fn early_callback(&mut self,\n                       _: &getopts::Matches,\n+                      _: &config::Options,\n                       _: &diagnostics::registry::Registry,\n                       _: config::ErrorOutputType)\n                       -> Compilation {"}]}