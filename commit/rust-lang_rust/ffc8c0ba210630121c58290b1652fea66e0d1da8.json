{"sha": "ffc8c0ba210630121c58290b1652fea66e0d1da8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmYzhjMGJhMjEwNjMwMTIxYzU4MjkwYjE2NTJmZWE2NmUwZDFkYTg=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2013-06-20T18:29:19Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2013-06-26T22:14:43Z"}, "message": "Looser restrictions on what can be captured in unbounded heap closures.", "tree": {"sha": "4463009a03755259e9692d7c92aac73c40d9aa04", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4463009a03755259e9692d7c92aac73c40d9aa04"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ffc8c0ba210630121c58290b1652fea66e0d1da8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ffc8c0ba210630121c58290b1652fea66e0d1da8", "html_url": "https://github.com/rust-lang/rust/commit/ffc8c0ba210630121c58290b1652fea66e0d1da8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ffc8c0ba210630121c58290b1652fea66e0d1da8/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8c892ab966e37c7fb8936ace6c7d40c8642f6ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8c892ab966e37c7fb8936ace6c7d40c8642f6ab", "html_url": "https://github.com/rust-lang/rust/commit/f8c892ab966e37c7fb8936ace6c7d40c8642f6ab"}], "stats": {"total": 8, "additions": 0, "deletions": 8}, "files": [{"sha": "a1f595fc8969ff10e2000894f887c1a7d266d9e2", "filename": "src/librustc/middle/kind.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ffc8c0ba210630121c58290b1652fea66e0d1da8/src%2Flibrustc%2Fmiddle%2Fkind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffc8c0ba210630121c58290b1652fea66e0d1da8/src%2Flibrustc%2Fmiddle%2Fkind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fkind.rs?ref=ffc8c0ba210630121c58290b1652fea66e0d1da8", "patch": "@@ -169,10 +169,6 @@ fn with_appropriate_checker(cx: Context, id: node_id,\n         let id = ast_util::def_id_of_def(fv.def).node;\n         let var_t = ty::node_id_to_type(cx.tcx, id);\n \n-        // FIXME(#3569): Once closure capabilities are restricted based on their\n-        // incoming bounds, make this check conditional based on the bounds.\n-        if !check_owned(cx, var_t, fv.span) { return; }\n-\n         // check that only immutable variables are implicitly copied in\n         check_imm_free_var(cx, fv.def, fv.span);\n \n@@ -184,10 +180,6 @@ fn with_appropriate_checker(cx: Context, id: node_id,\n         let id = ast_util::def_id_of_def(fv.def).node;\n         let var_t = ty::node_id_to_type(cx.tcx, id);\n \n-        // FIXME(#3569): Once closure capabilities are restricted based on their\n-        // incoming bounds, make this check conditional based on the bounds.\n-        if !check_durable(cx.tcx, var_t, fv.span) { return; }\n-\n         // check that only immutable variables are implicitly copied in\n         check_imm_free_var(cx, fv.def, fv.span);\n "}]}