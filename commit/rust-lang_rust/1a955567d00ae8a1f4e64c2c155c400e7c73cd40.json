{"sha": "1a955567d00ae8a1f4e64c2c155c400e7c73cd40", "node_id": "C_kwDOAAsO6NoAKDFhOTU1NTY3ZDAwYWU4YTFmNGU2NGMyYzE1NWM0MDBlN2M3M2NkNDA", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-09-18T12:26:22Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-09-19T07:02:13Z"}, "message": "note on deterministic 'fake' API implementations", "tree": {"sha": "24247df468276076ece786c867a8b8b59b3d3e56", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24247df468276076ece786c867a8b8b59b3d3e56"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a955567d00ae8a1f4e64c2c155c400e7c73cd40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a955567d00ae8a1f4e64c2c155c400e7c73cd40", "html_url": "https://github.com/rust-lang/rust/commit/1a955567d00ae8a1f4e64c2c155c400e7c73cd40", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a955567d00ae8a1f4e64c2c155c400e7c73cd40/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb3bac0373b44e77252ee92dda77ff76c7094f03", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb3bac0373b44e77252ee92dda77ff76c7094f03", "html_url": "https://github.com/rust-lang/rust/commit/bb3bac0373b44e77252ee92dda77ff76c7094f03"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "eedc6c7c3c33071cf6da56f66459c9deb09ebd2d", "filename": "README.md", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1a955567d00ae8a1f4e64c2c155c400e7c73cd40/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/1a955567d00ae8a1f4e64c2c155c400e7c73cd40/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=1a955567d00ae8a1f4e64c2c155c400e7c73cd40", "patch": "@@ -40,8 +40,16 @@ Miri has already discovered some [real-world bugs](#bugs-found-by-miri). If you\n found a bug with Miri, we'd appreciate if you tell us and we'll add it to the\n list!\n \n-However, be aware that Miri will **not catch all cases of undefined behavior**\n-in your program, and cannot run all programs:\n+By default, Miri ensures a fully deterministic execution and isolates the\n+program from the host system. Some APIs that would usually access the host, such\n+as gathering entropy for random number generators, environment variables, and\n+clocks, are replaced by deterministic \"fake\" implementations. Set\n+`MIRIFLAGS=\"-Zmiri-disable-isolation\"` to access the real system APIs instead.\n+(In particular, the \"fake\" system RNG APIs make Miri **not suited for\n+cryptographic use**! Do not generate keys using Miri.)\n+\n+All that said, be aware that Miri will **not catch all cases of undefined\n+behavior** in your program, and cannot run all programs:\n \n * There are still plenty of open questions around the basic invariants for some\n   types and when these invariants even have to hold. Miri tries to avoid false\n@@ -306,9 +314,7 @@ environment variable. We first document the most relevant and most commonly used\n   RNG is used to pick base addresses for allocations, to determine preemption and failure of\n   `compare_exchange_weak`, and to control store buffering for weak memory emulation. When isolation\n   is enabled (the default), this is also used to emulate system entropy. The default seed is 0. You\n-  can increase test coverage by running Miri multiple times with different seeds. **NOTE**: This\n-  entropy is not good enough for cryptographic use! Do not generate secret keys in Miri or perform\n-  other kinds of cryptographic operations that rely on proper random numbers.\n+  can increase test coverage by running Miri multiple times with different seeds.\n * `-Zmiri-strict-provenance` enables [strict\n   provenance](https://github.com/rust-lang/rust/issues/95228) checking in Miri. This means that\n   casting an integer to a pointer yields a result with 'invalid' provenance, i.e., with provenance"}]}