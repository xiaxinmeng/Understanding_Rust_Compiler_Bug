{"sha": "b65ba8f1d62c2961e520885117056e405056959d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2NWJhOGYxZDYyYzI5NjFlNTIwODg1MTE3MDU2ZTQwNTA1Njk1OWQ=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-12-24T18:39:31Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-12-24T18:39:31Z"}, "message": "Merge #326\n\n326: resolved #324: remove unnecessary braces in use statement. r=matklad a=gfreezy\n\nAdd inspection for unnecessary braces in use statement\n\nCo-authored-by: gfreezy <gfreezy@gmail.com>", "tree": {"sha": "8b4b48b4e24c2b7fcf81ddc196586efd684a3c66", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b4b48b4e24c2b7fcf81ddc196586efd684a3c66"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b65ba8f1d62c2961e520885117056e405056959d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b65ba8f1d62c2961e520885117056e405056959d", "html_url": "https://github.com/rust-lang/rust/commit/b65ba8f1d62c2961e520885117056e405056959d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b65ba8f1d62c2961e520885117056e405056959d/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "67e768466ff2e2611eead0f30b2e9c4083c80c20", "url": "https://api.github.com/repos/rust-lang/rust/commits/67e768466ff2e2611eead0f30b2e9c4083c80c20", "html_url": "https://github.com/rust-lang/rust/commit/67e768466ff2e2611eead0f30b2e9c4083c80c20"}, {"sha": "0fb8894fbe3c2ea9f4be34065c3bd1b2a64f6356", "url": "https://api.github.com/repos/rust-lang/rust/commits/0fb8894fbe3c2ea9f4be34065c3bd1b2a64f6356", "html_url": "https://github.com/rust-lang/rust/commit/0fb8894fbe3c2ea9f4be34065c3bd1b2a64f6356"}], "stats": {"total": 91, "additions": 79, "deletions": 12}, "files": [{"sha": "a547c5a20550df430df32ce56b7c82972d55cf97", "filename": "crates/ra_analysis/src/imp.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b65ba8f1d62c2961e520885117056e405056959d/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b65ba8f1d62c2961e520885117056e405056959d/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fimp.rs?ref=b65ba8f1d62c2961e520885117056e405056959d", "patch": "@@ -3,7 +3,7 @@ use std::{\n     sync::Arc,\n };\n \n-use ra_editor::{self, find_node_at_offset, FileSymbol, LineIndex, LocalEdit};\n+use ra_editor::{self, find_node_at_offset, FileSymbol, LineIndex, LocalEdit, Severity};\n use ra_syntax::{\n     ast::{self, ArgListOwner, Expr, NameOwner, FnDef},\n     algo::find_covering_node,\n@@ -365,6 +365,7 @@ impl AnalysisImpl {\n             .map(|d| Diagnostic {\n                 range: d.range,\n                 message: d.msg,\n+                severity: d.severity,\n                 fix: None,\n             })\n             .collect::<Vec<_>>();\n@@ -386,6 +387,7 @@ impl AnalysisImpl {\n                         Diagnostic {\n                             range: name_node.range(),\n                             message: \"unresolved module\".to_string(),\n+                            severity: Severity::Error,\n                             fix: Some(fix),\n                         }\n                     }\n@@ -408,6 +410,7 @@ impl AnalysisImpl {\n                         Diagnostic {\n                             range: name_node.range(),\n                             message: \"can't declare module at this location\".to_string(),\n+                            severity: Severity::Error,\n                             fix: Some(fix),\n                         }\n                     }"}, {"sha": "a029f66b42da36eee9f92ba573db2503a5e3d1fa", "filename": "crates/ra_analysis/src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b65ba8f1d62c2961e520885117056e405056959d/crates%2Fra_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b65ba8f1d62c2961e520885117056e405056959d/crates%2Fra_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Flib.rs?ref=b65ba8f1d62c2961e520885117056e405056959d", "patch": "@@ -29,11 +29,10 @@ use crate::{\n     symbol_index::SymbolIndex,\n };\n \n-pub use crate::{\n-    completion::{CompletionItem, CompletionItemKind, InsertText},\n-};\n+pub use crate::completion::{CompletionItem, CompletionItemKind, InsertText};\n pub use ra_editor::{\n     FileSymbol, Fold, FoldKind, HighlightedRange, LineIndex, Runnable, RunnableKind, StructureNode,\n+    Severity\n };\n pub use hir::FnSignatureInfo;\n \n@@ -198,6 +197,7 @@ pub struct Diagnostic {\n     pub message: String,\n     pub range: TextRange,\n     pub fix: Option<SourceChange>,\n+    pub severity: Severity,\n }\n \n #[derive(Debug)]"}, {"sha": "5ce2aa2b473663c5bfc0d57b5abe66bb8db8ce75", "filename": "crates/ra_analysis/src/mock_analysis.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b65ba8f1d62c2961e520885117056e405056959d/crates%2Fra_analysis%2Fsrc%2Fmock_analysis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b65ba8f1d62c2961e520885117056e405056959d/crates%2Fra_analysis%2Fsrc%2Fmock_analysis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fmock_analysis.rs?ref=b65ba8f1d62c2961e520885117056e405056959d", "patch": "@@ -1,6 +1,6 @@\n use std::sync::Arc;\n \n-use relative_path::{RelativePathBuf};\n+use relative_path::RelativePathBuf;\n use test_utils::{extract_offset, parse_fixture, CURSOR_MARKER};\n use ra_db::mock::FileMap;\n "}, {"sha": "210fa2a1351d0ebade02153c3f58575973f5d339", "filename": "crates/ra_analysis/tests/tests.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b65ba8f1d62c2961e520885117056e405056959d/crates%2Fra_analysis%2Ftests%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b65ba8f1d62c2961e520885117056e405056959d/crates%2Fra_analysis%2Ftests%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Ftests%2Ftests.rs?ref=b65ba8f1d62c2961e520885117056e405056959d", "patch": "@@ -82,7 +82,8 @@ fn test_unresolved_module_diagnostic() {\n                 label: \"create module\",\n                 source_file_edits: [],\n                 file_system_edits: [CreateFile { source_root: SourceRootId(0), path: \"foo.rs\" }],\n-                cursor_position: None }) }]\"#,\n+                cursor_position: None }),\n+                severity: Error }]\"#,\n         &diagnostics,\n     );\n }"}, {"sha": "7a689b0f25e801ac5e834df12c8b149b21293ce1", "filename": "crates/ra_editor/src/lib.rs", "status": "modified", "additions": 54, "deletions": 2, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/b65ba8f1d62c2961e520885117056e405056959d/crates%2Fra_editor%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b65ba8f1d62c2961e520885117056e405056959d/crates%2Fra_editor%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Flib.rs?ref=b65ba8f1d62c2961e520885117056e405056959d", "patch": "@@ -31,10 +31,17 @@ pub struct HighlightedRange {\n     pub tag: &'static str,\n }\n \n+#[derive(Debug, Copy, Clone)]\n+pub enum Severity {\n+    Error,\n+    WeakWarning,\n+}\n+\n #[derive(Debug)]\n pub struct Diagnostic {\n     pub range: TextRange,\n     pub msg: String,\n+    pub severity: Severity,\n }\n \n #[derive(Debug)]\n@@ -97,13 +104,37 @@ pub fn diagnostics(file: &SourceFileNode) -> Vec<Diagnostic> {\n         }\n     }\n \n-    file.errors()\n+    let mut errors: Vec<Diagnostic> = file\n+        .errors()\n         .into_iter()\n         .map(|err| Diagnostic {\n             range: location_to_range(err.location()),\n             msg: format!(\"Syntax Error: {}\", err),\n+            severity: Severity::Error,\n         })\n-        .collect()\n+        .collect();\n+\n+    let warnings = check_unnecessary_braces_in_use_statement(file);\n+\n+    errors.extend(warnings);\n+    errors\n+}\n+\n+fn check_unnecessary_braces_in_use_statement(file: &SourceFileNode) -> Vec<Diagnostic> {\n+    let mut diagnostics = Vec::new();\n+    for node in file.syntax().descendants() {\n+        if let Some(use_tree_list) = ast::UseTreeList::cast(node) {\n+            if use_tree_list.use_trees().count() <= 1 {\n+                diagnostics.push(Diagnostic {\n+                    range: use_tree_list.syntax().range(),\n+                    msg: format!(\"Unnecessary braces in use statement\"),\n+                    severity: Severity::WeakWarning,\n+                })\n+            }\n+        }\n+    }\n+\n+    diagnostics\n }\n \n pub fn syntax_tree(file: &SourceFileNode) -> String {\n@@ -204,4 +235,25 @@ fn test_foo() {}\n \n         do_check(\"struct Foo { a: i32, }<|>\", \"struct Foo <|>{ a: i32, }\");\n     }\n+\n+    #[test]\n+    fn test_check_unnecessary_braces_in_use_statement() {\n+        let file = SourceFileNode::parse(\n+            r#\"\n+use a;\n+use {b};\n+use a::{c};\n+use a::{c, d::e};\n+use a::{c, d::{e}};\n+fn main() {}\n+\"#,\n+        );\n+        let diagnostics = check_unnecessary_braces_in_use_statement(&file);\n+        assert_eq_dbg(\n+            r#\"[Diagnostic { range: [12; 15), msg: \"Unnecessary braces in use statement\", severity: WeakWarning },\n+                Diagnostic { range: [24; 27), msg: \"Unnecessary braces in use statement\", severity: WeakWarning },\n+                Diagnostic { range: [61; 64), msg: \"Unnecessary braces in use statement\", severity: WeakWarning }]\"#,\n+            &diagnostics,\n+        )\n+    }\n }"}, {"sha": "60f13267c2931bb789f9f450718ebdda254de9e9", "filename": "crates/ra_lsp_server/src/main_loop.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b65ba8f1d62c2961e520885117056e405056959d/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b65ba8f1d62c2961e520885117056e405056959d/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs?ref=b65ba8f1d62c2961e520885117056e405056959d", "patch": "@@ -13,7 +13,7 @@ use gen_lsp_server::{\n };\n use languageserver_types::NumberOrString;\n use ra_analysis::{Canceled, FileId, LibraryData};\n-use ra_vfs::{VfsTask};\n+use ra_vfs::VfsTask;\n use rayon;\n use threadpool::ThreadPool;\n use rustc_hash::FxHashSet;\n@@ -23,7 +23,7 @@ use failure_derive::Fail;\n \n use crate::{\n     main_loop::subscriptions::Subscriptions,\n-    project_model::{workspace_loader},\n+    project_model::workspace_loader,\n     req,\n     server_world::{ServerWorld, ServerWorldState},\n     Result,"}, {"sha": "658d169cdaf92195009821ace84e06edbcc5f505", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b65ba8f1d62c2961e520885117056e405056959d/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b65ba8f1d62c2961e520885117056e405056959d/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=b65ba8f1d62c2961e520885117056e405056959d", "patch": "@@ -8,7 +8,7 @@ use languageserver_types::{\n     PrepareRenameResponse, RenameParams, SymbolInformation, TextDocumentIdentifier, TextEdit,\n     WorkspaceEdit, ParameterInformation, ParameterLabel, SignatureInformation, Hover, HoverContents,\n };\n-use ra_analysis::{FileId, FoldKind, Query, RunnableKind, FilePosition};\n+use ra_analysis::{FileId, FoldKind, Query, RunnableKind, FilePosition, Severity};\n use ra_syntax::{TextUnit, text_utils::intersect};\n use ra_text_edit::text_utils::contains_offset_nonstrict;\n use rustc_hash::FxHashMap;\n@@ -650,7 +650,7 @@ pub fn publish_diagnostics(\n         .into_iter()\n         .map(|d| Diagnostic {\n             range: d.range.conv_with(&line_index),\n-            severity: Some(DiagnosticSeverity::Error),\n+            severity: Some(to_diagnostic_severity(d.severity)),\n             code: None,\n             source: Some(\"rust-analyzer\".to_string()),\n             message: d.message,\n@@ -684,3 +684,14 @@ fn highlight(world: &ServerWorld, file_id: FileId) -> Result<Vec<Decoration>> {\n         .collect();\n     Ok(res)\n }\n+\n+fn to_diagnostic_severity(severity: Severity) -> DiagnosticSeverity {\n+    use ra_analysis::Severity::*;\n+\n+    match severity {\n+        Error => DiagnosticSeverity::Error,\n+        Warning => DiagnosticSeverity::Warning,\n+        Information => DiagnosticSeverity::Information,\n+        Hint => DiagnosticSeverity::Hint,\n+    }\n+}"}]}