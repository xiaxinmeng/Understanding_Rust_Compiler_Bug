{"sha": "5f80364ede59d2507205246b383c25cb4dfb67ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmODAzNjRlZGU1OWQyNTA3MjA1MjQ2YjM4M2MyNWNiNGRmYjY3ZmY=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-03-17T20:56:09Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-03-17T20:56:09Z"}, "message": "Improve diagnostic when including nonexistent file", "tree": {"sha": "6b42a73a8ba0a274200c1e8d5d0567fcc4116146", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b42a73a8ba0a274200c1e8d5d0567fcc4116146"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5f80364ede59d2507205246b383c25cb4dfb67ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5f80364ede59d2507205246b383c25cb4dfb67ff", "html_url": "https://github.com/rust-lang/rust/commit/5f80364ede59d2507205246b383c25cb4dfb67ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5f80364ede59d2507205246b383c25cb4dfb67ff/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d691530d556bdc40262585383a1b18d3a1de07e", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d691530d556bdc40262585383a1b18d3a1de07e", "html_url": "https://github.com/rust-lang/rust/commit/9d691530d556bdc40262585383a1b18d3a1de07e"}], "stats": {"total": 25, "additions": 13, "deletions": 12}, "files": [{"sha": "faa1332970ae0d69d86b057da4a0df1b2e5e8ea1", "filename": "crates/hir_def/src/body/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5f80364ede59d2507205246b383c25cb4dfb67ff/crates%2Fhir_def%2Fsrc%2Fbody%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f80364ede59d2507205246b383c25cb4dfb67ff/crates%2Fhir_def%2Fsrc%2Fbody%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fbody%2Ftests.rs?ref=5f80364ede59d2507205246b383c25cb4dfb67ff", "patch": "@@ -137,7 +137,7 @@ fn f() {\n     include!(invalid);\n   //^^^^^^^^^^^^^^^^^ could not convert tokens\n     include!(\"does not exist\");\n-  //^^^^^^^^^^^^^^^^^^^^^^^^^^ could not convert tokens\n+  //^^^^^^^^^^^^^^^^^^^^^^^^^^ failed to load file `does not exist`\n \n     env!(invalid);\n   //^^^^^^^^^^^^^ could not convert tokens"}, {"sha": "a89061c2e800736099a84d9189c27d1610f2c48c", "filename": "crates/hir_def/src/nameres/tests/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5f80364ede59d2507205246b383c25cb4dfb67ff/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f80364ede59d2507205246b383c25cb4dfb67ff/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fdiagnostics.rs?ref=5f80364ede59d2507205246b383c25cb4dfb67ff", "patch": "@@ -196,7 +196,7 @@ fn builtin_macro_fails_expansion() {\n           macro_rules! include { () => {} }\n \n           include!(\"doesntexist\");\n-        //^^^^^^^^^^^^^^^^^^^^^^^^ could not convert tokens\n+        //^^^^^^^^^^^^^^^^^^^^^^^^ failed to load file `doesntexist`\n         \"#,\n     );\n }"}, {"sha": "fce09a9e716712cfc46d60e91f6d7a5949baba4a", "filename": "crates/hir_expand/src/builtin_macro.rs", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/5f80364ede59d2507205246b383c25cb4dfb67ff/crates%2Fhir_expand%2Fsrc%2Fbuiltin_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f80364ede59d2507205246b383c25cb4dfb67ff/crates%2Fhir_expand%2Fsrc%2Fbuiltin_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fbuiltin_macro.rs?ref=5f80364ede59d2507205246b383c25cb4dfb67ff", "patch": "@@ -333,17 +333,19 @@ fn concat_expand(\n fn relative_file(\n     db: &dyn AstDatabase,\n     call_id: MacroCallId,\n-    path: &str,\n+    path_str: &str,\n     allow_recursion: bool,\n-) -> Option<FileId> {\n+) -> Result<FileId, mbe::ExpandError> {\n     let call_site = call_id.as_file().original_file(db);\n-    let path = AnchoredPath { anchor: call_site, path };\n-    let res = db.resolve_path(path)?;\n+    let path = AnchoredPath { anchor: call_site, path: path_str };\n+    let res = db\n+        .resolve_path(path)\n+        .ok_or_else(|| mbe::ExpandError::Other(format!(\"failed to load file `{}`\", path_str)))?;\n     // Prevent include itself\n     if res == call_site && !allow_recursion {\n-        None\n+        Err(mbe::ExpandError::Other(format!(\"recursive inclusion of `{}`\", path_str)))\n     } else {\n-        Some(res)\n+        Ok(res)\n     }\n }\n \n@@ -364,8 +366,7 @@ fn include_expand(\n ) -> ExpandResult<Option<(tt::Subtree, FragmentKind)>> {\n     let res = (|| {\n         let path = parse_string(tt)?;\n-        let file_id = relative_file(db, arg_id.into(), &path, false)\n-            .ok_or_else(|| mbe::ExpandError::ConversionError)?;\n+        let file_id = relative_file(db, arg_id.into(), &path, false)?;\n \n         Ok(parse_to_token_tree(&db.file_text(file_id))\n             .ok_or_else(|| mbe::ExpandError::ConversionError)?\n@@ -417,8 +418,8 @@ fn include_str_expand(\n     // Ideally, we'd be able to offer a precise expansion if the user asks for macro\n     // expansion.\n     let file_id = match relative_file(db, arg_id.into(), &path, true) {\n-        Some(file_id) => file_id,\n-        None => {\n+        Ok(file_id) => file_id,\n+        Err(_) => {\n             return ExpandResult::ok(Some((quote!(\"\"), FragmentKind::Expr)));\n         }\n     };"}]}