{"sha": "0d9565a4c144c07dab052161eb5fa3815dcd7f06", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkOTU2NWE0YzE0NGMwN2RhYjA1MjE2MWViNWZhMzgxNWRjZDdmMDY=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@pobox.com", "date": "2010-06-25T07:00:31Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@pobox.com", "date": "2010-06-25T07:00:31Z"}, "message": "Rearrange pexp-custom stuff a bit.", "tree": {"sha": "7a554760adcbf67239780c4eea030ed1b4eb10f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a554760adcbf67239780c4eea030ed1b4eb10f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d9565a4c144c07dab052161eb5fa3815dcd7f06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d9565a4c144c07dab052161eb5fa3815dcd7f06", "html_url": "https://github.com/rust-lang/rust/commit/0d9565a4c144c07dab052161eb5fa3815dcd7f06", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d9565a4c144c07dab052161eb5fa3815dcd7f06/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72c6c60d80cdfe63af5046a1a98549f0515734f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/72c6c60d80cdfe63af5046a1a98549f0515734f2", "html_url": "https://github.com/rust-lang/rust/commit/72c6c60d80cdfe63af5046a1a98549f0515734f2"}], "stats": {"total": 38, "additions": 16, "deletions": 22}, "files": [{"sha": "e859d135e9263fe60295a353fa00ce9755970436", "filename": "src/boot/fe/pexp.ml", "status": "modified", "additions": 16, "deletions": 22, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/0d9565a4c144c07dab052161eb5fa3815dcd7f06/src%2Fboot%2Ffe%2Fpexp.ml", "raw_url": "https://github.com/rust-lang/rust/raw/0d9565a4c144c07dab052161eb5fa3815dcd7f06/src%2Fboot%2Ffe%2Fpexp.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Ffe%2Fpexp.ml?ref=0d9565a4c144c07dab052161eb5fa3815dcd7f06", "patch": "@@ -34,7 +34,7 @@ type pexp' =\n   | PEXP_str of string\n   | PEXP_mutable of pexp\n   | PEXP_exterior of pexp\n-  | PEXP_custom of Ast.name * (token array) * (string option)\n+  | PEXP_custom of Ast.name * (pexp array) * (string option)\n \n and plval =\n     PLVAL_ident of Ast.ident\n@@ -691,18 +691,10 @@ and parse_bottom_pexp (ps:pstate) : pexp =\n     | POUND ->\n         bump ps;\n         let name = parse_name ps in\n-        let toks =\n+        let args =\n           match peek ps with\n               LPAREN ->\n-                bump ps;\n-                let toks = Queue.create () in\n-                  while (peek ps) <> RPAREN\n-                  do\n-                    Queue.add (peek ps) toks;\n-                    bump ps;\n-                  done;\n-                  expect ps RPAREN;\n-                  queue_to_arr toks\n+                parse_pexp_list ps\n             | _ -> [| |]\n         in\n         let str =\n@@ -718,7 +710,7 @@ and parse_bottom_pexp (ps:pstate) : pexp =\n         in\n         let bpos = lexpos ps in\n           span ps apos bpos\n-            (PEXP_custom (name, toks, str))\n+            (PEXP_custom (name, args, str))\n \n     | LPAREN ->\n         begin\n@@ -971,10 +963,12 @@ and parse_pexp_list (ps:pstate) : pexp array =\n \n let expand_pexp_custom\n     (ps:pstate)\n+    (dst_lval:Ast.lval)\n     (name:Ast.name)\n-    (args:token array)\n+    (args:Ast.atom array)\n     (body:string option)\n-    : pexp' =\n+    (spanner:'a -> 'a identified)\n+    : (Ast.stmt array) =\n   let nstr = Fmt.fmt_to_str Ast.fmt_name name in\n     match (nstr, (Array.length args), body) with\n \n@@ -990,7 +984,7 @@ let expand_pexp_custom\n                   ignore (Unix.close_process_in c);\n                   Buffer.contents b\n           in\n-            PEXP_str (r ())\n+            [| spanner (Ast.STMT_init_str (dst_lval, r())) |]\n \n       | _ ->\n           raise (err (\"unsupported syntax extension: \" ^ nstr) ps)\n@@ -1093,7 +1087,8 @@ and desugar_expr_atom\n       | PEXP_chan _\n       | PEXP_call _\n       | PEXP_bind _\n-      | PEXP_spawn _ ->\n+      | PEXP_spawn _\n+      | PEXP_custom _ ->\n           let (_, tmp, decl_stmt) = build_tmp ps slot_auto apos bpos in\n           let stmts = desugar_expr_init ps tmp pexp in\n             (Array.append [| decl_stmt |] stmts,\n@@ -1112,10 +1107,6 @@ and desugar_expr_atom\n       | PEXP_mutable _ ->\n           raise (err \"mutable keyword in atom context\" ps)\n \n-      | PEXP_custom (n, a, b) ->\n-          desugar_expr_atom ps\n-            { pexp with node = expand_pexp_custom ps n a b }\n-\n \n and desugar_expr_mode_mut_atom\n     (ps:pstate)\n@@ -1331,8 +1322,11 @@ and desugar_expr_init\n           raise (err \"mutable keyword in initialiser context\" ps)\n \n       | PEXP_custom (n, a, b) ->\n-          desugar_expr_init ps dst_lval\n-            { pexp with node = expand_pexp_custom ps n a b }\n+          let (arg_stmts, args) = desugar_expr_atoms ps a in\n+          let stmts =\n+            expand_pexp_custom ps dst_lval n args b ss\n+          in\n+            aa arg_stmts stmts\n \n \n and atom_lval (ps:pstate) (at:Ast.atom) : Ast.lval ="}]}