{"sha": "f9111e0336ee595961069fc5b9126c435968894b", "node_id": "C_kwDOAAsO6NoAKGY5MTExZTAzMzZlZTU5NTk2MTA2OWZjNWI5MTI2YzQzNTk2ODg5NGI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-10-30T12:37:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-30T12:37:04Z"}, "message": "Rollup merge of #90402 - wesleywiser:query_descriptions, r=oli-obk\n\nAdd a few query descriptions", "tree": {"sha": "87739178b746d8de65b40db2102b9e9abeb95d32", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87739178b746d8de65b40db2102b9e9abeb95d32"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9111e0336ee595961069fc5b9126c435968894b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhfTxwCRBK7hj4Ov3rIwAAeroIAGn0IU9CJVGzsBLrQF4Vm3o6\nDgjKy+WXEETFPndL4u9lFeoVxKlCG9+CNVgYdTYq6tcNsDH6GCYjbZeyzl53x0ba\n/a+PVnEOr/GMM2gQ4kTOL90gMc9Zv9IZ3nQtn11Xeh/dcQ71EGLr1BeAzsqI8m7p\nNfvVMWqL+sjex+9tn9lFaW3Wle8ULLruFfWMD1PBBSfTWPO5oe7vVB0opqz8im/t\nvO6Ur35wnpRU90DR3kZGXVvSNGr/DtFt3D6/0WWoJPqAaIbQgur9UJ0lFGXFy3cy\nMFQZXwNbnLUhavYj7HdU75XWychRSdCG9FYPGL6JfAp+qJpeCrTUNL8DRxNcGXY=\n=YBL2\n-----END PGP SIGNATURE-----\n", "payload": "tree 87739178b746d8de65b40db2102b9e9abeb95d32\nparent d99dc7abfaaf9ddee9110f834dbadda302d183ad\nparent 60bf2f192678337a7e8dcb5cebf6c17762707466\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1635597424 +0200\ncommitter GitHub <noreply@github.com> 1635597424 +0200\n\nRollup merge of #90402 - wesleywiser:query_descriptions, r=oli-obk\n\nAdd a few query descriptions\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9111e0336ee595961069fc5b9126c435968894b", "html_url": "https://github.com/rust-lang/rust/commit/f9111e0336ee595961069fc5b9126c435968894b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9111e0336ee595961069fc5b9126c435968894b/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d99dc7abfaaf9ddee9110f834dbadda302d183ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/d99dc7abfaaf9ddee9110f834dbadda302d183ad", "html_url": "https://github.com/rust-lang/rust/commit/d99dc7abfaaf9ddee9110f834dbadda302d183ad"}, {"sha": "60bf2f192678337a7e8dcb5cebf6c17762707466", "url": "https://api.github.com/repos/rust-lang/rust/commits/60bf2f192678337a7e8dcb5cebf6c17762707466", "html_url": "https://github.com/rust-lang/rust/commit/60bf2f192678337a7e8dcb5cebf6c17762707466"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "06041bbb02d355537240c012aefb6835520036d4", "filename": "compiler/rustc_middle/src/query/mod.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f9111e0336ee595961069fc5b9126c435968894b/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9111e0336ee595961069fc5b9126c435968894b/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs?ref=f9111e0336ee595961069fc5b9126c435968894b", "patch": "@@ -687,12 +687,13 @@ rustc_queries! {\n         desc { |tcx| \"processing `{}`\", tcx.def_path_str(key.to_def_id()) }\n     }\n \n-    /// The signature of functions.\n+    /// Computes the signature of the function.\n     query fn_sig(key: DefId) -> ty::PolyFnSig<'tcx> {\n         desc { |tcx| \"computing function signature of `{}`\", tcx.def_path_str(key) }\n         separate_provide_extern\n     }\n \n+    /// Performs lint checking for the module.\n     query lint_mod(key: LocalDefId) -> () {\n         desc { |tcx| \"linting {}\", describe_as_module(key, tcx) }\n     }\n@@ -702,6 +703,7 @@ rustc_queries! {\n         desc { |tcx| \"checking attributes in {}\", describe_as_module(key, tcx) }\n     }\n \n+    /// Checks for uses of unstable APIs in the module.\n     query check_mod_unstable_api_usage(key: LocalDefId) -> () {\n         desc { |tcx| \"checking for unstable API usage in {}\", describe_as_module(key, tcx) }\n     }\n@@ -928,6 +930,7 @@ rustc_queries! {\n         desc { |tcx| \"computing drop scopes for `{}`\", tcx.def_path_str(def_id) }\n     }\n \n+    /// Generates a MIR body for the shim.\n     query mir_shims(key: ty::InstanceDef<'tcx>) -> mir::Body<'tcx> {\n         storage(ArenaCacheSelector<'tcx>)\n         desc { |tcx| \"generating MIR shim for `{}`\", tcx.def_path_str(key.def_id()) }\n@@ -946,11 +949,13 @@ rustc_queries! {\n         separate_provide_extern\n     }\n \n+    /// Gets the span for the definition.\n     query def_span(def_id: DefId) -> Span {\n         desc { |tcx| \"looking up span for `{}`\", tcx.def_path_str(def_id) }\n         separate_provide_extern\n     }\n \n+    /// Gets the span for the identifier of the definition.\n     query def_ident_span(def_id: DefId) -> Option<Span> {\n         desc { |tcx| \"looking up span for `{}`'s identifier\", tcx.def_path_str(def_id) }\n         separate_provide_extern\n@@ -1466,6 +1471,8 @@ rustc_queries! {\n         desc { \"fetching what a dependency looks like\" }\n         separate_provide_extern\n     }\n+\n+    /// Gets the name of the crate.\n     query crate_name(_: CrateNum) -> Symbol {\n         eval_always\n         desc { \"fetching what a crate is named\" }"}]}