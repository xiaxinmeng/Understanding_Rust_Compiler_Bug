{"sha": "8bea63425ea5d18f69802d9a1475ea1e2f417595", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiZWE2MzQyNWVhNWQxOGY2OTgwMmQ5YTE0NzVlYTFlMmY0MTc1OTU=", "commit": {"author": {"name": "miguel raz", "email": "miguelraz@gmail.com", "date": "2021-02-03T23:46:08Z"}, "committer": {"name": "miguel raz", "email": "miguelraz@gmail.com", "date": "2021-02-03T23:46:08Z"}, "message": "AsRef -> as_slices()", "tree": {"sha": "452e700fe52cb6f4bd14d7d401a9ea134e117584", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/452e700fe52cb6f4bd14d7d401a9ea134e117584"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8bea63425ea5d18f69802d9a1475ea1e2f417595", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8bea63425ea5d18f69802d9a1475ea1e2f417595", "html_url": "https://github.com/rust-lang/rust/commit/8bea63425ea5d18f69802d9a1475ea1e2f417595", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8bea63425ea5d18f69802d9a1475ea1e2f417595/comments", "author": {"login": "miguelraz", "id": 13056181, "node_id": "MDQ6VXNlcjEzMDU2MTgx", "avatar_url": "https://avatars.githubusercontent.com/u/13056181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelraz", "html_url": "https://github.com/miguelraz", "followers_url": "https://api.github.com/users/miguelraz/followers", "following_url": "https://api.github.com/users/miguelraz/following{/other_user}", "gists_url": "https://api.github.com/users/miguelraz/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelraz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelraz/subscriptions", "organizations_url": "https://api.github.com/users/miguelraz/orgs", "repos_url": "https://api.github.com/users/miguelraz/repos", "events_url": "https://api.github.com/users/miguelraz/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelraz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "miguelraz", "id": 13056181, "node_id": "MDQ6VXNlcjEzMDU2MTgx", "avatar_url": "https://avatars.githubusercontent.com/u/13056181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelraz", "html_url": "https://github.com/miguelraz", "followers_url": "https://api.github.com/users/miguelraz/followers", "following_url": "https://api.github.com/users/miguelraz/following{/other_user}", "gists_url": "https://api.github.com/users/miguelraz/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelraz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelraz/subscriptions", "organizations_url": "https://api.github.com/users/miguelraz/orgs", "repos_url": "https://api.github.com/users/miguelraz/repos", "events_url": "https://api.github.com/users/miguelraz/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelraz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b6b5d71424a6b55c0209117d72af45253ffe8c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b6b5d71424a6b55c0209117d72af45253ffe8c5", "html_url": "https://github.com/rust-lang/rust/commit/9b6b5d71424a6b55c0209117d72af45253ffe8c5"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "ae7c86c81c50adfcc99ca0677123005e7955f6a8", "filename": "crates/core_simd/src/ops.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8bea63425ea5d18f69802d9a1475ea1e2f417595/crates%2Fcore_simd%2Fsrc%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bea63425ea5d18f69802d9a1475ea1e2f417595/crates%2Fcore_simd%2Fsrc%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fops.rs?ref=8bea63425ea5d18f69802d9a1475ea1e2f417595", "patch": "@@ -358,8 +358,7 @@ macro_rules! impl_unsigned_int_ops {\n \n                         #[inline]\n                         fn rem(self, rhs: Self) -> Self::Output {\n-                            // TODO there is probably a better way of doing this\n-                            if AsRef::<[$scalar]>::as_ref(&rhs)\n+                            if rhs.as_slice()\n                                 .iter()\n                                 .any(|x| *x == 0)\n                             {\n@@ -435,7 +434,7 @@ macro_rules! impl_unsigned_int_ops {\n                         #[inline]\n                         fn shl(self, rhs: Self) -> Self::Output {\n                             // TODO there is probably a better way of doing this\n-                            if AsRef::<[$scalar]>::as_ref(&rhs)\n+                            if rhs.as_slice()\n                                 .iter()\n                                 .copied()\n                                 .any(invalid_shift_rhs)"}]}