{"sha": "00ce7eed7d03b63a91c90d1fc5736b1f6450e239", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwY2U3ZWVkN2QwM2I2M2E5MWM5MGQxZmM1NzM2YjFmNjQ1MGUyMzk=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-01-10T15:14:20Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-01-10T15:15:08Z"}, "message": "resolve type and region variables in \"NLL dropck\"\n\nFixes #47022.", "tree": {"sha": "ee44b811d2b2af9500bdfca8eb5fab28e2c091aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee44b811d2b2af9500bdfca8eb5fab28e2c091aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/00ce7eed7d03b63a91c90d1fc5736b1f6450e239", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/00ce7eed7d03b63a91c90d1fc5736b1f6450e239", "html_url": "https://github.com/rust-lang/rust/commit/00ce7eed7d03b63a91c90d1fc5736b1f6450e239", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/00ce7eed7d03b63a91c90d1fc5736b1f6450e239/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27ede55414e01f13c6869a8763da207e544cc6ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/27ede55414e01f13c6869a8763da207e544cc6ad", "html_url": "https://github.com/rust-lang/rust/commit/27ede55414e01f13c6869a8763da207e544cc6ad"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "8a0578ae4d45c302f36c5c4a791c63fa99de9a2c", "filename": "src/librustc_mir/borrow_check/nll/type_check/liveness.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00ce7eed7d03b63a91c90d1fc5736b1f6450e239/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00ce7eed7d03b63a91c90d1fc5736b1f6450e239/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fliveness.rs?ref=00ce7eed7d03b63a91c90d1fc5736b1f6450e239", "patch": "@@ -214,6 +214,7 @@ impl<'gen, 'typeck, 'flow, 'gcx, 'tcx> TypeLivenessGenerator<'gen, 'typeck, 'flo\n             // associated types here and possibly recursively process.\n             for ty in dtorck_types {\n                 let ty = self.cx.normalize(&ty, location);\n+                let ty = self.cx.infcx.resolve_type_and_region_vars_if_possible(&ty);\n                 match ty.sty {\n                     ty::TyParam(..) | ty::TyProjection(..) | ty::TyAnon(..) => {\n                         let cause = Cause::DropVar(dropped_local, location);"}, {"sha": "a7362c34c1751eafd15e9469c395f9f89f35094a", "filename": "src/test/ui/nll/issue-47022.rs", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/00ce7eed7d03b63a91c90d1fc5736b1f6450e239/src%2Ftest%2Fui%2Fnll%2Fissue-47022.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00ce7eed7d03b63a91c90d1fc5736b1f6450e239/src%2Ftest%2Fui%2Fnll%2Fissue-47022.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-47022.rs?ref=00ce7eed7d03b63a91c90d1fc5736b1f6450e239", "patch": "@@ -0,0 +1,47 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// must-compile-successfully\n+\n+#![allow(warnings)]\n+#![feature(nll)]\n+\n+struct LoadedObject {\n+    bodies: Vec<Body>,\n+    color: Color,\n+}\n+\n+struct Body;\n+\n+#[derive(Clone)]\n+struct Color;\n+\n+struct Graphic {\n+    color: Color,\n+}\n+\n+fn convert(objects: Vec<LoadedObject>) -> (Vec<Body>, Vec<Graphic>) {\n+    objects\n+        .into_iter()\n+        .flat_map(|LoadedObject { bodies, color, .. }| {\n+            bodies.into_iter().map(move |body| {\n+                (\n+                    body,\n+                    Graphic {\n+                        color: color.clone(),\n+                    },\n+                )\n+            })\n+        })\n+        .unzip()\n+}\n+\n+fn main() {}\n+"}]}