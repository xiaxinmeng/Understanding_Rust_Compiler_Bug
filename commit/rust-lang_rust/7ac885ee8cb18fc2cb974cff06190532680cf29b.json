{"sha": "7ac885ee8cb18fc2cb974cff06190532680cf29b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhYzg4NWVlOGNiMThmYzJjYjk3NGNmZjA2MTkwNTMyNjgwY2YyOWI=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-03-22T06:06:42Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-03-22T06:06:42Z"}, "message": "Repair some fallout from pcwalton's last few build changes.", "tree": {"sha": "f1a354cd2a763949a29856bac7e158d0f4f77b3b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1a354cd2a763949a29856bac7e158d0f4f77b3b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ac885ee8cb18fc2cb974cff06190532680cf29b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ac885ee8cb18fc2cb974cff06190532680cf29b", "html_url": "https://github.com/rust-lang/rust/commit/7ac885ee8cb18fc2cb974cff06190532680cf29b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ac885ee8cb18fc2cb974cff06190532680cf29b/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e1ff638a3c920654c5f05c83b05e1e3b76e9782", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e1ff638a3c920654c5f05c83b05e1e3b76e9782", "html_url": "https://github.com/rust-lang/rust/commit/1e1ff638a3c920654c5f05c83b05e1e3b76e9782"}], "stats": {"total": 80, "additions": 46, "deletions": 34}, "files": [{"sha": "865a382795065c45a3c645a499ae4a75168cafff", "filename": "Makefile.in", "status": "modified", "additions": 26, "deletions": 25, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/7ac885ee8cb18fc2cb974cff06190532680cf29b/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/7ac885ee8cb18fc2cb974cff06190532680cf29b/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=7ac885ee8cb18fc2cb974cff06190532680cf29b", "patch": "@@ -61,7 +61,7 @@ ifneq ($(findstring MINGW,$(CFG_OSTYPE)),)\n endif\n \n CFG_LDPATH :=$(CFG_BUILD_DIR)/rt\n-CFG_LDPATH :=$(CFG_LDPATH):$(CFG_BUILD_DIR)/llvmext\n+CFG_LDPATH :=$(CFG_LDPATH):$(CFG_BUILD_DIR)/rustllvm\n \n ifdef CFG_WINDOWSY\n   CFG_INFO := $(info cfg: windows-y environment)\n@@ -126,7 +126,7 @@ ifdef CFG_UNIXY\n endif\n \n CFG_RUNTIME :=$(call CFG_LIB_NAME,rustrt)\n-CFG_LLVMEXT :=$(call CFG_LIB_NAME,rustllvm)\n+CFG_RUSTLLVM :=$(call CFG_LIB_NAME,rustllvm)\n CFG_STDLIB :=$(call CFG_LIB_NAME,std)\n \n CFG_LLC_CFLAGS := -march=x86\n@@ -136,7 +136,7 @@ ifdef CFG_GCC\n   CFG_GCC_CFLAGS += -Wall -Werror -fno-rtti -fno-exceptions -g\n   CFG_GCC_LINK_FLAGS += -g\n   CFG_COMPILE_C = $(CFG_GCC_CROSS)g++ $(CFG_GCC_CFLAGS) -c -o $(1) $(2)\n-  CFG_LINK_C = $(CFG_GCC_CROSS)g++ $(CFG_GCC_LINK_FLAGS) -o $(1)\n+  CFG_LINK_C = $(CFG_GCC_CROSS)g++ $(CFG_GCC_LINK_FLAGS) -o $(1) $(2)\n   CFG_DEPEND_C = $(CFG_GCC_CROSS)g++ $(CFG_GCC_CFLAGS) -MT \"$(1)\" -MM $(2)\n else\n   CFG_ERR := $(error please try on a system with gcc)\n@@ -319,16 +319,16 @@ RUNTIME_OBJS := $(RUNTIME_CS:.cpp=.o)\n # rustc LLVM-extensions (C++) library variables\n ######################################################################\n \n-LLVMEXT_CS := $(addprefix llvmext/, \\\n+RUSTLLVM_CS := $(addprefix rustllvm/, \\\n                 MachOObjectFile.cpp Object.cpp RustWrapper.cpp)\n \n-LLVMEXT_HDR := llvmext/include/llvm-c/Object.h\n-LLVMEXT_DEF := $(S)src/llvmext/rustllvm.def\n+RUSTLLVM_HDR := rustllvm/include/llvm-c/Object.h\n+RUSTLLVM_DEF := $(S)src/rustllvm/rustllvm.def\n \n-LLVMEXT_INCS := -iquote $(CFG_LLVM_INCDIR) \\\n-                -iquote $(S)src/llvmext/include\n-LLVMEXT_OBJS := $(LLVMEXT_CS:.cpp=.o)\n-LLVMEXT_LIBS := $(CFG_LLVM_LDFLAGS) $(CFG_LLVM_LIBS)\n+RUSTLLVM_INCS := -iquote $(CFG_LLVM_INCDIR) \\\n+                 -iquote $(S)src/rustllvm/include\n+RUSTLLVM_OBJS := $(RUSTLLVM_CS:.cpp=.o)\n+RUSTLLVM_LIBS := $(CFG_LLVM_LDFLAGS) $(CFG_LLVM_LIBS)\n \n ######################################################################\n # Standard library variables\n@@ -349,7 +349,7 @@ COMPILER_INPUTS := $(wildcard $(addprefix $(S)src/comp/, \\\n # test dependency variables\n ######################################################################\n \n-LREQ := rt/$(CFG_RUNTIME) llvmext/$(CFG_LLVMEXT)\n+LREQ := rt/$(CFG_RUNTIME) rustllvm/$(CFG_RUSTLLVM)\n BREQ := boot/rustboot$(X) boot/$(CFG_STDLIB)\n SREQ0 := stage0/rustc$(X) $(LREQ)\n SREQ1 := stage1/rustc$(X) $(LREQ)\n@@ -361,7 +361,7 @@ SREQ1 := stage1/rustc$(X) $(LREQ)\n all: boot/rustboot$(X)          \\\n      boot/$(CFG_STDLIB)         \\\n      rt/$(CFG_RUNTIME)          \\\n-     llvmext/$(CFG_LLVMEXT)     \\\n+     rustllvm/$(CFG_RUSTLLVM)   \\\n      stage0/rustc$(X)           \\\n      stage0/glue.o              \\\n      stage0/$(CFG_STDLIB)       \\\n@@ -371,11 +371,11 @@ rt/$(CFG_RUNTIME): $(RUNTIME_OBJS) $(MKFILES) $(RUNTIME_HDR) $(RUNTIME_DEF)\n \t@$(call E, link: $@)\n \t$(Q)$(call CFG_LINK_C,$@,$(RUNTIME_OBJS),$(RUNTIME_DEF))\n \n-llvmext/$(CFG_LLVMEXT): $(LLVMEXT_OBJS) $(MKFILES) $(LLVMEXT_HDR) \\\n-\t\t\t\t\t    $(LLVMEXT_DEF)\n+rustllvm/$(CFG_RUSTLLVM): $(RUSTLLVM_OBJS) $(MKFILES) $(RUSTLLVM_HDR) \\\n+                          $(RUSTLLVM_DEF)\n \t@$(call E, link: $@)\n-\t$(Q)$(call CFG_LINK_C,$@,$(CFG_LLVM_LDFLAGS) $(LLVMEXT_OBJS) \\\n-        $(CFG_LLVM_LIBS),$(LLVMEXT_DEF))\n+\t$(Q)$(call CFG_LINK_C,$@,$(CFG_LLVM_LDFLAGS) $(RUSTLLVM_OBJS) \\\n+          $(CFG_LLVM_LIBS) $(CFG_LLVM_LDFLAGS),$(RUSTLLVM_DEF))\n \n ifdef CFG_BOOT_NATIVE\n boot/rustboot$(X): $(BOOT_CMXS) $(MKFILES)\n@@ -438,17 +438,17 @@ stage2/rustc$(X): $(COMPILER_CRATE) $(COMPILER_INPUTS) \\\n \n \n stage0/glue.bc: stage0/rustc$(X) stage0/$(CFG_STDLIB) \\\n-                llvmext/$(CFG_LLVMEXT) rt/$(CFG_RUNTIME)\n+                rustllvm/$(CFG_RUSTLLVM) rt/$(CFG_RUNTIME)\n \t@$(call E, generate: $@)\n \t$(STAGE0) -o $@ -glue\n \n stage1/glue.bc: stage1/rustc$(X) stage1/$(CFG_STDLIB) \\\n-                llvmext/$(CFG_LLVMEXT) rt/$(CFG_RUNTIME)\n+                rustllvm/$(CFG_RUSTLLVM) rt/$(CFG_RUNTIME)\n \t@$(call E, generate: $@)\n \t$(STAGE1) -o $@ -glue\n \n stage2/glue.bc: stage2/rustc$(X) stage2/$(CFG_STDLIB) \\\n-                llvmext/$(CFG_LLVMEXT) rt/$(CFG_RUNTIME)\n+                rustllvm/$(CFG_RUSTLLVM) rt/$(CFG_RUNTIME)\n \t@$(call E, generate: $@)\n \t$(STAGE2) -o $@ -glue\n \n@@ -460,9 +460,9 @@ rt/%.o: rt/%.cpp $(MKFILES)\n \t@$(call E, compile: $@)\n \t$(Q)$(call CFG_COMPILE_C, $@, $(RUNTIME_INCS)) $<\n \n-llvmext/%.o: llvmext/%.cpp $(MKFILES)\n+rustllvm/%.o: rustllvm/%.cpp $(MKFILES)\n \t@$(call E, compile: $@)\n-\t$(Q)$(call CFG_COMPILE_C, $@, $(CFG_LLVM_CXXFLAGS) $(LLVMEXT_INCS)) $<\n+\t$(Q)$(call CFG_COMPILE_C, $@, $(CFG_LLVM_CXXFLAGS) $(RUSTLLVM_INCS)) $<\n \n %.cmo: %.ml $(MKFILES)\n \t@$(call E, compile: $@)\n@@ -946,7 +946,7 @@ PKG_FILES :=\\\n       README boot/README comp/README           \\\n       $(filter-out $(GENERATED), $(BOOT_MLS))  \\\n       $(RUNTIME_CS) $(RUNTIME_HDR)             \\\n-      $(LLVMEXT_CS) $(LLVMEXT_HDR)             \\\n+      $(RUSTLLVM_CS) $(RUSTLLVM_HDR)           \\\n       $(PKG_3RDPARTY))                         \\\n     $(GENERATED)                               \\\n     $(S)src/boot/fe/lexer.ml                   \\\n@@ -994,13 +994,14 @@ tidy:\n \t@$(call E, check: formatting)\n \t$(Q)python $(S)src/etc/tidy.py \\\n       $(filter-out $(GENERATED) $(addprefix $(S)src/, $(GENERATED)) \\\n-        $(addprefix $(S)src/, $(LLVMEXT_CS) $(LLVMEXT_HDR) $(PKG_3RDPARTY)) \\\n+        $(addprefix $(S)src/, $(RUSTLLVM_CS) $(RUSTLLVM_HDR) \\\n+          $(PKG_3RDPARTY)) \\\n         $(S)src/etc/%, $(PKG_FILES))\n \n clean:\n \t@$(call E, cleaning)\n \t$(Q)rm -f $(RUNTIME_OBJS)\n-\t$(Q)rm -f $(LLVMEXT_OBJS)\n+\t$(Q)rm -f $(RUSTLLVM_OBJS)\n \t$(Q)rm -f $(BOOT_CMOS) $(BOOT_CMIS) $(BOOT_CMXS) $(BOOT_OBJS)\n \t$(Q)rm -f $(ML_DEPFILES) $(C_DEPFILES) $(CRATE_DEPFILES)\n \t$(Q)rm -f $(ML_DEPFILES:%.d=%.d.tmp)\n@@ -1011,7 +1012,7 @@ clean:\n \t$(Q)rm -f stage0/rustc$(X) stage0/$(CFG_STDLIB) stage0/glue*\n \t$(Q)rm -f stage1/rustc$(X) stage1/$(CFG_STDLIB) stage1/glue*\n \t$(Q)rm -f stage2/rustc$(X) stage2/$(CFG_STDLIB) stage2/glue*\n-\t$(Q)rm -f llvmext/$(CFG_LLVMEXT) rt/$(CFG_RUNTIME)\n+\t$(Q)rm -f rustllvm/$(CFG_RUSTLLVM) rt/$(CFG_RUNTIME)\n \t$(Q)rm -Rf $(PKG_NAME)-*.tar.gz dist\n \t$(Q)rm -f $(foreach ext,cmx cmi cmo cma bc o a d exe,\\\n                         $(wildcard boot/*/*.$(ext) boot/*/*/*.$(ext)))"}, {"sha": "d01e6b294b8afebbabd5b57f8489d5693633ee84", "filename": "configure", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/7ac885ee8cb18fc2cb974cff06190532680cf29b/configure", "raw_url": "https://github.com/rust-lang/rust/raw/7ac885ee8cb18fc2cb974cff06190532680cf29b/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=7ac885ee8cb18fc2cb974cff06190532680cf29b", "patch": "@@ -73,6 +73,11 @@ probe_need() {\n msg \"looking for configure programs\"\n need_cmd mkdir\n need_cmd printf\n+need_cmd cut\n+need_cmd grep\n+need_cmd xargs\n+need_cmd cp\n+need_cmd find\n \n msg \"recreating config.mk\"\n echo '' >config.mk\n@@ -82,7 +87,7 @@ for i in \\\n     doc \\\n     boot/fe boot/me boot/be boot/driver boot/util \\\n     rt rt/isaac rt/bigint rt/sync rt/test \\\n-    llvmext \\\n+    rustllvm \\\n     stage0 stage1 stage2 \\\n     test/run-pass test/run-fail test/compile-fail \\\n     test/bench/99-bottles test/bench/shootout\n@@ -123,9 +128,15 @@ then\n     CFG_LLVM_LIBDIR=\"$CFG_LLVM_ROOT/lib\"\n     CFG_LLVM_CXXFLAGS=\"-I$CFG_LLVM_INCDIR\"\n     CFG_LLVM_LDFLAGS=\"\"\n-    CFG_LLVM_LIBS=$(find \"$CFG_LLVM_LIBDIR\" -name '*.lib' -exec echo '\\\"{}\\\"' ';' | xargs echo)\n-    CFG_LLVM_VERSION=$(\"$CFG_LLVM_BINDIR/llc\" --version | grep version | cut -d ' ' -f 5-)\n-elif [ ! -z \"$CFG_LLVM_VERSION\" ]\n+    CFG_LLVM_LIBS=$(find \"$CFG_LLVM_LIBDIR\" \\\n+                    -name '*.lib' \\\n+                    -exec echo '\\\"{}\\\"' ';' \\\n+                    | xargs echo)\n+    CFG_LLVM_VERSION=$(\"$CFG_LLVM_BINDIR/llc\" \\\n+                       --version \\\n+                       | grep version \\\n+                       | cut -d ' ' -f 5-)\n+elif [ ! -z \"$CFG_LLVM_CONFIG\" ]\n then\n     CFG_LLVM_VERSION=$(llvm-config --version)\n     CFG_LLVM_INCDIR=$(llvm-config --includedir)\n@@ -136,7 +147,7 @@ then\n     CFG_LLVM_LIBS=$(llvm-config --libs)\n else\n     err \"either the \\\"CFG_LLVM_ROOT\\\" environment variable must be set, or a \\\n-\\\"llvm-version\\\" script must be present\"\n+\\\"llvm-config\\\" script must be present\"\n fi\n \n case $CFG_LLVM_VERSION in"}, {"sha": "f5b3fe9b4bf815b222a59322df2267081d5c58f4", "filename": "src/Makefile", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7ac885ee8cb18fc2cb974cff06190532680cf29b/src%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/7ac885ee8cb18fc2cb974cff06190532680cf29b/src%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FMakefile?ref=7ac885ee8cb18fc2cb974cff06190532680cf29b", "patch": "@@ -321,12 +321,12 @@ RUNTIME_HDR := rt/globals.h \\\n RUNTIME_INCS := -Irt/isaac -Irt/uthash\n RUNTIME_OBJS := $(RUNTIME_CS:.cpp=.o)\n \n-SUPPORT_CS := $(addprefix llvmext/, \\\n+SUPPORT_CS := $(addprefix rustllvm/, \\\n     MachOObjectFile.cpp Object.cpp RustWrapper.cpp)\n \n-SUPPORT_HDR := llvmext/include/llvm-c/Object.h\n+SUPPORT_HDR := rustllvm/include/llvm-c/Object.h\n \n-SUPPORT_INCS := -iquote $(CFG_LLVM_INCDIR) -iquote llvmext/include\n+SUPPORT_INCS := -iquote $(CFG_LLVM_INCDIR) -iquote rustllvm/include\n SUPPORT_OBJS := $(SUPPORT_CS:.cpp=.o)\n SUPPORT_LIBS := $(CFG_LLVM_LDFLAGS) $(CFG_LLVM_LIBS)\n \n@@ -363,7 +363,7 @@ rt/%.o: rt/%.cpp $(MKFILES)\n \t@$(call CFG_ECHO, compile: $<)\n \t$(CFG_QUIET)$(call CFG_COMPILE_C, $@, $(RUNTIME_INCS)) $<\n \n-llvmext/%.o: llvmext/%.cpp $(MKFILES)\n+rustllvm/%.o: rustllvm/%.cpp $(MKFILES)\n \t@$(call CFG_ECHO, compile: $<)\n \t$(CFG_QUIET)$(call CFG_COMPILE_C, $@, $(CFG_LLVM_CXXFLAGS) \\\n \t\t$(SUPPORT_INCS)) $<"}, {"sha": "4a003249191e29d07f6c830847ba928fa81b64f6", "filename": "src/rustllvm/MachOObjectFile.cpp", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/7ac885ee8cb18fc2cb974cff06190532680cf29b/src%2Frustllvm%2FMachOObjectFile.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/7ac885ee8cb18fc2cb974cff06190532680cf29b/src%2Frustllvm%2FMachOObjectFile.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FMachOObjectFile.cpp?ref=7ac885ee8cb18fc2cb974cff06190532680cf29b", "previous_filename": "src/llvmext/MachOObjectFile.cpp"}, {"sha": "603e72b9036ae8e6f4ec327a883b459fab133767", "filename": "src/rustllvm/Object.cpp", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/7ac885ee8cb18fc2cb974cff06190532680cf29b/src%2Frustllvm%2FObject.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/7ac885ee8cb18fc2cb974cff06190532680cf29b/src%2Frustllvm%2FObject.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FObject.cpp?ref=7ac885ee8cb18fc2cb974cff06190532680cf29b", "previous_filename": "src/llvmext/Object.cpp"}, {"sha": "31495f22c0a5044d3db2c95b567cafd4542c53c8", "filename": "src/rustllvm/README", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/7ac885ee8cb18fc2cb974cff06190532680cf29b/src%2Frustllvm%2FREADME", "raw_url": "https://github.com/rust-lang/rust/raw/7ac885ee8cb18fc2cb974cff06190532680cf29b/src%2Frustllvm%2FREADME", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FREADME?ref=7ac885ee8cb18fc2cb974cff06190532680cf29b", "previous_filename": "src/llvmext/README"}, {"sha": "a604e4c29c54cb812d2aff3e388b4821e577de97", "filename": "src/rustllvm/RustWrapper.cpp", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/7ac885ee8cb18fc2cb974cff06190532680cf29b/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/7ac885ee8cb18fc2cb974cff06190532680cf29b/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=7ac885ee8cb18fc2cb974cff06190532680cf29b", "previous_filename": "src/llvmext/RustWrapper.cpp"}, {"sha": "1103d7dd9691711859c0b9e106d28396eb3a8c53", "filename": "src/rustllvm/include/llvm-c/Object.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/7ac885ee8cb18fc2cb974cff06190532680cf29b/src%2Frustllvm%2Finclude%2Fllvm-c%2FObject.h", "raw_url": "https://github.com/rust-lang/rust/raw/7ac885ee8cb18fc2cb974cff06190532680cf29b/src%2Frustllvm%2Finclude%2Fllvm-c%2FObject.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2Finclude%2Fllvm-c%2FObject.h?ref=7ac885ee8cb18fc2cb974cff06190532680cf29b", "previous_filename": "src/llvmext/include/llvm-c/Object.h"}, {"sha": "c1b521b505a2cacafa0674609dfc51dbb4b148c4", "filename": "src/rustllvm/rustllvm.def", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/7ac885ee8cb18fc2cb974cff06190532680cf29b/src%2Frustllvm%2Frustllvm.def", "raw_url": "https://github.com/rust-lang/rust/raw/7ac885ee8cb18fc2cb974cff06190532680cf29b/src%2Frustllvm%2Frustllvm.def", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2Frustllvm.def?ref=7ac885ee8cb18fc2cb974cff06190532680cf29b", "previous_filename": "src/llvmext/rustllvm.def"}]}