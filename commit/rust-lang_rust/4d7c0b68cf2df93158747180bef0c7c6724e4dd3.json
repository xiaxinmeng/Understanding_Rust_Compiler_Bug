{"sha": "4d7c0b68cf2df93158747180bef0c7c6724e4dd3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkN2MwYjY4Y2YyZGY5MzE1ODc0NzE4MGJlZjBjN2M2NzI0ZTRkZDM=", "commit": {"author": {"name": "achernyak", "email": "artemchernyak@gmail.com", "date": "2017-05-03T13:17:54Z"}, "committer": {"name": "achernyak", "email": "artemchernyak@gmail.com", "date": "2017-05-03T13:17:54Z"}, "message": "all queries use dep nodes", "tree": {"sha": "9c7646236b201b8b38ed0cec221a54cbf9be1e74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c7646236b201b8b38ed0cec221a54cbf9be1e74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d7c0b68cf2df93158747180bef0c7c6724e4dd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d7c0b68cf2df93158747180bef0c7c6724e4dd3", "html_url": "https://github.com/rust-lang/rust/commit/4d7c0b68cf2df93158747180bef0c7c6724e4dd3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d7c0b68cf2df93158747180bef0c7c6724e4dd3/comments", "author": {"login": "hackeryarn", "id": 827709, "node_id": "MDQ6VXNlcjgyNzcwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/827709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hackeryarn", "html_url": "https://github.com/hackeryarn", "followers_url": "https://api.github.com/users/hackeryarn/followers", "following_url": "https://api.github.com/users/hackeryarn/following{/other_user}", "gists_url": "https://api.github.com/users/hackeryarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/hackeryarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hackeryarn/subscriptions", "organizations_url": "https://api.github.com/users/hackeryarn/orgs", "repos_url": "https://api.github.com/users/hackeryarn/repos", "events_url": "https://api.github.com/users/hackeryarn/events{/privacy}", "received_events_url": "https://api.github.com/users/hackeryarn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hackeryarn", "id": 827709, "node_id": "MDQ6VXNlcjgyNzcwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/827709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hackeryarn", "html_url": "https://github.com/hackeryarn", "followers_url": "https://api.github.com/users/hackeryarn/followers", "following_url": "https://api.github.com/users/hackeryarn/following{/other_user}", "gists_url": "https://api.github.com/users/hackeryarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/hackeryarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hackeryarn/subscriptions", "organizations_url": "https://api.github.com/users/hackeryarn/orgs", "repos_url": "https://api.github.com/users/hackeryarn/repos", "events_url": "https://api.github.com/users/hackeryarn/events{/privacy}", "received_events_url": "https://api.github.com/users/hackeryarn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8305394b4c32c2576bb02a026c05f01c96f46d92", "url": "https://api.github.com/repos/rust-lang/rust/commits/8305394b4c32c2576bb02a026c05f01c96f46d92", "html_url": "https://github.com/rust-lang/rust/commit/8305394b4c32c2576bb02a026c05f01c96f46d92"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "1c71079e94b271b97d09c5202b7a9033c8c9da26", "filename": "src/librustc/dep_graph/dep_node.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4d7c0b68cf2df93158747180bef0c7c6724e4dd3/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d7c0b68cf2df93158747180bef0c7c6724e4dd3/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs?ref=4d7c0b68cf2df93158747180bef0c7c6724e4dd3", "patch": "@@ -154,6 +154,9 @@ pub enum DepNode<D: Clone + Debug> {\n     DefSpan(D),\n     Stability(D),\n     Deprecation(D),\n+    ItemBodyNestedBodies(D),\n+    ConstIsRvaluePromotableToStatic(D),\n+    IsMirAvailable(D),\n }\n \n impl<D: Clone + Debug> DepNode<D> {\n@@ -264,6 +267,9 @@ impl<D: Clone + Debug> DepNode<D> {\n             DefSpan(ref d) => op(d).map(DefSpan),\n             Stability(ref d) => op(d).map(Stability),\n             Deprecation(ref d) => op(d).map(Deprecation),\n+            ItemBodyNestedBodies(ref d) => op(d).map(ItemBodyNestedBodies),\n+            ConstIsRvaluePromotableToStatic(ref d) => op(d).map(ConstIsRvaluePromotableToStatic),\n+            IsMirAvailable(ref d) => op(d).map(IsMirAvailable),\n         }\n     }\n }"}, {"sha": "513240a4ec345c950034a25f21297ea45f73e621", "filename": "src/librustc/ty/maps.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4d7c0b68cf2df93158747180bef0c7c6724e4dd3/src%2Flibrustc%2Fty%2Fmaps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d7c0b68cf2df93158747180bef0c7c6724e4dd3/src%2Flibrustc%2Fty%2Fmaps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps.rs?ref=4d7c0b68cf2df93158747180bef0c7c6724e4dd3", "patch": "@@ -783,9 +783,9 @@ define_maps! { <'tcx>\n     [] def_span: DefSpan(DefId) -> Span,\n     [] stability: Stability(DefId) -> Option<attr::Stability>,\n     [] deprecation: Deprecation(DefId) -> Option<attr::Deprecation>,\n-    [] item_body_nested_bodies: metadata_dep_node(DefId) -> Rc<BTreeMap<hir::BodyId, hir::Body>>,\n-    [] const_is_rvalue_promotable_to_static: metadata_dep_node(DefId) -> bool,\n-    [] is_mir_available: metadata_dep_node(DefId) -> bool,\n+    [] item_body_nested_bodies: ItemBodyNestedBodies(DefId) -> Rc<BTreeMap<hir::BodyId, hir::Body>>,\n+    [] const_is_rvalue_promotable_to_static: ConstIsRvaluePromotableToStatic(DefId) -> bool,\n+    [] is_mir_available: IsMirAvailable(DefId) -> bool,\n }\n \n fn coherent_trait_dep_node((_, def_id): (CrateNum, DefId)) -> DepNode<DefId> {\n@@ -800,10 +800,6 @@ fn reachability_dep_node(_: CrateNum) -> DepNode<DefId> {\n     DepNode::Reachability\n }\n \n-fn metadata_dep_node(def_id: DefId) -> DepNode<DefId> {\n-    DepNode::MetaData(def_id)\n-}\n-\n fn mir_shim_dep_node(instance: ty::InstanceDef) -> DepNode<DefId> {\n     instance.dep_node()\n }"}]}