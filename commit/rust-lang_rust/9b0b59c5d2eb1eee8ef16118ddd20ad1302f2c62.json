{"sha": "9b0b59c5d2eb1eee8ef16118ddd20ad1302f2c62", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliMGI1OWM1ZDJlYjFlZWU4ZWYxNjExOGRkZDIwYWQxMzAyZjJjNjI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-11T09:39:39Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-11T09:39:39Z"}, "message": "Add a test for disabled argument snippets", "tree": {"sha": "b838f4a2fd3d895444dbeb5df68941a28222386e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b838f4a2fd3d895444dbeb5df68941a28222386e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b0b59c5d2eb1eee8ef16118ddd20ad1302f2c62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b0b59c5d2eb1eee8ef16118ddd20ad1302f2c62", "html_url": "https://github.com/rust-lang/rust/commit/9b0b59c5d2eb1eee8ef16118ddd20ad1302f2c62", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b0b59c5d2eb1eee8ef16118ddd20ad1302f2c62/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0714a065d578e8b22b0451bfc64378c875fe858f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0714a065d578e8b22b0451bfc64378c875fe858f", "html_url": "https://github.com/rust-lang/rust/commit/0714a065d578e8b22b0451bfc64378c875fe858f"}], "stats": {"total": 62, "additions": 57, "deletions": 5}, "files": [{"sha": "ed1ab65af3da2bce526f0890edc3c53077f9f359", "filename": "crates/ra_ide/src/completion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9b0b59c5d2eb1eee8ef16118ddd20ad1302f2c62/crates%2Fra_ide%2Fsrc%2Fcompletion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b0b59c5d2eb1eee8ef16118ddd20ad1302f2c62/crates%2Fra_ide%2Fsrc%2Fcompletion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion.rs?ref=9b0b59c5d2eb1eee8ef16118ddd20ad1302f2c62", "patch": "@@ -20,7 +20,7 @@ mod complete_trait_impl;\n use ra_ide_db::RootDatabase;\n \n #[cfg(test)]\n-use crate::completion::completion_item::do_completion;\n+use crate::completion::completion_item::{do_completion, do_completion_with_options};\n use crate::{\n     completion::{\n         completion_context::CompletionContext,"}, {"sha": "ef684860713e99aa1ad9f0905552a3c487d8277b", "filename": "crates/ra_ide/src/completion/completion_item.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9b0b59c5d2eb1eee8ef16118ddd20ad1302f2c62/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b0b59c5d2eb1eee8ef16118ddd20ad1302f2c62/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_item.rs?ref=9b0b59c5d2eb1eee8ef16118ddd20ad1302f2c62", "patch": "@@ -321,8 +321,17 @@ impl Into<Vec<CompletionItem>> for Completions {\n \n #[cfg(test)]\n pub(crate) fn do_completion(code: &str, kind: CompletionKind) -> Vec<CompletionItem> {\n+    do_completion_with_options(code, kind, &crate::completion::CompletionOptions::default())\n+}\n+\n+#[cfg(test)]\n+pub(crate) fn do_completion_with_options(\n+    code: &str,\n+    kind: CompletionKind,\n+    options: &crate::completion::CompletionOptions,\n+) -> Vec<CompletionItem> {\n     use crate::{\n-        completion::{completions, CompletionOptions},\n+        completion::completions,\n         mock_analysis::{analysis_and_position, single_file_with_position},\n     };\n \n@@ -331,7 +340,6 @@ pub(crate) fn do_completion(code: &str, kind: CompletionKind) -> Vec<CompletionI\n     } else {\n         single_file_with_position(code)\n     };\n-    let options = CompletionOptions::default();\n     let completions = completions(&analysis.db, position, &options).unwrap();\n     let completion_items: Vec<CompletionItem> = completions.into();\n     let mut kind_completions: Vec<CompletionItem> ="}, {"sha": "5fc8b483c279553c930f109036fbf61a36ed0270", "filename": "crates/ra_ide/src/completion/presentation.rs", "status": "modified", "additions": 46, "deletions": 2, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/9b0b59c5d2eb1eee8ef16118ddd20ad1302f2c62/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpresentation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b0b59c5d2eb1eee8ef16118ddd20ad1302f2c62/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpresentation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpresentation.rs?ref=9b0b59c5d2eb1eee8ef16118ddd20ad1302f2c62", "patch": "@@ -307,12 +307,22 @@ mod tests {\n     use insta::assert_debug_snapshot;\n     use test_utils::covers;\n \n-    use crate::completion::{do_completion, CompletionItem, CompletionKind};\n+    use crate::completion::{\n+        do_completion, do_completion_with_options, CompletionItem, CompletionKind,\n+        CompletionOptions,\n+    };\n \n     fn do_reference_completion(ra_fixture: &str) -> Vec<CompletionItem> {\n         do_completion(ra_fixture, CompletionKind::Reference)\n     }\n \n+    fn do_reference_completion_with_options(\n+        ra_fixture: &str,\n+        options: CompletionOptions,\n+    ) -> Vec<CompletionItem> {\n+        do_completion_with_options(ra_fixture, CompletionKind::Reference, &options)\n+    }\n+\n     #[test]\n     fn enum_detail_includes_names_for_record() {\n         assert_debug_snapshot!(\n@@ -533,7 +543,7 @@ mod tests {\n     }\n \n     #[test]\n-    fn parens_for_method_call() {\n+    fn arg_snippets_for_method_call() {\n         assert_debug_snapshot!(\n             do_reference_completion(\n                 r\"\n@@ -562,6 +572,40 @@ mod tests {\n         )\n     }\n \n+    #[test]\n+    fn no_arg_snippets_for_method_call() {\n+        assert_debug_snapshot!(\n+            do_reference_completion_with_options(\n+                r\"\n+                struct S {}\n+                impl S {\n+                    fn foo(&self, x: i32) {}\n+                }\n+                fn bar(s: &S) {\n+                    s.f<|>\n+                }\n+                \",\n+                CompletionOptions {\n+                    add_call_argument_snippets: false,\n+                    .. Default::default()\n+                }\n+            ),\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"foo(\u2026)\",\n+                source_range: [171; 172),\n+                delete: [171; 172),\n+                insert: \"foo($0)\",\n+                kind: Method,\n+                lookup: \"foo\",\n+                detail: \"fn foo(&self, x: i32)\",\n+            },\n+        ]\n+        \"###\n+        )\n+    }\n+\n     #[test]\n     fn dont_render_function_parens_in_use_item() {\n         assert_debug_snapshot!("}]}