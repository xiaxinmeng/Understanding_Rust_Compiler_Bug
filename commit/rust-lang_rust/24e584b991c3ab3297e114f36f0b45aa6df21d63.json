{"sha": "24e584b991c3ab3297e114f36f0b45aa6df21d63", "node_id": "C_kwDOAAsO6NoAKDI0ZTU4NGI5OTFjM2FiMzI5N2UxMTRmMzZmMGI0NWFhNmRmMjFkNjM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-15T21:02:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-15T21:02:59Z"}, "message": "Rollup merge of #105694 - ouz-a:issue_105689, r=estebank\n\nDon't create dummy if val has escaping bounds var\n\nSkips creating/pushing obligations if val has escaping bounds vars.\n\nFixes #105689", "tree": {"sha": "991627eb510fc813ddbe9d17e3e90aa980b52c12", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/991627eb510fc813ddbe9d17e3e90aa980b52c12"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24e584b991c3ab3297e114f36f0b45aa6df21d63", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjm4uDCRBK7hj4Ov3rIwAANpUIAFnelzge8niPVJUKSvKZS8T1\n7kC/I8Yt+qQuu8VusHpZIZbLTUBv2E7FnKng9gwt65J78H3DO+59I+y9qv8e6tdp\n/H//F3eFUrdmlGqvubMnIMWO3noBTkBGi+cMgCSLmdjRHhDPsJnpg7rLKsgpVB03\nQs6203W0ezKERK/FPA0b1fPZ5uR/r0+gWf2H8xB2wwbf1e8LVJI07A3ZHO/KNh8G\n9/hOEX8yyWB1BBnCXqtztIFD6fpOczBJaP8kgBLJRWuI2DDGTEuT1FDfPzFJcmUS\n4VgyGuMeKlElvHGuSww3j3z2+/YzUHnUgM3rQWqVojxBNMbDCO18WHzCqCKe9Rs=\n=cuLa\n-----END PGP SIGNATURE-----\n", "payload": "tree 991627eb510fc813ddbe9d17e3e90aa980b52c12\nparent 86cedb4062dd3db87d1cf4dbc40e57cb3c4d1a91\nparent 75cf31faa83bb93689952408380dfdc8fe6ef1c4\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1671138179 +0100\ncommitter GitHub <noreply@github.com> 1671138179 +0100\n\nRollup merge of #105694 - ouz-a:issue_105689, r=estebank\n\nDon't create dummy if val has escaping bounds var\n\nSkips creating/pushing obligations if val has escaping bounds vars.\n\nFixes #105689\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24e584b991c3ab3297e114f36f0b45aa6df21d63", "html_url": "https://github.com/rust-lang/rust/commit/24e584b991c3ab3297e114f36f0b45aa6df21d63", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24e584b991c3ab3297e114f36f0b45aa6df21d63/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86cedb4062dd3db87d1cf4dbc40e57cb3c4d1a91", "url": "https://api.github.com/repos/rust-lang/rust/commits/86cedb4062dd3db87d1cf4dbc40e57cb3c4d1a91", "html_url": "https://github.com/rust-lang/rust/commit/86cedb4062dd3db87d1cf4dbc40e57cb3c4d1a91"}, {"sha": "75cf31faa83bb93689952408380dfdc8fe6ef1c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/75cf31faa83bb93689952408380dfdc8fe6ef1c4", "html_url": "https://github.com/rust-lang/rust/commit/75cf31faa83bb93689952408380dfdc8fe6ef1c4"}], "stats": {"total": 42, "additions": 29, "deletions": 13}, "files": [{"sha": "0e0a883d9f5908ffcf0dfe5c41a34daa5c1639e2", "filename": "compiler/rustc_trait_selection/src/traits/wf.rs", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/24e584b991c3ab3297e114f36f0b45aa6df21d63/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fwf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24e584b991c3ab3297e114f36f0b45aa6df21d63/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fwf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fwf.rs?ref=24e584b991c3ab3297e114f36f0b45aa6df21d63", "patch": "@@ -451,19 +451,21 @@ impl<'tcx> WfPredicates<'tcx> {\n                 GenericArgKind::Const(ct) => {\n                     match ct.kind() {\n                         ty::ConstKind::Unevaluated(uv) => {\n-                            let obligations = self.nominal_obligations(uv.def.did, uv.substs);\n-                            self.out.extend(obligations);\n-\n-                            let predicate =\n-                                ty::Binder::dummy(ty::PredicateKind::ConstEvaluatable(ct));\n-                            let cause = self.cause(traits::WellFormed(None));\n-                            self.out.push(traits::Obligation::with_depth(\n-                                self.tcx(),\n-                                cause,\n-                                self.recursion_depth,\n-                                self.param_env,\n-                                predicate,\n-                            ));\n+                            if !ct.has_escaping_bound_vars() {\n+                                let obligations = self.nominal_obligations(uv.def.did, uv.substs);\n+                                self.out.extend(obligations);\n+\n+                                let predicate =\n+                                    ty::Binder::dummy(ty::PredicateKind::ConstEvaluatable(ct));\n+                                let cause = self.cause(traits::WellFormed(None));\n+                                self.out.push(traits::Obligation::with_depth(\n+                                    self.tcx(),\n+                                    cause,\n+                                    self.recursion_depth,\n+                                    self.param_env,\n+                                    predicate,\n+                                ));\n+                            }\n                         }\n                         ty::ConstKind::Infer(_) => {\n                             let cause = self.cause(traits::WellFormed(None));"}, {"sha": "4237b3cad8e7fd8d33779d104a3145af382c89e0", "filename": "src/test/ui/const-generics/issue-105689.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/24e584b991c3ab3297e114f36f0b45aa6df21d63/src%2Ftest%2Fui%2Fconst-generics%2Fissue-105689.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24e584b991c3ab3297e114f36f0b45aa6df21d63/src%2Ftest%2Fui%2Fconst-generics%2Fissue-105689.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissue-105689.rs?ref=24e584b991c3ab3297e114f36f0b45aa6df21d63", "patch": "@@ -0,0 +1,14 @@\n+// check-pass\n+// edition:2021\n+#![feature(generic_const_exprs)]\n+#![allow(incomplete_features)]\n+\n+#[allow(unused)]\n+async fn foo<'a>() {\n+    let _data = &mut [0u8; { 1 + 4 }];\n+    bar().await\n+}\n+\n+async fn bar() {}\n+\n+fn main() {}"}]}