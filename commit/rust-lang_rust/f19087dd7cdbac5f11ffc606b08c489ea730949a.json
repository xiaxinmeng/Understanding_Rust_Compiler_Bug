{"sha": "f19087dd7cdbac5f11ffc606b08c489ea730949a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxOTA4N2RkN2NkYmFjNWYxMWZmYzYwNmIwOGM0ODllYTczMDk0OWE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-08-17T11:49:27Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-08-17T11:50:04Z"}, "message": "drift leftward", "tree": {"sha": "11ac78bd6e9dec6e065cf3f614bb14e32c369355", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11ac78bd6e9dec6e065cf3f614bb14e32c369355"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f19087dd7cdbac5f11ffc606b08c489ea730949a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f19087dd7cdbac5f11ffc606b08c489ea730949a", "html_url": "https://github.com/rust-lang/rust/commit/f19087dd7cdbac5f11ffc606b08c489ea730949a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f19087dd7cdbac5f11ffc606b08c489ea730949a/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "689c210b472d4469bec3fb62da7704989d8305fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/689c210b472d4469bec3fb62da7704989d8305fd", "html_url": "https://github.com/rust-lang/rust/commit/689c210b472d4469bec3fb62da7704989d8305fd"}], "stats": {"total": 26, "additions": 12, "deletions": 14}, "files": [{"sha": "94a16e02e20b65e18b2df6edf04fc309f5a7e1c1", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/f19087dd7cdbac5f11ffc606b08c489ea730949a/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f19087dd7cdbac5f11ffc606b08c489ea730949a/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=f19087dd7cdbac5f11ffc606b08c489ea730949a", "patch": "@@ -1912,23 +1912,21 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for InvalidValue {\n \n             if let hir::ExprKind::Call(ref path_expr, ref args) = expr.node {\n                 if let hir::ExprKind::Path(ref qpath) = path_expr.node {\n-                    if let Some(def_id) = cx.tables.qpath_res(qpath, path_expr.hir_id)\n-                        .opt_def_id()\n-                    {\n-                        if cx.match_def_path(def_id, &ZEROED_PATH) {\n+                    let def_id = cx.tables.qpath_res(qpath, path_expr.hir_id).opt_def_id()?;\n+\n+                    if cx.match_def_path(def_id, &ZEROED_PATH) {\n+                        return Some(InitKind::Zeroed);\n+                    }\n+                    if cx.match_def_path(def_id, &UININIT_PATH) {\n+                        return Some(InitKind::Uninit);\n+                    }\n+                    if cx.match_def_path(def_id, &TRANSMUTE_PATH) {\n+                        if is_zero(&args[0]) {\n                             return Some(InitKind::Zeroed);\n                         }\n-                        if cx.match_def_path(def_id, &UININIT_PATH) {\n-                            return Some(InitKind::Uninit);\n-                        }\n-                        if cx.match_def_path(def_id, &TRANSMUTE_PATH) {\n-                            if is_zero(&args[0]) {\n-                                return Some(InitKind::Zeroed);\n-                            }\n-                        }\n-                        // FIXME: Also detect `MaybeUninit::zeroed().assume_init()` and\n-                        // `MaybeUninit::uninit().assume_init()`.\n                     }\n+                    // FIXME: Also detect `MaybeUninit::zeroed().assume_init()` and\n+                    // `MaybeUninit::uninit().assume_init()`.\n                 }\n             }\n "}]}