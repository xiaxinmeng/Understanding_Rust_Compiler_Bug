{"sha": "2829f519a068addbbac9627a3d62951614677766", "node_id": "C_kwDOAAsO6NoAKDI4MjlmNTE5YTA2OGFkZGJiYWM5NjI3YTNkNjI5NTE2MTQ2Nzc3NjY", "commit": {"author": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-06-28T09:19:11Z"}, "committer": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-06-30T07:59:22Z"}, "message": "lint: port path statement diagnostics\n\nSigned-off-by: David Wood <david.wood@huawei.com>", "tree": {"sha": "268cea6d1a67d7fa4b4d329bbfe4bda4b009e0a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/268cea6d1a67d7fa4b4d329bbfe4bda4b009e0a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2829f519a068addbbac9627a3d62951614677766", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2829f519a068addbbac9627a3d62951614677766", "html_url": "https://github.com/rust-lang/rust/commit/2829f519a068addbbac9627a3d62951614677766", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2829f519a068addbbac9627a3d62951614677766/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1999a4c42181b269e9f61a329333069e707604ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/1999a4c42181b269e9f61a329333069e707604ec", "html_url": "https://github.com/rust-lang/rust/commit/1999a4c42181b269e9f61a329333069e707604ec"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "e14912630dddc63f17ae44a095c1710414922db8", "filename": "compiler/rustc_error_messages/locales/en-US/lint.ftl", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2829f519a068addbbac9627a3d62951614677766/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/2829f519a068addbbac9627a3d62951614677766/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl?ref=2829f519a068addbbac9627a3d62951614677766", "patch": "@@ -273,3 +273,8 @@ lint-unused-generator =\n     .note = generators are lazy and do nothing unless resumed\n \n lint-unused-def = unused {$pre}`{$def}`{$post} that must be used\n+\n+lint-path-statement-drop = path statement drops value\n+    .suggestion = use `drop` to clarify the intent\n+\n+lint-path-statement-no-effect = path statement with no effect"}, {"sha": "a3a879b333b4844bcd3d23ca37cc1fb597ebe4be", "filename": "compiler/rustc_lint/src/unused.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2829f519a068addbbac9627a3d62951614677766/compiler%2Frustc_lint%2Fsrc%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2829f519a068addbbac9627a3d62951614677766/compiler%2Frustc_lint%2Fsrc%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Funused.rs?ref=2829f519a068addbbac9627a3d62951614677766", "patch": "@@ -360,20 +360,20 @@ impl<'tcx> LateLintPass<'tcx> for PathStatements {\n                 cx.struct_span_lint(PATH_STATEMENTS, s.span, |lint| {\n                     let ty = cx.typeck_results().expr_ty(expr);\n                     if ty.needs_drop(cx.tcx, cx.param_env) {\n-                        let mut lint = lint.build(\"path statement drops value\");\n+                        let mut lint = lint.build(fluent::lint::path_statement_drop);\n                         if let Ok(snippet) = cx.sess().source_map().span_to_snippet(expr.span) {\n                             lint.span_suggestion(\n                                 s.span,\n-                                \"use `drop` to clarify the intent\",\n+                                fluent::lint::suggestion,\n                                 format!(\"drop({});\", snippet),\n                                 Applicability::MachineApplicable,\n                             );\n                         } else {\n-                            lint.span_help(s.span, \"use `drop` to clarify the intent\");\n+                            lint.span_help(s.span, fluent::lint::suggestion);\n                         }\n                         lint.emit();\n                     } else {\n-                        lint.build(\"path statement with no effect\").emit();\n+                        lint.build(fluent::lint::path_statement_no_effect).emit();\n                     }\n                 });\n             }"}]}