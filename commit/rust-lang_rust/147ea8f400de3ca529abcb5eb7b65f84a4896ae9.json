{"sha": "147ea8f400de3ca529abcb5eb7b65f84a4896ae9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0N2VhOGY0MDBkZTNjYTUyOWFiY2I1ZWI3YjY1Zjg0YTQ4OTZhZTk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-04-02T22:07:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-04-02T22:07:15Z"}, "message": "Auto merge of #1299 - RalfJung:rustup, r=RalfJung\n\nrustup for import changes", "tree": {"sha": "ae5cbe596f618a1586ada5c8c668d9861b8832cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae5cbe596f618a1586ada5c8c668d9861b8832cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/147ea8f400de3ca529abcb5eb7b65f84a4896ae9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/147ea8f400de3ca529abcb5eb7b65f84a4896ae9", "html_url": "https://github.com/rust-lang/rust/commit/147ea8f400de3ca529abcb5eb7b65f84a4896ae9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/147ea8f400de3ca529abcb5eb7b65f84a4896ae9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4955ce3e530ede641f73982082f539d7d8799be6", "url": "https://api.github.com/repos/rust-lang/rust/commits/4955ce3e530ede641f73982082f539d7d8799be6", "html_url": "https://github.com/rust-lang/rust/commit/4955ce3e530ede641f73982082f539d7d8799be6"}, {"sha": "9f3383d55d99635a38c5406f60d16c478534d9f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f3383d55d99635a38c5406f60d16c478534d9f6", "html_url": "https://github.com/rust-lang/rust/commit/9f3383d55d99635a38c5406f60d16c478534d9f6"}], "stats": {"total": 91, "additions": 39, "deletions": 52}, "files": [{"sha": "e3dc200835fde2aa099b8e4662a8c0845af2f743", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/147ea8f400de3ca529abcb5eb7b65f84a4896ae9/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/147ea8f400de3ca529abcb5eb7b65f84a4896ae9/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=147ea8f400de3ca529abcb5eb7b65f84a4896ae9", "patch": "@@ -1 +1 @@\n-127a11a344eb59b5aea1464e98257c262dcba967\n+537ccdf3ac44c8c7a8d36cbdbe6fb224afabb7ae"}, {"sha": "46e66bc0a81e7535a6536370ec5517309eb35ee7", "filename": "src/eval.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/147ea8f400de3ca529abcb5eb7b65f84a4896ae9/src%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/147ea8f400de3ca529abcb5eb7b65f84a4896ae9/src%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval.rs?ref=147ea8f400de3ca529abcb5eb7b65f84a4896ae9", "patch": "@@ -6,7 +6,7 @@ use std::convert::TryFrom;\n use rand::rngs::StdRng;\n use rand::SeedableRng;\n \n-use rustc_middle::ty::layout::LayoutOf;\n+use rustc_target::abi::LayoutOf;\n use rustc_middle::ty::{self, TyCtxt};\n use rustc_hir::def_id::DefId;\n "}, {"sha": "9f46a0c1ce2d9e3d8a49c5db4639590e23f36985", "filename": "src/helpers.rs", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/147ea8f400de3ca529abcb5eb7b65f84a4896ae9/src%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/147ea8f400de3ca529abcb5eb7b65f84a4896ae9/src%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fhelpers.rs?ref=147ea8f400de3ca529abcb5eb7b65f84a4896ae9", "patch": "@@ -4,12 +4,9 @@ use std::mem;\n use log::trace;\n \n use rustc_middle::mir;\n-use rustc_middle::ty::{\n-    self,\n-    layout::{self, LayoutOf, Size, TyAndLayout},\n-    List, TyCtxt,\n-};\n+use rustc_middle::ty::{self, List, TyCtxt, layout::TyAndLayout};\n use rustc_hir::def_id::{DefId, CRATE_DEF_INDEX};\n+use rustc_target::abi::{LayoutOf, Size, FieldsShape, Variants};\n \n use rand::RngCore;\n \n@@ -298,7 +295,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                     // walking this value, we have to make sure it is not a\n                     // `Variants::Multiple`.\n                     match v.layout.variants {\n-                        layout::Variants::Multiple { .. } => {\n+                        Variants::Multiple { .. } => {\n                             // A multi-variant enum, or generator, or so.\n                             // Treat this like a union: without reading from memory,\n                             // we cannot determine the variant we are in. Reading from\n@@ -308,7 +305,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                             // `UnsafeCell` action.\n                             (self.unsafe_cell_action)(v)\n                         }\n-                        layout::Variants::Single { .. } => {\n+                        Variants::Single { .. } => {\n                             // Proceed further, try to find where exactly that `UnsafeCell`\n                             // is hiding.\n                             self.walk_value(v)\n@@ -324,19 +321,19 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 fields: impl Iterator<Item = InterpResult<'tcx, MPlaceTy<'tcx, Tag>>>,\n             ) -> InterpResult<'tcx> {\n                 match place.layout.fields {\n-                    layout::FieldsShape::Array { .. } => {\n+                    FieldsShape::Array { .. } => {\n                         // For the array layout, we know the iterator will yield sorted elements so\n                         // we can avoid the allocation.\n                         self.walk_aggregate(place, fields)\n                     }\n-                    layout::FieldsShape::Arbitrary { .. } => {\n+                    FieldsShape::Arbitrary { .. } => {\n                         // Gather the subplaces and sort them before visiting.\n                         let mut places =\n                             fields.collect::<InterpResult<'tcx, Vec<MPlaceTy<'tcx, Tag>>>>()?;\n                         places.sort_by_key(|place| place.ptr.assert_ptr().offset);\n                         self.walk_aggregate(place, places.into_iter().map(Ok))\n                     }\n-                    layout::FieldsShape::Union { .. } => {\n+                    FieldsShape::Union { .. } => {\n                         // Uh, what?\n                         bug!(\"a union is not an aggregate we should ever visit\")\n                     }"}, {"sha": "ac27138d7630e2cfb30e3809f6af05e093976c0c", "filename": "src/intptrcast.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/147ea8f400de3ca529abcb5eb7b65f84a4896ae9/src%2Fintptrcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/147ea8f400de3ca529abcb5eb7b65f84a4896ae9/src%2Fintptrcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintptrcast.rs?ref=147ea8f400de3ca529abcb5eb7b65f84a4896ae9", "patch": "@@ -6,9 +6,8 @@ use log::trace;\n use rand::Rng;\n \n use rustc_data_structures::fx::FxHashMap;\n-use rustc_middle::ty::layout::HasDataLayout;\n use rustc_mir::interpret::{AllocCheck, AllocId, InterpResult, Memory, Machine, Pointer, PointerArithmetic};\n-use rustc_target::abi::Size;\n+use rustc_target::abi::{Size, HasDataLayout};\n \n use crate::{Evaluator, Tag, STACK_ADDR};\n "}, {"sha": "f794453228b84d1fea3d68e971ca661226ce083c", "filename": "src/machine.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/147ea8f400de3ca529abcb5eb7b65f84a4896ae9/src%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/147ea8f400de3ca529abcb5eb7b65f84a4896ae9/src%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmachine.rs?ref=147ea8f400de3ca529abcb5eb7b65f84a4896ae9", "patch": "@@ -11,12 +11,8 @@ use log::trace;\n use rand::rngs::StdRng;\n \n use rustc_data_structures::fx::FxHashMap;\n-use rustc_middle::mir;\n-use rustc_middle::ty::{\n-    self,\n-    layout::{LayoutOf, Size},\n-    Ty,\n-};\n+use rustc_middle::{mir, ty};\n+use rustc_target::abi::{LayoutOf, Size};\n use rustc_ast::attr;\n use rustc_span::symbol::{sym, Symbol};\n \n@@ -303,7 +299,7 @@ impl<'mir, 'tcx> Machine<'mir, 'tcx> for Evaluator<'tcx> {\n         bin_op: mir::BinOp,\n         left: ImmTy<'tcx, Tag>,\n         right: ImmTy<'tcx, Tag>,\n-    ) -> InterpResult<'tcx, (Scalar<Tag>, bool, Ty<'tcx>)> {\n+    ) -> InterpResult<'tcx, (Scalar<Tag>, bool, ty::Ty<'tcx>)> {\n         ecx.binary_ptr_op(bin_op, left, right)\n     }\n "}, {"sha": "a28a0098e92e97568c5cd115882afd9edc0da2c3", "filename": "src/operator.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/147ea8f400de3ca529abcb5eb7b65f84a4896ae9/src%2Foperator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/147ea8f400de3ca529abcb5eb7b65f84a4896ae9/src%2Foperator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Foperator.rs?ref=147ea8f400de3ca529abcb5eb7b65f84a4896ae9", "patch": "@@ -2,11 +2,8 @@ use std::convert::TryFrom;\n \n use log::trace;\n \n-use rustc_middle::mir;\n-use rustc_middle::ty::{\n-    layout::{LayoutOf, Size},\n-    Ty,\n-};\n+use rustc_middle::{mir, ty::Ty};\n+use rustc_target::abi::{LayoutOf, Size};\n \n use crate::*;\n "}, {"sha": "16ad5fd7c2b2602e1ed3b00bd74c36584ab989c8", "filename": "src/range_map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/147ea8f400de3ca529abcb5eb7b65f84a4896ae9/src%2Frange_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/147ea8f400de3ca529abcb5eb7b65f84a4896ae9/src%2Frange_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frange_map.rs?ref=147ea8f400de3ca529abcb5eb7b65f84a4896ae9", "patch": "@@ -7,7 +7,7 @@\n \n use std::ops;\n \n-use rustc_middle::ty::layout::Size;\n+use rustc_target::abi::Size;\n \n #[derive(Clone, Debug)]\n struct Elem<T> {"}, {"sha": "44016827229436a027873f10c5d8a4797ae84375", "filename": "src/shims/env.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/147ea8f400de3ca529abcb5eb7b65f84a4896ae9/src%2Fshims%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/147ea8f400de3ca529abcb5eb7b65f84a4896ae9/src%2Fshims%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fenv.rs?ref=147ea8f400de3ca529abcb5eb7b65f84a4896ae9", "patch": "@@ -2,14 +2,12 @@ use std::ffi::{OsString, OsStr};\n use std::env;\n use std::convert::TryFrom;\n \n-use crate::stacked_borrows::Tag;\n-use crate::rustc_target::abi::LayoutOf;\n-use crate::*;\n-\n+use rustc_target::abi::{Size, LayoutOf};\n use rustc_data_structures::fx::FxHashMap;\n-use rustc_middle::ty::layout::Size;\n use rustc_mir::interpret::Pointer;\n \n+use crate::*;\n+\n /// Check whether an operation that writes to a target buffer was successful.\n /// Accordingly select return value.\n /// Local helper function to be used in Windows shims."}, {"sha": "7e7f17b0dbd4a9531d0a017d66afab378310ee28", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/147ea8f400de3ca529abcb5eb7b65f84a4896ae9/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/147ea8f400de3ca529abcb5eb7b65f84a4896ae9/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=147ea8f400de3ca529abcb5eb7b65f84a4896ae9", "patch": "@@ -4,9 +4,8 @@ mod posix;\n use std::{convert::{TryInto, TryFrom}, iter};\n \n use rustc_hir::def_id::DefId;\n-use rustc_middle::mir;\n-use rustc_middle::ty;\n-use rustc_middle::ty::layout::{Align, Size};\n+use rustc_middle::{mir, ty};\n+use rustc_target::abi::{Align, Size};\n use rustc_apfloat::Float;\n use rustc_span::symbol::sym;\n use rustc_ast::attr;"}, {"sha": "c9fd59c693271d94be8a5832738017e5de4fd960", "filename": "src/shims/foreign_items/posix.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/147ea8f400de3ca529abcb5eb7b65f84a4896ae9/src%2Fshims%2Fforeign_items%2Fposix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/147ea8f400de3ca529abcb5eb7b65f84a4896ae9/src%2Fshims%2Fforeign_items%2Fposix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items%2Fposix.rs?ref=147ea8f400de3ca529abcb5eb7b65f84a4896ae9", "patch": "@@ -7,7 +7,7 @@ use log::trace;\n \n use crate::*;\n use rustc_middle::mir;\n-use rustc_middle::ty::layout::{Align, LayoutOf, Size};\n+use rustc_target::abi::{Align, LayoutOf, Size};\n \n impl<'mir, 'tcx> EvalContextExt<'mir, 'tcx> for crate::MiriEvalContext<'mir, 'tcx> {}\n pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx> {"}, {"sha": "276dd8fda9ff2914f335b62d50c5bdc79f3014dc", "filename": "src/shims/foreign_items/windows.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/147ea8f400de3ca529abcb5eb7b65f84a4896ae9/src%2Fshims%2Fforeign_items%2Fwindows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/147ea8f400de3ca529abcb5eb7b65f84a4896ae9/src%2Fshims%2Fforeign_items%2Fwindows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items%2Fwindows.rs?ref=147ea8f400de3ca529abcb5eb7b65f84a4896ae9", "patch": "@@ -1,8 +1,10 @@\n-use crate::*;\n-use rustc_middle::mir;\n-use rustc_middle::ty::layout::Size;\n use std::iter;\n \n+use rustc_middle::mir;\n+use rustc_target::abi::Size;\n+\n+use crate::*;\n+\n impl<'mir, 'tcx> EvalContextExt<'mir, 'tcx> for crate::MiriEvalContext<'mir, 'tcx> {}\n pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx> {\n     fn emulate_foreign_item_by_name("}, {"sha": "52244dcfc847e31494d1e4dbded68fe4ba91bb16", "filename": "src/shims/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/147ea8f400de3ca529abcb5eb7b65f84a4896ae9/src%2Fshims%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/147ea8f400de3ca529abcb5eb7b65f84a4896ae9/src%2Fshims%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Ffs.rs?ref=147ea8f400de3ca529abcb5eb7b65f84a4896ae9", "patch": "@@ -6,7 +6,7 @@ use std::path::Path;\n use std::time::SystemTime;\n \n use rustc_data_structures::fx::FxHashMap;\n-use rustc_middle::ty::layout::{Align, LayoutOf, Size};\n+use rustc_target::abi::{Align, LayoutOf, Size};\n \n use crate::stacked_borrows::Tag;\n use crate::*;"}, {"sha": "844eac398de818f1853b35bcdf73c5cb19f9f235", "filename": "src/shims/intrinsics.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/147ea8f400de3ca529abcb5eb7b65f84a4896ae9/src%2Fshims%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/147ea8f400de3ca529abcb5eb7b65f84a4896ae9/src%2Fshims%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fintrinsics.rs?ref=147ea8f400de3ca529abcb5eb7b65f84a4896ae9", "patch": "@@ -1,10 +1,9 @@\n use std::iter;\n use std::convert::TryFrom;\n \n-use rustc_middle::mir;\n-use rustc_middle::ty;\n-use rustc_middle::ty::layout::{Align, LayoutOf};\n+use rustc_middle::{mir, ty};\n use rustc_apfloat::Float;\n+use rustc_target::abi::{Align, LayoutOf};\n \n use crate::*;\n "}, {"sha": "c24d6df41e392497f90abb3c622a85766b4cd283", "filename": "src/shims/os_str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/147ea8f400de3ca529abcb5eb7b65f84a4896ae9/src%2Fshims%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/147ea8f400de3ca529abcb5eb7b65f84a4896ae9/src%2Fshims%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fos_str.rs?ref=147ea8f400de3ca529abcb5eb7b65f84a4896ae9", "patch": "@@ -9,7 +9,7 @@ use std::os::unix::ffi::{OsStrExt, OsStringExt};\n #[cfg(windows)]\n use std::os::windows::ffi::{OsStrExt, OsStringExt};\n \n-use rustc_middle::ty::layout::LayoutOf;\n+use rustc_target::abi::LayoutOf;\n \n use crate::*;\n "}, {"sha": "33e47147a33ba71521ec3710297183950c4b0568", "filename": "src/shims/panic.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/147ea8f400de3ca529abcb5eb7b65f84a4896ae9/src%2Fshims%2Fpanic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/147ea8f400de3ca529abcb5eb7b65f84a4896ae9/src%2Fshims%2Fpanic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fpanic.rs?ref=147ea8f400de3ca529abcb5eb7b65f84a4896ae9", "patch": "@@ -13,9 +13,8 @@\n \n use log::trace;\n \n-use rustc_middle::mir;\n-use rustc_middle::ty::{self, layout::LayoutOf};\n-use rustc_target::spec::PanicStrategy;\n+use rustc_middle::{mir, ty};\n+use rustc_target::{spec::PanicStrategy, abi::LayoutOf};\n \n use crate::*;\n "}, {"sha": "a7fca5e0dde2a6abaf6ec580bb7a09cf5aa6d7ab", "filename": "src/shims/time.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/147ea8f400de3ca529abcb5eb7b65f84a4896ae9/src%2Fshims%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/147ea8f400de3ca529abcb5eb7b65f84a4896ae9/src%2Fshims%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Ftime.rs?ref=147ea8f400de3ca529abcb5eb7b65f84a4896ae9", "patch": "@@ -1,12 +1,12 @@\n use std::time::{Duration, SystemTime, Instant};\n use std::convert::TryFrom;\n \n+use rustc_target::abi::LayoutOf;\n+\n use crate::stacked_borrows::Tag;\n use crate::*;\n use helpers::{immty_from_int_checked, immty_from_uint_checked};\n \n-use rustc_middle::ty::layout::LayoutOf;\n-\n /// Returns the time elapsed between the provided time and the unix epoch as a `Duration`.\n pub fn system_time_to_duration<'tcx>(time: &SystemTime) -> InterpResult<'tcx, Duration> {\n     time.duration_since(SystemTime::UNIX_EPOCH)"}, {"sha": "36ad4bd9b6916ba1e69c0256dda35241d4d04bbc", "filename": "src/shims/tls.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/147ea8f400de3ca529abcb5eb7b65f84a4896ae9/src%2Fshims%2Ftls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/147ea8f400de3ca529abcb5eb7b65f84a4896ae9/src%2Fshims%2Ftls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Ftls.rs?ref=147ea8f400de3ca529abcb5eb7b65f84a4896ae9", "patch": "@@ -4,8 +4,8 @@ use std::collections::BTreeMap;\n \n use log::trace;\n \n-use rustc_middle::{ty, ty::layout::{Size, HasDataLayout}};\n-use rustc_target::abi::LayoutOf;\n+use rustc_middle::ty;\n+use rustc_target::abi::{LayoutOf, Size, HasDataLayout};\n \n use crate::{HelpersEvalContextExt, InterpResult, MPlaceTy, Scalar, StackPopCleanup, Tag};\n "}, {"sha": "89b2a8bb3e2b2734d3bc104f225a499160a4029e", "filename": "src/stacked_borrows.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/147ea8f400de3ca529abcb5eb7b65f84a4896ae9/src%2Fstacked_borrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/147ea8f400de3ca529abcb5eb7b65f84a4896ae9/src%2Fstacked_borrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstacked_borrows.rs?ref=147ea8f400de3ca529abcb5eb7b65f84a4896ae9", "patch": "@@ -10,7 +10,8 @@ use log::trace;\n \n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_middle::mir::RetagKind;\n-use rustc_middle::ty::{self, layout::Size};\n+use rustc_middle::ty;\n+use rustc_target::abi::Size;\n use rustc_hir::Mutability;\n \n use crate::*;"}]}