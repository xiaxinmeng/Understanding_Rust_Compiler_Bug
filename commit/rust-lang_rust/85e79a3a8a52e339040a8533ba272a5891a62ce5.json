{"sha": "85e79a3a8a52e339040a8533ba272a5891a62ce5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1ZTc5YTNhOGE1MmUzMzkwNDBhODUzM2JhMjcyYTU4OTFhNjJjZTU=", "commit": {"author": {"name": "Zack Corr", "email": "zackcorr95@gmail.com", "date": "2012-07-13T17:36:35Z"}, "committer": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-07-17T17:35:59Z"}, "message": "Get rustdoc working with std::par instead of its own par library. Closes #2885.", "tree": {"sha": "4063e101dfa91910a5b8abd86655ccc650ecfdcd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4063e101dfa91910a5b8abd86655ccc650ecfdcd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85e79a3a8a52e339040a8533ba272a5891a62ce5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85e79a3a8a52e339040a8533ba272a5891a62ce5", "html_url": "https://github.com/rust-lang/rust/commit/85e79a3a8a52e339040a8533ba272a5891a62ce5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85e79a3a8a52e339040a8533ba272a5891a62ce5/comments", "author": {"login": "z0w0", "id": 676417, "node_id": "MDQ6VXNlcjY3NjQxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/676417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/z0w0", "html_url": "https://github.com/z0w0", "followers_url": "https://api.github.com/users/z0w0/followers", "following_url": "https://api.github.com/users/z0w0/following{/other_user}", "gists_url": "https://api.github.com/users/z0w0/gists{/gist_id}", "starred_url": "https://api.github.com/users/z0w0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/z0w0/subscriptions", "organizations_url": "https://api.github.com/users/z0w0/orgs", "repos_url": "https://api.github.com/users/z0w0/repos", "events_url": "https://api.github.com/users/z0w0/events{/privacy}", "received_events_url": "https://api.github.com/users/z0w0/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8739cb0bc7f735ab670f4ac6cc143f2ad9ef55c", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8739cb0bc7f735ab670f4ac6cc143f2ad9ef55c", "html_url": "https://github.com/rust-lang/rust/commit/c8739cb0bc7f735ab670f4ac6cc143f2ad9ef55c"}], "stats": {"total": 89, "additions": 29, "deletions": 60}, "files": [{"sha": "4a6944ae42d5f4c0424e5e7f61cf8e24b93f8d0a", "filename": "src/rustdoc/attr_pass.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/85e79a3a8a52e339040a8533ba272a5891a62ce5/src%2Frustdoc%2Fattr_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85e79a3a8a52e339040a8533ba272a5891a62ce5/src%2Frustdoc%2Fattr_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fattr_pass.rs?ref=85e79a3a8a52e339040a8533ba272a5891a62ce5", "patch": "@@ -143,7 +143,7 @@ fn fold_enum(\n     let doc = fold::default_seq_fold_enum(fold, doc);\n \n     {\n-        variants: do par::anymap(doc.variants) |variant| {\n+        variants: do par::map(doc.variants) |variant| {\n             let desc = do astsrv::exec(srv) |ctxt| {\n                 alt check ctxt.ast_map.get(doc_id) {\n                   ast_map::node_item(@{\n@@ -206,7 +206,7 @@ fn merge_method_attrs(\n           ast_map::node_item(@{\n             node: ast::item_trait(_, methods), _\n           }, _) {\n-            par::seqmap(methods, |method| {\n+            vec::map(methods, |method| {\n                 alt method {\n                   ast::required(ty_m) {\n                     (*ty_m.ident, attr_parser::parse_desc(ty_m.attrs))\n@@ -220,7 +220,7 @@ fn merge_method_attrs(\n           ast_map::node_item(@{\n             node: ast::item_impl(_, _, _, methods), _\n           }, _) {\n-            par::seqmap(methods, |method| {\n+            vec::map(methods, |method| {\n                 (*method.ident, attr_parser::parse_desc(method.attrs))\n             })\n           }"}, {"sha": "15401bbf160f34d2d7a24748a20b62d0532df9e5", "filename": "src/rustdoc/desc_to_brief_pass.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/85e79a3a8a52e339040a8533ba272a5891a62ce5/src%2Frustdoc%2Fdesc_to_brief_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85e79a3a8a52e339040a8533ba272a5891a62ce5/src%2Frustdoc%2Fdesc_to_brief_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fdesc_to_brief_pass.rs?ref=85e79a3a8a52e339040a8533ba272a5891a62ce5", "patch": "@@ -40,7 +40,7 @@ fn fold_trait(fold: fold::fold<()>, doc: doc::traitdoc) -> doc::traitdoc {\n     let doc =fold::default_seq_fold_trait(fold, doc);\n \n     {\n-        methods: par::anymap(doc.methods, |doc| {\n+        methods: par::map(doc.methods, |doc| {\n             brief: extract(doc.desc)\n             with doc\n         })\n@@ -52,7 +52,7 @@ fn fold_impl(fold: fold::fold<()>, doc: doc::impldoc) -> doc::impldoc {\n     let doc =fold::default_seq_fold_impl(fold, doc);\n \n     {\n-        methods: par::anymap(doc.methods, |doc| {\n+        methods: par::map(doc.methods, |doc| {\n             brief: extract(doc.desc)\n             with doc\n         })"}, {"sha": "5a14bb2ecdcb0295f59f34f59f0fb80e18ed7ee8", "filename": "src/rustdoc/extract.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/85e79a3a8a52e339040a8533ba272a5891a62ce5/src%2Frustdoc%2Fextract.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85e79a3a8a52e339040a8533ba272a5891a62ce5/src%2Frustdoc%2Fextract.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fextract.rs?ref=85e79a3a8a52e339040a8533ba272a5891a62ce5", "patch": "@@ -113,7 +113,7 @@ fn nmoddoc_from_mod(\n ) -> doc::nmoddoc {\n     {\n         item: itemdoc,\n-        fns: do par::seqmap(module.items) |item| {\n+        fns: do vec::map(module.items) |item| {\n             let itemdoc = mk_itemdoc(item.id, item.ident);\n             alt item.node {\n               ast::foreign_item_fn(_, _) {\n@@ -159,7 +159,7 @@ fn enumdoc_from_enum(\n fn variantdocs_from_variants(\n     variants: ~[ast::variant]\n ) -> ~[doc::variantdoc] {\n-    par::seqmap(variants, variantdoc_from_variant)\n+    vec::map(variants, variantdoc_from_variant)\n }\n \n fn variantdoc_from_variant(variant: ast::variant) -> doc::variantdoc {\n@@ -189,7 +189,7 @@ fn traitdoc_from_trait(\n ) -> doc::traitdoc {\n     {\n         item: itemdoc,\n-        methods: do par::seqmap(methods) |method| {\n+        methods: do vec::map(methods) |method| {\n             alt method {\n               ast::required(ty_m) {\n                 {\n@@ -236,7 +236,7 @@ fn impldoc_from_impl(\n         item: itemdoc,\n         trait_ty: none,\n         self_ty: none,\n-        methods: do par::seqmap(methods) |method| {\n+        methods: do vec::map(methods) |method| {\n             {\n                 name: *method.ident,\n                 brief: none,"}, {"sha": "d3f7df1b7e25ecf38d5a138dc1779717caec9733", "filename": "src/rustdoc/fold.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/85e79a3a8a52e339040a8533ba272a5891a62ce5/src%2Frustdoc%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85e79a3a8a52e339040a8533ba272a5891a62ce5/src%2Frustdoc%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Ffold.rs?ref=85e79a3a8a52e339040a8533ba272a5891a62ce5", "patch": "@@ -133,7 +133,7 @@ fn default_par_fold<T:send copy>(ctxt: T) -> fold<T> {\n \n fn default_seq_fold_doc<T>(fold: fold<T>, doc: doc::doc) -> doc::doc {\n     {\n-        pages: do par::seqmap(doc.pages) |page| {\n+        pages: do vec::map(doc.pages) |page| {\n             alt page {\n               doc::cratepage(doc) {\n                 doc::cratepage(fold.fold_crate(fold, doc))\n@@ -169,7 +169,7 @@ fn default_any_fold_mod<T:send copy>(\n ) -> doc::moddoc {\n     {\n         item: fold.fold_item(fold, doc.item),\n-        items: par::anymap(doc.items, |itemtag, copy fold| {\n+        items: par::map(doc.items, |itemtag, copy fold| {\n             fold_itemtag(fold, itemtag)\n         })\n         with doc\n@@ -182,7 +182,7 @@ fn default_seq_fold_mod<T>(\n ) -> doc::moddoc {\n     {\n         item: fold.fold_item(fold, doc.item),\n-        items: par::seqmap(doc.items, |itemtag| {\n+        items: vec::map(doc.items, |itemtag| {\n             fold_itemtag(fold, itemtag)\n         })\n         with doc\n@@ -195,7 +195,7 @@ fn default_par_fold_mod<T:send copy>(\n ) -> doc::moddoc {\n     {\n         item: fold.fold_item(fold, doc.item),\n-        items: par::parmap(doc.items, |itemtag, copy fold| {\n+        items: par::map(doc.items, |itemtag, copy fold| {\n             fold_itemtag(fold, itemtag)\n         })\n         with doc\n@@ -208,7 +208,7 @@ fn default_any_fold_nmod<T:send copy>(\n ) -> doc::nmoddoc {\n     {\n         item: fold.fold_item(fold, doc.item),\n-        fns: par::anymap(doc.fns, |fndoc, copy fold| {\n+        fns: par::map(doc.fns, |fndoc, copy fold| {\n             fold.fold_fn(fold, fndoc)\n         })\n         with doc\n@@ -221,7 +221,7 @@ fn default_seq_fold_nmod<T>(\n ) -> doc::nmoddoc {\n     {\n         item: fold.fold_item(fold, doc.item),\n-        fns: par::seqmap(doc.fns, |fndoc| {\n+        fns: vec::map(doc.fns, |fndoc| {\n             fold.fold_fn(fold, fndoc)\n         })\n         with doc\n@@ -234,7 +234,7 @@ fn default_par_fold_nmod<T:send copy>(\n ) -> doc::nmoddoc {\n     {\n         item: fold.fold_item(fold, doc.item),\n-        fns: par::parmap(doc.fns, |fndoc, copy fold| {\n+        fns: par::map(doc.fns, |fndoc, copy fold| {\n             fold.fold_fn(fold, fndoc)\n         })\n         with doc"}, {"sha": "296982cb8932d46604d392087d13a72ef290ab44", "filename": "src/rustdoc/markdown_index_pass.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/85e79a3a8a52e339040a8533ba272a5891a62ce5/src%2Frustdoc%2Fmarkdown_index_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85e79a3a8a52e339040a8533ba272a5891a62ce5/src%2Frustdoc%2Fmarkdown_index_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fmarkdown_index_pass.rs?ref=85e79a3a8a52e339040a8533ba272a5891a62ce5", "patch": "@@ -55,7 +55,7 @@ fn build_mod_index(\n     config: config::config\n ) -> doc::index {\n     {\n-        entries: par::anymap(doc.items, |doc| {\n+        entries: par::map(doc.items, |doc| {\n             item_to_entry(doc, config)\n         })\n     }\n@@ -66,7 +66,7 @@ fn build_nmod_index(\n     config: config::config\n ) -> doc::index {\n     {\n-        entries: par::anymap(doc.fns, |doc| {\n+        entries: par::map(doc.fns, |doc| {\n             item_to_entry(doc::fntag(doc), config)\n         })\n     }"}, {"sha": "fc03c1807d8cbef08064b2049a3cfce179f545a8", "filename": "src/rustdoc/markdown_pass.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/85e79a3a8a52e339040a8533ba272a5891a62ce5/src%2Frustdoc%2Fmarkdown_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85e79a3a8a52e339040a8533ba272a5891a62ce5/src%2Frustdoc%2Fmarkdown_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fmarkdown_pass.rs?ref=85e79a3a8a52e339040a8533ba272a5891a62ce5", "patch": "@@ -82,7 +82,7 @@ fn write_markdown(\n     doc: doc::doc,\n     +writer_factory: writer_factory\n ) {\n-    do par::anymap(doc.pages) |page| {\n+    do par::map(doc.pages) |page| {\n         let ctxt = {\n             w: writer_factory(page)\n         };\n@@ -488,7 +488,7 @@ fn write_sig(ctxt: ctxt, sig: option<~str>) {\n \n fn code_block_indent(s: ~str) -> ~str {\n     let lines = str::lines_any(s);\n-    let indented = par::seqmap(lines, |line| #fmt(\"    %s\", line) );\n+    let indented = vec::map(lines, |line| #fmt(\"    %s\", line) );\n     str::connect(indented, ~\"\\n\")\n }\n "}, {"sha": "d64a89714cebc47a6806a58718d3c1495a416ab9", "filename": "src/rustdoc/par.rs", "status": "removed", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/c8739cb0bc7f735ab670f4ac6cc143f2ad9ef55c/src%2Frustdoc%2Fpar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8739cb0bc7f735ab670f4ac6cc143f2ad9ef55c/src%2Frustdoc%2Fpar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fpar.rs?ref=c8739cb0bc7f735ab670f4ac6cc143f2ad9ef55c", "patch": "@@ -1,31 +0,0 @@\n-export anymap, seqmap, parmap;\n-\n-fn anymap<T:send, U:send>(v: ~[T], f: fn~(T) -> U) -> ~[U] {\n-    parmap(v, f)\n-}\n-\n-fn seqmap<T, U>(v: ~[T], f: fn(T) -> U) -> ~[U] {\n-    vec::map(v, f)\n-}\n-\n-fn parmap<T:send, U:send>(v: ~[T], f: fn~(T) -> U) -> ~[U] unsafe {\n-    let futures = do vec::map(v) |elt| {\n-        let po = comm::port();\n-        let ch = comm::chan(po);\n-        let addr = ptr::addr_of(elt);\n-        do task::spawn |copy f| {\n-            comm::send(ch, f(*addr));\n-        }\n-        po\n-    };\n-    do vec::map(futures) |future| {\n-        comm::recv(future)\n-    }\n-}\n-\n-#[test]\n-fn test_parallel_map() {\n-    let i = ~[1, 2, 3, 4];\n-    let j = parmap(i, |e| e + 1 );\n-    assert j == ~[2, 3, 4, 5];\n-}"}, {"sha": "8a16e90cd673d0d2ef0b1532c8f59a63b0dd6068", "filename": "src/rustdoc/rustdoc.rc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/85e79a3a8a52e339040a8533ba272a5891a62ce5/src%2Frustdoc%2Frustdoc.rc", "raw_url": "https://github.com/rust-lang/rust/raw/85e79a3a8a52e339040a8533ba272a5891a62ce5/src%2Frustdoc%2Frustdoc.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Frustdoc.rc?ref=85e79a3a8a52e339040a8533ba272a5891a62ce5", "patch": "@@ -19,6 +19,7 @@ use rustc(vers = \"0.3\");\n use syntax(vers = \"0.3\");\n \n import core::*;\n+import std::par;\n \n mod config;\n mod parse;\n@@ -44,7 +45,6 @@ mod sort_pass;\n mod sort_item_name_pass;\n mod sort_item_type_pass;\n mod reexport_pass;\n-mod par;\n mod page_pass;\n mod sectionalize_pass;\n mod escape_pass;"}, {"sha": "b7adfc17c4def2a52ba6040791e421586112ea08", "filename": "src/rustdoc/sectionalize_pass.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/85e79a3a8a52e339040a8533ba272a5891a62ce5/src%2Frustdoc%2Fsectionalize_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85e79a3a8a52e339040a8533ba272a5891a62ce5/src%2Frustdoc%2Fsectionalize_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fsectionalize_pass.rs?ref=85e79a3a8a52e339040a8533ba272a5891a62ce5", "patch": "@@ -34,7 +34,7 @@ fn fold_trait(fold: fold::fold<()>, doc: doc::traitdoc) -> doc::traitdoc {\n     let doc = fold::default_seq_fold_trait(fold, doc);\n \n     {\n-        methods: do par::anymap(doc.methods) |method| {\n+        methods: do par::map(doc.methods) |method| {\n             let (desc, sections) = sectionalize(method.desc);\n \n             {\n@@ -51,7 +51,7 @@ fn fold_impl(fold: fold::fold<()>, doc: doc::impldoc) -> doc::impldoc {\n     let doc = fold::default_seq_fold_impl(fold, doc);\n \n     {\n-        methods: do par::anymap(doc.methods) |method| {\n+        methods: do par::map(doc.methods) |method| {\n             let (desc, sections) = sectionalize(method.desc);\n \n             {"}, {"sha": "a27d1a09da6524f65bc725e4fa5ea350064fe842", "filename": "src/rustdoc/text_pass.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/85e79a3a8a52e339040a8533ba272a5891a62ce5/src%2Frustdoc%2Ftext_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85e79a3a8a52e339040a8533ba272a5891a62ce5/src%2Frustdoc%2Ftext_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Ftext_pass.rs?ref=85e79a3a8a52e339040a8533ba272a5891a62ce5", "patch": "@@ -45,7 +45,7 @@ fn fold_item(fold: fold::fold<op>, doc: doc::itemdoc) -> doc::itemdoc {\n }\n \n fn apply_to_sections(op: op, sections: ~[doc::section]) -> ~[doc::section] {\n-    par::anymap(sections, |section, copy op| {\n+    par::map(sections, |section, copy op| {\n         header: op(section.header),\n         body: op(section.body)\n     })\n@@ -55,7 +55,7 @@ fn fold_enum(fold: fold::fold<op>, doc: doc::enumdoc) -> doc::enumdoc {\n     let doc = fold::default_seq_fold_enum(fold, doc);\n \n     {\n-        variants: do par::anymap(doc.variants) |variant, copy fold| {\n+        variants: do par::map(doc.variants) |variant, copy fold| {\n             {\n                 desc: maybe_apply_op(fold.ctxt, variant.desc)\n                 with variant\n@@ -75,7 +75,7 @@ fn fold_trait(fold: fold::fold<op>, doc: doc::traitdoc) -> doc::traitdoc {\n }\n \n fn apply_to_methods(op: op, docs: ~[doc::methoddoc]) -> ~[doc::methoddoc] {\n-    do par::anymap(docs) |doc, copy op| {\n+    do par::map(docs) |doc, copy op| {\n         {\n             brief: maybe_apply_op(op, doc.brief),\n             desc: maybe_apply_op(op, doc.desc),"}, {"sha": "d3c7adb51a49657c5c4fbe26b2959b07fe3e9b81", "filename": "src/rustdoc/tystr_pass.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/85e79a3a8a52e339040a8533ba272a5891a62ce5/src%2Frustdoc%2Ftystr_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85e79a3a8a52e339040a8533ba272a5891a62ce5/src%2Frustdoc%2Ftystr_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Ftystr_pass.rs?ref=85e79a3a8a52e339040a8533ba272a5891a62ce5", "patch": "@@ -106,7 +106,7 @@ fn fold_enum(\n     let srv = fold.ctxt;\n \n     {\n-        variants: do par::anymap(doc.variants) |variant| {\n+        variants: do par::map(doc.variants) |variant| {\n             let sig = do astsrv::exec(srv) |ctxt| {\n                 alt check ctxt.ast_map.get(doc_id) {\n                   ast_map::node_item(@{\n@@ -152,7 +152,7 @@ fn merge_methods(\n     item_id: doc::ast_id,\n     docs: ~[doc::methoddoc]\n ) -> ~[doc::methoddoc] {\n-    do par::anymap(docs) |doc| {\n+    do par::map(docs) |doc| {\n         {\n             sig: get_method_sig(srv, item_id, doc.name)\n             with doc"}, {"sha": "9c62c936d1b63efdcb4d4fd8d67aa0042b71e60e", "filename": "src/rustdoc/unindent_pass.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/85e79a3a8a52e339040a8533ba272a5891a62ce5/src%2Frustdoc%2Funindent_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85e79a3a8a52e339040a8533ba272a5891a62ce5/src%2Frustdoc%2Funindent_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Funindent_pass.rs?ref=85e79a3a8a52e339040a8533ba272a5891a62ce5", "patch": "@@ -62,7 +62,7 @@ fn unindent(s: ~str) -> ~str {\n \n     if vec::is_not_empty(lines) {\n         let unindented = ~[str::trim(vec::head(lines))]\n-            + do par::anymap(vec::tail(lines)) |line| {\n+            + do par::map(vec::tail(lines)) |line| {\n             if str::is_whitespace(line) {\n                 line\n             } else {"}]}