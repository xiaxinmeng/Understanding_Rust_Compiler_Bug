{"sha": "605e027fda4420669784864940abcbabef5b0efe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwNWUwMjdmZGE0NDIwNjY5Nzg0ODY0OTQwYWJjYmFiZWY1YjBlZmU=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-08-11T14:40:45Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-08-11T14:40:45Z"}, "message": "if_let_some_result: make lint adhere to lint message convention", "tree": {"sha": "feb382dd359923cedc3f366a638411b0f933473d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/feb382dd359923cedc3f366a638411b0f933473d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/605e027fda4420669784864940abcbabef5b0efe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/605e027fda4420669784864940abcbabef5b0efe", "html_url": "https://github.com/rust-lang/rust/commit/605e027fda4420669784864940abcbabef5b0efe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/605e027fda4420669784864940abcbabef5b0efe/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89591a78b83df30830bcc8f6fe57f6fe1fbf918e", "url": "https://api.github.com/repos/rust-lang/rust/commits/89591a78b83df30830bcc8f6fe57f6fe1fbf918e", "html_url": "https://github.com/rust-lang/rust/commit/89591a78b83df30830bcc8f6fe57f6fe1fbf918e"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "28b20cdeac343ecdf30c3cf66be49aa909765b96", "filename": "clippy_lints/src/if_let_some_result.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/605e027fda4420669784864940abcbabef5b0efe/clippy_lints%2Fsrc%2Fif_let_some_result.rs", "raw_url": "https://github.com/rust-lang/rust/raw/605e027fda4420669784864940abcbabef5b0efe/clippy_lints%2Fsrc%2Fif_let_some_result.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fif_let_some_result.rs?ref=605e027fda4420669784864940abcbabef5b0efe", "patch": "@@ -61,8 +61,8 @@ impl<'tcx> LateLintPass<'tcx> for OkIfLet {\n                     cx,\n                     IF_LET_SOME_RESULT,\n                     expr.span.with_hi(op.span.hi()),\n-                    \"Matching on `Some` with `ok()` is redundant\",\n-                    &format!(\"Consider matching on `Ok({})` and removing the call to `ok` instead\", some_expr_string),\n+                    \"matching on `Some` with `ok()` is redundant\",\n+                    &format!(\"consider matching on `Ok({})` and removing the call to `ok` instead\", some_expr_string),\n                     sugg,\n                     applicability,\n                 );"}, {"sha": "6afee0f36b9da21b592e78b947cdc07140b14015", "filename": "tests/ui/if_let_some_result.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/605e027fda4420669784864940abcbabef5b0efe/tests%2Fui%2Fif_let_some_result.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/605e027fda4420669784864940abcbabef5b0efe/tests%2Fui%2Fif_let_some_result.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_let_some_result.stderr?ref=605e027fda4420669784864940abcbabef5b0efe", "patch": "@@ -1,22 +1,22 @@\n-error: Matching on `Some` with `ok()` is redundant\n+error: matching on `Some` with `ok()` is redundant\n   --> $DIR/if_let_some_result.rs:6:5\n    |\n LL |     if let Some(y) = x.parse().ok() {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::if-let-some-result` implied by `-D warnings`\n-help: Consider matching on `Ok(y)` and removing the call to `ok` instead\n+help: consider matching on `Ok(y)` and removing the call to `ok` instead\n    |\n LL |     if let Ok(y) = x.parse() {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: Matching on `Some` with `ok()` is redundant\n+error: matching on `Some` with `ok()` is redundant\n   --> $DIR/if_let_some_result.rs:24:9\n    |\n LL |         if let Some(y) = x   .   parse()   .   ok   ()    {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-help: Consider matching on `Ok(y)` and removing the call to `ok` instead\n+help: consider matching on `Ok(y)` and removing the call to `ok` instead\n    |\n LL |         if let Ok(y) = x   .   parse()       {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}]}