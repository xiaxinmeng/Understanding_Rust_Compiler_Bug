{"sha": "c3947061d6a914e9f1ac6267b2b079ce851d0e62", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzOTQ3MDYxZDZhOTE0ZTlmMWFjNjI2N2IyYjA3OWNlODUxZDBlNjI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-04-12T20:50:19Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-04-12T20:50:19Z"}, "message": "Auto merge of #24349 - Manishearth:rollup, r=Manishearth\n\n- Successful merges: #24072, #24233, #24321, #24339, #24341, #24342, #24347\n- Failed merges:", "tree": {"sha": "1463ac33258304f22bb8deddbe7f5878b87c5943", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1463ac33258304f22bb8deddbe7f5878b87c5943"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3947061d6a914e9f1ac6267b2b079ce851d0e62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3947061d6a914e9f1ac6267b2b079ce851d0e62", "html_url": "https://github.com/rust-lang/rust/commit/c3947061d6a914e9f1ac6267b2b079ce851d0e62", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3947061d6a914e9f1ac6267b2b079ce851d0e62/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37cb1d455e77fbdb132c920e523eb4845f6b4fb9", "url": "https://api.github.com/repos/rust-lang/rust/commits/37cb1d455e77fbdb132c920e523eb4845f6b4fb9", "html_url": "https://github.com/rust-lang/rust/commit/37cb1d455e77fbdb132c920e523eb4845f6b4fb9"}, {"sha": "72dc6fcbe76830a48989c0e54f5701e1f89f803c", "url": "https://api.github.com/repos/rust-lang/rust/commits/72dc6fcbe76830a48989c0e54f5701e1f89f803c", "html_url": "https://github.com/rust-lang/rust/commit/72dc6fcbe76830a48989c0e54f5701e1f89f803c"}], "stats": {"total": 98, "additions": 80, "deletions": 18}, "files": [{"sha": "25f5c7cacc7716bc32f70fec31495a9d090f198e", "filename": "src/doc/trpl/traits.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c3947061d6a914e9f1ac6267b2b079ce851d0e62/src%2Fdoc%2Ftrpl%2Ftraits.md", "raw_url": "https://github.com/rust-lang/rust/raw/c3947061d6a914e9f1ac6267b2b079ce851d0e62/src%2Fdoc%2Ftrpl%2Ftraits.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Ftraits.md?ref=c3947061d6a914e9f1ac6267b2b079ce851d0e62", "patch": "@@ -273,8 +273,8 @@ not, because both the trait and the type aren't in our crate.\n \n One last thing about traits: generic functions with a trait bound use\n *monomorphization* (*mono*: one, *morph*: form), so they are statically\n-dispatched. What's that mean? Check out the chapter on [static and dynamic\n-dispatch](static-and-dynamic-dispatch.html) for more.\n+dispatched. What's that mean? Check out the chapter on [trait\n+objects](trait-objects.html) for more.\n \n ## Multiple trait bounds\n "}, {"sha": "9f378748d20077929dd35fd24004cb8c6062c061", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 6, "deletions": 14, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c3947061d6a914e9f1ac6267b2b079ce851d0e62/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3947061d6a914e9f1ac6267b2b079ce851d0e62/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=c3947061d6a914e9f1ac6267b2b079ce851d0e62", "patch": "@@ -2197,13 +2197,9 @@ impl<I> Iterator for Fuse<I> where I: Iterator {\n         if self.done {\n             None\n         } else {\n-            match self.iter.next() {\n-                None => {\n-                    self.done = true;\n-                    None\n-                }\n-                x => x\n-            }\n+            let next = self.iter.next();\n+            self.done = next.is_none();\n+            next\n         }\n     }\n \n@@ -2224,13 +2220,9 @@ impl<I> DoubleEndedIterator for Fuse<I> where I: DoubleEndedIterator {\n         if self.done {\n             None\n         } else {\n-            match self.iter.next_back() {\n-                None => {\n-                    self.done = true;\n-                    None\n-                }\n-                x => x\n-            }\n+            let next = self.iter.next_back();\n+            self.done = next.is_none();\n+            next\n         }\n     }\n }"}, {"sha": "3fd179cf86f3a5a2510f4b0dc423cbe368d6cfa3", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c3947061d6a914e9f1ac6267b2b079ce851d0e62/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3947061d6a914e9f1ac6267b2b079ce851d0e62/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=c3947061d6a914e9f1ac6267b2b079ce851d0e62", "patch": "@@ -2705,7 +2705,7 @@ macro_rules! from_str_radix_float_impl {\n             ///\n             /// # Return value\n             ///\n-            /// `Err(ParseIntError)` if the string did not represent a valid number.  Otherwise,\n+            /// `Err(ParseFloatError)` if the string did not represent a valid number.\n             /// Otherwise, `Ok(n)` where `n` is the floating-point number represented by `src`.\n             #[inline]\n             #[allow(deprecated)]\n@@ -2734,7 +2734,7 @@ macro_rules! from_str_radix_float_impl {\n             ///\n             /// # Return value\n             ///\n-            /// `Err(ParseIntError)` if the string did not represent a valid number.  Otherwise,\n+            /// `Err(ParseFloatError)` if the string did not represent a valid number.\n             /// Otherwise, `Ok(n)` where `n` is the floating-point number represented by `src`.\n             fn from_str_radix(src: &str, radix: u32)\n                               -> Result<$T, ParseFloatError> {"}, {"sha": "ee638edad6cb57dbb545a4b72189841dc5da4e2d", "filename": "src/test/run-pass/issue-16602-1.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c3947061d6a914e9f1ac6267b2b079ce851d0e62/src%2Ftest%2Frun-pass%2Fissue-16602-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3947061d6a914e9f1ac6267b2b079ce851d0e62/src%2Ftest%2Frun-pass%2Fissue-16602-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-16602-1.rs?ref=c3947061d6a914e9f1ac6267b2b079ce851d0e62", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    let mut t = [1; 2];\n+    t = [t[1] * 2, t[0] * 2];\n+    assert_eq!(&t[..], &[2, 2]);\n+}"}, {"sha": "742eb6c280e39f0282540e77a3ed8e6563e86ad9", "filename": "src/test/run-pass/issue-16602-2.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/c3947061d6a914e9f1ac6267b2b079ce851d0e62/src%2Ftest%2Frun-pass%2Fissue-16602-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3947061d6a914e9f1ac6267b2b079ce851d0e62/src%2Ftest%2Frun-pass%2Fissue-16602-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-16602-2.rs?ref=c3947061d6a914e9f1ac6267b2b079ce851d0e62", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct A {\n+    pub x: u32,\n+    pub y: u32,\n+}\n+\n+fn main() {\n+    let mut a = A { x: 1, y: 1 };\n+    a = A { x: a.y * 2, y: a.x * 2 };\n+    assert_eq!(a.x, 2);\n+    assert_eq!(a.y, 2);\n+}"}, {"sha": "d29932dcf68364b8d35f3dcc1f3b8e7bb89732b1", "filename": "src/test/run-pass/issue-16602-3.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/c3947061d6a914e9f1ac6267b2b079ce851d0e62/src%2Ftest%2Frun-pass%2Fissue-16602-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3947061d6a914e9f1ac6267b2b079ce851d0e62/src%2Ftest%2Frun-pass%2Fissue-16602-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-16602-3.rs?ref=c3947061d6a914e9f1ac6267b2b079ce851d0e62", "patch": "@@ -0,0 +1,34 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[derive(Debug)]\n+enum Foo {\n+    Bar(u32, u32),\n+    Baz(&'static u32, &'static u32)\n+}\n+\n+static NUM: u32 = 100;\n+\n+fn main () {\n+    let mut b = Foo::Baz(&NUM, &NUM);\n+    b = Foo::Bar(f(&b), g(&b));\n+}\n+\n+static FNUM: u32 = 1;\n+\n+fn f (b: &Foo) -> u32 {\n+    FNUM\n+}\n+\n+static GNUM: u32 = 2;\n+\n+fn g (b: &Foo) -> u32 {\n+    GNUM\n+}"}]}