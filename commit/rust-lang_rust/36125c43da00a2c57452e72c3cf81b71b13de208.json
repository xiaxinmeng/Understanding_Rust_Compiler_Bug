{"sha": "36125c43da00a2c57452e72c3cf81b71b13de208", "node_id": "C_kwDOAAsO6NoAKDM2MTI1YzQzZGEwMGEyYzU3NDUyZTcyYzNjZjgxYjcxYjEzZGUyMDg", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2023-05-13T05:35:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-13T05:35:33Z"}, "message": "Rollup merge of #111096 - AngelicosPhosphoros:overflow_checks_issue_91130, r=petrochenkov\n\nAdd support for `cfg(overflow_checks)`\n\nThis PR adds support for detecting if overflow checks are enabled in similar fashion as `debug_assertions` are detected. Possible use-case of this, for example, if we want to use checked integer casts in builds with overflow checks, e.g.\n\n```rust\npub fn cast(val: usize)->u16 {\n    if cfg!(overflow_checks) {\n        val.try_into().unwrap()\n    }\n    else{\n        vas as _\n    }\n}\n```\n\nResolves #91130.", "tree": {"sha": "e5e827d0c93f013603b704607f326606a53f4fd1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5e827d0c93f013603b704607f326606a53f4fd1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36125c43da00a2c57452e72c3cf81b71b13de208", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkXyGlCRBK7hj4Ov3rIwAAcxsIAKPJK4PjuxWgKHiVn35RJJw7\nBDgIXy0IgMiSfjVbALS8BE1utRrGhyOhfu9yKi4TlTLaQnXRYAiqFG70aKg0A6Ib\nT8dIKuR8Kr/NCas0mlm2PkfjoCxiQtIc4tzhMFAJ9VDdfAtEVil/bLdsgxTyCHV9\nCM7UXzZOxcZr2Y2JXrw48hosyme2ZvVr00yPpS/7etm952RcNxEvxr/+Spdi1mya\nZficp0uti5yWHr3brP511HrMg4aLs3LxeB6y5tJRTcOy2qFeUTq/rSFtnEVA5yoK\n39TuSHNgoGCO9US9imBFI9lryAboNdRp/puViW9PNtjkr9Y+KRZtlzMQIsUfYX8=\n=61jU\n-----END PGP SIGNATURE-----\n", "payload": "tree e5e827d0c93f013603b704607f326606a53f4fd1\nparent 6cb13585d050ed9c708b3d03ab2797ab16a78218\nparent 7c263adb2afc310b96422bd33317407bc5385bf9\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1683956133 +0530\ncommitter GitHub <noreply@github.com> 1683956133 +0530\n\nRollup merge of #111096 - AngelicosPhosphoros:overflow_checks_issue_91130, r=petrochenkov\n\nAdd support for `cfg(overflow_checks)`\n\nThis PR adds support for detecting if overflow checks are enabled in similar fashion as `debug_assertions` are detected. Possible use-case of this, for example, if we want to use checked integer casts in builds with overflow checks, e.g.\n\n```rust\npub fn cast(val: usize)->u16 {\n    if cfg!(overflow_checks) {\n        val.try_into().unwrap()\n    }\n    else{\n        vas as _\n    }\n}\n```\n\nResolves #91130.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36125c43da00a2c57452e72c3cf81b71b13de208", "html_url": "https://github.com/rust-lang/rust/commit/36125c43da00a2c57452e72c3cf81b71b13de208", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36125c43da00a2c57452e72c3cf81b71b13de208/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6cb13585d050ed9c708b3d03ab2797ab16a78218", "url": "https://api.github.com/repos/rust-lang/rust/commits/6cb13585d050ed9c708b3d03ab2797ab16a78218", "html_url": "https://github.com/rust-lang/rust/commit/6cb13585d050ed9c708b3d03ab2797ab16a78218"}, {"sha": "7c263adb2afc310b96422bd33317407bc5385bf9", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c263adb2afc310b96422bd33317407bc5385bf9", "html_url": "https://github.com/rust-lang/rust/commit/7c263adb2afc310b96422bd33317407bc5385bf9"}], "stats": {"total": 65, "additions": 65, "deletions": 0}, "files": [{"sha": "fe8c630666bb23117087b67c97a42a8d34aed247", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/36125c43da00a2c57452e72c3cf81b71b13de208/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36125c43da00a2c57452e72c3cf81b71b13de208/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=36125c43da00a2c57452e72c3cf81b71b13de208", "patch": "@@ -321,6 +321,8 @@ declare_features! (\n     (active, c_unwind, \"1.52.0\", Some(74990), None),\n     /// Allows using C-variadics.\n     (active, c_variadic, \"1.34.0\", Some(44930), None),\n+    /// Allows the use of `#[cfg(overflow_checks)` to check if integer overflow behaviour.\n+    (active, cfg_overflow_checks, \"CURRENT_RUSTC_VERSION\", Some(111466), None),\n     /// Allows the use of `#[cfg(sanitize = \"option\")]`; set when -Zsanitizer is used.\n     (active, cfg_sanitize, \"1.41.0\", Some(39699), None),\n     /// Allows `cfg(target_abi = \"...\")`."}, {"sha": "61cfbf5c5e53f5a947b69a846403d94259ce5f1b", "filename": "compiler/rustc_feature/src/builtin_attrs.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/36125c43da00a2c57452e72c3cf81b71b13de208/compiler%2Frustc_feature%2Fsrc%2Fbuiltin_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36125c43da00a2c57452e72c3cf81b71b13de208/compiler%2Frustc_feature%2Fsrc%2Fbuiltin_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Fbuiltin_attrs.rs?ref=36125c43da00a2c57452e72c3cf81b71b13de208", "patch": "@@ -24,6 +24,7 @@ pub type GatedCfg = (Symbol, Symbol, GateFn);\n /// `cfg(...)`'s that are feature gated.\n const GATED_CFGS: &[GatedCfg] = &[\n     // (name in cfg, feature, function to check if the feature is enabled)\n+    (sym::overflow_checks, sym::cfg_overflow_checks, cfg_fn!(cfg_overflow_checks)),\n     (sym::target_abi, sym::cfg_target_abi, cfg_fn!(cfg_target_abi)),\n     (sym::target_thread_local, sym::cfg_target_thread_local, cfg_fn!(cfg_target_thread_local)),\n     ("}, {"sha": "e2b8d3eea2d423c8e4089817cbcd929c35057ce1", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/36125c43da00a2c57452e72c3cf81b71b13de208/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36125c43da00a2c57452e72c3cf81b71b13de208/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=36125c43da00a2c57452e72c3cf81b71b13de208", "patch": "@@ -1060,6 +1060,9 @@ fn default_configuration(sess: &Session) -> CrateConfig {\n     if sess.opts.debug_assertions {\n         ret.insert((sym::debug_assertions, None));\n     }\n+    if sess.overflow_checks() {\n+        ret.insert((sym::overflow_checks, None));\n+    }\n     // JUSTIFICATION: before wrapper fn is available\n     #[allow(rustc::bad_opt_access)]\n     if sess.opts.crate_types.contains(&CrateType::ProcMacro) {\n@@ -1209,6 +1212,7 @@ impl CrateCheckConfig {\n             sym::windows,\n             sym::proc_macro,\n             sym::debug_assertions,\n+            sym::overflow_checks,\n             sym::target_thread_local,\n         ] {\n             self.expecteds.entry(name).or_insert_with(no_values);"}, {"sha": "9951d8f4fc153c47401ea4534d2b54a07fbfd2a3", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/36125c43da00a2c57452e72c3cf81b71b13de208/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36125c43da00a2c57452e72c3cf81b71b13de208/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=36125c43da00a2c57452e72c3cf81b71b13de208", "patch": "@@ -463,6 +463,7 @@ symbols! {\n         cfg_doctest,\n         cfg_eval,\n         cfg_hide,\n+        cfg_overflow_checks,\n         cfg_panic,\n         cfg_sanitize,\n         cfg_target_abi,\n@@ -1065,6 +1066,7 @@ symbols! {\n         or_patterns,\n         other,\n         out,\n+        overflow_checks,\n         overlapping_marker_traits,\n         owned_box,\n         packed,"}, {"sha": "cb265aa7f25b8b82372d7497dfd7f832bd68c1bb", "filename": "tests/ui/feature-gates/feature-gate-cfg_overflow_checks.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/36125c43da00a2c57452e72c3cf81b71b13de208/tests%2Fui%2Ffeature-gates%2Ffeature-gate-cfg_overflow_checks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36125c43da00a2c57452e72c3cf81b71b13de208/tests%2Fui%2Ffeature-gates%2Ffeature-gate-cfg_overflow_checks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffeature-gates%2Ffeature-gate-cfg_overflow_checks.rs?ref=36125c43da00a2c57452e72c3cf81b71b13de208", "patch": "@@ -0,0 +1,6 @@\n+#![crate_type = \"lib\"]\n+\n+#[cfg(overflow_checks)] //~ ERROR `cfg(overflow_checks)` is experimental\n+pub fn cast(v: i64)->u32{\n+    todo!()\n+}"}, {"sha": "79aba7945f6abd66987967f5c69ae8364e1719b9", "filename": "tests/ui/feature-gates/feature-gate-cfg_overflow_checks.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/36125c43da00a2c57452e72c3cf81b71b13de208/tests%2Fui%2Ffeature-gates%2Ffeature-gate-cfg_overflow_checks.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/36125c43da00a2c57452e72c3cf81b71b13de208/tests%2Fui%2Ffeature-gates%2Ffeature-gate-cfg_overflow_checks.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffeature-gates%2Ffeature-gate-cfg_overflow_checks.stderr?ref=36125c43da00a2c57452e72c3cf81b71b13de208", "patch": "@@ -0,0 +1,12 @@\n+error[E0658]: `cfg(overflow_checks)` is experimental and subject to change\n+  --> $DIR/feature-gate-cfg_overflow_checks.rs:3:7\n+   |\n+LL | #[cfg(overflow_checks)]\n+   |       ^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #111466 <https://github.com/rust-lang/rust/issues/111466> for more information\n+   = help: add `#![feature(cfg_overflow_checks)]` to the crate attributes to enable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "318be2a6401bc8be9cca96bc477efc7dc6099153", "filename": "tests/ui/numbers-arithmetic/overflow-attribute-works-1.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/36125c43da00a2c57452e72c3cf81b71b13de208/tests%2Fui%2Fnumbers-arithmetic%2Foverflow-attribute-works-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36125c43da00a2c57452e72c3cf81b71b13de208/tests%2Fui%2Fnumbers-arithmetic%2Foverflow-attribute-works-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnumbers-arithmetic%2Foverflow-attribute-works-1.rs?ref=36125c43da00a2c57452e72c3cf81b71b13de208", "patch": "@@ -0,0 +1,19 @@\n+// run-pass\n+// compile-flags: -C overflow_checks=true\n+\n+#![feature(cfg_overflow_checks)]\n+\n+fn main() {\n+    assert!(cfg!(overflow_checks));\n+    assert!(compiles_differently());\n+}\n+\n+#[cfg(overflow_checks)]\n+fn compiles_differently()->bool {\n+    true\n+}\n+\n+#[cfg(not(overflow_checks))]\n+fn compiles_differently()->bool {\n+    false\n+}"}, {"sha": "0367d980a64c5ea33a8bdba6cd86ad0e11f17f92", "filename": "tests/ui/numbers-arithmetic/overflow-attribute-works-2.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/36125c43da00a2c57452e72c3cf81b71b13de208/tests%2Fui%2Fnumbers-arithmetic%2Foverflow-attribute-works-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36125c43da00a2c57452e72c3cf81b71b13de208/tests%2Fui%2Fnumbers-arithmetic%2Foverflow-attribute-works-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnumbers-arithmetic%2Foverflow-attribute-works-2.rs?ref=36125c43da00a2c57452e72c3cf81b71b13de208", "patch": "@@ -0,0 +1,19 @@\n+// run-pass\n+// compile-flags: -C overflow_checks=false\n+\n+#![feature(cfg_overflow_checks)]\n+\n+fn main() {\n+    assert!(!cfg!(overflow_checks));\n+    assert!(!compiles_differently());\n+}\n+\n+#[cfg(overflow_checks)]\n+fn compiles_differently()->bool {\n+    true\n+}\n+\n+#[cfg(not(overflow_checks))]\n+fn compiles_differently()->bool {\n+    false\n+}"}]}