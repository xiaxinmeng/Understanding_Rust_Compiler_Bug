{"sha": "e793b46e49afc1ac1e15bf92c4e544695b646ca9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3OTNiNDZlNDlhZmMxYWMxZTE1YmY5MmM0ZTU0NDY5NWI2NDZjYTk=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-06-02T19:46:42Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-06-02T21:18:57Z"}, "message": "Update fulldeps tests and clippy", "tree": {"sha": "4aafa036de9201a0f0244ed211d9631907b1f103", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4aafa036de9201a0f0244ed211d9631907b1f103"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e793b46e49afc1ac1e15bf92c4e544695b646ca9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e793b46e49afc1ac1e15bf92c4e544695b646ca9", "html_url": "https://github.com/rust-lang/rust/commit/e793b46e49afc1ac1e15bf92c4e544695b646ca9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e793b46e49afc1ac1e15bf92c4e544695b646ca9/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "283e5b4106771f9d6ee6e081c07d4a174b51441e", "url": "https://api.github.com/repos/rust-lang/rust/commits/283e5b4106771f9d6ee6e081c07d4a174b51441e", "html_url": "https://github.com/rust-lang/rust/commit/283e5b4106771f9d6ee6e081c07d4a174b51441e"}], "stats": {"total": 71, "additions": 31, "deletions": 40}, "files": [{"sha": "820ebdc9baa525a058d445d5644f97aa88c03859", "filename": "src/librustc_serialize/json.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Flibrustc_serialize%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Flibrustc_serialize%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_serialize%2Fjson.rs?ref=e793b46e49afc1ac1e15bf92c4e544695b646ca9", "patch": "@@ -68,7 +68,6 @@\n //!\n //! ```rust\n //! # #![feature(rustc_private)]\n-//! extern crate serialize as rustc_serialize; // for the deriving below\n //! use rustc_serialize::json;\n //!\n //! // Automatically generate `Decodable` and `Encodable` trait implementations\n@@ -103,7 +102,6 @@\n //!\n //! ```rust\n //! # #![feature(rustc_private)]\n-//! extern crate serialize as rustc_serialize;\n //! use rustc_serialize::json::{self, ToJson, Json};\n //!\n //! // A custom data structure\n@@ -143,7 +141,6 @@\n //!\n //! ```rust\n //! # #![feature(rustc_private)]\n-//! extern crate serialize as rustc_serialize;\n //! use std::collections::BTreeMap;\n //! use rustc_serialize::json::{self, Json, ToJson};\n //!"}, {"sha": "59c481edbca3a662bce3a8202347debe042d8b67", "filename": "src/librustc_serialize/tests/json.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Flibrustc_serialize%2Ftests%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Flibrustc_serialize%2Ftests%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_serialize%2Ftests%2Fjson.rs?ref=e793b46e49afc1ac1e15bf92c4e544695b646ca9", "patch": "@@ -1,7 +1,5 @@\n #![allow(rustc::internal)]\n \n-extern crate serialize as rustc_serialize;\n-\n use json::DecoderError::*;\n use json::ErrorCode::*;\n use json::Json::*;"}, {"sha": "b0f7e785b7877154004409ae01c777ad9719aaf2", "filename": "src/librustc_serialize/tests/leb128.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Flibrustc_serialize%2Ftests%2Fleb128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Flibrustc_serialize%2Ftests%2Fleb128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_serialize%2Ftests%2Fleb128.rs?ref=e793b46e49afc1ac1e15bf92c4e544695b646ca9", "patch": "@@ -1,4 +1,3 @@\n-extern crate serialize as rustc_serialize;\n use rustc_serialize::leb128::*;\n \n macro_rules! impl_test_unsigned_leb128 {"}, {"sha": "c827391700709dd62cb9c3f8b6a0fd6641c98c51", "filename": "src/librustc_serialize/tests/opaque.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Flibrustc_serialize%2Ftests%2Fopaque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Flibrustc_serialize%2Ftests%2Fopaque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_serialize%2Ftests%2Fopaque.rs?ref=e793b46e49afc1ac1e15bf92c4e544695b646ca9", "patch": "@@ -1,7 +1,5 @@\n #![allow(rustc::internal)]\n \n-extern crate serialize as rustc_serialize;\n-\n use rustc_serialize::opaque::{Decoder, Encoder};\n use rustc_serialize::{Decodable, Encodable};\n use std::fmt::Debug;"}, {"sha": "af3d75b3bf21619fd3365c291ef234e78a72297a", "filename": "src/test/run-make-fulldeps/pretty-expanded/input.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftest%2Frun-make-fulldeps%2Fpretty-expanded%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftest%2Frun-make-fulldeps%2Fpretty-expanded%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fpretty-expanded%2Finput.rs?ref=e793b46e49afc1ac1e15bf92c4e544695b646ca9", "patch": "@@ -2,7 +2,7 @@\n \n // #13544\n \n-extern crate serialize as rustc_serialize;\n+extern crate rustc_serialize;\n \n #[derive(RustcEncodable)] pub struct A;\n #[derive(RustcEncodable)] pub struct B(isize);"}, {"sha": "789ab686e3f8e53513294207086475f51e852f93", "filename": "src/test/run-make-fulldeps/save-analysis/foo.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftest%2Frun-make-fulldeps%2Fsave-analysis%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftest%2Frun-make-fulldeps%2Fsave-analysis%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fsave-analysis%2Ffoo.rs?ref=e793b46e49afc1ac1e15bf92c4e544695b646ca9", "patch": "@@ -27,7 +27,7 @@ use std::char::from_u32;\n static uni: &'static str = \"Les Mis\u00e9\u00e9\u00e9\u00e9\u00e9\u00e9\u00e9\u00e9rables\";\n static yy: usize = 25;\n \n-static bob: Option<graphviz::RenderOption> = None;\n+static bob: Option<rustc_graphviz::RenderOption> = None;\n \n // buglink test - see issue #1337.\n \n@@ -418,7 +418,7 @@ impl Error + 'static + Send {\n         <Error + 'static>::is::<T>(self)\n     }\n }\n-extern crate serialize as rustc_serialize;\n+extern crate rustc_serialize;\n #[derive(Clone, Copy, Hash, RustcEncodable, RustcDecodable,\n          PartialEq, Eq, PartialOrd, Ord, Debug, Default)]\n struct AllDerives(i32);"}, {"sha": "1299d82d9c4b9c1503207669858fec75fc1a9351", "filename": "src/test/ui-fulldeps/derive-no-std-not-supported.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftest%2Fui-fulldeps%2Fderive-no-std-not-supported.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftest%2Fui-fulldeps%2Fderive-no-std-not-supported.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fderive-no-std-not-supported.rs?ref=e793b46e49afc1ac1e15bf92c4e544695b646ca9", "patch": "@@ -4,7 +4,7 @@\n #![feature(rustc_private)]\n #![no_std]\n \n-extern crate serialize as rustc_serialize;\n+extern crate rustc_serialize;\n \n #[derive(RustcEncodable)]\n struct Bar {"}, {"sha": "2b349ae9556c3bf6aa02eee4ae386fde9598ee17", "filename": "src/test/ui-fulldeps/deriving-encodable-decodable-box.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftest%2Fui-fulldeps%2Fderiving-encodable-decodable-box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftest%2Fui-fulldeps%2Fderiving-encodable-decodable-box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fderiving-encodable-decodable-box.rs?ref=e793b46e49afc1ac1e15bf92c4e544695b646ca9", "patch": "@@ -5,7 +5,7 @@\n #![feature(box_syntax)]\n #![feature(rustc_private)]\n \n-extern crate serialize as rustc_serialize;\n+extern crate rustc_serialize;\n \n use rustc_serialize::{Encodable, Decodable};\n use rustc_serialize::json;"}, {"sha": "c2aecbdc16793342e10ce43114ed86a58bffc9b6", "filename": "src/test/ui-fulldeps/deriving-encodable-decodable-cell-refcell.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftest%2Fui-fulldeps%2Fderiving-encodable-decodable-cell-refcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftest%2Fui-fulldeps%2Fderiving-encodable-decodable-cell-refcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fderiving-encodable-decodable-cell-refcell.rs?ref=e793b46e49afc1ac1e15bf92c4e544695b646ca9", "patch": "@@ -7,7 +7,7 @@\n \n #![feature(rustc_private)]\n \n-extern crate serialize as rustc_serialize;\n+extern crate rustc_serialize;\n \n use std::cell::{Cell, RefCell};\n use rustc_serialize::{Encodable, Decodable};"}, {"sha": "5ba34a7af6bf53337e7578f1ab9cf6ac7539c446", "filename": "src/test/ui-fulldeps/deriving-global.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftest%2Fui-fulldeps%2Fderiving-global.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftest%2Fui-fulldeps%2Fderiving-global.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fderiving-global.rs?ref=e793b46e49afc1ac1e15bf92c4e544695b646ca9", "patch": "@@ -2,7 +2,7 @@\n \n #![feature(rustc_private)]\n \n-extern crate serialize as rustc_serialize;\n+extern crate rustc_serialize;\n \n mod submod {\n     // if any of these are implemented without global calls for any"}, {"sha": "85ef217e7671e490bfc7ec5977b291e62202f2b9", "filename": "src/test/ui-fulldeps/deriving-hygiene.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftest%2Fui-fulldeps%2Fderiving-hygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftest%2Fui-fulldeps%2Fderiving-hygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fderiving-hygiene.rs?ref=e793b46e49afc1ac1e15bf92c4e544695b646ca9", "patch": "@@ -2,7 +2,7 @@\n \n #![allow(non_upper_case_globals)]\n #![feature(rustc_private)]\n-extern crate serialize as rustc_serialize;\n+extern crate rustc_serialize;\n \n pub const other: u8 = 1;\n pub const f: u8 = 1;"}, {"sha": "98c1a22bd1de0aa498447dc8a96778e59e4645fb", "filename": "src/test/ui-fulldeps/dropck-tarena-cycle-checked.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftest%2Fui-fulldeps%2Fdropck-tarena-cycle-checked.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftest%2Fui-fulldeps%2Fdropck-tarena-cycle-checked.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fdropck-tarena-cycle-checked.stderr?ref=e793b46e49afc1ac1e15bf92c4e544695b646ca9", "patch": "@@ -7,7 +7,7 @@ LL | }\n    | -\n    | |\n    | `arena` dropped here while still borrowed\n-   | borrow might be used here, when `arena` is dropped and runs the `Drop` code for type `arena::TypedArena`\n+   | borrow might be used here, when `arena` is dropped and runs the `Drop` code for type `rustc_arena::TypedArena`\n \n error: aborting due to previous error\n "}, {"sha": "22c7487e8f516186928df192179579381e513db8", "filename": "src/test/ui-fulldeps/dropck-tarena-unsound-drop.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftest%2Fui-fulldeps%2Fdropck-tarena-unsound-drop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftest%2Fui-fulldeps%2Fdropck-tarena-unsound-drop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fdropck-tarena-unsound-drop.stderr?ref=e793b46e49afc1ac1e15bf92c4e544695b646ca9", "patch": "@@ -7,7 +7,7 @@ LL | }\n    | -\n    | |\n    | `arena` dropped here while still borrowed\n-   | borrow might be used here, when `arena` is dropped and runs the `Drop` code for type `arena::TypedArena`\n+   | borrow might be used here, when `arena` is dropped and runs the `Drop` code for type `rustc_arena::TypedArena`\n \n error: aborting due to previous error\n "}, {"sha": "fc85765eea4a53af898cbd706d7a08b679cd9d96", "filename": "src/test/ui-fulldeps/empty-struct-braces-derive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftest%2Fui-fulldeps%2Fempty-struct-braces-derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftest%2Fui-fulldeps%2Fempty-struct-braces-derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fempty-struct-braces-derive.rs?ref=e793b46e49afc1ac1e15bf92c4e544695b646ca9", "patch": "@@ -3,7 +3,7 @@\n \n #![feature(rustc_private)]\n \n-extern crate serialize as rustc_serialize;\n+extern crate rustc_serialize;\n \n #[derive(Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash,\n          Default, Debug, RustcEncodable, RustcDecodable)]"}, {"sha": "a90ab7ac4388ef03a9ec4a7acc49d71f1f5ddd07", "filename": "src/test/ui-fulldeps/extern-mod-syntax.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftest%2Fui-fulldeps%2Fextern-mod-syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftest%2Fui-fulldeps%2Fextern-mod-syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fextern-mod-syntax.rs?ref=e793b46e49afc1ac1e15bf92c4e544695b646ca9", "patch": "@@ -3,8 +3,8 @@\n #![allow(unused_imports)]\n #![feature(rustc_private)]\n \n-extern crate serialize;\n-use serialize::json::Object;\n+extern crate rustc_serialize;\n+use rustc_serialize::json::Object;\n \n pub fn main() {\n     println!(\"Hello world!\");"}, {"sha": "7b0abba4d16c80e09077a04f9548970b1653dd05", "filename": "src/test/ui-fulldeps/issue-11881.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftest%2Fui-fulldeps%2Fissue-11881.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftest%2Fui-fulldeps%2Fissue-11881.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fissue-11881.rs?ref=e793b46e49afc1ac1e15bf92c4e544695b646ca9", "patch": "@@ -6,7 +6,7 @@\n \n #![feature(rustc_private)]\n \n-extern crate serialize as rustc_serialize;\n+extern crate rustc_serialize;\n \n use std::io::Cursor;\n use std::io::prelude::*;"}, {"sha": "1898b12c70385db118de60c15cf0d429532c92cf", "filename": "src/test/ui-fulldeps/issue-14021.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftest%2Fui-fulldeps%2Fissue-14021.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftest%2Fui-fulldeps%2Fissue-14021.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fissue-14021.rs?ref=e793b46e49afc1ac1e15bf92c4e544695b646ca9", "patch": "@@ -4,11 +4,10 @@\n #![allow(unused_imports)]\n #![feature(rustc_private)]\n \n-extern crate serialize;\n-extern crate serialize as rustc_serialize;\n+extern crate rustc_serialize;\n \n-use serialize::{Encodable, Decodable};\n-use serialize::json;\n+use rustc_serialize::{Encodable, Decodable};\n+use rustc_serialize::json;\n \n #[derive(RustcEncodable, RustcDecodable, PartialEq, Debug)]\n struct UnitLikeStruct;"}, {"sha": "e3d4b0eb4460d5815f4351bb8a0f611d77ef1e67", "filename": "src/test/ui-fulldeps/issue-15924.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftest%2Fui-fulldeps%2Fissue-15924.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftest%2Fui-fulldeps%2Fissue-15924.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fissue-15924.rs?ref=e793b46e49afc1ac1e15bf92c4e544695b646ca9", "patch": "@@ -6,11 +6,11 @@\n \n #![feature(rustc_private)]\n \n-extern crate serialize;\n+extern crate rustc_serialize;\n \n use std::fmt;\n-use serialize::{Encoder, Encodable};\n-use serialize::json;\n+use rustc_serialize::{Encoder, Encodable};\n+use rustc_serialize::json;\n \n struct Foo<T: Encodable> {\n     v: T,"}, {"sha": "51e134fbf88719be0e656dc9f734118f264c9e95", "filename": "src/test/ui-fulldeps/issue-24972.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftest%2Fui-fulldeps%2Fissue-24972.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftest%2Fui-fulldeps%2Fissue-24972.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fissue-24972.rs?ref=e793b46e49afc1ac1e15bf92c4e544695b646ca9", "patch": "@@ -3,9 +3,9 @@\n #![allow(dead_code)]\n #![feature(rustc_private)]\n \n-extern crate serialize;\n+extern crate rustc_serialize;\n \n-use serialize::{Encodable, Decodable};\n+use rustc_serialize::{Encodable, Decodable};\n use std::fmt::Display;\n \n pub trait Entity : Decodable + Encodable + Sized {"}, {"sha": "3d5922d155f2690a26023f6d2021acad06e6a693", "filename": "src/test/ui-fulldeps/issue-2804.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftest%2Fui-fulldeps%2Fissue-2804.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftest%2Fui-fulldeps%2Fissue-2804.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fissue-2804.rs?ref=e793b46e49afc1ac1e15bf92c4e544695b646ca9", "patch": "@@ -4,10 +4,10 @@\n #![allow(dead_code)]\n #![feature(rustc_private)]\n \n-extern crate serialize;\n+extern crate rustc_serialize;\n \n use std::collections::HashMap;\n-use serialize::json::{self, Json};\n+use rustc_serialize::json::{self, Json};\n use std::option;\n \n enum object {"}, {"sha": "96157c2f426c0d876d37946a27401a30ea3f2a6a", "filename": "src/test/ui-fulldeps/issue-4016.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftest%2Fui-fulldeps%2Fissue-4016.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftest%2Fui-fulldeps%2Fissue-4016.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fissue-4016.rs?ref=e793b46e49afc1ac1e15bf92c4e544695b646ca9", "patch": "@@ -4,9 +4,9 @@\n \n #![feature(rustc_private)]\n \n-extern crate serialize;\n+extern crate rustc_serialize;\n \n-use serialize::{json, Decodable};\n+use rustc_serialize::{json, Decodable};\n \n trait JD : Decodable {}\n "}, {"sha": "05a7a30140a447ddfc7fed903a6b6bc0803aa1d6", "filename": "src/test/ui-fulldeps/issue-4036.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftest%2Fui-fulldeps%2Fissue-4036.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftest%2Fui-fulldeps%2Fissue-4036.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fissue-4036.rs?ref=e793b46e49afc1ac1e15bf92c4e544695b646ca9", "patch": "@@ -6,9 +6,9 @@\n \n #![feature(rustc_private)]\n \n-extern crate serialize;\n+extern crate rustc_serialize;\n \n-use serialize::{json, Decodable};\n+use rustc_serialize::{json, Decodable};\n \n pub fn main() {\n     let json = json::from_str(\"[1]\").unwrap();"}, {"sha": "b49135cb60b2946a2f64b397f6f66b788445e650", "filename": "src/test/ui-fulldeps/rustc_encodable_hygiene.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftest%2Fui-fulldeps%2Frustc_encodable_hygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftest%2Fui-fulldeps%2Frustc_encodable_hygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Frustc_encodable_hygiene.rs?ref=e793b46e49afc1ac1e15bf92c4e544695b646ca9", "patch": "@@ -4,7 +4,7 @@\n \n #[allow(dead_code)]\n \n-extern crate serialize as rustc_serialize;\n+extern crate rustc_serialize;\n \n #[derive(RustcDecodable, RustcEncodable,Debug)]\n struct A {"}, {"sha": "b7d928d249f969dbcf7c72f2f4d9475a5a2b0c68", "filename": "src/tools/clippy/clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e793b46e49afc1ac1e15bf92c4e544695b646ca9/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Flib.rs?ref=e793b46e49afc1ac1e15bf92c4e544695b646ca9", "patch": "@@ -16,8 +16,6 @@\n // FIXME: switch to something more ergonomic here, once available.\n // (Currently there is no way to opt into sysroot crates without `extern crate`.)\n #[allow(unused_extern_crates)]\n-extern crate fmt_macros;\n-#[allow(unused_extern_crates)]\n extern crate rustc_ast;\n #[allow(unused_extern_crates)]\n extern crate rustc_ast_pretty;\n@@ -48,6 +46,8 @@ extern crate rustc_mir;\n #[allow(unused_extern_crates)]\n extern crate rustc_parse;\n #[allow(unused_extern_crates)]\n+extern crate rustc_parse_format;\n+#[allow(unused_extern_crates)]\n extern crate rustc_session;\n #[allow(unused_extern_crates)]\n extern crate rustc_span;"}]}