{"sha": "1dba4b0117533d076b7c750b77b37655f72c530a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkYmE0YjAxMTc1MzNkMDc2YjdjNzUwYjc3YjM3NjU1ZjcyYzUzMGE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-10-07T14:59:46Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-10-07T14:59:46Z"}, "message": "fix ICE from debug output by using `kind_ty` in dumping closure\n\nAlso, make `-Zverbose` dump all info about constants.", "tree": {"sha": "6e29a57e37cade0e646ba4d8ef406d4fd366d194", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e29a57e37cade0e646ba4d8ef406d4fd366d194"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1dba4b0117533d076b7c750b77b37655f72c530a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1dba4b0117533d076b7c750b77b37655f72c530a", "html_url": "https://github.com/rust-lang/rust/commit/1dba4b0117533d076b7c750b77b37655f72c530a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1dba4b0117533d076b7c750b77b37655f72c530a/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bec090253534b651388e90ec39a7b996fdf48600", "url": "https://api.github.com/repos/rust-lang/rust/commits/bec090253534b651388e90ec39a7b996fdf48600", "html_url": "https://github.com/rust-lang/rust/commit/bec090253534b651388e90ec39a7b996fdf48600"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "aa093329a51b1c565dc4d1d79490f84730eef92f", "filename": "src/librustc/ty/print/pretty.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1dba4b0117533d076b7c750b77b37655f72c530a/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1dba4b0117533d076b7c750b77b37655f72c530a/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs?ref=1dba4b0117533d076b7c750b77b37655f72c530a", "patch": "@@ -689,7 +689,7 @@ pub trait PrettyPrinter<'tcx>:\n                 if self.tcx().sess.verbose() {\n                     p!(write(\n                         \" closure_kind_ty={:?} closure_sig_ty={:?}\",\n-                        substs.as_closure().kind(did, self.tcx()),\n+                        substs.as_closure().kind_ty(did, self.tcx()),\n                         substs.as_closure().sig_ty(did, self.tcx())\n                     ));\n                 }\n@@ -698,7 +698,9 @@ pub trait PrettyPrinter<'tcx>:\n             },\n             ty::Array(ty, sz) => {\n                 p!(write(\"[\"), print(ty), write(\"; \"));\n-                if let ConstValue::Unevaluated(..) = sz.val {\n+                if self.tcx().sess.verbose() {\n+                    p!(write(\"{:?}\", sz));\n+                } else if let ConstValue::Unevaluated(..) = sz.val {\n                     // do not try to evalute unevaluated constants. If we are const evaluating an\n                     // array length anon const, rustc will (with debug assertions) print the\n                     // constant's path. Which will end up here again.\n@@ -855,6 +857,11 @@ pub trait PrettyPrinter<'tcx>:\n     ) -> Result<Self::Const, Self::Error> {\n         define_scoped_cx!(self);\n \n+        if self.tcx().sess.verbose() {\n+            p!(write(\"Const({:?}: {:?})\", ct.val, ct.ty));\n+            return Ok(self);\n+        }\n+\n         let u8 = self.tcx().types.u8;\n         if let ty::FnDef(did, substs) = ct.ty.kind {\n             p!(print_value_path(did, substs));"}]}