{"sha": "538fe4b28d3aca5657a95aadf65800d2237276d1", "node_id": "C_kwDOAAsO6NoAKDUzOGZlNGIyOGQzYWNhNTY1N2E5NWFhZGY2NTgwMGQyMjM3Mjc2ZDE", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2021-12-30T18:37:27Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2021-12-30T18:37:27Z"}, "message": "Consolidate impl Option<&T>", "tree": {"sha": "a8d66f3f6f5d9a29c5cd94f259309580ac412cac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8d66f3f6f5d9a29c5cd94f259309580ac412cac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/538fe4b28d3aca5657a95aadf65800d2237276d1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmHN/GcACgkQ+boUO5X/\nbYKlew/+L1CTfA2Xx3HLQBU0IFfg769SL3rW4sCyrWqwgrEZMpbEyRsseiyTt20g\nM6sOtDCU/TCLrOrOKnCJAz2nK2m5bTbbk6aV8R+PBI2/ubeIqgrwfbjnBDauGYyo\n0qhUPiTRdaynV+kXFahJrQa+MUP5gzwMHmcoqFn+u26MXx0U3q3nWPHfeS0ara5f\nRjUq099ywiI7vZrv7K7/npQxJSg44N4Sn7bfyxCZBa2SpTctvzAPlX25pA9aUVTh\n8Vba//smKUtwGvnGBjJGk6VjiIK1BNXbGgT3zhuJc2Uv0lQRRtjFat8kgWIJN5HV\nThvWVsqLjzJ+gWETUVfdvPXVbOkgBL7SkiGanPbPZhXIobarkStzLN7CEHeIp35e\navzV7xqPmB8/326sxTCDmFFk68UcPdcagqKRUvZXJj5usmPLeMtDuag2GmQDLG1c\n1d4pMInX4x8u08ePQvB6KfaEm7NsyWZalLO5cjTwKNgjrzkr0ORM5PR2PSqcJ5Rp\nD99E36uiKN6Yh9SW4fuSOuV3HCaQpHd7mEnXx5Gj5oG0zlRb6G9n4j/noWlxCxPi\nZhjQErRcgRIqt1msMg/PG2XmV8iCJ8WySHloJxVuZGv/g6vvgzHqXyg+MnvbqRae\naTqNfaAVSX/rzec+KXVRoQNOj/RiMWiCbtVSPOQIKGlAGag/y2Q=\n=5VY8\n-----END PGP SIGNATURE-----", "payload": "tree a8d66f3f6f5d9a29c5cd94f259309580ac412cac\nparent 9d65bc51c1ea5fc482cc42d79732043201bcf54a\nauthor David Tolnay <dtolnay@gmail.com> 1640889447 -0800\ncommitter David Tolnay <dtolnay@gmail.com> 1640889447 -0800\n\nConsolidate impl Option<&T>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/538fe4b28d3aca5657a95aadf65800d2237276d1", "html_url": "https://github.com/rust-lang/rust/commit/538fe4b28d3aca5657a95aadf65800d2237276d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/538fe4b28d3aca5657a95aadf65800d2237276d1/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d65bc51c1ea5fc482cc42d79732043201bcf54a", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d65bc51c1ea5fc482cc42d79732043201bcf54a", "html_url": "https://github.com/rust-lang/rust/commit/9d65bc51c1ea5fc482cc42d79732043201bcf54a"}], "stats": {"total": 57, "additions": 29, "deletions": 28}, "files": [{"sha": "9b3b27b68a3cdd557d873f7644f9898d61ccc5b0", "filename": "library/core/src/option.rs", "status": "modified", "additions": 29, "deletions": 28, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/538fe4b28d3aca5657a95aadf65800d2237276d1/library%2Fcore%2Fsrc%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/538fe4b28d3aca5657a95aadf65800d2237276d1/library%2Fcore%2Fsrc%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Foption.rs?ref=538fe4b28d3aca5657a95aadf65800d2237276d1", "patch": "@@ -1672,7 +1672,7 @@ impl<T, U> Option<(T, U)> {\n     }\n }\n \n-impl<T: Copy> Option<&T> {\n+impl<T> Option<&T> {\n     /// Maps an `Option<&T>` to an `Option<T>` by copying the contents of the\n     /// option.\n     ///\n@@ -1688,41 +1688,18 @@ impl<T: Copy> Option<&T> {\n     #[must_use = \"`self` will be dropped if the result is not used\"]\n     #[stable(feature = \"copied\", since = \"1.35.0\")]\n     #[rustc_const_unstable(feature = \"const_option\", issue = \"67441\")]\n-    pub const fn copied(self) -> Option<T> {\n+    pub const fn copied(self) -> Option<T>\n+    where\n+        T: Copy,\n+    {\n         // FIXME: this implementation, which sidesteps using `Option::map` since it's not const\n         // ready yet, should be reverted when possible to avoid code repetition\n         match self {\n             Some(&v) => Some(v),\n             None => None,\n         }\n     }\n-}\n-\n-impl<T: Copy> Option<&mut T> {\n-    /// Maps an `Option<&mut T>` to an `Option<T>` by copying the contents of the\n-    /// option.\n-    ///\n-    /// # Examples\n-    ///\n-    /// ```\n-    /// let mut x = 12;\n-    /// let opt_x = Some(&mut x);\n-    /// assert_eq!(opt_x, Some(&mut 12));\n-    /// let copied = opt_x.copied();\n-    /// assert_eq!(copied, Some(12));\n-    /// ```\n-    #[must_use = \"`self` will be dropped if the result is not used\"]\n-    #[stable(feature = \"copied\", since = \"1.35.0\")]\n-    #[rustc_const_unstable(feature = \"const_option_ext\", issue = \"91930\")]\n-    pub const fn copied(self) -> Option<T> {\n-        match self {\n-            Some(&mut t) => Some(t),\n-            None => None,\n-        }\n-    }\n-}\n \n-impl<T: Clone> Option<&T> {\n     /// Maps an `Option<&T>` to an `Option<T>` by cloning the contents of the\n     /// option.\n     ///\n@@ -1749,6 +1726,30 @@ impl<T: Clone> Option<&T> {\n     }\n }\n \n+impl<T: Copy> Option<&mut T> {\n+    /// Maps an `Option<&mut T>` to an `Option<T>` by copying the contents of the\n+    /// option.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// let mut x = 12;\n+    /// let opt_x = Some(&mut x);\n+    /// assert_eq!(opt_x, Some(&mut 12));\n+    /// let copied = opt_x.copied();\n+    /// assert_eq!(copied, Some(12));\n+    /// ```\n+    #[must_use = \"`self` will be dropped if the result is not used\"]\n+    #[stable(feature = \"copied\", since = \"1.35.0\")]\n+    #[rustc_const_unstable(feature = \"const_option_ext\", issue = \"91930\")]\n+    pub const fn copied(self) -> Option<T> {\n+        match self {\n+            Some(&mut t) => Some(t),\n+            None => None,\n+        }\n+    }\n+}\n+\n impl<T: Clone> Option<&mut T> {\n     /// Maps an `Option<&mut T>` to an `Option<T>` by cloning the contents of the\n     /// option."}]}