{"sha": "1f018636e35018bbd3f83de8da68ec50669cd646", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmMDE4NjM2ZTM1MDE4YmJkM2Y4M2RlOGRhNjhlYzUwNjY5Y2Q2NDY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-08-05T16:38:10Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-08-05T16:38:10Z"}, "message": "improve align_offset docs", "tree": {"sha": "c25fdbc8b69c92a6c556690f869301ec8260f6d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c25fdbc8b69c92a6c556690f869301ec8260f6d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f018636e35018bbd3f83de8da68ec50669cd646", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f018636e35018bbd3f83de8da68ec50669cd646", "html_url": "https://github.com/rust-lang/rust/commit/1f018636e35018bbd3f83de8da68ec50669cd646", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f018636e35018bbd3f83de8da68ec50669cd646/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4be067558962c004b638e4c6f162d50f7c0c98b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/4be067558962c004b638e4c6f162d50f7c0c98b6", "html_url": "https://github.com/rust-lang/rust/commit/4be067558962c004b638e4c6f162d50f7c0c98b6"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "fa55bbf9c16507ecd4c1f5399fd6ec9d4f497efb", "filename": "src/libcore/ptr/mod.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1f018636e35018bbd3f83de8da68ec50669cd646/src%2Flibcore%2Fptr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f018636e35018bbd3f83de8da68ec50669cd646/src%2Flibcore%2Fptr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr%2Fmod.rs?ref=1f018636e35018bbd3f83de8da68ec50669cd646", "patch": "@@ -1606,10 +1606,12 @@ impl<T: ?Sized> *const T {\n     /// `align`.\n     ///\n     /// If it is not possible to align the pointer, the implementation returns\n-    /// `usize::max_value()`.\n+    /// `usize::max_value()`. It is permissible for the implementation to *always*\n+    /// return `usize::max_value()`. Only your algorithm's performance can depend\n+    /// on getting a usable offset here, not its correctness.\n     ///\n     /// The offset is expressed in number of `T` elements, and not bytes. The value returned can be\n-    /// used with the `add` method.\n+    /// used with the `wrapping_add` method.\n     ///\n     /// There are no guarantees whatsoever that offsetting the pointer will not overflow or go\n     /// beyond the allocation that the pointer points into. It is up to the caller to ensure that\n@@ -2407,10 +2409,12 @@ impl<T: ?Sized> *mut T {\n     /// `align`.\n     ///\n     /// If it is not possible to align the pointer, the implementation returns\n-    /// `usize::max_value()`.\n+    /// `usize::max_value()`. It is permissible for the implementation to *always*\n+    /// return `usize::max_value()`. Only your algorithm's performance can depend\n+    /// on getting a usable offset here, not its correctness.\n     ///\n     /// The offset is expressed in number of `T` elements, and not bytes. The value returned can be\n-    /// used with the `add` method.\n+    /// used with the `wrapping_add` method.\n     ///\n     /// There are no guarantees whatsoever that offsetting the pointer will not overflow or go\n     /// beyond the allocation that the pointer points into. It is up to the caller to ensure that"}]}