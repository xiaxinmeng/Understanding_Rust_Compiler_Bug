{"sha": "33c4afeae085b182a89cf8acea4d3eb193318c92", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzYzRhZmVhZTA4NWIxODJhODljZjhhY2VhNGQzZWIxOTMzMThjOTI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-08-25T16:01:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-25T16:01:47Z"}, "message": "Merge #5880\n\n5880: Opportunistically check indel overlap r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "69e9ac083b084beca1920e60e7abf528861a06f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69e9ac083b084beca1920e60e7abf528861a06f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33c4afeae085b182a89cf8acea4d3eb193318c92", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfRTXrCRBK7hj4Ov3rIwAAdHIIABaH7SNWTzWgHJ/us1/i/wBH\n+9ywP1WpWtJQVrhrtnYm0ZnIk5/V3o5RtIOCtWDwaWq2imvhamstQ+2bSRkCV2+7\nGMD+/bZy1C5so2v+mOnuDQ0eaXzboFw2FmSayTqecP/rCtNxCoptmGHyhsQBc0P9\njddQBt2coU3HmyQSkYsAIHcV6frvTT4F9gOWZDkOrW8rAgg5nz6Y9qUd3yRRfRmt\nViFMrlz8ANQ+5f1rPXZI91W5ovE1zGwB0Wlxr5FZT7GUQiKi53DWqSr172ULZzQ6\nzLcGsbRQecYgX8MMJKfQXssVmmciA/RwiUxU4BwCbYMzcDIr+2IIDfq6OOp1jpI=\n=F1FL\n-----END PGP SIGNATURE-----\n", "payload": "tree 69e9ac083b084beca1920e60e7abf528861a06f5\nparent 3f721683deb81c015484abd14eb67b96f39b1aff\nparent 7239d8ca951593b66a557c989dffaf94edddf420\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1598371307 +0000\ncommitter GitHub <noreply@github.com> 1598371307 +0000\n\nMerge #5880\n\n5880: Opportunistically check indel overlap r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33c4afeae085b182a89cf8acea4d3eb193318c92", "html_url": "https://github.com/rust-lang/rust/commit/33c4afeae085b182a89cf8acea4d3eb193318c92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33c4afeae085b182a89cf8acea4d3eb193318c92/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f721683deb81c015484abd14eb67b96f39b1aff", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f721683deb81c015484abd14eb67b96f39b1aff", "html_url": "https://github.com/rust-lang/rust/commit/3f721683deb81c015484abd14eb67b96f39b1aff"}, {"sha": "7239d8ca951593b66a557c989dffaf94edddf420", "url": "https://api.github.com/repos/rust-lang/rust/commits/7239d8ca951593b66a557c989dffaf94edddf420", "html_url": "https://github.com/rust-lang/rust/commit/7239d8ca951593b66a557c989dffaf94edddf420"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "e417e8ea6212323cd761f373f7c3d341c16f1c9d", "filename": "crates/text_edit/src/lib.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/33c4afeae085b182a89cf8acea4d3eb193318c92/crates%2Ftext_edit%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33c4afeae085b182a89cf8acea4d3eb193318c92/crates%2Ftext_edit%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftext_edit%2Fsrc%2Flib.rs?ref=33c4afeae085b182a89cf8acea4d3eb193318c92", "patch": "@@ -159,13 +159,13 @@ impl<'a> IntoIterator for &'a TextEdit {\n \n impl TextEditBuilder {\n     pub fn replace(&mut self, range: TextRange, replace_with: String) {\n-        self.indels.push(Indel::replace(range, replace_with))\n+        self.indel(Indel::replace(range, replace_with))\n     }\n     pub fn delete(&mut self, range: TextRange) {\n-        self.indels.push(Indel::delete(range))\n+        self.indel(Indel::delete(range))\n     }\n     pub fn insert(&mut self, offset: TextSize, text: String) {\n-        self.indels.push(Indel::insert(offset, text))\n+        self.indel(Indel::insert(offset, text))\n     }\n     pub fn finish(self) -> TextEdit {\n         let mut indels = self.indels;\n@@ -175,6 +175,12 @@ impl TextEditBuilder {\n     pub fn invalidates_offset(&self, offset: TextSize) -> bool {\n         self.indels.iter().any(|indel| indel.delete.contains_inclusive(offset))\n     }\n+    fn indel(&mut self, indel: Indel) {\n+        self.indels.push(indel);\n+        if self.indels.len() <= 16 {\n+            check_disjoint(&mut self.indels);\n+        }\n+    }\n }\n \n fn check_disjoint(indels: &mut [impl std::borrow::Borrow<Indel>]) -> bool {"}]}