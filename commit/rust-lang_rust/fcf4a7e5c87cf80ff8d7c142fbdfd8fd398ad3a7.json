{"sha": "fcf4a7e5c87cf80ff8d7c142fbdfd8fd398ad3a7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjZjRhN2U1Yzg3Y2Y4MGZmOGQ3YzE0MmZiZGZkOGZkMzk4YWQzYTc=", "commit": {"author": {"name": "Alexis Beingessner", "email": "a.beingessner@gmail.com", "date": "2015-07-08T04:31:09Z"}, "committer": {"name": "Alexis Beingessner", "email": "a.beingessner@gmail.com", "date": "2015-07-08T04:31:09Z"}, "message": "oops", "tree": {"sha": "db10909572db8c271699f8c57f8b33135955987f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db10909572db8c271699f8c57f8b33135955987f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fcf4a7e5c87cf80ff8d7c142fbdfd8fd398ad3a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fcf4a7e5c87cf80ff8d7c142fbdfd8fd398ad3a7", "html_url": "https://github.com/rust-lang/rust/commit/fcf4a7e5c87cf80ff8d7c142fbdfd8fd398ad3a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fcf4a7e5c87cf80ff8d7c142fbdfd8fd398ad3a7/comments", "author": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "498e44d87a93183ac04690e09a39fee47dfe85b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/498e44d87a93183ac04690e09a39fee47dfe85b0", "html_url": "https://github.com/rust-lang/rust/commit/498e44d87a93183ac04690e09a39fee47dfe85b0"}], "stats": {"total": 2, "additions": 0, "deletions": 2}, "files": [{"sha": "69c0874dc186dc34edb946e68ecbc69492599872", "filename": "atomics.md", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fcf4a7e5c87cf80ff8d7c142fbdfd8fd398ad3a7/atomics.md", "raw_url": "https://github.com/rust-lang/rust/raw/fcf4a7e5c87cf80ff8d7c142fbdfd8fd398ad3a7/atomics.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/atomics.md?ref=fcf4a7e5c87cf80ff8d7c142fbdfd8fd398ad3a7", "patch": "@@ -89,8 +89,6 @@ However there's a third potential state that the hardware enables:\n \n * `y = 2`: (thread 2 saw `x = 2`, but not `y = 3`, and then overwrote `y = 3`)\n \n-```\n-\n It's worth noting that different kinds of CPU provide different guarantees. It\n is common to seperate hardware into two categories: strongly-ordered and weakly-\n ordered. Most notably x86/64 provides strong ordering guarantees, while ARM and"}]}