{"sha": "49844ab717d8d1790dbdf7f44d160936ece0e80f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5ODQ0YWI3MTdkOGQxNzkwZGJkZjdmNDRkMTYwOTM2ZWNlMGU4MGY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-21T14:59:46Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-22T15:03:47Z"}, "message": "Extract client-side logging", "tree": {"sha": "42c009ba902ecdda6d22daa8063fcb19f20408c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/42c009ba902ecdda6d22daa8063fcb19f20408c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49844ab717d8d1790dbdf7f44d160936ece0e80f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49844ab717d8d1790dbdf7f44d160936ece0e80f", "html_url": "https://github.com/rust-lang/rust/commit/49844ab717d8d1790dbdf7f44d160936ece0e80f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49844ab717d8d1790dbdf7f44d160936ece0e80f/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2cbe8a4c4be2a69b27c248ab96341c2336f983cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/2cbe8a4c4be2a69b27c248ab96341c2336f983cd", "html_url": "https://github.com/rust-lang/rust/commit/2cbe8a4c4be2a69b27c248ab96341c2336f983cd"}], "stats": {"total": 72, "additions": 51, "deletions": 21}, "files": [{"sha": "16f18ab2c2ce4e00126736d289dc2a759eed9d9e", "filename": "editors/code/.eslintrc.js", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/49844ab717d8d1790dbdf7f44d160936ece0e80f/editors%2Fcode%2F.eslintrc.js", "raw_url": "https://github.com/rust-lang/rust/raw/49844ab717d8d1790dbdf7f44d160936ece0e80f/editors%2Fcode%2F.eslintrc.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2F.eslintrc.js?ref=49844ab717d8d1790dbdf7f44d160936ece0e80f", "patch": "@@ -12,8 +12,10 @@ module.exports = {\n         \"@typescript-eslint\"\n     ],\n     \"rules\": {\n-        \"eqeqeq\": [\"error\", \"always\", { \"null\": \"ignore\" }],\n         \"camelcase\": [\"error\"],\n+        \"eqeqeq\": [\"error\", \"always\", { \"null\": \"ignore\" }],\n+        \"no-console\": [\"error\"],\n+        \"prefer-const\": \"error\",\n         \"@typescript-eslint/member-delimiter-style\": [\n             \"error\",\n             {\n@@ -30,7 +32,6 @@ module.exports = {\n         \"@typescript-eslint/semi\": [\n             \"error\",\n             \"always\"\n-        ],\n-        \"prefer-const\": \"error\"\n+        ]\n     }\n };"}, {"sha": "9ef6c698314535956ba45363b73364f527e8839e", "filename": "editors/code/package.json", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/49844ab717d8d1790dbdf7f44d160936ece0e80f/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/49844ab717d8d1790dbdf7f44d160936ece0e80f/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=49844ab717d8d1790dbdf7f44d160936ece0e80f", "patch": "@@ -252,6 +252,11 @@\n                     \"default\": \"off\",\n                     \"description\": \"Trace requests to the rust-analyzer\"\n                 },\n+                \"rust-analyzer.trace.extension\": {\n+                    \"description\": \"Enable logging of VS Code extensions itself\",\n+                    \"type\": \"boolean\",\n+                    \"default\": false\n+                },\n                 \"rust-analyzer.lruCapacity\": {\n                     \"type\": [\n                         \"null\","}, {"sha": "47e8cd45d0646dd5b43ae4c285e95619cf9ee823", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/49844ab717d8d1790dbdf7f44d160936ece0e80f/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/49844ab717d8d1790dbdf7f44d160936ece0e80f/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=49844ab717d8d1790dbdf7f44d160936ece0e80f", "patch": "@@ -1,6 +1,7 @@\n import * as os from \"os\";\n import * as vscode from 'vscode';\n import { BinarySource } from \"./installation/interfaces\";\n+import { log } from \"./util\";\n \n const RA_LSP_DEBUG = process.env.__RA_LSP_SERVER_DEBUG;\n \n@@ -46,7 +47,9 @@ export class Config {\n \n     private refreshConfig() {\n         this.cfg = vscode.workspace.getConfiguration(Config.rootSection);\n-        console.log(\"Using configuration:\", this.cfg);\n+        const enableLogging = this.cfg.get(\"trace.extension\") as boolean;\n+        log.setEnabled(enableLogging);\n+        log.debug(\"Using configuration:\", this.cfg);\n     }\n \n     private async onConfigChange(event: vscode.ConfigurationChangeEvent) {"}, {"sha": "7e6c310a9af6dd8c73af70df406a0a190a322588", "filename": "editors/code/src/inlay_hints.ts", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/49844ab717d8d1790dbdf7f44d160936ece0e80f/editors%2Fcode%2Fsrc%2Finlay_hints.ts", "raw_url": "https://github.com/rust-lang/rust/raw/49844ab717d8d1790dbdf7f44d160936ece0e80f/editors%2Fcode%2Fsrc%2Finlay_hints.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finlay_hints.ts?ref=49844ab717d8d1790dbdf7f44d160936ece0e80f", "patch": "@@ -2,6 +2,7 @@ import * as vscode from 'vscode';\n import * as lc from 'vscode-languageclient';\n \n import { Ctx, sendRequestWithRetry } from './ctx';\n+import { log } from './util';\n \n export function activateInlayHints(ctx: Ctx) {\n     const hintsUpdater = new HintsUpdater(ctx);\n@@ -71,7 +72,7 @@ class HintsUpdater {\n     }\n \n     async setEnabled(enabled: boolean): Promise<void> {\n-        console.log({ enabled, prev: this.enabled });\n+        log.debug({ enabled, prev: this.enabled });\n \n         if (this.enabled === enabled) return;\n         this.enabled = enabled;"}, {"sha": "356723abaf5287b3ba3d2465cd638d876e9d86f5", "filename": "editors/code/src/installation/download_artifact.ts", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49844ab717d8d1790dbdf7f44d160936ece0e80f/editors%2Fcode%2Fsrc%2Finstallation%2Fdownload_artifact.ts", "raw_url": "https://github.com/rust-lang/rust/raw/49844ab717d8d1790dbdf7f44d160936ece0e80f/editors%2Fcode%2Fsrc%2Finstallation%2Fdownload_artifact.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finstallation%2Fdownload_artifact.ts?ref=49844ab717d8d1790dbdf7f44d160936ece0e80f", "patch": "@@ -29,7 +29,6 @@ export async function downloadArtifact(\n \n     const installationPath = path.join(installationDir, artifactFileName);\n \n-    console.time(`Downloading ${artifactFileName}`);\n     await vscode.window.withProgress(\n         {\n             location: vscode.ProgressLocation.Notification,\n@@ -54,5 +53,4 @@ export async function downloadArtifact(\n             );\n         }\n     );\n-    console.timeEnd(`Downloading ${artifactFileName}`);\n }"}, {"sha": "319cb995c4f7ff0cbe53b74482af2605fe0503a2", "filename": "editors/code/src/installation/download_file.ts", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/49844ab717d8d1790dbdf7f44d160936ece0e80f/editors%2Fcode%2Fsrc%2Finstallation%2Fdownload_file.ts", "raw_url": "https://github.com/rust-lang/rust/raw/49844ab717d8d1790dbdf7f44d160936ece0e80f/editors%2Fcode%2Fsrc%2Finstallation%2Fdownload_file.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finstallation%2Fdownload_file.ts?ref=49844ab717d8d1790dbdf7f44d160936ece0e80f", "patch": "@@ -3,6 +3,7 @@ import * as fs from \"fs\";\n import * as stream from \"stream\";\n import * as util from \"util\";\n import { strict as assert } from \"assert\";\n+import { log } from \"../util\";\n \n const pipeline = util.promisify(stream.pipeline);\n \n@@ -21,16 +22,16 @@ export async function downloadFile(\n     const res = await fetch(url);\n \n     if (!res.ok) {\n-        console.log(\"Error\", res.status, \"while downloading file from\", url);\n-        console.dir({ body: await res.text(), headers: res.headers }, { depth: 3 });\n+        log.error(\"Error\", res.status, \"while downloading file from\", url);\n+        log.error({ body: await res.text(), headers: res.headers });\n \n         throw new Error(`Got response ${res.status} when trying to download a file.`);\n     }\n \n     const totalBytes = Number(res.headers.get('content-length'));\n     assert(!Number.isNaN(totalBytes), \"Sanity check of content-length protocol\");\n \n-    console.log(\"Downloading file of\", totalBytes, \"bytes size from\", url, \"to\", destFilePath);\n+    log.debug(\"Downloading file of\", totalBytes, \"bytes size from\", url, \"to\", destFilePath);\n \n     let readBytes = 0;\n     res.body.on(\"data\", (chunk: Buffer) => {"}, {"sha": "1b6fc8d48c07d2dc788da0c82b8263b177e8c2d5", "filename": "editors/code/src/installation/fetch_artifact_release_info.ts", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/49844ab717d8d1790dbdf7f44d160936ece0e80f/editors%2Fcode%2Fsrc%2Finstallation%2Ffetch_artifact_release_info.ts", "raw_url": "https://github.com/rust-lang/rust/raw/49844ab717d8d1790dbdf7f44d160936ece0e80f/editors%2Fcode%2Fsrc%2Finstallation%2Ffetch_artifact_release_info.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finstallation%2Ffetch_artifact_release_info.ts?ref=49844ab717d8d1790dbdf7f44d160936ece0e80f", "patch": "@@ -1,5 +1,6 @@\n import fetch from \"node-fetch\";\n import { GithubRepo, ArtifactReleaseInfo } from \"./interfaces\";\n+import { log } from \"../util\";\n \n const GITHUB_API_ENDPOINT_URL = \"https://api.github.com\";\n \n@@ -24,7 +25,7 @@ export async function fetchArtifactReleaseInfo(\n \n     // We skip runtime type checks for simplicity (here we cast from `any` to `GithubRelease`)\n \n-    console.log(\"Issuing request for released artifacts metadata to\", requestUrl);\n+    log.debug(\"Issuing request for released artifacts metadata to\", requestUrl);\n \n     // FIXME: handle non-ok response\n     const response: GithubRelease = await fetch(requestUrl, {"}, {"sha": "685abfdc6dae3dbfafd417f3e6f18229fa50d7ae", "filename": "editors/code/src/installation/server.ts", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/49844ab717d8d1790dbdf7f44d160936ece0e80f/editors%2Fcode%2Fsrc%2Finstallation%2Fserver.ts", "raw_url": "https://github.com/rust-lang/rust/raw/49844ab717d8d1790dbdf7f44d160936ece0e80f/editors%2Fcode%2Fsrc%2Finstallation%2Fserver.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finstallation%2Fserver.ts?ref=49844ab717d8d1790dbdf7f44d160936ece0e80f", "patch": "@@ -7,6 +7,7 @@ import { spawnSync } from \"child_process\";\n import { BinarySource } from \"./interfaces\";\n import { fetchArtifactReleaseInfo } from \"./fetch_artifact_release_info\";\n import { downloadArtifact } from \"./download_artifact\";\n+import { log } from \"../util\";\n \n export async function ensureServerBinary(source: null | BinarySource): Promise<null | string> {\n     if (!source) {\n@@ -40,7 +41,7 @@ export async function ensureServerBinary(source: null | BinarySource): Promise<n\n             const installedVersion: null | string = getServerVersion(source.storage);\n             const requiredVersion: string = source.version;\n \n-            console.log(\"Installed version:\", installedVersion, \"required:\", requiredVersion);\n+            log.debug(\"Installed version:\", installedVersion, \"required:\", requiredVersion);\n \n             if (isBinaryAvailable(prebuiltBinaryPath) && installedVersion === requiredVersion) {\n                 return prebuiltBinaryPath;\n@@ -72,16 +73,16 @@ async function downloadServer(source: BinarySource.GithubRelease): Promise<boole\n             `GitHub repository: ${err.message}`\n         );\n \n-        console.error(err);\n+        log.error(err);\n \n         dns.resolve('example.com').then(\n-            addrs => console.log(\"DNS resolution for example.com was successful\", addrs),\n+            addrs => log.debug(\"DNS resolution for example.com was successful\", addrs),\n             err => {\n-                console.error(\n+                log.error(\n                     \"DNS resolution for example.com failed, \" +\n                     \"there might be an issue with Internet availability\"\n                 );\n-                console.error(err);\n+                log.error(err);\n             }\n         );\n         return false;\n@@ -105,19 +106,19 @@ function isBinaryAvailable(binaryPath: string): boolean {\n     // ACHTUNG! `res` type declaration is inherently wrong, see\n     // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/42221\n \n-    console.log(\"Checked binary availablity via --version\", res);\n-    console.log(binaryPath, \"--version output:\", res.output?.map(String));\n+    log.debug(\"Checked binary availablity via --version\", res);\n+    log.debug(binaryPath, \"--version output:\", res.output?.map(String));\n \n     return res.status === 0;\n }\n \n function getServerVersion(storage: vscode.Memento): null | string {\n     const version = storage.get<null | string>(\"server-version\", null);\n-    console.log(\"Get server-version:\", version);\n+    log.debug(\"Get server-version:\", version);\n     return version;\n }\n \n async function setServerVersion(storage: vscode.Memento, version: string): Promise<void> {\n-    console.log(\"Set server-version:\", version);\n+    log.debug(\"Set server-version:\", version);\n     await storage.update(\"server-version\", version.toString());\n }"}, {"sha": "7b3bb6302c062e79068f0dd220a414dc4b7da71f", "filename": "editors/code/src/main.ts", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/49844ab717d8d1790dbdf7f44d160936ece0e80f/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/49844ab717d8d1790dbdf7f44d160936ece0e80f/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=49844ab717d8d1790dbdf7f44d160936ece0e80f", "patch": "@@ -7,6 +7,7 @@ import { Ctx } from './ctx';\n import { activateHighlighting } from './highlighting';\n import { ensureServerBinary } from './installation/server';\n import { Config } from './config';\n+import { log } from './util';\n \n let ctx: Ctx | undefined;\n \n@@ -38,7 +39,7 @@ export async function activate(context: vscode.ExtensionContext) {\n                 try {\n                     sub.dispose();\n                 } catch (e) {\n-                    console.error(e);\n+                    log.error(e);\n                 }\n             }\n             await activate(context);"}, {"sha": "7a6657753bad7fbf0f7dd1c25615de0aae528957", "filename": "editors/code/src/util.ts", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/49844ab717d8d1790dbdf7f44d160936ece0e80f/editors%2Fcode%2Fsrc%2Futil.ts", "raw_url": "https://github.com/rust-lang/rust/raw/49844ab717d8d1790dbdf7f44d160936ece0e80f/editors%2Fcode%2Fsrc%2Futil.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Futil.ts?ref=49844ab717d8d1790dbdf7f44d160936ece0e80f", "patch": "@@ -0,0 +1,18 @@\n+let enabled: boolean = false;\n+\n+export const log = {\n+    debug(message?: any, ...optionalParams: any[]): void {\n+        if (!enabled) return;\n+        // eslint-disable-next-line no-console\n+        console.log(message, ...optionalParams);\n+    },\n+    error(message?: any, ...optionalParams: any[]): void {\n+        if (!enabled) return;\n+        debugger;\n+        // eslint-disable-next-line no-console\n+        console.error(message, ...optionalParams);\n+    },\n+    setEnabled(yes: boolean): void {\n+        enabled = yes;\n+    }\n+};"}]}