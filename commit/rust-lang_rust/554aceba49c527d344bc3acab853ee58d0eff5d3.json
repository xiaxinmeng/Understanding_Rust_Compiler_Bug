{"sha": "554aceba49c527d344bc3acab853ee58d0eff5d3", "node_id": "C_kwDOAAsO6NoAKDU1NGFjZWJhNDljNTI3ZDM0NGJjM2FjYWI4NTNlZTU4ZDBlZmY1ZDM", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-01-08T13:49:38Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-01-08T19:45:59Z"}, "message": "Simplify error reporting.", "tree": {"sha": "b5a53d341a2c13810bb6027166b4fd6a3b1f7f84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5a53d341a2c13810bb6027166b4fd6a3b1f7f84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/554aceba49c527d344bc3acab853ee58d0eff5d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/554aceba49c527d344bc3acab853ee58d0eff5d3", "html_url": "https://github.com/rust-lang/rust/commit/554aceba49c527d344bc3acab853ee58d0eff5d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/554aceba49c527d344bc3acab853ee58d0eff5d3/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b2409cd7d0edd8d2104a6dcaeeaf5f95ff2aee0", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b2409cd7d0edd8d2104a6dcaeeaf5f95ff2aee0", "html_url": "https://github.com/rust-lang/rust/commit/8b2409cd7d0edd8d2104a6dcaeeaf5f95ff2aee0"}], "stats": {"total": 80, "additions": 42, "deletions": 38}, "files": [{"sha": "941c2a70d11ef91b34f25bd74dcf1e0bdfb0f27b", "filename": "compiler/rustc_resolve/src/diagnostics.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/554aceba49c527d344bc3acab853ee58d0eff5d3/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/554aceba49c527d344bc3acab853ee58d0eff5d3/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs?ref=554aceba49c527d344bc3acab853ee58d0eff5d3", "patch": "@@ -602,6 +602,25 @@ impl<'a> Resolver<'a> {\n \n                 err\n             }\n+            ResolutionError::TraitImplMismatch {\n+                name,\n+                kind,\n+                code,\n+                trait_item_span,\n+                trait_path,\n+            } => {\n+                let mut err = self.session.struct_span_err_with_code(\n+                    span,\n+                    &format!(\n+                        \"item `{}` is an associated {}, which doesn't match its trait `{}`\",\n+                        name, kind, trait_path,\n+                    ),\n+                    code,\n+                );\n+                err.span_label(span, \"does not match trait\");\n+                err.span_label(trait_item_span, \"item in trait\");\n+                err\n+            }\n         }\n     }\n "}, {"sha": "a15c08da04b2195a3e800e61ca7f03d9f1143d61", "filename": "compiler/rustc_resolve/src/late.rs", "status": "modified", "additions": 15, "deletions": 38, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/554aceba49c527d344bc3acab853ee58d0eff5d3/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/554aceba49c527d344bc3acab853ee58d0eff5d3/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate.rs?ref=554aceba49c527d344bc3acab853ee58d0eff5d3", "patch": "@@ -1470,45 +1470,22 @@ impl<'a: 'ast, 'b, 'ast> LateResolutionVisitor<'a, 'b, 'ast> {\n \n         // The method kind does not correspond to what appeared in the trait, report.\n         let path = &self.current_trait_ref.as_ref().unwrap().1.path;\n-        let path = &path_names_to_string(path);\n-        let mut err = match kind {\n-            AssocItemKind::Const(..) => {\n-                rustc_errors::struct_span_err!(\n-                    self.r.session,\n-                    span,\n-                    E0323,\n-                    \"item `{}` is an associated const, which doesn't match its trait `{}`\",\n-                    ident,\n-                    path,\n-                )\n-            }\n-            AssocItemKind::Fn(..) => {\n-                rustc_errors::struct_span_err!(\n-                    self.r.session,\n-                    span,\n-                    E0324,\n-                    \"item `{}` is an associated method, which doesn't match its trait `{}`\",\n-                    ident,\n-                    path,\n-                )\n-            }\n-            AssocItemKind::TyAlias(..) => {\n-                rustc_errors::struct_span_err!(\n-                    self.r.session,\n-                    span,\n-                    E0325,\n-                    \"item `{}` is an associated type, which doesn't match its trait `{}`\",\n-                    ident,\n-                    path,\n-                )\n-            }\n-            AssocItemKind::MacCall(..) => {\n-                span_bug!(span, \"macros should have been expanded\")\n-            }\n+        let (code, kind) = match kind {\n+            AssocItemKind::Const(..) => (rustc_errors::error_code!(E0323), \"const\"),\n+            AssocItemKind::Fn(..) => (rustc_errors::error_code!(E0324), \"method\"),\n+            AssocItemKind::TyAlias(..) => (rustc_errors::error_code!(E0325), \"type\"),\n+            AssocItemKind::MacCall(..) => span_bug!(span, \"unexpanded macro\"),\n         };\n-        err.span_label(span, \"does not match trait\");\n-        err.span_label(binding.span, \"item in trait\");\n-        err.emit();\n+        self.report_error(\n+            span,\n+            ResolutionError::TraitImplMismatch {\n+                name: ident.name,\n+                kind,\n+                code,\n+                trait_path: path_names_to_string(path),\n+                trait_item_span: binding.span,\n+            },\n+        );\n     }\n \n     fn resolve_params(&mut self, params: &'ast [Param]) {"}, {"sha": "17f3af317840f1ee003ebf424ba154153b28e41b", "filename": "compiler/rustc_resolve/src/lib.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/554aceba49c527d344bc3acab853ee58d0eff5d3/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/554aceba49c527d344bc3acab853ee58d0eff5d3/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flib.rs?ref=554aceba49c527d344bc3acab853ee58d0eff5d3", "patch": "@@ -258,6 +258,14 @@ enum ResolutionError<'a> {\n     SelfInGenericParamDefault,\n     /// Error E0767: use of unreachable label\n     UnreachableLabel { name: Symbol, definition_span: Span, suggestion: Option<LabelSuggestion> },\n+    /// Error E0323, E0324, E0325: mismatch between trait item and impl item.\n+    TraitImplMismatch {\n+        name: Symbol,\n+        kind: &'static str,\n+        trait_path: String,\n+        trait_item_span: Span,\n+        code: rustc_errors::DiagnosticId,\n+    },\n }\n \n enum VisResolutionError<'a> {"}]}