{"sha": "f3b7aa906883765e2158a07da39d1e4b6d996b61", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzYjdhYTkwNjg4Mzc2NWUyMTU4YTA3ZGEzOWQxZTRiNmQ5OTZiNjE=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-10-23T02:37:03Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-10-23T02:37:03Z"}, "message": "Long line police.", "tree": {"sha": "e4838c25bd2ef52de9f8f7c5760b42174a67a643", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4838c25bd2ef52de9f8f7c5760b42174a67a643"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3b7aa906883765e2158a07da39d1e4b6d996b61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3b7aa906883765e2158a07da39d1e4b6d996b61", "html_url": "https://github.com/rust-lang/rust/commit/f3b7aa906883765e2158a07da39d1e4b6d996b61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3b7aa906883765e2158a07da39d1e4b6d996b61/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3bf775e80feb8cf04c67d37dd2aa826ba4fa6111", "url": "https://api.github.com/repos/rust-lang/rust/commits/3bf775e80feb8cf04c67d37dd2aa826ba4fa6111", "html_url": "https://github.com/rust-lang/rust/commit/3bf775e80feb8cf04c67d37dd2aa826ba4fa6111"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "1a05f76e53cfdbadc8bc820109d1ac96c5346aa8", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f3b7aa906883765e2158a07da39d1e4b6d996b61/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3b7aa906883765e2158a07da39d1e4b6d996b61/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=f3b7aa906883765e2158a07da39d1e4b6d996b61", "patch": "@@ -1042,8 +1042,9 @@ fn collect_item(&@trans_ctxt cx, @ast.item i) -> @trans_ctxt {\n     alt (i.node) {\n         case (ast.item_fn(?name, ?f, ?fid)) {\n             cx.items.insert(fid, i);\n-            let vec[TypeRef] args = vec(T_ptr(type_of(cx, f.output)), // outptr.\n-                                        T_taskptr()   // taskptr\n+            let vec[TypeRef] args =\n+                vec(T_ptr(type_of(cx, f.output)), // outptr.\n+                    T_taskptr()   // taskptr\n                                         );\n             let vec[TypeRef] T_explicit_args = vec();\n             for (ast.arg arg in f.inputs) {\n@@ -1066,7 +1067,8 @@ fn collect_item(&@trans_ctxt cx, @ast.item i) -> @trans_ctxt {\n \n fn collect_items(@trans_ctxt cx, @ast.crate crate) {\n \n-    let fold.ast_fold[@trans_ctxt] fld = fold.new_identity_fold[@trans_ctxt]();\n+    let fold.ast_fold[@trans_ctxt] fld =\n+        fold.new_identity_fold[@trans_ctxt]();\n \n     fld = @rec( update_env_for_item = bind collect_item(_,_)\n                 with *fld );"}]}