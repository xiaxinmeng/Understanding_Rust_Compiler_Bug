{"sha": "f674aeba97748a7c55ef088c5b683a3981bee330", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2NzRhZWJhOTc3NDhhN2M1NWVmMDg4YzViNjgzYTM5ODFiZWUzMzA=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2015-11-20T21:32:39Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2015-11-20T21:32:39Z"}, "message": "Add a constant flag to enable and disable execution trac printouts.", "tree": {"sha": "510eb7d1ea2c7df2bf4d5f6b71d884b787599451", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/510eb7d1ea2c7df2bf4d5f6b71d884b787599451"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f674aeba97748a7c55ef088c5b683a3981bee330", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f674aeba97748a7c55ef088c5b683a3981bee330", "html_url": "https://github.com/rust-lang/rust/commit/f674aeba97748a7c55ef088c5b683a3981bee330", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f674aeba97748a7c55ef088c5b683a3981bee330/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7244afea1bd6254f9417b47a2afaaeee15eee1a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7244afea1bd6254f9417b47a2afaaeee15eee1a", "html_url": "https://github.com/rust-lang/rust/commit/c7244afea1bd6254f9417b47a2afaaeee15eee1a"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "6bae0115d97bf9562165ac6da364a4546e534b92", "filename": "src/interpreter.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f674aeba97748a7c55ef088c5b683a3981bee330/src%2Finterpreter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f674aeba97748a7c55ef088c5b683a3981bee330/src%2Finterpreter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter.rs?ref=f674aeba97748a7c55ef088c5b683a3981bee330", "patch": "@@ -6,6 +6,8 @@ use syntax::attr::AttrMetaMethods;\n \n use std::iter;\n \n+const TRACE_EXECUTION: bool = false;\n+\n #[derive(Clone, Debug, PartialEq)]\n enum Value {\n     Uninit,\n@@ -78,6 +80,8 @@ impl<'a, 'tcx> Interpreter<'a, 'tcx> {\n             for stmt in &block_data.statements {\n                 use rustc_mir::repr::StatementKind::*;\n \n+                if TRACE_EXECUTION { println!(\"{:?}\", stmt); }\n+\n                 match stmt.kind {\n                     Assign(ref lvalue, ref rvalue) => {\n                         let index = self.eval_lvalue(lvalue);\n@@ -91,6 +95,8 @@ impl<'a, 'tcx> Interpreter<'a, 'tcx> {\n                 }\n             }\n \n+            if TRACE_EXECUTION { println!(\"{:?}\", block_data.terminator); }\n+\n             match block_data.terminator {\n                 Return => break,\n                 Goto { target } => block = target,"}]}