{"sha": "51ee196235e1b9e02ca5f782c8338bb9ad6c41fc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxZWUxOTYyMzVlMWI5ZTAyY2E1Zjc4MmM4MzM4YmI5YWQ2YzQxZmM=", "commit": {"author": {"name": "Samy Kacimi", "email": "samy.kacimi@protonmail.ch", "date": "2019-07-21T13:51:43Z"}, "committer": {"name": "Samy Kacimi", "email": "samy.kacimi@protonmail.ch", "date": "2019-07-21T14:54:33Z"}, "message": "normalize use of backticks in compiler messages for librustc/hir\n\nhttps://github.com/rust-lang/rust/issues/60532", "tree": {"sha": "9b0cabd9a3f35248bffda79b0354f9ca6ae228a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b0cabd9a3f35248bffda79b0354f9ca6ae228a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51ee196235e1b9e02ca5f782c8338bb9ad6c41fc", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEExrhwoK6DmrCETV5+4ilOki9MVuUFAl00fKkACgkQ4ilOki9M\nVuXVkQv9Gx1KjUcGsU4/TsaN7PjIe3oSr7fu6pvSS16Y804/hAASphWQzE42dP7Y\nfa2u3ZapETpg5g17P02s49fAJt8kP39ddlgAOlcigaIQriNwUzbwgVbl2FzGxyXG\nq5gHNddQBVj9prWdXzSZ+RQUZK0NCOB8nuDloXIg3LXE9Cq7T+xefhfScb2oHIxB\nnCh+ouO8FOImhz+Wh0LdpO99tNlrGMamqRboArhRtKhkGSsASQA7B3+J6xkjyrnc\nN55assU/U2lqAzRRzHLU7SRJ9wPIY5kHK8sC1ec/97ApFt7ggNfVJgE8ONQ2/6ki\n+RJyKaPTIJSF3cHhgIwJgLlK1KHdKEMr0tO3/ecLNKmGXVczlXZKiSqIL5/2NfGD\nfR1v7Y3P+McgZwy0jfVrkAlnrQVrfzuYDeOmDo3hcgCazm1OwMKpch/Totz9v9+5\n+oDhaFsONqOg5ehb9N2AhHaN5vEx16Q2XNlpH68ZQnITS1j+C66HibO+MLn1DbgS\nMsmpNg3C\n=NKIu\n-----END PGP SIGNATURE-----", "payload": "tree 9b0cabd9a3f35248bffda79b0354f9ca6ae228a8\nparent 83dfe7b27cf2debecebedd3b038f9a1c2e05e051\nauthor Samy Kacimi <samy.kacimi@protonmail.ch> 1563717103 +0200\ncommitter Samy Kacimi <samy.kacimi@protonmail.ch> 1563720873 +0200\n\nnormalize use of backticks in compiler messages for librustc/hir\n\nhttps://github.com/rust-lang/rust/issues/60532\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51ee196235e1b9e02ca5f782c8338bb9ad6c41fc", "html_url": "https://github.com/rust-lang/rust/commit/51ee196235e1b9e02ca5f782c8338bb9ad6c41fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51ee196235e1b9e02ca5f782c8338bb9ad6c41fc/comments", "author": null, "committer": null, "parents": [{"sha": "83dfe7b27cf2debecebedd3b038f9a1c2e05e051", "url": "https://api.github.com/repos/rust-lang/rust/commits/83dfe7b27cf2debecebedd3b038f9a1c2e05e051", "html_url": "https://github.com/rust-lang/rust/commit/83dfe7b27cf2debecebedd3b038f9a1c2e05e051"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "057d878a0ab8dc58b64959adc08fa5daa68471c6", "filename": "src/librustc/hir/def_id.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/51ee196235e1b9e02ca5f782c8338bb9ad6c41fc/src%2Flibrustc%2Fhir%2Fdef_id.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51ee196235e1b9e02ca5f782c8338bb9ad6c41fc/src%2Flibrustc%2Fhir%2Fdef_id.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fdef_id.rs?ref=51ee196235e1b9e02ca5f782c8338bb9ad6c41fc", "patch": "@@ -69,14 +69,14 @@ impl CrateNum {\n     pub fn as_usize(self) -> usize {\n         match self {\n             CrateNum::Index(id) => id.as_usize(),\n-            _ => bug!(\"tried to get index of nonstandard crate {:?}\", self),\n+            _ => bug!(\"tried to get index of non-standard crate {:?}\", self),\n         }\n     }\n \n     pub fn as_u32(self) -> u32 {\n         match self {\n             CrateNum::Index(id) => id.as_u32(),\n-            _ => bug!(\"tried to get index of nonstandard crate {:?}\", self),\n+            _ => bug!(\"tried to get index of non-standard crate {:?}\", self),\n         }\n     }\n "}, {"sha": "288fd2714e251a054e7d92aea0b560241049d97f", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/51ee196235e1b9e02ca5f782c8338bb9ad6c41fc/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51ee196235e1b9e02ca5f782c8338bb9ad6c41fc/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=51ee196235e1b9e02ca5f782c8338bb9ad6c41fc", "patch": "@@ -1693,8 +1693,8 @@ impl<'a> LoweringContext<'a> {\n                         if pos == ImplTraitPosition::Binding &&\n                             nightly_options::is_nightly_build() {\n                             help!(err,\n-                                  \"add #![feature(impl_trait_in_bindings)] to the crate attributes \\\n-                                   to enable\");\n+                                  \"add `#![feature(impl_trait_in_bindings)]` to the crate \\\n+                                   attributes to enable\");\n                         }\n                         err.emit();\n                         hir::TyKind::Err"}, {"sha": "84af2a0163ae44dbc6948aa69624f88e7bfb11bc", "filename": "src/test/ui/feature-gates/feature-gate-associated_type_bounds.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/51ee196235e1b9e02ca5f782c8338bb9ad6c41fc/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-associated_type_bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51ee196235e1b9e02ca5f782c8338bb9ad6c41fc/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-associated_type_bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-associated_type_bounds.stderr?ref=51ee196235e1b9e02ca5f782c8338bb9ad6c41fc", "patch": "@@ -121,23 +121,23 @@ error[E0562]: `impl Trait` not allowed outside of function and inherent method r\n LL | const _cdef: impl Tr1<As1: Copy> = S1;\n    |              ^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(impl_trait_in_bindings)] to the crate attributes to enable\n+   = help: add `#![feature(impl_trait_in_bindings)]` to the crate attributes to enable\n \n error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n   --> $DIR/feature-gate-associated_type_bounds.rs:60:15\n    |\n LL | static _sdef: impl Tr1<As1: Copy> = S1;\n    |               ^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(impl_trait_in_bindings)] to the crate attributes to enable\n+   = help: add `#![feature(impl_trait_in_bindings)]` to the crate attributes to enable\n \n error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n   --> $DIR/feature-gate-associated_type_bounds.rs:67:12\n    |\n LL |     let _: impl Tr1<As1: Copy> = S1;\n    |            ^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(impl_trait_in_bindings)] to the crate attributes to enable\n+   = help: add `#![feature(impl_trait_in_bindings)]` to the crate attributes to enable\n \n error: aborting due to 16 previous errors\n "}, {"sha": "bd648b40590ef7549cd191c0b2f47675b64fd64c", "filename": "src/test/ui/feature-gates/feature-gate-impl_trait_in_bindings.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/51ee196235e1b9e02ca5f782c8338bb9ad6c41fc/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-impl_trait_in_bindings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51ee196235e1b9e02ca5f782c8338bb9ad6c41fc/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-impl_trait_in_bindings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-impl_trait_in_bindings.stderr?ref=51ee196235e1b9e02ca5f782c8338bb9ad6c41fc", "patch": "@@ -10,15 +10,15 @@ error[E0562]: `impl Trait` not allowed outside of function and inherent method r\n LL | const FOO: impl Copy = 42;\n    |            ^^^^^^^^^\n    |\n-   = help: add #![feature(impl_trait_in_bindings)] to the crate attributes to enable\n+   = help: add `#![feature(impl_trait_in_bindings)]` to the crate attributes to enable\n \n error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n   --> $DIR/feature-gate-impl_trait_in_bindings.rs:4:13\n    |\n LL | static BAR: impl Copy = 42;\n    |             ^^^^^^^^^\n    |\n-   = help: add #![feature(impl_trait_in_bindings)] to the crate attributes to enable\n+   = help: add `#![feature(impl_trait_in_bindings)]` to the crate attributes to enable\n \n error: aborting due to 3 previous errors\n "}, {"sha": "9895b028a4e26a61fcef6df6f8a2c13537da93c6", "filename": "src/test/ui/impl-trait/where-allowed.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/51ee196235e1b9e02ca5f782c8338bb9ad6c41fc/src%2Ftest%2Fui%2Fimpl-trait%2Fwhere-allowed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51ee196235e1b9e02ca5f782c8338bb9ad6c41fc/src%2Ftest%2Fui%2Fimpl-trait%2Fwhere-allowed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fwhere-allowed.stderr?ref=51ee196235e1b9e02ca5f782c8338bb9ad6c41fc", "patch": "@@ -232,7 +232,7 @@ error[E0562]: `impl Trait` not allowed outside of function and inherent method r\n LL |     let _in_local_variable: impl Fn() = || {};\n    |                             ^^^^^^^^^\n    |\n-   = help: add #![feature(impl_trait_in_bindings)] to the crate attributes to enable\n+   = help: add `#![feature(impl_trait_in_bindings)]` to the crate attributes to enable\n \n error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n   --> $DIR/where-allowed.rs:222:46"}]}