{"sha": "3cf389f88bfec5e0caa6dd2f12c951f6f6b968d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjZjM4OWY4OGJmZWM1ZTBjYWE2ZGQyZjEyYzk1MWY2ZjZiOTY4ZDE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-07-01T14:01:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-01T14:01:36Z"}, "message": "Merge #5171\n\n5171: Better account for project reload r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "4b53b3d36d908e8a17e570614e3e4bfcfe70f02f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b53b3d36d908e8a17e570614e3e4bfcfe70f02f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3cf389f88bfec5e0caa6dd2f12c951f6f6b968d1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe/JdACRBK7hj4Ov3rIwAAdHIIAEf1r4CHcU2YNJpMU2mSvyQa\n0GEEfaOEKlqwGrMfoOpU2DnhkfDQKw6t6Medt5UhhEA38/maZaSt0zJL/1i2MDq6\npbazpT2gyzlQShJj+/gdLhF67R2WFLPT8BCd54nkenCrzZX5DnVYViFcFHv1+0Ui\nUXZjVfaNxmp4hHksglNsu28NjfOUXT4NGdJ6id3zF9bqknki53UKM0sfIQsqb/PH\nrKP9R7MxbG43smF98XmT+tp1qx24xzSqhOwarXH2rEESI0RXqwiN3ejlr2Hah7Dg\nBjrBfy2fptasVDvD4l2OrkBXqE4lArjGmH6g7qHTOcs/prVgnKaJtDdjSxNS8T0=\n=ip9U\n-----END PGP SIGNATURE-----\n", "payload": "tree 4b53b3d36d908e8a17e570614e3e4bfcfe70f02f\nparent 3f94ad332aa22252a46d948888f5b23c0e21cd38\nparent 298adb27b9642adcb566d1e3b709a444d0b0ef06\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1593612096 +0000\ncommitter GitHub <noreply@github.com> 1593612096 +0000\n\nMerge #5171\n\n5171: Better account for project reload r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3cf389f88bfec5e0caa6dd2f12c951f6f6b968d1", "html_url": "https://github.com/rust-lang/rust/commit/3cf389f88bfec5e0caa6dd2f12c951f6f6b968d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3cf389f88bfec5e0caa6dd2f12c951f6f6b968d1/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f94ad332aa22252a46d948888f5b23c0e21cd38", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f94ad332aa22252a46d948888f5b23c0e21cd38", "html_url": "https://github.com/rust-lang/rust/commit/3f94ad332aa22252a46d948888f5b23c0e21cd38"}, {"sha": "298adb27b9642adcb566d1e3b709a444d0b0ef06", "url": "https://api.github.com/repos/rust-lang/rust/commits/298adb27b9642adcb566d1e3b709a444d0b0ef06", "html_url": "https://github.com/rust-lang/rust/commit/298adb27b9642adcb566d1e3b709a444d0b0ef06"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "b7b4edf6611ff3fd78ea8f19aff728fc43f2abaf", "filename": "crates/rust-analyzer/src/global_state.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3cf389f88bfec5e0caa6dd2f12c951f6f6b968d1/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cf389f88bfec5e0caa6dd2f12c951f6f6b968d1/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs?ref=3cf389f88bfec5e0caa6dd2f12c951f6f6b968d1", "patch": "@@ -27,7 +27,7 @@ use crate::{\n     Result,\n };\n \n-#[derive(Eq, PartialEq)]\n+#[derive(Eq, PartialEq, Copy, Clone)]\n pub(crate) enum Status {\n     Loading,\n     Ready,"}, {"sha": "e03038b25827a5adc37b5e87c1a93710b108347f", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3cf389f88bfec5e0caa6dd2f12c951f6f6b968d1/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cf389f88bfec5e0caa6dd2f12c951f6f6b968d1/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=3cf389f88bfec5e0caa6dd2f12c951f6f6b968d1", "patch": "@@ -136,7 +136,7 @@ impl GlobalState {\n             log::info!(\"queued count = {}\", queue_count);\n         }\n \n-        let mut became_ready = false;\n+        let prev_status = self.status;\n         match event {\n             Event::Lsp(msg) => match msg {\n                 lsp_server::Message::Request(req) => self.on_request(loop_start, req)?,\n@@ -168,15 +168,17 @@ impl GlobalState {\n                     }\n                 }\n                 vfs::loader::Message::Progress { n_total, n_done } => {\n-                    if n_total > 0 {\n+                    if n_total == 0 {\n+                        self.status = Status::Ready;\n+                    } else {\n                         let state = if n_done == 0 {\n+                            self.status = Status::Loading;\n                             Progress::Begin\n                         } else if n_done < n_total {\n                             Progress::Report\n                         } else {\n                             assert_eq!(n_done, n_total);\n                             self.status = Status::Ready;\n-                            became_ready = true;\n                             Progress::End\n                         };\n                         self.report_progress(\n@@ -233,13 +235,13 @@ impl GlobalState {\n         }\n \n         let state_changed = self.process_changes();\n-        if became_ready {\n+        if prev_status == Status::Loading && self.status == Status::Ready {\n             if let Some(flycheck) = &self.flycheck {\n                 flycheck.handle.update();\n             }\n         }\n \n-        if self.status == Status::Ready && (state_changed || became_ready) {\n+        if self.status == Status::Ready && (state_changed || prev_status == Status::Loading) {\n             let subscriptions = self\n                 .mem_docs\n                 .iter()"}]}