{"sha": "2a7b5117eabab43cb03d69b120b5ff965464ea71", "node_id": "C_kwDOAAsO6NoAKDJhN2I1MTE3ZWFiYWI0M2NiMDNkNjliMTIwYjVmZjk2NTQ2NGVhNzE", "commit": {"author": {"name": "Jubilee Young", "email": "workingjubilee@gmail.com", "date": "2021-10-05T00:55:38Z"}, "committer": {"name": "Jubilee Young", "email": "workingjubilee@gmail.com", "date": "2021-10-05T01:05:15Z"}, "message": "Re-bless src/test/ui/simd", "tree": {"sha": "e32a4aa2350e2e89751a0a593d43073e5ac5ef2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e32a4aa2350e2e89751a0a593d43073e5ac5ef2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a7b5117eabab43cb03d69b120b5ff965464ea71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a7b5117eabab43cb03d69b120b5ff965464ea71", "html_url": "https://github.com/rust-lang/rust/commit/2a7b5117eabab43cb03d69b120b5ff965464ea71", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a7b5117eabab43cb03d69b120b5ff965464ea71/comments", "author": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22dc82915a6a9797229e2e2b61bd1d977947d838", "url": "https://api.github.com/repos/rust-lang/rust/commits/22dc82915a6a9797229e2e2b61bd1d977947d838", "html_url": "https://github.com/rust-lang/rust/commit/22dc82915a6a9797229e2e2b61bd1d977947d838"}], "stats": {"total": 168, "additions": 84, "deletions": 84}, "files": [{"sha": "765215c393977b54b3ee2204c30400390cae1915", "filename": "src/test/ui/simd/array-trait.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2a7b5117eabab43cb03d69b120b5ff965464ea71/src%2Ftest%2Fui%2Fsimd%2Farray-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2a7b5117eabab43cb03d69b120b5ff965464ea71/src%2Ftest%2Fui%2Fsimd%2Farray-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd%2Farray-trait.stderr?ref=2a7b5117eabab43cb03d69b120b5ff965464ea71", "patch": "@@ -1,5 +1,5 @@\n error: unconstrained generic constant\n-  --> $DIR/simd-array-trait.rs:23:23\n+  --> $DIR/array-trait.rs:23:23\n    |\n LL | pub struct T<S: Simd>([S::Lane; S::SIZE]);\n    |                       ^^^^^^^^^^^^^^^^^^"}, {"sha": "0f0a7ea6652d0b9c4ac4c561090fe58d42e41c4b", "filename": "src/test/ui/simd/intrinsic/generic-arithmetic-2.stderr", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/2a7b5117eabab43cb03d69b120b5ff965464ea71/src%2Ftest%2Fui%2Fsimd%2Fintrinsic%2Fgeneric-arithmetic-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2a7b5117eabab43cb03d69b120b5ff965464ea71/src%2Ftest%2Fui%2Fsimd%2Fintrinsic%2Fgeneric-arithmetic-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd%2Fintrinsic%2Fgeneric-arithmetic-2.stderr?ref=2a7b5117eabab43cb03d69b120b5ff965464ea71", "patch": "@@ -1,89 +1,89 @@\n error[E0511]: invalid monomorphization of `simd_add` intrinsic: expected SIMD input type, found non-SIMD `i32`\n-  --> $DIR/simd-intrinsic-generic-arithmetic.rs:69:9\n+  --> $DIR/generic-arithmetic-2.rs:69:9\n    |\n LL |         simd_add(0, 0);\n    |         ^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_sub` intrinsic: expected SIMD input type, found non-SIMD `i32`\n-  --> $DIR/simd-intrinsic-generic-arithmetic.rs:71:9\n+  --> $DIR/generic-arithmetic-2.rs:71:9\n    |\n LL |         simd_sub(0, 0);\n    |         ^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_mul` intrinsic: expected SIMD input type, found non-SIMD `i32`\n-  --> $DIR/simd-intrinsic-generic-arithmetic.rs:73:9\n+  --> $DIR/generic-arithmetic-2.rs:73:9\n    |\n LL |         simd_mul(0, 0);\n    |         ^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_div` intrinsic: expected SIMD input type, found non-SIMD `i32`\n-  --> $DIR/simd-intrinsic-generic-arithmetic.rs:75:9\n+  --> $DIR/generic-arithmetic-2.rs:75:9\n    |\n LL |         simd_div(0, 0);\n    |         ^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_shl` intrinsic: expected SIMD input type, found non-SIMD `i32`\n-  --> $DIR/simd-intrinsic-generic-arithmetic.rs:77:9\n+  --> $DIR/generic-arithmetic-2.rs:77:9\n    |\n LL |         simd_shl(0, 0);\n    |         ^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_shr` intrinsic: expected SIMD input type, found non-SIMD `i32`\n-  --> $DIR/simd-intrinsic-generic-arithmetic.rs:79:9\n+  --> $DIR/generic-arithmetic-2.rs:79:9\n    |\n LL |         simd_shr(0, 0);\n    |         ^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_and` intrinsic: expected SIMD input type, found non-SIMD `i32`\n-  --> $DIR/simd-intrinsic-generic-arithmetic.rs:81:9\n+  --> $DIR/generic-arithmetic-2.rs:81:9\n    |\n LL |         simd_and(0, 0);\n    |         ^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_or` intrinsic: expected SIMD input type, found non-SIMD `i32`\n-  --> $DIR/simd-intrinsic-generic-arithmetic.rs:83:9\n+  --> $DIR/generic-arithmetic-2.rs:83:9\n    |\n LL |         simd_or(0, 0);\n    |         ^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_xor` intrinsic: expected SIMD input type, found non-SIMD `i32`\n-  --> $DIR/simd-intrinsic-generic-arithmetic.rs:85:9\n+  --> $DIR/generic-arithmetic-2.rs:85:9\n    |\n LL |         simd_xor(0, 0);\n    |         ^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_neg` intrinsic: expected SIMD input type, found non-SIMD `i32`\n-  --> $DIR/simd-intrinsic-generic-arithmetic.rs:88:9\n+  --> $DIR/generic-arithmetic-2.rs:88:9\n    |\n LL |         simd_neg(0);\n    |         ^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_shl` intrinsic: unsupported operation on `f32x4` with element `f32`\n-  --> $DIR/simd-intrinsic-generic-arithmetic.rs:92:9\n+  --> $DIR/generic-arithmetic-2.rs:92:9\n    |\n LL |         simd_shl(z, z);\n    |         ^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_shr` intrinsic: unsupported operation on `f32x4` with element `f32`\n-  --> $DIR/simd-intrinsic-generic-arithmetic.rs:94:9\n+  --> $DIR/generic-arithmetic-2.rs:94:9\n    |\n LL |         simd_shr(z, z);\n    |         ^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_and` intrinsic: unsupported operation on `f32x4` with element `f32`\n-  --> $DIR/simd-intrinsic-generic-arithmetic.rs:96:9\n+  --> $DIR/generic-arithmetic-2.rs:96:9\n    |\n LL |         simd_and(z, z);\n    |         ^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_or` intrinsic: unsupported operation on `f32x4` with element `f32`\n-  --> $DIR/simd-intrinsic-generic-arithmetic.rs:98:9\n+  --> $DIR/generic-arithmetic-2.rs:98:9\n    |\n LL |         simd_or(z, z);\n    |         ^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_xor` intrinsic: unsupported operation on `f32x4` with element `f32`\n-  --> $DIR/simd-intrinsic-generic-arithmetic.rs:100:9\n+  --> $DIR/generic-arithmetic-2.rs:100:9\n    |\n LL |         simd_xor(z, z);\n    |         ^^^^^^^^^^^^^^"}, {"sha": "f349cb56560ccdb03ddaaf7908533b80e15fa306", "filename": "src/test/ui/simd/intrinsic/generic-arithmetic-saturating-2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2a7b5117eabab43cb03d69b120b5ff965464ea71/src%2Ftest%2Fui%2Fsimd%2Fintrinsic%2Fgeneric-arithmetic-saturating-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2a7b5117eabab43cb03d69b120b5ff965464ea71/src%2Ftest%2Fui%2Fsimd%2Fintrinsic%2Fgeneric-arithmetic-saturating-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd%2Fintrinsic%2Fgeneric-arithmetic-saturating-2.stderr?ref=2a7b5117eabab43cb03d69b120b5ff965464ea71", "patch": "@@ -1,11 +1,11 @@\n error[E0511]: invalid monomorphization of `simd_saturating_add` intrinsic: expected element type `f32` of vector type `f32x4` to be a signed or unsigned integer type\n-  --> $DIR/simd-intrinsic-generic-arithmetic-saturating.rs:33:9\n+  --> $DIR/generic-arithmetic-saturating-2.rs:33:9\n    |\n LL |         simd_saturating_add(z, z);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_saturating_sub` intrinsic: expected element type `f32` of vector type `f32x4` to be a signed or unsigned integer type\n-  --> $DIR/simd-intrinsic-generic-arithmetic-saturating.rs:35:9\n+  --> $DIR/generic-arithmetic-saturating-2.rs:35:9\n    |\n LL |         simd_saturating_sub(z, z);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "5aaae68cafb342501e769ee7a9d8326873a61b8e", "filename": "src/test/ui/simd/intrinsic/generic-bitmask.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2a7b5117eabab43cb03d69b120b5ff965464ea71/src%2Ftest%2Fui%2Fsimd%2Fintrinsic%2Fgeneric-bitmask.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2a7b5117eabab43cb03d69b120b5ff965464ea71/src%2Ftest%2Fui%2Fsimd%2Fintrinsic%2Fgeneric-bitmask.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd%2Fintrinsic%2Fgeneric-bitmask.stderr?ref=2a7b5117eabab43cb03d69b120b5ff965464ea71", "patch": "@@ -1,29 +1,29 @@\n error[E0511]: invalid monomorphization of `simd_bitmask` intrinsic: bitmask `u16`, expected `u8`\n-  --> $DIR/simd-intrinsic-generic-bitmask.rs:53:22\n+  --> $DIR/generic-bitmask.rs:53:22\n    |\n LL |         let _: u16 = simd_bitmask(m2);\n    |                      ^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_bitmask` intrinsic: bitmask `u16`, expected `u8`\n-  --> $DIR/simd-intrinsic-generic-bitmask.rs:56:22\n+  --> $DIR/generic-bitmask.rs:56:22\n    |\n LL |         let _: u16 = simd_bitmask(m8);\n    |                      ^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_bitmask` intrinsic: bitmask `u32`, expected `u16`\n-  --> $DIR/simd-intrinsic-generic-bitmask.rs:59:22\n+  --> $DIR/generic-bitmask.rs:59:22\n    |\n LL |         let _: u32 = simd_bitmask(m16);\n    |                      ^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_bitmask` intrinsic: bitmask `u64`, expected `u32`\n-  --> $DIR/simd-intrinsic-generic-bitmask.rs:62:22\n+  --> $DIR/generic-bitmask.rs:62:22\n    |\n LL |         let _: u64 = simd_bitmask(m32);\n    |                      ^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_bitmask` intrinsic: bitmask `u128`, expected `u64`\n-  --> $DIR/simd-intrinsic-generic-bitmask.rs:65:23\n+  --> $DIR/generic-bitmask.rs:65:23\n    |\n LL |         let _: u128 = simd_bitmask(m64);\n    |                       ^^^^^^^^^^^^^^^^^"}, {"sha": "2226bbbe1bd552256f99c1453a6003722fa44f31", "filename": "src/test/ui/simd/intrinsic/generic-cast.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2a7b5117eabab43cb03d69b120b5ff965464ea71/src%2Ftest%2Fui%2Fsimd%2Fintrinsic%2Fgeneric-cast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2a7b5117eabab43cb03d69b120b5ff965464ea71/src%2Ftest%2Fui%2Fsimd%2Fintrinsic%2Fgeneric-cast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd%2Fintrinsic%2Fgeneric-cast.stderr?ref=2a7b5117eabab43cb03d69b120b5ff965464ea71", "patch": "@@ -1,23 +1,23 @@\n error[E0511]: invalid monomorphization of `simd_cast` intrinsic: expected SIMD input type, found non-SIMD `i32`\n-  --> $DIR/simd-intrinsic-generic-cast.rs:34:9\n+  --> $DIR/generic-cast.rs:34:9\n    |\n LL |         simd_cast::<i32, i32>(0);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_cast` intrinsic: expected SIMD input type, found non-SIMD `i32`\n-  --> $DIR/simd-intrinsic-generic-cast.rs:36:9\n+  --> $DIR/generic-cast.rs:36:9\n    |\n LL |         simd_cast::<i32, i32x4>(0);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_cast` intrinsic: expected SIMD return type, found non-SIMD `i32`\n-  --> $DIR/simd-intrinsic-generic-cast.rs:38:9\n+  --> $DIR/generic-cast.rs:38:9\n    |\n LL |         simd_cast::<i32x4, i32>(x);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_cast` intrinsic: expected return type with length 4 (same as input type `i32x4`), found `i32x8` with length 8\n-  --> $DIR/simd-intrinsic-generic-cast.rs:40:9\n+  --> $DIR/generic-cast.rs:40:9\n    |\n LL |         simd_cast::<_, i32x8>(x);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "0eae2688bced07e92b263fd46dad6c0d7628bcce", "filename": "src/test/ui/simd/intrinsic/generic-comparison.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/2a7b5117eabab43cb03d69b120b5ff965464ea71/src%2Ftest%2Fui%2Fsimd%2Fintrinsic%2Fgeneric-comparison.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2a7b5117eabab43cb03d69b120b5ff965464ea71/src%2Ftest%2Fui%2Fsimd%2Fintrinsic%2Fgeneric-comparison.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd%2Fintrinsic%2Fgeneric-comparison.stderr?ref=2a7b5117eabab43cb03d69b120b5ff965464ea71", "patch": "@@ -1,107 +1,107 @@\n error[E0511]: invalid monomorphization of `simd_eq` intrinsic: expected SIMD input type, found non-SIMD `i32`\n-  --> $DIR/simd-intrinsic-generic-comparison.rs:28:9\n+  --> $DIR/generic-comparison.rs:28:9\n    |\n LL |         simd_eq::<i32, i32>(0, 0);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_ne` intrinsic: expected SIMD input type, found non-SIMD `i32`\n-  --> $DIR/simd-intrinsic-generic-comparison.rs:30:9\n+  --> $DIR/generic-comparison.rs:30:9\n    |\n LL |         simd_ne::<i32, i32>(0, 0);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_lt` intrinsic: expected SIMD input type, found non-SIMD `i32`\n-  --> $DIR/simd-intrinsic-generic-comparison.rs:32:9\n+  --> $DIR/generic-comparison.rs:32:9\n    |\n LL |         simd_lt::<i32, i32>(0, 0);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_le` intrinsic: expected SIMD input type, found non-SIMD `i32`\n-  --> $DIR/simd-intrinsic-generic-comparison.rs:34:9\n+  --> $DIR/generic-comparison.rs:34:9\n    |\n LL |         simd_le::<i32, i32>(0, 0);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_gt` intrinsic: expected SIMD input type, found non-SIMD `i32`\n-  --> $DIR/simd-intrinsic-generic-comparison.rs:36:9\n+  --> $DIR/generic-comparison.rs:36:9\n    |\n LL |         simd_gt::<i32, i32>(0, 0);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_ge` intrinsic: expected SIMD input type, found non-SIMD `i32`\n-  --> $DIR/simd-intrinsic-generic-comparison.rs:38:9\n+  --> $DIR/generic-comparison.rs:38:9\n    |\n LL |         simd_ge::<i32, i32>(0, 0);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_eq` intrinsic: expected SIMD return type, found non-SIMD `i32`\n-  --> $DIR/simd-intrinsic-generic-comparison.rs:41:9\n+  --> $DIR/generic-comparison.rs:41:9\n    |\n LL |         simd_eq::<_, i32>(x, x);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_ne` intrinsic: expected SIMD return type, found non-SIMD `i32`\n-  --> $DIR/simd-intrinsic-generic-comparison.rs:43:9\n+  --> $DIR/generic-comparison.rs:43:9\n    |\n LL |         simd_ne::<_, i32>(x, x);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_lt` intrinsic: expected SIMD return type, found non-SIMD `i32`\n-  --> $DIR/simd-intrinsic-generic-comparison.rs:45:9\n+  --> $DIR/generic-comparison.rs:45:9\n    |\n LL |         simd_lt::<_, i32>(x, x);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_le` intrinsic: expected SIMD return type, found non-SIMD `i32`\n-  --> $DIR/simd-intrinsic-generic-comparison.rs:47:9\n+  --> $DIR/generic-comparison.rs:47:9\n    |\n LL |         simd_le::<_, i32>(x, x);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_gt` intrinsic: expected SIMD return type, found non-SIMD `i32`\n-  --> $DIR/simd-intrinsic-generic-comparison.rs:49:9\n+  --> $DIR/generic-comparison.rs:49:9\n    |\n LL |         simd_gt::<_, i32>(x, x);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_ge` intrinsic: expected SIMD return type, found non-SIMD `i32`\n-  --> $DIR/simd-intrinsic-generic-comparison.rs:51:9\n+  --> $DIR/generic-comparison.rs:51:9\n    |\n LL |         simd_ge::<_, i32>(x, x);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_eq` intrinsic: expected return type with length 4 (same as input type `i32x4`), found `i16x8` with length 8\n-  --> $DIR/simd-intrinsic-generic-comparison.rs:54:9\n+  --> $DIR/generic-comparison.rs:54:9\n    |\n LL |         simd_eq::<_, i16x8>(x, x);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_ne` intrinsic: expected return type with length 4 (same as input type `i32x4`), found `i16x8` with length 8\n-  --> $DIR/simd-intrinsic-generic-comparison.rs:56:9\n+  --> $DIR/generic-comparison.rs:56:9\n    |\n LL |         simd_ne::<_, i16x8>(x, x);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_lt` intrinsic: expected return type with length 4 (same as input type `i32x4`), found `i16x8` with length 8\n-  --> $DIR/simd-intrinsic-generic-comparison.rs:58:9\n+  --> $DIR/generic-comparison.rs:58:9\n    |\n LL |         simd_lt::<_, i16x8>(x, x);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_le` intrinsic: expected return type with length 4 (same as input type `i32x4`), found `i16x8` with length 8\n-  --> $DIR/simd-intrinsic-generic-comparison.rs:60:9\n+  --> $DIR/generic-comparison.rs:60:9\n    |\n LL |         simd_le::<_, i16x8>(x, x);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_gt` intrinsic: expected return type with length 4 (same as input type `i32x4`), found `i16x8` with length 8\n-  --> $DIR/simd-intrinsic-generic-comparison.rs:62:9\n+  --> $DIR/generic-comparison.rs:62:9\n    |\n LL |         simd_gt::<_, i16x8>(x, x);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_ge` intrinsic: expected return type with length 4 (same as input type `i32x4`), found `i16x8` with length 8\n-  --> $DIR/simd-intrinsic-generic-comparison.rs:64:9\n+  --> $DIR/generic-comparison.rs:64:9\n    |\n LL |         simd_ge::<_, i16x8>(x, x);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "5b423f7040f90d49be3ab2e7abd05d9755812067", "filename": "src/test/ui/simd/intrinsic/generic-elements.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/2a7b5117eabab43cb03d69b120b5ff965464ea71/src%2Ftest%2Fui%2Fsimd%2Fintrinsic%2Fgeneric-elements.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2a7b5117eabab43cb03d69b120b5ff965464ea71/src%2Ftest%2Fui%2Fsimd%2Fintrinsic%2Fgeneric-elements.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd%2Fintrinsic%2Fgeneric-elements.stderr?ref=2a7b5117eabab43cb03d69b120b5ff965464ea71", "patch": "@@ -1,71 +1,71 @@\n error[E0511]: invalid monomorphization of `simd_insert` intrinsic: expected SIMD input type, found non-SIMD `i32`\n-  --> $DIR/simd-intrinsic-generic-elements.rs:46:9\n+  --> $DIR/generic-elements.rs:46:9\n    |\n LL |         simd_insert(0, 0, 0);\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_insert` intrinsic: expected inserted type `i32` (element of input `i32x4`), found `f64`\n-  --> $DIR/simd-intrinsic-generic-elements.rs:48:9\n+  --> $DIR/generic-elements.rs:48:9\n    |\n LL |         simd_insert(x, 0, 1.0);\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_extract` intrinsic: expected return type `i32` (element of input `i32x4`), found `f32`\n-  --> $DIR/simd-intrinsic-generic-elements.rs:50:9\n+  --> $DIR/generic-elements.rs:50:9\n    |\n LL |         simd_extract::<_, f32>(x, 0);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_shuffle2` intrinsic: expected SIMD input type, found non-SIMD `i32`\n-  --> $DIR/simd-intrinsic-generic-elements.rs:54:9\n+  --> $DIR/generic-elements.rs:54:9\n    |\n LL |         simd_shuffle2::<i32, i32>(0, 0, IDX2);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_shuffle4` intrinsic: expected SIMD input type, found non-SIMD `i32`\n-  --> $DIR/simd-intrinsic-generic-elements.rs:57:9\n+  --> $DIR/generic-elements.rs:57:9\n    |\n LL |         simd_shuffle4::<i32, i32>(0, 0, IDX4);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_shuffle8` intrinsic: expected SIMD input type, found non-SIMD `i32`\n-  --> $DIR/simd-intrinsic-generic-elements.rs:60:9\n+  --> $DIR/generic-elements.rs:60:9\n    |\n LL |         simd_shuffle8::<i32, i32>(0, 0, IDX8);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_shuffle2` intrinsic: expected return element type `i32` (element of input `i32x4`), found `f32x2` with element type `f32`\n-  --> $DIR/simd-intrinsic-generic-elements.rs:63:9\n+  --> $DIR/generic-elements.rs:63:9\n    |\n LL |         simd_shuffle2::<_, f32x2>(x, x, IDX2);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_shuffle4` intrinsic: expected return element type `i32` (element of input `i32x4`), found `f32x4` with element type `f32`\n-  --> $DIR/simd-intrinsic-generic-elements.rs:65:9\n+  --> $DIR/generic-elements.rs:65:9\n    |\n LL |         simd_shuffle4::<_, f32x4>(x, x, IDX4);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_shuffle8` intrinsic: expected return element type `i32` (element of input `i32x4`), found `f32x8` with element type `f32`\n-  --> $DIR/simd-intrinsic-generic-elements.rs:67:9\n+  --> $DIR/generic-elements.rs:67:9\n    |\n LL |         simd_shuffle8::<_, f32x8>(x, x, IDX8);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_shuffle2` intrinsic: expected return type of length 2, found `i32x8` with length 8\n-  --> $DIR/simd-intrinsic-generic-elements.rs:70:9\n+  --> $DIR/generic-elements.rs:70:9\n    |\n LL |         simd_shuffle2::<_, i32x8>(x, x, IDX2);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_shuffle4` intrinsic: expected return type of length 4, found `i32x8` with length 8\n-  --> $DIR/simd-intrinsic-generic-elements.rs:72:9\n+  --> $DIR/generic-elements.rs:72:9\n    |\n LL |         simd_shuffle4::<_, i32x8>(x, x, IDX4);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_shuffle8` intrinsic: expected return type of length 8, found `i32x2` with length 2\n-  --> $DIR/simd-intrinsic-generic-elements.rs:74:9\n+  --> $DIR/generic-elements.rs:74:9\n    |\n LL |         simd_shuffle8::<_, i32x2>(x, x, IDX8);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "1028faf69a7bc93170145a510e49df89d8a6e34b", "filename": "src/test/ui/simd/intrinsic/generic-reduction.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/2a7b5117eabab43cb03d69b120b5ff965464ea71/src%2Ftest%2Fui%2Fsimd%2Fintrinsic%2Fgeneric-reduction.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2a7b5117eabab43cb03d69b120b5ff965464ea71/src%2Ftest%2Fui%2Fsimd%2Fintrinsic%2Fgeneric-reduction.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd%2Fintrinsic%2Fgeneric-reduction.stderr?ref=2a7b5117eabab43cb03d69b120b5ff965464ea71", "patch": "@@ -1,59 +1,59 @@\n error[E0511]: invalid monomorphization of `simd_reduce_add_ordered` intrinsic: expected return type `f32` (element of input `f32x4`), found `i32`\n-  --> $DIR/simd-intrinsic-generic-reduction.rs:34:9\n+  --> $DIR/generic-reduction.rs:34:9\n    |\n LL |         simd_reduce_add_ordered(z, 0);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_reduce_mul_ordered` intrinsic: expected return type `f32` (element of input `f32x4`), found `i32`\n-  --> $DIR/simd-intrinsic-generic-reduction.rs:36:9\n+  --> $DIR/generic-reduction.rs:36:9\n    |\n LL |         simd_reduce_mul_ordered(z, 1);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_reduce_and` intrinsic: expected return type `u32` (element of input `u32x4`), found `f32`\n-  --> $DIR/simd-intrinsic-generic-reduction.rs:39:22\n+  --> $DIR/generic-reduction.rs:39:22\n    |\n LL |         let _: f32 = simd_reduce_and(x);\n    |                      ^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_reduce_or` intrinsic: expected return type `u32` (element of input `u32x4`), found `f32`\n-  --> $DIR/simd-intrinsic-generic-reduction.rs:41:22\n+  --> $DIR/generic-reduction.rs:41:22\n    |\n LL |         let _: f32 = simd_reduce_or(x);\n    |                      ^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_reduce_xor` intrinsic: expected return type `u32` (element of input `u32x4`), found `f32`\n-  --> $DIR/simd-intrinsic-generic-reduction.rs:43:22\n+  --> $DIR/generic-reduction.rs:43:22\n    |\n LL |         let _: f32 = simd_reduce_xor(x);\n    |                      ^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_reduce_and` intrinsic: unsupported simd_reduce_and from `f32x4` with element `f32` to `f32`\n-  --> $DIR/simd-intrinsic-generic-reduction.rs:46:22\n+  --> $DIR/generic-reduction.rs:46:22\n    |\n LL |         let _: f32 = simd_reduce_and(z);\n    |                      ^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_reduce_or` intrinsic: unsupported simd_reduce_or from `f32x4` with element `f32` to `f32`\n-  --> $DIR/simd-intrinsic-generic-reduction.rs:48:22\n+  --> $DIR/generic-reduction.rs:48:22\n    |\n LL |         let _: f32 = simd_reduce_or(z);\n    |                      ^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_reduce_xor` intrinsic: unsupported simd_reduce_xor from `f32x4` with element `f32` to `f32`\n-  --> $DIR/simd-intrinsic-generic-reduction.rs:50:22\n+  --> $DIR/generic-reduction.rs:50:22\n    |\n LL |         let _: f32 = simd_reduce_xor(z);\n    |                      ^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_reduce_all` intrinsic: unsupported simd_reduce_all from `f32x4` with element `f32` to `bool`\n-  --> $DIR/simd-intrinsic-generic-reduction.rs:53:23\n+  --> $DIR/generic-reduction.rs:53:23\n    |\n LL |         let _: bool = simd_reduce_all(z);\n    |                       ^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_reduce_any` intrinsic: unsupported simd_reduce_any from `f32x4` with element `f32` to `bool`\n-  --> $DIR/simd-intrinsic-generic-reduction.rs:55:23\n+  --> $DIR/generic-reduction.rs:55:23\n    |\n LL |         let _: bool = simd_reduce_any(z);\n    |                       ^^^^^^^^^^^^^^^^^^"}, {"sha": "c53d581745a7c4227249f7c3677ce12258250a30", "filename": "src/test/ui/simd/intrinsic/generic-select.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/2a7b5117eabab43cb03d69b120b5ff965464ea71/src%2Ftest%2Fui%2Fsimd%2Fintrinsic%2Fgeneric-select.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2a7b5117eabab43cb03d69b120b5ff965464ea71/src%2Ftest%2Fui%2Fsimd%2Fintrinsic%2Fgeneric-select.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd%2Fintrinsic%2Fgeneric-select.stderr?ref=2a7b5117eabab43cb03d69b120b5ff965464ea71", "patch": "@@ -1,47 +1,47 @@\n error[E0511]: invalid monomorphization of `simd_select` intrinsic: mismatched lengths: mask length `8` != other vector length `4`\n-  --> $DIR/simd-intrinsic-generic-select.rs:40:9\n+  --> $DIR/generic-select.rs:40:9\n    |\n LL |         simd_select(m8, x, x);\n    |         ^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_select` intrinsic: mask element type is `u32`, expected `i_`\n-  --> $DIR/simd-intrinsic-generic-select.rs:43:9\n+  --> $DIR/generic-select.rs:43:9\n    |\n LL |         simd_select(x, x, x);\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_select` intrinsic: mask element type is `f32`, expected `i_`\n-  --> $DIR/simd-intrinsic-generic-select.rs:46:9\n+  --> $DIR/generic-select.rs:46:9\n    |\n LL |         simd_select(z, z, z);\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_select` intrinsic: expected SIMD argument type, found non-SIMD `u32`\n-  --> $DIR/simd-intrinsic-generic-select.rs:49:9\n+  --> $DIR/generic-select.rs:49:9\n    |\n LL |         simd_select(m4, 0u32, 1u32);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_select_bitmask` intrinsic: mismatched lengths: mask length `16` != other vector length `4`\n-  --> $DIR/simd-intrinsic-generic-select.rs:52:9\n+  --> $DIR/generic-select.rs:52:9\n    |\n LL |         simd_select_bitmask(0u16, x, x);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_select_bitmask` intrinsic: expected SIMD argument type, found non-SIMD `u32`\n-  --> $DIR/simd-intrinsic-generic-select.rs:55:9\n+  --> $DIR/generic-select.rs:55:9\n    |\n LL |         simd_select_bitmask(0u8, 1u32, 2u32);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_select_bitmask` intrinsic: `f32` is not an integral type\n-  --> $DIR/simd-intrinsic-generic-select.rs:58:9\n+  --> $DIR/generic-select.rs:58:9\n    |\n LL |         simd_select_bitmask(0.0f32, x, x);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_select_bitmask` intrinsic: `&str` is not an integral type\n-  --> $DIR/simd-intrinsic-generic-select.rs:61:9\n+  --> $DIR/generic-select.rs:61:9\n    |\n LL |         simd_select_bitmask(\"x\", x, x);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "44c57cd7c47bcc22301b3fab4235750751ba835c", "filename": "src/test/ui/simd/intrinsic/generic-shuffle.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2a7b5117eabab43cb03d69b120b5ff965464ea71/src%2Ftest%2Fui%2Fsimd%2Fintrinsic%2Fgeneric-shuffle.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2a7b5117eabab43cb03d69b120b5ff965464ea71/src%2Ftest%2Fui%2Fsimd%2Fintrinsic%2Fgeneric-shuffle.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd%2Fintrinsic%2Fgeneric-shuffle.stderr?ref=2a7b5117eabab43cb03d69b120b5ff965464ea71", "patch": "@@ -1,17 +1,17 @@\n error[E0511]: invalid monomorphization of `simd_shuffle` intrinsic: expected return type of length 2, found `Simd<u32, 4_usize>` with length 4\n-  --> $DIR/simd-intrinsic-generic-shuffle.rs:24:31\n+  --> $DIR/generic-shuffle.rs:24:31\n    |\n LL |         let _: Simd<u32, 4> = simd_shuffle(v, v, I);\n    |                               ^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_shuffle` intrinsic: expected return element type `u32` (element of input `Simd<u32, 4_usize>`), found `Simd<f32, 2_usize>` with element type `f32`\n-  --> $DIR/simd-intrinsic-generic-shuffle.rs:27:31\n+  --> $DIR/generic-shuffle.rs:27:31\n    |\n LL |         let _: Simd<f32, 2> = simd_shuffle(v, v, I);\n    |                               ^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_shuffle` intrinsic: simd_shuffle index must be an array of `u32`, got `[f32; 2]`\n-  --> $DIR/simd-intrinsic-generic-shuffle.rs:30:31\n+  --> $DIR/generic-shuffle.rs:30:31\n    |\n LL |         let _: Simd<u32, 2> = simd_shuffle(v, v, I2);\n    |                               ^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "f122d8bb0dc6724668caa4d6e32d121f1cf979f9", "filename": "src/test/ui/simd/type-len.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2a7b5117eabab43cb03d69b120b5ff965464ea71/src%2Ftest%2Fui%2Fsimd%2Ftype-len.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2a7b5117eabab43cb03d69b120b5ff965464ea71/src%2Ftest%2Fui%2Fsimd%2Ftype-len.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd%2Ftype-len.stderr?ref=2a7b5117eabab43cb03d69b120b5ff965464ea71", "patch": "@@ -1,35 +1,35 @@\n error[E0075]: SIMD vector cannot be empty\n-  --> $DIR/simd-type.rs:6:1\n+  --> $DIR/type-len.rs:6:1\n    |\n LL | struct empty;\n    | ^^^^^^^^^^^^^\n \n error[E0075]: SIMD vector cannot be empty\n-  --> $DIR/simd-type.rs:9:1\n+  --> $DIR/type-len.rs:9:1\n    |\n LL | struct empty2([f32; 0]);\n    | ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0076]: SIMD vector should be homogeneous\n-  --> $DIR/simd-type.rs:15:1\n+  --> $DIR/type-len.rs:15:1\n    |\n LL | struct i64f64(i64, f64);\n    | ^^^^^^^^^^^^^^^^^^^^^^^^ SIMD elements must have the same type\n \n error[E0077]: SIMD vector element type should be a primitive scalar (integer/float/pointer) type\n-  --> $DIR/simd-type.rs:20:1\n+  --> $DIR/type-len.rs:20:1\n    |\n LL | struct FooV(Foo, Foo);\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0077]: SIMD vector element type should be a primitive scalar (integer/float/pointer) type\n-  --> $DIR/simd-type.rs:23:1\n+  --> $DIR/type-len.rs:23:1\n    |\n LL | struct FooV2([Foo; 2]);\n    | ^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0075]: SIMD vector cannot have more than 32768 elements\n-  --> $DIR/simd-type.rs:26:1\n+  --> $DIR/type-len.rs:26:1\n    |\n LL | struct TooBig([f32; 65536]);\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}]}