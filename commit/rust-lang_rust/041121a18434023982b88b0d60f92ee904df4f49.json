{"sha": "041121a18434023982b88b0d60f92ee904df4f49", "node_id": "C_kwDOAAsO6NoAKDA0MTEyMWExODQzNDAyMzk4MmI4OGIwZDYwZjkyZWU5MDRkZjRmNDk", "commit": {"author": {"name": "Martin Gammels\u00e6ter", "email": "martin@mg.am", "date": "2022-04-13T15:46:29Z"}, "committer": {"name": "Martin Gammels\u00e6ter", "email": "martin@mg.am", "date": "2022-04-16T15:42:27Z"}, "message": "Optimize relate_substs by extracting match\n\nThere was no need to keep doing the match inside the iterator.", "tree": {"sha": "ac1d8983f09440129c2c56e68519ea7868a9c7ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac1d8983f09440129c2c56e68519ea7868a9c7ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/041121a18434023982b88b0d60f92ee904df4f49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/041121a18434023982b88b0d60f92ee904df4f49", "html_url": "https://github.com/rust-lang/rust/commit/041121a18434023982b88b0d60f92ee904df4f49", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/041121a18434023982b88b0d60f92ee904df4f49/comments", "author": {"login": "martingms", "id": 458783, "node_id": "MDQ6VXNlcjQ1ODc4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/458783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martingms", "html_url": "https://github.com/martingms", "followers_url": "https://api.github.com/users/martingms/followers", "following_url": "https://api.github.com/users/martingms/following{/other_user}", "gists_url": "https://api.github.com/users/martingms/gists{/gist_id}", "starred_url": "https://api.github.com/users/martingms/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martingms/subscriptions", "organizations_url": "https://api.github.com/users/martingms/orgs", "repos_url": "https://api.github.com/users/martingms/repos", "events_url": "https://api.github.com/users/martingms/events{/privacy}", "received_events_url": "https://api.github.com/users/martingms/received_events", "type": "User", "site_admin": false}, "committer": {"login": "martingms", "id": 458783, "node_id": "MDQ6VXNlcjQ1ODc4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/458783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martingms", "html_url": "https://github.com/martingms", "followers_url": "https://api.github.com/users/martingms/followers", "following_url": "https://api.github.com/users/martingms/following{/other_user}", "gists_url": "https://api.github.com/users/martingms/gists{/gist_id}", "starred_url": "https://api.github.com/users/martingms/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martingms/subscriptions", "organizations_url": "https://api.github.com/users/martingms/orgs", "repos_url": "https://api.github.com/users/martingms/repos", "events_url": "https://api.github.com/users/martingms/events{/privacy}", "received_events_url": "https://api.github.com/users/martingms/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e1927db3c399fa34dc71992bd5dbec09f945c3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e1927db3c399fa34dc71992bd5dbec09f945c3d", "html_url": "https://github.com/rust-lang/rust/commit/4e1927db3c399fa34dc71992bd5dbec09f945c3d"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "b1cfa3fa96433ef4a068ab959ae3acdc53599f42", "filename": "compiler/rustc_middle/src/ty/relate.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/041121a18434023982b88b0d60f92ee904df4f49/compiler%2Frustc_middle%2Fsrc%2Fty%2Frelate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/041121a18434023982b88b0d60f92ee904df4f49/compiler%2Frustc_middle%2Fsrc%2Fty%2Frelate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Frelate.rs?ref=041121a18434023982b88b0d60f92ee904df4f49", "patch": "@@ -142,11 +142,12 @@ pub fn relate_substs<'tcx, R: TypeRelation<'tcx>>(\n     b_subst: SubstsRef<'tcx>,\n ) -> RelateResult<'tcx, SubstsRef<'tcx>> {\n     let tcx = relation.tcx();\n-    let mut cached_ty = None;\n \n-    let params = iter::zip(a_subst, b_subst).enumerate().map(|(i, (a, b))| {\n-        let (variance, variance_info) = match variances {\n-            Some((ty_def_id, variances)) => {\n+    let zipped = iter::zip(a_subst, b_subst);\n+    match variances {\n+        Some((ty_def_id, variances)) => {\n+            let mut cached_ty = None;\n+            tcx.mk_substs(zipped.enumerate().map(|(i, (a, b))| {\n                 let variance = variances[i];\n                 let variance_info = if variance == ty::Invariant {\n                     let ty = *cached_ty\n@@ -155,14 +156,13 @@ pub fn relate_substs<'tcx, R: TypeRelation<'tcx>>(\n                 } else {\n                     ty::VarianceDiagInfo::default()\n                 };\n-                (variance, variance_info)\n-            }\n-            None => (ty::Invariant, ty::VarianceDiagInfo::default()),\n-        };\n-        relation.relate_with_variance(variance, variance_info, a, b)\n-    });\n-\n-    tcx.mk_substs(params)\n+                relation.relate_with_variance(variance, variance_info, a, b)\n+            }))\n+        }\n+        None => tcx.mk_substs(zipped.map(|(a, b)| {\n+            relation.relate_with_variance(ty::Invariant, ty::VarianceDiagInfo::default(), a, b)\n+        })),\n+    }\n }\n \n impl<'tcx> Relate<'tcx> for ty::FnSig<'tcx> {"}]}