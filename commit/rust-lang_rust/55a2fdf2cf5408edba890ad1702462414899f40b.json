{"sha": "55a2fdf2cf5408edba890ad1702462414899f40b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1YTJmZGYyY2Y1NDA4ZWRiYTg5MGFkMTcwMjQ2MjQxNDg5OWY0MGI=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-03-06T22:37:08Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-03-07T18:47:38Z"}, "message": "travis: Upgrade OSX builders\n\nThis upgrades the OSX builders to the `xcode9.3-moar` image which has 3 cores as\nopposed to the 2 that our builders currently have. Should help make those OSX\nbuilds a bit speedier!", "tree": {"sha": "a242303c902c2d1b23a6e17e1d5bc08558081cd3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a242303c902c2d1b23a6e17e1d5bc08558081cd3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55a2fdf2cf5408edba890ad1702462414899f40b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55a2fdf2cf5408edba890ad1702462414899f40b", "html_url": "https://github.com/rust-lang/rust/commit/55a2fdf2cf5408edba890ad1702462414899f40b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55a2fdf2cf5408edba890ad1702462414899f40b/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2789b067da2ac921b86199bde21dd231ace1da39", "url": "https://api.github.com/repos/rust-lang/rust/commits/2789b067da2ac921b86199bde21dd231ace1da39", "html_url": "https://github.com/rust-lang/rust/commit/2789b067da2ac921b86199bde21dd231ace1da39"}], "stats": {"total": 89, "additions": 70, "deletions": 19}, "files": [{"sha": "074149cf17118bfc03058004d509b09d40bfacb4", "filename": ".travis.yml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/55a2fdf2cf5408edba890ad1702462414899f40b/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/55a2fdf2cf5408edba890ad1702462414899f40b/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=55a2fdf2cf5408edba890ad1702462414899f40b", "patch": "@@ -56,7 +56,7 @@ matrix:\n         NO_LLVM_ASSERTIONS=1\n         NO_DEBUG_ASSERTIONS=1\n       os: osx\n-      osx_image: xcode9.2\n+      osx_image: xcode9.3-moar\n       if: branch = auto\n \n     - env: >\n@@ -70,7 +70,7 @@ matrix:\n         NO_LLVM_ASSERTIONS=1\n         NO_DEBUG_ASSERTIONS=1\n       os: osx\n-      osx_image: xcode9.2\n+      osx_image: xcode9.3-moar\n       if: branch = auto\n \n     # OSX builders producing releases. These do not run the full test suite and"}, {"sha": "32d775168692b8982e23f92533ee35b751fed896", "filename": "src/test/debuginfo/lexical-scope-with-macro.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55a2fdf2cf5408edba890ad1702462414899f40b/src%2Ftest%2Fdebuginfo%2Flexical-scope-with-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55a2fdf2cf5408edba890ad1702462414899f40b/src%2Ftest%2Fdebuginfo%2Flexical-scope-with-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Flexical-scope-with-macro.rs?ref=55a2fdf2cf5408edba890ad1702462414899f40b", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // min-lldb-version: 310\n+// ignore-macos FIXME #48807\n \n // compile-flags:-g -Zdebug-macros\n "}, {"sha": "5876fbc94bc984f07c3afbaeaca1fbf43a6f49ff", "filename": "src/test/run-make/long-linker-command-lines/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55a2fdf2cf5408edba890ad1702462414899f40b/src%2Ftest%2Frun-make%2Flong-linker-command-lines%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/55a2fdf2cf5408edba890ad1702462414899f40b/src%2Ftest%2Frun-make%2Flong-linker-command-lines%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Flong-linker-command-lines%2FMakefile?ref=55a2fdf2cf5408edba890ad1702462414899f40b", "patch": "@@ -1,5 +1,5 @@\n -include ../tools.mk\n \n all:\n-\t$(RUSTC) foo.rs -g\n+\t$(RUSTC) foo.rs -g -O\n \tRUSTC=\"$(RUSTC_ORIGINAL)\" $(call RUN,foo)"}, {"sha": "ca76a5e5d77b60f5ddfc50adbc8dbfd6403a35b5", "filename": "src/test/run-make/reproducible-build/Makefile", "status": "modified", "additions": 12, "deletions": 16, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/55a2fdf2cf5408edba890ad1702462414899f40b/src%2Ftest%2Frun-make%2Freproducible-build%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/55a2fdf2cf5408edba890ad1702462414899f40b/src%2Ftest%2Frun-make%2Freproducible-build%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Freproducible-build%2FMakefile?ref=55a2fdf2cf5408edba890ad1702462414899f40b", "patch": "@@ -10,31 +10,27 @@ all:  \\\n \n smoke:\n \trm -rf $(TMPDIR) && mkdir $(TMPDIR)\n+\t$(RUSTC) linker.rs -O\n \t$(RUSTC) reproducible-build-aux.rs\n-\t$(RUSTC) reproducible-build.rs -o\"$(TMPDIR)/reproducible-build1\"\n-\t$(RUSTC) reproducible-build.rs -o\"$(TMPDIR)/reproducible-build2\"\n-\t$(B2)\n-\tnm \"$(TMPDIR)/reproducible-build1\" | sort > \"$(TMPDIR)/reproducible-build1.nm\"\n-\tnm \"$(TMPDIR)/reproducible-build2\" | sort > \"$(TMPDIR)/reproducible-build2.nm\"\n-\tcmp \"$(TMPDIR)/reproducible-build1.nm\" \"$(TMPDIR)/reproducible-build2.nm\" || exit 1\n+\t$(RUSTC) reproducible-build.rs -C linker=$(call RUN_BINFILE,linker)\n+\t$(RUSTC) reproducible-build.rs -C linker=$(call RUN_BINFILE,linker)\n+\tdiff -u \"$(TMPDIR)/linker-arguments1\" \"$(TMPDIR)/linker-arguments2\"\n \n debug:\n \trm -rf $(TMPDIR) && mkdir $(TMPDIR)\n+\t$(RUSTC) linker.rs -O\n \t$(RUSTC) reproducible-build-aux.rs -g\n-\t$(RUSTC) reproducible-build.rs -o\"$(TMPDIR)/reproducible-build1\" -g\n-\t$(RUSTC) reproducible-build.rs -o\"$(TMPDIR)/reproducible-build2\" -g\n-\tnm \"$(TMPDIR)/reproducible-build1\" | sort > \"$(TMPDIR)/reproducible-build1-debug.nm\"\n-\tnm \"$(TMPDIR)/reproducible-build2\" | sort > \"$(TMPDIR)/reproducible-build2-debug.nm\"\n-\tcmp \"$(TMPDIR)/reproducible-build1-debug.nm\" \"$(TMPDIR)/reproducible-build2-debug.nm\" || exit 1\n+\t$(RUSTC) reproducible-build.rs -C linker=$(call RUN_BINFILE,linker) -g\n+\t$(RUSTC) reproducible-build.rs -C linker=$(call RUN_BINFILE,linker) -g\n+\tdiff -u \"$(TMPDIR)/linker-arguments1\" \"$(TMPDIR)/linker-arguments2\"\n \n opt:\n \trm -rf $(TMPDIR) && mkdir $(TMPDIR)\n+\t$(RUSTC) linker.rs -O\n \t$(RUSTC) reproducible-build-aux.rs -O\n-\t$(RUSTC) reproducible-build.rs -o\"$(TMPDIR)/reproducible-build1\" -O\n-\t$(RUSTC) reproducible-build.rs -o\"$(TMPDIR)/reproducible-build2\" -O\n-\tnm \"$(TMPDIR)/reproducible-build1\" | sort > \"$(TMPDIR)/reproducible-build1-opt.nm\"\n-\tnm \"$(TMPDIR)/reproducible-build2\" | sort > \"$(TMPDIR)/reproducible-build2-opt.nm\"\n-\tcmp \"$(TMPDIR)/reproducible-build1-opt.nm\" \"$(TMPDIR)/reproducible-build2-opt.nm\" || exit 1\n+\t$(RUSTC) reproducible-build.rs -C linker=$(call RUN_BINFILE,linker) -O\n+\t$(RUSTC) reproducible-build.rs -C linker=$(call RUN_BINFILE,linker) -O\n+\tdiff -u \"$(TMPDIR)/linker-arguments1\" \"$(TMPDIR)/linker-arguments2\"\n \n link_paths:\n \trm -rf $(TMPDIR) && mkdir $(TMPDIR)"}, {"sha": "fd8946708bffdebcdc765b91db2ad326250ff68b", "filename": "src/test/run-make/reproducible-build/linker.rs", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/55a2fdf2cf5408edba890ad1702462414899f40b/src%2Ftest%2Frun-make%2Freproducible-build%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55a2fdf2cf5408edba890ad1702462414899f40b/src%2Ftest%2Frun-make%2Freproducible-build%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Freproducible-build%2Flinker.rs?ref=55a2fdf2cf5408edba890ad1702462414899f40b", "patch": "@@ -0,0 +1,54 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::env;\n+use std::path::Path;\n+use std::fs::File;\n+use std::io::{Read, Write};\n+\n+fn main() {\n+    let mut dst = env::current_exe().unwrap();\n+    dst.pop();\n+    dst.push(\"linker-arguments1\");\n+    if dst.exists() {\n+        dst.pop();\n+        dst.push(\"linker-arguments2\");\n+        assert!(!dst.exists());\n+    }\n+\n+    let mut out = String::new();\n+    for arg in env::args().skip(1) {\n+        let path = Path::new(&arg);\n+        if !path.is_file() {\n+            out.push_str(&arg);\n+            out.push_str(\"\\n\");\n+            continue\n+        }\n+\n+        let mut contents = Vec::new();\n+        File::open(path).unwrap().read_to_end(&mut contents).unwrap();\n+\n+        out.push_str(&format!(\"{}: {}\\n\", arg, hash(&contents)));\n+    }\n+\n+    File::create(dst).unwrap().write_all(out.as_bytes()).unwrap();\n+}\n+\n+// fnv hash for now\n+fn hash(contents: &[u8]) -> u64 {\n+    let mut hash = 0xcbf29ce484222325;\n+\n+    for byte in contents {\n+        hash = hash ^ (*byte as u64);\n+        hash = hash.wrapping_mul(0x100000001b3);\n+    }\n+\n+    hash\n+}"}]}