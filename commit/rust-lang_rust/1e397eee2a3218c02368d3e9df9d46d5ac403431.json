{"sha": "1e397eee2a3218c02368d3e9df9d46d5ac403431", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlMzk3ZWVlMmEzMjE4YzAyMzY4ZDNlOWRmOWQ0NmQ1YWM0MDM0MzE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-12T00:33:13Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-12T19:08:27Z"}, "message": "Rename str::split_ivec to str::split", "tree": {"sha": "1212deb4593d1b99f09883d82069001211de558a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1212deb4593d1b99f09883d82069001211de558a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e397eee2a3218c02368d3e9df9d46d5ac403431", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e397eee2a3218c02368d3e9df9d46d5ac403431", "html_url": "https://github.com/rust-lang/rust/commit/1e397eee2a3218c02368d3e9df9d46d5ac403431", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e397eee2a3218c02368d3e9df9d46d5ac403431/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3e9811b7f81f6e21347bd6b87353f0f5d2bd173", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3e9811b7f81f6e21347bd6b87353f0f5d2bd173", "html_url": "https://github.com/rust-lang/rust/commit/e3e9811b7f81f6e21347bd6b87353f0f5d2bd173"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "9672c2dc7fdfd4051761613b376736224e9f0d52", "filename": "src/comp/back/link.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e397eee2a3218c02368d3e9df9d46d5ac403431/src%2Fcomp%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e397eee2a3218c02368d3e9df9d46d5ac403431/src%2Fcomp%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fback%2Flink.rs?ref=1e397eee2a3218c02368d3e9df9d46d5ac403431", "patch": "@@ -357,7 +357,7 @@ fn build_link_meta(sess: &session::session, c: &ast::crate, output: &str,\n                 let name =\n                     {\n                         let os =\n-                            str::split_ivec(fs::basename(output), '.' as u8);\n+                            str::split(fs::basename(output), '.' as u8);\n                         assert (ivec::len(os) >= 2u);\n                         ivec::pop(os);\n                         str::connect_ivec(os, \".\")"}, {"sha": "4d662f3cf33443bbfee1439ebd9eaa54172404c7", "filename": "src/comp/driver/rustc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1e397eee2a3218c02368d3e9df9d46d5ac403431/src%2Fcomp%2Fdriver%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e397eee2a3218c02368d3e9df9d46d5ac403431/src%2Fcomp%2Fdriver%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Frustc.rs?ref=1e397eee2a3218c02368d3e9df9d46d5ac403431", "patch": "@@ -520,7 +520,7 @@ fn main(args: vec[str]) {\n         // \"-\" as input file will cause the parser to read from stdin so we\n         // have to make up a name\n         let parts = if !input_is_stdin(ifile) {\n-            str::split_ivec(ifile, '.' as u8)\n+            str::split(ifile, '.' as u8)\n         } else {\n             ~[\"default\", \"rs\"]\n         };\n@@ -586,7 +586,7 @@ fn main(args: vec[str]) {\n                      } else { ret filename; }\n                  }(config, _);\n         fn rmext(filename: str) -> str {\n-            let parts = str::split_ivec(filename, '.' as u8);\n+            let parts = str::split(filename, '.' as u8);\n             ivec::pop(parts);\n             ret str::connect_ivec(parts, \".\");\n         }"}, {"sha": "1ee1e2d072b3f63ded1af9848e8c03b64e8045cb", "filename": "src/comp/metadata/cstore.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e397eee2a3218c02368d3e9df9d46d5ac403431/src%2Fcomp%2Fmetadata%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e397eee2a3218c02368d3e9df9d46d5ac403431/src%2Fcomp%2Fmetadata%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fcstore.rs?ref=1e397eee2a3218c02368d3e9df9d46d5ac403431", "patch": "@@ -106,7 +106,7 @@ fn get_used_libraries(cstore: &cstore) -> [str] {\n }\n \n fn add_used_link_args(cstore: &cstore, args: &str) {\n-    p(cstore).used_link_args += str::split_ivec(args, ' ' as u8);\n+    p(cstore).used_link_args += str::split(args, ' ' as u8);\n }\n \n fn get_used_link_args(cstore: &cstore) -> [str] {"}, {"sha": "eddc6723a1362aeb8d2f15ecbca798c06e1e87a4", "filename": "src/lib/str.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1e397eee2a3218c02368d3e9df9d46d5ac403431/src%2Flib%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e397eee2a3218c02368d3e9df9d46d5ac403431/src%2Flib%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fstr.rs?ref=1e397eee2a3218c02368d3e9df9d46d5ac403431", "patch": "@@ -41,7 +41,7 @@ export shift_byte;\n export pop_byte;\n export push_byte;\n export unshift_byte;\n-export split_ivec;\n+export split;\n export concat;\n export connect;\n export connect_ivec;\n@@ -434,7 +434,7 @@ fn unshift_byte(s: &mutable str, b: u8) {\n     s = rs;\n }\n \n-fn split_ivec(s: str, sep: u8) -> [str] {\n+fn split(s: str, sep: u8) -> [str] {\n     let v: [str] = ~[];\n     let accum: str = \"\";\n     let ends_with_sep: bool = false;"}, {"sha": "af879bd677f0fd265d76dc7d28ea29116bc44467", "filename": "src/test/compiletest/runtest.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1e397eee2a3218c02368d3e9df9d46d5ac403431/src%2Ftest%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e397eee2a3218c02368d3e9df9d46d5ac403431/src%2Ftest%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompiletest%2Fruntest.rs?ref=1e397eee2a3218c02368d3e9df9d46d5ac403431", "patch": "@@ -193,7 +193,7 @@ fn check_error_patterns(props: &test_props, testfile: &str,\n \n     let next_err_idx = 0u;\n     let next_err_pat = props.error_patterns.(next_err_idx);\n-    for line: str  in str::split_ivec(procres.stdout, '\\n' as u8) {\n+    for line: str  in str::split(procres.stdout, '\\n' as u8) {\n         if str::find(line, next_err_pat) > 0 {\n             log #fmt(\"found error pattern %s\", next_err_pat);\n             next_err_idx += 1u;\n@@ -293,7 +293,7 @@ fn split_maybe_args(argstr: &option::t[str]) -> [str] {\n     }\n \n     alt argstr {\n-      option::some(s) { rm_whitespace(str::split_ivec(s, ' ' as u8)) }\n+      option::some(s) { rm_whitespace(str::split(s, ' ' as u8)) }\n       option::none. { ~[] }\n     }\n }\n@@ -355,7 +355,7 @@ fn output_base_name(config: &config, testfile: &str) -> str {\n     let base = config.build_base;\n     let filename =\n         {\n-            let parts = str::split_ivec(fs::basename(testfile), '.' as u8);\n+            let parts = str::split(fs::basename(testfile), '.' as u8);\n             parts = ivec::slice(parts, 0u, ivec::len(parts) - 1u);\n             str::connect_ivec(parts, \".\")\n         };"}, {"sha": "0a27f3b4311e00a2ed9b320d29c467b263862e0d", "filename": "src/test/stdtest/str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e397eee2a3218c02368d3e9df9d46d5ac403431/src%2Ftest%2Fstdtest%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e397eee2a3218c02368d3e9df9d46d5ac403431/src%2Ftest%2Fstdtest%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Fstr.rs?ref=1e397eee2a3218c02368d3e9df9d46d5ac403431", "patch": "@@ -27,7 +27,7 @@ fn test_split() {\n     fn t(s: &str, c: char, i: int, k: &str) {\n         log \"splitting: \" + s;\n         log i;\n-        let v = str::split_ivec(s, c as u8);\n+        let v = str::split(s, c as u8);\n         log \"split to: \";\n         for z: str  in v { log z; }\n         log \"comparing: \" + v.(i) + \" vs. \" + k;"}]}