{"sha": "978e3e384b045ea72ba952e7f94a2a4c82297e66", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3OGUzZTM4NGIwNDVlYTcyYmE5NTJlN2Y5NGEyYTRjODIyOTdlNjY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-08-13T12:46:47Z"}, "committer": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-08-13T12:46:47Z"}, "message": "Merge #1636\n\n1636: fix block parse problem r=matklad a=bravomikekilo\n\ntry to fix [issue-1598](https://github.com/rust-analyzer/rust-analyzer/issues/1598).\n\nCo-authored-by: bravomikekilo <bmk1221@126.com>", "tree": {"sha": "934770bc4dd73e3c829a67e13858bbd941b92f27", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/934770bc4dd73e3c829a67e13858bbd941b92f27"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/978e3e384b045ea72ba952e7f94a2a4c82297e66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/978e3e384b045ea72ba952e7f94a2a4c82297e66", "html_url": "https://github.com/rust-lang/rust/commit/978e3e384b045ea72ba952e7f94a2a4c82297e66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/978e3e384b045ea72ba952e7f94a2a4c82297e66/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "2c65a059840dd2092a00e90337a8221cd832c456", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c65a059840dd2092a00e90337a8221cd832c456", "html_url": "https://github.com/rust-lang/rust/commit/2c65a059840dd2092a00e90337a8221cd832c456"}, {"sha": "eb0e9bd98132dabbd908b473c5c1131f0787ffac", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb0e9bd98132dabbd908b473c5c1131f0787ffac", "html_url": "https://github.com/rust-lang/rust/commit/eb0e9bd98132dabbd908b473c5c1131f0787ffac"}], "stats": {"total": 88, "additions": 81, "deletions": 7}, "files": [{"sha": "742076c1a4883fa7f6555cf7f2cecfd01ba2cfd3", "filename": "crates/ra_parser/src/grammar/expressions.rs", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/978e3e384b045ea72ba952e7f94a2a4c82297e66/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/978e3e384b045ea72ba952e7f94a2a4c82297e66/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs?ref=978e3e384b045ea72ba952e7f94a2a4c82297e66", "patch": "@@ -359,11 +359,14 @@ fn lhs(\n             return Some((m.complete(p, RANGE_EXPR), BlockLike::NotBlock));\n         }\n         _ => {\n+            // test expression_after_block\n+            // fn foo() {\n+            //    let mut p = F{x: 5};\n+            //    {p}.x = 10;\n+            // }\n+            //\n             let (lhs, blocklike) = atom::atom_expr(p, r)?;\n-            return Some((\n-                postfix_expr(p, lhs, !(r.prefer_stmt && blocklike.is_block())),\n-                blocklike,\n-            ));\n+            return Some(postfix_expr(p, lhs, blocklike, !(r.prefer_stmt && blocklike.is_block())));\n         }\n     };\n     expr_bp(p, r, 255, dollar_lvl);\n@@ -376,8 +379,9 @@ fn postfix_expr(\n     // Calls are disallowed if the type is a block and we prefer statements because the call cannot be disambiguated from a tuple\n     // E.g. `while true {break}();` is parsed as\n     // `while true {break}; ();`\n+    mut block_like: BlockLike,\n     mut allow_calls: bool,\n-) -> CompletedMarker {\n+) -> (CompletedMarker, BlockLike) {\n     loop {\n         lhs = match p.current() {\n             // test stmt_postfix_expr_ambiguity\n@@ -417,9 +421,10 @@ fn postfix_expr(\n             T![as] => cast_expr(p, lhs),\n             _ => break,\n         };\n-        allow_calls = true\n+        allow_calls = true;\n+        block_like = BlockLike::NotBlock;\n     }\n-    lhs\n+    (lhs, block_like)\n }\n \n // test call_expr"}, {"sha": "76007e3ee7741d4a02e72d1114ce86a132c66967", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0138_expression_after_block.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/978e3e384b045ea72ba952e7f94a2a4c82297e66/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0138_expression_after_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/978e3e384b045ea72ba952e7f94a2a4c82297e66/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0138_expression_after_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0138_expression_after_block.rs?ref=978e3e384b045ea72ba952e7f94a2a4c82297e66", "patch": "@@ -0,0 +1,4 @@\n+fn foo() {\n+   let mut p = F{x: 5};\n+   {p}.x = 10;\n+}"}, {"sha": "08128f365471dadf285302481227a60ae50f094a", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0138_expression_after_block.txt", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/978e3e384b045ea72ba952e7f94a2a4c82297e66/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0138_expression_after_block.txt", "raw_url": "https://github.com/rust-lang/rust/raw/978e3e384b045ea72ba952e7f94a2a4c82297e66/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0138_expression_after_block.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0138_expression_after_block.txt?ref=978e3e384b045ea72ba952e7f94a2a4c82297e66", "patch": "@@ -0,0 +1,65 @@\n+SOURCE_FILE@[0; 52)\n+  FN_DEF@[0; 51)\n+    FN_KW@[0; 2) \"fn\"\n+    WHITESPACE@[2; 3) \" \"\n+    NAME@[3; 6)\n+      IDENT@[3; 6) \"foo\"\n+    PARAM_LIST@[6; 8)\n+      L_PAREN@[6; 7) \"(\"\n+      R_PAREN@[7; 8) \")\"\n+    WHITESPACE@[8; 9) \" \"\n+    BLOCK@[9; 51)\n+      L_CURLY@[9; 10) \"{\"\n+      WHITESPACE@[10; 14) \"\\n   \"\n+      LET_STMT@[14; 34)\n+        LET_KW@[14; 17) \"let\"\n+        WHITESPACE@[17; 18) \" \"\n+        BIND_PAT@[18; 23)\n+          MUT_KW@[18; 21) \"mut\"\n+          WHITESPACE@[21; 22) \" \"\n+          NAME@[22; 23)\n+            IDENT@[22; 23) \"p\"\n+        WHITESPACE@[23; 24) \" \"\n+        EQ@[24; 25) \"=\"\n+        WHITESPACE@[25; 26) \" \"\n+        STRUCT_LIT@[26; 33)\n+          PATH@[26; 27)\n+            PATH_SEGMENT@[26; 27)\n+              NAME_REF@[26; 27)\n+                IDENT@[26; 27) \"F\"\n+          NAMED_FIELD_LIST@[27; 33)\n+            L_CURLY@[27; 28) \"{\"\n+            NAMED_FIELD@[28; 32)\n+              NAME_REF@[28; 29)\n+                IDENT@[28; 29) \"x\"\n+              COLON@[29; 30) \":\"\n+              WHITESPACE@[30; 31) \" \"\n+              LITERAL@[31; 32)\n+                INT_NUMBER@[31; 32) \"5\"\n+            R_CURLY@[32; 33) \"}\"\n+        SEMI@[33; 34) \";\"\n+      WHITESPACE@[34; 38) \"\\n   \"\n+      EXPR_STMT@[38; 49)\n+        BIN_EXPR@[38; 48)\n+          FIELD_EXPR@[38; 43)\n+            BLOCK_EXPR@[38; 41)\n+              BLOCK@[38; 41)\n+                L_CURLY@[38; 39) \"{\"\n+                PATH_EXPR@[39; 40)\n+                  PATH@[39; 40)\n+                    PATH_SEGMENT@[39; 40)\n+                      NAME_REF@[39; 40)\n+                        IDENT@[39; 40) \"p\"\n+                R_CURLY@[40; 41) \"}\"\n+            DOT@[41; 42) \".\"\n+            NAME_REF@[42; 43)\n+              IDENT@[42; 43) \"x\"\n+          WHITESPACE@[43; 44) \" \"\n+          EQ@[44; 45) \"=\"\n+          WHITESPACE@[45; 46) \" \"\n+          LITERAL@[46; 48)\n+            INT_NUMBER@[46; 48) \"10\"\n+        SEMI@[48; 49) \";\"\n+      WHITESPACE@[49; 50) \"\\n\"\n+      R_CURLY@[50; 51) \"}\"\n+  WHITESPACE@[51; 52) \"\\n\""}]}