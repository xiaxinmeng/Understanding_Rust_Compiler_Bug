{"sha": "a1a399d16830ac84c1ce18c2a0e8a77a13edf265", "node_id": "C_kwDOAAsO6NoAKGExYTM5OWQxNjgzMGFjODRjMWNlMThjMmEwZThhNzdhMTNlZGYyNjU", "commit": {"author": {"name": "dswij", "email": "dswijj@gmail.com", "date": "2021-10-22T05:41:46Z"}, "committer": {"name": "Dharma Saputra Wijaya", "email": "dswijj@gmail.com", "date": "2021-10-26T13:21:46Z"}, "message": "Fix `question_mark` FP on calls", "tree": {"sha": "4dfa0596fbb9e9f6fc5a693ea2ac4eda7260459b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4dfa0596fbb9e9f6fc5a693ea2ac4eda7260459b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1a399d16830ac84c1ce18c2a0e8a77a13edf265", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1a399d16830ac84c1ce18c2a0e8a77a13edf265", "html_url": "https://github.com/rust-lang/rust/commit/a1a399d16830ac84c1ce18c2a0e8a77a13edf265", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1a399d16830ac84c1ce18c2a0e8a77a13edf265/comments", "author": {"login": "dswij", "id": 44697459, "node_id": "MDQ6VXNlcjQ0Njk3NDU5", "avatar_url": "https://avatars.githubusercontent.com/u/44697459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dswij", "html_url": "https://github.com/dswij", "followers_url": "https://api.github.com/users/dswij/followers", "following_url": "https://api.github.com/users/dswij/following{/other_user}", "gists_url": "https://api.github.com/users/dswij/gists{/gist_id}", "starred_url": "https://api.github.com/users/dswij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dswij/subscriptions", "organizations_url": "https://api.github.com/users/dswij/orgs", "repos_url": "https://api.github.com/users/dswij/repos", "events_url": "https://api.github.com/users/dswij/events{/privacy}", "received_events_url": "https://api.github.com/users/dswij/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dswij", "id": 44697459, "node_id": "MDQ6VXNlcjQ0Njk3NDU5", "avatar_url": "https://avatars.githubusercontent.com/u/44697459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dswij", "html_url": "https://github.com/dswij", "followers_url": "https://api.github.com/users/dswij/followers", "following_url": "https://api.github.com/users/dswij/following{/other_user}", "gists_url": "https://api.github.com/users/dswij/gists{/gist_id}", "starred_url": "https://api.github.com/users/dswij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dswij/subscriptions", "organizations_url": "https://api.github.com/users/dswij/orgs", "repos_url": "https://api.github.com/users/dswij/repos", "events_url": "https://api.github.com/users/dswij/events{/privacy}", "received_events_url": "https://api.github.com/users/dswij/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4196d029314c494d84aed97043b2eb84ecdea5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4196d029314c494d84aed97043b2eb84ecdea5b", "html_url": "https://github.com/rust-lang/rust/commit/d4196d029314c494d84aed97043b2eb84ecdea5b"}], "stats": {"total": 14, "additions": 4, "deletions": 10}, "files": [{"sha": "01fa523300aa3bea324a4dc25d2fa3fc9502a8a2", "filename": "clippy_lints/src/question_mark.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a1a399d16830ac84c1ce18c2a0e8a77a13edf265/clippy_lints%2Fsrc%2Fquestion_mark.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1a399d16830ac84c1ce18c2a0e8a77a13edf265/clippy_lints%2Fsrc%2Fquestion_mark.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fquestion_mark.rs?ref=a1a399d16830ac84c1ce18c2a0e8a77a13edf265", "patch": "@@ -172,23 +172,17 @@ impl QuestionMark {\n         }\n     }\n \n-    fn expression_returns_unmodified_err(\n-        cx: &LateContext<'_>,\n-        expression: &Expr<'_>,\n-        origin_hir_id: &Expr<'_>,\n-    ) -> bool {\n+    fn expression_returns_unmodified_err(cx: &LateContext<'_>, expression: &Expr<'_>, cond_expr: &Expr<'_>) -> bool {\n         match expression.kind {\n             ExprKind::Block(block, _) => {\n                 if let Some(return_expression) = Self::return_expression(block) {\n-                    return Self::expression_returns_unmodified_err(cx, return_expression, origin_hir_id);\n+                    return Self::expression_returns_unmodified_err(cx, return_expression, cond_expr);\n                 }\n \n                 false\n             },\n-            ExprKind::Ret(Some(expr)) | ExprKind::Call(expr, _) => {\n-                Self::expression_returns_unmodified_err(cx, expr, origin_hir_id)\n-            },\n-            ExprKind::Path(_) => path_to_local(expression) == path_to_local(origin_hir_id),\n+            ExprKind::Ret(Some(expr)) => Self::expression_returns_unmodified_err(cx, expr, cond_expr),\n+            ExprKind::Path(_) => path_to_local(expression) == path_to_local(cond_expr),\n             _ => false,\n         }\n     }"}]}