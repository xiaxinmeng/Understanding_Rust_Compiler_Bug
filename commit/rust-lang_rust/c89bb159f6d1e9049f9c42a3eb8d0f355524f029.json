{"sha": "c89bb159f6d1e9049f9c42a3eb8d0f355524f029", "node_id": "C_kwDOAAsO6NoAKGM4OWJiMTU5ZjZkMWU5MDQ5ZjljNDJhM2ViOGQwZjM1NTUyNGYwMjk", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-01-28T04:20:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-28T04:20:19Z"}, "message": "Rollup merge of #107373 - michaelwoerister:dont-merge-vtables-when-debuginfo, r=WaffleLapkin\n\nDon't merge vtables when full debuginfo is enabled.\n\nThis PR makes the compiler not emit the `unnamed_addr` attribute for vtables when full debuginfo is enabled, so that they don't get merged even if they have the same contents. This allows debuggers to more reliably map from a dyn pointer to the self-type of a trait object by looking at the vtable's debuginfo.\n\nThe PR only changes the behavior of the LLVM backend as other backends don't emit vtable debuginfo (as far as I can tell).\n\nThe performance impact of this change should be small as [measured](https://github.com/rust-lang/rust/pull/103514#issuecomment-1290833854) in a previous PR.", "tree": {"sha": "1e9ed15684db09f0ecf9f80562834014378a4c4c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e9ed15684db09f0ecf9f80562834014378a4c4c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c89bb159f6d1e9049f9c42a3eb8d0f355524f029", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj1KKDCRBK7hj4Ov3rIwAAI9kIAHrD/dffnjlLusz6766icU2H\nrGDQ1Aop72Z2EbnPwHR1sLNVAxqN6qOajJyAiiEre9rthB+mvygcTtNqpkmPlO/n\ngo73PD+GeZP731RLEFqdxFK+9lVnzP4tk/D4aC0GEzbm+ls19Lb+gP+DTlyVjd1S\ntHnv6NCn8yhd+d4lZTeLjEGGTrZG0Kbl1hrI2X0ihAKMZ855dFoLA7+k086Tj7Fp\nf8r9GZNAhK7Zw0riToCucMROnfVJ6KB8dRHClsHHLn+trJGFOFiF1/GkH14cUWCx\nedB3tStLhwTGD8vFVWTEP5vJs5uko0GTm2rN/iGqZLKZR6M63DJSdQSwWDJJADs=\n=jCNS\n-----END PGP SIGNATURE-----\n", "payload": "tree 1e9ed15684db09f0ecf9f80562834014378a4c4c\nparent ab769a0bac7e20549caa451742331674c940eed5\nparent e5995e61687673dca684914b774d1456160f1891\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1674879619 +0100\ncommitter GitHub <noreply@github.com> 1674879619 +0100\n\nRollup merge of #107373 - michaelwoerister:dont-merge-vtables-when-debuginfo, r=WaffleLapkin\n\nDon't merge vtables when full debuginfo is enabled.\n\nThis PR makes the compiler not emit the `unnamed_addr` attribute for vtables when full debuginfo is enabled, so that they don't get merged even if they have the same contents. This allows debuggers to more reliably map from a dyn pointer to the self-type of a trait object by looking at the vtable's debuginfo.\n\nThe PR only changes the behavior of the LLVM backend as other backends don't emit vtable debuginfo (as far as I can tell).\n\nThe performance impact of this change should be small as [measured](https://github.com/rust-lang/rust/pull/103514#issuecomment-1290833854) in a previous PR.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c89bb159f6d1e9049f9c42a3eb8d0f355524f029", "html_url": "https://github.com/rust-lang/rust/commit/c89bb159f6d1e9049f9c42a3eb8d0f355524f029", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c89bb159f6d1e9049f9c42a3eb8d0f355524f029/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab769a0bac7e20549caa451742331674c940eed5", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab769a0bac7e20549caa451742331674c940eed5", "html_url": "https://github.com/rust-lang/rust/commit/ab769a0bac7e20549caa451742331674c940eed5"}, {"sha": "e5995e61687673dca684914b774d1456160f1891", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5995e61687673dca684914b774d1456160f1891", "html_url": "https://github.com/rust-lang/rust/commit/e5995e61687673dca684914b774d1456160f1891"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "f73bbf3d22bd789f17306cfefaff39a7b7885cba", "filename": "compiler/rustc_codegen_llvm/src/debuginfo/metadata.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c89bb159f6d1e9049f9c42a3eb8d0f355524f029/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c89bb159f6d1e9049f9c42a3eb8d0f355524f029/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmetadata.rs?ref=c89bb159f6d1e9049f9c42a3eb8d0f355524f029", "patch": "@@ -1499,6 +1499,11 @@ pub fn create_vtable_di_node<'ll, 'tcx>(\n         return;\n     }\n \n+    // When full debuginfo is enabled, we want to try and prevent vtables from being\n+    // merged. Otherwise debuggers will have a hard time mapping from dyn pointer\n+    // to concrete type.\n+    llvm::SetUnnamedAddress(vtable, llvm::UnnamedAddr::No);\n+\n     let vtable_name =\n         compute_debuginfo_vtable_name(cx.tcx, ty, poly_trait_ref, VTableNameKind::GlobalVariable);\n     let vtable_type_di_node = build_vtable_type_di_node(cx, ty, poly_trait_ref);"}, {"sha": "d82b737de0b417c5dd6c31288ef0edfc594205b8", "filename": "tests/codegen/debug-vtable.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c89bb159f6d1e9049f9c42a3eb8d0f355524f029/tests%2Fcodegen%2Fdebug-vtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c89bb159f6d1e9049f9c42a3eb8d0f355524f029/tests%2Fcodegen%2Fdebug-vtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fdebug-vtable.rs?ref=c89bb159f6d1e9049f9c42a3eb8d0f355524f029", "patch": "@@ -9,6 +9,14 @@\n // compile-flags: -Cdebuginfo=2 -Copt-level=0 -Csymbol-mangling-version=v0\n // ignore-tidy-linelength\n \n+// Make sure that vtables don't have the unnamed_addr attribute when debuginfo is enabled.\n+// This helps debuggers more reliably map from dyn pointer to concrete type.\n+// CHECK: @vtable.0 = private constant <{\n+// CHECK: @vtable.1 = private constant <{\n+// CHECK: @vtable.2 = private constant <{\n+// CHECK: @vtable.3 = private constant <{\n+// CHECK: @vtable.4 = private constant <{\n+\n // NONMSVC: ![[USIZE:[0-9]+]] = !DIBasicType(name: \"usize\"\n // MSVC: ![[USIZE:[0-9]+]] = !DIDerivedType(tag: DW_TAG_typedef, name: \"usize\"\n // NONMSVC: ![[PTR:[0-9]+]] = !DIDerivedType(tag: DW_TAG_pointer_type, name: \"*const ()\""}]}