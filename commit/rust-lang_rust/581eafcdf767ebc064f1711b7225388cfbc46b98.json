{"sha": "581eafcdf767ebc064f1711b7225388cfbc46b98", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4MWVhZmNkZjc2N2ViYzA2NGYxNzExYjcyMjUzODhjZmJjNDZiOTg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-30T21:09:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-30T21:09:04Z"}, "message": "Rollup merge of #72777 - marmeladema:rustdoc-remove-local-def-id-from-node-id, r=petrochenkov\n\nrustdoc: remove calls to `local_def_id_from_node_id`\n\nrustdoc calls `local_def_id_from_node_id(CRATE_NODE_ID)` when it can just creates a top level `DefId` using `DefId::local(CRATE_DEF_INDEX)`.\n\ncc #50928\n\nr? @petrochenkov", "tree": {"sha": "1abfcbf012a45c7595c129995fcede2b092c408c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1abfcbf012a45c7595c129995fcede2b092c408c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/581eafcdf767ebc064f1711b7225388cfbc46b98", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe0stwCRBK7hj4Ov3rIwAAdHIIABe9pDzJ0tc+dPqPn6YDmP0g\nsGSLLm6OCsIpls/RB00o5+bBCScqTpb+YFdDleLalZ5qHrV8djlcQlROINTLTFoj\njXnUFo6vNmTi324u3qjucbEyzWJXeIlsn0aOe24uVXyt4axX0zdA4ArkKremA4T/\nFayXuTkl2RHJzxV/EK0stJHthNl33RIEkJOlFdynAleB5rxGcraPLMQXwCujCGkY\nwYRM+evq9RTCXmIT8adQwmpRf2QvnZOZue3JJ6E6FvaYAkFsxrL5S68R0L1WyZMq\ncYODDByKjYEv4SANAwlKiUFb6pEB8i/xcs091tXgZfqyP9VxhKNwMS4uBpTFAZo=\n=wJqy\n-----END PGP SIGNATURE-----\n", "payload": "tree 1abfcbf012a45c7595c129995fcede2b092c408c\nparent b7f6a0b322dd48d972c3643b19d56232c118a3bf\nparent 4b7e44f89317ecd8162db8ab0286003205c3f886\nauthor Ralf Jung <post@ralfj.de> 1590872944 +0200\ncommitter GitHub <noreply@github.com> 1590872944 +0200\n\nRollup merge of #72777 - marmeladema:rustdoc-remove-local-def-id-from-node-id, r=petrochenkov\n\nrustdoc: remove calls to `local_def_id_from_node_id`\n\nrustdoc calls `local_def_id_from_node_id(CRATE_NODE_ID)` when it can just creates a top level `DefId` using `DefId::local(CRATE_DEF_INDEX)`.\n\ncc #50928\n\nr? @petrochenkov\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/581eafcdf767ebc064f1711b7225388cfbc46b98", "html_url": "https://github.com/rust-lang/rust/commit/581eafcdf767ebc064f1711b7225388cfbc46b98", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/581eafcdf767ebc064f1711b7225388cfbc46b98/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7f6a0b322dd48d972c3643b19d56232c118a3bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7f6a0b322dd48d972c3643b19d56232c118a3bf", "html_url": "https://github.com/rust-lang/rust/commit/b7f6a0b322dd48d972c3643b19d56232c118a3bf"}, {"sha": "4b7e44f89317ecd8162db8ab0286003205c3f886", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b7e44f89317ecd8162db8ab0286003205c3f886", "html_url": "https://github.com/rust-lang/rust/commit/4b7e44f89317ecd8162db8ab0286003205c3f886"}], "stats": {"total": 14, "additions": 5, "deletions": 9}, "files": [{"sha": "08e04f719e9ba692d86b263c129e6b8844a6aba5", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/581eafcdf767ebc064f1711b7225388cfbc46b98/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/581eafcdf767ebc064f1711b7225388cfbc46b98/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=581eafcdf767ebc064f1711b7225388cfbc46b98", "patch": "@@ -6,7 +6,7 @@ use rustc_ast::ast;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir as hir;\n use rustc_hir::def::{CtorKind, DefKind, Res};\n-use rustc_hir::def_id::DefId;\n+use rustc_hir::def_id::{DefId, CRATE_DEF_INDEX};\n use rustc_hir::Mutability;\n use rustc_metadata::creader::LoadedMacro;\n use rustc_middle::ty;\n@@ -454,11 +454,7 @@ fn build_module(cx: &DocContext<'_>, did: DefId, visited: &mut FxHashSet<DefId>)\n                         name: None,\n                         attrs: clean::Attributes::default(),\n                         source: clean::Span::empty(),\n-                        def_id: cx\n-                            .tcx\n-                            .hir()\n-                            .local_def_id_from_node_id(ast::CRATE_NODE_ID)\n-                            .to_def_id(),\n+                        def_id: DefId::local(CRATE_DEF_INDEX),\n                         visibility: clean::Public,\n                         stability: None,\n                         deprecation: None,"}, {"sha": "371df7444b004e8e188480e72e48763b7679780a", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/581eafcdf767ebc064f1711b7225388cfbc46b98/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/581eafcdf767ebc064f1711b7225388cfbc46b98/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=581eafcdf767ebc064f1711b7225388cfbc46b98", "patch": "@@ -1549,11 +1549,11 @@ impl<'tcx> Clean<Type> for Ty<'tcx> {\n             ty::FnDef(..) | ty::FnPtr(_) => {\n                 let ty = cx.tcx.lift(self).expect(\"FnPtr lift failed\");\n                 let sig = ty.fn_sig(cx.tcx);\n-                let local_def_id = cx.tcx.hir().local_def_id_from_node_id(ast::CRATE_NODE_ID);\n+                let def_id = DefId::local(CRATE_DEF_INDEX);\n                 BareFunction(box BareFunctionDecl {\n                     unsafety: sig.unsafety(),\n                     generic_params: Vec::new(),\n-                    decl: (local_def_id.to_def_id(), sig).clean(cx),\n+                    decl: (def_id, sig).clean(cx),\n                     abi: sig.abi(),\n                 })\n             }\n@@ -2255,7 +2255,7 @@ impl Clean<Vec<Item>> for doctree::Import<'_> {\n             name: None,\n             attrs: self.attrs.clean(cx),\n             source: self.whence.clean(cx),\n-            def_id: cx.tcx.hir().local_def_id_from_node_id(ast::CRATE_NODE_ID).to_def_id(),\n+            def_id: DefId::local(CRATE_DEF_INDEX),\n             visibility: self.vis.clean(cx),\n             stability: None,\n             deprecation: None,"}]}