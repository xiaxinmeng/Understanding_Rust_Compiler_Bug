{"sha": "773bb5173d3d54e6d19dfadd75c342c7acdce287", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3M2JiNTE3M2QzZDU0ZTZkMTlkZmFkZDc1YzM0MmM3YWNkY2UyODc=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-04-10T18:27:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-10T18:27:12Z"}, "message": "Merge #3931\n\n3931: profile queries r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "ae26a21a3a41300a6b0478aa4e5eb72bf7e85fd6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae26a21a3a41300a6b0478aa4e5eb72bf7e85fd6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/773bb5173d3d54e6d19dfadd75c342c7acdce287", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJekLqACRBK7hj4Ov3rIwAAdHIIAC4QOYplPe1Y4+h8aSpmzZvv\n8eWv5tcW8YxldycoIsDo9OxU4tIV5VZ2bNkK94B1uXKudHsVfya54/+IHfr/Xz3K\nK85qsQdIaxrTIombyIVdJFQ8FL7Frfg/C6jxCYeyeKm2Voz+qS/7UZse0WVHymcB\nRdAYZzRkRnGAilhMtXTha2WxNHMjXjr8Xq659RH6N+Kw8dwiSK3UPJHV+1Ul2iKR\nTbljsrifXVgERJ5clBiZtAB27WADDsoJzs48aSocDUCeZwK2gLaRF38S21PQJek9\nh7ng4ZnqeWcUm3osz8omp5u1VXpnHpovDgEm9lb1o3YjhAcJ0zy8tiTX19rtcLw=\n=ZmmP\n-----END PGP SIGNATURE-----\n", "payload": "tree ae26a21a3a41300a6b0478aa4e5eb72bf7e85fd6\nparent 348c586bffb8f2d15c75fa8ed021c7a868c6c680\nparent 7995c916fe69eb4fbf7efdbf5cc25869e0111d75\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1586543232 +0000\ncommitter GitHub <noreply@github.com> 1586543232 +0000\n\nMerge #3931\n\n3931: profile queries r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/773bb5173d3d54e6d19dfadd75c342c7acdce287", "html_url": "https://github.com/rust-lang/rust/commit/773bb5173d3d54e6d19dfadd75c342c7acdce287", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/773bb5173d3d54e6d19dfadd75c342c7acdce287/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "348c586bffb8f2d15c75fa8ed021c7a868c6c680", "url": "https://api.github.com/repos/rust-lang/rust/commits/348c586bffb8f2d15c75fa8ed021c7a868c6c680", "html_url": "https://github.com/rust-lang/rust/commit/348c586bffb8f2d15c75fa8ed021c7a868c6c680"}, {"sha": "7995c916fe69eb4fbf7efdbf5cc25869e0111d75", "url": "https://api.github.com/repos/rust-lang/rust/commits/7995c916fe69eb4fbf7efdbf5cc25869e0111d75", "html_url": "https://github.com/rust-lang/rust/commit/7995c916fe69eb4fbf7efdbf5cc25869e0111d75"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "d96ac8c0ae1c4cda46f2174d859334f456cf1124", "filename": "crates/ra_hir_def/src/lang_item.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/773bb5173d3d54e6d19dfadd75c342c7acdce287/crates%2Fra_hir_def%2Fsrc%2Flang_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/773bb5173d3d54e6d19dfadd75c342c7acdce287/crates%2Fra_hir_def%2Fsrc%2Flang_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Flang_item.rs?ref=773bb5173d3d54e6d19dfadd75c342c7acdce287", "patch": "@@ -4,6 +4,7 @@\n //! features, such as Fn family of traits.\n use std::sync::Arc;\n \n+use ra_prof::profile;\n use ra_syntax::SmolStr;\n use rustc_hash::FxHashMap;\n \n@@ -78,6 +79,8 @@ impl LangItems {\n \n     /// Salsa query. This will look for lang items in a specific crate.\n     pub(crate) fn crate_lang_items_query(db: &dyn DefDatabase, krate: CrateId) -> Arc<LangItems> {\n+        let _p = profile(\"crate_lang_items_query\");\n+\n         let mut lang_items = LangItems::default();\n \n         let crate_def_map = db.crate_def_map(krate);\n@@ -95,6 +98,7 @@ impl LangItems {\n         db: &dyn DefDatabase,\n         module: ModuleId,\n     ) -> Option<Arc<LangItems>> {\n+        let _p = profile(\"module_lang_items_query\");\n         let mut lang_items = LangItems::default();\n         lang_items.collect_lang_items(db, module);\n         if lang_items.items.is_empty() {\n@@ -111,6 +115,7 @@ impl LangItems {\n         start_crate: CrateId,\n         item: SmolStr,\n     ) -> Option<LangItemTarget> {\n+        let _p = profile(\"lang_item_query\");\n         let lang_items = db.crate_lang_items(start_crate);\n         let start_crate_target = lang_items.items.get(&item);\n         if let Some(target) = start_crate_target {"}]}