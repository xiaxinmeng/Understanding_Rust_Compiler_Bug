{"sha": "7d844e871c2b6d3c86adff53792fc36fdd338eb2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkODQ0ZTg3MWMyYjZkM2M4NmFkZmY1Mzc5MmZjMzZmZGQzMzhlYjI=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-09-07T15:52:27Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-09-17T11:46:50Z"}, "message": "Add `feature(bind_by_move_pattern_guards)`.\n\nNote it requires MIR-borrowck to be enabled to actually do anything.\n\nNote also that it implicitly turns off our AST-based check for\nmutation in guards.", "tree": {"sha": "b0a1c602705c20ee6689f2c4a6051e1666ccfcea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0a1c602705c20ee6689f2c4a6051e1666ccfcea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d844e871c2b6d3c86adff53792fc36fdd338eb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d844e871c2b6d3c86adff53792fc36fdd338eb2", "html_url": "https://github.com/rust-lang/rust/commit/7d844e871c2b6d3c86adff53792fc36fdd338eb2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d844e871c2b6d3c86adff53792fc36fdd338eb2/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1aefb48d2ec7ac38a66c964396a5aec729b7a28", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1aefb48d2ec7ac38a66c964396a5aec729b7a28", "html_url": "https://github.com/rust-lang/rust/commit/f1aefb48d2ec7ac38a66c964396a5aec729b7a28"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "43bd82118c6617269ed5c7fb6e99d828ddc892a8", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/7d844e871c2b6d3c86adff53792fc36fdd338eb2/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d844e871c2b6d3c86adff53792fc36fdd338eb2/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=7d844e871c2b6d3c86adff53792fc36fdd338eb2", "patch": "@@ -1436,10 +1436,37 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n         self.queries.on_disk_cache.serialize(self.global_tcx(), encoder)\n     }\n \n+    /// This checks whether one is allowed to have pattern bindings\n+    /// that bind-by-move on a match arm that has a guard, e.g.:\n+    ///\n+    /// ```rust\n+    /// match foo { A(inner) if { /* something */ } => ..., ... }\n+    /// ```\n+    ///\n+    /// It is separate from check_for_mutation_in_guard_via_ast_walk,\n+    /// because that method has a narrower effect that can be toggled\n+    /// off via a separate `-Z` flag, at least for the short term.\n+    pub fn allow_bind_by_move_patterns_with_guards(self) -> bool {\n+        self.features().bind_by_move_pattern_guards && self.use_mir_borrowck()\n+    }\n+\n     /// If true, we should use a naive AST walk to determine if match\n     /// guard could perform bad mutations (or mutable-borrows).\n     pub fn check_for_mutation_in_guard_via_ast_walk(self) -> bool {\n-        !self.sess.opts.debugging_opts.disable_ast_check_for_mutation_in_guard\n+        // If someone passes the `-Z` flag, they're asking for the footgun.\n+        if self.sess.opts.debugging_opts.disable_ast_check_for_mutation_in_guard {\n+            return false;\n+        }\n+\n+        // If someone requests the feature, then be a little more\n+        // careful and ensure that MIR-borrowck is enabled (which can\n+        // happen via edition selection, via `feature(nll)`, or via an\n+        // appropriate `-Z` flag) before disabling the mutation check.\n+        if self.allow_bind_by_move_patterns_with_guards() {\n+            return false;\n+        }\n+\n+        return true;\n     }\n \n     /// If true, we should use the AST-based borrowck (we may *also* use"}, {"sha": "507019559fc304999121e79e4ae836824fb4c707", "filename": "src/librustc_mir/hair/pattern/check_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d844e871c2b6d3c86adff53792fc36fdd338eb2/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d844e871c2b6d3c86adff53792fc36fdd338eb2/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fcheck_match.rs?ref=7d844e871c2b6d3c86adff53792fc36fdd338eb2", "patch": "@@ -537,7 +537,7 @@ fn check_legality_of_move_bindings(cx: &MatchVisitor,\n                              \"cannot bind by-move with sub-bindings\")\n                 .span_label(p.span, \"binds an already bound by-move value by moving it\")\n                 .emit();\n-        } else if has_guard {\n+        } else if has_guard && !cx.tcx.allow_bind_by_move_patterns_with_guards() {\n             struct_span_err!(cx.tcx.sess, p.span, E0008,\n                       \"cannot bind by-move into a pattern guard\")\n                 .span_label(p.span, \"moves value into pattern guard\")"}, {"sha": "922e773f1443b196a23eee4a4628e227421972ef", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7d844e871c2b6d3c86adff53792fc36fdd338eb2/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d844e871c2b6d3c86adff53792fc36fdd338eb2/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=7d844e871c2b6d3c86adff53792fc36fdd338eb2", "patch": "@@ -515,6 +515,12 @@ declare_features! (\n \n     // Self struct constructor  (RFC 2302)\n     (active, self_struct_ctor, \"1.31.0\", Some(51994), None),\n+\n+    // allow mixing of bind-by-move in patterns and references to\n+    // those identifiers in guards, *if* we are using MIR-borrowck\n+    // (aka NLL). Essentially this means you need to be on\n+    // edition:2018 or later.\n+    (active, bind_by_move_pattern_guards, \"1.30.0\", Some(15287), None),\n );\n \n declare_features! ("}]}