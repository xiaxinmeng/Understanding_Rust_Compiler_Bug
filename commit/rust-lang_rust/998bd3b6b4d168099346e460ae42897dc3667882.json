{"sha": "998bd3b6b4d168099346e460ae42897dc3667882", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5OGJkM2I2YjRkMTY4MDk5MzQ2ZTQ2MGFlNDI4OTdkYzM2Njc4ODI=", "commit": {"author": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2020-10-02T22:03:33Z"}, "committer": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2020-10-02T22:03:33Z"}, "message": "Rename lint to invisible_characters", "tree": {"sha": "975d443460c1b7eadee08f51c0e9cd759d9c085e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/975d443460c1b7eadee08f51c0e9cd759d9c085e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/998bd3b6b4d168099346e460ae42897dc3667882", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/998bd3b6b4d168099346e460ae42897dc3667882", "html_url": "https://github.com/rust-lang/rust/commit/998bd3b6b4d168099346e460ae42897dc3667882", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/998bd3b6b4d168099346e460ae42897dc3667882/comments", "author": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45f25f82fe652e073445e6f1601d25a7a292d01c", "url": "https://api.github.com/repos/rust-lang/rust/commits/45f25f82fe652e073445e6f1601d25a7a292d01c", "html_url": "https://github.com/rust-lang/rust/commit/45f25f82fe652e073445e6f1601d25a7a292d01c"}], "stats": {"total": 41, "additions": 21, "deletions": 20}, "files": [{"sha": "617bf32f4639e776a534c337595ee1635c524ab9", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/998bd3b6b4d168099346e460ae42897dc3667882/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/998bd3b6b4d168099346e460ae42897dc3667882/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=998bd3b6b4d168099346e460ae42897dc3667882", "patch": "@@ -1647,6 +1647,7 @@ Released 2018-09-13\n [`invalid_ref`]: https://rust-lang.github.io/rust-clippy/master/index.html#invalid_ref\n [`invalid_regex`]: https://rust-lang.github.io/rust-clippy/master/index.html#invalid_regex\n [`invalid_upcast_comparisons`]: https://rust-lang.github.io/rust-clippy/master/index.html#invalid_upcast_comparisons\n+[`invisible_characters`]: https://rust-lang.github.io/rust-clippy/master/index.html#invisible_characters\n [`items_after_statements`]: https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements\n [`iter_cloned_collect`]: https://rust-lang.github.io/rust-clippy/master/index.html#iter_cloned_collect\n [`iter_next_loop`]: https://rust-lang.github.io/rust-clippy/master/index.html#iter_next_loop\n@@ -1922,6 +1923,5 @@ Released 2018-09-13\n [`zero_divided_by_zero`]: https://rust-lang.github.io/rust-clippy/master/index.html#zero_divided_by_zero\n [`zero_prefixed_literal`]: https://rust-lang.github.io/rust-clippy/master/index.html#zero_prefixed_literal\n [`zero_ptr`]: https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr\n-[`zero_width_space`]: https://rust-lang.github.io/rust-clippy/master/index.html#zero_width_space\n [`zst_offset`]: https://rust-lang.github.io/rust-clippy/master/index.html#zst_offset\n <!-- end autogenerated links to lint list -->"}, {"sha": "91244ec2724bc8c02465af805091f85243b5a019", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/998bd3b6b4d168099346e460ae42897dc3667882/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/998bd3b6b4d168099346e460ae42897dc3667882/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=998bd3b6b4d168099346e460ae42897dc3667882", "patch": "@@ -854,9 +854,9 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         &types::UNIT_CMP,\n         &types::UNNECESSARY_CAST,\n         &types::VEC_BOX,\n+        &unicode::INVISIBLE_CHARACTERS,\n         &unicode::NON_ASCII_LITERAL,\n         &unicode::UNICODE_NOT_NFC,\n-        &unicode::ZERO_WIDTH_SPACE,\n         &unit_return_expecting_ord::UNIT_RETURN_EXPECTING_ORD,\n         &unnamed_address::FN_ADDRESS_COMPARISONS,\n         &unnamed_address::VTABLE_ADDRESS_COMPARISONS,\n@@ -1511,7 +1511,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&types::UNIT_CMP),\n         LintId::of(&types::UNNECESSARY_CAST),\n         LintId::of(&types::VEC_BOX),\n-        LintId::of(&unicode::ZERO_WIDTH_SPACE),\n+        LintId::of(&unicode::INVISIBLE_CHARACTERS),\n         LintId::of(&unit_return_expecting_ord::UNIT_RETURN_EXPECTING_ORD),\n         LintId::of(&unnamed_address::FN_ADDRESS_COMPARISONS),\n         LintId::of(&unnamed_address::VTABLE_ADDRESS_COMPARISONS),\n@@ -1779,7 +1779,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&types::ABSURD_EXTREME_COMPARISONS),\n         LintId::of(&types::CAST_REF_TO_MUT),\n         LintId::of(&types::UNIT_CMP),\n-        LintId::of(&unicode::ZERO_WIDTH_SPACE),\n+        LintId::of(&unicode::INVISIBLE_CHARACTERS),\n         LintId::of(&unit_return_expecting_ord::UNIT_RETURN_EXPECTING_ORD),\n         LintId::of(&unnamed_address::FN_ADDRESS_COMPARISONS),\n         LintId::of(&unnamed_address::VTABLE_ADDRESS_COMPARISONS),\n@@ -1910,6 +1910,7 @@ pub fn register_renamed(ls: &mut rustc_lint::LintStore) {\n     ls.register_renamed(\"clippy::for_loop_over_option\", \"clippy::for_loops_over_fallibles\");\n     ls.register_renamed(\"clippy::for_loop_over_result\", \"clippy::for_loops_over_fallibles\");\n     ls.register_renamed(\"clippy::identity_conversion\", \"clippy::useless_conversion\");\n+    ls.register_renamed(\"clippy::zero_width_space\", \"clippy::invisible_characters\");\n }\n \n // only exists to let the dogfood integration test works."}, {"sha": "d6c8d317dc2f36e3c303cb76aed987d04c20d5b0", "filename": "clippy_lints/src/unicode.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/998bd3b6b4d168099346e460ae42897dc3667882/clippy_lints%2Fsrc%2Funicode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/998bd3b6b4d168099346e460ae42897dc3667882/clippy_lints%2Fsrc%2Funicode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funicode.rs?ref=998bd3b6b4d168099346e460ae42897dc3667882", "patch": "@@ -17,7 +17,7 @@ declare_clippy_lint! {\n     ///\n     /// **Example:** You don't see it, but there may be a zero-width space or soft hyphen\n     /// some\u00adwhere in this text.\n-    pub ZERO_WIDTH_SPACE,\n+    pub INVISIBLE_CHARACTERS,\n     correctness,\n     \"using an invisible character in a string literal, which is confusing\"\n }\n@@ -63,7 +63,7 @@ declare_clippy_lint! {\n     \"using a Unicode literal not in NFC normal form (see [Unicode tr15](http://www.unicode.org/reports/tr15/) for further information)\"\n }\n \n-declare_lint_pass!(Unicode => [ZERO_WIDTH_SPACE, NON_ASCII_LITERAL, UNICODE_NOT_NFC]);\n+declare_lint_pass!(Unicode => [INVISIBLE_CHARACTERS, NON_ASCII_LITERAL, UNICODE_NOT_NFC]);\n \n impl LateLintPass<'_> for Unicode {\n     fn check_expr(&mut self, cx: &LateContext<'_>, expr: &'_ Expr<'_>) {\n@@ -91,12 +91,12 @@ fn escape<T: Iterator<Item = char>>(s: T) -> String {\n \n fn check_str(cx: &LateContext<'_>, span: Span, id: HirId) {\n     let string = snippet(cx, span, \"\");\n-    if let Some(invisible) = string.chars().find(|c| ['\\u{200B}', '\\u{ad}'].contains(&c)) {\n+    if string.chars().any(|c| ['\\u{200B}', '\\u{ad}'].contains(&c)) {\n         span_lint_and_sugg(\n             cx,\n-            ZERO_WIDTH_SPACE,\n+            INVISIBLE_CHARACTERS,\n             span,\n-            &format!(\"invisible character detected: {:?}\", invisible),\n+            \"invisible character detected\",\n             \"consider replacing the string with\",\n             string.replace(\"\\u{200B}\", \"\\\\u{200B}\").replace(\"\\u{ad}\", \"\\\\u{AD}\"),\n             Applicability::MachineApplicable,"}, {"sha": "e7df733d3a279893428210d66916f8c04c2b25b7", "filename": "src/lintlist/mod.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/998bd3b6b4d168099346e460ae42897dc3667882/src%2Flintlist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/998bd3b6b4d168099346e460ae42897dc3667882/src%2Flintlist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flintlist%2Fmod.rs?ref=998bd3b6b4d168099346e460ae42897dc3667882", "patch": "@@ -969,6 +969,13 @@ pub static ref ALL_LINTS: Vec<Lint> = vec![\n         deprecation: None,\n         module: \"types\",\n     },\n+    Lint {\n+        name: \"invisible_characters\",\n+        group: \"correctness\",\n+        desc: \"using an invisible character in a string literal, which is confusing\",\n+        deprecation: None,\n+        module: \"unicode\",\n+    },\n     Lint {\n         name: \"items_after_statements\",\n         group: \"pedantic\",\n@@ -2810,13 +2817,6 @@ pub static ref ALL_LINTS: Vec<Lint> = vec![\n         deprecation: None,\n         module: \"misc\",\n     },\n-    Lint {\n-        name: \"zero_width_space\",\n-        group: \"correctness\",\n-        desc: \"using an invisible character in a string literal, which is confusing\",\n-        deprecation: None,\n-        module: \"unicode\",\n-    },\n     Lint {\n         name: \"zst_offset\",\n         group: \"correctness\","}, {"sha": "b6944e0485935ac56bc71ef620dc15d12874940c", "filename": "tests/ui/unicode.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/998bd3b6b4d168099346e460ae42897dc3667882/tests%2Fui%2Funicode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/998bd3b6b4d168099346e460ae42897dc3667882/tests%2Fui%2Funicode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funicode.rs?ref=998bd3b6b4d168099346e460ae42897dc3667882", "patch": "@@ -1,4 +1,4 @@\n-#[warn(clippy::zero_width_space)]\n+#[warn(clippy::invisible_characters)]\n fn zero() {\n     print!(\"Here >\u200b< is a ZWS, and \u200banother\");\n     print!(\"This\\u{200B}is\\u{200B}fine\");"}, {"sha": "595d80ea279263fe30bd7cae007ce9dce99afb75", "filename": "tests/ui/unicode.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/998bd3b6b4d168099346e460ae42897dc3667882/tests%2Fui%2Funicode.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/998bd3b6b4d168099346e460ae42897dc3667882/tests%2Fui%2Funicode.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funicode.stderr?ref=998bd3b6b4d168099346e460ae42897dc3667882", "patch": "@@ -1,12 +1,12 @@\n-error: invisible character detected: '/u{200b}'\n+error: invisible character detected\n   --> $DIR/unicode.rs:3:12\n    |\n LL |     print!(\"Here >\u200b< is a ZWS, and \u200banother\");\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider replacing the string with: `\"Here >/u{200B}< is a ZWS, and /u{200B}another\"`\n    |\n-   = note: `-D clippy::zero-width-space` implied by `-D warnings`\n+   = note: `-D clippy::invisible-characters` implied by `-D warnings`\n \n-error: invisible character detected: '/u{ad}'\n+error: invisible character detected\n   --> $DIR/unicode.rs:5:12\n    |\n LL |     print!(\"Here >\u00ad< is a SHY, and \u00adanother\");"}]}