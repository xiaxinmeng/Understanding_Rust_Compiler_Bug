{"sha": "53c12e085ab9595dff369f26046038afa20e8e5c", "node_id": "C_kwDOAAsO6NoAKDUzYzEyZTA4NWFiOTU5NWRmZjM2OWYyNjA0NjAzOGFmYTIwZThlNWM", "commit": {"author": {"name": "Robert Bastian", "email": "robertbastian@google.com", "date": "2023-01-09T20:29:42Z"}, "committer": {"name": "Robert Bastian", "email": "robertbastian@google.com", "date": "2023-01-09T20:29:42Z"}, "message": "hash xor peq", "tree": {"sha": "88940897cc734e9aaafb21fa59ef25f20513fcc3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88940897cc734e9aaafb21fa59ef25f20513fcc3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53c12e085ab9595dff369f26046038afa20e8e5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53c12e085ab9595dff369f26046038afa20e8e5c", "html_url": "https://github.com/rust-lang/rust/commit/53c12e085ab9595dff369f26046038afa20e8e5c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53c12e085ab9595dff369f26046038afa20e8e5c/comments", "author": {"login": "robertbastian", "id": 4706271, "node_id": "MDQ6VXNlcjQ3MDYyNzE=", "avatar_url": "https://avatars.githubusercontent.com/u/4706271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robertbastian", "html_url": "https://github.com/robertbastian", "followers_url": "https://api.github.com/users/robertbastian/followers", "following_url": "https://api.github.com/users/robertbastian/following{/other_user}", "gists_url": "https://api.github.com/users/robertbastian/gists{/gist_id}", "starred_url": "https://api.github.com/users/robertbastian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robertbastian/subscriptions", "organizations_url": "https://api.github.com/users/robertbastian/orgs", "repos_url": "https://api.github.com/users/robertbastian/repos", "events_url": "https://api.github.com/users/robertbastian/events{/privacy}", "received_events_url": "https://api.github.com/users/robertbastian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "robertbastian", "id": 4706271, "node_id": "MDQ6VXNlcjQ3MDYyNzE=", "avatar_url": "https://avatars.githubusercontent.com/u/4706271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robertbastian", "html_url": "https://github.com/robertbastian", "followers_url": "https://api.github.com/users/robertbastian/followers", "following_url": "https://api.github.com/users/robertbastian/following{/other_user}", "gists_url": "https://api.github.com/users/robertbastian/gists{/gist_id}", "starred_url": "https://api.github.com/users/robertbastian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robertbastian/subscriptions", "organizations_url": "https://api.github.com/users/robertbastian/orgs", "repos_url": "https://api.github.com/users/robertbastian/repos", "events_url": "https://api.github.com/users/robertbastian/events{/privacy}", "received_events_url": "https://api.github.com/users/robertbastian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41b2a3d9fe20784bb1be0ac87a15fea015c3eac2", "url": "https://api.github.com/repos/rust-lang/rust/commits/41b2a3d9fe20784bb1be0ac87a15fea015c3eac2", "html_url": "https://github.com/rust-lang/rust/commit/41b2a3d9fe20784bb1be0ac87a15fea015c3eac2"}], "stats": {"total": 61, "additions": 3, "deletions": 58}, "files": [{"sha": "e39a31a8c725e2c8570b4b52ecac1bc6dfa5bacb", "filename": "clippy_lints/src/derive.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/53c12e085ab9595dff369f26046038afa20e8e5c/clippy_lints%2Fsrc%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53c12e085ab9595dff369f26046038afa20e8e5c/clippy_lints%2Fsrc%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fderive.rs?ref=53c12e085ab9595dff369f26046038afa20e8e5c", "patch": "@@ -243,7 +243,7 @@ fn check_hash_peq<'tcx>(\n             cx.tcx.for_each_relevant_impl(peq_trait_def_id, ty, |impl_id| {\n                 let peq_is_automatically_derived = cx.tcx.has_attr(impl_id, sym::automatically_derived);\n \n-                if peq_is_automatically_derived == hash_is_automatically_derived {\n+                if !hash_is_automatically_derived || peq_is_automatically_derived {\n                     return;\n                 }\n \n@@ -252,17 +252,11 @@ fn check_hash_peq<'tcx>(\n                 // Only care about `impl PartialEq<Foo> for Foo`\n                 // For `impl PartialEq<B> for A, input_types is [A, B]\n                 if trait_ref.substs.type_at(1) == ty {\n-                    let mess = if peq_is_automatically_derived {\n-                        \"you are implementing `Hash` explicitly but have derived `PartialEq`\"\n-                    } else {\n-                        \"you are deriving `Hash` but have implemented `PartialEq` explicitly\"\n-                    };\n-\n                     span_lint_and_then(\n                         cx,\n                         DERIVE_HASH_XOR_EQ,\n                         span,\n-                        mess,\n+                        \"you are deriving `Hash` but have implemented `PartialEq` explicitly\",\n                         |diag| {\n                             if let Some(local_def_id) = impl_id.as_local() {\n                                 let hir_id = cx.tcx.hir().local_def_id_to_hir_id(local_def_id);"}, {"sha": "0804e3cffa1a28dceaabe41f17a26297c5636aea", "filename": "tests/ui/derive_hash_xor_eq.rs", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/53c12e085ab9595dff369f26046038afa20e8e5c/tests%2Fui%2Fderive_hash_xor_eq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53c12e085ab9595dff369f26046038afa20e8e5c/tests%2Fui%2Fderive_hash_xor_eq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fderive_hash_xor_eq.rs?ref=53c12e085ab9595dff369f26046038afa20e8e5c", "patch": "@@ -34,23 +34,4 @@ impl std::hash::Hash for Bah {\n     fn hash<H: std::hash::Hasher>(&self, _: &mut H) {}\n }\n \n-#[derive(PartialEq)]\n-struct Foo2;\n-\n-trait Hash {}\n-\n-// We don't want to lint on user-defined traits called `Hash`\n-impl Hash for Foo2 {}\n-\n-mod use_hash {\n-    use std::hash::{Hash, Hasher};\n-\n-    #[derive(PartialEq)]\n-    struct Foo3;\n-\n-    impl Hash for Foo3 {\n-        fn hash<H: std::hash::Hasher>(&self, _: &mut H) {}\n-    }\n-}\n-\n fn main() {}"}, {"sha": "16965aa42d8c48efe47e1d49f39461a4d7eb9aee", "filename": "tests/ui/derive_hash_xor_eq.stderr", "status": "modified", "additions": 1, "deletions": 31, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/53c12e085ab9595dff369f26046038afa20e8e5c/tests%2Fui%2Fderive_hash_xor_eq.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/53c12e085ab9595dff369f26046038afa20e8e5c/tests%2Fui%2Fderive_hash_xor_eq.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fderive_hash_xor_eq.stderr?ref=53c12e085ab9595dff369f26046038afa20e8e5c", "patch": "@@ -25,35 +25,5 @@ LL | impl PartialEq<Baz> for Baz {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: this error originates in the derive macro `Hash` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: you are implementing `Hash` explicitly but have derived `PartialEq`\n-  --> $DIR/derive_hash_xor_eq.rs:33:1\n-   |\n-LL | / impl std::hash::Hash for Bah {\n-LL | |     fn hash<H: std::hash::Hasher>(&self, _: &mut H) {}\n-LL | | }\n-   | |_^\n-   |\n-note: `PartialEq` implemented here\n-  --> $DIR/derive_hash_xor_eq.rs:30:10\n-   |\n-LL | #[derive(PartialEq)]\n-   |          ^^^^^^^^^\n-   = note: this error originates in the derive macro `PartialEq` (in Nightly builds, run with -Z macro-backtrace for more info)\n-\n-error: you are implementing `Hash` explicitly but have derived `PartialEq`\n-  --> $DIR/derive_hash_xor_eq.rs:51:5\n-   |\n-LL | /     impl Hash for Foo3 {\n-LL | |         fn hash<H: std::hash::Hasher>(&self, _: &mut H) {}\n-LL | |     }\n-   | |_____^\n-   |\n-note: `PartialEq` implemented here\n-  --> $DIR/derive_hash_xor_eq.rs:48:14\n-   |\n-LL |     #[derive(PartialEq)]\n-   |              ^^^^^^^^^\n-   = note: this error originates in the derive macro `PartialEq` (in Nightly builds, run with -Z macro-backtrace for more info)\n-\n-error: aborting due to 4 previous errors\n+error: aborting due to 2 previous errors\n "}]}