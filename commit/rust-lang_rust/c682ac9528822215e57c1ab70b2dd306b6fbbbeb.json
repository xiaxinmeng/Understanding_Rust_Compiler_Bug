{"sha": "c682ac9528822215e57c1ab70b2dd306b6fbbbeb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2ODJhYzk1Mjg4MjIyMTVlNTdjMWFiNzBiMmRkMzA2YjZmYmJiZWI=", "commit": {"author": {"name": "Marc-Antoine Perennou", "email": "Marc-Antoine@Perennou.com", "date": "2019-06-13T15:41:03Z"}, "committer": {"name": "Marc-Antoine Perennou", "email": "Marc-Antoine@Perennou.com", "date": "2019-06-13T15:41:03Z"}, "message": "rustbuild: set cxx for hosts even if not configured\n\nSigned-off-by: Marc-Antoine Perennou <Marc-Antoine@Perennou.com>", "tree": {"sha": "cf64cb4f6a0db081f904ed97f56909cbd91b7f77", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf64cb4f6a0db081f904ed97f56909cbd91b7f77"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c682ac9528822215e57c1ab70b2dd306b6fbbbeb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c682ac9528822215e57c1ab70b2dd306b6fbbbeb", "html_url": "https://github.com/rust-lang/rust/commit/c682ac9528822215e57c1ab70b2dd306b6fbbbeb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c682ac9528822215e57c1ab70b2dd306b6fbbbeb/comments", "author": {"login": "Keruspe", "id": 222942, "node_id": "MDQ6VXNlcjIyMjk0Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/222942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Keruspe", "html_url": "https://github.com/Keruspe", "followers_url": "https://api.github.com/users/Keruspe/followers", "following_url": "https://api.github.com/users/Keruspe/following{/other_user}", "gists_url": "https://api.github.com/users/Keruspe/gists{/gist_id}", "starred_url": "https://api.github.com/users/Keruspe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Keruspe/subscriptions", "organizations_url": "https://api.github.com/users/Keruspe/orgs", "repos_url": "https://api.github.com/users/Keruspe/repos", "events_url": "https://api.github.com/users/Keruspe/events{/privacy}", "received_events_url": "https://api.github.com/users/Keruspe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Keruspe", "id": 222942, "node_id": "MDQ6VXNlcjIyMjk0Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/222942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Keruspe", "html_url": "https://github.com/Keruspe", "followers_url": "https://api.github.com/users/Keruspe/followers", "following_url": "https://api.github.com/users/Keruspe/following{/other_user}", "gists_url": "https://api.github.com/users/Keruspe/gists{/gist_id}", "starred_url": "https://api.github.com/users/Keruspe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Keruspe/subscriptions", "organizations_url": "https://api.github.com/users/Keruspe/orgs", "repos_url": "https://api.github.com/users/Keruspe/repos", "events_url": "https://api.github.com/users/Keruspe/events{/privacy}", "received_events_url": "https://api.github.com/users/Keruspe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fdecfe4ca56d5ba47662e7980f8e7335250bc6c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/fdecfe4ca56d5ba47662e7980f8e7335250bc6c1", "html_url": "https://github.com/rust-lang/rust/commit/fdecfe4ca56d5ba47662e7980f8e7335250bc6c1"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "71d08ae38efadd90d9d9725036f74c5cace22769", "filename": "src/bootstrap/cc_detect.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c682ac9528822215e57c1ab70b2dd306b6fbbbeb/src%2Fbootstrap%2Fcc_detect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c682ac9528822215e57c1ab70b2dd306b6fbbbeb/src%2Fbootstrap%2Fcc_detect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcc_detect.rs?ref=c682ac9528822215e57c1ab70b2dd306b6fbbbeb", "patch": "@@ -110,7 +110,7 @@ pub fn find(build: &mut Build) {\n             set_compiler(&mut cfg, Language::CPlusPlus, target, config, build)\n         };\n \n-        if cxx_configured {\n+        if cxx_configured || build.hosts.contains(&target) {\n             let compiler = cfg.get_compiler();\n             build.cxx.insert(target, compiler);\n         }"}]}