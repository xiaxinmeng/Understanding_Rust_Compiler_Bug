{"sha": "98f6e9644bc008df72eeacbd6d8ba34fcda6422b", "node_id": "C_kwDOAAsO6NoAKDk4ZjZlOTY0NGJjMDA4ZGY3MmVlYWNiZDZkOGJhMzRmY2RhNjQyMmI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-06-14T04:25:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-06-14T04:25:48Z"}, "message": "Rollup merge of #112495 - bvanjoi:fix-109153, r=petrochenkov\n\nfix(resolve): update shadowed_glob more precision\n\n- Fixes #109153\n- Fixes #109962\n\n## Why does it panic?\n\nWe use #109153 as an illustration.\n\nThe process of `resolve_imports` is:\n\n| Iter | resolve     | resolution of **`(Mod(root), Ident(bar) in type ns)`** |\n| -    | -           | -      |\n| 0 | `use foo::*`   | `binding` -> foo::bar, `shallowed_glob` -> `None` |\n| 1 | `use bar::bar` | `binding` -> foo::bar::bar, `shallowed_glob` -> foo::bar    |\n| 2 | `use bar::*`   | `binding` -> foo::bar::bar, `shallowed_glob` -> foo::bar::bar::bar |\n\nSo during `finalize_import`, the `root::bar` in `use bar::bar` had been pointed to `foo::bar::bar::bar`, which is different from the `initial_module` valued of `foo::bar`, therefore, the panic had been triggered.\n\n## Try to solve it\n\n~I think #109153 should check-pass rather than throw an ambiguous error. Following this idea, there are two ways to solve this problem:~\n\n~1. Give up the `initial_module` and update `import.imported_module` after each resolution update. However, I think this method may have too much impact.~\n~2. Do not update the `shadowed_glob` when it is defined.~\n\n~To be honest, I am not sure if this is the right way to solve this ICE. Perhaps there is a better resolution.~\n\nEdit: we had made the `resolution.shadowed_glob` update more detailed.\n\nr? `@petrochenkov`", "tree": {"sha": "896681cef5ebf0ce2a853eb6a10cdbb1ee1fb590", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/896681cef5ebf0ce2a853eb6a10cdbb1ee1fb590"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98f6e9644bc008df72eeacbd6d8ba34fcda6422b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkiUFMCRBK7hj4Ov3rIwAArtsIAD7P1vhwTE0eXyodJO9GHN8Z\nIExkkD7g6Okn7EcBu+jfWZYY1Nl1TO/fAXIzEdzJK4Ptu1fVfDgAEbsK7Ww4C3M6\nsKJY/VPP6fo7UWB8B/nNpTJ8ciF8+doWDl6jlzEkKbuVCREn10MjOmvq+VhT+EhJ\nT8kZJ3GYXHeb4XUuJqkTcRhwm85rTCvoDI6PsYPuRrs++Lvcri+ioT9GH/jQurQC\nkkfUmfk1FZoPGCV1nrNC5O5nwVI3BfSsDtSyl2TbhJty48RfOQMtx9fYg5pn+80H\nCSEIEc8ZwwXRMBfI3MlVzkrbkJBcWhpNxtkD/Ix8oa9CDisM6PHb7lSkLx27qzw=\n=f1G+\n-----END PGP SIGNATURE-----\n", "payload": "tree 896681cef5ebf0ce2a853eb6a10cdbb1ee1fb590\nparent 6fc50dacd4a7949898d77cf14b7047bf17b76921\nparent f7330eb752cdd83a9b944d1d64a092c7d2454c17\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1686716748 +0200\ncommitter GitHub <noreply@github.com> 1686716748 +0200\n\nRollup merge of #112495 - bvanjoi:fix-109153, r=petrochenkov\n\nfix(resolve): update shadowed_glob more precision\n\n- Fixes #109153\n- Fixes #109962\n\n## Why does it panic?\n\nWe use #109153 as an illustration.\n\nThe process of `resolve_imports` is:\n\n| Iter | resolve     | resolution of **`(Mod(root), Ident(bar) in type ns)`** |\n| -    | -           | -      |\n| 0 | `use foo::*`   | `binding` -> foo::bar, `shallowed_glob` -> `None` |\n| 1 | `use bar::bar` | `binding` -> foo::bar::bar, `shallowed_glob` -> foo::bar    |\n| 2 | `use bar::*`   | `binding` -> foo::bar::bar, `shallowed_glob` -> foo::bar::bar::bar |\n\nSo during `finalize_import`, the `root::bar` in `use bar::bar` had been pointed to `foo::bar::bar::bar`, which is different from the `initial_module` valued of `foo::bar`, therefore, the panic had been triggered.\n\n## Try to solve it\n\n~I think #109153 should check-pass rather than throw an ambiguous error. Following this idea, there are two ways to solve this problem:~\n\n~1. Give up the `initial_module` and update `import.imported_module` after each resolution update. However, I think this method may have too much impact.~\n~2. Do not update the `shadowed_glob` when it is defined.~\n\n~To be honest, I am not sure if this is the right way to solve this ICE. Perhaps there is a better resolution.~\n\nEdit: we had made the `resolution.shadowed_glob` update more detailed.\n\nr? `@petrochenkov`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98f6e9644bc008df72eeacbd6d8ba34fcda6422b", "html_url": "https://github.com/rust-lang/rust/commit/98f6e9644bc008df72eeacbd6d8ba34fcda6422b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98f6e9644bc008df72eeacbd6d8ba34fcda6422b/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6fc50dacd4a7949898d77cf14b7047bf17b76921", "url": "https://api.github.com/repos/rust-lang/rust/commits/6fc50dacd4a7949898d77cf14b7047bf17b76921", "html_url": "https://github.com/rust-lang/rust/commit/6fc50dacd4a7949898d77cf14b7047bf17b76921"}, {"sha": "f7330eb752cdd83a9b944d1d64a092c7d2454c17", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7330eb752cdd83a9b944d1d64a092c7d2454c17", "html_url": "https://github.com/rust-lang/rust/commit/f7330eb752cdd83a9b944d1d64a092c7d2454c17"}], "stats": {"total": 57, "additions": 55, "deletions": 2}, "files": [{"sha": "47d8e5993fd825e1a02d81f94d606dcf72e037b5", "filename": "compiler/rustc_resolve/src/imports.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/98f6e9644bc008df72eeacbd6d8ba34fcda6422b/compiler%2Frustc_resolve%2Fsrc%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98f6e9644bc008df72eeacbd6d8ba34fcda6422b/compiler%2Frustc_resolve%2Fsrc%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fimports.rs?ref=98f6e9644bc008df72eeacbd6d8ba34fcda6422b", "patch": "@@ -338,7 +338,21 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n                         } else {\n                             resolution.binding = Some(nonglob_binding);\n                         }\n-                        resolution.shadowed_glob = Some(glob_binding);\n+\n+                        if let Some(old_binding) = resolution.shadowed_glob {\n+                            assert!(old_binding.is_glob_import());\n+                            if glob_binding.res() != old_binding.res() {\n+                                resolution.shadowed_glob = Some(this.ambiguity(\n+                                    AmbiguityKind::GlobVsGlob,\n+                                    old_binding,\n+                                    glob_binding,\n+                                ));\n+                            } else if !old_binding.vis.is_at_least(binding.vis, this.tcx) {\n+                                resolution.shadowed_glob = Some(glob_binding);\n+                            }\n+                        } else {\n+                            resolution.shadowed_glob = Some(glob_binding);\n+                        }\n                     }\n                     (false, false) => {\n                         return Err(old_binding);"}, {"sha": "a049cac830ab4acc32313f36fa60b924b73d7728", "filename": "tests/ui/resolve/issue-105069.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/98f6e9644bc008df72eeacbd6d8ba34fcda6422b/tests%2Fui%2Fresolve%2Fissue-105069.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/98f6e9644bc008df72eeacbd6d8ba34fcda6422b/tests%2Fui%2Fresolve%2Fissue-105069.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fresolve%2Fissue-105069.stderr?ref=98f6e9644bc008df72eeacbd6d8ba34fcda6422b", "patch": "@@ -4,17 +4,19 @@ error[E0659]: `V` is ambiguous\n LL | use V;\n    |     ^ ambiguous name\n    |\n-   = note: ambiguous because of multiple potential import sources\n+   = note: ambiguous because of multiple glob imports of a name in the same module\n note: `V` could refer to the variant imported here\n   --> $DIR/issue-105069.rs:1:5\n    |\n LL | use self::A::*;\n    |     ^^^^^^^^^^\n+   = help: consider adding an explicit import of `V` to disambiguate\n note: `V` could also refer to the variant imported here\n   --> $DIR/issue-105069.rs:3:5\n    |\n LL | use self::B::*;\n    |     ^^^^^^^^^^\n+   = help: consider adding an explicit import of `V` to disambiguate\n \n error: aborting due to previous error\n "}, {"sha": "bff6c911236e641772c0d0a2c906ecd7e7cb0a3d", "filename": "tests/ui/resolve/issue-109153.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/98f6e9644bc008df72eeacbd6d8ba34fcda6422b/tests%2Fui%2Fresolve%2Fissue-109153.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98f6e9644bc008df72eeacbd6d8ba34fcda6422b/tests%2Fui%2Fresolve%2Fissue-109153.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fresolve%2Fissue-109153.rs?ref=98f6e9644bc008df72eeacbd6d8ba34fcda6422b", "patch": "@@ -0,0 +1,14 @@\n+use foo::*;\n+\n+mod foo {\n+    pub mod bar {\n+        pub mod bar {\n+            pub mod bar {}\n+        }\n+    }\n+}\n+\n+use bar::bar; //~ ERROR `bar` is ambiguous\n+use bar::*;\n+\n+fn main() { }"}, {"sha": "1a345d2a3e3a71ad6c2754b8d793be55952c822e", "filename": "tests/ui/resolve/issue-109153.stderr", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/98f6e9644bc008df72eeacbd6d8ba34fcda6422b/tests%2Fui%2Fresolve%2Fissue-109153.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/98f6e9644bc008df72eeacbd6d8ba34fcda6422b/tests%2Fui%2Fresolve%2Fissue-109153.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fresolve%2Fissue-109153.stderr?ref=98f6e9644bc008df72eeacbd6d8ba34fcda6422b", "patch": "@@ -0,0 +1,23 @@\n+error[E0659]: `bar` is ambiguous\n+  --> $DIR/issue-109153.rs:11:5\n+   |\n+LL | use bar::bar;\n+   |     ^^^ ambiguous name\n+   |\n+   = note: ambiguous because of multiple glob imports of a name in the same module\n+note: `bar` could refer to the module imported here\n+  --> $DIR/issue-109153.rs:1:5\n+   |\n+LL | use foo::*;\n+   |     ^^^^^^\n+   = help: consider adding an explicit import of `bar` to disambiguate\n+note: `bar` could also refer to the module imported here\n+  --> $DIR/issue-109153.rs:12:5\n+   |\n+LL | use bar::*;\n+   |     ^^^^^^\n+   = help: consider adding an explicit import of `bar` to disambiguate\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0659`."}]}