{"sha": "a5d624d32c9cc04fa8424918c55d7a7bbe520ba1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1ZDYyNGQzMmM5Y2MwNGZhODQyNDkxOGM1NWQ3YTdiYmU1MjBiYTE=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2019-11-18T23:05:01Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2019-11-18T23:05:01Z"}, "message": "Generate DWARF address ranges for faster lookups\n\nThis adds a new option `-Zgenerate-arange-section`, enabled by default,\ncorresponding to LLVM's `-generate-arange-section`. This creates a\n`.debug_aranges` section with DWARF address ranges, which some tools\ndepend on to optimize address lookups (elfutils [22288], [25173]).\n\nThis only has effect when debuginfo is enabled, and the additional data\nis small compared to the other debug sections. For example, libstd.so\nwith full debuginfo is about 11MB, with just 61kB in aranges.\n\n[22288]: https://sourceware.org/bugzilla/show_bug.cgi?id=22288\n[25173]: https://sourceware.org/bugzilla/show_bug.cgi?id=25173\n\nCloses #45246.", "tree": {"sha": "a6b993f67d9d79ceb9d799e1c47677f6aa3baea3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6b993f67d9d79ceb9d799e1c47677f6aa3baea3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5d624d32c9cc04fa8424918c55d7a7bbe520ba1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5d624d32c9cc04fa8424918c55d7a7bbe520ba1", "html_url": "https://github.com/rust-lang/rust/commit/a5d624d32c9cc04fa8424918c55d7a7bbe520ba1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5d624d32c9cc04fa8424918c55d7a7bbe520ba1/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0d40f8bdfcc3c28355467973f97fd4c45ac5876", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0d40f8bdfcc3c28355467973f97fd4c45ac5876", "html_url": "https://github.com/rust-lang/rust/commit/a0d40f8bdfcc3c28355467973f97fd4c45ac5876"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "f2e07850aa47c1ee256329d814b5a6d1868a2ade", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a5d624d32c9cc04fa8424918c55d7a7bbe520ba1/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5d624d32c9cc04fa8424918c55d7a7bbe520ba1/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=a5d624d32c9cc04fa8424918c55d7a7bbe520ba1", "patch": "@@ -1331,6 +1331,8 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n         \"for every macro invocation, print its name and arguments\"),\n     debug_macros: bool = (false, parse_bool, [TRACKED],\n         \"emit line numbers debug info inside macros\"),\n+    generate_arange_section: bool = (true, parse_bool, [UNTRACKED],\n+        \"generate DWARF address ranges for faster lookups\"),\n     keep_hygiene_data: bool = (false, parse_bool, [UNTRACKED],\n         \"don't clear the hygiene data after analysis\"),\n     keep_ast: bool = (false, parse_bool, [UNTRACKED],"}, {"sha": "290ca40926104c5cc2a2635bf4f0f595cfbbc2b2", "filename": "src/librustc_codegen_llvm/llvm_util.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a5d624d32c9cc04fa8424918c55d7a7bbe520ba1/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5d624d32c9cc04fa8424918c55d7a7bbe520ba1/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs?ref=a5d624d32c9cc04fa8424918c55d7a7bbe520ba1", "patch": "@@ -62,6 +62,9 @@ unsafe fn configure_llvm(sess: &Session) {\n         if sess.opts.debugging_opts.disable_instrumentation_preinliner {\n             add(\"-disable-preinline\");\n         }\n+        if sess.opts.debugging_opts.generate_arange_section {\n+            add(\"-generate-arange-section\");\n+        }\n         if get_major_version() >= 8 {\n             match sess.opts.debugging_opts.merge_functions\n                   .unwrap_or(sess.target.target.options.merge_functions) {"}]}