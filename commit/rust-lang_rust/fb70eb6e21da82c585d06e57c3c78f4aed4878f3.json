{"sha": "fb70eb6e21da82c585d06e57c3c78f4aed4878f3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiNzBlYjZlMjFkYTgyYzU4NWQwNmU1N2MzYzc4ZjRhZWQ0ODc4ZjM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-06-25T06:50:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-25T06:50:18Z"}, "message": "Merge #5047\n\n5047: matching brace works for | in lambdas r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "51d1aaf6a4824bbbdf0a9b8e0f59751c4e8ae687", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51d1aaf6a4824bbbdf0a9b8e0f59751c4e8ae687"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb70eb6e21da82c585d06e57c3c78f4aed4878f3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe9EkqCRBK7hj4Ov3rIwAAdHIIACqJ1Kl8vMJla/XaR50uDIY0\neoxG5sQo7q8NnF6X3M4hf/StJBKZoCDJkC4aLEpgGcmZoSIDqYufSNguUBtwrWuy\nW8LfbdLg1OkbMU/vTX7BHnWnIg2prrI76JVNRLL5gvvHH9vWahTU1jzUb2WnMmjJ\nXA0bGi5rVurIPb0V/6I63kS7HJ4+jfiTIZIken8uLmt/eOFEC5A5+iUGA1zGc5SJ\nmarPaOjhJwGOJ+ETX83jIweVX84WGwyJDC7Wgl+hBYUuE0fP0kTYq1nYlsZI2wgd\ngjXdCWoBQK8kIrdOFMXYOcPctFb2/D2Gb9fQa4HktRhIswQ6ZrpoKz2YuKMGNKw=\n=z9Nd\n-----END PGP SIGNATURE-----\n", "payload": "tree 51d1aaf6a4824bbbdf0a9b8e0f59751c4e8ae687\nparent 659b16981a19b3b47f63e6cd4b7f668775e8e9a4\nparent db58b3e063f8de65f3e2db63efebe1ff9102db31\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1593067818 +0000\ncommitter GitHub <noreply@github.com> 1593067818 +0000\n\nMerge #5047\n\n5047: matching brace works for | in lambdas r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb70eb6e21da82c585d06e57c3c78f4aed4878f3", "html_url": "https://github.com/rust-lang/rust/commit/fb70eb6e21da82c585d06e57c3c78f4aed4878f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb70eb6e21da82c585d06e57c3c78f4aed4878f3/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "659b16981a19b3b47f63e6cd4b7f668775e8e9a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/659b16981a19b3b47f63e6cd4b7f668775e8e9a4", "html_url": "https://github.com/rust-lang/rust/commit/659b16981a19b3b47f63e6cd4b7f668775e8e9a4"}, {"sha": "db58b3e063f8de65f3e2db63efebe1ff9102db31", "url": "https://api.github.com/repos/rust-lang/rust/commits/db58b3e063f8de65f3e2db63efebe1ff9102db31", "html_url": "https://github.com/rust-lang/rust/commit/db58b3e063f8de65f3e2db63efebe1ff9102db31"}], "stats": {"total": 27, "additions": 22, "deletions": 5}, "files": [{"sha": "685ba10adbec0afdb22dc91f080d6bf1fc145f57", "filename": "crates/ra_ide/src/matching_brace.rs", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/fb70eb6e21da82c585d06e57c3c78f4aed4878f3/crates%2Fra_ide%2Fsrc%2Fmatching_brace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb70eb6e21da82c585d06e57c3c78f4aed4878f3/crates%2Fra_ide%2Fsrc%2Fmatching_brace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fmatching_brace.rs?ref=fb70eb6e21da82c585d06e57c3c78f4aed4878f3", "patch": "@@ -1,8 +1,12 @@\n-use ra_syntax::{ast::AstNode, SourceFile, SyntaxKind, TextSize, T};\n+use ra_syntax::{\n+    ast::{self, AstNode},\n+    SourceFile, SyntaxKind, TextSize, T,\n+};\n+use test_utils::mark;\n \n // Feature: Matching Brace\n //\n-// If the cursor is on any brace (`<>(){}[]`) which is a part of a brace-pair,\n+// If the cursor is on any brace (`<>(){}[]||`) which is a part of a brace-pair,\n // moves cursor to the matching brace. It uses the actual parser to determine\n // braces, so it won't confuse generics with comparisons.\n //\n@@ -13,16 +17,20 @@ use ra_syntax::{ast::AstNode, SourceFile, SyntaxKind, TextSize, T};\n // |===\n pub fn matching_brace(file: &SourceFile, offset: TextSize) -> Option<TextSize> {\n     const BRACES: &[SyntaxKind] =\n-        &[T!['{'], T!['}'], T!['['], T![']'], T!['('], T![')'], T![<], T![>]];\n-    let (brace_node, brace_idx) = file\n+        &[T!['{'], T!['}'], T!['['], T![']'], T!['('], T![')'], T![<], T![>], T![|], T![|]];\n+    let (brace_token, brace_idx) = file\n         .syntax()\n         .token_at_offset(offset)\n         .filter_map(|node| {\n             let idx = BRACES.iter().position(|&brace| brace == node.kind())?;\n             Some((node, idx))\n         })\n         .next()?;\n-    let parent = brace_node.parent();\n+    let parent = brace_token.parent();\n+    if brace_token.kind() == T![|] && !ast::ParamList::can_cast(parent.kind()) {\n+        mark::hit!(pipes_not_braces);\n+        return None;\n+    }\n     let matching_kind = BRACES[brace_idx ^ 1];\n     let matching_node = parent.children_with_tokens().find(|node| node.kind() == matching_kind)?;\n     Some(matching_node.text_range().start())\n@@ -48,5 +56,14 @@ mod tests {\n         }\n \n         do_check(\"struct Foo { a: i32, }<|>\", \"struct Foo <|>{ a: i32, }\");\n+        do_check(\"fn main() { |x: i32|<|> x * 2;}\", \"fn main() { <|>|x: i32| x * 2;}\");\n+\n+        {\n+            mark::check!(pipes_not_braces);\n+            do_check(\n+                \"fn main() { match 92 { 1 | 2 |<|> 3 => 92 } }\",\n+                \"fn main() { match 92 { 1 | 2 |<|> 3 => 92 } }\",\n+            );\n+        }\n     }\n }"}]}