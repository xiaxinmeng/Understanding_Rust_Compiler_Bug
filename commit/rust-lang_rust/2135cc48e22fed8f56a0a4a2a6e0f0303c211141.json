{"sha": "2135cc48e22fed8f56a0a4a2a6e0f0303c211141", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxMzVjYzQ4ZTIyZmVkOGY1NmEwYTRhMmE2ZTBmMDMwM2MyMTExNDE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-21T18:07:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-21T18:07:40Z"}, "message": "Rollup merge of #67489 - Mark-Simulacrum:drop-petgraph, r=Centril\n\nDrop petgraph dependency from bootstrap\n\nIt was essentially unused, likely leftover from a previous refactoring iteration. This should hopefully help reduce bootstrap build times a little, dropping petgraph, fixedbitset, and ordermap from the dependency set.\n\nr? @alexcrichton", "tree": {"sha": "c51af6a4dce0d2314fe6f69af7f50965703e6094", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c51af6a4dce0d2314fe6f69af7f50965703e6094"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2135cc48e22fed8f56a0a4a2a6e0f0303c211141", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd/l9sCRBK7hj4Ov3rIwAAdHIIAG/311kbSiAU9MaWTu7q/kEG\nLH/QAg8JWlMruN4R8KCofC5REIkGcsNE8bR8S/WU7KXGHIBUyl82+yNsrq/Qzmfq\ngK424iuiDsbNXSWLxRsrmvmwwL7Qp+5OlNjCHxLPh+vnvsQAWAQG1db9rtluxRMp\nn1Yxt2lrA4jd7Pas0ogkzgqGaFL1jdRa7xkcrnR4Zgz5Y6RqOv4bOkNhvmWvFMU5\n7cSBOwWz5KVNdKSlIw8d3n2wUVPLSOOrNeWKtKvR7jiFt019ydLt2U5Iy3/B9b3W\nTs3dySwThRn5M+FqVScEKo+F3kuGcwxiHrdHxauCVaoCg2S7G2zwStvTZynW9T4=\n=casg\n-----END PGP SIGNATURE-----\n", "payload": "tree c51af6a4dce0d2314fe6f69af7f50965703e6094\nparent b9a6d74902502c7052ae45fb7c804de896458be0\nparent 28af652793f5a1a366f1f04a0d790806a4300a7a\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1576951660 +0100\ncommitter GitHub <noreply@github.com> 1576951660 +0100\n\nRollup merge of #67489 - Mark-Simulacrum:drop-petgraph, r=Centril\n\nDrop petgraph dependency from bootstrap\n\nIt was essentially unused, likely leftover from a previous refactoring iteration. This should hopefully help reduce bootstrap build times a little, dropping petgraph, fixedbitset, and ordermap from the dependency set.\n\nr? @alexcrichton\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2135cc48e22fed8f56a0a4a2a6e0f0303c211141", "html_url": "https://github.com/rust-lang/rust/commit/2135cc48e22fed8f56a0a4a2a6e0f0303c211141", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2135cc48e22fed8f56a0a4a2a6e0f0303c211141/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9a6d74902502c7052ae45fb7c804de896458be0", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9a6d74902502c7052ae45fb7c804de896458be0", "html_url": "https://github.com/rust-lang/rust/commit/b9a6d74902502c7052ae45fb7c804de896458be0"}, {"sha": "28af652793f5a1a366f1f04a0d790806a4300a7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/28af652793f5a1a366f1f04a0d790806a4300a7a", "html_url": "https://github.com/rust-lang/rust/commit/28af652793f5a1a366f1f04a0d790806a4300a7a"}], "stats": {"total": 71, "additions": 1, "deletions": 70}, "files": [{"sha": "13230a9b8e78f50973918f2ec62f16623f4cb031", "filename": "Cargo.lock", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/2135cc48e22fed8f56a0a4a2a6e0f0303c211141/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/2135cc48e22fed8f56a0a4a2a6e0f0303c211141/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=2135cc48e22fed8f56a0a4a2a6e0f0303c211141", "patch": "@@ -195,7 +195,6 @@ dependencies = [\n  \"lazy_static 1.3.0\",\n  \"libc\",\n  \"num_cpus\",\n- \"petgraph\",\n  \"pretty_assertions\",\n  \"serde\",\n  \"serde_json\",\n@@ -1081,12 +1080,6 @@ dependencies = [\n  \"redox_syscall\",\n ]\n \n-[[package]]\n-name = \"fixedbitset\"\n-version = \"0.1.9\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"86d4de0081402f5e88cdac65c8dcdcc73118c1a7a465e2a05f0da05843a8ea33\"\n-\n [[package]]\n name = \"flate2\"\n version = \"1.0.12\"\n@@ -2288,12 +2281,6 @@ dependencies = [\n  \"vcpkg\",\n ]\n \n-[[package]]\n-name = \"ordermap\"\n-version = \"0.3.5\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"a86ed3f5f244b372d6b1a00b72ef7f8876d0bc6a78a4c9985c53614041512063\"\n-\n [[package]]\n name = \"ordslice\"\n version = \"0.3.0\"\n@@ -2429,16 +2416,6 @@ dependencies = [\n  \"sha-1\",\n ]\n \n-[[package]]\n-name = \"petgraph\"\n-version = \"0.4.13\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"9c3659d1ee90221741f65dd128d9998311b0e40c5d3c23a62445938214abce4f\"\n-dependencies = [\n- \"fixedbitset\",\n- \"ordermap\",\n-]\n-\n [[package]]\n name = \"phf\"\n version = \"0.7.24\""}, {"sha": "7be16cf3f171fa48534f61df9ca74de1962f05b2", "filename": "src/bootstrap/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2135cc48e22fed8f56a0a4a2a6e0f0303c211141/src%2Fbootstrap%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/2135cc48e22fed8f56a0a4a2a6e0f0303c211141/src%2Fbootstrap%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2FCargo.toml?ref=2135cc48e22fed8f56a0a4a2a6e0f0303c211141", "patch": "@@ -47,7 +47,6 @@ serde_json = \"1.0.2\"\n toml = \"0.5\"\n lazy_static = \"1.3.0\"\n time = \"0.1\"\n-petgraph = \"0.4.13\"\n \n [dev-dependencies]\n pretty_assertions = \"0.5\""}, {"sha": "2093a49c6f9c2f75cde43654b6ebdede7d51aed6", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 1, "deletions": 46, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/2135cc48e22fed8f56a0a4a2a6e0f0303c211141/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2135cc48e22fed8f56a0a4a2a6e0f0303c211141/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=2135cc48e22fed8f56a0a4a2a6e0f0303c211141", "patch": "@@ -1,7 +1,6 @@\n use std::any::Any;\n use std::cell::{Cell, RefCell};\n use std::collections::BTreeSet;\n-use std::collections::HashMap;\n use std::env;\n use std::ffi::OsStr;\n use std::fmt::Debug;\n@@ -29,9 +28,6 @@ use crate::{Build, DocTests, Mode, GitRepo};\n \n pub use crate::Compiler;\n \n-use petgraph::graph::NodeIndex;\n-use petgraph::Graph;\n-\n pub struct Builder<'a> {\n     pub build: &'a Build,\n     pub top_stage: u32,\n@@ -40,9 +36,6 @@ pub struct Builder<'a> {\n     stack: RefCell<Vec<Box<dyn Any>>>,\n     time_spent_on_dependencies: Cell<Duration>,\n     pub paths: Vec<PathBuf>,\n-    graph_nodes: RefCell<HashMap<String, NodeIndex>>,\n-    graph: RefCell<Graph<String, bool>>,\n-    parent: Cell<Option<NodeIndex>>,\n }\n \n impl<'a> Deref for Builder<'a> {\n@@ -490,9 +483,6 @@ impl<'a> Builder<'a> {\n             stack: RefCell::new(Vec::new()),\n             time_spent_on_dependencies: Cell::new(Duration::new(0, 0)),\n             paths: vec![],\n-            graph_nodes: RefCell::new(HashMap::new()),\n-            graph: RefCell::new(Graph::new()),\n-            parent: Cell::new(None),\n         };\n \n         let builder = &builder;\n@@ -535,17 +525,13 @@ impl<'a> Builder<'a> {\n             stack: RefCell::new(Vec::new()),\n             time_spent_on_dependencies: Cell::new(Duration::new(0, 0)),\n             paths: paths.to_owned(),\n-            graph_nodes: RefCell::new(HashMap::new()),\n-            graph: RefCell::new(Graph::new()),\n-            parent: Cell::new(None),\n         };\n \n         builder\n     }\n \n-    pub fn execute_cli(&self) -> Graph<String, bool> {\n+    pub fn execute_cli(&self) {\n         self.run_step_descriptions(&Builder::get_step_descriptions(self.kind), &self.paths);\n-        self.graph.borrow().clone()\n     }\n \n     pub fn default_doc(&self, paths: Option<&[PathBuf]>) {\n@@ -1260,41 +1246,12 @@ impl<'a> Builder<'a> {\n             if let Some(out) = self.cache.get(&step) {\n                 self.verbose(&format!(\"{}c {:?}\", \"  \".repeat(stack.len()), step));\n \n-                {\n-                    let mut graph = self.graph.borrow_mut();\n-                    let parent = self.parent.get();\n-                    let us = *self\n-                        .graph_nodes\n-                        .borrow_mut()\n-                        .entry(format!(\"{:?}\", step))\n-                        .or_insert_with(|| graph.add_node(format!(\"{:?}\", step)));\n-                    if let Some(parent) = parent {\n-                        graph.add_edge(parent, us, false);\n-                    }\n-                }\n-\n                 return out;\n             }\n             self.verbose(&format!(\"{}> {:?}\", \"  \".repeat(stack.len()), step));\n             stack.push(Box::new(step.clone()));\n         }\n \n-        let prev_parent = self.parent.get();\n-\n-        {\n-            let mut graph = self.graph.borrow_mut();\n-            let parent = self.parent.get();\n-            let us = *self\n-                .graph_nodes\n-                .borrow_mut()\n-                .entry(format!(\"{:?}\", step))\n-                .or_insert_with(|| graph.add_node(format!(\"{:?}\", step)));\n-            self.parent.set(Some(us));\n-            if let Some(parent) = parent {\n-                graph.add_edge(parent, us, true);\n-            }\n-        }\n-\n         let (out, dur) = {\n             let start = Instant::now();\n             let zero = Duration::new(0, 0);\n@@ -1305,8 +1262,6 @@ impl<'a> Builder<'a> {\n             (out, dur - deps)\n         };\n \n-        self.parent.set(prev_parent);\n-\n         if self.config.print_step_timings && dur > Duration::from_millis(100) {\n             println!(\n                 \"[TIMING] {:?} -- {}.{:03}\","}]}