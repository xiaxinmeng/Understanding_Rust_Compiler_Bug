{"sha": "f8888af412b517c55deed84f851b3dc3c93d81d0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4ODg4YWY0MTJiNTE3YzU1ZGVlZDg0Zjg1MWIzZGMzYzkzZDgxZDA=", "commit": {"author": {"name": "Don Petersen", "email": "don@donpetersen.net", "date": "2015-05-10T03:25:09Z"}, "committer": {"name": "Don Petersen", "email": "don@donpetersen.net", "date": "2015-05-10T03:32:00Z"}, "message": "Add omitted word to mutability docs.", "tree": {"sha": "3faf5aed3b9a119ada6a65ad3fbb8cf984fd7c8c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3faf5aed3b9a119ada6a65ad3fbb8cf984fd7c8c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8888af412b517c55deed84f851b3dc3c93d81d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8888af412b517c55deed84f851b3dc3c93d81d0", "html_url": "https://github.com/rust-lang/rust/commit/f8888af412b517c55deed84f851b3dc3c93d81d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8888af412b517c55deed84f851b3dc3c93d81d0/comments", "author": {"login": "dpetersen", "id": 408, "node_id": "MDQ6VXNlcjQwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dpetersen", "html_url": "https://github.com/dpetersen", "followers_url": "https://api.github.com/users/dpetersen/followers", "following_url": "https://api.github.com/users/dpetersen/following{/other_user}", "gists_url": "https://api.github.com/users/dpetersen/gists{/gist_id}", "starred_url": "https://api.github.com/users/dpetersen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dpetersen/subscriptions", "organizations_url": "https://api.github.com/users/dpetersen/orgs", "repos_url": "https://api.github.com/users/dpetersen/repos", "events_url": "https://api.github.com/users/dpetersen/events{/privacy}", "received_events_url": "https://api.github.com/users/dpetersen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dpetersen", "id": 408, "node_id": "MDQ6VXNlcjQwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dpetersen", "html_url": "https://github.com/dpetersen", "followers_url": "https://api.github.com/users/dpetersen/followers", "following_url": "https://api.github.com/users/dpetersen/following{/other_user}", "gists_url": "https://api.github.com/users/dpetersen/gists{/gist_id}", "starred_url": "https://api.github.com/users/dpetersen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dpetersen/subscriptions", "organizations_url": "https://api.github.com/users/dpetersen/orgs", "repos_url": "https://api.github.com/users/dpetersen/repos", "events_url": "https://api.github.com/users/dpetersen/events{/privacy}", "received_events_url": "https://api.github.com/users/dpetersen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc630d01e3eae8ba05db98383119bc2ddbbb01c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc630d01e3eae8ba05db98383119bc2ddbbb01c1", "html_url": "https://github.com/rust-lang/rust/commit/dc630d01e3eae8ba05db98383119bc2ddbbb01c1"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "9b386acdca214c5d3b1fc9c5571c79d5b616db32", "filename": "src/doc/trpl/mutability.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f8888af412b517c55deed84f851b3dc3c93d81d0/src%2Fdoc%2Ftrpl%2Fmutability.md", "raw_url": "https://github.com/rust-lang/rust/raw/f8888af412b517c55deed84f851b3dc3c93d81d0/src%2Fdoc%2Ftrpl%2Fmutability.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fmutability.md?ref=f8888af412b517c55deed84f851b3dc3c93d81d0", "patch": "@@ -78,8 +78,8 @@ When we call `clone()`, the `Arc<T>` needs to update the reference count. Yet\n we\u2019ve not used any `mut`s here, `x` is an immutable binding, and we didn\u2019t take\n `&mut 5` or anything. So what gives?\n \n-To this, we have to go back to the core of Rust\u2019s guiding philosophy, memory\n-safety, and the mechanism by which Rust guarantees it, the\n+To understand this, we have to go back to the core of Rust\u2019s guiding\n+philosophy, memory safety, and the mechanism by which Rust guarantees it, the\n [ownership][ownership] system, and more specifically, [borrowing][borrowing]:\n \n > You may have one or the other of these two kinds of borrows, but not both at"}]}