{"sha": "94ad07af4bef6a70602e315bf315c6fce95618dd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0YWQwN2FmNGJlZjZhNzA2MDJlMzE1YmYzMTVjNmZjZTk1NjE4ZGQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-20T11:07:23Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-20T11:07:23Z"}, "message": "Introduce `ContainerId`", "tree": {"sha": "2e3ab7e72f26a2dd1024479d5146fb8f7d2c2c73", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e3ab7e72f26a2dd1024479d5146fb8f7d2c2c73"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94ad07af4bef6a70602e315bf315c6fce95618dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94ad07af4bef6a70602e315bf315c6fce95618dd", "html_url": "https://github.com/rust-lang/rust/commit/94ad07af4bef6a70602e315bf315c6fce95618dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94ad07af4bef6a70602e315bf315c6fce95618dd/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8fc20b65035d93bcc1b3a89127916bd165a8d938", "url": "https://api.github.com/repos/rust-lang/rust/commits/8fc20b65035d93bcc1b3a89127916bd165a8d938", "html_url": "https://github.com/rust-lang/rust/commit/8fc20b65035d93bcc1b3a89127916bd165a8d938"}], "stats": {"total": 59, "additions": 41, "deletions": 18}, "files": [{"sha": "0103a1aabe3e1aa7b28a48547acc51fa4b727e10", "filename": "crates/ra_hir_def/src/body/lower.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/94ad07af4bef6a70602e315bf315c6fce95618dd/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94ad07af4bef6a70602e315bf315c6fce95618dd/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs?ref=94ad07af4bef6a70602e315bf315c6fce95618dd", "patch": "@@ -25,7 +25,7 @@ use crate::{\n     path::GenericArgs,\n     path::Path,\n     type_ref::{Mutability, TypeRef},\n-    AssocContainerId, DefWithBodyId, FunctionLoc, Intern,\n+    ContainerId, DefWithBodyId, FunctionLoc, Intern,\n };\n \n pub(super) fn lower(\n@@ -490,7 +490,7 @@ where\n     }\n \n     fn collect_block_items(&mut self, block: &ast::Block) {\n-        let container = AssocContainerId::DefWithBodyId(self.def);\n+        let container = ContainerId::DefWithBodyId(self.def).into();\n         for item in block.items() {\n             match item {\n                 ast::ModuleItem::FnDef(def) => {"}, {"sha": "5e46db1aabd3facd556c3f6412f2c4a6dbb83e1a", "filename": "crates/ra_hir_def/src/lib.rs", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/94ad07af4bef6a70602e315bf315c6fce95618dd/crates%2Fra_hir_def%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94ad07af4bef6a70602e315bf315c6fce95618dd/crates%2Fra_hir_def%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Flib.rs?ref=94ad07af4bef6a70602e315bf315c6fce95618dd", "patch": "@@ -331,12 +331,18 @@ pub struct LocalTypeParamId(RawId);\n impl_arena_id!(LocalTypeParamId);\n \n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n-pub enum AssocContainerId {\n+pub enum ContainerId {\n     ModuleId(ModuleId),\n+    DefWithBodyId(DefWithBodyId),\n+}\n+\n+#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n+pub enum AssocContainerId {\n+    ContainerId(ContainerId),\n     ImplId(ImplId),\n     TraitId(TraitId),\n-    DefWithBodyId(DefWithBodyId),\n }\n+impl_froms!(AssocContainerId: ContainerId);\n \n /// A Data Type\n #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n@@ -479,13 +485,21 @@ pub trait HasModule {\n     fn module(&self, db: &impl db::DefDatabase) -> ModuleId;\n }\n \n+impl HasModule for ContainerId {\n+    fn module(&self, db: &impl db::DefDatabase) -> ModuleId {\n+        match *self {\n+            ContainerId::ModuleId(it) => it,\n+            ContainerId::DefWithBodyId(it) => it.module(db),\n+        }\n+    }\n+}\n+\n impl HasModule for AssocContainerId {\n     fn module(&self, db: &impl db::DefDatabase) -> ModuleId {\n         match *self {\n-            AssocContainerId::ModuleId(it) => it,\n+            AssocContainerId::ContainerId(it) => it.module(db),\n             AssocContainerId::ImplId(it) => it.lookup(db).container,\n             AssocContainerId::TraitId(it) => it.lookup(db).container,\n-            AssocContainerId::DefWithBodyId(it) => it.module(db),\n         }\n     }\n }"}, {"sha": "0f3319f30208733e55f8a106a5d83d2bb8620bbb", "filename": "crates/ra_hir_def/src/nameres/collector.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/94ad07af4bef6a70602e315bf315c6fce95618dd/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94ad07af4bef6a70602e315bf315c6fce95618dd/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=94ad07af4bef6a70602e315bf315c6fce95618dd", "patch": "@@ -24,7 +24,7 @@ use crate::{\n     },\n     path::{ModPath, PathKind},\n     per_ns::PerNs,\n-    AdtId, AssocContainerId, AstId, ConstLoc, EnumLoc, EnumVariantId, FunctionLoc, ImplLoc, Intern,\n+    AdtId, AstId, ConstLoc, ContainerId, EnumLoc, EnumVariantId, FunctionLoc, ImplLoc, Intern,\n     LocalImportId, LocalModuleId, ModuleDefId, ModuleId, StaticLoc, StructLoc, TraitLoc,\n     TypeAliasLoc, UnionLoc,\n };\n@@ -760,10 +760,11 @@ where\n         self.collect_derives(attrs, def);\n \n         let name = def.name.clone();\n+        let container = ContainerId::ModuleId(module);\n         let def: PerNs = match def.kind {\n             raw::DefKind::Function(ast_id) => {\n                 let def = FunctionLoc {\n-                    container: AssocContainerId::ModuleId(module),\n+                    container: container.into(),\n                     ast_id: AstId::new(self.file_id, ast_id),\n                 }\n                 .intern(self.def_collector.db);\n@@ -787,7 +788,7 @@ where\n             }\n             raw::DefKind::Const(ast_id) => {\n                 let def = ConstLoc {\n-                    container: AssocContainerId::ModuleId(module),\n+                    container: container.into(),\n                     ast_id: AstId::new(self.file_id, ast_id),\n                 }\n                 .intern(self.def_collector.db);\n@@ -808,7 +809,7 @@ where\n             }\n             raw::DefKind::TypeAlias(ast_id) => {\n                 let def = TypeAliasLoc {\n-                    container: AssocContainerId::ModuleId(module),\n+                    container: container.into(),\n                     ast_id: AstId::new(self.file_id, ast_id),\n                 }\n                 .intern(self.def_collector.db);"}, {"sha": "af9d194f8a5c9ec42249a9e042616f1450a97f3d", "filename": "crates/ra_hir_def/src/resolver.rs", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/94ad07af4bef6a70602e315bf315c6fce95618dd/crates%2Fra_hir_def%2Fsrc%2Fresolver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94ad07af4bef6a70602e315bf315c6fce95618dd/crates%2Fra_hir_def%2Fsrc%2Fresolver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fresolver.rs?ref=94ad07af4bef6a70602e315bf315c6fce95618dd", "patch": "@@ -17,9 +17,9 @@ use crate::{\n     nameres::{BuiltinShadowMode, CrateDefMap},\n     path::{ModPath, PathKind},\n     per_ns::PerNs,\n-    AdtId, AssocContainerId, ConstId, DefWithBodyId, EnumId, EnumVariantId, FunctionId,\n-    GenericDefId, HasModule, ImplId, LocalModuleId, Lookup, ModuleDefId, ModuleId, StaticId,\n-    StructId, TraitId, TypeAliasId, TypeParamId, VariantId,\n+    AdtId, AssocContainerId, ConstId, ContainerId, DefWithBodyId, EnumId, EnumVariantId,\n+    FunctionId, GenericDefId, HasModule, ImplId, LocalModuleId, Lookup, ModuleDefId, ModuleId,\n+    StaticId, StructId, TraitId, TypeAliasId, TypeParamId, VariantId,\n };\n \n #[derive(Debug, Clone, Default)]\n@@ -580,13 +580,21 @@ impl HasResolver for DefWithBodyId {\n     }\n }\n \n+impl HasResolver for ContainerId {\n+    fn resolver(self, db: &impl DefDatabase) -> Resolver {\n+        match self {\n+            ContainerId::ModuleId(it) => it.resolver(db),\n+            ContainerId::DefWithBodyId(it) => it.resolver(db),\n+        }\n+    }\n+}\n+\n impl HasResolver for AssocContainerId {\n     fn resolver(self, db: &impl DefDatabase) -> Resolver {\n         match self {\n+            AssocContainerId::ContainerId(it) => it.resolver(db),\n             AssocContainerId::TraitId(it) => it.resolver(db),\n             AssocContainerId::ImplId(it) => it.resolver(db),\n-            AssocContainerId::ModuleId(it) => it.resolver(db),\n-            AssocContainerId::DefWithBodyId(it) => it.resolver(db),\n         }\n     }\n }"}, {"sha": "ffd3583675f842f2f59241d1a00cc36a2f57e784", "filename": "crates/ra_hir_ty/src/infer/path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/94ad07af4bef6a70602e315bf315c6fce95618dd/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94ad07af4bef6a70602e315bf315c6fce95618dd/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fpath.rs?ref=94ad07af4bef6a70602e315bf315c6fce95618dd", "patch": "@@ -237,7 +237,7 @@ impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n                         }));\n                         Some(substs)\n                     }\n-                    AssocContainerId::ModuleId(_) | AssocContainerId::DefWithBodyId(_) => None,\n+                    AssocContainerId::ContainerId(_) => None,\n                 };\n \n                 self.write_assoc_resolution(id, item.into());"}, {"sha": "1b2f4014c62c640bffceeeda2e565336d2db7d1c", "filename": "crates/ra_hir_ty/src/method_resolution.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/94ad07af4bef6a70602e315bf315c6fce95618dd/crates%2Fra_hir_ty%2Fsrc%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94ad07af4bef6a70602e315bf315c6fce95618dd/crates%2Fra_hir_ty%2Fsrc%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Fmethod_resolution.rs?ref=94ad07af4bef6a70602e315bf315c6fce95618dd", "patch": "@@ -456,7 +456,7 @@ fn transform_receiver_ty(\n             .fill_with_unknown()\n             .build(),\n         AssocContainerId::ImplId(impl_id) => inherent_impl_substs(db, impl_id, &self_ty)?,\n-        AssocContainerId::ModuleId(_) | AssocContainerId::DefWithBodyId(_) => unreachable!(),\n+        AssocContainerId::ContainerId(_) => unreachable!(),\n     };\n     let sig = db.callable_item_signature(function_id.into());\n     Some(sig.params()[0].clone().subst(&substs))"}, {"sha": "0b1806a84fd40faa15e896910d2b60c5443e22b3", "filename": "crates/ra_hir_ty/src/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/94ad07af4bef6a70602e315bf315c6fce95618dd/crates%2Fra_hir_ty%2Fsrc%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94ad07af4bef6a70602e315bf315c6fce95618dd/crates%2Fra_hir_ty%2Fsrc%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Futils.rs?ref=94ad07af4bef6a70602e315bf315c6fce95618dd", "patch": "@@ -157,6 +157,6 @@ fn parent_generic_def(db: &impl DefDatabase, def: GenericDefId) -> Option<Generi\n     match container {\n         AssocContainerId::ImplId(it) => Some(it.into()),\n         AssocContainerId::TraitId(it) => Some(it.into()),\n-        AssocContainerId::ModuleId(_) | AssocContainerId::DefWithBodyId(_) => None,\n+        AssocContainerId::ContainerId(_) => None,\n     }\n }"}]}