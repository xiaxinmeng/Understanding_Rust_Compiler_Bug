{"sha": "42b77c709e98f8f75498e1b57eac20756f6c6ead", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyYjc3YzcwOWU5OGY4Zjc1NDk4ZTFiNTdlYWMyMDc1NmY2YzZlYWQ=", "commit": {"author": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2020-11-14T21:50:53Z"}, "committer": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2020-12-22T15:20:23Z"}, "message": "Add some tests", "tree": {"sha": "8e4a4b6b59ab99dfc4830b0beadcdcb200998303", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e4a4b6b59ab99dfc4830b0beadcdcb200998303"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/42b77c709e98f8f75498e1b57eac20756f6c6ead", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/42b77c709e98f8f75498e1b57eac20756f6c6ead", "html_url": "https://github.com/rust-lang/rust/commit/42b77c709e98f8f75498e1b57eac20756f6c6ead", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/42b77c709e98f8f75498e1b57eac20756f6c6ead/comments", "author": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75e1acb63a642fa78cb8c382d7462b41fa2b56cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/75e1acb63a642fa78cb8c382d7462b41fa2b56cd", "html_url": "https://github.com/rust-lang/rust/commit/75e1acb63a642fa78cb8c382d7462b41fa2b56cd"}], "stats": {"total": 99, "additions": 71, "deletions": 28}, "files": [{"sha": "ca4fcd85bb6df2f6b15dac79c5fd874997e2bf4b", "filename": "src/test/ui/pattern/usefulness/consts-opaque.rs", "status": "modified", "additions": 35, "deletions": 4, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/42b77c709e98f8f75498e1b57eac20756f6c6ead/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fconsts-opaque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42b77c709e98f8f75498e1b57eac20756f6c6ead/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fconsts-opaque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fconsts-opaque.rs?ref=42b77c709e98f8f75498e1b57eac20756f6c6ead", "patch": "@@ -25,10 +25,6 @@ enum Baz {\n impl Eq for Baz {}\n const BAZ: Baz = Baz::Baz1;\n \n-type Quux = fn(usize, usize) -> usize;\n-fn quux(a: usize, b: usize) -> usize { a + b }\n-const QUUX: Quux = quux;\n-\n fn main() {\n     match FOO {\n         FOO => {}\n@@ -106,9 +102,44 @@ fn main() {\n         //~^ ERROR unreachable pattern\n     }\n \n+    type Quux = fn(usize, usize) -> usize;\n+    fn quux(a: usize, b: usize) -> usize { a + b }\n+    const QUUX: Quux = quux;\n+\n     match QUUX {\n         QUUX => {}\n         QUUX => {}\n         _ => {}\n     }\n+\n+    #[derive(PartialEq, Eq)]\n+    struct Wrap<T>(T);\n+    const WRAPQUUX: Wrap<Quux> = Wrap(quux);\n+\n+    match WRAPQUUX {\n+        WRAPQUUX => {}\n+        WRAPQUUX => {}\n+        Wrap(_) => {}\n+    }\n+\n+    match WRAPQUUX {\n+        Wrap(_) => {}\n+        WRAPQUUX => {} // detected unreachable because we do inspect the `Wrap` layer\n+        //~^ ERROR unreachable pattern\n+    }\n+\n+    #[derive(PartialEq, Eq)]\n+    enum WhoKnows<T> {\n+        Yay(T),\n+        Nope,\n+    };\n+    const WHOKNOWSQUUX: WhoKnows<Quux> = WhoKnows::Yay(quux);\n+\n+    match WHOKNOWSQUUX {\n+        WHOKNOWSQUUX => {}\n+        WhoKnows::Yay(_) => {}\n+        WHOKNOWSQUUX => {} // detected unreachable because we do inspect the `WhoKnows` layer\n+        //~^ ERROR unreachable pattern\n+        WhoKnows::Nope => {}\n+    }\n }"}, {"sha": "68451043cf5403918670794bb2c4cd63d298628f", "filename": "src/test/ui/pattern/usefulness/consts-opaque.stderr", "status": "modified", "additions": 36, "deletions": 24, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/42b77c709e98f8f75498e1b57eac20756f6c6ead/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fconsts-opaque.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/42b77c709e98f8f75498e1b57eac20756f6c6ead/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fconsts-opaque.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fconsts-opaque.stderr?ref=42b77c709e98f8f75498e1b57eac20756f6c6ead", "patch": "@@ -1,11 +1,11 @@\n error: to use a constant of type `Foo` in a pattern, `Foo` must be annotated with `#[derive(PartialEq, Eq)]`\n-  --> $DIR/consts-opaque.rs:34:9\n+  --> $DIR/consts-opaque.rs:30:9\n    |\n LL |         FOO => {}\n    |         ^^^\n \n error: unreachable pattern\n-  --> $DIR/consts-opaque.rs:36:9\n+  --> $DIR/consts-opaque.rs:32:9\n    |\n LL |         _ => {} // should not be emitting unreachable warning\n    |         ^\n@@ -17,19 +17,19 @@ LL | #![deny(unreachable_patterns)]\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n error: to use a constant of type `Foo` in a pattern, `Foo` must be annotated with `#[derive(PartialEq, Eq)]`\n-  --> $DIR/consts-opaque.rs:41:9\n+  --> $DIR/consts-opaque.rs:37:9\n    |\n LL |         FOO_REF => {}\n    |         ^^^^^^^\n \n error: unreachable pattern\n-  --> $DIR/consts-opaque.rs:43:9\n+  --> $DIR/consts-opaque.rs:39:9\n    |\n LL |         Foo(_) => {} // should not be emitting unreachable warning\n    |         ^^^^^^\n \n warning: to use a constant of type `Foo` in a pattern, `Foo` must be annotated with `#[derive(PartialEq, Eq)]`\n-  --> $DIR/consts-opaque.rs:49:9\n+  --> $DIR/consts-opaque.rs:45:9\n    |\n LL |         FOO_REF_REF => {}\n    |         ^^^^^^^^^^^\n@@ -39,21 +39,21 @@ LL |         FOO_REF_REF => {}\n    = note: for more information, see issue #62411 <https://github.com/rust-lang/rust/issues/62411>\n \n error: to use a constant of type `Bar` in a pattern, `Bar` must be annotated with `#[derive(PartialEq, Eq)]`\n-  --> $DIR/consts-opaque.rs:57:9\n+  --> $DIR/consts-opaque.rs:53:9\n    |\n LL |         BAR => {} // should not be emitting unreachable warning\n    |         ^^^\n \n error: unreachable pattern\n-  --> $DIR/consts-opaque.rs:57:9\n+  --> $DIR/consts-opaque.rs:53:9\n    |\n LL |         Bar => {}\n    |         --- matches any value\n LL |         BAR => {} // should not be emitting unreachable warning\n    |         ^^^ unreachable pattern\n \n error: unreachable pattern\n-  --> $DIR/consts-opaque.rs:60:9\n+  --> $DIR/consts-opaque.rs:56:9\n    |\n LL |         Bar => {}\n    |         --- matches any value\n@@ -62,19 +62,19 @@ LL |         _ => {}\n    |         ^ unreachable pattern\n \n error: to use a constant of type `Bar` in a pattern, `Bar` must be annotated with `#[derive(PartialEq, Eq)]`\n-  --> $DIR/consts-opaque.rs:65:9\n+  --> $DIR/consts-opaque.rs:61:9\n    |\n LL |         BAR => {}\n    |         ^^^\n \n error: unreachable pattern\n-  --> $DIR/consts-opaque.rs:67:9\n+  --> $DIR/consts-opaque.rs:63:9\n    |\n LL |         Bar => {} // should not be emitting unreachable warning\n    |         ^^^\n \n error: unreachable pattern\n-  --> $DIR/consts-opaque.rs:69:9\n+  --> $DIR/consts-opaque.rs:65:9\n    |\n LL |         Bar => {} // should not be emitting unreachable warning\n    |         --- matches any value\n@@ -83,76 +83,88 @@ LL |         _ => {}\n    |         ^ unreachable pattern\n \n error: to use a constant of type `Bar` in a pattern, `Bar` must be annotated with `#[derive(PartialEq, Eq)]`\n-  --> $DIR/consts-opaque.rs:74:9\n+  --> $DIR/consts-opaque.rs:70:9\n    |\n LL |         BAR => {}\n    |         ^^^\n \n error: to use a constant of type `Bar` in a pattern, `Bar` must be annotated with `#[derive(PartialEq, Eq)]`\n-  --> $DIR/consts-opaque.rs:76:9\n+  --> $DIR/consts-opaque.rs:72:9\n    |\n LL |         BAR => {} // should not be emitting unreachable warning\n    |         ^^^\n \n error: unreachable pattern\n-  --> $DIR/consts-opaque.rs:76:9\n+  --> $DIR/consts-opaque.rs:72:9\n    |\n LL |         BAR => {} // should not be emitting unreachable warning\n    |         ^^^\n \n error: unreachable pattern\n-  --> $DIR/consts-opaque.rs:79:9\n+  --> $DIR/consts-opaque.rs:75:9\n    |\n LL |         _ => {} // should not be emitting unreachable warning\n    |         ^\n \n error: to use a constant of type `Baz` in a pattern, `Baz` must be annotated with `#[derive(PartialEq, Eq)]`\n-  --> $DIR/consts-opaque.rs:84:9\n+  --> $DIR/consts-opaque.rs:80:9\n    |\n LL |         BAZ => {}\n    |         ^^^\n \n error: unreachable pattern\n-  --> $DIR/consts-opaque.rs:86:9\n+  --> $DIR/consts-opaque.rs:82:9\n    |\n LL |         Baz::Baz1 => {} // should not be emitting unreachable warning\n    |         ^^^^^^^^^\n \n error: unreachable pattern\n-  --> $DIR/consts-opaque.rs:88:9\n+  --> $DIR/consts-opaque.rs:84:9\n    |\n LL |         _ => {}\n    |         ^\n \n error: to use a constant of type `Baz` in a pattern, `Baz` must be annotated with `#[derive(PartialEq, Eq)]`\n-  --> $DIR/consts-opaque.rs:94:9\n+  --> $DIR/consts-opaque.rs:90:9\n    |\n LL |         BAZ => {}\n    |         ^^^\n \n error: unreachable pattern\n-  --> $DIR/consts-opaque.rs:96:9\n+  --> $DIR/consts-opaque.rs:92:9\n    |\n LL |         _ => {}\n    |         ^\n \n error: to use a constant of type `Baz` in a pattern, `Baz` must be annotated with `#[derive(PartialEq, Eq)]`\n-  --> $DIR/consts-opaque.rs:101:9\n+  --> $DIR/consts-opaque.rs:97:9\n    |\n LL |         BAZ => {}\n    |         ^^^\n \n error: unreachable pattern\n-  --> $DIR/consts-opaque.rs:103:9\n+  --> $DIR/consts-opaque.rs:99:9\n    |\n LL |         Baz::Baz2 => {} // should not be emitting unreachable warning\n    |         ^^^^^^^^^\n \n error: unreachable pattern\n-  --> $DIR/consts-opaque.rs:105:9\n+  --> $DIR/consts-opaque.rs:101:9\n    |\n LL |         _ => {} // should not be emitting unreachable warning\n    |         ^\n \n-error: aborting due to 22 previous errors; 1 warning emitted\n+error: unreachable pattern\n+  --> $DIR/consts-opaque.rs:127:9\n+   |\n+LL |         WRAPQUUX => {} // detected unreachable because we do inspect the `Wrap` layer\n+   |         ^^^^^^^^\n+\n+error: unreachable pattern\n+  --> $DIR/consts-opaque.rs:141:9\n+   |\n+LL |         WHOKNOWSQUUX => {} // detected unreachable because we do inspect the `WhoKnows` layer\n+   |         ^^^^^^^^^^^^\n+\n+error: aborting due to 24 previous errors; 1 warning emitted\n "}]}