{"sha": "f0d24ff49e1578bf28de3cad808c8d68437c44d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwZDI0ZmY0OWUxNTc4YmYyOGRlM2NhZDgwOGM4ZDY4NDM3YzQ0ZDQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-04-29T18:54:41Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-04-29T18:54:41Z"}, "message": "rustc: Handle alias parameters in native functions properly", "tree": {"sha": "71b2bde2fb233d43ab1a23b8bd84b4200edc98ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71b2bde2fb233d43ab1a23b8bd84b4200edc98ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0d24ff49e1578bf28de3cad808c8d68437c44d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0d24ff49e1578bf28de3cad808c8d68437c44d4", "html_url": "https://github.com/rust-lang/rust/commit/f0d24ff49e1578bf28de3cad808c8d68437c44d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0d24ff49e1578bf28de3cad808c8d68437c44d4/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d3e5531412952c556fabb541536bcae34b0ce09", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d3e5531412952c556fabb541536bcae34b0ce09", "html_url": "https://github.com/rust-lang/rust/commit/5d3e5531412952c556fabb541536bcae34b0ce09"}], "stats": {"total": 34, "additions": 20, "deletions": 14}, "files": [{"sha": "54ad505eb135926e9fca615642db90a473aa93a2", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/f0d24ff49e1578bf28de3cad808c8d68437c44d4/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0d24ff49e1578bf28de3cad808c8d68437c44d4/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=f0d24ff49e1578bf28de3cad808c8d68437c44d4", "patch": "@@ -6655,21 +6655,27 @@ fn decl_native_fn_and_pair(@crate_ctxt ccx,\n     fn push_arg(@block_ctxt cx,\n                 &mutable vec[ValueRef] args,\n                 ValueRef v,\n-                ty.t t) {\n-        if (ty.type_is_integral(cx.fcx.lcx.ccx.tcx, t)) {\n-            auto lldsttype = T_int();\n-            auto llsrctype = type_of(cx.fcx.lcx.ccx, t);\n-            if (llvm.LLVMGetIntTypeWidth(lldsttype) >\n-                llvm.LLVMGetIntTypeWidth(llsrctype)) {\n-                args += vec(cx.build.ZExtOrBitCast(v, T_int()));\n-            } else {\n-                args += vec(cx.build.TruncOrBitCast(v, T_int()));\n+                ty.t t,\n+                ast.mode mode) {\n+        if (mode == ast.val) {\n+            if (ty.type_is_integral(cx.fcx.lcx.ccx.tcx, t)) {\n+                auto lldsttype = T_int();\n+                auto llsrctype = type_of(cx.fcx.lcx.ccx, t);\n+                if (llvm.LLVMGetIntTypeWidth(lldsttype) >\n+                    llvm.LLVMGetIntTypeWidth(llsrctype)) {\n+                    args += vec(cx.build.ZExtOrBitCast(v, T_int()));\n+                } else {\n+                    args += vec(cx.build.TruncOrBitCast(v, T_int()));\n+                }\n+                ret;\n+            }\n+            if (ty.type_is_fp(cx.fcx.lcx.ccx.tcx, t)) {\n+                args += vec(cx.build.FPToSI(v, T_int()));\n+                ret;\n             }\n-        } else if (ty.type_is_fp(cx.fcx.lcx.ccx.tcx, t)) {\n-            args += vec(cx.build.FPToSI(v, T_int()));\n-        } else {\n-            args += vec(vp2i(cx, v));\n         }\n+\n+        args += vec(vp2i(cx, v));\n     }\n \n     auto r;\n@@ -6699,7 +6705,7 @@ fn decl_native_fn_and_pair(@crate_ctxt ccx,\n         for (ty.arg arg in args) {\n             auto llarg = llvm.LLVMGetParam(fcx.llfn, arg_n);\n             check (llarg as int != 0);\n-            push_arg(bcx, call_args, llarg, arg.ty);\n+            push_arg(bcx, call_args, llarg, arg.ty, arg.mode);\n             if (arg.mode == ast.val) {\n                 drop_args += vec(tup(llarg, arg.ty));\n             }"}]}