{"sha": "9f1bb17a1bb683a50a62c371803b07144b1bfc5a", "node_id": "C_kwDOAAsO6NoAKDlmMWJiMTdhMWJiNjgzYTUwYTYyYzM3MTgwM2IwNzE0NGIxYmZjNWE", "commit": {"author": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2022-11-01T16:18:13Z"}, "committer": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2022-11-01T16:18:13Z"}, "message": "Import `option` in the tests", "tree": {"sha": "78c1c72157789cab4fdd557529c38fdd91c84882", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/78c1c72157789cab4fdd557529c38fdd91c84882"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f1bb17a1bb683a50a62c371803b07144b1bfc5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f1bb17a1bb683a50a62c371803b07144b1bfc5a", "html_url": "https://github.com/rust-lang/rust/commit/9f1bb17a1bb683a50a62c371803b07144b1bfc5a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f1bb17a1bb683a50a62c371803b07144b1bfc5a/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f0a14346ee79086ecb64bb65ced517568fbfc986", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0a14346ee79086ecb64bb65ced517568fbfc986", "html_url": "https://github.com/rust-lang/rust/commit/f0a14346ee79086ecb64bb65ced517568fbfc986"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "f5dbdd762731a1fe5c58e53a1865fd3a0e669d8c", "filename": "crates/ide-assists/src/handlers/convert_match_to_let_else.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/9f1bb17a1bb683a50a62c371803b07144b1bfc5a/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fconvert_match_to_let_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f1bb17a1bb683a50a62c371803b07144b1bfc5a/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fconvert_match_to_let_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fconvert_match_to_let_else.rs?ref=9f1bb17a1bb683a50a62c371803b07144b1bfc5a", "patch": "@@ -86,7 +86,7 @@ fn find_arms(\n     let mut extracting = None;\n     let mut diverging = None;\n     for arm in arms {\n-        if ctx.sema.is_diverging_match_arm(&arm)? {\n+        if ctx.sema.type_of_expr(&arm.expr().unwrap()).unwrap().original().is_never() {\n             diverging = Some(arm);\n         } else {\n             extracting = Some(arm);\n@@ -159,6 +159,7 @@ mod tests {\n         check_assist_not_applicable(\n             convert_match_to_let_else,\n             r#\"\n+//- minicore: option\n fn foo(opt: Option<()>) {\n     let val = $0match opt {\n         Some(it) => it,\n@@ -175,7 +176,8 @@ fn foo(opt: Option<()>) {\n         check_assist_not_applicable(\n             convert_match_to_let_else,\n             r#\"\n-fn foo(opt: Option<()>) {\n+//- minicore: option\n+fn foo(opt: Option<i32>) {\n     let val = $0match opt {\n         Some(it) => it + 1,\n         None => return,\n@@ -187,6 +189,7 @@ fn foo(opt: Option<()>) {\n         check_assist_not_applicable(\n             convert_match_to_let_else,\n             r#\"\n+//- minicore: option\n fn foo(opt: Option<()>) {\n     let val = $0match opt {\n         Some(it) => {\n@@ -206,6 +209,7 @@ fn foo(opt: Option<()>) {\n         check_assist_not_applicable(\n             convert_match_to_let_else,\n             r#\"\n+//- minicore: option\n fn foo(opt: Option<()>) {\n     let val = $0match opt {\n         Some(it) if 2 > 1 => it,\n@@ -221,6 +225,7 @@ fn foo(opt: Option<()>) {\n         check_assist(\n             convert_match_to_let_else,\n             r#\"\n+//- minicore: option\n fn foo(opt: Option<()>) {\n     let val = $0match opt {\n         Some(it) => it,\n@@ -241,6 +246,7 @@ fn foo(opt: Option<()>) {\n         check_assist(\n             convert_match_to_let_else,\n             r#\"\n+//- minicore: option\n fn foo(opt: Option<()>) {\n     let ref mut val = $0match opt {\n         Some(it) => it,\n@@ -261,6 +267,7 @@ fn foo(opt: Option<()>) {\n         check_assist(\n             convert_match_to_let_else,\n             r#\"\n+//- minicore: option, result\n fn foo(opt: Option<Result<()>>) {\n     let val = $0match opt {\n         Some(Ok(it)) => it,\n@@ -281,6 +288,7 @@ fn foo(opt: Option<Result<()>>) {\n         check_assist(\n             convert_match_to_let_else,\n             r#\"\n+//- minicore: option\n fn foo(opt: Option<()>) {\n     loop {\n         let val = $0match opt {\n@@ -302,6 +310,7 @@ fn foo(opt: Option<()>) {\n         check_assist(\n             convert_match_to_let_else,\n             r#\"\n+//- minicore: option\n fn foo(opt: Option<()>) {\n     loop {\n         let val = $0match opt {\n@@ -323,6 +332,7 @@ fn foo(opt: Option<()>) {\n         check_assist(\n             convert_match_to_let_else,\n             r#\"\n+//- minicore: option\n fn panic() -> ! {}\n \n fn foo(opt: Option<()>) {\n@@ -351,6 +361,7 @@ fn foo(opt: Option<()>) {\n         check_assist(\n             convert_match_to_let_else,\n             r#\"\n+//- minicore: option\n struct Point {\n     x: i32,\n     y: i32,\n@@ -381,6 +392,7 @@ fn foo(opt: Option<Point>) {\n         check_assist(\n             convert_match_to_let_else,\n             r#\"\n+//- minicore: option\n fn foo(opt: Option<i32>) -> Option<i32> {\n     let val = $0match opt {\n         it @ Some(42) => it,"}]}