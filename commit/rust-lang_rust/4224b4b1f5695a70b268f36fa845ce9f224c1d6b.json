{"sha": "4224b4b1f5695a70b268f36fa845ce9f224c1d6b", "node_id": "C_kwDOAAsO6NoAKDQyMjRiNGIxZjU2OTVhNzBiMjY4ZjM2ZmE4NDVjZTlmMjI0YzFkNmI", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-02-19T13:14:00Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-04-20T17:09:26Z"}, "message": "Re-allow computing fed queries.", "tree": {"sha": "30693142e74b26e2e1e4a83c0a726ba2545e0c1a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30693142e74b26e2e1e4a83c0a726ba2545e0c1a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4224b4b1f5695a70b268f36fa845ce9f224c1d6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4224b4b1f5695a70b268f36fa845ce9f224c1d6b", "html_url": "https://github.com/rust-lang/rust/commit/4224b4b1f5695a70b268f36fa845ce9f224c1d6b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4224b4b1f5695a70b268f36fa845ce9f224c1d6b/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "791a7f22e3360bdbbc7fb7dab9f80e19fca4dd2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/791a7f22e3360bdbbc7fb7dab9f80e19fca4dd2b", "html_url": "https://github.com/rust-lang/rust/commit/791a7f22e3360bdbbc7fb7dab9f80e19fca4dd2b"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "c122c7d722d7038e7a5a6deffdb9f2910a9965bd", "filename": "compiler/rustc_query_system/src/query/plumbing.rs", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/4224b4b1f5695a70b268f36fa845ce9f224c1d6b/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4224b4b1f5695a70b268f36fa845ce9f224c1d6b/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs?ref=4224b4b1f5695a70b268f36fa845ce9f224c1d6b", "patch": "@@ -410,9 +410,26 @@ where\n         // as its feeding query had. So if the fed query is red, so is its feeder, which will\n         // get evaluated first, and re-feed the query.\n         if let Some((cached_result, _)) = cache.lookup(&key) {\n-            panic!(\n-                \"fed query later has its value computed. The already cached value: {}\",\n-                (query.format_value())(&cached_result)\n+            let Some(hasher) = query.hash_result() else {\n+                panic!(\n+                    \"fed query later has its value computed. The already cached value: {}\",\n+                    (query.format_value())(&cached_result)\n+                );\n+            };\n+\n+            let (old_hash, new_hash) = qcx.dep_context().with_stable_hashing_context(|mut hcx| {\n+                (hasher(&mut hcx, &cached_result), hasher(&mut hcx, &result))\n+            });\n+            let formatter = query.format_value();\n+            debug_assert_eq!(\n+                old_hash,\n+                new_hash,\n+                \"Computed query value for {:?}({:?}) is inconsistent with fed value,\\n\\\n+                computed={:#?}\\nfed={:#?}\",\n+                query.dep_kind(),\n+                key,\n+                formatter(&result),\n+                formatter(&cached_result),\n             );\n         }\n     }"}]}