{"sha": "a6eef299d3b0ca24f8ffc0c3dc03283c09ec7945", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2ZWVmMjk5ZDNiMGNhMjRmOGZmYzBjM2RjMDMyODNjMDllYzc5NDU=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-10-13T23:37:21Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-10-18T02:25:17Z"}, "message": "Make `TokenStream::from_iter` less general and more efficient.\n\nThe current code has this impl:\n```\nimpl<T: Into<TokenStream>> iter::FromIterator<T> for TokenStream\n```\nIf given an `IntoIterator<Item = TokenTree>`, it will convert each individual\n`TokenTree` to a `TokenStream` (at the cost of two allocations: a `Vec`\nand an `Lrc`). It will then merge those `TokenStream`s into a single\n`TokenStream`. This is inefficient.\n\nThis commit changes the impl to this less general one:\n```\nimpl iter::FromIterator<TokenTree> for TokenStream\n```\nIt collects the `TokenTree`s into a single `Vec` first and then converts that\nto a `TokenStream` by wrapping it in a single `Lrc`. The previous generality\nwas unnecessary; no other code needs changing.\n\nThis change speeds up several benchmarks by up to 4%.", "tree": {"sha": "7a238d968db0ddabfc1f517d3b1d8ea959bdc745", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a238d968db0ddabfc1f517d3b1d8ea959bdc745"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6eef299d3b0ca24f8ffc0c3dc03283c09ec7945", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6eef299d3b0ca24f8ffc0c3dc03283c09ec7945", "html_url": "https://github.com/rust-lang/rust/commit/a6eef299d3b0ca24f8ffc0c3dc03283c09ec7945", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6eef299d3b0ca24f8ffc0c3dc03283c09ec7945/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0eaf60d5e4bd0d5be63a41ed9ff861dca95c932", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0eaf60d5e4bd0d5be63a41ed9ff861dca95c932", "html_url": "https://github.com/rust-lang/rust/commit/d0eaf60d5e4bd0d5be63a41ed9ff861dca95c932"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "3d89e73d729f32823ec0608c858253f648d38147", "filename": "src/libsyntax/tokenstream.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a6eef299d3b0ca24f8ffc0c3dc03283c09ec7945/src%2Flibsyntax%2Ftokenstream.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6eef299d3b0ca24f8ffc0c3dc03283c09ec7945/src%2Flibsyntax%2Ftokenstream.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftokenstream.rs?ref=a6eef299d3b0ca24f8ffc0c3dc03283c09ec7945", "patch": "@@ -202,9 +202,9 @@ impl From<TokenTree> for TreeAndJoint {\n     }\n }\n \n-impl<T: Into<TokenStream>> iter::FromIterator<T> for TokenStream {\n-    fn from_iter<I: IntoIterator<Item = T>>(iter: I) -> Self {\n-        TokenStream::from_streams(iter.into_iter().map(Into::into).collect::<SmallVec<_>>())\n+impl iter::FromIterator<TokenTree> for TokenStream {\n+    fn from_iter<I: IntoIterator<Item = TokenTree>>(iter: I) -> Self {\n+        TokenStream::new(iter.into_iter().map(Into::into).collect::<Vec<TreeAndJoint>>())\n     }\n }\n "}]}