{"sha": "aeb3061c40593e9cfbb52a1d5c8dafb1bd3e6a18", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlYjMwNjFjNDA1OTNlOWNmYmI1MmExZDVjOGRhZmIxYmQzZTZhMTg=", "commit": {"author": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2020-12-09T12:18:32Z"}, "committer": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2020-12-09T12:18:32Z"}, "message": "Update two failing incremental tests for the new behavior\n\nOn the nopt builders, we disable optimization by default for all tests\nwhich causes the new behavior to take effect and causes the tests to\nfail when they should not. By passing the `-O` flag explicitly, we will\nalways run these tests with optimizations enabled.", "tree": {"sha": "0fc4a45bcb282d83111ec6d9f9423285a9fb9c2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0fc4a45bcb282d83111ec6d9f9423285a9fb9c2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aeb3061c40593e9cfbb52a1d5c8dafb1bd3e6a18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aeb3061c40593e9cfbb52a1d5c8dafb1bd3e6a18", "html_url": "https://github.com/rust-lang/rust/commit/aeb3061c40593e9cfbb52a1d5c8dafb1bd3e6a18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aeb3061c40593e9cfbb52a1d5c8dafb1bd3e6a18/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "318626710ee96b6ac2c59480bfc5f03048239220", "url": "https://api.github.com/repos/rust-lang/rust/commits/318626710ee96b6ac2c59480bfc5f03048239220", "html_url": "https://github.com/rust-lang/rust/commit/318626710ee96b6ac2c59480bfc5f03048239220"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "d6a5cb993a4677d58909a201690fc202f8539c4a", "filename": "src/test/incremental/hygiene/load_cached_hygiene.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/aeb3061c40593e9cfbb52a1d5c8dafb1bd3e6a18/src%2Ftest%2Fincremental%2Fhygiene%2Fload_cached_hygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aeb3061c40593e9cfbb52a1d5c8dafb1bd3e6a18/src%2Ftest%2Fincremental%2Fhygiene%2Fload_cached_hygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhygiene%2Fload_cached_hygiene.rs?ref=aeb3061c40593e9cfbb52a1d5c8dafb1bd3e6a18", "patch": "@@ -1,5 +1,5 @@\n // revisions:rpass1 rpass2\n-// compile-flags: -Z query-dep-graph\n+// compile-flags: -Z query-dep-graph -O\n // aux-build:cached_hygiene.rs\n \n // This tests the folllowing scenario\n@@ -19,7 +19,12 @@\n // the metadata. Specifically, we were not resetting `orig_id`\n // for an `EpxnData` generate in the current crate, which would cause\n // us to serialize the `ExpnId` pointing to a garbage location in\n-// the metadata.\n+// the metadata.o\n+\n+// NOTE: We're explicitly passing the `-O` optimization flag because if optimizations are not\n+// enabled, then rustc will ignore the `#[inline(always)]` attribute which means we do not load\n+// the optimized mir for the unmodified function to be loaded and so the CGU containing that\n+// function will be reused.\n \n #![feature(rustc_attrs)]\n "}, {"sha": "735635029dac9d0d31eb74afcabc3e22130e8124", "filename": "src/test/incremental/remapped_paths_cc/main.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/aeb3061c40593e9cfbb52a1d5c8dafb1bd3e6a18/src%2Ftest%2Fincremental%2Fremapped_paths_cc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aeb3061c40593e9cfbb52a1d5c8dafb1bd3e6a18/src%2Ftest%2Fincremental%2Fremapped_paths_cc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fremapped_paths_cc%2Fmain.rs?ref=aeb3061c40593e9cfbb52a1d5c8dafb1bd3e6a18", "patch": "@@ -1,11 +1,18 @@\n // revisions:rpass1 rpass2 rpass3\n-// compile-flags: -Z query-dep-graph -g\n+// compile-flags: -Z query-dep-graph -g -O\n // aux-build:extern_crate.rs\n \n // ignore-asmjs wasm2js does not support source maps yet\n+\n // This test case makes sure that we detect if paths emitted into debuginfo\n // are changed, even when the change happens in an external crate.\n \n+// NOTE: We're explicitly passing the `-O` optimization flag because if no optimizations are\n+// requested, rustc will ignore the `#[inline]` attribute. This is a performance optimization for\n+// non-optimized builds which causes us to generate fewer copies of inlined functions when\n+// runtime performance doesn't matter. Without this flag, the function will go into a different\n+// CGU which can be reused by this crate.\n+\n #![feature(rustc_attrs)]\n \n #![rustc_partition_reused(module=\"main\", cfg=\"rpass2\")]"}]}