{"sha": "1afe14ceedaad19bc3e10dda28ce3f52c69e287a", "node_id": "C_kwDOAAsO6NoAKDFhZmUxNGNlZWRhYWQxOWJjM2UxMGRkYTI4Y2UzZjUyYzY5ZTI4N2E", "commit": {"author": {"name": "ibraheemdev", "email": "ibrah1440@gmail.com", "date": "2021-08-31T16:59:44Z"}, "committer": {"name": "Ibraheem Ahmed", "email": "ibrah1440@gmail.com", "date": "2021-10-11T20:14:30Z"}, "message": "add `slice::swap_unchecked`", "tree": {"sha": "465d375f8f45d6de55ef1c4c2f2c40690b21bef2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/465d375f8f45d6de55ef1c4c2f2c40690b21bef2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1afe14ceedaad19bc3e10dda28ce3f52c69e287a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1afe14ceedaad19bc3e10dda28ce3f52c69e287a", "html_url": "https://github.com/rust-lang/rust/commit/1afe14ceedaad19bc3e10dda28ce3f52c69e287a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1afe14ceedaad19bc3e10dda28ce3f52c69e287a/comments", "author": {"login": "ibraheemdev", "id": 34988408, "node_id": "MDQ6VXNlcjM0OTg4NDA4", "avatar_url": "https://avatars.githubusercontent.com/u/34988408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibraheemdev", "html_url": "https://github.com/ibraheemdev", "followers_url": "https://api.github.com/users/ibraheemdev/followers", "following_url": "https://api.github.com/users/ibraheemdev/following{/other_user}", "gists_url": "https://api.github.com/users/ibraheemdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibraheemdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibraheemdev/subscriptions", "organizations_url": "https://api.github.com/users/ibraheemdev/orgs", "repos_url": "https://api.github.com/users/ibraheemdev/repos", "events_url": "https://api.github.com/users/ibraheemdev/events{/privacy}", "received_events_url": "https://api.github.com/users/ibraheemdev/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibraheemdev", "id": 34988408, "node_id": "MDQ6VXNlcjM0OTg4NDA4", "avatar_url": "https://avatars.githubusercontent.com/u/34988408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibraheemdev", "html_url": "https://github.com/ibraheemdev", "followers_url": "https://api.github.com/users/ibraheemdev/followers", "following_url": "https://api.github.com/users/ibraheemdev/following{/other_user}", "gists_url": "https://api.github.com/users/ibraheemdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibraheemdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibraheemdev/subscriptions", "organizations_url": "https://api.github.com/users/ibraheemdev/orgs", "repos_url": "https://api.github.com/users/ibraheemdev/repos", "events_url": "https://api.github.com/users/ibraheemdev/events{/privacy}", "received_events_url": "https://api.github.com/users/ibraheemdev/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1067e2ca5e9cfe5c79f956e49ffc684c5142d49b", "url": "https://api.github.com/repos/rust-lang/rust/commits/1067e2ca5e9cfe5c79f956e49ffc684c5142d49b", "html_url": "https://github.com/rust-lang/rust/commit/1067e2ca5e9cfe5c79f956e49ffc684c5142d49b"}], "stats": {"total": 46, "additions": 38, "deletions": 8}, "files": [{"sha": "2624df78a7612282174d8b05de95957f7e20a6ae", "filename": "library/core/src/slice/mod.rs", "status": "modified", "additions": 38, "deletions": 8, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/1afe14ceedaad19bc3e10dda28ce3f52c69e287a/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1afe14ceedaad19bc3e10dda28ce3f52c69e287a/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs?ref=1afe14ceedaad19bc3e10dda28ce3f52c69e287a", "patch": "@@ -560,15 +560,45 @@ impl<T> [T] {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn swap(&mut self, a: usize, b: usize) {\n-        // Can't take two mutable loans from one vector, so instead use raw pointers.\n-        let pa = ptr::addr_of_mut!(self[a]);\n-        let pb = ptr::addr_of_mut!(self[b]);\n-        // SAFETY: `pa` and `pb` have been created from safe mutable references and refer\n-        // to elements in the slice and therefore are guaranteed to be valid and aligned.\n-        // Note that accessing the elements behind `a` and `b` is checked and will\n-        // panic when out of bounds.\n+        assert!(a < self.len());\n+        assert!(b < self.len());\n+        // SAFETY: we just checked that both `a` and `b` are in bounds\n+        unsafe { self.swap_unchecked(a, b) }\n+    }\n+\n+    /// Swaps two elements in the slice, without doing bounds checking.\n+    ///\n+    /// For a safe alternative see [`swap`].\n+    ///\n+    /// # Arguments\n+    ///\n+    /// * a - The index of the first element\n+    /// * b - The index of the second element\n+    ///\n+    /// # Safety\n+    ///\n+    /// Calling this method with an out-of-bounds index is *[undefined behavior]*.\n+    /// The caller has to ensure that `a < self.len()` and `b < self.len()`.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// let mut v = [\"a\", \"b\", \"c\", \"d\"];\n+    /// // SAFETY: we know that 1 and 3 are both indices of the slice\n+    /// unsafe { v.swap_unchecked(1, 3) };\n+    /// assert!(v == [\"a\", \"d\", \"c\", \"b\"]);\n+    /// ```\n+    ///\n+    /// [`swap`]: slice::swap\n+    /// [undefined behavior]: https://doc.rust-lang.org/reference/behavior-considered-undefined.html\n+    #[unstable(feature = \"slice_swap_unchecked\", issue = \"88539\")]\n+    pub unsafe fn swap_unchecked(&mut self, a: usize, b: usize) {\n+        debug_assert!(a < self.len());\n+        debug_assert!(b < self.len());\n+        let ptr = self.as_mut_ptr();\n+        // SAFETY: caller has to guarantee that `a < self.len()` and `b < self.len()`\n         unsafe {\n-            ptr::swap(pa, pb);\n+            ptr::swap(ptr.add(a), ptr.add(b));\n         }\n     }\n "}]}