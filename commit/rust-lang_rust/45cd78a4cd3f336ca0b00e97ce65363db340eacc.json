{"sha": "45cd78a4cd3f336ca0b00e97ce65363db340eacc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1Y2Q3OGE0Y2QzZjMzNmNhMGIwMGU5N2NlNjUzNjNkYjM0MGVhY2M=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-07-03T09:31:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-07-03T09:31:09Z"}, "message": "Rollup merge of #51980 - est31:columns, r=alexcrichton\n\nEmit column info in debuginfo for non msvc like targets\n\nFixes #42921 everywhere except MSVC. This mimics clang behaviour.", "tree": {"sha": "d6cffddc1cf81b4da1e3aff4b65ef3075dbef240", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6cffddc1cf81b4da1e3aff4b65ef3075dbef240"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45cd78a4cd3f336ca0b00e97ce65363db340eacc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbO0JdCRBK7hj4Ov3rIwAAdHIIAAXLpczMyRHxOM71tiCIldJ3\nAMH5EV0wqSPg9oQ1DVCwwcMJ5Kq7o3d3/g+tVsUMTkEnO5iQN7VDubBwGKDNSw6J\n4QqOzzeI7Aa0ipUZk+Qs0EGxFqeD+zY4FrYApBxhIVAT94SkfpVYn7G0fJJNqyfF\nkcU915d3tiOuKVzql1LZ4X97DgDeM0LexPwgDibR6ZbiBgVwG4P1v7OCbhB2z5hI\neVxTpaKlvIqiMMxbq+54hpwHSEacB7ckVBgbxP3iWrm5HgvgnAXSqkhN8soVCFYp\nNgkSk8lZihq+OAGcwXToBAVDLDuXh2k/kHQGZv7lOdvy+4F1traWdWrvbMlwx8Y=\n=trDZ\n-----END PGP SIGNATURE-----\n", "payload": "tree d6cffddc1cf81b4da1e3aff4b65ef3075dbef240\nparent f91b02b769ebf38032d6c707366c42cc50e1eb93\nparent 3779a4cb74d567153557036c4d86266bc8df196a\nauthor Pietro Albini <pietro@pietroalbini.org> 1530610269 +0200\ncommitter GitHub <noreply@github.com> 1530610269 +0200\n\nRollup merge of #51980 - est31:columns, r=alexcrichton\n\nEmit column info in debuginfo for non msvc like targets\n\nFixes #42921 everywhere except MSVC. This mimics clang behaviour.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45cd78a4cd3f336ca0b00e97ce65363db340eacc", "html_url": "https://github.com/rust-lang/rust/commit/45cd78a4cd3f336ca0b00e97ce65363db340eacc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45cd78a4cd3f336ca0b00e97ce65363db340eacc/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f91b02b769ebf38032d6c707366c42cc50e1eb93", "url": "https://api.github.com/repos/rust-lang/rust/commits/f91b02b769ebf38032d6c707366c42cc50e1eb93", "html_url": "https://github.com/rust-lang/rust/commit/f91b02b769ebf38032d6c707366c42cc50e1eb93"}, {"sha": "3779a4cb74d567153557036c4d86266bc8df196a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3779a4cb74d567153557036c4d86266bc8df196a", "html_url": "https://github.com/rust-lang/rust/commit/3779a4cb74d567153557036c4d86266bc8df196a"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "958d09413edfaed93b4ec343fd3977a62c161243", "filename": "src/librustc_codegen_llvm/debuginfo/source_loc.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/45cd78a4cd3f336ca0b00e97ce65363db340eacc/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fsource_loc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45cd78a4cd3f336ca0b00e97ce65363db340eacc/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fsource_loc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fsource_loc.rs?ref=45cd78a4cd3f336ca0b00e97ce65363db340eacc", "patch": "@@ -81,16 +81,22 @@ impl InternalDebugLocation {\n \n pub fn set_debug_location(bx: &Builder, debug_location: InternalDebugLocation) {\n     let metadata_node = match debug_location {\n-        KnownLocation { scope, line, .. } => {\n-            // Always set the column to zero like Clang and GCC\n-            let col = UNKNOWN_COLUMN_NUMBER;\n+        KnownLocation { scope, line, col } => {\n+            // For MSVC, set the column number to zero.\n+            // Otherwise, emit it. This mimics clang behaviour.\n+            // See discussion in https://github.com/rust-lang/rust/issues/42921\n+            let col_used =  if bx.cx.sess().target.target.options.is_like_msvc {\n+                UNKNOWN_COLUMN_NUMBER\n+            } else {\n+                col as c_uint\n+            };\n             debug!(\"setting debug location to {} {}\", line, col);\n \n             unsafe {\n                 llvm::LLVMRustDIBuilderCreateDebugLocation(\n                     debug_context(bx.cx).llcontext,\n                     line as c_uint,\n-                    col as c_uint,\n+                    col_used,\n                     scope,\n                     ptr::null_mut())\n             }"}]}