{"sha": "97fb5daf723c520b0361ade3e44f130257b1fe96", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3ZmI1ZGFmNzIzYzUyMGIwMzYxYWRlM2U0NGYxMzAyNTdiMWZlOTY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-07-30T13:39:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-30T13:39:55Z"}, "message": "Merge #5592\n\n5592: Rename TypeParamList -> GenericParamList r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "82f372ea7b9560cf8fbf861203460fe2aa2d4c88", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82f372ea7b9560cf8fbf861203460fe2aa2d4c88"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97fb5daf723c520b0361ade3e44f130257b1fe96", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfIs2rCRBK7hj4Ov3rIwAAdHIIACv66RrPoiLkfhZvbJse535L\nrRF8WHEKbGqNqp3bUBw4ELwFEHkRK3N8K1+Z0smSXfbXqJLJhMV/m5fA0ASOtLaN\naz/SmRwL1n4rO60GnsbvOJvIdk1M+u0FUx5TRlTR8PdrTZ8b9Y+EGy1HMcLS5dTv\nFO27Hc4AFXs/UCAyFE5bQjdssxmwuEAW5vkrsYb8yfspPoQXs7gx/8fbR/9inP6/\nPVGqCAs4kHqmLfR0KM6LNi+4qixrYAHn3YCWyPFav0TBFXk9/Q57bj1tPoCYkp3Q\nDLW9QFRQh/Oaw/FmVKGjHIW5okdoheCaJqu6Je3gEYRZ+iLPHYCSHAadS5l3q5M=\n=xgZw\n-----END PGP SIGNATURE-----\n", "payload": "tree 82f372ea7b9560cf8fbf861203460fe2aa2d4c88\nparent ee00679331b87dacc5fe608f153be160c1cb144c\nparent 28ef4c375a9f56d69daf885504aea3df7012bb81\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1596116395 +0000\ncommitter GitHub <noreply@github.com> 1596116395 +0000\n\nMerge #5592\n\n5592: Rename TypeParamList -> GenericParamList r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97fb5daf723c520b0361ade3e44f130257b1fe96", "html_url": "https://github.com/rust-lang/rust/commit/97fb5daf723c520b0361ade3e44f130257b1fe96", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97fb5daf723c520b0361ade3e44f130257b1fe96/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee00679331b87dacc5fe608f153be160c1cb144c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee00679331b87dacc5fe608f153be160c1cb144c", "html_url": "https://github.com/rust-lang/rust/commit/ee00679331b87dacc5fe608f153be160c1cb144c"}, {"sha": "28ef4c375a9f56d69daf885504aea3df7012bb81", "url": "https://api.github.com/repos/rust-lang/rust/commits/28ef4c375a9f56d69daf885504aea3df7012bb81", "html_url": "https://github.com/rust-lang/rust/commit/28ef4c375a9f56d69daf885504aea3df7012bb81"}], "stats": {"total": 309, "additions": 155, "deletions": 154}, "files": [{"sha": "56510861dfb2aac1878e9075dfffa8e9588f3b10", "filename": "crates/ra_assists/src/handlers/generate_function.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_function.rs?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -104,7 +104,7 @@ impl FunctionTemplate {\n struct FunctionBuilder {\n     target: GeneratedFunctionTarget,\n     fn_name: ast::Name,\n-    type_params: Option<ast::TypeParamList>,\n+    type_params: Option<ast::GenericParamList>,\n     params: ast::ParamList,\n     file: FileId,\n     needs_pub: bool,\n@@ -200,7 +200,7 @@ fn fn_args(\n     ctx: &AssistContext,\n     target_module: hir::Module,\n     call: &ast::CallExpr,\n-) -> Option<(Option<ast::TypeParamList>, ast::ParamList)> {\n+) -> Option<(Option<ast::GenericParamList>, ast::ParamList)> {\n     let mut arg_names = Vec::new();\n     let mut arg_types = Vec::new();\n     for arg in call.arg_list()?.args() {"}, {"sha": "d9b87c9c0dd79795e1a4ef6b78a60fe143b70044", "filename": "crates/ra_assists/src/handlers/generate_impl.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_impl.rs?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -1,4 +1,4 @@\n-use ra_syntax::ast::{self, AstNode, NameOwner, TypeParamsOwner};\n+use ra_syntax::ast::{self, AstNode, GenericParamsOwner, NameOwner};\n use stdx::{format_to, SepBy};\n \n use crate::{AssistContext, AssistId, AssistKind, Assists};\n@@ -31,7 +31,7 @@ pub(crate) fn generate_impl(acc: &mut Assists, ctx: &AssistContext) -> Option<()\n         format!(\"Generate impl for `{}`\", name),\n         target,\n         |edit| {\n-            let type_params = nominal.type_param_list();\n+            let type_params = nominal.generic_param_list();\n             let start_offset = nominal.syntax().text_range().end();\n             let mut buf = String::new();\n             buf.push_str(\"\\n\\nimpl\");"}, {"sha": "340f9b10396f3ca0432f1b79e46c98f744589c00", "filename": "crates/ra_assists/src/handlers/generate_new.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_new.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_new.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_new.rs?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -1,7 +1,8 @@\n use hir::Adt;\n use ra_syntax::{\n     ast::{\n-        self, AstNode, NameOwner, StructKind, TypeAscriptionOwner, TypeParamsOwner, VisibilityOwner,\n+        self, AstNode, GenericParamsOwner, NameOwner, StructKind, TypeAscriptionOwner,\n+        VisibilityOwner,\n     },\n     T,\n };\n@@ -91,7 +92,7 @@ pub(crate) fn generate_new(acc: &mut Assists, ctx: &AssistContext) -> Option<()>\n // Generates the surrounding `impl Type { <code> }` including type and lifetime\n // parameters\n fn generate_impl_text(strukt: &ast::StructDef, code: &str) -> String {\n-    let type_params = strukt.type_param_list();\n+    let type_params = strukt.generic_param_list();\n     let mut buf = String::with_capacity(code.len());\n     buf.push_str(\"\\n\\nimpl\");\n     if let Some(type_params) = &type_params {"}, {"sha": "4ad173ef0055202876590dd1392fbb8dc8825114", "filename": "crates/ra_assists/src/handlers/introduce_named_lifetime.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fintroduce_named_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fintroduce_named_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fintroduce_named_lifetime.rs?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -1,5 +1,5 @@\n use ra_syntax::{\n-    ast::{self, NameOwner, TypeAscriptionOwner, TypeParamsOwner},\n+    ast::{self, GenericParamsOwner, NameOwner, TypeAscriptionOwner},\n     AstNode, SyntaxKind, TextRange, TextSize,\n };\n use rustc_hash::FxHashSet;\n@@ -54,7 +54,7 @@ fn generate_fn_def_assist(\n     lifetime_loc: TextRange,\n ) -> Option<()> {\n     let param_list: ast::ParamList = fn_def.param_list()?;\n-    let new_lifetime_param = generate_unique_lifetime_param_name(&fn_def.type_param_list())?;\n+    let new_lifetime_param = generate_unique_lifetime_param_name(&fn_def.generic_param_list())?;\n     let end_of_fn_ident = fn_def.name()?.ident_token()?.text_range().end();\n     let self_param =\n         // use the self if it's a reference and has no explicit lifetime\n@@ -96,7 +96,7 @@ fn generate_impl_def_assist(\n     impl_def: &ast::ImplDef,\n     lifetime_loc: TextRange,\n ) -> Option<()> {\n-    let new_lifetime_param = generate_unique_lifetime_param_name(&impl_def.type_param_list())?;\n+    let new_lifetime_param = generate_unique_lifetime_param_name(&impl_def.generic_param_list())?;\n     let end_of_impl_kw = impl_def.impl_token()?.text_range().end();\n     acc.add(AssistId(ASSIST_NAME, AssistKind::Refactor), ASSIST_LABEL, lifetime_loc, |builder| {\n         add_lifetime_param(impl_def, builder, end_of_impl_kw, new_lifetime_param);\n@@ -107,7 +107,7 @@ fn generate_impl_def_assist(\n /// Given a type parameter list, generate a unique lifetime parameter name\n /// which is not in the list\n fn generate_unique_lifetime_param_name(\n-    existing_type_param_list: &Option<ast::TypeParamList>,\n+    existing_type_param_list: &Option<ast::GenericParamList>,\n ) -> Option<char> {\n     match existing_type_param_list {\n         Some(type_params) => {\n@@ -123,13 +123,13 @@ fn generate_unique_lifetime_param_name(\n \n /// Add the lifetime param to `builder`. If there are type parameters in `type_params_owner`, add it to the end. Otherwise\n /// add new type params brackets with the lifetime parameter at `new_type_params_loc`.\n-fn add_lifetime_param<TypeParamsOwner: ast::TypeParamsOwner>(\n+fn add_lifetime_param<TypeParamsOwner: ast::GenericParamsOwner>(\n     type_params_owner: &TypeParamsOwner,\n     builder: &mut AssistBuilder,\n     new_type_params_loc: TextSize,\n     new_lifetime_param: char,\n ) {\n-    match type_params_owner.type_param_list() {\n+    match type_params_owner.generic_param_list() {\n         // add the new lifetime parameter to an existing type param list\n         Some(type_params) => {\n             builder.insert("}, {"sha": "69ce90fbc2354508ef7c56ad0961d9b6222b29d2", "filename": "crates/ra_assists/src/handlers/move_bounds.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmove_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmove_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmove_bounds.rs?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -23,7 +23,7 @@ use crate::{AssistContext, AssistId, AssistKind, Assists};\n // }\n // ```\n pub(crate) fn move_bounds_to_where_clause(acc: &mut Assists, ctx: &AssistContext) -> Option<()> {\n-    let type_param_list = ctx.find_node_at_offset::<ast::TypeParamList>()?;\n+    let type_param_list = ctx.find_node_at_offset::<ast::GenericParamList>()?;\n \n     let mut type_params = type_param_list.type_params();\n     if type_params.all(|p| p.type_bound_list().is_none()) {"}, {"sha": "5fa2fbb3f7206e1f817d0abeb45c607f978f9d01", "filename": "crates/ra_hir_def/src/generics.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_hir_def%2Fsrc%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_hir_def%2Fsrc%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fgenerics.rs?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -12,7 +12,7 @@ use hir_expand::{\n use ra_arena::{map::ArenaMap, Arena};\n use ra_db::FileId;\n use ra_prof::profile;\n-use ra_syntax::ast::{self, NameOwner, TypeBoundsOwner, TypeParamsOwner};\n+use ra_syntax::ast::{self, GenericParamsOwner, NameOwner, TypeBoundsOwner};\n \n use crate::{\n     body::LowerCtx,\n@@ -205,9 +205,9 @@ impl GenericParams {\n         &mut self,\n         lower_ctx: &LowerCtx,\n         sm: &mut SourceMap,\n-        node: &dyn TypeParamsOwner,\n+        node: &dyn GenericParamsOwner,\n     ) {\n-        if let Some(params) = node.type_param_list() {\n+        if let Some(params) = node.generic_param_list() {\n             self.fill_params(lower_ctx, sm, params)\n         }\n         if let Some(where_clause) = node.where_clause() {\n@@ -232,7 +232,7 @@ impl GenericParams {\n         &mut self,\n         lower_ctx: &LowerCtx,\n         sm: &mut SourceMap,\n-        params: ast::TypeParamList,\n+        params: ast::GenericParamList,\n     ) {\n         for type_param in params.type_params() {\n             let name = type_param.name().map_or_else(Name::missing, |it| it.as_name());"}, {"sha": "19d165b5b7718f5d6f2c5788e283f3bcb0f4f73c", "filename": "crates/ra_hir_def/src/item_tree/lower.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_hir_def%2Fsrc%2Fitem_tree%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_hir_def%2Fsrc%2Fitem_tree%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fitem_tree%2Flower.rs?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -568,10 +568,10 @@ impl Ctx {\n     fn lower_generic_params_and_inner_items(\n         &mut self,\n         owner: GenericsOwner<'_>,\n-        node: &impl ast::TypeParamsOwner,\n+        node: &impl ast::GenericParamsOwner,\n     ) -> GenericParamsId {\n         // Generics are part of item headers and may contain inner items we need to collect.\n-        if let Some(params) = node.type_param_list() {\n+        if let Some(params) = node.generic_param_list() {\n             self.collect_inner_items(params.syntax());\n         }\n         if let Some(clause) = node.where_clause() {\n@@ -584,7 +584,7 @@ impl Ctx {\n     fn lower_generic_params(\n         &mut self,\n         owner: GenericsOwner<'_>,\n-        node: &impl ast::TypeParamsOwner,\n+        node: &impl ast::GenericParamsOwner,\n     ) -> GenericParamsId {\n         let mut sm = &mut ArenaMap::default();\n         let mut generics = GenericParams::default();"}, {"sha": "3e2f0a520659e094a0f9ade5a8e203e681ef3ec4", "filename": "crates/ra_hir_expand/src/builtin_derive.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_derive.rs?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -4,7 +4,7 @@ use log::debug;\n \n use ra_parser::FragmentKind;\n use ra_syntax::{\n-    ast::{self, AstNode, ModuleItemOwner, NameOwner, TypeParamsOwner},\n+    ast::{self, AstNode, GenericParamsOwner, ModuleItemOwner, NameOwner},\n     match_ast,\n };\n \n@@ -72,9 +72,9 @@ fn parse_adt(tt: &tt::Subtree) -> Result<BasicAdtInfo, mbe::ExpandError> {\n     let node = item.syntax();\n     let (name, params) = match_ast! {\n         match node {\n-            ast::StructDef(it) => (it.name(), it.type_param_list()),\n-            ast::EnumDef(it) => (it.name(), it.type_param_list()),\n-            ast::UnionDef(it) => (it.name(), it.type_param_list()),\n+            ast::StructDef(it) => (it.name(), it.generic_param_list()),\n+            ast::EnumDef(it) => (it.name(), it.generic_param_list()),\n+            ast::UnionDef(it) => (it.name(), it.generic_param_list()),\n             _ => {\n                 debug!(\"unexpected node is {:?}\", node);\n                 return Err(mbe::ExpandError::ConversionError)"}, {"sha": "e81e8436f7e16f00bbd62f1ac9fa741c6815652d", "filename": "crates/ra_ide/src/display.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_ide%2Fsrc%2Fdisplay.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_ide%2Fsrc%2Fdisplay.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdisplay.rs?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -5,7 +5,7 @@ mod navigation_target;\n mod short_label;\n \n use ra_syntax::{\n-    ast::{self, AstNode, AttrsOwner, NameOwner, TypeParamsOwner},\n+    ast::{self, AstNode, AttrsOwner, GenericParamsOwner, NameOwner},\n     SyntaxKind::{ATTR, COMMENT},\n };\n \n@@ -37,7 +37,7 @@ pub(crate) fn function_declaration(node: &ast::Fn) -> String {\n     if let Some(name) = node.name() {\n         format_to!(buf, \"fn {}\", name)\n     }\n-    if let Some(type_params) = node.type_param_list() {\n+    if let Some(type_params) = node.generic_param_list() {\n         format_to!(buf, \"{}\", type_params);\n     }\n     if let Some(param_list) = node.param_list() {"}, {"sha": "b1c4561c114bd4e4d88e83685fc7bb60de189624", "filename": "crates/ra_ide/src/extend_selection.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_ide%2Fsrc%2Fextend_selection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_ide%2Fsrc%2Fextend_selection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fextend_selection.rs?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -44,7 +44,7 @@ fn try_extend_selection(\n         RECORD_FIELD_LIST,\n         ENUM_VARIANT_LIST,\n         USE_TREE_LIST,\n-        TYPE_PARAM_LIST,\n+        GENERIC_PARAM_LIST,\n         TYPE_ARG_LIST,\n         TYPE_BOUND_LIST,\n         PARAM_LIST,"}, {"sha": "05ccc0b73f7a4c47a39634772833108b4b754101", "filename": "crates/ra_ide/src/file_structure.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_ide%2Fsrc%2Ffile_structure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_ide%2Fsrc%2Ffile_structure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Ffile_structure.rs?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -1,5 +1,5 @@\n use ra_syntax::{\n-    ast::{self, AttrsOwner, NameOwner, TypeAscriptionOwner, TypeParamsOwner},\n+    ast::{self, AttrsOwner, GenericParamsOwner, NameOwner, TypeAscriptionOwner},\n     match_ast, AstNode, SourceFile, SyntaxKind, SyntaxNode, TextRange, WalkEvent,\n };\n \n@@ -113,7 +113,7 @@ fn structure_node(node: &SyntaxNode) -> Option<StructureNode> {\n         match node {\n             ast::Fn(it) => {\n                 let mut detail = String::from(\"fn\");\n-                if let Some(type_param_list) = it.type_param_list() {\n+                if let Some(type_param_list) = it.generic_param_list() {\n                     collapse_ws(type_param_list.syntax(), &mut detail);\n                 }\n                 if let Some(param_list) = it.param_list() {"}, {"sha": "94d03a07f3e3d49cd7430ba9b0df34a0e81182f9", "filename": "crates/ra_ide/src/references.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_ide%2Fsrc%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_ide%2Fsrc%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Freferences.rs?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -175,7 +175,7 @@ fn get_struct_def_name_for_struct_literal_search(\n             return name.syntax().ancestors().find_map(ast::StructDef::cast).and_then(|l| l.name());\n         }\n         if sema\n-            .find_node_at_offset_with_descend::<ast::TypeParamList>(\n+            .find_node_at_offset_with_descend::<ast::GenericParamList>(\n                 &syntax,\n                 left.text_range().start(),\n             )"}, {"sha": "90dabb4c0f109c703d25e2356c58e5d27442e9be", "filename": "crates/ra_parser/src/grammar/type_params.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftype_params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftype_params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftype_params.rs?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -36,7 +36,7 @@ fn type_param_list(p: &mut Parser) {\n         }\n     }\n     p.expect(T![>]);\n-    m.complete(p, TYPE_PARAM_LIST);\n+    m.complete(p, GENERIC_PARAM_LIST);\n }\n \n fn lifetime_param(p: &mut Parser, m: Marker) {"}, {"sha": "b83690865b3c4ad6efdf6fb07f26355ad3149bd1", "filename": "crates/ra_parser/src/syntax_kind/generated.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -230,7 +230,7 @@ pub enum SyntaxKind {\n     NAME_REF,\n     LET_STMT,\n     EXPR_STMT,\n-    TYPE_PARAM_LIST,\n+    GENERIC_PARAM_LIST,\n     LIFETIME_PARAM,\n     TYPE_PARAM,\n     CONST_PARAM,"}, {"sha": "452e67c70b9f9502e2467665eb833dca2cc516a4", "filename": "crates/ra_syntax/src/ast.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast.rs?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -286,7 +286,7 @@ where\n     let mut bounds = pred.type_bound_list().unwrap().bounds();\n \n     assert!(pred.for_token().is_none());\n-    assert!(pred.type_param_list().is_none());\n+    assert!(pred.generic_param_list().is_none());\n     assert_eq!(\"T\", pred.type_ref().unwrap().syntax().text().to_string());\n     assert_bound(\"Clone\", bounds.next());\n     assert_bound(\"Copy\", bounds.next());\n@@ -325,7 +325,7 @@ where\n     let mut bounds = pred.type_bound_list().unwrap().bounds();\n \n     assert!(pred.for_token().is_some());\n-    assert_eq!(\"<'a>\", pred.type_param_list().unwrap().syntax().text().to_string());\n+    assert_eq!(\"<'a>\", pred.generic_param_list().unwrap().syntax().text().to_string());\n     assert_eq!(\"F\", pred.type_ref().unwrap().syntax().text().to_string());\n     assert_bound(\"Fn(&'a str)\", bounds.next());\n }"}, {"sha": "efe0cbe3a11a8256dad6c7410c937b8892627af7", "filename": "crates/ra_syntax/src/ast/generated/nodes.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -50,7 +50,7 @@ pub struct EnumDef {\n impl ast::AttrsOwner for EnumDef {}\n impl ast::NameOwner for EnumDef {}\n impl ast::VisibilityOwner for EnumDef {}\n-impl ast::TypeParamsOwner for EnumDef {}\n+impl ast::GenericParamsOwner for EnumDef {}\n impl EnumDef {\n     pub fn enum_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![enum]) }\n     pub fn variant_list(&self) -> Option<EnumVariantList> { support::child(&self.syntax) }\n@@ -85,7 +85,7 @@ pub struct Fn {\n impl ast::AttrsOwner for Fn {}\n impl ast::NameOwner for Fn {}\n impl ast::VisibilityOwner for Fn {}\n-impl ast::TypeParamsOwner for Fn {}\n+impl ast::GenericParamsOwner for Fn {}\n impl Fn {\n     pub fn default_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![default]) }\n     pub fn async_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![async]) }\n@@ -104,7 +104,7 @@ pub struct ImplDef {\n }\n impl ast::AttrsOwner for ImplDef {}\n impl ast::VisibilityOwner for ImplDef {}\n-impl ast::TypeParamsOwner for ImplDef {}\n+impl ast::GenericParamsOwner for ImplDef {}\n impl ImplDef {\n     pub fn const_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![const]) }\n     pub fn default_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![default]) }\n@@ -161,7 +161,7 @@ pub struct StructDef {\n impl ast::AttrsOwner for StructDef {}\n impl ast::NameOwner for StructDef {}\n impl ast::VisibilityOwner for StructDef {}\n-impl ast::TypeParamsOwner for StructDef {}\n+impl ast::GenericParamsOwner for StructDef {}\n impl StructDef {\n     pub fn struct_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![struct]) }\n     pub fn semicolon_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![;]) }\n@@ -174,7 +174,7 @@ pub struct TraitDef {\n impl ast::AttrsOwner for TraitDef {}\n impl ast::NameOwner for TraitDef {}\n impl ast::VisibilityOwner for TraitDef {}\n-impl ast::TypeParamsOwner for TraitDef {}\n+impl ast::GenericParamsOwner for TraitDef {}\n impl ast::TypeBoundsOwner for TraitDef {}\n impl TraitDef {\n     pub fn unsafe_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![unsafe]) }\n@@ -189,7 +189,7 @@ pub struct TypeAlias {\n impl ast::AttrsOwner for TypeAlias {}\n impl ast::NameOwner for TypeAlias {}\n impl ast::VisibilityOwner for TypeAlias {}\n-impl ast::TypeParamsOwner for TypeAlias {}\n+impl ast::GenericParamsOwner for TypeAlias {}\n impl ast::TypeBoundsOwner for TypeAlias {}\n impl TypeAlias {\n     pub fn default_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![default]) }\n@@ -205,7 +205,7 @@ pub struct UnionDef {\n impl ast::AttrsOwner for UnionDef {}\n impl ast::NameOwner for UnionDef {}\n impl ast::VisibilityOwner for UnionDef {}\n-impl ast::TypeParamsOwner for UnionDef {}\n+impl ast::GenericParamsOwner for UnionDef {}\n impl UnionDef {\n     pub fn union_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![union]) }\n     pub fn record_field_def_list(&self) -> Option<RecordFieldDefList> {\n@@ -307,10 +307,10 @@ impl Abi {\n     pub fn extern_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![extern]) }\n }\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n-pub struct TypeParamList {\n+pub struct GenericParamList {\n     pub(crate) syntax: SyntaxNode,\n }\n-impl TypeParamList {\n+impl GenericParamList {\n     pub fn l_angle_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![<]) }\n     pub fn type_params(&self) -> AstChildren<TypeParam> { support::children(&self.syntax) }\n     pub fn lifetime_params(&self) -> AstChildren<LifetimeParam> { support::children(&self.syntax) }\n@@ -557,7 +557,7 @@ pub struct ForType {\n }\n impl ForType {\n     pub fn for_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![for]) }\n-    pub fn type_param_list(&self) -> Option<TypeParamList> { support::child(&self.syntax) }\n+    pub fn generic_param_list(&self) -> Option<GenericParamList> { support::child(&self.syntax) }\n     pub fn type_ref(&self) -> Option<TypeRef> { support::child(&self.syntax) }\n }\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n@@ -1172,7 +1172,7 @@ pub struct WherePred {\n impl ast::TypeBoundsOwner for WherePred {}\n impl WherePred {\n     pub fn for_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![for]) }\n-    pub fn type_param_list(&self) -> Option<TypeParamList> { support::child(&self.syntax) }\n+    pub fn generic_param_list(&self) -> Option<GenericParamList> { support::child(&self.syntax) }\n     pub fn lifetime_token(&self) -> Option<SyntaxToken> {\n         support::token(&self.syntax, T![lifetime])\n     }\n@@ -1397,8 +1397,8 @@ pub enum AdtDef {\n     UnionDef(UnionDef),\n }\n impl ast::AttrsOwner for AdtDef {}\n+impl ast::GenericParamsOwner for AdtDef {}\n impl ast::NameOwner for AdtDef {}\n-impl ast::TypeParamsOwner for AdtDef {}\n impl ast::VisibilityOwner for AdtDef {}\n impl AstNode for SourceFile {\n     fn can_cast(kind: SyntaxKind) -> bool { kind == SOURCE_FILE }\n@@ -1675,8 +1675,8 @@ impl AstNode for Abi {\n     }\n     fn syntax(&self) -> &SyntaxNode { &self.syntax }\n }\n-impl AstNode for TypeParamList {\n-    fn can_cast(kind: SyntaxKind) -> bool { kind == TYPE_PARAM_LIST }\n+impl AstNode for GenericParamList {\n+    fn can_cast(kind: SyntaxKind) -> bool { kind == GENERIC_PARAM_LIST }\n     fn cast(syntax: SyntaxNode) -> Option<Self> {\n         if Self::can_cast(syntax.kind()) {\n             Some(Self { syntax })\n@@ -3583,7 +3583,7 @@ impl std::fmt::Display for Abi {\n         std::fmt::Display::fmt(self.syntax(), f)\n     }\n }\n-impl std::fmt::Display for TypeParamList {\n+impl std::fmt::Display for GenericParamList {\n     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n         std::fmt::Display::fmt(self.syntax(), f)\n     }"}, {"sha": "4759f23a508449e5f33ed5a9d38a03cd07b20830", "filename": "crates/ra_syntax/src/ast/make.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Fsrc%2Fast%2Fmake.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Fsrc%2Fast%2Fmake.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fmake.rs?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -291,7 +291,7 @@ pub fn visibility_pub_crate() -> ast::Visibility {\n pub fn fn_def(\n     visibility: Option<ast::Visibility>,\n     fn_name: ast::Name,\n-    type_params: Option<ast::TypeParamList>,\n+    type_params: Option<ast::GenericParamList>,\n     params: ast::ParamList,\n     body: ast::BlockExpr,\n ) -> ast::Fn {"}, {"sha": "113bd5d823a871729a346c3df40b40e2d3b9ec85", "filename": "crates/ra_syntax/src/ast/traits.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Fsrc%2Fast%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Fsrc%2Fast%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Ftraits.rs?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -49,8 +49,8 @@ pub trait ModuleItemOwner: AstNode {\n     }\n }\n \n-pub trait TypeParamsOwner: AstNode {\n-    fn type_param_list(&self) -> Option<ast::TypeParamList> {\n+pub trait GenericParamsOwner: AstNode {\n+    fn generic_param_list(&self) -> Option<ast::GenericParamList> {\n         support::child(self.syntax())\n     }\n "}, {"sha": "10081a8708d5ff1c941a090b5b947bfd65294af1", "filename": "crates/ra_syntax/test_data/parser/err/0009_broken_struct_type_parameter.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0009_broken_struct_type_parameter.rast", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0009_broken_struct_type_parameter.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0009_broken_struct_type_parameter.rast?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -4,7 +4,7 @@ SOURCE_FILE@0..43\n     WHITESPACE@6..7 \" \"\n     NAME@7..8\n       IDENT@7..8 \"S\"\n-    TYPE_PARAM_LIST@8..11\n+    GENERIC_PARAM_LIST@8..11\n       L_ANGLE@8..9 \"<\"\n       ERROR@9..11\n         INT_NUMBER@9..11 \"90\""}, {"sha": "d62906b99b94f5b15e517cdfbc2e9d57e174916f", "filename": "crates/ra_syntax/test_data/parser/err/0012_broken_lambda.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0012_broken_lambda.rast", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0012_broken_lambda.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0012_broken_lambda.rast?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -10,7 +10,7 @@ SOURCE_FILE@0..389\n     WHITESPACE@13..14\n     NAME@14..21\n       IDENT@14..21 \"process\"\n-    TYPE_PARAM_LIST@21..38\n+    GENERIC_PARAM_LIST@21..38\n       L_ANGLE@21..22\n       LIFETIME_PARAM@22..24\n         LIFETIME@22..24 \"'a\""}, {"sha": "a1f39b22a52b3c1528ae088ae7523d78368037f9", "filename": "crates/ra_syntax/test_data/parser/err/0014_where_no_bounds.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0014_where_no_bounds.rast", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0014_where_no_bounds.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0014_where_no_bounds.rast?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -4,7 +4,7 @@ SOURCE_FILE@0..23\n     WHITESPACE@2..3 \" \"\n     NAME@3..6\n       IDENT@3..6 \"foo\"\n-    TYPE_PARAM_LIST@6..9\n+    GENERIC_PARAM_LIST@6..9\n       L_ANGLE@6..7 \"<\"\n       TYPE_PARAM@7..8\n         NAME@7..8"}, {"sha": "4c2d1ad68645d8b0d6e1fa2a0e4e3d91759f4938", "filename": "crates/ra_syntax/test_data/parser/err/0024_many_type_parens.rast", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0024_many_type_parens.rast", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0024_many_type_parens.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0024_many_type_parens.rast?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -4,7 +4,7 @@ SOURCE_FILE@0..240\n     WHITESPACE@2..3 \" \"\n     NAME@3..4\n       IDENT@3..4 \"f\"\n-    TYPE_PARAM_LIST@4..48\n+    GENERIC_PARAM_LIST@4..48\n       L_ANGLE@4..5 \"<\"\n       TYPE_PARAM@5..47\n         NAME@5..6\n@@ -39,7 +39,7 @@ SOURCE_FILE@0..240\n             L_PAREN@28..29 \"(\"\n             FOR_TYPE@29..46\n               FOR_KW@29..32 \"for\"\n-              TYPE_PARAM_LIST@32..36\n+              GENERIC_PARAM_LIST@32..36\n                 L_ANGLE@32..33 \"<\"\n                 LIFETIME_PARAM@33..35\n                   LIFETIME@33..35 \"\\'a\"\n@@ -122,7 +122,7 @@ SOURCE_FILE@0..240\n               L_PAREN@102..103 \"(\"\n               FOR_TYPE@103..120\n                 FOR_KW@103..106 \"for\"\n-                TYPE_PARAM_LIST@106..110\n+                GENERIC_PARAM_LIST@106..110\n                   L_ANGLE@106..107 \"<\"\n                   LIFETIME_PARAM@107..109\n                     LIFETIME@107..109 \"\\'a\"\n@@ -242,7 +242,7 @@ SOURCE_FILE@0..240\n                           L_PAREN@196..197 \"(\"\n                           FOR_TYPE@197..214\n                             FOR_KW@197..200 \"for\"\n-                            TYPE_PARAM_LIST@200..204\n+                            GENERIC_PARAM_LIST@200..204\n                               L_ANGLE@200..201 \"<\"\n                               LIFETIME_PARAM@201..203\n                                 LIFETIME@201..203 \"\\'a\""}, {"sha": "8c8bf7b7e5ce0e34c9a89d53d55db92288e0ce25", "filename": "crates/ra_syntax/test_data/parser/err/0026_imp_recovery.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0026_imp_recovery.rast", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0026_imp_recovery.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0026_imp_recovery.rast?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -1,7 +1,7 @@\n SOURCE_FILE@0..38\n   IMPL_DEF@0..14\n     IMPL_KW@0..4 \"impl\"\n-    TYPE_PARAM_LIST@4..14\n+    GENERIC_PARAM_LIST@4..14\n       L_ANGLE@4..5 \"<\"\n       TYPE_PARAM@5..13\n         NAME@5..6\n@@ -19,7 +19,7 @@ SOURCE_FILE@0..38\n   WHITESPACE@14..15 \"\\n\"\n   IMPL_DEF@15..37\n     IMPL_KW@15..19 \"impl\"\n-    TYPE_PARAM_LIST@19..22\n+    GENERIC_PARAM_LIST@19..22\n       L_ANGLE@19..20 \"<\"\n       TYPE_PARAM@20..21\n         NAME@20..21"}, {"sha": "a8e42e6eaaece32f7d872826fe3ccb7f5ac0c909", "filename": "crates/ra_syntax/test_data/parser/err/0027_incomplere_where_for.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0027_incomplere_where_for.rast", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0027_incomplere_where_for.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0027_incomplere_where_for.rast?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -13,7 +13,7 @@ SOURCE_FILE@0..30\n       WHITESPACE@18..19 \" \"\n       WHERE_PRED@19..26\n         FOR_KW@19..22 \"for\"\n-        TYPE_PARAM_LIST@22..26\n+        GENERIC_PARAM_LIST@22..26\n           L_ANGLE@22..23 \"<\"\n           LIFETIME_PARAM@23..25\n             LIFETIME@23..25 \"\\'a\""}, {"sha": "082625c130a3cb7bbfb93d218113680a229e7968", "filename": "crates/ra_syntax/test_data/parser/err/0044_unexpected_for_type.rast", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0044_unexpected_for_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0044_unexpected_for_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0044_unexpected_for_type.rast?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -9,7 +9,7 @@ SOURCE_FILE@0..239\n     WHITESPACE@13..14 \" \"\n     FOR_TYPE@14..29\n       FOR_KW@14..17 \"for\"\n-      TYPE_PARAM_LIST@17..21\n+      GENERIC_PARAM_LIST@17..21\n         L_ANGLE@17..18 \"<\"\n         LIFETIME_PARAM@18..20\n           LIFETIME@18..20 \"\\'a\"\n@@ -36,7 +36,7 @@ SOURCE_FILE@0..239\n     WHITESPACE@44..45 \" \"\n     FOR_TYPE@45..63\n       FOR_KW@45..48 \"for\"\n-      TYPE_PARAM_LIST@48..52\n+      GENERIC_PARAM_LIST@48..52\n         L_ANGLE@48..49 \"<\"\n         LIFETIME_PARAM@49..51\n           LIFETIME@49..51 \"\\'a\"\n@@ -67,7 +67,7 @@ SOURCE_FILE@0..239\n     WHITESPACE@80..81 \" \"\n     FOR_TYPE@81..94\n       FOR_KW@81..84 \"for\"\n-      TYPE_PARAM_LIST@84..88\n+      GENERIC_PARAM_LIST@84..88\n         L_ANGLE@84..85 \"<\"\n         LIFETIME_PARAM@85..87\n           LIFETIME@85..87 \"\\'a\"\n@@ -93,15 +93,15 @@ SOURCE_FILE@0..239\n     WHITESPACE@111..112 \" \"\n     FOR_TYPE@112..148\n       FOR_KW@112..115 \"for\"\n-      TYPE_PARAM_LIST@115..119\n+      GENERIC_PARAM_LIST@115..119\n         L_ANGLE@115..116 \"<\"\n         LIFETIME_PARAM@116..118\n           LIFETIME@116..118 \"\\'a\"\n         R_ANGLE@118..119 \">\"\n       WHITESPACE@119..120 \" \"\n       FOR_TYPE@120..148\n         FOR_KW@120..123 \"for\"\n-        TYPE_PARAM_LIST@123..127\n+        GENERIC_PARAM_LIST@123..127\n           L_ANGLE@123..124 \"<\"\n           LIFETIME_PARAM@124..126\n             LIFETIME@124..126 \"\\'b\"\n@@ -141,7 +141,7 @@ SOURCE_FILE@0..239\n     WHITESPACE@152..153 \" \"\n     NAME@153..164\n       IDENT@153..164 \"for_for_for\"\n-    TYPE_PARAM_LIST@164..167\n+    GENERIC_PARAM_LIST@164..167\n       L_ANGLE@164..165 \"<\"\n       TYPE_PARAM@165..166\n         NAME@165..166\n@@ -156,23 +156,23 @@ SOURCE_FILE@0..239\n       WHITESPACE@175..180 \"\\n    \"\n       WHERE_PRED@180..233\n         FOR_KW@180..183 \"for\"\n-        TYPE_PARAM_LIST@183..187\n+        GENERIC_PARAM_LIST@183..187\n           L_ANGLE@183..184 \"<\"\n           LIFETIME_PARAM@184..186\n             LIFETIME@184..186 \"\\'a\"\n           R_ANGLE@186..187 \">\"\n         WHITESPACE@187..188 \" \"\n         FOR_TYPE@188..227\n           FOR_KW@188..191 \"for\"\n-          TYPE_PARAM_LIST@191..195\n+          GENERIC_PARAM_LIST@191..195\n             L_ANGLE@191..192 \"<\"\n             LIFETIME_PARAM@192..194\n               LIFETIME@192..194 \"\\'b\"\n             R_ANGLE@194..195 \">\"\n           WHITESPACE@195..196 \" \"\n           FOR_TYPE@196..227\n             FOR_KW@196..199 \"for\"\n-            TYPE_PARAM_LIST@199..203\n+            GENERIC_PARAM_LIST@199..203\n               L_ANGLE@199..200 \"<\"\n               LIFETIME_PARAM@200..202\n                 LIFETIME@200..202 \"\\'c\""}, {"sha": "b0f2b5888d0012bbe0ddc1281ca73de3f5fcf86a", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0003_where_pred_for.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0003_where_pred_for.rast", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0003_where_pred_for.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0003_where_pred_for.rast?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -4,7 +4,7 @@ SOURCE_FILE@0..54\n     WHITESPACE@2..3 \" \"\n     NAME@3..12\n       IDENT@3..12 \"for_trait\"\n-    TYPE_PARAM_LIST@12..15\n+    GENERIC_PARAM_LIST@12..15\n       L_ANGLE@12..13 \"<\"\n       TYPE_PARAM@13..14\n         NAME@13..14\n@@ -19,7 +19,7 @@ SOURCE_FILE@0..54\n       WHITESPACE@23..27 \"\\n   \"\n       WHERE_PRED@27..49\n         FOR_KW@27..30 \"for\"\n-        TYPE_PARAM_LIST@30..34\n+        GENERIC_PARAM_LIST@30..34\n           L_ANGLE@30..31 \"<\"\n           LIFETIME_PARAM@31..33\n             LIFETIME@31..33 \"\\'a\""}, {"sha": "8e0252ce743b465af36e70083b546044ef42fd3f", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0005_function_type_params.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0005_function_type_params.rast", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0005_function_type_params.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0005_function_type_params.rast?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -4,7 +4,7 @@ SOURCE_FILE@0..28\n     WHITESPACE@2..3 \" \"\n     NAME@3..6\n       IDENT@3..6 \"foo\"\n-    TYPE_PARAM_LIST@6..23\n+    GENERIC_PARAM_LIST@6..23\n       L_ANGLE@6..7 \"<\"\n       TYPE_PARAM@7..22\n         NAME@7..8"}, {"sha": "49aca06b02d0bb30be1f580a1fc92deb1200c3d5", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0007_type_param_bounds.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0007_type_param_bounds.rast", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0007_type_param_bounds.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0007_type_param_bounds.rast?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -4,7 +4,7 @@ SOURCE_FILE@0..35\n     WHITESPACE@6..7 \" \"\n     NAME@7..8\n       IDENT@7..8 \"S\"\n-    TYPE_PARAM_LIST@8..33\n+    GENERIC_PARAM_LIST@8..33\n       L_ANGLE@8..9 \"<\"\n       TYPE_PARAM@9..32\n         NAME@9..10"}, {"sha": "8f20ccaa3e2ef7f15f34e6c095a95963772c0250", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0041_trait_item.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0041_trait_item.rast", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0041_trait_item.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0041_trait_item.rast?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -4,7 +4,7 @@ SOURCE_FILE@0..101\n     WHITESPACE@5..6 \" \"\n     NAME@6..7\n       IDENT@6..7 \"T\"\n-    TYPE_PARAM_LIST@7..10\n+    GENERIC_PARAM_LIST@7..10\n       L_ANGLE@7..8 \"<\"\n       TYPE_PARAM@8..9\n         NAME@8..9\n@@ -57,7 +57,7 @@ SOURCE_FILE@0..101\n     WHITESPACE@47..48 \" \"\n     NAME@48..49\n       IDENT@48..49 \"X\"\n-    TYPE_PARAM_LIST@49..69\n+    GENERIC_PARAM_LIST@49..69\n       L_ANGLE@49..50 \"<\"\n       TYPE_PARAM@50..68\n         NAME@50..51"}, {"sha": "d4235a8b1c9100adf21fe3b89a9ce41a87f60691", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0045_param_list_opt_patterns.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0045_param_list_opt_patterns.rast", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0045_param_list_opt_patterns.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0045_param_list_opt_patterns.rast?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -4,7 +4,7 @@ SOURCE_FILE@0..35\n     WHITESPACE@2..3 \" \"\n     NAME@3..6\n       IDENT@3..6 \"foo\"\n-    TYPE_PARAM_LIST@6..30\n+    GENERIC_PARAM_LIST@6..30\n       L_ANGLE@6..7 \"<\"\n       TYPE_PARAM@7..29\n         NAME@7..8"}, {"sha": "00cce69e6c75d7d64b65b51cc2cb1fec6bf62144", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0073_type_item_type_params.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0073_type_item_type_params.rast", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0073_type_item_type_params.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0073_type_item_type_params.rast?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -4,7 +4,7 @@ SOURCE_FILE@0..21\n     WHITESPACE@4..5 \" \"\n     NAME@5..11\n       IDENT@5..11 \"Result\"\n-    TYPE_PARAM_LIST@11..14\n+    GENERIC_PARAM_LIST@11..14\n       L_ANGLE@11..12 \"<\"\n       TYPE_PARAM@12..13\n         NAME@12..13"}, {"sha": "96217a7fdb4289ab11b1662c8a925b0730941f08", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0076_function_where_clause.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0076_function_where_clause.rast", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0076_function_where_clause.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0076_function_where_clause.rast?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -4,7 +4,7 @@ SOURCE_FILE@0..29\n     WHITESPACE@2..3 \" \"\n     NAME@3..6\n       IDENT@3..6 \"foo\"\n-    TYPE_PARAM_LIST@6..9\n+    GENERIC_PARAM_LIST@6..9\n       L_ANGLE@6..7 \"<\"\n       TYPE_PARAM@7..8\n         NAME@7..8"}, {"sha": "e7629ac0315f6f14b0a206e0ac2ca157ef315935", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0081_for_type.rast", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0081_for_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0081_for_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0081_for_type.rast?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -9,7 +9,7 @@ SOURCE_FILE@0..121\n     WHITESPACE@8..9 \" \"\n     FOR_TYPE@9..27\n       FOR_KW@9..12 \"for\"\n-      TYPE_PARAM_LIST@12..16\n+      GENERIC_PARAM_LIST@12..16\n         L_ANGLE@12..13 \"<\"\n         LIFETIME_PARAM@13..15\n           LIFETIME@13..15 \"\\'a\"\n@@ -39,7 +39,7 @@ SOURCE_FILE@0..121\n     WHITESPACE@37..38 \" \"\n     FOR_TYPE@38..80\n       FOR_KW@38..41 \"for\"\n-      TYPE_PARAM_LIST@41..45\n+      GENERIC_PARAM_LIST@41..45\n         L_ANGLE@41..42 \"<\"\n         LIFETIME_PARAM@42..44\n           LIFETIME@42..44 \"\\'a\"\n@@ -84,7 +84,7 @@ SOURCE_FILE@0..121\n     WHITESPACE@92..93 \" \"\n     FOR_TYPE@93..119\n       FOR_KW@93..96 \"for\"\n-      TYPE_PARAM_LIST@96..100\n+      GENERIC_PARAM_LIST@96..100\n         L_ANGLE@96..97 \"<\"\n         LIFETIME_PARAM@97..99\n           LIFETIME@97..99 \"\\'a\""}, {"sha": "1d24619c399ccd970575f65361038a51107d385f", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0090_type_param_default.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0090_type_param_default.rast", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0090_type_param_default.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0090_type_param_default.rast?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -4,7 +4,7 @@ SOURCE_FILE@0..19\n     WHITESPACE@6..7 \" \"\n     NAME@7..8\n       IDENT@7..8 \"S\"\n-    TYPE_PARAM_LIST@8..17\n+    GENERIC_PARAM_LIST@8..17\n       L_ANGLE@8..9 \"<\"\n       TYPE_PARAM@9..16\n         NAME@9..10"}, {"sha": "0b1ec5b276266039a96fc44763dec6c0e0998012", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0114_tuple_struct_where.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0114_tuple_struct_where.rast", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0114_tuple_struct_where.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0114_tuple_struct_where.rast?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -4,7 +4,7 @@ SOURCE_FILE@0..53\n     WHITESPACE@6..7 \" \"\n     NAME@7..11\n       IDENT@7..11 \"Test\"\n-    TYPE_PARAM_LIST@11..14\n+    GENERIC_PARAM_LIST@11..14\n       L_ANGLE@11..12 \"<\"\n       TYPE_PARAM@12..13\n         NAME@12..13\n@@ -45,7 +45,7 @@ SOURCE_FILE@0..53\n     WHITESPACE@40..41 \" \"\n     NAME@41..45\n       IDENT@41..45 \"Test\"\n-    TYPE_PARAM_LIST@45..48\n+    GENERIC_PARAM_LIST@45..48\n       L_ANGLE@45..46 \"<\"\n       TYPE_PARAM@46..47\n         NAME@46..47"}, {"sha": "edac8d5d9e71cd71c4a1813631dde1e33fe9a323", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0122_generic_lifetime_type_attribute.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0122_generic_lifetime_type_attribute.rast", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0122_generic_lifetime_type_attribute.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0122_generic_lifetime_type_attribute.rast?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -4,7 +4,7 @@ SOURCE_FILE@0..64\n     WHITESPACE@2..3 \" \"\n     NAME@3..6\n       IDENT@3..6 \"foo\"\n-    TYPE_PARAM_LIST@6..49\n+    GENERIC_PARAM_LIST@6..49\n       L_ANGLE@6..7 \"<\"\n       LIFETIME_PARAM@7..29\n         ATTR@7..26"}, {"sha": "157513565dc789d210d27e69a54525d4a362c24c", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0138_associated_type_bounds.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0138_associated_type_bounds.rast", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0138_associated_type_bounds.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0138_associated_type_bounds.rast?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -4,7 +4,7 @@ SOURCE_FILE@0..59\n     WHITESPACE@2..3 \" \"\n     NAME@3..12\n       IDENT@3..12 \"print_all\"\n-    TYPE_PARAM_LIST@12..40\n+    GENERIC_PARAM_LIST@12..40\n       L_ANGLE@12..13 \"<\"\n       TYPE_PARAM@13..39\n         NAME@13..14"}, {"sha": "6981ef9710a965d366ffdf140862c76cc32ce95f", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0147_const_param.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0147_const_param.rast", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0147_const_param.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0147_const_param.rast?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -4,7 +4,7 @@ SOURCE_FILE@0..24\n     WHITESPACE@6..7 \" \"\n     NAME@7..8\n       IDENT@7..8 \"S\"\n-    TYPE_PARAM_LIST@8..22\n+    GENERIC_PARAM_LIST@8..22\n       L_ANGLE@8..9 \"<\"\n       CONST_PARAM@9..21\n         CONST_KW@9..14 \"const\""}, {"sha": "07e555d637c1980e3c646ea0be3ec44150e8732f", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0150_impl_type_params.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0150_impl_type_params.rast", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0150_impl_type_params.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0150_impl_type_params.rast?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -1,7 +1,7 @@\n SOURCE_FILE@0..29\n   IMPL_DEF@0..28\n     IMPL_KW@0..4 \"impl\"\n-    TYPE_PARAM_LIST@4..18\n+    GENERIC_PARAM_LIST@4..18\n       L_ANGLE@4..5 \"<\"\n       CONST_PARAM@5..17\n         CONST_KW@5..10 \"const\""}, {"sha": "e2a770a377f406a095e264d0841c7b4387054326", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0151_trait_alias.rast", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0151_trait_alias.rast", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0151_trait_alias.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0151_trait_alias.rast?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -4,7 +4,7 @@ SOURCE_FILE@0..83\n     WHITESPACE@5..6 \" \"\n     NAME@6..7\n       IDENT@6..7 \"Z\"\n-    TYPE_PARAM_LIST@7..10\n+    GENERIC_PARAM_LIST@7..10\n       L_ANGLE@7..8 \"<\"\n       TYPE_PARAM@8..9\n         NAME@8..9\n@@ -36,7 +36,7 @@ SOURCE_FILE@0..83\n     WHITESPACE@24..25 \" \"\n     NAME@25..26\n       IDENT@25..26 \"Z\"\n-    TYPE_PARAM_LIST@26..29\n+    GENERIC_PARAM_LIST@26..29\n       L_ANGLE@26..27 \"<\"\n       TYPE_PARAM@27..28\n         NAME@27..28\n@@ -87,7 +87,7 @@ SOURCE_FILE@0..83\n     WHITESPACE@57..58 \" \"\n     NAME@58..59\n       IDENT@58..59 \"Z\"\n-    TYPE_PARAM_LIST@59..62\n+    GENERIC_PARAM_LIST@59..62\n       L_ANGLE@59..60 \"<\"\n       TYPE_PARAM@60..61\n         NAME@60..61"}, {"sha": "cf801aedd3a29fe45259ab5ea030f715fc715b08", "filename": "crates/ra_syntax/test_data/parser/ok/0001_struct_item.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0001_struct_item.rast", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0001_struct_item.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0001_struct_item.rast?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -4,7 +4,7 @@ SOURCE_FILE@0..32\n     WHITESPACE@6..7 \" \"\n     NAME@7..8\n       IDENT@7..8 \"S\"\n-    TYPE_PARAM_LIST@8..17\n+    GENERIC_PARAM_LIST@8..17\n       L_ANGLE@8..9 \"<\"\n       TYPE_PARAM@9..16\n         NAME@9..10"}, {"sha": "3ee208ffff861beef00324779e8500cdd5e46d7f", "filename": "crates/ra_syntax/test_data/parser/ok/0018_struct_type_params.rast", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0018_struct_type_params.rast", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0018_struct_type_params.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0018_struct_type_params.rast?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -4,7 +4,7 @@ SOURCE_FILE@0..290\n     WHITESPACE@6..7 \" \"\n     NAME@7..9\n       IDENT@7..9 \"S1\"\n-    TYPE_PARAM_LIST@9..12\n+    GENERIC_PARAM_LIST@9..12\n       L_ANGLE@9..10 \"<\"\n       TYPE_PARAM@10..11\n         NAME@10..11\n@@ -17,7 +17,7 @@ SOURCE_FILE@0..290\n     WHITESPACE@20..21 \" \"\n     NAME@21..23\n       IDENT@21..23 \"S2\"\n-    TYPE_PARAM_LIST@23..26\n+    GENERIC_PARAM_LIST@23..26\n       L_ANGLE@23..24 \"<\"\n       TYPE_PARAM@24..25\n         NAME@24..25\n@@ -39,7 +39,7 @@ SOURCE_FILE@0..290\n     WHITESPACE@39..40 \" \"\n     NAME@40..42\n       IDENT@40..42 \"S3\"\n-    TYPE_PARAM_LIST@42..45\n+    GENERIC_PARAM_LIST@42..45\n       L_ANGLE@42..43 \"<\"\n       TYPE_PARAM@43..44\n         NAME@43..44\n@@ -67,7 +67,7 @@ SOURCE_FILE@0..290\n     WHITESPACE@64..65 \" \"\n     NAME@65..67\n       IDENT@65..67 \"S4\"\n-    TYPE_PARAM_LIST@67..69\n+    GENERIC_PARAM_LIST@67..69\n       L_ANGLE@67..68 \"<\"\n       R_ANGLE@68..69 \">\"\n     SEMICOLON@69..70 \";\"\n@@ -77,7 +77,7 @@ SOURCE_FILE@0..290\n     WHITESPACE@77..78 \" \"\n     NAME@78..80\n       IDENT@78..80 \"S5\"\n-    TYPE_PARAM_LIST@80..84\n+    GENERIC_PARAM_LIST@80..84\n       L_ANGLE@80..81 \"<\"\n       LIFETIME_PARAM@81..83\n         LIFETIME@81..83 \"\\'a\"\n@@ -89,7 +89,7 @@ SOURCE_FILE@0..290\n     WHITESPACE@92..93 \" \"\n     NAME@93..95\n       IDENT@93..95 \"S6\"\n-    TYPE_PARAM_LIST@95..100\n+    GENERIC_PARAM_LIST@95..100\n       L_ANGLE@95..96 \"<\"\n       LIFETIME_PARAM@96..99\n         LIFETIME@96..98 \"\\'a\"\n@@ -102,7 +102,7 @@ SOURCE_FILE@0..290\n     WHITESPACE@108..109 \" \"\n     NAME@109..111\n       IDENT@109..111 \"S7\"\n-    TYPE_PARAM_LIST@111..119\n+    GENERIC_PARAM_LIST@111..119\n       L_ANGLE@111..112 \"<\"\n       LIFETIME_PARAM@112..118\n         LIFETIME@112..114 \"\\'a\"\n@@ -117,7 +117,7 @@ SOURCE_FILE@0..290\n     WHITESPACE@127..128 \" \"\n     NAME@128..130\n       IDENT@128..130 \"S8\"\n-    TYPE_PARAM_LIST@130..141\n+    GENERIC_PARAM_LIST@130..141\n       L_ANGLE@130..131 \"<\"\n       LIFETIME_PARAM@131..139\n         LIFETIME@131..133 \"\\'a\"\n@@ -135,7 +135,7 @@ SOURCE_FILE@0..290\n     WHITESPACE@149..150 \" \"\n     NAME@150..152\n       IDENT@150..152 \"S9\"\n-    TYPE_PARAM_LIST@152..165\n+    GENERIC_PARAM_LIST@152..165\n       L_ANGLE@152..153 \"<\"\n       LIFETIME_PARAM@153..164\n         LIFETIME@153..155 \"\\'a\"\n@@ -154,7 +154,7 @@ SOURCE_FILE@0..290\n     WHITESPACE@173..174 \" \"\n     NAME@174..177\n       IDENT@174..177 \"S10\"\n-    TYPE_PARAM_LIST@177..182\n+    GENERIC_PARAM_LIST@177..182\n       L_ANGLE@177..178 \"<\"\n       LIFETIME_PARAM@178..180\n         LIFETIME@178..180 \"\\'a\"\n@@ -167,7 +167,7 @@ SOURCE_FILE@0..290\n     WHITESPACE@190..191 \" \"\n     NAME@191..194\n       IDENT@191..194 \"S11\"\n-    TYPE_PARAM_LIST@194..202\n+    GENERIC_PARAM_LIST@194..202\n       L_ANGLE@194..195 \"<\"\n       LIFETIME_PARAM@195..197\n         LIFETIME@195..197 \"\\'a\"\n@@ -183,7 +183,7 @@ SOURCE_FILE@0..290\n     WHITESPACE@210..211 \" \"\n     NAME@211..214\n       IDENT@211..214 \"S12\"\n-    TYPE_PARAM_LIST@214..232\n+    GENERIC_PARAM_LIST@214..232\n       L_ANGLE@214..215 \"<\"\n       LIFETIME_PARAM@215..222\n         LIFETIME@215..217 \"\\'a\"\n@@ -207,7 +207,7 @@ SOURCE_FILE@0..290\n     WHITESPACE@241..242 \" \"\n     NAME@242..245\n       IDENT@242..245 \"S13\"\n-    TYPE_PARAM_LIST@245..248\n+    GENERIC_PARAM_LIST@245..248\n       L_ANGLE@245..246 \"<\"\n       TYPE_PARAM@246..247\n         NAME@246..247\n@@ -220,7 +220,7 @@ SOURCE_FILE@0..290\n     WHITESPACE@256..257 \" \"\n     NAME@257..260\n       IDENT@257..260 \"S14\"\n-    TYPE_PARAM_LIST@260..266\n+    GENERIC_PARAM_LIST@260..266\n       L_ANGLE@260..261 \"<\"\n       TYPE_PARAM@261..262\n         NAME@261..262\n@@ -238,7 +238,7 @@ SOURCE_FILE@0..290\n     WHITESPACE@274..275 \" \"\n     NAME@275..278\n       IDENT@275..278 \"S15\"\n-    TYPE_PARAM_LIST@278..288\n+    GENERIC_PARAM_LIST@278..288\n       L_ANGLE@278..279 \"<\"\n       LIFETIME_PARAM@279..281\n         LIFETIME@279..281 \"\\'a\""}, {"sha": "993f28c4d631500132c5f967d9ad72b0d8173c67", "filename": "crates/ra_syntax/test_data/parser/ok/0019_enums.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0019_enums.rast", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0019_enums.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0019_enums.rast?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -15,7 +15,7 @@ SOURCE_FILE@0..182\n     WHITESPACE@17..18 \" \"\n     NAME@18..20\n       IDENT@18..20 \"E2\"\n-    TYPE_PARAM_LIST@20..23\n+    GENERIC_PARAM_LIST@20..23\n       L_ANGLE@20..21 \"<\"\n       TYPE_PARAM@21..22\n         NAME@21..22"}, {"sha": "5100e6a48af2297ba4242f38f77c7778394b4f97", "filename": "crates/ra_syntax/test_data/parser/ok/0020_type_param_bounds.rast", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0020_type_param_bounds.rast", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0020_type_param_bounds.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0020_type_param_bounds.rast?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -4,7 +4,7 @@ SOURCE_FILE@0..250\n     WHITESPACE@6..7 \" \"\n     NAME@7..8\n       IDENT@7..8 \"A\"\n-    TYPE_PARAM_LIST@8..11\n+    GENERIC_PARAM_LIST@8..11\n       L_ANGLE@8..9 \"<\"\n       TYPE_PARAM@9..10\n         NAME@9..10\n@@ -17,7 +17,7 @@ SOURCE_FILE@0..250\n     WHITESPACE@19..20 \" \"\n     NAME@20..21\n       IDENT@20..21 \"B\"\n-    TYPE_PARAM_LIST@21..25\n+    GENERIC_PARAM_LIST@21..25\n       L_ANGLE@21..22 \"<\"\n       TYPE_PARAM@22..24\n         NAME@22..23\n@@ -32,7 +32,7 @@ SOURCE_FILE@0..250\n     WHITESPACE@33..34 \" \"\n     NAME@34..35\n       IDENT@34..35 \"C\"\n-    TYPE_PARAM_LIST@35..42\n+    GENERIC_PARAM_LIST@35..42\n       L_ANGLE@35..36 \"<\"\n       TYPE_PARAM@36..41\n         NAME@36..37\n@@ -50,7 +50,7 @@ SOURCE_FILE@0..250\n     WHITESPACE@50..51 \" \"\n     NAME@51..52\n       IDENT@51..52 \"D\"\n-    TYPE_PARAM_LIST@52..62\n+    GENERIC_PARAM_LIST@52..62\n       L_ANGLE@52..53 \"<\"\n       TYPE_PARAM@53..60\n         NAME@53..54\n@@ -71,7 +71,7 @@ SOURCE_FILE@0..250\n     WHITESPACE@70..71 \" \"\n     NAME@71..72\n       IDENT@71..72 \"E\"\n-    TYPE_PARAM_LIST@72..85\n+    GENERIC_PARAM_LIST@72..85\n       L_ANGLE@72..73 \"<\"\n       TYPE_PARAM@73..83\n         NAME@73..74\n@@ -95,7 +95,7 @@ SOURCE_FILE@0..250\n     WHITESPACE@93..94 \" \"\n     NAME@94..95\n       IDENT@94..95 \"F\"\n-    TYPE_PARAM_LIST@95..115\n+    GENERIC_PARAM_LIST@95..115\n       L_ANGLE@95..96 \"<\"\n       TYPE_PARAM@96..114\n         NAME@96..97\n@@ -127,7 +127,7 @@ SOURCE_FILE@0..250\n     WHITESPACE@123..124 \" \"\n     NAME@124..125\n       IDENT@124..125 \"G\"\n-    TYPE_PARAM_LIST@125..142\n+    GENERIC_PARAM_LIST@125..142\n       L_ANGLE@125..126 \"<\"\n       TYPE_PARAM@126..141\n         NAME@126..127\n@@ -158,7 +158,7 @@ SOURCE_FILE@0..250\n     WHITESPACE@150..151 \" \"\n     NAME@151..152\n       IDENT@151..152 \"H\"\n-    TYPE_PARAM_LIST@152..179\n+    GENERIC_PARAM_LIST@152..179\n       L_ANGLE@152..153 \"<\"\n       TYPE_PARAM@153..178\n         NAME@153..154\n@@ -199,7 +199,7 @@ SOURCE_FILE@0..250\n     WHITESPACE@187..188 \" \"\n     NAME@188..189\n       IDENT@188..189 \"I\"\n-    TYPE_PARAM_LIST@189..198\n+    GENERIC_PARAM_LIST@189..198\n       L_ANGLE@189..190 \"<\"\n       TYPE_PARAM@190..192\n         NAME@190..191\n@@ -222,7 +222,7 @@ SOURCE_FILE@0..250\n     WHITESPACE@206..207 \" \"\n     NAME@207..208\n       IDENT@207..208 \"K\"\n-    TYPE_PARAM_LIST@208..249\n+    GENERIC_PARAM_LIST@208..249\n       L_ANGLE@208..209 \"<\"\n       LIFETIME_PARAM@209..215\n         LIFETIME@209..211 \"\\'a\""}, {"sha": "10da87c71ada608c55cbd10bdf62dd3f2c0d6a9f", "filename": "crates/ra_syntax/test_data/parser/ok/0032_where_for.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0032_where_for.rast", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0032_where_for.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0032_where_for.rast?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -4,7 +4,7 @@ SOURCE_FILE@0..116\n     WHITESPACE@2..3 \" \"\n     NAME@3..21\n       IDENT@3..21 \"test_serialization\"\n-    TYPE_PARAM_LIST@21..26\n+    GENERIC_PARAM_LIST@21..26\n       L_ANGLE@21..22 \"<\"\n       TYPE_PARAM@22..25\n         NAME@22..25\n@@ -38,7 +38,7 @@ SOURCE_FILE@0..116\n           TYPE_BOUND@56..81\n             FOR_TYPE@56..81\n               FOR_KW@56..59 \"for\"\n-              TYPE_PARAM_LIST@59..64\n+              GENERIC_PARAM_LIST@59..64\n                 L_ANGLE@59..60 \"<\"\n                 LIFETIME_PARAM@60..63\n                   LIFETIME@60..63 \"\\'de\""}, {"sha": "ea54651b76efc779bdda3db04ee268e065631ba4", "filename": "crates/ra_syntax/test_data/parser/ok/0035_weird_exprs.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0035_weird_exprs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0035_weird_exprs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0035_weird_exprs.rast?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -1565,7 +1565,7 @@ SOURCE_FILE@0..3813\n         WHITESPACE@2856..2857 \" \"\n         NAME@2857..2862\n           IDENT@2857..2862 \"union\"\n-        TYPE_PARAM_LIST@2862..2870\n+        GENERIC_PARAM_LIST@2862..2870\n           L_ANGLE@2862..2863 \"<\"\n           LIFETIME_PARAM@2863..2869\n             LIFETIME@2863..2869 \"\\'union\""}, {"sha": "c4da317b9f9f7bd653133039dbdabd2a94a499c7", "filename": "crates/ra_syntax/test_data/parser/ok/0036_fully_qualified.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0036_fully_qualified.rast", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0036_fully_qualified.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0036_fully_qualified.rast?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -9,7 +9,7 @@ SOURCE_FILE@0..157\n     WHITESPACE@68..69 \" \"\n     NAME@69..72\n       IDENT@69..72 \"foo\"\n-    TYPE_PARAM_LIST@72..85\n+    GENERIC_PARAM_LIST@72..85\n       L_ANGLE@72..73 \"<\"\n       TYPE_PARAM@73..84\n         NAME@73..74"}, {"sha": "8081eefbc579975e17575a6d58bcdd3429ab67c9", "filename": "crates/ra_syntax/test_data/parser/ok/0051_parameter_attrs.rast", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0051_parameter_attrs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0051_parameter_attrs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0051_parameter_attrs.rast?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -137,7 +137,7 @@ SOURCE_FILE@0..519\n     WHITESPACE@132..133 \" \"\n     NAME@133..136\n       IDENT@133..136 \"foo\"\n-    TYPE_PARAM_LIST@136..168\n+    GENERIC_PARAM_LIST@136..168\n       L_ANGLE@136..137 \"<\"\n       TYPE_PARAM@137..167\n         NAME@137..138\n@@ -341,7 +341,7 @@ SOURCE_FILE@0..519\n         WHITESPACE@342..343 \" \"\n         NAME@343..345\n           IDENT@343..345 \"g3\"\n-        TYPE_PARAM_LIST@345..349\n+        GENERIC_PARAM_LIST@345..349\n           L_ANGLE@345..346 \"<\"\n           LIFETIME_PARAM@346..348\n             LIFETIME@346..348 \"\\'a\"\n@@ -373,7 +373,7 @@ SOURCE_FILE@0..519\n         WHITESPACE@379..380 \" \"\n         NAME@380..382\n           IDENT@380..382 \"g4\"\n-        TYPE_PARAM_LIST@382..386\n+        GENERIC_PARAM_LIST@382..386\n           L_ANGLE@382..383 \"<\"\n           LIFETIME_PARAM@383..385\n             LIFETIME@383..385 \"\\'a\"\n@@ -405,7 +405,7 @@ SOURCE_FILE@0..519\n         WHITESPACE@415..416 \" \"\n         NAME@416..418\n           IDENT@416..418 \"g5\"\n-        TYPE_PARAM_LIST@418..422\n+        GENERIC_PARAM_LIST@418..422\n           L_ANGLE@418..419 \"<\"\n           LIFETIME_PARAM@419..421\n             LIFETIME@419..421 \"\\'a\""}, {"sha": "2c699ffcb6f987a8c601e8f4c3ecf8a35dedad8d", "filename": "crates/ra_syntax/test_data/parser/ok/0065_plus_after_fn_trait_bound.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0065_plus_after_fn_trait_bound.rast", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0065_plus_after_fn_trait_bound.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0065_plus_after_fn_trait_bound.rast?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -4,7 +4,7 @@ SOURCE_FILE@0..40\n     WHITESPACE@2..3 \" \"\n     NAME@3..4\n       IDENT@3..4 \"f\"\n-    TYPE_PARAM_LIST@4..7\n+    GENERIC_PARAM_LIST@4..7\n       L_ANGLE@4..5 \"<\"\n       TYPE_PARAM@5..6\n         NAME@5..6"}, {"sha": "a368ac1e82a40ba551164542b8a9c9e499f79738", "filename": "crates/ra_syntax/test_data/parser/ok/0067_where_for_pred.rast", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0067_where_for_pred.rast", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0067_where_for_pred.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0067_where_for_pred.rast?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -4,7 +4,7 @@ SOURCE_FILE@0..374\n     WHITESPACE@2..3 \" \"\n     NAME@3..12\n       IDENT@3..12 \"for_trait\"\n-    TYPE_PARAM_LIST@12..15\n+    GENERIC_PARAM_LIST@12..15\n       L_ANGLE@12..13 \"<\"\n       TYPE_PARAM@13..14\n         NAME@13..14\n@@ -19,7 +19,7 @@ SOURCE_FILE@0..374\n       WHITESPACE@23..28 \"\\n    \"\n       WHERE_PRED@28..50\n         FOR_KW@28..31 \"for\"\n-        TYPE_PARAM_LIST@31..35\n+        GENERIC_PARAM_LIST@31..35\n           L_ANGLE@31..32 \"<\"\n           LIFETIME_PARAM@32..34\n             LIFETIME@32..34 \"\\'a\"\n@@ -64,7 +64,7 @@ SOURCE_FILE@0..374\n     WHITESPACE@58..59 \" \"\n     NAME@59..66\n       IDENT@59..66 \"for_ref\"\n-    TYPE_PARAM_LIST@66..69\n+    GENERIC_PARAM_LIST@66..69\n       L_ANGLE@66..67 \"<\"\n       TYPE_PARAM@67..68\n         NAME@67..68\n@@ -79,7 +79,7 @@ SOURCE_FILE@0..374\n       WHITESPACE@77..82 \"\\n    \"\n       WHERE_PRED@82..102\n         FOR_KW@82..85 \"for\"\n-        TYPE_PARAM_LIST@85..89\n+        GENERIC_PARAM_LIST@85..89\n           L_ANGLE@85..86 \"<\"\n           LIFETIME_PARAM@86..88\n             LIFETIME@86..88 \"\\'a\"\n@@ -115,7 +115,7 @@ SOURCE_FILE@0..374\n     WHITESPACE@110..111 \" \"\n     NAME@111..121\n       IDENT@111..121 \"for_parens\"\n-    TYPE_PARAM_LIST@121..124\n+    GENERIC_PARAM_LIST@121..124\n       L_ANGLE@121..122 \"<\"\n       TYPE_PARAM@122..123\n         NAME@122..123\n@@ -130,7 +130,7 @@ SOURCE_FILE@0..374\n       WHITESPACE@132..137 \"\\n    \"\n       WHERE_PRED@137..165\n         FOR_KW@137..140 \"for\"\n-        TYPE_PARAM_LIST@140..144\n+        GENERIC_PARAM_LIST@140..144\n           L_ANGLE@140..141 \"<\"\n           LIFETIME_PARAM@141..143\n             LIFETIME@141..143 \"\\'a\"\n@@ -182,7 +182,7 @@ SOURCE_FILE@0..374\n     WHITESPACE@173..174 \" \"\n     NAME@174..183\n       IDENT@174..183 \"for_slice\"\n-    TYPE_PARAM_LIST@183..186\n+    GENERIC_PARAM_LIST@183..186\n       L_ANGLE@183..184 \"<\"\n       TYPE_PARAM@184..185\n         NAME@184..185\n@@ -197,7 +197,7 @@ SOURCE_FILE@0..374\n       WHITESPACE@194..199 \"\\n    \"\n       WHERE_PRED@199..218\n         FOR_KW@199..202 \"for\"\n-        TYPE_PARAM_LIST@202..206\n+        GENERIC_PARAM_LIST@202..206\n           L_ANGLE@202..203 \"<\"\n           LIFETIME_PARAM@203..205\n             LIFETIME@203..205 \"\\'a\"\n@@ -236,7 +236,7 @@ SOURCE_FILE@0..374\n     WHITESPACE@226..227 \" \"\n     NAME@227..236\n       IDENT@227..236 \"for_qpath\"\n-    TYPE_PARAM_LIST@236..239\n+    GENERIC_PARAM_LIST@236..239\n       L_ANGLE@236..237 \"<\"\n       TYPE_PARAM@237..238\n         NAME@237..238\n@@ -264,7 +264,7 @@ SOURCE_FILE@0..374\n       WHITESPACE@253..258 \"\\n    \"\n       WHERE_PRED@258..295\n         FOR_KW@258..261 \"for\"\n-        TYPE_PARAM_LIST@261..265\n+        GENERIC_PARAM_LIST@261..265\n           L_ANGLE@261..262 \"<\"\n           LIFETIME_PARAM@262..264\n             LIFETIME@262..264 \"\\'a\"\n@@ -318,7 +318,7 @@ SOURCE_FILE@0..374\n     WHITESPACE@303..304 \" \"\n     NAME@304..314\n       IDENT@304..314 \"for_for_fn\"\n-    TYPE_PARAM_LIST@314..317\n+    GENERIC_PARAM_LIST@314..317\n       L_ANGLE@314..315 \"<\"\n       TYPE_PARAM@315..316\n         NAME@315..316\n@@ -333,15 +333,15 @@ SOURCE_FILE@0..374\n       WHITESPACE@325..330 \"\\n    \"\n       WHERE_PRED@330..368\n         FOR_KW@330..333 \"for\"\n-        TYPE_PARAM_LIST@333..337\n+        GENERIC_PARAM_LIST@333..337\n           L_ANGLE@333..334 \"<\"\n           LIFETIME_PARAM@334..336\n             LIFETIME@334..336 \"\\'a\"\n           R_ANGLE@336..337 \">\"\n         WHITESPACE@337..338 \" \"\n         FOR_TYPE@338..362\n           FOR_KW@338..341 \"for\"\n-          TYPE_PARAM_LIST@341..345\n+          GENERIC_PARAM_LIST@341..345\n             L_ANGLE@341..342 \"<\"\n             LIFETIME_PARAM@342..344\n               LIFETIME@342..344 \"\\'b\""}, {"sha": "b819858517388270a069f948be6e60029c5595bc", "filename": "xtask/src/ast_src.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/xtask%2Fsrc%2Fast_src.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/xtask%2Fsrc%2Fast_src.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fast_src.rs?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -203,7 +203,7 @@ pub(crate) const KINDS_SRC: KindsSrc = KindsSrc {\n         \"NAME_REF\",\n         \"LET_STMT\",\n         \"EXPR_STMT\",\n-        \"TYPE_PARAM_LIST\",\n+        \"GENERIC_PARAM_LIST\",\n         \"LIFETIME_PARAM\",\n         \"TYPE_PARAM\",\n         \"CONST_PARAM\","}, {"sha": "f79cd972e8e9a6cb488e901867708a57ea617af5", "filename": "xtask/src/codegen/gen_syntax.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/xtask%2Fsrc%2Fcodegen%2Fgen_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/xtask%2Fsrc%2Fcodegen%2Fgen_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fcodegen%2Fgen_syntax.rs?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -667,7 +667,7 @@ fn extract_struct_traits(ast: &mut AstSrc) {\n         (\"AttrsOwner\", &[\"attrs\"]),\n         (\"NameOwner\", &[\"name\"]),\n         (\"VisibilityOwner\", &[\"visibility\"]),\n-        (\"TypeParamsOwner\", &[\"type_param_list\", \"where_clause\"]),\n+        (\"GenericParamsOwner\", &[\"generic_param_list\", \"where_clause\"]),\n         (\"TypeBoundsOwner\", &[\"type_bound_list\", \"colon_token\"]),\n         (\"ModuleItemOwner\", &[\"items\"]),\n         (\"TypeAscriptionOwner\", &[\"ascribed_type\"]),"}, {"sha": "833ffd9e01b3983de4572e2509697f51a88c5f3a", "filename": "xtask/src/codegen/rust.ungram", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/97fb5daf723c520b0361ade3e44f130257b1fe96/xtask%2Fsrc%2Fcodegen%2Frust.ungram", "raw_url": "https://github.com/rust-lang/rust/raw/97fb5daf723c520b0361ade3e44f130257b1fe96/xtask%2Fsrc%2Fcodegen%2Frust.ungram", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fcodegen%2Frust.ungram?ref=97fb5daf723c520b0361ade3e44f130257b1fe96", "patch": "@@ -45,7 +45,7 @@ UseTreeList =\n Fn =\n  Attr* Visibility?\n  'default'? ('async' | 'const')? 'unsafe'? Abi?\n- 'fn' Name TypeParamList? ParamList RetType?\n+ 'fn' Name GenericParamList? ParamList RetType?\n  WhereClause?\n  (body:BlockExpr | ';')\n \n@@ -73,17 +73,17 @@ RetType =\n   '->' TypeRef\n \n TypeAlias =\n-  Attr* Visibility? 'default'? 'type' Name TypeParamList? (':' TypeBoundList?)? WhereClause?\n+  Attr* Visibility? 'default'? 'type' Name GenericParamList? (':' TypeBoundList?)? WhereClause?\n   '=' TypeRef ';'\n \n StructDef =\n-  Attr* Visibility? 'struct' Name TypeParamList? (\n+  Attr* Visibility? 'struct' Name GenericParamList? (\n     WhereClause?  (RecordFieldDefList | ';')\n   | TupleFieldDefList WhereClause? ';'\n   )\n \n UnionDef =\n-  Attr* Visibility? 'union' Name TypeParamList? WhereClause?\n+  Attr* Visibility? 'union' Name GenericParamList? WhereClause?\n   RecordFieldDefList\n \n RecordFieldDefList =\n@@ -103,7 +103,7 @@ FieldDefList =\n | TupleFieldDefList\n \n EnumDef =\n-  Attr* Visibility? 'enum' Name TypeParamList? WhereClause?\n+  Attr* Visibility? 'enum' Name GenericParamList? WhereClause?\n   variant_list:EnumVariantList\n \n EnumVariantList =\n@@ -113,7 +113,7 @@ EnumVariant =\n   Attr* Visibility? Name FieldDefList ('=' Expr)?\n \n TraitDef =\n-  Attr* Visibility? 'unsafe'? 'auto'? 'trait' Name TypeParamList\n+  Attr* Visibility? 'unsafe'? 'auto'? 'trait' Name GenericParamList\n   (':' TypeBoundList?)? WhereClause\n   AssocItemList\n \n@@ -129,7 +129,7 @@ StaticDef =\n   '=' body:Expr ';'\n \n ImplDef =\n- Attr* Visibility? 'const'? 'default'? 'unsafe'? 'impl' TypeParamList? '!'? 'for'\n+ Attr* Visibility? 'const'? 'default'? 'unsafe'? 'impl' GenericParamList? '!'? 'for'\n  WhereClause?\n  AssocItemList\n \n@@ -164,7 +164,7 @@ FnPointerType =\n    Abi 'unsafe'? 'fn' ParamList RetType?\n \n ForType =\n-   'for' TypeParamList TypeRef\n+   'for' GenericParamList TypeRef\n \n ImplTraitType =\n   'impl' TypeBoundList\n@@ -379,7 +379,7 @@ MacroStmts =\n Attr =\n   '#' '!'? '[' Path ('=' input:AttrInput)? ']'\n \n-TypeParamList =\n+GenericParamList =\n   '<'\n     TypeParam*\n     LifetimeParam*\n@@ -404,7 +404,7 @@ TypeBoundList =\n    bounds:TypeBound*\n \n WherePred =\n-  ('for' TypeParamList)?  ('lifetime' | TypeRef) ':' TypeBoundList\n+  ('for' GenericParamList)?  ('lifetime' | TypeRef) ':' TypeBoundList\n \n WhereClause =\n   'where' predicates:WherePred*"}]}