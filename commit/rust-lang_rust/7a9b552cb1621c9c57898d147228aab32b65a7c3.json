{"sha": "7a9b552cb1621c9c57898d147228aab32b65a7c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhOWI1NTJjYjE2MjFjOWM1Nzg5OGQxNDcyMjhhYWIzMmI2NWE3YzM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-12T20:13:50Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-12T20:13:50Z"}, "message": "Auto merge of #80009 - jumbatm:issue79581-overeager-clashing-extern-decl, r=alexcrichton\n\nUse tcx.symbol_name when determining clashing extern declarations.\n\nFixes #79581.\n\nr? `@alexcrichton`", "tree": {"sha": "03d55ca761bd531f5f6dd89151b705b05e29731c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/03d55ca761bd531f5f6dd89151b705b05e29731c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a9b552cb1621c9c57898d147228aab32b65a7c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a9b552cb1621c9c57898d147228aab32b65a7c3", "html_url": "https://github.com/rust-lang/rust/commit/7a9b552cb1621c9c57898d147228aab32b65a7c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a9b552cb1621c9c57898d147228aab32b65a7c3/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "704e47f78b4c8801a3c76f235a5a152e1b60b300", "url": "https://api.github.com/repos/rust-lang/rust/commits/704e47f78b4c8801a3c76f235a5a152e1b60b300", "html_url": "https://github.com/rust-lang/rust/commit/704e47f78b4c8801a3c76f235a5a152e1b60b300"}, {"sha": "4b740acea270464758a3c81ea4341d858064ee28", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b740acea270464758a3c81ea4341d858064ee28", "html_url": "https://github.com/rust-lang/rust/commit/4b740acea270464758a3c81ea4341d858064ee28"}], "stats": {"total": 42, "additions": 35, "deletions": 7}, "files": [{"sha": "20e476b38ccac3c2a6c4864890b2c0df068d9da8", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/7a9b552cb1621c9c57898d147228aab32b65a7c3/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a9b552cb1621c9c57898d147228aab32b65a7c3/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=7a9b552cb1621c9c57898d147228aab32b65a7c3", "patch": "@@ -43,6 +43,7 @@ use rustc_index::vec::Idx;\n use rustc_middle::lint::LintDiagnosticBuilder;\n use rustc_middle::ty::print::with_no_trimmed_paths;\n use rustc_middle::ty::subst::{GenericArgKind, Subst};\n+use rustc_middle::ty::Instance;\n use rustc_middle::ty::{self, layout::LayoutError, Ty, TyCtxt};\n use rustc_session::Session;\n use rustc_span::edition::Edition;\n@@ -2595,7 +2596,12 @@ declare_lint! {\n }\n \n pub struct ClashingExternDeclarations {\n-    seen_decls: FxHashMap<Symbol, HirId>,\n+    /// Map of function symbol name to the first-seen hir id for that symbol name.. If seen_decls\n+    /// contains an entry for key K, it means a symbol with name K has been seen by this lint and\n+    /// the symbol should be reported as a clashing declaration.\n+    // FIXME: Technically, we could just store a &'tcx str here without issue; however, the\n+    // `impl_lint_pass` macro doesn't currently support lints parametric over a lifetime.\n+    seen_decls: FxHashMap<String, HirId>,\n }\n \n /// Differentiate between whether the name for an extern decl came from the link_name attribute or\n@@ -2626,16 +2632,17 @@ impl ClashingExternDeclarations {\n     fn insert(&mut self, tcx: TyCtxt<'_>, fi: &hir::ForeignItem<'_>) -> Option<HirId> {\n         let hid = fi.hir_id;\n \n-        let name =\n-            &tcx.codegen_fn_attrs(tcx.hir().local_def_id(hid)).link_name.unwrap_or(fi.ident.name);\n-\n-        if self.seen_decls.contains_key(name) {\n+        let local_did = tcx.hir().local_def_id(fi.hir_id);\n+        let did = local_did.to_def_id();\n+        let instance = Instance::new(did, ty::List::identity_for_item(tcx, did));\n+        let name = tcx.symbol_name(instance).name;\n+        if let Some(&hir_id) = self.seen_decls.get(name) {\n             // Avoid updating the map with the new entry when we do find a collision. We want to\n             // make sure we're always pointing to the first definition as the previous declaration.\n             // This lets us avoid emitting \"knock-on\" diagnostics.\n-            Some(*self.seen_decls.get(name).unwrap())\n+            Some(hir_id)\n         } else {\n-            self.seen_decls.insert(*name, hid)\n+            self.seen_decls.insert(name.to_owned(), hid)\n         }\n     }\n "}, {"sha": "eeb2b8eae2566f854a96885da02b14c5694291ff", "filename": "src/test/ui/lint/clashing-extern-fn-wasm.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/7a9b552cb1621c9c57898d147228aab32b65a7c3/src%2Ftest%2Fui%2Flint%2Fclashing-extern-fn-wasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a9b552cb1621c9c57898d147228aab32b65a7c3/src%2Ftest%2Fui%2Flint%2Fclashing-extern-fn-wasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fclashing-extern-fn-wasm.rs?ref=7a9b552cb1621c9c57898d147228aab32b65a7c3", "patch": "@@ -0,0 +1,21 @@\n+// check-pass\n+#![crate_type = \"lib\"]\n+\n+#[cfg(target_arch = \"wasm32\")]\n+mod wasm_non_clash {\n+    mod a {\n+        #[link(wasm_import_module = \"a\")]\n+        extern \"C\" {\n+            pub fn foo();\n+        }\n+    }\n+\n+    mod b {\n+        #[link(wasm_import_module = \"b\")]\n+        extern \"C\" {\n+            pub fn foo() -> usize;\n+            // #79581: These declarations shouldn't clash because foreign fn names are mangled\n+            // on wasm32.\n+        }\n+    }\n+}"}]}