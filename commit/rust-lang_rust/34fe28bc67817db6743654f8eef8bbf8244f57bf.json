{"sha": "34fe28bc67817db6743654f8eef8bbf8244f57bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0ZmUyOGJjNjc4MTdkYjY3NDM2NTRmOGVlZjhiYmY4MjQ0ZjU3YmY=", "commit": {"author": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2019-08-14T12:08:17Z"}, "committer": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2019-08-22T10:36:31Z"}, "message": "Fix tidy", "tree": {"sha": "22d070c3f693e0a6895f99bf42b6cda9137d1011", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/22d070c3f693e0a6895f99bf42b6cda9137d1011"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/34fe28bc67817db6743654f8eef8bbf8244f57bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/34fe28bc67817db6743654f8eef8bbf8244f57bf", "html_url": "https://github.com/rust-lang/rust/commit/34fe28bc67817db6743654f8eef8bbf8244f57bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/34fe28bc67817db6743654f8eef8bbf8244f57bf/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d62545687d0c10577eb75c058c0662e6b261395", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d62545687d0c10577eb75c058c0662e6b261395", "html_url": "https://github.com/rust-lang/rust/commit/4d62545687d0c10577eb75c058c0662e6b261395"}], "stats": {"total": 54, "additions": 39, "deletions": 15}, "files": [{"sha": "c4f7ca51f4a7ae68393b396a368d7eb104c760c1", "filename": "src/librustc/query/mod.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/34fe28bc67817db6743654f8eef8bbf8244f57bf/src%2Flibrustc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34fe28bc67817db6743654f8eef8bbf8244f57bf/src%2Flibrustc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fquery%2Fmod.rs?ref=34fe28bc67817db6743654f8eef8bbf8244f57bf", "patch": "@@ -110,7 +110,11 @@ rustc_queries! {\n             no_hash\n         }\n \n-        query mir_validated(_: DefId) -> (&'tcx Steal<mir::Body<'tcx>>, &'tcx Steal<IndexVec<mir::Promoted, mir::Body<'tcx>>>) {\n+        query mir_validated(_: DefId) ->\n+            (\n+                &'tcx Steal<mir::Body<'tcx>>,\n+                &'tcx Steal<IndexVec<mir::Promoted, mir::Body<'tcx>>>\n+            ) {\n             no_hash\n         }\n "}, {"sha": "b08093c3a71eb5e4a2f947279661d50c34d4a1ec", "filename": "src/librustc_codegen_ssa/mir/place.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/34fe28bc67817db6743654f8eef8bbf8244f57bf/src%2Flibrustc_codegen_ssa%2Fmir%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34fe28bc67817db6743654f8eef8bbf8244f57bf/src%2Flibrustc_codegen_ssa%2Fmir%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fplace.rs?ref=34fe28bc67817db6743654f8eef8bbf8244f57bf", "patch": "@@ -460,7 +460,6 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n                 }),\n                 projection: None,\n             } => {\n-                debug!(\"promoted={:?}, def_id={:?}, substs={:?}, self_substs={:?}\", promoted, def_id, substs, self.instance.substs);\n                 let param_env = ty::ParamEnv::reveal_all();\n                 let instance = Instance::new(*def_id, substs.subst(bx.tcx(), self.instance.substs));\n                 debug!(\"instance: {:?}\", instance);"}, {"sha": "2add8bf918398f246fd10a5ba1e97df1cd54d1ec", "filename": "src/librustc_metadata/decoder.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/34fe28bc67817db6743654f8eef8bbf8244f57bf/src%2Flibrustc_metadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34fe28bc67817db6743654f8eef8bbf8244f57bf/src%2Flibrustc_metadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fdecoder.rs?ref=34fe28bc67817db6743654f8eef8bbf8244f57bf", "patch": "@@ -924,7 +924,8 @@ impl<'a, 'tcx> CrateMetadata {\n         }\n     }\n \n-    pub fn maybe_get_promoted_mir(&self, tcx: TyCtxt<'tcx>, id: DefIndex) -> Option<IndexVec<Promoted, Body<'tcx>>> {\n+    pub fn maybe_get_promoted_mir(&self, tcx: TyCtxt<'tcx>, id: DefIndex) ->\n+        Option<IndexVec<Promoted, Body<'tcx>>> {\n         match self.is_proc_macro(id) {\n             true => None,\n             false => self.entry(id).promoted_mir.map(|promoted| promoted.decode((self, tcx)),)"}, {"sha": "0b8d2438752fa7ee9a455bd1f2b7482f8559ea4d", "filename": "src/librustc_metadata/encoder.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/34fe28bc67817db6743654f8eef8bbf8244f57bf/src%2Flibrustc_metadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34fe28bc67817db6743654f8eef8bbf8244f57bf/src%2Flibrustc_metadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fencoder.rs?ref=34fe28bc67817db6743654f8eef8bbf8244f57bf", "patch": "@@ -1060,7 +1060,8 @@ impl EncodeContext<'tcx> {\n         }\n     }\n \n-    fn encode_promoted_mir(&mut self, def_id: DefId) -> Option<Lazy<IndexVec<mir::Promoted, mir::Body<'tcx>>>> {\n+    fn encode_promoted_mir(&mut self, def_id: DefId) ->\n+        Option<Lazy<IndexVec<mir::Promoted, mir::Body<'tcx>>>> {\n         debug!(\"EncodeContext::encode_promoted_mir({:?})\", def_id);\n         if self.tcx.mir_keys(LOCAL_CRATE).contains(&def_id) {\n             let promoted = self.tcx.promoted_mir(def_id);"}, {"sha": "8ded539e7205a60c33cfc9730e52dfc418fd6792", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/34fe28bc67817db6743654f8eef8bbf8244f57bf/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34fe28bc67817db6743654f8eef8bbf8244f57bf/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=34fe28bc67817db6743654f8eef8bbf8244f57bf", "patch": "@@ -151,7 +151,8 @@ fn do_mir_borrowck<'a, 'tcx>(\n     // will have a lifetime tied to the inference context.\n     let mut body: Body<'tcx> = input_body.clone();\n     let mut promoted: IndexVec<Promoted, Body<'tcx>> = input_promoted.clone();\n-    let free_regions = nll::replace_regions_in_mir(infcx, def_id, param_env, &mut body, &mut promoted);\n+    let free_regions =\n+        nll::replace_regions_in_mir(infcx, def_id, param_env, &mut body, &mut promoted);\n     let body = &body; // no further changes\n     let location_table = &LocationTable::new(body);\n "}, {"sha": "c6a5c6fdfd0f21661e4304f897c0bb1886538273", "filename": "src/librustc_mir/borrow_check/nll/renumber.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/34fe28bc67817db6743654f8eef8bbf8244f57bf/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Frenumber.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34fe28bc67817db6743654f8eef8bbf8244f57bf/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Frenumber.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Frenumber.rs?ref=34fe28bc67817db6743654f8eef8bbf8244f57bf", "patch": "@@ -7,7 +7,11 @@ use rustc_data_structures::indexed_vec::IndexVec;\n \n /// Replaces all free regions appearing in the MIR with fresh\n /// inference variables, returning the number of variables created.\n-pub fn renumber_mir<'tcx>(infcx: &InferCtxt<'_, 'tcx>, body: &mut Body<'tcx>, promoted: &mut IndexVec<Promoted, Body<'tcx>>) {\n+pub fn renumber_mir<'tcx>(\n+    infcx: &InferCtxt<'_, 'tcx>,\n+    body: &mut Body<'tcx>,\n+    promoted: &mut IndexVec<Promoted, Body<'tcx>>,\n+) {\n     debug!(\"renumber_mir()\");\n     debug!(\"renumber_mir: body.arg_count={:?}\", body.arg_count);\n "}, {"sha": "da1f64b05151bc310c9e9eaefe1a80a343666ee8", "filename": "src/librustc_mir/borrow_check/nll/type_check/mod.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/34fe28bc67817db6743654f8eef8bbf8244f57bf/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34fe28bc67817db6743654f8eef8bbf8244f57bf/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs?ref=34fe28bc67817db6743654f8eef8bbf8244f57bf", "patch": "@@ -384,7 +384,11 @@ impl<'a, 'b, 'tcx> Visitor<'tcx> for TypeVerifier<'a, 'b, 'tcx> {\n }\n \n impl<'a, 'b, 'tcx> TypeVerifier<'a, 'b, 'tcx> {\n-    fn new(cx: &'a mut TypeChecker<'b, 'tcx>, body: &'b Body<'tcx>, promoted: &'b IndexVec<Promoted, Body<'tcx>>) -> Self {\n+    fn new(\n+        cx: &'a mut TypeChecker<'b, 'tcx>,\n+        body: &'b Body<'tcx>,\n+        promoted: &'b IndexVec<Promoted, Body<'tcx>>,\n+    ) -> Self {\n         TypeVerifier {\n             body,\n             promoted,"}, {"sha": "11f9df625285fa2bfd955ceb07eedf08c3989e15", "filename": "src/librustc_mir/monomorphize/collector.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/34fe28bc67817db6743654f8eef8bbf8244f57bf/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34fe28bc67817db6743654f8eef8bbf8244f57bf/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs?ref=34fe28bc67817db6743654f8eef8bbf8244f57bf", "patch": "@@ -670,15 +670,16 @@ impl<'a, 'tcx> MirVisitor<'tcx> for MirNeighborCollector<'a, 'tcx> {\n                     self.output.push(MonoItem::Static(*def_id));\n                 }\n             }\n-            PlaceBase::Static(box Static { kind: StaticKind::Promoted(promoted, substs), def_id, .. }) => {\n-                debug!(\"collecting promoted(def_id: {:?}, promoted: {:?}, substs: {:?})\", def_id, promoted, substs);\n-                debug!(\"param_substs: {:?}\", self.param_substs);\n+            PlaceBase::Static(box Static {\n+                kind: StaticKind::Promoted(promoted, substs),\n+                def_id,\n+                ..\n+            }) => {\n                 let param_env = ty::ParamEnv::reveal_all();\n                 let cid = GlobalId {\n                     instance: Instance::new(*def_id, substs.subst(self.tcx, self.param_substs)),\n                     promoted: Some(*promoted),\n                 };\n-                debug!(\"cid: {:?}\", cid);\n                 match self.tcx.const_eval(param_env.and(cid)) {\n                     Ok(val) => collect_const(self.tcx, val, substs, self.output),\n                     Err(ErrorHandled::Reported) => {},"}, {"sha": "f59ad6bae02984f75c468984fcb947d5f31758bd", "filename": "src/librustc_mir/transform/mod.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/34fe28bc67817db6743654f8eef8bbf8244f57bf/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34fe28bc67817db6743654f8eef8bbf8244f57bf/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fmod.rs?ref=34fe28bc67817db6743654f8eef8bbf8244f57bf", "patch": "@@ -200,7 +200,10 @@ fn mir_const(tcx: TyCtxt<'_>, def_id: DefId) -> &Steal<Body<'_>> {\n     tcx.alloc_steal_mir(body)\n }\n \n-fn mir_validated(tcx: TyCtxt<'tcx>, def_id: DefId) -> (&'tcx Steal<Body<'tcx>>, &'tcx Steal<IndexVec<Promoted, Body<'tcx>>>) {\n+fn mir_validated(\n+    tcx: TyCtxt<'tcx>,\n+    def_id: DefId,\n+) -> (&'tcx Steal<Body<'tcx>>, &'tcx Steal<IndexVec<Promoted, Body<'tcx>>>) {\n     let hir_id = tcx.hir().as_local_hir_id(def_id).unwrap();\n     if let hir::BodyOwnerKind::Const = tcx.hir().body_owner_kind(hir_id) {\n         // Ensure that we compute the `mir_const_qualif` for constants at\n@@ -215,8 +218,9 @@ fn mir_validated(tcx: TyCtxt<'tcx>, def_id: DefId) -> (&'tcx Steal<Body<'tcx>>,\n         &qualify_and_promote_pass,\n         &simplify::SimplifyCfg::new(\"qualify-consts\"),\n     ]);\n-    let promoted = qualify_and_promote_pass.promoted.into_inner();\n-    (tcx.alloc_steal_mir(body), tcx.alloc_steal_promoted(promoted.unwrap_or_else(|| IndexVec::new())))\n+    let promoted =\n+        qualify_and_promote_pass.promoted.into_inner().unwrap_or_else(|| IndexVec::new());\n+    (tcx.alloc_steal_mir(body), tcx.alloc_steal_promoted(promoted))\n }\n \n fn optimized_mir(tcx: TyCtxt<'_>, def_id: DefId) -> &Body<'_> {"}, {"sha": "fd5b6c2a32825328bb4f6d768c61329da830bc3a", "filename": "src/librustc_mir/transform/promote_consts.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/34fe28bc67817db6743654f8eef8bbf8244f57bf/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34fe28bc67817db6743654f8eef8bbf8244f57bf/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs?ref=34fe28bc67817db6743654f8eef8bbf8244f57bf", "patch": "@@ -295,7 +295,12 @@ impl<'a, 'tcx> Promoter<'a, 'tcx> {\n         new_temp\n     }\n \n-    fn promote_candidate(mut self, def_id: DefId, candidate: Candidate, next_promoted_id: usize) -> Option<Body<'tcx>> {\n+    fn promote_candidate(\n+        mut self,\n+        def_id: DefId,\n+        candidate: Candidate,\n+        next_promoted_id: usize,\n+    ) -> Option<Body<'tcx>> {\n         let mut operand = {\n             let promoted = &mut self.promoted;\n             let promoted_id = Promoted::new(next_promoted_id);"}]}