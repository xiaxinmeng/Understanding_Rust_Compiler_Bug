{"sha": "db16fce77f142db2df1dceaaf2b7d04a073a8095", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiMTZmY2U3N2YxNDJkYjJkZjFkY2VhYWYyYjdkMDRhMDczYTgwOTU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2011-10-10T22:19:34Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-12T23:33:06Z"}, "message": "all tests pass", "tree": {"sha": "102abf92c9a6219a01506a9cd43bb63257aeb8f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/102abf92c9a6219a01506a9cd43bb63257aeb8f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db16fce77f142db2df1dceaaf2b7d04a073a8095", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db16fce77f142db2df1dceaaf2b7d04a073a8095", "html_url": "https://github.com/rust-lang/rust/commit/db16fce77f142db2df1dceaaf2b7d04a073a8095", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db16fce77f142db2df1dceaaf2b7d04a073a8095/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85da98db4ae228f8b3d1b1ebf702b0fea99bd7e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/85da98db4ae228f8b3d1b1ebf702b0fea99bd7e6", "html_url": "https://github.com/rust-lang/rust/commit/85da98db4ae228f8b3d1b1ebf702b0fea99bd7e6"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "467b98d8b640a85441de0034e27f0702cfec94f7", "filename": "src/compiletest/procsrv.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/db16fce77f142db2df1dceaaf2b7d04a073a8095/src%2Fcompiletest%2Fprocsrv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db16fce77f142db2df1dceaaf2b7d04a073a8095/src%2Fcompiletest%2Fprocsrv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fprocsrv.rs?ref=db16fce77f142db2df1dceaaf2b7d04a073a8095", "patch": "@@ -79,7 +79,7 @@ fn writeclose(fd: int, s: option::t<str>) unsafe {\n     os::libc::close(fd);\n }\n \n-fn readclose(fd: int) -> str {\n+fn readclose(fd: int) -> str unsafe {\n     // Copied from run::program_output\n     let file = os::fd_FILE(fd);\n     let reader = io::new_reader(io::FILE_buf_reader(file, option::none));\n@@ -92,7 +92,7 @@ fn readclose(fd: int) -> str {\n     ret buf;\n }\n \n-fn worker(p: port<request>) {\n+fn worker(p: port<request>) unsafe {\n \n     // FIXME (787): If we declare this inside of the while loop and then\n     // break out of it before it's ever initialized (i.e. we don't run"}, {"sha": "b28367790464ceb4d007f7f14874cae9726ea2ed", "filename": "src/test/run-pass/interior-vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/db16fce77f142db2df1dceaaf2b7d04a073a8095/src%2Ftest%2Frun-pass%2Finterior-vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db16fce77f142db2df1dceaaf2b7d04a073a8095/src%2Ftest%2Frun-pass%2Finterior-vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finterior-vec.rs?ref=db16fce77f142db2df1dceaaf2b7d04a073a8095", "patch": "@@ -4,7 +4,7 @@ native \"rust-intrinsic\" mod rusti {\n     fn vec_len<T>(&&v: [T]) -> uint;\n }\n \n-fn main() {\n+fn main() unsafe {\n     let v: [int] = [];\n     assert (vec_len(v) == 0u); // zero-length\n     let x = [1, 2];"}, {"sha": "2ed94852bf97b7fd3d0c37d0f8b3de0ab8c6c047", "filename": "src/test/run-pass/issue-506.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/db16fce77f142db2df1dceaaf2b7d04a073a8095/src%2Ftest%2Frun-pass%2Fissue-506.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db16fce77f142db2df1dceaaf2b7d04a073a8095/src%2Ftest%2Frun-pass%2Fissue-506.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-506.rs?ref=db16fce77f142db2df1dceaaf2b7d04a073a8095", "patch": "@@ -9,6 +9,6 @@ native \"rust\" mod rustrt {\n     fn task_yield();\n }\n \n-fn yield_wrap() { rustrt::task_yield(); }\n+fn yield_wrap() unsafe { rustrt::task_yield(); }\n \n fn main() { let f = yield_wrap; task::spawn(f); }"}, {"sha": "2a22499e8c72c266200c620e43435a0116822f7f", "filename": "src/test/run-pass/unify-return-ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/db16fce77f142db2df1dceaaf2b7d04a073a8095/src%2Ftest%2Frun-pass%2Funify-return-ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db16fce77f142db2df1dceaaf2b7d04a073a8095/src%2Ftest%2Frun-pass%2Funify-return-ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funify-return-ty.rs?ref=db16fce77f142db2df1dceaaf2b7d04a073a8095", "patch": "@@ -4,6 +4,6 @@\n use std;\n import std::unsafe;\n \n-fn null<@T>() -> *T { unsafe::reinterpret_cast(0) }\n+fn null<@T>() -> *T unsafe { unsafe::reinterpret_cast(0) }\n \n fn main() { null::<int>(); }"}, {"sha": "6a54407b458373f17f93b23d350e0ef86a91cb12", "filename": "src/test/run-pass/unique-copy-box.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/db16fce77f142db2df1dceaaf2b7d04a073a8095/src%2Ftest%2Frun-pass%2Funique-copy-box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db16fce77f142db2df1dceaaf2b7d04a073a8095/src%2Ftest%2Frun-pass%2Funique-copy-box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funique-copy-box.rs?ref=db16fce77f142db2df1dceaaf2b7d04a073a8095", "patch": "@@ -1,7 +1,7 @@\n use std;\n import std::sys::rustrt::refcount;\n \n-fn main() {\n+fn main() unsafe {\n     let i = ~@1;\n     let j = ~@2;\n     let rc1 = refcount(*i);"}]}