{"sha": "33516ac09af7038efce6332afdedc758a3943609", "node_id": "C_kwDOAAsO6NoAKDMzNTE2YWMwOWFmNzAzOGVmY2U2MzMyYWZkZWRjNzU4YTM5NDM2MDk", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-09-25T22:50:52Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-09-26T03:35:46Z"}, "message": "[ui] Rearrange `StringReader`/`TokenTreesReader` creation.\n\n`TokenTreesReader` wraps a `StringReader`, but the `into_token_trees`\nfunction obscures this. This commit moves to a more straightforward\ncontrol flow.", "tree": {"sha": "b0ee28c424114e9d6404f427e6c4e2fa7d3385c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0ee28c424114e9d6404f427e6c4e2fa7d3385c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33516ac09af7038efce6332afdedc758a3943609", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33516ac09af7038efce6332afdedc758a3943609", "html_url": "https://github.com/rust-lang/rust/commit/33516ac09af7038efce6332afdedc758a3943609", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33516ac09af7038efce6332afdedc758a3943609/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33ba2776c903dab45e4c9a8c9313ce5d59e69af1", "url": "https://api.github.com/repos/rust-lang/rust/commits/33ba2776c903dab45e4c9a8c9313ce5d59e69af1", "html_url": "https://github.com/rust-lang/rust/commit/33ba2776c903dab45e4c9a8c9313ce5d59e69af1"}], "stats": {"total": 40, "additions": 20, "deletions": 20}, "files": [{"sha": "bdc8e96b8895113b63acf1350ad516ebb1c1d0e5", "filename": "compiler/rustc_parse/src/lexer/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/33516ac09af7038efce6332afdedc758a3943609/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33516ac09af7038efce6332afdedc758a3943609/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs?ref=33516ac09af7038efce6332afdedc758a3943609", "patch": "@@ -48,7 +48,8 @@ pub(crate) fn parse_token_trees<'a>(\n         start_pos = start_pos + BytePos::from_usize(shebang_len);\n     }\n \n-    StringReader { sess, start_pos, pos: start_pos, src, override_span }.into_token_trees()\n+    let string_reader = StringReader { sess, start_pos, pos: start_pos, src, override_span };\n+    tokentrees::TokenTreesReader::parse_token_trees(string_reader)\n }\n \n struct StringReader<'a> {"}, {"sha": "749a640f92eab84671237a1b0f5bd90ffe3fc92c", "filename": "compiler/rustc_parse/src/lexer/tokentrees.rs", "status": "modified", "additions": 18, "deletions": 19, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/33516ac09af7038efce6332afdedc758a3943609/compiler%2Frustc_parse%2Fsrc%2Flexer%2Ftokentrees.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33516ac09af7038efce6332afdedc758a3943609/compiler%2Frustc_parse%2Fsrc%2Flexer%2Ftokentrees.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Flexer%2Ftokentrees.rs?ref=33516ac09af7038efce6332afdedc758a3943609", "patch": "@@ -1,30 +1,12 @@\n use super::{StringReader, UnmatchedBrace};\n-\n use rustc_ast::token::{self, Delimiter, Token};\n use rustc_ast::tokenstream::{DelimSpan, Spacing, TokenStream, TokenTree};\n use rustc_ast_pretty::pprust::token_to_string;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::{PErr, PResult};\n use rustc_span::Span;\n \n-impl<'a> StringReader<'a> {\n-    pub(super) fn into_token_trees(self) -> (PResult<'a, TokenStream>, Vec<UnmatchedBrace>) {\n-        let mut tt_reader = TokenTreesReader {\n-            string_reader: self,\n-            token: Token::dummy(),\n-            open_braces: Vec::new(),\n-            unmatched_braces: Vec::new(),\n-            matching_delim_spans: Vec::new(),\n-            last_unclosed_found_span: None,\n-            last_delim_empty_block_spans: FxHashMap::default(),\n-            matching_block_spans: Vec::new(),\n-        };\n-        let res = tt_reader.parse_all_token_trees();\n-        (res, tt_reader.unmatched_braces)\n-    }\n-}\n-\n-struct TokenTreesReader<'a> {\n+pub(super) struct TokenTreesReader<'a> {\n     string_reader: StringReader<'a>,\n     token: Token,\n     /// Stack of open delimiters and their spans. Used for error message.\n@@ -43,6 +25,23 @@ struct TokenTreesReader<'a> {\n }\n \n impl<'a> TokenTreesReader<'a> {\n+    pub(super) fn parse_token_trees(\n+        string_reader: StringReader<'a>,\n+    ) -> (PResult<'a, TokenStream>, Vec<UnmatchedBrace>) {\n+        let mut tt_reader = TokenTreesReader {\n+            string_reader,\n+            token: Token::dummy(),\n+            open_braces: Vec::new(),\n+            unmatched_braces: Vec::new(),\n+            matching_delim_spans: Vec::new(),\n+            last_unclosed_found_span: None,\n+            last_delim_empty_block_spans: FxHashMap::default(),\n+            matching_block_spans: Vec::new(),\n+        };\n+        let res = tt_reader.parse_all_token_trees();\n+        (res, tt_reader.unmatched_braces)\n+    }\n+\n     // Parse a stream of tokens into a list of `TokenTree`s, up to an `Eof`.\n     fn parse_all_token_trees(&mut self) -> PResult<'a, TokenStream> {\n         self.token = self.string_reader.next_token().0;"}]}