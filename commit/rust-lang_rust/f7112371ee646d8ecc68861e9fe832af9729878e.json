{"sha": "f7112371ee646d8ecc68861e9fe832af9729878e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3MTEyMzcxZWU2NDZkOGVjYzY4ODYxZTlmZTgzMmFmOTcyOTg3OGU=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-05-15T16:21:45Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-05-15T16:21:45Z"}, "message": "Merge #1280\n\n1280: :arrow_up: text_unit r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "08a70d62e1657905d51c1c6f0403d8a352708a68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08a70d62e1657905d51c1c6f0403d8a352708a68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7112371ee646d8ecc68861e9fe832af9729878e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7112371ee646d8ecc68861e9fe832af9729878e", "html_url": "https://github.com/rust-lang/rust/commit/f7112371ee646d8ecc68861e9fe832af9729878e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7112371ee646d8ecc68861e9fe832af9729878e/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "ec7d2f64ade9ffa35a64e82ac53e65ad5cbe9efd", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec7d2f64ade9ffa35a64e82ac53e65ad5cbe9efd", "html_url": "https://github.com/rust-lang/rust/commit/ec7d2f64ade9ffa35a64e82ac53e65ad5cbe9efd"}, {"sha": "e29a58995b36760c7f8d50338d1e100c2360217d", "url": "https://api.github.com/repos/rust-lang/rust/commits/e29a58995b36760c7f8d50338d1e100c2360217d", "html_url": "https://github.com/rust-lang/rust/commit/e29a58995b36760c7f8d50338d1e100c2360217d"}], "stats": {"total": 79, "additions": 33, "deletions": 46}, "files": [{"sha": "1e2fc7851ad812d7575a31e1bbaf93124f7d56c5", "filename": "Cargo.lock", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f7112371ee646d8ecc68861e9fe832af9729878e/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/f7112371ee646d8ecc68861e9fe832af9729878e/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=f7112371ee646d8ecc68861e9fe832af9729878e", "patch": "@@ -1244,7 +1244,7 @@ dependencies = [\n  \"rowan 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"smol_str 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"test_utils 0.1.0\",\n- \"text_unit 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"text_unit 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"walkdir 2.2.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -1255,7 +1255,7 @@ version = \"0.1.0\"\n dependencies = [\n  \"proptest 0.9.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"test_utils 0.1.0\",\n- \"text_unit 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"text_unit 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -1468,7 +1468,7 @@ dependencies = [\n  \"colosseum 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"parking_lot 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"smol_str 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"text_unit 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"text_unit 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -1748,12 +1748,12 @@ dependencies = [\n  \"difference 2.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"itertools 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.39 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"text_unit 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"text_unit 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"text_unit\"\n-version = \"0.1.6\"\n+version = \"0.1.8\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"serde 1.0.91 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -2193,7 +2193,7 @@ dependencies = [\n \"checksum teraron 0.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0d89ad4617d1dec55331067fadaa041e813479e1779616f3d3ce9308bf46184e\"\n \"checksum termion 1.5.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dde0593aeb8d47accea5392b39350015b5eccb12c0d98044d856983d89548dea\"\n \"checksum termios 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"72b620c5ea021d75a735c943269bb07d30c9b77d6ac6b236bc8b5c496ef05625\"\n-\"checksum text_unit 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"158bb1c22b638b1da3c95a8ad9f061ea40d4d39fd0301be3a520f92efeeb189e\"\n+\"checksum text_unit 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"019e5bc4c698b63073968610964c8c0869b60455d8f2e303a0ee7ad2e4f6ade4\"\n \"checksum textwrap 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d326610f408c7a4eb6f51c37c330e496b08506c9457c9d34287ecc38809fb060\"\n \"checksum thread_local 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c6b53e329000edc2b34dbe8545fd20e55a333362d0a321909685a19bd28c3f1b\"\n \"checksum threadpool 1.7.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e2f0c90a5f3459330ac8bc0d2f879c693bb7a2f59689c1083fc4ef83834da865\""}, {"sha": "2e521183ca360bd07d58615264169fa0d63020af", "filename": "crates/ra_syntax/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f7112371ee646d8ecc68861e9fe832af9729878e/crates%2Fra_syntax%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/f7112371ee646d8ecc68861e9fe832af9729878e/crates%2Fra_syntax%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2FCargo.toml?ref=f7112371ee646d8ecc68861e9fe832af9729878e", "patch": "@@ -17,7 +17,7 @@ rowan = \"0.5.0\"\n \n # ideally, `serde` should be enabled by `ra_lsp_server`, but we enable it here\n # to reduce number of compilations\n-text_unit = { version = \"0.1.6\", features = [\"serde\"] }\n+text_unit = { version = \"0.1.8\", features = [\"serde\"] }\n smol_str = { version = \"0.1.9\", features = [\"serde\"] }\n \n ra_text_edit = { path = \"../ra_text_edit\" }"}, {"sha": "b013164c497c14ca3cb5a037a282cffee8f1fef5", "filename": "crates/ra_syntax/src/syntax_text.rs", "status": "modified", "additions": 26, "deletions": 39, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/f7112371ee646d8ecc68861e9fe832af9729878e/crates%2Fra_syntax%2Fsrc%2Fsyntax_text.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7112371ee646d8ecc68861e9fe832af9729878e/crates%2Fra_syntax%2Fsrc%2Fsyntax_text.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fsyntax_text.rs?ref=f7112371ee646d8ecc68861e9fe832af9729878e", "patch": "@@ -1,4 +1,4 @@\n-use std::{fmt, ops};\n+use std::{fmt, ops::{self, Bound}};\n \n use crate::{SyntaxNode, TextRange, TextUnit, SyntaxElement};\n \n@@ -54,10 +54,31 @@ impl<'a> SyntaxText<'a> {\n         self.range.len()\n     }\n \n-    pub fn slice(&self, range: impl SyntaxTextSlice) -> SyntaxText<'a> {\n-        let range = range.restrict(self.range).unwrap_or_else(|| {\n-            panic!(\"invalid slice, range: {:?}, slice: {:?}\", self.range, range)\n-        });\n+    /// NB, the offsets here are absolute, and this probably doesn't make sense!\n+    pub fn slice(&self, range: impl ops::RangeBounds<TextUnit>) -> SyntaxText<'a> {\n+        let start = match range.start_bound() {\n+            Bound::Included(b) => *b,\n+            Bound::Excluded(b) => *b + TextUnit::from(1u32),\n+            Bound::Unbounded => self.range.start(),\n+        };\n+        let end = match range.end_bound() {\n+            Bound::Included(b) => *b + TextUnit::from(1u32),\n+            Bound::Excluded(b) => *b,\n+            Bound::Unbounded => self.range.end(),\n+        };\n+        assert!(\n+            start <= end,\n+            \"invalid slice, range: {:?}, slice: {:?}\",\n+            self.range,\n+            (range.start_bound(), range.end_bound()),\n+        );\n+        let range = TextRange::from_to(start, end);\n+        assert!(\n+            range.is_subrange(&self.range),\n+            \"invalid slice, range: {:?}, slice: {:?}\",\n+            self.range,\n+            range,\n+        );\n         SyntaxText { node: self.node, range }\n     }\n \n@@ -88,40 +109,6 @@ impl<'a> fmt::Display for SyntaxText<'a> {\n     }\n }\n \n-pub trait SyntaxTextSlice: fmt::Debug {\n-    fn restrict(&self, range: TextRange) -> Option<TextRange>;\n-}\n-\n-impl SyntaxTextSlice for TextRange {\n-    fn restrict(&self, range: TextRange) -> Option<TextRange> {\n-        self.intersection(&range)\n-    }\n-}\n-\n-impl SyntaxTextSlice for ops::RangeTo<TextUnit> {\n-    fn restrict(&self, range: TextRange) -> Option<TextRange> {\n-        if !range.contains_inclusive(self.end) {\n-            return None;\n-        }\n-        Some(TextRange::from_to(range.start(), self.end))\n-    }\n-}\n-\n-impl SyntaxTextSlice for ops::RangeFrom<TextUnit> {\n-    fn restrict(&self, range: TextRange) -> Option<TextRange> {\n-        if !range.contains_inclusive(self.start) {\n-            return None;\n-        }\n-        Some(TextRange::from_to(self.start, range.end()))\n-    }\n-}\n-\n-impl SyntaxTextSlice for ops::Range<TextUnit> {\n-    fn restrict(&self, range: TextRange) -> Option<TextRange> {\n-        TextRange::from_to(self.start, self.end).restrict(range)\n-    }\n-}\n-\n impl From<SyntaxText<'_>> for String {\n     fn from(text: SyntaxText) -> String {\n         text.to_string()"}]}