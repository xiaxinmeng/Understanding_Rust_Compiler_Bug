{"sha": "5446cc99bb2a50bfed05bd781e9d72790a9ff570", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0NDZjYzk5YmIyYTUwYmZlZDA1YmQ3ODFlOWQ3Mjc5MGE5ZmY1NzA=", "commit": {"author": {"name": "MOZGIII", "email": "mike-n@narod.ru", "date": "2019-08-06T11:13:13Z"}, "committer": {"name": "MOZGIII", "email": "mike-n@narod.ru", "date": "2020-01-01T21:59:26Z"}, "message": "Add Iterator::try_find", "tree": {"sha": "375758856ee8bdaa91f44af0a7fda845e7b6e5ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/375758856ee8bdaa91f44af0a7fda845e7b6e5ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5446cc99bb2a50bfed05bd781e9d72790a9ff570", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5446cc99bb2a50bfed05bd781e9d72790a9ff570", "html_url": "https://github.com/rust-lang/rust/commit/5446cc99bb2a50bfed05bd781e9d72790a9ff570", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5446cc99bb2a50bfed05bd781e9d72790a9ff570/comments", "author": {"login": "MOZGIII", "id": 265507, "node_id": "MDQ6VXNlcjI2NTUwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/265507?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MOZGIII", "html_url": "https://github.com/MOZGIII", "followers_url": "https://api.github.com/users/MOZGIII/followers", "following_url": "https://api.github.com/users/MOZGIII/following{/other_user}", "gists_url": "https://api.github.com/users/MOZGIII/gists{/gist_id}", "starred_url": "https://api.github.com/users/MOZGIII/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MOZGIII/subscriptions", "organizations_url": "https://api.github.com/users/MOZGIII/orgs", "repos_url": "https://api.github.com/users/MOZGIII/repos", "events_url": "https://api.github.com/users/MOZGIII/events{/privacy}", "received_events_url": "https://api.github.com/users/MOZGIII/received_events", "type": "User", "site_admin": false}, "committer": {"login": "MOZGIII", "id": 265507, "node_id": "MDQ6VXNlcjI2NTUwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/265507?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MOZGIII", "html_url": "https://github.com/MOZGIII", "followers_url": "https://api.github.com/users/MOZGIII/followers", "following_url": "https://api.github.com/users/MOZGIII/following{/other_user}", "gists_url": "https://api.github.com/users/MOZGIII/gists{/gist_id}", "starred_url": "https://api.github.com/users/MOZGIII/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MOZGIII/subscriptions", "organizations_url": "https://api.github.com/users/MOZGIII/orgs", "repos_url": "https://api.github.com/users/MOZGIII/repos", "events_url": "https://api.github.com/users/MOZGIII/events{/privacy}", "received_events_url": "https://api.github.com/users/MOZGIII/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38aa6bdfd705ea0604d7d5dd9fabc5e8f853a4fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/38aa6bdfd705ea0604d7d5dd9fabc5e8f853a4fc", "html_url": "https://github.com/rust-lang/rust/commit/38aa6bdfd705ea0604d7d5dd9fabc5e8f853a4fc"}], "stats": {"total": 79, "additions": 79, "deletions": 0}, "files": [{"sha": "c958289b2c935172a89a91a9c7df77c6ca5e5ff2", "filename": "src/libcore/iter/traits/iterator.rs", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/5446cc99bb2a50bfed05bd781e9d72790a9ff570/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5446cc99bb2a50bfed05bd781e9d72790a9ff570/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs?ref=5446cc99bb2a50bfed05bd781e9d72790a9ff570", "patch": "@@ -2104,6 +2104,43 @@ pub trait Iterator {\n         self.try_fold((), check(f)).break_value()\n     }\n \n+    /// Applies function to the elements of iterator and returns\n+    /// the first non-none result or the first error.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(try_find)]\n+    ///\n+    /// let a = [\"1\", \"2\", \"lol\", \"NaN\", \"5\"];\n+    ///\n+    /// let is_my_num = |s: &str, search: i32| -> Result<bool, std::num::ParseIntError> {\n+    ///     Ok(s.parse::<i32>()?  == search)\n+    /// };\n+    ///\n+    /// let result = a.iter().try_find(|&&s| is_my_num(s, 2));\n+    /// assert_eq!(result, Ok(Some(&\"2\")));\n+    ///\n+    /// let result = a.iter().try_find(|&&s| is_my_num(s, 5));\n+    /// assert!(result.is_err());\n+    /// ```\n+    #[inline]\n+    #[unstable(feature = \"try_find\", reason = \"new API\", issue = \"63178\")]\n+    fn try_find<F, E, R>(&mut self, mut f: F) -> Result<Option<Self::Item>, E>\n+    where\n+        Self: Sized,\n+        F: FnMut(&Self::Item) -> R,\n+        R: Try<Ok = bool, Error = E>,\n+    {\n+        self.try_for_each(move |x| match f(&x).into_result() {\n+            Ok(false) => LoopState::Continue(()),\n+            Ok(true) => LoopState::Break(Ok(x)),\n+            Err(x) => LoopState::Break(Err(x)),\n+        })\n+        .break_value()\n+        .transpose()\n+    }\n+\n     /// Searches for an element in an iterator, returning its index.\n     ///\n     /// `position()` takes a closure that returns `true` or `false`. It applies"}, {"sha": "6f1d69821f56ce8a916efeca2c563ce870936a3d", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5446cc99bb2a50bfed05bd781e9d72790a9ff570/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5446cc99bb2a50bfed05bd781e9d72790a9ff570/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=5446cc99bb2a50bfed05bd781e9d72790a9ff570", "patch": "@@ -85,6 +85,7 @@\n #![feature(extern_types)]\n #![feature(fundamental)]\n #![feature(intrinsics)]\n+#![feature(try_find)]\n #![feature(is_sorted)]\n #![feature(iter_once_with)]\n #![feature(lang_items)]"}, {"sha": "8b8dc941534ee4c1ed3fcf3fb4008262a02d9118", "filename": "src/libcore/tests/iter.rs", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/5446cc99bb2a50bfed05bd781e9d72790a9ff570/src%2Flibcore%2Ftests%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5446cc99bb2a50bfed05bd781e9d72790a9ff570/src%2Flibcore%2Ftests%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fiter.rs?ref=5446cc99bb2a50bfed05bd781e9d72790a9ff570", "patch": "@@ -1557,6 +1557,46 @@ fn test_find_map() {\n     }\n }\n \n+#[test]\n+fn test_try_find() {\n+    let xs: &[isize] = &[];\n+    assert_eq!(xs.iter().try_find(testfn), Ok(None));\n+    let xs: &[isize] = &[1, 2, 3, 4];\n+    assert_eq!(xs.iter().try_find(testfn), Ok(Some(&2)));\n+    let xs: &[isize] = &[1, 3, 4];\n+    assert_eq!(xs.iter().try_find(testfn), Err(()));\n+\n+    let xs: &[isize] = &[1, 2, 3, 4, 5, 6, 7];\n+    let mut iter = xs.iter();\n+    assert_eq!(iter.try_find(testfn), Ok(Some(&2)));\n+    assert_eq!(iter.try_find(testfn), Err(()));\n+    assert_eq!(iter.next(), Some(&5));\n+\n+    fn testfn(x: &&isize) -> Result<bool, ()> {\n+        if **x == 2 {\n+            return Ok(true);\n+        }\n+        if **x == 4 {\n+            return Err(());\n+        }\n+        Ok(false)\n+    }\n+}\n+\n+#[test]\n+fn test_try_find_api_usability() -> Result<(), Box<dyn std::error::Error>> {\n+    let a = [\"1\", \"2\"];\n+\n+    let is_my_num = |s: &str, search: i32| -> Result<bool, std::num::ParseIntError> {\n+        Ok(s.parse::<i32>()? == search)\n+    };\n+\n+    let val = a.iter().try_find(|&&s| is_my_num(s, 2))?;\n+    assert_eq!(val, Some(&\"2\"));\n+\n+    Ok(())\n+}\n+\n #[test]\n fn test_position() {\n     let v = &[1, 3, 9, 27, 103, 14, 11];"}, {"sha": "39f6133f2a689fe9b6af7d6ea38804081551f56c", "filename": "src/libcore/tests/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5446cc99bb2a50bfed05bd781e9d72790a9ff570/src%2Flibcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5446cc99bb2a50bfed05bd781e9d72790a9ff570/src%2Flibcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Flib.rs?ref=5446cc99bb2a50bfed05bd781e9d72790a9ff570", "patch": "@@ -11,6 +11,7 @@\n #![feature(flt2dec)]\n #![feature(fmt_internals)]\n #![feature(hashmap_internals)]\n+#![feature(try_find)]\n #![feature(is_sorted)]\n #![feature(iter_once_with)]\n #![feature(pattern)]"}]}