{"sha": "c46fe78c32ac313e0c837519bd38c59b029f5a0a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0NmZlNzhjMzJhYzMxM2UwYzgzNzUxOWJkMzhjNTliMDI5ZjVhMGE=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-02-27T06:13:17Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-02-27T15:07:39Z"}, "message": "Rollup merge of #22732 - jxcl:cargo-new, r=steveklabnik\n\n r? @steveklabnik", "tree": {"sha": "03c7390bfe25205a703de639b69d03db8b106075", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/03c7390bfe25205a703de639b69d03db8b106075"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c46fe78c32ac313e0c837519bd38c59b029f5a0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c46fe78c32ac313e0c837519bd38c59b029f5a0a", "html_url": "https://github.com/rust-lang/rust/commit/c46fe78c32ac313e0c837519bd38c59b029f5a0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c46fe78c32ac313e0c837519bd38c59b029f5a0a/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "487ee79e3fb391fc97ea8c9c618eb7780a5dee2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/487ee79e3fb391fc97ea8c9c618eb7780a5dee2d", "html_url": "https://github.com/rust-lang/rust/commit/487ee79e3fb391fc97ea8c9c618eb7780a5dee2d"}, {"sha": "f49fd40f208827798ccd91394e3a3986c8bc6886", "url": "https://api.github.com/repos/rust-lang/rust/commits/f49fd40f208827798ccd91394e3a3986c8bc6886", "html_url": "https://github.com/rust-lang/rust/commit/f49fd40f208827798ccd91394e3a3986c8bc6886"}], "stats": {"total": 66, "additions": 62, "deletions": 4}, "files": [{"sha": "587da69d4a6f7a0fc8c8fb6c5d16cb9606ac31e4", "filename": "src/doc/trpl/hello-cargo.md", "status": "modified", "additions": 62, "deletions": 4, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/c46fe78c32ac313e0c837519bd38c59b029f5a0a/src%2Fdoc%2Ftrpl%2Fhello-cargo.md", "raw_url": "https://github.com/rust-lang/rust/raw/c46fe78c32ac313e0c837519bd38c59b029f5a0a/src%2Fdoc%2Ftrpl%2Fhello-cargo.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fhello-cargo.md?ref=c46fe78c32ac313e0c837519bd38c59b029f5a0a", "patch": "@@ -18,13 +18,15 @@ the Cargo\n README](https://github.com/rust-lang/cargo#installing-cargo-from-nightlies)\n for specific instructions about installing it.\n \n+## Converting to Cargo\n+\n Let's convert Hello World to Cargo.\n \n To Cargo-ify our project, we need to do two things: Make a `Cargo.toml`\n configuration file, and put our source file in the right place. Let's\n do that part first:\n \n-```{bash}\n+```bash\n $ mkdir src\n $ mv main.rs src/main.rs\n ```\n@@ -36,7 +38,7 @@ place for everything, and everything in its place.\n \n Next, our configuration file:\n \n-```{bash}\n+```bash\n $ editor Cargo.toml\n ```\n \n@@ -73,7 +75,7 @@ well as what it is named.\n \n Once you have this file in place, we should be ready to build! Try this:\n \n-```{bash}\n+```bash\n $ cargo build\n    Compiling hello_world v0.0.1 (file:///home/yourname/projects/hello_world)\n $ ./target/hello_world\n@@ -103,6 +105,62 @@ That's it! We've successfully built `hello_world` with Cargo. Even though our\n program is simple, it's using much of the real tooling that you'll use for the\n rest of your Rust career.\n \n+## A New Project\n+\n+You don't have to go through this whole process every time you want to start a new\n+project! Cargo has the ability to make a bare-bones project directory in which you\n+can start developing right away.\n+\n+To start a new project with Cargo, use `cargo new`:\n+\n+```bash\n+$ cargo new hello_world --bin\n+```\n+\n+We're passing `--bin` because we're making a binary program: if we\n+were making a library, we'd leave it off.\n+\n+Let's check out what Cargo has generated for us:\n+\n+```bash\n+$ cd hello_world\n+$ tree .\n+.\n+\u251c\u2500\u2500 Cargo.toml\n+\u2514\u2500\u2500 src\n+    \u2514\u2500\u2500 main.rs\n+\n+1 directory, 2 files\n+```\n+\n+If you don't have the `tree` command, you can probably get it from your distro's package\n+manager. It's not necessary, but it's certainly useful.\n+\n+This is all we need to get started. First, let's check out `Cargo.toml`:\n+\n+```toml\n+[package]\n+\n+name = \"hello_world\"\n+version = \"0.0.1\"\n+authors = [\"Your Name <you@example.com>\"]\n+```\n+\n+Cargo has populated this file with reasonable defaults based off the arguments you gave\n+it and your `git` global configuration. You may notice that Cargo has also initialized\n+the `hello_world` directory as a `git` repository.\n+\n+Here's what's in `src/main.rs`:\n+\n+```rust\n+fn main() {\n+    println!(\"Hello, world!\");\n+}\n+```\n+\n+Cargo has generated a \"Hello World!\" for us, and you're ready to start coding! A\n+much more in-depth guide to Cargo can be found [here](http://doc.crates.io/guide.html).\n+\n Now that you've got the tools down, let's actually learn more about the Rust\n language itself. These are the basics that will serve you well through the rest\n-of your time with Rust.\n+of your time with Rust.\n\\ No newline at end of file"}]}