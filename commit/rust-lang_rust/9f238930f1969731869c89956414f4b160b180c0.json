{"sha": "9f238930f1969731869c89956414f4b160b180c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmMjM4OTMwZjE5Njk3MzE4NjljODk5NTY0MTRmNGIxNjBiMTgwYzA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-08-22T12:28:08Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-08-22T12:35:42Z"}, "message": "Don't add `?` bounds as real bounds\n\ncloses #1709", "tree": {"sha": "182d17948da88b2acff477154cf54896e959efcd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/182d17948da88b2acff477154cf54896e959efcd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f238930f1969731869c89956414f4b160b180c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f238930f1969731869c89956414f4b160b180c0", "html_url": "https://github.com/rust-lang/rust/commit/9f238930f1969731869c89956414f4b160b180c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f238930f1969731869c89956414f4b160b180c0/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d0931b9ba7aabdc634c799b32957cc6f057e875", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d0931b9ba7aabdc634c799b32957cc6f057e875", "html_url": "https://github.com/rust-lang/rust/commit/2d0931b9ba7aabdc634c799b32957cc6f057e875"}], "stats": {"total": 49, "additions": 49, "deletions": 0}, "files": [{"sha": "e75337cdf75a3c6e8554cfd7b110880cf742e4a5", "filename": "crates/ra_hir/src/generics.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9f238930f1969731869c89956414f4b160b180c0/crates%2Fra_hir%2Fsrc%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f238930f1969731869c89956414f4b160b180c0/crates%2Fra_hir%2Fsrc%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fgenerics.rs?ref=9f238930f1969731869c89956414f4b160b180c0", "patch": "@@ -75,6 +75,7 @@ impl GenericParams {\n         };\n         generics.parent_params = parent.map(|p| db.generic_params(p));\n         let start = generics.parent_params.as_ref().map(|p| p.params.len()).unwrap_or(0) as u32;\n+        // FIXME: add `: Sized` bound for everything except for `Self` in traits\n         match def {\n             GenericDef::Function(it) => generics.fill(&it.source(db).ast, start),\n             GenericDef::Struct(it) => generics.fill(&it.source(db).ast, start),\n@@ -86,6 +87,9 @@ impl GenericParams {\n                 generics.fill(&it.source(db).ast, start + 1);\n             }\n             GenericDef::TypeAlias(it) => generics.fill(&it.source(db).ast, start),\n+            // Note that we don't add `Self` here: in `impl`s, `Self` is not a\n+            // type-parameter, but rather is a type-alias for impl's target\n+            // type, so this is handled by the resovler.\n             GenericDef::ImplBlock(it) => generics.fill(&it.source(db).ast, start),\n             GenericDef::EnumVariant(_) => {}\n         }\n@@ -135,6 +139,10 @@ impl GenericParams {\n     }\n \n     fn add_where_predicate_from_bound(&mut self, bound: ast::TypeBound, type_ref: TypeRef) {\n+        if bound.has_question_mark() {\n+            // FIXME: remove this bound\n+            return;\n+        }\n         let path = bound\n             .type_ref()\n             .and_then(|tr| match tr {"}, {"sha": "57fd5492d8b36ac0b3e4f759e394a1205e13b088", "filename": "crates/ra_hir/src/ty/tests.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/9f238930f1969731869c89956414f4b160b180c0/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f238930f1969731869c89956414f4b160b180c0/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs?ref=9f238930f1969731869c89956414f4b160b180c0", "patch": "@@ -3028,6 +3028,35 @@ fn test(s: S) {\n     assert_eq!(t, \"{unknown}\");\n }\n \n+#[test]\n+fn deref_trait_with_question_mark_size() {\n+    let t = type_at(\n+        r#\"\n+//- /main.rs\n+#[lang = \"deref\"]\n+trait Deref {\n+    type Target;\n+    fn deref(&self) -> &Self::Target;\n+}\n+\n+struct Arc<T>;\n+impl<T: ?Sized> Deref for Arc<T> {\n+    type Target = T;\n+}\n+\n+struct S;\n+impl S {\n+    fn foo(&self) -> u128 {}\n+}\n+\n+fn test(s: Arc<S>) {\n+    (*s, s.foo())<|>\n+}\n+\"#,\n+    );\n+    assert_eq!(t, \"(S, u128)\");\n+}\n+\n #[test]\n fn obligation_from_function_clause() {\n     let t = type_at("}, {"sha": "efe261fc2322f1a49dfb8b1f86fa32cb552b9391", "filename": "crates/ra_syntax/src/ast/extensions.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9f238930f1969731869c89956414f4b160b180c0/crates%2Fra_syntax%2Fsrc%2Fast%2Fextensions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f238930f1969731869c89956414f4b160b180c0/crates%2Fra_syntax%2Fsrc%2Fast%2Fextensions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fextensions.rs?ref=9f238930f1969731869c89956414f4b160b180c0", "patch": "@@ -382,6 +382,18 @@ impl ast::WherePred {\n     }\n }\n \n+impl ast::TypeBound {\n+    pub fn question_mark_token(&self) -> Option<SyntaxToken> {\n+        self.syntax()\n+            .children_with_tokens()\n+            .filter_map(|it| it.into_token())\n+            .find(|it| it.kind() == T![?])\n+    }\n+    pub fn has_question_mark(&self) -> bool {\n+        self.question_mark_token().is_some()\n+    }\n+}\n+\n impl ast::TraitDef {\n     pub fn is_auto(&self) -> bool {\n         self.syntax().children_with_tokens().any(|t| t.kind() == T![auto])"}]}