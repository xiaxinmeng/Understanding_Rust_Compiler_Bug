{"sha": "b32cffe493cd9ad428b59f3185f54d835ea427fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzMmNmZmU0OTNjZDlhZDQyOGI1OWYzMTg1ZjU0ZDgzNWVhNDI3ZmI=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-11-26T22:38:53Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-03-09T18:22:55Z"}, "message": "Remove hir::Crate::attrs.", "tree": {"sha": "650dc47d22941f20fafd922a1f6a324d7a9d97e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/650dc47d22941f20fafd922a1f6a324d7a9d97e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b32cffe493cd9ad428b59f3185f54d835ea427fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b32cffe493cd9ad428b59f3185f54d835ea427fb", "html_url": "https://github.com/rust-lang/rust/commit/b32cffe493cd9ad428b59f3185f54d835ea427fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b32cffe493cd9ad428b59f3185f54d835ea427fb/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "acd6014b806cdb2600218e63aa599012bb2507e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/acd6014b806cdb2600218e63aa599012bb2507e6", "html_url": "https://github.com/rust-lang/rust/commit/acd6014b806cdb2600218e63aa599012bb2507e6"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "8deccd6f9d77734f5fdfb07b7f37c100a5222072", "filename": "clippy_lints/src/doc.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b32cffe493cd9ad428b59f3185f54d835ea427fb/clippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b32cffe493cd9ad428b59f3185f54d835ea427fb/clippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdoc.rs?ref=b32cffe493cd9ad428b59f3185f54d835ea427fb", "patch": "@@ -208,8 +208,9 @@ impl_lint_pass!(DocMarkdown =>\n );\n \n impl<'tcx> LateLintPass<'tcx> for DocMarkdown {\n-    fn check_crate(&mut self, cx: &LateContext<'tcx>, krate: &'tcx hir::Crate<'_>) {\n-        check_attrs(cx, &self.valid_idents, &krate.item.attrs);\n+    fn check_crate(&mut self, cx: &LateContext<'tcx>, _: &'tcx hir::Crate<'_>) {\n+        let attrs = cx.tcx.hir().attrs(hir::CRATE_HIR_ID);\n+        check_attrs(cx, &self.valid_idents, attrs);\n     }\n \n     fn check_item(&mut self, cx: &LateContext<'tcx>, item: &'tcx hir::Item<'_>) {"}, {"sha": "9b626d81ebd813e03e940a3cfaca1d8239057873", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b32cffe493cd9ad428b59f3185f54d835ea427fb/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b32cffe493cd9ad428b59f3185f54d835ea427fb/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=b32cffe493cd9ad428b59f3185f54d835ea427fb", "patch": "@@ -578,7 +578,7 @@ impl<'tcx> LateLintPass<'tcx> for Loops {\n             // also check for empty `loop {}` statements, skipping those in #[panic_handler]\n             if block.stmts.is_empty() && block.expr.is_none() && !is_in_panic_handler(cx, expr) {\n                 let msg = \"empty `loop {}` wastes CPU cycles\";\n-                let help = if is_no_std_crate(cx.tcx.hir().krate()) {\n+                let help = if is_no_std_crate(cx) {\n                     \"you should either use `panic!()` or add a call pausing or sleeping the thread to the loop body\"\n                 } else {\n                     \"you should either use `panic!()` or add `std::thread::sleep(..);` to the loop body\""}, {"sha": "1b274c79d3820b5a948efb4578adb3bf220b0e3f", "filename": "clippy_lints/src/main_recursion.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b32cffe493cd9ad428b59f3185f54d835ea427fb/clippy_lints%2Fsrc%2Fmain_recursion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b32cffe493cd9ad428b59f3185f54d835ea427fb/clippy_lints%2Fsrc%2Fmain_recursion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmain_recursion.rs?ref=b32cffe493cd9ad428b59f3185f54d835ea427fb", "patch": "@@ -32,8 +32,8 @@ pub struct MainRecursion {\n impl_lint_pass!(MainRecursion => [MAIN_RECURSION]);\n \n impl LateLintPass<'_> for MainRecursion {\n-    fn check_crate(&mut self, _: &LateContext<'_>, krate: &Crate<'_>) {\n-        self.has_no_std_attr = is_no_std_crate(krate);\n+    fn check_crate(&mut self, cx: &LateContext<'_>, _: &Crate<'_>) {\n+        self.has_no_std_attr = is_no_std_crate(cx);\n     }\n \n     fn check_expr_post(&mut self, cx: &LateContext<'_>, expr: &Expr<'_>) {"}, {"sha": "a1eb8e29850b835270fcebd2d19352d771a636c0", "filename": "clippy_lints/src/missing_doc.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b32cffe493cd9ad428b59f3185f54d835ea427fb/clippy_lints%2Fsrc%2Fmissing_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b32cffe493cd9ad428b59f3185f54d835ea427fb/clippy_lints%2Fsrc%2Fmissing_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_doc.rs?ref=b32cffe493cd9ad428b59f3185f54d835ea427fb", "patch": "@@ -127,7 +127,8 @@ impl<'tcx> LateLintPass<'tcx> for MissingDoc {\n     }\n \n     fn check_crate(&mut self, cx: &LateContext<'tcx>, krate: &'tcx hir::Crate<'_>) {\n-        self.check_missing_docs_attrs(cx, &krate.item.attrs, krate.item.span, \"the\", \"crate\");\n+        let attrs = cx.tcx.hir().attrs(hir::CRATE_HIR_ID);\n+        self.check_missing_docs_attrs(cx, attrs, krate.item.span, \"the\", \"crate\");\n     }\n \n     fn check_item(&mut self, cx: &LateContext<'tcx>, it: &'tcx hir::Item<'_>) {"}, {"sha": "4cd7ed5c45da3e79277597da183795ecf7c167dc", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b32cffe493cd9ad428b59f3185f54d835ea427fb/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b32cffe493cd9ad428b59f3185f54d835ea427fb/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=b32cffe493cd9ad428b59f3185f54d835ea427fb", "patch": "@@ -61,7 +61,7 @@ use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::Node;\n use rustc_hir::{\n-    def, Arm, Block, Body, Constness, Crate, Expr, ExprKind, FnDecl, HirId, ImplItem, ImplItemKind, Item, ItemKind,\n+    def, Arm, Block, Body, Constness, Expr, ExprKind, FnDecl, HirId, ImplItem, ImplItemKind, Item, ItemKind,\n     MatchSource, Param, Pat, PatKind, Path, PathSegment, QPath, TraitItem, TraitItemKind, TraitRef, TyKind, Unsafety,\n };\n use rustc_infer::infer::TyCtxtInferExt;\n@@ -1510,8 +1510,8 @@ pub fn is_must_use_func_call(cx: &LateContext<'_>, expr: &Expr<'_>) -> bool {\n     did.map_or(false, |did| must_use_attr(&cx.tcx.get_attrs(did)).is_some())\n }\n \n-pub fn is_no_std_crate(krate: &Crate<'_>) -> bool {\n-    krate.item.attrs.iter().any(|attr| {\n+pub fn is_no_std_crate(cx: &LateContext<'_>) -> bool {\n+    cx.tcx.hir().attrs(hir::CRATE_HIR_ID).iter().any(|attr| {\n         if let ast::AttrKind::Normal(ref attr, _) = attr.kind {\n             attr.path == sym::no_std\n         } else {"}]}