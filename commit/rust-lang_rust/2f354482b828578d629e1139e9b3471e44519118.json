{"sha": "2f354482b828578d629e1139e9b3471e44519118", "node_id": "C_kwDOAAsO6NoAKDJmMzU0NDgyYjgyODU3OGQ2MjllMTEzOWU5YjM0NzFlNDQ1MTkxMTg", "commit": {"author": {"name": "Le\u00f3n Orell Valerian Liehr", "email": "me@fmease.dev", "date": "2023-04-25T17:38:42Z"}, "committer": {"name": "Le\u00f3n Orell Valerian Liehr", "email": "me@fmease.dev", "date": "2023-04-25T21:32:13Z"}, "message": "Add regression tests for const-generic IATs", "tree": {"sha": "d86bd4becc1a9ea1cbc393d626762cd675875c98", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d86bd4becc1a9ea1cbc393d626762cd675875c98"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f354482b828578d629e1139e9b3471e44519118", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEXSQFaHGAjVoD5I3F0XoHIV9o5xMFAmRIRt8ACgkQ0XoHIV9o\n5xOCjQ//RnjGxfhINrF0Lr/au19lJJNtrWACdW+wmRcU/M+GJVd24I2Yezc6Fhtb\nhCed0v0qGwQ19gcLUm+TM3LHyX1F7NPh5lAdcopx/J7NtItGL/yIj29ol9InTdhR\nW/qqcmSSylfDOhslMoBv35IckUOdgimLjxsfLR8X+nDWuii2Kja1IuY+uS7Yksx3\n6InMPvSlTuj2moyS8sMXGDd3mmAA8968Bl1NxMfMXEgvQ5a5kurc5nkQQhTbuVTr\nVXvlRP3B3h8ACumrfXXl/JDIWRr2uFTm2ZIUihtj/PIlT1vFK0hPleuGeGW66cbT\nbfnlJr9RbFEn6Eky/XoBhikQcr90tN617oV11BdJTtiaqCw4l9K9GoQko1uBzRcc\nmzusCtac26F11gHSb+0OtnNDJZbL657IOAA9whx+0WR1hNhqyc9sybwqa3AkxRb9\ncVjVvj8zZIBZ8y99pV8ny7l7ApVniFn5/4p0lzQqDdRM4mAi+H/Z0NlahnCYaM12\nzg8GprgHkEM4J9pKU8qDC9Rseb+Eak0GaSVeU9V1qE+pkVVpbssh9V+42mZJ+wiC\nFuW5qPMoG7hix87hXEoPivjDP98I4Z4cVzSydkGgAonmzBfL1ZTLLoEIWe0MvBPG\nc93G1GFT4knSU2ReV6uoJ21IWNCcUSX3FDa3+mHu6bYpSgBMAFg=\n=Olez\n-----END PGP SIGNATURE-----", "payload": "tree d86bd4becc1a9ea1cbc393d626762cd675875c98\nparent a7aa20517c80161a2ffe7c0c25fc2e0140c43c90\nauthor Le\u00f3n Orell Valerian Liehr <me@fmease.dev> 1682444322 +0200\ncommitter Le\u00f3n Orell Valerian Liehr <me@fmease.dev> 1682458333 +0200\n\nAdd regression tests for const-generic IATs\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f354482b828578d629e1139e9b3471e44519118", "html_url": "https://github.com/rust-lang/rust/commit/2f354482b828578d629e1139e9b3471e44519118", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f354482b828578d629e1139e9b3471e44519118/comments", "author": {"login": "fmease", "id": 14913065, "node_id": "MDQ6VXNlcjE0OTEzMDY1", "avatar_url": "https://avatars.githubusercontent.com/u/14913065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmease", "html_url": "https://github.com/fmease", "followers_url": "https://api.github.com/users/fmease/followers", "following_url": "https://api.github.com/users/fmease/following{/other_user}", "gists_url": "https://api.github.com/users/fmease/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmease/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmease/subscriptions", "organizations_url": "https://api.github.com/users/fmease/orgs", "repos_url": "https://api.github.com/users/fmease/repos", "events_url": "https://api.github.com/users/fmease/events{/privacy}", "received_events_url": "https://api.github.com/users/fmease/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fmease", "id": 14913065, "node_id": "MDQ6VXNlcjE0OTEzMDY1", "avatar_url": "https://avatars.githubusercontent.com/u/14913065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmease", "html_url": "https://github.com/fmease", "followers_url": "https://api.github.com/users/fmease/followers", "following_url": "https://api.github.com/users/fmease/following{/other_user}", "gists_url": "https://api.github.com/users/fmease/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmease/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmease/subscriptions", "organizations_url": "https://api.github.com/users/fmease/orgs", "repos_url": "https://api.github.com/users/fmease/repos", "events_url": "https://api.github.com/users/fmease/events{/privacy}", "received_events_url": "https://api.github.com/users/fmease/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7aa20517c80161a2ffe7c0c25fc2e0140c43c90", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7aa20517c80161a2ffe7c0c25fc2e0140c43c90", "html_url": "https://github.com/rust-lang/rust/commit/a7aa20517c80161a2ffe7c0c25fc2e0140c43c90"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "5b7c00bccba701be97d9e949a062c007160ef7bc", "filename": "tests/ui/associated-inherent-types/const-generics.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/2f354482b828578d629e1139e9b3471e44519118/tests%2Fui%2Fassociated-inherent-types%2Fconst-generics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f354482b828578d629e1139e9b3471e44519118/tests%2Fui%2Fassociated-inherent-types%2Fconst-generics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassociated-inherent-types%2Fconst-generics.rs?ref=2f354482b828578d629e1139e9b3471e44519118", "patch": "@@ -0,0 +1,23 @@\n+// Regression test for issue #109759.\n+// check-pass\n+\n+#![feature(inherent_associated_types)]\n+#![allow(incomplete_features)]\n+\n+struct Foo;\n+\n+struct Bar<const X: usize>([(); X]);\n+\n+impl<const X: usize> Bar<X> {\n+    pub fn new() -> Self {\n+        Self([(); X])\n+    }\n+}\n+\n+impl Foo {\n+    type Bar<const X: usize> = Bar<X>;\n+}\n+\n+fn main() {\n+    let _ = Foo::Bar::<10>::new();\n+}"}, {"sha": "a4ac0ecfa4cf936e4e806122043b85de3fe3bc31", "filename": "tests/ui/associated-inherent-types/generic-const-exprs.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/2f354482b828578d629e1139e9b3471e44519118/tests%2Fui%2Fassociated-inherent-types%2Fgeneric-const-exprs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f354482b828578d629e1139e9b3471e44519118/tests%2Fui%2Fassociated-inherent-types%2Fgeneric-const-exprs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassociated-inherent-types%2Fgeneric-const-exprs.rs?ref=2f354482b828578d629e1139e9b3471e44519118", "patch": "@@ -0,0 +1,28 @@\n+// check-pass\n+\n+#![feature(inherent_associated_types, generic_const_exprs)]\n+#![allow(incomplete_features)]\n+\n+struct Parent<const O: usize>;\n+\n+impl<const O: usize> Parent<O> {\n+    type Mapping<const I: usize> = Store<{ O + I }>\n+    where\n+        [(); O + I]:\n+    ;\n+}\n+\n+struct Store<const N: usize>;\n+\n+impl<const N: usize> Store<N> {\n+    const REIFIED: usize = N;\n+\n+    fn reify() -> usize {\n+        N\n+    }\n+}\n+\n+fn main() {\n+    let _ = Parent::<2>::Mapping::<{ 12 * 2 }>::REIFIED;\n+    let _ = Parent::<1>::Mapping::<{ 2 * 5 }>::reify();\n+}"}]}