{"sha": "2f96ce89d03b248c269513b011d328bff2c8dc21", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmOTZjZTg5ZDAzYjI0OGMyNjk1MTNiMDExZDMyOGJmZjJjOGRjMjE=", "commit": {"author": {"name": "Jon Gjengset", "email": "jon@thesquareplanet.com", "date": "2020-07-20T13:58:56Z"}, "committer": {"name": "Jon Gjengset", "email": "jon@thesquareplanet.com", "date": "2020-07-28T12:36:54Z"}, "message": "Stabilize deque_make_contiguous\n\nCloses #70929.", "tree": {"sha": "aa15ea10453ea3cc97b6a0ed83a9a1a4d86a80e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa15ea10453ea3cc97b6a0ed83a9a1a4d86a80e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f96ce89d03b248c269513b011d328bff2c8dc21", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYKAB0WIQRMIcpUBeYB4tqnGeM8sexUWnBjGAUCXyAb5wAKCRA8sexUWnBj\nGEOtAQDzBYV6dRUmXW08u1fCbpThA37v0PdzdCBroDsOkszHnAD/YVvOAIJOlmPO\nxRS1UC21VjsCRvqBn+dfVCqTGmX0hwQ=\n=t3mh\n-----END PGP SIGNATURE-----", "payload": "tree aa15ea10453ea3cc97b6a0ed83a9a1a4d86a80e7\nparent 2c28244cf0fc9868f55070e55b8f332d196eaf3f\nauthor Jon Gjengset <jon@thesquareplanet.com> 1595253536 -0400\ncommitter Jon Gjengset <jon@thesquareplanet.com> 1595939814 -0400\n\nStabilize deque_make_contiguous\n\nCloses #70929.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f96ce89d03b248c269513b011d328bff2c8dc21", "html_url": "https://github.com/rust-lang/rust/commit/2f96ce89d03b248c269513b011d328bff2c8dc21", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f96ce89d03b248c269513b011d328bff2c8dc21/comments", "author": {"login": "jonhoo", "id": 176295, "node_id": "MDQ6VXNlcjE3NjI5NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/176295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonhoo", "html_url": "https://github.com/jonhoo", "followers_url": "https://api.github.com/users/jonhoo/followers", "following_url": "https://api.github.com/users/jonhoo/following{/other_user}", "gists_url": "https://api.github.com/users/jonhoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonhoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonhoo/subscriptions", "organizations_url": "https://api.github.com/users/jonhoo/orgs", "repos_url": "https://api.github.com/users/jonhoo/repos", "events_url": "https://api.github.com/users/jonhoo/events{/privacy}", "received_events_url": "https://api.github.com/users/jonhoo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonhoo", "id": 176295, "node_id": "MDQ6VXNlcjE3NjI5NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/176295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonhoo", "html_url": "https://github.com/jonhoo", "followers_url": "https://api.github.com/users/jonhoo/followers", "following_url": "https://api.github.com/users/jonhoo/following{/other_user}", "gists_url": "https://api.github.com/users/jonhoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonhoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonhoo/subscriptions", "organizations_url": "https://api.github.com/users/jonhoo/orgs", "repos_url": "https://api.github.com/users/jonhoo/repos", "events_url": "https://api.github.com/users/jonhoo/events{/privacy}", "received_events_url": "https://api.github.com/users/jonhoo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c28244cf0fc9868f55070e55b8f332d196eaf3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c28244cf0fc9868f55070e55b8f332d196eaf3f", "html_url": "https://github.com/rust-lang/rust/commit/2c28244cf0fc9868f55070e55b8f332d196eaf3f"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "22144704fef6c4fd4c489056009ef24a409caf08", "filename": "library/alloc/src/collections/vec_deque.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2f96ce89d03b248c269513b011d328bff2c8dc21/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f96ce89d03b248c269513b011d328bff2c8dc21/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque.rs?ref=2f96ce89d03b248c269513b011d328bff2c8dc21", "patch": "@@ -47,10 +47,17 @@ const MAXIMUM_ZST_CAPACITY: usize = 1 << (64 - 1); // Largest possible power of\n /// push onto the back in this manner, and iterating over `VecDeque` goes front\n /// to back.\n ///\n+/// Since `VecDeque` is a ring buffer, its elements are not necessarily contiguous\n+/// in memory. If you want to access the elements as a single slice, such as for\n+/// efficient sorting, you can use [`make_contiguous`]. It rotates the `VecDeque`\n+/// so that its elements do not wrap, and returns a mutable slice to the\n+/// now-contiguous element sequence.\n+///\n /// [`push_back`]: #method.push_back\n /// [`pop_front`]: #method.pop_front\n /// [`extend`]: #method.extend\n /// [`append`]: #method.append\n+/// [`make_contiguous`]: #method.make_contiguous\n #[cfg_attr(not(test), rustc_diagnostic_item = \"vecdeque_type\")]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct VecDeque<T> {\n@@ -2188,8 +2195,6 @@ impl<T> VecDeque<T> {\n     /// Sorting the content of a deque.\n     ///\n     /// ```\n-    /// #![feature(deque_make_contiguous)]\n-    ///\n     /// use std::collections::VecDeque;\n     ///\n     /// let mut buf = VecDeque::with_capacity(15);\n@@ -2210,8 +2215,6 @@ impl<T> VecDeque<T> {\n     /// Getting immutable access to the contiguous slice.\n     ///\n     /// ```rust\n-    /// #![feature(deque_make_contiguous)]\n-    ///\n     /// use std::collections::VecDeque;\n     ///\n     /// let mut buf = VecDeque::new();\n@@ -2228,7 +2231,7 @@ impl<T> VecDeque<T> {\n     ///     assert_eq!(slice, &[3, 2, 1] as &[_]);\n     /// }\n     /// ```\n-    #[unstable(feature = \"deque_make_contiguous\", issue = \"70929\")]\n+    #[stable(feature = \"deque_make_contiguous\", since = \"1.47.0\")]\n     pub fn make_contiguous(&mut self) -> &mut [T] {\n         if self.is_contiguous() {\n             let tail = self.tail;"}]}