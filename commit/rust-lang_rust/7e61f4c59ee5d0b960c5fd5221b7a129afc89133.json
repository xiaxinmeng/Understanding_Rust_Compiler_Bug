{"sha": "7e61f4c59ee5d0b960c5fd5221b7a129afc89133", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlNjFmNGM1OWVlNWQwYjk2MGM1ZmQ1MjIxYjdhMTI5YWZjODkxMzM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-06-24T15:18:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-24T15:18:13Z"}, "message": "Merge #5035 #5037\n\n5035: Less error-prone naming r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\n5037: Don't watch dirs if not asked to r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "289255852b9feaad957d2c281700eefe5e9e4a44", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/289255852b9feaad957d2c281700eefe5e9e4a44"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e61f4c59ee5d0b960c5fd5221b7a129afc89133", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe8261CRBK7hj4Ov3rIwAAdHIIAGZReDeDZoADW1eJLr4t4DLT\n2ZsYCOZNBh1SC7mj63qcOnLP6ucNzrXCmNDU5QJyXsTYd5MnYkEzKeXqV0G1EPpW\nqdzT7Pchau/vlufqMW1p82qeQYzCE9M/LMN/NTgQB6+7Ms6D9JPZ/XKQEobdGb7o\nYMySrDgXI/PBhWb0w+h6g2Ay2bW2hfH0Z9JV7QyErOqlQRY8h77/pWn2MkKByGtT\nqD5eqWPlgc8g2PWx68njUR0Xrngel+s+oO3DW4TZASRmSG7le/gghyanItewMIc4\nWOTFRHoQO9rgIeJCgUIsWfejVnATPLf6TpIj3hmTfbyLNDLB1JQyYf/VL/D6Hmg=\n=pvm/\n-----END PGP SIGNATURE-----\n", "payload": "tree 289255852b9feaad957d2c281700eefe5e9e4a44\nparent e9bdb05e9676e85bdd8fa5008e3ada3812b36fd9\nparent 6937bcb67d825938d862cd1792af02e00e1d1a06\nparent 089ea36b2ecf5d7267f8a671c077357aad50b8e2\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1593011893 +0000\ncommitter GitHub <noreply@github.com> 1593011893 +0000\n\nMerge #5035 #5037\n\n5035: Less error-prone naming r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\n5037: Don't watch dirs if not asked to r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e61f4c59ee5d0b960c5fd5221b7a129afc89133", "html_url": "https://github.com/rust-lang/rust/commit/7e61f4c59ee5d0b960c5fd5221b7a129afc89133", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e61f4c59ee5d0b960c5fd5221b7a129afc89133/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9bdb05e9676e85bdd8fa5008e3ada3812b36fd9", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9bdb05e9676e85bdd8fa5008e3ada3812b36fd9", "html_url": "https://github.com/rust-lang/rust/commit/e9bdb05e9676e85bdd8fa5008e3ada3812b36fd9"}, {"sha": "6937bcb67d825938d862cd1792af02e00e1d1a06", "url": "https://api.github.com/repos/rust-lang/rust/commits/6937bcb67d825938d862cd1792af02e00e1d1a06", "html_url": "https://github.com/rust-lang/rust/commit/6937bcb67d825938d862cd1792af02e00e1d1a06"}, {"sha": "089ea36b2ecf5d7267f8a671c077357aad50b8e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/089ea36b2ecf5d7267f8a671c077357aad50b8e2", "html_url": "https://github.com/rust-lang/rust/commit/089ea36b2ecf5d7267f8a671c077357aad50b8e2"}], "stats": {"total": 35, "additions": 13, "deletions": 22}, "files": [{"sha": "92e9b60fc693ba0d1702fadbbe01b78b4eaf72f2", "filename": "crates/rust-analyzer/src/cli/load_cargo.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7e61f4c59ee5d0b960c5fd5221b7a129afc89133/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fload_cargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e61f4c59ee5d0b960c5fd5221b7a129afc89133/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fload_cargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fload_cargo.rs?ref=7e61f4c59ee5d0b960c5fd5221b7a129afc89133", "patch": "@@ -67,8 +67,8 @@ pub(crate) fn load(\n     // wait until Vfs has loaded all roots\n     for task in receiver {\n         match task {\n-            vfs::loader::Message::Progress { n_entries_done, n_entries_total } => {\n-                if n_entries_done == n_entries_total {\n+            vfs::loader::Message::Progress { n_done, n_total } => {\n+                if n_done == n_total {\n                     break;\n                 }\n             }"}, {"sha": "b55d45cd37b9c53bccfd99f60b3b8e2ee2a0cd63", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7e61f4c59ee5d0b960c5fd5221b7a129afc89133/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e61f4c59ee5d0b960c5fd5221b7a129afc89133/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=7e61f4c59ee5d0b960c5fd5221b7a129afc89133", "patch": "@@ -305,18 +305,12 @@ fn loop_turn(\n                     }\n                 }\n             }\n-            vfs::loader::Message::Progress { n_entries_total, n_entries_done } => {\n-                if n_entries_done == n_entries_done {\n+            vfs::loader::Message::Progress { n_total, n_done } => {\n+                if n_done == n_total {\n                     loop_state.status = Status::Ready;\n                     became_ready = true;\n                 }\n-                report_progress(\n-                    loop_state,\n-                    &connection.sender,\n-                    n_entries_done,\n-                    n_entries_total,\n-                    \"roots scanned\",\n-                )\n+                report_progress(loop_state, &connection.sender, n_done, n_total, \"roots scanned\")\n             }\n         },\n         Event::CheckWatcher(task) => on_check_task(task, global_state, task_sender)?,"}, {"sha": "a2f4e0c5b6bba985504051f5644b4839de7cb6ed", "filename": "crates/vfs-notify/src/lib.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7e61f4c59ee5d0b960c5fd5221b7a129afc89133/crates%2Fvfs-notify%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e61f4c59ee5d0b960c5fd5221b7a129afc89133/crates%2Fvfs-notify%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fvfs-notify%2Fsrc%2Flib.rs?ref=7e61f4c59ee5d0b960c5fd5221b7a129afc89133", "patch": "@@ -89,8 +89,8 @@ impl LoaderActor {\n             match event {\n                 Event::Message(msg) => match msg {\n                     Message::Config(config) => {\n-                        let n_entries_total = config.load.len();\n-                        self.send(loader::Message::Progress { n_entries_total, n_entries_done: 0 });\n+                        let n_total = config.load.len();\n+                        self.send(loader::Message::Progress { n_total, n_done: 0 });\n \n                         self.unwatch_all();\n                         self.config.clear();\n@@ -99,10 +99,7 @@ impl LoaderActor {\n                             let watch = config.watch.contains(&i);\n                             let files = self.load_entry(entry, watch);\n                             self.send(loader::Message::Loaded { files });\n-                            self.send(loader::Message::Progress {\n-                                n_entries_total,\n-                                n_entries_done: i + 1,\n-                            });\n+                            self.send(loader::Message::Progress { n_total, n_done: i + 1 });\n                         }\n                         self.config.sort_by(|x, y| x.0.cmp(&y.0));\n                     }\n@@ -199,7 +196,7 @@ impl LoaderActor {\n                         let is_dir = entry.file_type().is_dir();\n                         let is_file = entry.file_type().is_file();\n                         let abs_path = AbsPathBuf::try_from(entry.into_path()).unwrap();\n-                        if is_dir {\n+                        if is_dir && watch {\n                             self.watch(abs_path.clone());\n                         }\n                         let rel_path = abs_path.strip_prefix(&path)?;"}, {"sha": "6de2e5b3f9501f5560e9e11fcdf8b00f9a776d2e", "filename": "crates/vfs/src/loader.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7e61f4c59ee5d0b960c5fd5221b7a129afc89133/crates%2Fvfs%2Fsrc%2Floader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e61f4c59ee5d0b960c5fd5221b7a129afc89133/crates%2Fvfs%2Fsrc%2Floader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fvfs%2Fsrc%2Floader.rs?ref=7e61f4c59ee5d0b960c5fd5221b7a129afc89133", "patch": "@@ -16,7 +16,7 @@ pub struct Config {\n }\n \n pub enum Message {\n-    Progress { n_entries_total: usize, n_entries_done: usize },\n+    Progress { n_total: usize, n_done: usize },\n     Loaded { files: Vec<(AbsPathBuf, Option<Vec<u8>>)> },\n }\n \n@@ -56,10 +56,10 @@ impl fmt::Debug for Message {\n             Message::Loaded { files } => {\n                 f.debug_struct(\"Loaded\").field(\"n_files\", &files.len()).finish()\n             }\n-            Message::Progress { n_entries_total, n_entries_done } => f\n+            Message::Progress { n_total, n_done } => f\n                 .debug_struct(\"Progress\")\n-                .field(\"n_entries_total\", n_entries_total)\n-                .field(\"n_entries_done\", n_entries_done)\n+                .field(\"n_total\", n_total)\n+                .field(\"n_done\", n_done)\n                 .finish(),\n         }\n     }"}]}