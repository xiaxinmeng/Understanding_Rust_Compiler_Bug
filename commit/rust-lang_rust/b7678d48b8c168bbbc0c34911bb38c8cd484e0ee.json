{"sha": "b7678d48b8c168bbbc0c34911bb38c8cd484e0ee", "node_id": "C_kwDOAAsO6NoAKGI3Njc4ZDQ4YjhjMTY4YmJiYzBjMzQ5MTFiYjM4YzhjZDQ4NGUwZWU", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2023-01-13T17:59:21Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2023-03-16T10:19:31Z"}, "message": "Only inline `{}` string literals in format_args.\n\nPlaceholders like {:123} would incorrectly get inlined.", "tree": {"sha": "8e2a0e115bf4a742e378cc032d87c878089b350f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e2a0e115bf4a742e378cc032d87c878089b350f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7678d48b8c168bbbc0c34911bb38c8cd484e0ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7678d48b8c168bbbc0c34911bb38c8cd484e0ee", "html_url": "https://github.com/rust-lang/rust/commit/b7678d48b8c168bbbc0c34911bb38c8cd484e0ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7678d48b8c168bbbc0c34911bb38c8cd484e0ee/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "caa6ba9e86281eb1fbdd87d5100cc7e92ba07f5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/caa6ba9e86281eb1fbdd87d5100cc7e92ba07f5c", "html_url": "https://github.com/rust-lang/rust/commit/caa6ba9e86281eb1fbdd87d5100cc7e92ba07f5c"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "96ca81d823bd634beb07fce6cac1df896b06c336", "filename": "compiler/rustc_ast_lowering/src/format.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b7678d48b8c168bbbc0c34911bb38c8cd484e0ee/compiler%2Frustc_ast_lowering%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7678d48b8c168bbbc0c34911bb38c8cd484e0ee/compiler%2Frustc_ast_lowering%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fformat.rs?ref=b7678d48b8c168bbbc0c34911bb38c8cd484e0ee", "patch": "@@ -124,6 +124,7 @@ fn inline_literals(mut fmt: Cow<'_, FormatArgs>) -> Cow<'_, FormatArgs> {\n         let FormatArgsPiece::Placeholder(placeholder) = &fmt.template[i] else { continue };\n         let Ok(arg_index) = placeholder.argument.index else { continue };\n         if let FormatTrait::Display = placeholder.format_trait\n+            && placeholder.format_options == Default::default()\n             && let arg = fmt.arguments.all_args()[arg_index].expr.peel_parens_and_refs()\n             && let ExprKind::Lit(lit) = arg.kind\n             && let token::LitKind::Str | token::LitKind::StrRaw(_) = lit.kind"}]}