{"sha": "206dd91742b43ffa81463e53671afdc412699905", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwNmRkOTE3NDJiNDNmZmE4MTQ2M2U1MzY3MWFmZGM0MTI2OTk5MDU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-08T22:51:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-08T22:51:39Z"}, "message": "auto merge of #14832 : alexcrichton/rust/no-rpath, r=brson\n\nThis commit disables rustc's emission of rpath attributes into dynamic libraries\r\nand executables by default. The functionality is still preserved, but it must\r\nnow be manually enabled via a `-C rpath` flag.\r\n\r\nThis involved a few changes to the local build system:\r\n\r\n* --disable-rpath is now the default configure option\r\n* Makefiles now prefer our own LD_LIBRARY_PATH over the user's LD_LIBRARY_PATH\r\n  in order to support building rust with rust already installed.\r\n* The compiletest program was taught to correctly pass through the aux dir as a\r\n  component of LD_LIBRARY_PATH in more situations.\r\n\r\nThe major impact of this change is that neither rustdoc nor rustc will work\r\nout-of-the-box in all situations because they are dynamically linked. It must be\r\narranged to ensure that the libraries of a rust installation are part of the\r\nLD_LIBRARY_PATH. The default installation paths for all platforms ensure this,\r\nbut if an installation is in a nonstandard location, then configuration may be\r\nnecessary.\r\n\r\nAdditionally, for all developers of rustc, it will no longer be possible to run\r\n$target/stageN/bin/rustc out-of-the-box. The old behavior can be regained\r\nthrough the `--enable-rpath` option to the configure script.\r\n\r\nThis change brings linux/mac installations in line with windows installations\r\nwhere rpath is not possible.\r\n\r\nCloses #11747\r\n[breaking-change]", "tree": {"sha": "9fb37452be434b72f124baacb8fbe469bc829702", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9fb37452be434b72f124baacb8fbe469bc829702"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/206dd91742b43ffa81463e53671afdc412699905", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/206dd91742b43ffa81463e53671afdc412699905", "html_url": "https://github.com/rust-lang/rust/commit/206dd91742b43ffa81463e53671afdc412699905", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/206dd91742b43ffa81463e53671afdc412699905/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8bb34a3146e6ba4bc7902a85de90cf4f8064ace0", "url": "https://api.github.com/repos/rust-lang/rust/commits/8bb34a3146e6ba4bc7902a85de90cf4f8064ace0", "html_url": "https://github.com/rust-lang/rust/commit/8bb34a3146e6ba4bc7902a85de90cf4f8064ace0"}, {"sha": "a0546ded103e4f00f0036becd6055a887fa53b80", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0546ded103e4f00f0036becd6055a887fa53b80", "html_url": "https://github.com/rust-lang/rust/commit/a0546ded103e4f00f0036becd6055a887fa53b80"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "135bdcd3782f06d54435328ab53e2e4f7f56bd86", "filename": "configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/206dd91742b43ffa81463e53671afdc412699905/configure", "raw_url": "https://github.com/rust-lang/rust/raw/206dd91742b43ffa81463e53671afdc412699905/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=206dd91742b43ffa81463e53671afdc412699905", "patch": "@@ -418,7 +418,7 @@ opt ccache 0 \"invoke gcc/clang via ccache to reuse object files between builds\"\n opt local-rust 0 \"use an installed rustc rather than downloading a snapshot\"\n opt inject-std-version 1 \"inject the current compiler version of libstd into programs\"\n opt llvm-static-stdcpp 0 \"statically link to libstdc++ for LLVM\"\n-opt rpath 1 \"build rpaths into rustc itself\"\n+opt rpath 0 \"build rpaths into rustc itself\"\n opt nightly 0 \"build nightly packages\"\n opt verify-install 1 \"verify installed binaries work\"\n opt jemalloc 1 \"build liballoc with jemalloc\""}, {"sha": "2484960cac6da5f2d9b78056b573ca9a62bbd1a2", "filename": "man/rustc.1", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/206dd91742b43ffa81463e53671afdc412699905/man%2Frustc.1", "raw_url": "https://github.com/rust-lang/rust/raw/206dd91742b43ffa81463e53671afdc412699905/man%2Frustc.1", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/man%2Frustc.1?ref=206dd91742b43ffa81463e53671afdc412699905", "patch": "@@ -138,8 +138,8 @@ A space-separated list of arguments to pass through to LLVM.\n If specified, the compiler will save more files (.bc, .o, .no-opt.bc) generated\n throughout compilation in the output directory.\n .TP\n-\\fBno-rpath\\fR\n-If specified, then the rpath value for dynamic libraries will not be set in\n+\\fBrpath\\fR\n+If specified, then the rpath value for dynamic libraries will be set in\n either dynamic library or executable outputs.\n .TP\n \\fBno-prepopulate-passes\\fR"}, {"sha": "7400b39c9680ca2d278e948f398b78fdbb7ab971", "filename": "mk/main.mk", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/206dd91742b43ffa81463e53671afdc412699905/mk%2Fmain.mk", "raw_url": "https://github.com/rust-lang/rust/raw/206dd91742b43ffa81463e53671afdc412699905/mk%2Fmain.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fmain.mk?ref=206dd91742b43ffa81463e53671afdc412699905", "patch": "@@ -122,8 +122,8 @@ endif\n ifdef TRACE\n   CFG_RUSTC_FLAGS += -Z trace\n endif\n-ifdef CFG_DISABLE_RPATH\n-CFG_RUSTC_FLAGS += -C no-rpath\n+ifdef CFG_ENABLE_RPATH\n+CFG_RUSTC_FLAGS += -C rpath\n endif\n \n # The executables crated during this compilation process have no need to include"}, {"sha": "e2264088b4a84ab2f986470ff9ffb3f498498b62", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/206dd91742b43ffa81463e53671afdc412699905/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/206dd91742b43ffa81463e53671afdc412699905/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=206dd91742b43ffa81463e53671afdc412699905", "patch": "@@ -1363,7 +1363,7 @@ fn link_args(cmd: &mut Command,\n         if sess.targ_cfg.os == abi::OsMacos {\n             cmd.args([\"-dynamiclib\", \"-Wl,-dylib\"]);\n \n-            if !sess.opts.cg.no_rpath {\n+            if sess.opts.cg.rpath {\n                 let mut v = Vec::from_slice(\"-Wl,-install_name,@rpath/\".as_bytes());\n                 v.push_all(out_filename.filename().unwrap());\n                 cmd.arg(v.as_slice());\n@@ -1382,7 +1382,7 @@ fn link_args(cmd: &mut Command,\n     // FIXME (#2397): At some point we want to rpath our guesses as to\n     // where extern libraries might live, based on the\n     // addl_lib_search_paths\n-    if !sess.opts.cg.no_rpath {\n+    if sess.opts.cg.rpath {\n         cmd.args(rpath::get_rpath_flags(sess, out_filename).as_slice());\n     }\n "}, {"sha": "9daaa2792ebad0e0140f55234769fc236645fc7d", "filename": "src/librustc/driver/config.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/206dd91742b43ffa81463e53671afdc412699905/src%2Flibrustc%2Fdriver%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/206dd91742b43ffa81463e53671afdc412699905/src%2Flibrustc%2Fdriver%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fconfig.rs?ref=206dd91742b43ffa81463e53671afdc412699905", "patch": "@@ -306,8 +306,8 @@ cgoptions!(\n         \"a list of arguments to pass to llvm (space separated)\"),\n     save_temps: bool = (false, parse_bool,\n         \"save all temporary output files during compilation\"),\n-    no_rpath: bool = (false, parse_bool,\n-        \"disables setting the rpath in libs/exes\"),\n+    rpath: bool = (false, parse_bool,\n+        \"set rpath values in libs/exes\"),\n     no_prepopulate_passes: bool = (false, parse_bool,\n         \"don't pre-populate the pass manager with a list of passes\"),\n     no_vectorize_loops: bool = (false, parse_bool,"}]}