{"sha": "64857de2bd49ddf24600835cc3a7d5917504c769", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0ODU3ZGUyYmQ0OWRkZjI0NjAwODM1Y2MzYTdkNTkxNzUwNGM3Njk=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2018-12-15T15:35:55Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2019-01-03T22:34:53Z"}, "message": "hack-fix to rustdoc", "tree": {"sha": "3ca1e970c8450a602ff1f9b9cdc16bffe28dcaf8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ca1e970c8450a602ff1f9b9cdc16bffe28dcaf8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64857de2bd49ddf24600835cc3a7d5917504c769", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64857de2bd49ddf24600835cc3a7d5917504c769", "html_url": "https://github.com/rust-lang/rust/commit/64857de2bd49ddf24600835cc3a7d5917504c769", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64857de2bd49ddf24600835cc3a7d5917504c769/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2aa7485d28f684834630b754bd68bb5850f2f4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2aa7485d28f684834630b754bd68bb5850f2f4a", "html_url": "https://github.com/rust-lang/rust/commit/c2aa7485d28f684834630b754bd68bb5850f2f4a"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "0183e0932601ce838a051a1973313dfa5117730d", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/64857de2bd49ddf24600835cc3a7d5917504c769/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64857de2bd49ddf24600835cc3a7d5917504c769/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=64857de2bd49ddf24600835cc3a7d5917504c769", "patch": "@@ -2643,13 +2643,24 @@ impl<'tcx> Clean<Type> for Ty<'tcx> {\n                 }\n             }\n             ty::Dynamic(ref obj, ref reg) => {\n-                let principal = obj.principal();\n-                let did = principal.def_id();\n+                // HACK: pick the first `did` as the `did` of the trait object. Someone\n+                // might want to implement \"native\" support for marker-trait-only\n+                // trait objects.\n+                let mut dids = obj.principal_def_id().into_iter().chain(obj.auto_traits());\n+                let did = dids.next().unwrap_or_else(|| {\n+                    panic!(\"found trait object `{:?}` with no traits?\", self)\n+                });\n+                let substs = match obj.principal() {\n+                    Some(principal) => principal.skip_binder().substs,\n+                    // marker traits have no substs.\n+                    _ => cx.tcx.intern_substs(&[])\n+                };\n+\n                 inline::record_extern_fqn(cx, did, TypeKind::Trait);\n \n                 let mut typarams = vec![];\n                 reg.clean(cx).map(|b| typarams.push(GenericBound::Outlives(b)));\n-                for did in obj.auto_traits() {\n+                for did in dids {\n                     let empty = cx.tcx.intern_substs(&[]);\n                     let path = external_path(cx, &cx.tcx.item_name(did).as_str(),\n                         Some(did), false, vec![], empty);\n@@ -2675,7 +2686,7 @@ impl<'tcx> Clean<Type> for Ty<'tcx> {\n                 }\n \n                 let path = external_path(cx, &cx.tcx.item_name(did).as_str(), Some(did),\n-                    false, bindings, principal.skip_binder().substs);\n+                    false, bindings, substs);\n                 ResolvedPath {\n                     path,\n                     typarams: Some(typarams),"}]}