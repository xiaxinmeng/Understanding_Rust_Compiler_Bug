{"sha": "2220d0f20f7faf63de3bb805fcfa0fa7a4c416ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyMjBkMGYyMGY3ZmFmNjNkZTNiYjgwNWZjZmEwZmE3YTRjNDE2ZWU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-26T23:21:16Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-27T00:23:48Z"}, "message": "rustc: Make core injection a timed pass\n\nIt's not much of a pass, but lets be consistent", "tree": {"sha": "89ed195466f5ee29d8de2c13fdbd32a4098995e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89ed195466f5ee29d8de2c13fdbd32a4098995e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2220d0f20f7faf63de3bb805fcfa0fa7a4c416ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2220d0f20f7faf63de3bb805fcfa0fa7a4c416ee", "html_url": "https://github.com/rust-lang/rust/commit/2220d0f20f7faf63de3bb805fcfa0fa7a4c416ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2220d0f20f7faf63de3bb805fcfa0fa7a4c416ee/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5610205363eb56b2fd7ce6daeaa3b20a659398a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/5610205363eb56b2fd7ce6daeaa3b20a659398a5", "html_url": "https://github.com/rust-lang/rust/commit/5610205363eb56b2fd7ce6daeaa3b20a659398a5"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "92275d360ed9004913a90effc8c6225d4b8d202d", "filename": "src/comp/driver/driver.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2220d0f20f7faf63de3bb805fcfa0fa7a4c416ee/src%2Fcomp%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2220d0f20f7faf63de3bb805fcfa0fa7a4c416ee/src%2Fcomp%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Fdriver.rs?ref=2220d0f20f7faf63de3bb805fcfa0fa7a4c416ee", "patch": "@@ -127,7 +127,9 @@ fn compile_upto(sess: session, cfg: ast::crate_cfg,\n \n     if upto == cu_expand { ret {crate: crate, tcx: none}; }\n \n-    crate = front::core_inject::maybe_inject_libcore_ref(sess, crate);\n+    crate =\n+        time(time_passes, \"core injection\",\n+             bind front::core_inject::maybe_inject_libcore_ref(sess, crate));\n \n     let ast_map =\n         time(time_passes, \"ast indexing\","}]}