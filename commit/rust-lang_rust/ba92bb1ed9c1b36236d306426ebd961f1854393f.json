{"sha": "ba92bb1ed9c1b36236d306426ebd961f1854393f", "node_id": "C_kwDOAAsO6NoAKGJhOTJiYjFlZDljMWIzNjIzNmQzMDY0MjZlYmQ5NjFmMTg1NDM5M2Y", "commit": {"author": {"name": "Jake Heinz", "email": "jh@discordapp.com", "date": "2021-12-01T12:25:08Z"}, "committer": {"name": "Jake Heinz", "email": "jh@discordapp.com", "date": "2021-12-01T12:25:08Z"}, "message": "simplify", "tree": {"sha": "49919a1094011be77b431fd597bb4bc8effd5992", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49919a1094011be77b431fd597bb4bc8effd5992"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba92bb1ed9c1b36236d306426ebd961f1854393f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba92bb1ed9c1b36236d306426ebd961f1854393f", "html_url": "https://github.com/rust-lang/rust/commit/ba92bb1ed9c1b36236d306426ebd961f1854393f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba92bb1ed9c1b36236d306426ebd961f1854393f/comments", "author": {"login": "jhgg", "id": 5489149, "node_id": "MDQ6VXNlcjU0ODkxNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5489149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhgg", "html_url": "https://github.com/jhgg", "followers_url": "https://api.github.com/users/jhgg/followers", "following_url": "https://api.github.com/users/jhgg/following{/other_user}", "gists_url": "https://api.github.com/users/jhgg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhgg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhgg/subscriptions", "organizations_url": "https://api.github.com/users/jhgg/orgs", "repos_url": "https://api.github.com/users/jhgg/repos", "events_url": "https://api.github.com/users/jhgg/events{/privacy}", "received_events_url": "https://api.github.com/users/jhgg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jhgg", "id": 5489149, "node_id": "MDQ6VXNlcjU0ODkxNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5489149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhgg", "html_url": "https://github.com/jhgg", "followers_url": "https://api.github.com/users/jhgg/followers", "following_url": "https://api.github.com/users/jhgg/following{/other_user}", "gists_url": "https://api.github.com/users/jhgg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhgg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhgg/subscriptions", "organizations_url": "https://api.github.com/users/jhgg/orgs", "repos_url": "https://api.github.com/users/jhgg/repos", "events_url": "https://api.github.com/users/jhgg/events{/privacy}", "received_events_url": "https://api.github.com/users/jhgg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2480ecb9f037d575a25496682f55295677cd980", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2480ecb9f037d575a25496682f55295677cd980", "html_url": "https://github.com/rust-lang/rust/commit/d2480ecb9f037d575a25496682f55295677cd980"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "2f4dab4967b3c2156a33b1fc54e1c33d662e270f", "filename": "crates/ide/src/syntax_highlighting/highlight.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ba92bb1ed9c1b36236d306426ebd961f1854393f/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba92bb1ed9c1b36236d306426ebd961f1854393f/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs?ref=ba92bb1ed9c1b36236d306426ebd961f1854393f", "patch": "@@ -286,7 +286,7 @@ fn highlight_name_ref(\n                     // within a function with a self param, pretend to still be `self`, rather than\n                     // an unresolved reference.\n                     if name_ref.self_token().is_some() && is_in_fn_with_self_param(&name_ref) {\n-                        HlTag::Symbol(SymbolKind::SelfParam).into()\n+                        SymbolKind::SelfParam.into()\n                     } else {\n                         HlTag::UnresolvedReference.into()\n                     }"}]}