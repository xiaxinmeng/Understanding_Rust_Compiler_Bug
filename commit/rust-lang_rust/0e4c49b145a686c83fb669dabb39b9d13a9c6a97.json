{"sha": "0e4c49b145a686c83fb669dabb39b9d13a9c6a97", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlNGM0OWIxNDVhNjg2YzgzZmI2NjlkYWJiMzliOWQxM2E5YzZhOTc=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-08-09T07:59:38Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-08-14T07:43:26Z"}, "message": "Handfix dogfood issues with the rustfmt changes", "tree": {"sha": "44e0c6c556d6ef508f656c25bf8d1448efa63048", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44e0c6c556d6ef508f656c25bf8d1448efa63048"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e4c49b145a686c83fb669dabb39b9d13a9c6a97", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAlmRVJ4ACgkQpp+NIls6\n19kccxAAiE7GE4j6TC0phHPP8HDETguKKinRTRZN7thdiwCDekt0K6Npxx1BLJXh\nbGnJboS7aOer3qiHv9TTNk4s/H8wFYlx9kVktXzCpsc8ZRoiGdq3zOXeK7HNzi89\n/cZEg17LQ5cYIEzoL0cjy2dqkVzubRPW9s+I1Cwkl4/44IbD7dD1sN4cwivvwD2S\nZfjMBp1NzOIauCWoVNShuoTJ0qA319ofM1escRviKyem6CVUqmYCjXJkI/JQI1qa\nCETxJZhfLPTA+geYJkmSXV0bYgwqhQHlmvGSazbuA+H3Jg3TCaQkKA51M3ApPt/e\nCJss+f/UucGNOoy+pvlaj/BbnZB0Y3AypK4bqreEfXW3id4VyeVuiveY7I/ZweMd\nUPFGobA/aCDcblANUhJ7nqz8bvIFoYazlsNldaCZ9KR9n+ONhMszjkZPGZC79gNy\nr+WVIizhvsGqIi6OW/ea2z/NcYzmWpg0QczL8X+ucmLPsJqndv5+/SGqV/XeXq4V\n1wHFptBw9tzrWQGcGf81GLpRuzqXuUPCScmal2vSvIHPnzPikoNk1oZXHRnwI7Hs\nFy0LsIYg+xlAndMa1i9lio13W4xcXsk4dtPqokWtPtecelghx84z1dE5e+VuN0Sc\nMliFwPFYt3q/52HFqmk6mTL41TrLuTHBHEPHOszkVKgIawni9NY=\n=bpe3\n-----END PGP SIGNATURE-----", "payload": "tree 44e0c6c556d6ef508f656c25bf8d1448efa63048\nparent b25b6b3355efa33c797f4a37afb2f516531ad581\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1502265578 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1502696606 +0200\n\nHandfix dogfood issues with the rustfmt changes\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e4c49b145a686c83fb669dabb39b9d13a9c6a97", "html_url": "https://github.com/rust-lang/rust/commit/0e4c49b145a686c83fb669dabb39b9d13a9c6a97", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e4c49b145a686c83fb669dabb39b9d13a9c6a97/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b25b6b3355efa33c797f4a37afb2f516531ad581", "url": "https://api.github.com/repos/rust-lang/rust/commits/b25b6b3355efa33c797f4a37afb2f516531ad581", "html_url": "https://github.com/rust-lang/rust/commit/b25b6b3355efa33c797f4a37afb2f516531ad581"}], "stats": {"total": 63, "additions": 20, "deletions": 43}, "files": [{"sha": "21b8bf6b5f5f1165a5a69dbae5e6b0c266fb3ebd", "filename": "clippy_lints/src/lifetimes.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0e4c49b145a686c83fb669dabb39b9d13a9c6a97/clippy_lints%2Fsrc%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e4c49b145a686c83fb669dabb39b9d13a9c6a97/clippy_lints%2Fsrc%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flifetimes.rs?ref=0e4c49b145a686c83fb669dabb39b9d13a9c6a97", "patch": "@@ -192,10 +192,10 @@ fn could_use_elision<'a, 'tcx: 'a>(\n         // no output lifetimes, check distinctness of input lifetimes\n \n         // only unnamed and static, ok\n-        if input_lts.iter().all(|lt| {\n+        let unnamed_and_static = input_lts.iter().all(|lt| {\n             *lt == RefLt::Unnamed || *lt == RefLt::Static\n-        })\n-        {\n+        });\n+        if unnamed_and_static {\n             return false;\n         }\n         // we have no output reference, so we only need all distinct lifetimes"}, {"sha": "8f62494109fada887c087acca2b76eb6de3c26d6", "filename": "clippy_lints/src/missing_doc.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0e4c49b145a686c83fb669dabb39b9d13a9c6a97/clippy_lints%2Fsrc%2Fmissing_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e4c49b145a686c83fb669dabb39b9d13a9c6a97/clippy_lints%2Fsrc%2Fmissing_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_doc.rs?ref=0e4c49b145a686c83fb669dabb39b9d13a9c6a97", "patch": "@@ -21,6 +21,7 @@\n // \n //\n //\n+//\n // rs#L246\n //\n "}, {"sha": "a28dc42a8f07c31b936c104d42822fa25744b465", "filename": "clippy_lints/src/non_expressive_names.rs", "status": "modified", "additions": 9, "deletions": 32, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/0e4c49b145a686c83fb669dabb39b9d13a9c6a97/clippy_lints%2Fsrc%2Fnon_expressive_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e4c49b145a686c83fb669dabb39b9d13a9c6a97/clippy_lints%2Fsrc%2Fnon_expressive_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_expressive_names.rs?ref=0e4c49b145a686c83fb669dabb39b9d13a9c6a97", "patch": "@@ -104,26 +104,7 @@ fn get_whitelist(interned_name: &str) -> Option<&'static [&'static str]> {\n }\n \n fn whitelisted(interned_name: &str, list: &[&str]) -> bool {\n-    if list.iter().any(|&name| interned_name == name) {\n-        return true;\n-    }\n-    for name in list {\n-        // name_*\n-        if interned_name.chars().zip(name.chars()).all(|(l, r)| l == r) {\n-            return true;\n-        }\n-        // *_name\n-        if interned_name.chars().rev().zip(name.chars().rev()).all(\n-            |(l,\n-              r)| {\n-                l == r\n-            },\n-        )\n-        {\n-            return true;\n-        }\n-    }\n-    false\n+    list.iter().any(|&name| interned_name.starts_with(name) || interned_name.ends_with(name))\n }\n \n impl<'a, 'tcx, 'b> SimilarNamesNameVisitor<'a, 'tcx, 'b> {\n@@ -180,19 +161,19 @@ impl<'a, 'tcx, 'b> SimilarNamesNameVisitor<'a, 'tcx, 'b> {\n                 let first_e = existing_chars.next().expect(\n                     \"we know we have at least one char\",\n                 );\n-                let eq_or_numeric = |a: char, b: char| a == b || a.is_numeric() && b.is_numeric();\n+                let eq_or_numeric = |(a, b): (char, char)| a == b || a.is_numeric() && b.is_numeric();\n \n-                if eq_or_numeric(first_i, first_e) {\n+                if eq_or_numeric((first_i, first_e)) {\n                     let last_i = interned_chars.next_back().expect(\n                         \"we know we have at least two chars\",\n                     );\n                     let last_e = existing_chars.next_back().expect(\n                         \"we know we have at least two chars\",\n                     );\n-                    if eq_or_numeric(last_i, last_e) {\n+                    if eq_or_numeric((last_i, last_e)) {\n                         if interned_chars\n                             .zip(existing_chars)\n-                            .filter(|&(i, e)| !eq_or_numeric(i, e))\n+                            .filter(|&ie| !eq_or_numeric(ie))\n                             .count() != 1\n                         {\n                             continue;\n@@ -204,10 +185,8 @@ impl<'a, 'tcx, 'b> SimilarNamesNameVisitor<'a, 'tcx, 'b> {\n                         let second_last_e = existing_chars.next_back().expect(\n                             \"we know we have at least three chars\",\n                         );\n-                        if !eq_or_numeric(second_last_i, second_last_e) || second_last_i == '_' ||\n-                            !interned_chars.zip(existing_chars).all(|(i, e)| {\n-                                eq_or_numeric(i, e)\n-                            })\n+                        if !eq_or_numeric((second_last_i, second_last_e)) || second_last_i == '_' ||\n+                            !interned_chars.zip(existing_chars).all(eq_or_numeric)\n                         {\n                             // allowed similarity foo_x, foo_y\n                             // or too many chars differ (foo_x, boo_y) or (foox, booy)\n@@ -222,10 +201,8 @@ impl<'a, 'tcx, 'b> SimilarNamesNameVisitor<'a, 'tcx, 'b> {\n                     let second_e = existing_chars.next().expect(\n                         \"we know we have at least two chars\",\n                     );\n-                    if !eq_or_numeric(second_i, second_e) || second_i == '_' ||\n-                        !interned_chars.zip(existing_chars).all(|(i, e)| {\n-                            eq_or_numeric(i, e)\n-                        })\n+                    if !eq_or_numeric((second_i, second_e)) || second_i == '_' ||\n+                        !interned_chars.zip(existing_chars).all(eq_or_numeric)\n                     {\n                         // allowed similarity x_foo, y_foo\n                         // or too many chars differ (x_foo, y_boo) or (xfoo, yboo)"}, {"sha": "df692b7e60c183e0a67ff6e9f4301af379326336", "filename": "src/lib.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/0e4c49b145a686c83fb669dabb39b9d13a9c6a97/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e4c49b145a686c83fb669dabb39b9d13a9c6a97/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=0e4c49b145a686c83fb669dabb39b9d13a9c6a97", "patch": "@@ -12,14 +12,13 @@ extern crate clippy_lints;\n #[plugin_registrar]\n pub fn plugin_registrar(reg: &mut Registry) {\n     if let Ok(lint_store) = reg.sess.lint_store.try_borrow() {\n-        if lint_store\n-               .get_lint_groups()\n-               .iter()\n-               .any(|&(s, _, _)| s == \"clippy\") {\n-            reg.sess\n-                .struct_warn(\"running cargo clippy on a crate that also imports the clippy plugin\")\n-                .emit();\n-            return;\n+        for (lint, _, _) in lint_store.get_lint_groups() {\n+            if lint == \"clippy\" {\n+                reg.sess\n+                    .struct_warn(\"running cargo clippy on a crate that also imports the clippy plugin\")\n+                    .emit();\n+                return;\n+            }\n         }\n     }\n "}]}