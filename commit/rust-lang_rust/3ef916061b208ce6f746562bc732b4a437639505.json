{"sha": "3ef916061b208ce6f746562bc732b4a437639505", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlZjkxNjA2MWIyMDhjZTZmNzQ2NTYyYmM3MzJiNGE0Mzc2Mzk1MDU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-17T17:09:07Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-17T17:09:07Z"}, "message": "More precise types", "tree": {"sha": "51df022b777dfb71be8af6b2f34599d6c13fab07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51df022b777dfb71be8af6b2f34599d6c13fab07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ef916061b208ce6f746562bc732b4a437639505", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ef916061b208ce6f746562bc732b4a437639505", "html_url": "https://github.com/rust-lang/rust/commit/3ef916061b208ce6f746562bc732b4a437639505", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ef916061b208ce6f746562bc732b4a437639505/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c818f5c65e67c93a55cbf7b1b6ded983d8f392b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/c818f5c65e67c93a55cbf7b1b6ded983d8f392b8", "html_url": "https://github.com/rust-lang/rust/commit/c818f5c65e67c93a55cbf7b1b6ded983d8f392b8"}], "stats": {"total": 27, "additions": 15, "deletions": 12}, "files": [{"sha": "5302f6ed22386db8db717fcdffcbb0bd136a95d2", "filename": "crates/ra_cli/src/main.rs", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/3ef916061b208ce6f746562bc732b4a437639505/crates%2Fra_cli%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ef916061b208ce6f746562bc732b4a437639505/crates%2Fra_cli%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cli%2Fsrc%2Fmain.rs?ref=3ef916061b208ce6f746562bc732b4a437639505", "patch": "@@ -12,12 +12,15 @@ use ra_ide::{file_structure, Analysis};\n use ra_prof::profile;\n use ra_syntax::{AstNode, SourceFile};\n \n-type Result<T> = std::result::Result<T, Box<dyn Error + Send + Sync>>;\n+type Result<T, E = Box<dyn Error + Send + Sync>> = std::result::Result<T, E>;\n \n fn main() -> Result<()> {\n     env_logger::try_init()?;\n \n-    let command = Command::from_args()?;\n+    let command = match Command::from_args()? {\n+        Ok(it) => it,\n+        Err(HelpPrinted) => return Ok(()),\n+    };\n     match command {\n         Command::Parse { no_dump } => {\n             let _p = profile(\"parsing\");\n@@ -51,7 +54,6 @@ fn main() -> Result<()> {\n         Command::Bench { verbosity, path, op } => {\n             analysis_bench::run(verbosity, path.as_ref(), op)?;\n         }\n-        Command::HelpPrinted => (),\n     }\n \n     Ok(())\n@@ -101,11 +103,12 @@ enum Command {\n         path: PathBuf,\n         op: analysis_bench::Op,\n     },\n-    HelpPrinted,\n }\n \n+struct HelpPrinted;\n+\n impl Command {\n-    fn from_args() -> Result<Command> {\n+    fn from_args() -> Result<Result<Command, HelpPrinted>> {\n         let mut matches = Arguments::from_env();\n         let subcommand = matches.subcommand()?.unwrap_or_default();\n \n@@ -136,7 +139,7 @@ FLAGS:\n     -h, --help       Prints help inforamtion\n         --no-dump\"\n                     );\n-                    return Ok(Command::HelpPrinted);\n+                    return Ok(Err(HelpPrinted));\n                 }\n \n                 let no_dump = matches.contains(\"--no-dump\");\n@@ -155,7 +158,7 @@ USAGE:\n FLAGS:\n     -h, --help    Prints help inforamtion\"\n                     );\n-                    return Ok(Command::HelpPrinted);\n+                    return Ok(Err(HelpPrinted));\n                 }\n \n                 matches.finish().or_else(handle_extra_flags)?;\n@@ -175,7 +178,7 @@ FLAGS:\n     -h, --help       Prints help information\n     -r, --rainbow\"\n                     );\n-                    return Ok(Command::HelpPrinted);\n+                    return Ok(Err(HelpPrinted));\n                 }\n \n                 let rainbow = matches.contains([\"-r\", \"--rainbow\"]);\n@@ -203,7 +206,7 @@ OPTIONS:\n ARGS:\n     <PATH>\"\n                     );\n-                    return Ok(Command::HelpPrinted);\n+                    return Ok(Err(HelpPrinted));\n                 }\n \n                 let randomize = matches.contains(\"--randomize\");\n@@ -240,7 +243,7 @@ OPTIONS:\n ARGS:\n     <PATH>    Project to analyse\"\n                     );\n-                    return Ok(Command::HelpPrinted);\n+                    return Ok(Err(HelpPrinted));\n                 }\n \n                 let path: PathBuf = matches.opt_value_from_str(\"--path\")?.unwrap_or_default();\n@@ -275,10 +278,10 @@ SUBCOMMANDS:\n     parse\n     symbols\"\n                 );\n-                return Ok(Command::HelpPrinted);\n+                return Ok(Err(HelpPrinted));\n             }\n         };\n-        Ok(command)\n+        Ok(Ok(command))\n     }\n }\n "}]}