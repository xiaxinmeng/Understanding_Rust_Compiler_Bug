{"sha": "4ef72570189401dee5b148fd423b36cfd37fa3f7", "node_id": "C_kwDOAAsO6NoAKDRlZjcyNTcwMTg5NDAxZGVlNWIxNDhmZDQyM2IzNmNmZDM3ZmEzZjc", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2023-06-09T14:29:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-06-09T14:29:02Z"}, "message": "Rollup merge of #112442 - compiler-errors:next-solver-deduplicate-region-constraints, r=lcnr\n\nDeduplicate identical region constraints in new solver\n\nthe new solver doesn't track whether we've already proven a goal like the fulfillment context's obligation forest does, so we may be instantiating a canonical response (and specifically, its nested region obligations) quite a few times.\n\nThis may lead to exponentially gathering up identical region constraints for things like auto traits, so let's deduplicate region constraints when in `compute_external_query_constraints`.\n\nr? ``@lcnr``", "tree": {"sha": "faf1c9d11e60fd3df5941ae1679293cd7d0e8d87", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/faf1c9d11e60fd3df5941ae1679293cd7d0e8d87"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ef72570189401dee5b148fd423b36cfd37fa3f7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkgzcuCRBK7hj4Ov3rIwAAD2EIAFaKkTlCm5DIRlS558Y9mt4C\nYv6puoORbIQeTKgLoiANr2qpmAlYZtpyvkFUIN+LtuSEjWjjMO3AnX3Q7ADmEe1H\nws/3OsI5xHKOh6+3czSRtdR3PFJ+B5WQi+Y1EvBAvfJYqaxNQNaVrixP3kzYQjCx\nUYQ0GKUGqXIDySQRNRE8fzCWz5g0bP3Wb1DY35x594B6kz4p7d5VfRp/okVH/uTC\nFdkIEhLFiB5IAYEuvwX0W6FexT1EJW5yINyXqHj/0syrmlNdCXv2KtTTtC/kMZ9t\na4wOO9TG4wdBmHsNBJjCTdZN2slswPeD6JPzMA/yiW4LjY79fsLMWhYiVF3QfWQ=\n=XuDw\n-----END PGP SIGNATURE-----\n", "payload": "tree faf1c9d11e60fd3df5941ae1679293cd7d0e8d87\nparent f83c8e43170da30341d4d4cfcdf7039dc7f987d3\nparent d5e25d40c969009d0f40cbf6280339f2839e19c4\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1686320942 +0200\ncommitter GitHub <noreply@github.com> 1686320942 +0200\n\nRollup merge of #112442 - compiler-errors:next-solver-deduplicate-region-constraints, r=lcnr\n\nDeduplicate identical region constraints in new solver\n\nthe new solver doesn't track whether we've already proven a goal like the fulfillment context's obligation forest does, so we may be instantiating a canonical response (and specifically, its nested region obligations) quite a few times.\n\nThis may lead to exponentially gathering up identical region constraints for things like auto traits, so let's deduplicate region constraints when in `compute_external_query_constraints`.\n\nr? ``@lcnr``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ef72570189401dee5b148fd423b36cfd37fa3f7", "html_url": "https://github.com/rust-lang/rust/commit/4ef72570189401dee5b148fd423b36cfd37fa3f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ef72570189401dee5b148fd423b36cfd37fa3f7/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f83c8e43170da30341d4d4cfcdf7039dc7f987d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/f83c8e43170da30341d4d4cfcdf7039dc7f987d3", "html_url": "https://github.com/rust-lang/rust/commit/f83c8e43170da30341d4d4cfcdf7039dc7f987d3"}, {"sha": "d5e25d40c969009d0f40cbf6280339f2839e19c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5e25d40c969009d0f40cbf6280339f2839e19c4", "html_url": "https://github.com/rust-lang/rust/commit/d5e25d40c969009d0f40cbf6280339f2839e19c4"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "72b3c3d01804aa928f9bd8b42020824372279dcb", "filename": "compiler/rustc_trait_selection/src/solve/eval_ctxt/canonical.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4ef72570189401dee5b148fd423b36cfd37fa3f7/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Feval_ctxt%2Fcanonical.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ef72570189401dee5b148fd423b36cfd37fa3f7/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Feval_ctxt%2Fcanonical.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Feval_ctxt%2Fcanonical.rs?ref=4ef72570189401dee5b148fd423b36cfd37fa3f7", "patch": "@@ -11,6 +11,7 @@\n use super::{CanonicalInput, Certainty, EvalCtxt, Goal};\n use crate::solve::canonicalize::{CanonicalizeMode, Canonicalizer};\n use crate::solve::{CanonicalResponse, QueryResult, Response};\n+use rustc_data_structures::fx::FxHashSet;\n use rustc_index::IndexVec;\n use rustc_infer::infer::canonical::query_response::make_query_region_constraints;\n use rustc_infer::infer::canonical::CanonicalVarValues;\n@@ -147,7 +148,7 @@ impl<'tcx> EvalCtxt<'_, 'tcx> {\n         // Cannot use `take_registered_region_obligations` as we may compute the response\n         // inside of a `probe` whenever we have multiple choices inside of the solver.\n         let region_obligations = self.infcx.inner.borrow().region_obligations().to_owned();\n-        let region_constraints = self.infcx.with_region_constraints(|region_constraints| {\n+        let mut region_constraints = self.infcx.with_region_constraints(|region_constraints| {\n             make_query_region_constraints(\n                 self.tcx(),\n                 region_obligations\n@@ -157,6 +158,9 @@ impl<'tcx> EvalCtxt<'_, 'tcx> {\n             )\n         });\n \n+        let mut seen = FxHashSet::default();\n+        region_constraints.outlives.retain(|outlives| seen.insert(*outlives));\n+\n         let mut opaque_types = self.infcx.clone_opaque_types_for_query_response();\n         // Only return opaque type keys for newly-defined opaques\n         opaque_types.retain(|(a, _)| {"}, {"sha": "f376f39a5a6624d33aab48b824c0c6a6e85f8f29", "filename": "tests/ui/traits/new-solver/dedup-regions.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/4ef72570189401dee5b148fd423b36cfd37fa3f7/tests%2Fui%2Ftraits%2Fnew-solver%2Fdedup-regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ef72570189401dee5b148fd423b36cfd37fa3f7/tests%2Fui%2Ftraits%2Fnew-solver%2Fdedup-regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnew-solver%2Fdedup-regions.rs?ref=4ef72570189401dee5b148fd423b36cfd37fa3f7", "patch": "@@ -0,0 +1,31 @@\n+// compile-flags: -Ztrait-solver=next\n+// check-pass\n+\n+struct A(*mut ());\n+\n+unsafe impl Send for A where A: 'static {}\n+\n+macro_rules! mk {\n+    ($name:ident $ty:ty) => {\n+        struct $name($ty, $ty, $ty, $ty, $ty, $ty, $ty, $ty, $ty, $ty);\n+    };\n+}\n+\n+mk!(B A);\n+mk!(C B);\n+mk!(D C);\n+mk!(E D);\n+mk!(F E);\n+mk!(G F);\n+mk!(H G);\n+mk!(I H);\n+mk!(J I);\n+mk!(K J);\n+mk!(L K);\n+mk!(M L);\n+\n+fn needs_send<T: Send>() {}\n+\n+fn main() {\n+    needs_send::<M>();\n+}"}]}