{"sha": "96e182833b5c17da2481e6edf5bfdb75ad004e6e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2ZTE4MjgzM2I1YzE3ZGEyNDgxZTZlZGY1YmZkYjc1YWQwMDRlNmU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-04-29T14:08:59Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-04-29T14:08:59Z"}, "message": "Auto merge of #50217 - z4v1er:patch-1, r=aturon\n\nFix typo", "tree": {"sha": "4cab6b025cd17a68884f7f3c20a74a362655cfc2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4cab6b025cd17a68884f7f3c20a74a362655cfc2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96e182833b5c17da2481e6edf5bfdb75ad004e6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96e182833b5c17da2481e6edf5bfdb75ad004e6e", "html_url": "https://github.com/rust-lang/rust/commit/96e182833b5c17da2481e6edf5bfdb75ad004e6e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96e182833b5c17da2481e6edf5bfdb75ad004e6e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d450f991388021cd023d879804dc3bc9b56b3a21", "url": "https://api.github.com/repos/rust-lang/rust/commits/d450f991388021cd023d879804dc3bc9b56b3a21", "html_url": "https://github.com/rust-lang/rust/commit/d450f991388021cd023d879804dc3bc9b56b3a21"}, {"sha": "011df4ac88b5ef31443f2bde8eea29b917445099", "url": "https://api.github.com/repos/rust-lang/rust/commits/011df4ac88b5ef31443f2bde8eea29b917445099", "html_url": "https://github.com/rust-lang/rust/commit/011df4ac88b5ef31443f2bde8eea29b917445099"}], "stats": {"total": 1, "additions": 0, "deletions": 1}, "files": [{"sha": "83e8a6e4b683a93f59e3fcd8d01b9409e5fee1f6", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/96e182833b5c17da2481e6edf5bfdb75ad004e6e/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96e182833b5c17da2481e6edf5bfdb75ad004e6e/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=96e182833b5c17da2481e6edf5bfdb75ad004e6e", "patch": "@@ -880,7 +880,6 @@ macro_rules! slice_core_methods { () => {\n     #[inline]\n     pub fn split_last(&self) -> Option<(&T, &[T])> {\n         SliceExt::split_last(self)\n-\n     }\n \n     /// Returns the last and all the rest of the elements of the slice, or `None` if it is empty."}]}