{"sha": "35f100b4f9a055a98973f2a2ac2e1eb5c5cfacff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1ZjEwMGI0ZjlhMDU1YTk4OTczZjJhMmFjMmUxZWI1YzVjZmFjZmY=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-07-17T20:50:17Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-09-03T20:18:51Z"}, "message": "update_lints rewrite: Add structure and --print-only", "tree": {"sha": "35586d5175d1af3ffe1b93717fad415a42c0b4d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35586d5175d1af3ffe1b93717fad415a42c0b4d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35f100b4f9a055a98973f2a2ac2e1eb5c5cfacff", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCAAGBQJbjZcrAAoJELb6Bqbg4mZbjQgQAJiFjh0IccYgxhOZ+noJsOdE\nH0IgniIC/jyPkJLVozSjsutnU0LL5DDGhss4+z1GFLYGpEJUEwYRlikjxlo1aDMa\nOB7vRa/3xUmBUGLHwtC8t1yllQgkSMj9e5kEMvjF5chVT/QZkgLgRcLf09MPgn8s\ni1dNgjSjT0YH/SLHw0upC25qkrGAXay9TwQGBGxBn29rUzGZ+jkpy1QCyKnG/62L\n0TKqyFQ45ObWK3iIttjotdhybHbRTzEJ1OxvD/AvJ0NePP+1IM6iW5P6geTEMz6h\nbXqeEAtCgsz9j7PbxD6Va87UpvH6vtoK/mNNpVphKFglmc2wp/gNIN63nIBQ3wNq\nFTH4+DjM7o0aTt4uC9bxmE+YXRk92/ThMMm8LG6sgyYbkV4gvrbrjSdPXg02k2S0\nTTcAeUUpqy4PDW+k5lnh0W/YcMuRdK7AQTBvs1FL55ETIDHhamljDVsHnuyDlVKW\necPC+ePAiYJdeesqqt8kC6tNXLJqoXW0vAKYUaXLMmiUMSoZwrkFopWkmRaDgjHp\neL6nD1c0Q2pibSeWHAUQlp0yLSlVSCs8RYez3DAtVN7Pc6QO0PjGHx6Q5uLEW0pw\nFAeqzMj2Eg2P2y3s8PMCJWn9JNfmsI+FGstQVCZIUpJ/5lKFYiiLuLvQ1GotkCQ4\ncRzTXJx4U0DKe35RN87k\n=FVjM\n-----END PGP SIGNATURE-----", "payload": "tree 35586d5175d1af3ffe1b93717fad415a42c0b4d2\nparent 2b7a5304f6b54b52b307b90d3401d691ed27b956\nauthor Philipp Hansch <dev@phansch.net> 1531860617 +0200\ncommitter Philipp Hansch <dev@phansch.net> 1536005931 +0200\n\nupdate_lints rewrite: Add structure and --print-only\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35f100b4f9a055a98973f2a2ac2e1eb5c5cfacff", "html_url": "https://github.com/rust-lang/rust/commit/35f100b4f9a055a98973f2a2ac2e1eb5c5cfacff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35f100b4f9a055a98973f2a2ac2e1eb5c5cfacff/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b7a5304f6b54b52b307b90d3401d691ed27b956", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b7a5304f6b54b52b307b90d3401d691ed27b956", "html_url": "https://github.com/rust-lang/rust/commit/2b7a5304f6b54b52b307b90d3401d691ed27b956"}], "stats": {"total": 483, "additions": 470, "deletions": 13}, "files": [{"sha": "52f93820c481bc2ac86aa2367945e93caab586a4", "filename": "Cargo.toml", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/35f100b4f9a055a98973f2a2ac2e1eb5c5cfacff/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/35f100b4f9a055a98973f2a2ac2e1eb5c5cfacff/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=35f100b4f9a055a98973f2a2ac2e1eb5c5cfacff", "patch": "@@ -38,6 +38,11 @@ name = \"clippy-driver\"\n test = false\n path = \"src/driver.rs\"\n \n+[[bin]]\n+name = \"clippy-dev\"\n+test = false\n+path = \"src/main.rs\"\n+\n [dependencies]\n # begin automatic update\n clippy_lints = { version = \"0.0.212\", path = \"clippy_lints\" }\n@@ -46,6 +51,7 @@ regex = \"1\"\n semver = \"0.9\"\n \n [dev-dependencies]\n+clippy_dev = { version = \"0.0.1\", path = \"clippy_dev\" }\n cargo_metadata = \"0.6\"\n compiletest_rs = \"0.3.7\"\n lazy_static = \"1.0\""}, {"sha": "5ca1e06a5e5a9d22a5e0f75dc1c9838aec516a41", "filename": "clippy_dev/.gitignore", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/35f100b4f9a055a98973f2a2ac2e1eb5c5cfacff/clippy_dev%2F.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/35f100b4f9a055a98973f2a2ac2e1eb5c5cfacff/clippy_dev%2F.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2F.gitignore?ref=35f100b4f9a055a98973f2a2ac2e1eb5c5cfacff", "patch": "@@ -0,0 +1,38 @@\n+# Used by Travis to be able to push:\n+/.github/deploy_key\n+out\n+\n+# Compiled files\n+*.o\n+*.d\n+*.so\n+*.rlib\n+*.dll\n+*.pyc\n+*.rmeta\n+\n+# Executables\n+*.exe\n+\n+# Generated by Cargo\n+Cargo.lock\n+/target\n+/clippy_lints/target\n+/clippy_workspace_tests/target\n+\n+# Generated by dogfood\n+/target_recur/\n+\n+# gh pages docs\n+util/gh-pages/lints.json\n+\n+# rustfmt backups\n+*.rs.bk\n+\n+helper.txt\n+*.iml\n+.vscode\n+.idea\n+\n+# Used by the Clippy build script\n+min_version.txt"}, {"sha": "ad5c705c2926afc5aea46d744763165be341ea10", "filename": "clippy_dev/Cargo.lock", "status": "added", "additions": 215, "deletions": 0, "changes": 215, "blob_url": "https://github.com/rust-lang/rust/blob/35f100b4f9a055a98973f2a2ac2e1eb5c5cfacff/clippy_dev%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/35f100b4f9a055a98973f2a2ac2e1eb5c5cfacff/clippy_dev%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2FCargo.lock?ref=35f100b4f9a055a98973f2a2ac2e1eb5c5cfacff", "patch": "@@ -0,0 +1,215 @@\n+[[package]]\n+name = \"aho-corasick\"\n+version = \"0.6.6\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"memchr 2.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"ansi_term\"\n+version = \"0.11.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"winapi 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"atty\"\n+version = \"0.2.10\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"termion 1.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"winapi 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"bitflags\"\n+version = \"1.0.3\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"clap\"\n+version = \"2.32.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"ansi_term 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"atty 0.2.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"bitflags 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"strsim 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"textwrap 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"vec_map 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"clippy_dev\"\n+version = \"0.0.1\"\n+dependencies = [\n+ \"clap 2.32.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"lazy_static 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"regex 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"lazy_static\"\n+version = \"1.0.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"libc\"\n+version = \"0.2.42\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"memchr\"\n+version = \"2.0.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"redox_syscall\"\n+version = \"0.1.40\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"redox_termios\"\n+version = \"0.1.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"redox_syscall 0.1.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"regex\"\n+version = \"1.0.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"aho-corasick 0.6.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"memchr 2.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"regex-syntax 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"thread_local 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"utf8-ranges 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"regex-syntax\"\n+version = \"0.6.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"ucd-util 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"strsim\"\n+version = \"0.7.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"termion\"\n+version = \"1.5.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"redox_syscall 0.1.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"redox_termios 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"textwrap\"\n+version = \"0.10.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"thread_local\"\n+version = \"0.3.5\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"lazy_static 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"unreachable 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"ucd-util\"\n+version = \"0.1.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"unicode-width\"\n+version = \"0.1.5\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"unreachable\"\n+version = \"1.0.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"void 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"utf8-ranges\"\n+version = \"1.0.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"vec_map\"\n+version = \"0.8.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"void\"\n+version = \"1.0.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"winapi\"\n+version = \"0.3.5\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"winapi-i686-pc-windows-gnu\"\n+version = \"0.4.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"winapi-x86_64-pc-windows-gnu\"\n+version = \"0.4.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[metadata]\n+\"checksum aho-corasick 0.6.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c1c6d463cbe7ed28720b5b489e7c083eeb8f90d08be2a0d6bb9e1ffea9ce1afa\"\n+\"checksum ansi_term 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ee49baf6cb617b853aa8d93bf420db2383fab46d314482ca2803b40d5fde979b\"\n+\"checksum atty 0.2.10 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2fc4a1aa4c24c0718a250f0681885c1af91419d242f29eb8f2ab28502d80dbd1\"\n+\"checksum bitflags 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d0c54bb8f454c567f21197eefcdbf5679d0bd99f2ddbe52e84c77061952e6789\"\n+\"checksum clap 2.32.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b957d88f4b6a63b9d70d5f454ac8011819c6efa7727858f458ab71c756ce2d3e\"\n+\"checksum lazy_static 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"fb497c35d362b6a331cfd94956a07fc2c78a4604cdbee844a81170386b996dd3\"\n+\"checksum libc 0.2.42 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b685088df2b950fccadf07a7187c8ef846a959c142338a48f9dc0b94517eb5f1\"\n+\"checksum memchr 2.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"796fba70e76612589ed2ce7f45282f5af869e0fdd7cc6199fa1aa1f1d591ba9d\"\n+\"checksum redox_syscall 0.1.40 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c214e91d3ecf43e9a4e41e578973adeb14b474f2bee858742d127af75a0112b1\"\n+\"checksum redox_termios 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7e891cfe48e9100a70a3b6eb652fef28920c117d366339687bd5576160db0f76\"\n+\"checksum regex 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5bbbea44c5490a1e84357ff28b7d518b4619a159fed5d25f6c1de2d19cc42814\"\n+\"checksum regex-syntax 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"747ba3b235651f6e2f67dfa8bcdcd073ddb7c243cb21c442fc12395dfcac212d\"\n+\"checksum strsim 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bb4f380125926a99e52bc279241539c018323fab05ad6368b56f93d9369ff550\"\n+\"checksum termion 1.5.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"689a3bdfaab439fd92bc87df5c4c78417d3cbe537487274e9b0b2dce76e92096\"\n+\"checksum textwrap 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"307686869c93e71f94da64286f9a9524c0f308a9e1c87a583de8e9c9039ad3f6\"\n+\"checksum thread_local 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"279ef31c19ededf577bfd12dfae728040a21f635b06a24cd670ff510edd38963\"\n+\"checksum ucd-util 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"fd2be2d6639d0f8fe6cdda291ad456e23629558d466e2789d2c3e9892bda285d\"\n+\"checksum unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"882386231c45df4700b275c7ff55b6f3698780a650026380e72dabe76fa46526\"\n+\"checksum unreachable 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"382810877fe448991dfc7f0dd6e3ae5d58088fd0ea5e35189655f84e6814fa56\"\n+\"checksum utf8-ranges 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"662fab6525a98beff2921d7f61a39e7d59e0b425ebc7d0d9e66d316e55124122\"\n+\"checksum vec_map 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"05c78687fb1a80548ae3250346c3db86a80a7cdd77bda190189f2d0a0987c81a\"\n+\"checksum void 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6a02e4885ed3bc0f2de90ea6dd45ebcbb66dacffe03547fadbb0eeae2770887d\"\n+\"checksum winapi 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"773ef9dcc5f24b7d850d0ff101e542ff24c3b090a9768e03ff889fdef41f00fd\"\n+\"checksum winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n+\"checksum winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\""}, {"sha": "010380907afc38ccabad4ff251cc69f1ddfb3148", "filename": "clippy_dev/Cargo.toml", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/35f100b4f9a055a98973f2a2ac2e1eb5c5cfacff/clippy_dev%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/35f100b4f9a055a98973f2a2ac2e1eb5c5cfacff/clippy_dev%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2FCargo.toml?ref=35f100b4f9a055a98973f2a2ac2e1eb5c5cfacff", "patch": "@@ -0,0 +1,9 @@\n+[package]\n+name = \"clippy_dev\"\n+version = \"0.0.1\"\n+authors = [\"Philipp Hansch <dev@phansch.net>\"]\n+\n+[dependencies]\n+clap = \"~2.32\"\n+regex = \"1\"\n+lazy_static = \"1.0\""}, {"sha": "2a86de9cbaa51f58b3eea2244fe8a9bfbf0ac095", "filename": "clippy_dev/src/lib.rs", "status": "added", "additions": 144, "deletions": 0, "changes": 144, "blob_url": "https://github.com/rust-lang/rust/blob/35f100b4f9a055a98973f2a2ac2e1eb5c5cfacff/clippy_dev%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35f100b4f9a055a98973f2a2ac2e1eb5c5cfacff/clippy_dev%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Flib.rs?ref=35f100b4f9a055a98973f2a2ac2e1eb5c5cfacff", "patch": "@@ -0,0 +1,144 @@\n+extern crate regex;\n+#[macro_use]\n+extern crate lazy_static;\n+\n+use regex::Regex;\n+use std::ffi::OsStr;\n+use std::fs;\n+use std::io::prelude::*;\n+\n+lazy_static! {\n+    static ref DEC_CLIPPY_LINT_RE: Regex = Regex::new(r#\"declare_clippy_lint!\\s*[\\{(]\\s*pub\\s+(?P<name>[A-Z_][A-Z_0-9]*)\\s*,\\s*(?P<cat>[a-z_]+)\\s*,\\s*\"(?P<desc>(?:[^\"\\\\]+|\\\\(?s).(?-s))*)\"\\s*[})]\"#).unwrap();\n+    static ref DEC_DEPRECATED_LINT_RE: Regex = Regex::new(r#\"declare_deprecated_lint!\\s*[{(]\\s*pub\\s+(?P<name>[A-Z_][A-Z_0-9]*)\\s*,\\s*\"(?P<desc>(?:[^\"\\\\]+|\\\\(?s).(?-s))*)\"\\s*[})]\"#).unwrap();\n+    static ref NL_ESCAPE_RE: Regex = Regex::new(r#\"\\\\\\n\\s*\"#).unwrap();\n+    pub static ref DOCS_LINK: String = \"https://rust-lang-nursery.github.io/rust-clippy/master/index.html\".to_string();\n+}\n+\n+#[derive(Clone, PartialEq, Debug)]\n+pub struct Lint {\n+    pub name: String,\n+    pub group: String,\n+    pub desc: String,\n+    pub deprecation: Option<String>,\n+    pub module: String,\n+}\n+\n+impl Lint {\n+    pub fn new(name: &str, group: &str, desc: &str, deprecation: Option<&str>, module: &str) -> Lint {\n+        Lint {\n+            name: name.to_lowercase(),\n+            group: group.to_string(),\n+            desc: NL_ESCAPE_RE.replace(&desc.replace(\"\\\\\\\"\", \"\\\"\"), \"\").to_string(),\n+            deprecation: deprecation.map(|d| d.to_string()),\n+            module: module.to_string(),\n+        }\n+    }\n+\n+    pub fn active_lints(lints: &[Lint]) -> Vec<Lint> {\n+        lints.iter().filter(|l| l.deprecation.is_none()).cloned().collect::<Vec<Lint>>()\n+    }\n+\n+    pub fn in_lint_group(group: &str, lints: &[Lint]) -> Vec<Lint> {\n+        lints.iter().filter(|l| l.group == group).cloned().collect::<Vec<Lint>>()\n+    }\n+}\n+\n+pub fn collect_all() -> Vec<Lint> {\n+    let mut lints = vec![];\n+    for direntry in lint_files() {\n+        lints.append(&mut collect_from_file(&direntry));\n+    }\n+    lints\n+}\n+\n+fn collect_from_file(direntry: &fs::DirEntry) -> Vec<Lint> {\n+    let mut file = fs::File::open(direntry.path()).unwrap();\n+    let mut content = String::new();\n+    file.read_to_string(&mut content).unwrap();\n+    parse_contents(&content, direntry.path().file_stem().unwrap().to_str().unwrap())\n+}\n+\n+fn parse_contents(content: &str, filename: &str) -> Vec<Lint> {\n+    let mut lints: Vec<Lint> = DEC_CLIPPY_LINT_RE\n+        .captures_iter(&content)\n+        .map(|m| Lint::new(&m[\"name\"], &m[\"cat\"], &m[\"desc\"], None, filename))\n+        .collect();\n+    let mut deprecated = DEC_DEPRECATED_LINT_RE\n+        .captures_iter(&content)\n+        .map(|m| Lint::new( &m[\"name\"], \"Deprecated\", &m[\"desc\"], Some(&m[\"desc\"]), filename))\n+        .collect();\n+    lints.append(&mut deprecated);\n+    lints\n+}\n+\n+/// Collects all .rs files in the `clippy_lints/src` directory\n+fn lint_files() -> Vec<fs::DirEntry> {\n+    let paths = fs::read_dir(\"../clippy_lints/src\").unwrap();\n+    paths\n+        .filter_map(|f| f.ok())\n+        .filter(|f| f.path().extension() == Some(OsStr::new(\"rs\")))\n+        .collect::<Vec<fs::DirEntry>>()\n+}\n+\n+#[test]\n+fn test_parse_contents() {\n+    let result = parse_contents(\n+        r#\"\n+declare_clippy_lint! {\n+    pub PTR_ARG,\n+    style,\n+    \"really long \\\n+     text\"\n+}\n+\n+declare_clippy_lint!{\n+    pub DOC_MARKDOWN,\n+    pedantic,\n+    \"single line\"\n+}\n+\n+/// some doc comment\n+declare_deprecated_lint! {\n+    pub SHOULD_ASSERT_EQ,\n+    \"`assert!()` will be more flexible with RFC 2011\"\n+}\n+    \"#,\n+    \"module_name\");\n+\n+    let expected = vec![\n+        Lint::new(\"ptr_arg\", \"style\", \"really long text\", None, \"module_name\"),\n+        Lint::new(\"doc_markdown\", \"pedantic\", \"single line\", None, \"module_name\"),\n+        Lint::new(\n+            \"should_assert_eq\",\n+            \"Deprecated\",\n+            \"`assert!()` will be more flexible with RFC 2011\",\n+            Some(\"`assert!()` will be more flexible with RFC 2011\"),\n+            \"module_name\"\n+        ),\n+    ];\n+    assert_eq!(expected, result);\n+}\n+\n+#[test]\n+fn test_active_lints() {\n+    let lints = vec![\n+        Lint::new(\"should_assert_eq\", \"Deprecated\", \"abc\", Some(\"Reason\"), \"module_name\"),\n+        Lint::new(\"should_assert_eq2\", \"Not Deprecated\", \"abc\", None, \"module_name\")\n+    ];\n+    let expected = vec![\n+        Lint::new(\"should_assert_eq2\", \"Not Deprecated\", \"abc\", None, \"module_name\")\n+    ];\n+    assert_eq!(expected, Lint::active_lints(&lints));\n+}\n+\n+#[test]\n+fn test_in_lint_group() {\n+    let lints = vec![\n+        Lint::new(\"ptr_arg\", \"style\", \"really long text\", None, \"module_name\"),\n+        Lint::new(\"doc_markdown\", \"pedantic\", \"single line\", None, \"module_name\"),\n+    ];\n+    let expected = vec![\n+        Lint::new(\"ptr_arg\", \"style\", \"really long text\", None, \"module_name\")\n+    ];\n+    assert_eq!(expected, Lint::in_lint_group(\"style\", &lints));\n+}"}, {"sha": "7bf6eb01245770e01cc5d2c12c82d5a2136b0e3b", "filename": "clippy_dev/src/main.rs", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/35f100b4f9a055a98973f2a2ac2e1eb5c5cfacff/clippy_dev%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35f100b4f9a055a98973f2a2ac2e1eb5c5cfacff/clippy_dev%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fmain.rs?ref=35f100b4f9a055a98973f2a2ac2e1eb5c5cfacff", "patch": "@@ -0,0 +1,53 @@\n+extern crate clap;\n+extern crate clippy_dev;\n+extern crate regex;\n+\n+use clap::{App, Arg, SubCommand};\n+use clippy_dev::*;\n+\n+fn main() {\n+    let matches = App::new(\"Clippy developer tooling\")\n+        .subcommand(\n+            SubCommand::with_name(\"update_lints\")\n+                .about(\"Update the lint list\")\n+                .arg(\n+                    Arg::with_name(\"print-only\")\n+                        .long(\"print-only\")\n+                        .short(\"p\")\n+                        .help(\"Print a table of lints to STDOUT. Does not modify any files.\"),\n+                )\n+        )\n+        .get_matches();\n+\n+    if let Some(matches) = matches.subcommand_matches(\"update_lints\") {\n+        if matches.is_present(\"print-only\") {\n+            print_lints();\n+        }\n+    }\n+}\n+\n+fn print_lints() {\n+    let lint_list = collect_all();\n+    let print_clippy_lint_groups: [&str; 7] = [\n+        \"correctness\",\n+        \"style\",\n+        \"complexity\",\n+        \"perf\",\n+        \"pedantic\",\n+        \"nursery\",\n+        \"restriction\"\n+    ];\n+    // We could use itertools' group_by to make this much more concise:\n+    for group in &print_clippy_lint_groups {\n+        println!(\"\\n## {}\", group);\n+\n+        let mut group_lints = Lint::in_lint_group(group, &lint_list);\n+        group_lints.sort_by(|a, b| a.name.cmp(&b.name));\n+\n+        for lint in group_lints {\n+            if lint.deprecation.is_some() { continue; }\n+            println!(\"* [{}]({}#{}) ({})\", lint.name, clippy_dev::DOCS_LINK.clone(), lint.name, lint.desc);\n+        }\n+    }\n+    println!(\"there are {} lints\", Lint::active_lints(&lint_list).len());\n+}"}, {"sha": "4fa6e69b75276e392c9c473ee231be9edfd3bdbd", "filename": "util/dev", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/35f100b4f9a055a98973f2a2ac2e1eb5c5cfacff/util%2Fdev", "raw_url": "https://github.com/rust-lang/rust/raw/35f100b4f9a055a98973f2a2ac2e1eb5c5cfacff/util%2Fdev", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/util%2Fdev?ref=35f100b4f9a055a98973f2a2ac2e1eb5c5cfacff", "patch": "@@ -0,0 +1,3 @@\n+#!/bin/sh\n+\n+cd clippy_dev && cargo run -- $@"}, {"sha": "15242abd60683b48d37fdd4864adb85d016fa2d4", "filename": "util/update_lints.py", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/35f100b4f9a055a98973f2a2ac2e1eb5c5cfacff/util%2Fupdate_lints.py", "raw_url": "https://github.com/rust-lang/rust/raw/35f100b4f9a055a98973f2a2ac2e1eb5c5cfacff/util%2Fupdate_lints.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/util%2Fupdate_lints.py?ref=35f100b4f9a055a98973f2a2ac2e1eb5c5cfacff", "patch": "@@ -7,6 +7,7 @@\n import os\n import re\n import sys\n+from subprocess import call\n \n declare_deprecated_lint_re = re.compile(r'''\n     declare_deprecated_lint! \\s* [{(] \\s*\n@@ -166,19 +167,7 @@ def main(print_only=False, check=False):\n         all_lints += value\n \n     if print_only:\n-        print_clippy_lint_groups = [\n-            \"correctness\",\n-            \"style\",\n-            \"complexity\",\n-            \"perf\",\n-            \"pedantic\",\n-            \"nursery\",\n-            \"restriction\"\n-        ]\n-        for group in print_clippy_lint_groups:\n-            sys.stdout.write('\\n## ' + group + '\\n')\n-            for (_, name, _, descr) in sorted(clippy_lints[group]):\n-                sys.stdout.write('* [' + name + '](https://rust-lang-nursery.github.io/rust-clippy/master/index.html#' + name + ') (' + descr + ')\\n')\n+        call([\"./util/dev\", \"update_lints\", \"--print-only\"])\n         return\n \n     # update the lint counter in README.md"}]}