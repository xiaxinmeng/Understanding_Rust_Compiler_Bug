{"sha": "7548a0d77a7ebc2950421e68dfb06f6a06c58202", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1NDhhMGQ3N2E3ZWJjMjk1MDQyMWU2OGRmYjA2ZjZhMDZjNTgyMDI=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-12-07T21:02:38Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-12-07T21:02:38Z"}, "message": "Restore accidentally overwritten test", "tree": {"sha": "e5ede522a4998a810f409c5200f1b0023caa1d0a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5ede522a4998a810f409c5200f1b0023caa1d0a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7548a0d77a7ebc2950421e68dfb06f6a06c58202", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7548a0d77a7ebc2950421e68dfb06f6a06c58202", "html_url": "https://github.com/rust-lang/rust/commit/7548a0d77a7ebc2950421e68dfb06f6a06c58202", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7548a0d77a7ebc2950421e68dfb06f6a06c58202/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d0610b072537f43946cf685bc9888ec7df44f08", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d0610b072537f43946cf685bc9888ec7df44f08", "html_url": "https://github.com/rust-lang/rust/commit/3d0610b072537f43946cf685bc9888ec7df44f08"}], "stats": {"total": 92, "additions": 74, "deletions": 18}, "files": [{"sha": "c27b97d81da3eeee2a9b0990b705324108ad0261", "filename": "src/test/run-pass/float-nan.rs", "status": "modified", "additions": 74, "deletions": 18, "changes": 92, "blob_url": "https://github.com/rust-lang/rust/blob/7548a0d77a7ebc2950421e68dfb06f6a06c58202/src%2Ftest%2Frun-pass%2Ffloat-nan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7548a0d77a7ebc2950421e68dfb06f6a06c58202/src%2Ftest%2Frun-pass%2Ffloat-nan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffloat-nan.rs?ref=7548a0d77a7ebc2950421e68dfb06f6a06c58202", "patch": "@@ -1,26 +1,82 @@\n use std;\n+import std::float;\n \n-import std::ctypes::*;\n+fn main() {\n+  let nan = float::NaN;\n+  assert(float::isNaN(nan));\n \n-fn foo_float() -> m_float { ret 0.0 as m_float; }\n-fn bar_float() -> float { be foo_float() as float; }\n+  let inf = float::infinity;\n+  assert(-inf == float::neg_infinity);\n \n-fn foo_int() -> m_int { ret 0 as m_int; }\n-fn bar_int() -> int { be foo_int() as int; }\n+  assert( nan !=  nan);\n+  assert( nan != -nan);\n+  assert(-nan != -nan);\n+  assert(-nan !=  nan);\n \n-fn foo_uint() -> m_uint { ret 0u as m_uint; }\n-fn bar_uint() -> uint { be foo_uint() as uint; }\n+  assert( nan !=   1.);\n+  assert( nan !=   0.);\n+  assert( nan !=  inf);\n+  assert( nan != -inf);\n \n-fn foo_long() -> long { ret 0 as long; }\n-fn bar_long() -> int { be foo_long() as int; }\n+  assert(  1. !=  nan);\n+  assert(  0. !=  nan);\n+  assert( inf !=  nan);\n+  assert(-inf !=  nan);\n \n-fn foo_ulong() -> ulong { ret 0u as ulong; }\n-fn bar_ulong() -> uint { be foo_uint() as uint; }\n+  assert(!( nan ==  nan));\n+  assert(!( nan == -nan));\n+  assert(!( nan ==   1.));\n+  assert(!( nan ==   0.));\n+  assert(!( nan ==  inf));\n+  assert(!( nan == -inf));\n+  assert(!(  1. ==  nan));\n+  assert(!(  0. ==  nan));\n+  assert(!( inf ==  nan));\n+  assert(!(-inf ==  nan));\n+  assert(!(-nan ==  nan));\n+  assert(!(-nan == -nan));\n \n-fn main() {\n-    assert bar_float() == 0.0;\n-    assert bar_int() == 0;\n-    assert bar_uint() == 0u;\n-    assert bar_long() == 0;\n-    assert bar_ulong() == 0u;\n-}\n\\ No newline at end of file\n+  assert(!( nan >  nan));\n+  assert(!( nan > -nan));\n+  assert(!( nan >   0.));\n+  assert(!( nan >  inf));\n+  assert(!( nan > -inf));\n+  assert(!(  0. >  nan));\n+  assert(!( inf >  nan));\n+  assert(!(-inf >  nan));\n+  assert(!(-nan >  nan));\n+\n+  assert(!(nan <   0.));\n+  assert(!(nan <   1.));\n+  assert(!(nan <  -1.));\n+  assert(!(nan <  inf));\n+  assert(!(nan < -inf));\n+  assert(!(nan <  nan));\n+  assert(!(nan < -nan));\n+\n+  assert(!(  0. < nan));\n+  assert(!(  1. < nan));\n+  assert(!( -1. < nan));\n+  assert(!( inf < nan));\n+  assert(!(-inf < nan));\n+  assert(!(-nan < nan));\n+\n+  assert(float::isNaN(nan + inf));\n+  assert(float::isNaN(nan + -inf));\n+  assert(float::isNaN(nan + 0.));\n+  assert(float::isNaN(nan + 1.));\n+  assert(float::isNaN(nan * 1.));\n+  assert(float::isNaN(nan / 1.));\n+  assert(float::isNaN(nan / 0.));\n+  assert(float::isNaN(0. / 0.));\n+  assert(float::isNaN(-inf + inf));\n+  assert(float::isNaN(inf - inf));\n+\n+  assert(!float::isNaN(-1.));\n+  assert(!float::isNaN(0.));\n+  assert(!float::isNaN(0.1));\n+  assert(!float::isNaN(1.));\n+  assert(!float::isNaN(inf));\n+  assert(!float::isNaN(-inf));\n+  assert(!float::isNaN(1./-inf));\n+}"}]}