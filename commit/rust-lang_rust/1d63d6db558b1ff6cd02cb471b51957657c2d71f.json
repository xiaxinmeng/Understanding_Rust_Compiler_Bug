{"sha": "1d63d6db558b1ff6cd02cb471b51957657c2d71f", "node_id": "C_kwDOAAsO6NoAKDFkNjNkNmRiNTU4YjFmZjZjZDAyY2I0NzFiNTE5NTc2NTdjMmQ3MWY", "commit": {"author": {"name": "niluxv", "email": "niluxv.opensource.C-h2ty6xl@yandex.com", "date": "2022-04-16T08:18:31Z"}, "committer": {"name": "niluxv", "email": "niluxv.opensource.C-h2ty6xl@yandex.com", "date": "2022-04-16T08:40:06Z"}, "message": "Improve `fuzzy_provenance_casts` lint diagnostics\n\nUse `multipart_suggestion` instead of getting a snippet.", "tree": {"sha": "f13c63a31bcc80aa51653d20a79f227799b6fe4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f13c63a31bcc80aa51653d20a79f227799b6fe4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d63d6db558b1ff6cd02cb471b51957657c2d71f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d63d6db558b1ff6cd02cb471b51957657c2d71f", "html_url": "https://github.com/rust-lang/rust/commit/1d63d6db558b1ff6cd02cb471b51957657c2d71f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d63d6db558b1ff6cd02cb471b51957657c2d71f/comments", "author": {"login": "niluxv", "id": 34834616, "node_id": "MDQ6VXNlcjM0ODM0NjE2", "avatar_url": "https://avatars.githubusercontent.com/u/34834616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/niluxv", "html_url": "https://github.com/niluxv", "followers_url": "https://api.github.com/users/niluxv/followers", "following_url": "https://api.github.com/users/niluxv/following{/other_user}", "gists_url": "https://api.github.com/users/niluxv/gists{/gist_id}", "starred_url": "https://api.github.com/users/niluxv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/niluxv/subscriptions", "organizations_url": "https://api.github.com/users/niluxv/orgs", "repos_url": "https://api.github.com/users/niluxv/repos", "events_url": "https://api.github.com/users/niluxv/events{/privacy}", "received_events_url": "https://api.github.com/users/niluxv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "niluxv", "id": 34834616, "node_id": "MDQ6VXNlcjM0ODM0NjE2", "avatar_url": "https://avatars.githubusercontent.com/u/34834616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/niluxv", "html_url": "https://github.com/niluxv", "followers_url": "https://api.github.com/users/niluxv/followers", "following_url": "https://api.github.com/users/niluxv/following{/other_user}", "gists_url": "https://api.github.com/users/niluxv/gists{/gist_id}", "starred_url": "https://api.github.com/users/niluxv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/niluxv/subscriptions", "organizations_url": "https://api.github.com/users/niluxv/orgs", "repos_url": "https://api.github.com/users/niluxv/repos", "events_url": "https://api.github.com/users/niluxv/events{/privacy}", "received_events_url": "https://api.github.com/users/niluxv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02d12bc30c173fd0cbf55d67c42d6cbae231203a", "url": "https://api.github.com/repos/rust-lang/rust/commits/02d12bc30c173fd0cbf55d67c42d6cbae231203a", "html_url": "https://github.com/rust-lang/rust/commit/02d12bc30c173fd0cbf55d67c42d6cbae231203a"}], "stats": {"total": 18, "additions": 7, "deletions": 11}, "files": [{"sha": "a153997599aba5dafb5822172b1bc1ffbd1c8ccd", "filename": "compiler/rustc_typeck/src/check/cast.rs", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1d63d6db558b1ff6cd02cb471b51957657c2d71f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d63d6db558b1ff6cd02cb471b51957657c2d71f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcast.rs?ref=1d63d6db558b1ff6cd02cb471b51957657c2d71f", "patch": "@@ -1041,16 +1041,12 @@ impl<'a, 'tcx> CastCheck<'tcx> {\n                     self.expr_ty, self.cast_ty\n                 ));\n                 let msg = \"use `.with_addr()` to adjust a valid pointer in the same allocation, to this address\";\n-                if let Ok(snippet) = fcx.tcx.sess.source_map().span_to_snippet(self.expr_span) {\n-                    err.span_suggestion(\n-                        self.span,\n-                        msg,\n-                        format!(\"(...).with_addr({snippet})\"),\n-                        Applicability::HasPlaceholders,\n-                    );\n-                } else {\n-                    err.help(msg);\n-                }\n+                let suggestions = vec![\n+                    (self.expr_span.shrink_to_lo(), String::from(\"(...).with_addr(\")),\n+                    (self.expr_span.shrink_to_hi().to(self.cast_span), String::from(\")\")),\n+                ];\n+\n+                err.multipart_suggestion(msg, suggestions, Applicability::MaybeIncorrect);\n                 err.help(\n                     \"if you can't comply with strict provenance and don't have a pointer with \\\n                     the correct provenance you can use `std::ptr::from_exposed_addr()` instead\""}, {"sha": "c85934aa3ba153f0f1f22dbc91c2bc2afeb61029", "filename": "src/test/ui/lint/lint-strict-provenance-fuzzy-casts.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1d63d6db558b1ff6cd02cb471b51957657c2d71f/src%2Ftest%2Fui%2Flint%2Flint-strict-provenance-fuzzy-casts.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1d63d6db558b1ff6cd02cb471b51957657c2d71f/src%2Ftest%2Fui%2Flint%2Flint-strict-provenance-fuzzy-casts.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-strict-provenance-fuzzy-casts.stderr?ref=1d63d6db558b1ff6cd02cb471b51957657c2d71f", "patch": "@@ -13,7 +13,7 @@ LL | #![deny(fuzzy_provenance_casts)]\n help: use `.with_addr()` to adjust a valid pointer in the same allocation, to this address\n    |\n LL |     let dangling = (...).with_addr(16_usize);\n-   |                    ~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |                    ++++++++++++++++        ~\n \n error: aborting due to previous error\n "}]}