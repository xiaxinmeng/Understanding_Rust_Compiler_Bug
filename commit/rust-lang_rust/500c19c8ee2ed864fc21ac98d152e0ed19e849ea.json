{"sha": "500c19c8ee2ed864fc21ac98d152e0ed19e849ea", "node_id": "C_kwDOAAsO6NoAKDUwMGMxOWM4ZWUyZWQ4NjRmYzIxYWM5OGQxNTJlMGVkMTllODQ5ZWE", "commit": {"author": {"name": "jyn", "email": "github@jyn.dev", "date": "2023-04-29T06:43:20Z"}, "committer": {"name": "jyn", "email": "github@jyn.dev", "date": "2023-04-29T08:21:51Z"}, "message": "windows: kill rust-analyzer-proc-macro-srv before deleting stage0 directory\n\nThis fixes the following recurring error on windows:\n```\nTraceback (most recent call last):\n  File \"C:\\Users\\jyn\\src\\rust\\x.py\", line 29, in <module>\n    bootstrap.main()\n  File \"C:\\Users\\jyn\\src\\rust\\src\\bootstrap\\bootstrap.py\", line 963, in main\n    bootstrap(args)\n  File \"C:\\Users\\jyn\\src\\rust\\src\\bootstrap\\bootstrap.py\", line 927, in bootstrap\n    build.download_toolchain()\n  File \"C:\\Users\\jyn\\src\\rust\\src\\bootstrap\\bootstrap.py\", line 437, in download_toolchain\n    shutil.rmtree(bin_root)\n  File \"C:\\Users\\jyn\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\shutil.py\", line 759, in rmtree\n    return _rmtree_unsafe(path, onerror)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\jyn\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\shutil.py\", line 617, in _rmtree_unsafe\n    _rmtree_unsafe(fullname, onerror)\n  File \"C:\\Users\\jyn\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\shutil.py\", line 622, in _rmtree_unsafe\n    onerror(os.unlink, fullname, sys.exc_info())\n  File \"C:\\Users\\jyn\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\shutil.py\", line 620, in _rmtree_unsafe\n    os.unlink(fullname)\nPermissionError: [WinError 5] Access is denied: 'C:\\\\Users\\\\jyn\\\\src\\\\rust\\\\build\\\\x86_64-pc-windows-msvc\\\\stage0\\\\bin\\\\rust-analyzer-proc-macro-srv.exe'\n```", "tree": {"sha": "d90b4cffbef50293ceff4ad685837b53cc64d8ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d90b4cffbef50293ceff4ad685837b53cc64d8ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/500c19c8ee2ed864fc21ac98d152e0ed19e849ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/500c19c8ee2ed864fc21ac98d152e0ed19e849ea", "html_url": "https://github.com/rust-lang/rust/commit/500c19c8ee2ed864fc21ac98d152e0ed19e849ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/500c19c8ee2ed864fc21ac98d152e0ed19e849ea/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "572c0d553f2bd1b934b08fe240310112369a5c76", "url": "https://api.github.com/repos/rust-lang/rust/commits/572c0d553f2bd1b934b08fe240310112369a5c76", "html_url": "https://github.com/rust-lang/rust/commit/572c0d553f2bd1b934b08fe240310112369a5c76"}], "stats": {"total": 35, "additions": 29, "deletions": 6}, "files": [{"sha": "ff261ab9832737cb347092c497bbc7fc775e2079", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 29, "deletions": 6, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/500c19c8ee2ed864fc21ac98d152e0ed19e849ea/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/500c19c8ee2ed864fc21ac98d152e0ed19e849ea/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=500c19c8ee2ed864fc21ac98d152e0ed19e849ea", "patch": "@@ -19,7 +19,10 @@\n except ImportError:\n     lzma = None\n \n-if sys.platform == 'win32':\n+def platform_is_win32():\n+    return sys.platform == 'win32'\n+\n+if platform_is_win32():\n     EXE_SUFFIX = \".exe\"\n else:\n     EXE_SUFFIX = \"\"\n@@ -78,15 +81,14 @@ def _download(path, url, probably_big, verbose, exception):\n     if probably_big or verbose:\n         print(\"downloading {}\".format(url))\n \n-    platform_is_win32 = sys.platform == 'win32'\n     try:\n         if probably_big or verbose:\n             option = \"-#\"\n         else:\n             option = \"-s\"\n         # If curl is not present on Win32, we should not sys.exit\n         #   but raise `CalledProcessError` or `OSError` instead\n-        require([\"curl\", \"--version\"], exception=platform_is_win32)\n+        require([\"curl\", \"--version\"], exception=platform_is_win32())\n         with open(path, \"wb\") as outfile:\n             run([\"curl\", option,\n                 \"-L\", # Follow redirect.\n@@ -99,8 +101,8 @@ def _download(path, url, probably_big, verbose, exception):\n             )\n     except (subprocess.CalledProcessError, OSError, RuntimeError):\n         # see http://serverfault.com/questions/301128/how-to-download\n-        if platform_is_win32:\n-            run([\"PowerShell.exe\", \"/nologo\", \"-Command\",\n+        if platform_is_win32():\n+            run_powershell([\n                  \"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12;\",\n                  \"(New-Object System.Net.WebClient).DownloadFile('{}', '{}')\".format(url, path)],\n                 verbose=verbose,\n@@ -174,6 +176,10 @@ def run(args, verbose=False, exception=False, is_bootstrap=False, **kwargs):\n         else:\n             sys.exit(err)\n \n+def run_powershell(script, *args, **kwargs):\n+    \"\"\"Run a powershell script\"\"\"\n+    run([\"PowerShell.exe\", \"/nologo\", \"-Command\"] + script, *args, **kwargs)\n+\n \n def require(cmd, exit=True, exception=False):\n     '''Run a command, returning its output.\n@@ -229,7 +235,7 @@ def default_build_triple(verbose):\n                 print(\"pre-installed rustc not detected: {}\".format(e))\n                 print(\"falling back to auto-detect\")\n \n-    required = sys.platform != 'win32'\n+    required = not platform_is_win32()\n     ostype = require([\"uname\", \"-s\"], exit=required)\n     cputype = require(['uname', '-m'], exit=required)\n \n@@ -434,6 +440,23 @@ def download_toolchain(self):\n                 (not os.path.exists(self.rustc()) or\n                  self.program_out_of_date(self.rustc_stamp(), key)):\n             if os.path.exists(bin_root):\n+                # HACK: On Windows, we can't delete rust-analyzer-proc-macro-server while it's\n+                # running. Kill it.\n+                if platform_is_win32():\n+                    print(\"Killing rust-analyzer-proc-macro-srv before deleting stage0 toolchain\")\n+                    regex =  '{}\\\\\\\\(host|{})\\\\\\\\stage0\\\\\\\\libexec'.format(\n+                        os.path.basename(self.build_dir),\n+                        self.build\n+                    )\n+                    script = (\n+                        # NOTE: can't use `taskkill` or `Get-Process -Name` because they error if\n+                        # the server isn't running.\n+                        'Get-Process | ' +\n+                        'Where-Object {$_.Name -eq \"rust-analyzer-proc-macro-srv\"} |' +\n+                        'Where-Object {{$_.Path -match \"{}\"}} |'.format(regex) +\n+                        'Stop-Process'\n+                    )\n+                    run_powershell([script])\n                 shutil.rmtree(bin_root)\n             tarball_suffix = '.tar.gz' if lzma is None else '.tar.xz'\n             filename = \"rust-std-{}-{}{}\".format("}]}