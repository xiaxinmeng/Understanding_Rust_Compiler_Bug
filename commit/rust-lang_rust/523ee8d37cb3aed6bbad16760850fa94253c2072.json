{"sha": "523ee8d37cb3aed6bbad16760850fa94253c2072", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyM2VlOGQzN2NiM2FlZDZiYmFkMTY3NjA4NTBmYTk0MjUzYzIwNzI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-07-29T18:10:48Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-07-29T18:10:48Z"}, "message": "Auto merge of #27353 - arielb1:parenthetical-error, r=steveklabnik\n\nThis also calls the right API, which e.g. prevents a suggestion\r\nfor #![feature(unboxed_closures)] on stable.\r\n\r\nFixes #26970 \r\n\r\nr? @steveklabnik", "tree": {"sha": "45b57597584c6ca1c02564d0f8e5cc0141fd028b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45b57597584c6ca1c02564d0f8e5cc0141fd028b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/523ee8d37cb3aed6bbad16760850fa94253c2072", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/523ee8d37cb3aed6bbad16760850fa94253c2072", "html_url": "https://github.com/rust-lang/rust/commit/523ee8d37cb3aed6bbad16760850fa94253c2072", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/523ee8d37cb3aed6bbad16760850fa94253c2072/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "090ad6fde7e55c5a8e8969cc2983e25b92adc633", "url": "https://api.github.com/repos/rust-lang/rust/commits/090ad6fde7e55c5a8e8969cc2983e25b92adc633", "html_url": "https://github.com/rust-lang/rust/commit/090ad6fde7e55c5a8e8969cc2983e25b92adc633"}, {"sha": "bd0117523448f9cda8a61c048b9f4ce5372ade15", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd0117523448f9cda8a61c048b9f4ce5372ade15", "html_url": "https://github.com/rust-lang/rust/commit/bd0117523448f9cda8a61c048b9f4ce5372ade15"}], "stats": {"total": 36, "additions": 17, "deletions": 19}, "files": [{"sha": "a2c968a290b8a189d66dbeca22ddae7febd6e129", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/523ee8d37cb3aed6bbad16760850fa94253c2072/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/523ee8d37cb3aed6bbad16760850fa94253c2072/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=523ee8d37cb3aed6bbad16760850fa94253c2072", "patch": "@@ -69,6 +69,7 @@ use util::nodemap::FnvHashSet;\n use std::slice;\n use syntax::{abi, ast, ast_util};\n use syntax::codemap::{Span, Pos};\n+use syntax::feature_gate::emit_feature_err;\n use syntax::parse::token;\n use syntax::print::pprust;\n \n@@ -791,12 +792,11 @@ fn create_substs_for_ast_trait_ref<'a,'tcx>(this: &AstConv<'tcx>,\n             // For now, require that parenthetical notation be used\n             // only with `Fn()` etc.\n             if !this.tcx().sess.features.borrow().unboxed_closures && trait_def.paren_sugar {\n-                span_err!(this.tcx().sess, span, E0215,\n-                                         \"angle-bracket notation is not stable when \\\n-                                         used with the `Fn` family of traits, use parentheses\");\n-                fileline_help!(this.tcx().sess, span,\n-                           \"add `#![feature(unboxed_closures)]` to \\\n-                            the crate attributes to enable\");\n+                emit_feature_err(&this.tcx().sess.parse_sess.span_diagnostic,\n+                                 \"unboxed_closures\", span,\n+                                 \"\\\n+                    the precise format of `Fn`-family traits' type parameters is \\\n+                    subject to change. Use parenthetical notation (Fn(Foo, Bar) -> Baz) instead\");\n             }\n \n             convert_angle_bracketed_parameters(this, rscope, span, &trait_def.generics, data)\n@@ -805,12 +805,10 @@ fn create_substs_for_ast_trait_ref<'a,'tcx>(this: &AstConv<'tcx>,\n             // For now, require that parenthetical notation be used\n             // only with `Fn()` etc.\n             if !this.tcx().sess.features.borrow().unboxed_closures && !trait_def.paren_sugar {\n-                span_err!(this.tcx().sess, span, E0216,\n-                                         \"parenthetical notation is only stable when \\\n-                                         used with the `Fn` family of traits\");\n-                fileline_help!(this.tcx().sess, span,\n-                           \"add `#![feature(unboxed_closures)]` to \\\n-                            the crate attributes to enable\");\n+                emit_feature_err(&this.tcx().sess.parse_sess.span_diagnostic,\n+                                 \"unboxed_closures\", span,\n+                                 \"\\\n+                    parenthetical notation is only stable when used with `Fn`-family traits\");\n             }\n \n             convert_parenthesized_parameters(this, rscope, span, &trait_def.generics, data)"}, {"sha": "9cb404ad4658825696be3121fe8bc499e7b1c7b1", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/523ee8d37cb3aed6bbad16760850fa94253c2072/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/523ee8d37cb3aed6bbad16760850fa94253c2072/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=523ee8d37cb3aed6bbad16760850fa94253c2072", "patch": "@@ -2339,14 +2339,14 @@ register_diagnostics! {\n     E0212, // cannot extract an associated type from a higher-ranked trait bound\n     E0213, // associated types are not accepted in this context\n     E0214, // parenthesized parameters may only be used with a trait\n-    E0215, // angle-bracket notation is not stable with `Fn`\n-    E0216, // parenthetical notation is only stable with `Fn`\n+//  E0215, // angle-bracket notation is not stable with `Fn`\n+//  E0216, // parenthetical notation is only stable with `Fn`\n     E0217, // ambiguous associated type, defined in multiple supertraits\n     E0218, // no associated type defined\n     E0219, // associated type defined in higher-ranked supertrait\n     E0221, // ambiguous associated type in bounds\n-    //E0222, // Error code E0045 (variadic function must have C calling\n-             // convention) duplicate\n+//  E0222, // Error code E0045 (variadic function must have C calling\n+           // convention) duplicate\n     E0224, // at least one non-builtin train is required for an object type\n     E0226, // only a single explicit lifetime bound is permitted\n     E0227, // ambiguous lifetime bound, explicit lifetime bound required"}, {"sha": "3a3ea058b4e4d76350e0242de0aef550a6300938", "filename": "src/test/compile-fail/unboxed-closure-feature-gate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/523ee8d37cb3aed6bbad16760850fa94253c2072/src%2Ftest%2Fcompile-fail%2Funboxed-closure-feature-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/523ee8d37cb3aed6bbad16760850fa94253c2072/src%2Ftest%2Fcompile-fail%2Funboxed-closure-feature-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funboxed-closure-feature-gate.rs?ref=523ee8d37cb3aed6bbad16760850fa94253c2072", "patch": "@@ -21,7 +21,7 @@ trait Foo<A> {\n \n fn main() {\n     let x: Box<Foo(isize)>;\n-    //~^ ERROR parenthetical notation is only stable when used with the `Fn` family\n+    //~^ ERROR parenthetical notation is only stable when used with `Fn`-family\n \n     // No errors with these:\n     let x: Box<Fn(isize)>;"}, {"sha": "ed27a4d0b2a2fdc8438637582446c106a186709d", "filename": "src/test/compile-fail/unboxed-closure-sugar-not-used-on-fn.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/523ee8d37cb3aed6bbad16760850fa94253c2072/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-not-used-on-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/523ee8d37cb3aed6bbad16760850fa94253c2072/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-not-used-on-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-not-used-on-fn.rs?ref=523ee8d37cb3aed6bbad16760850fa94253c2072", "patch": "@@ -12,11 +12,11 @@\n // Test that the `Fn` traits require `()` form without a feature gate.\n \n fn bar1(x: &Fn<(), Output=()>) {\n-    //~^ ERROR angle-bracket notation is not stable when used with the `Fn` family\n+    //~^ ERROR of `Fn`-family traits' type parameters is subject to change\n }\n \n fn bar2<T>(x: &T) where T: Fn<()> {\n-    //~^ ERROR angle-bracket notation is not stable when used with the `Fn` family\n+    //~^ ERROR of `Fn`-family traits' type parameters is subject to change\n }\n \n fn main() { }"}]}