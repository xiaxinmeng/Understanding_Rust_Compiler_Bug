{"sha": "aee4d132e75b5dbd22d98299c0c373cd92b08749", "node_id": "C_kwDOAAsO6NoAKGFlZTRkMTMyZTc1YjVkYmQyMmQ5ODI5OWMwYzM3M2NkOTJiMDg3NDk", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-10-31T16:08:09Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-11-01T17:02:51Z"}, "message": "Remove CacheSelector.", "tree": {"sha": "71d3254b9ae6ba270f3767712eecdffca043be93", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71d3254b9ae6ba270f3767712eecdffca043be93"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aee4d132e75b5dbd22d98299c0c373cd92b08749", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aee4d132e75b5dbd22d98299c0c373cd92b08749", "html_url": "https://github.com/rust-lang/rust/commit/aee4d132e75b5dbd22d98299c0c373cd92b08749", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aee4d132e75b5dbd22d98299c0c373cd92b08749/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07f19480438e290cab41c3b61478ba993c284824", "url": "https://api.github.com/repos/rust-lang/rust/commits/07f19480438e290cab41c3b61478ba993c284824", "html_url": "https://github.com/rust-lang/rust/commit/07f19480438e290cab41c3b61478ba993c284824"}], "stats": {"total": 33, "additions": 4, "deletions": 29}, "files": [{"sha": "3258d7fc41df51cbe9db4c40600faf981a90571d", "filename": "compiler/rustc_middle/src/ty/query.rs", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/aee4d132e75b5dbd22d98299c0c373cd92b08749/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aee4d132e75b5dbd22d98299c0c373cd92b08749/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery.rs?ref=aee4d132e75b5dbd22d98299c0c373cd92b08749", "patch": "@@ -120,15 +120,9 @@ macro_rules! query_helper_param_ty {\n }\n \n macro_rules! query_storage {\n-    ([][$K:ty, $V:ty]) => {\n-        <DefaultCacheSelector as CacheSelector<$K, $V>>::Cache\n-    };\n-    ([(arena_cache) $($rest:tt)*][$K:ty, $V:ty]) => {\n-        <ArenaCacheSelector<'tcx> as CacheSelector<$K, $V>>::Cache\n-    };\n-    ([$other:tt $($modifiers:tt)*][$($args:tt)*]) => {\n-        query_storage!([$($modifiers)*][$($args)*])\n-    };\n+    ([][$K:ty, $V:ty]) => { DefaultCache<$K, $V> };\n+    ([(arena_cache) $($rest:tt)*][$K:ty, $V:ty]) => { ArenaCache<'tcx, $K, $V> };\n+    ([$other:tt $($modifiers:tt)*][$($args:tt)*]) => { query_storage!([$($modifiers)*][$($args)*]) };\n }\n \n macro_rules! separate_provide_extern_decl {"}, {"sha": "51b30a9f36ab1132060a5ab1b104686ff0a18d58", "filename": "compiler/rustc_query_system/src/query/caches.rs", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/aee4d132e75b5dbd22d98299c0c373cd92b08749/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fcaches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aee4d132e75b5dbd22d98299c0c373cd92b08749/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fcaches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fcaches.rs?ref=aee4d132e75b5dbd22d98299c0c373cd92b08749", "patch": "@@ -11,11 +11,6 @@ use rustc_data_structures::sync::WorkerLocal;\n use std::default::Default;\n use std::fmt::Debug;\n use std::hash::Hash;\n-use std::marker::PhantomData;\n-\n-pub trait CacheSelector<K, V> {\n-    type Cache;\n-}\n \n pub trait QueryStorage {\n     type Value: Debug;\n@@ -47,12 +42,6 @@ pub trait QueryCache: QueryStorage + Sized {\n     fn iter(&self, f: &mut dyn FnMut(&Self::Key, &Self::Value, DepNodeIndex));\n }\n \n-pub struct DefaultCacheSelector;\n-\n-impl<K: Eq + Hash, V: Clone> CacheSelector<K, V> for DefaultCacheSelector {\n-    type Cache = DefaultCache<K, V>;\n-}\n-\n pub struct DefaultCache<K, V> {\n     #[cfg(parallel_compiler)]\n     cache: Sharded<FxHashMap<K, (V, DepNodeIndex)>>,\n@@ -134,12 +123,6 @@ where\n     }\n }\n \n-pub struct ArenaCacheSelector<'tcx>(PhantomData<&'tcx ()>);\n-\n-impl<'tcx, K: Eq + Hash, V: 'tcx> CacheSelector<K, V> for ArenaCacheSelector<'tcx> {\n-    type Cache = ArenaCache<'tcx, K, V>;\n-}\n-\n pub struct ArenaCache<'tcx, K, V> {\n     arena: WorkerLocal<TypedArena<(V, DepNodeIndex)>>,\n     #[cfg(parallel_compiler)]"}, {"sha": "247d55be5314672802ce90c01291de861f176c66", "filename": "compiler/rustc_query_system/src/query/mod.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/aee4d132e75b5dbd22d98299c0c373cd92b08749/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aee4d132e75b5dbd22d98299c0c373cd92b08749/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fmod.rs?ref=aee4d132e75b5dbd22d98299c0c373cd92b08749", "patch": "@@ -7,9 +7,7 @@ pub use self::job::deadlock;\n pub use self::job::{print_query_stack, QueryInfo, QueryJob, QueryJobId, QueryJobInfo, QueryMap};\n \n mod caches;\n-pub use self::caches::{\n-    ArenaCacheSelector, CacheSelector, DefaultCacheSelector, QueryCache, QueryStorage,\n-};\n+pub use self::caches::{ArenaCache, DefaultCache, QueryCache, QueryStorage};\n \n mod config;\n pub use self::config::{QueryConfig, QueryDescription, QueryVTable};"}]}