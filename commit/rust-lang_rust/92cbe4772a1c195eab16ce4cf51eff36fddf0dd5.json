{"sha": "92cbe4772a1c195eab16ce4cf51eff36fddf0dd5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyY2JlNDc3MmExYzE5NWVhYjE2Y2U0Y2Y1MWVmZjM2ZmRkZjBkZDU=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-10-25T13:45:41Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-10-26T21:47:53Z"}, "message": "Add test for normalization during field-lookup on patterns with ascribed types.\n\nAs a drive-by, also added test analogous to existing\nstatic_to_a_to_static_through_tuple, but now apply to a struct instead\nof a tuple.", "tree": {"sha": "9cfb23fa33620f290f2c097852f23ab9fd456c2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cfb23fa33620f290f2c097852f23ab9fd456c2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/92cbe4772a1c195eab16ce4cf51eff36fddf0dd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/92cbe4772a1c195eab16ce4cf51eff36fddf0dd5", "html_url": "https://github.com/rust-lang/rust/commit/92cbe4772a1c195eab16ce4cf51eff36fddf0dd5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/92cbe4772a1c195eab16ce4cf51eff36fddf0dd5/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f09a0eb9c1492b83ae7feacbd8d86b48c9c0aa95", "url": "https://api.github.com/repos/rust-lang/rust/commits/f09a0eb9c1492b83ae7feacbd8d86b48c9c0aa95", "html_url": "https://github.com/rust-lang/rust/commit/f09a0eb9c1492b83ae7feacbd8d86b48c9c0aa95"}], "stats": {"total": 64, "additions": 50, "deletions": 14}, "files": [{"sha": "8c8e61cd6fbeb7ff3e3b547402236860ef9fcb98", "filename": "src/test/ui/nll/user-annotations/patterns.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/92cbe4772a1c195eab16ce4cf51eff36fddf0dd5/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92cbe4772a1c195eab16ce4cf51eff36fddf0dd5/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fpatterns.rs?ref=92cbe4772a1c195eab16ce4cf51eff36fddf0dd5", "patch": "@@ -41,6 +41,18 @@ fn struct_no_initializer() {\n     y = &x; //~ ERROR\n }\n \n+\n+fn struct_no_initializer_must_normalize() {\n+    trait Indirect { type Assoc; }\n+    struct StaticU32;\n+    impl Indirect for StaticU32 { type Assoc = &'static u32; }\n+    struct Single2<T: Indirect> { value: <T as Indirect>::Assoc }\n+\n+    let x = 22;\n+    let Single2 { value: mut _y }: Single2<StaticU32>;\n+    _y = &x; //~ ERROR\n+}\n+\n fn variable_with_initializer() {\n     let x = 22;\n     let y: &'static u32 = &x; //~ ERROR\n@@ -113,6 +125,11 @@ fn static_to_a_to_static_through_tuple<'a>(x: &'a u32) -> &'static u32 {\n     y //~ ERROR\n }\n \n+fn static_to_a_to_static_through_struct<'a>(_x: &'a u32) -> &'static u32 {\n+    let Single { value: y }: Single<&'a u32> = Single { value: &22 };\n+    y //~ ERROR\n+}\n+\n fn a_to_static_then_static<'a>(x: &'a u32) -> &'static u32 {\n     let (y, _z): (&'static u32, u32) = (x, 44); //~ ERROR\n     y"}, {"sha": "b0c554e6ca1d47f24ecf2cbb827ee0fd55b2a070", "filename": "src/test/ui/nll/user-annotations/patterns.stderr", "status": "modified", "additions": 33, "deletions": 14, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/92cbe4772a1c195eab16ce4cf51eff36fddf0dd5/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fpatterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/92cbe4772a1c195eab16ce4cf51eff36fddf0dd5/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fpatterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fpatterns.stderr?ref=92cbe4772a1c195eab16ce4cf51eff36fddf0dd5", "patch": "@@ -40,7 +40,17 @@ LL | }\n    | - `x` dropped here while still borrowed\n \n error[E0597]: `x` does not live long enough\n-  --> $DIR/patterns.rs:46:27\n+  --> $DIR/patterns.rs:53:10\n+   |\n+LL |     let Single2 { value: mut _y }: Single2<StaticU32>;\n+   |                                    ------------------ type annotation requires that `x` is borrowed for `'static`\n+LL |     _y = &x; //~ ERROR\n+   |          ^^ borrowed value does not live long enough\n+LL | }\n+   | - `x` dropped here while still borrowed\n+\n+error[E0597]: `x` does not live long enough\n+  --> $DIR/patterns.rs:58:27\n    |\n LL |     let y: &'static u32 = &x; //~ ERROR\n    |            ------------   ^^ borrowed value does not live long enough\n@@ -50,7 +60,7 @@ LL | }\n    | - `x` dropped here while still borrowed\n \n error[E0597]: `x` does not live long enough\n-  --> $DIR/patterns.rs:51:27\n+  --> $DIR/patterns.rs:63:27\n    |\n LL |     let _: &'static u32 = &x; //~ ERROR\n    |            ------------   ^^ borrowed value does not live long enough\n@@ -61,7 +71,7 @@ LL | }\n    | - `x` dropped here while still borrowed\n \n error[E0716]: temporary value dropped while borrowed\n-  --> $DIR/patterns.rs:53:41\n+  --> $DIR/patterns.rs:65:41\n    |\n LL |     let _: Vec<&'static String> = vec![&String::new()];\n    |            --------------------         ^^^^^^^^^^^^^ - temporary value is freed at the end of this statement\n@@ -70,7 +80,7 @@ LL |     let _: Vec<&'static String> = vec![&String::new()];\n    |            type annotation requires that borrow lasts for `'static`\n \n error[E0716]: temporary value dropped while borrowed\n-  --> $DIR/patterns.rs:56:52\n+  --> $DIR/patterns.rs:68:52\n    |\n LL |     let (_, a): (Vec<&'static String>, _) = (vec![&String::new()], 44);\n    |                 -------------------------          ^^^^^^^^^^^^^      - temporary value is freed at the end of this statement\n@@ -79,7 +89,7 @@ LL |     let (_, a): (Vec<&'static String>, _) = (vec![&String::new()], 44);\n    |                 type annotation requires that borrow lasts for `'static`\n \n error[E0716]: temporary value dropped while borrowed\n-  --> $DIR/patterns.rs:59:53\n+  --> $DIR/patterns.rs:71:53\n    |\n LL |     let (_a, b): (Vec<&'static String>, _) = (vec![&String::new()], 44);\n    |                  -------------------------          ^^^^^^^^^^^^^      - temporary value is freed at the end of this statement\n@@ -88,7 +98,7 @@ LL |     let (_a, b): (Vec<&'static String>, _) = (vec![&String::new()], 44);\n    |                  type annotation requires that borrow lasts for `'static`\n \n error[E0597]: `x` does not live long enough\n-  --> $DIR/patterns.rs:65:40\n+  --> $DIR/patterns.rs:77:40\n    |\n LL |     let (_, _): (&'static u32, u32) = (&x, 44); //~ ERROR\n    |                 -------------------    ^^ borrowed value does not live long enough\n@@ -98,7 +108,7 @@ LL | }\n    | - `x` dropped here while still borrowed\n \n error[E0597]: `x` does not live long enough\n-  --> $DIR/patterns.rs:70:40\n+  --> $DIR/patterns.rs:82:40\n    |\n LL |     let (y, _): (&'static u32, u32) = (&x, 44); //~ ERROR\n    |                 -------------------    ^^ borrowed value does not live long enough\n@@ -108,7 +118,7 @@ LL | }\n    | - `x` dropped here while still borrowed\n \n error[E0597]: `x` does not live long enough\n-  --> $DIR/patterns.rs:75:69\n+  --> $DIR/patterns.rs:87:69\n    |\n LL |     let Single { value: y }: Single<&'static u32> = Single { value: &x }; //~ ERROR\n    |                              --------------------                   ^^ borrowed value does not live long enough\n@@ -118,7 +128,7 @@ LL | }\n    | - `x` dropped here while still borrowed\n \n error[E0597]: `x` does not live long enough\n-  --> $DIR/patterns.rs:80:69\n+  --> $DIR/patterns.rs:92:69\n    |\n LL |     let Single { value: _ }: Single<&'static u32> = Single { value: &x }; //~ ERROR\n    |                              --------------------                   ^^ borrowed value does not live long enough\n@@ -128,7 +138,7 @@ LL | }\n    | - `x` dropped here while still borrowed\n \n error[E0597]: `x` does not live long enough\n-  --> $DIR/patterns.rs:88:17\n+  --> $DIR/patterns.rs:100:17\n    |\n LL |     let Double { value1: _, value2: _ }: Double<&'static u32> = Double {\n    |                                          -------------------- type annotation requires that `x` is borrowed for `'static`\n@@ -139,7 +149,7 @@ LL | }\n    | - `x` dropped here while still borrowed\n \n error: unsatisfied lifetime constraints\n-  --> $DIR/patterns.rs:101:5\n+  --> $DIR/patterns.rs:113:5\n    |\n LL | fn static_to_a_to_static_through_variable<'a>(x: &'a u32) -> &'static u32 {\n    |                                           -- lifetime `'a` defined here\n@@ -148,7 +158,7 @@ LL |     y //~ ERROR\n    |     ^ returning this value requires that `'a` must outlive `'static`\n \n error: unsatisfied lifetime constraints\n-  --> $DIR/patterns.rs:113:5\n+  --> $DIR/patterns.rs:125:5\n    |\n LL | fn static_to_a_to_static_through_tuple<'a>(x: &'a u32) -> &'static u32 {\n    |                                        -- lifetime `'a` defined here\n@@ -157,14 +167,23 @@ LL |     y //~ ERROR\n    |     ^ returning this value requires that `'a` must outlive `'static`\n \n error: unsatisfied lifetime constraints\n-  --> $DIR/patterns.rs:117:18\n+  --> $DIR/patterns.rs:130:5\n+   |\n+LL | fn static_to_a_to_static_through_struct<'a>(_x: &'a u32) -> &'static u32 {\n+   |                                         -- lifetime `'a` defined here\n+LL |     let Single { value: y }: Single<&'a u32> = Single { value: &22 };\n+LL |     y //~ ERROR\n+   |     ^ returning this value requires that `'a` must outlive `'static`\n+\n+error: unsatisfied lifetime constraints\n+  --> $DIR/patterns.rs:134:18\n    |\n LL | fn a_to_static_then_static<'a>(x: &'a u32) -> &'static u32 {\n    |                            -- lifetime `'a` defined here\n LL |     let (y, _z): (&'static u32, u32) = (x, 44); //~ ERROR\n    |                  ^^^^^^^^^^^^^^^^^^^ type annotation requires that `'a` must outlive `'static`\n \n-error: aborting due to 17 previous errors\n+error: aborting due to 19 previous errors\n \n Some errors occurred: E0597, E0716.\n For more information about an error, try `rustc --explain E0597`."}]}