{"sha": "b2480a0251465ddda9a45fc375197c6fbad4f764", "node_id": "C_kwDOAAsO6NoAKGIyNDgwYTAyNTE0NjVkZGRhOWE0NWZjMzc1MTk3YzZmYmFkNGY3NjQ", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-05-22T02:48:35Z"}, "committer": {"name": "Takayuki Maeda", "email": "41065217+TaKO8Ki@users.noreply.github.com", "date": "2022-05-25T00:58:19Z"}, "message": "suggest `extern crate foo` when failing to resolve `use foo`\n\nfix ci error", "tree": {"sha": "3c483699e4e1a8c3bc44695c1317db702dafc33d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c483699e4e1a8c3bc44695c1317db702dafc33d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2480a0251465ddda9a45fc375197c6fbad4f764", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2480a0251465ddda9a45fc375197c6fbad4f764", "html_url": "https://github.com/rust-lang/rust/commit/b2480a0251465ddda9a45fc375197c6fbad4f764", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2480a0251465ddda9a45fc375197c6fbad4f764/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8fbd92d0b95d847c68948d8dbbfaccb470db4f92", "url": "https://api.github.com/repos/rust-lang/rust/commits/8fbd92d0b95d847c68948d8dbbfaccb470db4f92", "html_url": "https://github.com/rust-lang/rust/commit/8fbd92d0b95d847c68948d8dbbfaccb470db4f92"}], "stats": {"total": 102, "additions": 94, "deletions": 8}, "files": [{"sha": "75eb03c46cbc3d534737788aea2a2f93327b4d58", "filename": "compiler/rustc_resolve/src/diagnostics.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b2480a0251465ddda9a45fc375197c6fbad4f764/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2480a0251465ddda9a45fc375197c6fbad4f764/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs?ref=b2480a0251465ddda9a45fc375197c6fbad4f764", "patch": "@@ -1836,9 +1836,18 @@ impl<'a> Resolver<'a> {\n                     )),\n                 )\n             } else if self.session.edition() == Edition::Edition2015 {\n-                (format!(\"maybe a missing crate `{}`?\", ident), None)\n+                (\n+                    format!(\"maybe a missing crate `{ident}`?\"),\n+                    Some((\n+                        vec![],\n+                        format!(\n+                            \"consider adding `extern crate {ident}` to use the `{ident}` crate\"\n+                        ),\n+                        Applicability::MaybeIncorrect,\n+                    )),\n+                )\n             } else {\n-                (format!(\"could not find `{}` in the crate root\", ident), None)\n+                (format!(\"could not find `{ident}` in the crate root\"), None)\n             }\n         } else if i > 0 {\n             let parent = path[i - 1].ident.name;\n@@ -1849,7 +1858,7 @@ impl<'a> Resolver<'a> {\n                     \"the list of imported crates\".to_owned()\n                 }\n                 kw::PathRoot | kw::Crate => \"the crate root\".to_owned(),\n-                _ => format!(\"`{}`\", parent),\n+                _ => format!(\"`{parent}`\"),\n             };\n \n             let mut msg = format!(\"could not find `{}` in {}\", ident, parent);"}, {"sha": "d8695b67d83c81d477978d4d468f1af4c17eb11b", "filename": "compiler/rustc_resolve/src/imports.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b2480a0251465ddda9a45fc375197c6fbad4f764/compiler%2Frustc_resolve%2Fsrc%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2480a0251465ddda9a45fc375197c6fbad4f764/compiler%2Frustc_resolve%2Fsrc%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fimports.rs?ref=b2480a0251465ddda9a45fc375197c6fbad4f764", "patch": "@@ -475,6 +475,10 @@ impl<'a, 'b> ImportResolver<'a, 'b> {\n             }\n \n             if let Some((suggestions, msg, applicability)) = err.suggestion {\n+                if suggestions.is_empty() {\n+                    diag.help(&msg);\n+                    continue;\n+                }\n                 diag.multipart_suggestion(&msg, suggestions, applicability);\n             }\n         }"}, {"sha": "b54f8200666004f34889f87217065446646aff72", "filename": "src/test/rustdoc-ui/intra-doc/unresolved-import-recovery.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Funresolved-import-recovery.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Funresolved-import-recovery.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Funresolved-import-recovery.stderr?ref=b2480a0251465ddda9a45fc375197c6fbad4f764", "patch": "@@ -3,6 +3,8 @@ error[E0433]: failed to resolve: maybe a missing crate `unresolved_crate`?\n    |\n LL | use unresolved_crate::module::Name;\n    |     ^^^^^^^^^^^^^^^^ maybe a missing crate `unresolved_crate`?\n+   |\n+   = help: consider adding `extern crate unresolved_crate` to use the `unresolved_crate` crate\n \n error: Compilation failed, aborting rustdoc\n "}, {"sha": "38fadaa44358f3354383a3fd8976c003410207f9", "filename": "src/test/rustdoc-ui/issue-61732.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Frustdoc-ui%2Fissue-61732.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Frustdoc-ui%2Fissue-61732.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fissue-61732.stderr?ref=b2480a0251465ddda9a45fc375197c6fbad4f764", "patch": "@@ -3,6 +3,8 @@ error[E0433]: failed to resolve: maybe a missing crate `r#mod`?\n    |\n LL | pub(in crate::r#mod) fn main() {}\n    |               ^^^^^ maybe a missing crate `r#mod`?\n+   |\n+   = help: consider adding `extern crate r#mod` to use the `r#mod` crate\n \n error: Compilation failed, aborting rustdoc\n "}, {"sha": "439762546381ec45c9364ea3f061f019298326d3", "filename": "src/test/ui/attributes/field-attributes-vis-unresolved.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Fattributes%2Ffield-attributes-vis-unresolved.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Fattributes%2Ffield-attributes-vis-unresolved.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Ffield-attributes-vis-unresolved.stderr?ref=b2480a0251465ddda9a45fc375197c6fbad4f764", "patch": "@@ -3,12 +3,16 @@ error[E0433]: failed to resolve: maybe a missing crate `nonexistent`?\n    |\n LL |     pub(in nonexistent) field: u8\n    |            ^^^^^^^^^^^ maybe a missing crate `nonexistent`?\n+   |\n+   = help: consider adding `extern crate nonexistent` to use the `nonexistent` crate\n \n error[E0433]: failed to resolve: maybe a missing crate `nonexistent`?\n   --> $DIR/field-attributes-vis-unresolved.rs:22:12\n    |\n LL |     pub(in nonexistent) u8\n    |            ^^^^^^^^^^^ maybe a missing crate `nonexistent`?\n+   |\n+   = help: consider adding `extern crate nonexistent` to use the `nonexistent` crate\n \n error: aborting due to 2 previous errors\n "}, {"sha": "ed9536f164ef0ed51f67c677cf5538f3f8f90639", "filename": "src/test/ui/error-codes/E0432.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Ferror-codes%2FE0432.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Ferror-codes%2FE0432.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0432.stderr?ref=b2480a0251465ddda9a45fc375197c6fbad4f764", "patch": "@@ -3,6 +3,8 @@ error[E0432]: unresolved import `something`\n    |\n LL | use something::Foo;\n    |     ^^^^^^^^^ maybe a missing crate `something`?\n+   |\n+   = help: consider adding `extern crate something` to use the `something` crate\n \n error: aborting due to previous error\n "}, {"sha": "3bae23a4aaa78e7e987d11d93d24ef6cd249a3ee", "filename": "src/test/ui/feature-gates/feature-gate-extern_absolute_paths.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-extern_absolute_paths.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-extern_absolute_paths.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-extern_absolute_paths.stderr?ref=b2480a0251465ddda9a45fc375197c6fbad4f764", "patch": "@@ -3,12 +3,16 @@ error[E0432]: unresolved import `core`\n    |\n LL | use core::default;\n    |     ^^^^ maybe a missing crate `core`?\n+   |\n+   = help: consider adding `extern crate core` to use the `core` crate\n \n error[E0433]: failed to resolve: maybe a missing crate `core`?\n   --> $DIR/feature-gate-extern_absolute_paths.rs:4:19\n    |\n LL |     let _: u8 = ::core::default::Default();\n    |                   ^^^^ maybe a missing crate `core`?\n+   |\n+   = help: consider adding `extern crate core` to use the `core` crate\n \n error: aborting due to 2 previous errors\n "}, {"sha": "ca75c9c18bd280811c72d131934603b8392da5f3", "filename": "src/test/ui/imports/import3.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Fimports%2Fimport3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Fimports%2Fimport3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fimport3.stderr?ref=b2480a0251465ddda9a45fc375197c6fbad4f764", "patch": "@@ -3,6 +3,8 @@ error[E0432]: unresolved import `main`\n    |\n LL | use main::bar;\n    |     ^^^^ maybe a missing crate `main`?\n+   |\n+   = help: consider adding `extern crate main` to use the `main` crate\n \n error: aborting due to previous error\n "}, {"sha": "019ef9ad56a1f87f626c0f90b06e5ab90f1f9410", "filename": "src/test/ui/imports/issue-1697.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Fimports%2Fissue-1697.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Fimports%2Fissue-1697.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fissue-1697.stderr?ref=b2480a0251465ddda9a45fc375197c6fbad4f764", "patch": "@@ -3,6 +3,8 @@ error[E0432]: unresolved import `unresolved`\n    |\n LL | use unresolved::*;\n    |     ^^^^^^^^^^ maybe a missing crate `unresolved`?\n+   |\n+   = help: consider adding `extern crate unresolved` to use the `unresolved` crate\n \n error: aborting due to previous error\n "}, {"sha": "c4e5c55589914a11312b2873cef5b1b5649266c1", "filename": "src/test/ui/imports/issue-33464.stderr", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Fimports%2Fissue-33464.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Fimports%2Fissue-33464.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fissue-33464.stderr?ref=b2480a0251465ddda9a45fc375197c6fbad4f764", "patch": "@@ -3,18 +3,24 @@ error[E0432]: unresolved import `abc`\n    |\n LL | use abc::one_el;\n    |     ^^^ maybe a missing crate `abc`?\n+   |\n+   = help: consider adding `extern crate abc` to use the `abc` crate\n \n error[E0432]: unresolved import `abc`\n   --> $DIR/issue-33464.rs:5:5\n    |\n LL | use abc::{a, bbb, cccccc};\n    |     ^^^ maybe a missing crate `abc`?\n+   |\n+   = help: consider adding `extern crate abc` to use the `abc` crate\n \n error[E0432]: unresolved import `a_very_long_name`\n   --> $DIR/issue-33464.rs:7:5\n    |\n LL | use a_very_long_name::{el, el2};\n    |     ^^^^^^^^^^^^^^^^ maybe a missing crate `a_very_long_name`?\n+   |\n+   = help: consider adding `extern crate a_very_long_name` to use the `a_very_long_name` crate\n \n error: aborting due to 3 previous errors\n "}, {"sha": "2e1b468603d47c7966a34dc9cf605ebddd374947", "filename": "src/test/ui/imports/issue-36881.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Fimports%2Fissue-36881.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Fimports%2Fissue-36881.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fissue-36881.stderr?ref=b2480a0251465ddda9a45fc375197c6fbad4f764", "patch": "@@ -3,6 +3,8 @@ error[E0432]: unresolved import `issue_36881_aux`\n    |\n LL |     use issue_36881_aux::Foo;\n    |         ^^^^^^^^^^^^^^^ maybe a missing crate `issue_36881_aux`?\n+   |\n+   = help: consider adding `extern crate issue_36881_aux` to use the `issue_36881_aux` crate\n \n error: aborting due to previous error\n "}, {"sha": "75185cad3b764885eb3bb0881f7408b8a853f108", "filename": "src/test/ui/imports/issue-37887.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Fimports%2Fissue-37887.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Fimports%2Fissue-37887.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fissue-37887.stderr?ref=b2480a0251465ddda9a45fc375197c6fbad4f764", "patch": "@@ -3,6 +3,8 @@ error[E0432]: unresolved import `libc`\n    |\n LL |     use libc::*;\n    |         ^^^^ maybe a missing crate `libc`?\n+   |\n+   = help: consider adding `extern crate libc` to use the `libc` crate\n \n error[E0658]: use of unstable library feature 'rustc_private': this crate is being loaded from the sysroot, an unstable location; did you mean to load this crate from crates.io via `Cargo.toml` instead?\n   --> $DIR/issue-37887.rs:2:5"}, {"sha": "29c7556dac432a5f459e13a5648aeadfd7ba73b1", "filename": "src/test/ui/imports/issue-53269.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Fimports%2Fissue-53269.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Fimports%2Fissue-53269.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fissue-53269.stderr?ref=b2480a0251465ddda9a45fc375197c6fbad4f764", "patch": "@@ -3,6 +3,8 @@ error[E0432]: unresolved import `nonexistent_module`\n    |\n LL |     use nonexistent_module::mac;\n    |         ^^^^^^^^^^^^^^^^^^ maybe a missing crate `nonexistent_module`?\n+   |\n+   = help: consider adding `extern crate nonexistent_module` to use the `nonexistent_module` crate\n \n error[E0659]: `mac` is ambiguous\n   --> $DIR/issue-53269.rs:8:5"}, {"sha": "788fcc830ae9abc95ba519b99375e2aadd7b6be6", "filename": "src/test/ui/imports/issue-55457.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Fimports%2Fissue-55457.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Fimports%2Fissue-55457.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fissue-55457.stderr?ref=b2480a0251465ddda9a45fc375197c6fbad4f764", "patch": "@@ -12,6 +12,8 @@ error[E0432]: unresolved import `non_existent`\n    |\n LL | use non_existent::non_existent;\n    |     ^^^^^^^^^^^^ maybe a missing crate `non_existent`?\n+   |\n+   = help: consider adding `extern crate non_existent` to use the `non_existent` crate\n \n error: cannot determine resolution for the derive macro `NonExistent`\n   --> $DIR/issue-55457.rs:5:10"}, {"sha": "6caf15bc7240163fab97cfb774cc5fd9f475859d", "filename": "src/test/ui/imports/tool-mod-child.stderr", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Fimports%2Ftool-mod-child.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Fimports%2Ftool-mod-child.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Ftool-mod-child.stderr?ref=b2480a0251465ddda9a45fc375197c6fbad4f764", "patch": "@@ -3,24 +3,32 @@ error[E0433]: failed to resolve: maybe a missing crate `clippy`?\n    |\n LL | use clippy::a::b;\n    |     ^^^^^^ maybe a missing crate `clippy`?\n+   |\n+   = help: consider adding `extern crate clippy` to use the `clippy` crate\n \n error[E0432]: unresolved import `clippy`\n   --> $DIR/tool-mod-child.rs:1:5\n    |\n LL | use clippy::a;\n    |     ^^^^^^ maybe a missing crate `clippy`?\n+   |\n+   = help: consider adding `extern crate clippy` to use the `clippy` crate\n \n error[E0433]: failed to resolve: maybe a missing crate `rustdoc`?\n   --> $DIR/tool-mod-child.rs:5:5\n    |\n LL | use rustdoc::a::b;\n    |     ^^^^^^^ maybe a missing crate `rustdoc`?\n+   |\n+   = help: consider adding `extern crate rustdoc` to use the `rustdoc` crate\n \n error[E0432]: unresolved import `rustdoc`\n   --> $DIR/tool-mod-child.rs:4:5\n    |\n LL | use rustdoc::a;\n    |     ^^^^^^^ maybe a missing crate `rustdoc`?\n+   |\n+   = help: consider adding `extern crate rustdoc` to use the `rustdoc` crate\n \n error: aborting due to 4 previous errors\n "}, {"sha": "73f9d1bfb6c618757f7c18ebaea51c2f7a31779e", "filename": "src/test/ui/imports/unresolved-imports-used.stderr", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Fimports%2Funresolved-imports-used.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Fimports%2Funresolved-imports-used.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Funresolved-imports-used.stderr?ref=b2480a0251465ddda9a45fc375197c6fbad4f764", "patch": "@@ -15,24 +15,32 @@ error[E0432]: unresolved import `foo`\n    |\n LL | use foo::bar;\n    |     ^^^ maybe a missing crate `foo`?\n+   |\n+   = help: consider adding `extern crate foo` to use the `foo` crate\n \n error[E0432]: unresolved import `baz`\n   --> $DIR/unresolved-imports-used.rs:12:5\n    |\n LL | use baz::*;\n    |     ^^^ maybe a missing crate `baz`?\n+   |\n+   = help: consider adding `extern crate baz` to use the `baz` crate\n \n error[E0432]: unresolved import `foo2`\n   --> $DIR/unresolved-imports-used.rs:14:5\n    |\n LL | use foo2::bar2;\n    |     ^^^^ maybe a missing crate `foo2`?\n+   |\n+   = help: consider adding `extern crate foo2` to use the `foo2` crate\n \n error[E0432]: unresolved import `baz2`\n   --> $DIR/unresolved-imports-used.rs:15:5\n    |\n LL | use baz2::*;\n    |     ^^^^ maybe a missing crate `baz2`?\n+   |\n+   = help: consider adding `extern crate baz2` to use the `baz2` crate\n \n error[E0603]: function `quz` is private\n   --> $DIR/unresolved-imports-used.rs:9:10"}, {"sha": "54ee45c28679a598f37ac0aaa7f3f6958deb1dc7", "filename": "src/test/ui/keyword/extern/keyword-extern-as-identifier-use.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Fkeyword%2Fextern%2Fkeyword-extern-as-identifier-use.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Fkeyword%2Fextern%2Fkeyword-extern-as-identifier-use.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fkeyword%2Fextern%2Fkeyword-extern-as-identifier-use.stderr?ref=b2480a0251465ddda9a45fc375197c6fbad4f764", "patch": "@@ -14,6 +14,8 @@ error[E0432]: unresolved import `r#extern`\n    |\n LL | use extern::foo;\n    |     ^^^^^^ maybe a missing crate `r#extern`?\n+   |\n+   = help: consider adding `extern crate r#extern` to use the `r#extern` crate\n \n error: aborting due to 2 previous errors\n "}, {"sha": "00e00dd943dcd22e6e2feb6ac082ed4e8ddde59b", "filename": "src/test/ui/privacy/restricted/test.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Fprivacy%2Frestricted%2Ftest.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Fprivacy%2Frestricted%2Ftest.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Frestricted%2Ftest.stderr?ref=b2480a0251465ddda9a45fc375197c6fbad4f764", "patch": "@@ -3,6 +3,8 @@ error[E0433]: failed to resolve: maybe a missing crate `bad`?\n    |\n LL |     pub(in bad::path) mod m1 {}\n    |            ^^^ maybe a missing crate `bad`?\n+   |\n+   = help: consider adding `extern crate bad` to use the `bad` crate\n \n error[E0742]: visibilities can only be restricted to ancestor modules\n   --> $DIR/test.rs:51:12"}, {"sha": "00cdd0c58f4ec80c040ec92409667471851da6a2", "filename": "src/test/ui/resolve/editions-crate-root-2015.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Fresolve%2Feditions-crate-root-2015.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Fresolve%2Feditions-crate-root-2015.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Feditions-crate-root-2015.stderr?ref=b2480a0251465ddda9a45fc375197c6fbad4f764", "patch": "@@ -3,12 +3,16 @@ error[E0433]: failed to resolve: maybe a missing crate `nonexistant`?\n    |\n LL |     fn global_inner(_: ::nonexistant::Foo) {\n    |                          ^^^^^^^^^^^ maybe a missing crate `nonexistant`?\n+   |\n+   = help: consider adding `extern crate nonexistant` to use the `nonexistant` crate\n \n error[E0433]: failed to resolve: maybe a missing crate `nonexistant`?\n   --> $DIR/editions-crate-root-2015.rs:7:30\n    |\n LL |     fn crate_inner(_: crate::nonexistant::Foo) {\n    |                              ^^^^^^^^^^^ maybe a missing crate `nonexistant`?\n+   |\n+   = help: consider adding `extern crate nonexistant` to use the `nonexistant` crate\n \n error[E0412]: cannot find type `nonexistant` in the crate root\n   --> $DIR/editions-crate-root-2015.rs:11:25"}, {"sha": "a1591914b4d298878bd6c03be274e603e29f00e6", "filename": "src/test/ui/resolve/extern-prelude-fail.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Fresolve%2Fextern-prelude-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Fresolve%2Fextern-prelude-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fextern-prelude-fail.stderr?ref=b2480a0251465ddda9a45fc375197c6fbad4f764", "patch": "@@ -3,12 +3,16 @@ error[E0432]: unresolved import `extern_prelude`\n    |\n LL |     use extern_prelude::S;\n    |         ^^^^^^^^^^^^^^ maybe a missing crate `extern_prelude`?\n+   |\n+   = help: consider adding `extern crate extern_prelude` to use the `extern_prelude` crate\n \n error[E0433]: failed to resolve: maybe a missing crate `extern_prelude`?\n   --> $DIR/extern-prelude-fail.rs:8:15\n    |\n LL |     let s = ::extern_prelude::S;\n    |               ^^^^^^^^^^^^^^ maybe a missing crate `extern_prelude`?\n+   |\n+   = help: consider adding `extern crate extern_prelude` to use the `extern_prelude` crate\n \n error: aborting due to 2 previous errors\n "}, {"sha": "730fd6d602645d9af74dd88af6fc12eb43946845", "filename": "src/test/ui/resolve/issue-82865.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Fresolve%2Fissue-82865.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Fresolve%2Fissue-82865.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-82865.stderr?ref=b2480a0251465ddda9a45fc375197c6fbad4f764", "patch": "@@ -3,6 +3,8 @@ error[E0433]: failed to resolve: maybe a missing crate `x`?\n    |\n LL | use x::y::z;\n    |     ^ maybe a missing crate `x`?\n+   |\n+   = help: consider adding `extern crate x` to use the `x` crate\n \n error[E0599]: no function or associated item named `z` found for struct `Box<_, _>` in the current scope\n   --> $DIR/issue-82865.rs:8:10"}, {"sha": "2ac41b87562e10c1784c18468274accf8cb66971", "filename": "src/test/ui/resolve/resolve-bad-visibility.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Fresolve%2Fresolve-bad-visibility.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Fresolve%2Fresolve-bad-visibility.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-bad-visibility.stderr?ref=b2480a0251465ddda9a45fc375197c6fbad4f764", "patch": "@@ -21,12 +21,16 @@ error[E0433]: failed to resolve: maybe a missing crate `nonexistent`?\n    |\n LL | pub(in nonexistent) struct G;\n    |        ^^^^^^^^^^^ maybe a missing crate `nonexistent`?\n+   |\n+   = help: consider adding `extern crate nonexistent` to use the `nonexistent` crate\n \n error[E0433]: failed to resolve: maybe a missing crate `too_soon`?\n   --> $DIR/resolve-bad-visibility.rs:8:8\n    |\n LL | pub(in too_soon) struct H;\n    |        ^^^^^^^^ maybe a missing crate `too_soon`?\n+   |\n+   = help: consider adding `extern crate too_soon` to use the `too_soon` crate\n \n error: aborting due to 5 previous errors\n "}, {"sha": "870f4064de49b57b311ca937940599ba36013c99", "filename": "src/test/ui/simd/portable-intrinsics-arent-exposed.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Fsimd%2Fportable-intrinsics-arent-exposed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Fsimd%2Fportable-intrinsics-arent-exposed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd%2Fportable-intrinsics-arent-exposed.stderr?ref=b2480a0251465ddda9a45fc375197c6fbad4f764", "patch": "@@ -3,6 +3,8 @@ error[E0433]: failed to resolve: maybe a missing crate `core`?\n    |\n LL | use core::simd::intrinsics;\n    |     ^^^^ maybe a missing crate `core`?\n+   |\n+   = help: consider adding `extern crate core` to use the `core` crate\n \n error[E0432]: unresolved import `std::simd::intrinsics`\n   --> $DIR/portable-intrinsics-arent-exposed.rs:5:5"}, {"sha": "8df8eab34a715cb46aa388a93f127248619d35ae", "filename": "src/test/ui/unresolved/unresolved-asterisk-imports.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Funresolved%2Funresolved-asterisk-imports.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Funresolved%2Funresolved-asterisk-imports.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funresolved%2Funresolved-asterisk-imports.stderr?ref=b2480a0251465ddda9a45fc375197c6fbad4f764", "patch": "@@ -3,6 +3,8 @@ error[E0432]: unresolved import `not_existing_crate`\n    |\n LL | use not_existing_crate::*;\n    |     ^^^^^^^^^^^^^^^^^^ maybe a missing crate `not_existing_crate`?\n+   |\n+   = help: consider adding `extern crate not_existing_crate` to use the `not_existing_crate` crate\n \n error: aborting due to previous error\n "}, {"sha": "4125c593c747fda6167a93942160f1a6e4c6eda6", "filename": "src/test/ui/unresolved/unresolved-import.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Funresolved%2Funresolved-import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Funresolved%2Funresolved-import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funresolved%2Funresolved-import.rs?ref=b2480a0251465ddda9a45fc375197c6fbad4f764", "patch": "@@ -1,5 +1,6 @@\n use foo::bar; //~ ERROR unresolved import `foo` [E0432]\n               //~^ maybe a missing crate `foo`?\n+              //~| HELP consider adding `extern crate foo` to use the `foo` crate\n \n use bar::Baz as x; //~ ERROR unresolved import `bar::Baz` [E0432]\n                    //~| no `Baz` in `bar`"}, {"sha": "0dd928c8b6ffd35f681827c00c91e21733e512f7", "filename": "src/test/ui/unresolved/unresolved-import.stderr", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Funresolved%2Funresolved-import.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b2480a0251465ddda9a45fc375197c6fbad4f764/src%2Ftest%2Fui%2Funresolved%2Funresolved-import.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funresolved%2Funresolved-import.stderr?ref=b2480a0251465ddda9a45fc375197c6fbad4f764", "patch": "@@ -3,9 +3,11 @@ error[E0432]: unresolved import `foo`\n    |\n LL | use foo::bar;\n    |     ^^^ maybe a missing crate `foo`?\n+   |\n+   = help: consider adding `extern crate foo` to use the `foo` crate\n \n error[E0432]: unresolved import `bar::Baz`\n-  --> $DIR/unresolved-import.rs:4:5\n+  --> $DIR/unresolved-import.rs:5:5\n    |\n LL | use bar::Baz as x;\n    |     ^^^^^---^^^^^\n@@ -14,7 +16,7 @@ LL | use bar::Baz as x;\n    |     no `Baz` in `bar`\n \n error[E0432]: unresolved import `food::baz`\n-  --> $DIR/unresolved-import.rs:9:5\n+  --> $DIR/unresolved-import.rs:10:5\n    |\n LL | use food::baz;\n    |     ^^^^^^---\n@@ -23,7 +25,7 @@ LL | use food::baz;\n    |     no `baz` in `food`\n \n error[E0432]: unresolved import `food::beens`\n-  --> $DIR/unresolved-import.rs:14:12\n+  --> $DIR/unresolved-import.rs:15:12\n    |\n LL | use food::{beens as Foo};\n    |            -----^^^^^^^\n@@ -32,13 +34,13 @@ LL | use food::{beens as Foo};\n    |            help: a similar name exists in the module: `beans`\n \n error[E0432]: unresolved import `MyEnum`\n-  --> $DIR/unresolved-import.rs:38:9\n+  --> $DIR/unresolved-import.rs:39:9\n    |\n LL |     use MyEnum::*;\n    |         ^^^^^^ help: a similar path exists: `self::MyEnum`\n \n error[E0432]: unresolved import `Enum`\n-  --> $DIR/unresolved-import.rs:48:9\n+  --> $DIR/unresolved-import.rs:49:9\n    |\n LL |     use Enum::*;\n    |         ^^^^ help: a similar path exists: `self::Enum`"}]}