{"sha": "fba0df72d320a5b2e19678c9490825568de6f9a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiYTBkZjcyZDMyMGE1YjJlMTk2NzhjOTQ5MDgyNTU2OGRlNmY5YTQ=", "commit": {"author": {"name": "Haitao Li", "email": "lihaitao@gmail.com", "date": "2011-11-17T03:50:50Z"}, "committer": {"name": "Haitao Li", "email": "lihaitao@gmail.com", "date": "2011-11-16T15:45:07Z"}, "message": "Use attributes for native module ABI and link name [temp]\n\nThis patch adds support of using attributes to specify native mode ABI\nand link name. The old optional syntax like:\n  native \"cdecl\" mod llvm = \"rustllvm\" { ... }\nis still supported.\n\nThis is a transitional commit to avoid making a stage1 (backward\nimcompatible) snapshot.", "tree": {"sha": "6f3cba64ec10eea6321badcd5d6242e3799cefa8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f3cba64ec10eea6321badcd5d6242e3799cefa8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fba0df72d320a5b2e19678c9490825568de6f9a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fba0df72d320a5b2e19678c9490825568de6f9a4", "html_url": "https://github.com/rust-lang/rust/commit/fba0df72d320a5b2e19678c9490825568de6f9a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fba0df72d320a5b2e19678c9490825568de6f9a4/comments", "author": {"login": "lht", "id": 19508, "node_id": "MDQ6VXNlcjE5NTA4", "avatar_url": "https://avatars.githubusercontent.com/u/19508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lht", "html_url": "https://github.com/lht", "followers_url": "https://api.github.com/users/lht/followers", "following_url": "https://api.github.com/users/lht/following{/other_user}", "gists_url": "https://api.github.com/users/lht/gists{/gist_id}", "starred_url": "https://api.github.com/users/lht/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lht/subscriptions", "organizations_url": "https://api.github.com/users/lht/orgs", "repos_url": "https://api.github.com/users/lht/repos", "events_url": "https://api.github.com/users/lht/events{/privacy}", "received_events_url": "https://api.github.com/users/lht/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lht", "id": 19508, "node_id": "MDQ6VXNlcjE5NTA4", "avatar_url": "https://avatars.githubusercontent.com/u/19508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lht", "html_url": "https://github.com/lht", "followers_url": "https://api.github.com/users/lht/followers", "following_url": "https://api.github.com/users/lht/following{/other_user}", "gists_url": "https://api.github.com/users/lht/gists{/gist_id}", "starred_url": "https://api.github.com/users/lht/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lht/subscriptions", "organizations_url": "https://api.github.com/users/lht/orgs", "repos_url": "https://api.github.com/users/lht/repos", "events_url": "https://api.github.com/users/lht/events{/privacy}", "received_events_url": "https://api.github.com/users/lht/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b683f52052b0cbf514c89a4da08df2b8e017fd4", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b683f52052b0cbf514c89a4da08df2b8e017fd4", "html_url": "https://github.com/rust-lang/rust/commit/3b683f52052b0cbf514c89a4da08df2b8e017fd4"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "580822d9f1d87c10cd4e7d8d7d35cfa21d18fd1d", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/fba0df72d320a5b2e19678c9490825568de6f9a4/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fba0df72d320a5b2e19678c9490825568de6f9a4/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=fba0df72d320a5b2e19678c9490825568de6f9a4", "patch": "@@ -7,6 +7,7 @@ import token::can_begin_expr;\n import codemap::span;\n import util::interner;\n import ast::{node_id, spanned};\n+import front::attr;\n \n tag restriction { UNRESTRICTED; RESTRICT_NO_CALL_EXPRS; }\n \n@@ -2012,14 +2013,37 @@ fn parse_item_native_mod(p: parser, attrs: [ast::attribute]) -> @ast::item {\n         } else {\n             p.fatal(\"unsupported abi: \" + t);\n         }\n+    } else {\n+        abi =\n+            alt attr::get_meta_item_value_str_by_name(attrs, \"abi\") {\n+              none. { ast::native_abi_cdecl }\n+              some(\"rust-intrinsic\") {\n+                ast::native_abi_rust_intrinsic\n+              }\n+              some(\"cdecl\") {\n+                ast::native_abi_cdecl\n+              }\n+              some(\"stdcall\") {\n+                ast::native_abi_stdcall\n+              }\n+              some(t) {\n+                p.fatal(\"unsupported abi: \" + t);\n+              }\n+            };\n     }\n     expect_word(p, \"mod\");\n     let id = parse_ident(p);\n     let native_name;\n     if p.peek() == token::EQ {\n         expect(p, token::EQ);\n         native_name = parse_str(p);\n-    } else { native_name = id; }\n+    } else {\n+        native_name =\n+            alt attr::get_meta_item_value_str_by_name(attrs, \"link_name\") {\n+              none. { id }\n+              some(nn) { nn }\n+            };\n+    }\n     expect(p, token::LBRACE);\n     let more_attrs = parse_inner_attrs_and_next(p);\n     let inner_attrs = more_attrs.inner;"}]}