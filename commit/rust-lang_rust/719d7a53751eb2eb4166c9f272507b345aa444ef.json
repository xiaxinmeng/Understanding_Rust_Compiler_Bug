{"sha": "719d7a53751eb2eb4166c9f272507b345aa444ef", "node_id": "C_kwDOAAsO6NoAKDcxOWQ3YTUzNzUxZWIyZWI0MTY2YzlmMjcyNTA3YjM0NWFhNDQ0ZWY", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-12-11T22:18:24Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-12-11T23:47:24Z"}, "message": "rustdoc: Remove unused `_default` parameter\n\nIt can always be re-added later if we decide to display associated const\ndefault values.", "tree": {"sha": "7e4f9b9f858ef6c1fb70528f8c7c0a4419229fcd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e4f9b9f858ef6c1fb70528f8c7c0a4419229fcd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/719d7a53751eb2eb4166c9f272507b345aa444ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/719d7a53751eb2eb4166c9f272507b345aa444ef", "html_url": "https://github.com/rust-lang/rust/commit/719d7a53751eb2eb4166c9f272507b345aa444ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/719d7a53751eb2eb4166c9f272507b345aa444ef/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d38ae767f841a307911abd5713695eae8390bbf0", "url": "https://api.github.com/repos/rust-lang/rust/commits/d38ae767f841a307911abd5713695eae8390bbf0", "html_url": "https://github.com/rust-lang/rust/commit/d38ae767f841a307911abd5713695eae8390bbf0"}], "stats": {"total": 16, "additions": 4, "deletions": 12}, "files": [{"sha": "289908303002bf76ba329038702568d98b1ab713", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/719d7a53751eb2eb4166c9f272507b345aa444ef/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/719d7a53751eb2eb4166c9f272507b345aa444ef/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=719d7a53751eb2eb4166c9f272507b345aa444ef", "patch": "@@ -762,7 +762,6 @@ fn assoc_const(\n     w: &mut Buffer,\n     it: &clean::Item,\n     ty: &clean::Type,\n-    _default: Option<&clean::ConstantKind>,\n     link: AssocItemLink<'_>,\n     extra: &str,\n     cx: &Context<'_>,\n@@ -958,15 +957,9 @@ fn render_assoc_item(\n         clean::MethodItem(ref m, _) => {\n             method(w, item, m.header, &m.generics, &m.decl, link, parent, cx, render_mode)\n         }\n-        clean::AssocConstItem(ref ty, ref default) => assoc_const(\n-            w,\n-            item,\n-            ty,\n-            default.as_ref(),\n-            link,\n-            if parent == ItemType::Trait { \"    \" } else { \"\" },\n-            cx,\n-        ),\n+        clean::AssocConstItem(ref ty, _) => {\n+            assoc_const(w, item, ty, link, if parent == ItemType::Trait { \"    \" } else { \"\" }, cx)\n+        }\n         clean::AssocTypeItem(ref bounds, ref default) => assoc_type(\n             w,\n             item,\n@@ -1467,7 +1460,7 @@ fn render_impl(\n                 w.write_str(\"</h4>\");\n                 w.write_str(\"</div>\");\n             }\n-            clean::AssocConstItem(ref ty, ref default) => {\n+            clean::AssocConstItem(ref ty, _) => {\n                 let source_id = format!(\"{}.{}\", item_type, name);\n                 let id = cx.derive_id(source_id.clone());\n                 write!(\n@@ -1482,7 +1475,6 @@ fn render_impl(\n                     w,\n                     item,\n                     ty,\n-                    default.as_ref(),\n                     link.anchor(if trait_.is_some() { &source_id } else { &id }),\n                     \"\",\n                     cx,"}]}