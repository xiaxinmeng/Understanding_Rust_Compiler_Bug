{"sha": "468d023fe94aadbdc7b7dc0a83d264ee2ae0d68a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2OGQwMjNmZTk0YWFkYmRjN2I3ZGMwYTgzZDI2NGVlMmFlMGQ2OGE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-08-17T08:12:08Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-08-24T04:19:59Z"}, "message": "std: Convert some assert!s to rtassert!", "tree": {"sha": "c9e0fc30bcee18a74e7a9f6dbbe0770642ab40d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9e0fc30bcee18a74e7a9f6dbbe0770642ab40d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/468d023fe94aadbdc7b7dc0a83d264ee2ae0d68a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/468d023fe94aadbdc7b7dc0a83d264ee2ae0d68a", "html_url": "https://github.com/rust-lang/rust/commit/468d023fe94aadbdc7b7dc0a83d264ee2ae0d68a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/468d023fe94aadbdc7b7dc0a83d264ee2ae0d68a/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30a7a5b8fa0f0c6262322d353020ff556708082e", "url": "https://api.github.com/repos/rust-lang/rust/commits/30a7a5b8fa0f0c6262322d353020ff556708082e", "html_url": "https://github.com/rust-lang/rust/commit/30a7a5b8fa0f0c6262322d353020ff556708082e"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "5cd0d7b8b54bd356906942f13c39d41d4543c1c6", "filename": "src/libstd/rt/comm.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/468d023fe94aadbdc7b7dc0a83d264ee2ae0d68a/src%2Flibstd%2Frt%2Fcomm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/468d023fe94aadbdc7b7dc0a83d264ee2ae0d68a/src%2Flibstd%2Frt%2Fcomm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fcomm.rs?ref=468d023fe94aadbdc7b7dc0a83d264ee2ae0d68a", "patch": "@@ -125,7 +125,7 @@ impl<T> ChanOne<T> {\n         unsafe {\n \n             // Install the payload\n-            assert!((*packet).payload.is_none());\n+            rtassert!((*packet).payload.is_none());\n             (*packet).payload = Some(val);\n \n             // Atomically swap out the old state to figure out what\n@@ -307,7 +307,7 @@ impl<T> SelectInner for PortOne<T> {\n                         STATE_ONE  => true, // Lost the race. Data available.\n                         same_ptr   => {\n                             // We successfully unblocked our task pointer.\n-                            assert!(task_as_state == same_ptr);\n+                            rtassert!(task_as_state == same_ptr);\n                             let handle = BlockedTask::cast_from_uint(task_as_state);\n                             // Because we are already awake, the handle we\n                             // gave to this port shall already be empty.\n@@ -341,7 +341,8 @@ impl<T> SelectPortInner<T> for PortOne<T> {\n         unsafe {\n             // See corresponding store() above in block_on for rationale.\n             // FIXME(#8130) This can happen only in test builds.\n-            assert!((*packet).state.load(Relaxed) == STATE_ONE);\n+            // This load is not required for correctness and may be compiled out.\n+            rtassert!((*packet).state.load(Relaxed) == STATE_ONE);\n \n             let payload = (*packet).payload.take();\n \n@@ -387,7 +388,7 @@ impl<T> Drop for ChanOne<T> {\n                 },\n                 task_as_state => {\n                     // The port is blocked waiting for a message we will never send. Wake it.\n-                    assert!((*this.packet()).payload.is_none());\n+                    rtassert!((*this.packet()).payload.is_none());\n                     let recvr = BlockedTask::cast_from_uint(task_as_state);\n                     do recvr.wake().map_move |woken_task| {\n                         Scheduler::run_task(woken_task);"}, {"sha": "111e60ccb2f102c86d7a9cb801056d31cc5c84cf", "filename": "src/libstd/rt/sched.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/468d023fe94aadbdc7b7dc0a83d264ee2ae0d68a/src%2Flibstd%2Frt%2Fsched.rs", "raw_url": "https://github.com/rust-lang/rust/raw/468d023fe94aadbdc7b7dc0a83d264ee2ae0d68a/src%2Flibstd%2Frt%2Fsched.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fsched.rs?ref=468d023fe94aadbdc7b7dc0a83d264ee2ae0d68a", "patch": "@@ -186,7 +186,7 @@ impl Scheduler {\n \n         // Should not have any messages\n         let message = stask.sched.get_mut_ref().message_queue.pop();\n-        assert!(message.is_none());\n+        rtassert!(message.is_none());\n \n         stask.destroyed = true;\n     }"}]}