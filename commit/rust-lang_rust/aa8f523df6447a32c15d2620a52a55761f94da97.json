{"sha": "aa8f523df6447a32c15d2620a52a55761f94da97", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhOGY1MjNkZjY0NDdhMzJjMTVkMjYyMGE1MmE1NTc2MWY5NGRhOTc=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-07T20:08:34Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-15T08:35:40Z"}, "message": "test for special things that are now possible", "tree": {"sha": "44bbf56298da87d09323f46b43d99e45a02e58f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44bbf56298da87d09323f46b43d99e45a02e58f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa8f523df6447a32c15d2620a52a55761f94da97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa8f523df6447a32c15d2620a52a55761f94da97", "html_url": "https://github.com/rust-lang/rust/commit/aa8f523df6447a32c15d2620a52a55761f94da97", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa8f523df6447a32c15d2620a52a55761f94da97/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94e751267c881bc26219853733222e4fe8fdc87a", "url": "https://api.github.com/repos/rust-lang/rust/commits/94e751267c881bc26219853733222e4fe8fdc87a", "html_url": "https://github.com/rust-lang/rust/commit/94e751267c881bc26219853733222e4fe8fdc87a"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "00b21c746c268fb83b90d4faa67e61f8a18e2d86", "filename": "tests/run-pass/stacked-borrows.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/aa8f523df6447a32c15d2620a52a55761f94da97/tests%2Frun-pass%2Fstacked-borrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa8f523df6447a32c15d2620a52a55761f94da97/tests%2Frun-pass%2Fstacked-borrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fstacked-borrows.rs?ref=aa8f523df6447a32c15d2620a52a55761f94da97", "patch": "@@ -4,6 +4,8 @@ fn main() {\n     read_does_not_invalidate1();\n     read_does_not_invalidate2();\n     ref_raw_int_raw();\n+    mut_shr_raw();\n+    mut_raw_then_mut_shr();\n }\n \n // Deref a raw ptr to access a field of a large struct, where the field\n@@ -48,3 +50,29 @@ fn ref_raw_int_raw() {\n     let xraw = xref as *mut i32 as usize as *mut i32;\n     assert_eq!(unsafe { *xraw }, 3);\n }\n+\n+// Creating a raw from a `&mut` through an `&` works, even if we\n+// write through that raw.\n+fn mut_shr_raw() {\n+    let mut x = 2;\n+    {\n+        let xref = &mut x;\n+        let xraw = &*xref as *const i32 as *mut i32;\n+        unsafe { *xraw = 4; }\n+    }\n+    assert_eq!(x, 4);\n+}\n+\n+// Escape a mut to raw, then share the same mut and use the share, then the raw.\n+// That should work.\n+fn mut_raw_then_mut_shr() {\n+    let mut x = 2;\n+    {\n+        let xref = &mut x;\n+        let xraw = &mut *xref as *mut _;\n+        let xshr = &*xref;\n+        assert_eq!(*xshr, 2);\n+        unsafe { *xraw = 4; }\n+    }\n+    assert_eq!(x, 4);\n+}"}]}