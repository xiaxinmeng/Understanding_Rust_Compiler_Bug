{"sha": "985dff9e7ed1fd7896b071eaf637fd531a690e91", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4NWRmZjllN2VkMWZkNzg5NmIwNzFlYWY2MzdmZDUzMWE2OTBlOTE=", "commit": {"author": {"name": "blitzerr", "email": "rusty.blitzerr@gmail.com", "date": "2020-09-23T03:16:13Z"}, "committer": {"name": "blitzerr", "email": "rusty.blitzerr@gmail.com", "date": "2020-09-23T03:16:13Z"}, "message": "fixing the test failure", "tree": {"sha": "b7a2e74b0070d106dd392801bd84a267f69aa9f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7a2e74b0070d106dd392801bd84a267f69aa9f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/985dff9e7ed1fd7896b071eaf637fd531a690e91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/985dff9e7ed1fd7896b071eaf637fd531a690e91", "html_url": "https://github.com/rust-lang/rust/commit/985dff9e7ed1fd7896b071eaf637fd531a690e91", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/985dff9e7ed1fd7896b071eaf637fd531a690e91/comments", "author": {"login": "blitzerr", "id": 28721905, "node_id": "MDQ6VXNlcjI4NzIxOTA1", "avatar_url": "https://avatars.githubusercontent.com/u/28721905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blitzerr", "html_url": "https://github.com/blitzerr", "followers_url": "https://api.github.com/users/blitzerr/followers", "following_url": "https://api.github.com/users/blitzerr/following{/other_user}", "gists_url": "https://api.github.com/users/blitzerr/gists{/gist_id}", "starred_url": "https://api.github.com/users/blitzerr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blitzerr/subscriptions", "organizations_url": "https://api.github.com/users/blitzerr/orgs", "repos_url": "https://api.github.com/users/blitzerr/repos", "events_url": "https://api.github.com/users/blitzerr/events{/privacy}", "received_events_url": "https://api.github.com/users/blitzerr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "blitzerr", "id": 28721905, "node_id": "MDQ6VXNlcjI4NzIxOTA1", "avatar_url": "https://avatars.githubusercontent.com/u/28721905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blitzerr", "html_url": "https://github.com/blitzerr", "followers_url": "https://api.github.com/users/blitzerr/followers", "following_url": "https://api.github.com/users/blitzerr/following{/other_user}", "gists_url": "https://api.github.com/users/blitzerr/gists{/gist_id}", "starred_url": "https://api.github.com/users/blitzerr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blitzerr/subscriptions", "organizations_url": "https://api.github.com/users/blitzerr/orgs", "repos_url": "https://api.github.com/users/blitzerr/repos", "events_url": "https://api.github.com/users/blitzerr/events{/privacy}", "received_events_url": "https://api.github.com/users/blitzerr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14736ca20b2e5f60981743c6ee2dfa62db818767", "url": "https://api.github.com/repos/rust-lang/rust/commits/14736ca20b2e5f60981743c6ee2dfa62db818767", "html_url": "https://github.com/rust-lang/rust/commit/14736ca20b2e5f60981743c6ee2dfa62db818767"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "73750bf139a7d46245338b2ce46e2c0a149fc543", "filename": "src/test/ui/allocator/custom.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/985dff9e7ed1fd7896b071eaf637fd531a690e91/src%2Ftest%2Fui%2Fallocator%2Fcustom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/985dff9e7ed1fd7896b071eaf637fd531a690e91/src%2Ftest%2Fui%2Fallocator%2Fcustom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fallocator%2Fcustom.rs?ref=985dff9e7ed1fd7896b071eaf637fd531a690e91", "patch": "@@ -10,6 +10,7 @@ extern crate helper;\n \n use std::alloc::{self, AllocRef, Global, Layout, System};\n use std::sync::atomic::{AtomicUsize, Ordering};\n+use std::ptr::NonNull;\n \n static HITS: AtomicUsize = AtomicUsize::new(0);\n \n@@ -23,7 +24,7 @@ unsafe impl alloc::GlobalAlloc for A {\n \n     unsafe fn dealloc(&self, ptr: *mut u8, layout: Layout) {\n         HITS.fetch_add(1, Ordering::SeqCst);\n-        AllocRef::dealloc(&System, ptr, layout)\n+        AllocRef::dealloc(&System, NonNull::new(ptr).unwrap(), layout)\n     }\n }\n "}]}