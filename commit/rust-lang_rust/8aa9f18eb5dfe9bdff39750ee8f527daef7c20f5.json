{"sha": "8aa9f18eb5dfe9bdff39750ee8f527daef7c20f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhYTlmMThlYjVkZmU5YmRmZjM5NzUwZWU4ZjUyN2RhZWY3YzIwZjU=", "commit": {"author": {"name": "Samy Kacimi", "email": "samy.kacimi@protonmail.ch", "date": "2019-07-07T21:14:41Z"}, "committer": {"name": "Samy Kacimi", "email": "samy.kacimi@protonmail.ch", "date": "2019-07-07T22:54:38Z"}, "message": "normalize use of backticks for compiler messages in librustc_codegen\n\nhttps://github.com/rust-lang/rust/issues/60532", "tree": {"sha": "e1d5d6a1be0db05379733c66deaf0c27e00a1798", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1d5d6a1be0db05379733c66deaf0c27e00a1798"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8aa9f18eb5dfe9bdff39750ee8f527daef7c20f5", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEExrhwoK6DmrCETV5+4ilOki9MVuUFAl0ieC4ACgkQ4ilOki9M\nVuVprwv/aE8yHrUl7NSriO8nr/7dZRAXGVs4jUrnsJwnPpMGHJ2StnEWQvlLpt65\nTsuqzUz6M7oqqJkIKAHY5zDKek0BQqENcuYHyvSGhA+tSLJzZwkkm/T4EZP/Lqic\n67CPzSTY26itLkohfanvVkWZls5Tp/sD0JBmac87qORF+Ir972sQTJtMatZoGaHk\nuT09WbSyfQ/ZQDLFOw35OXyQuo8On3qxixPCwj5e9lutYgrDhtS++5MWdjcI8zCu\nTvf1ERxsj9cIElwCER9f78R3jYyCXbhe3hr1Yhd4ug/00mTpxnbvbogbl7Yg6efw\n40eLnMG6zgy9pdZHKYZivOXXdQV3/a+ac3eBvw7E9OMFaouOJYMm0u+fgA+fOXdg\nsVFxCZvqnjozNTEw3c8cSiSdAgCkBQaAYoMGYch2TUK2i1t2gQ6OXcO77XWAJws2\nyNhIBTChv6IH5rGfMnAFbs9EYLWiQ+bHEQCuxpVjudvO1Fha/jlRFp5SXf7l/KPw\n6Zw5lusX\n=kTas\n-----END PGP SIGNATURE-----", "payload": "tree e1d5d6a1be0db05379733c66deaf0c27e00a1798\nparent 6e310f2abae97323ca1d5469657b83aa1a9407e0\nauthor Samy Kacimi <samy.kacimi@protonmail.ch> 1562534081 +0200\ncommitter Samy Kacimi <samy.kacimi@protonmail.ch> 1562540078 +0200\n\nnormalize use of backticks for compiler messages in librustc_codegen\n\nhttps://github.com/rust-lang/rust/issues/60532\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8aa9f18eb5dfe9bdff39750ee8f527daef7c20f5", "html_url": "https://github.com/rust-lang/rust/commit/8aa9f18eb5dfe9bdff39750ee8f527daef7c20f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8aa9f18eb5dfe9bdff39750ee8f527daef7c20f5/comments", "author": null, "committer": null, "parents": [{"sha": "6e310f2abae97323ca1d5469657b83aa1a9407e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e310f2abae97323ca1d5469657b83aa1a9407e0", "html_url": "https://github.com/rust-lang/rust/commit/6e310f2abae97323ca1d5469657b83aa1a9407e0"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "bb92225c50ea055a8925ae0616b60bdccc740026", "filename": "src/librustc_codegen_llvm/asm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa9f18eb5dfe9bdff39750ee8f527daef7c20f5/src%2Flibrustc_codegen_llvm%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa9f18eb5dfe9bdff39750ee8f527daef7c20f5/src%2Flibrustc_codegen_llvm%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fasm.rs?ref=8aa9f18eb5dfe9bdff39750ee8f527daef7c20f5", "patch": "@@ -146,7 +146,7 @@ fn inline_asm_call(\n     unsafe {\n         // Ask LLVM to verify that the constraints are well-formed.\n         let constraints_ok = llvm::LLVMRustInlineAsmVerify(fty, cons.as_ptr());\n-        debug!(\"Constraint verification result: {:?}\", constraints_ok);\n+        debug!(\"constraint verification result: {:?}\", constraints_ok);\n         if constraints_ok {\n             let v = llvm::LLVMRustInlineAsm(\n                 fty,"}, {"sha": "5ac1cf8c36f93ca0c01d9e606d4e0f902048ebcc", "filename": "src/librustc_codegen_llvm/builder.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8aa9f18eb5dfe9bdff39750ee8f527daef7c20f5/src%2Flibrustc_codegen_llvm%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa9f18eb5dfe9bdff39750ee8f527daef7c20f5/src%2Flibrustc_codegen_llvm%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fbuilder.rs?ref=8aa9f18eb5dfe9bdff39750ee8f527daef7c20f5", "patch": "@@ -215,7 +215,7 @@ impl BuilderMethods<'a, 'tcx> for Builder<'a, 'll, 'tcx> {\n         funclet: Option<&Funclet<'ll>>,\n     ) -> &'ll Value {\n \n-        debug!(\"Invoke {:?} with args ({:?})\",\n+        debug!(\"invoke {:?} with args ({:?})\",\n                llfn,\n                args);\n \n@@ -1035,7 +1035,7 @@ impl BuilderMethods<'a, 'tcx> for Builder<'a, 'll, 'tcx> {\n         funclet: Option<&Funclet<'ll>>,\n     ) -> &'ll Value {\n \n-        debug!(\"Call {:?} with args ({:?})\",\n+        debug!(\"call {:?} with args ({:?})\",\n                llfn,\n                args);\n \n@@ -1238,7 +1238,7 @@ impl Builder<'a, 'll, 'tcx> {\n         if dest_ptr_ty == stored_ptr_ty {\n             ptr\n         } else {\n-            debug!(\"Type mismatch in store. \\\n+            debug!(\"type mismatch in store. \\\n                     Expected {:?}, got {:?}; inserting bitcast\",\n                    dest_ptr_ty, stored_ptr_ty);\n             self.bitcast(ptr, stored_ptr_ty)\n@@ -1274,7 +1274,7 @@ impl Builder<'a, 'll, 'tcx> {\n             .map(|(i, (expected_ty, &actual_val))| {\n                 let actual_ty = self.val_ty(actual_val);\n                 if expected_ty != actual_ty {\n-                    debug!(\"Type mismatch in function call of {:?}. \\\n+                    debug!(\"type mismatch in function call of {:?}. \\\n                             Expected {:?} for param {}, got {:?}; injecting bitcast\",\n                            llfn, expected_ty, i, actual_ty);\n                     self.bitcast(actual_val, expected_ty)"}, {"sha": "ca7e17ec97a39362c5b0b0ba63feef48e46ad2f8", "filename": "src/librustc_codegen_ssa/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa9f18eb5dfe9bdff39750ee8f527daef7c20f5/src%2Flibrustc_codegen_ssa%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa9f18eb5dfe9bdff39750ee8f527daef7c20f5/src%2Flibrustc_codegen_ssa%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fbase.rs?ref=8aa9f18eb5dfe9bdff39750ee8f527daef7c20f5", "patch": "@@ -433,7 +433,7 @@ pub fn maybe_create_entry_wrapper<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>>(cx: &'\n         if cx.get_defined_value(\"main\").is_some() {\n             // FIXME: We should be smart and show a better diagnostic here.\n             cx.sess().struct_span_err(sp, \"entry symbol `main` defined multiple times\")\n-                     .help(\"did you use #[no_mangle] on `fn main`? Use #[start] instead\")\n+                     .help(\"did you use `#[no_mangle]` on `fn main`? Use `#[start]` instead\")\n                      .emit();\n             cx.sess().abort_if_errors();\n             bug!();"}, {"sha": "010be3e8c7404b9ad7447d140f0079432e7e7f3e", "filename": "src/librustc_codegen_ssa/mir/place.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa9f18eb5dfe9bdff39750ee8f527daef7c20f5/src%2Flibrustc_codegen_ssa%2Fmir%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa9f18eb5dfe9bdff39750ee8f527daef7c20f5/src%2Flibrustc_codegen_ssa%2Fmir%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fplace.rs?ref=8aa9f18eb5dfe9bdff39750ee8f527daef7c20f5", "patch": "@@ -138,7 +138,7 @@ impl<'a, 'tcx, V: CodegenObject> PlaceRef<'tcx, V> {\n         //   * packed struct - there is no alignment padding\n         match field.ty.sty {\n             _ if self.llextra.is_none() => {\n-                debug!(\"Unsized field `{}`, of `{:?}` has no metadata for adjustment\",\n+                debug!(\"unsized field `{}`, of `{:?}` has no metadata for adjustment\",\n                     ix, self.llval);\n                 return simple();\n             }"}, {"sha": "6b9258c32e7b0a9bb1b69c79777b4e6f371a0d8c", "filename": "src/librustc_codegen_utils/link.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa9f18eb5dfe9bdff39750ee8f527daef7c20f5/src%2Flibrustc_codegen_utils%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa9f18eb5dfe9bdff39750ee8f527daef7c20f5/src%2Flibrustc_codegen_utils%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2Flink.rs?ref=8aa9f18eb5dfe9bdff39750ee8f527daef7c20f5", "patch": "@@ -57,7 +57,7 @@ pub fn find_crate_name(sess: Option<&Session>,\n         if let Some(ref s) = sess.opts.crate_name {\n             if let Some((attr, name)) = attr_crate_name {\n                 if name.as_str() != *s {\n-                    let msg = format!(\"--crate-name and #[crate_name] are \\\n+                    let msg = format!(\"`--crate-name` and `#[crate_name]` are \\\n                                        required to match, but `{}` != `{}`\",\n                                       s, name);\n                     sess.span_err(attr.span, &msg);"}, {"sha": "23ad39a6f92d58578d4e38ddf8398cb828db49cd", "filename": "src/test/ui/crate-name-mismatch.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa9f18eb5dfe9bdff39750ee8f527daef7c20f5/src%2Ftest%2Fui%2Fcrate-name-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa9f18eb5dfe9bdff39750ee8f527daef7c20f5/src%2Ftest%2Fui%2Fcrate-name-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcrate-name-mismatch.rs?ref=8aa9f18eb5dfe9bdff39750ee8f527daef7c20f5", "patch": "@@ -1,6 +1,6 @@\n // compile-flags: --crate-name foo\n \n #![crate_name = \"bar\"]\n-//~^ ERROR: --crate-name and #[crate_name] are required to match, but `foo` != `bar`\n+//~^ ERROR: `--crate-name` and `#[crate_name]` are required to match, but `foo` != `bar`\n \n fn main() {}"}, {"sha": "96618570d8fb66291325b6c63a60f1a168ed2785", "filename": "src/test/ui/crate-name-mismatch.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa9f18eb5dfe9bdff39750ee8f527daef7c20f5/src%2Ftest%2Fui%2Fcrate-name-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8aa9f18eb5dfe9bdff39750ee8f527daef7c20f5/src%2Ftest%2Fui%2Fcrate-name-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcrate-name-mismatch.stderr?ref=8aa9f18eb5dfe9bdff39750ee8f527daef7c20f5", "patch": "@@ -1,4 +1,4 @@\n-error: --crate-name and #[crate_name] are required to match, but `foo` != `bar`\n+error: `--crate-name` and `#[crate_name]` are required to match, but `foo` != `bar`\n   --> $DIR/crate-name-mismatch.rs:3:1\n    |\n LL | #![crate_name = \"bar\"]"}, {"sha": "d2cb4e0970e83ec393f330b8f884293f1c80811d", "filename": "src/test/ui/duplicate/dupe-symbols-7.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa9f18eb5dfe9bdff39750ee8f527daef7c20f5/src%2Ftest%2Fui%2Fduplicate%2Fdupe-symbols-7.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8aa9f18eb5dfe9bdff39750ee8f527daef7c20f5/src%2Ftest%2Fui%2Fduplicate%2Fdupe-symbols-7.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fduplicate%2Fdupe-symbols-7.stderr?ref=8aa9f18eb5dfe9bdff39750ee8f527daef7c20f5", "patch": "@@ -4,7 +4,7 @@ error: entry symbol `main` defined multiple times\n LL | fn main(){}\n    | ^^^^^^^^^^^\n    |\n-   = help: did you use #[no_mangle] on `fn main`? Use #[start] instead\n+   = help: did you use `#[no_mangle]` on `fn main`? Use `#[start]` instead\n \n error: aborting due to previous error\n "}]}