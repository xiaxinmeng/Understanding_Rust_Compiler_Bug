{"sha": "2d0e6caeeca9dbf60018b6308e20d3c907e24d78", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkMGU2Y2FlZWNhOWRiZjYwMDE4YjYzMDhlMjBkM2M5MDdlMjRkNzg=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-02-25T14:45:33Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-02-26T14:12:26Z"}, "message": "Add `push_ctxt` instrumentation to all functions that might call `base::zero_mem`.\n\n(Instrumentation work for Issue 22536.)", "tree": {"sha": "65c67d1c39caa4113e965e8800c6a856851291d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65c67d1c39caa4113e965e8800c6a856851291d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d0e6caeeca9dbf60018b6308e20d3c907e24d78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d0e6caeeca9dbf60018b6308e20d3c907e24d78", "html_url": "https://github.com/rust-lang/rust/commit/2d0e6caeeca9dbf60018b6308e20d3c907e24d78", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d0e6caeeca9dbf60018b6308e20d3c907e24d78/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41f8b1e89b5ca0c79d7bca782ca44085624d4564", "url": "https://api.github.com/repos/rust-lang/rust/commits/41f8b1e89b5ca0c79d7bca782ca44085624d4564", "html_url": "https://github.com/rust-lang/rust/commit/41f8b1e89b5ca0c79d7bca782ca44085624d4564"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "48ff4c8332022aac0972c153eade715fbbe7be42", "filename": "src/librustc_trans/trans/_match.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2d0e6caeeca9dbf60018b6308e20d3c907e24d78/src%2Flibrustc_trans%2Ftrans%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d0e6caeeca9dbf60018b6308e20d3c907e24d78/src%2Flibrustc_trans%2Ftrans%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2F_match.rs?ref=2d0e6caeeca9dbf60018b6308e20d3c907e24d78", "patch": "@@ -1499,6 +1499,7 @@ pub fn store_local<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n     fn create_dummy_locals<'blk, 'tcx>(mut bcx: Block<'blk, 'tcx>,\n                                        pat: &ast::Pat)\n                                        -> Block<'blk, 'tcx> {\n+        let _icx = push_ctxt(\"create_dummy_locals\");\n         // create dummy memory for the variables if we have no\n         // value to store into them immediately\n         let tcx = bcx.tcx();"}, {"sha": "cb9156be479d0ac423c3a48f586d11a2218b10a2", "filename": "src/librustc_trans/trans/cleanup.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2d0e6caeeca9dbf60018b6308e20d3c907e24d78/src%2Flibrustc_trans%2Ftrans%2Fcleanup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d0e6caeeca9dbf60018b6308e20d3c907e24d78/src%2Flibrustc_trans%2Ftrans%2Fcleanup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcleanup.rs?ref=2d0e6caeeca9dbf60018b6308e20d3c907e24d78", "patch": "@@ -1007,6 +1007,7 @@ impl<'tcx> Cleanup<'tcx> for DropValue<'tcx> {\n                    bcx: Block<'blk, 'tcx>,\n                    debug_loc: DebugLoc)\n                    -> Block<'blk, 'tcx> {\n+        let _icx = base::push_ctxt(\"<DropValue as Cleanup>::trans\");\n         let bcx = if self.is_immediate {\n             glue::drop_ty_immediate(bcx, self.val, self.ty, debug_loc)\n         } else {"}, {"sha": "636c902d3637c32bb57f6d310e71a8fd279a4338", "filename": "src/librustc_trans/trans/datum.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2d0e6caeeca9dbf60018b6308e20d3c907e24d78/src%2Flibrustc_trans%2Ftrans%2Fdatum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d0e6caeeca9dbf60018b6308e20d3c907e24d78/src%2Flibrustc_trans%2Ftrans%2Fdatum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fdatum.rs?ref=2d0e6caeeca9dbf60018b6308e20d3c907e24d78", "patch": "@@ -311,6 +311,7 @@ impl KindOps for Lvalue {\n                               val: ValueRef,\n                               ty: Ty<'tcx>)\n                               -> Block<'blk, 'tcx> {\n+        let _icx = push_ctxt(\"<Lvalue as KindOps>::post_store\");\n         if type_needs_drop(bcx.tcx(), ty) {\n             // cancel cleanup of affine values by zeroing out\n             let () = zero_mem(bcx, val, ty);"}, {"sha": "0706189a56731c58b3f9f3fdcfaeea4edbedaa25", "filename": "src/librustc_trans/trans/intrinsic.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2d0e6caeeca9dbf60018b6308e20d3c907e24d78/src%2Flibrustc_trans%2Ftrans%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d0e6caeeca9dbf60018b6308e20d3c907e24d78/src%2Flibrustc_trans%2Ftrans%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fintrinsic.rs?ref=2d0e6caeeca9dbf60018b6308e20d3c907e24d78", "patch": "@@ -156,6 +156,8 @@ pub fn trans_intrinsic_call<'a, 'blk, 'tcx>(mut bcx: Block<'blk, 'tcx>,\n     let ccx = fcx.ccx;\n     let tcx = bcx.tcx();\n \n+    let _icx = push_ctxt(\"trans_intrinsic_call\");\n+\n     let ret_ty = match callee_ty.sty {\n         ty::ty_bare_fn(_, ref f) => {\n             ty::erase_late_bound_regions(bcx.tcx(), &f.sig.output())"}]}