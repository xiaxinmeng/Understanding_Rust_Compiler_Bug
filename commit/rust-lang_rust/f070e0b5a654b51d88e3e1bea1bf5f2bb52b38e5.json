{"sha": "f070e0b5a654b51d88e3e1bea1bf5f2bb52b38e5", "node_id": "C_kwDOAAsO6NoAKGYwNzBlMGI1YTY1NGI1MWQ4OGUzZTFiZWExYmY1ZjJiYjUyYjM4ZTU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-02-04T13:59:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-04T13:59:02Z"}, "message": "Rollup merge of #93555 - ChrisDenton:fs-try-exists-doc, r=Mark-Simulacrum\n\nLink `try_exists` docs to `Path::exists`\n\nLinks to the existing `Path::exists` method from both `std::Path::try_exists` and `std::fs:try_exists`.\n\nTracking issue for `path_try_exists`: #83186", "tree": {"sha": "bcc1ccd9c5d403b31e2a306e152bf93d835b5ef3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bcc1ccd9c5d403b31e2a306e152bf93d835b5ef3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f070e0b5a654b51d88e3e1bea1bf5f2bb52b38e5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh/TEmCRBK7hj4Ov3rIwAA+oIIAAqtqeZTmgMtX+3sHZqXBGzJ\nVqgIJjOuVNE7ZKzYHIJuIb+t2o/KFUsEmchhS02TqnX+mVEKIWriqJFhCvXCyyZg\nXs1OPWhUieds5AN4GM85+ys3AIa44VT+yjaV8N9ulxgAr9SsE43Z0DSkrM9wFC9T\njdmu/FDCSrHrgsstBcELHJ6JZWTLNOv4bgPF8nBAyeZvdQ7fInL+lX5SOZotXQ6y\nb54V69+dZR4FSH+y765JLMs9qtSWToVzsUsI0V678f7eMU5dggKKIVDIYJDvSrCu\nfgZzc0UXP9vZ+zwKjOvemh7AKywjPzFEwqrcR+6DTSKw9vW9Zkmc3WHXcAlQDmQ=\n=EHLp\n-----END PGP SIGNATURE-----\n", "payload": "tree bcc1ccd9c5d403b31e2a306e152bf93d835b5ef3\nparent 3876cb6b8e2d0badb17e534848bd79bd3d0d8ba5\nparent 1bc8f0b49f34927c08d1f31d2bb32ab7404ec948\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1643983142 +0100\ncommitter GitHub <noreply@github.com> 1643983142 +0100\n\nRollup merge of #93555 - ChrisDenton:fs-try-exists-doc, r=Mark-Simulacrum\n\nLink `try_exists` docs to `Path::exists`\n\nLinks to the existing `Path::exists` method from both `std::Path::try_exists` and `std::fs:try_exists`.\n\nTracking issue for `path_try_exists`: #83186\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f070e0b5a654b51d88e3e1bea1bf5f2bb52b38e5", "html_url": "https://github.com/rust-lang/rust/commit/f070e0b5a654b51d88e3e1bea1bf5f2bb52b38e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f070e0b5a654b51d88e3e1bea1bf5f2bb52b38e5/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3876cb6b8e2d0badb17e534848bd79bd3d0d8ba5", "url": "https://api.github.com/repos/rust-lang/rust/commits/3876cb6b8e2d0badb17e534848bd79bd3d0d8ba5", "html_url": "https://github.com/rust-lang/rust/commit/3876cb6b8e2d0badb17e534848bd79bd3d0d8ba5"}, {"sha": "1bc8f0b49f34927c08d1f31d2bb32ab7404ec948", "url": "https://api.github.com/repos/rust-lang/rust/commits/1bc8f0b49f34927c08d1f31d2bb32ab7404ec948", "html_url": "https://github.com/rust-lang/rust/commit/1bc8f0b49f34927c08d1f31d2bb32ab7404ec948"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "7ca64c38e5d3a211e3ea1192cf7bf6dea7a1ac84", "filename": "library/std/src/fs.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f070e0b5a654b51d88e3e1bea1bf5f2bb52b38e5/library%2Fstd%2Fsrc%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f070e0b5a654b51d88e3e1bea1bf5f2bb52b38e5/library%2Fstd%2Fsrc%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ffs.rs?ref=f070e0b5a654b51d88e3e1bea1bf5f2bb52b38e5", "patch": "@@ -2288,7 +2288,7 @@ impl AsInnerMut<fs_imp::DirBuilder> for DirBuilder {\n /// This function will traverse symbolic links to query information about the\n /// destination file. In case of broken symbolic links this will return `Ok(false)`.\n ///\n-/// As opposed to the `exists()` method, this one doesn't silently ignore errors\n+/// As opposed to the [`Path::exists`] method, this one doesn't silently ignore errors\n /// unrelated to the path not existing. (E.g. it will return `Err(_)` in case of permission\n /// denied on some of the parent directories.)\n ///\n@@ -2301,6 +2301,8 @@ impl AsInnerMut<fs_imp::DirBuilder> for DirBuilder {\n /// assert!(!fs::try_exists(\"does_not_exist.txt\").expect(\"Can't check existence of file does_not_exist.txt\"));\n /// assert!(fs::try_exists(\"/root/secret_file.txt\").is_err());\n /// ```\n+///\n+/// [`Path::exists`]: crate::path::Path::exists\n // FIXME: stabilization should modify documentation of `exists()` to recommend this method\n // instead.\n #[unstable(feature = \"path_try_exists\", issue = \"83186\")]"}, {"sha": "85cad65da6a30670f9ff1cd3ee78b97e04cdab7d", "filename": "library/std/src/path.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f070e0b5a654b51d88e3e1bea1bf5f2bb52b38e5/library%2Fstd%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f070e0b5a654b51d88e3e1bea1bf5f2bb52b38e5/library%2Fstd%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpath.rs?ref=f070e0b5a654b51d88e3e1bea1bf5f2bb52b38e5", "patch": "@@ -2730,7 +2730,7 @@ impl Path {\n     /// This function will traverse symbolic links to query information about the\n     /// destination file. In case of broken symbolic links this will return `Ok(false)`.\n     ///\n-    /// As opposed to the `exists()` method, this one doesn't silently ignore errors\n+    /// As opposed to the [`exists()`] method, this one doesn't silently ignore errors\n     /// unrelated to the path not existing. (E.g. it will return `Err(_)` in case of permission\n     /// denied on some of the parent directories.)\n     ///\n@@ -2743,6 +2743,8 @@ impl Path {\n     /// assert!(!Path::new(\"does_not_exist.txt\").try_exists().expect(\"Can't check existence of file does_not_exist.txt\"));\n     /// assert!(Path::new(\"/root/secret_file.txt\").try_exists().is_err());\n     /// ```\n+    ///\n+    /// [`exists()`]: Self::exists\n     // FIXME: stabilization should modify documentation of `exists()` to recommend this method\n     // instead.\n     #[unstable(feature = \"path_try_exists\", issue = \"83186\")]"}]}