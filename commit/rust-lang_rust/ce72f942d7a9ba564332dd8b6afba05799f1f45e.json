{"sha": "ce72f942d7a9ba564332dd8b6afba05799f1f45e", "node_id": "C_kwDOAAsO6NoAKGNlNzJmOTQyZDdhOWJhNTY0MzMyZGQ4YjZhZmJhMDU3OTlmMWY0NWU", "commit": {"author": {"name": "Rejyr", "email": "jerrylwang123@gmail.com", "date": "2022-11-11T02:01:45Z"}, "committer": {"name": "Rejyr", "email": "jerrylwang123@gmail.com", "date": "2023-01-09T22:07:25Z"}, "message": "add: `#[rustc_lint_diagnostics]` for more `context.rs` functions.", "tree": {"sha": "76012bcf30c176731d6f20653033a05c84be4dc6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76012bcf30c176731d6f20653033a05c84be4dc6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce72f942d7a9ba564332dd8b6afba05799f1f45e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce72f942d7a9ba564332dd8b6afba05799f1f45e", "html_url": "https://github.com/rust-lang/rust/commit/ce72f942d7a9ba564332dd8b6afba05799f1f45e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce72f942d7a9ba564332dd8b6afba05799f1f45e/comments", "author": {"login": "Rejyr", "id": 88239847, "node_id": "MDQ6VXNlcjg4MjM5ODQ3", "avatar_url": "https://avatars.githubusercontent.com/u/88239847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rejyr", "html_url": "https://github.com/Rejyr", "followers_url": "https://api.github.com/users/Rejyr/followers", "following_url": "https://api.github.com/users/Rejyr/following{/other_user}", "gists_url": "https://api.github.com/users/Rejyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rejyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rejyr/subscriptions", "organizations_url": "https://api.github.com/users/Rejyr/orgs", "repos_url": "https://api.github.com/users/Rejyr/repos", "events_url": "https://api.github.com/users/Rejyr/events{/privacy}", "received_events_url": "https://api.github.com/users/Rejyr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Rejyr", "id": 88239847, "node_id": "MDQ6VXNlcjg4MjM5ODQ3", "avatar_url": "https://avatars.githubusercontent.com/u/88239847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rejyr", "html_url": "https://github.com/Rejyr", "followers_url": "https://api.github.com/users/Rejyr/followers", "following_url": "https://api.github.com/users/Rejyr/following{/other_user}", "gists_url": "https://api.github.com/users/Rejyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rejyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rejyr/subscriptions", "organizations_url": "https://api.github.com/users/Rejyr/orgs", "repos_url": "https://api.github.com/users/Rejyr/repos", "events_url": "https://api.github.com/users/Rejyr/events{/privacy}", "received_events_url": "https://api.github.com/users/Rejyr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78fce795d8084e288278270438a49df6172dd36c", "url": "https://api.github.com/repos/rust-lang/rust/commits/78fce795d8084e288278270438a49df6172dd36c", "html_url": "https://github.com/rust-lang/rust/commit/78fce795d8084e288278270438a49df6172dd36c"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "de9e71d26e17f63a920fa2bad6f6e14b814f5833", "filename": "compiler/rustc_lint/src/context.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ce72f942d7a9ba564332dd8b6afba05799f1f45e/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce72f942d7a9ba564332dd8b6afba05799f1f45e/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs?ref=ce72f942d7a9ba564332dd8b6afba05799f1f45e", "patch": "@@ -13,6 +13,8 @@\n //! previous lint state is pushed onto a stack and the ast is then recursed\n //! upon. As the ast is traversed, this keeps track of the current lint level\n //! for all lint attributes.\n+#![deny(rustc::untranslatable_diagnostic)]\n+#![deny(rustc::diagnostic_outside_of_impl)]\n \n use self::TargetLint::*;\n \n@@ -965,6 +967,7 @@ pub trait LintContext: Sized {\n     /// Note that this function should only be called for [`LintExpectationId`]s\n     /// retrieved from the current lint pass. Buffered or manually created ids can\n     /// cause ICEs.\n+    #[rustc_lint_diagnostics]\n     fn fulfill_expectation(&self, expectation: LintExpectationId) {\n         // We need to make sure that submitted expectation ids are correctly fulfilled suppressed\n         // and stored between compilation sessions. To not manually do these steps, we simply create\n@@ -1011,6 +1014,7 @@ impl<'tcx> LintContext for LateContext<'tcx> {\n         &*self.lint_store\n     }\n \n+    #[rustc_lint_diagnostics]\n     fn lookup<S: Into<MultiSpan>>(\n         &self,\n         lint: &'static Lint,\n@@ -1045,6 +1049,7 @@ impl LintContext for EarlyContext<'_> {\n         self.builder.lint_store()\n     }\n \n+    #[rustc_lint_diagnostics]\n     fn lookup<S: Into<MultiSpan>>(\n         &self,\n         lint: &'static Lint,"}]}