{"sha": "b7ab4777b2b09d50fa1c1d9c735e2f31ec5f8960", "node_id": "C_kwDOAAsO6NoAKGI3YWI0Nzc3YjJiMDlkNTBmYTFjMWQ5YzczNWUyZjMxZWM1Zjg5NjA", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-06-08T08:01:35Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-06-08T08:13:02Z"}, "message": "note that methods should only be used for diags", "tree": {"sha": "63dcf87e04dc7b589eee17740ad627f7261e7036", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63dcf87e04dc7b589eee17740ad627f7261e7036"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7ab4777b2b09d50fa1c1d9c735e2f31ec5f8960", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7ab4777b2b09d50fa1c1d9c735e2f31ec5f8960", "html_url": "https://github.com/rust-lang/rust/commit/b7ab4777b2b09d50fa1c1d9c735e2f31ec5f8960", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7ab4777b2b09d50fa1c1d9c735e2f31ec5f8960/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8e73ede831727ed1808d245b381703c0142b9ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8e73ede831727ed1808d245b381703c0142b9ba", "html_url": "https://github.com/rust-lang/rust/commit/f8e73ede831727ed1808d245b381703c0142b9ba"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "5fff840c39ec709e960540b0a1e1c0fc7179f7d8", "filename": "compiler/rustc_middle/src/ty/generics.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b7ab4777b2b09d50fa1c1d9c735e2f31ec5f8960/compiler%2Frustc_middle%2Fsrc%2Fty%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7ab4777b2b09d50fa1c1d9c735e2f31ec5f8960/compiler%2Frustc_middle%2Fsrc%2Fty%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fgenerics.rs?ref=b7ab4777b2b09d50fa1c1d9c735e2f31ec5f8960", "patch": "@@ -230,6 +230,8 @@ impl<'tcx> Generics {\n \n     /// Returns the substs corresponding to the generic parameters\n     /// of this item, excluding `Self`.\n+    ///\n+    /// **This should only be used for diagnostics purposes.**\n     pub fn own_substs_no_defaults(\n         &'tcx self,\n         tcx: TyCtxt<'tcx>,\n@@ -261,6 +263,8 @@ impl<'tcx> Generics {\n     }\n \n     /// Returns the substs corresponding to the generic parameters of this item, excluding `Self`.\n+    ///\n+    /// **This should only be used for diagnostics purposes.**\n     pub fn own_substs(\n         &'tcx self,\n         substs: &'tcx [ty::GenericArg<'tcx>],"}]}