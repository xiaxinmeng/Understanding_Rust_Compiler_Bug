{"sha": "be6ae6eb373551936fffe83ebe085e4819ab00c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlNmFlNmViMzczNTUxOTM2ZmZmZTgzZWJlMDg1ZTQ4MTlhYjAwYzA=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-11-30T13:58:27Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-11-30T13:58:27Z"}, "message": "std::io::mem: add a with_capacity constructor to MemWriter.\n\nThis allows one to reduce the number of reallocs of the internal buffer\nif one has an approximate idea of the size of the final output.", "tree": {"sha": "263b5667c7a3f2252c9e09d716855301a84ebddb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/263b5667c7a3f2252c9e09d716855301a84ebddb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be6ae6eb373551936fffe83ebe085e4819ab00c0", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be6ae6eb373551936fffe83ebe085e4819ab00c0", "html_url": "https://github.com/rust-lang/rust/commit/be6ae6eb373551936fffe83ebe085e4819ab00c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be6ae6eb373551936fffe83ebe085e4819ab00c0/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80991bb578329ca921fdc910d9b6b064e8f521d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/80991bb578329ca921fdc910d9b6b064e8f521d2", "html_url": "https://github.com/rust-lang/rust/commit/80991bb578329ca921fdc910d9b6b064e8f521d2"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "aa3eb9a83176333bb2a2a04bad37eea7faa77977", "filename": "src/libstd/io/mem.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/be6ae6eb373551936fffe83ebe085e4819ab00c0/src%2Flibstd%2Fio%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be6ae6eb373551936fffe83ebe085e4819ab00c0/src%2Flibstd%2Fio%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmem.rs?ref=be6ae6eb373551936fffe83ebe085e4819ab00c0", "patch": "@@ -27,8 +27,14 @@ pub struct MemWriter {\n }\n \n impl MemWriter {\n+    /// Create a new `MemWriter`.\n     pub fn new() -> MemWriter {\n-        MemWriter { buf: vec::with_capacity(128), pos: 0 }\n+        MemWriter::with_capacity(128)\n+    }\n+    /// Create a new `MemWriter`, allocating at least `n` bytes for\n+    /// the internal buffer.\n+    pub fn with_capacity(n: uint) -> MemWriter {\n+        MemWriter { buf: vec::with_capacity(n), pos: 0 }\n     }\n }\n "}]}