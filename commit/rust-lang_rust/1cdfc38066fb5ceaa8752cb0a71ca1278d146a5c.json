{"sha": "1cdfc38066fb5ceaa8752cb0a71ca1278d146a5c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjZGZjMzgwNjZmYjVjZWFhODc1MmNiMGE3MWNhMTI3OGQxNDZhNWM=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-04-22T10:28:44Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-04-22T12:14:46Z"}, "message": "Add a test for #1178 case", "tree": {"sha": "d5fc69f5ba321b4cfaef0d8a9acfada023bd03b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d5fc69f5ba321b4cfaef0d8a9acfada023bd03b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1cdfc38066fb5ceaa8752cb0a71ca1278d146a5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1cdfc38066fb5ceaa8752cb0a71ca1278d146a5c", "html_url": "https://github.com/rust-lang/rust/commit/1cdfc38066fb5ceaa8752cb0a71ca1278d146a5c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1cdfc38066fb5ceaa8752cb0a71ca1278d146a5c/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76e0129a21661029dc6cdbea2412ab53efe33aa1", "url": "https://api.github.com/repos/rust-lang/rust/commits/76e0129a21661029dc6cdbea2412ab53efe33aa1", "html_url": "https://github.com/rust-lang/rust/commit/76e0129a21661029dc6cdbea2412ab53efe33aa1"}], "stats": {"total": 105, "additions": 102, "deletions": 3}, "files": [{"sha": "ee5c6866cabd429362db52b0bdb46c61c6bc75cb", "filename": "crates/ra_mbe/src/lib.rs", "status": "modified", "additions": 102, "deletions": 3, "changes": 105, "blob_url": "https://github.com/rust-lang/rust/blob/1cdfc38066fb5ceaa8752cb0a71ca1278d146a5c/crates%2Fra_mbe%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cdfc38066fb5ceaa8752cb0a71ca1278d146a5c/crates%2Fra_mbe%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Flib.rs?ref=1cdfc38066fb5ceaa8752cb0a71ca1278d146a5c", "patch": "@@ -199,15 +199,36 @@ impl_froms!(TokenTree: Leaf, Subtree);\n         rules.expand(&invocation_tt).unwrap()\n     }\n \n-    pub(crate) fn expand_to_syntax(\n+    pub(crate) fn expand_to_items(\n         rules: &MacroRules,\n         invocation: &str,\n     ) -> ra_syntax::TreeArc<ast::MacroItems> {\n         let expanded = expand(rules, invocation);\n         token_tree_to_macro_items(&expanded).unwrap()\n     }\n \n-    pub(crate) fn assert_expansion(rules: &MacroRules, invocation: &str, expansion: &str) {\n+    #[allow(unused)]\n+    pub(crate) fn expand_to_stmts(\n+        rules: &MacroRules,\n+        invocation: &str,\n+    ) -> ra_syntax::TreeArc<ast::MacroStmts> {\n+        let expanded = expand(rules, invocation);\n+        token_tree_to_macro_stmts(&expanded).unwrap()\n+    }\n+\n+    pub(crate) fn expand_to_expr(\n+        rules: &MacroRules,\n+        invocation: &str,\n+    ) -> ra_syntax::TreeArc<ast::Expr> {\n+        let expanded = expand(rules, invocation);\n+        token_tree_to_expr(&expanded).unwrap()\n+    }\n+\n+    pub(crate) fn assert_expansion(\n+        rules: &MacroRules,\n+        invocation: &str,\n+        expansion: &str,\n+    ) -> tt::Subtree {\n         let expanded = expand(rules, invocation);\n         assert_eq!(expanded.to_string(), expansion);\n \n@@ -224,6 +245,8 @@ impl_froms!(TokenTree: Leaf, Subtree);\n \n         let file = file.replace(\"C_C__C\", \"$crate\");\n         assert_eq!(tree, file,);\n+\n+        expanded\n     }\n \n     #[test]\n@@ -638,7 +661,7 @@ MACRO_ITEMS@[0; 40)\n         );\n \n         assert_eq!(\n-            expand_to_syntax(&rules, \"foo! { 1 + 1  }\").syntax().debug_dump().trim(),\n+            expand_to_items(&rules, \"foo! { 1 + 1  }\").syntax().debug_dump().trim(),\n             r#\"MACRO_ITEMS@[0; 15)\n   FN_DEF@[0; 15)\n     FN_KW@[0; 2) \"fn\"\n@@ -914,6 +937,82 @@ MACRO_ITEMS@[0; 40)\n \"#,\n         );\n         assert_expansion(&rules, r#\"vec!();\"#, r#\"{let mut v = Vec :: new () ;  v}\"#);\n+        assert_expansion(\n+            &rules,\n+            r#\"vec![1u32,2]\"#,\n+            r#\"{let mut v = Vec :: new () ; v . push (1u32) ; v . push (2) ; v}\"#,\n+        );\n+\n+        println!(\"{}\", expand_to_expr(&rules, r#\"vec![1u32,2]\"#).syntax().debug_dump().trim());\n+\n+        assert_eq!(\n+            expand_to_expr(&rules, r#\"vec![1u32,2]\"#).syntax().debug_dump().trim(),\n+            r#\"MACRO_STMTS@[0; 45)\n+  EXPR_STMT@[0; 45)\n+    BLOCK_EXPR@[0; 45)\n+      BLOCK@[0; 45)\n+        L_CURLY@[0; 1) \"{\"\n+        LET_STMT@[1; 20)\n+          LET_KW@[1; 4) \"let\"\n+          BIND_PAT@[4; 8)\n+            MUT_KW@[4; 7) \"mut\"\n+            NAME@[7; 8)\n+              IDENT@[7; 8) \"v\"\n+          EQ@[8; 9) \"=\"\n+          CALL_EXPR@[9; 19)\n+            PATH_EXPR@[9; 17)\n+              PATH@[9; 17)\n+                PATH@[9; 12)\n+                  PATH_SEGMENT@[9; 12)\n+                    NAME_REF@[9; 12)\n+                      IDENT@[9; 12) \"Vec\"\n+                COLONCOLON@[12; 14) \"::\"\n+                PATH_SEGMENT@[14; 17)\n+                  NAME_REF@[14; 17)\n+                    IDENT@[14; 17) \"new\"\n+            ARG_LIST@[17; 19)\n+              L_PAREN@[17; 18) \"(\"\n+              R_PAREN@[18; 19) \")\"\n+          SEMI@[19; 20) \";\"\n+        EXPR_STMT@[20; 33)\n+          METHOD_CALL_EXPR@[20; 32)\n+            PATH_EXPR@[20; 21)\n+              PATH@[20; 21)\n+                PATH_SEGMENT@[20; 21)\n+                  NAME_REF@[20; 21)\n+                    IDENT@[20; 21) \"v\"\n+            DOT@[21; 22) \".\"\n+            NAME_REF@[22; 26)\n+              IDENT@[22; 26) \"push\"\n+            ARG_LIST@[26; 32)\n+              L_PAREN@[26; 27) \"(\"\n+              LITERAL@[27; 31)\n+                INT_NUMBER@[27; 31) \"1u32\"\n+              R_PAREN@[31; 32) \")\"\n+          SEMI@[32; 33) \";\"\n+        EXPR_STMT@[33; 43)\n+          METHOD_CALL_EXPR@[33; 42)\n+            PATH_EXPR@[33; 34)\n+              PATH@[33; 34)\n+                PATH_SEGMENT@[33; 34)\n+                  NAME_REF@[33; 34)\n+                    IDENT@[33; 34) \"v\"\n+            DOT@[34; 35) \".\"\n+            NAME_REF@[35; 39)\n+              IDENT@[35; 39) \"push\"\n+            ARG_LIST@[39; 42)\n+              L_PAREN@[39; 40) \"(\"\n+              LITERAL@[40; 41)\n+                INT_NUMBER@[40; 41) \"2\"\n+              R_PAREN@[41; 42) \")\"\n+          SEMI@[42; 43) \";\"\n+        PATH_EXPR@[43; 44)\n+          PATH@[43; 44)\n+            PATH_SEGMENT@[43; 44)\n+              NAME_REF@[43; 44)\n+                IDENT@[43; 44) \"v\"\n+        R_CURLY@[44; 45) \"}\"\"#\n+        );\n     }\n \n     #[test]"}]}