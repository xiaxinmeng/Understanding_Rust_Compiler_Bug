{"sha": "8b2e7fc529526e24779e5cabd0c3b1a90e1da245", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiMmU3ZmM1Mjk1MjZlMjQ3NzllNWNhYmQwYzNiMWE5MGUxZGEyNDU=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-01-24T19:07:39Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-01-24T19:07:39Z"}, "message": "Merge pull request #4614 from thestinger/map\n\nremove the old LinearMap constructor", "tree": {"sha": "8fd5ecd092ad79fc372bd43c0ac6830203ed65be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8fd5ecd092ad79fc372bd43c0ac6830203ed65be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b2e7fc529526e24779e5cabd0c3b1a90e1da245", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b2e7fc529526e24779e5cabd0c3b1a90e1da245", "html_url": "https://github.com/rust-lang/rust/commit/8b2e7fc529526e24779e5cabd0c3b1a90e1da245", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b2e7fc529526e24779e5cabd0c3b1a90e1da245/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b64c796a441a32f6661bef7783637c6d2a3e169", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b64c796a441a32f6661bef7783637c6d2a3e169", "html_url": "https://github.com/rust-lang/rust/commit/5b64c796a441a32f6661bef7783637c6d2a3e169"}, {"sha": "dbfe21eddaec165e689b90e86a049ef654d35287", "url": "https://api.github.com/repos/rust-lang/rust/commits/dbfe21eddaec165e689b90e86a049ef654d35287", "html_url": "https://github.com/rust-lang/rust/commit/dbfe21eddaec165e689b90e86a049ef654d35287"}], "stats": {"total": 13, "additions": 5, "deletions": 8}, "files": [{"sha": "0d4119e1a1bedd6ecc4be7aa8e9e05b528f5452b", "filename": "src/libcore/hashmap.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8b2e7fc529526e24779e5cabd0c3b1a90e1da245/src%2Flibcore%2Fhashmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b2e7fc529526e24779e5cabd0c3b1a90e1da245/src%2Flibcore%2Fhashmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fhashmap.rs?ref=8b2e7fc529526e24779e5cabd0c3b1a90e1da245", "patch": "@@ -60,10 +60,6 @@ pub mod linear {\n         ((capacity as float) * 3. / 4.) as uint\n     }\n \n-    pub fn LinearMap<K:Eq Hash,V>() -> LinearMap<K,V> {\n-        linear_map_with_capacity(INITIAL_CAPACITY)\n-    }\n-\n     pub fn linear_map_with_capacity<K:Eq Hash,V>(\n         initial_capacity: uint) -> LinearMap<K,V> {\n         let r = rand::Rng();\n@@ -351,7 +347,8 @@ pub mod linear {\n         }\n     }\n \n-    impl<K:Hash IterBytes Eq,V> LinearMap<K,V> {\n+    pub impl<K:Hash IterBytes Eq,V> LinearMap<K,V> {\n+        /// Create an empty LinearMap\n         static fn new() -> LinearMap<K, V> {\n             linear_map_with_capacity(INITIAL_CAPACITY)\n         }\n@@ -495,7 +492,7 @@ pub mod linear {\n \n     pub impl <T: Hash IterBytes Eq> LinearSet<T> {\n         /// Create an empty LinearSet\n-        static fn new() -> LinearSet<T> { LinearSet{map: LinearMap()} }\n+        static fn new() -> LinearSet<T> { LinearSet{map: LinearMap::new()} }\n     }\n }\n "}, {"sha": "fbd695aee762c0b6ba085ef62efaf281fe7f7b39", "filename": "src/libstd/workcache.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b2e7fc529526e24779e5cabd0c3b1a90e1da245/src%2Flibstd%2Fworkcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b2e7fc529526e24779e5cabd0c3b1a90e1da245/src%2Flibstd%2Fworkcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fworkcache.rs?ref=8b2e7fc529526e24779e5cabd0c3b1a90e1da245", "patch": "@@ -259,7 +259,7 @@ impl Context {\n     static fn new(db: @Mut<Database>,\n                   lg: @Mut<Logger>,\n                   cfg: @json::Object) -> Context {\n-        Context {db: db, logger: lg, cfg: cfg, freshness: LinearMap()}\n+        Context{db: db, logger: lg, cfg: cfg, freshness: LinearMap::new()}\n     }\n \n     fn prep<T:Owned\n@@ -270,7 +270,7 @@ impl Context {\n                   blk: fn(@Mut<Prep>)->Work<T>) -> Work<T> {\n         let p = @Mut(Prep {ctxt: self,\n                            fn_name: fn_name.to_owned(),\n-                           declared_inputs: LinearMap()});\n+                           declared_inputs: LinearMap::new()});\n         blk(p)\n     }\n }"}]}