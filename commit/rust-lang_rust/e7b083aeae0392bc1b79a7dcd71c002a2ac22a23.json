{"sha": "e7b083aeae0392bc1b79a7dcd71c002a2ac22a23", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3YjA4M2FlYWUwMzkyYmMxYjc5YTdkY2Q3MWMwMDJhMmFjMjJhMjM=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-04-29T12:40:08Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-07-05T06:20:02Z"}, "message": "don't const eval constants during MIR creation\n\nthis didn't work very well anyway, because const_eval can't eval all kinds of constants.", "tree": {"sha": "78b5766f30bc2b2e54b3d4fcbfb18506a2cd6a75", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/78b5766f30bc2b2e54b3d4fcbfb18506a2cd6a75"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7b083aeae0392bc1b79a7dcd71c002a2ac22a23", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXe1GSAAoJEFbW7qD8Z6xG4NEP/1Q7vP4L+nVe8ooKy61Hz2tB\naICpZaAKTO9Af8onLQ326/4Yoi7SInwVR4gbO/XhNee50dxUPVy06PYBkVT6ORf3\n75FFKZQzlPIX61e9iALVxaMbpf0gX7HKexJ5N4JhSagNDhmEkIAAmwgPcyY8rvJE\nFI50mrTngjp6lzRlUkkUO7VreozWmHu0+CG+Q/UtCqcdgj8K2vz7yAO4NzWhJKSC\nya3/P2N7BcDcHUvaC41o54qTjBt1h60E8efneU4zdb7T8W1M1anY9tSOz4CH57dd\nqZbFrvI+scLYeaOBPc7x1AMr0RRtoplJBJi2/DWA6R2JnCwuNzMuoB2in76m/6RE\nDxbO2ZxMCxLkf+Wz0fz/WhJ0jaZIgfldMtDfPkXQIYNxF9V5ufyBfW6aCOBB3T4n\nwnBwihAwPZlOb8LFUNMEi++a8sVT2FrDd42G+efy4960XYkiBAzxHEIaOYMvQAQk\nwHEFF1RmTfsB0/KN7eUeY6c/MQXoZqqRJcTYIHLp+l/IFKrMj4l18wcBPIRy9CA/\nWoeDr1kYQowfrN68KPKxfF2ccXvsqVUueQ6zxFh6C3uM2Fbe6VAqGL9NLVE5wQ0c\nOAFrTXuJb0joLb+s8Ofdqtb3nocS9u6tXkWFfrSWnzadqIH7Frb8amb5M1i7vfDw\ngxot8UHPecnSFPhi+FpI\n=WqFb\n-----END PGP SIGNATURE-----", "payload": "tree 78b5766f30bc2b2e54b3d4fcbfb18506a2cd6a75\nparent 0f4c4f8c2910d717044a041039a1a1aa914ff59e\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1461933608 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1467699602 +0200\n\ndon't const eval constants during MIR creation\n\nthis didn't work very well anyway, because const_eval can't eval all kinds of constants."}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7b083aeae0392bc1b79a7dcd71c002a2ac22a23", "html_url": "https://github.com/rust-lang/rust/commit/e7b083aeae0392bc1b79a7dcd71c002a2ac22a23", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7b083aeae0392bc1b79a7dcd71c002a2ac22a23/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f4c4f8c2910d717044a041039a1a1aa914ff59e", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f4c4f8c2910d717044a041039a1a1aa914ff59e", "html_url": "https://github.com/rust-lang/rust/commit/0f4c4f8c2910d717044a041039a1a1aa914ff59e"}], "stats": {"total": 29, "additions": 1, "deletions": 28}, "files": [{"sha": "88fb65d8eea03569d41c13958d524a7e6cf5fe48", "filename": "src/librustc_mir/hair/cx/expr.rs", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e7b083aeae0392bc1b79a7dcd71c002a2ac22a23/src%2Flibrustc_mir%2Fhair%2Fcx%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7b083aeae0392bc1b79a7dcd71c002a2ac22a23/src%2Flibrustc_mir%2Fhair%2Fcx%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fcx%2Fexpr.rs?ref=e7b083aeae0392bc1b79a7dcd71c002a2ac22a23", "patch": "@@ -700,19 +700,7 @@ fn convert_path_expr<'a, 'gcx, 'tcx>(cx: &mut Cx<'a, 'gcx, 'tcx>,\n             ref sty => bug!(\"unexpected sty: {:?}\", sty)\n         },\n         Def::Const(def_id) |\n-        Def::AssociatedConst(def_id) => {\n-            let substs = Some(cx.tcx.node_id_item_substs(expr.id).substs);\n-            let tcx = cx.tcx.global_tcx();\n-            if let Some((e, _)) = const_eval::lookup_const_by_id(tcx, def_id, substs) {\n-                // FIXME ConstVal can't be yet used with adjustments, as they would be lost.\n-                if !cx.tcx.tables.borrow().adjustments.contains_key(&e.id) {\n-                    if let Some(v) = cx.try_const_eval_literal(e) {\n-                        return ExprKind::Literal { literal: v };\n-                    }\n-                }\n-            }\n-            def_id\n-        }\n+        Def::AssociatedConst(def_id) => def_id,\n \n         Def::Static(node_id, _) => return ExprKind::StaticRef {\n             id: node_id,"}, {"sha": "2438f43d24e0a42f8e87854af51e0ffe35c90ddb", "filename": "src/librustc_mir/hair/cx/mod.rs", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e7b083aeae0392bc1b79a7dcd71c002a2ac22a23/src%2Flibrustc_mir%2Fhair%2Fcx%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7b083aeae0392bc1b79a7dcd71c002a2ac22a23/src%2Flibrustc_mir%2Fhair%2Fcx%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fcx%2Fmod.rs?ref=e7b083aeae0392bc1b79a7dcd71c002a2ac22a23", "patch": "@@ -129,21 +129,6 @@ impl<'a, 'gcx, 'tcx> Cx<'a, 'gcx, 'tcx> {\n         }\n     }\n \n-    pub fn try_const_eval_literal(&mut self, e: &hir::Expr) -> Option<Literal<'tcx>> {\n-        let hint = const_eval::EvalHint::ExprTypeChecked;\n-        let tcx = self.tcx.global_tcx();\n-        const_eval::eval_const_expr_partial(tcx, e, hint, None).ok().and_then(|v| {\n-            match v {\n-                // All of these contain local IDs, unsuitable for storing in MIR.\n-                ConstVal::Struct(_) | ConstVal::Tuple(_) |\n-                ConstVal::Array(..) | ConstVal::Repeat(..) |\n-                ConstVal::Function(_) => None,\n-\n-                _ => Some(Literal::Value { value: v })\n-            }\n-        })\n-    }\n-\n     pub fn trait_method(&mut self,\n                         trait_def_id: DefId,\n                         method_name: &str,"}]}