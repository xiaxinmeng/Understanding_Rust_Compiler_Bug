{"sha": "6c676909dd94f48ab1e85427071b508f104f360f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjNjc2OTA5ZGQ5NGY0OGFiMWU4NTQyNzA3MWI1MDhmMTA0ZjM2MGY=", "commit": {"author": {"name": "Yuki Kodama", "email": "endflow.net@gmail.com", "date": "2020-05-24T09:09:42Z"}, "committer": {"name": "Yuki Kodama", "email": "endflow.net@gmail.com", "date": "2020-05-25T16:06:25Z"}, "message": "Strip leading underscore", "tree": {"sha": "5a1bd28dbb15469541ce1f88d489b14e6d13afe1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a1bd28dbb15469541ce1f88d489b14e6d13afe1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c676909dd94f48ab1e85427071b508f104f360f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c676909dd94f48ab1e85427071b508f104f360f", "html_url": "https://github.com/rust-lang/rust/commit/6c676909dd94f48ab1e85427071b508f104f360f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c676909dd94f48ab1e85427071b508f104f360f/comments", "author": {"login": "kuy", "id": 151614, "node_id": "MDQ6VXNlcjE1MTYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/151614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kuy", "html_url": "https://github.com/kuy", "followers_url": "https://api.github.com/users/kuy/followers", "following_url": "https://api.github.com/users/kuy/following{/other_user}", "gists_url": "https://api.github.com/users/kuy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kuy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kuy/subscriptions", "organizations_url": "https://api.github.com/users/kuy/orgs", "repos_url": "https://api.github.com/users/kuy/repos", "events_url": "https://api.github.com/users/kuy/events{/privacy}", "received_events_url": "https://api.github.com/users/kuy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kuy", "id": 151614, "node_id": "MDQ6VXNlcjE1MTYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/151614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kuy", "html_url": "https://github.com/kuy", "followers_url": "https://api.github.com/users/kuy/followers", "following_url": "https://api.github.com/users/kuy/following{/other_user}", "gists_url": "https://api.github.com/users/kuy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kuy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kuy/subscriptions", "organizations_url": "https://api.github.com/users/kuy/orgs", "repos_url": "https://api.github.com/users/kuy/repos", "events_url": "https://api.github.com/users/kuy/events{/privacy}", "received_events_url": "https://api.github.com/users/kuy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c2c8d7e5f7887351bf8e475f441609527679e5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c2c8d7e5f7887351bf8e475f441609527679e5f", "html_url": "https://github.com/rust-lang/rust/commit/3c2c8d7e5f7887351bf8e475f441609527679e5f"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "4f054398a94e760351a9839ae36eacfd1a5e6a58", "filename": "crates/ra_ide/src/display/function_signature.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6c676909dd94f48ab1e85427071b508f104f360f/crates%2Fra_ide%2Fsrc%2Fdisplay%2Ffunction_signature.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c676909dd94f48ab1e85427071b508f104f360f/crates%2Fra_ide%2Fsrc%2Fdisplay%2Ffunction_signature.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdisplay%2Ffunction_signature.rs?ref=6c676909dd94f48ab1e85427071b508f104f360f", "patch": "@@ -187,6 +187,14 @@ impl FunctionSignature {\n \n impl From<&'_ ast::FnDef> for FunctionSignature {\n     fn from(node: &ast::FnDef) -> FunctionSignature {\n+        fn strip_leading_underscore(name: String) -> String {\n+            if name.starts_with(\"_\") {\n+                name.get(1..).unwrap_or_default().to_string()\n+            } else {\n+                name\n+            }\n+        }\n+\n         fn param_list(node: &ast::FnDef) -> (bool, Vec<String>, Vec<String>) {\n             let mut res = vec![];\n             let mut res_types = vec![];\n@@ -230,15 +238,15 @@ impl From<&'_ ast::FnDef> for FunctionSignature {\n                     param_list\n                         .params()\n                         .map(|param| {\n-                            Some(\n+                            Some(strip_leading_underscore(\n                                 param\n                                     .pat()?\n                                     .syntax()\n                                     .descendants()\n                                     .find_map(ast::Name::cast)?\n                                     .text()\n                                     .to_string(),\n-                            )\n+                            ))\n                         })\n                         .map(|param| param.unwrap_or_default()),\n                 );"}]}