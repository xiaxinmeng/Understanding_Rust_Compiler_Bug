{"sha": "7f1fbea8e9df0ff5f3ef77f797daf71fb9115527", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmMWZiZWE4ZTlkZjBmZjVmM2VmNzdmNzk3ZGFmNzFmYjkxMTU1Mjc=", "commit": {"author": {"name": "Gaurav Saxena", "email": "gsaxena@bennettadelson.com", "date": "2015-10-13T06:22:35Z"}, "committer": {"name": "Gaurav Saxena", "email": "gsaxena@bennettadelson.com", "date": "2015-10-13T06:22:35Z"}, "message": "added semicolons for return statements", "tree": {"sha": "dccd46774cb349be6f3bb64110ff6da5870986a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dccd46774cb349be6f3bb64110ff6da5870986a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f1fbea8e9df0ff5f3ef77f797daf71fb9115527", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f1fbea8e9df0ff5f3ef77f797daf71fb9115527", "html_url": "https://github.com/rust-lang/rust/commit/7f1fbea8e9df0ff5f3ef77f797daf71fb9115527", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f1fbea8e9df0ff5f3ef77f797daf71fb9115527/comments", "author": null, "committer": null, "parents": [{"sha": "af00f3ffe67bdc9e4d6090ae4bfa00fde238e5fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/af00f3ffe67bdc9e4d6090ae4bfa00fde238e5fa", "html_url": "https://github.com/rust-lang/rust/commit/af00f3ffe67bdc9e4d6090ae4bfa00fde238e5fa"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "6be572f847bc405934b461d2e224d6fc45ad50b4", "filename": "src/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f1fbea8e9df0ff5f3ef77f797daf71fb9115527/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f1fbea8e9df0ff5f3ef77f797daf71fb9115527/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=7f1fbea8e9df0ff5f3ef77f797daf71fb9115527", "patch": "@@ -812,7 +812,7 @@ fn rewrite_match(context: &RewriteContext,\n fn arm_start_pos(arm: &ast::Arm) -> BytePos {\n     let &ast::Arm { ref attrs, ref pats, .. } = arm;\n     if !attrs.is_empty() {\n-        return attrs[0].span.lo\n+        return attrs[0].span.lo;\n     }\n \n     pats[0].span.lo"}]}