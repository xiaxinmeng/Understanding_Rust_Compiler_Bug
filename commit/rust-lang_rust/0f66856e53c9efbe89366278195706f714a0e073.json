{"sha": "0f66856e53c9efbe89366278195706f714a0e073", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmNjY4NTZlNTNjOWVmYmU4OTM2NjI3ODE5NTcwNmY3MTRhMGUwNzM=", "commit": {"author": {"name": "Gyorgy Andrasek", "email": "jurily@gmail.com", "date": "2013-11-01T16:13:43Z"}, "committer": {"name": "Gyorgy Andrasek", "email": "jurily@gmail.com", "date": "2013-11-01T16:13:43Z"}, "message": "Fix typo in to_digit", "tree": {"sha": "f40702c84629ef06ca5990d34a6e09a68958ed44", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f40702c84629ef06ca5990d34a6e09a68958ed44"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f66856e53c9efbe89366278195706f714a0e073", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f66856e53c9efbe89366278195706f714a0e073", "html_url": "https://github.com/rust-lang/rust/commit/0f66856e53c9efbe89366278195706f714a0e073", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f66856e53c9efbe89366278195706f714a0e073/comments", "author": null, "committer": null, "parents": [{"sha": "a300314827899fbf505ede381767583aa6f4504e", "url": "https://api.github.com/repos/rust-lang/rust/commits/a300314827899fbf505ede381767583aa6f4504e", "html_url": "https://github.com/rust-lang/rust/commit/a300314827899fbf505ede381767583aa6f4504e"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "6530755cb1dd673a57a9b72468b19dee282f444d", "filename": "src/libstd/char.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f66856e53c9efbe89366278195706f714a0e073/src%2Flibstd%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f66856e53c9efbe89366278195706f714a0e073/src%2Flibstd%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fchar.rs?ref=0f66856e53c9efbe89366278195706f714a0e073", "patch": "@@ -187,7 +187,7 @@ pub fn is_digit_radix(c: char, radix: uint) -> bool {\n #[inline]\n pub fn to_digit(c: char, radix: uint) -> Option<uint> {\n     if radix > 36 {\n-        fail!(\"to_digit: radix {} is to high (maximum 36)\", radix);\n+        fail!(\"to_digit: radix {} is too high (maximum 36)\", radix);\n     }\n     let val = match c {\n       '0' .. '9' => c as uint - ('0' as uint),"}]}