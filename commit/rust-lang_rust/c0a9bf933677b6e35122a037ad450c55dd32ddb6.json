{"sha": "c0a9bf933677b6e35122a037ad450c55dd32ddb6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwYTliZjkzMzY3N2I2ZTM1MTIyYTAzN2FkNDUwYzU1ZGQzMmRkYjY=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-11-16T16:26:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-16T16:26:29Z"}, "message": "Rollup merge of #78769 - est31:remove_lifetimes, r=KodrAus\n\nRemove unneeded lifetimes in array/mod.rs", "tree": {"sha": "7a7d7383c2b83a35bc21e299d30609b68536e9db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a7d7383c2b83a35bc21e299d30609b68536e9db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0a9bf933677b6e35122a037ad450c55dd32ddb6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfsqg2CRBK7hj4Ov3rIwAAdHIIACbA3WdnWAwy/S0aRAmT5DDm\nKyIK9W/eAdW/vg2UB+jt8zQ/+1JPYOdBVKIBcw5idwGEX1tsIYMFSzj/j5BS8l7m\naDlJH9np7ZCsHN1sJ+BZiSDk42Fx8CvjdClRbqUtA9kmNDSiKyY/QTOhXqCFUhe+\nr4YVXOfa4ZDfOCA1GELWuutpKaps6QLPghu8kFYiMS4Eakx/gQxaG5mrN5HuHq89\nNiJiSPvyvYnvmdARCH1bLaW08+hqYdnQQ3dQSi606jqwf9EIC6mPGIFwgnnSdJ+/\n5PqfvIdT/jmYb2naa9vLhSoq6iSyn0gucy+84IS3b9S6lKEzx5s/4jeSLGLMamY=\n=SeIm\n-----END PGP SIGNATURE-----\n", "payload": "tree 7a7d7383c2b83a35bc21e299d30609b68536e9db\nparent 11ce918c75b05d065ce3bf98b20d62465b5afc55\nparent 5058cad41e4603f8d43f8f606fa2b520bc3d220c\nauthor Mara Bos <m-ou.se@m-ou.se> 1605543989 +0100\ncommitter GitHub <noreply@github.com> 1605543989 +0100\n\nRollup merge of #78769 - est31:remove_lifetimes, r=KodrAus\n\nRemove unneeded lifetimes in array/mod.rs\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0a9bf933677b6e35122a037ad450c55dd32ddb6", "html_url": "https://github.com/rust-lang/rust/commit/c0a9bf933677b6e35122a037ad450c55dd32ddb6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0a9bf933677b6e35122a037ad450c55dd32ddb6/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11ce918c75b05d065ce3bf98b20d62465b5afc55", "url": "https://api.github.com/repos/rust-lang/rust/commits/11ce918c75b05d065ce3bf98b20d62465b5afc55", "html_url": "https://github.com/rust-lang/rust/commit/11ce918c75b05d065ce3bf98b20d62465b5afc55"}, {"sha": "5058cad41e4603f8d43f8f606fa2b520bc3d220c", "url": "https://api.github.com/repos/rust-lang/rust/commits/5058cad41e4603f8d43f8f606fa2b520bc3d220c", "html_url": "https://github.com/rust-lang/rust/commit/5058cad41e4603f8d43f8f606fa2b520bc3d220c"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "a7cb1023229bb68d7c22dd82b5114675f270354b", "filename": "library/core/src/array/mod.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c0a9bf933677b6e35122a037ad450c55dd32ddb6/library%2Fcore%2Fsrc%2Farray%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0a9bf933677b6e35122a037ad450c55dd32ddb6/library%2Fcore%2Fsrc%2Farray%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Farray%2Fmod.rs?ref=c0a9bf933677b6e35122a037ad450c55dd32ddb6", "patch": "@@ -279,22 +279,22 @@ where\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<'b, A, B, const N: usize> PartialEq<&'b [B]> for [A; N]\n+impl<A, B, const N: usize> PartialEq<&[B]> for [A; N]\n where\n     A: PartialEq<B>,\n {\n     #[inline]\n-    fn eq(&self, other: &&'b [B]) -> bool {\n+    fn eq(&self, other: &&[B]) -> bool {\n         self[..] == other[..]\n     }\n     #[inline]\n-    fn ne(&self, other: &&'b [B]) -> bool {\n+    fn ne(&self, other: &&[B]) -> bool {\n         self[..] != other[..]\n     }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<'b, A, B, const N: usize> PartialEq<[A; N]> for &'b [B]\n+impl<A, B, const N: usize> PartialEq<[A; N]> for &[B]\n where\n     B: PartialEq<A>,\n {\n@@ -309,22 +309,22 @@ where\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<'b, A, B, const N: usize> PartialEq<&'b mut [B]> for [A; N]\n+impl<A, B, const N: usize> PartialEq<&mut [B]> for [A; N]\n where\n     A: PartialEq<B>,\n {\n     #[inline]\n-    fn eq(&self, other: &&'b mut [B]) -> bool {\n+    fn eq(&self, other: &&mut [B]) -> bool {\n         self[..] == other[..]\n     }\n     #[inline]\n-    fn ne(&self, other: &&'b mut [B]) -> bool {\n+    fn ne(&self, other: &&mut [B]) -> bool {\n         self[..] != other[..]\n     }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<'b, A, B, const N: usize> PartialEq<[A; N]> for &'b mut [B]\n+impl<A, B, const N: usize> PartialEq<[A; N]> for &mut [B]\n where\n     B: PartialEq<A>,\n {"}]}