{"sha": "d3de465dc85638a6a77298638ebbbfab04b1844d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzZGU0NjVkYzg1NjM4YTZhNzcyOTg2MzhlYmJiZmFiMDRiMTg0NGQ=", "commit": {"author": {"name": "Jeroen Bollen", "email": "contact@jeroenbollen.eu", "date": "2017-09-12T13:32:10Z"}, "committer": {"name": "Jeroen Bollen", "email": "contact@jeroenbollen.eu", "date": "2017-09-12T13:32:10Z"}, "message": "Addressed @BurntSuchi's remarks regarding Entry::replace", "tree": {"sha": "38d0cda7886ca81c4fac95b467b5861598e4a73e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38d0cda7886ca81c4fac95b467b5861598e4a73e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3de465dc85638a6a77298638ebbbfab04b1844d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3de465dc85638a6a77298638ebbbfab04b1844d", "html_url": "https://github.com/rust-lang/rust/commit/d3de465dc85638a6a77298638ebbbfab04b1844d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3de465dc85638a6a77298638ebbbfab04b1844d/comments", "author": {"login": "Binero", "id": 6867251, "node_id": "MDQ6VXNlcjY4NjcyNTE=", "avatar_url": "https://avatars.githubusercontent.com/u/6867251?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Binero", "html_url": "https://github.com/Binero", "followers_url": "https://api.github.com/users/Binero/followers", "following_url": "https://api.github.com/users/Binero/following{/other_user}", "gists_url": "https://api.github.com/users/Binero/gists{/gist_id}", "starred_url": "https://api.github.com/users/Binero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Binero/subscriptions", "organizations_url": "https://api.github.com/users/Binero/orgs", "repos_url": "https://api.github.com/users/Binero/repos", "events_url": "https://api.github.com/users/Binero/events{/privacy}", "received_events_url": "https://api.github.com/users/Binero/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Binero", "id": 6867251, "node_id": "MDQ6VXNlcjY4NjcyNTE=", "avatar_url": "https://avatars.githubusercontent.com/u/6867251?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Binero", "html_url": "https://github.com/Binero", "followers_url": "https://api.github.com/users/Binero/followers", "following_url": "https://api.github.com/users/Binero/following{/other_user}", "gists_url": "https://api.github.com/users/Binero/gists{/gist_id}", "starred_url": "https://api.github.com/users/Binero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Binero/subscriptions", "organizations_url": "https://api.github.com/users/Binero/orgs", "repos_url": "https://api.github.com/users/Binero/repos", "events_url": "https://api.github.com/users/Binero/events{/privacy}", "received_events_url": "https://api.github.com/users/Binero/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a312b4769808f69607377c8e00a5436c31edf67d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a312b4769808f69607377c8e00a5436c31edf67d", "html_url": "https://github.com/rust-lang/rust/commit/a312b4769808f69607377c8e00a5436c31edf67d"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "48dad8bff5d70f39475fd1cead060a57d046812e", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d3de465dc85638a6a77298638ebbbfab04b1844d/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3de465dc85638a6a77298638ebbbfab04b1844d/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=d3de465dc85638a6a77298638ebbbfab04b1844d", "patch": "@@ -2167,21 +2167,20 @@ impl<'a, K, V> OccupiedEntry<'a, K, V> {\n     /// # Examples\n     ///\n     /// ```\n-    /// # #![feature(map_entry_replace)]\n+    /// #![feature(map_entry_replace)]\n     /// use std::collections::HashMap;\n     /// use std::collections::hash_map::Entry;\n     ///\n     /// let mut map: HashMap<String, u32> = HashMap::new();\n-    /// map.insert(String::from(\"poneyland\"), 15);\n+    /// map.insert(\"poneyland\".to_string(), 15);\n     ///\n-    /// if let Entry::Occupied(entry) = map.entry(String::from(\"poneyland\")) {\n+    /// if let Entry::Occupied(entry) = map.entry(\"poneyland\".to_string()) {\n     ///     let (old_key, old_value): (String, u32) = entry.replace(16);\n     ///     assert_eq!(old_key, \"poneyland\");\n     ///     assert_eq!(old_value, 15);\n     /// }\n     ///\n     /// assert_eq!(map.get(\"poneyland\"), Some(&16));\n-    ///\n     /// ```\n     #[unstable(feature = \"map_entry_replace\", issue = \"44286\")]\n     pub fn replace(mut self, value: V) -> (K, V) {"}]}