{"sha": "949abfe7d516e929a20aeadec759d8bd01b82f15", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0OWFiZmU3ZDUxNmU5MjlhMjBhZWFkZWM3NTlkOGJkMDFiODJmMTU=", "commit": {"author": {"name": "Michael Neumann", "email": "mneumann@ntecs.de", "date": "2017-10-29T21:07:13Z"}, "committer": {"name": "Michael Neumann", "email": "mneumann@ntecs.de", "date": "2017-11-12T18:00:35Z"}, "message": "Add ci for DragonFly (disabled for now)", "tree": {"sha": "cbe007ae4da7d47a668036fd624bbb596c016b0d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cbe007ae4da7d47a668036fd624bbb596c016b0d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/949abfe7d516e929a20aeadec759d8bd01b82f15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/949abfe7d516e929a20aeadec759d8bd01b82f15", "html_url": "https://github.com/rust-lang/rust/commit/949abfe7d516e929a20aeadec759d8bd01b82f15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/949abfe7d516e929a20aeadec759d8bd01b82f15/comments", "author": {"login": "mneumann", "id": 34112, "node_id": "MDQ6VXNlcjM0MTEy", "avatar_url": "https://avatars.githubusercontent.com/u/34112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mneumann", "html_url": "https://github.com/mneumann", "followers_url": "https://api.github.com/users/mneumann/followers", "following_url": "https://api.github.com/users/mneumann/following{/other_user}", "gists_url": "https://api.github.com/users/mneumann/gists{/gist_id}", "starred_url": "https://api.github.com/users/mneumann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mneumann/subscriptions", "organizations_url": "https://api.github.com/users/mneumann/orgs", "repos_url": "https://api.github.com/users/mneumann/repos", "events_url": "https://api.github.com/users/mneumann/events{/privacy}", "received_events_url": "https://api.github.com/users/mneumann/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mneumann", "id": 34112, "node_id": "MDQ6VXNlcjM0MTEy", "avatar_url": "https://avatars.githubusercontent.com/u/34112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mneumann", "html_url": "https://github.com/mneumann", "followers_url": "https://api.github.com/users/mneumann/followers", "following_url": "https://api.github.com/users/mneumann/following{/other_user}", "gists_url": "https://api.github.com/users/mneumann/gists{/gist_id}", "starred_url": "https://api.github.com/users/mneumann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mneumann/subscriptions", "organizations_url": "https://api.github.com/users/mneumann/orgs", "repos_url": "https://api.github.com/users/mneumann/repos", "events_url": "https://api.github.com/users/mneumann/events{/privacy}", "received_events_url": "https://api.github.com/users/mneumann/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "690ff045949ac3f3c5bd341e1584f90bc49f0596", "url": "https://api.github.com/repos/rust-lang/rust/commits/690ff045949ac3f3c5bd341e1584f90bc49f0596", "html_url": "https://github.com/rust-lang/rust/commit/690ff045949ac3f3c5bd341e1584f90bc49f0596"}], "stats": {"total": 179, "additions": 179, "deletions": 0}, "files": [{"sha": "f3509efdb988bdd51069b7bb9f7b47dc2fd9dedc", "filename": "src/ci/docker/disabled/dist-x86_64-dragonfly/Dockerfile", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/949abfe7d516e929a20aeadec759d8bd01b82f15/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-dragonfly%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/949abfe7d516e929a20aeadec759d8bd01b82f15/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-dragonfly%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-dragonfly%2FDockerfile?ref=949abfe7d516e929a20aeadec759d8bd01b82f15", "patch": "@@ -0,0 +1,36 @@\n+FROM ubuntu:16.04\n+\n+RUN apt-get update && apt-get install -y --no-install-recommends \\\n+  g++ \\\n+  make \\\n+  file \\\n+  curl \\\n+  ca-certificates \\\n+  python2.7 \\\n+  git \\\n+  cmake \\\n+  sudo \\\n+  bzip2 \\\n+  xz-utils \\\n+  wget \\\n+  libssl-dev \\\n+  bsdtar \\\n+  pkg-config\n+\n+\n+COPY dist-x86_64-dragonfly/build-toolchain.sh /tmp/\n+COPY dist-x86_64-dragonfly/patch-toolchain /tmp/\n+RUN /tmp/build-toolchain.sh /tmp/patch-toolchain\n+\n+COPY scripts/sccache.sh /scripts/\n+RUN sh /scripts/sccache.sh\n+\n+ENV \\\n+    AR_x86_64_unknown_dragonfly=x86_64-unknown-dragonfly-ar \\\n+    CC_x86_64_unknown_dragonfly=x86_64-unknown-dragonfly-gcc \\\n+    CXX_x86_64_unknown_dragonfly=x86_64-unknown-dragonfly-g++\n+\n+ENV HOSTS=x86_64-unknown-dragonfly\n+\n+ENV RUST_CONFIGURE_ARGS --host=$HOSTS --enable-extended\n+ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "3d58f3d307c760fe542226cd411cf0718f7af33a", "filename": "src/ci/docker/disabled/dist-x86_64-dragonfly/build-toolchain.sh", "status": "added", "additions": 120, "deletions": 0, "changes": 120, "blob_url": "https://github.com/rust-lang/rust/blob/949abfe7d516e929a20aeadec759d8bd01b82f15/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-dragonfly%2Fbuild-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/949abfe7d516e929a20aeadec759d8bd01b82f15/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-dragonfly%2Fbuild-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-dragonfly%2Fbuild-toolchain.sh?ref=949abfe7d516e929a20aeadec759d8bd01b82f15", "patch": "@@ -0,0 +1,120 @@\n+#!/bin/bash\n+# Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+set -ex\n+\n+ARCH=x86_64\n+PATCH_TOOLCHAIN=$1\n+BINUTILS=2.25.1\n+GCC=6.4.0\n+\n+hide_output() {\n+  set +x\n+  on_err=\"\n+echo ERROR: An error was encountered with the build.\n+cat /tmp/build.log\n+exit 1\n+\"\n+  trap \"$on_err\" ERR\n+  bash -c \"while true; do sleep 30; echo \\$(date) - building ...; done\" &\n+  PING_LOOP_PID=$!\n+  $@ &> /tmp/build.log\n+  trap - ERR\n+  kill $PING_LOOP_PID\n+  set -x\n+}\n+\n+mkdir binutils\n+cd binutils\n+\n+# First up, build binutils\n+curl https://ftp.gnu.org/gnu/binutils/binutils-$BINUTILS.tar.bz2 | tar xjf -\n+mkdir binutils-build\n+cd binutils-build\n+hide_output ../binutils-$BINUTILS/configure \\\n+  --target=$ARCH-unknown-dragonfly\n+hide_output make -j10\n+hide_output make install\n+cd ../..\n+rm -rf binutils\n+\n+# Next, download the DragonFly libc and relevant header files\n+\n+URL=http://mirror-master.dragonflybsd.org/iso-images/dfly-x86_64-5.0.0_REL.iso.bz2\n+mkdir dragonfly\n+curl $URL | bzcat | bsdtar xf - -C dragonfly ./usr/include ./usr/lib ./lib\n+\n+dst=/usr/local/$ARCH-unknown-dragonfly\n+\n+mkdir -p $dst/lib\n+cp -r dragonfly/usr/include $dst/\n+cp dragonfly/usr/lib/crt1.o $dst/lib\n+cp dragonfly/usr/lib/Scrt1.o $dst/lib\n+cp dragonfly/usr/lib/crti.o $dst/lib\n+cp dragonfly/usr/lib/crtn.o $dst/lib\n+cp dragonfly/usr/lib/libc.a $dst/lib\n+cp dragonfly/usr/lib/libutil.a $dst/lib\n+cp dragonfly/usr/lib/libm.a $dst/lib\n+cp dragonfly/usr/lib/librt.so.0 $dst/lib\n+cp dragonfly/usr/lib/libexecinfo.so.1 $dst/lib\n+cp dragonfly/lib/libc.so.8 $dst/lib\n+cp dragonfly/lib/libm.so.4 $dst/lib\n+cp dragonfly/lib/libutil.so.4 $dst/lib\n+cp dragonfly/usr/lib/libpthread.so $dst/lib/libpthread.so\n+cp dragonfly/usr/lib/thread/libthread_xu.so.2 $dst/lib/libpthread.so.0\n+\n+ln -s libc.so.8 $dst/lib/libc.so\n+ln -s libm.so.4 $dst/lib/libm.so\n+ln -s librt.so.0 $dst/lib/librt.so\n+ln -s libutil.so.4 $dst/lib/libutil.so\n+ln -s libexecinfo.so.1 $dst/lib/libexecinfo.so\n+rm -rf dragonfly\n+\n+# Finally, download and build gcc to target DragonFly\n+mkdir gcc\n+cd gcc\n+curl https://ftp.gnu.org/gnu/gcc/gcc-$GCC/gcc-$GCC.tar.gz | tar xzf -\n+cd gcc-$GCC\n+\n+# The following three patches are taken from DragonFly's dports collection:\n+# https://github.com/DragonFlyBSD/DPorts/tree/master/lang/gcc5\n+# The dports specification for gcc5 contains a few more patches, but they are\n+# not relevant in this situation, as they are for a language we don't need\n+# (e.g. java), or a platform which is not supported by DragonFly (e.g. i386,\n+# powerpc64, ia64, arm).\n+#\n+# These patches probably only need to be updated in case the gcc version is\n+# updated.\n+\n+patch -p0 < $PATCH_TOOLCHAIN\n+\n+./contrib/download_prerequisites\n+\n+mkdir ../gcc-build\n+cd ../gcc-build\n+hide_output ../gcc-$GCC/configure                \\\n+  --enable-languages=c,c++                       \\\n+  --target=$ARCH-unknown-dragonfly               \\\n+  --disable-multilib                             \\\n+  --disable-nls                                  \\\n+  --disable-libgomp                              \\\n+  --disable-libquadmath                          \\\n+  --disable-libssp                               \\\n+  --disable-libvtv                               \\\n+  --disable-libcilkrts                           \\\n+  --disable-libada                               \\\n+  --disable-libsanitizer                         \\\n+  --disable-libquadmath-support                  \\\n+  --disable-lto\n+hide_output make -j10\n+hide_output make install\n+cd ../..\n+rm -rf gcc"}, {"sha": "98424309ee23dbca8f8fb1fd82cb678174c9c558", "filename": "src/ci/docker/disabled/dist-x86_64-dragonfly/patch-toolchain", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/949abfe7d516e929a20aeadec759d8bd01b82f15/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-dragonfly%2Fpatch-toolchain", "raw_url": "https://github.com/rust-lang/rust/raw/949abfe7d516e929a20aeadec759d8bd01b82f15/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-dragonfly%2Fpatch-toolchain", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-dragonfly%2Fpatch-toolchain?ref=949abfe7d516e929a20aeadec759d8bd01b82f15", "patch": "@@ -0,0 +1,23 @@\n+--- libstdc++-v3/config/os/bsd/dragonfly/os_defines.h.orig\t2015-07-09 16:08:54 UTC\n++++ libstdc++-v3/config/os/bsd/dragonfly/os_defines.h\n+@@ -29,4 +29,9 @@\n+ // System-specific #define, typedefs, corrections, etc, go here.  This\n+ // file will come before all others.\n+ \n++#define _GLIBCXX_USE_C99_CHECK 1\n++#define _GLIBCXX_USE_C99_DYNAMIC (!(__ISO_C_VISIBLE >= 1999))\n++#define _GLIBCXX_USE_C99_LONG_LONG_CHECK 1\n++#define _GLIBCXX_USE_C99_LONG_LONG_DYNAMIC (_GLIBCXX_USE_C99_DYNAMIC || !defined __LONG_LONG_SUPPORTED)\n++\n+ #endif\n+--- libstdc++-v3/configure.orig\t2016-05-26 18:34:47.163132921 +0200\n++++ libstdc++-v3/configure\t2016-05-26 18:35:29.594590648 +0200\n+@@ -52013,7 +52013,7 @@\n+ \n+     ;;\n+ \n+-  *-freebsd*)\n++  *-freebsd* | *-dragonfly*)\n+     SECTION_FLAGS='-ffunction-sections -fdata-sections'\n+ \n+ "}]}