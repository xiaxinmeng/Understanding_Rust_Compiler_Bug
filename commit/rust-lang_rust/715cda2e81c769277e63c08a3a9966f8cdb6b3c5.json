{"sha": "715cda2e81c769277e63c08a3a9966f8cdb6b3c5", "node_id": "C_kwDOAAsO6NoAKDcxNWNkYTJlODFjNzY5Mjc3ZTYzYzA4YTNhOTk2NmY4Y2RiNmIzYzU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-19T18:19:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-19T18:19:45Z"}, "message": "Rollup merge of #92316 - petrochenkov:extmangle, r=wesleywiser\n\nmangling_v0: Skip extern blocks during mangling\n\nThere's no need to include the dummy `Nt` into the symbol name, items in extern blocks belong to their parent modules for all purposes except for inheriting the ABI and attributes.\n\nFollow up to https://github.com/rust-lang/rust/pull/92032\n\n(There's also a drive-by fix to the `rust-demangler` tool's tests, which don't run on CI, I initially attempted using them for testing this PR.)", "tree": {"sha": "f100eafb4fc28a36e6bb316a767bb5f96037b3af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f100eafb4fc28a36e6bb316a767bb5f96037b3af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/715cda2e81c769277e63c08a3a9966f8cdb6b3c5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh6FZCCRBK7hj4Ov3rIwAAY1wIACFxANz4ZC5iXYZq7qP91CAO\nHKlEvnoI6VJUk5HpKRPK32LYTPbu18fbe7XGcNONt2ZcgGF2+/MWeXxNEYkSDGNc\nOPfg6RuXrdi248lB/6vL6XLz1Jm0uLGqqBob5IyEcaZfhBdrAjFNoWN7OKox1zhR\nt/kb9jQcn3YlXEOQPgUxCcFEqNNfNntgxnqRtDbOSoPpcl0VyvSEIn6o4CDEU2S0\npohnstk+Skhkz29JU9uAsbM3l3VGxXoqCQlUXH0v8v+eMM4XR1G4tVJVYW6NMiWe\nxncunelExDDl2/iu1+wBEPLdFMDgH+ABX2VX7LBON9EFE/W4VTv9YSwK8/cqmbs=\n=hoZo\n-----END PGP SIGNATURE-----\n", "payload": "tree f100eafb4fc28a36e6bb316a767bb5f96037b3af\nparent 5e57faa78aa7661c6000204591558f6665f11abc\nparent 333a5cc3691a96aab461ebcbc6064ee79356f1ae\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1642616385 +0100\ncommitter GitHub <noreply@github.com> 1642616385 +0100\n\nRollup merge of #92316 - petrochenkov:extmangle, r=wesleywiser\n\nmangling_v0: Skip extern blocks during mangling\n\nThere's no need to include the dummy `Nt` into the symbol name, items in extern blocks belong to their parent modules for all purposes except for inheriting the ABI and attributes.\n\nFollow up to https://github.com/rust-lang/rust/pull/92032\n\n(There's also a drive-by fix to the `rust-demangler` tool's tests, which don't run on CI, I initially attempted using them for testing this PR.)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/715cda2e81c769277e63c08a3a9966f8cdb6b3c5", "html_url": "https://github.com/rust-lang/rust/commit/715cda2e81c769277e63c08a3a9966f8cdb6b3c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/715cda2e81c769277e63c08a3a9966f8cdb6b3c5/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e57faa78aa7661c6000204591558f6665f11abc", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e57faa78aa7661c6000204591558f6665f11abc", "html_url": "https://github.com/rust-lang/rust/commit/5e57faa78aa7661c6000204591558f6665f11abc"}, {"sha": "333a5cc3691a96aab461ebcbc6064ee79356f1ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/333a5cc3691a96aab461ebcbc6064ee79356f1ae", "html_url": "https://github.com/rust-lang/rust/commit/333a5cc3691a96aab461ebcbc6064ee79356f1ae"}], "stats": {"total": 77, "additions": 58, "deletions": 19}, "files": [{"sha": "0d51f7779e18f8844a284007f1a278b7709c69f2", "filename": "compiler/rustc_symbol_mangling/src/v0.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/715cda2e81c769277e63c08a3a9966f8cdb6b3c5/compiler%2Frustc_symbol_mangling%2Fsrc%2Fv0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/715cda2e81c769277e63c08a3a9966f8cdb6b3c5/compiler%2Frustc_symbol_mangling%2Fsrc%2Fv0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_symbol_mangling%2Fsrc%2Fv0.rs?ref=715cda2e81c769277e63c08a3a9966f8cdb6b3c5", "patch": "@@ -772,9 +772,9 @@ impl<'tcx> Printer<'tcx> for &mut SymbolMangler<'tcx> {\n         disambiguated_data: &DisambiguatedDefPathData,\n     ) -> Result<Self::Path, Self::Error> {\n         let ns = match disambiguated_data.data {\n-            // FIXME: It shouldn't be necessary to add anything for extern block segments,\n-            // but we add 't' for backward compatibility.\n-            DefPathData::ForeignMod => 't',\n+            // Extern block segments can be skipped, names from extern blocks\n+            // are effectively living in their parent modules.\n+            DefPathData::ForeignMod => return print_prefix(self),\n \n             // Uppercase categories are more stable than lowercase ones.\n             DefPathData::TypeNs(_) => 't',"}, {"sha": "8f5b07769caff860f7b25d69278f101ef957ac8d", "filename": "src/test/ui/symbol-names/foreign-types.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/715cda2e81c769277e63c08a3a9966f8cdb6b3c5/src%2Ftest%2Fui%2Fsymbol-names%2Fforeign-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/715cda2e81c769277e63c08a3a9966f8cdb6b3c5/src%2Ftest%2Fui%2Fsymbol-names%2Fforeign-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsymbol-names%2Fforeign-types.rs?ref=715cda2e81c769277e63c08a3a9966f8cdb6b3c5", "patch": "@@ -0,0 +1,19 @@\n+// build-fail\n+// compile-flags: -C symbol-mangling-version=v0\n+\n+#![feature(extern_types)]\n+#![feature(rustc_attrs)]\n+\n+extern \"C\" {\n+    type ForeignType;\n+}\n+\n+struct Check<T: ?Sized>(T);\n+\n+#[rustc_symbol_name]\n+//~^ ERROR symbol-name(_RMCs\n+//~| ERROR demangling(<foreign_types[\n+//~| ERROR demangling-alt(<foreign_types::Check<foreign_types::ForeignType>>)\n+impl Check<ForeignType> {}\n+\n+fn main() {}"}, {"sha": "fcffdd2a8ec15f148e496e4ae0a2cbc754929492", "filename": "src/test/ui/symbol-names/foreign-types.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/715cda2e81c769277e63c08a3a9966f8cdb6b3c5/src%2Ftest%2Fui%2Fsymbol-names%2Fforeign-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/715cda2e81c769277e63c08a3a9966f8cdb6b3c5/src%2Ftest%2Fui%2Fsymbol-names%2Fforeign-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsymbol-names%2Fforeign-types.stderr?ref=715cda2e81c769277e63c08a3a9966f8cdb6b3c5", "patch": "@@ -0,0 +1,20 @@\n+error: symbol-name(_RMCsCRATE_HASH_13foreign_typesINtB<REF>_5CheckNvB<REF>_11ForeignTypeE)\n+  --> $DIR/foreign-types.rs:13:1\n+   |\n+LL | #[rustc_symbol_name]\n+   | ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(<foreign_types[HASH]::Check<foreign_types[HASH]::ForeignType>>)\n+  --> $DIR/foreign-types.rs:13:1\n+   |\n+LL | #[rustc_symbol_name]\n+   | ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(<foreign_types::Check<foreign_types::ForeignType>>)\n+  --> $DIR/foreign-types.rs:13:1\n+   |\n+LL | #[rustc_symbol_name]\n+   | ^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 3 previous errors\n+"}, {"sha": "85019df7867dd429b056a0de325afa6e4d9b344d", "filename": "src/tools/rust-demangler/tests/lib.rs", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/715cda2e81c769277e63c08a3a9966f8cdb6b3c5/src%2Ftools%2Frust-demangler%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/715cda2e81c769277e63c08a3a9966f8cdb6b3c5/src%2Ftools%2Frust-demangler%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frust-demangler%2Ftests%2Flib.rs?ref=715cda2e81c769277e63c08a3a9966f8cdb6b3c5", "patch": "@@ -29,14 +29,14 @@ cc[4d6468d6c9fd4bb3]::spawn::{closure#0}::{closure#0}\n <core[846817f741e54dfd]::slice::Iter<u8> as core[846817f741e54dfd]::iter::iterator::Iterator>::rposition::<core[846817f741e54dfd]::slice::memchr::memrchr::{closure#1}>::{closure#0}\n alloc[f15a878b47eb696b]::alloc::box_free::<dyn alloc[f15a878b47eb696b]::boxed::FnBox<(), Output = ()>>\n INtC8arrayvec8ArrayVechKj7b_E\n-<const_generic[317d481089b8c8fe]::Unsigned<11: u8>>\n-<const_generic[317d481089b8c8fe]::Signed<152: i16>>\n-<const_generic[317d481089b8c8fe]::Signed<-11: i8>>\n-<const_generic[317d481089b8c8fe]::Bool<false: bool>>\n-<const_generic[317d481089b8c8fe]::Bool<true: bool>>\n-<const_generic[317d481089b8c8fe]::Char<'v': char>>\n-<const_generic[317d481089b8c8fe]::Char<'\\n': char>>\n-<const_generic[317d481089b8c8fe]::Char<'\u2202': char>>\n+<const_generic[317d481089b8c8fe]::Unsigned<11u8>>\n+<const_generic[317d481089b8c8fe]::Signed<152i16>>\n+<const_generic[317d481089b8c8fe]::Signed<-11i8>>\n+<const_generic[317d481089b8c8fe]::Bool<false>>\n+<const_generic[317d481089b8c8fe]::Bool<true>>\n+<const_generic[317d481089b8c8fe]::Char<'v'>>\n+<const_generic[317d481089b8c8fe]::Char<'\\n'>>\n+<const_generic[317d481089b8c8fe]::Char<'\u2202'>>\n <const_generic[317d481089b8c8fe]::Foo<_>>::foo::FOO\n foo[0]\n foo[0]\n@@ -51,14 +51,14 @@ cc::spawn::{closure#0}::{closure#0}\n <core::slice::Iter<u8> as core::iter::iterator::Iterator>::rposition::<core::slice::memchr::memrchr::{closure#1}>::{closure#0}\n alloc::alloc::box_free::<dyn alloc::boxed::FnBox<(), Output = ()>>\n INtC8arrayvec8ArrayVechKj7b_E\n-<const_generic::Unsigned<11: u8>>\n-<const_generic::Signed<152: i16>>\n-<const_generic::Signed<-11: i8>>\n-<const_generic::Bool<false: bool>>\n-<const_generic::Bool<true: bool>>\n-<const_generic::Char<'v': char>>\n-<const_generic::Char<'\\n': char>>\n-<const_generic::Char<'\u2202': char>>\n+<const_generic::Unsigned<11u8>>\n+<const_generic::Signed<152i16>>\n+<const_generic::Signed<-11i8>>\n+<const_generic::Bool<false>>\n+<const_generic::Bool<true>>\n+<const_generic::Char<'v'>>\n+<const_generic::Char<'\\n'>>\n+<const_generic::Char<'\u2202'>>\n <const_generic::Foo<_>>::foo::FOO\n foo[0]\n foo[0]"}]}