{"sha": "d5c98008f00c5c0c8504fa19f2d9645a05de80d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1Yzk4MDA4ZjAwYzVjMGM4NTA0ZmExOWYyZDk2NDVhMDVkZTgwZDY=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-27T04:50:01Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-27T04:50:01Z"}, "message": "Recover from failing to format variants even where there is no comment", "tree": {"sha": "95e295a1e12254265d71300972539bc7271c0b15", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/95e295a1e12254265d71300972539bc7271c0b15"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5c98008f00c5c0c8504fa19f2d9645a05de80d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5c98008f00c5c0c8504fa19f2d9645a05de80d6", "html_url": "https://github.com/rust-lang/rust/commit/d5c98008f00c5c0c8504fa19f2d9645a05de80d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5c98008f00c5c0c8504fa19f2d9645a05de80d6/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ece82f9ea815cc16bdf6c0c13dec5bf68b13a93", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ece82f9ea815cc16bdf6c0c13dec5bf68b13a93", "html_url": "https://github.com/rust-lang/rust/commit/9ece82f9ea815cc16bdf6c0c13dec5bf68b13a93"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "5ad260bec7ea164e732ffff78dbc5385b6df3e70", "filename": "src/items.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d5c98008f00c5c0c8504fa19f2d9645a05de80d6/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5c98008f00c5c0c8504fa19f2d9645a05de80d6/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=d5c98008f00c5c0c8504fa19f2d9645a05de80d6", "patch": "@@ -452,9 +452,7 @@ impl<'a> FmtVisitor<'a> {\n         let variant_list = self.format_variant_list(enum_def, body_start, span.hi() - BytePos(1));\n         match variant_list {\n             Some(ref body_str) => self.buffer.push_str(body_str),\n-            None => if contains_comment(&enum_snippet[brace_pos..]) {\n-                self.format_missing_no_indent(span.hi() - BytePos(1))\n-            },\n+            None => self.format_missing_no_indent(span.hi() - BytePos(1)),\n         }\n         self.block_indent = self.block_indent.block_unindent(self.config);\n "}]}