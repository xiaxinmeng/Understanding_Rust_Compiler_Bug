{"sha": "3b5b29c7ec2c28c53bf480a77472f39d939cc72b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiNWIyOWM3ZWMyYzI4YzUzYmY0ODBhNzc0NzJmMzlkOTM5Y2M3MmI=", "commit": {"author": {"name": "Jesse Ruderman", "email": "jruderman@gmail.com", "date": "2011-09-24T23:33:26Z"}, "committer": {"name": "Jesse Ruderman", "email": "jruderman@gmail.com", "date": "2011-09-24T23:33:26Z"}, "message": "Reduce and clarify abuse of 'pure' in interner", "tree": {"sha": "5f33015a8594e11ddbb216de0ead7ef81076d3fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f33015a8594e11ddbb216de0ead7ef81076d3fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b5b29c7ec2c28c53bf480a77472f39d939cc72b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b5b29c7ec2c28c53bf480a77472f39d939cc72b", "html_url": "https://github.com/rust-lang/rust/commit/3b5b29c7ec2c28c53bf480a77472f39d939cc72b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b5b29c7ec2c28c53bf480a77472f39d939cc72b/comments", "author": {"login": "jruderman", "id": 692547, "node_id": "MDQ6VXNlcjY5MjU0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/692547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jruderman", "html_url": "https://github.com/jruderman", "followers_url": "https://api.github.com/users/jruderman/followers", "following_url": "https://api.github.com/users/jruderman/following{/other_user}", "gists_url": "https://api.github.com/users/jruderman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jruderman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jruderman/subscriptions", "organizations_url": "https://api.github.com/users/jruderman/orgs", "repos_url": "https://api.github.com/users/jruderman/repos", "events_url": "https://api.github.com/users/jruderman/events{/privacy}", "received_events_url": "https://api.github.com/users/jruderman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jruderman", "id": 692547, "node_id": "MDQ6VXNlcjY5MjU0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/692547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jruderman", "html_url": "https://github.com/jruderman", "followers_url": "https://api.github.com/users/jruderman/followers", "following_url": "https://api.github.com/users/jruderman/following{/other_user}", "gists_url": "https://api.github.com/users/jruderman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jruderman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jruderman/subscriptions", "organizations_url": "https://api.github.com/users/jruderman/orgs", "repos_url": "https://api.github.com/users/jruderman/repos", "events_url": "https://api.github.com/users/jruderman/events{/privacy}", "received_events_url": "https://api.github.com/users/jruderman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0125532106bceab9dcf7ffd81e8a351c587f53c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/0125532106bceab9dcf7ffd81e8a351c587f53c4", "html_url": "https://github.com/rust-lang/rust/commit/0125532106bceab9dcf7ffd81e8a351c587f53c4"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "80bab14170ded5124622d58f55e754002257e5ca", "filename": "src/comp/middle/trans_common.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3b5b29c7ec2c28c53bf480a77472f39d939cc72b/src%2Fcomp%2Fmiddle%2Ftrans_common.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b5b29c7ec2c28c53bf480a77472f39d939cc72b/src%2Fcomp%2Fmiddle%2Ftrans_common.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans_common.rs?ref=3b5b29c7ec2c28c53bf480a77472f39d939cc72b", "patch": "@@ -833,10 +833,7 @@ pure fn type_has_static_size(cx: @crate_ctxt, t: ty::t) -> bool {\n }\n \n pure fn non_ty_var(cx: @crate_ctxt, t: ty::t) -> bool {\n-    // Not obviously referentially transparent, but\n-    // type interner shouldn't be changing at this point.\n-    // FIXME: how to make that clearer?\n-    let st = unchecked { ty::struct(cx.tcx, t) };\n+    let st = ty::struct(cx.tcx, t);\n     alt st {\n       ty::ty_var(_) { false }\n       _          { true }"}, {"sha": "1f3b58c00ce941e85a28ed64e5a9ee383766bbdf", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3b5b29c7ec2c28c53bf480a77472f39d939cc72b/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b5b29c7ec2c28c53bf480a77472f39d939cc72b/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=3b5b29c7ec2c28c53bf480a77472f39d939cc72b", "patch": "@@ -841,7 +841,7 @@ fn sequence_element_type(cx: ctxt, ty: t) -> t {\n }\n \n pure fn type_is_tup_like(cx: ctxt, ty: t) -> bool {\n-    let sty = unchecked { struct(cx, ty) };\n+    let sty = struct(cx, ty);\n     alt sty {\n       ty_box(_) | ty_rec(_) | ty_tup(_) | ty_tag(_,_) { true }\n       _ { false }\n@@ -1624,9 +1624,7 @@ fn ty_fn_abi(cx: ctxt, fty: t) -> ast::native_abi {\n }\n \n pure fn ty_fn_ret(cx: ctxt, fty: t) -> t {\n-    // Should be pure, as type interner contents\n-    // shouldn't change once set...\n-    let sty = unchecked { struct(cx, fty) };\n+    let sty = struct(cx, fty);\n     alt sty {\n       ty::ty_fn(_, _, r, _, _) { ret r; }\n       ty::ty_native_fn(_, _, r) { ret r; }"}, {"sha": "67324491267d673055f59fbceabfaa2704584138", "filename": "src/comp/syntax/util/interner.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3b5b29c7ec2c28c53bf480a77472f39d939cc72b/src%2Fcomp%2Fsyntax%2Futil%2Finterner.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b5b29c7ec2c28c53bf480a77472f39d939cc72b/src%2Fcomp%2Fsyntax%2Futil%2Finterner.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Futil%2Finterner.rs?ref=3b5b29c7ec2c28c53bf480a77472f39d939cc72b", "patch": "@@ -28,7 +28,13 @@ fn intern<@T>(itr: interner<T>, val: T) -> uint {\n     }\n }\n \n-pure fn get<@T>(itr: interner<T>, idx: uint) -> T { ret itr.vect[idx]; }\n-\n-pure fn len<T>(itr: interner<T>) -> uint { ret vec::len(itr.vect); }\n+// |get| isn't \"pure\" in the traditional sense, because it can go from\n+// failing to returning a value as items are interned. But for typestate,\n+// where we first check a pred and then rely on it, ceasing to fail is ok.\n+pure fn get<@T>(itr: interner<T>, idx: uint) -> T {\n+    unchecked {\n+        itr.vect[idx]\n+    }\n+}\n \n+fn len<T>(itr: interner<T>) -> uint { ret vec::len(itr.vect); }"}]}