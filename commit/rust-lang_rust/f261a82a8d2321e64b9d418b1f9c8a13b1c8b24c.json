{"sha": "f261a82a8d2321e64b9d418b1f9c8a13b1c8b24c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyNjFhODJhOGQyMzIxZTY0YjlkNDE4YjFmOWM4YTEzYjFjOGIyNGM=", "commit": {"author": {"name": "Oli Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2021-03-05T10:21:38Z"}, "committer": {"name": "Oli Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2021-03-15T16:53:05Z"}, "message": "Use tracing instrumentation for better bug diagnosing", "tree": {"sha": "955dbc33f100f2c84847c3b0237a322ecd518e02", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/955dbc33f100f2c84847c3b0237a322ecd518e02"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f261a82a8d2321e64b9d418b1f9c8a13b1c8b24c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f261a82a8d2321e64b9d418b1f9c8a13b1c8b24c", "html_url": "https://github.com/rust-lang/rust/commit/f261a82a8d2321e64b9d418b1f9c8a13b1c8b24c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f261a82a8d2321e64b9d418b1f9c8a13b1c8b24c/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "327cc62b0d46eda2bd55018a7e8edfab8a143d03", "url": "https://api.github.com/repos/rust-lang/rust/commits/327cc62b0d46eda2bd55018a7e8edfab8a143d03", "html_url": "https://github.com/rust-lang/rust/commit/327cc62b0d46eda2bd55018a7e8edfab8a143d03"}], "stats": {"total": 11, "additions": 3, "deletions": 8}, "files": [{"sha": "0d1d2551042721204f3fe79198c8cbd6f6c1562f", "filename": "compiler/rustc_mir/src/borrow_check/region_infer/opaque_types.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f261a82a8d2321e64b9d418b1f9c8a13b1c8b24c/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fregion_infer%2Fopaque_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f261a82a8d2321e64b9d418b1f9c8a13b1c8b24c/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fregion_infer%2Fopaque_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fregion_infer%2Fopaque_types.rs?ref=f261a82a8d2321e64b9d418b1f9c8a13b1c8b24c", "patch": "@@ -47,6 +47,7 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n     /// Calling `universal_upper_bound` for such a region gives `fr_fn_body`,\n     /// which has no `external_name` in which case we use `'empty` as the\n     /// region to pass to `infer_opaque_definition_from_instantiation`.\n+    #[instrument(skip(self, infcx))]\n     pub(in crate::borrow_check) fn infer_opaque_types(\n         &self,\n         infcx: &InferCtxt<'_, 'tcx>,\n@@ -56,10 +57,7 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n         opaque_ty_decls\n             .into_iter()\n             .map(|(opaque_def_id, ty::ResolvedOpaqueTy { concrete_type, substs })| {\n-                debug!(\n-                    \"infer_opaque_types(concrete_type = {:?}, substs = {:?})\",\n-                    concrete_type, substs\n-                );\n+                debug!(?concrete_type, ?substs);\n \n                 let mut subst_regions = vec![self.universal_regions.fr_static];\n                 let universal_substs =\n@@ -110,10 +108,7 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n                         }\n                     });\n \n-                debug!(\n-                    \"infer_opaque_types(universal_concrete_type = {:?}, universal_substs = {:?})\",\n-                    universal_concrete_type, universal_substs\n-                );\n+                debug!(?universal_concrete_type, ?universal_substs);\n \n                 let remapped_type = infcx.infer_opaque_definition_from_instantiation(\n                     opaque_def_id,"}]}