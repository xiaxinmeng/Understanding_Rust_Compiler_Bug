{"sha": "4a7c9ba6e3a250dc899af9b401d2db45d4c2ea7e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhN2M5YmE2ZTNhMjUwZGM4OTlhZjliNDAxZDJkYjQ1ZDRjMmVhN2U=", "commit": {"author": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-05-24T19:47:24Z"}, "committer": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-05-24T19:47:24Z"}, "message": "`can_unwind` -> `caller_can_unwind`", "tree": {"sha": "4c86821d327ccfed8e1c05190a891f66ab701184", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c86821d327ccfed8e1c05190a891f66ab701184"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4a7c9ba6e3a250dc899af9b401d2db45d4c2ea7e", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niIsEABYIADMWIQRJ2jPMDdiQ+U4U42Z0+n/VuNoUuAUCYKwCzRUceWQtaHVhbmdA\nb3V0bG9vay5jb20ACgkQdPp/1bjaFLgLdQEAyNpR0fWmhPz8Ni2teV+Auc8sDyYO\n52AYe0tHIWngJ+0BAKOS2dBQAr73eUcbW6zo64a1G51Bevp6/vpLOu7CQBwO\n=WypO\n-----END PGP SIGNATURE-----", "payload": "tree 4c86821d327ccfed8e1c05190a891f66ab701184\nparent 64044eb2371d955c2e854f849eaccb45dbd33c4a\nauthor hyd-dev <yd-huang@outlook.com> 1621885644 +0800\ncommitter hyd-dev <yd-huang@outlook.com> 1621885644 +0800\n\n`can_unwind` -> `caller_can_unwind`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4a7c9ba6e3a250dc899af9b401d2db45d4c2ea7e", "html_url": "https://github.com/rust-lang/rust/commit/4a7c9ba6e3a250dc899af9b401d2db45d4c2ea7e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4a7c9ba6e3a250dc899af9b401d2db45d4c2ea7e/comments", "author": null, "committer": null, "parents": [{"sha": "64044eb2371d955c2e854f849eaccb45dbd33c4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/64044eb2371d955c2e854f849eaccb45dbd33c4a", "html_url": "https://github.com/rust-lang/rust/commit/64044eb2371d955c2e854f849eaccb45dbd33c4a"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "305d41f5eeb2a56a225ac9666e26c19e03a1ee5f", "filename": "compiler/rustc_mir/src/interpret/terminator.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4a7c9ba6e3a250dc899af9b401d2db45d4c2ea7e/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fterminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a7c9ba6e3a250dc899af9b401d2db45d4c2ea7e/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fterminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fterminator.rs?ref=4a7c9ba6e3a250dc899af9b401d2db45d4c2ea7e", "patch": "@@ -69,7 +69,7 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                 let old_stack = self.frame_idx();\n                 let old_loc = self.frame().loc;\n                 let func = self.eval_operand(func, None)?;\n-                let (fn_val, abi, can_unwind) = match *func.layout.ty.kind() {\n+                let (fn_val, abi, caller_can_unwind) = match *func.layout.ty.kind() {\n                     ty::FnPtr(sig) => {\n                         let caller_abi = sig.abi();\n                         let fn_ptr = self.read_scalar(&func)?.check_init()?;\n@@ -110,7 +110,7 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                     abi,\n                     &args[..],\n                     ret,\n-                    if can_unwind {\n+                    if caller_can_unwind {\n                         cleanup.map_or(StackPopUnwind::Skip, StackPopUnwind::Cleanup)\n                     } else {\n                         StackPopUnwind::NotAllowed"}]}