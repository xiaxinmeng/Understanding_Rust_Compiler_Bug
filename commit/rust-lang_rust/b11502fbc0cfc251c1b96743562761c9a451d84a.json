{"sha": "b11502fbc0cfc251c1b96743562761c9a451d84a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxMTUwMmZiYzBjZmMyNTFjMWI5Njc0MzU2Mjc2MWM5YTQ1MWQ4NGE=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-02-26T19:42:50Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-02-27T06:37:05Z"}, "message": "Mention `unwind(aborts)` in diagnostics for `#[unwind]`\n\nSimplify input validation for `#[unwind]`, add tests", "tree": {"sha": "7c46d46c6a6d021b8e68148c43129effe5b5b579", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c46d46c6a6d021b8e68148c43129effe5b5b579"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b11502fbc0cfc251c1b96743562761c9a451d84a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b11502fbc0cfc251c1b96743562761c9a451d84a", "html_url": "https://github.com/rust-lang/rust/commit/b11502fbc0cfc251c1b96743562761c9a451d84a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b11502fbc0cfc251c1b96743562761c9a451d84a/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f0be45738dd3524f9487f3cf358ef014b12c4061", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0be45738dd3524f9487f3cf358ef014b12c4061", "html_url": "https://github.com/rust-lang/rust/commit/f0be45738dd3524f9487f3cf358ef014b12c4061"}], "stats": {"total": 101, "additions": 69, "deletions": 32}, "files": [{"sha": "f7a000935caf0e05c7d7e71551a2efe7b9e8099c", "filename": "src/libsyntax/attr/builtin.rs", "status": "modified", "additions": 17, "deletions": 31, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/b11502fbc0cfc251c1b96743562761c9a451d84a/src%2Flibsyntax%2Fattr%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b11502fbc0cfc251c1b96743562761c9a451d84a/src%2Flibsyntax%2Fattr%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr%2Fbuiltin.rs?ref=b11502fbc0cfc251c1b96743562761c9a451d84a", "patch": "@@ -7,7 +7,7 @@ use crate::parse::ParseSess;\n use errors::{Applicability, Handler};\n use syntax_pos::{symbol::Symbol, Span};\n \n-use super::{list_contains_name, mark_used, MetaItemKind};\n+use super::{mark_used, MetaItemKind};\n \n enum AttrError {\n     MultipleItem(Name),\n@@ -79,40 +79,26 @@ pub enum UnwindAttr {\n \n /// Determine what `#[unwind]` attribute is present in `attrs`, if any.\n pub fn find_unwind_attr(diagnostic: Option<&Handler>, attrs: &[Attribute]) -> Option<UnwindAttr> {\n-    let syntax_error = |attr: &Attribute| {\n-        mark_used(attr);\n-        diagnostic.map(|d| {\n-            span_err!(d, attr.span, E0633, \"malformed `#[unwind]` attribute\");\n-        });\n-        None\n-    };\n-\n     attrs.iter().fold(None, |ia, attr| {\n-        if attr.path != \"unwind\" {\n-            return ia;\n-        }\n-        let meta = match attr.meta() {\n-            Some(meta) => meta.node,\n-            None => return ia,\n-        };\n-        match meta {\n-            MetaItemKind::Word => {\n-                syntax_error(attr)\n-            }\n-            MetaItemKind::List(ref items) => {\n-                mark_used(attr);\n-                if items.len() != 1 {\n-                    syntax_error(attr)\n-                } else if list_contains_name(&items[..], \"allowed\") {\n-                    Some(UnwindAttr::Allowed)\n-                } else if list_contains_name(&items[..], \"aborts\") {\n-                    Some(UnwindAttr::Aborts)\n-                } else {\n-                    syntax_error(attr)\n+        if attr.check_name(\"unwind\") {\n+            if let Some(meta) = attr.meta() {\n+                if let MetaItemKind::List(items) = meta.node {\n+                    if items.len() == 1 {\n+                        if items[0].check_name(\"allowed\") {\n+                            return Some(UnwindAttr::Allowed);\n+                        } else if items[0].check_name(\"aborts\") {\n+                            return Some(UnwindAttr::Aborts);\n+                        }\n+                    }\n+\n+                    diagnostic.map(|d| {\n+                        span_err!(d, attr.span, E0633, \"malformed `#[unwind]` attribute\");\n+                    });\n                 }\n             }\n-            _ => ia,\n         }\n+\n+        ia\n     })\n }\n "}, {"sha": "93c6de274eeea45141f871f946d6697a867268f7", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b11502fbc0cfc251c1b96743562761c9a451d84a/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b11502fbc0cfc251c1b96743562761c9a451d84a/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=b11502fbc0cfc251c1b96743562761c9a451d84a", "patch": "@@ -1173,7 +1173,7 @@ pub const BUILTIN_ATTRIBUTES: &[(&str, AttributeType, AttributeTemplate, Attribu\n            \"dropck_eyepatch\",\n            \"may_dangle has unstable semantics and may be removed in the future\",\n            cfg_fn!(dropck_eyepatch))),\n-    (\"unwind\", Whitelisted, template!(List: \"allowed\"), Gated(Stability::Unstable,\n+    (\"unwind\", Whitelisted, template!(List: \"allowed|aborts\"), Gated(Stability::Unstable,\n                                   \"unwind_attributes\",\n                                   \"#[unwind] is experimental\",\n                                   cfg_fn!(unwind_attributes))),"}, {"sha": "e34c288c027c22f04b8740437a6b38cbefe3e122", "filename": "src/test/ui/malformed/malformed-unwind-1.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b11502fbc0cfc251c1b96743562761c9a451d84a/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-unwind-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b11502fbc0cfc251c1b96743562761c9a451d84a/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-unwind-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-unwind-1.rs?ref=b11502fbc0cfc251c1b96743562761c9a451d84a", "patch": "@@ -0,0 +1,11 @@\n+#![feature(unwind_attributes)]\n+\n+#[unwind]\n+//~^ ERROR attribute must be of the form\n+extern \"C\" fn f1() {}\n+\n+#[unwind = \"\"]\n+//~^ ERROR attribute must be of the form\n+extern \"C\" fn f2() {}\n+\n+fn main() {}"}, {"sha": "852136eed91bde56a9e74a5c7e14f0bab2181614", "filename": "src/test/ui/malformed/malformed-unwind-1.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b11502fbc0cfc251c1b96743562761c9a451d84a/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-unwind-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b11502fbc0cfc251c1b96743562761c9a451d84a/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-unwind-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-unwind-1.stderr?ref=b11502fbc0cfc251c1b96743562761c9a451d84a", "patch": "@@ -0,0 +1,14 @@\n+error: attribute must be of the form `#[unwind(allowed|aborts)]`\n+  --> $DIR/malformed-unwind-1.rs:3:1\n+   |\n+LL | #[unwind]\n+   | ^^^^^^^^^\n+\n+error: attribute must be of the form `#[unwind(allowed|aborts)]`\n+  --> $DIR/malformed-unwind-1.rs:7:1\n+   |\n+LL | #[unwind = \"\"]\n+   | ^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "d4955b43309308020e177cbe64c8c369c110d3de", "filename": "src/test/ui/malformed/malformed-unwind-2.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b11502fbc0cfc251c1b96743562761c9a451d84a/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-unwind-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b11502fbc0cfc251c1b96743562761c9a451d84a/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-unwind-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-unwind-2.rs?ref=b11502fbc0cfc251c1b96743562761c9a451d84a", "patch": "@@ -0,0 +1,11 @@\n+#![feature(unwind_attributes)]\n+\n+#[unwind(allowed, aborts)]\n+//~^ ERROR malformed `#[unwind]` attribute\n+extern \"C\" fn f1() {}\n+\n+#[unwind(unsupported)]\n+//~^ ERROR malformed `#[unwind]` attribute\n+extern \"C\" fn f2() {}\n+\n+fn main() {}"}, {"sha": "88fc4e00a2fd3dbd0d521b56141889890f056b59", "filename": "src/test/ui/malformed/malformed-unwind-2.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b11502fbc0cfc251c1b96743562761c9a451d84a/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-unwind-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b11502fbc0cfc251c1b96743562761c9a451d84a/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-unwind-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmalformed%2Fmalformed-unwind-2.stderr?ref=b11502fbc0cfc251c1b96743562761c9a451d84a", "patch": "@@ -0,0 +1,15 @@\n+error[E0633]: malformed `#[unwind]` attribute\n+  --> $DIR/malformed-unwind-2.rs:3:1\n+   |\n+LL | #[unwind(allowed, aborts)]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error[E0633]: malformed `#[unwind]` attribute\n+  --> $DIR/malformed-unwind-2.rs:7:1\n+   |\n+LL | #[unwind(unsupported)]\n+   | ^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0633`."}]}