{"sha": "83953f58e76b8edc236acf56f2526f4fd0957e83", "node_id": "C_kwDOAAsO6NoAKDgzOTUzZjU4ZTc2YjhlZGMyMzZhY2Y1NmYyNTI2ZjRmZDA5NTdlODM", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-08-18T01:58:10Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-08-18T02:02:20Z"}, "message": "remove unneeded rustc_private feature", "tree": {"sha": "d837f7e799379a01ae433f77a96b0121198ee453", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d837f7e799379a01ae433f77a96b0121198ee453"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83953f58e76b8edc236acf56f2526f4fd0957e83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83953f58e76b8edc236acf56f2526f4fd0957e83", "html_url": "https://github.com/rust-lang/rust/commit/83953f58e76b8edc236acf56f2526f4fd0957e83", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83953f58e76b8edc236acf56f2526f4fd0957e83/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c856f88639685faff194ea7d12748ae0936436c", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c856f88639685faff194ea7d12748ae0936436c", "html_url": "https://github.com/rust-lang/rust/commit/7c856f88639685faff194ea7d12748ae0936436c"}], "stats": {"total": 90, "additions": 1, "deletions": 89}, "files": [{"sha": "065ad2d725f8f96e45fa81ecba42365c9ac7960a", "filename": "tests/fail/concurrency/libc_pthread_create_main_terminate.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fconcurrency%2Flibc_pthread_create_main_terminate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fconcurrency%2Flibc_pthread_create_main_terminate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fconcurrency%2Flibc_pthread_create_main_terminate.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -3,8 +3,6 @@\n \n // Check that we terminate the program when the main thread terminates.\n \n-#![feature(rustc_private)]\n-\n use std::{mem, ptr};\n \n extern \"C\" fn thread_start(_null: *mut libc::c_void) -> *mut libc::c_void {"}, {"sha": "488b14bbcfa859d77643640e306127cd3a7111b5", "filename": "tests/fail/concurrency/libc_pthread_join_detached.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_detached.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_detached.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_detached.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -2,8 +2,6 @@\n \n // Joining a detached thread is undefined behavior.\n \n-#![feature(rustc_private)]\n-\n use std::{mem, ptr};\n \n extern \"C\" fn thread_start(_null: *mut libc::c_void) -> *mut libc::c_void {"}, {"sha": "ebd1710bbf22679d771660d490c508d951d74bcb", "filename": "tests/fail/concurrency/libc_pthread_join_joined.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_joined.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_joined.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_joined.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -2,8 +2,6 @@\n \n // Joining an already joined thread is undefined behavior.\n \n-#![feature(rustc_private)]\n-\n use std::{mem, ptr};\n \n extern \"C\" fn thread_start(_null: *mut libc::c_void) -> *mut libc::c_void {"}, {"sha": "df6b520431b6a759bb63e11ad7d384cdad22564e", "filename": "tests/fail/concurrency/libc_pthread_join_main.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_main.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_main.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_main.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -2,8 +2,6 @@\n \n // Joining the main thread is undefined behavior.\n \n-#![feature(rustc_private)]\n-\n use std::{ptr, thread};\n \n fn main() {"}, {"sha": "e5187093befdefbfbedb6a99bd7b6b918a32bf05", "filename": "tests/fail/concurrency/libc_pthread_join_multiple.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_multiple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_multiple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_multiple.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -2,8 +2,6 @@\n \n // Joining the same thread from multiple threads is undefined behavior.\n \n-#![feature(rustc_private)]\n-\n use std::thread;\n use std::{mem, ptr};\n "}, {"sha": "0c25c690f3721db32266b2e91d7b1f6ee04457e8", "filename": "tests/fail/concurrency/libc_pthread_join_self.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fconcurrency%2Flibc_pthread_join_self.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -4,8 +4,6 @@\n \n // Joining itself is undefined behavior.\n \n-#![feature(rustc_private)]\n-\n use std::{ptr, thread};\n \n fn main() {"}, {"sha": "43c7c74d410f574b1c41474e05541e0436383a38", "filename": "tests/fail/concurrency/too_few_args.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fconcurrency%2Ftoo_few_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fconcurrency%2Ftoo_few_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fconcurrency%2Ftoo_few_args.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -2,8 +2,6 @@\n \n //! The thread function must have exactly one argument.\n \n-#![feature(rustc_private)]\n-\n use std::{mem, ptr};\n \n extern \"C\" fn thread_start() -> *mut libc::c_void {"}, {"sha": "d660037ca6695842b2974eb5d28df0797d4c0341", "filename": "tests/fail/concurrency/too_many_args.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fconcurrency%2Ftoo_many_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fconcurrency%2Ftoo_many_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fconcurrency%2Ftoo_many_args.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -2,8 +2,6 @@\n \n //! The thread function must have exactly one argument.\n \n-#![feature(rustc_private)]\n-\n use std::{mem, ptr};\n \n extern \"C\" fn thread_start(_null: *mut libc::c_void, _x: i32) -> *mut libc::c_void {"}, {"sha": "c2b9d56e19c92fd29f8ba322c265f4d03c40d68d", "filename": "tests/fail/concurrency/unwind_top_of_stack.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fconcurrency%2Funwind_top_of_stack.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fconcurrency%2Funwind_top_of_stack.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fconcurrency%2Funwind_top_of_stack.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -3,7 +3,7 @@\n \n //! Unwinding past the top frame of a stack is Undefined Behavior.\n \n-#![feature(rustc_private, c_unwind)]\n+#![feature(c_unwind)]\n \n use std::{mem, ptr};\n "}, {"sha": "09da8509af41207a9bfb1a82301823e938c3a3c4", "filename": "tests/fail/shims/fs/close_stdout.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Ffs%2Fclose_stdout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Ffs%2Fclose_stdout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fshims%2Ffs%2Fclose_stdout.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -3,8 +3,6 @@\n \n // FIXME: standard handles cannot be closed (https://github.com/rust-lang/rust/issues/40032)\n \n-#![feature(rustc_private)]\n-\n fn main() {\n     unsafe {\n         libc::close(1); //~ ERROR: cannot close stdout"}, {"sha": "a45f805696d4937aced28f0c36cda930c4292e0e", "filename": "tests/fail/shims/fs/isolated_stdin.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Ffs%2Fisolated_stdin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Ffs%2Fisolated_stdin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fshims%2Ffs%2Fisolated_stdin.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -1,7 +1,5 @@\n //@ignore-target-windows: No libc on Windows\n \n-#![feature(rustc_private)]\n-\n fn main() -> std::io::Result<()> {\n     let mut bytes = [0u8; 512];\n     unsafe {"}, {"sha": "ba9f404d7c9ac3ab55783915c806de78be5ba572", "filename": "tests/fail/shims/fs/mkstemp_immutable_arg.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Ffs%2Fmkstemp_immutable_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Ffs%2Fmkstemp_immutable_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fshims%2Ffs%2Fmkstemp_immutable_arg.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -1,8 +1,6 @@\n //@ignore-target-windows: No libc on Windows\n //@compile-flags: -Zmiri-disable-isolation\n \n-#![feature(rustc_private)]\n-\n fn main() {\n     test_mkstemp_immutable_arg();\n }"}, {"sha": "073fca4712e9a0b1bc9b7932cc9e2a5f1d29c53c", "filename": "tests/fail/shims/fs/read_from_stdout.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Ffs%2Fread_from_stdout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Ffs%2Fread_from_stdout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fshims%2Ffs%2Fread_from_stdout.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -1,8 +1,6 @@\n //@compile-flags: -Zmiri-disable-isolation\n //@ignore-target-windows: No libc on Windows\n \n-#![feature(rustc_private)]\n-\n fn main() -> std::io::Result<()> {\n     let mut bytes = [0u8; 512];\n     unsafe {"}, {"sha": "ae231d4be667e370048f315d0dda4d605bbce98f", "filename": "tests/fail/shims/fs/unix_open_missing_required_mode.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Ffs%2Funix_open_missing_required_mode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Ffs%2Funix_open_missing_required_mode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fshims%2Ffs%2Funix_open_missing_required_mode.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -1,8 +1,6 @@\n //@ignore-target-windows: No libc on Windows\n //@compile-flags: -Zmiri-disable-isolation\n \n-#![feature(rustc_private)]\n-\n fn main() {\n     test_file_open_missing_needed_mode();\n }"}, {"sha": "d039ad718d33971bcedf454d49af51b6477fdcd5", "filename": "tests/fail/shims/fs/write_to_stdin.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Ffs%2Fwrite_to_stdin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Ffs%2Fwrite_to_stdin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fshims%2Ffs%2Fwrite_to_stdin.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -1,7 +1,5 @@\n //@ignore-target-windows: No libc on Windows\n \n-#![feature(rustc_private)]\n-\n fn main() -> std::io::Result<()> {\n     let bytes = b\"hello\";\n     unsafe {"}, {"sha": "94ca3496ed948d6b2a6f1a383291ff939b62e61a", "filename": "tests/fail/shims/sync/libc_pthread_cond_double_destroy.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_cond_double_destroy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_cond_double_destroy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_cond_double_destroy.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -1,5 +1,4 @@\n //@ignore-target-windows: No libc on Windows\n-#![feature(rustc_private)]\n \n /// Test that destroying a pthread_cond twice fails, even without a check for number validity\n "}, {"sha": "13e639a867dcc4101483354cf670b66fe94b454a", "filename": "tests/fail/shims/sync/libc_pthread_condattr_double_destroy.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_condattr_double_destroy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_condattr_double_destroy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_condattr_double_destroy.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -1,5 +1,4 @@\n //@ignore-target-windows: No libc on Windows\n-#![feature(rustc_private)]\n \n /// Test that destroying a pthread_condattr twice fails, even without a check for number validity\n "}, {"sha": "8b2510733831f66eeec69f0e155ee220e9dd5d6c", "filename": "tests/fail/shims/sync/libc_pthread_mutex_NULL_deadlock.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_NULL_deadlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_NULL_deadlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_NULL_deadlock.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -2,8 +2,6 @@\n //\n // Check that if we pass NULL attribute, then we get the default mutex type.\n \n-#![feature(rustc_private)]\n-\n fn main() {\n     unsafe {\n         let mut mutex: libc::pthread_mutex_t = std::mem::zeroed();"}, {"sha": "6c3cb738e29972a916a97ae768410a998d1021ca", "filename": "tests/fail/shims/sync/libc_pthread_mutex_deadlock.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_deadlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_deadlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_deadlock.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -1,7 +1,5 @@\n //@ignore-target-windows: No libc on Windows\n \n-#![feature(rustc_private)]\n-\n use std::cell::UnsafeCell;\n use std::sync::Arc;\n use std::thread;"}, {"sha": "f443768819f96ea31c8576ad5fc1d82692c1fb9f", "filename": "tests/fail/shims/sync/libc_pthread_mutex_default_deadlock.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_default_deadlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_default_deadlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_default_deadlock.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -2,8 +2,6 @@\n //\n // Check that if we do not set the mutex type, it is the default.\n \n-#![feature(rustc_private)]\n-\n fn main() {\n     unsafe {\n         let mutexattr: libc::pthread_mutexattr_t = std::mem::zeroed();"}, {"sha": "ec3965c7574eb9ddebf61761fbd1f82fdb718ac7", "filename": "tests/fail/shims/sync/libc_pthread_mutex_destroy_locked.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_destroy_locked.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_destroy_locked.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_destroy_locked.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -1,7 +1,5 @@\n //@ignore-target-windows: No libc on Windows\n \n-#![feature(rustc_private)]\n-\n fn main() {\n     unsafe {\n         let mut mutexattr: libc::pthread_mutexattr_t = std::mem::zeroed();"}, {"sha": "622c3eaeae30d404a1361025a9af681abab7b626", "filename": "tests/fail/shims/sync/libc_pthread_mutex_double_destroy.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_double_destroy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_double_destroy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_double_destroy.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -1,5 +1,4 @@\n //@ignore-target-windows: No libc on Windows\n-#![feature(rustc_private)]\n \n /// Test that destroying a pthread_mutex twice fails, even without a check for number validity\n "}, {"sha": "5ea09fa5aac3d36df9f631c32a543e27361cbde8", "filename": "tests/fail/shims/sync/libc_pthread_mutex_normal_deadlock.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_normal_deadlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_normal_deadlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_normal_deadlock.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -1,7 +1,5 @@\n //@ignore-target-windows: No libc on Windows\n \n-#![feature(rustc_private)]\n-\n fn main() {\n     unsafe {\n         let mut mutexattr: libc::pthread_mutexattr_t = std::mem::zeroed();"}, {"sha": "8ce7542edb87f03e6156636a8ef8d159f784ceaf", "filename": "tests/fail/shims/sync/libc_pthread_mutex_normal_unlock_unlocked.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_normal_unlock_unlocked.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_normal_unlock_unlocked.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_normal_unlock_unlocked.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -1,7 +1,5 @@\n //@ignore-target-windows: No libc on Windows\n \n-#![feature(rustc_private)]\n-\n fn main() {\n     unsafe {\n         let mut mutexattr: libc::pthread_mutexattr_t = std::mem::zeroed();"}, {"sha": "b56775252e4b4e66df8f210841bfb2322a73fc95", "filename": "tests/fail/shims/sync/libc_pthread_mutex_wrong_owner.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_wrong_owner.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_wrong_owner.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutex_wrong_owner.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -1,7 +1,5 @@\n //@ignore-target-windows: No libc on Windows\n \n-#![feature(rustc_private)]\n-\n use std::cell::UnsafeCell;\n use std::sync::Arc;\n use std::thread;"}, {"sha": "474a277516d9488af35529ae62f418f3d4eff090", "filename": "tests/fail/shims/sync/libc_pthread_mutexattr_double_destroy.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutexattr_double_destroy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutexattr_double_destroy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_mutexattr_double_destroy.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -1,5 +1,4 @@\n //@ignore-target-windows: No libc on Windows\n-#![feature(rustc_private)]\n \n /// Test that destroying a pthread_mutexattr twice fails, even without a check for number validity\n "}, {"sha": "603580ff58abdb8cb9a3ebbd5983c6ddf395d984", "filename": "tests/fail/shims/sync/libc_pthread_rwlock_destroy_read_locked.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_destroy_read_locked.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_destroy_read_locked.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_destroy_read_locked.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -1,7 +1,5 @@\n //@ignore-target-windows: No libc on Windows\n \n-#![feature(rustc_private)]\n-\n fn main() {\n     let rw = std::cell::UnsafeCell::new(libc::PTHREAD_RWLOCK_INITIALIZER);\n     unsafe {"}, {"sha": "ae44f22d146ca3049c4684afaf5bd0751937f193", "filename": "tests/fail/shims/sync/libc_pthread_rwlock_destroy_write_locked.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_destroy_write_locked.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_destroy_write_locked.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_destroy_write_locked.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -1,7 +1,5 @@\n //@ignore-target-windows: No libc on Windows\n \n-#![feature(rustc_private)]\n-\n fn main() {\n     let rw = std::cell::UnsafeCell::new(libc::PTHREAD_RWLOCK_INITIALIZER);\n     unsafe {"}, {"sha": "800986f7506c007a450a8a507feb65f4724348e1", "filename": "tests/fail/shims/sync/libc_pthread_rwlock_double_destroy.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_double_destroy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_double_destroy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_double_destroy.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -1,5 +1,4 @@\n //@ignore-target-windows: No libc on Windows\n-#![feature(rustc_private)]\n \n /// Test that destroying a pthread_rwlock twice fails, even without a check for number validity\n "}, {"sha": "782c95b6d2e3ca1256af2e170cf76ea558a1b4a4", "filename": "tests/fail/shims/sync/libc_pthread_rwlock_read_write_deadlock_single_thread.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_read_write_deadlock_single_thread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_read_write_deadlock_single_thread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_read_write_deadlock_single_thread.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -1,7 +1,5 @@\n //@ignore-target-windows: No libc on Windows\n \n-#![feature(rustc_private)]\n-\n fn main() {\n     let rw = std::cell::UnsafeCell::new(libc::PTHREAD_RWLOCK_INITIALIZER);\n     unsafe {"}, {"sha": "1b498ad8fcdb474f7fe7a98d57c99dc61388b225", "filename": "tests/fail/shims/sync/libc_pthread_rwlock_read_wrong_owner.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_read_wrong_owner.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_read_wrong_owner.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_read_wrong_owner.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -1,7 +1,5 @@\n //@ignore-target-windows: No libc on Windows\n \n-#![feature(rustc_private)]\n-\n use std::cell::UnsafeCell;\n use std::sync::Arc;\n use std::thread;"}, {"sha": "05f7e7a06c57f4c01ce60a31e3c6ca40e4f3ff91", "filename": "tests/fail/shims/sync/libc_pthread_rwlock_unlock_unlocked.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_unlock_unlocked.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_unlock_unlocked.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_unlock_unlocked.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -1,7 +1,5 @@\n //@ignore-target-windows: No libc on Windows\n \n-#![feature(rustc_private)]\n-\n fn main() {\n     let rw = std::cell::UnsafeCell::new(libc::PTHREAD_RWLOCK_INITIALIZER);\n     unsafe {"}, {"sha": "201844615e1825d2f52f08ff0e620d027a9ca5e3", "filename": "tests/fail/shims/sync/libc_pthread_rwlock_write_read_deadlock.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_write_read_deadlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_write_read_deadlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_write_read_deadlock.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -1,7 +1,5 @@\n //@ignore-target-windows: No libc on Windows\n \n-#![feature(rustc_private)]\n-\n use std::cell::UnsafeCell;\n use std::sync::Arc;\n use std::thread;"}, {"sha": "538f14ef89f20dbbb892be9cca67caf80a461832", "filename": "tests/fail/shims/sync/libc_pthread_rwlock_write_read_deadlock_single_thread.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_write_read_deadlock_single_thread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_write_read_deadlock_single_thread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_write_read_deadlock_single_thread.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -1,7 +1,5 @@\n //@ignore-target-windows: No libc on Windows\n \n-#![feature(rustc_private)]\n-\n fn main() {\n     let rw = std::cell::UnsafeCell::new(libc::PTHREAD_RWLOCK_INITIALIZER);\n     unsafe {"}, {"sha": "b1d7e0492e5a26f2cf686b8477bd989a049f638f", "filename": "tests/fail/shims/sync/libc_pthread_rwlock_write_write_deadlock.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_write_write_deadlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_write_write_deadlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_write_write_deadlock.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -1,7 +1,5 @@\n //@ignore-target-windows: No libc on Windows\n \n-#![feature(rustc_private)]\n-\n use std::cell::UnsafeCell;\n use std::sync::Arc;\n use std::thread;"}, {"sha": "2c963d36510e6dfb5a9773bc6cfa21ae2fab5651", "filename": "tests/fail/shims/sync/libc_pthread_rwlock_write_write_deadlock_single_thread.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_write_write_deadlock_single_thread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_write_write_deadlock_single_thread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_write_write_deadlock_single_thread.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -1,7 +1,5 @@\n //@ignore-target-windows: No libc on Windows\n \n-#![feature(rustc_private)]\n-\n fn main() {\n     let rw = std::cell::UnsafeCell::new(libc::PTHREAD_RWLOCK_INITIALIZER);\n     unsafe {"}, {"sha": "dd099474d8fed4649a1c39632844d0e4f758f654", "filename": "tests/fail/shims/sync/libc_pthread_rwlock_write_wrong_owner.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_write_wrong_owner.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_write_wrong_owner.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fshims%2Fsync%2Flibc_pthread_rwlock_write_wrong_owner.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -1,7 +1,5 @@\n //@ignore-target-windows: No libc on Windows\n \n-#![feature(rustc_private)]\n-\n use std::cell::UnsafeCell;\n use std::sync::Arc;\n use std::thread;"}, {"sha": "d50041ffbd9ded76c2d47fdb5c7962e814b6b351", "filename": "tests/fail/unsupported_signal.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Funsupported_signal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Ffail%2Funsupported_signal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Funsupported_signal.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -1,7 +1,6 @@\n //! `signal()` is special on Linux and macOS that it's only supported within libstd.\n //! The implementation is not complete enough to permit user code to call it.\n //@ignore-target-windows: No libc on Windows\n-#![feature(rustc_private)]\n \n fn main() {\n     unsafe {"}, {"sha": "31d666e1d9d80f6f3a151631dd852c356f784524", "filename": "tests/panic/unsupported_syscall.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Fpanic%2Funsupported_syscall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Fpanic%2Funsupported_syscall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpanic%2Funsupported_syscall.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -1,7 +1,6 @@\n //@ignore-target-windows: No libc on Windows\n //@ignore-target-apple: `syscall` is not supported on macOS\n //@compile-flags: -Zmiri-panic-on-unsupported\n-#![feature(rustc_private)]\n \n fn main() {\n     unsafe {"}, {"sha": "62ab63c5fc788ec3527df7418d4e07c106cc1eca", "filename": "tests/pass/calloc.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Fpass%2Fcalloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Fpass%2Fcalloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fcalloc.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -1,7 +1,5 @@\n //@ignore-target-windows: No libc on Windows\n \n-#![feature(rustc_private)]\n-\n use core::slice;\n \n fn main() {"}, {"sha": "b0325f7d78e508077fbb08755910a14b87a032fc", "filename": "tests/pass/concurrency/libc_pthread_cond.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Fpass%2Fconcurrency%2Flibc_pthread_cond.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Fpass%2Fconcurrency%2Flibc_pthread_cond.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fconcurrency%2Flibc_pthread_cond.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -2,8 +2,6 @@\n //@ignore-target-apple: pthread_condattr_setclock is not supported on MacOS.\n //@compile-flags: -Zmiri-disable-isolation\n \n-#![feature(rustc_private)]\n-\n /// Test that conditional variable timeouts are working properly with both\n /// monotonic and system clocks.\n use std::mem::MaybeUninit;"}, {"sha": "a456528ec2074bfeccc4b68791e014fd6d14013d", "filename": "tests/pass/concurrency/linux-futex.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Fpass%2Fconcurrency%2Flinux-futex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Fpass%2Fconcurrency%2Flinux-futex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fconcurrency%2Flinux-futex.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -1,8 +1,6 @@\n //@only-target-linux\n //@compile-flags: -Zmiri-disable-isolation\n \n-#![feature(rustc_private)]\n-\n use std::mem::MaybeUninit;\n use std::ptr;\n use std::sync::atomic::AtomicI32;"}, {"sha": "6200233c81193af56365c3d553155aef685cff9a", "filename": "tests/pass/concurrency/tls_pthread_drop_order.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Fpass%2Fconcurrency%2Ftls_pthread_drop_order.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Fpass%2Fconcurrency%2Ftls_pthread_drop_order.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fconcurrency%2Ftls_pthread_drop_order.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -1,7 +1,5 @@\n //@ignore-target-windows: No libc on Windows\n \n-#![feature(rustc_private)]\n-\n use std::mem;\n use std::ptr;\n "}, {"sha": "c1cb028f55da9b2f7630eb6bf6889b0041892238", "filename": "tests/pass/foreign-fn-linkname.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Fpass%2Fforeign-fn-linkname.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Fpass%2Fforeign-fn-linkname.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fforeign-fn-linkname.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -1,5 +1,4 @@\n //ignore-windows: Uses POSIX APIs\n-#![feature(rustc_private)]\n \n use std::ffi::CString;\n "}, {"sha": "f5e014c000d1553e1ff860d22b66a8a2b4c8ead5", "filename": "tests/pass/malloc.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Fpass%2Fmalloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Fpass%2Fmalloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fmalloc.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -1,7 +1,5 @@\n //@ignore-target-windows: No libc on Windows\n \n-#![feature(rustc_private)]\n-\n use core::{ptr, slice};\n \n fn main() {"}, {"sha": "caaf48c2bec7a273f3147ccf82e6c59a935edf8d", "filename": "tests/pass/regions-mock-trans.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Fpass%2Fregions-mock-trans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Fpass%2Fregions-mock-trans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fregions-mock-trans.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -1,7 +1,5 @@\n //ignore-windows: Uses POSIX APIs\n \n-#![feature(rustc_private)]\n-\n use std::mem;\n \n struct Arena(());"}, {"sha": "9faced02916120d343a629f8d8fa248c349cdad6", "filename": "tests/pass/shims/fs.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Fpass%2Fshims%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Fpass%2Fshims%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fshims%2Ffs.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -1,7 +1,6 @@\n //@ignore-target-windows: File handling is not implemented yet\n //@compile-flags: -Zmiri-disable-isolation\n \n-#![feature(rustc_private)]\n #![feature(io_error_more)]\n #![feature(io_error_uncategorized)]\n "}, {"sha": "f5420dbc5538e54bc080046e550c1308dd4ecb63", "filename": "tests/pass/shims/fs_with_isolation.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Fpass%2Fshims%2Ffs_with_isolation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Fpass%2Fshims%2Ffs_with_isolation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fshims%2Ffs_with_isolation.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -2,8 +2,6 @@\n //@compile-flags: -Zmiri-isolation-error=warn-nobacktrace\n //@normalize-stderr-test: \"(stat(x)?)\" -> \"$$STAT\"\n \n-#![feature(rustc_private)]\n-\n use std::ffi::CString;\n use std::fs::{self, File};\n use std::io::{Error, ErrorKind};"}, {"sha": "349b447569a4b8a8dab625b80c1a0e648cc933bf", "filename": "tests/pass/shims/linux-getrandom-without-isolation.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Fpass%2Fshims%2Flinux-getrandom-without-isolation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Fpass%2Fshims%2Flinux-getrandom-without-isolation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fshims%2Flinux-getrandom-without-isolation.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -1,6 +1,5 @@\n //@only-target-linux\n //@compile-flags: -Zmiri-disable-isolation\n-#![feature(rustc_private)]\n \n use std::ptr;\n "}, {"sha": "a1436c7319d3395f0a8419d2bbc34298e5156d12", "filename": "tests/pass/shims/linux-getrandom.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Fpass%2Fshims%2Flinux-getrandom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Fpass%2Fshims%2Flinux-getrandom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fshims%2Flinux-getrandom.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -1,5 +1,4 @@\n //@only-target-linux\n-#![feature(rustc_private)]\n \n use std::ptr;\n "}, {"sha": "9bd8a00d68dcd86a97ad82cb784b409204398250", "filename": "tests/pass/shims/posix_memalign.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Fpass%2Fshims%2Fposix_memalign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83953f58e76b8edc236acf56f2526f4fd0957e83/tests%2Fpass%2Fshims%2Fposix_memalign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fshims%2Fposix_memalign.rs?ref=83953f58e76b8edc236acf56f2526f4fd0957e83", "patch": "@@ -1,6 +1,5 @@\n //@ignore-target-windows: No libc on Windows\n \n-#![feature(rustc_private)]\n #![feature(pointer_is_aligned)]\n #![feature(strict_provenance)]\n "}]}