{"sha": "52cd51f3ec1499b1fe442d3bf300b3079efe3b8d", "node_id": "C_kwDOAAsO6NoAKDUyY2Q1MWYzZWMxNDk5YjFmZTQ0MmQzYmYzMDBiMzA3OWVmZTNiOGQ", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2022-04-06T19:41:12Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2022-04-19T15:14:23Z"}, "message": "asm: Add a kreg0 register class on x86 which includes k0\n\nPreviously we only exposed a kreg register class which excludes the k0\nregister since it can't be used in many instructions. However k0 is a\nvalid register and we need to have a way of marking it as clobbered for\nclobber_abi.\n\nFixes #94977", "tree": {"sha": "a65c3a25ff18392c622f495968be0d1ce4b12e90", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a65c3a25ff18392c622f495968be0d1ce4b12e90"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52cd51f3ec1499b1fe442d3bf300b3079efe3b8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52cd51f3ec1499b1fe442d3bf300b3079efe3b8d", "html_url": "https://github.com/rust-lang/rust/commit/52cd51f3ec1499b1fe442d3bf300b3079efe3b8d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52cd51f3ec1499b1fe442d3bf300b3079efe3b8d/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ce5ce82af88d679b2c4ab93a5dc64803119ceff", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ce5ce82af88d679b2c4ab93a5dc64803119ceff", "html_url": "https://github.com/rust-lang/rust/commit/6ce5ce82af88d679b2c4ab93a5dc64803119ceff"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "b5aa7c1e65b2f0a4f90d14ab544efc3e96b91e46", "filename": "src/asm.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/52cd51f3ec1499b1fe442d3bf300b3079efe3b8d/src%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52cd51f3ec1499b1fe442d3bf300b3079efe3b8d/src%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fasm.rs?ref=52cd51f3ec1499b1fe442d3bf300b3079efe3b8d", "patch": "@@ -581,6 +581,7 @@ fn reg_to_gcc(reg: InlineAsmRegOrRegClass) -> ConstraintOrRegister {\n             | InlineAsmRegClass::X86(X86InlineAsmRegClass::ymm_reg) => \"x\",\n             InlineAsmRegClass::X86(X86InlineAsmRegClass::zmm_reg) => \"v\",\n             InlineAsmRegClass::X86(X86InlineAsmRegClass::kreg) => unimplemented!(),\n+            InlineAsmRegClass::X86(X86InlineAsmRegClass::kreg0) => unimplemented!(),\n             InlineAsmRegClass::Wasm(WasmInlineAsmRegClass::local) => unimplemented!(),\n             InlineAsmRegClass::X86(\n                 X86InlineAsmRegClass::x87_reg | X86InlineAsmRegClass::mmx_reg,\n@@ -646,6 +647,7 @@ fn dummy_output_type<'gcc, 'tcx>(cx: &CodegenCx<'gcc, 'tcx>, reg: InlineAsmRegCl\n         | InlineAsmRegClass::X86(X86InlineAsmRegClass::zmm_reg) => cx.type_f32(),\n         InlineAsmRegClass::X86(X86InlineAsmRegClass::x87_reg) => unimplemented!(),\n         InlineAsmRegClass::X86(X86InlineAsmRegClass::kreg) => cx.type_i16(),\n+        InlineAsmRegClass::X86(X86InlineAsmRegClass::kreg0) => cx.type_i16(),\n         InlineAsmRegClass::Wasm(WasmInlineAsmRegClass::local) => cx.type_i32(),\n         InlineAsmRegClass::SpirV(SpirVInlineAsmRegClass::reg) => {\n             bug!(\"LLVM backend does not support SPIR-V\")\n@@ -760,6 +762,7 @@ fn modifier_to_gcc(arch: InlineAsmArch, reg: InlineAsmRegClass, modifier: Option\n             _ => unreachable!(),\n         },\n         InlineAsmRegClass::X86(X86InlineAsmRegClass::kreg) => None,\n+        InlineAsmRegClass::X86(X86InlineAsmRegClass::kreg0) => None,\n         InlineAsmRegClass::X86(X86InlineAsmRegClass::x87_reg | X86InlineAsmRegClass::mmx_reg) => {\n             unreachable!(\"clobber-only\")\n         }"}]}