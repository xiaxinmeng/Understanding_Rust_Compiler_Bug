{"sha": "c07876951be2d5619727ca2f4847c24f6682c598", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwNzg3Njk1MWJlMmQ1NjE5NzI3Y2EyZjQ4NDdjMjRmNjY4MmM1OTg=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2015-12-24T19:44:14Z"}, "committer": {"name": "ggomez", "email": "ggomez@ggo.ifr.lan", "date": "2016-01-08T12:33:44Z"}, "message": "Add new help messages for E0425", "tree": {"sha": "a50ad3281fb10f40245c612d8a8cd60ae1a75607", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a50ad3281fb10f40245c612d8a8cd60ae1a75607"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c07876951be2d5619727ca2f4847c24f6682c598", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c07876951be2d5619727ca2f4847c24f6682c598", "html_url": "https://github.com/rust-lang/rust/commit/c07876951be2d5619727ca2f4847c24f6682c598", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c07876951be2d5619727ca2f4847c24f6682c598/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38201501dfe193bfa14d792f590effd462a78717", "url": "https://api.github.com/repos/rust-lang/rust/commits/38201501dfe193bfa14d792f590effd462a78717", "html_url": "https://github.com/rust-lang/rust/commit/38201501dfe193bfa14d792f590effd462a78717"}], "stats": {"total": 27, "additions": 22, "deletions": 5}, "files": [{"sha": "201012073b1a7fb75a3b9a43a54d30eee8fa5e4a", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c07876951be2d5619727ca2f4847c24f6682c598/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c07876951be2d5619727ca2f4847c24f6682c598/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=c07876951be2d5619727ca2f4847c24f6682c598", "patch": "@@ -72,7 +72,7 @@ use rustc_front::intravisit::{self, FnKind, Visitor};\n use rustc_front::hir;\n use rustc_front::hir::{Arm, BindByRef, BindByValue, BindingMode, Block};\n use rustc_front::hir::Crate;\n-use rustc_front::hir::{Expr, ExprAgain, ExprBreak, ExprField};\n+use rustc_front::hir::{Expr, ExprAgain, ExprBreak, ExprCall, ExprField};\n use rustc_front::hir::{ExprLoop, ExprWhile, ExprMethodCall};\n use rustc_front::hir::{ExprPath, ExprStruct, FnDecl};\n use rustc_front::hir::{ForeignItemFn, ForeignItemStatic, Generics};\n@@ -423,7 +423,7 @@ fn resolve_error<'b, 'a: 'b, 'tcx: 'a>(resolver: &'b Resolver<'a, 'tcx>,\n                       msg);\n \n             match context {\n-                UnresolvedNameContext::Other => {} // no help available\n+                UnresolvedNameContext::Other => { } // no help available\n                 UnresolvedNameContext::PathIsMod(id) => {\n                     let mut help_msg = String::new();\n                     let parent_id = resolver.ast_map.get_parent_node(id);\n@@ -436,17 +436,22 @@ fn resolve_error<'b, 'a: 'b, 'tcx: 'a>(resolver: &'b Resolver<'a, 'tcx>,\n                                                    module = &*path,\n                                                    ident = ident.node);\n                             }\n-\n                             ExprMethodCall(ident, _, _) => {\n                                 help_msg = format!(\"To call a function from the \\\n                                                     `{module}` module, use \\\n                                                     `{module}::{ident}(..)`\",\n                                                    module = &*path,\n                                                    ident = ident.node);\n                             }\n-\n-                            _ => {} // no help available\n+                            ExprCall(_, _) => {\n+                                help_msg = format!(\"No function corresponds to `{module}(..)`\",\n+                                                   module = &*path);\n+                            }\n+                            _ => { } // no help available\n                         }\n+                    } else {\n+                        help_msg = format!(\"Module `{module}` cannot be the value of an expression\",\n+                                           module = &*path);\n                     }\n \n                     if !help_msg.is_empty() {"}, {"sha": "1d04679fd11e799dd9ebb620163e378d939b02e6", "filename": "src/test/compile-fail/suggest-path-instead-of-mod-dot-item.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c07876951be2d5619727ca2f4847c24f6682c598/src%2Ftest%2Fcompile-fail%2Fsuggest-path-instead-of-mod-dot-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c07876951be2d5619727ca2f4847c24f6682c598/src%2Ftest%2Fcompile-fail%2Fsuggest-path-instead-of-mod-dot-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsuggest-path-instead-of-mod-dot-item.rs?ref=c07876951be2d5619727ca2f4847c24f6682c598", "patch": "@@ -58,3 +58,15 @@ fn h6() -> i32 {\n         //~^ ERROR E0425\n         //~| HELP To call a function from the `a::b` module, use `a::b::f(..)`\n }\n+\n+fn h7() {\n+    a::b\n+        //~^ ERROR E0425\n+        //~| HELP Module `a::b` cannot be the value of an expression\n+}\n+\n+fn h8() -> i32 {\n+    a::b()\n+        //~^ ERROR E0425\n+        //~| HELP No function corresponds to `a::b(..)`\n+}"}]}