{"sha": "7097d29411992b8752a20290c8daae1c5ea97118", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwOTdkMjk0MTE5OTJiODc1MmEyMDI5MGM4ZGFhZTFjNWVhOTcxMTg=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2016-02-02T05:32:17Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2016-02-02T05:32:17Z"}, "message": "Rollup merge of #31202 - steveklabnik:gh30459, r=alexcrichton\n\nFixes #30459\n\nFun fact: i wanted to write \"Arabic\" and \"Hebrew\" in Arabic and Hebrew, but vim kept doing the copy/paste in the wrong direction.", "tree": {"sha": "d9188480d5b3d9baf08d8816e14d86efbb3d379b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d9188480d5b3d9baf08d8816e14d86efbb3d379b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7097d29411992b8752a20290c8daae1c5ea97118", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7097d29411992b8752a20290c8daae1c5ea97118", "html_url": "https://github.com/rust-lang/rust/commit/7097d29411992b8752a20290c8daae1c5ea97118", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7097d29411992b8752a20290c8daae1c5ea97118/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78afc78d9d19c67dcf17e061b170230209dc3f19", "url": "https://api.github.com/repos/rust-lang/rust/commits/78afc78d9d19c67dcf17e061b170230209dc3f19", "html_url": "https://github.com/rust-lang/rust/commit/78afc78d9d19c67dcf17e061b170230209dc3f19"}, {"sha": "c0ace5dc16511a36fcfc0cf659959d4b0327d4f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0ace5dc16511a36fcfc0cf659959d4b0327d4f4", "html_url": "https://github.com/rust-lang/rust/commit/c0ace5dc16511a36fcfc0cf659959d4b0327d4f4"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "4900b10eea2df22cb02faafe34206450b4b63c17", "filename": "src/libcollections/str.rs", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/7097d29411992b8752a20290c8daae1c5ea97118/src%2Flibcollections%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7097d29411992b8752a20290c8daae1c5ea97118/src%2Flibcollections%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstr.rs?ref=7097d29411992b8752a20290c8daae1c5ea97118", "patch": "@@ -1511,6 +1511,13 @@ impl str {\n     /// 'Whitespace' is defined according to the terms of the Unicode Derived\n     /// Core Property `White_Space`.\n     ///\n+    /// # Text directionality\n+    ///\n+    /// A string is a sequence of bytes. 'Left' in this context means the first\n+    /// position of that byte string; for a language like Arabic or Hebrew\n+    /// which are 'right to left' rather than 'left to right', this will be\n+    /// the _right_ side, not the left.\n+    ///\n     /// # Examples\n     ///\n     /// Basic usage:\n@@ -1520,6 +1527,16 @@ impl str {\n     ///\n     /// assert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n     /// ```\n+    ///\n+    /// Directionality:\n+    ///\n+    /// ```\n+    /// let s = \"  English\";\n+    /// assert!(Some('E') == s.trim_left().chars().next());\n+    ///\n+    /// let s = \"  \u05e2\u05d1\u05e8\u05d9\u05ea\";\n+    /// assert!(Some('\u05e2') == s.trim_left().chars().next());\n+    /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn trim_left(&self) -> &str {\n         UnicodeStr::trim_left(self)\n@@ -1530,6 +1547,13 @@ impl str {\n     /// 'Whitespace' is defined according to the terms of the Unicode Derived\n     /// Core Property `White_Space`.\n     ///\n+    /// # Text directionality\n+    ///\n+    /// A string is a sequence of bytes. 'Right' in this context means the last\n+    /// position of that byte string; for a language like Arabic or Hebrew\n+    /// which are 'right to left' rather than 'left to right', this will be\n+    /// the _left_ side, not the right.\n+    ///\n     /// # Examples\n     ///\n     /// Basic usage:\n@@ -1539,6 +1563,16 @@ impl str {\n     ///\n     /// assert_eq!(\" Hello\\tworld\", s.trim_right());\n     /// ```\n+    ///\n+    /// Directionality:\n+    ///\n+    /// ```\n+    /// let s = \"English  \";\n+    /// assert!(Some('h') == s.trim_right().chars().rev().next());\n+    ///\n+    /// let s = \"\u05e2\u05d1\u05e8\u05d9\u05ea  \";\n+    /// assert!(Some('\u05ea') == s.trim_right().chars().rev().next());\n+    /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn trim_right(&self) -> &str {\n         UnicodeStr::trim_right(self)\n@@ -1584,6 +1618,13 @@ impl str {\n     ///\n     /// [`char`]: primitive.char.html\n     ///\n+    /// # Text directionality\n+    ///\n+    /// A string is a sequence of bytes. 'Left' in this context means the first\n+    /// position of that byte string; for a language like Arabic or Hebrew\n+    /// which are 'right to left' rather than 'left to right', this will be\n+    /// the _right_ side, not the left.\n+    ///\n     /// # Examples\n     ///\n     /// Basic usage:\n@@ -1608,6 +1649,13 @@ impl str {\n     ///\n     /// [`char`]: primitive.char.html\n     ///\n+    /// # Text directionality\n+    ///\n+    /// A string is a sequence of bytes. 'Right' in this context means the last\n+    /// position of that byte string; for a language like Arabic or Hebrew\n+    /// which are 'right to left' rather than 'left to right', this will be\n+    /// the _left_ side, not the right.\n+    ///\n     /// # Examples\n     ///\n     /// Simple patterns:"}]}