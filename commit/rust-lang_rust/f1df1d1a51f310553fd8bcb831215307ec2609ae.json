{"sha": "f1df1d1a51f310553fd8bcb831215307ec2609ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxZGYxZDFhNTFmMzEwNTUzZmQ4YmNiODMxMjE1MzA3ZWMyNjA5YWU=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-01-08T03:22:35Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-01-10T19:31:33Z"}, "message": "Don't allow circular_buffer to shrink below its original size when unit_sz is not a power of two", "tree": {"sha": "2fc8794122293e1bfd4c59a8f19f1c0eabdfd448", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2fc8794122293e1bfd4c59a8f19f1c0eabdfd448"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f1df1d1a51f310553fd8bcb831215307ec2609ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f1df1d1a51f310553fd8bcb831215307ec2609ae", "html_url": "https://github.com/rust-lang/rust/commit/f1df1d1a51f310553fd8bcb831215307ec2609ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f1df1d1a51f310553fd8bcb831215307ec2609ae/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f05ae68e555e94aa31c36b35dfb2e03952443ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f05ae68e555e94aa31c36b35dfb2e03952443ba", "html_url": "https://github.com/rust-lang/rust/commit/5f05ae68e555e94aa31c36b35dfb2e03952443ba"}], "stats": {"total": 32, "additions": 25, "deletions": 7}, "files": [{"sha": "b458deddd907311de9cd771b1799b873753a4896", "filename": "src/rt/circular_buffer.cpp", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f1df1d1a51f310553fd8bcb831215307ec2609ae/src%2Frt%2Fcircular_buffer.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/f1df1d1a51f310553fd8bcb831215307ec2609ae/src%2Frt%2Fcircular_buffer.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fcircular_buffer.cpp?ref=f1df1d1a51f310553fd8bcb831215307ec2609ae", "patch": "@@ -15,8 +15,9 @@ is_power_of_two(size_t value) {\n circular_buffer::circular_buffer(rust_dom *dom, size_t unit_sz) :\n     dom(dom),\n     unit_sz(unit_sz),\n-    _buffer_sz(next_power_of_two(\n+    _initial_sz(next_power_of_two(\n                INITIAL_CIRCULAR_BUFFFER_SIZE_IN_UNITS * unit_sz)),\n+    _buffer_sz(_initial_sz),\n     _next(0),\n     _unread(0),\n     _buffer((uint8_t *)dom->calloc(_buffer_sz)) {\n@@ -121,15 +122,13 @@ circular_buffer::dequeue(void *dst) {\n     }\n \n     // Shrink if possible.\n-    if (_buffer_sz > INITIAL_CIRCULAR_BUFFFER_SIZE_IN_UNITS * unit_sz &&\n-        _unread <= _buffer_sz / 4) {\n+    if (_buffer_sz > _initial_sz && _unread <= _buffer_sz / 4) {\n         dom->log(rust_log::MEM | rust_log::COMM,\n                  \"circular_buffer is shrinking to %d bytes\", _buffer_sz / 2);\n         void *tmp = dom->malloc(_buffer_sz / 2);\n         transfer(tmp);\n         _buffer_sz >>= 1;\n-\tI(dom, _buffer_sz >=\n-\t  next_power_of_two(INITIAL_CIRCULAR_BUFFFER_SIZE_IN_UNITS * unit_sz));\n+\tI(dom, _initial_sz <= _buffer_sz);\n         dom->free(_buffer);\n         _buffer = (uint8_t *)tmp;\n         _next = 0;"}, {"sha": "40fb1e241e0b74d03f8f212f03a2228cb23fc3e7", "filename": "src/rt/circular_buffer.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f1df1d1a51f310553fd8bcb831215307ec2609ae/src%2Frt%2Fcircular_buffer.h", "raw_url": "https://github.com/rust-lang/rust/raw/f1df1d1a51f310553fd8bcb831215307ec2609ae/src%2Frt%2Fcircular_buffer.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fcircular_buffer.h?ref=f1df1d1a51f310553fd8bcb831215307ec2609ae", "patch": "@@ -24,6 +24,9 @@ circular_buffer : public dom_owned<circular_buffer> {\n     size_t size();\n \n private:\n+    // Initial size of the buffer in bytes.\n+    size_t _initial_sz;\n+\n     // Size of the buffer in bytes, should always be a power of two so that\n     // modulo arithmetic (x % _buffer_sz) can optimized away with\n     // (x & (_buffer_sz - 1))."}, {"sha": "be7c18ad222a7f41fa36b5313a9d1fdf89bb0750", "filename": "src/test/run-pass/chan-poweroftwo.rs", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f1df1d1a51f310553fd8bcb831215307ec2609ae/src%2Ftest%2Frun-pass%2Fchan-poweroftwo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1df1d1a51f310553fd8bcb831215307ec2609ae/src%2Ftest%2Frun-pass%2Fchan-poweroftwo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fchan-poweroftwo.rs?ref=f1df1d1a51f310553fd8bcb831215307ec2609ae", "patch": "@@ -39,18 +39,34 @@ impure fn test_grow() {\n }\n \n // Don't allow the buffer to shrink below it's original size\n-impure fn test_shrink() {\n+impure fn test_shrink1() {\n     let port[i8] myport = port();\n     auto mychan = chan(myport);\n \n     mychan <| 0i8;\n     auto x <- myport;\n }\n \n+impure fn test_shrink2() {\n+    let port[record] myport = port();\n+    auto mychan = chan(myport);\n+\n+    let record val = rec(val1=0i32, val2=0i32, val3=0i32);\n+\n+    for each (uint i in _uint.range(0u, 100u)) {\n+        mychan <| val;\n+    }\n+\n+    for each (uint i in _uint.range(0u, 100u)) {\n+        auto x <- myport;\n+    }\n+}\n+\n impure fn main() {\n     test_init();\n     test_grow();\n-    test_shrink();\n+    test_shrink1();\n+    test_shrink2();\n }\n \n // Local Variables:"}]}