{"sha": "6dc6a1f9472d7e4be430368dad79a9f8a34c8de0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkYzZhMWY5NDcyZDdlNGJlNDMwMzY4ZGFkNzlhOWY4YTM0YzhkZTA=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-07-23T11:04:44Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-07-23T11:04:44Z"}, "message": "cleanup", "tree": {"sha": "a79012008d81f0cafe19857b04b1f6d51bf46dc2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a79012008d81f0cafe19857b04b1f6d51bf46dc2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6dc6a1f9472d7e4be430368dad79a9f8a34c8de0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6dc6a1f9472d7e4be430368dad79a9f8a34c8de0", "html_url": "https://github.com/rust-lang/rust/commit/6dc6a1f9472d7e4be430368dad79a9f8a34c8de0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6dc6a1f9472d7e4be430368dad79a9f8a34c8de0/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e41072479edd514ae6ebe00449ce4808204c5afb", "url": "https://api.github.com/repos/rust-lang/rust/commits/e41072479edd514ae6ebe00449ce4808204c5afb", "html_url": "https://github.com/rust-lang/rust/commit/e41072479edd514ae6ebe00449ce4808204c5afb"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "1c70eef3bf5e32259b5387ab81c510498818792a", "filename": "src/librustc_ast_lowering/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6dc6a1f9472d7e4be430368dad79a9f8a34c8de0/src%2Flibrustc_ast_lowering%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6dc6a1f9472d7e4be430368dad79a9f8a34c8de0/src%2Flibrustc_ast_lowering%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Flib.rs?ref=6dc6a1f9472d7e4be430368dad79a9f8a34c8de0", "patch": "@@ -936,7 +936,7 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                 })\n             });\n \n-        lowered_generics.params = lowered_generics.params.into_iter().chain(in_band_defs).collect();\n+        lowered_generics.params.extend(in_band_defs);\n \n         let lowered_generics = lowered_generics.into_generics(self.arena);\n         (lowered_generics, res)"}, {"sha": "3fbb42ece47a0f904c8060e92ff1baefae69210e", "filename": "src/librustc_resolve/late/lifetimes.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6dc6a1f9472d7e4be430368dad79a9f8a34c8de0/src%2Flibrustc_resolve%2Flate%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6dc6a1f9472d7e4be430368dad79a9f8a34c8de0/src%2Flibrustc_resolve%2Flate%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate%2Flifetimes.rs?ref=6dc6a1f9472d7e4be430368dad79a9f8a34c8de0", "patch": "@@ -1299,8 +1299,8 @@ fn object_lifetime_defaults_for_item(\n             GenericParamKind::Const { .. } => {\n                 // Generic consts don't impose any constraints.\n                 //\n-                // We still store a dummy value here to allow generic paramters\n-                // in arbitrary order.\n+                // We still store a dummy value here to allow generic parameters\n+                // in an arbitrary order.\n                 Some(Set1::Empty)\n             }\n         })"}, {"sha": "acf68be1176ddbf0df08563401f8f948359067e8", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6dc6a1f9472d7e4be430368dad79a9f8a34c8de0/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6dc6a1f9472d7e4be430368dad79a9f8a34c8de0/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=6dc6a1f9472d7e4be430368dad79a9f8a34c8de0", "patch": "@@ -1374,7 +1374,7 @@ fn generics_of(tcx: TyCtxt<'_>, def_id: DefId) -> ty::Generics {\n                         |lint| {\n                             lint.build(\n                                 \"defaults for type parameters are only allowed in \\\n-                                            `struct`, `enum`, `type`, or `trait` definitions.\",\n+                                 `struct`, `enum`, `type`, or `trait` definitions.\",\n                             )\n                             .emit();\n                         },"}]}