{"sha": "8ee86860bc1a16b24aa4c61ef6dee8967c521e1a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlZTg2ODYwYmMxYTE2YjI0YWE0YzYxZWY2ZGVlODk2N2M1MjFlMWE=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-02-10T16:39:51Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-02-10T16:39:51Z"}, "message": "rollup merge of #21353: sanxiyn/upvar\n\nFix #20558.", "tree": {"sha": "b48de3eb36ea9705b20c62630a6248ca490d0cda", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b48de3eb36ea9705b20c62630a6248ca490d0cda"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ee86860bc1a16b24aa4c61ef6dee8967c521e1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ee86860bc1a16b24aa4c61ef6dee8967c521e1a", "html_url": "https://github.com/rust-lang/rust/commit/8ee86860bc1a16b24aa4c61ef6dee8967c521e1a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ee86860bc1a16b24aa4c61ef6dee8967c521e1a/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88d8ba5ab3b1d22288b021708c3d87464e43b880", "url": "https://api.github.com/repos/rust-lang/rust/commits/88d8ba5ab3b1d22288b021708c3d87464e43b880", "html_url": "https://github.com/rust-lang/rust/commit/88d8ba5ab3b1d22288b021708c3d87464e43b880"}, {"sha": "4ef7551ccacd4d2042493f2ed905813b297634d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ef7551ccacd4d2042493f2ed905813b297634d0", "html_url": "https://github.com/rust-lang/rust/commit/4ef7551ccacd4d2042493f2ed905813b297634d0"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "5323a32243642cf7c5a6fe434763d9fc680253d4", "filename": "src/librustc/middle/traits/select.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8ee86860bc1a16b24aa4c61ef6dee8967c521e1a/src%2Flibrustc%2Fmiddle%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ee86860bc1a16b24aa4c61ef6dee8967c521e1a/src%2Flibrustc%2Fmiddle%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Fselect.rs?ref=8ee86860bc1a16b24aa4c61ef6dee8967c521e1a", "patch": "@@ -1549,6 +1549,14 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n                     return Ok(ParameterBuiltin);\n                 }\n \n+                // Upvars are always local variables or references to\n+                // local variables, and local variables cannot be\n+                // unsized, so the closure struct as a whole must be\n+                // Sized.\n+                if bound == ty::BoundSized {\n+                    return Ok(If(Vec::new()));\n+                }\n+\n                 match self.closure_typer.closure_upvars(def_id, substs) {\n                     Some(upvars) => {\n                         Ok(If(upvars.iter().map(|c| c.ty).collect()))"}, {"sha": "087ef5dcf05e4a08bc529f342eb174f596269434", "filename": "src/test/run-pass/unboxed-closures-infer-upvar.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/8ee86860bc1a16b24aa4c61ef6dee8967c521e1a/src%2Ftest%2Frun-pass%2Funboxed-closures-infer-upvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ee86860bc1a16b24aa4c61ef6dee8967c521e1a/src%2Ftest%2Frun-pass%2Funboxed-closures-infer-upvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funboxed-closures-infer-upvar.rs?ref=8ee86860bc1a16b24aa4c61ef6dee8967c521e1a", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test that the type variable in the type(`Vec<_>`) of a closed over\n+// variable does not interfere with type inference.\n+\n+fn f<F: FnMut()>(mut f: F) {\n+    f();\n+}\n+\n+fn main() {\n+    let mut v: Vec<_> = vec![];\n+    f(|| v.push(0));\n+    assert_eq!(v, vec![0]);\n+}"}]}