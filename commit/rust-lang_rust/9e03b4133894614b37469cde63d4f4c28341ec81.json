{"sha": "9e03b4133894614b37469cde63d4f4c28341ec81", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllMDNiNDEzMzg5NDYxNGIzNzQ2OWNkZTYzZDRmNGMyODM0MWVjODE=", "commit": {"author": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-02-25T01:38:17Z"}, "committer": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-02-25T01:38:17Z"}, "message": "Migrate readdir_r from pointers to places", "tree": {"sha": "46fbd5804c2159f6a41413f566cac6401b2eb507", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/46fbd5804c2159f6a41413f566cac6401b2eb507"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e03b4133894614b37469cde63d4f4c28341ec81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e03b4133894614b37469cde63d4f4c28341ec81", "html_url": "https://github.com/rust-lang/rust/commit/9e03b4133894614b37469cde63d4f4c28341ec81", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e03b4133894614b37469cde63d4f4c28341ec81/comments", "author": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "committer": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9fcc8a2a9172802c30b7918c03b24ec556d5fd8e", "url": "https://api.github.com/repos/rust-lang/rust/commits/9fcc8a2a9172802c30b7918c03b24ec556d5fd8e", "html_url": "https://github.com/rust-lang/rust/commit/9fcc8a2a9172802c30b7918c03b24ec556d5fd8e"}], "stats": {"total": 16, "additions": 6, "deletions": 10}, "files": [{"sha": "a3ac59bdf6e785be4bded832935edc8ace18ac89", "filename": "src/shims/fs.rs", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/9e03b4133894614b37469cde63d4f4c28341ec81/src%2Fshims%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e03b4133894614b37469cde63d4f4c28341ec81/src%2Fshims%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Ffs.rs?ref=9e03b4133894614b37469cde63d4f4c28341ec81", "patch": "@@ -902,13 +902,11 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 //     pub d_name: [c_char; 256],\n                 // }\n \n-                let entry_ptr = this.force_ptr(this.read_scalar(entry_op)?.not_undef()?)?;\n-                let dirent64_layout = this.libc_ty_layout(\"dirent64\")?;\n-                let name_offset = dirent64_layout.details.fields.offset(4);\n-                let name_ptr = entry_ptr.offset(name_offset, this)?;\n+                let entry_place = this.deref_operand(entry_op)?;\n+                let name_place = this.mplace_field(entry_place, 4)?;\n \n                 let file_name = dir_entry.file_name();\n-                let name_fits = this.write_os_str_to_c_str(&file_name, Scalar::Ptr(name_ptr), 256)?;\n+                let name_fits = this.write_os_str_to_c_str(&file_name, name_place.ptr, name_place.layout.size.bytes())?;\n                 if !name_fits {\n                     throw_unsup_format!(\"A directory entry had a name too large to fit in libc::dirent64\");\n                 }\n@@ -988,13 +986,11 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 //     pub d_name: [c_char; 1024],\n                 // }\n \n-                let entry_ptr = this.force_ptr(this.read_scalar(entry_op)?.not_undef()?)?;\n-                let dirent_layout = this.libc_ty_layout(\"dirent\")?;\n-                let name_offset = dirent_layout.details.fields.offset(5);\n-                let name_ptr = entry_ptr.offset(name_offset, this)?;\n+                let entry_place = this.deref_operand(entry_op)?;\n+                let name_place = this.mplace_field(entry_place, 5)?;\n \n                 let file_name = dir_entry.file_name();\n-                let name_fits = this.write_os_str_to_c_str(&file_name, Scalar::Ptr(name_ptr), 1024)?;\n+                let name_fits = this.write_os_str_to_c_str(&file_name, name_place.ptr, name_place.layout.size.bytes())?;\n                 if !name_fits {\n                     throw_unsup_format!(\"A directory entry had a name too large to fit in libc::dirent\");\n                 }"}]}