{"sha": "b5343d6baa6daeca974931f4148638393e80e216", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1MzQzZDZiYWE2ZGFlY2E5NzQ5MzFmNDE0ODYzODM5M2U4MGUyMTY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-25T07:47:59Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-25T07:47:59Z"}, "message": "rename def_id -> static_def_id", "tree": {"sha": "082ca65abd638ec31eb246049a1ede79770d8d6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/082ca65abd638ec31eb246049a1ede79770d8d6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b5343d6baa6daeca974931f4148638393e80e216", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b5343d6baa6daeca974931f4148638393e80e216", "html_url": "https://github.com/rust-lang/rust/commit/b5343d6baa6daeca974931f4148638393e80e216", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b5343d6baa6daeca974931f4148638393e80e216/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4920a3371f5c02e61d3a0f5722ff7034a99938ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/4920a3371f5c02e61d3a0f5722ff7034a99938ff", "html_url": "https://github.com/rust-lang/rust/commit/4920a3371f5c02e61d3a0f5722ff7034a99938ff"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "0970e09791999ce4d3d8ee673a526b539a1b52d0", "filename": "src/librustc_mir/const_eval/machine.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b5343d6baa6daeca974931f4148638393e80e216/src%2Flibrustc_mir%2Fconst_eval%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5343d6baa6daeca974931f4148638393e80e216/src%2Flibrustc_mir%2Fconst_eval%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval%2Fmachine.rs?ref=b5343d6baa6daeca974931f4148638393e80e216", "patch": "@@ -350,15 +350,15 @@ impl<'mir, 'tcx> interpret::Machine<'mir, 'tcx> for CompileTimeInterpreter {\n         memory_extra: &MemoryExtra,\n         alloc_id: AllocId,\n         allocation: &Allocation,\n-        def_id: Option<DefId>,\n+        static_def_id: Option<DefId>,\n         is_write: bool,\n     ) -> InterpResult<'tcx> {\n         if is_write && allocation.mutability == Mutability::Not {\n             Err(err_ub!(WriteToReadOnly(alloc_id)).into())\n         } else if is_write {\n             Err(ConstEvalErrKind::ModifiedGlobal.into())\n-        } else if memory_extra.can_access_statics || def_id.is_none() {\n-            // `def_id.is_none()` indicates this is not a static, but a const or so.\n+        } else if memory_extra.can_access_statics || static_def_id.is_none() {\n+            // `static_def_id.is_none()` indicates this is not a static, but a const or so.\n             Ok(())\n         } else {\n             Err(ConstEvalErrKind::ConstAccessesStatic.into())"}, {"sha": "74933bed8f89e871403a053061a81be106a43cfc", "filename": "src/librustc_mir/interpret/machine.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b5343d6baa6daeca974931f4148638393e80e216/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5343d6baa6daeca974931f4148638393e80e216/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs?ref=b5343d6baa6daeca974931f4148638393e80e216", "patch": "@@ -215,7 +215,7 @@ pub trait Machine<'mir, 'tcx>: Sized {\n         _memory_extra: &Self::MemoryExtra,\n         _alloc_id: AllocId,\n         _allocation: &Allocation,\n-        _def_id: Option<DefId>,\n+        _static_def_id: Option<DefId>,\n         _is_write: bool,\n     ) -> InterpResult<'tcx> {\n         Ok(())"}, {"sha": "3b2a41e5c0cfcd1d97c6c2ab84ada4408493ece2", "filename": "src/librustc_mir/transform/const_prop.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b5343d6baa6daeca974931f4148638393e80e216/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5343d6baa6daeca974931f4148638393e80e216/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs?ref=b5343d6baa6daeca974931f4148638393e80e216", "patch": "@@ -274,7 +274,7 @@ impl<'mir, 'tcx> interpret::Machine<'mir, 'tcx> for ConstPropMachine {\n         _memory_extra: &(),\n         _alloc_id: AllocId,\n         allocation: &Allocation<Self::PointerTag, Self::AllocExtra>,\n-        def_id: Option<DefId>,\n+        static_def_id: Option<DefId>,\n         is_write: bool,\n     ) -> InterpResult<'tcx> {\n         if is_write {\n@@ -285,7 +285,7 @@ impl<'mir, 'tcx> interpret::Machine<'mir, 'tcx> for ConstPropMachine {\n         if allocation.mutability == Mutability::Mut {\n             throw_machine_stop_str!(\"can't eval mutable globals in ConstProp\");\n         }\n-        if def_id.is_some() && allocation.relocations().len() > 0 {\n+        if static_def_id.is_some() && allocation.relocations().len() > 0 {\n             throw_machine_stop_str!(\"can't eval statics with pointers in ConstProp\");\n         }\n "}]}