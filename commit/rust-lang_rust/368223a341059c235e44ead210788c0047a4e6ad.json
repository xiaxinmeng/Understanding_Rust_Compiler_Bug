{"sha": "368223a341059c235e44ead210788c0047a4e6ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2ODIyM2EzNDEwNTljMjM1ZTQ0ZWFkMjEwNzg4YzAwNDdhNGU2YWQ=", "commit": {"author": {"name": "Daniel Wagner-Hall", "email": "dawagner@gmail.com", "date": "2018-09-02T22:37:28Z"}, "committer": {"name": "Daniel Wagner-Hall", "email": "dawagner@gmail.com", "date": "2018-09-02T22:37:28Z"}, "message": "Use types rather than strings", "tree": {"sha": "10ca79c5d252069172b7275bd40288c5a6ee2629", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10ca79c5d252069172b7275bd40288c5a6ee2629"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/368223a341059c235e44ead210788c0047a4e6ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/368223a341059c235e44ead210788c0047a4e6ad", "html_url": "https://github.com/rust-lang/rust/commit/368223a341059c235e44ead210788c0047a4e6ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/368223a341059c235e44ead210788c0047a4e6ad/comments", "author": {"login": "illicitonion", "id": 1131704, "node_id": "MDQ6VXNlcjExMzE3MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1131704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/illicitonion", "html_url": "https://github.com/illicitonion", "followers_url": "https://api.github.com/users/illicitonion/followers", "following_url": "https://api.github.com/users/illicitonion/following{/other_user}", "gists_url": "https://api.github.com/users/illicitonion/gists{/gist_id}", "starred_url": "https://api.github.com/users/illicitonion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/illicitonion/subscriptions", "organizations_url": "https://api.github.com/users/illicitonion/orgs", "repos_url": "https://api.github.com/users/illicitonion/repos", "events_url": "https://api.github.com/users/illicitonion/events{/privacy}", "received_events_url": "https://api.github.com/users/illicitonion/received_events", "type": "User", "site_admin": false}, "committer": {"login": "illicitonion", "id": 1131704, "node_id": "MDQ6VXNlcjExMzE3MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1131704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/illicitonion", "html_url": "https://github.com/illicitonion", "followers_url": "https://api.github.com/users/illicitonion/followers", "following_url": "https://api.github.com/users/illicitonion/following{/other_user}", "gists_url": "https://api.github.com/users/illicitonion/gists{/gist_id}", "starred_url": "https://api.github.com/users/illicitonion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/illicitonion/subscriptions", "organizations_url": "https://api.github.com/users/illicitonion/orgs", "repos_url": "https://api.github.com/users/illicitonion/repos", "events_url": "https://api.github.com/users/illicitonion/events{/privacy}", "received_events_url": "https://api.github.com/users/illicitonion/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "350036a0c7bd64bd49049f1864a575fad9216677", "url": "https://api.github.com/repos/rust-lang/rust/commits/350036a0c7bd64bd49049f1864a575fad9216677", "html_url": "https://github.com/rust-lang/rust/commit/350036a0c7bd64bd49049f1864a575fad9216677"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "83b824631bc88333689282f06645f93196c29cde", "filename": "clippy_lints/src/default_trait_access.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/368223a341059c235e44ead210788c0047a4e6ad/clippy_lints%2Fsrc%2Fdefault_trait_access.rs", "raw_url": "https://github.com/rust-lang/rust/raw/368223a341059c235e44ead210788c0047a4e6ad/clippy_lints%2Fsrc%2Fdefault_trait_access.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdefault_trait_access.rs?ref=368223a341059c235e44ead210788c0047a4e6ad", "patch": "@@ -48,13 +48,18 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for DefaultTraitAccess {\n             then {\n                 match qpath {\n                     QPath::Resolved(..) => {\n-                        if let ExprKind::Call(ref method, ref _args) = expr.node {\n-                            if format!(\"{:?}\", method).contains(\" as Default>\") {\n-                                return\n+                        if_chain! {\n+                            // Detect and ignore <Foo as Default>::default() because these calls do\n+                            // explicitly name the type.\n+                            if let ExprKind::Call(ref method, ref _args) = expr.node;\n+                            if let ExprKind::Path(ref p) = method.node;\n+                            if let QPath::Resolved(ref ty, ref _path) = p;\n+                            if ty.is_some();\n+                            then {\n+                                return;\n                             }\n                         }\n \n-\n                         // TODO: Work out a way to put \"whatever the imported way of referencing\n                         // this type in this file\" rather than a fully-qualified type.\n                         let expr_ty = cx.tables.expr_ty(expr);"}]}