{"sha": "50c86db4facf516d2248b81d56f7ee4e8381b6da", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwYzg2ZGI0ZmFjZjUxNmQyMjQ4YjgxZDU2ZjdlZTRlODM4MWI2ZGE=", "commit": {"author": {"name": "kadmin", "email": "julianknodt@gmail.com", "date": "2021-05-01T04:39:50Z"}, "committer": {"name": "kadmin", "email": "julianknodt@gmail.com", "date": "2021-05-01T21:58:06Z"}, "message": "Add help message for unused type param", "tree": {"sha": "00fa504c96d8c498c55df103ccdb83df3d7548fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/00fa504c96d8c498c55df103ccdb83df3d7548fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50c86db4facf516d2248b81d56f7ee4e8381b6da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50c86db4facf516d2248b81d56f7ee4e8381b6da", "html_url": "https://github.com/rust-lang/rust/commit/50c86db4facf516d2248b81d56f7ee4e8381b6da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50c86db4facf516d2248b81d56f7ee4e8381b6da/comments", "author": {"login": "JulianKnodt", "id": 7675847, "node_id": "MDQ6VXNlcjc2NzU4NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/7675847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JulianKnodt", "html_url": "https://github.com/JulianKnodt", "followers_url": "https://api.github.com/users/JulianKnodt/followers", "following_url": "https://api.github.com/users/JulianKnodt/following{/other_user}", "gists_url": "https://api.github.com/users/JulianKnodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/JulianKnodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JulianKnodt/subscriptions", "organizations_url": "https://api.github.com/users/JulianKnodt/orgs", "repos_url": "https://api.github.com/users/JulianKnodt/repos", "events_url": "https://api.github.com/users/JulianKnodt/events{/privacy}", "received_events_url": "https://api.github.com/users/JulianKnodt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JulianKnodt", "id": 7675847, "node_id": "MDQ6VXNlcjc2NzU4NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/7675847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JulianKnodt", "html_url": "https://github.com/JulianKnodt", "followers_url": "https://api.github.com/users/JulianKnodt/followers", "following_url": "https://api.github.com/users/JulianKnodt/following{/other_user}", "gists_url": "https://api.github.com/users/JulianKnodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/JulianKnodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JulianKnodt/subscriptions", "organizations_url": "https://api.github.com/users/JulianKnodt/orgs", "repos_url": "https://api.github.com/users/JulianKnodt/repos", "events_url": "https://api.github.com/users/JulianKnodt/events{/privacy}", "received_events_url": "https://api.github.com/users/JulianKnodt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b52769b804a12b7045ee1bce893a64045cdb974a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b52769b804a12b7045ee1bce893a64045cdb974a", "html_url": "https://github.com/rust-lang/rust/commit/b52769b804a12b7045ee1bce893a64045cdb974a"}], "stats": {"total": 52, "additions": 49, "deletions": 3}, "files": [{"sha": "4914f196afbb5af1ed34a0c7dd7e5213aa493e1a", "filename": "compiler/rustc_typeck/src/check/wfcheck.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/50c86db4facf516d2248b81d56f7ee4e8381b6da/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50c86db4facf516d2248b81d56f7ee4e8381b6da/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwfcheck.rs?ref=50c86db4facf516d2248b81d56f7ee4e8381b6da", "patch": "@@ -1298,12 +1298,14 @@ fn check_variances_for_type_defn<'tcx>(\n \n         match param.name {\n             hir::ParamName::Error => {}\n-            _ => report_bivariance(tcx, param.span, param.name.ident().name),\n+            _ => report_bivariance(tcx, param),\n         }\n     }\n }\n \n-fn report_bivariance(tcx: TyCtxt<'_>, span: Span, param_name: Symbol) {\n+fn report_bivariance(tcx: TyCtxt<'_>, param: &rustc_hir::GenericParam<'_>) {\n+    let span = param.span;\n+    let param_name = param.name.ident().name;\n     let mut err = error_392(tcx, span, param_name);\n \n     let suggested_marker_id = tcx.lang_items().phantom_data();\n@@ -1318,7 +1320,14 @@ fn report_bivariance(tcx: TyCtxt<'_>, span: Span, param_name: Symbol) {\n         format!(\"consider removing `{}` or referring to it in a field\", param_name)\n     };\n     err.help(&msg);\n-    err.emit();\n+\n+    if matches!(param.kind, rustc_hir::GenericParamKind::Type { .. }) {\n+        err.help(&format!(\n+            \"if you intended `{0}` to be a const parameter, use `const {0}: usize` instead\",\n+            param_name\n+        ));\n+    }\n+    err.emit()\n }\n \n /// Feature gates RFC 2056 -- trivial bounds, checking for global bounds that"}, {"sha": "32f7dea82639b70d41221a97d7c30205a7677ebe", "filename": "src/test/ui/const-generics/const-param-type-depends-on-type-param.full.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.full.stderr?ref=50c86db4facf516d2248b81d56f7ee4e8381b6da", "patch": "@@ -11,6 +11,7 @@ LL | pub struct Dependent<T, const X: T>([(); X]);\n    |                      ^ unused parameter\n    |\n    = help: consider removing `T`, referring to it in a field, or using a marker such as `PhantomData`\n+   = help: if you intended `T` to be a const parameter, use `const T: usize` instead\n \n error: aborting due to 2 previous errors\n "}, {"sha": "32f7dea82639b70d41221a97d7c30205a7677ebe", "filename": "src/test/ui/const-generics/const-param-type-depends-on-type-param.min.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.min.stderr?ref=50c86db4facf516d2248b81d56f7ee4e8381b6da", "patch": "@@ -11,6 +11,7 @@ LL | pub struct Dependent<T, const X: T>([(); X]);\n    |                      ^ unused parameter\n    |\n    = help: consider removing `T`, referring to it in a field, or using a marker such as `PhantomData`\n+   = help: if you intended `T` to be a const parameter, use `const T: usize` instead\n \n error: aborting due to 2 previous errors\n "}, {"sha": "0fe65272f1b78d0bea6437c2da47606da92fc59d", "filename": "src/test/ui/const-generics/issue-67375.full.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Fconst-generics%2Fissue-67375.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Fconst-generics%2Fissue-67375.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissue-67375.full.stderr?ref=50c86db4facf516d2248b81d56f7ee4e8381b6da", "patch": "@@ -15,6 +15,7 @@ LL | struct Bug<T> {\n    |            ^ unused parameter\n    |\n    = help: consider removing `T`, referring to it in a field, or using a marker such as `PhantomData`\n+   = help: if you intended `T` to be a const parameter, use `const T: usize` instead\n \n error: aborting due to previous error; 1 warning emitted\n "}, {"sha": "be81fa921297b2a67ffa0ed00d89a2c4ed011318", "filename": "src/test/ui/const-generics/issue-67375.min.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Fconst-generics%2Fissue-67375.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Fconst-generics%2Fissue-67375.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissue-67375.min.stderr?ref=50c86db4facf516d2248b81d56f7ee4e8381b6da", "patch": "@@ -14,6 +14,7 @@ LL | struct Bug<T> {\n    |            ^ unused parameter\n    |\n    = help: consider removing `T`, referring to it in a field, or using a marker such as `PhantomData`\n+   = help: if you intended `T` to be a const parameter, use `const T: usize` instead\n \n error: aborting due to 2 previous errors\n "}, {"sha": "63c50b5ca542387bc5058f9b94c222a2314e313c", "filename": "src/test/ui/const-generics/issue-67945-1.full.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Fconst-generics%2Fissue-67945-1.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Fconst-generics%2Fissue-67945-1.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissue-67945-1.full.stderr?ref=50c86db4facf516d2248b81d56f7ee4e8381b6da", "patch": "@@ -19,6 +19,7 @@ LL | struct Bug<S> {\n    |            ^ unused parameter\n    |\n    = help: consider removing `S`, referring to it in a field, or using a marker such as `PhantomData`\n+   = help: if you intended `S` to be a const parameter, use `const S: usize` instead\n \n error: aborting due to 2 previous errors\n "}, {"sha": "074d36c8ef3ed2d41a3894f4115f7636fac0c387", "filename": "src/test/ui/const-generics/issue-67945-1.min.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Fconst-generics%2Fissue-67945-1.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Fconst-generics%2Fissue-67945-1.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissue-67945-1.min.stderr?ref=50c86db4facf516d2248b81d56f7ee4e8381b6da", "patch": "@@ -23,6 +23,7 @@ LL | struct Bug<S> {\n    |            ^ unused parameter\n    |\n    = help: consider removing `S`, referring to it in a field, or using a marker such as `PhantomData`\n+   = help: if you intended `S` to be a const parameter, use `const S: usize` instead\n \n error: aborting due to 3 previous errors\n "}, {"sha": "b900406023117111434003fc8c6cf261bd131300", "filename": "src/test/ui/const-generics/issue-67945-2.full.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Fconst-generics%2Fissue-67945-2.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Fconst-generics%2Fissue-67945-2.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissue-67945-2.full.stderr?ref=50c86db4facf516d2248b81d56f7ee4e8381b6da", "patch": "@@ -19,6 +19,7 @@ LL | struct Bug<S> {\n    |            ^ unused parameter\n    |\n    = help: consider removing `S`, referring to it in a field, or using a marker such as `PhantomData`\n+   = help: if you intended `S` to be a const parameter, use `const S: usize` instead\n \n error: aborting due to 2 previous errors\n "}, {"sha": "c06df79f8428c51a3b3da3e8ea9cafd31b319bb6", "filename": "src/test/ui/const-generics/issue-67945-2.min.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Fconst-generics%2Fissue-67945-2.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Fconst-generics%2Fissue-67945-2.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissue-67945-2.min.stderr?ref=50c86db4facf516d2248b81d56f7ee4e8381b6da", "patch": "@@ -23,6 +23,7 @@ LL | struct Bug<S> {\n    |            ^ unused parameter\n    |\n    = help: consider removing `S`, referring to it in a field, or using a marker such as `PhantomData`\n+   = help: if you intended `S` to be a const parameter, use `const S: usize` instead\n \n error: aborting due to 3 previous errors\n "}, {"sha": "2251512c4596ea26c58de59419f830a8356fcc2a", "filename": "src/test/ui/const-generics/unused-type-param-suggestion.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Fconst-generics%2Funused-type-param-suggestion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Fconst-generics%2Funused-type-param-suggestion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Funused-type-param-suggestion.rs?ref=50c86db4facf516d2248b81d56f7ee4e8381b6da", "patch": "@@ -0,0 +1,4 @@\n+#![crate_type=\"lib\"]\n+\n+struct Example<N>;\n+//~^ ERROR parameter"}, {"sha": "807065ca109e5990607c327dbf39d9de0d35deed", "filename": "src/test/ui/const-generics/unused-type-param-suggestion.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Fconst-generics%2Funused-type-param-suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Fconst-generics%2Funused-type-param-suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Funused-type-param-suggestion.stderr?ref=50c86db4facf516d2248b81d56f7ee4e8381b6da", "patch": "@@ -0,0 +1,12 @@\n+error[E0392]: parameter `N` is never used\n+  --> $DIR/unused-type-param-suggestion.rs:3:16\n+   |\n+LL | struct Example<N>;\n+   |                ^ unused parameter\n+   |\n+   = help: consider removing `N`, referring to it in a field, or using a marker such as `PhantomData`\n+   = help: if you intended `N` to be a const parameter, use `const N: usize` instead\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0392`."}, {"sha": "f89be630eeb30c7746fbedbecfb2a6f28e8a8407", "filename": "src/test/ui/enum-discriminant/issue-70453-generics-in-discr-ice.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Fenum-discriminant%2Fissue-70453-generics-in-discr-ice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Fenum-discriminant%2Fissue-70453-generics-in-discr-ice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fenum-discriminant%2Fissue-70453-generics-in-discr-ice.stderr?ref=50c86db4facf516d2248b81d56f7ee4e8381b6da", "patch": "@@ -14,6 +14,7 @@ LL | enum MyWeirdOption<T> {\n    |                    ^ unused parameter\n    |\n    = help: consider removing `T`, referring to it in a field, or using a marker such as `PhantomData`\n+   = help: if you intended `T` to be a const parameter, use `const T: usize` instead\n \n error: aborting due to 2 previous errors\n "}, {"sha": "227899e75350f3ed155d2640315c2b61b02764df", "filename": "src/test/ui/enum/issue-67945-1.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Fenum%2Fissue-67945-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Fenum%2Fissue-67945-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fenum%2Fissue-67945-1.stderr?ref=50c86db4facf516d2248b81d56f7ee4e8381b6da", "patch": "@@ -14,6 +14,7 @@ LL | enum Bug<S> {\n    |          ^ unused parameter\n    |\n    = help: consider removing `S`, referring to it in a field, or using a marker such as `PhantomData`\n+   = help: if you intended `S` to be a const parameter, use `const S: usize` instead\n \n error: aborting due to 2 previous errors\n "}, {"sha": "5a90f00c346d0de0f44b8d131f96592318e836a1", "filename": "src/test/ui/enum/issue-67945-2.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Fenum%2Fissue-67945-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Fenum%2Fissue-67945-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fenum%2Fissue-67945-2.stderr?ref=50c86db4facf516d2248b81d56f7ee4e8381b6da", "patch": "@@ -14,6 +14,7 @@ LL | enum Bug<S> {\n    |          ^ unused parameter\n    |\n    = help: consider removing `S`, referring to it in a field, or using a marker such as `PhantomData`\n+   = help: if you intended `S` to be a const parameter, use `const S: usize` instead\n \n error: aborting due to 2 previous errors\n "}, {"sha": "622402999c348b11d5167b4d55681a81127ce7c0", "filename": "src/test/ui/error-codes/E0392.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Ferror-codes%2FE0392.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Ferror-codes%2FE0392.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0392.stderr?ref=50c86db4facf516d2248b81d56f7ee4e8381b6da", "patch": "@@ -5,6 +5,7 @@ LL | enum Foo<T> { Bar }\n    |          ^ unused parameter\n    |\n    = help: consider removing `T`, referring to it in a field, or using a marker such as `PhantomData`\n+   = help: if you intended `T` to be a const parameter, use `const T: usize` instead\n \n error: aborting due to previous error\n "}, {"sha": "e4e449e4159b6b8067e5be8ad38ba817fe904455", "filename": "src/test/ui/inner-static-type-parameter.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Finner-static-type-parameter.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Finner-static-type-parameter.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finner-static-type-parameter.stderr?ref=50c86db4facf516d2248b81d56f7ee4e8381b6da", "patch": "@@ -13,6 +13,7 @@ LL | enum Bar<T> { What }\n    |          ^ unused parameter\n    |\n    = help: consider removing `T`, referring to it in a field, or using a marker such as `PhantomData`\n+   = help: if you intended `T` to be a const parameter, use `const T: usize` instead\n \n error: aborting due to 2 previous errors\n "}, {"sha": "259e029113d5097cf0a14e0ad6ab74de17c66c50", "filename": "src/test/ui/issues/issue-17904-2.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Fissues%2Fissue-17904-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Fissues%2Fissue-17904-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17904-2.stderr?ref=50c86db4facf516d2248b81d56f7ee4e8381b6da", "patch": "@@ -5,6 +5,7 @@ LL | struct Foo<T> where T: Copy;\n    |            ^ unused parameter\n    |\n    = help: consider removing `T`, referring to it in a field, or using a marker such as `PhantomData`\n+   = help: if you intended `T` to be a const parameter, use `const T: usize` instead\n \n error: aborting due to previous error\n "}, {"sha": "6bcff7aff2dc4fa59982c14a7299c509ce1dfb0d", "filename": "src/test/ui/issues/issue-20413.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Fissues%2Fissue-20413.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Fissues%2Fissue-20413.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-20413.stderr?ref=50c86db4facf516d2248b81d56f7ee4e8381b6da", "patch": "@@ -5,6 +5,7 @@ LL | struct NoData<T>;\n    |               ^ unused parameter\n    |\n    = help: consider removing `T`, referring to it in a field, or using a marker such as `PhantomData`\n+   = help: if you intended `T` to be a const parameter, use `const T: usize` instead\n \n error[E0275]: overflow evaluating the requirement `NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<T>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>: Foo`\n   --> $DIR/issue-20413.rs:8:36"}, {"sha": "dc24fb353f408069dfe673c7bc3d98f97c62b2ac", "filename": "src/test/ui/issues/issue-36299.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Fissues%2Fissue-36299.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Fissues%2Fissue-36299.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-36299.stderr?ref=50c86db4facf516d2248b81d56f7ee4e8381b6da", "patch": "@@ -13,6 +13,7 @@ LL | struct Foo<'a, A> {}\n    |                ^ unused parameter\n    |\n    = help: consider removing `A`, referring to it in a field, or using a marker such as `PhantomData`\n+   = help: if you intended `A` to be a const parameter, use `const A: usize` instead\n \n error: aborting due to 2 previous errors\n "}, {"sha": "733fc4af534f76477e57ed97521527cc8a823be0", "filename": "src/test/ui/issues/issue-36638.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Fissues%2Fissue-36638.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Fissues%2Fissue-36638.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-36638.stderr?ref=50c86db4facf516d2248b81d56f7ee4e8381b6da", "patch": "@@ -17,6 +17,7 @@ LL | struct Foo<Self>(Self);\n    |            ^^^^ unused parameter\n    |\n    = help: consider removing `Self`, referring to it in a field, or using a marker such as `PhantomData`\n+   = help: if you intended `Self` to be a const parameter, use `const Self: usize` instead\n \n error: aborting due to 3 previous errors\n "}, {"sha": "82bb51028c9774d84dd478fc43268fe6cf2cbcaf", "filename": "src/test/ui/issues/issue-37534.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Fissues%2Fissue-37534.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Fissues%2Fissue-37534.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-37534.stderr?ref=50c86db4facf516d2248b81d56f7ee4e8381b6da", "patch": "@@ -22,6 +22,7 @@ LL | struct Foo<T: ?Hash> { }\n    |            ^ unused parameter\n    |\n    = help: consider removing `T`, referring to it in a field, or using a marker such as `PhantomData`\n+   = help: if you intended `T` to be a const parameter, use `const T: usize` instead\n \n error: aborting due to 2 previous errors; 1 warning emitted\n "}, {"sha": "270233c0c97723acc8b785e842141c1596a86b4a", "filename": "src/test/ui/variance/variance-unused-type-param.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Fvariance%2Fvariance-unused-type-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/50c86db4facf516d2248b81d56f7ee4e8381b6da/src%2Ftest%2Fui%2Fvariance%2Fvariance-unused-type-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-unused-type-param.stderr?ref=50c86db4facf516d2248b81d56f7ee4e8381b6da", "patch": "@@ -5,6 +5,7 @@ LL | struct SomeStruct<A> { x: u32 }\n    |                   ^ unused parameter\n    |\n    = help: consider removing `A`, referring to it in a field, or using a marker such as `PhantomData`\n+   = help: if you intended `A` to be a const parameter, use `const A: usize` instead\n \n error[E0392]: parameter `A` is never used\n   --> $DIR/variance-unused-type-param.rs:9:15\n@@ -13,6 +14,7 @@ LL | enum SomeEnum<A> { Nothing }\n    |               ^ unused parameter\n    |\n    = help: consider removing `A`, referring to it in a field, or using a marker such as `PhantomData`\n+   = help: if you intended `A` to be a const parameter, use `const A: usize` instead\n \n error[E0392]: parameter `T` is never used\n   --> $DIR/variance-unused-type-param.rs:13:15\n@@ -21,6 +23,7 @@ LL | enum ListCell<T> {\n    |               ^ unused parameter\n    |\n    = help: consider removing `T`, referring to it in a field, or using a marker such as `PhantomData`\n+   = help: if you intended `T` to be a const parameter, use `const T: usize` instead\n \n error: aborting due to 3 previous errors\n "}]}