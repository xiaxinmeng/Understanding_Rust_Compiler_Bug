{"sha": "2bea3b3aa3fd943aee09b5ef3ef85d449d986422", "node_id": "C_kwDOAAsO6NoAKDJiZWEzYjNhYTNmZDk0M2FlZTA5YjVlZjNlZjg1ZDQ0OWQ5ODY0MjI", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-12-07T08:08:59Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-12-12T04:35:00Z"}, "message": "Remap predicate/env constness before querying", "tree": {"sha": "324fe361a95a110a01669c435dbcd3f75f0c410b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/324fe361a95a110a01669c435dbcd3f75f0c410b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2bea3b3aa3fd943aee09b5ef3ef85d449d986422", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE3RQPHNISvvEnSKtjbQF6ltjmwvkFAmG1e/QACgkQbQF6ltjm\nwvmmYw/6AqMhEf1jW2n/UJVqhtsmhJeJSWoQ7VVrIn9R/2bl/mRGibODkp5q9Twn\nJ50Hgz2PJNhEBoHUvfZbbk9O+na1tm2TTN2kCPl6iQ15j9GhEK5yNFdb3IrNHiW5\nIXXI2DGwWT0I0HC9KreVB/4JccHEUW7paSvOxIm1OOsP/gEp5CITLx1sX2yTNPBa\niKITKCsnlWe+zLXKPk78SfbsWWUU9l1tG4Yx0FUL7tK2fR+3vjzY9vKpHmMO4TlW\nd/HXoOhmI15HIM7ze1jrMhuxbNCX4IfRPtlvxMRK0QZMOm7bl5UWx2xIE22gU3Oe\ndnGdA/m5a5Xf9zDDtZZ8HzFbNL+OcC+R0kt3bj8t3jJ9zDINHguZxxhmApqKgCYi\n3ygkJzacK8OzwOO+wcThdoJPpRcMvsVD4yI/U6PMv+xFGHcbjhbtuQH7xEjqSx3o\nQAbWwkmda1jpGMuBIu248bfHFG2y1IIsdVPp1nsib7dwR/BmW2zlxHsXvlJWCigP\nfE1AUPAtlBKYMtyBOriiGr+Rg77kz2tu0uxNHCM//QyxG5je+PqleGJXkObnY58L\nuOTDLu24ZrxGG0ScK+b4jDIwrs6WNMA5gmNKbg1YMJ1Dc+dTg0FQtG5vzTMx0d9J\nSuH0hDeJ/Oea1mw+myXD2cb4jdW1v0yRIgPB61RqvJMoLYEkqhQ=\n=WA+V\n-----END PGP SIGNATURE-----", "payload": "tree 324fe361a95a110a01669c435dbcd3f75f0c410b\nparent 42963f4d50dcd077493c77d370cff07e2475a151\nauthor Deadbeef <ent3rm4n@gmail.com> 1638864539 +0800\ncommitter Deadbeef <ent3rm4n@gmail.com> 1639283700 +0800\n\nRemap predicate/env constness before querying\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2bea3b3aa3fd943aee09b5ef3ef85d449d986422", "html_url": "https://github.com/rust-lang/rust/commit/2bea3b3aa3fd943aee09b5ef3ef85d449d986422", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2bea3b3aa3fd943aee09b5ef3ef85d449d986422/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42963f4d50dcd077493c77d370cff07e2475a151", "url": "https://api.github.com/repos/rust-lang/rust/commits/42963f4d50dcd077493c77d370cff07e2475a151", "html_url": "https://github.com/rust-lang/rust/commit/42963f4d50dcd077493c77d370cff07e2475a151"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "2c1f604b033df0c94db42f18310bedafd29d1bd4", "filename": "compiler/rustc_trait_selection/src/traits/query/evaluate_obligation.rs", "status": "modified", "additions": 24, "deletions": 4, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/2bea3b3aa3fd943aee09b5ef3ef85d449d986422/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Fevaluate_obligation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bea3b3aa3fd943aee09b5ef3ef85d449d986422/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Fevaluate_obligation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Fevaluate_obligation.rs?ref=2bea3b3aa3fd943aee09b5ef3ef85d449d986422", "patch": "@@ -1,3 +1,5 @@\n+use rustc_middle::ty;\n+\n use crate::infer::canonical::OriginalQueryValues;\n use crate::infer::InferCtxt;\n use crate::traits::{\n@@ -64,10 +66,28 @@ impl<'cx, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'cx, 'tcx> {\n         obligation: &PredicateObligation<'tcx>,\n     ) -> Result<EvaluationResult, OverflowError> {\n         let mut _orig_values = OriginalQueryValues::default();\n-        let c_pred = self.canonicalize_query_keep_static(\n-            obligation.param_env.and(obligation.predicate),\n-            &mut _orig_values,\n-        );\n+\n+        let (param_env, predicate) = match obligation.predicate.kind().skip_binder() {\n+            ty::PredicateKind::Trait(mut pred) => {\n+                let orig_pred_constness = pred.constness;\n+                let env_constness = pred.constness.and(obligation.param_env.constness());\n+\n+                let predicate = if orig_pred_constness != pred.constness {\n+                    self.tcx.mk_predicate(\n+                        obligation.predicate.kind().rebind(ty::PredicateKind::Trait(pred)),\n+                    )\n+                } else {\n+                    obligation.predicate\n+                };\n+\n+                (obligation.param_env.with_constness(env_constness), predicate)\n+            }\n+            // constness has no effect on the given predicate.\n+            _ => (obligation.param_env.without_const(), obligation.predicate),\n+        };\n+\n+        let c_pred =\n+            self.canonicalize_query_keep_static(param_env.and(predicate), &mut _orig_values);\n         // Run canonical query. If overflow occurs, rerun from scratch but this time\n         // in standard trait query mode so that overflow is handled appropriately\n         // within `SelectionContext`."}]}