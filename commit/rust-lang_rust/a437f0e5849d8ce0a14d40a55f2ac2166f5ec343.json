{"sha": "a437f0e5849d8ce0a14d40a55f2ac2166f5ec343", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0MzdmMGU1ODQ5ZDhjZTBhMTRkNDBhNTVmMmFjMjE2NmY1ZWMzNDM=", "commit": {"author": {"name": "Seivan Heidari", "email": "seivan.heidari@icloud.com", "date": "2019-10-31T10:26:39Z"}, "committer": {"name": "Seivan Heidari", "email": "seivan.heidari@icloud.com", "date": "2019-10-31T10:26:39Z"}, "message": "Making loadColors more readable by monading all the things.", "tree": {"sha": "0b53e883e140b9858055426dd67fb8cbbb5912f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b53e883e140b9858055426dd67fb8cbbb5912f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a437f0e5849d8ce0a14d40a55f2ac2166f5ec343", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a437f0e5849d8ce0a14d40a55f2ac2166f5ec343", "html_url": "https://github.com/rust-lang/rust/commit/a437f0e5849d8ce0a14d40a55f2ac2166f5ec343", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a437f0e5849d8ce0a14d40a55f2ac2166f5ec343/comments", "author": {"login": "seivan", "id": 55424, "node_id": "MDQ6VXNlcjU1NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/55424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seivan", "html_url": "https://github.com/seivan", "followers_url": "https://api.github.com/users/seivan/followers", "following_url": "https://api.github.com/users/seivan/following{/other_user}", "gists_url": "https://api.github.com/users/seivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/seivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seivan/subscriptions", "organizations_url": "https://api.github.com/users/seivan/orgs", "repos_url": "https://api.github.com/users/seivan/repos", "events_url": "https://api.github.com/users/seivan/events{/privacy}", "received_events_url": "https://api.github.com/users/seivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "seivan", "id": 55424, "node_id": "MDQ6VXNlcjU1NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/55424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seivan", "html_url": "https://github.com/seivan", "followers_url": "https://api.github.com/users/seivan/followers", "following_url": "https://api.github.com/users/seivan/following{/other_user}", "gists_url": "https://api.github.com/users/seivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/seivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seivan/subscriptions", "organizations_url": "https://api.github.com/users/seivan/orgs", "repos_url": "https://api.github.com/users/seivan/repos", "events_url": "https://api.github.com/users/seivan/events{/privacy}", "received_events_url": "https://api.github.com/users/seivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f822c8e518132b01d7eda665f6bf7bc254780a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f822c8e518132b01d7eda665f6bf7bc254780a7", "html_url": "https://github.com/rust-lang/rust/commit/1f822c8e518132b01d7eda665f6bf7bc254780a7"}], "stats": {"total": 39, "additions": 16, "deletions": 23}, "files": [{"sha": "5d439593014ce2787eac77ba5ce1d22c10c53ff1", "filename": "editors/code/src/scopes.ts", "status": "modified", "additions": 16, "deletions": 23, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/a437f0e5849d8ce0a14d40a55f2ac2166f5ec343/editors%2Fcode%2Fsrc%2Fscopes.ts", "raw_url": "https://github.com/rust-lang/rust/raw/a437f0e5849d8ce0a14d40a55f2ac2166f5ec343/editors%2Fcode%2Fsrc%2Fscopes.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fscopes.ts?ref=a437f0e5849d8ce0a14d40a55f2ac2166f5ec343", "patch": "@@ -55,10 +55,10 @@ function loadThemeNamed(themeName: string) {\n     const themePaths = vscode.extensions.all\n         .filter(filterThemeExtensions)\n         .reduce((list, extension) => {\n-            const paths = extension.packageJSON.contributes.themes\n+            return extension.packageJSON.contributes.themes\n                 .filter((element: any) => (element.id || element.label) === themeName)\n                 .map((element: any) => path.join(extension.extensionPath, element.path))\n-            return list.concat(paths)\n+                .concat(list)\n         }, Array<string>())\n \n \n@@ -92,7 +92,8 @@ function loadThemeFile(themePath: string) {\n         .forEach(loadThemeFile)\n }\n \n-function mergeRuleSettings(defaultSetting: TextMateRuleSettings, override: TextMateRuleSettings): TextMateRuleSettings {\n+function mergeRuleSettings(defaultSetting: TextMateRuleSettings | undefined, override: TextMateRuleSettings): TextMateRuleSettings {\n+    if (defaultSetting === undefined) { return override }\n     const mergedRule = defaultSetting\n \n     mergedRule.background = override.background || defaultSetting.background\n@@ -102,29 +103,21 @@ function mergeRuleSettings(defaultSetting: TextMateRuleSettings, override: TextM\n     return mergedRule\n }\n \n-function loadColors(textMateRules: TextMateRule[]): void {\n-    for (const rule of textMateRules) {\n+function updateRules(scope: string, updatedSettings: TextMateRuleSettings): void {\n+    [rules.get(scope)]\n+        .map(settings => mergeRuleSettings(settings, updatedSettings))\n+        .forEach(settings => rules.set(scope, settings))\n+}\n \n+function loadColors(textMateRules: TextMateRule[]): void {\n+    textMateRules.forEach(rule => {\n         if (typeof rule.scope === 'string') {\n-            const existingRule = rules.get(rule.scope)\n-            if (existingRule) {\n-                rules.set(rule.scope, mergeRuleSettings(existingRule, rule.settings))\n-            }\n-            else {\n-                rules.set(rule.scope, rule.settings)\n-            }\n-        } else if (rule.scope instanceof Array) {\n-            for (const scope of rule.scope) {\n-                const existingRule = rules.get(scope)\n-                if (existingRule) {\n-                    rules.set(scope, mergeRuleSettings(existingRule, rule.settings))\n-                }\n-                else {\n-                    rules.set(scope, rule.settings)\n-                }\n-            }\n+            updateRules(rule.scope, rule.settings)\n         }\n-    }\n+        else if (rule.scope instanceof Array) {\n+            rule.scope.forEach(scope => updateRules(scope, rule.settings))\n+        }\n+    })\n }\n \n function isFile(filePath: string): boolean {"}]}