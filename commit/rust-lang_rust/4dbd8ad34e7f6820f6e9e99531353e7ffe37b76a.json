{"sha": "4dbd8ad34e7f6820f6e9e99531353e7ffe37b76a", "node_id": "C_kwDOAAsO6NoAKDRkYmQ4YWQzNGU3ZjY4MjBmNmU5ZTk5NTMxMzUzZTdmZmUzN2I3NmE", "commit": {"author": {"name": "Samuel Moelius", "email": "sam@moeli.us", "date": "2022-12-20T10:30:12Z"}, "committer": {"name": "Samuel Moelius", "email": "sam@moeli.us", "date": "2022-12-20T10:30:12Z"}, "message": "Address https://github.com/rust-lang/rust/pull/105659", "tree": {"sha": "dd790749523e5901d0b2d0d51dec5a881302b38b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd790749523e5901d0b2d0d51dec5a881302b38b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4dbd8ad34e7f6820f6e9e99531353e7ffe37b76a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4dbd8ad34e7f6820f6e9e99531353e7ffe37b76a", "html_url": "https://github.com/rust-lang/rust/commit/4dbd8ad34e7f6820f6e9e99531353e7ffe37b76a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4dbd8ad34e7f6820f6e9e99531353e7ffe37b76a/comments", "author": {"login": "smoelius", "id": 35515885, "node_id": "MDQ6VXNlcjM1NTE1ODg1", "avatar_url": "https://avatars.githubusercontent.com/u/35515885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smoelius", "html_url": "https://github.com/smoelius", "followers_url": "https://api.github.com/users/smoelius/followers", "following_url": "https://api.github.com/users/smoelius/following{/other_user}", "gists_url": "https://api.github.com/users/smoelius/gists{/gist_id}", "starred_url": "https://api.github.com/users/smoelius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smoelius/subscriptions", "organizations_url": "https://api.github.com/users/smoelius/orgs", "repos_url": "https://api.github.com/users/smoelius/repos", "events_url": "https://api.github.com/users/smoelius/events{/privacy}", "received_events_url": "https://api.github.com/users/smoelius/received_events", "type": "User", "site_admin": false}, "committer": {"login": "smoelius", "id": 35515885, "node_id": "MDQ6VXNlcjM1NTE1ODg1", "avatar_url": "https://avatars.githubusercontent.com/u/35515885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smoelius", "html_url": "https://github.com/smoelius", "followers_url": "https://api.github.com/users/smoelius/followers", "following_url": "https://api.github.com/users/smoelius/following{/other_user}", "gists_url": "https://api.github.com/users/smoelius/gists{/gist_id}", "starred_url": "https://api.github.com/users/smoelius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smoelius/subscriptions", "organizations_url": "https://api.github.com/users/smoelius/orgs", "repos_url": "https://api.github.com/users/smoelius/repos", "events_url": "https://api.github.com/users/smoelius/events{/privacy}", "received_events_url": "https://api.github.com/users/smoelius/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7dc96155853a3919b973347277d0e9bcaaa22f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7dc96155853a3919b973347277d0e9bcaaa22f0", "html_url": "https://github.com/rust-lang/rust/commit/c7dc96155853a3919b973347277d0e9bcaaa22f0"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "395d46e7a2f8af088f359177ebe4ebf4f4e08c39", "filename": "clippy_utils/src/mir/possible_borrower.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4dbd8ad34e7f6820f6e9e99531353e7ffe37b76a/clippy_utils%2Fsrc%2Fmir%2Fpossible_borrower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4dbd8ad34e7f6820f6e9e99531353e7ffe37b76a/clippy_utils%2Fsrc%2Fmir%2Fpossible_borrower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fmir%2Fpossible_borrower.rs?ref=4dbd8ad34e7f6820f6e9e99531353e7ffe37b76a", "patch": "@@ -11,6 +11,7 @@ use rustc_mir_dataflow::{\n     fmt::DebugWithContext, impls::MaybeStorageLive, lattice::JoinSemiLattice, Analysis, AnalysisDomain,\n     CallReturnPlaces, ResultsCursor,\n };\n+use std::borrow::Cow;\n use std::ops::ControlFlow;\n \n /// Collects the possible borrowers of each local.\n@@ -214,7 +215,7 @@ fn rvalue_locals(rvalue: &mir::Rvalue<'_>, mut visit: impl FnMut(mir::Local)) {\n pub struct PossibleBorrowerMap<'b, 'tcx> {\n     body: &'b mir::Body<'tcx>,\n     possible_borrower: ResultsCursor<'b, 'tcx, PossibleBorrowerAnalysis<'b, 'tcx>>,\n-    maybe_live: ResultsCursor<'b, 'tcx, MaybeStorageLive>,\n+    maybe_live: ResultsCursor<'b, 'tcx, MaybeStorageLive<'b>>,\n     pushed: BitSet<Local>,\n     stack: Vec<Local>,\n }\n@@ -231,7 +232,7 @@ impl<'b, 'tcx> PossibleBorrowerMap<'b, 'tcx> {\n             .pass_name(\"possible_borrower\")\n             .iterate_to_fixpoint()\n             .into_results_cursor(mir);\n-        let maybe_live = MaybeStorageLive::new(BitSet::new_empty(mir.local_decls.len()))\n+        let maybe_live = MaybeStorageLive::new(Cow::Owned(BitSet::new_empty(mir.local_decls.len())))\n             .into_engine(cx.tcx, mir)\n             .pass_name(\"possible_borrower\")\n             .iterate_to_fixpoint()"}]}