{"sha": "456ffcdc560c1c7baea116ef1ea03e0f7568102d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1NmZmY2RjNTYwYzFjN2JhZWExMTZlZjFlYTAzZTBmNzU2ODEwMmQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-12-08T22:30:13Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-12-08T22:30:13Z"}, "message": "Revert \"Register new snapshots\"\n\nThis reverts commit 9b443289cf32cbcff16768614340f0c844675340.", "tree": {"sha": "6a028c58f33ce86e16caa405841d5dffcb48725c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a028c58f33ce86e16caa405841d5dffcb48725c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/456ffcdc560c1c7baea116ef1ea03e0f7568102d", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/456ffcdc560c1c7baea116ef1ea03e0f7568102d", "html_url": "https://github.com/rust-lang/rust/commit/456ffcdc560c1c7baea116ef1ea03e0f7568102d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/456ffcdc560c1c7baea116ef1ea03e0f7568102d/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84a7615418749d663d54dd9223a15098b834e2a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/84a7615418749d663d54dd9223a15098b834e2a0", "html_url": "https://github.com/rust-lang/rust/commit/84a7615418749d663d54dd9223a15098b834e2a0"}], "stats": {"total": 65, "additions": 53, "deletions": 12}, "files": [{"sha": "fdc8b9e7400f5a6db3b9da737b2d027f4cec88b8", "filename": "src/libcore/ops.rs", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/456ffcdc560c1c7baea116ef1ea03e0f7568102d/src%2Flibcore%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/456ffcdc560c1c7baea116ef1ea03e0f7568102d/src%2Flibcore%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops.rs?ref=456ffcdc560c1c7baea116ef1ea03e0f7568102d", "patch": "@@ -832,3 +832,53 @@ impl<F,A,R> FnOnce<A,R> for F\n         self.call_mut(args)\n     }\n }\n+\n+#[cfg(stage0)]\n+mod fn_impls {\n+    use super::Fn;\n+\n+    impl<Result> Fn<(),Result> for extern \"Rust\" fn() -> Result {\n+        #[allow(non_snake_case)]\n+        extern \"rust-call\" fn call(&self, _args: ()) -> Result {\n+            (*self)()\n+        }\n+    }\n+\n+    impl<Result,A0> Fn<(A0,),Result> for extern \"Rust\" fn(A0) -> Result {\n+        #[allow(non_snake_case)]\n+        extern \"rust-call\" fn call(&self, args: (A0,)) -> Result {\n+            let (a0,) = args;\n+            (*self)(a0)\n+        }\n+    }\n+\n+    macro_rules! def_fn(\n+        ($($args:ident)*) => (\n+            impl<Result$(,$args)*>\n+            Fn<($($args,)*),Result>\n+            for extern \"Rust\" fn($($args: $args,)*) -> Result {\n+                #[allow(non_snake_case)]\n+                extern \"rust-call\" fn call(&self, args: ($($args,)*)) -> Result {\n+                    let ($($args,)*) = args;\n+                    (*self)($($args,)*)\n+                }\n+            }\n+        )\n+    )\n+\n+    def_fn!(A0 A1)\n+    def_fn!(A0 A1 A2)\n+    def_fn!(A0 A1 A2 A3)\n+    def_fn!(A0 A1 A2 A3 A4)\n+    def_fn!(A0 A1 A2 A3 A4 A5)\n+    def_fn!(A0 A1 A2 A3 A4 A5 A6)\n+    def_fn!(A0 A1 A2 A3 A4 A5 A6 A7)\n+    def_fn!(A0 A1 A2 A3 A4 A5 A6 A7 A8)\n+    def_fn!(A0 A1 A2 A3 A4 A5 A6 A7 A8 A9)\n+    def_fn!(A0 A1 A2 A3 A4 A5 A6 A7 A8 A9 A10)\n+    def_fn!(A0 A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 A11)\n+    def_fn!(A0 A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 A11 A12)\n+    def_fn!(A0 A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 A11 A12 A13)\n+    def_fn!(A0 A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 A11 A12 A13 A14)\n+    def_fn!(A0 A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 A11 A12 A13 A14 A15)\n+}"}, {"sha": "2a77e3e67915bb92b46fc42d20eced6281db784e", "filename": "src/libsyntax/parse/lexer/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/456ffcdc560c1c7baea116ef1ea03e0f7568102d/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/456ffcdc560c1c7baea116ef1ea03e0f7568102d/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs?ref=456ffcdc560c1c7baea116ef1ea03e0f7568102d", "patch": "@@ -763,7 +763,7 @@ impl<'a> StringReader<'a> {\n         }\n     }\n \n-    // SNAP 361baab\n+    // SNAP c9f6d69\n     #[allow(unused)]\n     fn old_escape_warning(&mut self, sp: Span) {\n         self.span_diagnostic\n@@ -796,15 +796,15 @@ impl<'a> StringReader<'a> {\n                                     self.scan_unicode_escape(delim)\n                                 } else {\n                                     let res = self.scan_hex_digits(4u, delim, false);\n-                                    // SNAP 361baab\n+                                    // SNAP c9f6d69\n                                     //let sp = codemap::mk_sp(escaped_pos, self.last_pos);\n                                     //self.old_escape_warning(sp);\n                                     res\n                                 }\n                             }\n                             'U' if !ascii_only => {\n                                 let res = self.scan_hex_digits(8u, delim, false);\n-                                // SNAP 361baab\n+                                // SNAP c9f6d69\n                                 //let sp = codemap::mk_sp(escaped_pos, self.last_pos);\n                                 //self.old_escape_warning(sp);\n                                 res"}, {"sha": "0faf6840f0610f095d68c1b2ac6e393ffbcac82d", "filename": "src/snapshots.txt", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/456ffcdc560c1c7baea116ef1ea03e0f7568102d/src%2Fsnapshots.txt", "raw_url": "https://github.com/rust-lang/rust/raw/456ffcdc560c1c7baea116ef1ea03e0f7568102d/src%2Fsnapshots.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsnapshots.txt?ref=456ffcdc560c1c7baea116ef1ea03e0f7568102d", "patch": "@@ -1,12 +1,3 @@\n-S 2014-12-05 361baab\n-  freebsd-x86_64 73cbae4168538a07facd81cca45ed672badb7c3a\n-  linux-i386 211cf0fbdbc7045b765e7b92d92049bbe6788513\n-  linux-x86_64 f001cec306fc1ac77504884acf5dac2e7b39e164\n-  macos-i386 751dc02fac96114361c56eb45ce52e7a58d555e0\n-  macos-x86_64 58cad0275d7b33412501d7dd3386b924d2304e83\n-  winnt-i386 872c56b88cebd7d590fd00bcbd264f0003b4427b\n-  winnt-x86_64 2187d8b3187c03f95cd4e56a582f55ec0cfa8df9\n-\n S 2014-11-21 c9f6d69\n   freebsd-x86_64 0ef316e7c369177de043e69e964418bd637cbfc0\n   linux-i386 c8342e762a1720be939ed7c6a39bdaa27892f66f"}]}