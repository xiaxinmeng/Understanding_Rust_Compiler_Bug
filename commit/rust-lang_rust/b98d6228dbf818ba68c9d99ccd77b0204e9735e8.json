{"sha": "b98d6228dbf818ba68c9d99ccd77b0204e9735e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5OGQ2MjI4ZGJmODE4YmE2OGM5ZDk5Y2NkNzdiMDIwNGU5NzM1ZTg=", "commit": {"author": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-05-22T13:05:59Z"}, "committer": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-05-23T13:15:59Z"}, "message": "`Cleanup(Option<_>)` -> `Cleanup(BasicBlock), Skip`", "tree": {"sha": "b7c899b5a28bf77f7d1d4b6a9dabda398e76a09c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7c899b5a28bf77f7d1d4b6a9dabda398e76a09c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b98d6228dbf818ba68c9d99ccd77b0204e9735e8", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niIsEABYIADMWIQRJ2jPMDdiQ+U4U42Z0+n/VuNoUuAUCYKpVjxUceWQtaHVhbmdA\nb3V0bG9vay5jb20ACgkQdPp/1bjaFLiYMQEAxQ/YDmAGHD73mC/me9GxGWvKlC62\nvyOcRNUULM4OlCgBALLXWKfczuSZvKe96WW0oaJee4XOuPcRzEa2RJEcgvwB\n=QBpJ\n-----END PGP SIGNATURE-----", "payload": "tree b7c899b5a28bf77f7d1d4b6a9dabda398e76a09c\nparent e743eeb743b4e23ecf3cec67cdcd88f6ce056e79\nauthor hyd-dev <yd-huang@outlook.com> 1621688759 +0800\ncommitter hyd-dev <yd-huang@outlook.com> 1621775759 +0800\n\n`Cleanup(Option<_>)` -> `Cleanup(BasicBlock), Skip`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b98d6228dbf818ba68c9d99ccd77b0204e9735e8", "html_url": "https://github.com/rust-lang/rust/commit/b98d6228dbf818ba68c9d99ccd77b0204e9735e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b98d6228dbf818ba68c9d99ccd77b0204e9735e8/comments", "author": null, "committer": null, "parents": [{"sha": "e743eeb743b4e23ecf3cec67cdcd88f6ce056e79", "url": "https://api.github.com/repos/rust-lang/rust/commits/e743eeb743b4e23ecf3cec67cdcd88f6ce056e79", "html_url": "https://github.com/rust-lang/rust/commit/e743eeb743b4e23ecf3cec67cdcd88f6ce056e79"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "b683aca9f057ae09cde22acfd98fc7ef9256622a", "filename": "compiler/rustc_mir/src/interpret/eval_context.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b98d6228dbf818ba68c9d99ccd77b0204e9735e8/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98d6228dbf818ba68c9d99ccd77b0204e9735e8/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Feval_context.rs?ref=b98d6228dbf818ba68c9d99ccd77b0204e9735e8", "patch": "@@ -138,7 +138,9 @@ pub struct FrameInfo<'tcx> {\n #[derive(Clone, Copy, Eq, PartialEq, Debug, HashStable)]\n pub enum StackPopUnwind {\n     /// The cleanup block.\n-    Cleanup(Option<mir::BasicBlock>),\n+    Cleanup(mir::BasicBlock),\n+    /// No cleanup needs to be done.\n+    Skip,\n     /// Unwinding is not allowed (UB).\n     NotAllowed,\n }\n@@ -820,7 +822,8 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n             (StackPopCleanup::Goto { unwind, .. }, true) => (\n                 true,\n                 Some(match unwind {\n-                    StackPopUnwind::Cleanup(unwind) => unwind,\n+                    StackPopUnwind::Cleanup(unwind) => Some(unwind),\n+                    StackPopUnwind::Skip => None,\n                     StackPopUnwind::NotAllowed => {\n                         throw_ub_format!(\"unwind past a frame that does not allow unwinding\")\n                     }"}, {"sha": "27b2716c5bd619451dbcebce7fdbf444eb14a87a", "filename": "compiler/rustc_mir/src/interpret/terminator.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b98d6228dbf818ba68c9d99ccd77b0204e9735e8/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fterminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98d6228dbf818ba68c9d99ccd77b0204e9735e8/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fterminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fterminator.rs?ref=b98d6228dbf818ba68c9d99ccd77b0204e9735e8", "patch": "@@ -316,10 +316,10 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                     ret.map(|p| p.0),\n                     StackPopCleanup::Goto {\n                         ret: ret.map(|p| p.1),\n-                        unwind: if can_unwind {\n-                            StackPopUnwind::Cleanup(unwind)\n-                        } else {\n-                            StackPopUnwind::NotAllowed\n+                        unwind: match (unwind, can_unwind) {\n+                            (Some(unwind), true) => StackPopUnwind::Cleanup(unwind),\n+                            (None, true) => StackPopUnwind::Skip,\n+                            (_, false) => StackPopUnwind::NotAllowed,\n                         },\n                     },\n                 )?;"}]}