{"sha": "317be6172af280ab0f8565f2fb5ffa2bcd3b2712", "node_id": "C_kwDOAAsO6NoAKDMxN2JlNjE3MmFmMjgwYWIwZjg1NjVmMmZiNWZmYTJiY2QzYjI3MTI", "commit": {"author": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2023-02-23T10:53:32Z"}, "committer": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2023-02-23T12:11:45Z"}, "message": "make --open work on all books", "tree": {"sha": "9f19135350ca875ec92cca475d7a442d8852c2bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f19135350ca875ec92cca475d7a442d8852c2bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/317be6172af280ab0f8565f2fb5ffa2bcd3b2712", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEMycKYjxLY0eb13b7zXazX3c0dp4FAmP3WAEACgkQzXazX3c0\ndp5Yqw/9H6+tSyPtlBJLtQnE6b5AEoARRs3DCkfojClRZc/apMn+eWEHMCArBQ8k\nkm3F4VPgxHyFxD6CWSQ9LF6f2ubPCxcEXmwUUMd7dAauGpq8+mYqxCghNFVMby+R\n7DtzQYnNXxpuZwmBI8DJ9UfQEkE46YBbkg6VdJbXVqfwDIx5RVfgsDlHTqGwRKxr\n1Bf5Pe4AQDIjQhfkxM+6D6UdX6bl8KDsHd0qYE+KbWAY02siuqITVjLVJ1ZM+yZc\nqf5tPRGIyKnBaFu2V/efiCeLa774gVvQPd95B+n2zugZO0ZEMtBIEoXln6oRZpWp\nrm5pUmRbxIw2pKEZ07ZhrP3A7KlRgrjANV8aAEbQAAbwQ+/kuvTmNi+v64FMs7oH\nmpFsRjJYIBvwCzW3QhPK68xmR0eylNGzP//d9AdC1qUl2WQ22YThm0EJ4IkwkQGv\nUuMe//gO6O14mxFtjuuByFLeKWH8RYYuJfixAHlqO7FqZHcRn+Muez7c6c/mD9Ii\nAuvcn7Oq7RSjjIX8WD/NcBnP11//5IOoyqaMU8L+h1mHoj+7YLL8TORmF8Dwl4k6\ncX1DD65q2tFPKqfWAy8to5I20lfj5UQa7ruQq2TY6cVVndNSgnWVeFx18/Al3tQP\n+m1HFDsX48tWzB/iFaEmPCXK/tYbs1yumB8+OM89B3CRdgSDIlo=\n=m4b/\n-----END PGP SIGNATURE-----", "payload": "tree 9f19135350ca875ec92cca475d7a442d8852c2bf\nparent eb909d81464900597b91f3bbf2a6bef10006c9ff\nauthor Pietro Albini <pietro.albini@ferrous-systems.com> 1677149612 +0100\ncommitter Pietro Albini <pietro.albini@ferrous-systems.com> 1677154305 +0100\n\nmake --open work on all books\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/317be6172af280ab0f8565f2fb5ffa2bcd3b2712", "html_url": "https://github.com/rust-lang/rust/commit/317be6172af280ab0f8565f2fb5ffa2bcd3b2712", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/317be6172af280ab0f8565f2fb5ffa2bcd3b2712/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb909d81464900597b91f3bbf2a6bef10006c9ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb909d81464900597b91f3bbf2a6bef10006c9ff", "html_url": "https://github.com/rust-lang/rust/commit/eb909d81464900597b91f3bbf2a6bef10006c9ff"}], "stats": {"total": 35, "additions": 20, "deletions": 15}, "files": [{"sha": "cc80763ef4495386f7d05f00b828f96a89a70c96", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 20, "deletions": 15, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/317be6172af280ab0f8565f2fb5ffa2bcd3b2712/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/317be6172af280ab0f8565f2fb5ffa2bcd3b2712/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=317be6172af280ab0f8565f2fb5ffa2bcd3b2712", "patch": "@@ -62,6 +62,7 @@ macro_rules! book {\n                     target: self.target,\n                     name: INTERNER.intern_str($book_name),\n                     src: INTERNER.intern_path(builder.src.join($path)),\n+                    parent: Some(self),\n                 })\n             }\n         }\n@@ -119,18 +120,20 @@ impl Step for UnstableBook {\n             target: self.target,\n             name: INTERNER.intern_str(\"unstable-book\"),\n             src: INTERNER.intern_path(builder.md_doc_out(self.target).join(\"unstable-book\")),\n+            parent: Some(self),\n         })\n     }\n }\n \n #[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]\n-struct RustbookSrc {\n+struct RustbookSrc<P: Step> {\n     target: TargetSelection,\n     name: Interned<String>,\n     src: Interned<PathBuf>,\n+    parent: Option<P>,\n }\n \n-impl Step for RustbookSrc {\n+impl<P: Step> Step for RustbookSrc<P> {\n     type Output = ();\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n@@ -152,13 +155,18 @@ impl Step for RustbookSrc {\n         let index = out.join(\"index.html\");\n         let rustbook = builder.tool_exe(Tool::Rustbook);\n         let mut rustbook_cmd = builder.tool_cmd(Tool::Rustbook);\n-        if builder.config.dry_run() || up_to_date(&src, &index) && up_to_date(&rustbook, &index) {\n-            return;\n+\n+        if !builder.config.dry_run() && !(up_to_date(&src, &index) || up_to_date(&rustbook, &index))\n+        {\n+            builder.info(&format!(\"Rustbook ({}) - {}\", target, name));\n+            let _ = fs::remove_dir_all(&out);\n+\n+            builder.run(rustbook_cmd.arg(\"build\").arg(&src).arg(\"-d\").arg(out));\n         }\n-        builder.info(&format!(\"Rustbook ({}) - {}\", target, name));\n-        let _ = fs::remove_dir_all(&out);\n \n-        builder.run(rustbook_cmd.arg(\"build\").arg(&src).arg(\"-d\").arg(out));\n+        if self.parent.is_some() {\n+            builder.maybe_open_in_browser::<P>(index)\n+        }\n     }\n }\n \n@@ -205,6 +213,7 @@ impl Step for TheBook {\n             target,\n             name: INTERNER.intern_str(\"book\"),\n             src: INTERNER.intern_path(builder.src.join(&relative_path)),\n+            parent: Some(self),\n         });\n \n         // building older edition redirects\n@@ -213,6 +222,9 @@ impl Step for TheBook {\n                 target,\n                 name: INTERNER.intern_string(format!(\"book/{}\", edition)),\n                 src: INTERNER.intern_path(builder.src.join(&relative_path).join(edition)),\n+                // There should only be one book that is marked as the parent for each target, so\n+                // treat the other editions as not having a parent.\n+                parent: Option::<Self>::None,\n             });\n         }\n \n@@ -228,10 +240,6 @@ impl Step for TheBook {\n \n             invoke_rustdoc(builder, compiler, &shared_assets, target, path);\n         }\n-\n-        let out = builder.doc_out(target);\n-        let index = out.join(\"book\").join(\"index.html\");\n-        builder.maybe_open_in_browser::<Self>(index);\n     }\n }\n \n@@ -1032,10 +1040,7 @@ impl Step for RustcBook {\n             target: self.target,\n             name: INTERNER.intern_str(\"rustc\"),\n             src: INTERNER.intern_path(out_base),\n+            parent: Some(self),\n         });\n-\n-        let out = builder.doc_out(self.target);\n-        let index = out.join(\"rustc\").join(\"index.html\");\n-        builder.maybe_open_in_browser::<Self>(index);\n     }\n }"}]}