{"sha": "0465d5217d7268aed71d1cc99bf025ee1fe748b5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0NjVkNTIxN2Q3MjY4YWVkNzFkMWNjOTliZjAyNWVlMWZlNzQ4YjU=", "commit": {"author": {"name": "Tycho Sci", "email": "tychosci@gmail.com", "date": "2012-02-29T07:14:43Z"}, "committer": {"name": "Tycho Sci", "email": "tychosci@gmail.com", "date": "2012-02-29T07:24:28Z"}, "message": "libstd: Skip trailing whitespaces after outer rparen\n\nThis makes \"{ \\\"foo\\\": 1 }\\n\" and \"[ 1 ]\\n\" valid json string", "tree": {"sha": "3f9b414d0a1eebbdffd26b0187af012ff500a00d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f9b414d0a1eebbdffd26b0187af012ff500a00d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0465d5217d7268aed71d1cc99bf025ee1fe748b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0465d5217d7268aed71d1cc99bf025ee1fe748b5", "html_url": "https://github.com/rust-lang/rust/commit/0465d5217d7268aed71d1cc99bf025ee1fe748b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0465d5217d7268aed71d1cc99bf025ee1fe748b5/comments", "author": {"login": "tychosci", "id": 1026254, "node_id": "MDQ6VXNlcjEwMjYyNTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1026254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tychosci", "html_url": "https://github.com/tychosci", "followers_url": "https://api.github.com/users/tychosci/followers", "following_url": "https://api.github.com/users/tychosci/following{/other_user}", "gists_url": "https://api.github.com/users/tychosci/gists{/gist_id}", "starred_url": "https://api.github.com/users/tychosci/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tychosci/subscriptions", "organizations_url": "https://api.github.com/users/tychosci/orgs", "repos_url": "https://api.github.com/users/tychosci/repos", "events_url": "https://api.github.com/users/tychosci/events{/privacy}", "received_events_url": "https://api.github.com/users/tychosci/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tychosci", "id": 1026254, "node_id": "MDQ6VXNlcjEwMjYyNTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1026254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tychosci", "html_url": "https://github.com/tychosci", "followers_url": "https://api.github.com/users/tychosci/followers", "following_url": "https://api.github.com/users/tychosci/following{/other_user}", "gists_url": "https://api.github.com/users/tychosci/gists{/gist_id}", "starred_url": "https://api.github.com/users/tychosci/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tychosci/subscriptions", "organizations_url": "https://api.github.com/users/tychosci/orgs", "repos_url": "https://api.github.com/users/tychosci/repos", "events_url": "https://api.github.com/users/tychosci/events{/privacy}", "received_events_url": "https://api.github.com/users/tychosci/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cccb0fbf72389758d6a2880ebd613a53bbf59bf1", "url": "https://api.github.com/repos/rust-lang/rust/commits/cccb0fbf72389758d6a2880ebd613a53bbf59bf1", "html_url": "https://github.com/rust-lang/rust/commit/cccb0fbf72389758d6a2880ebd613a53bbf59bf1"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "891cea9937861e433be84780c03399a8241959c9", "filename": "src/libstd/json.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0465d5217d7268aed71d1cc99bf025ee1fe748b5/src%2Flibstd%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0465d5217d7268aed71d1cc99bf025ee1fe748b5/src%2Flibstd%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fjson.rs?ref=0465d5217d7268aed71d1cc99bf025ee1fe748b5", "patch": "@@ -392,6 +392,7 @@ impl parser for parser {\n \n         if self.ch == ']' {\n             self.bump();\n+            self.parse_whitespace();\n             ret ok(list(values));\n         }\n \n@@ -406,7 +407,11 @@ impl parser for parser {\n \n             alt self.ch {\n               ',' { self.bump(); }\n-              ']' { self.bump(); ret ok(list(values)); }\n+              ']' {\n+                  self.bump();\n+                  self.parse_whitespace();\n+                  ret ok(list(values));\n+              }\n               _ { ret self.error(\"expecting ',' or ']'\"); }\n             }\n         }\n@@ -422,6 +427,7 @@ impl parser for parser {\n \n         if self.ch == '}' {\n           self.bump();\n+          self.parse_whitespace();\n           ret ok(dict(values));\n         }\n \n@@ -453,7 +459,11 @@ impl parser for parser {\n \n             alt self.ch {\n               ',' { self.bump(); }\n-              '}' { self.bump(); ret ok(dict(values)); }\n+              '}' {\n+                  self.bump();\n+                  self.parse_whitespace();\n+                  ret ok(dict(values));\n+              }\n               _ {\n                   if self.eof() { break; }\n                   ret self.error(\"expecting ',' or '}'\");\n@@ -691,6 +701,7 @@ mod tests {\n         assert from_str(\"[ false ]\") == ok(list([boolean(false)]));\n         assert from_str(\"[null]\") == ok(list([null]));\n         assert from_str(\"[3, 1]\") == ok(list([num(3f), num(1f)]));\n+        assert from_str(\"\\n[3, 2]\\n\") == ok(list([num(3f), num(2f)]));\n         assert from_str(\"[2, [4, 1]]\") ==\n                ok(list([num(2f), list([num(4f), num(1f)])]));\n     }\n@@ -727,6 +738,8 @@ mod tests {\n \n         assert eq(result::get(from_str(\"{ \\\"a\\\": null, \\\"b\\\" : true }\")),\n                   mk_dict([(\"a\", null), (\"b\", boolean(true))]));\n+        assert eq(result::get(from_str(\"\\n{ \\\"a\\\": null, \\\"b\\\" : true }\\n\")),\n+                  mk_dict([(\"a\", null), (\"b\", boolean(true))]));\n         assert eq(result::get(from_str(\"{\\\"a\\\" : 1.0 ,\\\"b\\\": [ true ]}\")),\n                   mk_dict([\n                       (\"a\", num(1.0)),"}]}