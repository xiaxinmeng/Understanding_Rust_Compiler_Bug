{"sha": "ad5c0d49ffb271608e1e3ddbf0898d7005601cd6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkNWMwZDQ5ZmZiMjcxNjA4ZTFlM2RkYmYwODk4ZDcwMDU2MDFjZDY=", "commit": {"author": {"name": "Tinco Andringa", "email": "mail@tinco.nl", "date": "2018-09-10T13:19:27Z"}, "committer": {"name": "Tinco Andringa", "email": "mail@tinco.nl", "date": "2018-09-10T13:19:27Z"}, "message": "reintroduce inline to libsyntax test", "tree": {"sha": "9efff1fe9981e4dd6b2f6f1d8e6f47937f0ca7f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9efff1fe9981e4dd6b2f6f1d8e6f47937f0ca7f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad5c0d49ffb271608e1e3ddbf0898d7005601cd6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad5c0d49ffb271608e1e3ddbf0898d7005601cd6", "html_url": "https://github.com/rust-lang/rust/commit/ad5c0d49ffb271608e1e3ddbf0898d7005601cd6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad5c0d49ffb271608e1e3ddbf0898d7005601cd6/comments", "author": {"login": "tinco", "id": 22532, "node_id": "MDQ6VXNlcjIyNTMy", "avatar_url": "https://avatars.githubusercontent.com/u/22532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tinco", "html_url": "https://github.com/tinco", "followers_url": "https://api.github.com/users/tinco/followers", "following_url": "https://api.github.com/users/tinco/following{/other_user}", "gists_url": "https://api.github.com/users/tinco/gists{/gist_id}", "starred_url": "https://api.github.com/users/tinco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tinco/subscriptions", "organizations_url": "https://api.github.com/users/tinco/orgs", "repos_url": "https://api.github.com/users/tinco/repos", "events_url": "https://api.github.com/users/tinco/events{/privacy}", "received_events_url": "https://api.github.com/users/tinco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tinco", "id": 22532, "node_id": "MDQ6VXNlcjIyNTMy", "avatar_url": "https://avatars.githubusercontent.com/u/22532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tinco", "html_url": "https://github.com/tinco", "followers_url": "https://api.github.com/users/tinco/followers", "following_url": "https://api.github.com/users/tinco/following{/other_user}", "gists_url": "https://api.github.com/users/tinco/gists{/gist_id}", "starred_url": "https://api.github.com/users/tinco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tinco/subscriptions", "organizations_url": "https://api.github.com/users/tinco/orgs", "repos_url": "https://api.github.com/users/tinco/repos", "events_url": "https://api.github.com/users/tinco/events{/privacy}", "received_events_url": "https://api.github.com/users/tinco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "518bcffa317db45e437a5e425fb3d7f29e6cab0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/518bcffa317db45e437a5e425fb3d7f29e6cab0c", "html_url": "https://github.com/rust-lang/rust/commit/518bcffa317db45e437a5e425fb3d7f29e6cab0c"}], "stats": {"total": 55, "additions": 1, "deletions": 54}, "files": [{"sha": "c0c03b46ec70495a84c8848e604183890325d18e", "filename": "src/libsyntax/test.rs", "status": "modified", "additions": 1, "deletions": 54, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/ad5c0d49ffb271608e1e3ddbf0898d7005601cd6/src%2Flibsyntax%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad5c0d49ffb271608e1e3ddbf0898d7005601cd6/src%2Flibsyntax%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftest.rs?ref=ad5c0d49ffb271608e1e3ddbf0898d7005601cd6", "patch": "@@ -238,9 +238,9 @@ fn mk_reexport_mod(cx: &mut TestCtxt,\n     })).collect();\n \n     let reexport_mod = ast::Mod {\n+        inline: true,\n         inner: DUMMY_SP,\n         items,\n-        inline: true,\n     };\n \n     let sym = Ident::with_empty_ctxt(Symbol::gensym(\"__test_reexports\"));\n@@ -393,59 +393,6 @@ fn mk_main(cx: &mut TestCtxt) -> P<ast::Item> {\n         tokens: None,\n     })\n \n-    let testmod = ast::Mod {\n-        inner: DUMMY_SP,\n-        items: vec![import, mainfn, tests],\n-        inline: true,\n-    };\n-    let item_ = ast::ItemKind::Mod(testmod);\n-    let mod_ident = Ident::with_empty_ctxt(Symbol::gensym(\"__test\"));\n-\n-    let mut expander = cx.ext_cx.monotonic_expander();\n-    let item = expander.fold_item(P(ast::Item {\n-        id: ast::DUMMY_NODE_ID,\n-        ident: mod_ident,\n-        attrs: vec![],\n-        node: item_,\n-        vis: dummy_spanned(ast::VisibilityKind::Public),\n-        span: DUMMY_SP,\n-        tokens: None,\n-    })).pop().unwrap();\n-    let reexport = cx.reexport_test_harness_main.map(|s| {\n-        // building `use __test::main as <ident>;`\n-        let rename = Ident::with_empty_ctxt(s);\n-\n-        let use_path = ast::UseTree {\n-            span: DUMMY_SP,\n-            prefix: path_node(vec![mod_ident, Ident::from_str(\"main\")]),\n-            kind: ast::UseTreeKind::Simple(Some(rename), ast::DUMMY_NODE_ID, ast::DUMMY_NODE_ID),\n-        };\n-\n-        expander.fold_item(P(ast::Item {\n-            id: ast::DUMMY_NODE_ID,\n-            ident: keywords::Invalid.ident(),\n-            attrs: vec![],\n-            node: ast::ItemKind::Use(P(use_path)),\n-            vis: dummy_spanned(ast::VisibilityKind::Inherited),\n-            span: DUMMY_SP,\n-            tokens: None,\n-        })).pop().unwrap()\n-    });\n-\n-    debug!(\"Synthetic test module:\\n{}\\n\", pprust::item_to_string(&item));\n-\n-    (item, reexport)\n-}\n-\n-fn nospan<T>(t: T) -> codemap::Spanned<T> {\n-    codemap::Spanned { node: t, span: DUMMY_SP }\n-}\n-\n-fn path_node(ids: Vec<Ident>) -> ast::Path {\n-    ast::Path {\n-        span: DUMMY_SP,\n-        segments: ids.into_iter().map(|id| ast::PathSegment::from_ident(id)).collect(),\n-    }\n }\n \n fn path_name_i(idents: &[Ident]) -> String {"}]}