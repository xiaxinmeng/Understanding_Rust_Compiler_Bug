{"sha": "19401086df0d27bc3462addc3783595b86638514", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5NDAxMDg2ZGYwZDI3YmMzNDYyYWRkYzM3ODM1OTViODY2Mzg1MTQ=", "commit": {"author": {"name": "Pramod Bisht", "email": "pramodpsb@outlook.com", "date": "2018-08-05T18:44:03Z"}, "committer": {"name": "Pramod Bisht", "email": "pramodpsb@outlook.com", "date": "2018-08-05T18:44:03Z"}, "message": "Closes #52413: Provide structured suggestion instead of label", "tree": {"sha": "b0b3bc956842196adfa910f4e781055f6adfa637", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0b3bc956842196adfa910f4e781055f6adfa637"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19401086df0d27bc3462addc3783595b86638514", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19401086df0d27bc3462addc3783595b86638514", "html_url": "https://github.com/rust-lang/rust/commit/19401086df0d27bc3462addc3783595b86638514", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19401086df0d27bc3462addc3783595b86638514/comments", "author": {"login": "PramodBisht", "id": 2766842, "node_id": "MDQ6VXNlcjI3NjY4NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2766842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PramodBisht", "html_url": "https://github.com/PramodBisht", "followers_url": "https://api.github.com/users/PramodBisht/followers", "following_url": "https://api.github.com/users/PramodBisht/following{/other_user}", "gists_url": "https://api.github.com/users/PramodBisht/gists{/gist_id}", "starred_url": "https://api.github.com/users/PramodBisht/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PramodBisht/subscriptions", "organizations_url": "https://api.github.com/users/PramodBisht/orgs", "repos_url": "https://api.github.com/users/PramodBisht/repos", "events_url": "https://api.github.com/users/PramodBisht/events{/privacy}", "received_events_url": "https://api.github.com/users/PramodBisht/received_events", "type": "User", "site_admin": false}, "committer": {"login": "PramodBisht", "id": 2766842, "node_id": "MDQ6VXNlcjI3NjY4NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2766842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PramodBisht", "html_url": "https://github.com/PramodBisht", "followers_url": "https://api.github.com/users/PramodBisht/followers", "following_url": "https://api.github.com/users/PramodBisht/following{/other_user}", "gists_url": "https://api.github.com/users/PramodBisht/gists{/gist_id}", "starred_url": "https://api.github.com/users/PramodBisht/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PramodBisht/subscriptions", "organizations_url": "https://api.github.com/users/PramodBisht/orgs", "repos_url": "https://api.github.com/users/PramodBisht/repos", "events_url": "https://api.github.com/users/PramodBisht/events{/privacy}", "received_events_url": "https://api.github.com/users/PramodBisht/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f9ac89d11a2afaeaa029738b38142124684c89b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f9ac89d11a2afaeaa029738b38142124684c89b", "html_url": "https://github.com/rust-lang/rust/commit/9f9ac89d11a2afaeaa029738b38142124684c89b"}], "stats": {"total": 110, "additions": 59, "deletions": 51}, "files": [{"sha": "00b077128221c1dd0df486ef8e37740f1c294f28", "filename": "src/librustc/infer/error_reporting/nice_region_error/named_anon_conflict.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fnamed_anon_conflict.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fnamed_anon_conflict.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fnamed_anon_conflict.rs?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -65,9 +65,10 @@ impl<'a, 'gcx, 'tcx> NiceRegionError<'a, 'gcx, 'tcx> {\n             region_info\n         );\n \n-        let (arg, new_ty, br, is_first, scope_def_id, is_impl_item) = (\n+        let (arg, new_ty, new_ty_span, br, is_first, scope_def_id, is_impl_item) = (\n             anon_arg_info.arg,\n             anon_arg_info.arg_ty,\n+            anon_arg_info.arg_ty_span,\n             anon_arg_info.bound_region,\n             anon_arg_info.is_first,\n             region_info.def_id,\n@@ -110,9 +111,10 @@ impl<'a, 'gcx, 'tcx> NiceRegionError<'a, 'gcx, 'tcx> {\n             E0621,\n             \"explicit lifetime required in {}\",\n             error_var\n-        ).span_label(\n-            arg.pat.span,\n-            format!(\"consider changing {} to `{}`\", span_label_var, new_ty),\n+        ).span_suggestion(\n+            new_ty_span,\n+            &format!(\"consider changing {} to \", span_label_var),\n+            new_ty.to_string()\n         )\n             .span_label(span, format!(\"lifetime `{}` required\", named))\n             .emit();"}, {"sha": "28320ce3ad1ba8392e4805952c0d591209fc2ac9", "filename": "src/librustc/infer/error_reporting/nice_region_error/util.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Futil.rs?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -27,6 +27,8 @@ pub(super) struct AnonymousArgInfo<'tcx> {\n     pub arg_ty: Ty<'tcx>,\n     // the ty::BoundRegion corresponding to the anonymous region\n     pub bound_region: ty::BoundRegion,\n+    // arg_ty_span contains span of argument type\n+    pub arg_ty_span : Span,\n     // corresponds to id the argument is the first parameter\n     // in the declaration\n     pub is_first: bool,\n@@ -74,12 +76,16 @@ impl<'a, 'gcx, 'tcx> NiceRegionError<'a, 'gcx, 'tcx> {\n         if let Some(node_id) = hir.as_local_node_id(id) {\n             if let Some(body_id) = hir.maybe_body_owned_by(node_id) {\n                 let body = hir.body(body_id);\n+                let owner_id = hir.body_owner(body_id);\n+                let fn_decl = hir.fn_decl(owner_id).unwrap();\n                 if let Some(tables) = self.tables {\n                     body.arguments\n                         .iter()\n                         .enumerate()\n                         .filter_map(|(index, arg)| {\n                             // May return None; sometimes the tables are not yet populated.\n+                            let ty_hir_id = fn_decl.inputs[index].hir_id;\n+                            let arg_ty_span = hir.span(hir.hir_to_node_id(ty_hir_id));\n                             let ty = tables.node_id_to_type_opt(arg.hir_id)?;\n                             let mut found_anon_region = false;\n                             let new_arg_ty = self.tcx.fold_regions(&ty, &mut false, |r, _| {\n@@ -95,6 +101,7 @@ impl<'a, 'gcx, 'tcx> NiceRegionError<'a, 'gcx, 'tcx> {\n                                 Some(AnonymousArgInfo {\n                                     arg: arg,\n                                     arg_ty: new_arg_ty,\n+                                    arg_ty_span : arg_ty_span,\n                                     bound_region: bound_region,\n                                     is_first: is_first,\n                                 })"}, {"sha": "8da86d0879919c76ce2225f5febafbf783e57a6a", "filename": "src/test/ui/in-band-lifetimes/mismatched.nll.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched.nll.stderr?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -14,9 +14,9 @@ error[E0621]: explicit lifetime required in the type of `y`\n   --> $DIR/mismatched.rs:14:42\n    |\n LL | fn foo(x: &'a u32, y: &u32) -> &'a u32 { y } //~ ERROR explicit lifetime required\n-   |                    -                     ^ lifetime `'a` required\n-   |                    |\n-   |                    consider changing the type of `y` to `&'a u32`\n+   |                       ----               ^ lifetime `'a` required\n+   |                       |\n+   |                       help: consider changing the type of `y` to : `&'a u32`\n \n error[E0623]: lifetime mismatch\n   --> $DIR/mismatched.rs:16:46"}, {"sha": "d062b6941f85f9f8f9a27a3ba25f9187c6a5e703", "filename": "src/test/ui/in-band-lifetimes/mismatched.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched.stderr?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -2,9 +2,9 @@ error[E0621]: explicit lifetime required in the type of `y`\n   --> $DIR/mismatched.rs:14:42\n    |\n LL | fn foo(x: &'a u32, y: &u32) -> &'a u32 { y } //~ ERROR explicit lifetime required\n-   |                    -                     ^ lifetime `'a` required\n-   |                    |\n-   |                    consider changing the type of `y` to `&'a u32`\n+   |                       ----               ^ lifetime `'a` required\n+   |                       |\n+   |                       help: consider changing the type of `y` to : `&'a u32`\n \n error[E0623]: lifetime mismatch\n   --> $DIR/mismatched.rs:16:46"}, {"sha": "e663bf5a1521403bdeca0e62d4aaff26c99f1e28", "filename": "src/test/ui/in-band-lifetimes/mismatched_trait.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched_trait.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched_trait.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched_trait.nll.stderr?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -8,7 +8,7 @@ error[E0621]: explicit lifetime required in the type of `y`\n   --> $DIR/mismatched_trait.rs:16:9\n    |\n LL |     fn baz(&self, x: &'a u32, y: &u32) -> &'a u32 {\n-   |                               - consider changing the type of `y` to `&'a u32`\n+   |                                  ---- help: consider changing the type of `y` to : `&'a u32`\n LL |         y //~ ERROR explicit lifetime required\n    |         ^ lifetime `'a` required\n "}, {"sha": "01cf9bff2a89a843051f1d2271f906dee003a085", "filename": "src/test/ui/in-band-lifetimes/mismatched_trait.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched_trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched_trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched_trait.stderr?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -2,7 +2,7 @@ error[E0621]: explicit lifetime required in the type of `y`\n   --> $DIR/mismatched_trait.rs:16:9\n    |\n LL |     fn baz(&self, x: &'a u32, y: &u32) -> &'a u32 {\n-   |                               - consider changing the type of `y` to `&'a u32`\n+   |                                  ---- help: consider changing the type of `y` to : `&'a u32`\n LL |         y //~ ERROR explicit lifetime required\n    |         ^ lifetime `'a` required\n "}, {"sha": "2f954f2bbcf7f093dca22cc4292aa573620181f5", "filename": "src/test/ui/issue-13058.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Fissue-13058.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Fissue-13058.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-13058.stderr?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -2,7 +2,7 @@ error[E0621]: explicit lifetime required in the type of `cont`\n   --> $DIR/issue-13058.rs:24:26\n    |\n LL | fn check<'r, I: Iterator<Item=usize>, T: Itble<'r, usize, I>>(cont: &T) -> bool\n-   |                                                               ---- consider changing the type of `cont` to `&'r T`\n+   |                                                                     -- help: consider changing the type of `cont` to : `&'r T`\n LL | {\n LL |     let cont_iter = cont.iter();\n    |                          ^^^^ lifetime `'r` required"}, {"sha": "8affc3b04b540d3946ff54a511161fe123cd6b1c", "filename": "src/test/ui/issue-14285.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Fissue-14285.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Fissue-14285.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-14285.nll.stderr?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -8,7 +8,7 @@ error[E0621]: explicit lifetime required in the type of `a`\n   --> $DIR/issue-14285.rs:22:7\n    |\n LL | fn foo<'a>(a: &Foo) -> B<'a> {\n-   |            - consider changing the type of `a` to `&'a (dyn Foo + 'a)`\n+   |               ---- help: consider changing the type of `a` to : `&'a (dyn Foo + 'a)`\n LL |     B(a)    //~ ERROR 22:5: 22:9: explicit lifetime required in the type of `a` [E0621]\n    |       ^ lifetime `'a` required\n "}, {"sha": "169c93cc389e244e98370a15f1a5eb9541e6432a", "filename": "src/test/ui/issue-14285.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Fissue-14285.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Fissue-14285.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-14285.stderr?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -2,7 +2,7 @@ error[E0621]: explicit lifetime required in the type of `a`\n   --> $DIR/issue-14285.rs:22:5\n    |\n LL | fn foo<'a>(a: &Foo) -> B<'a> {\n-   |            - consider changing the type of `a` to `&'a (dyn Foo + 'a)`\n+   |               ---- help: consider changing the type of `a` to : `&'a (dyn Foo + 'a)`\n LL |     B(a)    //~ ERROR 22:5: 22:9: explicit lifetime required in the type of `a` [E0621]\n    |     ^^^^ lifetime `'a` required\n "}, {"sha": "1f0fe68e2a315116cd341e7b1e419b50afd6b76a", "filename": "src/test/ui/issue-15034.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Fissue-15034.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Fissue-15034.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-15034.nll.stderr?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -8,7 +8,7 @@ error[E0621]: explicit lifetime required in the type of `lexer`\n   --> $DIR/issue-15034.rs:27:25\n    |\n LL |     pub fn new(lexer: &'a mut Lexer) -> Parser<'a> {\n-   |                ----- consider changing the type of `lexer` to `&'a mut Lexer<'a>`\n+   |                       ------------- help: consider changing the type of `lexer` to : `&'a mut Lexer<'a>`\n LL |         Parser { lexer: lexer }\n    |                         ^^^^^ lifetime `'a` required\n "}, {"sha": "bb0053d7aa8be0a95bc13f6fb5bd16e6bd9be7e9", "filename": "src/test/ui/issue-15034.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Fissue-15034.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Fissue-15034.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-15034.stderr?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -2,7 +2,7 @@ error[E0621]: explicit lifetime required in the type of `lexer`\n   --> $DIR/issue-15034.rs:27:25\n    |\n LL |     pub fn new(lexer: &'a mut Lexer) -> Parser<'a> {\n-   |                ----- consider changing the type of `lexer` to `&'a mut Lexer<'a>`\n+   |                       ------------- help: consider changing the type of `lexer` to : `&'a mut Lexer<'a>`\n LL |         Parser { lexer: lexer }\n    |                         ^^^^^ lifetime `'a` required\n "}, {"sha": "d8926fd2cf5040a7b6f55110478dc4d2d5176e39", "filename": "src/test/ui/issue-16922.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Fissue-16922.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Fissue-16922.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-16922.nll.stderr?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -8,7 +8,7 @@ error[E0621]: explicit lifetime required in the type of `value`\n   --> $DIR/issue-16922.rs:14:5\n    |\n LL | fn foo<T: Any>(value: &T) -> Box<Any> {\n-   |                ----- consider changing the type of `value` to `&'static T`\n+   |                       -- help: consider changing the type of `value` to : `&'static T`\n LL |     Box::new(value) as Box<Any>\n    |     ^^^^^^^^^^^^^^^ lifetime `'static` required\n "}, {"sha": "2f84fb7842f8e97da47424997802412a7a719d08", "filename": "src/test/ui/issue-16922.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Fissue-16922.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Fissue-16922.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-16922.stderr?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -2,7 +2,7 @@ error[E0621]: explicit lifetime required in the type of `value`\n   --> $DIR/issue-16922.rs:14:5\n    |\n LL | fn foo<T: Any>(value: &T) -> Box<Any> {\n-   |                ----- consider changing the type of `value` to `&'static T`\n+   |                       -- help: consider changing the type of `value` to : `&'static T`\n LL |     Box::new(value) as Box<Any>\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ lifetime `'static` required\n "}, {"sha": "9cad0aabc93c7bdee1ae199e8859d6b5fddc5268", "filename": "src/test/ui/issue-3154.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Fissue-3154.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Fissue-3154.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-3154.nll.stderr?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -14,7 +14,7 @@ error[E0621]: explicit lifetime required in the type of `x`\n   --> $DIR/issue-3154.rs:16:15\n    |\n LL | fn thing<'a,Q>(x: &Q) -> thing<'a,Q> {\n-   |                - consider changing the type of `x` to `&'a Q`\n+   |                   -- help: consider changing the type of `x` to : `&'a Q`\n LL |     thing{ x: x } //~ ERROR 16:5: 16:18: explicit lifetime required in the type of `x` [E0621]\n    |               ^ lifetime `'a` required\n "}, {"sha": "5b5bc669c45c488addc26284576faa48d7fec511", "filename": "src/test/ui/issue-3154.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Fissue-3154.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Fissue-3154.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-3154.stderr?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -2,7 +2,7 @@ error[E0621]: explicit lifetime required in the type of `x`\n   --> $DIR/issue-3154.rs:16:5\n    |\n LL | fn thing<'a,Q>(x: &Q) -> thing<'a,Q> {\n-   |                - consider changing the type of `x` to `&'a Q`\n+   |                   -- help: consider changing the type of `x` to : `&'a Q`\n LL |     thing{ x: x } //~ ERROR 16:5: 16:18: explicit lifetime required in the type of `x` [E0621]\n    |     ^^^^^^^^^^^^^ lifetime `'a` required\n "}, {"sha": "4a78d2a005726df421a29d7b5096302faad1f8ef", "filename": "src/test/ui/issue-40288-2.nll.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Fissue-40288-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Fissue-40288-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-40288-2.nll.stderr?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -38,7 +38,7 @@ error[E0621]: explicit lifetime required in the type of `y`\n   --> $DIR/issue-40288-2.rs:17:9\n    |\n LL | fn lifetime_transmute_slice<'a, T: ?Sized>(x: &'a T, y: &T) -> &'a T {\n-   |                                                      - consider changing the type of `y` to `&'a T`\n+   |                                                         -- help: consider changing the type of `y` to : `&'a T`\n ...\n LL |         slice[0] = y;\n    |         ^^^^^^^^^^^^ lifetime `'a` required\n@@ -47,7 +47,7 @@ error[E0621]: explicit lifetime required in the type of `y`\n   --> $DIR/issue-40288-2.rs:32:9\n    |\n LL | fn lifetime_transmute_struct<'a, T: ?Sized>(x: &'a T, y: &T) -> &'a T {\n-   |                                                       - consider changing the type of `y` to `&'a T`\n+   |                                                          -- help: consider changing the type of `y` to : `&'a T`\n ...\n LL |         dst.head = y;\n    |         ^^^^^^^^^^^^ lifetime `'a` required"}, {"sha": "6cf7ddc57987f4b5ad96a7752b047c24909fc1bc", "filename": "src/test/ui/issue-40288-2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Fissue-40288-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Fissue-40288-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-40288-2.stderr?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -2,7 +2,7 @@ error[E0621]: explicit lifetime required in the type of `y`\n   --> $DIR/issue-40288-2.rs:19:5\n    |\n LL | fn lifetime_transmute_slice<'a, T: ?Sized>(x: &'a T, y: &T) -> &'a T {\n-   |                                                      - consider changing the type of `y` to `&'a T`\n+   |                                                         -- help: consider changing the type of `y` to : `&'a T`\n ...\n LL |     out[0]\n    |     ^^^^^^ lifetime `'a` required\n@@ -11,7 +11,7 @@ error[E0621]: explicit lifetime required in the type of `y`\n   --> $DIR/issue-40288-2.rs:34:5\n    |\n LL | fn lifetime_transmute_struct<'a, T: ?Sized>(x: &'a T, y: &T) -> &'a T {\n-   |                                                       - consider changing the type of `y` to `&'a T`\n+   |                                                          -- help: consider changing the type of `y` to : `&'a T`\n ...\n LL |     out.head\n    |     ^^^^^^^^ lifetime `'a` required"}, {"sha": "53fcdd71eb16e526f85dc77ac39f9755316cfdff", "filename": "src/test/ui/issue-46983.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Fissue-46983.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Fissue-46983.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-46983.stderr?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -2,7 +2,7 @@ error[E0621]: explicit lifetime required in the type of `x`\n   --> $DIR/issue-46983.rs:14:5\n    |\n LL | fn foo(x: &u32) -> &'static u32 {\n-   |        - consider changing the type of `x` to `&'static u32`\n+   |           ---- help: consider changing the type of `x` to : `&'static u32`\n LL |     &*x\n    |     ^^^ lifetime `'static` required\n "}, {"sha": "bec5fb2f72ac70a7dbacc5ebefd080f8560121b5", "filename": "src/test/ui/lifetime-errors/42701_one_named_and_one_anonymous.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Flifetime-errors%2F42701_one_named_and_one_anonymous.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Flifetime-errors%2F42701_one_named_and_one_anonymous.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2F42701_one_named_and_one_anonymous.nll.stderr?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -8,7 +8,7 @@ error[E0621]: explicit lifetime required in the type of `x`\n   --> $DIR/42701_one_named_and_one_anonymous.rs:16:5\n    |\n LL |   fn foo2<'a>(a: &'a Foo, x: &i32) -> &'a i32 {\n-   |                           - consider changing the type of `x` to `&'a i32`\n+   |                              ---- help: consider changing the type of `x` to : `&'a i32`\n LL | /     if true {\n LL | |         let p: &i32 = &a.field;\n LL | |         &*p"}, {"sha": "b23025ee1275ec1259511a20e56c7bbc935e6708", "filename": "src/test/ui/lifetime-errors/42701_one_named_and_one_anonymous.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Flifetime-errors%2F42701_one_named_and_one_anonymous.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Flifetime-errors%2F42701_one_named_and_one_anonymous.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2F42701_one_named_and_one_anonymous.stderr?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -2,7 +2,7 @@ error[E0621]: explicit lifetime required in the type of `x`\n   --> $DIR/42701_one_named_and_one_anonymous.rs:20:9\n    |\n LL | fn foo2<'a>(a: &'a Foo, x: &i32) -> &'a i32 {\n-   |                         - consider changing the type of `x` to `&'a i32`\n+   |                            ---- help: consider changing the type of `x` to : `&'a i32`\n ...\n LL |         &*x //~ ERROR explicit lifetime\n    |         ^^^ lifetime `'a` required"}, {"sha": "9666e0112ac8b1ff82e0f6a35c25fd920b34b700", "filename": "src/test/ui/lifetime-errors/ex1-return-one-existing-name-early-bound-in-struct.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-early-bound-in-struct.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-early-bound-in-struct.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-early-bound-in-struct.nll.stderr?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -8,7 +8,7 @@ error[E0621]: explicit lifetime required in the type of `other`\n   --> $DIR/ex1-return-one-existing-name-early-bound-in-struct.rs:18:15\n    |\n LL |     fn bar(&self, other: Foo) -> Foo<'a> {\n-   |                   ----- consider changing the type of `other` to `Foo<'a>`\n+   |                          --- help: consider changing the type of `other` to : `Foo<'a>`\n LL |         match *self {\n    |               ^^^^^ lifetime `'a` required\n "}, {"sha": "0cce3d204ae8175d235fbaffe797e476fa22d186", "filename": "src/test/ui/lifetime-errors/ex1-return-one-existing-name-early-bound-in-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-early-bound-in-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-early-bound-in-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-early-bound-in-struct.stderr?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -2,7 +2,7 @@ error[E0621]: explicit lifetime required in the type of `other`\n   --> $DIR/ex1-return-one-existing-name-early-bound-in-struct.rs:21:21\n    |\n LL |     fn bar(&self, other: Foo) -> Foo<'a> {\n-   |                   ----- consider changing the type of `other` to `Foo<'a>`\n+   |                          --- help: consider changing the type of `other` to : `Foo<'a>`\n ...\n LL |                     other //~ ERROR explicit lifetime\n    |                     ^^^^^ lifetime `'a` required"}, {"sha": "667d8548c72f58558c849c887811991b87348e65", "filename": "src/test/ui/lifetime-errors/ex1-return-one-existing-name-if-else-2.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-2.nll.stderr?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -8,7 +8,7 @@ error[E0621]: explicit lifetime required in the type of `x`\n   --> $DIR/ex1-return-one-existing-name-if-else-2.rs:12:8\n    |\n LL | fn foo<'a>(x: &i32, y: &'a i32) -> &'a i32 {\n-   |            - consider changing the type of `x` to `&'a i32`\n+   |               ---- help: consider changing the type of `x` to : `&'a i32`\n LL |     if x > y { x } else { y } //~ ERROR explicit lifetime\n    |        ^^^^^ lifetime `'a` required\n "}, {"sha": "cfbfd5ac448fc0c962b4a3f66726026e9233739b", "filename": "src/test/ui/lifetime-errors/ex1-return-one-existing-name-if-else-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-2.stderr?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -2,7 +2,7 @@ error[E0621]: explicit lifetime required in the type of `x`\n   --> $DIR/ex1-return-one-existing-name-if-else-2.rs:12:16\n    |\n LL | fn foo<'a>(x: &i32, y: &'a i32) -> &'a i32 {\n-   |            - consider changing the type of `x` to `&'a i32`\n+   |               ---- help: consider changing the type of `x` to : `&'a i32`\n LL |     if x > y { x } else { y } //~ ERROR explicit lifetime\n    |                ^ lifetime `'a` required\n "}, {"sha": "3e79d3e44df1ece3f91e59a9143ca2fad6a88c77", "filename": "src/test/ui/lifetime-errors/ex1-return-one-existing-name-if-else-3.nll.stderr", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-3.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-3.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-3.nll.stderr?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -8,10 +8,9 @@ error[E0621]: explicit lifetime required in parameter type\n   --> $DIR/ex1-return-one-existing-name-if-else-3.rs:11:16\n    |\n LL | fn foo<'a>((x, y): (&'a i32, &i32)) -> &'a i32 {\n-   |            ----^-\n-   |            |   |\n-   |            |   lifetime `'a` required\n-   |            consider changing type to `(&'a i32, &'a i32)`\n+   |                ^   --------------- help: consider changing type to : `(&'a i32, &'a i32)`\n+   |                |\n+   |                lifetime `'a` required\n \n error: aborting due to previous error\n "}, {"sha": "70c25be2c30a7700f9f80d460a32e2efb3c235cb", "filename": "src/test/ui/lifetime-errors/ex1-return-one-existing-name-if-else-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-3.stderr?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -2,7 +2,7 @@ error[E0621]: explicit lifetime required in parameter type\n   --> $DIR/ex1-return-one-existing-name-if-else-3.rs:12:27\n    |\n LL | fn foo<'a>((x, y): (&'a i32, &i32)) -> &'a i32 {\n-   |            ------ consider changing type to `(&'a i32, &'a i32)`\n+   |                    --------------- help: consider changing type to : `(&'a i32, &'a i32)`\n LL |     if x > y { x } else { y } //~ ERROR explicit lifetime\n    |                           ^ lifetime `'a` required\n "}, {"sha": "419644cb60e710d38d1f3c51c93d4342e69eb592", "filename": "src/test/ui/lifetime-errors/ex1-return-one-existing-name-if-else-using-impl-2.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-using-impl-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-using-impl-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-using-impl-2.nll.stderr?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -8,7 +8,7 @@ error[E0621]: explicit lifetime required in the type of `x`\n   --> $DIR/ex1-return-one-existing-name-if-else-using-impl-2.rs:14:7\n    |\n LL | fn foo<'a>(x: &i32, y: &'a i32) -> &'a i32 {\n-   |            - consider changing the type of `x` to `&'a i32`\n+   |               ---- help: consider changing the type of `x` to : `&'a i32`\n LL |    if x > y { x } else { y } //~ ERROR explicit lifetime\n    |       ^^^^^ lifetime `'a` required\n "}, {"sha": "5c256aab62c7dd41f2a12c940c91057897147c0f", "filename": "src/test/ui/lifetime-errors/ex1-return-one-existing-name-if-else-using-impl-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-using-impl-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-using-impl-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-using-impl-2.stderr?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -2,7 +2,7 @@ error[E0621]: explicit lifetime required in the type of `x`\n   --> $DIR/ex1-return-one-existing-name-if-else-using-impl-2.rs:14:15\n    |\n LL | fn foo<'a>(x: &i32, y: &'a i32) -> &'a i32 {\n-   |            - consider changing the type of `x` to `&'a i32`\n+   |               ---- help: consider changing the type of `x` to : `&'a i32`\n LL |    if x > y { x } else { y } //~ ERROR explicit lifetime\n    |               ^ lifetime `'a` required\n "}, {"sha": "97ff1879f1be8755a04ae3429221e02e0eeabb63", "filename": "src/test/ui/lifetime-errors/ex1-return-one-existing-name-if-else-using-impl-3.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-using-impl-3.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-using-impl-3.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-using-impl-3.nll.stderr?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -8,7 +8,7 @@ error[E0621]: explicit lifetime required in the type of `x`\n   --> $DIR/ex1-return-one-existing-name-if-else-using-impl-3.rs:18:5\n    |\n LL |   fn foo<'a>(&'a self, x: &i32) -> &i32 {\n-   |                        - consider changing the type of `x` to `&'a i32`\n+   |                           ---- help: consider changing the type of `x` to : `&'a i32`\n LL | \n LL |     if true { &self.field } else { x } //~ ERROR explicit lifetime\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ lifetime `'a` required"}, {"sha": "f8654baa86b51f28cd48e2a1d71bfcd97f8055d6", "filename": "src/test/ui/lifetime-errors/ex1-return-one-existing-name-if-else-using-impl-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-using-impl-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-using-impl-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-using-impl-3.stderr?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -2,7 +2,7 @@ error[E0621]: explicit lifetime required in the type of `x`\n   --> $DIR/ex1-return-one-existing-name-if-else-using-impl-3.rs:18:36\n    |\n LL |   fn foo<'a>(&'a self, x: &i32) -> &i32 {\n-   |                        - consider changing the type of `x` to `&'a i32`\n+   |                           ---- help: consider changing the type of `x` to : `&'a i32`\n LL | \n LL |     if true { &self.field } else { x } //~ ERROR explicit lifetime\n    |                                    ^ lifetime `'a` required"}, {"sha": "8c429bcbc9508312b681f8044df04c0571b7bdc0", "filename": "src/test/ui/lifetime-errors/ex1-return-one-existing-name-if-else.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else.nll.stderr?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -8,7 +8,7 @@ error[E0621]: explicit lifetime required in the type of `y`\n   --> $DIR/ex1-return-one-existing-name-if-else.rs:12:8\n    |\n LL | fn foo<'a>(x: &'a i32, y: &i32) -> &'a i32 {\n-   |                        - consider changing the type of `y` to `&'a i32`\n+   |                           ---- help: consider changing the type of `y` to : `&'a i32`\n LL |     if x > y { x } else { y } //~ ERROR explicit lifetime\n    |        ^^^^^ lifetime `'a` required\n "}, {"sha": "cd7719f7047eb15e0ddf4cdd63b7196cf8f782f8", "filename": "src/test/ui/lifetime-errors/ex1-return-one-existing-name-if-else.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else.stderr?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -2,7 +2,7 @@ error[E0621]: explicit lifetime required in the type of `y`\n   --> $DIR/ex1-return-one-existing-name-if-else.rs:12:27\n    |\n LL | fn foo<'a>(x: &'a i32, y: &i32) -> &'a i32 {\n-   |                        - consider changing the type of `y` to `&'a i32`\n+   |                           ---- help: consider changing the type of `y` to : `&'a i32`\n LL |     if x > y { x } else { y } //~ ERROR explicit lifetime\n    |                           ^ lifetime `'a` required\n "}, {"sha": "d9c96a0e47ca549ae14b517409bd18340d2871a9", "filename": "src/test/ui/lifetime-errors/ex2a-push-one-existing-name-2.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name-2.nll.stderr?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -8,7 +8,7 @@ error[E0621]: explicit lifetime required in the type of `x`\n   --> $DIR/ex2a-push-one-existing-name-2.rs:16:5\n    |\n LL | fn foo<'a>(x: Ref<i32>, y: &mut Vec<Ref<'a, i32>>) {\n-   |            - consider changing the type of `x` to `Ref<'a, i32>`\n+   |               -------- help: consider changing the type of `x` to : `Ref<'a, i32>`\n LL |     y.push(x); //~ ERROR explicit lifetime\n    |     ^^^^^^^^^ lifetime `'a` required\n "}, {"sha": "d6944cc251f38adc883b522c6a33a6456ed1a691", "filename": "src/test/ui/lifetime-errors/ex2a-push-one-existing-name-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name-2.stderr?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -2,7 +2,7 @@ error[E0621]: explicit lifetime required in the type of `x`\n   --> $DIR/ex2a-push-one-existing-name-2.rs:16:12\n    |\n LL | fn foo<'a>(x: Ref<i32>, y: &mut Vec<Ref<'a, i32>>) {\n-   |            - consider changing the type of `x` to `Ref<'a, i32>`\n+   |               -------- help: consider changing the type of `x` to : `Ref<'a, i32>`\n LL |     y.push(x); //~ ERROR explicit lifetime\n    |            ^ lifetime `'a` required\n "}, {"sha": "d6724607669e1f80479fbf425fe24c066b4b2e20", "filename": "src/test/ui/lifetime-errors/ex2a-push-one-existing-name-early-bound.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name-early-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name-early-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name-early-bound.stderr?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -2,7 +2,7 @@ error[E0621]: explicit lifetime required in the type of `y`\n   --> $DIR/ex2a-push-one-existing-name-early-bound.rs:17:12\n    |\n LL | fn baz<'a, 'b, T>(x: &mut Vec<&'a T>, y: &T)\n-   |                                       - consider changing the type of `y` to `&'a T`\n+   |                                          -- help: consider changing the type of `y` to : `&'a T`\n ...\n LL |     x.push(y); //~ ERROR explicit lifetime required\n    |            ^ lifetime `'a` required"}, {"sha": "d08a9d6084aea6fa6086a610b2a2c33016345089", "filename": "src/test/ui/lifetime-errors/ex2a-push-one-existing-name.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name.nll.stderr?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -8,7 +8,7 @@ error[E0621]: explicit lifetime required in the type of `y`\n   --> $DIR/ex2a-push-one-existing-name.rs:16:5\n    |\n LL | fn foo<'a>(x: &mut Vec<Ref<'a, i32>>, y: Ref<i32>) {\n-   |                                       - consider changing the type of `y` to `Ref<'a, i32>`\n+   |                                          -------- help: consider changing the type of `y` to : `Ref<'a, i32>`\n LL |     x.push(y); //~ ERROR explicit lifetime\n    |     ^^^^^^^^^ lifetime `'a` required\n "}, {"sha": "088605a2b85441875f14e98a49a4328404e318e1", "filename": "src/test/ui/lifetime-errors/ex2a-push-one-existing-name.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name.stderr?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -2,7 +2,7 @@ error[E0621]: explicit lifetime required in the type of `y`\n   --> $DIR/ex2a-push-one-existing-name.rs:16:12\n    |\n LL | fn foo<'a>(x: &mut Vec<Ref<'a, i32>>, y: Ref<i32>) {\n-   |                                       - consider changing the type of `y` to `Ref<'a, i32>`\n+   |                                          -------- help: consider changing the type of `y` to : `Ref<'a, i32>`\n LL |     x.push(y); //~ ERROR explicit lifetime\n    |            ^ lifetime `'a` required\n "}, {"sha": "25450252cde31d9a5c2ce2538614b1f8979e401e", "filename": "src/test/ui/nll/closure-requirements/region-lbr-anon-does-not-outlive-static.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr-anon-does-not-outlive-static.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr-anon-does-not-outlive-static.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr-anon-does-not-outlive-static.stderr?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -8,7 +8,7 @@ error[E0621]: explicit lifetime required in the type of `x`\n   --> $DIR/region-lbr-anon-does-not-outlive-static.rs:19:5\n    |\n LL | fn foo(x: &u32) -> &'static u32 {\n-   |        - consider changing the type of `x` to `&ReStatic u32`\n+   |           ---- help: consider changing the type of `x` to : `&ReStatic u32`\n LL |     &*x\n    |     ^^^ lifetime `ReStatic` required\n "}, {"sha": "644d18419f11dc2016f9f00ef240600aa66c187d", "filename": "src/test/ui/nll/guarantor-issue-46974.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Fnll%2Fguarantor-issue-46974.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Fnll%2Fguarantor-issue-46974.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fguarantor-issue-46974.stderr?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -13,7 +13,7 @@ error[E0621]: explicit lifetime required in the type of `s`\n   --> $DIR/guarantor-issue-46974.rs:25:5\n    |\n LL | fn bar(s: &Box<(i32,)>) -> &'static i32 {\n-   |        - consider changing the type of `s` to `&'static std::boxed::Box<(i32,)>`\n+   |           ------------ help: consider changing the type of `s` to : `&'static std::boxed::Box<(i32,)>`\n LL |     // FIXME(#46983): error message should be better\n LL |     &s.0 //~ ERROR explicit lifetime required in the type of `s` [E0621]\n    |     ^^^^ lifetime `'static` required"}, {"sha": "944fc1c266695e53508172dba2d76b4ebca380c8", "filename": "src/test/ui/nll/ty-outlives/impl-trait-captures.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fimpl-trait-captures.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19401086df0d27bc3462addc3783595b86638514/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fimpl-trait-captures.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fimpl-trait-captures.stderr?ref=19401086df0d27bc3462addc3783595b86638514", "patch": "@@ -8,7 +8,7 @@ error[E0621]: explicit lifetime required in the type of `x`\n   --> $DIR/impl-trait-captures.rs:21:5\n    |\n LL | fn foo<'a, T>(x: &T) -> impl Foo<'a> {\n-   |               - consider changing the type of `x` to `&ReEarlyBound(0, 'a) T`\n+   |                  -- help: consider changing the type of `x` to : `&ReEarlyBound(0, 'a) T`\n LL |     x\n    |     ^ lifetime `ReEarlyBound(0, 'a)` required\n "}]}