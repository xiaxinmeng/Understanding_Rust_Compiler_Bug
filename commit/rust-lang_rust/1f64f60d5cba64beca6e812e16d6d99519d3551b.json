{"sha": "1f64f60d5cba64beca6e812e16d6d99519d3551b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmNjRmNjBkNWNiYTY0YmVjYTZlODEyZTE2ZDZkOTk1MTlkMzU1MWI=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-01-06T15:33:05Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-01-06T19:20:46Z"}, "message": "tests: Do not use `-Z parse-only`, continue compilation to test recovery", "tree": {"sha": "9cd15881fe2f274a22e7d00deff13ea7dfd29ab5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cd15881fe2f274a22e7d00deff13ea7dfd29ab5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f64f60d5cba64beca6e812e16d6d99519d3551b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f64f60d5cba64beca6e812e16d6d99519d3551b", "html_url": "https://github.com/rust-lang/rust/commit/1f64f60d5cba64beca6e812e16d6d99519d3551b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f64f60d5cba64beca6e812e16d6d99519d3551b/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b2c3117184e9fff432e84f8d75417056d757113", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b2c3117184e9fff432e84f8d75417056d757113", "html_url": "https://github.com/rust-lang/rust/commit/6b2c3117184e9fff432e84f8d75417056d757113"}], "stats": {"total": 1631, "additions": 749, "deletions": 882}, "files": [{"sha": "9936ce71b76bc845764276572295314eb216893b", "filename": "src/etc/generate-keyword-tests.py", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Fetc%2Fgenerate-keyword-tests.py", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Fetc%2Fgenerate-keyword-tests.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fgenerate-keyword-tests.py?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -16,8 +16,6 @@\n \n \n template = \"\"\"\n-// compile-flags: -Z parse-only\n-\n // This file was auto-generated using 'src/etc/generate-keyword-tests.py %s'\n \n fn main() {"}, {"sha": "cca2702f1a784f63477ae3fb3a32046f582325b0", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1543,7 +1543,6 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n \n     fn visit_item(&mut self, i: &'a ast::Item) {\n         match i.node {\n-            ast::ItemKind::Static(..) |\n             ast::ItemKind::Const(_,_) => {\n                 if i.ident.name == \"_\" {\n                     gate_feature_post!(&self, underscore_const_names, i.span,"}, {"sha": "358a27d3878206f901693c3b0e51242a0878b45d", "filename": "src/test/rustfix/tuple-float-index.fixed", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Frustfix%2Ftuple-float-index.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Frustfix%2Ftuple-float-index.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustfix%2Ftuple-float-index.fixed?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n fn main () {\n     ((1, (2, 3)).1).1;\n }"}, {"sha": "72612252a80980ad67ed109ee03a01f595a4d04e", "filename": "src/test/rustfix/tuple-float-index.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Frustfix%2Ftuple-float-index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Frustfix%2Ftuple-float-index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustfix%2Ftuple-float-index.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n fn main () {\n     (1, (2, 3)).1.1;\n }"}, {"sha": "ef203ef082b226e0bddf7a218dde2dc983e60ac3", "filename": "src/test/ui/mod/mod_file_disambig.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fmod%2Fmod_file_disambig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fmod%2Fmod_file_disambig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmod%2Fmod_file_disambig.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n mod mod_file_disambig_aux; //~ ERROR file for module `mod_file_disambig_aux` found at both\n \n fn main() {"}, {"sha": "1720ca420ca295bfea6878d01ce0674435dc3cfd", "filename": "src/test/ui/mod/mod_file_disambig.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fmod%2Fmod_file_disambig.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fmod%2Fmod_file_disambig.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmod%2Fmod_file_disambig.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error[E0584]: file for module `mod_file_disambig_aux` found at both mod_file_disambig_aux.rs and mod_file_disambig_aux/mod.rs\n-  --> $DIR/mod_file_disambig.rs:3:5\n+  --> $DIR/mod_file_disambig.rs:1:5\n    |\n LL | mod mod_file_disambig_aux; //~ ERROR file for module `mod_file_disambig_aux` found at both\n    |     ^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "80990b2bfdef03f7f4cc7e643d50adeacc9a5a83", "filename": "src/test/ui/mut/mut-ref.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fmut%2Fmut-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fmut%2Fmut-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmut%2Fmut-ref.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n fn main() {\n     let mut ref x = 10; //~ ERROR the order of `mut` and `ref` is incorrect\n     let ref mut y = 11;"}, {"sha": "339da7f8a020c84291df8190406276c2c7c33b27", "filename": "src/test/ui/mut/mut-ref.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fmut%2Fmut-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fmut%2Fmut-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmut%2Fmut-ref.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: the order of `mut` and `ref` is incorrect\n-  --> $DIR/mut-ref.rs:4:9\n+  --> $DIR/mut-ref.rs:2:9\n    |\n LL |     let mut ref x = 10; //~ ERROR the order of `mut` and `ref` is incorrect\n    |         ^^^^^^^ help: try switching the order: `ref mut`"}, {"sha": "f1b028ea8de02ac93a482fc4ca9ae24d866351d7", "filename": "src/test/ui/parser/ascii-only-character-escape.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fascii-only-character-escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fascii-only-character-escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fascii-only-character-escape.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z parse-only -Z continue-parse-after-error\n+// compile-flags: -Z continue-parse-after-error\n \n fn main() {\n     let x = \"\\x80\"; //~ ERROR may only be used"}, {"sha": "5914805e5c1c858ced76b635b6e61e3c46d0df62", "filename": "src/test/ui/parser/assoc-oddities-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fassoc-oddities-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fassoc-oddities-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fassoc-oddities-1.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,6 +1,6 @@\n // compile-flags: -Z parse-only\n \n-fn that_odd_parse() {\n+fn main() {\n     // following lines below parse and must not fail\n     x = if c { a } else { b }();\n     x = if true { 1 } else { 0 } as *mut _;"}, {"sha": "3d35aad745589029ca527bedd217e0ad028f6e7e", "filename": "src/test/ui/parser/assoc-oddities-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fassoc-oddities-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fassoc-oddities-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fassoc-oddities-2.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,6 +1,6 @@\n // compile-flags: -Z parse-only\n \n-fn that_odd_parse() {\n+fn main() {\n     // see assoc-oddities-1 for explanation\n     x..if c { a } else { b }[n]; //~ ERROR expected one of\n }"}, {"sha": "ed9c996d4ccef9a619d806d61859928ccef64346", "filename": "src/test/ui/parser/associated-types-project-from-hrtb-explicit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fassociated-types-project-from-hrtb-explicit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fassociated-types-project-from-hrtb-explicit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fassociated-types-project-from-hrtb-explicit.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z parse-only -Z continue-parse-after-error\n+// compile-flags: -Z continue-parse-after-error\n \n // Test you can't use a higher-ranked trait bound inside of a qualified\n // path (just won't parse)."}, {"sha": "cefd3369742be887bdce3d5b7b5787812ae75c90", "filename": "src/test/ui/parser/attr-bad-meta-2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fattr-bad-meta-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fattr-bad-meta-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fattr-bad-meta-2.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,4 +1,2 @@\n-// compile-flags: -Z parse-only\n-\n #[path =] //~ ERROR unexpected token: `]`\n mod m {}"}, {"sha": "ddc7a4b034b7f091f61825acf550035e1ecbc4b1", "filename": "src/test/ui/parser/attr-bad-meta-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fattr-bad-meta-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fattr-bad-meta-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fattr-bad-meta-2.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: unexpected token: `]`\n-  --> $DIR/attr-bad-meta-2.rs:3:9\n+  --> $DIR/attr-bad-meta-2.rs:1:9\n    |\n LL | #[path =] //~ ERROR unexpected token: `]`\n    |         ^ unexpected token after this"}, {"sha": "b51e9f2212ddac4141361b7b8bf976b7923c8afa", "filename": "src/test/ui/parser/attr-bad-meta-3.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fattr-bad-meta-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fattr-bad-meta-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fattr-bad-meta-3.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,4 +1,2 @@\n-// compile-flags: -Z parse-only\n-\n #[path() token] //~ ERROR expected `]`, found `token`\n mod m {}"}, {"sha": "863a2d2069fce08b3476ea9aaf10f927654f36b6", "filename": "src/test/ui/parser/attr-bad-meta-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fattr-bad-meta-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fattr-bad-meta-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fattr-bad-meta-3.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected `]`, found `token`\n-  --> $DIR/attr-bad-meta-3.rs:3:10\n+  --> $DIR/attr-bad-meta-3.rs:1:10\n    |\n LL | #[path() token] //~ ERROR expected `]`, found `token`\n    |          ^^^^^ expected `]`"}, {"sha": "7fe5427249141ea6195cbf946f5444bc2d3b943d", "filename": "src/test/ui/parser/attr-bad-meta.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fattr-bad-meta.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fattr-bad-meta.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fattr-bad-meta.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n #![feature(unrestricted_attribute_tokens)]\n \n #[path*] //~ ERROR expected one of `(`, `::`, `=`, `[`, `]`, or `{`, found `*`"}, {"sha": "7351702ec9dce655faa4336f04860968706d746a", "filename": "src/test/ui/parser/attr-bad-meta.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fattr-bad-meta.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fattr-bad-meta.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fattr-bad-meta.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected one of `(`, `::`, `=`, `[`, `]`, or `{`, found `*`\n-  --> $DIR/attr-bad-meta.rs:5:7\n+  --> $DIR/attr-bad-meta.rs:3:7\n    |\n LL | #[path*] //~ ERROR expected one of `(`, `::`, `=`, `[`, `]`, or `{`, found `*`\n    |       ^ expected one of `(`, `::`, `=`, `[`, `]`, or `{` here"}, {"sha": "6af1783e630fc0438840bcacb6e14f6c4614c820", "filename": "src/test/ui/parser/attr-before-eof.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fattr-before-eof.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fattr-before-eof.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fattr-before-eof.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,3 +1,3 @@\n-// compile-flags: -Z parse-only\n+fn main() {}\n \n #[derive(Debug)] //~ERROR expected item after attributes"}, {"sha": "c7c45bafb0d1eeff6a36edadf0a88164b45ef984", "filename": "src/test/ui/parser/attr-dangling-in-fn.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fattr-dangling-in-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fattr-dangling-in-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fattr-dangling-in-fn.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // error-pattern:expected statement\n \n fn f() {"}, {"sha": "71488d2e5c3699e660f1b3276561671b4c0c466c", "filename": "src/test/ui/parser/attr-dangling-in-fn.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fattr-dangling-in-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fattr-dangling-in-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fattr-dangling-in-fn.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected statement after outer attribute\n-  --> $DIR/attr-dangling-in-fn.rs:7:1\n+  --> $DIR/attr-dangling-in-fn.rs:5:1\n    |\n LL | }\n    | ^"}, {"sha": "261ed3913afd73bdd1f5c7a3be1ea5790dd03586", "filename": "src/test/ui/parser/attr-dangling-in-mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fattr-dangling-in-mod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fattr-dangling-in-mod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fattr-dangling-in-mod.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // error-pattern:expected item\n \n fn main() {"}, {"sha": "d896b61ce49c40de40effaf0ce306160993955cb", "filename": "src/test/ui/parser/attr-dangling-in-mod.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fattr-dangling-in-mod.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fattr-dangling-in-mod.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fattr-dangling-in-mod.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected item after attributes\n-  --> $DIR/attr-dangling-in-mod.rs:8:14\n+  --> $DIR/attr-dangling-in-mod.rs:6:14\n    |\n LL | #[foo = \"bar\"]\n    |              ^"}, {"sha": "041f30cd24272c6603629d618d69999dde5d2057", "filename": "src/test/ui/parser/attr.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fattr.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n #![feature(lang_items)]\n \n fn main() {}"}, {"sha": "44714dc56eef38dce0b7eb2c5d06af42d13b5ab3", "filename": "src/test/ui/parser/attr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fattr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fattr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fattr.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: an inner attribute is not permitted in this context\n-  --> $DIR/attr.rs:7:3\n+  --> $DIR/attr.rs:5:3\n    |\n LL | #![lang(foo)] //~ ERROR an inner attribute is not permitted in this context\n    |   ^"}, {"sha": "4bdd16471cd803eaffc51adb0d37ddff45107519", "filename": "src/test/ui/parser/attrs-after-extern-mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fattrs-after-extern-mod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fattrs-after-extern-mod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fattrs-after-extern-mod.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // Constants (static variables) can be used to match in patterns, but mutable\n // statics cannot. This ensures that there's some form of error if this is\n // attempted."}, {"sha": "067c4192ce6af467130d4c0f7b0454589c133139", "filename": "src/test/ui/parser/attrs-after-extern-mod.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fattrs-after-extern-mod.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fattrs-after-extern-mod.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fattrs-after-extern-mod.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected item after attributes\n-  --> $DIR/attrs-after-extern-mod.rs:12:19\n+  --> $DIR/attrs-after-extern-mod.rs:10:19\n    |\n LL |     #[cfg(stage37)] //~ ERROR expected item after attributes\n    |                   ^"}, {"sha": "1c9b5973be7fe992bb92f21034bbb2a190781e64", "filename": "src/test/ui/parser/bad-char-literals.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbad-char-literals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbad-char-literals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbad-char-literals.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z parse-only -Z continue-parse-after-error\n+// compile-flags: -Z continue-parse-after-error\n \n // ignore-tidy-cr\n // ignore-tidy-tab"}, {"sha": "391e7f0acf979f04366339cec7b2fc08ddb19e1f", "filename": "src/test/ui/parser/bad-lit-suffixes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbad-lit-suffixes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbad-lit-suffixes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbad-lit-suffixes.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z parse-only -Z continue-parse-after-error\n+// compile-flags: -Z continue-parse-after-error\n \n \n extern"}, {"sha": "79bc7eec3113e275ec1c160ab9a425d3fc4095de", "filename": "src/test/ui/parser/bad-match.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbad-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbad-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbad-match.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,11 +1,4 @@\n-// compile-flags: -Z parse-only\n-\n-// error-pattern: expected\n-\n fn main() {\n-  let isize x = 5;\n+  let isize x = 5; //~ ERROR expected one of `:`, `;`, `=`, or `@`, found `x`\n   match x;\n }\n-\n-fn main() {\n-}"}, {"sha": "dd3a2d2a27a0a929f490d75663397015156c1a26", "filename": "src/test/ui/parser/bad-match.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbad-match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbad-match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbad-match.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,7 +1,7 @@\n error: expected one of `:`, `;`, `=`, or `@`, found `x`\n-  --> $DIR/bad-match.rs:6:13\n+  --> $DIR/bad-match.rs:2:13\n    |\n-LL |   let isize x = 5;\n+LL |   let isize x = 5; //~ ERROR expected one of `:`, `;`, `=`, or `@`, found `x`\n    |             ^ expected one of `:`, `;`, `=`, or `@` here\n \n error: aborting due to previous error"}, {"sha": "9b42716924d32a17a7e12fbb9bc948e878e52522", "filename": "src/test/ui/parser/bad-name.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbad-name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbad-name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbad-name.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // error-pattern: expected\n \n fn main() {"}, {"sha": "15e61cf06cae94aca70de5d4877c1ff148bc75a4", "filename": "src/test/ui/parser/bad-name.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbad-name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbad-name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbad-name.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected one of `:`, `;`, `=`, or `@`, found `.`\n-  --> $DIR/bad-name.rs:6:8\n+  --> $DIR/bad-name.rs:4:8\n    |\n LL |   let x.y::<isize>.z foo;\n    |        ^ expected one of `:`, `;`, `=`, or `@` here"}, {"sha": "0e5a01103dc5f27b51eec98575dce7299d0879e2", "filename": "src/test/ui/parser/bad-pointer-type.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbad-pointer-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbad-pointer-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbad-pointer-type.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n-// compile-flags: -Z parse-only\n-\n fn foo(_: *()) {\n     //~^ expected mut or const in raw pointer type (use `*mut T` or `*const T` as appropriate)\n }\n+\n+fn main() {}"}, {"sha": "860f9f96bb8f5cfdf5f64bc672caac2feede17fb", "filename": "src/test/ui/parser/bad-pointer-type.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbad-pointer-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbad-pointer-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbad-pointer-type.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected mut or const in raw pointer type (use `*mut T` or `*const T` as appropriate)\n-  --> $DIR/bad-pointer-type.rs:3:11\n+  --> $DIR/bad-pointer-type.rs:1:11\n    |\n LL | fn foo(_: *()) {\n    |           ^"}, {"sha": "4645ab4a77549074198aebbb28de8837b771c19a", "filename": "src/test/ui/parser/bad-value-ident-false.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbad-value-ident-false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbad-value-ident-false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbad-value-ident-false.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,4 +1,2 @@\n-// compile-flags: -Z parse-only\n-\n fn false() { } //~ ERROR expected identifier, found keyword `false`\n fn main() { }"}, {"sha": "69a496f3a0c39f656eb90eac2d7d382645931483", "filename": "src/test/ui/parser/bad-value-ident-false.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbad-value-ident-false.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbad-value-ident-false.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbad-value-ident-false.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected identifier, found keyword `false`\n-  --> $DIR/bad-value-ident-false.rs:3:4\n+  --> $DIR/bad-value-ident-false.rs:1:4\n    |\n LL | fn false() { } //~ ERROR expected identifier, found keyword `false`\n    |    ^^^^^ expected identifier, found keyword"}, {"sha": "0f64266d322d5817a6e27b68feb5cc2d816588fc", "filename": "src/test/ui/parser/bad-value-ident-true.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbad-value-ident-true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbad-value-ident-true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbad-value-ident-true.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,4 +1,2 @@\n-// compile-flags: -Z parse-only\n-\n fn true() { } //~ ERROR expected identifier, found keyword `true`\n fn main() { }"}, {"sha": "2606b7450aef9dff2c06ea1a44411323a983a40e", "filename": "src/test/ui/parser/bad-value-ident-true.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbad-value-ident-true.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbad-value-ident-true.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbad-value-ident-true.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected identifier, found keyword `true`\n-  --> $DIR/bad-value-ident-true.rs:3:4\n+  --> $DIR/bad-value-ident-true.rs:1:4\n    |\n LL | fn true() { } //~ ERROR expected identifier, found keyword `true`\n    |    ^^^^ expected identifier, found keyword"}, {"sha": "16b61caa4dffca125756cc23ae81bccbba03b325", "filename": "src/test/ui/parser/better-expected.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbetter-expected.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbetter-expected.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbetter-expected.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n fn main() {\n     let x: [isize 3]; //~ ERROR expected one of `!`, `(`, `+`, `::`, `;`, `<`, or `]`, found `3`\n }"}, {"sha": "3495353c6f905875bb4f39eefd7727d33cf947fc", "filename": "src/test/ui/parser/better-expected.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbetter-expected.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbetter-expected.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbetter-expected.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected one of `!`, `(`, `+`, `::`, `;`, `<`, or `]`, found `3`\n-  --> $DIR/better-expected.rs:4:19\n+  --> $DIR/better-expected.rs:2:19\n    |\n LL |     let x: [isize 3]; //~ ERROR expected one of `!`, `(`, `+`, `::`, `;`, `<`, or `]`, found `3`\n    |         -         ^ expected one of 7 possible tokens here"}, {"sha": "c1de0df54e278112637a2726177ac19279c3f24e", "filename": "src/test/ui/parser/bind-struct-early-modifiers.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbind-struct-early-modifiers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbind-struct-early-modifiers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbind-struct-early-modifiers.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,9 +1,8 @@\n-// compile-flags: -Z parse-only\n-\n fn main() {\n     struct Foo { x: isize }\n     match (Foo { x: 10 }) {\n         Foo { ref x: ref x } => {}, //~ ERROR expected `,`\n+                                    //~| ERROR pattern does not mention field `x`\n         _ => {}\n     }\n }"}, {"sha": "618e577e4e22929a201801b3a67fb136795659b2", "filename": "src/test/ui/parser/bind-struct-early-modifiers.stderr", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbind-struct-early-modifiers.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbind-struct-early-modifiers.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbind-struct-early-modifiers.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,8 +1,15 @@\n error: expected `,`\n-  --> $DIR/bind-struct-early-modifiers.rs:6:19\n+  --> $DIR/bind-struct-early-modifiers.rs:4:19\n    |\n LL |         Foo { ref x: ref x } => {}, //~ ERROR expected `,`\n    |                   ^\n \n-error: aborting due to previous error\n+error[E0027]: pattern does not mention field `x`\n+  --> $DIR/bind-struct-early-modifiers.rs:4:9\n+   |\n+LL |         Foo { ref x: ref x } => {}, //~ ERROR expected `,`\n+   |         ^^^^^^^^^^^^^^^^^^^^ missing field `x`\n+\n+error: aborting due to 2 previous errors\n \n+For more information about this error, try `rustc --explain E0027`."}, {"sha": "64d702d14bb7850a593c1a8f7bc99e8a2ec6d2fc", "filename": "src/test/ui/parser/bound-single-question-mark.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbound-single-question-mark.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbound-single-question-mark.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbound-single-question-mark.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,3 +1 @@\n-// compile-flags: -Z parse-only\n-\n fn f<T: ?>() {} //~ ERROR expected identifier, found `>`"}, {"sha": "e30b32f41b413bf8f8e7c2c48f70dc4d66d0afc9", "filename": "src/test/ui/parser/bound-single-question-mark.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbound-single-question-mark.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbound-single-question-mark.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbound-single-question-mark.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected identifier, found `>`\n-  --> $DIR/bound-single-question-mark.rs:3:10\n+  --> $DIR/bound-single-question-mark.rs:1:10\n    |\n LL | fn f<T: ?>() {} //~ ERROR expected identifier, found `>`\n    |          ^ expected identifier"}, {"sha": "e458f644c9f47508172fd9cdce486856c67cfbca", "filename": "src/test/ui/parser/bounds-lifetime-1.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbounds-lifetime-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbounds-lifetime-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbounds-lifetime-1.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n type A = for<'a 'b> fn(); //~ ERROR expected one of `,`, `:`, or `>`, found `'b`\n \n fn main() {}"}, {"sha": "33bba35f692dde902953537663b627dab9a9b749", "filename": "src/test/ui/parser/bounds-lifetime-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbounds-lifetime-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbounds-lifetime-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbounds-lifetime-1.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected one of `,`, `:`, or `>`, found `'b`\n-  --> $DIR/bounds-lifetime-1.rs:3:17\n+  --> $DIR/bounds-lifetime-1.rs:1:17\n    |\n LL | type A = for<'a 'b> fn(); //~ ERROR expected one of `,`, `:`, or `>`, found `'b`\n    |                 ^^ expected one of `,`, `:`, or `>` here"}, {"sha": "f184107bbd1c8c22485fc01c4a81d14716709cb8", "filename": "src/test/ui/parser/bounds-lifetime-2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbounds-lifetime-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbounds-lifetime-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbounds-lifetime-2.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n type A = for<'a + 'b> fn(); //~ ERROR expected one of `,`, `:`, or `>`, found `+`\n \n fn main() {}"}, {"sha": "a8a22aaafce3311beaab969b946be0da7c62e441", "filename": "src/test/ui/parser/bounds-lifetime-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbounds-lifetime-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbounds-lifetime-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbounds-lifetime-2.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected one of `,`, `:`, or `>`, found `+`\n-  --> $DIR/bounds-lifetime-2.rs:3:17\n+  --> $DIR/bounds-lifetime-2.rs:1:17\n    |\n LL | type A = for<'a + 'b> fn(); //~ ERROR expected one of `,`, `:`, or `>`, found `+`\n    |                 ^ expected one of `,`, `:`, or `>` here"}, {"sha": "f1a002a9f7b609d14b5f9a8ded8a1cbc5543ebf7", "filename": "src/test/ui/parser/bounds-lifetime-where-1.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbounds-lifetime-where-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbounds-lifetime-where-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbounds-lifetime-where-1.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n type A where 'a; //~ ERROR expected `:`, found `;`\n \n fn main() {}"}, {"sha": "0300fe98910166e068f0ccc5e63f79254a94c248", "filename": "src/test/ui/parser/bounds-lifetime-where-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbounds-lifetime-where-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbounds-lifetime-where-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbounds-lifetime-where-1.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected `:`, found `;`\n-  --> $DIR/bounds-lifetime-where-1.rs:3:16\n+  --> $DIR/bounds-lifetime-where-1.rs:1:16\n    |\n LL | type A where 'a; //~ ERROR expected `:`, found `;`\n    |                ^ expected `:`"}, {"sha": "acb04e7859b2e926253abf4368087c589ea58425", "filename": "src/test/ui/parser/bounds-lifetime-where.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbounds-lifetime-where.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbounds-lifetime-where.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbounds-lifetime-where.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n type A where 'a: 'b + 'c = u8; // OK\n type A where 'a: 'b, = u8; // OK\n type A where 'a: = u8; // OK"}, {"sha": "6a8d7e9d4a16563db4c8ecaabe0d3e076f4ddfed", "filename": "src/test/ui/parser/bounds-lifetime-where.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbounds-lifetime-where.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbounds-lifetime-where.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbounds-lifetime-where.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected one of `=`, lifetime, or type, found `,`\n-  --> $DIR/bounds-lifetime-where.rs:10:14\n+  --> $DIR/bounds-lifetime-where.rs:8:14\n    |\n LL | type A where , = u8; //~ ERROR expected one of `=`, lifetime, or type, found `,`\n    |              ^ expected one of `=`, lifetime, or type here"}, {"sha": "89a969bb2e2a92fd939f6aa17171e743a35ec95f", "filename": "src/test/ui/parser/bounds-lifetime.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbounds-lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbounds-lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbounds-lifetime.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n type A = for<'a:> fn(); // OK\n type A = for<'a:,> fn(); // OK\n type A = for<'a> fn(); // OK"}, {"sha": "f39e5beb6ac90d168e64b9db65b64670ef559408", "filename": "src/test/ui/parser/bounds-lifetime.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbounds-lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbounds-lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbounds-lifetime.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected one of `>`, identifier, or lifetime, found `,`\n-  --> $DIR/bounds-lifetime.rs:11:14\n+  --> $DIR/bounds-lifetime.rs:9:14\n    |\n LL | type A = for<,> fn(); //~ ERROR expected one of `>`, identifier, or lifetime, found `,`\n    |              ^ expected one of `>`, identifier, or lifetime here"}, {"sha": "cc86879bf461add49e3b7a84e2b43ce69d1ddbe9", "filename": "src/test/ui/parser/bounds-obj-parens.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbounds-obj-parens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbounds-obj-parens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbounds-obj-parens.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,4 +1,5 @@\n // compile-pass\n-// compile-flags: -Z parse-only\n \n-type A = Box<(Fn(D::Error) -> E) + 'static + Send + Sync>; // OK (but see #39318)\n+type A = Box<(Fn(u8) -> u8) + 'static + Send + Sync>; // OK (but see #39318)\n+\n+fn main() {}"}, {"sha": "2520ecb294c9a5f9b80c970d93741ebe80bb113f", "filename": "src/test/ui/parser/bounds-type-where.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbounds-type-where.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbounds-type-where.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbounds-type-where.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n type A where for<'a> for<'b> Trait1 + ?Trait2: 'a + Trait = u8; // OK\n type A where T: Trait, = u8; // OK\n type A where T: = u8; // OK"}, {"sha": "459d5c3b6ea4f5b0d21ae83095bc8a5396a9dbe1", "filename": "src/test/ui/parser/bounds-type-where.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbounds-type-where.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbounds-type-where.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbounds-type-where.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected one of `!`, `(`, `+`, `::`, `:`, `<`, `==`, or `=`, found `,`\n-  --> $DIR/bounds-type-where.rs:10:15\n+  --> $DIR/bounds-type-where.rs:8:15\n    |\n LL | type A where T, = u8;\n    |               ^ expected one of 8 possible tokens here"}, {"sha": "f41520861627ab84c9558e001c53b0cbc64ec768", "filename": "src/test/ui/parser/brace-after-qualified-path-in-match.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbrace-after-qualified-path-in-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbrace-after-qualified-path-in-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbrace-after-qualified-path-in-match.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,7 +1,5 @@\n-// compile-flags: -Z parse-only\n-\n-fn foo() {\n-    match x {\n+fn main() {\n+    match 10 {\n         <T as Trait>::Type{key: value} => (),\n         //~^ ERROR unexpected `{` after qualified path\n         _ => (),"}, {"sha": "4c49e3122c702a937a4a64ebf5f0bd528e8fd87e", "filename": "src/test/ui/parser/brace-after-qualified-path-in-match.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbrace-after-qualified-path-in-match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbrace-after-qualified-path-in-match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbrace-after-qualified-path-in-match.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: unexpected `{` after qualified path\n-  --> $DIR/brace-after-qualified-path-in-match.rs:5:27\n+  --> $DIR/brace-after-qualified-path-in-match.rs:3:27\n    |\n LL |         <T as Trait>::Type{key: value} => (),\n    |                           ^ unexpected `{` after qualified path"}, {"sha": "bd358af29843a45d7067194a8bfb5ce3b6f5fb23", "filename": "src/test/ui/parser/byte-literals.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbyte-literals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbyte-literals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbyte-literals.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z parse-only -Z continue-parse-after-error\n+// compile-flags: -Z continue-parse-after-error\n \n \n // ignore-tidy-tab"}, {"sha": "d028f28655b8e7ace270330e789956ebbefa34e2", "filename": "src/test/ui/parser/byte-string-literals.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbyte-string-literals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fbyte-string-literals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbyte-string-literals.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z parse-only -Z continue-parse-after-error\n+// compile-flags: -Z continue-parse-after-error\n \n \n // ignore-tidy-tab"}, {"sha": "6968ca97b82191a549c60d493bcda674d8750459", "filename": "src/test/ui/parser/circular_modules_hello.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fcircular_modules_hello.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fcircular_modules_hello.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fcircular_modules_hello.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // ignore-test: this is an auxiliary file for circular-modules-main.rs\n \n #[path = \"circular_modules_main.rs\"]"}, {"sha": "b85003bf0910f61a39e06c28b031822e29c59a65", "filename": "src/test/ui/parser/circular_modules_main.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fcircular_modules_main.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fcircular_modules_main.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fcircular_modules_main.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n #[path = \"circular_modules_hello.rs\"]\n mod circular_modules_hello; //~ ERROR: circular modules\n "}, {"sha": "7751a8c0f38a1132557ea9a3aee96dd2efa54bea", "filename": "src/test/ui/parser/circular_modules_main.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fcircular_modules_main.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fcircular_modules_main.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fcircular_modules_main.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: circular modules: $DIR/circular_modules_hello.rs -> $DIR/circular_modules_main.rs -> $DIR/circular_modules_hello.rs\n-  --> $DIR/circular_modules_main.rs:4:5\n+  --> $DIR/circular_modules_main.rs:2:5\n    |\n LL | mod circular_modules_hello; //~ ERROR: circular modules\n    |     ^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "f2f85d0265a8abd2a9dda94c9fa344e895760669", "filename": "src/test/ui/parser/class-implements-bad-trait.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fclass-implements-bad-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fclass-implements-bad-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fclass-implements-bad-trait.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // error-pattern:nonexistent\n class cat : nonexistent {\n   let meows: usize;"}, {"sha": "45583466adc2c122b73fbc7004a689fa7d3c8c6b", "filename": "src/test/ui/parser/class-implements-bad-trait.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fclass-implements-bad-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fclass-implements-bad-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fclass-implements-bad-trait.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected one of `!` or `::`, found `cat`\n-  --> $DIR/class-implements-bad-trait.rs:4:7\n+  --> $DIR/class-implements-bad-trait.rs:2:7\n    |\n LL | class cat : nonexistent {\n    |       ^^^ expected one of `!` or `::` here"}, {"sha": "54eb791d2bce41462fbebccc048d8bb6992fe33b", "filename": "src/test/ui/parser/closure-return-syntax.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fclosure-return-syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fclosure-return-syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fclosure-return-syntax.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,8 +1,6 @@\n // Test that we cannot parse a closure with an explicit return type\n // unless it uses braces.\n \n-// compile-flags: -Z parse-only\n-\n fn main() {\n     let x = || -> i32 22;\n     //~^ ERROR expected one of `!`, `(`, `+`, `::`, `<`, or `{`, found `22`"}, {"sha": "dd7ebffd50672eb98d3e7c59f61b43927d3f18a5", "filename": "src/test/ui/parser/closure-return-syntax.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fclosure-return-syntax.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fclosure-return-syntax.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fclosure-return-syntax.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected one of `!`, `(`, `+`, `::`, `<`, or `{`, found `22`\n-  --> $DIR/closure-return-syntax.rs:7:23\n+  --> $DIR/closure-return-syntax.rs:5:23\n    |\n LL |     let x = || -> i32 22;\n    |                       ^^ expected one of `!`, `(`, `+`, `::`, `<`, or `{` here"}, {"sha": "e158e5247db188211ee9d06bbcc63c5be560cbc8", "filename": "src/test/ui/parser/column-offset-1-based.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fcolumn-offset-1-based.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fcolumn-offset-1-based.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fcolumn-offset-1-based.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,3 +1 @@\n-// compile-flags: -Z parse-only\n-\n # //~ ERROR expected `[`, found `<eof>`"}, {"sha": "b12b47b67ce105eb28a626d191b780340266a67c", "filename": "src/test/ui/parser/column-offset-1-based.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fcolumn-offset-1-based.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fcolumn-offset-1-based.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fcolumn-offset-1-based.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected `[`, found `<eof>`\n-  --> $DIR/column-offset-1-based.rs:3:1\n+  --> $DIR/column-offset-1-based.rs:1:1\n    |\n LL | # //~ ERROR expected `[`, found `<eof>`\n    | ^ expected `[`"}, {"sha": "17cd06864bf1db586f728f5ff13c73f9afced68c", "filename": "src/test/ui/parser/default.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fdefault.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,7 +1,7 @@\n-// compile-flags: -Z parse-only\n-\n // Test successful and unsuccessful parsing of the `default` contextual keyword\n \n+#![feature(specialization)]\n+\n trait Foo {\n     fn foo<T: Default>() -> T;\n }\n@@ -13,12 +13,12 @@ impl Foo for u8 {\n }\n \n impl Foo for u16 {\n-    pub default fn foo<T: Default>() -> T {\n+    pub default fn foo<T: Default>() -> T { //~ ERROR unnecessary visibility qualifier\n         T::default()\n     }\n }\n \n-impl Foo for u32 {\n+impl Foo for u32 { //~ ERROR not all trait items implemented, missing: `foo`\n     default pub fn foo<T: Default>() -> T { T::default() } //~ ERROR expected one of\n }\n "}, {"sha": "27193672903acd3869a169d3a80c8b0039378fe2", "filename": "src/test/ui/parser/default.stderr", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fdefault.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fdefault.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fdefault.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -4,5 +4,22 @@ error: expected one of `async`, `const`, `existential`, `extern`, `fn`, `type`,\n LL |     default pub fn foo<T: Default>() -> T { T::default() } //~ ERROR expected one of\n    |             ^^^ expected one of 7 possible tokens here\n \n-error: aborting due to previous error\n+error[E0449]: unnecessary visibility qualifier\n+  --> $DIR/default.rs:16:5\n+   |\n+LL |     pub default fn foo<T: Default>() -> T { //~ ERROR unnecessary visibility qualifier\n+   |     ^^^ `pub` not permitted here because it's implied\n+\n+error[E0046]: not all trait items implemented, missing: `foo`\n+  --> $DIR/default.rs:21:1\n+   |\n+LL |     fn foo<T: Default>() -> T;\n+   |     -------------------------- `foo` from trait\n+...\n+LL | impl Foo for u32 { //~ ERROR not all trait items implemented, missing: `foo`\n+   | ^^^^^^^^^^^^^^^^ missing `foo` in implementation\n+\n+error: aborting due to 3 previous errors\n \n+Some errors occurred: E0046, E0449.\n+For more information about an error, try `rustc --explain E0046`."}, {"sha": "61fae721ffbde7f69e05607ba5caaba669dd5606", "filename": "src/test/ui/parser/do-catch-suggests-try.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fdo-catch-suggests-try.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fdo-catch-suggests-try.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fdo-catch-suggests-try.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n fn main() {\n     let _: Option<()> = do catch {};\n     //~^ ERROR found removed `do catch` syntax"}, {"sha": "6d13b0f1cc87261a7a97deb63d27b556266ec31f", "filename": "src/test/ui/parser/do-catch-suggests-try.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fdo-catch-suggests-try.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fdo-catch-suggests-try.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fdo-catch-suggests-try.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: found removed `do catch` syntax\n-  --> $DIR/do-catch-suggests-try.rs:4:25\n+  --> $DIR/do-catch-suggests-try.rs:2:25\n    |\n LL |     let _: Option<()> = do catch {};\n    |                         ^^"}, {"sha": "7870555aebb23d003fdb88f3c54e939d9e27f567", "filename": "src/test/ui/parser/doc-after-struct-field.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fdoc-after-struct-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fdoc-after-struct-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fdoc-after-struct-field.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z parse-only -Z continue-parse-after-error\n+// compile-flags: -Z continue-parse-after-error\n \n struct X {\n     a: u8 /** document a */,"}, {"sha": "c4125a09fd2fd8baff9b931523a8ace591005d1c", "filename": "src/test/ui/parser/doc-before-attr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fdoc-before-attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fdoc-before-attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fdoc-before-attr.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z parse-only\n+fn main() {}\n \n /// hi\n #[derive(Debug)] //~ERROR expected item after attributes"}, {"sha": "b31836e95e880f8a4538942d095a43baa4b0f56f", "filename": "src/test/ui/parser/doc-before-eof.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fdoc-before-eof.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fdoc-before-eof.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fdoc-before-eof.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,3 +1,3 @@\n-// compile-flags: -Z parse-only\n+fn main() {}\n \n /// hi //~ERROR expected item after doc comment"}, {"sha": "695d4da1dca60b8c0ddb30f34d4017884fffee2f", "filename": "src/test/ui/parser/doc-before-extern-rbrace.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fdoc-before-extern-rbrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fdoc-before-extern-rbrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fdoc-before-extern-rbrace.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n extern {\n     /// hi\n     //~^ ERROR expected item after doc comment"}, {"sha": "47fab7b40f4cd0166ada76a6d4bdeb0d50d95fae", "filename": "src/test/ui/parser/doc-before-extern-rbrace.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fdoc-before-extern-rbrace.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fdoc-before-extern-rbrace.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fdoc-before-extern-rbrace.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected item after doc comment\n-  --> $DIR/doc-before-extern-rbrace.rs:4:5\n+  --> $DIR/doc-before-extern-rbrace.rs:2:5\n    |\n LL |     /// hi\n    |     ^^^^^^"}, {"sha": "d33520baebe07b95cc9fb1f2ba59b527c99e2b5e", "filename": "src/test/ui/parser/doc-before-fn-rbrace.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fdoc-before-fn-rbrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fdoc-before-fn-rbrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fdoc-before-fn-rbrace.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z parse-only -Z continue-parse-after-error\n+// compile-flags: -Z continue-parse-after-error\n \n fn main() {\n     /// document"}, {"sha": "d9777be63d280e185253a13d32b2bd96a91bcfb5", "filename": "src/test/ui/parser/doc-before-identifier.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fdoc-before-identifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fdoc-before-identifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fdoc-before-identifier.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z parse-only -Z continue-parse-after-error\n+// compile-flags: -Z continue-parse-after-error\n \n fn /// document\n foo() {}"}, {"sha": "4e0b65ef496db5a613147fd3bc5213ff692d388a", "filename": "src/test/ui/parser/doc-before-mod-rbrace.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fdoc-before-mod-rbrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fdoc-before-mod-rbrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fdoc-before-mod-rbrace.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,6 +1,8 @@\n-// compile-flags: -Z parse-only -Z continue-parse-after-error\n+// compile-flags: -Z continue-parse-after-error\n \n mod Foo {\n     /// document\n     //~^ ERROR expected item after doc comment\n }\n+\n+fn main() {}"}, {"sha": "8ff946344aee8ccde9361e1c8cd6c43218b86a7f", "filename": "src/test/ui/parser/doc-before-rbrace.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fdoc-before-rbrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fdoc-before-rbrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fdoc-before-rbrace.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n fn main() {\n     println!(\"Hi\"); /// hi\n     //~^ ERROR found a documentation comment that doesn't document anything"}, {"sha": "55719cf6411951250439b92c85be91eea9a4c485", "filename": "src/test/ui/parser/doc-before-rbrace.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fdoc-before-rbrace.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fdoc-before-rbrace.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fdoc-before-rbrace.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error[E0585]: found a documentation comment that doesn't document anything\n-  --> $DIR/doc-before-rbrace.rs:4:21\n+  --> $DIR/doc-before-rbrace.rs:2:21\n    |\n LL |     println!(\"Hi\"); /// hi\n    |                     ^^^^^^"}, {"sha": "405a7e1e2a33b9eca931dfe4b53b87cd884f2e25", "filename": "src/test/ui/parser/doc-before-semi.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fdoc-before-semi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fdoc-before-semi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fdoc-before-semi.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n fn main() {\n     /// hi\n     //~^ ERROR found a documentation comment that doesn't document anything"}, {"sha": "e6bade18d0a2da70c392493f5fe8656a6742782d", "filename": "src/test/ui/parser/doc-before-semi.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fdoc-before-semi.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fdoc-before-semi.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fdoc-before-semi.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error[E0585]: found a documentation comment that doesn't document anything\n-  --> $DIR/doc-before-semi.rs:4:5\n+  --> $DIR/doc-before-semi.rs:2:5\n    |\n LL |     /// hi\n    |     ^^^^^^"}, {"sha": "e7055f6a5fcb4aa6a272196a33b74f45450c92c8", "filename": "src/test/ui/parser/doc-before-struct-rbrace-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fdoc-before-struct-rbrace-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fdoc-before-struct-rbrace-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fdoc-before-struct-rbrace-1.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z parse-only -Z continue-parse-after-error\n+// compile-flags: -Z continue-parse-after-error\n \n struct X {\n     a: u8,"}, {"sha": "d5c2a314cbbf863969637cdd9305c67a239dd32b", "filename": "src/test/ui/parser/doc-before-struct-rbrace-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fdoc-before-struct-rbrace-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fdoc-before-struct-rbrace-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fdoc-before-struct-rbrace-2.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z parse-only -Z continue-parse-after-error\n+// compile-flags: -Z continue-parse-after-error\n \n struct X {\n     a: u8 /// document"}, {"sha": "bb17e97e950c66de7efa226291c2ce52ac3ae8be", "filename": "src/test/ui/parser/duplicate-visibility.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fduplicate-visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fduplicate-visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fduplicate-visibility.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // error-pattern:expected one of `(`, `fn`, `static`, or `type`\n extern {\n     pub pub fn foo();"}, {"sha": "880b536cd18c54987b1bbd1e3661478cc9d6d8f2", "filename": "src/test/ui/parser/duplicate-visibility.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fduplicate-visibility.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fduplicate-visibility.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fduplicate-visibility.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected one of `(`, `fn`, `static`, or `type`, found `pub`\n-  --> $DIR/duplicate-visibility.rs:5:9\n+  --> $DIR/duplicate-visibility.rs:3:9\n    |\n LL |     pub pub fn foo();\n    |         ^^^ expected one of `(`, `fn`, `static`, or `type` here"}, {"sha": "207ebef642bfa6d723a20c60d46a14418726aa0c", "filename": "src/test/ui/parser/empty-impl-semicolon.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fempty-impl-semicolon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fempty-impl-semicolon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fempty-impl-semicolon.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,3 +1 @@\n-// compile-flags: -Z parse-only\n-\n impl Foo; //~ ERROR expected one of `!`, `(`, `+`, `::`, `<`, `for`, `where`, or `{`, found `;`"}, {"sha": "965a8a45aedeaf4aa2449b58cf8c065ddc650021", "filename": "src/test/ui/parser/empty-impl-semicolon.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fempty-impl-semicolon.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fempty-impl-semicolon.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fempty-impl-semicolon.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected one of `!`, `(`, `+`, `::`, `<`, `for`, `where`, or `{`, found `;`\n-  --> $DIR/empty-impl-semicolon.rs:3:9\n+  --> $DIR/empty-impl-semicolon.rs:1:9\n    |\n LL | impl Foo; //~ ERROR expected one of `!`, `(`, `+`, `::`, `<`, `for`, `where`, or `{`, found `;`\n    |         ^ expected one of 8 possible tokens here"}, {"sha": "58b2fa1afdf311df0d02ee94ed2e1e3bb7a056ca", "filename": "src/test/ui/parser/extern-crate-unexpected-token.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fextern-crate-unexpected-token.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fextern-crate-unexpected-token.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fextern-crate-unexpected-token.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,3 +1 @@\n-// compile-flags: -Z parse-only\n-\n extern crte foo; //~ ERROR expected one of `crate`, `fn`, or `{`, found `crte`"}, {"sha": "ed888eb1a8ea80e9e4f01081b3415c365cb4edc0", "filename": "src/test/ui/parser/extern-crate-unexpected-token.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fextern-crate-unexpected-token.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fextern-crate-unexpected-token.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fextern-crate-unexpected-token.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected one of `crate`, `fn`, or `{`, found `crte`\n-  --> $DIR/extern-crate-unexpected-token.rs:3:8\n+  --> $DIR/extern-crate-unexpected-token.rs:1:8\n    |\n LL | extern crte foo; //~ ERROR expected one of `crate`, `fn`, or `{`, found `crte`\n    |        ^^^^ expected one of `crate`, `fn`, or `{` here"}, {"sha": "dd46b87fa426ff3904bc8036af520ef1596dc84f", "filename": "src/test/ui/parser/extern-expected-fn-or-brace.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fextern-expected-fn-or-brace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fextern-expected-fn-or-brace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fextern-expected-fn-or-brace.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // Verifies that the expected token errors for `extern crate` are\n // raised\n "}, {"sha": "94b2d1d7b7e861522d0fc072c0d0792a29f1be7b", "filename": "src/test/ui/parser/extern-expected-fn-or-brace.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fextern-expected-fn-or-brace.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fextern-expected-fn-or-brace.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fextern-expected-fn-or-brace.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected one of `fn` or `{`, found `mod`\n-  --> $DIR/extern-expected-fn-or-brace.rs:6:12\n+  --> $DIR/extern-expected-fn-or-brace.rs:4:12\n    |\n LL | extern \"C\" mod foo; //~ERROR expected one of `fn` or `{`, found `mod`\n    |            ^^^ expected one of `fn` or `{` here"}, {"sha": "a5da77dc76361e35252564d2e47efb2f59e5d63e", "filename": "src/test/ui/parser/extern-foreign-crate.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fextern-foreign-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fextern-foreign-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fextern-foreign-crate.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // Verifies that the expected token errors for `extern crate` are\n // raised\n "}, {"sha": "d2fe8b77ce668275609b3df8bb6aa43f12bd67ba", "filename": "src/test/ui/parser/extern-foreign-crate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fextern-foreign-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fextern-foreign-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fextern-foreign-crate.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected one of `;` or `as`, found `{`\n-  --> $DIR/extern-foreign-crate.rs:6:18\n+  --> $DIR/extern-foreign-crate.rs:4:18\n    |\n LL | extern crate foo {} //~ERROR expected one of `;` or `as`, found `{`\n    |                  ^ expected one of `;` or `as` here"}, {"sha": "c37ddd69ce53c1ca7057a93d2001141783156419", "filename": "src/test/ui/parser/extern-no-fn.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fextern-no-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fextern-no-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fextern-no-fn.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n extern { //~ ERROR missing `fn`, `type`, or `static` for extern-item declaration\n     f();\n }"}, {"sha": "e764cd08401969f709b51818253ef14f416a333d", "filename": "src/test/ui/parser/extern-no-fn.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fextern-no-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fextern-no-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fextern-no-fn.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: missing `fn`, `type`, or `static` for extern-item declaration\n-  --> $DIR/extern-no-fn.rs:3:9\n+  --> $DIR/extern-no-fn.rs:1:9\n    |\n LL |   extern { //~ ERROR missing `fn`, `type`, or `static` for extern-item declaration\n    |  _________^"}, {"sha": "212378c28665b57333d4fbc07f1b09d8878c5d98", "filename": "src/test/ui/parser/if-in-in.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fif-in-in.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fif-in-in.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fif-in-in.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n fn main() {\n     for i in in 1..2 { //~ ERROR expected iterable, found keyword `in`\n         println!(\"{}\", i);"}, {"sha": "2938bba77d71710ed4a3b286ce503b7634229240", "filename": "src/test/ui/parser/if-in-in.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fif-in-in.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fif-in-in.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fif-in-in.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected iterable, found keyword `in`\n-  --> $DIR/if-in-in.rs:4:14\n+  --> $DIR/if-in-in.rs:2:14\n    |\n LL |     for i in in 1..2 { //~ ERROR expected iterable, found keyword `in`\n    |           ---^^"}, {"sha": "c2a80e8fa15940fb98d401555860041f27002866", "filename": "src/test/ui/parser/impl-parsing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fimpl-parsing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fimpl-parsing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fimpl-parsing.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z parse-only -Z continue-parse-after-error\n+// compile-flags: -Z continue-parse-after-error\n \n impl ! {} // OK\n impl ! where u8: Copy {} // OK"}, {"sha": "3fce08259fca88ed656761067119079a06edbe94", "filename": "src/test/ui/parser/import-from-path.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fimport-from-path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fimport-from-path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fimport-from-path.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,4 +1,2 @@\n-// compile-flags: -Z parse-only\n-\n // error-pattern:expected\n use foo::{bar}::baz"}, {"sha": "5842037fb8050bb57ba6d0d5c0b53551b588af94", "filename": "src/test/ui/parser/import-from-path.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fimport-from-path.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fimport-from-path.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fimport-from-path.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected `;`, found `::`\n-  --> $DIR/import-from-path.rs:4:15\n+  --> $DIR/import-from-path.rs:2:15\n    |\n LL | use foo::{bar}::baz\n    |               ^^ expected `;`"}, {"sha": "27425a3c99a351a9e53726445586c1fefbd94318", "filename": "src/test/ui/parser/import-from-rename.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fimport-from-rename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fimport-from-rename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fimport-from-rename.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // error-pattern:expected\n \n use foo::{bar} as baz;"}, {"sha": "a966e9937373a79a8391e013e8c6c7f4d36b15f1", "filename": "src/test/ui/parser/import-from-rename.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fimport-from-rename.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fimport-from-rename.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fimport-from-rename.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected `;`, found keyword `as`\n-  --> $DIR/import-from-rename.rs:5:16\n+  --> $DIR/import-from-rename.rs:3:16\n    |\n LL | use foo::{bar} as baz;\n    |                ^^ expected `;`"}, {"sha": "de4c07aa7bb6fbad213b91942608c3beed67cf48", "filename": "src/test/ui/parser/import-glob-path.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fimport-glob-path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fimport-glob-path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fimport-glob-path.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,4 +1,2 @@\n-// compile-flags: -Z parse-only\n-\n // error-pattern:expected\n use foo::*::bar"}, {"sha": "ebca2db8305c3884e0418fbfeb574bc7328908d5", "filename": "src/test/ui/parser/import-glob-path.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fimport-glob-path.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fimport-glob-path.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fimport-glob-path.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected `;`, found `::`\n-  --> $DIR/import-glob-path.rs:4:11\n+  --> $DIR/import-glob-path.rs:2:11\n    |\n LL | use foo::*::bar\n    |           ^^ expected `;`"}, {"sha": "b9b753dcd70a893305923ffb4adc01a661d07af1", "filename": "src/test/ui/parser/import-glob-rename.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fimport-glob-rename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fimport-glob-rename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fimport-glob-rename.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // error-pattern:expected\n \n use foo::* as baz;"}, {"sha": "2853873278251f5423abe0c7029be25da12dd3f8", "filename": "src/test/ui/parser/import-glob-rename.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fimport-glob-rename.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fimport-glob-rename.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fimport-glob-rename.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected `;`, found keyword `as`\n-  --> $DIR/import-glob-rename.rs:5:12\n+  --> $DIR/import-glob-rename.rs:3:12\n    |\n LL | use foo::* as baz;\n    |            ^^ expected `;`"}, {"sha": "36f4191f06bc37edc571d7941877dae1dd628c5d", "filename": "src/test/ui/parser/inner-attr-after-doc-comment.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Finner-attr-after-doc-comment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Finner-attr-after-doc-comment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Finner-attr-after-doc-comment.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n #![feature(lang_items)]\n /**\n  * My module"}, {"sha": "0dde49a2913f1c4003fc39cde18c28dd23a92a51", "filename": "src/test/ui/parser/inner-attr-after-doc-comment.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Finner-attr-after-doc-comment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Finner-attr-after-doc-comment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Finner-attr-after-doc-comment.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: an inner attribute is not permitted following an outer doc comment\n-  --> $DIR/inner-attr-after-doc-comment.rs:8:3\n+  --> $DIR/inner-attr-after-doc-comment.rs:6:3\n    |\n LL | #![recursion_limit=\"100\"]\n    |   ^"}, {"sha": "1b405e20e038440032314571a0e08105c5719ecf", "filename": "src/test/ui/parser/inner-attr.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Finner-attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Finner-attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Finner-attr.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n #[feature(lang_items)]\n \n #![recursion_limit=\"100\"] //~ ERROR an inner attribute is not permitted following an outer attribute"}, {"sha": "001eab226dc21a39cab2bb555113c5f4e836ca28", "filename": "src/test/ui/parser/inner-attr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Finner-attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Finner-attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Finner-attr.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: an inner attribute is not permitted following an outer attribute\n-  --> $DIR/inner-attr.rs:5:3\n+  --> $DIR/inner-attr.rs:3:3\n    |\n LL | #![recursion_limit=\"100\"] //~ ERROR an inner attribute is not permitted following an outer attribute\n    |   ^"}, {"sha": "206242c3c7fa6861853dc193c20e6f3ef554d9c8", "filename": "src/test/ui/parser/int-literal-too-large-span.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fint-literal-too-large-span.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fint-literal-too-large-span.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fint-literal-too-large-span.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // issue #17123\n \n fn main() {"}, {"sha": "d7774c333c29a6a2f4ab785c60f6e4408b0b426b", "filename": "src/test/ui/parser/int-literal-too-large-span.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fint-literal-too-large-span.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fint-literal-too-large-span.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fint-literal-too-large-span.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: int literal is too large\n-  --> $DIR/int-literal-too-large-span.rs:6:5\n+  --> $DIR/int-literal-too-large-span.rs:4:5\n    |\n LL |     9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "42430278c7267f6b2274d2269dc60c855a61e65c", "filename": "src/test/ui/parser/inverted-parameters.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Finverted-parameters.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Finverted-parameters.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Finverted-parameters.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n struct S;\n \n impl S {"}, {"sha": "bdb8faa6c6593975ad0dfd09db6fa7ed04362fcd", "filename": "src/test/ui/parser/inverted-parameters.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Finverted-parameters.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Finverted-parameters.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Finverted-parameters.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected one of `:` or `@`, found `bar`\n-  --> $DIR/inverted-parameters.rs:6:24\n+  --> $DIR/inverted-parameters.rs:4:24\n    |\n LL |     fn foo(&self, &str bar) {}\n    |                   -----^^^\n@@ -8,7 +8,7 @@ LL |     fn foo(&self, &str bar) {}\n    |                   help: declare the type after the parameter binding: `<identifier>: <type>`\n \n error: expected one of `:` or `@`, found `quux`\n-  --> $DIR/inverted-parameters.rs:12:10\n+  --> $DIR/inverted-parameters.rs:10:10\n    |\n LL | fn baz(S quux, xyzzy: i32) {}\n    |        --^^^^\n@@ -17,25 +17,25 @@ LL | fn baz(S quux, xyzzy: i32) {}\n    |        help: declare the type after the parameter binding: `<identifier>: <type>`\n \n error: expected one of `:` or `@`, found `a`\n-  --> $DIR/inverted-parameters.rs:17:12\n+  --> $DIR/inverted-parameters.rs:15:12\n    |\n LL | fn one(i32 a b) {}\n    |            ^ expected one of `:` or `@` here\n \n error: expected `:`, found `(`\n-  --> $DIR/inverted-parameters.rs:20:23\n+  --> $DIR/inverted-parameters.rs:18:23\n    |\n LL | fn pattern((i32, i32) (a, b)) {}\n    |                       ^ expected `:`\n \n error: expected one of `:` or `@`, found `)`\n-  --> $DIR/inverted-parameters.rs:23:12\n+  --> $DIR/inverted-parameters.rs:21:12\n    |\n LL | fn fizz(i32) {}\n    |            ^ expected one of `:` or `@` here\n \n error: expected one of `:` or `@`, found `S`\n-  --> $DIR/inverted-parameters.rs:26:23\n+  --> $DIR/inverted-parameters.rs:24:23\n    |\n LL | fn missing_colon(quux S) {}\n    |                  -----^"}, {"sha": "3b5e3199a8ab3dcee5643fbb434cc7aca18129ef", "filename": "src/test/ui/parser/issue-10392-2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-10392-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-10392-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-10392-2.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n struct A { foo: isize }\n \n fn a() -> A { panic!() }"}, {"sha": "47e1f7adf25ecfe40af51591a743bad56e4d02dd", "filename": "src/test/ui/parser/issue-10392-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-10392-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-10392-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-10392-2.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected `}`, found `,`\n-  --> $DIR/issue-10392-2.rs:8:15\n+  --> $DIR/issue-10392-2.rs:6:15\n    |\n LL |     let A { .., } = a(); //~ ERROR: expected `}`\n    |             --^"}, {"sha": "dd84af393003ce0d4fe174e090eb6dcdf3cc8238", "filename": "src/test/ui/parser/issue-10392.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-10392.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-10392.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-10392.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,9 +1,8 @@\n-// compile-flags: -Z parse-only\n-\n struct A { foo: isize }\n \n fn a() -> A { panic!() }\n \n fn main() {\n-    let A { , } = a(); //~ ERROR: expected ident\n+    let A { , } = a(); //~ ERROR expected ident\n+                       //~| ERROR pattern does not mention field `foo`\n }"}, {"sha": "9c9858aa26cb46bcc71d58a56f0644a6863fa9f9", "filename": "src/test/ui/parser/issue-10392.stderr", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-10392.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-10392.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-10392.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,8 +1,15 @@\n error: expected identifier, found `,`\n-  --> $DIR/issue-10392.rs:8:13\n+  --> $DIR/issue-10392.rs:6:13\n    |\n-LL |     let A { , } = a(); //~ ERROR: expected ident\n+LL |     let A { , } = a(); //~ ERROR expected ident\n    |             ^ expected identifier\n \n-error: aborting due to previous error\n+error[E0027]: pattern does not mention field `foo`\n+  --> $DIR/issue-10392.rs:6:9\n+   |\n+LL |     let A { , } = a(); //~ ERROR expected ident\n+   |         ^^^^^^^ missing field `foo`\n+\n+error: aborting due to 2 previous errors\n \n+For more information about this error, try `rustc --explain E0027`."}, {"sha": "e495c0411d8167c26923b3df25a4249f7794c187", "filename": "src/test/ui/parser/issue-10636-1.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-10636-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-10636-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-10636-1.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n struct Obj {\n     //~^ NOTE: un-closed delimiter\n     member: usize"}, {"sha": "894139f24ddaf0eb3d1fffb186dad0689c58263e", "filename": "src/test/ui/parser/issue-10636-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-10636-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-10636-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-10636-1.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: incorrect close delimiter: `)`\n-  --> $DIR/issue-10636-1.rs:6:1\n+  --> $DIR/issue-10636-1.rs:4:1\n    |\n LL | struct Obj {\n    |            - un-closed delimiter"}, {"sha": "a02fd41b349c25224502ac66a2466ff9602e0b0e", "filename": "src/test/ui/parser/issue-10636-2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-10636-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-10636-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-10636-2.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,8 +1,6 @@\n // FIXME(31528) we emit a bunch of silly errors here due to continuing past the\n // first one. This would be easy-ish to address by better recovery in tokenisation.\n \n-// compile-flags: -Z parse-only\n-\n pub fn trace_option(option: Option<isize>) {\n     option.map(|some| 42;\n                           //~^ ERROR: expected one of"}, {"sha": "9b3115cb3f4b7f125855717885277159504b914d", "filename": "src/test/ui/parser/issue-10636-2.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-10636-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-10636-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-10636-2.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: incorrect close delimiter: `}`\n-  --> $DIR/issue-10636-2.rs:10:1\n+  --> $DIR/issue-10636-2.rs:8:1\n    |\n LL | pub fn trace_option(option: Option<isize>) {\n    |                                            - close delimiter possibly meant for this\n@@ -10,13 +10,13 @@ LL | } //~ ERROR: incorrect close delimiter\n    | ^ incorrect close delimiter\n \n error: expected one of `)`, `,`, `.`, `?`, or an operator, found `;`\n-  --> $DIR/issue-10636-2.rs:7:25\n+  --> $DIR/issue-10636-2.rs:5:25\n    |\n LL |     option.map(|some| 42;\n    |                         ^ expected one of `)`, `,`, `.`, `?`, or an operator here\n \n error: expected expression, found `)`\n-  --> $DIR/issue-10636-2.rs:10:1\n+  --> $DIR/issue-10636-2.rs:8:1\n    |\n LL | } //~ ERROR: incorrect close delimiter\n    | ^ expected expression"}, {"sha": "a6106159805b20da2c3f8daf8b8ca9f099566cdb", "filename": "src/test/ui/parser/issue-14303-enum.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-14303-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-14303-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-14303-enum.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,6 +1,6 @@\n-// compile-flags: -Z parse-only\n-\n enum X<'a, T, 'b> {\n //~^ ERROR lifetime parameters must be declared prior to type parameters\n-    A(&'a T)\n+    A(&'a &'b T)\n }\n+\n+fn main() {}"}, {"sha": "a31429e7228c513868d6350951e3e7aab5258918", "filename": "src/test/ui/parser/issue-14303-enum.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-14303-enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-14303-enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-14303-enum.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: lifetime parameters must be declared prior to type parameters\n-  --> $DIR/issue-14303-enum.rs:3:15\n+  --> $DIR/issue-14303-enum.rs:1:15\n    |\n LL | enum X<'a, T, 'b> {\n    |               ^^"}, {"sha": "221bd311e7479ce34ad3ccdf3303c07b2934a769", "filename": "src/test/ui/parser/issue-14303-fn-def.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-14303-fn-def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-14303-fn-def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-14303-fn-def.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z parse-only\n-\n fn foo<'a, T, 'b>(x: &'a T) {}\n //~^ ERROR lifetime parameters must be declared prior to type parameters\n+\n+fn main() {}"}, {"sha": "4582aeef428d37d4e93f554b6399dea75c3b9828", "filename": "src/test/ui/parser/issue-14303-fn-def.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-14303-fn-def.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-14303-fn-def.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-14303-fn-def.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: lifetime parameters must be declared prior to type parameters\n-  --> $DIR/issue-14303-fn-def.rs:3:15\n+  --> $DIR/issue-14303-fn-def.rs:1:15\n    |\n LL | fn foo<'a, T, 'b>(x: &'a T) {}\n    |               ^^"}, {"sha": "f5894349e15762c01847e45d0ac5738a4420cdbc", "filename": "src/test/ui/parser/issue-14303-fncall.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-14303-fncall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-14303-fncall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-14303-fncall.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n fn main() {\n     (0..4)\n     .map(|x| x * 2)"}, {"sha": "1cc82f523c4baf77881a1ba8d085b4a0dd4c67bb", "filename": "src/test/ui/parser/issue-14303-fncall.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-14303-fncall.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-14303-fncall.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-14303-fncall.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: lifetime parameters must be declared prior to type parameters\n-  --> $DIR/issue-14303-fncall.rs:6:31\n+  --> $DIR/issue-14303-fncall.rs:4:31\n    |\n LL |     .collect::<Vec<'a, usize, 'b>>()\n    |                               ^^"}, {"sha": "4dc2c6660180722e1106cb0393ce4db547a5b26f", "filename": "src/test/ui/parser/issue-14303-impl.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-14303-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-14303-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-14303-impl.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,6 +1,6 @@\n-// compile-flags: -Z parse-only\n+struct X<T>(T);\n \n-struct X { x: isize }\n-\n-impl<'a, T, 'b> X {}\n+impl<'a, T, 'b> X<T> {}\n //~^ ERROR lifetime parameters must be declared prior to type parameters\n+\n+fn main() {}"}, {"sha": "a1953396153e0cb6ba2d0eda42ffec7b14781806", "filename": "src/test/ui/parser/issue-14303-impl.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-14303-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-14303-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-14303-impl.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,11 +1,11 @@\n error: lifetime parameters must be declared prior to type parameters\n-  --> $DIR/issue-14303-impl.rs:5:13\n+  --> $DIR/issue-14303-impl.rs:3:13\n    |\n-LL | impl<'a, T, 'b> X {}\n+LL | impl<'a, T, 'b> X<T> {}\n    |             ^^\n help: move the lifetime parameter prior to the first type parameter\n    |\n-LL | impl<'a, 'b, T> X {}\n+LL | impl<'a, 'b, T> X<T> {}\n    |          ^^^ --\n \n error: aborting due to previous error"}, {"sha": "f61cb6b8dd6ebaa6df055f17e342b923549fd1f2", "filename": "src/test/ui/parser/issue-14303-path.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-14303-path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-14303-path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-14303-path.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z parse-only\n-\n fn bar<'a, T>(x: mymodule::X<'a, T, 'b, 'c>) {}\n //~^ ERROR lifetime parameters must be declared prior to type parameters\n+\n+fn main() {}"}, {"sha": "3de8a169c69224668de791087b4c4fa002d2cc34", "filename": "src/test/ui/parser/issue-14303-path.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-14303-path.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-14303-path.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-14303-path.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: lifetime parameters must be declared prior to type parameters\n-  --> $DIR/issue-14303-path.rs:3:37\n+  --> $DIR/issue-14303-path.rs:1:37\n    |\n LL | fn bar<'a, T>(x: mymodule::X<'a, T, 'b, 'c>) {}\n    |                                     ^^"}, {"sha": "0bd10b4d08516e1eb2dc9b9909254903318c769e", "filename": "src/test/ui/parser/issue-14303-struct.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-14303-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-14303-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-14303-struct.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,6 +1,6 @@\n-// compile-flags: -Z parse-only\n-\n struct X<'a, T, 'b> {\n //~^ ERROR lifetime parameters must be declared prior to type parameters\n-    x: &'a T\n+    x: &'a &'b T\n }\n+\n+fn main() {}"}, {"sha": "668b8d1de6899d36004faca63af96fd0079e2def", "filename": "src/test/ui/parser/issue-14303-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-14303-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-14303-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-14303-struct.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: lifetime parameters must be declared prior to type parameters\n-  --> $DIR/issue-14303-struct.rs:3:17\n+  --> $DIR/issue-14303-struct.rs:1:17\n    |\n LL | struct X<'a, T, 'b> {\n    |                 ^^"}, {"sha": "f253de92d92de7d542852e775ffdd8f07e7ca23a", "filename": "src/test/ui/parser/issue-14303-trait.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-14303-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-14303-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-14303-trait.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z parse-only\n-\n trait Foo<'a, T, 'b> {}\n //~^ ERROR lifetime parameters must be declared prior to type parameters\n+\n+fn main() {}"}, {"sha": "11ce0c44351ad1734f110a17d1fec318132a6bf8", "filename": "src/test/ui/parser/issue-14303-trait.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-14303-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-14303-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-14303-trait.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: lifetime parameters must be declared prior to type parameters\n-  --> $DIR/issue-14303-trait.rs:3:18\n+  --> $DIR/issue-14303-trait.rs:1:18\n    |\n LL | trait Foo<'a, T, 'b> {}\n    |                  ^^"}, {"sha": "4a5606af6d025db892c0f8cb78e1eaf099a9eb7b", "filename": "src/test/ui/parser/issue-15914.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-15914.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-15914.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-15914.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n fn main() {\n     let ref\n         (); //~ ERROR expected identifier, found `(`"}, {"sha": "3a886c4c481f1c893c555908b3ab5f857c3e054d", "filename": "src/test/ui/parser/issue-15914.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-15914.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-15914.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-15914.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected identifier, found `(`\n-  --> $DIR/issue-15914.rs:5:9\n+  --> $DIR/issue-15914.rs:3:9\n    |\n LL |         (); //~ ERROR expected identifier, found `(`\n    |         ^ expected identifier"}, {"sha": "ba874fb4476f01e69c79745793f1198254c62127", "filename": "src/test/ui/parser/issue-15980.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-15980.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-15980.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-15980.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,9 +1,7 @@\n-// compile-flags: -Z parse-only\n-\n use std::io;\n \n fn main(){\n-    let x: io::IoResult<()> = Ok(());\n+    let x: io::Result<()> = Ok(());\n     match x {\n         Err(ref e) if e.kind == io::EndOfFile {\n             //~^ NOTE while parsing this struct"}, {"sha": "c91595208c864dcccc355049169d0bd5fa1d925c", "filename": "src/test/ui/parser/issue-15980.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-15980.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-15980.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-15980.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected identifier, found keyword `return`\n-  --> $DIR/issue-15980.rs:10:13\n+  --> $DIR/issue-15980.rs:8:13\n    |\n LL |         Err(ref e) if e.kind == io::EndOfFile {\n    |                                 ------------- while parsing this struct\n@@ -12,7 +12,7 @@ LL |             r#return\n    |\n \n error: expected one of `.`, `=>`, `?`, or an operator, found `_`\n-  --> $DIR/issue-15980.rs:15:9\n+  --> $DIR/issue-15980.rs:13:9\n    |\n LL |         }\n    |          - expected one of `.`, `=>`, `?`, or an operator here"}, {"sha": "3d0bf3c1c7b9f5a5d078b8e6ac4be55a5465ef20", "filename": "src/test/ui/parser/issue-1655.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-1655.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-1655.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-1655.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // error-pattern:expected `[`, found `vec`\n mod blade_runner {\n     #vec[doc("}, {"sha": "3f656b63cdb84d69e847fab96a82237e9acf2b65", "filename": "src/test/ui/parser/issue-1655.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-1655.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-1655.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-1655.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected `[`, found `vec`\n-  --> $DIR/issue-1655.rs:5:6\n+  --> $DIR/issue-1655.rs:3:6\n    |\n LL |     #vec[doc(\n    |      ^^^ expected `[`"}, {"sha": "9c00289287cdeb5a7761c4b9ee4cf4d1aeebb1bf", "filename": "src/test/ui/parser/issue-17383.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-17383.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-17383.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-17383.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n enum X {\n     A =\n         b'a' //~ ERROR discriminator values can only be used with a field-less enum"}, {"sha": "b225e11066dbcba43443e443f9ef46abf7517b3a", "filename": "src/test/ui/parser/issue-17383.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-17383.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-17383.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-17383.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: discriminator values can only be used with a field-less enum\n-  --> $DIR/issue-17383.rs:5:9\n+  --> $DIR/issue-17383.rs:3:9\n    |\n LL |         b'a' //~ ERROR discriminator values can only be used with a field-less enum\n    |         ^^^^"}, {"sha": "4e74516d6b6fbd67320e83a8b874831d02765cbf", "filename": "src/test/ui/parser/issue-17718-const-mut.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-17718-const-mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-17718-const-mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-17718-const-mut.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n const\n mut //~ ERROR: const globals cannot be mutable\n //~^ HELP did you mean to declare a static?"}, {"sha": "29a65ebe418891af89d65fdb2ef64d974e059716", "filename": "src/test/ui/parser/issue-17718-const-mut.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-17718-const-mut.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-17718-const-mut.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-17718-const-mut.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: const globals cannot be mutable\n-  --> $DIR/issue-17718-const-mut.rs:4:1\n+  --> $DIR/issue-17718-const-mut.rs:2:1\n    |\n LL | mut //~ ERROR: const globals cannot be mutable\n    | ^^^"}, {"sha": "d3f32255c31d798ef7beb13f26272f08d763c4ad", "filename": "src/test/ui/parser/issue-17904-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-17904-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-17904-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-17904-2.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z parse-only -Z continue-parse-after-error\n+// compile-flags: -Z continue-parse-after-error\n \n struct Bar<T> { x: T } where T: Copy //~ ERROR expected item, found keyword `where`\n "}, {"sha": "6112623041a7d18a3010d5de55e95bec86c65a72", "filename": "src/test/ui/parser/issue-17904.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-17904.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-17904.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-17904.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z parse-only -Z continue-parse-after-error\n+// compile-flags: -Z continue-parse-after-error\n \n struct Baz<U> where U: Eq(U); //This is parsed as the new Fn* style parenthesis syntax.\n struct Baz<U> where U: Eq(U) -> R; // Notice this parses as well."}, {"sha": "050e9a258d1ed78edf96274ce43d7834ab1d1cf6", "filename": "src/test/ui/parser/issue-1802-1.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-1802-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-1802-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-1802-1.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // error-pattern:no valid digits found for number\n fn main() {\n     log(error, 0b);"}, {"sha": "5cd6a4f7c686009f6ec3bdd81367ee4efc648087", "filename": "src/test/ui/parser/issue-1802-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-1802-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-1802-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-1802-1.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: no valid digits found for number\n-  --> $DIR/issue-1802-1.rs:5:16\n+  --> $DIR/issue-1802-1.rs:3:16\n    |\n LL |     log(error, 0b);\n    |                ^^"}, {"sha": "796db66d22e9a29548d07f0baa23a7ce93b043de", "filename": "src/test/ui/parser/issue-1802-2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-1802-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-1802-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-1802-2.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // error-pattern:no valid digits found for number\n fn main() {\n     log(error, 0b_usize);"}, {"sha": "c6c04279666a0d2180098c6ba894d1d808053b55", "filename": "src/test/ui/parser/issue-1802-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-1802-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-1802-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-1802-2.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: no valid digits found for number\n-  --> $DIR/issue-1802-2.rs:5:16\n+  --> $DIR/issue-1802-2.rs:3:16\n    |\n LL |     log(error, 0b_usize);\n    |                ^^^"}, {"sha": "edc69e6f49f4dec0ac63867f31ec1dc247dbc345", "filename": "src/test/ui/parser/issue-19096.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-19096.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-19096.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-19096.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,6 +1,5 @@\n-// compile-flags: -Z parse-only\n-\n fn main() {\n     let t = (42, 42);\n     t.0::<isize>; //~ ERROR expected one of `.`, `;`, `?`, `}`, or an operator, found `::`\n+                  //~| ERROR mismatched types\n }"}, {"sha": "f92604d0067c392336621dfb68fc4f5900f9ce17", "filename": "src/test/ui/parser/issue-19096.stderr", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-19096.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-19096.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-19096.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,8 +1,21 @@\n error: expected one of `.`, `;`, `?`, `}`, or an operator, found `::`\n-  --> $DIR/issue-19096.rs:5:8\n+  --> $DIR/issue-19096.rs:3:8\n    |\n LL |     t.0::<isize>; //~ ERROR expected one of `.`, `;`, `?`, `}`, or an operator, found `::`\n    |        ^^ expected one of `.`, `;`, `?`, `}`, or an operator here\n \n-error: aborting due to previous error\n+error[E0308]: mismatched types\n+  --> $DIR/issue-19096.rs:3:5\n+   |\n+LL | fn main() {\n+   |           - expected `()` because of default return type\n+LL |     let t = (42, 42);\n+LL |     t.0::<isize>; //~ ERROR expected one of `.`, `;`, `?`, `}`, or an operator, found `::`\n+   |     ^^^ expected (), found integer\n+   |\n+   = note: expected type `()`\n+              found type `{integer}`\n+\n+error: aborting due to 2 previous errors\n \n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "822f4a6fde2c7993ea89e2ed82357f7032cedc77", "filename": "src/test/ui/parser/issue-19398.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-19398.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-19398.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-19398.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n trait T {\n     extern \"Rust\" unsafe fn foo(); //~ ERROR expected `fn`, found `unsafe`\n }"}, {"sha": "627b74ff8f7bd10d132c3c3428af024e55f48c2e", "filename": "src/test/ui/parser/issue-19398.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-19398.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-19398.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-19398.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected `fn`, found `unsafe`\n-  --> $DIR/issue-19398.rs:4:19\n+  --> $DIR/issue-19398.rs:2:19\n    |\n LL |     extern \"Rust\" unsafe fn foo(); //~ ERROR expected `fn`, found `unsafe`\n    |                   ^^^^^^ expected `fn` here"}, {"sha": "49b8de03c37476e687e6b640b12f5b6d581aa9e5", "filename": "src/test/ui/parser/issue-20711-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-20711-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-20711-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-20711-2.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,4 +1,3 @@\n-// compile-flags: -Z parse-only\n // ignore-tidy-linelength\n \n struct Foo;"}, {"sha": "e06eb7a9846e1efbe1071b73069cd630c73e9948", "filename": "src/test/ui/parser/issue-20711-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-20711-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-20711-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-20711-2.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected one of `async`, `const`, `crate`, `default`, `existential`, `extern`, `fn`, `pub`, `type`, or `unsafe`, found `}`\n-  --> $DIR/issue-20711-2.rs:10:1\n+  --> $DIR/issue-20711-2.rs:9:1\n    |\n LL |     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    |                                                  - expected one of 10 possible tokens here"}, {"sha": "8d8401da61a85dcec68d4a71744a2ed60c60d21f", "filename": "src/test/ui/parser/issue-20711.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-20711.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-20711.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-20711.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,4 +1,3 @@\n-// compile-flags: -Z parse-only\n // ignore-tidy-linelength\n \n struct Foo;"}, {"sha": "6cf39608fcc9b90dd50254ee800edf5fdaf35565", "filename": "src/test/ui/parser/issue-20711.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-20711.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-20711.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-20711.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected one of `async`, `const`, `crate`, `default`, `existential`, `extern`, `fn`, `pub`, `type`, or `unsafe`, found `}`\n-  --> $DIR/issue-20711.rs:8:1\n+  --> $DIR/issue-20711.rs:7:1\n    |\n LL |     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n    |                                                  - expected one of 10 possible tokens here"}, {"sha": "46cd45f28b43da81d0032a380f88c4b86b59dd3a", "filename": "src/test/ui/parser/issue-21153.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-21153.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-21153.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-21153.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n-// compile-flags: -Z parse-only\n-\n trait MyTrait<T>: Iterator { //~ ERROR missing `fn`, `type`, or `const`\n     Item = T;\n }\n+\n+fn main() {}"}, {"sha": "1e0244c2e1d327946539fdb2294ee6869a99471c", "filename": "src/test/ui/parser/issue-21153.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-21153.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-21153.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-21153.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: missing `fn`, `type`, or `const` for trait-item declaration\n-  --> $DIR/issue-21153.rs:3:29\n+  --> $DIR/issue-21153.rs:1:29\n    |\n LL |   trait MyTrait<T>: Iterator { //~ ERROR missing `fn`, `type`, or `const`\n    |  _____________________________^"}, {"sha": "25cd7ffce5a9732268a80f03ba1a97a5f1fc3614", "filename": "src/test/ui/parser/issue-22647.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-22647.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-22647.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-22647.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n fn main() {\n     let caller<F> = |f: F|  //~ ERROR expected one of `:`, `;`, `=`, or `@`, found `<`\n     where F: Fn() -> i32"}, {"sha": "8935ea9c6c1252d360f09daa41513a12f6f8ee1d", "filename": "src/test/ui/parser/issue-22647.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-22647.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-22647.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-22647.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected one of `:`, `;`, `=`, or `@`, found `<`\n-  --> $DIR/issue-22647.rs:4:15\n+  --> $DIR/issue-22647.rs:2:15\n    |\n LL |     let caller<F> = |f: F|  //~ ERROR expected one of `:`, `;`, `=`, or `@`, found `<`\n    |               ^ expected one of `:`, `;`, `=`, or `@` here"}, {"sha": "b03d578e3d63831061678530935cb4af8269f1c2", "filename": "src/test/ui/parser/issue-22712.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-22712.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-22712.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-22712.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n struct Foo<B> {\n     buffer: B\n }"}, {"sha": "3a4fa9a5e7ba7f305167a263ea2d59e2ee39b989", "filename": "src/test/ui/parser/issue-22712.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-22712.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-22712.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-22712.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected one of `:`, `;`, `=`, or `@`, found `<`\n-  --> $DIR/issue-22712.rs:8:12\n+  --> $DIR/issue-22712.rs:6:12\n    |\n LL |     let Foo<Vec<u8>>  //~ ERROR expected one of `:`, `;`, `=`, or `@`, found `<`\n    |            ^ expected one of `:`, `;`, `=`, or `@` here"}, {"sha": "7e4e24fae1964649bfef51e357c03fc4f91065db", "filename": "src/test/ui/parser/issue-2354-1.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-2354-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-2354-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-2354-1.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,3 +1 @@\n-// compile-flags: -Z parse-only\n-\n static foo: isize = 2; } //~ ERROR unexpected close delimiter:"}, {"sha": "da25aac486e351e2aa1cde102d930d9a647574ea", "filename": "src/test/ui/parser/issue-2354-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-2354-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-2354-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-2354-1.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: unexpected close delimiter: `}`\n-  --> $DIR/issue-2354-1.rs:3:24\n+  --> $DIR/issue-2354-1.rs:1:24\n    |\n LL | static foo: isize = 2; } //~ ERROR unexpected close delimiter:\n    |                        ^ unexpected close delimiter"}, {"sha": "565f84822f7d6139a336dfbf1d01c5d630d43f47", "filename": "src/test/ui/parser/issue-2354.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-2354.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-2354.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-2354.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,7 +1,5 @@\n-// compile-flags: -Z parse-only\n-\n fn foo() { //~ NOTE un-closed delimiter\n-  match Some(x) {\n+  match Some(10) {\n   //~^ NOTE this delimiter might not be properly closed...\n       Some(y) => { panic!(); }\n       None => { panic!(); }\n@@ -13,4 +11,5 @@ fn bar() {\n     while (i < 1000) {}\n }\n \n-fn main() {} //~ ERROR this file contains an un-closed delimiter\n+fn main() {} //~ NOTE here is a function named 'main'\n+             //~ ERROR this file contains an un-closed delimiter"}, {"sha": "0f4cd5724ce1ec11f164156f1895dea44e9c2eb6", "filename": "src/test/ui/parser/issue-2354.stderr", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-2354.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-2354.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-2354.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,16 +1,26 @@\n error: this file contains an un-closed delimiter\n-  --> $DIR/issue-2354.rs:16:66\n+  --> $DIR/issue-2354.rs:15:66\n    |\n LL | fn foo() { //~ NOTE un-closed delimiter\n    |          - un-closed delimiter\n-LL |   match Some(x) {\n-   |                 - this delimiter might not be properly closed...\n+LL |   match Some(10) {\n+   |                  - this delimiter might not be properly closed...\n ...\n LL | }\n    | - ...as it matches this but it has different indentation\n ...\n-LL | fn main() {} //~ ERROR this file contains an un-closed delimiter\n+LL |              //~ ERROR this file contains an un-closed delimiter\n    |                                                                  ^\n \n-error: aborting due to previous error\n+error[E0601]: `main` function not found in crate `issue_2354`\n+   |\n+   = note: the main function must be defined at the crate level but you have one or more functions named 'main' that are not defined at the crate level. Either move the definition or attach the `#[main]` attribute to override this behavior.\n+note: here is a function named 'main'\n+  --> $DIR/issue-2354.rs:14:1\n+   |\n+LL | fn main() {} //~ NOTE here is a function named 'main'\n+   | ^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n \n+For more information about this error, try `rustc --explain E0601`."}, {"sha": "b4b8f1fc0b0ab38b056504ae188dfc4cfec9cb51", "filename": "src/test/ui/parser/issue-23620-invalid-escapes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-23620-invalid-escapes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-23620-invalid-escapes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-23620-invalid-escapes.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z parse-only -Z continue-parse-after-error\n+// compile-flags: -Z continue-parse-after-error\n \n fn main() {\n     let _ = b\"\\u{a66e}\";"}, {"sha": "005ff9fa2e0ec812644f62b527ad2a93970e1d84", "filename": "src/test/ui/parser/issue-24197.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-24197.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-24197.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-24197.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n fn main() {\n     let buf[0] = 0; //~ ERROR expected one of `:`, `;`, `=`, or `@`, found `[`\n }"}, {"sha": "4e073d8c58aaa4394607a109b021f8514f26b4e8", "filename": "src/test/ui/parser/issue-24197.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-24197.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-24197.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-24197.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected one of `:`, `;`, `=`, or `@`, found `[`\n-  --> $DIR/issue-24197.rs:4:12\n+  --> $DIR/issue-24197.rs:2:12\n    |\n LL |     let buf[0] = 0; //~ ERROR expected one of `:`, `;`, `=`, or `@`, found `[`\n    |            ^ expected one of `:`, `;`, `=`, or `@` here"}, {"sha": "1d128d33e4f49d53cfd4d4a8de88db95e35f25d2", "filename": "src/test/ui/parser/issue-24375.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-24375.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-24375.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-24375.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n static tmp : [&'static str; 2]  = [\"hello\", \"he\"];\n \n fn main() {"}, {"sha": "f773a7df4feddd73d1c67dfdb9781b67c4016120", "filename": "src/test/ui/parser/issue-24375.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-24375.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-24375.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-24375.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected one of `=>`, `@`, `if`, or `|`, found `[`\n-  --> $DIR/issue-24375.rs:8:12\n+  --> $DIR/issue-24375.rs:6:12\n    |\n LL |         tmp[0] => {} //~ ERROR expected one of `=>`, `@`, `if`, or `|`, found `[`\n    |            ^ expected one of `=>`, `@`, `if`, or `|` here"}, {"sha": "799cdd8022257afdafe2b1aeb02ec73cd4f8566c", "filename": "src/test/ui/parser/issue-24780.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-24780.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-24780.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-24780.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,8 +1,6 @@\n // Verify that '>' is not both expected and found at the same time, as it used\n // to happen in #24780. For example, following should be an error:\n // expected one of ..., `>`, ... found `>`\n-//\n-// compile-flags: -Z parse-only\n \n fn foo() -> Vec<usize>> {\n     //~^ ERROR expected one of `!`, `+`, `::`, `where`, or `{`, found `>`"}, {"sha": "469c034795efe07a2dc3b9fdbbfdfc4f8a203554", "filename": "src/test/ui/parser/issue-24780.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-24780.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-24780.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-24780.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected one of `!`, `+`, `::`, `where`, or `{`, found `>`\n-  --> $DIR/issue-24780.rs:7:23\n+  --> $DIR/issue-24780.rs:5:23\n    |\n LL | fn foo() -> Vec<usize>> {\n    |                       ^ expected one of `!`, `+`, `::`, `where`, or `{` here"}, {"sha": "c0ff331b8bae0fefd9d7d09dc6146194443bfb2f", "filename": "src/test/ui/parser/issue-27255.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-27255.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-27255.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-27255.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n impl A .. {} //~ ERROR\n \n fn main() {}"}, {"sha": "6d09d82e34f33222d6385cb803f34dbc63ffff6b", "filename": "src/test/ui/parser/issue-27255.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-27255.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-27255.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-27255.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: missing `for` in a trait impl\n-  --> $DIR/issue-27255.rs:3:7\n+  --> $DIR/issue-27255.rs:1:7\n    |\n LL | impl A .. {} //~ ERROR\n    |       ^"}, {"sha": "38e30de716d0a1491977966b0795b3148e851934", "filename": "src/test/ui/parser/issue-30318.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-30318.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-30318.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-30318.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n fn foo() { }\n \n //! Misplaced comment..."}, {"sha": "489451bb5dc8d3ff8ee2637b958abcea643373bb", "filename": "src/test/ui/parser/issue-30318.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-30318.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-30318.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-30318.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected outer doc comment\n-  --> $DIR/issue-30318.rs:5:1\n+  --> $DIR/issue-30318.rs:3:1\n    |\n LL | //! Misplaced comment...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "00b241b9054cd0c554c9664b3b4a184c8f0643e0", "filename": "src/test/ui/parser/issue-3036.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-3036.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-3036.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-3036.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // Testing that semicolon tokens are printed correctly in errors\n \n fn main()"}, {"sha": "eadf5546d8505243acd61588c8bd0bbcf4b092b2", "filename": "src/test/ui/parser/issue-3036.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-3036.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-3036.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-3036.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected one of `.`, `;`, `?`, or an operator, found `}`\n-  --> $DIR/issue-3036.rs:8:1\n+  --> $DIR/issue-3036.rs:6:1\n    |\n LL |     let x = 3\n    |              - expected one of `.`, `;`, `?`, or an operator here"}, {"sha": "7e55bc038e76681d412793a4333ec3ca7e34800c", "filename": "src/test/ui/parser/issue-32214.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-32214.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-32214.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-32214.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,6 +1,8 @@\n-// compile-flags: -Z parse-only -Z continue-parse-after-error\n+// compile-flags: -Z continue-parse-after-error\n \n-pub fn test<W, I: Iterator<Item=(), W> >() {}\n+trait Trait<T> { type Item; }\n+\n+pub fn test<W, I: Trait<Item=(), W> >() {}\n //~^ ERROR type parameters must be declared prior to associated type bindings\n \n fn main() { }"}, {"sha": "a01517d016d07c9b2ab6e2337147db61d87a39d3", "filename": "src/test/ui/parser/issue-32214.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-32214.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-32214.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-32214.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,8 +1,8 @@\n error: type parameters must be declared prior to associated type bindings\n-  --> $DIR/issue-32214.rs:3:37\n+  --> $DIR/issue-32214.rs:5:34\n    |\n-LL | pub fn test<W, I: Iterator<Item=(), W> >() {}\n-   |                                     ^\n+LL | pub fn test<W, I: Trait<Item=(), W> >() {}\n+   |                                  ^\n \n error: aborting due to previous error\n "}, {"sha": "53e519a72a5fd8b8c2c5f479a4cae7a20e3b310a", "filename": "src/test/ui/parser/issue-32446.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-32446.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-32446.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-32446.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n fn main() {}\n \n // This used to end up in an infite loop trying to bump past EOF."}, {"sha": "07eafdde9071a7d60174783ba08c6171d405da75", "filename": "src/test/ui/parser/issue-32446.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-32446.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-32446.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-32446.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected one of `async`, `const`, `extern`, `fn`, `type`, `unsafe`, or `}`, found `...`\n-  --> $DIR/issue-32446.rs:6:11\n+  --> $DIR/issue-32446.rs:4:11\n    |\n LL | trait T { ... } //~ ERROR\n    |           ^^^ expected one of 7 possible tokens here"}, {"sha": "9c01a5c6d20e30afe869f92670f765ad3524fa54", "filename": "src/test/ui/parser/issue-32501.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-32501.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-32501.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-32501.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n fn main() {\n     let a = 0;\n     let _b = 0;"}, {"sha": "d74c539abfe54e6f64a5dbbcdea93df35bbd6465", "filename": "src/test/ui/parser/issue-32501.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-32501.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-32501.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-32501.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected identifier, found reserved identifier `_`\n-  --> $DIR/issue-32501.rs:9:13\n+  --> $DIR/issue-32501.rs:7:13\n    |\n LL |     let mut _ = 0; //~ ERROR expected identifier, found reserved identifier `_`\n    |             ^ expected identifier, found reserved identifier"}, {"sha": "49e7a2f536f2a21ca59334561a4e56dfe16e4780", "filename": "src/test/ui/parser/issue-32505.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-32505.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-32505.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-32505.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z parse-only -Z continue-parse-after-error\n+// compile-flags: -Z continue-parse-after-error\n \n pub fn test() {\n     foo(|_|) //~ ERROR expected expression, found `)`"}, {"sha": "3a612f95c036d3a5e191026e0e5569ce544fd494", "filename": "src/test/ui/parser/issue-33262.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-33262.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-33262.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-33262.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // Issue #33262\n \n pub fn main() {"}, {"sha": "c2491df903b76f0e1964701a5d480cf41267c349", "filename": "src/test/ui/parser/issue-33262.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-33262.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-33262.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-33262.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected type, found `{`\n-  --> $DIR/issue-33262.rs:6:22\n+  --> $DIR/issue-33262.rs:4:22\n    |\n LL |     for i in 0..a as { }\n    |                      ^"}, {"sha": "2ec86958174a4a9d95130b7e5869f8d1ccc18133", "filename": "src/test/ui/parser/issue-33413.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-33413.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-33413.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-33413.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,6 +1,8 @@\n-// compile-flags: -Z parse-only\n+struct S;\n \n impl S {\n     fn f(*, a: u8) -> u8 {}\n     //~^ ERROR expected argument name, found `*`\n }\n+\n+fn main() {}"}, {"sha": "6dff63f5cf41299ce449a0e7acdff3e147ea33ba", "filename": "src/test/ui/parser/issue-33455.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-33455.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-33455.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-33455.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,3 +1 @@\n-// compile-flags: -Z parse-only\n-\n use foo.bar; //~ ERROR expected one of `::`, `;`, or `as`, found `.`"}, {"sha": "38d00a0ea0b4c157835af7ccb9564a37742a8e2c", "filename": "src/test/ui/parser/issue-33455.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-33455.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-33455.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-33455.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected one of `::`, `;`, or `as`, found `.`\n-  --> $DIR/issue-33455.rs:3:8\n+  --> $DIR/issue-33455.rs:1:8\n    |\n LL | use foo.bar; //~ ERROR expected one of `::`, `;`, or `as`, found `.`\n    |        ^ expected one of `::`, `;`, or `as` here"}, {"sha": "3c24d2b447de4ab73ba1e6051496e8cbdd0a0c43", "filename": "src/test/ui/parser/issue-41155.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-41155.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-41155.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-41155.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z parse-only\n+struct S;\n \n impl S {\n     pub"}, {"sha": "baf8bafb8b7176fdaab659391e8c76ece5c3ffcd", "filename": "src/test/ui/parser/issue-43692.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-43692.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-43692.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-43692.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n fn main() {\n     '\\u{_10FFFF}'; //~ ERROR invalid start of unicode escape\n }"}, {"sha": "780f63a663860b34795bb6c95e9e758452585c90", "filename": "src/test/ui/parser/issue-43692.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-43692.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-43692.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-43692.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: invalid start of unicode escape\n-  --> $DIR/issue-43692.rs:4:9\n+  --> $DIR/issue-43692.rs:2:9\n    |\n LL |     '/u{_10FFFF}'; //~ ERROR invalid start of unicode escape\n    |         ^"}, {"sha": "303b902c499043d959c3f70b5fbced8c9a901adc", "filename": "src/test/ui/parser/issue-5544-a.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-5544-a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-5544-a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-5544-a.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n fn main() {\n     let __isize = 340282366920938463463374607431768211456; // 2^128\n     //~^ ERROR int literal is too large"}, {"sha": "bc48853b380e6fe00e984d76c6297d51edf12134", "filename": "src/test/ui/parser/issue-5544-a.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-5544-a.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-5544-a.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-5544-a.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: int literal is too large\n-  --> $DIR/issue-5544-a.rs:4:19\n+  --> $DIR/issue-5544-a.rs:2:19\n    |\n LL |     let __isize = 340282366920938463463374607431768211456; // 2^128\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "fa40f15dedb5c3a48abcb7160327c83b8123a6c3", "filename": "src/test/ui/parser/issue-5544-b.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-5544-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-5544-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-5544-b.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n fn main() {\n     let __isize = 0xffff_ffff_ffff_ffff_ffff_ffff_ffff_ffff_ff;\n     //~^ ERROR int literal is too large"}, {"sha": "3f15c0c0d755c9051dae36b787d545f76f9af58c", "filename": "src/test/ui/parser/issue-5544-b.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-5544-b.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-5544-b.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-5544-b.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: int literal is too large\n-  --> $DIR/issue-5544-b.rs:4:19\n+  --> $DIR/issue-5544-b.rs:2:19\n    |\n LL |     let __isize = 0xffff_ffff_ffff_ffff_ffff_ffff_ffff_ffff_ff;\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "b694642a9c5d6ba465021dcb7d7b9ae4143bf1e7", "filename": "src/test/ui/parser/issue-5806.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-5806.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-5806.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-5806.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,4 +1,3 @@\n-// compile-flags: -Z parse-only\n // normalize-stderr-test: \"parser:.*\\(\" -> \"parser: $$ACCESS_DENIED_MSG (\"\n // normalize-stderr-test: \"os error \\d+\" -> \"os error $$ACCESS_DENIED_CODE\"\n "}, {"sha": "f9f00f70f0b908a810266f3b963f28785d1231b2", "filename": "src/test/ui/parser/issue-5806.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-5806.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-5806.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-5806.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: couldn't read $DIR/../parser: $ACCESS_DENIED_MSG (os error $ACCESS_DENIED_CODE)\n-  --> $DIR/issue-5806.rs:6:5\n+  --> $DIR/issue-5806.rs:5:5\n    |\n LL | mod foo; //~ ERROR couldn't read\n    |     ^^^"}, {"sha": "2dfa08fe82d627088983b1af25070167e5fc08e9", "filename": "src/test/ui/parser/issue-6610.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-6610.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-6610.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-6610.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n trait Foo { fn a() } //~ ERROR expected `;` or `{`, found `}`\n \n fn main() {}"}, {"sha": "b4760161a62a5e580341a3dcdd16a66b2ebe2418", "filename": "src/test/ui/parser/issue-6610.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-6610.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-6610.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-6610.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected `;` or `{`, found `}`\n-  --> $DIR/issue-6610.rs:3:20\n+  --> $DIR/issue-6610.rs:1:20\n    |\n LL | trait Foo { fn a() } //~ ERROR expected `;` or `{`, found `}`\n    |                    ^ expected `;` or `{`"}, {"sha": "9d0cbce6c8a37ae3461d8670aaeb381d4274fa87", "filename": "src/test/ui/parser/issue-8537.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-8537.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-8537.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-8537.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n pub extern\n   \"invalid-ab_isize\" //~ ERROR invalid ABI\n fn foo() {}"}, {"sha": "4442cd0ff011c174e6ad25295189579017b2bf33", "filename": "src/test/ui/parser/issue-8537.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-8537.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fissue-8537.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-8537.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error[E0703]: invalid ABI: found `invalid-ab_isize`\n-  --> $DIR/issue-8537.rs:4:3\n+  --> $DIR/issue-8537.rs:2:3\n    |\n LL |   \"invalid-ab_isize\" //~ ERROR invalid ABI\n    |   ^^^^^^^^^^^^^^^^^^ invalid ABI"}, {"sha": "890802ac134a0f732af6a71109af72740bc8dc27", "filename": "src/test/ui/parser/keyword-abstract.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-abstract.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-abstract.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-abstract.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n fn main() {\n     let abstract = (); //~ ERROR expected pattern, found reserved keyword `abstract`\n }"}, {"sha": "4185ae034b5041889c5792a0eac61293a24fe889", "filename": "src/test/ui/parser/keyword-abstract.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-abstract.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-abstract.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-abstract.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected pattern, found reserved keyword `abstract`\n-  --> $DIR/keyword-abstract.rs:4:9\n+  --> $DIR/keyword-abstract.rs:2:9\n    |\n LL |     let abstract = (); //~ ERROR expected pattern, found reserved keyword `abstract`\n    |         ^^^^^^^^ expected pattern"}, {"sha": "23ff259db30481204246170c6b99a30ac7be2c4c", "filename": "src/test/ui/parser/keyword-as-as-identifier.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-as-as-identifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-as-as-identifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-as-as-identifier.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // This file was auto-generated using 'src/etc/generate-keyword-tests.py as'\n \n fn main() {"}, {"sha": "6eaf5e2ed93ee5fd56b7e3008d1b3a4953f077b6", "filename": "src/test/ui/parser/keyword-as-as-identifier.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-as-as-identifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-as-as-identifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-as-as-identifier.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected pattern, found keyword `as`\n-  --> $DIR/keyword-as-as-identifier.rs:6:9\n+  --> $DIR/keyword-as-as-identifier.rs:4:9\n    |\n LL |     let as = \"foo\"; //~ error: expected pattern, found keyword `as`\n    |         ^^ expected pattern"}, {"sha": "33961bb308467252048aed30674dc14e51aeb08c", "filename": "src/test/ui/parser/keyword-box-as-identifier.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-box-as-identifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-box-as-identifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-box-as-identifier.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n fn main() {\n     let box = \"foo\"; //~ error: expected pattern, found `=`\n }"}, {"sha": "07a134442b8de143527866a16fbcb10398e54de4", "filename": "src/test/ui/parser/keyword-box-as-identifier.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-box-as-identifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-box-as-identifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-box-as-identifier.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected pattern, found `=`\n-  --> $DIR/keyword-box-as-identifier.rs:4:13\n+  --> $DIR/keyword-box-as-identifier.rs:2:13\n    |\n LL |     let box = \"foo\"; //~ error: expected pattern, found `=`\n    |             ^ expected pattern"}, {"sha": "5ee111d38c9c3a3eeb369ffa587331f2a3ed4077", "filename": "src/test/ui/parser/keyword-break-as-identifier.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-break-as-identifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-break-as-identifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-break-as-identifier.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // This file was auto-generated using 'src/etc/generate-keyword-tests.py break'\n \n fn main() {"}, {"sha": "69af97374455a77dd377eb7d22a56bc4cdfb5ca3", "filename": "src/test/ui/parser/keyword-break-as-identifier.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-break-as-identifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-break-as-identifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-break-as-identifier.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected pattern, found keyword `break`\n-  --> $DIR/keyword-break-as-identifier.rs:6:9\n+  --> $DIR/keyword-break-as-identifier.rs:4:9\n    |\n LL |     let break = \"foo\"; //~ error: expected pattern, found keyword `break`\n    |         ^^^^^ expected pattern"}, {"sha": "48fc142cf64b13129df304be40f30a0c606284a6", "filename": "src/test/ui/parser/keyword-const-as-identifier.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-const-as-identifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-const-as-identifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-const-as-identifier.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // This file was auto-generated using 'src/etc/generate-keyword-tests.py const'\n \n fn main() {"}, {"sha": "c727f1754c77e08b347dff991d0d5157d5435bdb", "filename": "src/test/ui/parser/keyword-const-as-identifier.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-const-as-identifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-const-as-identifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-const-as-identifier.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected pattern, found keyword `const`\n-  --> $DIR/keyword-const-as-identifier.rs:6:9\n+  --> $DIR/keyword-const-as-identifier.rs:4:9\n    |\n LL |     let const = \"foo\"; //~ error: expected pattern, found keyword `const`\n    |         ^^^^^ expected pattern"}, {"sha": "06315a48349ffee1928698eeef585655c4148a11", "filename": "src/test/ui/parser/keyword-continue-as-identifier.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-continue-as-identifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-continue-as-identifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-continue-as-identifier.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // This file was auto-generated using 'src/etc/generate-keyword-tests.py continue'\n \n fn main() {"}, {"sha": "7fd2761884f7956f4ac1784d531e3e865d66a9bc", "filename": "src/test/ui/parser/keyword-continue-as-identifier.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-continue-as-identifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-continue-as-identifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-continue-as-identifier.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected pattern, found keyword `continue`\n-  --> $DIR/keyword-continue-as-identifier.rs:6:9\n+  --> $DIR/keyword-continue-as-identifier.rs:4:9\n    |\n LL |     let continue = \"foo\"; //~ error: expected pattern, found keyword `continue`\n    |         ^^^^^^^^ expected pattern"}, {"sha": "0c69105cf9457ae39277d056249747e9157abcdf", "filename": "src/test/ui/parser/keyword-else-as-identifier.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-else-as-identifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-else-as-identifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-else-as-identifier.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // This file was auto-generated using 'src/etc/generate-keyword-tests.py else'\n \n fn main() {"}, {"sha": "6d180bb56da5d04dc042a0f13cf9bceb2e974b52", "filename": "src/test/ui/parser/keyword-else-as-identifier.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-else-as-identifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-else-as-identifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-else-as-identifier.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected pattern, found keyword `else`\n-  --> $DIR/keyword-else-as-identifier.rs:6:9\n+  --> $DIR/keyword-else-as-identifier.rs:4:9\n    |\n LL |     let else = \"foo\"; //~ error: expected pattern, found keyword `else`\n    |         ^^^^ expected pattern"}, {"sha": "d1675800a2791d59169143048fc14182f2f14aaa", "filename": "src/test/ui/parser/keyword-enum-as-identifier.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-enum-as-identifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-enum-as-identifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-enum-as-identifier.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // This file was auto-generated using 'src/etc/generate-keyword-tests.py enum'\n \n fn main() {"}, {"sha": "dc7e37824dc688ed8cf60d91aa15d5adb8adfe6a", "filename": "src/test/ui/parser/keyword-enum-as-identifier.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-enum-as-identifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-enum-as-identifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-enum-as-identifier.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected pattern, found keyword `enum`\n-  --> $DIR/keyword-enum-as-identifier.rs:6:9\n+  --> $DIR/keyword-enum-as-identifier.rs:4:9\n    |\n LL |     let enum = \"foo\"; //~ error: expected pattern, found keyword `enum`\n    |         ^^^^ expected pattern"}, {"sha": "e1cecd0e8e07a8c593ed1de33d5a33c49ba1e95c", "filename": "src/test/ui/parser/keyword-final.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-final.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-final.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-final.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n fn main() {\n     let final = (); //~ ERROR expected pattern, found reserved keyword `final`\n }"}, {"sha": "897624279e5e8b807b2f1dc082ffffe5ac234c19", "filename": "src/test/ui/parser/keyword-final.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-final.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-final.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-final.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected pattern, found reserved keyword `final`\n-  --> $DIR/keyword-final.rs:4:9\n+  --> $DIR/keyword-final.rs:2:9\n    |\n LL |     let final = (); //~ ERROR expected pattern, found reserved keyword `final`\n    |         ^^^^^ expected pattern"}, {"sha": "bca2d5996a54bdb80f3e5fbbbf9a3b968f5a9103", "filename": "src/test/ui/parser/keyword-fn-as-identifier.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-fn-as-identifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-fn-as-identifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-fn-as-identifier.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // This file was auto-generated using 'src/etc/generate-keyword-tests.py fn'\n \n fn main() {"}, {"sha": "945fc77c3102fa63c9772374d691998741045446", "filename": "src/test/ui/parser/keyword-fn-as-identifier.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-fn-as-identifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-fn-as-identifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-fn-as-identifier.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected pattern, found keyword `fn`\n-  --> $DIR/keyword-fn-as-identifier.rs:6:9\n+  --> $DIR/keyword-fn-as-identifier.rs:4:9\n    |\n LL |     let fn = \"foo\"; //~ error: expected pattern, found keyword `fn`\n    |         ^^ expected pattern"}, {"sha": "ce49fd90d91012b0f09e0500dbd41e327f1e7be9", "filename": "src/test/ui/parser/keyword-for-as-identifier.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-for-as-identifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-for-as-identifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-for-as-identifier.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // This file was auto-generated using 'src/etc/generate-keyword-tests.py for'\n \n fn main() {"}, {"sha": "32263e9f6e20e0703c852b9bf96c6e78060ae2c3", "filename": "src/test/ui/parser/keyword-for-as-identifier.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-for-as-identifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-for-as-identifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-for-as-identifier.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected pattern, found keyword `for`\n-  --> $DIR/keyword-for-as-identifier.rs:6:9\n+  --> $DIR/keyword-for-as-identifier.rs:4:9\n    |\n LL |     let for = \"foo\"; //~ error: expected pattern, found keyword `for`\n    |         ^^^ expected pattern"}, {"sha": "a1302970689c4c4b2d3eb4fd6f5d9d4914b1d7df", "filename": "src/test/ui/parser/keyword-if-as-identifier.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-if-as-identifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-if-as-identifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-if-as-identifier.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // This file was auto-generated using 'src/etc/generate-keyword-tests.py if'\n \n fn main() {"}, {"sha": "11ba41015cbd25bff152f0c15c720775b70a4b71", "filename": "src/test/ui/parser/keyword-if-as-identifier.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-if-as-identifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-if-as-identifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-if-as-identifier.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected pattern, found keyword `if`\n-  --> $DIR/keyword-if-as-identifier.rs:6:9\n+  --> $DIR/keyword-if-as-identifier.rs:4:9\n    |\n LL |     let if = \"foo\"; //~ error: expected pattern, found keyword `if`\n    |         ^^ expected pattern"}, {"sha": "95a34483ad21ac6cb358088a2580e9787d03df7d", "filename": "src/test/ui/parser/keyword-impl-as-identifier.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-impl-as-identifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-impl-as-identifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-impl-as-identifier.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // This file was auto-generated using 'src/etc/generate-keyword-tests.py impl'\n \n fn main() {"}, {"sha": "960a42df429e9a9098e165c37e2cc67a15bb0f1c", "filename": "src/test/ui/parser/keyword-impl-as-identifier.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-impl-as-identifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-impl-as-identifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-impl-as-identifier.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected pattern, found keyword `impl`\n-  --> $DIR/keyword-impl-as-identifier.rs:6:9\n+  --> $DIR/keyword-impl-as-identifier.rs:4:9\n    |\n LL |     let impl = \"foo\"; //~ error: expected pattern, found keyword `impl`\n    |         ^^^^ expected pattern"}, {"sha": "e4499dea255e342b70dabdfd8cfe96c98e487422", "filename": "src/test/ui/parser/keyword-in-as-identifier.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-in-as-identifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-in-as-identifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-in-as-identifier.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // This file was auto-generated using 'src/etc/generate-keyword-tests.py in'\n \n fn main() {"}, {"sha": "2300a257a02b5950284ebc909a03896f67d0cc5b", "filename": "src/test/ui/parser/keyword-in-as-identifier.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-in-as-identifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-in-as-identifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-in-as-identifier.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected pattern, found keyword `in`\n-  --> $DIR/keyword-in-as-identifier.rs:6:9\n+  --> $DIR/keyword-in-as-identifier.rs:4:9\n    |\n LL |     let in = \"foo\"; //~ error: expected pattern, found keyword `in`\n    |         ^^ expected pattern"}, {"sha": "07c0ddf8ce573de890ad1c20c64fdd5210a6f0f1", "filename": "src/test/ui/parser/keyword-let-as-identifier.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-let-as-identifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-let-as-identifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-let-as-identifier.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // This file was auto-generated using 'src/etc/generate-keyword-tests.py let'\n \n fn main() {"}, {"sha": "ed2c8a4eb9c4c265f2e2fc651aebf8b6e257ff89", "filename": "src/test/ui/parser/keyword-let-as-identifier.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-let-as-identifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-let-as-identifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-let-as-identifier.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected pattern, found keyword `let`\n-  --> $DIR/keyword-let-as-identifier.rs:6:9\n+  --> $DIR/keyword-let-as-identifier.rs:4:9\n    |\n LL |     let let = \"foo\"; //~ error: expected pattern, found keyword `let`\n    |         ^^^ expected pattern"}, {"sha": "8643ffe434505d666ff245924c6f00f426105f4d", "filename": "src/test/ui/parser/keyword-loop-as-identifier.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-loop-as-identifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-loop-as-identifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-loop-as-identifier.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // This file was auto-generated using 'src/etc/generate-keyword-tests.py loop'\n \n fn main() {"}, {"sha": "f91cab029533c9b560e3414a32771995df31a612", "filename": "src/test/ui/parser/keyword-loop-as-identifier.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-loop-as-identifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-loop-as-identifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-loop-as-identifier.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected pattern, found keyword `loop`\n-  --> $DIR/keyword-loop-as-identifier.rs:6:9\n+  --> $DIR/keyword-loop-as-identifier.rs:4:9\n    |\n LL |     let loop = \"foo\"; //~ error: expected pattern, found keyword `loop`\n    |         ^^^^ expected pattern"}, {"sha": "8ef6b6810a56b96ba3177e1a027594d26f30e1e7", "filename": "src/test/ui/parser/keyword-match-as-identifier.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-match-as-identifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-match-as-identifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-match-as-identifier.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // This file was auto-generated using 'src/etc/generate-keyword-tests.py match'\n \n fn main() {"}, {"sha": "4c8e76695bc8f6e7a4eaf9b489055f414cf8f54a", "filename": "src/test/ui/parser/keyword-match-as-identifier.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-match-as-identifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-match-as-identifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-match-as-identifier.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected pattern, found keyword `match`\n-  --> $DIR/keyword-match-as-identifier.rs:6:9\n+  --> $DIR/keyword-match-as-identifier.rs:4:9\n    |\n LL |     let match = \"foo\"; //~ error: expected pattern, found keyword `match`\n    |         ^^^^^ expected pattern"}, {"sha": "96bcdccf0a096be2c44e9a34a98134e76cd1065a", "filename": "src/test/ui/parser/keyword-mod-as-identifier.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-mod-as-identifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-mod-as-identifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-mod-as-identifier.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // This file was auto-generated using 'src/etc/generate-keyword-tests.py mod'\n \n fn main() {"}, {"sha": "8aeebcebec959d1c89688819d21ae14cf74f3c7f", "filename": "src/test/ui/parser/keyword-mod-as-identifier.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-mod-as-identifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-mod-as-identifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-mod-as-identifier.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected pattern, found keyword `mod`\n-  --> $DIR/keyword-mod-as-identifier.rs:6:9\n+  --> $DIR/keyword-mod-as-identifier.rs:4:9\n    |\n LL |     let mod = \"foo\"; //~ error: expected pattern, found keyword `mod`\n    |         ^^^ expected pattern"}, {"sha": "2193af530bd7a628cb6baea729dfe943d9fae4ea", "filename": "src/test/ui/parser/keyword-move-as-identifier.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-move-as-identifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-move-as-identifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-move-as-identifier.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // This file was auto-generated using 'src/etc/generate-keyword-tests.py move'\n \n fn main() {"}, {"sha": "37e06708e25fda60d804e1d1d42ef2d5bea5ed92", "filename": "src/test/ui/parser/keyword-move-as-identifier.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-move-as-identifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-move-as-identifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-move-as-identifier.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected pattern, found keyword `move`\n-  --> $DIR/keyword-move-as-identifier.rs:6:9\n+  --> $DIR/keyword-move-as-identifier.rs:4:9\n    |\n LL |     let move = \"foo\"; //~ error: expected pattern, found keyword `move`\n    |         ^^^^ expected pattern"}, {"sha": "9b919d2b383c2f31bcaa466db3e4f6f4e4fa7a42", "filename": "src/test/ui/parser/keyword-mut-as-identifier.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-mut-as-identifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-mut-as-identifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-mut-as-identifier.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n fn main() {\n     let mut = \"foo\"; //~ error: expected identifier, found `=`\n }"}, {"sha": "b0266060903ca68ae27b24a71f9f020530a3e320", "filename": "src/test/ui/parser/keyword-mut-as-identifier.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-mut-as-identifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-mut-as-identifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-mut-as-identifier.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected identifier, found `=`\n-  --> $DIR/keyword-mut-as-identifier.rs:4:13\n+  --> $DIR/keyword-mut-as-identifier.rs:2:13\n    |\n LL |     let mut = \"foo\"; //~ error: expected identifier, found `=`\n    |             ^ expected identifier"}, {"sha": "948a20095f1ea17958bc491324259ed2bfd75210", "filename": "src/test/ui/parser/keyword-override.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-override.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-override.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-override.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n fn main() {\n     let override = (); //~ ERROR expected pattern, found reserved keyword `override`\n }"}, {"sha": "69a6415908c2c7e3278dabe4dc54bd7ce21113a1", "filename": "src/test/ui/parser/keyword-override.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-override.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-override.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-override.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected pattern, found reserved keyword `override`\n-  --> $DIR/keyword-override.rs:4:9\n+  --> $DIR/keyword-override.rs:2:9\n    |\n LL |     let override = (); //~ ERROR expected pattern, found reserved keyword `override`\n    |         ^^^^^^^^ expected pattern"}, {"sha": "2ed8cc6b268ca5065b1cf26a404e305188f69ee5", "filename": "src/test/ui/parser/keyword-pub-as-identifier.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-pub-as-identifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-pub-as-identifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-pub-as-identifier.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // This file was auto-generated using 'src/etc/generate-keyword-tests.py pub'\n \n fn main() {"}, {"sha": "8b595673ec4cd5e7bbe004c149e5b4223c1b8b82", "filename": "src/test/ui/parser/keyword-pub-as-identifier.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-pub-as-identifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-pub-as-identifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-pub-as-identifier.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected pattern, found keyword `pub`\n-  --> $DIR/keyword-pub-as-identifier.rs:6:9\n+  --> $DIR/keyword-pub-as-identifier.rs:4:9\n    |\n LL |     let pub = \"foo\"; //~ error: expected pattern, found keyword `pub`\n    |         ^^^ expected pattern"}, {"sha": "f5e04b5db734666b79256c5bba3fda89fd0fd7fd", "filename": "src/test/ui/parser/keyword-ref-as-identifier.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-ref-as-identifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-ref-as-identifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-ref-as-identifier.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n fn main() {\n     let ref = \"foo\"; //~ error: expected identifier, found `=`\n }"}, {"sha": "656df196f09b1d012bffab8a9256bb7aa847c830", "filename": "src/test/ui/parser/keyword-ref-as-identifier.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-ref-as-identifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-ref-as-identifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-ref-as-identifier.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected identifier, found `=`\n-  --> $DIR/keyword-ref-as-identifier.rs:4:13\n+  --> $DIR/keyword-ref-as-identifier.rs:2:13\n    |\n LL |     let ref = \"foo\"; //~ error: expected identifier, found `=`\n    |             ^ expected identifier"}, {"sha": "920931b00f9544454415112853c46d9d04f675a7", "filename": "src/test/ui/parser/keyword-return-as-identifier.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-return-as-identifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-return-as-identifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-return-as-identifier.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // This file was auto-generated using 'src/etc/generate-keyword-tests.py return'\n \n fn main() {"}, {"sha": "903137542d6f8317207015225856d5d7e6d6dcbb", "filename": "src/test/ui/parser/keyword-return-as-identifier.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-return-as-identifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-return-as-identifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-return-as-identifier.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected pattern, found keyword `return`\n-  --> $DIR/keyword-return-as-identifier.rs:6:9\n+  --> $DIR/keyword-return-as-identifier.rs:4:9\n    |\n LL |     let return = \"foo\"; //~ error: expected pattern, found keyword `return`\n    |         ^^^^^^ expected pattern"}, {"sha": "3ccbfccfc93947c8703897d4db33990c9c80e701", "filename": "src/test/ui/parser/keyword-static-as-identifier.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-static-as-identifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-static-as-identifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-static-as-identifier.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // This file was auto-generated using 'src/etc/generate-keyword-tests.py static'\n \n fn main() {"}, {"sha": "4830e6f1bef408fb0c7121fc288a4017bd5fafe3", "filename": "src/test/ui/parser/keyword-static-as-identifier.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-static-as-identifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-static-as-identifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-static-as-identifier.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected pattern, found keyword `static`\n-  --> $DIR/keyword-static-as-identifier.rs:6:9\n+  --> $DIR/keyword-static-as-identifier.rs:4:9\n    |\n LL |     let static = \"foo\"; //~ error: expected pattern, found keyword `static`\n    |         ^^^^^^ expected pattern"}, {"sha": "69d8f19065533d425142dbb3772df2bf79c97cd1", "filename": "src/test/ui/parser/keyword-struct-as-identifier.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-struct-as-identifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-struct-as-identifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-struct-as-identifier.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // This file was auto-generated using 'src/etc/generate-keyword-tests.py struct'\n \n fn main() {"}, {"sha": "50ac690e425adc21c2e2ee2074d528041eeca63a", "filename": "src/test/ui/parser/keyword-struct-as-identifier.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-struct-as-identifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-struct-as-identifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-struct-as-identifier.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected pattern, found keyword `struct`\n-  --> $DIR/keyword-struct-as-identifier.rs:6:9\n+  --> $DIR/keyword-struct-as-identifier.rs:4:9\n    |\n LL |     let struct = \"foo\"; //~ error: expected pattern, found keyword `struct`\n    |         ^^^^^^ expected pattern"}, {"sha": "f62858442d252dc6f30c85011ebda0778a18116f", "filename": "src/test/ui/parser/keyword-trait-as-identifier.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-trait-as-identifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-trait-as-identifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-trait-as-identifier.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // This file was auto-generated using 'src/etc/generate-keyword-tests.py trait'\n \n fn main() {"}, {"sha": "3736f366cbd49fc46c61d5016569abb095473703", "filename": "src/test/ui/parser/keyword-trait-as-identifier.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-trait-as-identifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-trait-as-identifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-trait-as-identifier.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected pattern, found keyword `trait`\n-  --> $DIR/keyword-trait-as-identifier.rs:6:9\n+  --> $DIR/keyword-trait-as-identifier.rs:4:9\n    |\n LL |     let trait = \"foo\"; //~ error: expected pattern, found keyword `trait`\n    |         ^^^^^ expected pattern"}, {"sha": "13a938b2e098886b1f875fa536e10b0425dcec03", "filename": "src/test/ui/parser/keyword-try-as-identifier-edition2018.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-try-as-identifier-edition2018.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-try-as-identifier-edition2018.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-try-as-identifier-edition2018.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z parse-only --edition 2018\n+// compile-flags: --edition 2018\n \n fn main() {\n     let try = \"foo\"; //~ error: expected pattern, found reserved keyword `try`"}, {"sha": "992547e6f59c0c5d15ac62aee70460481dd64876", "filename": "src/test/ui/parser/keyword-type-as-identifier.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-type-as-identifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-type-as-identifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-type-as-identifier.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // This file was auto-generated using 'src/etc/generate-keyword-tests.py type'\n \n fn main() {"}, {"sha": "f7db20034a10d4b61c50e228d3723a354f463f60", "filename": "src/test/ui/parser/keyword-type-as-identifier.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-type-as-identifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-type-as-identifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-type-as-identifier.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected pattern, found keyword `type`\n-  --> $DIR/keyword-type-as-identifier.rs:6:9\n+  --> $DIR/keyword-type-as-identifier.rs:4:9\n    |\n LL |     let type = \"foo\"; //~ error: expected pattern, found keyword `type`\n    |         ^^^^ expected pattern"}, {"sha": "4ef102646ef1c5cb7250cb853a41bb71481dc91f", "filename": "src/test/ui/parser/keyword-typeof.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-typeof.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-typeof.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-typeof.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n fn main() {\n     let typeof = (); //~ ERROR expected pattern, found reserved keyword `typeof`\n }"}, {"sha": "07c9f883b60fb8fa0386126699ae47c349fd74f1", "filename": "src/test/ui/parser/keyword-typeof.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-typeof.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-typeof.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-typeof.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected pattern, found reserved keyword `typeof`\n-  --> $DIR/keyword-typeof.rs:4:9\n+  --> $DIR/keyword-typeof.rs:2:9\n    |\n LL |     let typeof = (); //~ ERROR expected pattern, found reserved keyword `typeof`\n    |         ^^^^^^ expected pattern"}, {"sha": "adb20ebe48c790aa5b89feb44021e7a1451b28cd", "filename": "src/test/ui/parser/keyword-unsafe-as-identifier.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-unsafe-as-identifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-unsafe-as-identifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-unsafe-as-identifier.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // This file was auto-generated using 'src/etc/generate-keyword-tests.py unsafe'\n \n fn main() {"}, {"sha": "ddd5e4d7b115fe7ecc59614358499dee2fee2b3e", "filename": "src/test/ui/parser/keyword-unsafe-as-identifier.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-unsafe-as-identifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-unsafe-as-identifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-unsafe-as-identifier.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected pattern, found keyword `unsafe`\n-  --> $DIR/keyword-unsafe-as-identifier.rs:6:9\n+  --> $DIR/keyword-unsafe-as-identifier.rs:4:9\n    |\n LL |     let unsafe = \"foo\"; //~ error: expected pattern, found keyword `unsafe`\n    |         ^^^^^^ expected pattern"}, {"sha": "198444bafc5b84c0bb118897394b7fdade8c8df6", "filename": "src/test/ui/parser/keyword-use-as-identifier.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-use-as-identifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-use-as-identifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-use-as-identifier.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // This file was auto-generated using 'src/etc/generate-keyword-tests.py use'\n \n fn main() {"}, {"sha": "7e798a3f0b9d99e92ab1fac45df85985123be04c", "filename": "src/test/ui/parser/keyword-use-as-identifier.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-use-as-identifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-use-as-identifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-use-as-identifier.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected pattern, found keyword `use`\n-  --> $DIR/keyword-use-as-identifier.rs:6:9\n+  --> $DIR/keyword-use-as-identifier.rs:4:9\n    |\n LL |     let use = \"foo\"; //~ error: expected pattern, found keyword `use`\n    |         ^^^ expected pattern"}, {"sha": "5624a8fc46038a998f512527f48c10e6f1dbb8f9", "filename": "src/test/ui/parser/keyword-where-as-identifier.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-where-as-identifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-where-as-identifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-where-as-identifier.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // This file was auto-generated using 'src/etc/generate-keyword-tests.py where'\n \n fn main() {"}, {"sha": "5285520cc20c4067afdd0cf6a28c8860b6f1069b", "filename": "src/test/ui/parser/keyword-where-as-identifier.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-where-as-identifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-where-as-identifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-where-as-identifier.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected pattern, found keyword `where`\n-  --> $DIR/keyword-where-as-identifier.rs:6:9\n+  --> $DIR/keyword-where-as-identifier.rs:4:9\n    |\n LL |     let where = \"foo\"; //~ error: expected pattern, found keyword `where`\n    |         ^^^^^ expected pattern"}, {"sha": "c0a539d3507645fb5132de39117cd39645cef9ea", "filename": "src/test/ui/parser/keyword-while-as-identifier.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-while-as-identifier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-while-as-identifier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-while-as-identifier.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n // This file was auto-generated using 'src/etc/generate-keyword-tests.py while'\n \n fn main() {"}, {"sha": "b84a652dc5c81f727d5e906ddddc02ba80259891", "filename": "src/test/ui/parser/keyword-while-as-identifier.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-while-as-identifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword-while-as-identifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword-while-as-identifier.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected pattern, found keyword `while`\n-  --> $DIR/keyword-while-as-identifier.rs:6:9\n+  --> $DIR/keyword-while-as-identifier.rs:4:9\n    |\n LL |     let while = \"foo\"; //~ error: expected pattern, found keyword `while`\n    |         ^^^^^ expected pattern"}, {"sha": "1eb7886c5a53abac0f14e67e282c1ed7a526927f", "filename": "src/test/ui/parser/keyword.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n-// compile-flags: -Z parse-only\n-\n pub mod break {\n     //~^ ERROR expected identifier, found keyword `break`\n }\n+\n+fn main() {}"}, {"sha": "262467b69072059f4165ef04c1adcdb93dc20509", "filename": "src/test/ui/parser/keyword.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeyword.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeyword.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: expected identifier, found keyword `break`\n-  --> $DIR/keyword.rs:3:9\n+  --> $DIR/keyword.rs:1:9\n    |\n LL | pub mod break {\n    |         ^^^^^ expected identifier, found keyword"}, {"sha": "5c7049f7c9bc7aafb74abd6bb851e6f53b81cf1e", "filename": "src/test/ui/parser/keywords-followed-by-double-colon.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeywords-followed-by-double-colon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeywords-followed-by-double-colon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeywords-followed-by-double-colon.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,3 @@\n-// compile-flags: -Z parse-only\n-\n fn main() {\n     struct::foo();\n     //~^ ERROR expected identifier"}, {"sha": "4c4d5e5dd001e811a88de443235e0092ce3c6d9c", "filename": "src/test/ui/parser/keywords-followed-by-double-colon.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeywords-followed-by-double-colon.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Fkeywords-followed-by-double-colon.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkeywords-followed-by-double-colon.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,11 +1,11 @@\n error: expected identifier, found `::`\n-  --> $DIR/keywords-followed-by-double-colon.rs:4:11\n+  --> $DIR/keywords-followed-by-double-colon.rs:2:11\n    |\n LL |     struct::foo();\n    |           ^^ expected identifier\n \n error: expected expression, found keyword `mut`\n-  --> $DIR/keywords-followed-by-double-colon.rs:8:5\n+  --> $DIR/keywords-followed-by-double-colon.rs:6:5\n    |\n LL |     mut::baz();\n    |     ^^^ expected expression"}, {"sha": "da36537f0f3070b452dd6f985a0943cf45e8b4b2", "filename": "src/test/ui/parser/lex-bad-binary-literal.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Flex-bad-binary-literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Flex-bad-binary-literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Flex-bad-binary-literal.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z parse-only -Z continue-parse-after-error\n+// compile-flags: -Z continue-parse-after-error\n \n fn main() {\n     0b121; //~ ERROR invalid digit for a base 2 literal"}, {"sha": "54d75ed682d0d13c6c5c76f6c7fe67b979de9a56", "filename": "src/test/ui/parser/lex-bad-char-literals-1.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Flex-bad-char-literals-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Flex-bad-char-literals-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Flex-bad-char-literals-1.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,9 +1,9 @@\n-// compile-flags: -Z parse-only -Z continue-parse-after-error\n+// compile-flags: -Z continue-parse-after-error\n static c3: char =\n     '\\x1' //~ ERROR: numeric character escape is too short\n ;\n \n-static s: &'static str =\n+static s3: &'static str =\n     \"\\x1\" //~ ERROR: numeric character escape is too short\n ;\n \n@@ -15,3 +15,4 @@ static s: &'static str =\n     \"\\\u25cf\" //~ ERROR: unknown character escape\n ;\n \n+fn main() {}"}, {"sha": "7f859995218d97ace50c598043114643cd2e7d17", "filename": "src/test/ui/parser/lex-bad-char-literals-2.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Flex-bad-char-literals-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Flex-bad-char-literals-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Flex-bad-char-literals-2.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,7 +1,4 @@\n-// compile-flags: -Z parse-only\n-\n // This test needs to the last one appearing in this file as it kills the parser\n static c: char =\n     'nope' //~ ERROR: character literal may only contain one codepoint: 'nope'\n ;\n-"}, {"sha": "a7075b71878121a4ed4ca3d72c539bf19808457b", "filename": "src/test/ui/parser/lex-bad-char-literals-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Flex-bad-char-literals-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Flex-bad-char-literals-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Flex-bad-char-literals-2.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: character literal may only contain one codepoint: 'nope'\n-  --> $DIR/lex-bad-char-literals-2.rs:5:5\n+  --> $DIR/lex-bad-char-literals-2.rs:3:5\n    |\n LL |     'nope' //~ ERROR: character literal may only contain one codepoint: 'nope'\n    |     ^^^^^^"}, {"sha": "f8749708f77210831552c1f0bd06351f397d05e6", "filename": "src/test/ui/parser/lex-bad-char-literals-3.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Flex-bad-char-literals-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Flex-bad-char-literals-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Flex-bad-char-literals-3.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,6 +1,7 @@\n-// compile-flags: -Z parse-only\n-\n // This test needs to the last one appearing in this file as it kills the parser\n static c: char =\n     '\u25cf\u25cf' //~ ERROR: character literal may only contain one codepoint\n+         //~| ERROR: mismatched types\n ;\n+\n+fn main() {}"}, {"sha": "89f18e3e2aa4dcbeb18aa6c3531f42b04f16225c", "filename": "src/test/ui/parser/lex-bad-char-literals-3.stderr", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Flex-bad-char-literals-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Flex-bad-char-literals-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Flex-bad-char-literals-3.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: character literal may only contain one codepoint\n-  --> $DIR/lex-bad-char-literals-3.rs:5:5\n+  --> $DIR/lex-bad-char-literals-3.rs:3:5\n    |\n LL |     '\u25cf\u25cf' //~ ERROR: character literal may only contain one codepoint\n    |     ^^^^\n@@ -8,5 +8,15 @@ help: if you meant to write a `str` literal, use double quotes\n LL |     \"\u25cf\u25cf\" //~ ERROR: character literal may only contain one codepoint\n    |     ^^^^\n \n-error: aborting due to previous error\n+error[E0308]: mismatched types\n+  --> $DIR/lex-bad-char-literals-3.rs:3:5\n+   |\n+LL |     '\u25cf\u25cf' //~ ERROR: character literal may only contain one codepoint\n+   |     ^^^^ expected char, found reference\n+   |\n+   = note: expected type `char`\n+              found type `&'static str`\n+\n+error: aborting due to 2 previous errors\n \n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "966e2bb949688589686328c2f35e7adfdff8b06d", "filename": "src/test/ui/parser/lex-bad-char-literals-4.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Flex-bad-char-literals-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Flex-bad-char-literals-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Flex-bad-char-literals-4.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,4 +1,3 @@\n-// compile-flags: -Z parse-only\n //\n // This test needs to the last one appearing in this file as it kills the parser\n static c: char ="}, {"sha": "550cb5449df19cac43fe6d2d2434f99c1360bf20", "filename": "src/test/ui/parser/lex-bad-char-literals-4.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Flex-bad-char-literals-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Flex-bad-char-literals-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Flex-bad-char-literals-4.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: character literal may only contain one codepoint: '\u25cf\n-  --> $DIR/lex-bad-char-literals-4.rs:5:5\n+  --> $DIR/lex-bad-char-literals-4.rs:4:5\n    |\n LL |     '\u25cf  //~ ERROR: character literal may only contain one codepoint: '\u25cf\n    |     ^^"}, {"sha": "247289ea4d54b45fb1cce0e52ebb4d96f7efec50", "filename": "src/test/ui/parser/lex-bad-char-literals-5.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Flex-bad-char-literals-5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Flex-bad-char-literals-5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Flex-bad-char-literals-5.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,6 +1,8 @@\n-// compile-flags: -Z parse-only\n //\n // This test needs to the last one appearing in this file as it kills the parser\n static c: char =\n     '\\x10\\x10'  //~ ERROR: character literal may only contain one codepoint\n+                //~| ERROR: mismatched types\n ;\n+\n+fn main() {}"}, {"sha": "523d71ff49d2b360c58541a1f53478ceccbf877f", "filename": "src/test/ui/parser/lex-bad-char-literals-5.stderr", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Flex-bad-char-literals-5.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Flex-bad-char-literals-5.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Flex-bad-char-literals-5.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: character literal may only contain one codepoint\n-  --> $DIR/lex-bad-char-literals-5.rs:5:5\n+  --> $DIR/lex-bad-char-literals-5.rs:4:5\n    |\n LL |     '/x10/x10'  //~ ERROR: character literal may only contain one codepoint\n    |     ^^^^^^^^^^\n@@ -8,5 +8,15 @@ help: if you meant to write a `str` literal, use double quotes\n LL |     \"/x10/x10\"  //~ ERROR: character literal may only contain one codepoint\n    |     ^^^^^^^^^^\n \n-error: aborting due to previous error\n+error[E0308]: mismatched types\n+  --> $DIR/lex-bad-char-literals-5.rs:4:5\n+   |\n+LL |     '/x10/x10'  //~ ERROR: character literal may only contain one codepoint\n+   |     ^^^^^^^^^^ expected char, found reference\n+   |\n+   = note: expected type `char`\n+              found type `&'static str`\n+\n+error: aborting due to 2 previous errors\n \n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "9496ad305fc2ca453ded7c397a8fdd5b20d5d797", "filename": "src/test/ui/parser/lex-bad-numeric-literals.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Flex-bad-numeric-literals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Flex-bad-numeric-literals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Flex-bad-numeric-literals.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z parse-only -Z continue-parse-after-error\n+// compile-flags: -Z continue-parse-after-error\n \n fn main() {\n     0o1.0; //~ ERROR: octal float literal is not supported"}, {"sha": "f4cc2c5c420fa5d27b304e3b312e109a88c37287", "filename": "src/test/ui/parser/lex-bad-octal-literal.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Flex-bad-octal-literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Flex-bad-octal-literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Flex-bad-octal-literal.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z parse-only -Z continue-parse-after-error\n+// compile-flags: -Z continue-parse-after-error\n \n fn main() {\n     0o18; //~ ERROR invalid digit for a base 8 literal"}, {"sha": "feb670c3d3dd0f6bbdb43fd5213b1ed6593ff3fa", "filename": "src/test/ui/parser/lex-bad-token.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Flex-bad-token.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Flex-bad-token.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Flex-bad-token.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,3 +1 @@\n-// compile-flags: -Z parse-only\n-\n \u25cf //~ ERROR: unknown start of token"}, {"sha": "284ffde9efbe764233a62a4bda7f82d9e798e76f", "filename": "src/test/ui/parser/lex-bad-token.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Flex-bad-token.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Flex-bad-token.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Flex-bad-token.stderr?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,5 +1,5 @@\n error: unknown start of token: /u{25cf}\n-  --> $DIR/lex-bad-token.rs:3:1\n+  --> $DIR/lex-bad-token.rs:1:1\n    |\n LL | \u25cf //~ ERROR: unknown start of token\n    | ^"}, {"sha": "b588b007ae92935ce04fd8676fea471f8e6d1f67", "filename": "src/test/ui/parser/lex-bare-cr-string-literal-doc-comment.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Flex-bare-cr-string-literal-doc-comment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f64f60d5cba64beca6e812e16d6d99519d3551b/src%2Ftest%2Fui%2Fparser%2Flex-bare-cr-string-literal-doc-comment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Flex-bare-cr-string-literal-doc-comment.rs?ref=1f64f60d5cba64beca6e812e16d6d99519d3551b", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z parse-only -Z continue-parse-after-error\n+// compile-flags: -Z continue-parse-after-error\n \n // ignore-tidy-cr\n "}]}