{"sha": "c49e2501bfeb18c1bfc0c6deb1aeb3e59def33a5", "node_id": "C_kwDOAAsO6NoAKGM0OWUyNTAxYmZlYjE4YzFiZmMwYzZkZWIxYWViM2U1OWRlZjMzYTU", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-11-08T18:47:26Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-11-08T18:47:26Z"}, "message": "Make AbsoluteBytePos a u64.", "tree": {"sha": "b3bd3899122f9347d8b9baee2853f16c6d6d392f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3bd3899122f9347d8b9baee2853f16c6d6d392f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c49e2501bfeb18c1bfc0c6deb1aeb3e59def33a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c49e2501bfeb18c1bfc0c6deb1aeb3e59def33a5", "html_url": "https://github.com/rust-lang/rust/commit/c49e2501bfeb18c1bfc0c6deb1aeb3e59def33a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c49e2501bfeb18c1bfc0c6deb1aeb3e59def33a5/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddfe1e87f7c85c03773c29180a931447fcd03b65", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddfe1e87f7c85c03773c29180a931447fcd03b65", "html_url": "https://github.com/rust-lang/rust/commit/ddfe1e87f7c85c03773c29180a931447fcd03b65"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "eaed9aeb85020c9be8e4261c12c5b693e77e7ae6", "filename": "compiler/rustc_query_impl/src/on_disk_cache.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c49e2501bfeb18c1bfc0c6deb1aeb3e59def33a5/compiler%2Frustc_query_impl%2Fsrc%2Fon_disk_cache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c49e2501bfeb18c1bfc0c6deb1aeb3e59def33a5/compiler%2Frustc_query_impl%2Fsrc%2Fon_disk_cache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_impl%2Fsrc%2Fon_disk_cache.rs?ref=c49e2501bfeb18c1bfc0c6deb1aeb3e59def33a5", "patch": "@@ -119,12 +119,11 @@ pub type EncodedDepNodeIndex = Vec<(SerializedDepNodeIndex, AbsoluteBytePos)>;\n struct SourceFileIndex(u32);\n \n #[derive(Copy, Clone, Debug, Hash, Eq, PartialEq, Encodable, Decodable)]\n-pub struct AbsoluteBytePos(u32);\n+pub struct AbsoluteBytePos(u64);\n \n impl AbsoluteBytePos {\n     fn new(pos: usize) -> AbsoluteBytePos {\n-        debug_assert!(pos <= u32::MAX as usize);\n-        AbsoluteBytePos(pos as u32)\n+        AbsoluteBytePos(pos.try_into().expect(\"Incremental cache file size overflowed u64.\"))\n     }\n \n     fn to_usize(self) -> usize {"}]}