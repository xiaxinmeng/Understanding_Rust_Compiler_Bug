{"sha": "203715aa4ecebb167868100fe14b0eaa05133718", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwMzcxNWFhNGVjZWJiMTY3ODY4MTAwZmUxNGIwZWFhMDUxMzM3MTg=", "commit": {"author": {"name": "Aleksei Latyshev", "email": "alex_700_95@mail.ru", "date": "2020-12-27T22:09:04Z"}, "committer": {"name": "Aleksei Latyshev", "email": "alex_700_95@mail.ru", "date": "2020-12-27T22:09:04Z"}, "message": "don't ignore expression after first not matched method call in PtrCloneVisitor", "tree": {"sha": "b41acf91bcf4d92af0aa1ca72e94da39639722ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b41acf91bcf4d92af0aa1ca72e94da39639722ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/203715aa4ecebb167868100fe14b0eaa05133718", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEopQOAF0V9HUfAT+fRv3WL5zBFNsFAl/pBgAACgkQRv3WL5zB\nFNvYEA/+MV4ooOVFxDnfWj7obNjraFl4llNn0yGf1wrNQf5hOdUJDfALpJg3TjFU\nW/qR4LKN6sTdy92TXWahOeL7ZYNcPwBlsrljK6SzvRssuHEO7C9d/95DLj1QavHv\n1C1w0QrMabe3HMs/jhUwFuDNM8ddGGsV3hiSj2f4zog9cQ3osyZ6Yg591Q3X2Pt6\n+FSBXf4OfddX6fPJ7HyNj1meME3+4TF6s/3eGkj71DN2a0u1fOYtnq+KBTUlMock\nXI0XxqfGleysnp4YBQadq2vKBQaxPb17MuQHPMpxOkMzkookufl087Ry8AfRAuwL\nFLPdgltryo/X/T/1PxrnipTiH+bD5KR9wLja2M+7oKQFATZ30tTo7a80WFWzNl1p\nCLXwcj9ybPPnMbdmNSndtDoC9hCitBpqF0dPv6j7OEljfklosjLsiATrZtShpxx0\nwgBt4zh2qgUKexnVqsaLgB+UQGJJunPwlMz+/0JZCdSLCAbf/vf0sR54rmhBzti6\nEoQdyHa6mKUMfe0/Mi72sL20WmEaOj60MLP+MaQZ2amF+6e2/Il2EisK/a+Q2tA8\nugV6fDMH9Wecyqj48pp9tahpv/m0trjYvE2Ta3w7pewrXUw/u2qB7dlmHRyLqxVm\n7xdNdtR4mAYzopt0PAmaaCAMowf4RnjI4D9Ci8YBldZRRuWhqwM=\n=lsG8\n-----END PGP SIGNATURE-----", "payload": "tree b41acf91bcf4d92af0aa1ca72e94da39639722ca\nparent 61a3ee79350daf2eb9669999839c05de7a473316\nauthor Aleksei Latyshev <alex_700_95@mail.ru> 1609106944 +0300\ncommitter Aleksei Latyshev <alex_700_95@mail.ru> 1609106944 +0300\n\ndon't ignore expression after first not matched method call in PtrCloneVisitor\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/203715aa4ecebb167868100fe14b0eaa05133718", "html_url": "https://github.com/rust-lang/rust/commit/203715aa4ecebb167868100fe14b0eaa05133718", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/203715aa4ecebb167868100fe14b0eaa05133718/comments", "author": {"login": "alex-700", "id": 8705888, "node_id": "MDQ6VXNlcjg3MDU4ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/8705888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex-700", "html_url": "https://github.com/alex-700", "followers_url": "https://api.github.com/users/alex-700/followers", "following_url": "https://api.github.com/users/alex-700/following{/other_user}", "gists_url": "https://api.github.com/users/alex-700/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex-700/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex-700/subscriptions", "organizations_url": "https://api.github.com/users/alex-700/orgs", "repos_url": "https://api.github.com/users/alex-700/repos", "events_url": "https://api.github.com/users/alex-700/events{/privacy}", "received_events_url": "https://api.github.com/users/alex-700/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alex-700", "id": 8705888, "node_id": "MDQ6VXNlcjg3MDU4ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/8705888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex-700", "html_url": "https://github.com/alex-700", "followers_url": "https://api.github.com/users/alex-700/followers", "following_url": "https://api.github.com/users/alex-700/following{/other_user}", "gists_url": "https://api.github.com/users/alex-700/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex-700/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex-700/subscriptions", "organizations_url": "https://api.github.com/users/alex-700/orgs", "repos_url": "https://api.github.com/users/alex-700/repos", "events_url": "https://api.github.com/users/alex-700/events{/privacy}", "received_events_url": "https://api.github.com/users/alex-700/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61a3ee79350daf2eb9669999839c05de7a473316", "url": "https://api.github.com/repos/rust-lang/rust/commits/61a3ee79350daf2eb9669999839c05de7a473316", "html_url": "https://github.com/rust-lang/rust/commit/61a3ee79350daf2eb9669999839c05de7a473316"}], "stats": {"total": 79, "additions": 77, "deletions": 2}, "files": [{"sha": "b330f3d890e9cc6e4a3823629e30a0cb2f04d942", "filename": "clippy_lints/src/utils/ptr.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/203715aa4ecebb167868100fe14b0eaa05133718/clippy_lints%2Fsrc%2Futils%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/203715aa4ecebb167868100fe14b0eaa05133718/clippy_lints%2Fsrc%2Futils%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fptr.rs?ref=203715aa4ecebb167868100fe14b0eaa05133718", "patch": "@@ -72,7 +72,6 @@ impl<'a, 'tcx> Visitor<'tcx> for PtrCloneVisitor<'a, 'tcx> {\n                     }\n                 }\n             }\n-            return;\n         }\n         walk_expr(self, expr);\n     }"}, {"sha": "06370dfce65188899dda939fb0dbee8e561c7170", "filename": "tests/ui/ptr_arg.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/203715aa4ecebb167868100fe14b0eaa05133718/tests%2Fui%2Fptr_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/203715aa4ecebb167868100fe14b0eaa05133718/tests%2Fui%2Fptr_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fptr_arg.rs?ref=203715aa4ecebb167868100fe14b0eaa05133718", "patch": "@@ -136,3 +136,22 @@ mod issue_5644 {\n         }\n     }\n }\n+\n+mod issue6509 {\n+    use std::path::PathBuf;\n+\n+    fn foo_vec(vec: &Vec<u8>) {\n+        let _ = vec.clone().pop();\n+        let _ = vec.clone().clone();\n+    }\n+\n+    fn foo_path(path: &PathBuf) {\n+        let _ = path.clone().pop();\n+        let _ = path.clone().clone();\n+    }\n+\n+    fn foo_str(str: &PathBuf) {\n+        let _ = str.clone().pop();\n+        let _ = str.clone().clone();\n+    }\n+}"}, {"sha": "708318bbe295c410f4dd20370842f9c2ce95e648", "filename": "tests/ui/ptr_arg.stderr", "status": "modified", "additions": 58, "deletions": 1, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/203715aa4ecebb167868100fe14b0eaa05133718/tests%2Fui%2Fptr_arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/203715aa4ecebb167868100fe14b0eaa05133718/tests%2Fui%2Fptr_arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fptr_arg.stderr?ref=203715aa4ecebb167868100fe14b0eaa05133718", "patch": "@@ -114,5 +114,62 @@ error: using a reference to `Cow` is not recommended.\n LL | fn test_cow_with_ref(c: &Cow<[i32]>) {}\n    |                         ^^^^^^^^^^^ help: change this to: `&[i32]`\n \n-error: aborting due to 9 previous errors\n+error: writing `&Vec<_>` instead of `&[_]` involves one more reference and cannot be used with non-Vec-based slices.\n+  --> $DIR/ptr_arg.rs:143:21\n+   |\n+LL |     fn foo_vec(vec: &Vec<u8>) {\n+   |                     ^^^^^^^^\n+   |\n+help: change this to\n+   |\n+LL |     fn foo_vec(vec: &[u8]) {\n+   |                     ^^^^^\n+help: change `vec.clone()` to\n+   |\n+LL |         let _ = vec.to_owned().pop();\n+   |                 ^^^^^^^^^^^^^^\n+help: change `vec.clone()` to\n+   |\n+LL |         let _ = vec.to_owned().clone();\n+   |                 ^^^^^^^^^^^^^^\n+\n+error: writing `&PathBuf` instead of `&Path` involves a new object where a slice will do.\n+  --> $DIR/ptr_arg.rs:148:23\n+   |\n+LL |     fn foo_path(path: &PathBuf) {\n+   |                       ^^^^^^^^\n+   |\n+help: change this to\n+   |\n+LL |     fn foo_path(path: &Path) {\n+   |                       ^^^^^\n+help: change `path.clone()` to\n+   |\n+LL |         let _ = path.to_path_buf().pop();\n+   |                 ^^^^^^^^^^^^^^^^^^\n+help: change `path.clone()` to\n+   |\n+LL |         let _ = path.to_path_buf().clone();\n+   |                 ^^^^^^^^^^^^^^^^^^\n+\n+error: writing `&PathBuf` instead of `&Path` involves a new object where a slice will do.\n+  --> $DIR/ptr_arg.rs:153:21\n+   |\n+LL |     fn foo_str(str: &PathBuf) {\n+   |                     ^^^^^^^^\n+   |\n+help: change this to\n+   |\n+LL |     fn foo_str(str: &Path) {\n+   |                     ^^^^^\n+help: change `str.clone()` to\n+   |\n+LL |         let _ = str.to_path_buf().pop();\n+   |                 ^^^^^^^^^^^^^^^^^\n+help: change `str.clone()` to\n+   |\n+LL |         let _ = str.to_path_buf().clone();\n+   |                 ^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 12 previous errors\n "}]}