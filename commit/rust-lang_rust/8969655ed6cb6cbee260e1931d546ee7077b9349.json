{"sha": "8969655ed6cb6cbee260e1931d546ee7077b9349", "node_id": "C_kwDOAAsO6NoAKDg5Njk2NTVlZDZjYjZjYmVlMjYwZTE5MzFkNTQ2ZWU3MDc3YjkzNDk", "commit": {"author": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2022-08-23T14:31:59Z"}, "committer": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2022-08-23T14:31:59Z"}, "message": "Allow leading `|` in more pattern positions", "tree": {"sha": "4cc05aed9ff62d6a9c55bb8f7768e6b2d38495b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4cc05aed9ff62d6a9c55bb8f7768e6b2d38495b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8969655ed6cb6cbee260e1931d546ee7077b9349", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8969655ed6cb6cbee260e1931d546ee7077b9349", "html_url": "https://github.com/rust-lang/rust/commit/8969655ed6cb6cbee260e1931d546ee7077b9349", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8969655ed6cb6cbee260e1931d546ee7077b9349/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f045f146263b1816f0b3472b528841b5877c020f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f045f146263b1816f0b3472b528841b5877c020f", "html_url": "https://github.com/rust-lang/rust/commit/f045f146263b1816f0b3472b528841b5877c020f"}], "stats": {"total": 102, "additions": 98, "deletions": 4}, "files": [{"sha": "bc1224af9b212c639bcf80026661554887f19d07", "filename": "crates/parser/src/grammar/patterns.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8969655ed6cb6cbee260e1931d546ee7077b9349/crates%2Fparser%2Fsrc%2Fgrammar%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8969655ed6cb6cbee260e1931d546ee7077b9349/crates%2Fparser%2Fsrc%2Fgrammar%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fpatterns.rs?ref=8969655ed6cb6cbee260e1931d546ee7077b9349", "patch": "@@ -13,6 +13,8 @@ pub(super) const PATTERN_FIRST: TokenSet =\n         T![.],\n     ]));\n \n+const PAT_TOP_FIRST: TokenSet = PATTERN_FIRST.union(TokenSet::new(&[T![|]]));\n+\n pub(crate) fn pattern(p: &mut Parser<'_>) {\n     pattern_r(p, PAT_RECOVERY_SET);\n }\n@@ -228,6 +230,7 @@ fn path_or_macro_pat(p: &mut Parser<'_>) -> CompletedMarker {\n //     let S(_) = ();\n //     let S(_,) = ();\n //     let S(_, .. , x) = ();\n+//     let S(| a) = ();\n // }\n fn tuple_pat_fields(p: &mut Parser<'_>) {\n     assert!(p.at(T!['(']));\n@@ -363,6 +366,7 @@ fn ref_pat(p: &mut Parser<'_>) -> CompletedMarker {\n //     let (a,) = ();\n //     let (..) = ();\n //     let () = ();\n+//     let (| a | a, | b) = ((),());\n // }\n fn tuple_pat(p: &mut Parser<'_>) -> CompletedMarker {\n     assert!(p.at(T!['(']));\n@@ -373,13 +377,13 @@ fn tuple_pat(p: &mut Parser<'_>) -> CompletedMarker {\n     let mut has_rest = false;\n     while !p.at(EOF) && !p.at(T![')']) {\n         has_pat = true;\n-        if !p.at_ts(PATTERN_FIRST) {\n+        if !p.at_ts(PAT_TOP_FIRST) {\n             p.error(\"expected a pattern\");\n             break;\n         }\n         has_rest |= p.at(T![..]);\n \n-        pattern(p);\n+        pattern_top(p);\n         if !p.at(T![')']) {\n             has_comma = true;\n             p.expect(T![,]);\n@@ -393,6 +397,7 @@ fn tuple_pat(p: &mut Parser<'_>) -> CompletedMarker {\n // test slice_pat\n // fn main() {\n //     let [a, b, ..] = [];\n+//     let [| a, ..] = [];\n // }\n fn slice_pat(p: &mut Parser<'_>) -> CompletedMarker {\n     assert!(p.at(T!['[']));\n@@ -405,12 +410,12 @@ fn slice_pat(p: &mut Parser<'_>) -> CompletedMarker {\n \n fn pat_list(p: &mut Parser<'_>, ket: SyntaxKind) {\n     while !p.at(EOF) && !p.at(ket) {\n-        if !p.at_ts(PATTERN_FIRST) {\n+        if !p.at_ts(PAT_TOP_FIRST) {\n             p.error(\"expected a pattern\");\n             break;\n         }\n \n-        pattern(p);\n+        pattern_top(p);\n         if !p.at(ket) {\n             p.expect(T![,]);\n         }"}, {"sha": "dff72ba886fe82db58644325c4f72f57e8f543a5", "filename": "crates/parser/test_data/parser/inline/ok/0024_slice_pat.rast", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/8969655ed6cb6cbee260e1931d546ee7077b9349/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0024_slice_pat.rast", "raw_url": "https://github.com/rust-lang/rust/raw/8969655ed6cb6cbee260e1931d546ee7077b9349/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0024_slice_pat.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0024_slice_pat.rast?ref=8969655ed6cb6cbee260e1931d546ee7077b9349", "patch": "@@ -37,6 +37,29 @@ SOURCE_FILE\n             L_BRACK \"[\"\n             R_BRACK \"]\"\n           SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          SLICE_PAT\n+            L_BRACK \"[\"\n+            PIPE \"|\"\n+            WHITESPACE \" \"\n+            IDENT_PAT\n+              NAME\n+                IDENT \"a\"\n+            COMMA \",\"\n+            WHITESPACE \" \"\n+            REST_PAT\n+              DOT2 \"..\"\n+            R_BRACK \"]\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          ARRAY_EXPR\n+            L_BRACK \"[\"\n+            R_BRACK \"]\"\n+          SEMICOLON \";\"\n         WHITESPACE \"\\n\"\n         R_CURLY \"}\"\n   WHITESPACE \"\\n\""}, {"sha": "855ba89b1e9d9ec911ba50b82cce76ac9f2a21c6", "filename": "crates/parser/test_data/parser/inline/ok/0024_slice_pat.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8969655ed6cb6cbee260e1931d546ee7077b9349/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0024_slice_pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8969655ed6cb6cbee260e1931d546ee7077b9349/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0024_slice_pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0024_slice_pat.rs?ref=8969655ed6cb6cbee260e1931d546ee7077b9349", "patch": "@@ -1,3 +1,4 @@\n fn main() {\n     let [a, b, ..] = [];\n+    let [| a, ..] = [];\n }"}, {"sha": "55baf2fdcb4f6a525a166c6c1f40fc049ee7d519", "filename": "crates/parser/test_data/parser/inline/ok/0026_tuple_pat_fields.rast", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/8969655ed6cb6cbee260e1931d546ee7077b9349/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0026_tuple_pat_fields.rast", "raw_url": "https://github.com/rust-lang/rust/raw/8969655ed6cb6cbee260e1931d546ee7077b9349/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0026_tuple_pat_fields.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0026_tuple_pat_fields.rast?ref=8969655ed6cb6cbee260e1931d546ee7077b9349", "patch": "@@ -100,6 +100,29 @@ SOURCE_FILE\n             L_PAREN \"(\"\n             R_PAREN \")\"\n           SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          TUPLE_STRUCT_PAT\n+            PATH\n+              PATH_SEGMENT\n+                NAME_REF\n+                  IDENT \"S\"\n+            L_PAREN \"(\"\n+            PIPE \"|\"\n+            WHITESPACE \" \"\n+            IDENT_PAT\n+              NAME\n+                IDENT \"a\"\n+            R_PAREN \")\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          TUPLE_EXPR\n+            L_PAREN \"(\"\n+            R_PAREN \")\"\n+          SEMICOLON \";\"\n         WHITESPACE \"\\n\"\n         R_CURLY \"}\"\n   WHITESPACE \"\\n\""}, {"sha": "8ec6f4ca93e031ed6f3365e859f0b42ab959e328", "filename": "crates/parser/test_data/parser/inline/ok/0026_tuple_pat_fields.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8969655ed6cb6cbee260e1931d546ee7077b9349/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0026_tuple_pat_fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8969655ed6cb6cbee260e1931d546ee7077b9349/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0026_tuple_pat_fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0026_tuple_pat_fields.rs?ref=8969655ed6cb6cbee260e1931d546ee7077b9349", "patch": "@@ -3,4 +3,5 @@ fn foo() {\n     let S(_) = ();\n     let S(_,) = ();\n     let S(_, .. , x) = ();\n+    let S(| a) = ();\n }"}, {"sha": "1a01e0f69381feff531618d16b6f6cce6b85901a", "filename": "crates/parser/test_data/parser/inline/ok/0111_tuple_pat.rast", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/8969655ed6cb6cbee260e1931d546ee7077b9349/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0111_tuple_pat.rast", "raw_url": "https://github.com/rust-lang/rust/raw/8969655ed6cb6cbee260e1931d546ee7077b9349/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0111_tuple_pat.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0111_tuple_pat.rast?ref=8969655ed6cb6cbee260e1931d546ee7077b9349", "patch": "@@ -85,6 +85,46 @@ SOURCE_FILE\n             L_PAREN \"(\"\n             R_PAREN \")\"\n           SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        LET_STMT\n+          LET_KW \"let\"\n+          WHITESPACE \" \"\n+          TUPLE_PAT\n+            L_PAREN \"(\"\n+            PIPE \"|\"\n+            WHITESPACE \" \"\n+            OR_PAT\n+              IDENT_PAT\n+                NAME\n+                  IDENT \"a\"\n+              WHITESPACE \" \"\n+              PIPE \"|\"\n+              WHITESPACE \" \"\n+              IDENT_PAT\n+                NAME\n+                  IDENT \"a\"\n+            COMMA \",\"\n+            WHITESPACE \" \"\n+            PIPE \"|\"\n+            WHITESPACE \" \"\n+            IDENT_PAT\n+              NAME\n+                IDENT \"b\"\n+            R_PAREN \")\"\n+          WHITESPACE \" \"\n+          EQ \"=\"\n+          WHITESPACE \" \"\n+          TUPLE_EXPR\n+            L_PAREN \"(\"\n+            TUPLE_EXPR\n+              L_PAREN \"(\"\n+              R_PAREN \")\"\n+            COMMA \",\"\n+            TUPLE_EXPR\n+              L_PAREN \"(\"\n+              R_PAREN \")\"\n+            R_PAREN \")\"\n+          SEMICOLON \";\"\n         WHITESPACE \"\\n\"\n         R_CURLY \"}\"\n   WHITESPACE \"\\n\""}, {"sha": "fbd7f48f66bd93da02e9d44cd51d47feae0e2015", "filename": "crates/parser/test_data/parser/inline/ok/0111_tuple_pat.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8969655ed6cb6cbee260e1931d546ee7077b9349/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0111_tuple_pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8969655ed6cb6cbee260e1931d546ee7077b9349/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0111_tuple_pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0111_tuple_pat.rs?ref=8969655ed6cb6cbee260e1931d546ee7077b9349", "patch": "@@ -3,4 +3,5 @@ fn main() {\n     let (a,) = ();\n     let (..) = ();\n     let () = ();\n+    let (| a | a, | b) = ((),());\n }"}]}