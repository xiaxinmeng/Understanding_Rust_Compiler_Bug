{"sha": "c18c9284b352f3605553343cd78c7a8eb75b5cd2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxOGM5Mjg0YjM1MmYzNjA1NTUzMzQzY2Q3OGM3YThlYjc1YjVjZDI=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-04-15T15:32:35Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-04-16T05:54:07Z"}, "message": "Test fixes from the rollup\n\nCloses #13546 (workcache: Don't assume gcc exists on all platforms)\nCloses #13545 (std: Remove pub use globs)\nCloses #13530 (test: Un-ignore smallest-hello-world.rs)\nCloses #13529 (std: Un-ignore some float tests on windows)\nCloses #13528 (green: Add a helper macro for booting libgreen)\nCloses #13526 (Remove RUST_LOG=\"::help\" from the docs)\nCloses #13524 (dist: Make Windows installer uninstall first. Closes #9563)\nCloses #13521 (Change AUTHORS section in the man pages)\nCloses #13519 (Update GitHub's Rust projects page.)\nCloses #13518 (mk: Change windows to install from stage2)\nCloses #13516 (liburl doc: insert missing hyphen)\nCloses #13514 (rustdoc: Better sorting criteria for searching.)\nCloses #13512 (native: Fix a race in select())\nCloses #13506 (Use the unsigned integer types for bitwise intrinsics.)\nCloses #13502 (Add a default impl for Set::is_superset)", "tree": {"sha": "a752ef412371e7668d1137b65c4fe8a6f118f426", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a752ef412371e7668d1137b65c4fe8a6f118f426"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c18c9284b352f3605553343cd78c7a8eb75b5cd2", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c18c9284b352f3605553343cd78c7a8eb75b5cd2", "html_url": "https://github.com/rust-lang/rust/commit/c18c9284b352f3605553343cd78c7a8eb75b5cd2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c18c9284b352f3605553343cd78c7a8eb75b5cd2/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0754d1d061761a5f9e7fc13d45579953d329cfe1", "url": "https://api.github.com/repos/rust-lang/rust/commits/0754d1d061761a5f9e7fc13d45579953d329cfe1", "html_url": "https://github.com/rust-lang/rust/commit/0754d1d061761a5f9e7fc13d45579953d329cfe1"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "dd9df8063f03c6430bf0a98646223d1a24d1d7ec", "filename": "src/libgreen/sched.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c18c9284b352f3605553343cd78c7a8eb75b5cd2/src%2Flibgreen%2Fsched.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c18c9284b352f3605553343cd78c7a8eb75b5cd2/src%2Flibgreen%2Fsched.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibgreen%2Fsched.rs?ref=c18c9284b352f3605553343cd78c7a8eb75b5cd2", "patch": "@@ -1035,10 +1035,10 @@ mod test {\n \n     fn sched_id() -> uint {\n         let mut task = Local::borrow(None::<Task>);\n-        match task.get().maybe_take_runtime::<GreenTask>() {\n+        match task.maybe_take_runtime::<GreenTask>() {\n             Some(green) => {\n                 let ret = green.sched.get_ref().sched_id();\n-                task.get().put_runtime(green);\n+                task.put_runtime(green);\n                 return ret;\n             }\n             None => fail!()"}, {"sha": "4f2b7103b793817ddbde77295c198f82330f857f", "filename": "src/librustuv/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c18c9284b352f3605553343cd78c7a8eb75b5cd2/src%2Flibrustuv%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c18c9284b352f3605553343cd78c7a8eb75b5cd2/src%2Flibrustuv%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustuv%2Flib.rs?ref=c18c9284b352f3605553343cd78c7a8eb75b5cd2", "patch": "@@ -462,7 +462,7 @@ fn local_loop() -> &'static mut uvio::UvIoFactory {\n     unsafe {\n         cast::transmute({\n             let mut task = Local::borrow(None::<Task>);\n-            let mut io = task.get().local_io().unwrap();\n+            let mut io = task.local_io().unwrap();\n             let (_vtable, uvio): (uint, &'static mut uvio::UvIoFactory) =\n                 cast::transmute(io.get());\n             uvio"}, {"sha": "65288cf0416faa8ff49fd6761fa60038fe361810", "filename": "src/test/run-pass/smallest-hello-world.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c18c9284b352f3605553343cd78c7a8eb75b5cd2/src%2Ftest%2Frun-pass%2Fsmallest-hello-world.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c18c9284b352f3605553343cd78c7a8eb75b5cd2/src%2Ftest%2Frun-pass%2Fsmallest-hello-world.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsmallest-hello-world.rs?ref=c18c9284b352f3605553343cd78c7a8eb75b5cd2", "patch": "@@ -8,7 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// Smallest hello world with no runtime\n+// ignore-android\n+\n+// Smallest \"hello world\" with a libc runtime\n \n #![no_std]\n "}]}