{"sha": "21d962f0ac7d0e6c680250440b56a639c1c25249", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxZDk2MmYwYWM3ZDBlNmM2ODAyNTA0NDBiNTZhNjM5YzFjMjUyNDk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-12-01T12:38:06Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-12-01T12:38:06Z"}, "message": "Trigger .let postfix snippet in the middle of the block", "tree": {"sha": "2e1cded76236a3c2522bb4ea1021fb59f07a6cc2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e1cded76236a3c2522bb4ea1021fb59f07a6cc2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21d962f0ac7d0e6c680250440b56a639c1c25249", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21d962f0ac7d0e6c680250440b56a639c1c25249", "html_url": "https://github.com/rust-lang/rust/commit/21d962f0ac7d0e6c680250440b56a639c1c25249", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21d962f0ac7d0e6c680250440b56a639c1c25249/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75e037fcf75691a3a87d0cb37ea660dd7105ffba", "url": "https://api.github.com/repos/rust-lang/rust/commits/75e037fcf75691a3a87d0cb37ea660dd7105ffba", "html_url": "https://github.com/rust-lang/rust/commit/75e037fcf75691a3a87d0cb37ea660dd7105ffba"}], "stats": {"total": 35, "additions": 31, "deletions": 4}, "files": [{"sha": "c8ba63cd3befb08142c8a7592e5d6ab5c9fd1f36", "filename": "crates/completion/src/completions/postfix.rs", "status": "modified", "additions": 31, "deletions": 4, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/21d962f0ac7d0e6c680250440b56a639c1c25249/crates%2Fcompletion%2Fsrc%2Fcompletions%2Fpostfix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21d962f0ac7d0e6c680250440b56a639c1c25249/crates%2Fcompletion%2Fsrc%2Fcompletions%2Fpostfix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Fcompletions%2Fpostfix.rs?ref=21d962f0ac7d0e6c680250440b56a639c1c25249", "patch": "@@ -5,7 +5,7 @@ mod format_like;\n use ide_db::ty_filter::TryEnum;\n use syntax::{\n     ast::{self, AstNode, AstToken},\n-    SyntaxKind::BLOCK_EXPR,\n+    SyntaxKind::{BLOCK_EXPR, EXPR_STMT},\n     TextRange, TextSize,\n };\n use text_edit::TextEdit;\n@@ -221,9 +221,8 @@ pub(crate) fn complete_postfix(acc: &mut Completions, ctx: &CompletionContext) {\n     )\n     .add_to(acc);\n \n-    let parent_node = dot_receiver.syntax().parent().and_then(|p| p.parent());\n-    if let Some(parent) = parent_node {\n-        if parent.kind() == BLOCK_EXPR {\n+    if let Some(parent) = dot_receiver.syntax().parent().and_then(|p| p.parent()) {\n+        if matches!(parent.kind(), BLOCK_EXPR | EXPR_STMT) {\n             postfix_snippet(\n                 ctx,\n                 cap,\n@@ -389,6 +388,34 @@ fn main() {\n         )\n     }\n \n+    #[test]\n+    fn let_middle_block() {\n+        check(\n+            r#\"\n+fn main() {\n+    baz.l<|>\n+    res\n+}\n+\"#,\n+            expect![[r#\"\n+                sn box   Box::new(expr)\n+                sn call  function(expr)\n+                sn dbg   dbg!(expr)\n+                sn dbgr  dbg!(&expr)\n+                sn if    if expr {}\n+                sn let   let\n+                sn letm  let mut\n+                sn match match expr {}\n+                sn not   !expr\n+                sn ok    Ok(expr)\n+                sn ref   &expr\n+                sn refm  &mut expr\n+                sn some  Some(expr)\n+                sn while while expr {}\n+            \"#]],\n+        );\n+    }\n+\n     #[test]\n     fn option_iflet() {\n         check_edit("}]}