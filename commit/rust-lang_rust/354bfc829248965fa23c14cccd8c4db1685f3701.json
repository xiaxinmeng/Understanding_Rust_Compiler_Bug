{"sha": "354bfc829248965fa23c14cccd8c4db1685f3701", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1NGJmYzgyOTI0ODk2NWZhMjNjMTRjY2NkOGM0ZGIxNjg1ZjM3MDE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-14T22:16:05Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-21T01:23:48Z"}, "message": "Bare functions can coerce to shared closures", "tree": {"sha": "2ca43b9a565ffac885ac9c0c7fcbe61dcad6c501", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ca43b9a565ffac885ac9c0c7fcbe61dcad6c501"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/354bfc829248965fa23c14cccd8c4db1685f3701", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/354bfc829248965fa23c14cccd8c4db1685f3701", "html_url": "https://github.com/rust-lang/rust/commit/354bfc829248965fa23c14cccd8c4db1685f3701", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/354bfc829248965fa23c14cccd8c4db1685f3701/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3bb020aaf8ae2947bbfc26e589c77967b922a215", "url": "https://api.github.com/repos/rust-lang/rust/commits/3bb020aaf8ae2947bbfc26e589c77967b922a215", "html_url": "https://github.com/rust-lang/rust/commit/3bb020aaf8ae2947bbfc26e589c77967b922a215"}], "stats": {"total": 28, "additions": 22, "deletions": 6}, "files": [{"sha": "1e4fe0d6f3c757a2f04a3a2b246f6750ab9c6eae", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/354bfc829248965fa23c14cccd8c4db1685f3701/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/354bfc829248965fa23c14cccd8c4db1685f3701/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=354bfc829248965fa23c14cccd8c4db1685f3701", "patch": "@@ -891,7 +891,7 @@ fn do_autoderef(fcx: @fn_ctxt, sp: span, t: ty::t) -> ty::t {\n     fail;\n }\n \n-fn do_fn_block_coerce(fcx: @fn_ctxt, sp: span, actual: ty::t, expected: ty::t)\n+fn do_fn_ty_coerce(fcx: @fn_ctxt, sp: span, actual: ty::t, expected: ty::t)\n    -> ty::t {\n \n     // fns can be silently coerced to blocks when being used as\n@@ -910,6 +910,15 @@ fn do_fn_block_coerce(fcx: @fn_ctxt, sp: span, actual: ty::t, expected: ty::t)\n               _ { actual }\n             }\n           }\n+          some(ty::ty_fn(ast::proto_bare., args, ret_ty, cf, constrs)) {\n+            alt structure_of_maybe(fcx, sp, expected) {\n+              some(ty::ty_fn(ast::proto_fn., _, _, _, _)) {\n+                ty::mk_fn(fcx.ccx.tcx, ast::proto_fn, args, ret_ty, cf,\n+                          constrs)\n+              }\n+              _ { actual }\n+            }\n+          }\n           _ { actual }\n         }\n }\n@@ -932,7 +941,7 @@ mod demand {\n        ty::t {\n         full(fcx, sp, expected, actual, [], false).ty\n     }\n-    fn block_coerce(fcx: @fn_ctxt, sp: span, expected: ty::t, actual: ty::t)\n+    fn fn_coerce(fcx: @fn_ctxt, sp: span, expected: ty::t, actual: ty::t)\n        -> ty::t {\n         full(fcx, sp, expected, actual, [], true).ty\n     }\n@@ -945,10 +954,10 @@ mod demand {\n     // Requires that the two types unify, and prints an error message if they\n     // don't. Returns the unified type and the type parameter substitutions.\n     fn full(fcx: @fn_ctxt, sp: span, expected: ty::t, actual: ty::t,\n-            ty_param_substs_0: [ty::t], do_block_coerce: bool) ->\n+            ty_param_substs_0: [ty::t], do_fn_coerce: bool) ->\n        ty_param_substs_and_ty {\n-        if do_block_coerce {\n-            actual = do_fn_block_coerce(fcx, sp, actual, expected);\n+        if do_fn_coerce {\n+            actual = do_fn_ty_coerce(fcx, sp, actual, expected);\n         }\n \n         let ty_param_substs: [mutable ty::t] = [mutable];\n@@ -1676,7 +1685,7 @@ fn check_expr_with_unifier(fcx: @fn_ctxt, expr: @ast::expr, unify: unifier,\n                         if is_block == check_blocks {\n                             bot |=\n                                 check_expr_with_unifier(fcx, a,\n-                                                        demand::block_coerce,\n+                                                        demand::fn_coerce,\n                                                         arg_tys[i].ty);\n                         }\n                       }"}, {"sha": "be375bffb4ccf63ccd2c3c85895039b1995fcd75", "filename": "src/test/run-pass/fn-bare-coerce-to-shared.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/354bfc829248965fa23c14cccd8c4db1685f3701/src%2Ftest%2Frun-pass%2Ffn-bare-coerce-to-shared.rs", "raw_url": "https://github.com/rust-lang/rust/raw/354bfc829248965fa23c14cccd8c4db1685f3701/src%2Ftest%2Frun-pass%2Ffn-bare-coerce-to-shared.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffn-bare-coerce-to-shared.rs?ref=354bfc829248965fa23c14cccd8c4db1685f3701", "patch": "@@ -0,0 +1,7 @@\n+fn# bare() {}\n+\n+fn likes_shared(f: fn@()) { f() }\n+\n+fn main() {\n+    likes_shared(bare);\n+}\n\\ No newline at end of file"}]}