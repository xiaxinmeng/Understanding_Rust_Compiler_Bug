{"sha": "0e0bb8a128baee4ec074b6d82bdd73b48a4b8283", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlMGJiOGExMjhiYWVlNGVjMDc0YjZkODJiZGQ3M2I0OGE0YjgyODM=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-03-08T18:32:37Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-03-08T18:32:37Z"}, "message": "Rollup merge of #23179 - steveklabnik:mini_rollup, r=steveklabnik\n\n I had to fix up some PRs:\n\n* https://github.com/rust-lang/rust/pull/22976\n* https://github.com/rust-lang/rust/pull/22945\n* https://github.com/rust-lang/rust/pull/22845", "tree": {"sha": "14f614e6b52dc7ad80824fa1ec691b007b0bd439", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14f614e6b52dc7ad80824fa1ec691b007b0bd439"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e0bb8a128baee4ec074b6d82bdd73b48a4b8283", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e0bb8a128baee4ec074b6d82bdd73b48a4b8283", "html_url": "https://github.com/rust-lang/rust/commit/0e0bb8a128baee4ec074b6d82bdd73b48a4b8283", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e0bb8a128baee4ec074b6d82bdd73b48a4b8283/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "509c6fc9c172fefaeeabb815a4b8feac6e0d075d", "url": "https://api.github.com/repos/rust-lang/rust/commits/509c6fc9c172fefaeeabb815a4b8feac6e0d075d", "html_url": "https://github.com/rust-lang/rust/commit/509c6fc9c172fefaeeabb815a4b8feac6e0d075d"}, {"sha": "45c397d738ac9cbf3d0ea2233142023ca148c893", "url": "https://api.github.com/repos/rust-lang/rust/commits/45c397d738ac9cbf3d0ea2233142023ca148c893", "html_url": "https://github.com/rust-lang/rust/commit/45c397d738ac9cbf3d0ea2233142023ca148c893"}], "stats": {"total": 44, "additions": 41, "deletions": 3}, "files": [{"sha": "d5e891a156e9bb3b8f248a0cf352dad6e9751369", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e0bb8a128baee4ec074b6d82bdd73b48a4b8283/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e0bb8a128baee4ec074b6d82bdd73b48a4b8283/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=0e0bb8a128baee4ec074b6d82bdd73b48a4b8283", "patch": "@@ -611,7 +611,7 @@ pub trait IteratorExt: Iterator + Sized {\n     ///\n     /// ```\n     /// let a = [1, 2, 3, 4, 5];\n-    /// assert!(a.iter().fold(0, |a, &b| a + b) == 15);\n+    /// assert!(a.iter().fold(0, |acc, &item| acc + item) == 15);\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "a05bc04a530f7a1c6e19f12c76ec817a2f51f59e", "filename": "src/libcore/marker.rs", "status": "modified", "additions": 39, "deletions": 1, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/0e0bb8a128baee4ec074b6d82bdd73b48a4b8283/src%2Flibcore%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e0bb8a128baee4ec074b6d82bdd73b48a4b8283/src%2Flibcore%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmarker.rs?ref=0e0bb8a128baee4ec074b6d82bdd73b48a4b8283", "patch": "@@ -351,7 +351,45 @@ pub trait PhantomFn<A:?Sized,R:?Sized=()> { }\n /// instance, it will behave *as if* an instance of the type `T` were\n /// present for the purpose of various automatic analyses.\n ///\n-/// For example, embedding a `PhantomData<T>` will inform the compiler\n+/// # Examples\n+///\n+/// When handling external resources over a foreign function interface, `PhantomData<T>` can\n+/// prevent mismatches by enforcing types in the method implementations, although the struct\n+/// doesn't actually contain values of the resource type.\n+///\n+/// ```\n+/// # trait ResType { fn foo(&self); };\n+/// # struct ParamType;\n+/// # mod foreign_lib {\n+/// # pub fn new(_: usize) -> *mut () { 42 as *mut () }\n+/// # pub fn do_stuff(_: *mut (), _: usize) {}\n+/// # }\n+/// # fn convert_params(_: ParamType) -> usize { 42 }\n+/// use std::marker::PhantomData;\n+/// use std::mem;\n+///\n+/// struct ExternalResource<R> {\n+///    resource_handle: *mut (),\n+///    resource_type: PhantomData<R>,\n+/// }\n+///\n+/// impl<R: ResType> ExternalResource<R> {\n+///     fn new() -> ExternalResource<R> {\n+///         let size_of_res = mem::size_of::<R>();\n+///         ExternalResource {\n+///             resource_handle: foreign_lib::new(size_of_res),\n+///             resource_type: PhantomData,\n+///         }\n+///     }\n+///\n+///     fn do_stuff(&self, param: ParamType) {\n+///         let foreign_params = convert_params(param);\n+///         foreign_lib::do_stuff(self.resource_handle, foreign_params);\n+///     }\n+/// }\n+/// ```\n+///\n+/// Another example: embedding a `PhantomData<T>` will inform the compiler\n /// that one or more instances of the type `T` could be dropped when\n /// instances of the type itself is dropped, though that may not be\n /// apparent from the other structure of the type itself. This is"}, {"sha": "550ce3bb8c8734fe05a5cf27d0acfe5b1a7193dd", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e0bb8a128baee4ec074b6d82bdd73b48a4b8283/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e0bb8a128baee4ec074b6d82bdd73b48a4b8283/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=0e0bb8a128baee4ec074b6d82bdd73b48a4b8283", "patch": "@@ -1264,7 +1264,7 @@ pub struct BareFnTy {\n /// The different kinds of types recognized by the compiler\n pub enum Ty_ {\n     TyVec(P<Ty>),\n-    /// A fixed length array (`[T, ..n]`)\n+    /// A fixed length array (`[T; n]`)\n     TyFixedLengthVec(P<Ty>, P<Expr>),\n     /// A raw pointer (`*const T` or `*mut T`)\n     TyPtr(MutTy),"}]}