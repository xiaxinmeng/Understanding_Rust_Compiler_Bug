{"sha": "e37947f0973aa9927809d102b00264c207f5e530", "node_id": "C_kwDOAAsO6NoAKGUzNzk0N2YwOTczYWE5OTI3ODA5ZDEwMmIwMDI2NGMyMDdmNWU1MzA", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2021-10-21T15:28:26Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-11-29T13:19:46Z"}, "message": "Re-use `constness_for_typeck` instead of rolling it ourselves", "tree": {"sha": "b926aadfd423045e314a366698264fc6b6779484", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b926aadfd423045e314a366698264fc6b6779484"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e37947f0973aa9927809d102b00264c207f5e530", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE3RQPHNISvvEnSKtjbQF6ltjmwvkFAmGk03IACgkQbQF6ltjm\nwvmznQ//U4XUrWPQlr6V901BLGYoMrP3A/rls/0eGQvbGG15bdrhoaOMV6hGfJWh\nMyfsWd1HPEUOqu3HnLqkr/ViW7aReY/gngbHrU5S33C/hg0q6u3FaJof2NJI9XWZ\nPY8elUAdZ1PARUq7jrV8Nnxtr7sygon3EaDrxadvzbNk8nZwfhF8s9957tIOQYbN\nN68BhsSVNe3jPu4vHyKOw1WMvoox/SFRtHSJ4vxGYPoVoO9H+UME+wpn5d7Bs30w\n/NPgyyPlL5CC3sAKvx9K1hpOYLV6k12KGnWrLE5S9ov7wR/W9R0JkbAR+3iN7LMa\n2JrfEugPfv+qTGuzEtICdK3Z+YyRRR+xIzSLzWSx6FBBPasNUdLNWNRwHDohbbd9\n4joNyw2I6xQFyhiePKvm+vQ0QbQfIxMXJNRDDWKIoH3Oww+C5j8KzykyalOBettD\nbsP6+vhklK6Y3pGe/g/Yf5V61pVDemXaQx6/ycbwj0emJVU7th+JSYTsIabD4Qw/\naEUR0rBoUeXbCadR9zYqoBA8Y/FpHboPJM/hp5vsKQaBv/mcQd2Wdb6YU/Ame4xd\ntniD/DRFzdtGwdNmoxoc5hd+vKhRUHt2i2StrmJX+4ZtK0hiKe3LT5thNEeanalL\n6F0u2K67UVkY0OHVJCGEbpPVpkgW+5Xr/iV3c+0+jUMBoheRBIY=\n=xA2k\n-----END PGP SIGNATURE-----", "payload": "tree b926aadfd423045e314a366698264fc6b6779484\nparent 1761d88f4a39302ddc0c961811cb03ac02e01cf9\nauthor Oli Scherer <git-spam-no-reply9815368754983@oli-obk.de> 1634830106 +0000\ncommitter Deadbeef <ent3rm4n@gmail.com> 1638191986 +0800\n\nRe-use `constness_for_typeck` instead of rolling it ourselves\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e37947f0973aa9927809d102b00264c207f5e530", "html_url": "https://github.com/rust-lang/rust/commit/e37947f0973aa9927809d102b00264c207f5e530", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e37947f0973aa9927809d102b00264c207f5e530/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1761d88f4a39302ddc0c961811cb03ac02e01cf9", "url": "https://api.github.com/repos/rust-lang/rust/commits/1761d88f4a39302ddc0c961811cb03ac02e01cf9", "html_url": "https://github.com/rust-lang/rust/commit/1761d88f4a39302ddc0c961811cb03ac02e01cf9"}], "stats": {"total": 34, "additions": 6, "deletions": 28}, "files": [{"sha": "c3d2fd4e15ca4617b0770c74656966cab220e944", "filename": "compiler/rustc_middle/src/hir/map/mod.rs", "status": "modified", "additions": 5, "deletions": 17, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/e37947f0973aa9927809d102b00264c207f5e530/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e37947f0973aa9927809d102b00264c207f5e530/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs?ref=e37947f0973aa9927809d102b00264c207f5e530", "patch": "@@ -454,30 +454,18 @@ impl<'hir> Map<'hir> {\n     ///\n     /// Panics if `LocalDefId` does not have an associated body.\n     pub fn body_owner_kind(&self, id: HirId) -> BodyOwnerKind {\n-        match self.opt_body_owner_kind(id) {\n-            Ok(kind) => kind,\n-            Err(node) => bug!(\"{:#?} is not a body node\", node),\n-        }\n-    }\n-\n-    /// Returns the `BodyOwnerKind` of this `LocalDefId`.\n-    ///\n-    /// Returns the `Node` if `LocalDefId` does not have an associated body.\n-    pub fn opt_body_owner_kind(&self, id: HirId) -> Result<BodyOwnerKind, Node<'_>> {\n         match self.get(id) {\n             Node::Item(&Item { kind: ItemKind::Const(..), .. })\n             | Node::TraitItem(&TraitItem { kind: TraitItemKind::Const(..), .. })\n             | Node::ImplItem(&ImplItem { kind: ImplItemKind::Const(..), .. })\n-            | Node::AnonConst(_) => Ok(BodyOwnerKind::Const),\n+            | Node::AnonConst(_) => BodyOwnerKind::Const,\n             Node::Ctor(..)\n             | Node::Item(&Item { kind: ItemKind::Fn(..), .. })\n             | Node::TraitItem(&TraitItem { kind: TraitItemKind::Fn(..), .. })\n-            | Node::ImplItem(&ImplItem { kind: ImplItemKind::Fn(..), .. }) => Ok(BodyOwnerKind::Fn),\n-            Node::Item(&Item { kind: ItemKind::Static(_, m, _), .. }) => {\n-                Ok(BodyOwnerKind::Static(m))\n-            }\n-            Node::Expr(&Expr { kind: ExprKind::Closure(..), .. }) => Ok(BodyOwnerKind::Closure),\n-            node => Err(node),\n+            | Node::ImplItem(&ImplItem { kind: ImplItemKind::Fn(..), .. }) => BodyOwnerKind::Fn,\n+            Node::Item(&Item { kind: ItemKind::Static(_, m, _), .. }) => BodyOwnerKind::Static(m),\n+            Node::Expr(&Expr { kind: ExprKind::Closure(..), .. }) => BodyOwnerKind::Closure,\n+            node => bug!(\"{:#?} is not a body node\", node),\n         }\n     }\n "}, {"sha": "4bcc80c83022e6bc0d0b043c40c4b9a66334a52a", "filename": "compiler/rustc_ty_utils/src/ty.rs", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e37947f0973aa9927809d102b00264c207f5e530/compiler%2Frustc_ty_utils%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e37947f0973aa9927809d102b00264c207f5e530/compiler%2Frustc_ty_utils%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ty_utils%2Fsrc%2Fty.rs?ref=e37947f0973aa9927809d102b00264c207f5e530", "patch": "@@ -289,17 +289,7 @@ fn param_env(tcx: TyCtxt<'_>, def_id: DefId) -> ty::ParamEnv<'_> {\n     let hir_id = local_did.map(|def_id| tcx.hir().local_def_id_to_hir_id(def_id));\n \n     let constness = match hir_id {\n-        Some(hir_id) => match tcx.hir().opt_body_owner_kind(hir_id) {\n-            Err(hir::Node::Item(&hir::Item {\n-                kind: hir::ItemKind::Impl(hir::Impl { constness, .. }),\n-                ..\n-            })) => constness,\n-            Err(_) => hir::Constness::NotConst,\n-            Ok(_) => match tcx.hir().body_const_context(local_did.unwrap()) {\n-                Some(_) => hir::Constness::Const,\n-                None => hir::Constness::NotConst,\n-            },\n-        },\n+        Some(hir_id) => tcx.hir().get(hir_id).constness_for_typeck(),\n         None => hir::Constness::NotConst,\n     };\n "}]}