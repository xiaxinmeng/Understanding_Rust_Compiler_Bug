{"sha": "e266708c42dd3d9489586e65b9c6cd1bee0046d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyNjY3MDhjNDJkZDNkOTQ4OTU4NmU2NWI5YzZjZDFiZWUwMDQ2ZDU=", "commit": {"author": {"name": "Aleksei Latyshev", "email": "alex_700_95@mail.ru", "date": "2020-11-04T18:16:25Z"}, "committer": {"name": "Aleksei Latyshev", "email": "alex_700_95@mail.ru", "date": "2020-11-28T17:28:07Z"}, "message": "do not trigger MATCH_LIKE_MATCHES_MACRO lint with attrs\n\n- it can't be solved completely for attrs evaluated into `false`\n- change applicability to MaybeIncorrect and mention it in docs", "tree": {"sha": "08bc4c64cef2911c593a2ac6b146c8b2d1ad9884", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08bc4c64cef2911c593a2ac6b146c8b2d1ad9884"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e266708c42dd3d9489586e65b9c6cd1bee0046d5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEopQOAF0V9HUfAT+fRv3WL5zBFNsFAl/CiKcACgkQRv3WL5zB\nFNuK2w/+Iza8MC1V32GciIYqntHNThDPjkATwu4UB1hBGEDpvJ+QIjZkIAFBCEmh\n4gWXXtLQNRZIq53ivf3GadCTEtkRyAPZnPsRlqssCh15TAJV/ouvVAspiS0eYA6w\nhecBzOjMTXUp4F8CXD1y9I1BZjnydV8fZDL3psMctValGiosDP/S8CbpBgUTiUKH\nuLE7pj9DbAPGLKfleRZTj8wsgyw+p+ltvPAn9l/RLRWw0hC+u0fTdbQhXkdVxVkO\nzzhFbN+FYdqMEx4lyU0zI3Uepltf3hR58VcaJkjKfRoDW5czRfbTteTe1G5sew6e\nyeQ5LtTm7FhZupRfyiZjlvGcy2DQDilAi15T+xTTpzG8vf/jvVxityAYB8A3oKyR\najIqe/0BecXAxrwi2F7yXkcKGPa2WiwTJ6B5thrrAMuBdDer6nO7ZAK7BtH4DhgH\normi4Sw9h7PY1uyklCCrcZRXUdupFE9HwWkKtMSht5QHHlCqIjst1F5PlwOtwPtZ\nLEunwcgfBYeioCamcP9CaBK3Hhn3IInwTipvVaNevHDkKrWdbD9L/KqB/9WZHXVc\nbQqx4LX0M7kvJNMJQ7scOwKGmw/Gxt/JBveqLlQc+rm9ii+QSCspk2rJPPUiHcp4\n/s4RREu/UjmzQml8PhhbJ08KQCxbPrhwaqFtVZIiQyIVv4yZy/U=\n=Bfd/\n-----END PGP SIGNATURE-----", "payload": "tree 08bc4c64cef2911c593a2ac6b146c8b2d1ad9884\nparent 7a73a256223600926f1053fa63762b7d6375c9bc\nauthor Aleksei Latyshev <alex_700_95@mail.ru> 1604513785 +0300\ncommitter Aleksei Latyshev <alex_700_95@mail.ru> 1606584487 +0300\n\ndo not trigger MATCH_LIKE_MATCHES_MACRO lint with attrs\n\n- it can't be solved completely for attrs evaluated into `false`\n- change applicability to MaybeIncorrect and mention it in docs\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e266708c42dd3d9489586e65b9c6cd1bee0046d5", "html_url": "https://github.com/rust-lang/rust/commit/e266708c42dd3d9489586e65b9c6cd1bee0046d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e266708c42dd3d9489586e65b9c6cd1bee0046d5/comments", "author": {"login": "alex-700", "id": 8705888, "node_id": "MDQ6VXNlcjg3MDU4ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/8705888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex-700", "html_url": "https://github.com/alex-700", "followers_url": "https://api.github.com/users/alex-700/followers", "following_url": "https://api.github.com/users/alex-700/following{/other_user}", "gists_url": "https://api.github.com/users/alex-700/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex-700/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex-700/subscriptions", "organizations_url": "https://api.github.com/users/alex-700/orgs", "repos_url": "https://api.github.com/users/alex-700/repos", "events_url": "https://api.github.com/users/alex-700/events{/privacy}", "received_events_url": "https://api.github.com/users/alex-700/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alex-700", "id": 8705888, "node_id": "MDQ6VXNlcjg3MDU4ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/8705888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex-700", "html_url": "https://github.com/alex-700", "followers_url": "https://api.github.com/users/alex-700/followers", "following_url": "https://api.github.com/users/alex-700/following{/other_user}", "gists_url": "https://api.github.com/users/alex-700/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex-700/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex-700/subscriptions", "organizations_url": "https://api.github.com/users/alex-700/orgs", "repos_url": "https://api.github.com/users/alex-700/repos", "events_url": "https://api.github.com/users/alex-700/events{/privacy}", "received_events_url": "https://api.github.com/users/alex-700/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a73a256223600926f1053fa63762b7d6375c9bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a73a256223600926f1053fa63762b7d6375c9bc", "html_url": "https://github.com/rust-lang/rust/commit/7a73a256223600926f1053fa63762b7d6375c9bc"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "c49abbf781ebb6576507e1806c60fcbd351ac164", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e266708c42dd3d9489586e65b9c6cd1bee0046d5/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e266708c42dd3d9489586e65b9c6cd1bee0046d5/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=e266708c42dd3d9489586e65b9c6cd1bee0046d5", "patch": "@@ -459,7 +459,8 @@ declare_clippy_lint! {\n     ///\n     /// **Why is this bad?** Readability and needless complexity.\n     ///\n-    /// **Known problems:** None\n+    /// **Known problems:** It can be FP triggered, when some arms have `cfg`\n+    /// attributes, which evaluate into `false`.\n     ///\n     /// **Example:**\n     /// ```rust\n@@ -1167,13 +1168,16 @@ fn find_matches_sugg(cx: &LateContext<'_>, ex: &Expr<'_>, arms: &[Arm<'_>], expr\n         if b0 != b1;\n         let if_guard = &b0_arms[0].guard;\n         if if_guard.is_none() || b0_arms.len() == 1;\n+        if b0_arms[0].attrs.is_empty();\n         if b0_arms[1..].iter()\n             .all(|arm| {\n                 find_bool_lit(&arm.body.kind, desugared).map_or(false, |b| b == b0) &&\n-                arm.guard.is_none()\n+                arm.guard.is_none() && arm.attrs.is_empty()\n             });\n         then {\n-            let mut applicability = Applicability::MachineApplicable;\n+            // The suggestion may be incorrect, because some arms can have `cfg` attributes\n+            // evaluated into `false` and so such arms will be stripped before.\n+            let mut applicability = Applicability::MaybeIncorrect;\n             let pat = {\n                 use itertools::Itertools as _;\n                 b0_arms.iter()"}]}