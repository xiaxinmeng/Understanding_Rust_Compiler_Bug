{"sha": "34e7a3cc4dcb7ddd404b9566047a78d1e234f137", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0ZTdhM2NjNGRjYjdkZGQ0MDRiOTU2NjA0N2E3OGQxZTIzNGYxMzc=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-07-26T06:10:09Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-07-26T06:10:09Z"}, "message": "Fix tidy", "tree": {"sha": "63f6afa146791bf2643d079c86ad22d8cdfa232c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63f6afa146791bf2643d079c86ad22d8cdfa232c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/34e7a3cc4dcb7ddd404b9566047a78d1e234f137", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/34e7a3cc4dcb7ddd404b9566047a78d1e234f137", "html_url": "https://github.com/rust-lang/rust/commit/34e7a3cc4dcb7ddd404b9566047a78d1e234f137", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/34e7a3cc4dcb7ddd404b9566047a78d1e234f137/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9ac0c67ed5a3ea7d708894a4636a6e83c5aec49", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9ac0c67ed5a3ea7d708894a4636a6e83c5aec49", "html_url": "https://github.com/rust-lang/rust/commit/d9ac0c67ed5a3ea7d708894a4636a6e83c5aec49"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "4ac5920c60e1a5c43025d50f2e4bb4a75db8c638", "filename": "src/librustc_mir/interpret/memory.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/34e7a3cc4dcb7ddd404b9566047a78d1e234f137/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34e7a3cc4dcb7ddd404b9566047a78d1e234f137/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs?ref=34e7a3cc4dcb7ddd404b9566047a78d1e234f137", "patch": "@@ -535,7 +535,7 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> Memory<'mir, 'tcx, M> {\n         id: AllocId,\n         liveness: AllocCheck,\n     ) -> InterpResult<'static, (Size, Align)> {\n-        let alloc_or_size_align = self.alloc_map.get_or(id, || -> Result<_, InterpResult<'static, (Size, Align)>> {\n+        let alloc_or_size_align = self.alloc_map.get_or(id, || {\n             // Can't do this in the match argument, we may get cycle errors since the lock would\n             // be held throughout the match.\n             let alloc = self.tcx.alloc_map.lock().get(id);"}]}