{"sha": "42ecf406e8b57f43da2edeb420c163e94e0ca352", "node_id": "C_kwDOAAsO6NoAKDQyZWNmNDA2ZThiNTdmNDNkYTJlZGViNDIwYzE2M2U5NGUwY2EzNTI", "commit": {"author": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2022-03-31T14:03:27Z"}, "committer": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2022-03-31T14:03:27Z"}, "message": "Remove parser restriction on varargs positioning", "tree": {"sha": "0268ca843d099216cdd1dec6a9a48d4bce0c426a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0268ca843d099216cdd1dec6a9a48d4bce0c426a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/42ecf406e8b57f43da2edeb420c163e94e0ca352", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/42ecf406e8b57f43da2edeb420c163e94e0ca352", "html_url": "https://github.com/rust-lang/rust/commit/42ecf406e8b57f43da2edeb420c163e94e0ca352", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/42ecf406e8b57f43da2edeb420c163e94e0ca352/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b000b544b9d51c5448bc377fcffb951781926f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b000b544b9d51c5448bc377fcffb951781926f3", "html_url": "https://github.com/rust-lang/rust/commit/9b000b544b9d51c5448bc377fcffb951781926f3"}], "stats": {"total": 65, "additions": 37, "deletions": 28}, "files": [{"sha": "c2e633fdb0ba1c894613990cc433913c84ce7708", "filename": "crates/parser/src/grammar/params.rs", "status": "modified", "additions": 19, "deletions": 26, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/42ecf406e8b57f43da2edeb420c163e94e0ca352/crates%2Fparser%2Fsrc%2Fgrammar%2Fparams.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42ecf406e8b57f43da2edeb420c163e94e0ca352/crates%2Fparser%2Fsrc%2Fgrammar%2Fparams.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fparams.rs?ref=42ecf406e8b57f43da2edeb420c163e94e0ca352", "patch": "@@ -71,13 +71,10 @@ fn list_(p: &mut Parser, flavor: Flavor) {\n             m.abandon(p);\n             break;\n         }\n-        let param = param(p, m, flavor);\n+        param(p, m, flavor);\n         if !p.at(ket) {\n             p.expect(T![,]);\n         }\n-        if let Variadic(true) = param {\n-            break;\n-        }\n     }\n \n     if let Some(m) = param_marker {\n@@ -90,27 +87,24 @@ fn list_(p: &mut Parser, flavor: Flavor) {\n \n const PARAM_FIRST: TokenSet = patterns::PATTERN_FIRST.union(types::TYPE_FIRST);\n \n-struct Variadic(bool);\n-\n-fn param(p: &mut Parser, m: Marker, flavor: Flavor) -> Variadic {\n-    let mut res = Variadic(false);\n+fn param(p: &mut Parser, m: Marker, flavor: Flavor) {\n     match flavor {\n         // test param_list_vararg\n-        // extern \"C\" { fn printf(format: *const i8, ...) -> i32; }\n-        Flavor::FnDef | Flavor::FnPointer if p.eat(T![...]) => res = Variadic(true),\n+        // extern \"C\" { fn printf(format: *const i8, ..., _: u8) -> i32; }\n+        Flavor::FnDef | Flavor::FnPointer if p.eat(T![...]) => {}\n \n         // test fn_def_param\n-        // fn foo((x, y): (i32, i32)) {}\n+        // fn foo(..., (x, y): (i32, i32)) {}\n         Flavor::FnDef => {\n             patterns::pattern(p);\n-            if variadic_param(p) {\n-                res = Variadic(true);\n-            } else if p.at(T![:]) {\n-                types::ascription(p);\n-            } else {\n-                // test_err missing_fn_param_type\n-                // fn f(x y: i32, z, t: i32) {}\n-                p.error(\"missing type for function parameter\");\n+            if !variadic_param(p) {\n+                if p.at(T![:]) {\n+                    types::ascription(p);\n+                } else {\n+                    // test_err missing_fn_param_type\n+                    // fn f(x y: i32, z, t: i32) {}\n+                    p.error(\"missing type for function parameter\");\n+                }\n             }\n         }\n         // test value_parameters_no_patterns\n@@ -127,12 +121,12 @@ fn param(p: &mut Parser, m: Marker, flavor: Flavor) -> Variadic {\n         Flavor::FnPointer => {\n             if (p.at(IDENT) || p.at(UNDERSCORE)) && p.nth(1) == T![:] && !p.nth_at(1, T![::]) {\n                 patterns::pattern_single(p);\n-                if variadic_param(p) {\n-                    res = Variadic(true);\n-                } else if p.at(T![:]) {\n-                    types::ascription(p);\n-                } else {\n-                    p.error(\"missing type for function parameter\");\n+                if !variadic_param(p) {\n+                    if p.at(T![:]) {\n+                        types::ascription(p);\n+                    } else {\n+                        p.error(\"missing type for function parameter\");\n+                    }\n                 }\n             } else {\n                 types::type_(p);\n@@ -150,7 +144,6 @@ fn param(p: &mut Parser, m: Marker, flavor: Flavor) -> Variadic {\n         }\n     }\n     m.complete(p, PARAM);\n-    res\n }\n \n fn variadic_param(p: &mut Parser) -> bool {"}, {"sha": "338d53995ae5309f658291cf3bf67a9aef672d49", "filename": "crates/parser/test_data/parser/inline/ok/0123_param_list_vararg.rast", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/42ecf406e8b57f43da2edeb420c163e94e0ca352/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0123_param_list_vararg.rast", "raw_url": "https://github.com/rust-lang/rust/raw/42ecf406e8b57f43da2edeb420c163e94e0ca352/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0123_param_list_vararg.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0123_param_list_vararg.rast?ref=42ecf406e8b57f43da2edeb420c163e94e0ca352", "patch": "@@ -34,6 +34,18 @@ SOURCE_FILE\n           WHITESPACE \" \"\n           PARAM\n             DOT3 \"...\"\n+          COMMA \",\"\n+          WHITESPACE \" \"\n+          PARAM\n+            WILDCARD_PAT\n+              UNDERSCORE \"_\"\n+            COLON \":\"\n+            WHITESPACE \" \"\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"u8\"\n           R_PAREN \")\"\n         WHITESPACE \" \"\n         RET_TYPE"}, {"sha": "533096cd5bbd571057675dfac936eba84fd58616", "filename": "crates/parser/test_data/parser/inline/ok/0123_param_list_vararg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/42ecf406e8b57f43da2edeb420c163e94e0ca352/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0123_param_list_vararg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42ecf406e8b57f43da2edeb420c163e94e0ca352/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0123_param_list_vararg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0123_param_list_vararg.rs?ref=42ecf406e8b57f43da2edeb420c163e94e0ca352", "patch": "@@ -1 +1 @@\n-extern \"C\" { fn printf(format: *const i8, ...) -> i32; }\n+extern \"C\" { fn printf(format: *const i8, ..., _: u8) -> i32; }"}, {"sha": "ce425a1afde652c7e78089b0dd4b3c4fd7e3ba42", "filename": "crates/parser/test_data/parser/inline/ok/0156_fn_def_param.rast", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/42ecf406e8b57f43da2edeb420c163e94e0ca352/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0156_fn_def_param.rast", "raw_url": "https://github.com/rust-lang/rust/raw/42ecf406e8b57f43da2edeb420c163e94e0ca352/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0156_fn_def_param.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0156_fn_def_param.rast?ref=42ecf406e8b57f43da2edeb420c163e94e0ca352", "patch": "@@ -6,6 +6,10 @@ SOURCE_FILE\n       IDENT \"foo\"\n     PARAM_LIST\n       L_PAREN \"(\"\n+      PARAM\n+        DOT3 \"...\"\n+      COMMA \",\"\n+      WHITESPACE \" \"\n       PARAM\n         TUPLE_PAT\n           L_PAREN \"(\""}, {"sha": "7b4c62658294aff5d449605bf804e3ee0e20fa93", "filename": "crates/parser/test_data/parser/inline/ok/0156_fn_def_param.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/42ecf406e8b57f43da2edeb420c163e94e0ca352/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0156_fn_def_param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42ecf406e8b57f43da2edeb420c163e94e0ca352/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0156_fn_def_param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0156_fn_def_param.rs?ref=42ecf406e8b57f43da2edeb420c163e94e0ca352", "patch": "@@ -1 +1 @@\n-fn foo((x, y): (i32, i32)) {}\n+fn foo(..., (x, y): (i32, i32)) {}"}]}