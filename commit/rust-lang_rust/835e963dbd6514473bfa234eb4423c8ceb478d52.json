{"sha": "835e963dbd6514473bfa234eb4423c8ceb478d52", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzNWU5NjNkYmQ2NTE0NDczYmZhMjM0ZWI0NDIzYzhjZWI0NzhkNTI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-08-04T00:39:59Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-08-04T22:11:55Z"}, "message": "std::rt: Improve the error message when the thread-local ptr is null\n\nAlso fix some incorrect comments and variable names.", "tree": {"sha": "7e02785771e30b0b7dab2caf4e3440ef4f7a6d78", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e02785771e30b0b7dab2caf4e3440ef4f7a6d78"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/835e963dbd6514473bfa234eb4423c8ceb478d52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/835e963dbd6514473bfa234eb4423c8ceb478d52", "html_url": "https://github.com/rust-lang/rust/commit/835e963dbd6514473bfa234eb4423c8ceb478d52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/835e963dbd6514473bfa234eb4423c8ceb478d52/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d14470be4194656e2f71120f232f9349e896711", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d14470be4194656e2f71120f232f9349e896711", "html_url": "https://github.com/rust-lang/rust/commit/3d14470be4194656e2f71120f232f9349e896711"}], "stats": {"total": 26, "additions": 15, "deletions": 11}, "files": [{"sha": "652e39b05c7e0eb15e18a5ac1368d9697195ccc1", "filename": "src/libstd/rt/local_ptr.rs", "status": "modified", "additions": 15, "deletions": 11, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/835e963dbd6514473bfa234eb4423c8ceb478d52/src%2Flibstd%2Frt%2Flocal_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/835e963dbd6514473bfa234eb4423c8ceb478d52/src%2Flibstd%2Frt%2Flocal_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Flocal_ptr.rs?ref=835e963dbd6514473bfa234eb4423c8ceb478d52", "patch": "@@ -52,7 +52,9 @@ pub unsafe fn put<T>(sched: ~T) {\n pub unsafe fn take<T>() -> ~T {\n     let key = tls_key();\n     let void_ptr: *mut c_void = tls::get(key);\n-    rtassert!(void_ptr.is_not_null());\n+    if void_ptr.is_null() {\n+        rtabort!(\"thread-local pointer is null. bogus!\");\n+    }\n     let ptr: ~T = cast::transmute(void_ptr);\n     tls::set(key, ptr::mut_null());\n     return ptr;\n@@ -68,8 +70,8 @@ pub fn exists() -> bool {\n     }\n }\n \n-/// Borrow the thread-local scheduler from thread-local storage.\n-/// While the scheduler is borrowed it is not available in TLS.\n+/// Borrow the thread-local value from thread-local storage.\n+/// While the value is borrowed it is not available in TLS.\n ///\n /// # Safety note\n ///\n@@ -88,21 +90,23 @@ pub unsafe fn borrow<T>(f: &fn(&mut T)) {\n     }\n }\n \n-/// Borrow a mutable reference to the thread-local Scheduler\n+/// Borrow a mutable reference to the thread-local value\n ///\n /// # Safety Note\n ///\n-/// Because this leaves the Scheduler in thread-local storage it is possible\n+/// Because this leaves the value in thread-local storage it is possible\n /// For the Scheduler pointer to be aliased\n pub unsafe fn unsafe_borrow<T>() -> *mut T {\n     let key = tls_key();\n-    let mut void_sched: *mut c_void = tls::get(key);\n-    rtassert!(void_sched.is_not_null());\n+    let mut void_ptr: *mut c_void = tls::get(key);\n+    if void_ptr.is_null() {\n+        rtabort!(\"thread-local pointer is null. bogus!\");\n+    }\n     {\n-        let sched: *mut *mut c_void = &mut void_sched;\n-        let sched: *mut ~T = sched as *mut ~T;\n-        let sched: *mut T = &mut **sched;\n-        return sched;\n+        let ptr: *mut *mut c_void = &mut void_ptr;\n+        let ptr: *mut ~T = ptr as *mut ~T;\n+        let ptr: *mut T = &mut **ptr;\n+        return ptr;\n     }\n }\n "}]}