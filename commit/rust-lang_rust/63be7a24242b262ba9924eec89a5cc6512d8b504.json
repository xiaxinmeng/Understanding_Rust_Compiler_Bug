{"sha": "63be7a24242b262ba9924eec89a5cc6512d8b504", "node_id": "C_kwDOAAsO6NoAKDYzYmU3YTI0MjQyYjI2MmJhOTkyNGVlYzg5YTVjYzY1MTJkOGI1MDQ", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-10-09T21:02:12Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-10-19T02:06:19Z"}, "message": "Suggest calling ctor when trait is unimplemented", "tree": {"sha": "daa1a6aedaae64868b20de04354650066a685957", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/daa1a6aedaae64868b20de04354650066a685957"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63be7a24242b262ba9924eec89a5cc6512d8b504", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63be7a24242b262ba9924eec89a5cc6512d8b504", "html_url": "https://github.com/rust-lang/rust/commit/63be7a24242b262ba9924eec89a5cc6512d8b504", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63be7a24242b262ba9924eec89a5cc6512d8b504/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a24a020e6d926dffe6b472fc647978f92269504e", "url": "https://api.github.com/repos/rust-lang/rust/commits/a24a020e6d926dffe6b472fc647978f92269504e", "html_url": "https://github.com/rust-lang/rust/commit/a24a020e6d926dffe6b472fc647978f92269504e"}], "stats": {"total": 60, "additions": 59, "deletions": 1}, "files": [{"sha": "0b2fcc9b0d15601c00465c2752e60c85e5a578de", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/63be7a24242b262ba9924eec89a5cc6512d8b504/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63be7a24242b262ba9924eec89a5cc6512d8b504/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=63be7a24242b262ba9924eec89a5cc6512d8b504", "patch": "@@ -817,7 +817,14 @@ impl<'tcx> TypeErrCtxtExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n \n         let (def_id, output_ty, callable) = match *self_ty.kind() {\n             ty::Closure(def_id, substs) => (def_id, substs.as_closure().sig().output(), \"closure\"),\n-            ty::FnDef(def_id, _) => (def_id, self_ty.fn_sig(self.tcx).output(), \"function\"),\n+            ty::FnDef(def_id, _) => (\n+                def_id,\n+                self_ty.fn_sig(self.tcx).output(),\n+                match self.tcx.def_kind(def_id) {\n+                    DefKind::Ctor(..) => \"constructor\",\n+                    _ => \"function\",\n+                },\n+            ),\n             _ => return false,\n         };\n         let msg = format!(\"use parentheses to call the {}\", callable);\n@@ -878,6 +885,16 @@ impl<'tcx> TypeErrCtxtExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n                 let sugg = format!(\"({})\", args);\n                 (format!(\"{}{}\", ident, sugg), sugg)\n             }\n+            Some(hir::Node::Ctor(data)) => {\n+                let name = self.tcx.def_path_str(def_id);\n+                err.span_label(\n+                    self.tcx.def_span(def_id),\n+                    format!(\"consider calling the constructor for `{}`\", name),\n+                );\n+                let args = data.fields().iter().map(|_| \"_\").collect::<Vec<_>>().join(\", \");\n+                let sugg = format!(\"({})\", args);\n+                (format!(\"{name}{sugg}\"), sugg)\n+            }\n             _ => return false,\n         };\n         if matches!(obligation.cause.code(), ObligationCauseCode::FunctionArgumentObligation { .. })"}, {"sha": "28a319382e61acca2f7e67840bbb8239b3967b89", "filename": "src/test/ui/suggestions/call-on-unimplemented-ctor.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/63be7a24242b262ba9924eec89a5cc6512d8b504/src%2Ftest%2Fui%2Fsuggestions%2Fcall-on-unimplemented-ctor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63be7a24242b262ba9924eec89a5cc6512d8b504/src%2Ftest%2Fui%2Fsuggestions%2Fcall-on-unimplemented-ctor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fcall-on-unimplemented-ctor.rs?ref=63be7a24242b262ba9924eec89a5cc6512d8b504", "patch": "@@ -0,0 +1,17 @@\n+fn main() {\n+    insert_resource(Marker);\n+    insert_resource(Time);\n+    //~^ ERROR the trait bound `fn(u32) -> Time {Time}: Resource` is not satisfied\n+    //~| HELP use parentheses to call the constructor\n+}\n+\n+trait Resource {}\n+\n+fn insert_resource<R: Resource>(resource: R) {}\n+\n+struct Marker;\n+impl Resource for Marker {}\n+\n+struct Time(u32);\n+\n+impl Resource for Time {}"}, {"sha": "ea8aec3098de1e3ccabc77453593296d7568444d", "filename": "src/test/ui/suggestions/call-on-unimplemented-ctor.stderr", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/63be7a24242b262ba9924eec89a5cc6512d8b504/src%2Ftest%2Fui%2Fsuggestions%2Fcall-on-unimplemented-ctor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/63be7a24242b262ba9924eec89a5cc6512d8b504/src%2Ftest%2Fui%2Fsuggestions%2Fcall-on-unimplemented-ctor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fcall-on-unimplemented-ctor.stderr?ref=63be7a24242b262ba9924eec89a5cc6512d8b504", "patch": "@@ -0,0 +1,24 @@\n+error[E0277]: the trait bound `fn(u32) -> Time {Time}: Resource` is not satisfied\n+  --> $DIR/call-on-unimplemented-ctor.rs:3:21\n+   |\n+LL |     insert_resource(Time);\n+   |     --------------- ^^^^ the trait `Resource` is not implemented for fn item `fn(u32) -> Time {Time}`\n+   |     |\n+   |     required by a bound introduced by this call\n+...\n+LL | struct Time(u32);\n+   | ----------- consider calling the constructor for `Time`\n+   |\n+note: required by a bound in `insert_resource`\n+  --> $DIR/call-on-unimplemented-ctor.rs:10:23\n+   |\n+LL | fn insert_resource<R: Resource>(resource: R) {}\n+   |                       ^^^^^^^^ required by this bound in `insert_resource`\n+help: use parentheses to call the constructor\n+   |\n+LL |     insert_resource(Time(_));\n+   |                         +++\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}]}