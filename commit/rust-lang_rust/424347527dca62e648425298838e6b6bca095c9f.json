{"sha": "424347527dca62e648425298838e6b6bca095c9f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyNDM0NzUyN2RjYTYyZTY0ODQyNTI5ODgzOGU2YjZiY2EwOTVjOWY=", "commit": {"author": {"name": "Stein Somers", "email": "git@steinsomers.be", "date": "2020-09-26T18:49:22Z"}, "committer": {"name": "Stein Somers", "email": "git@steinsomers.be", "date": "2020-10-01T13:03:51Z"}, "message": "BTreeMap: use Unique::from to avoid a cast where type information exists", "tree": {"sha": "db114c66005fa3a4c47de5f59558c955e686ef2d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db114c66005fa3a4c47de5f59558c955e686ef2d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/424347527dca62e648425298838e6b6bca095c9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/424347527dca62e648425298838e6b6bca095c9f", "html_url": "https://github.com/rust-lang/rust/commit/424347527dca62e648425298838e6b6bca095c9f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/424347527dca62e648425298838e6b6bca095c9f/comments", "author": {"login": "ssomers", "id": 10174877, "node_id": "MDQ6VXNlcjEwMTc0ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/10174877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssomers", "html_url": "https://github.com/ssomers", "followers_url": "https://api.github.com/users/ssomers/followers", "following_url": "https://api.github.com/users/ssomers/following{/other_user}", "gists_url": "https://api.github.com/users/ssomers/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssomers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssomers/subscriptions", "organizations_url": "https://api.github.com/users/ssomers/orgs", "repos_url": "https://api.github.com/users/ssomers/repos", "events_url": "https://api.github.com/users/ssomers/events{/privacy}", "received_events_url": "https://api.github.com/users/ssomers/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ssomers", "id": 10174877, "node_id": "MDQ6VXNlcjEwMTc0ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/10174877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssomers", "html_url": "https://github.com/ssomers", "followers_url": "https://api.github.com/users/ssomers/followers", "following_url": "https://api.github.com/users/ssomers/following{/other_user}", "gists_url": "https://api.github.com/users/ssomers/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssomers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssomers/subscriptions", "organizations_url": "https://api.github.com/users/ssomers/orgs", "repos_url": "https://api.github.com/users/ssomers/repos", "events_url": "https://api.github.com/users/ssomers/events{/privacy}", "received_events_url": "https://api.github.com/users/ssomers/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc42fb8e70af6ad63998f4bfbf62451551eda073", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc42fb8e70af6ad63998f4bfbf62451551eda073", "html_url": "https://github.com/rust-lang/rust/commit/fc42fb8e70af6ad63998f4bfbf62451551eda073"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "ba08f65f903e56847cd4bcfd375b94cc0bc7c81c", "filename": "library/alloc/src/collections/btree/node.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/424347527dca62e648425298838e6b6bca095c9f/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fnode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/424347527dca62e648425298838e6b6bca095c9f/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fnode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fnode.rs?ref=424347527dca62e648425298838e6b6bca095c9f", "patch": "@@ -128,7 +128,7 @@ impl<K, V> BoxedNode<K, V> {\n     }\n \n     fn from_internal(node: Box<InternalNode<K, V>>) -> Self {\n-        BoxedNode { ptr: Box::into_unique(node).cast() }\n+        BoxedNode { ptr: Unique::from(&mut Box::leak(node).data) }\n     }\n \n     unsafe fn from_ptr(ptr: NonNull<LeafNode<K, V>>) -> Self {"}]}