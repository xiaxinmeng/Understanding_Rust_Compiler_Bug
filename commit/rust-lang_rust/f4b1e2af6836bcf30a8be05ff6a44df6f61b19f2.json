{"sha": "f4b1e2af6836bcf30a8be05ff6a44df6f61b19f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0YjFlMmFmNjgzNmJjZjMwYThiZTA1ZmY2YTQ0ZGY2ZjYxYjE5ZjI=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-03-28T12:10:16Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-04-25T09:07:42Z"}, "message": "Improve E0178 suggestion placement", "tree": {"sha": "0fc07cb3b3d9a62212d8580a96f543d0f67852f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0fc07cb3b3d9a62212d8580a96f543d0f67852f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f4b1e2af6836bcf30a8be05ff6a44df6f61b19f2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAlj/Ed4ACgkQpp+NIls6\n19mr2A/9GGBeX0ntekHmSz6nzyQqo3h5wB7dizeB8XBjDiu/gMByss/j2bXZcHNc\nOXddywqBG/aVgmpuNgSX+xqxK1+/sY9ZknJEmHZoXrvAqZP+RAGK9BOLRVa0wZjE\nnrrD6ofVPpQcz7thCAEkeJOiGBMbJ16FokoXDSuTblAkNdadF75255r+TkLIU8e0\nRW+P7gr7tpRiC4FoF7PLoxrN2fdne8nwPBwI1XKeLaQNe4hW6+ZTDLfjDjUXaK5D\nCB0vMq+lDkj+P8sRnAYXR5eL5aTM2nPUWnW/2ermIhVpEVvKxMF84hLfF/fEElmz\nYM3V+y+gsh0xLruoFDSkSS2JUI+Yjk1yVsWTfdFrsNScTjqTCKYIJ9gjRFC8i6Nf\n5ZuAcux6aLZEdqq1ZJZ6gJVPbO7bcg9ViLYaqo9stc3/YfgEDeVRY1d8gmXkquId\nwhawKOUpNOQfgdDNAP19k/an0+LoniqynIUk8ZhW2MdBWg68/n24mxmvleo7Q1tZ\nnlIxzzV+z3774XD6t/kafwu4q9f1AQjyiYLqFzj0FOdxnxfi9afOiWH5oCzqjQHJ\npkWCXLCi8rD2El7vmsrhRomqHLyBkQfoIykXzuoezzX0adxdWUPgBHKbGqt7nOi+\nHiDz7hTMJvPWGAcs8gTrxU1TPY0BUVMv7kgErFi4dKbh96gnuuo=\n=jy2J\n-----END PGP SIGNATURE-----", "payload": "tree 0fc07cb3b3d9a62212d8580a96f543d0f67852f4\nparent 3a5567bad45fbde0962263f484ebc76f750920e4\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1490703016 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1493111262 +0200\n\nImprove E0178 suggestion placement\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f4b1e2af6836bcf30a8be05ff6a44df6f61b19f2", "html_url": "https://github.com/rust-lang/rust/commit/f4b1e2af6836bcf30a8be05ff6a44df6f61b19f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f4b1e2af6836bcf30a8be05ff6a44df6f61b19f2/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a5567bad45fbde0962263f484ebc76f750920e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a5567bad45fbde0962263f484ebc76f750920e4", "html_url": "https://github.com/rust-lang/rust/commit/3a5567bad45fbde0962263f484ebc76f750920e4"}], "stats": {"total": 83, "additions": 60, "deletions": 23}, "files": [{"sha": "68e58e230f82693d64148d56f2734d6a237c9b67", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f4b1e2af6836bcf30a8be05ff6a44df6f61b19f2/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4b1e2af6836bcf30a8be05ff6a44df6f61b19f2/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=f4b1e2af6836bcf30a8be05ff6a44df6f61b19f2", "patch": "@@ -37,9 +37,12 @@ impl Emitter for EmitterWriter {\n \n         if let Some(sugg) = db.suggestion.clone() {\n             assert_eq!(sugg.msp.primary_spans().len(), sugg.substitutes.len());\n-            if sugg.substitutes.len() == 1 && // don't display multispans as labels\n-               sugg.msg.split_whitespace().count() < 10 && // don't display long messages as labels\n-               sugg.substitutes[0].find('\\n').is_none() { // don't display multiline suggestions as labels\n+            // don't display multispans as labels\n+            if sugg.substitutes.len() == 1 &&\n+               // don't display long messages as labels\n+               sugg.msg.split_whitespace().count() < 10 &&\n+               // don't display multiline suggestions as labels\n+               sugg.substitutes[0].find('\\n').is_none() {\n                 let msg = format!(\"{} `{}`\", sugg.msg, sugg.substitutes[0]);\n                 primary_span.push_span_label(sugg.msp.primary_spans()[0], msg);\n             } else {"}, {"sha": "0f42ee15ecf6fea1110144fa55135cd10dc15f78", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f4b1e2af6836bcf30a8be05ff6a44df6f61b19f2/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4b1e2af6836bcf30a8be05ff6a44df6f61b19f2/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=f4b1e2af6836bcf30a8be05ff6a44df6f61b19f2", "patch": "@@ -3185,7 +3185,7 @@ implementing traits from `std::ops`.\n String concatenation appends the string on the right to the string on the\n left and may require reallocation. This requires ownership of the string\n on the left. If something should be added to a string literal, move the\n-literal to the heap by allocating it with `to_owned()` like in \n+literal to the heap by allocating it with `to_owned()` like in\n `\"Your text\".to_owned()`.\n \n \"##,"}, {"sha": "55098d774723437128eca6b541c6b4a4427d1b16", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f4b1e2af6836bcf30a8be05ff6a44df6f61b19f2/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4b1e2af6836bcf30a8be05ff6a44df6f61b19f2/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=f4b1e2af6836bcf30a8be05ff6a44df6f61b19f2", "patch": "@@ -1490,9 +1490,8 @@ impl<'a> Parser<'a> {\n         let bounds = self.parse_ty_param_bounds()?;\n         let sum_span = ty.span.to(self.prev_span);\n \n-        let mut err = struct_span_err!(self.sess.span_diagnostic, ty.span, E0178,\n+        let mut err = struct_span_err!(self.sess.span_diagnostic, sum_span, E0178,\n             \"expected a path on the left-hand side of `+`, not `{}`\", pprust::ty_to_string(&ty));\n-        err.span_label(ty.span, &format!(\"expected a path\"));\n \n         match ty.node {\n             TyKind::Rptr(ref lifetime, ref mut_ty) => {\n@@ -1511,9 +1510,11 @@ impl<'a> Parser<'a> {\n                 err.span_suggestion(sum_span, \"try adding parentheses:\", sum_with_parens);\n             }\n             TyKind::Ptr(..) | TyKind::BareFn(..) => {\n-                help!(&mut err, \"perhaps you forgot parentheses?\");\n+                err.span_label(sum_span, &\"perhaps you forgot parentheses?\");\n             }\n-            _ => {}\n+            _ => {\n+                err.span_label(sum_span, &\"expected a path\");\n+            },\n         }\n         err.emit();\n         Ok(())"}, {"sha": "8fb6c9815cef8ef905bea149061b3985da5c23c4", "filename": "src/test/ui/did_you_mean/E0178.rs", "status": "renamed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f4b1e2af6836bcf30a8be05ff6a44df6f61b19f2/src%2Ftest%2Fui%2Fdid_you_mean%2FE0178.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4b1e2af6836bcf30a8be05ff6a44df6f61b19f2/src%2Ftest%2Fui%2Fdid_you_mean%2FE0178.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2FE0178.rs?ref=f4b1e2af6836bcf30a8be05ff6a44df6f61b19f2", "patch": "@@ -12,17 +12,9 @@ trait Foo {}\n \n struct Bar<'a> {\n     w: &'a Foo + Copy,\n-    //~^ ERROR E0178\n-    //~| NOTE expected a path\n     x: &'a Foo + 'a,\n-    //~^ ERROR E0178\n-    //~| NOTE expected a path\n     y: &'a mut Foo + 'a,\n-    //~^ ERROR E0178\n-    //~| NOTE expected a path\n     z: fn() -> Foo + 'a,\n-    //~^ ERROR E0178\n-    //~| NOTE expected a path\n }\n \n fn main() {", "previous_filename": "src/test/compile-fail/E0178.rs"}, {"sha": "86f51a28a52ff8b75940e72832a1af9f10416ccf", "filename": "src/test/ui/did_you_mean/E0178.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/f4b1e2af6836bcf30a8be05ff6a44df6f61b19f2/src%2Ftest%2Fui%2Fdid_you_mean%2FE0178.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f4b1e2af6836bcf30a8be05ff6a44df6f61b19f2/src%2Ftest%2Fui%2Fdid_you_mean%2FE0178.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2FE0178.stderr?ref=f4b1e2af6836bcf30a8be05ff6a44df6f61b19f2", "patch": "@@ -0,0 +1,26 @@\n+error[E0178]: expected a path on the left-hand side of `+`, not `&'a Foo`\n+  --> $DIR/E0178.rs:14:8\n+   |\n+14 |     w: &'a Foo + Copy,\n+   |        ^^^^^^^^^^^^^^ try adding parentheses: `&'a (Foo + Copy)`\n+\n+error[E0178]: expected a path on the left-hand side of `+`, not `&'a Foo`\n+  --> $DIR/E0178.rs:15:8\n+   |\n+15 |     x: &'a Foo + 'a,\n+   |        ^^^^^^^^^^^^ try adding parentheses: `&'a (Foo + 'a)`\n+\n+error[E0178]: expected a path on the left-hand side of `+`, not `&'a mut Foo`\n+  --> $DIR/E0178.rs:16:8\n+   |\n+16 |     y: &'a mut Foo + 'a,\n+   |        ^^^^^^^^^^^^^^^^ try adding parentheses: `&'a mut (Foo + 'a)`\n+\n+error[E0178]: expected a path on the left-hand side of `+`, not `fn() -> Foo`\n+  --> $DIR/E0178.rs:17:8\n+   |\n+17 |     z: fn() -> Foo + 'a,\n+   |        ^^^^^^^^^^^^^^^^ perhaps you forgot parentheses?\n+\n+error: aborting due to 4 previous errors\n+"}, {"sha": "11757abae9c9793f12251b2a004c3e35dc6bc8b5", "filename": "src/test/ui/did_you_mean/trait-object-reference-without-parens-suggestion.rs", "status": "renamed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f4b1e2af6836bcf30a8be05ff6a44df6f61b19f2/src%2Ftest%2Fui%2Fdid_you_mean%2Ftrait-object-reference-without-parens-suggestion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4b1e2af6836bcf30a8be05ff6a44df6f61b19f2/src%2Ftest%2Fui%2Fdid_you_mean%2Ftrait-object-reference-without-parens-suggestion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Ftrait-object-reference-without-parens-suggestion.rs?ref=f4b1e2af6836bcf30a8be05ff6a44df6f61b19f2", "patch": "@@ -10,12 +10,5 @@\n \n fn main() {\n     let _: &Copy + 'static;\n-    //~^ ERROR expected a path\n-    //~| HELP try adding parentheses\n-    //~| SUGGESTION let _: &(Copy + 'static);\n-    //~| ERROR the trait `std::marker::Copy` cannot be made into an object\n     let _: &'static Copy + 'static;\n-    //~^ ERROR expected a path\n-    //~| HELP try adding parentheses\n-    //~| SUGGESTION let _: &'static (Copy + 'static);\n }", "previous_filename": "src/test/compile-fail/trait-object-reference-without-parens-suggestion.rs"}, {"sha": "cffa0474d2246e68b03a7dc3a18642a11aa59d59", "filename": "src/test/ui/did_you_mean/trait-object-reference-without-parens-suggestion.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f4b1e2af6836bcf30a8be05ff6a44df6f61b19f2/src%2Ftest%2Fui%2Fdid_you_mean%2Ftrait-object-reference-without-parens-suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f4b1e2af6836bcf30a8be05ff6a44df6f61b19f2/src%2Ftest%2Fui%2Fdid_you_mean%2Ftrait-object-reference-without-parens-suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Ftrait-object-reference-without-parens-suggestion.stderr?ref=f4b1e2af6836bcf30a8be05ff6a44df6f61b19f2", "patch": "@@ -0,0 +1,22 @@\n+error[E0178]: expected a path on the left-hand side of `+`, not `&Copy`\n+  --> $DIR/trait-object-reference-without-parens-suggestion.rs:12:12\n+   |\n+12 |     let _: &Copy + 'static;\n+   |            ^^^^^^^^^^^^^^^ try adding parentheses: `&(Copy + 'static)`\n+\n+error[E0178]: expected a path on the left-hand side of `+`, not `&'static Copy`\n+  --> $DIR/trait-object-reference-without-parens-suggestion.rs:13:12\n+   |\n+13 |     let _: &'static Copy + 'static;\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^ try adding parentheses: `&'static (Copy + 'static)`\n+\n+error[E0038]: the trait `std::marker::Copy` cannot be made into an object\n+  --> $DIR/trait-object-reference-without-parens-suggestion.rs:12:12\n+   |\n+12 |     let _: &Copy + 'static;\n+   |            ^^^^^ the trait `std::marker::Copy` cannot be made into an object\n+   |\n+   = note: the trait cannot require that `Self : Sized`\n+\n+error: aborting due to previous error\n+"}]}