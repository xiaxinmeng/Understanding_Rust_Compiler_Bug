{"sha": "0529a13b5db43952a88504fb16fd561adbcdcc14", "node_id": "C_kwDOAAsO6NoAKDA1MjlhMTNiNWRiNDM5NTJhODg1MDRmYjE2ZmQ1NjFhZGJjZGNjMTQ", "commit": {"author": {"name": "Jeremy Fitzhardinge", "email": "jeremy@goop.org", "date": "2022-04-15T08:24:49Z"}, "committer": {"name": "Jeremy Fitzhardinge", "email": "jsgf@fb.com", "date": "2022-04-27T17:04:25Z"}, "message": "Plumb through rustc_lint_defs::Level as enum rather than string.", "tree": {"sha": "e30ada702af203ba933e34bfd3ff2c1e734d3503", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e30ada702af203ba933e34bfd3ff2c1e734d3503"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0529a13b5db43952a88504fb16fd561adbcdcc14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0529a13b5db43952a88504fb16fd561adbcdcc14", "html_url": "https://github.com/rust-lang/rust/commit/0529a13b5db43952a88504fb16fd561adbcdcc14", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0529a13b5db43952a88504fb16fd561adbcdcc14/comments", "author": {"login": "jsgf", "id": 147966, "node_id": "MDQ6VXNlcjE0Nzk2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/147966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsgf", "html_url": "https://github.com/jsgf", "followers_url": "https://api.github.com/users/jsgf/followers", "following_url": "https://api.github.com/users/jsgf/following{/other_user}", "gists_url": "https://api.github.com/users/jsgf/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsgf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsgf/subscriptions", "organizations_url": "https://api.github.com/users/jsgf/orgs", "repos_url": "https://api.github.com/users/jsgf/repos", "events_url": "https://api.github.com/users/jsgf/events{/privacy}", "received_events_url": "https://api.github.com/users/jsgf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsgf", "id": 147966, "node_id": "MDQ6VXNlcjE0Nzk2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/147966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsgf", "html_url": "https://github.com/jsgf", "followers_url": "https://api.github.com/users/jsgf/followers", "following_url": "https://api.github.com/users/jsgf/following{/other_user}", "gists_url": "https://api.github.com/users/jsgf/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsgf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsgf/subscriptions", "organizations_url": "https://api.github.com/users/jsgf/orgs", "repos_url": "https://api.github.com/users/jsgf/repos", "events_url": "https://api.github.com/users/jsgf/events{/privacy}", "received_events_url": "https://api.github.com/users/jsgf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39f2f1846376c1522b2264069c94a19ef42ebb98", "url": "https://api.github.com/repos/rust-lang/rust/commits/39f2f1846376c1522b2264069c94a19ef42ebb98", "html_url": "https://github.com/rust-lang/rust/commit/39f2f1846376c1522b2264069c94a19ef42ebb98"}], "stats": {"total": 28, "additions": 19, "deletions": 9}, "files": [{"sha": "5dd743e8d00236b93dfd4e79600a65af700c77ce", "filename": "compiler/rustc_errors/src/emitter.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0529a13b5db43952a88504fb16fd561adbcdcc14/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0529a13b5db43952a88504fb16fd561adbcdcc14/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Femitter.rs?ref=0529a13b5db43952a88504fb16fd561adbcdcc14", "patch": "@@ -212,7 +212,12 @@ pub trait Emitter {\n     fn emit_future_breakage_report(&mut self, _diags: Vec<Diagnostic>) {}\n \n     /// Emit list of unused externs\n-    fn emit_unused_externs(&mut self, _lint_level: &str, _unused_externs: &[&str]) {}\n+    fn emit_unused_externs(\n+        &mut self,\n+        _lint_level: rustc_lint_defs::Level,\n+        _unused_externs: &[&str],\n+    ) {\n+    }\n \n     /// Checks if should show explanations about \"rustc --explain\"\n     fn should_show_explain(&self) -> bool {"}, {"sha": "6ff52182d6b037d6e713a66fee467af41ce8a05a", "filename": "compiler/rustc_errors/src/json.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0529a13b5db43952a88504fb16fd561adbcdcc14/compiler%2Frustc_errors%2Fsrc%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0529a13b5db43952a88504fb16fd561adbcdcc14/compiler%2Frustc_errors%2Fsrc%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Fjson.rs?ref=0529a13b5db43952a88504fb16fd561adbcdcc14", "patch": "@@ -171,7 +171,8 @@ impl Emitter for JsonEmitter {\n         }\n     }\n \n-    fn emit_unused_externs(&mut self, lint_level: &str, unused_externs: &[&str]) {\n+    fn emit_unused_externs(&mut self, lint_level: rustc_lint_defs::Level, unused_externs: &[&str]) {\n+        let lint_level = lint_level.as_str();\n         let data = UnusedExterns { lint_level, unused_extern_names: unused_externs };\n         let result = if self.pretty {\n             writeln!(&mut self.dst, \"{}\", as_pretty_json(&data))"}, {"sha": "3842ccbb2ef83e1eee5f993769917d76bde2b80b", "filename": "compiler/rustc_errors/src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0529a13b5db43952a88504fb16fd561adbcdcc14/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0529a13b5db43952a88504fb16fd561adbcdcc14/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Flib.rs?ref=0529a13b5db43952a88504fb16fd561adbcdcc14", "patch": "@@ -969,10 +969,10 @@ impl Handler {\n         self.inner.borrow_mut().emitter.emit_future_breakage_report(diags)\n     }\n \n-    pub fn emit_unused_externs(&self, lint_level: &str, unused_externs: &[&str]) {\n+    pub fn emit_unused_externs(&self, lint_level: rustc_lint_defs::Level, unused_externs: &[&str]) {\n         let mut inner = self.inner.borrow_mut();\n \n-        if lint_level == \"deny\" || lint_level == \"forbid\" {\n+        if lint_level.is_error() {\n             inner.bump_err_count();\n         }\n \n@@ -1147,7 +1147,7 @@ impl HandlerInner {\n         self.emitter.emit_artifact_notification(path, artifact_type);\n     }\n \n-    fn emit_unused_externs(&mut self, lint_level: &str, unused_externs: &[&str]) {\n+    fn emit_unused_externs(&mut self, lint_level: rustc_lint_defs::Level, unused_externs: &[&str]) {\n         self.emitter.emit_unused_externs(lint_level, unused_externs);\n     }\n "}, {"sha": "57b4f96dc100d5b689dd29a420d51a42d2d875c0", "filename": "compiler/rustc_lint_defs/src/lib.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0529a13b5db43952a88504fb16fd561adbcdcc14/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0529a13b5db43952a88504fb16fd561adbcdcc14/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs?ref=0529a13b5db43952a88504fb16fd561adbcdcc14", "patch": "@@ -214,6 +214,13 @@ impl Level {\n             _ => None,\n         }\n     }\n+\n+    pub fn is_error(self) -> bool {\n+        match self {\n+            Level::Allow | Level::Expect(_) | Level::Warn | Level::ForceWarn => false,\n+            Level::Deny | Level::Forbid => true,\n+        }\n+    }\n }\n \n /// Specification of a single lint."}, {"sha": "5ef89ce618ec6d241c767647bf4447a3ae5d449f", "filename": "compiler/rustc_metadata/src/creader.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0529a13b5db43952a88504fb16fd561adbcdcc14/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0529a13b5db43952a88504fb16fd561adbcdcc14/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs?ref=0529a13b5db43952a88504fb16fd561adbcdcc14", "patch": "@@ -208,10 +208,7 @@ impl CStore {\n             let unused_externs =\n                 self.unused_externs.iter().map(|ident| ident.to_ident_string()).collect::<Vec<_>>();\n             let unused_externs = unused_externs.iter().map(String::as_str).collect::<Vec<&str>>();\n-            tcx.sess\n-                .parse_sess\n-                .span_diagnostic\n-                .emit_unused_externs(level.as_str(), &unused_externs);\n+            tcx.sess.parse_sess.span_diagnostic.emit_unused_externs(level, &unused_externs);\n         }\n     }\n }"}]}