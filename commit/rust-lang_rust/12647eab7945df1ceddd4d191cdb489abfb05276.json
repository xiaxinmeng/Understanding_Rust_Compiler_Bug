{"sha": "12647eab7945df1ceddd4d191cdb489abfb05276", "node_id": "C_kwDOAAsO6NoAKDEyNjQ3ZWFiNzk0NWRmMWNlZGRkNGQxOTFjZGI0ODlhYmZiMDUyNzY", "commit": {"author": {"name": "Yuki Okushi", "email": "yuki.okushi@huawei.com", "date": "2021-10-20T19:56:36Z"}, "committer": {"name": "Yuki Okushi", "email": "yuki.okushi@huawei.com", "date": "2021-10-26T02:02:51Z"}, "message": "Properly check `target_features` not to trigger an assertion", "tree": {"sha": "887d412993cc29c6a302ef79f7096e07a9d1f8a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/887d412993cc29c6a302ef79f7096e07a9d1f8a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12647eab7945df1ceddd4d191cdb489abfb05276", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEx6scKn6IIf/+FpBu2rpbBylhwYoFAmF3YcsACgkQ2rpbBylh\nwYqf9hAAglJSadFRz6np4rEWsnWt2J4/M/S/7guzEBcwMYvZ+3CO4Az6yG7OkhZX\ncvGkUo0RUtgphYdITAZGgzGYHxiwAkLze+B1pqbcK/gb3fjtbD7R2F4dac4hquVY\nxoFTzOa71CciCXqpLiR430dIko7FnIAtgyDrzn0q9zyplMKNSaBZrz9ANo071wek\n1NUzWRsmDgk/wv9zBkl5epMuVLSUbZsKOG/TWBO639Dbc8Be1NVRk1azSjsSX2aG\nbXegiUo3MuZRhbzmAanm4+xZ3WOBbRvhVolZ8jjIspkQDiHlPpUy0XySZ8alWGd9\n3HmtE+XUuB1LWerPHxW9lWE4ukOOc6mpiaZtDvxUvsp9WzvyJ0KAAEjtOyMnCjkN\nNo/4syJ7XRXJnHgFJ35JA0QQvngvSIPi6tmnm6hIobfPiB09L2Vrn4fgsmzSvyz1\njSy0X75aJiKIUpF5R05mJGAcnvU7Q1A64z+XLPxfQ39o+ZD/plCR5+GFA9HakC6Q\nC/tAzBrbxvsA0/ZCGf9ClWH4RYz4PaWQT5xIdM5NZ5Vo8o8xNG2fDgb2EZ5mqNjU\n/NOBqnxV57KfI1QvT1DadNMFz/RI+jUvzMEcpMxB4pCqDbro8IzEgPSK/+toY2YJ\nTPS0HRIi34VHV9MVCRZ7fmw/njydY8o361Pj8KkrnYvztmWCaXk=\n=KUSp\n-----END PGP SIGNATURE-----", "payload": "tree 887d412993cc29c6a302ef79f7096e07a9d1f8a3\nparent bd309e4628f5d7d1fa6cbe6a1776e74bcac6292a\nauthor Yuki Okushi <yuki.okushi@huawei.com> 1634759796 +0900\ncommitter Yuki Okushi <yuki.okushi@huawei.com> 1635213771 +0900\n\nProperly check `target_features` not to trigger an assertion\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12647eab7945df1ceddd4d191cdb489abfb05276", "html_url": "https://github.com/rust-lang/rust/commit/12647eab7945df1ceddd4d191cdb489abfb05276", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12647eab7945df1ceddd4d191cdb489abfb05276/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd309e4628f5d7d1fa6cbe6a1776e74bcac6292a", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd309e4628f5d7d1fa6cbe6a1776e74bcac6292a", "html_url": "https://github.com/rust-lang/rust/commit/bd309e4628f5d7d1fa6cbe6a1776e74bcac6292a"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "7c3ed3c5ee9db8d68b0aea669111bd1e9216ad8f", "filename": "compiler/rustc_codegen_gcc/src/asm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/12647eab7945df1ceddd4d191cdb489abfb05276/compiler%2Frustc_codegen_gcc%2Fsrc%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12647eab7945df1ceddd4d191cdb489abfb05276/compiler%2Frustc_codegen_gcc%2Fsrc%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_gcc%2Fsrc%2Fasm.rs?ref=12647eab7945df1ceddd4d191cdb489abfb05276", "patch": "@@ -118,7 +118,7 @@ impl<'a, 'gcc, 'tcx> AsmBuilderMethods<'tcx> for Builder<'a, 'gcc, 'tcx> {\n         true\n     }\n \n-    fn codegen_inline_asm(&mut self, template: &[InlineAsmTemplatePiece], rust_operands: &[InlineAsmOperandRef<'tcx, Self>], options: InlineAsmOptions, _span: &[Span]) {\n+    fn codegen_inline_asm(&mut self, template: &[InlineAsmTemplatePiece], rust_operands: &[InlineAsmOperandRef<'tcx, Self>], options: InlineAsmOptions, _span: &[Span], _instance: Instance<'_>) {\n         let asm_arch = self.tcx.sess.asm_arch.unwrap();\n         let is_x86 = matches!(asm_arch, InlineAsmArch::X86 | InlineAsmArch::X86_64);\n         let att_dialect = is_x86 && options.contains(InlineAsmOptions::ATT_SYNTAX);"}, {"sha": "f128f76958092214e70afad072253c0aff55054e", "filename": "compiler/rustc_codegen_llvm/src/asm.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/12647eab7945df1ceddd4d191cdb489abfb05276/compiler%2Frustc_codegen_llvm%2Fsrc%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12647eab7945df1ceddd4d191cdb489abfb05276/compiler%2Frustc_codegen_llvm%2Fsrc%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fasm.rs?ref=12647eab7945df1ceddd4d191cdb489abfb05276", "patch": "@@ -13,7 +13,7 @@ use rustc_codegen_ssa::traits::*;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir as hir;\n use rustc_middle::ty::layout::TyAndLayout;\n-use rustc_middle::{bug, span_bug};\n+use rustc_middle::{bug, span_bug, ty::Instance};\n use rustc_span::{Pos, Span, Symbol};\n use rustc_target::abi::*;\n use rustc_target::asm::*;\n@@ -120,6 +120,7 @@ impl AsmBuilderMethods<'tcx> for Builder<'a, 'll, 'tcx> {\n         operands: &[InlineAsmOperandRef<'tcx, Self>],\n         options: InlineAsmOptions,\n         line_spans: &[Span],\n+        instance: Instance<'_>,\n     ) {\n         let asm_arch = self.tcx.sess.asm_arch.unwrap();\n \n@@ -135,7 +136,10 @@ impl AsmBuilderMethods<'tcx> for Builder<'a, 'll, 'tcx> {\n                     let is_target_supported = |reg_class: InlineAsmRegClass| {\n                         for &(_, feature) in reg_class.supported_types(asm_arch) {\n                             if let Some(feature) = feature {\n-                                if self.tcx.sess.target_features.contains(&Symbol::intern(feature))\n+                                let codegen_fn_attrs = self.tcx.codegen_fn_attrs(instance.def_id());\n+                                let feature_name = Symbol::intern(feature);\n+                                if self.tcx.sess.target_features.contains(&feature_name)\n+                                    || codegen_fn_attrs.target_features.contains(&feature_name)\n                                 {\n                                     return true;\n                                 }"}, {"sha": "7c25438380a10efa3f80e5a3d8ce79b83dfd3a6f", "filename": "compiler/rustc_codegen_ssa/src/mir/block.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/12647eab7945df1ceddd4d191cdb489abfb05276/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12647eab7945df1ceddd4d191cdb489abfb05276/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fblock.rs?ref=12647eab7945df1ceddd4d191cdb489abfb05276", "patch": "@@ -845,6 +845,7 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n         options: ast::InlineAsmOptions,\n         line_spans: &[Span],\n         destination: Option<mir::BasicBlock>,\n+        instance: Instance<'_>,\n     ) {\n         let span = terminator.source_info.span;\n \n@@ -898,7 +899,7 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n             })\n             .collect();\n \n-        bx.codegen_inline_asm(template, &operands, options, line_spans);\n+        bx.codegen_inline_asm(template, &operands, options, line_spans, instance);\n \n         if let Some(target) = destination {\n             helper.funclet_br(self, &mut bx, target);\n@@ -1029,6 +1030,7 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n                     options,\n                     line_spans,\n                     destination,\n+                    self.instance,\n                 );\n             }\n         }"}, {"sha": "31f539e1b03dba8f3cdeb548e3f91ca2dff0c477", "filename": "compiler/rustc_codegen_ssa/src/traits/asm.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/12647eab7945df1ceddd4d191cdb489abfb05276/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftraits%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12647eab7945df1ceddd4d191cdb489abfb05276/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftraits%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftraits%2Fasm.rs?ref=12647eab7945df1ceddd4d191cdb489abfb05276", "patch": "@@ -58,6 +58,7 @@ pub trait AsmBuilderMethods<'tcx>: BackendTypes {\n         operands: &[InlineAsmOperandRef<'tcx, Self>],\n         options: InlineAsmOptions,\n         line_spans: &[Span],\n+        instance: Instance<'_>,\n     );\n }\n "}]}