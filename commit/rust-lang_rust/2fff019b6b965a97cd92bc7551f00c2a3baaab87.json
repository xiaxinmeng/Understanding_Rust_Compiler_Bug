{"sha": "2fff019b6b965a97cd92bc7551f00c2a3baaab87", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmZmYwMTliNmI5NjVhOTdjZDkyYmM3NTUxZjAwYzJhM2JhYWFiODc=", "commit": {"author": {"name": "Yoshua Wuyts", "email": "yoshuawuyts@gmail.com", "date": "2021-08-11T18:33:13Z"}, "committer": {"name": "Yoshua Wuyts", "email": "yoshuawuyts@gmail.com", "date": "2021-08-11T18:33:13Z"}, "message": "improve codegen", "tree": {"sha": "9afe93e098cf322fbf64e24eb65f3b2ebab20837", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9afe93e098cf322fbf64e24eb65f3b2ebab20837"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2fff019b6b965a97cd92bc7551f00c2a3baaab87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2fff019b6b965a97cd92bc7551f00c2a3baaab87", "html_url": "https://github.com/rust-lang/rust/commit/2fff019b6b965a97cd92bc7551f00c2a3baaab87", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2fff019b6b965a97cd92bc7551f00c2a3baaab87/comments", "author": {"login": "yoshuawuyts", "id": 2467194, "node_id": "MDQ6VXNlcjI0NjcxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2467194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshuawuyts", "html_url": "https://github.com/yoshuawuyts", "followers_url": "https://api.github.com/users/yoshuawuyts/followers", "following_url": "https://api.github.com/users/yoshuawuyts/following{/other_user}", "gists_url": "https://api.github.com/users/yoshuawuyts/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshuawuyts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshuawuyts/subscriptions", "organizations_url": "https://api.github.com/users/yoshuawuyts/orgs", "repos_url": "https://api.github.com/users/yoshuawuyts/repos", "events_url": "https://api.github.com/users/yoshuawuyts/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshuawuyts/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yoshuawuyts", "id": 2467194, "node_id": "MDQ6VXNlcjI0NjcxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2467194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshuawuyts", "html_url": "https://github.com/yoshuawuyts", "followers_url": "https://api.github.com/users/yoshuawuyts/followers", "following_url": "https://api.github.com/users/yoshuawuyts/following{/other_user}", "gists_url": "https://api.github.com/users/yoshuawuyts/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshuawuyts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshuawuyts/subscriptions", "organizations_url": "https://api.github.com/users/yoshuawuyts/orgs", "repos_url": "https://api.github.com/users/yoshuawuyts/repos", "events_url": "https://api.github.com/users/yoshuawuyts/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshuawuyts/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c4a94b03a04f9d4ce1c72c77e95248edabbbbe7", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c4a94b03a04f9d4ce1c72c77e95248edabbbbe7", "html_url": "https://github.com/rust-lang/rust/commit/6c4a94b03a04f9d4ce1c72c77e95248edabbbbe7"}], "stats": {"total": 42, "additions": 12, "deletions": 30}, "files": [{"sha": "d29a312eba59e77f3b503801c46909c17bcfbcb0", "filename": "crates/ide_assists/src/handlers/replace_derive_with_manual_impl.rs", "status": "modified", "additions": 7, "deletions": 15, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/2fff019b6b965a97cd92bc7551f00c2a3baaab87/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fff019b6b965a97cd92bc7551f00c2a3baaab87/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs?ref=2fff019b6b965a97cd92bc7551f00c2a3baaab87", "patch": "@@ -726,13 +726,9 @@ enum Foo {\n \n impl PartialEq for Foo {\n     $0fn eq(&self, other: &Self) -> bool {\n-        if core::mem::discriminant(self) == core::mem::discriminant(other) {\n-            match (self, other) {\n-                (Self::Bar(l0), Self::Bar(r0)) => l0 == r0,\n-                _ => true,\n-            }\n-        } else {\n-            false\n+        match (self, other) {\n+            (Self::Bar(l0), Self::Bar(r0)) => l0 == r0,\n+            _ => core::mem::discriminant(self) == core::mem::discriminant(other),\n         }\n     }\n }\n@@ -774,14 +770,10 @@ enum Foo {\n \n impl PartialEq for Foo {\n     $0fn eq(&self, other: &Self) -> bool {\n-        if core::mem::discriminant(self) == core::mem::discriminant(other) {\n-            match (self, other) {\n-                (Self::Bar { bin: l_bin }, Self::Bar { bin: r_bin }) => l_bin == r_bin,\n-                (Self::Baz { qux: l_qux, fez: l_fez }, Self::Baz { qux: r_qux, fez: r_fez }) => l_qux == r_qux && l_fez == r_fez,\n-                _ => true,\n-            }\n-        } else {\n-            false\n+        match (self, other) {\n+            (Self::Bar { bin: l_bin }, Self::Bar { bin: r_bin }) => l_bin == r_bin,\n+            (Self::Baz { qux: l_qux, fez: l_fez }, Self::Baz { qux: r_qux, fez: r_fez }) => l_qux == r_qux && l_fez == r_fez,\n+            _ => core::mem::discriminant(self) == core::mem::discriminant(other),\n         }\n     }\n }"}, {"sha": "65d39c370aefb3ba6f647739cd90ec575b9fafad", "filename": "crates/ide_assists/src/utils/gen_trait_fn_body.rs", "status": "modified", "additions": 5, "deletions": 15, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/2fff019b6b965a97cd92bc7551f00c2a3baaab87/crates%2Fide_assists%2Fsrc%2Futils%2Fgen_trait_fn_body.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fff019b6b965a97cd92bc7551f00c2a3baaab87/crates%2Fide_assists%2Fsrc%2Futils%2Fgen_trait_fn_body.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Futils%2Fgen_trait_fn_body.rs?ref=2fff019b6b965a97cd92bc7551f00c2a3baaab87", "patch": "@@ -449,27 +449,17 @@ fn gen_partial_eq(adt: &ast::Adt, func: &ast::Fn) -> Option<()> {\n                 }\n             }\n \n-            if !arms.is_empty() && case_count > arms.len() {\n-                let lhs = make::wildcard_pat().into();\n-                arms.push(make::match_arm(Some(lhs), None, make::expr_literal(\"true\").into()));\n-            }\n-\n             let expr = match arms.len() {\n                 0 => eq_check,\n                 _ => {\n-                    let condition = make::condition(eq_check, None);\n+                    if case_count > arms.len() {\n+                        let lhs = make::wildcard_pat().into();\n+                        arms.push(make::match_arm(Some(lhs), None, eq_check));\n+                    }\n \n                     let match_target = make::expr_tuple(vec![self_name, other_name]);\n                     let list = make::match_arm_list(arms).indent(ast::edit::IndentLevel(1));\n-                    let match_expr = Some(make::expr_match(match_target, list));\n-                    let then_branch = make::block_expr(None, match_expr);\n-                    let then_branch = then_branch.indent(ast::edit::IndentLevel(1));\n-\n-                    let else_branche = make::expr_literal(\"false\");\n-                    let else_branche = make::block_expr(None, Some(else_branche.into()))\n-                        .indent(ast::edit::IndentLevel(1));\n-\n-                    make::expr_if(condition, then_branch, Some(else_branche.into()))\n+                    make::expr_match(match_target, list)\n                 }\n             };\n "}]}