{"sha": "95ddeaed8ea6b72f50b1ecbd33d33b4847abf006", "node_id": "C_kwDOAAsO6NoAKDk1ZGRlYWVkOGVhNmI3MmY1MGIxZWNiZDMzZDMzYjQ4NDdhYmYwMDY", "commit": {"author": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2021-12-10T14:17:31Z"}, "committer": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2021-12-10T14:17:31Z"}, "message": "Fix `concat!` with captured expression", "tree": {"sha": "2a4f9954f9bd153e7c50c23f37cce71d1c69ce00", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a4f9954f9bd153e7c50c23f37cce71d1c69ce00"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95ddeaed8ea6b72f50b1ecbd33d33b4847abf006", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95ddeaed8ea6b72f50b1ecbd33d33b4847abf006", "html_url": "https://github.com/rust-lang/rust/commit/95ddeaed8ea6b72f50b1ecbd33d33b4847abf006", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95ddeaed8ea6b72f50b1ecbd33d33b4847abf006/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6df9bd42f44c5f70903021f83c6ada0c6e3c6916", "url": "https://api.github.com/repos/rust-lang/rust/commits/6df9bd42f44c5f70903021f83c6ada0c6e3c6916", "html_url": "https://github.com/rust-lang/rust/commit/6df9bd42f44c5f70903021f83c6ada0c6e3c6916"}], "stats": {"total": 47, "additions": 46, "deletions": 1}, "files": [{"sha": "6e91301ecdc896508286d327c77cf170355fe3ff", "filename": "crates/hir_def/src/macro_expansion_tests/builtin_fn_macro.rs", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/95ddeaed8ea6b72f50b1ecbd33d33b4847abf006/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fbuiltin_fn_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95ddeaed8ea6b72f50b1ecbd33d33b4847abf006/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fbuiltin_fn_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fbuiltin_fn_macro.rs?ref=95ddeaed8ea6b72f50b1ecbd33d33b4847abf006", "patch": "@@ -313,6 +313,40 @@ fn main() { \"foor0bar\\nfalse\"; }\n     );\n }\n \n+#[test]\n+fn test_concat_with_captured_expr() {\n+    check(\n+        r##\"\n+#[rustc_builtin_macro]\n+macro_rules! concat {}\n+\n+macro_rules! surprise {\n+    () => { \"s\" };\n+}\n+\n+macro_rules! stuff {\n+    ($string:expr) => { concat!($string) };\n+}\n+\n+fn main() { concat!(surprise!()); }\n+\"##,\n+        expect![[r##\"\n+#[rustc_builtin_macro]\n+macro_rules! concat {}\n+\n+macro_rules! surprise {\n+    () => { \"s\" };\n+}\n+\n+macro_rules! stuff {\n+    ($string:expr) => { concat!($string) };\n+}\n+\n+fn main() { \"s\"; }\n+\"##]],\n+    );\n+}\n+\n #[test]\n fn test_concat_idents_expand() {\n     check("}, {"sha": "57e66e5cc4c6aef6ac27a2cc450fc3597f3aa2bc", "filename": "crates/hir_expand/src/builtin_fn_macro.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/95ddeaed8ea6b72f50b1ecbd33d33b4847abf006/crates%2Fhir_expand%2Fsrc%2Fbuiltin_fn_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95ddeaed8ea6b72f50b1ecbd33d33b4847abf006/crates%2Fhir_expand%2Fsrc%2Fbuiltin_fn_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fbuiltin_fn_macro.rs?ref=95ddeaed8ea6b72f50b1ecbd33d33b4847abf006", "patch": "@@ -386,7 +386,18 @@ fn concat_expand(\n ) -> ExpandResult<Option<ExpandedEager>> {\n     let mut err = None;\n     let mut text = String::new();\n-    for (i, t) in tt.token_trees.iter().enumerate() {\n+    for (i, mut t) in tt.token_trees.iter().enumerate() {\n+        // FIXME: hack on top of a hack: `$e:expr` captures get surrounded in parentheses\n+        // to ensure the right parsing order, so skip the parentheses here. Ideally we'd\n+        // implement rustc's model. cc https://github.com/rust-analyzer/rust-analyzer/pull/10623\n+        if let tt::TokenTree::Subtree(tt::Subtree { delimiter: Some(delim), token_trees }) = t {\n+            if let [tt] = &**token_trees {\n+                if delim.kind == tt::DelimiterKind::Parenthesis {\n+                    t = tt;\n+                }\n+            }\n+        }\n+\n         match t {\n             tt::TokenTree::Leaf(tt::Leaf::Literal(it)) if i % 2 == 0 => {\n                 // concat works with string and char literals, so remove any quotes."}]}