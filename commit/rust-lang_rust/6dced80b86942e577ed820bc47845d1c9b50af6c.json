{"sha": "6dced80b86942e577ed820bc47845d1c9b50af6c", "node_id": "C_kwDOAAsO6NoAKDZkY2VkODBiODY5NDJlNTc3ZWQ4MjBiYzQ3ODQ1ZDFjOWI1MGFmNmM", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-07-29T03:43:28Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-07-29T05:28:32Z"}, "message": "Remove `visit_name` from the AST visitor.\n\nBecause the default is empty and it's never overridden. This means\n`walk_ident` can also be removed, because it does nothing.", "tree": {"sha": "b458d86657e8fce09c9b15432604886d28f12896", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b458d86657e8fce09c9b15432604886d28f12896"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6dced80b86942e577ed820bc47845d1c9b50af6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6dced80b86942e577ed820bc47845d1c9b50af6c", "html_url": "https://github.com/rust-lang/rust/commit/6dced80b86942e577ed820bc47845d1c9b50af6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6dced80b86942e577ed820bc47845d1c9b50af6c/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab44b5a408ec42be8e4045120a9a2a1121618384", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab44b5a408ec42be8e4045120a9a2a1121618384", "html_url": "https://github.com/rust-lang/rust/commit/ab44b5a408ec42be8e4045120a9a2a1121618384"}], "stats": {"total": 22, "additions": 4, "deletions": 18}, "files": [{"sha": "d9594b323dd0d0f7c092b7126fa44134116e063f", "filename": "compiler/rustc_ast/src/visit.rs", "status": "modified", "additions": 3, "deletions": 16, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/6dced80b86942e577ed820bc47845d1c9b50af6c/compiler%2Frustc_ast%2Fsrc%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6dced80b86942e577ed820bc47845d1c9b50af6c/compiler%2Frustc_ast%2Fsrc%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fvisit.rs?ref=6dced80b86942e577ed820bc47845d1c9b50af6c", "patch": "@@ -15,7 +15,7 @@\n \n use crate::ast::*;\n \n-use rustc_span::symbol::{Ident, Symbol};\n+use rustc_span::symbol::Ident;\n use rustc_span::Span;\n \n #[derive(Copy, Clone, Debug, PartialEq)]\n@@ -109,12 +109,7 @@ pub enum LifetimeCtxt {\n /// to monitor future changes to `Visitor` in case a new method with a\n /// new default implementation gets introduced.)\n pub trait Visitor<'ast>: Sized {\n-    fn visit_name(&mut self, _span: Span, _name: Symbol) {\n-        // Nothing to do.\n-    }\n-    fn visit_ident(&mut self, ident: Ident) {\n-        walk_ident(self, ident);\n-    }\n+    fn visit_ident(&mut self, _ident: Ident) {}\n     fn visit_foreign_item(&mut self, i: &'ast ForeignItem) {\n         walk_foreign_item(self, i)\n     }\n@@ -267,10 +262,6 @@ macro_rules! walk_list {\n     }\n }\n \n-pub fn walk_ident<'a, V: Visitor<'a>>(visitor: &mut V, ident: Ident) {\n-    visitor.visit_name(ident.span, ident.name);\n-}\n-\n pub fn walk_crate<'a, V: Visitor<'a>>(visitor: &mut V, krate: &'a Crate) {\n     walk_list!(visitor, visit_item, &krate.items);\n     walk_list!(visitor, visit_attribute, &krate.attrs);\n@@ -315,11 +306,7 @@ pub fn walk_item<'a, V: Visitor<'a>>(visitor: &mut V, item: &'a Item) {\n     visitor.visit_vis(&item.vis);\n     visitor.visit_ident(item.ident);\n     match item.kind {\n-        ItemKind::ExternCrate(orig_name) => {\n-            if let Some(orig_name) = orig_name {\n-                visitor.visit_name(item.span, orig_name);\n-            }\n-        }\n+        ItemKind::ExternCrate(_) => {}\n         ItemKind::Use(ref use_tree) => visitor.visit_use_tree(use_tree, item.id, false),\n         ItemKind::Static(ref typ, _, ref expr) | ItemKind::Const(_, ref typ, ref expr) => {\n             visitor.visit_ty(typ);"}, {"sha": "9c7369c83e2da57f8cf2bca9c4cc15862dc5065d", "filename": "compiler/rustc_ast_passes/src/node_count.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6dced80b86942e577ed820bc47845d1c9b50af6c/compiler%2Frustc_ast_passes%2Fsrc%2Fnode_count.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6dced80b86942e577ed820bc47845d1c9b50af6c/compiler%2Frustc_ast_passes%2Fsrc%2Fnode_count.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Fnode_count.rs?ref=6dced80b86942e577ed820bc47845d1c9b50af6c", "patch": "@@ -16,9 +16,8 @@ impl NodeCounter {\n }\n \n impl<'ast> Visitor<'ast> for NodeCounter {\n-    fn visit_ident(&mut self, ident: Ident) {\n+    fn visit_ident(&mut self, _ident: Ident) {\n         self.count += 1;\n-        walk_ident(self, ident);\n     }\n     fn visit_foreign_item(&mut self, i: &ForeignItem) {\n         self.count += 1;"}]}