{"sha": "f66fd8972f16f7a38f57c9953f1f6972a917c905", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2NmZkODk3MmYxNmY3YTM4ZjU3Yzk5NTNmMWY2OTcyYTkxN2M5MDU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-03-23T00:41:07Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-03-23T20:42:53Z"}, "message": "replace DUMMY_SP on resume with span from fn", "tree": {"sha": "4d3943074cf3a67b7e4ce8088dc99d0483aa37ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d3943074cf3a67b7e4ce8088dc99d0483aa37ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f66fd8972f16f7a38f57c9953f1f6972a917c905", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f66fd8972f16f7a38f57c9953f1f6972a917c905", "html_url": "https://github.com/rust-lang/rust/commit/f66fd8972f16f7a38f57c9953f1f6972a917c905", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f66fd8972f16f7a38f57c9953f1f6972a917c905/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb04e495dc7a34cc708246dad7bb8b844216fd3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb04e495dc7a34cc708246dad7bb8b844216fd3e", "html_url": "https://github.com/rust-lang/rust/commit/cb04e495dc7a34cc708246dad7bb8b844216fd3e"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "d52d750b12c5b55498b5e3ecd6d6571b1fb6a706", "filename": "src/librustc_mir/build/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f66fd8972f16f7a38f57c9953f1f6972a917c905/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f66fd8972f16f7a38f57c9953f1f6972a917c905/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmod.rs?ref=f66fd8972f16f7a38f57c9953f1f6972a917c905", "patch": "@@ -22,6 +22,8 @@ pub struct Builder<'a, 'tcx: 'a> {\n     hir: Cx<'a, 'tcx>,\n     cfg: CFG<'tcx>,\n \n+    fn_span: Span,\n+\n     // the current set of scopes, updated as we traverse;\n     // see the `scope` module for more details\n     scopes: Vec<scope::Scope<'tcx>>,\n@@ -147,6 +149,7 @@ pub fn construct<'a,'tcx>(hir: Cx<'a,'tcx>,\n     let mut builder = Builder {\n         hir: hir,\n         cfg: cfg,\n+        fn_span: span,\n         scopes: vec![],\n         scope_data_vec: ScopeDataVec::new(),\n         scope_auxiliary: vec![],"}, {"sha": "cf09333d4acfbeb2c1226bec77e04691b76cff86", "filename": "src/librustc_mir/build/scope.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f66fd8972f16f7a38f57c9953f1f6972a917c905/src%2Flibrustc_mir%2Fbuild%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f66fd8972f16f7a38f57c9953f1f6972a917c905/src%2Flibrustc_mir%2Fbuild%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fscope.rs?ref=f66fd8972f16f7a38f57c9953f1f6972a917c905", "patch": "@@ -438,7 +438,7 @@ impl<'a,'tcx> Builder<'a,'tcx> {\n         // generate B0 <- B1 <- B2 in left-to-right order. Control flow of the generated blocks\n         // always ends up at a block with the Resume terminator.\n         if scopes.iter().any(|scope| !scope.drops.is_empty() || scope.free.is_some()) {\n-            Some(build_diverge_scope(hir.tcx(), cfg, &unit_temp, scopes))\n+            Some(build_diverge_scope(hir.tcx(), self.fn_span, cfg, &unit_temp, scopes))\n         } else {\n             None\n         }\n@@ -611,6 +611,7 @@ fn build_scope_drops<'tcx>(cfg: &mut CFG<'tcx>,\n }\n \n fn build_diverge_scope<'tcx>(tcx: &TyCtxt<'tcx>,\n+                             fn_span: Span,\n                              cfg: &mut CFG<'tcx>,\n                              unit_temp: &Lvalue<'tcx>,\n                              scopes: &mut [Scope<'tcx>])\n@@ -639,11 +640,11 @@ fn build_diverge_scope<'tcx>(tcx: &TyCtxt<'tcx>,\n         // Diverging from the root scope creates a RESUME terminator.\n         // FIXME what span to use here?\n         let resumeblk = cfg.start_new_cleanup_block();\n-        cfg.terminate(resumeblk, scope.id, DUMMY_SP, TerminatorKind::Resume);\n+        cfg.terminate(resumeblk, scope.id, fn_span, TerminatorKind::Resume);\n         resumeblk\n     } else {\n         // Diverging from any other scope chains up to the previous scope.\n-        build_diverge_scope(tcx, cfg, unit_temp, earlier_scopes)\n+        build_diverge_scope(tcx, fn_span, cfg, unit_temp, earlier_scopes)\n     };\n     scope.cached_block = Some(target);\n "}]}