{"sha": "0353e1c6f4eb0f9351f9a75f5fef016d6ac7960b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzNTNlMWM2ZjRlYjBmOTM1MWY5YTc1ZjVmZWYwMTZkNmFjNzk2MGI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-17T16:12:37Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-17T16:12:37Z"}, "message": "Use Arguments::from_os", "tree": {"sha": "537f7e23f65a762820846bdfa4892641175528df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/537f7e23f65a762820846bdfa4892641175528df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0353e1c6f4eb0f9351f9a75f5fef016d6ac7960b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0353e1c6f4eb0f9351f9a75f5fef016d6ac7960b", "html_url": "https://github.com/rust-lang/rust/commit/0353e1c6f4eb0f9351f9a75f5fef016d6ac7960b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0353e1c6f4eb0f9351f9a75f5fef016d6ac7960b/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57140f1730b4ac39697bfad530409ac8472e4e9d", "url": "https://api.github.com/repos/rust-lang/rust/commits/57140f1730b4ac39697bfad530409ac8472e4e9d", "html_url": "https://github.com/rust-lang/rust/commit/57140f1730b4ac39697bfad530409ac8472e4e9d"}], "stats": {"total": 12, "additions": 3, "deletions": 9}, "files": [{"sha": "f0daaaf1589c826934623d233124e5a0b8b963f6", "filename": "crates/ra_cli/src/main.rs", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0353e1c6f4eb0f9351f9a75f5fef016d6ac7960b/crates%2Fra_cli%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0353e1c6f4eb0f9351f9a75f5fef016d6ac7960b/crates%2Fra_cli%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cli%2Fsrc%2Fmain.rs?ref=0353e1c6f4eb0f9351f9a75f5fef016d6ac7960b", "patch": "@@ -40,16 +40,10 @@ impl Verbosity {\n fn main() -> Result<()> {\n     env_logger::try_init()?;\n \n-    let subcommand = match std::env::args_os().nth(1) {\n-        None => {\n-            eprintln!(\"{}\", help::GLOBAL_HELP);\n-            return Ok(());\n-        }\n-        Some(s) => s,\n-    };\n-    let mut matches = Arguments::from_vec(std::env::args_os().skip(2).collect());\n+    let mut matches = Arguments::from_env();\n+    let subcommand = matches.subcommand()?.unwrap_or_default();\n \n-    match &*subcommand.to_string_lossy() {\n+    match subcommand.as_str() {\n         \"parse\" => {\n             if matches.contains([\"-h\", \"--help\"]) {\n                 eprintln!(\"{}\", help::PARSE_HELP);"}]}