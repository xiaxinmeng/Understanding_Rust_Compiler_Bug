{"sha": "4d457e26e15f052266d724adc33b0e934208ce10", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkNDU3ZTI2ZTE1ZjA1MjI2NmQ3MjRhZGMzM2IwZTkzNDIwOGNlMTA=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-07-21T17:05:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-21T17:05:44Z"}, "message": "Merge #9665\n\n9665: Only complete ancestors and self in visibility path completions r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "2f1915a305711badcd26b73f53e635d023d00fb5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f1915a305711badcd26b73f53e635d023d00fb5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d457e26e15f052266d724adc33b0e934208ce10", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg+FPoCRBK7hj4Ov3rIwAA9MMIAEtYpxNIeinXqTLQS67VYQGm\nml1mGDmxuPqq4RA56YBSchPcF+5sFksLswH4nFpzPmxCVJjwAqzC2D+NDPW1Klbr\n4d60SpAYuJZGsZK97CMbaekg2JwHVUYcU5iTpqI9nvQplhefCg/SqUmENQTh0fhV\nn8ni5/pCo0YW20H1hkimI8O25WO6jl3nsUkHHZVOSQhPymNSafytVtl0q8A37+EM\np6r1y1uKtKqcxN+7v6wUnirjNTPk/FjaLEqLvC9dQQzlEuqA+zwnSkYsUAjc4nYx\nugH89EAdJMRLlMPDttu9AoKQy6uNh2A4mpDmIsymAmvB3PhpV/P/2oV7Wa2PoI8=\n=m4Fn\n-----END PGP SIGNATURE-----\n", "payload": "tree 2f1915a305711badcd26b73f53e635d023d00fb5\nparent 99451a5fc25bb6448313633b4385277e50073845\nparent ccde0bcd1fbb1cafda28039832010c5a7fb9118f\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1626887144 +0000\ncommitter GitHub <noreply@github.com> 1626887144 +0000\n\nMerge #9665\n\n9665: Only complete ancestors and self in visibility path completions r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d457e26e15f052266d724adc33b0e934208ce10", "html_url": "https://github.com/rust-lang/rust/commit/4d457e26e15f052266d724adc33b0e934208ce10", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d457e26e15f052266d724adc33b0e934208ce10/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99451a5fc25bb6448313633b4385277e50073845", "url": "https://api.github.com/repos/rust-lang/rust/commits/99451a5fc25bb6448313633b4385277e50073845", "html_url": "https://github.com/rust-lang/rust/commit/99451a5fc25bb6448313633b4385277e50073845"}, {"sha": "ccde0bcd1fbb1cafda28039832010c5a7fb9118f", "url": "https://api.github.com/repos/rust-lang/rust/commits/ccde0bcd1fbb1cafda28039832010c5a7fb9118f", "html_url": "https://github.com/rust-lang/rust/commit/ccde0bcd1fbb1cafda28039832010c5a7fb9118f"}], "stats": {"total": 57, "additions": 44, "deletions": 13}, "files": [{"sha": "03b079ed7a0b00b96fe858cdcc25a8c83f4338d1", "filename": "crates/ide_completion/src/completions/qualified_path.rs", "status": "modified", "additions": 29, "deletions": 11, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/4d457e26e15f052266d724adc33b0e934208ce10/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fqualified_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d457e26e15f052266d724adc33b0e934208ce10/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fqualified_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fqualified_path.rs?ref=4d457e26e15f052266d724adc33b0e934208ce10", "patch": "@@ -28,22 +28,40 @@ pub(crate) fn complete_qualified_path(acc: &mut Completions, ctx: &CompletionCon\n \n     let context_module = ctx.scope.module();\n \n-    if let Some(ImmediateLocation::ItemList | ImmediateLocation::Trait | ImmediateLocation::Impl) =\n-        ctx.completion_location\n-    {\n-        if let hir::PathResolution::Def(hir::ModuleDef::Module(module)) = resolution {\n-            for (name, def) in module.scope(ctx.db, context_module) {\n-                if let hir::ScopeDef::MacroDef(macro_def) = def {\n-                    if macro_def.is_fn_like() {\n-                        acc.add_macro(ctx, Some(name.clone()), macro_def);\n+    match ctx.completion_location {\n+        Some(ImmediateLocation::ItemList | ImmediateLocation::Trait | ImmediateLocation::Impl) => {\n+            if let hir::PathResolution::Def(hir::ModuleDef::Module(module)) = resolution {\n+                for (name, def) in module.scope(ctx.db, context_module) {\n+                    if let hir::ScopeDef::MacroDef(macro_def) = def {\n+                        if macro_def.is_fn_like() {\n+                            acc.add_macro(ctx, Some(name.clone()), macro_def);\n+                        }\n+                    }\n+                    if let hir::ScopeDef::ModuleDef(hir::ModuleDef::Module(_)) = def {\n+                        acc.add_resolution(ctx, name, &def);\n                     }\n                 }\n-                if let hir::ScopeDef::ModuleDef(hir::ModuleDef::Module(_)) = def {\n-                    acc.add_resolution(ctx, name, &def);\n+            }\n+            return;\n+        }\n+        Some(ImmediateLocation::Visibility(_)) => {\n+            if let hir::PathResolution::Def(hir::ModuleDef::Module(resolved)) = resolution {\n+                if let Some(current_module) = ctx.scope.module() {\n+                    if let Some(next) = current_module\n+                        .path_to_root(ctx.db)\n+                        .into_iter()\n+                        .take_while(|&it| it != resolved)\n+                        .next()\n+                    {\n+                        if let Some(name) = next.name(ctx.db) {\n+                            acc.add_resolution(ctx, name, &hir::ScopeDef::ModuleDef(next.into()));\n+                        }\n+                    }\n                 }\n             }\n+            return;\n         }\n-        return;\n+        _ => (),\n     }\n \n     if ctx.in_use_tree() {"}, {"sha": "8a024af24b8002b81b4cc69a15785af14b33904e", "filename": "crates/ide_completion/src/tests/visibility.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/4d457e26e15f052266d724adc33b0e934208ce10/crates%2Fide_completion%2Fsrc%2Ftests%2Fvisibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d457e26e15f052266d724adc33b0e934208ce10/crates%2Fide_completion%2Fsrc%2Ftests%2Fvisibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Ftests%2Fvisibility.rs?ref=4d457e26e15f052266d724adc33b0e934208ce10", "patch": "@@ -40,7 +40,6 @@ pub(in $0)\n \n #[test]\n fn qualified() {\n-    // FIXME: only show parent modules\n     check(\n         r#\"\n mod foo {\n@@ -50,7 +49,21 @@ mod foo {\n mod bar {}\n \"#,\n         expect![[r#\"\n-            md bar\n+            md foo\n+        \"#]],\n+    );\n+    check(\n+        r#\"\n+mod qux {\n+    mod foo {\n+        pub(in crate::qux::$0)\n+    }\n+    mod baz {}\n+}\n+\n+mod bar {}\n+\"#,\n+        expect![[r#\"\n             md foo\n         \"#]],\n     );"}]}