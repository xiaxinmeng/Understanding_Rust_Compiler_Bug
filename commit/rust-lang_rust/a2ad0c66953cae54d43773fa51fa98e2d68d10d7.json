{"sha": "a2ad0c66953cae54d43773fa51fa98e2d68d10d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyYWQwYzY2OTUzY2FlNTRkNDM3NzNmYTUxZmE5OGUyZDY4ZDEwZDc=", "commit": {"author": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2016-01-31T22:25:10Z"}, "committer": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2016-01-31T22:25:10Z"}, "message": "fixed #528", "tree": {"sha": "e890f41fc4e7a2181d56f4391601a6130e87e983", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e890f41fc4e7a2181d56f4391601a6130e87e983"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2ad0c66953cae54d43773fa51fa98e2d68d10d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2ad0c66953cae54d43773fa51fa98e2d68d10d7", "html_url": "https://github.com/rust-lang/rust/commit/a2ad0c66953cae54d43773fa51fa98e2d68d10d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2ad0c66953cae54d43773fa51fa98e2d68d10d7/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5402ef3d2755bfd55668ad0c750a35eeb242f12f", "url": "https://api.github.com/repos/rust-lang/rust/commits/5402ef3d2755bfd55668ad0c750a35eeb242f12f", "html_url": "https://github.com/rust-lang/rust/commit/5402ef3d2755bfd55668ad0c750a35eeb242f12f"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "0162ef92dd6fc436c5e9cfb5a7ff9cc53b07aebf", "filename": "src/block_in_if_condition.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a2ad0c66953cae54d43773fa51fa98e2d68d10d7/src%2Fblock_in_if_condition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2ad0c66953cae54d43773fa51fa98e2d68d10d7/src%2Fblock_in_if_condition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fblock_in_if_condition.rs?ref=a2ad0c66953cae54d43773fa51fa98e2d68d10d7", "patch": "@@ -92,7 +92,9 @@ impl LateLintPass for BlockInIfCondition {\n                                                         snippet_block(cx, then.span, \"..\")));\n                         }\n                     } else {\n-                        if in_macro(cx, expr.span) || differing_macro_contexts(expr.span, block.stmts[0].span) {\n+                        let span = block.expr.as_ref().map_or_else(|| block.stmts[0].span,\n+                                                                   |e| e.span);\n+                        if in_macro(cx, span) || differing_macro_contexts(expr.span, span) {\n                             return;\n                         }\n                         // move block higher"}, {"sha": "5158e74c1e0b2ffcb30fb09b8aadd79a695b72d4", "filename": "tests/compile-fail/block_in_if_condition.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a2ad0c66953cae54d43773fa51fa98e2d68d10d7/tests%2Fcompile-fail%2Fblock_in_if_condition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2ad0c66953cae54d43773fa51fa98e2d68d10d7/tests%2Fcompile-fail%2Fblock_in_if_condition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fblock_in_if_condition.rs?ref=a2ad0c66953cae54d43773fa51fa98e2d68d10d7", "patch": "@@ -3,17 +3,28 @@\n \n #![deny(block_in_if_condition_expr)]\n #![deny(block_in_if_condition_stmt)]\n-#![allow(unused)]\n+#![allow(unused, let_and_return)]\n \n \n macro_rules! blocky {\n     () => {{true}}\n }\n \n+macro_rules! blocky_too {\n+    () => {{\n+        let r = true;\n+        r\n+    }}\n+}\n+\n fn macro_if() {\n     if blocky!() {\n     }\n+    \n+    if blocky_too!() {\n+    }\n }\n+\n fn condition_has_block() -> i32 {\n \n     if { //~ERROR in an 'if' condition, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a 'let'"}]}