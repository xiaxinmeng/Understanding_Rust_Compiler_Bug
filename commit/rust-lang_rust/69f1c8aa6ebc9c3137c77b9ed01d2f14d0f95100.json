{"sha": "69f1c8aa6ebc9c3137c77b9ed01d2f14d0f95100", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5ZjFjOGFhNmViYzljMzEzN2M3N2I5ZWQwMWQyZjE0ZDBmOTUxMDA=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-10-14T10:15:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-14T10:15:51Z"}, "message": "Merge #6222\n\n6222: Fix stackoverflow in insert_use::recursive_merge r=matklad a=Veykril\n\nFixes #6221.\r\n\r\n#6108 shouldn't be related to this as autocompletion doesn't depend on this code.\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "d1be625f446431c12068bfdbd7ae162737671384", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1be625f446431c12068bfdbd7ae162737671384"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69f1c8aa6ebc9c3137c77b9ed01d2f14d0f95100", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfhs/XCRBK7hj4Ov3rIwAAdHIIAGJXuB3HBECB6/hBdvBCk+FR\n9XDjWZWdjIhUcTj5m1xNEcDHgW6Z/BnvWbspdwIRSBp6tGcN3PAzDJvAsUrOtl0F\nLieF826j8hK5BDZognqIcQED3mPqbhaOB0isNjSG7QvcXDqsZTkqR9o0882e9SNp\nM35NJ8E9uXMHCWaSI5jr9ONgDQll7Ta9eAnP5Lkc45vBO4kSxBTdMracim5/lPhz\nU6DmkSD0757wENVQBqqxoXQHYQyH4OM4Nlb352pKr+4TKUXNfnkbiKPjC8qjhi/L\nXSl2MoMe6dqPl4o8RpM+reQa4wqXErXhl+GFHFCZ++wRicZhe81ofg0Z3AiYbUw=\n=NZqE\n-----END PGP SIGNATURE-----\n", "payload": "tree d1be625f446431c12068bfdbd7ae162737671384\nparent 0fb069c5b02072239891ce564feaa7d1890c6d6f\nparent 03b77b03fefa4dc260b5a63223db253706d41ca8\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1602670551 +0000\ncommitter GitHub <noreply@github.com> 1602670551 +0000\n\nMerge #6222\n\n6222: Fix stackoverflow in insert_use::recursive_merge r=matklad a=Veykril\n\nFixes #6221.\r\n\r\n#6108 shouldn't be related to this as autocompletion doesn't depend on this code.\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69f1c8aa6ebc9c3137c77b9ed01d2f14d0f95100", "html_url": "https://github.com/rust-lang/rust/commit/69f1c8aa6ebc9c3137c77b9ed01d2f14d0f95100", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69f1c8aa6ebc9c3137c77b9ed01d2f14d0f95100/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0fb069c5b02072239891ce564feaa7d1890c6d6f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0fb069c5b02072239891ce564feaa7d1890c6d6f", "html_url": "https://github.com/rust-lang/rust/commit/0fb069c5b02072239891ce564feaa7d1890c6d6f"}, {"sha": "03b77b03fefa4dc260b5a63223db253706d41ca8", "url": "https://api.github.com/repos/rust-lang/rust/commits/03b77b03fefa4dc260b5a63223db253706d41ca8", "html_url": "https://github.com/rust-lang/rust/commit/03b77b03fefa4dc260b5a63223db253706d41ca8"}], "stats": {"total": 55, "additions": 53, "deletions": 2}, "files": [{"sha": "fd9c9e03c725bb1812c9a5f2a0f623cb36944ac0", "filename": "crates/assists/src/handlers/merge_imports.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/69f1c8aa6ebc9c3137c77b9ed01d2f14d0f95100/crates%2Fassists%2Fsrc%2Fhandlers%2Fmerge_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69f1c8aa6ebc9c3137c77b9ed01d2f14d0f95100/crates%2Fassists%2Fsrc%2Fhandlers%2Fmerge_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fmerge_imports.rs?ref=69f1c8aa6ebc9c3137c77b9ed01d2f14d0f95100", "patch": "@@ -72,6 +72,20 @@ mod tests {\n \n     use super::*;\n \n+    #[test]\n+    fn test_merge_equal() {\n+        check_assist(\n+            merge_imports,\n+            r\"\n+use std::fmt<|>::{Display, Debug};\n+use std::fmt::{Display, Debug};\n+\",\n+            r\"\n+use std::fmt::{Debug, Display};\n+\",\n+        )\n+    }\n+\n     #[test]\n     fn test_merge_first() {\n         check_assist("}, {"sha": "c50bc76040659e15ed0f909360d451da0ee3414d", "filename": "crates/assists/src/handlers/replace_qualified_name_with_use.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/69f1c8aa6ebc9c3137c77b9ed01d2f14d0f95100/crates%2Fassists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69f1c8aa6ebc9c3137c77b9ed01d2f14d0f95100/crates%2Fassists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs?ref=69f1c8aa6ebc9c3137c77b9ed01d2f14d0f95100", "patch": "@@ -123,6 +123,23 @@ mod tests {\n \n     use super::*;\n \n+    #[test]\n+    fn test_replace_already_imported() {\n+        check_assist(\n+            replace_qualified_name_with_use,\n+            r\"use std::fs;\n+\n+fn main() {\n+    std::f<|>s::Path\n+}\",\n+            r\"use std::fs;\n+\n+fn main() {\n+    fs::Path\n+}\",\n+        )\n+    }\n+\n     #[test]\n     fn test_replace_add_use_no_anchor() {\n         check_assist("}, {"sha": "409985b3b72db057457217002ae672d9ae38371a", "filename": "crates/assists/src/utils/insert_use.rs", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/69f1c8aa6ebc9c3137c77b9ed01d2f14d0f95100/crates%2Fassists%2Fsrc%2Futils%2Finsert_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69f1c8aa6ebc9c3137c77b9ed01d2f14d0f95100/crates%2Fassists%2Fsrc%2Futils%2Finsert_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Futils%2Finsert_use.rs?ref=69f1c8aa6ebc9c3137c77b9ed01d2f14d0f95100", "patch": "@@ -173,8 +173,15 @@ pub(crate) fn try_merge_trees(\n     let rhs_path = rhs.path()?;\n \n     let (lhs_prefix, rhs_prefix) = common_prefix(&lhs_path, &rhs_path)?;\n-    let lhs = lhs.split_prefix(&lhs_prefix);\n-    let rhs = rhs.split_prefix(&rhs_prefix);\n+    let (lhs, rhs) = if is_simple_path(lhs)\n+        && is_simple_path(rhs)\n+        && lhs_path == lhs_prefix\n+        && rhs_path == rhs_prefix\n+    {\n+        (lhs.clone(), rhs.clone())\n+    } else {\n+        (lhs.split_prefix(&lhs_prefix), rhs.split_prefix(&rhs_prefix))\n+    };\n     recursive_merge(&lhs, &rhs, merge)\n }\n \n@@ -250,6 +257,10 @@ fn recursive_merge(\n                         use_trees.insert(idx, make::glob_use_tree());\n                         continue;\n                     }\n+\n+                    if lhs_t.use_tree_list().is_none() && rhs_t.use_tree_list().is_none() {\n+                        continue;\n+                    }\n                 }\n                 let lhs = lhs_t.split_prefix(&lhs_prefix);\n                 let rhs = rhs_t.split_prefix(&rhs_prefix);\n@@ -295,6 +306,10 @@ fn common_prefix(lhs: &ast::Path, rhs: &ast::Path) -> Option<(ast::Path, ast::Pa\n     }\n }\n \n+fn is_simple_path(use_tree: &ast::UseTree) -> bool {\n+    use_tree.use_tree_list().is_none() && use_tree.star_token().is_none()\n+}\n+\n fn path_is_self(path: &ast::Path) -> bool {\n     path.segment().and_then(|seg| seg.self_token()).is_some() && path.qualifier().is_none()\n }\n@@ -523,6 +538,11 @@ mod tests {\n \n     use test_utils::assert_eq_text;\n \n+    #[test]\n+    fn insert_existing() {\n+        check_full(\"std::fs\", \"use std::fs;\", \"use std::fs;\")\n+    }\n+\n     #[test]\n     fn insert_start() {\n         check_none("}]}