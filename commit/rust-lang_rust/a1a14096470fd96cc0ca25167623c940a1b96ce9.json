{"sha": "a1a14096470fd96cc0ca25167623c940a1b96ce9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExYTE0MDk2NDcwZmQ5NmNjMGNhMjUxNjc2MjNjOTQwYTFiOTZjZTk=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-02-24T16:55:49Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-02-24T20:48:01Z"}, "message": "Rollup merge of #48317 - ExpHP:unused-unsafe-is-no-fn, r=estebank\n\nunused_unsafe: don't label irrelevant fns\n\nFixes #48131\n\nDiagnostic bugfix to remove an errant note.  Stops the search for an enclosing unsafe scope at the first safe fn encountered.\n\n```rust\npub unsafe fn outer() {\n    fn inner() {\n        unsafe { /* unnecessary */ }\n    }\n\n    inner()\n}\n```\n\n**Before:**\n\n```\nwarning: unnecessary `unsafe` block\n --> src/main.rs:3:9\n  |\n1 | pub unsafe fn outer() {\n  | --------------------- because it's nested under this `unsafe` fn\n2 |     fn inner() {\n3 |         unsafe { /* unnecessary */ }\n  |         ^^^^^^ unnecessary `unsafe` block\n  |\n  = note: #[warn(unused_unsafe)] on by default\n```\n\n**After:**\n\n```\nwarning: unnecessary `unsafe` block\n --> src/main.rs:3:9\n  |\n3 |         unsafe { /* unnecessary */ }\n  |         ^^^^^^ unnecessary `unsafe` block\n  |\n  = note: #[warn(unused_unsafe)] on by default\n```", "tree": {"sha": "83d05f51e1a57e673e3f2f4d144ac031e8b798d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83d05f51e1a57e673e3f2f4d144ac031e8b798d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1a14096470fd96cc0ca25167623c940a1b96ce9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1a14096470fd96cc0ca25167623c940a1b96ce9", "html_url": "https://github.com/rust-lang/rust/commit/a1a14096470fd96cc0ca25167623c940a1b96ce9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1a14096470fd96cc0ca25167623c940a1b96ce9/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3f85fdf3350b2813af95c2946607dba771373da", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3f85fdf3350b2813af95c2946607dba771373da", "html_url": "https://github.com/rust-lang/rust/commit/b3f85fdf3350b2813af95c2946607dba771373da"}, {"sha": "42df8c56cc6f1b94a9c0e8e55462dff57d95e4ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/42df8c56cc6f1b94a9c0e8e55462dff57d95e4ac", "html_url": "https://github.com/rust-lang/rust/commit/42df8c56cc6f1b94a9c0e8e55462dff57d95e4ac"}], "stats": {"total": 46, "additions": 44, "deletions": 2}, "files": [{"sha": "3524255e03772328311120212f8c7fee12933e11", "filename": "src/librustc_mir/transform/check_unsafety.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a1a14096470fd96cc0ca25167623c940a1b96ce9/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1a14096470fd96cc0ca25167623c940a1b96ce9/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs?ref=a1a14096470fd96cc0ca25167623c940a1b96ce9", "patch": "@@ -386,10 +386,13 @@ fn is_enclosed(tcx: TyCtxt,\n         if used_unsafe.contains(&parent_id) {\n             Some((\"block\".to_string(), parent_id))\n         } else if let Some(hir::map::NodeItem(&hir::Item {\n-            node: hir::ItemFn(_, hir::Unsafety::Unsafe, _, _, _, _),\n+            node: hir::ItemFn(_, fn_unsafety, _, _, _, _),\n             ..\n         })) = tcx.hir.find(parent_id) {\n-            Some((\"fn\".to_string(), parent_id))\n+            match fn_unsafety {\n+                hir::Unsafety::Unsafe => Some((\"fn\".to_string(), parent_id)),\n+                hir::Unsafety::Normal => None,\n+            }\n         } else {\n             is_enclosed(tcx, used_unsafe, parent_id)\n         }"}, {"sha": "9eb567a5d3eb09feb10951f5cbdc139d0da7854c", "filename": "src/test/compile-fail/issue-48131.rs", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/a1a14096470fd96cc0ca25167623c940a1b96ce9/src%2Ftest%2Fcompile-fail%2Fissue-48131.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1a14096470fd96cc0ca25167623c940a1b96ce9/src%2Ftest%2Fcompile-fail%2Fissue-48131.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-48131.rs?ref=a1a14096470fd96cc0ca25167623c940a1b96ce9", "patch": "@@ -0,0 +1,39 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// This note is annotated because the purpose of the test\n+// is to ensure that certain other notes are not generated.\n+#![deny(unused_unsafe)] //~ NOTE\n+\n+// (test that no note is generated on this unsafe fn)\n+pub unsafe fn a() {\n+    fn inner() {\n+        unsafe { /* unnecessary */ } //~ ERROR unnecessary `unsafe`\n+                                     //~^ NOTE\n+    }\n+\n+    inner()\n+}\n+\n+pub fn b() {\n+    // (test that no note is generated on this unsafe block)\n+    unsafe {\n+        fn inner() {\n+            unsafe { /* unnecessary */ } //~ ERROR unnecessary `unsafe`\n+                                         //~^ NOTE\n+        }\n+\n+        let () = ::std::mem::uninitialized();\n+\n+        inner()\n+    }\n+}\n+\n+fn main() {}"}]}