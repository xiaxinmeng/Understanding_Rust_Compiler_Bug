{"sha": "610bc6867588ae74d28932fc77c003ba3377634a", "node_id": "C_kwDOAAsO6NoAKDYxMGJjNjg2NzU4OGFlNzRkMjg5MzJmYzc3YzAwM2JhMzM3NzYzNGE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-04-14T05:58:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-14T05:58:42Z"}, "message": "Rollup merge of #110299 - kylematsuda:earlybinder-impl-subject, r=compiler-errors\n\nSwitch to `EarlyBinder` for `impl_subject` query\n\nPart of the work to finish https://github.com/rust-lang/rust/issues/105779.\n\nSeveral queries `X` have a `bound_X` variant that wraps the output in `EarlyBinder`. This adds `EarlyBinder` to the return type of the `impl_subject` query and removes `bound_impl_subject`.\n\nr? ```@lcnr```", "tree": {"sha": "0a5477c0866e5f747d4250ddc4b48ea57e4425db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a5477c0866e5f747d4250ddc4b48ea57e4425db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/610bc6867588ae74d28932fc77c003ba3377634a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkOOuSCRBK7hj4Ov3rIwAAZhEIAIc1GRFi8/IhCnzEqg2UVGH0\nRCvIxP8szSRkQuQUFPNHCUI5E2PGOuCD+q6ylrvTfKwDAOMUH8OnxZu4J0+kYFf3\nvxxqlq0GJSnh6RfYaCy6cLsusaBrAk0jWQnYT5OHkIaakRXp6aqbd0b42OeY7t+p\nD60P+gNy5Q4EqC12RkYytTWmWuSrnLsQ/GTB+vQZMF31A8ikD/agfnhyFclvX78t\nBm8Cs1SLr5k+gyJ29r/l8gCvc7Ie9Q9TkPX8dOHm+BbdrZ7qrvA0ZwV2K+4Dgc3b\nUUAZpDX8lnwzTw9d6fm/rakUtdIID+vJn0LDMn7TiKLRdt2I6rmNA9KqcJyB3dE=\n=Rhad\n-----END PGP SIGNATURE-----\n", "payload": "tree 0a5477c0866e5f747d4250ddc4b48ea57e4425db\nparent a7889d1730d48fa987c513f97250f3a3570a919e\nparent 8d5ee1a0729b91545e856dbf14fd75687dc9e2b8\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1681451922 +0200\ncommitter GitHub <noreply@github.com> 1681451922 +0200\n\nRollup merge of #110299 - kylematsuda:earlybinder-impl-subject, r=compiler-errors\n\nSwitch to `EarlyBinder` for `impl_subject` query\n\nPart of the work to finish https://github.com/rust-lang/rust/issues/105779.\n\nSeveral queries `X` have a `bound_X` variant that wraps the output in `EarlyBinder`. This adds `EarlyBinder` to the return type of the `impl_subject` query and removes `bound_impl_subject`.\n\nr? ```@lcnr```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/610bc6867588ae74d28932fc77c003ba3377634a", "html_url": "https://github.com/rust-lang/rust/commit/610bc6867588ae74d28932fc77c003ba3377634a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/610bc6867588ae74d28932fc77c003ba3377634a/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7889d1730d48fa987c513f97250f3a3570a919e", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7889d1730d48fa987c513f97250f3a3570a919e", "html_url": "https://github.com/rust-lang/rust/commit/a7889d1730d48fa987c513f97250f3a3570a919e"}, {"sha": "8d5ee1a0729b91545e856dbf14fd75687dc9e2b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d5ee1a0729b91545e856dbf14fd75687dc9e2b8", "html_url": "https://github.com/rust-lang/rust/commit/8d5ee1a0729b91545e856dbf14fd75687dc9e2b8"}], "stats": {"total": 20, "additions": 8, "deletions": 12}, "files": [{"sha": "7770a5e47641886a23e8ade279984e8b2cd6f03e", "filename": "compiler/rustc_middle/src/hir/mod.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/610bc6867588ae74d28932fc77c003ba3377634a/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/610bc6867588ae74d28932fc77c003ba3377634a/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmod.rs?ref=610bc6867588ae74d28932fc77c003ba3377634a", "patch": "@@ -7,7 +7,7 @@ pub mod nested_filter;\n pub mod place;\n \n use crate::ty::query::Providers;\n-use crate::ty::{ImplSubject, TyCtxt};\n+use crate::ty::{EarlyBinder, ImplSubject, TyCtxt};\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_data_structures::sync::{par_for_each_in, Send, Sync};\n use rustc_hir::def_id::{DefId, LocalDefId};\n@@ -104,11 +104,11 @@ impl<'tcx> TyCtxt<'tcx> {\n         self.parent_module_from_def_id(id.owner.def_id)\n     }\n \n-    pub fn impl_subject(self, def_id: DefId) -> ImplSubject<'tcx> {\n-        self.impl_trait_ref(def_id)\n-            .map(|t| t.subst_identity())\n-            .map(ImplSubject::Trait)\n-            .unwrap_or_else(|| ImplSubject::Inherent(self.type_of(def_id).subst_identity()))\n+    pub fn impl_subject(self, def_id: DefId) -> EarlyBinder<ImplSubject<'tcx>> {\n+        match self.impl_trait_ref(def_id) {\n+            Some(t) => t.map_bound(ImplSubject::Trait),\n+            None => self.type_of(def_id).map_bound(ImplSubject::Inherent),\n+        }\n     }\n }\n "}, {"sha": "c8a78ec03d94777e8ce7611785a2c73a4c9a662c", "filename": "compiler/rustc_middle/src/ty/util.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/610bc6867588ae74d28932fc77c003ba3377634a/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/610bc6867588ae74d28932fc77c003ba3377634a/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs?ref=610bc6867588ae74d28932fc77c003ba3377634a", "patch": "@@ -708,10 +708,6 @@ impl<'tcx> TyCtxt<'tcx> {\n         ty::EarlyBinder(self.explicit_item_bounds(def_id))\n     }\n \n-    pub fn bound_impl_subject(self, def_id: DefId) -> ty::EarlyBinder<ty::ImplSubject<'tcx>> {\n-        ty::EarlyBinder(self.impl_subject(def_id))\n-    }\n-\n     /// Returns names of captured upvars for closures and generators.\n     ///\n     /// Here are some examples:"}, {"sha": "20c2605f219a7b262b9319e0a806adf44a7d36b6", "filename": "compiler/rustc_trait_selection/src/traits/coherence.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/610bc6867588ae74d28932fc77c003ba3377634a/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/610bc6867588ae74d28932fc77c003ba3377634a/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs?ref=610bc6867588ae74d28932fc77c003ba3377634a", "patch": "@@ -306,7 +306,7 @@ fn negative_impl(tcx: TyCtxt<'_>, impl1_def_id: DefId, impl2_def_id: DefId) -> b\n         &infcx,\n         ObligationCause::dummy(),\n         impl_env,\n-        tcx.impl_subject(impl1_def_id),\n+        tcx.impl_subject(impl1_def_id).subst_identity(),\n     ) {\n         Ok(s) => s,\n         Err(err) => {"}, {"sha": "20357d4d2501a9795a66c10fa5d846c6d29d27e8", "filename": "compiler/rustc_trait_selection/src/traits/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/610bc6867588ae74d28932fc77c003ba3377634a/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/610bc6867588ae74d28932fc77c003ba3377634a/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Futil.rs?ref=610bc6867588ae74d28932fc77c003ba3377634a", "patch": "@@ -198,7 +198,7 @@ pub fn impl_subject_and_oblig<'a, 'tcx>(\n     impl_def_id: DefId,\n     impl_substs: SubstsRef<'tcx>,\n ) -> (ImplSubject<'tcx>, impl Iterator<Item = PredicateObligation<'tcx>>) {\n-    let subject = selcx.tcx().bound_impl_subject(impl_def_id);\n+    let subject = selcx.tcx().impl_subject(impl_def_id);\n     let subject = subject.subst(selcx.tcx(), impl_substs);\n \n     let InferOk { value: subject, obligations: normalization_obligations1 } ="}]}