{"sha": "178c4fbccbc59fc7c554cb3cda33413d7d455366", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3OGM0ZmJjY2JjNTlmYzdjNTU0Y2IzY2RhMzM0MTNkN2Q0NTUzNjY=", "commit": {"author": {"name": "Cameron Zwarich", "email": "zwarich@mozilla.com", "date": "2014-06-16T22:40:20Z"}, "committer": {"name": "Cameron Zwarich", "email": "zwarich@mozilla.com", "date": "2014-06-16T22:40:20Z"}, "message": "Remove an unused return value\n\nThe only caller of check_for_assignment_to_restricted_or_frozen_location\nisn't checking its return value, so we can remove it and simplify the\ninternal logic of the function.", "tree": {"sha": "f00a1c2b5e59043957e7524e7cb80514f9f4d18e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f00a1c2b5e59043957e7524e7cb80514f9f4d18e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/178c4fbccbc59fc7c554cb3cda33413d7d455366", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/178c4fbccbc59fc7c554cb3cda33413d7d455366", "html_url": "https://github.com/rust-lang/rust/commit/178c4fbccbc59fc7c554cb3cda33413d7d455366", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/178c4fbccbc59fc7c554cb3cda33413d7d455366/comments", "author": null, "committer": null, "parents": [{"sha": "702ef1b7215e310a0c5e2e761bef922f36dd5f65", "url": "https://api.github.com/repos/rust-lang/rust/commits/702ef1b7215e310a0c5e2e761bef922f36dd5f65", "html_url": "https://github.com/rust-lang/rust/commit/702ef1b7215e310a0c5e2e761bef922f36dd5f65"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "42712206c01661064dd88707e19aa0d674b8b8d1", "filename": "src/librustc/middle/borrowck/check_loans.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/178c4fbccbc59fc7c554cb3cda33413d7d455366/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/178c4fbccbc59fc7c554cb3cda33413d7d455366/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs?ref=178c4fbccbc59fc7c554cb3cda33413d7d455366", "patch": "@@ -825,14 +825,14 @@ impl<'a> CheckLoanCtxt<'a> {\n             this: &CheckLoanCtxt,\n             assignment_id: ast::NodeId,\n             assignment_span: Span,\n-            assignee_cmt: mc::cmt) -> bool\n+            assignee_cmt: mc::cmt)\n         {\n             //! Check for assignments that violate the terms of an\n             //! outstanding loan.\n \n             let loan_path = match opt_loan_path(&assignee_cmt) {\n                 Some(lp) => lp,\n-                None => { return true; /* no loan path, can't be any loans */ }\n+                None => { return; /* no loan path, can't be any loans */ }\n             };\n \n             // Start by searching for an assignment to a *restricted*\n@@ -852,7 +852,7 @@ impl<'a> CheckLoanCtxt<'a> {\n                 false\n             });\n \n-            if !cont { return false }\n+            if !cont { return; }\n \n             // The previous code handled assignments to paths that\n             // have been restricted. This covers paths that have been\n@@ -899,21 +899,19 @@ impl<'a> CheckLoanCtxt<'a> {\n                     LpExtend(_, mc::McDeclared, _) |\n                     LpExtend(_, mc::McImmutable, _) |\n                     LpVar(_) => {\n-                        return true;\n+                        return;\n                     }\n                 };\n \n                 // Check for a non-const loan of `loan_path`\n-                let cont = this.each_in_scope_loan(assignment_id, |loan| {\n+                this.each_in_scope_loan(assignment_id, |loan| {\n                     if loan.loan_path == loan_path {\n                         this.report_illegal_mutation(assignment_span, &*full_loan_path, loan);\n                         false\n                     } else {\n                         true\n                     }\n                 });\n-\n-                if !cont { return false }\n             }\n         }\n     }"}]}