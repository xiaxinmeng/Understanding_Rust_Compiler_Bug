{"sha": "ada809917dc4b6f7a48fb60df06c3753bc8a74f3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkYTgwOTkxN2RjNGI2ZjdhNDhmYjYwZGYwNmMzNzUzYmM4YTc0ZjM=", "commit": {"author": {"name": "cjkenn", "email": "cam.j.kennedy@gmail.com", "date": "2017-10-15T21:50:40Z"}, "committer": {"name": "cjkenn", "email": "cam.j.kennedy@gmail.com", "date": "2017-10-20T06:22:04Z"}, "message": "Initial work to remove typeck_tables call from check_unused", "tree": {"sha": "7cf4a05fbb288edb97cbd85f9f1463668fc5d11b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7cf4a05fbb288edb97cbd85f9f1463668fc5d11b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ada809917dc4b6f7a48fb60df06c3753bc8a74f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ada809917dc4b6f7a48fb60df06c3753bc8a74f3", "html_url": "https://github.com/rust-lang/rust/commit/ada809917dc4b6f7a48fb60df06c3753bc8a74f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ada809917dc4b6f7a48fb60df06c3753bc8a74f3/comments", "author": {"login": "cjkenn", "id": 6255842, "node_id": "MDQ6VXNlcjYyNTU4NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/6255842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjkenn", "html_url": "https://github.com/cjkenn", "followers_url": "https://api.github.com/users/cjkenn/followers", "following_url": "https://api.github.com/users/cjkenn/following{/other_user}", "gists_url": "https://api.github.com/users/cjkenn/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjkenn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjkenn/subscriptions", "organizations_url": "https://api.github.com/users/cjkenn/orgs", "repos_url": "https://api.github.com/users/cjkenn/repos", "events_url": "https://api.github.com/users/cjkenn/events{/privacy}", "received_events_url": "https://api.github.com/users/cjkenn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjkenn", "id": 6255842, "node_id": "MDQ6VXNlcjYyNTU4NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/6255842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjkenn", "html_url": "https://github.com/cjkenn", "followers_url": "https://api.github.com/users/cjkenn/followers", "following_url": "https://api.github.com/users/cjkenn/following{/other_user}", "gists_url": "https://api.github.com/users/cjkenn/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjkenn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjkenn/subscriptions", "organizations_url": "https://api.github.com/users/cjkenn/orgs", "repos_url": "https://api.github.com/users/cjkenn/repos", "events_url": "https://api.github.com/users/cjkenn/events{/privacy}", "received_events_url": "https://api.github.com/users/cjkenn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6d7514545cbe83e771a400d04049b96dfb210cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6d7514545cbe83e771a400d04049b96dfb210cd", "html_url": "https://github.com/rust-lang/rust/commit/f6d7514545cbe83e771a400d04049b96dfb210cd"}], "stats": {"total": 35, "additions": 25, "deletions": 10}, "files": [{"sha": "77889b7c10e86298d2d99774aaef6ff1d08e9a01", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ada809917dc4b6f7a48fb60df06c3753bc8a74f3/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ada809917dc4b6f7a48fb60df06c3753bc8a74f3/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=ada809917dc4b6f7a48fb60df06c3753bc8a74f3", "patch": "@@ -388,7 +388,7 @@ pub struct TypeckTables<'tcx> {\n \n     /// Set of trait imports actually used in the method resolution.\n     /// This is used for warning unused imports.\n-    pub used_trait_imports: DefIdSet,\n+    pub used_trait_imports: Rc<RefCell<DefIdSet>>,\n \n     /// If any errors occurred while type-checking this body,\n     /// this field will be set to `true`.\n@@ -418,7 +418,7 @@ impl<'tcx> TypeckTables<'tcx> {\n             liberated_fn_sigs: ItemLocalMap(),\n             fru_field_types: ItemLocalMap(),\n             cast_kinds: ItemLocalMap(),\n-            used_trait_imports: DefIdSet(),\n+            used_trait_imports: Rc::new(RefCell::new(DefIdSet())),\n             tainted_by_errors: false,\n             free_region_map: FreeRegionMap::new(),\n         }\n@@ -782,7 +782,7 @@ impl<'gcx> HashStable<StableHashingContext<'gcx>> for TypeckTables<'gcx> {\n             cast_kinds.hash_stable(hcx, hasher);\n             generator_sigs.hash_stable(hcx, hasher);\n             generator_interiors.hash_stable(hcx, hasher);\n-            used_trait_imports.hash_stable(hcx, hasher);\n+            used_trait_imports.borrow_mut().hash_stable(hcx, hasher);\n             tainted_by_errors.hash_stable(hcx, hasher);\n             free_region_map.hash_stable(hcx, hasher);\n         })"}, {"sha": "a0c93df80689c2c4b1e4482994df0b86da43cfd0", "filename": "src/librustc_typeck/check/method/mod.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ada809917dc4b6f7a48fb60df06c3753bc8a74f3/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ada809917dc4b6f7a48fb60df06c3753bc8a74f3/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs?ref=ada809917dc4b6f7a48fb60df06c3753bc8a74f3", "patch": "@@ -163,7 +163,10 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n         if let Some(import_id) = pick.import_id {\n             let import_def_id = self.tcx.hir.local_def_id(import_id);\n             debug!(\"used_trait_import: {:?}\", import_def_id);\n-            self.tables.borrow_mut().used_trait_imports.insert(import_def_id);\n+\n+            let tables = self.tables.borrow_mut();\n+            let mut ut = tables.used_trait_imports.borrow_mut();\n+            ut.insert(import_def_id);\n         }\n \n         self.tcx.check_stability(pick.item.def_id, call_expr.id, span);\n@@ -361,7 +364,9 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n         if let Some(import_id) = pick.import_id {\n             let import_def_id = self.tcx.hir.local_def_id(import_id);\n             debug!(\"used_trait_import: {:?}\", import_def_id);\n-            self.tables.borrow_mut().used_trait_imports.insert(import_def_id);\n+            let tables = self.tables.borrow_mut();\n+            let mut ut = tables.used_trait_imports.borrow_mut();\n+            ut.insert(import_def_id);\n         }\n \n         let def = pick.item.def();"}, {"sha": "f6b4dd8470c0c3001212b1b7392105829ee0f700", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ada809917dc4b6f7a48fb60df06c3753bc8a74f3/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ada809917dc4b6f7a48fb60df06c3753bc8a74f3/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=ada809917dc4b6f7a48fb60df06c3753bc8a74f3", "patch": "@@ -106,9 +106,10 @@ use session::{CompileIncomplete, Session};\n use TypeAndSubsts;\n use lint;\n use util::common::{ErrorReported, indenter};\n-use util::nodemap::{DefIdMap, FxHashMap, NodeMap};\n+use util::nodemap::{DefIdMap, DefIdSet, FxHashMap, NodeMap};\n \n use std::cell::{Cell, RefCell, Ref, RefMut};\n+use std::rc::Rc;\n use std::collections::hash_map::Entry;\n use std::cmp;\n use std::fmt::Display;\n@@ -921,6 +922,12 @@ fn typeck_tables_of<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     tables\n }\n \n+pub fn get_used_trait_imports<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n+                                        def_id: DefId)\n+                                        -> Rc<RefCell<DefIdSet>> {\n+    Rc::clone(&tcx.typeck_tables_of(def_id).used_trait_imports)\n+}\n+\n fn check_abi<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, span: Span, abi: Abi) {\n     if !tcx.sess.target.target.is_abi_supported(abi) {\n         struct_span_err!(tcx.sess, span, E0570,"}, {"sha": "b6f2551da207775571e989796424a5090459dc2a", "filename": "src/librustc_typeck/check/writeback.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ada809917dc4b6f7a48fb60df06c3753bc8a74f3/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ada809917dc4b6f7a48fb60df06c3753bc8a74f3/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs?ref=ada809917dc4b6f7a48fb60df06c3753bc8a74f3", "patch": "@@ -23,6 +23,8 @@ use rustc::util::nodemap::DefIdSet;\n use syntax::ast;\n use syntax_pos::Span;\n use std::mem;\n+use std::rc::Rc;\n+use std::cell::RefCell;\n \n ///////////////////////////////////////////////////////////////////////////\n // Entry point\n@@ -49,7 +51,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n         wbcx.visit_generator_interiors();\n \n         let used_trait_imports = mem::replace(&mut self.tables.borrow_mut().used_trait_imports,\n-                                              DefIdSet());\n+                                              Rc::new(RefCell::new(DefIdSet())));\n         debug!(\"used_trait_imports({:?}) = {:?}\", item_def_id, used_trait_imports);\n         wbcx.tables.used_trait_imports = used_trait_imports;\n "}, {"sha": "cd2bd8499cf3878359594c484165339da86043c0", "filename": "src/librustc_typeck/check_unused.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ada809917dc4b6f7a48fb60df06c3753bc8a74f3/src%2Flibrustc_typeck%2Fcheck_unused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ada809917dc4b6f7a48fb60df06c3753bc8a74f3/src%2Flibrustc_typeck%2Fcheck_unused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck_unused.rs?ref=ada809917dc4b6f7a48fb60df06c3753bc8a74f3", "patch": "@@ -19,6 +19,8 @@ use rustc::hir::itemlikevisit::ItemLikeVisitor;\n use rustc::hir;\n use rustc::util::nodemap::DefIdSet;\n \n+use check::get_used_trait_imports;\n+\n struct CheckVisitor<'a, 'tcx: 'a> {\n     tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     used_trait_imports: DefIdSet,\n@@ -66,10 +68,9 @@ pub fn check_crate<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>) {\n     let mut used_trait_imports = DefIdSet();\n     for &body_id in tcx.hir.krate().bodies.keys() {\n         let item_def_id = tcx.hir.body_owner_def_id(body_id);\n-        let tables = tcx.typeck_tables_of(item_def_id);\n-        let imports = &tables.used_trait_imports;\n+        let imports = get_used_trait_imports(tcx, item_def_id);\n         debug!(\"GatherVisitor: item_def_id={:?} with imports {:#?}\", item_def_id, imports);\n-        used_trait_imports.extend(imports);\n+        used_trait_imports.extend(imports.borrow().iter());\n     }\n \n     let mut visitor = CheckVisitor { tcx, used_trait_imports };"}]}