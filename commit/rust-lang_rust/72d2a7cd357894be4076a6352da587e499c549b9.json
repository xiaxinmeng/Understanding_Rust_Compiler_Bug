{"sha": "72d2a7cd357894be4076a6352da587e499c549b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyZDJhN2NkMzU3ODk0YmU0MDc2YTYzNTJkYTU4N2U0OTljNTQ5Yjk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-11-27T06:53:47Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-11-27T06:53:47Z"}, "message": "Auto merge of #78194 - bugadani:generic, r=varkor\n\nSkip most of `create_substs_for_ast_path` if type is not generic", "tree": {"sha": "5de1c0befb96a8930dd6fa9740d571e6c279294f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5de1c0befb96a8930dd6fa9740d571e6c279294f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72d2a7cd357894be4076a6352da587e499c549b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72d2a7cd357894be4076a6352da587e499c549b9", "html_url": "https://github.com/rust-lang/rust/commit/72d2a7cd357894be4076a6352da587e499c549b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72d2a7cd357894be4076a6352da587e499c549b9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cfed9184f44cbd02662eb7715d6226ae885ef5c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/cfed9184f44cbd02662eb7715d6226ae885ef5c3", "html_url": "https://github.com/rust-lang/rust/commit/cfed9184f44cbd02662eb7715d6226ae885ef5c3"}, {"sha": "aebea522632af459763c9aa75358906199066a6d", "url": "https://api.github.com/repos/rust-lang/rust/commits/aebea522632af459763c9aa75358906199066a6d", "html_url": "https://github.com/rust-lang/rust/commit/aebea522632af459763c9aa75358906199066a6d"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "2f64597a510f090367505aa9303db3a47a3673d4", "filename": "compiler/rustc_typeck/src/astconv/mod.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/72d2a7cd357894be4076a6352da587e499c549b9/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72d2a7cd357894be4076a6352da587e499c549b9/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs?ref=72d2a7cd357894be4076a6352da587e499c549b9", "patch": "@@ -337,6 +337,14 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n             infer_args,\n         );\n \n+        // Skip processing if type has no generic parameters.\n+        // Traits always have `Self` as a generic parameter, which means they will not return early\n+        // here and so associated type bindings will be handled regardless of whether there are any\n+        // non-`Self` generic parameters.\n+        if generic_params.params.len() == 0 {\n+            return (tcx.intern_substs(&[]), vec![], arg_count);\n+        }\n+\n         let is_object = self_ty.map_or(false, |ty| ty == self.tcx().types.trait_object_dummy_self);\n \n         struct SubstsForAstPathCtxt<'a, 'tcx> {"}]}