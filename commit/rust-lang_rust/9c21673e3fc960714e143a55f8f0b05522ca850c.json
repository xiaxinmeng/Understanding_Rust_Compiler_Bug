{"sha": "9c21673e3fc960714e143a55f8f0b05522ca850c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljMjE2NzNlM2ZjOTYwNzE0ZTE0M2E1NWY4ZjBiMDU1MjJjYTg1MGM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-15T03:50:23Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-15T04:13:03Z"}, "message": "bench: Update shootout-binarytrees for style", "tree": {"sha": "3f844f561b479b16ea9c2f459402d50207a9fb5f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f844f561b479b16ea9c2f459402d50207a9fb5f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c21673e3fc960714e143a55f8f0b05522ca850c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c21673e3fc960714e143a55f8f0b05522ca850c", "html_url": "https://github.com/rust-lang/rust/commit/9c21673e3fc960714e143a55f8f0b05522ca850c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c21673e3fc960714e143a55f8f0b05522ca850c/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c53d0a0af80c963c05f848a470f672509df03026", "url": "https://api.github.com/repos/rust-lang/rust/commits/c53d0a0af80c963c05f848a470f672509df03026", "html_url": "https://github.com/rust-lang/rust/commit/c53d0a0af80c963c05f848a470f672509df03026"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "a5fca0654f77c8135a57a58121c845d6da215637", "filename": "src/test/bench/shootout-binarytrees.rs", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/9c21673e3fc960714e143a55f8f0b05522ca850c/src%2Ftest%2Fbench%2Fshootout-binarytrees.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c21673e3fc960714e143a55f8f0b05522ca850c/src%2Ftest%2Fbench%2Fshootout-binarytrees.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-binarytrees.rs?ref=9c21673e3fc960714e143a55f8f0b05522ca850c", "patch": "@@ -19,17 +19,22 @@ fn bottom_up_tree(item: int, depth: int) -> ~tree {\n     } else { ret ~nil; }\n }\n \n-fn main() {\n-    let n = 8;\n+fn main(args: [str]) {\n+    let n = if vec::len(args) == 2u {\n+        int::from_str(args[1])\n+    } else {\n+        15\n+    };\n     let min_depth = 4;\n     let max_depth;\n     if min_depth + 2 > n {\n         max_depth = min_depth + 2;\n     } else { max_depth = n; }\n     let stretch_depth = max_depth + 1;\n     let stretch_tree = bottom_up_tree(0, stretch_depth);\n-    #debug(\"stretch tree of depth %d\\t check: %d\", stretch_depth,\n-           item_check(stretch_tree));\n+    std::io::println(#fmt(\"stretch tree of depth %d\\t check: %d\",\n+                          stretch_depth,\n+                          item_check(stretch_tree)));\n     let long_lived_tree = bottom_up_tree(0, max_depth);\n     let depth = min_depth;\n     while depth <= max_depth {\n@@ -43,10 +48,12 @@ fn main() {\n             chk += item_check(temp_tree);\n             i += 1;\n         }\n-        #debug(\"%d\\t trees of depth %d\\t check: %d\", iterations * 2, depth,\n-               chk);\n+        std::io::println(#fmt(\"%d\\t trees of depth %d\\t check: %d\",\n+                               iterations * 2, depth,\n+                               chk));\n         depth += 2;\n     }\n-    #debug(\"long lived trees of depth %d\\t check: %d\", max_depth,\n-           item_check(long_lived_tree));\n+    std::io::println(#fmt(\"long lived trees of depth %d\\t check: %d\",\n+                          max_depth,\n+                          item_check(long_lived_tree)));\n }"}]}