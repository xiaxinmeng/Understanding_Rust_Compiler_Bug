{"sha": "c2534f53247b31647b8b457a2bb90757b695b9ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyNTM0ZjUzMjQ3YjMxNjQ3YjhiNDU3YTJiYjkwNzU3YjY5NWI5YWQ=", "commit": {"author": {"name": "rchaser53", "email": "tayoshizawa29@gmail.com", "date": "2019-02-01T10:58:38Z"}, "committer": {"name": "rchaser53", "email": "tayoshizawa29@gmail.com", "date": "2019-02-01T10:58:38Z"}, "message": "fix \"internal error: left behind trailing whitespace\" with long lines", "tree": {"sha": "032bed39ef4271082db94bcdba2fec4ee0719c93", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/032bed39ef4271082db94bcdba2fec4ee0719c93"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c2534f53247b31647b8b457a2bb90757b695b9ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c2534f53247b31647b8b457a2bb90757b695b9ad", "html_url": "https://github.com/rust-lang/rust/commit/c2534f53247b31647b8b457a2bb90757b695b9ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c2534f53247b31647b8b457a2bb90757b695b9ad/comments", "author": {"login": "rchaser53", "id": 9676954, "node_id": "MDQ6VXNlcjk2NzY5NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/9676954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rchaser53", "html_url": "https://github.com/rchaser53", "followers_url": "https://api.github.com/users/rchaser53/followers", "following_url": "https://api.github.com/users/rchaser53/following{/other_user}", "gists_url": "https://api.github.com/users/rchaser53/gists{/gist_id}", "starred_url": "https://api.github.com/users/rchaser53/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rchaser53/subscriptions", "organizations_url": "https://api.github.com/users/rchaser53/orgs", "repos_url": "https://api.github.com/users/rchaser53/repos", "events_url": "https://api.github.com/users/rchaser53/events{/privacy}", "received_events_url": "https://api.github.com/users/rchaser53/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rchaser53", "id": 9676954, "node_id": "MDQ6VXNlcjk2NzY5NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/9676954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rchaser53", "html_url": "https://github.com/rchaser53", "followers_url": "https://api.github.com/users/rchaser53/followers", "following_url": "https://api.github.com/users/rchaser53/following{/other_user}", "gists_url": "https://api.github.com/users/rchaser53/gists{/gist_id}", "starred_url": "https://api.github.com/users/rchaser53/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rchaser53/subscriptions", "organizations_url": "https://api.github.com/users/rchaser53/orgs", "repos_url": "https://api.github.com/users/rchaser53/repos", "events_url": "https://api.github.com/users/rchaser53/events{/privacy}", "received_events_url": "https://api.github.com/users/rchaser53/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "203e6d265d88bee97f89bb0529f3a33cb46e0477", "url": "https://api.github.com/repos/rust-lang/rust/commits/203e6d265d88bee97f89bb0529f3a33cb46e0477", "html_url": "https://github.com/rust-lang/rust/commit/203e6d265d88bee97f89bb0529f3a33cb46e0477"}], "stats": {"total": 141, "additions": 137, "deletions": 4}, "files": [{"sha": "02d17f5cdddfcb6f74f41ea83a9f394f3f8bb599", "filename": "Configurations.md", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c2534f53247b31647b8b457a2bb90757b695b9ad/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/c2534f53247b31647b8b457a2bb90757b695b9ad/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=c2534f53247b31647b8b457a2bb90757b695b9ad", "patch": "@@ -1037,8 +1037,7 @@ Format string literals where necessary\n \n ```rust\n fn main() {\n-    let lorem =\n-        \"ipsum dolor sit amet consectetur adipiscing elit lorem ipsum dolor sit amet consectetur adipiscing\";\n+    let lorem = \"ipsum dolor sit amet consectetur adipiscing elit lorem ipsum dolor sit amet consectetur adipiscing\";\n }\n ```\n "}, {"sha": "1468b3bdd8eb6d6b420146eb8720d2c4b5839206", "filename": "src/expr.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c2534f53247b31647b8b457a2bb90757b695b9ad/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2534f53247b31647b8b457a2bb90757b695b9ad/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=c2534f53247b31647b8b457a2bb90757b695b9ad", "patch": "@@ -22,7 +22,7 @@ use comment::{\n     combine_strs_with_missing_comments, contains_comment, recover_comment_removed, rewrite_comment,\n     rewrite_missing_comment, CharClasses, FindUncommented,\n };\n-use config::{Config, ControlBraceStyle, IndentStyle};\n+use config::{Config, ControlBraceStyle, IndentStyle, Version};\n use lists::{\n     definitive_tactic, itemize_list, shape_for_tactic, struct_lit_formatting, struct_lit_shape,\n     struct_lit_tactic, write_list, ListFormatting, ListItem, Separator,\n@@ -1264,7 +1264,11 @@ fn rewrite_string_lit(context: &RewriteContext, span: Span, shape: Shape) -> Opt\n                     .join(\"\\n\")\n                     .trim_start(),\n             );\n-            return wrap_str(indented_string_lit, context.config.max_width(), shape);\n+            return if context.config.version() == Version::Two {\n+                Some(indented_string_lit)\n+            } else {\n+                wrap_str(indented_string_lit, context.config.max_width(), shape)\n+            };\n         } else {\n             return wrap_str(string_lit.to_owned(), context.config.max_width(), shape);\n         }"}, {"sha": "6d48ea742fc78e10175449586a89b3878451f602", "filename": "tests/source/configs/indent_style/block_trailing_comma_call/one.rs", "status": "renamed", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c2534f53247b31647b8b457a2bb90757b695b9ad/tests%2Fsource%2Fconfigs%2Findent_style%2Fblock_trailing_comma_call%2Fone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2534f53247b31647b8b457a2bb90757b695b9ad/tests%2Fsource%2Fconfigs%2Findent_style%2Fblock_trailing_comma_call%2Fone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs%2Findent_style%2Fblock_trailing_comma_call%2Fone.rs?ref=c2534f53247b31647b8b457a2bb90757b695b9ad", "patch": "@@ -1,3 +1,4 @@\n+// rustfmt-version: One\n // rustfmt-error_on_line_overflow: false\n // rustfmt-indent_style: Block\n ", "previous_filename": "tests/source/configs/indent_style/block_trailing_comma_call.rs"}, {"sha": "7a62d722c6e00432246321c15abec02bd22df7fc", "filename": "tests/source/configs/indent_style/block_trailing_comma_call/two.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c2534f53247b31647b8b457a2bb90757b695b9ad/tests%2Fsource%2Fconfigs%2Findent_style%2Fblock_trailing_comma_call%2Ftwo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2534f53247b31647b8b457a2bb90757b695b9ad/tests%2Fsource%2Fconfigs%2Findent_style%2Fblock_trailing_comma_call%2Ftwo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs%2Findent_style%2Fblock_trailing_comma_call%2Ftwo.rs?ref=c2534f53247b31647b8b457a2bb90757b695b9ad", "patch": "@@ -0,0 +1,9 @@\n+// rustfmt-version: Two\n+// rustfmt-error_on_line_overflow: false\n+// rustfmt-indent_style: Block\n+\n+// rustfmt should not add trailing comma when rewriting macro. See #1528.\n+fn a() {\n+    panic!(\"this is a long string that goes past the maximum line length causing rustfmt to insert a comma here:\");\n+    foo(a, oooptoptoptoptptooptoptoptoptptooptoptoptoptptoptoptoptoptpt());\n+}"}, {"sha": "d23947931fffddce1851c4699e68eab761c51e4c", "filename": "tests/source/issue-2179/one.rs", "status": "renamed", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c2534f53247b31647b8b457a2bb90757b695b9ad/tests%2Fsource%2Fissue-2179%2Fone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2534f53247b31647b8b457a2bb90757b695b9ad/tests%2Fsource%2Fissue-2179%2Fone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-2179%2Fone.rs?ref=c2534f53247b31647b8b457a2bb90757b695b9ad", "patch": "@@ -1,3 +1,4 @@\n+// rustfmt-version: One\n // rustfmt-error_on_line_overflow: false\n \n fn issue_2179() {", "previous_filename": "tests/source/issue-2179.rs"}, {"sha": "f4cc9cc488bfc682cd45a6275a21a5f05ea75dbb", "filename": "tests/source/issue-2179/two.rs", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/c2534f53247b31647b8b457a2bb90757b695b9ad/tests%2Fsource%2Fissue-2179%2Ftwo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2534f53247b31647b8b457a2bb90757b695b9ad/tests%2Fsource%2Fissue-2179%2Ftwo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-2179%2Ftwo.rs?ref=c2534f53247b31647b8b457a2bb90757b695b9ad", "patch": "@@ -0,0 +1,36 @@\n+// rustfmt-version: Two\n+// rustfmt-error_on_line_overflow: false\n+\n+fn issue_2179() {\n+    let (opts, rustflags, clear_env_rust_log) =\n+        {\n+            // We mustn't lock configuration for the whole build process\n+            let rls_config = rls_config.lock().unwrap();\n+\n+            let opts = CargoOptions::new(&rls_config);\n+            trace!(\"Cargo compilation options:\\n{:?}\", opts);\n+            let rustflags = prepare_cargo_rustflags(&rls_config);\n+\n+            // Warn about invalid specified bin target or package depending on current mode\n+            // TODO: Return client notifications along with diagnostics to inform the user\n+            if !rls_config.workspace_mode {\n+                let cur_pkg_targets = ws.current().unwrap().targets();\n+\n+                if let &Some(ref build_bin) = rls_config.build_bin.as_ref() {\n+                    let mut bins = cur_pkg_targets.iter().filter(|x| x.is_bin());\n+                    if let None = bins.find(|x| x.name() == build_bin) {\n+                        warn!(\"cargo - couldn't find binary `{}` specified in `build_bin` configuration\", build_bin);\n+                    }\n+                }\n+            } else {\n+                for package in &opts.package {\n+                    if let None = ws.members().find(|x| x.name() == package) {\n+                        warn!(\"cargo - couldn't find member package `{}` specified in `analyze_package` configuration\", package);\n+                    }\n+                }\n+            }\n+\n+            (opts, rustflags, rls_config.clear_env_rust_log)\n+        };\n+\n+}"}, {"sha": "0eaf022249beca891169d265dcd47a1d21ac47bc", "filename": "tests/source/issue-3295/two.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c2534f53247b31647b8b457a2bb90757b695b9ad/tests%2Fsource%2Fissue-3295%2Ftwo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2534f53247b31647b8b457a2bb90757b695b9ad/tests%2Fsource%2Fissue-3295%2Ftwo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-3295%2Ftwo.rs?ref=c2534f53247b31647b8b457a2bb90757b695b9ad", "patch": "@@ -0,0 +1,13 @@\n+// rustfmt-version: Two\n+pub enum TestEnum {\n+    a,\n+    b,\n+}\n+\n+fn the_test(input: TestEnum) {\n+    match input {\n+        TestEnum::a => String::from(\"aaa\"),\n+        TestEnum::b => String::from(\"this is a very very very very very very very very very very very very very very very ong string\"),\n+        \n+    };\n+}"}, {"sha": "6b9489bef550ba4d3c688e2564c05ea5df861435", "filename": "tests/target/configs/indent_style/block_trailing_comma_call/one.rs", "status": "renamed", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c2534f53247b31647b8b457a2bb90757b695b9ad/tests%2Ftarget%2Fconfigs%2Findent_style%2Fblock_trailing_comma_call%2Fone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2534f53247b31647b8b457a2bb90757b695b9ad/tests%2Ftarget%2Fconfigs%2Findent_style%2Fblock_trailing_comma_call%2Fone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs%2Findent_style%2Fblock_trailing_comma_call%2Fone.rs?ref=c2534f53247b31647b8b457a2bb90757b695b9ad", "patch": "@@ -1,3 +1,4 @@\n+// rustfmt-version: One\n // rustfmt-error_on_line_overflow: false\n // rustfmt-indent_style: Block\n ", "previous_filename": "tests/target/configs/indent_style/block_trailing_comma_call.rs"}, {"sha": "4f4292e5f485740545013f93707db96e898df360", "filename": "tests/target/configs/indent_style/block_trailing_comma_call/two.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c2534f53247b31647b8b457a2bb90757b695b9ad/tests%2Ftarget%2Fconfigs%2Findent_style%2Fblock_trailing_comma_call%2Ftwo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2534f53247b31647b8b457a2bb90757b695b9ad/tests%2Ftarget%2Fconfigs%2Findent_style%2Fblock_trailing_comma_call%2Ftwo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs%2Findent_style%2Fblock_trailing_comma_call%2Ftwo.rs?ref=c2534f53247b31647b8b457a2bb90757b695b9ad", "patch": "@@ -0,0 +1,14 @@\n+// rustfmt-version: Two\n+// rustfmt-error_on_line_overflow: false\n+// rustfmt-indent_style: Block\n+\n+// rustfmt should not add trailing comma when rewriting macro. See #1528.\n+fn a() {\n+    panic!(\n+        \"this is a long string that goes past the maximum line length causing rustfmt to insert a comma here:\"\n+    );\n+    foo(\n+        a,\n+        oooptoptoptoptptooptoptoptoptptooptoptoptoptptoptoptoptoptpt(),\n+    );\n+}"}, {"sha": "3f98acc8dcde64bd20da3970a5802a18c5b294fc", "filename": "tests/target/issue-2179/one.rs", "status": "renamed", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c2534f53247b31647b8b457a2bb90757b695b9ad/tests%2Ftarget%2Fissue-2179%2Fone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2534f53247b31647b8b457a2bb90757b695b9ad/tests%2Ftarget%2Fissue-2179%2Fone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-2179%2Fone.rs?ref=c2534f53247b31647b8b457a2bb90757b695b9ad", "patch": "@@ -1,3 +1,4 @@\n+// rustfmt-version: One\n // rustfmt-error_on_line_overflow: false\n \n fn issue_2179() {", "previous_filename": "tests/target/issue-2179.rs"}, {"sha": "96531509ea2dd336cd8e4d7d688d6c9adf3b035b", "filename": "tests/target/issue-2179/two.rs", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/c2534f53247b31647b8b457a2bb90757b695b9ad/tests%2Ftarget%2Fissue-2179%2Ftwo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2534f53247b31647b8b457a2bb90757b695b9ad/tests%2Ftarget%2Fissue-2179%2Ftwo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-2179%2Ftwo.rs?ref=c2534f53247b31647b8b457a2bb90757b695b9ad", "patch": "@@ -0,0 +1,40 @@\n+// rustfmt-version: Two\n+// rustfmt-error_on_line_overflow: false\n+\n+fn issue_2179() {\n+    let (opts, rustflags, clear_env_rust_log) = {\n+        // We mustn't lock configuration for the whole build process\n+        let rls_config = rls_config.lock().unwrap();\n+\n+        let opts = CargoOptions::new(&rls_config);\n+        trace!(\"Cargo compilation options:\\n{:?}\", opts);\n+        let rustflags = prepare_cargo_rustflags(&rls_config);\n+\n+        // Warn about invalid specified bin target or package depending on current mode\n+        // TODO: Return client notifications along with diagnostics to inform the user\n+        if !rls_config.workspace_mode {\n+            let cur_pkg_targets = ws.current().unwrap().targets();\n+\n+            if let &Some(ref build_bin) = rls_config.build_bin.as_ref() {\n+                let mut bins = cur_pkg_targets.iter().filter(|x| x.is_bin());\n+                if let None = bins.find(|x| x.name() == build_bin) {\n+                    warn!(\n+                        \"cargo - couldn't find binary `{}` specified in `build_bin` configuration\",\n+                        build_bin\n+                    );\n+                }\n+            }\n+        } else {\n+            for package in &opts.package {\n+                if let None = ws.members().find(|x| x.name() == package) {\n+                    warn!(\n+                        \"cargo - couldn't find member package `{}` specified in `analyze_package` configuration\",\n+                        package\n+                    );\n+                }\n+            }\n+        }\n+\n+        (opts, rustflags, rls_config.clear_env_rust_log)\n+    };\n+}"}, {"sha": "3e669a0bb75626aadb478f79e79a0c1d35b2e953", "filename": "tests/target/issue-3295/two.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c2534f53247b31647b8b457a2bb90757b695b9ad/tests%2Ftarget%2Fissue-3295%2Ftwo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2534f53247b31647b8b457a2bb90757b695b9ad/tests%2Ftarget%2Fissue-3295%2Ftwo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-3295%2Ftwo.rs?ref=c2534f53247b31647b8b457a2bb90757b695b9ad", "patch": "@@ -0,0 +1,14 @@\n+// rustfmt-version: Two\n+pub enum TestEnum {\n+    a,\n+    b,\n+}\n+\n+fn the_test(input: TestEnum) {\n+    match input {\n+        TestEnum::a => String::from(\"aaa\"),\n+        TestEnum::b => String::from(\n+            \"this is a very very very very very very very very very very very very very very very ong string\",\n+        ),\n+    };\n+}"}]}