{"sha": "7febd5a25770cb20805f20e43ab0d773ed2834ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmZWJkNWEyNTc3MGNiMjA4MDVmMjBlNDNhYjBkNzczZWQyODM0ZWQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-09-07T11:22:59Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-09-19T20:14:17Z"}, "message": "fix doc comment", "tree": {"sha": "2e2ea38f1e2702f4c9877a05a13018601f389405", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e2ea38f1e2702f4c9877a05a13018601f389405"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7febd5a25770cb20805f20e43ab0d773ed2834ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7febd5a25770cb20805f20e43ab0d773ed2834ed", "html_url": "https://github.com/rust-lang/rust/commit/7febd5a25770cb20805f20e43ab0d773ed2834ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7febd5a25770cb20805f20e43ab0d773ed2834ed/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d1ef03c9ed28b6855c3f73535e21dc9cd6f6c5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d1ef03c9ed28b6855c3f73535e21dc9cd6f6c5d", "html_url": "https://github.com/rust-lang/rust/commit/4d1ef03c9ed28b6855c3f73535e21dc9cd6f6c5d"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "e1d704cb6806c3adde9836a63a7b8749e5c1df59", "filename": "compiler/rustc_mir/src/transform/promote_consts.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7febd5a25770cb20805f20e43ab0d773ed2834ed/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fpromote_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7febd5a25770cb20805f20e43ab0d773ed2834ed/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fpromote_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fpromote_consts.rs?ref=7febd5a25770cb20805f20e43ab0d773ed2834ed", "patch": "@@ -297,10 +297,10 @@ impl std::ops::Deref for Validator<'a, 'tcx> {\n struct Unpromotable;\n \n impl<'tcx> Validator<'_, 'tcx> {\n-    //! Determines if this code could be executed at runtime and thus is subject to codegen.\n-    //! That means even unused constants need to be evaluated.\n-    //!\n-    //! `const_kind` should not be used in this file other than through this method!\n+    /// Determines if this code could be executed at runtime and thus is subject to codegen.\n+    /// That means even unused constants need to be evaluated.\n+    ///\n+    /// `const_kind` should not be used in this file other than through this method!\n     fn maybe_runtime(&self) -> bool {\n         match self.const_kind {\n             None | Some(hir::ConstContext::ConstFn) => true,"}]}