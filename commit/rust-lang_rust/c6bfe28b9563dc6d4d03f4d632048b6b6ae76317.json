{"sha": "c6bfe28b9563dc6d4d03f4d632048b6b6ae76317", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2YmZlMjhiOTU2M2RjNmQ0ZDAzZjRkNjMyMDQ4YjZiNmFlNzYzMTc=", "commit": {"author": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2019-10-26T16:05:06Z"}, "committer": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2019-10-26T16:06:34Z"}, "message": "Be more specific with -C inline-threshold.", "tree": {"sha": "f2cf48048da026bad0e73dcadc6c83e240d0c00f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2cf48048da026bad0e73dcadc6c83e240d0c00f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c6bfe28b9563dc6d4d03f4d632048b6b6ae76317", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c6bfe28b9563dc6d4d03f4d632048b6b6ae76317", "html_url": "https://github.com/rust-lang/rust/commit/c6bfe28b9563dc6d4d03f4d632048b6b6ae76317", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c6bfe28b9563dc6d4d03f4d632048b6b6ae76317/comments", "author": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd70c032273b873a0318636aea8f7a5b22b60e31", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd70c032273b873a0318636aea8f7a5b22b60e31", "html_url": "https://github.com/rust-lang/rust/commit/bd70c032273b873a0318636aea8f7a5b22b60e31"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "686313ea3d0cf9d486894b0a3e7ef142d3c3c9e2", "filename": "src/doc/rustc/src/codegen-options/index.md", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c6bfe28b9563dc6d4d03f4d632048b6b6ae76317/src%2Fdoc%2Frustc%2Fsrc%2Fcodegen-options%2Findex.md", "raw_url": "https://github.com/rust-lang/rust/raw/c6bfe28b9563dc6d4d03f4d632048b6b6ae76317/src%2Fdoc%2Frustc%2Fsrc%2Fcodegen-options%2Findex.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fcodegen-options%2Findex.md?ref=c6bfe28b9563dc6d4d03f4d632048b6b6ae76317", "patch": "@@ -297,12 +297,20 @@ If not specified, debug assertions are automatically enabled only if the\n \n ## inline-threshold\n \n-This option lets you set the threshold for inlining a function. It takes a\n-positive integer as a value. Inlining is based on a cost model, where a higher\n-threshold will allow more inlining.\n-\n-The default depends on the [opt-level](#opt-level). Current values are between\n-25 to 275.\n+This option lets you set the default threshold for inlining a function. It\n+takes an unsigned integer as a value. Inlining is based on a cost model, where\n+a higher threshold will allow more inlining.\n+\n+The default depends on the [opt-level](#opt-level):\n+\n+| opt-level | Threshold |\n+|-----------|-----------|\n+| 0         | N/A, only inlines always-inline functions |\n+| 1         | N/A, only inlines always-inline functions and LLVM lifetime intrinsics |\n+| 2         | 225 |\n+| 3         | 275 |\n+| s         | 75 |\n+| z         | 25 |\n \n ## panic\n "}]}