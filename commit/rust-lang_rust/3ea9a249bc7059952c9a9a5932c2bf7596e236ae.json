{"sha": "3ea9a249bc7059952c9a9a5932c2bf7596e236ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlYTlhMjQ5YmM3MDU5OTUyYzlhOWE1OTMyYzJiZjc1OTZlMjM2YWU=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-07-20T11:29:01Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-07-20T11:29:01Z"}, "message": "get snippets inside the suggestions-closure", "tree": {"sha": "cd2148b04972bd0efc93f787f83c2b473d71d281", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd2148b04972bd0efc93f787f83c2b473d71d281"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ea9a249bc7059952c9a9a5932c2bf7596e236ae", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXj2B9AAoJEFbW7qD8Z6xGBMEP/3y/iKEg8bCWyOHQZJc6+4br\n16cAgwmsA68ts8PJfPjGP6h8cXL+HsUbTJN2TzIiYKFOPvJEdKRmdBSUuWFRdoYT\ndkhdbxnIFv4gEDu7nAmqVVkrD8T4inIDSjVsmRNZWC9xpnQ/msWhxLFPGI+R4ZOc\nNo2yWth2dd1vkMbEtNotsB92ZOQ/Hr5QCHrCsbrYrtXsCVaQswV3yDOG6xZ9qcXA\n4zI4KgvRrwGUNiJQ96JOab8uo2JQY9UJqmsstB4u8pG3/Xjnkv0T7gz+bexGETCE\nvZW1c1WCmfsuA/zB93Y3z0zLCL/ch6Wlrs7OlRr5ivi6v2lkUfN9CTxNSygCiVxS\n89UBzZMC2tDtvAyEpV/fyJYlUulMHMway9uzfFitbL6lEVFzbGAq0LwLUWqf/Yim\nz54hkFpYgOIjaweuf7Vn49k+45d2eSY+Tj4noDeGY7FyElD8Qy8w4y9zqlwgTiS/\nOIar4Ky5jou2aCOMKY/6w3bIHEFB4BeSx8r+fi1Ec5ebcr3fW0EISnGOpCJkiZCN\n1oXR21Owah9nEZmyZynlwanug4IQe39Fvh0pDxiuLJaE+eP3Jvz2EMfwkSP2DUn6\n0VO5wju1GarUcJXmqZTKFveZ2UJzmLZQIt2t8sjgwmCyrJFHWx/rhscBSGFyj3NU\nw69aoJzJbiXZidA9Xu2x\n=mo4y\n-----END PGP SIGNATURE-----", "payload": "tree cd2148b04972bd0efc93f787f83c2b473d71d281\nparent e3559ec4fc4daaf93951734d8d60a7541579e518\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1469014141 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1469014141 +0200\n\nget snippets inside the suggestions-closure"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ea9a249bc7059952c9a9a5932c2bf7596e236ae", "html_url": "https://github.com/rust-lang/rust/commit/3ea9a249bc7059952c9a9a5932c2bf7596e236ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ea9a249bc7059952c9a9a5932c2bf7596e236ae/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3559ec4fc4daaf93951734d8d60a7541579e518", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3559ec4fc4daaf93951734d8d60a7541579e518", "html_url": "https://github.com/rust-lang/rust/commit/e3559ec4fc4daaf93951734d8d60a7541579e518"}], "stats": {"total": 25, "additions": 10, "deletions": 15}, "files": [{"sha": "3c4e2cef0448f3d1bbc69e0231ffe2f867925638", "filename": "clippy_lints/src/assign_ops.rs", "status": "modified", "additions": 10, "deletions": 15, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/3ea9a249bc7059952c9a9a5932c2bf7596e236ae/clippy_lints%2Fsrc%2Fassign_ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea9a249bc7059952c9a9a5932c2bf7596e236ae/clippy_lints%2Fsrc%2Fassign_ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fassign_ops.rs?ref=3ea9a249bc7059952c9a9a5932c2bf7596e236ae", "patch": "@@ -1,6 +1,6 @@\n use rustc::hir;\n use rustc::lint::*;\n-use utils::{span_lint_and_then, span_lint, snippet_opt, SpanlessEq, get_trait_def_id, implements_trait};\n+use utils::{span_lint_and_then, snippet_opt, SpanlessEq, get_trait_def_id, implements_trait};\n use utils::{higher, sugg};\n \n /// **What it does:** This lint checks for `+=` operations and similar.\n@@ -104,23 +104,18 @@ impl LateLintPass for AssignOps {\n                                 BitXor: BiBitXor,\n                                 Shr: BiShr,\n                                 Shl: BiShl) {\n-                            if let (Some(snip_a), Some(snip_r)) = (snippet_opt(cx, assignee.span),\n-                                                                   snippet_opt(cx, rhs.span)) {\n-                                span_lint_and_then(cx,\n-                                                   ASSIGN_OP_PATTERN,\n-                                                   expr.span,\n-                                                   \"manual implementation of an assign operation\",\n-                                                   |db| {\n+                            span_lint_and_then(cx,\n+                                               ASSIGN_OP_PATTERN,\n+                                               expr.span,\n+                                               \"manual implementation of an assign operation\",\n+                                               |db| {\n+                                                   if let (Some(snip_a), Some(snip_r)) = (snippet_opt(cx, assignee.span),\n+                                                                                          snippet_opt(cx, rhs.span)) {\n                                                        db.span_suggestion(expr.span,\n                                                                           \"replace it with\",\n                                                                           format!(\"{} {}= {}\", snip_a, op.node.as_str(), snip_r));\n-                                                   });\n-                            } else {\n-                                span_lint(cx,\n-                                          ASSIGN_OP_PATTERN,\n-                                          expr.span,\n-                                          \"manual implementation of an assign operation\");\n-                            }\n+                                                   }\n+                                               });\n                         }\n                     };\n                     // a = a op b"}]}