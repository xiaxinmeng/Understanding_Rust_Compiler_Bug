{"sha": "cc3bb7b68a2e7e43b244a00c4ff96d14b74de251", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjM2JiN2I2OGEyZTdlNDNiMjQ0YTAwYzRmZjk2ZDE0Yjc0ZGUyNTE=", "commit": {"author": {"name": "Ben Striegel", "email": "ben.striegel@gmail.com", "date": "2013-01-30T03:41:04Z"}, "committer": {"name": "Ben Striegel", "email": "ben.striegel@gmail.com", "date": "2013-01-31T04:20:32Z"}, "message": "What, no syntax for mutable borrowed region pointers?", "tree": {"sha": "39b61b39304a7d81df19bb6f184e07f37fd5504e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39b61b39304a7d81df19bb6f184e07f37fd5504e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc3bb7b68a2e7e43b244a00c4ff96d14b74de251", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc3bb7b68a2e7e43b244a00c4ff96d14b74de251", "html_url": "https://github.com/rust-lang/rust/commit/cc3bb7b68a2e7e43b244a00c4ff96d14b74de251", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc3bb7b68a2e7e43b244a00c4ff96d14b74de251/comments", "author": {"login": "bstrie", "id": 865233, "node_id": "MDQ6VXNlcjg2NTIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/865233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstrie", "html_url": "https://github.com/bstrie", "followers_url": "https://api.github.com/users/bstrie/followers", "following_url": "https://api.github.com/users/bstrie/following{/other_user}", "gists_url": "https://api.github.com/users/bstrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstrie/subscriptions", "organizations_url": "https://api.github.com/users/bstrie/orgs", "repos_url": "https://api.github.com/users/bstrie/repos", "events_url": "https://api.github.com/users/bstrie/events{/privacy}", "received_events_url": "https://api.github.com/users/bstrie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bstrie", "id": 865233, "node_id": "MDQ6VXNlcjg2NTIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/865233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstrie", "html_url": "https://github.com/bstrie", "followers_url": "https://api.github.com/users/bstrie/followers", "following_url": "https://api.github.com/users/bstrie/following{/other_user}", "gists_url": "https://api.github.com/users/bstrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstrie/subscriptions", "organizations_url": "https://api.github.com/users/bstrie/orgs", "repos_url": "https://api.github.com/users/bstrie/repos", "events_url": "https://api.github.com/users/bstrie/events{/privacy}", "received_events_url": "https://api.github.com/users/bstrie/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "743c1c37e87835cbc7e9a5b5daff7ff9f71e9fe6", "url": "https://api.github.com/repos/rust-lang/rust/commits/743c1c37e87835cbc7e9a5b5daff7ff9f71e9fe6", "html_url": "https://github.com/rust-lang/rust/commit/743c1c37e87835cbc7e9a5b5daff7ff9f71e9fe6"}], "stats": {"total": 4, "additions": 0, "deletions": 4}, "files": [{"sha": "7e8dcf72d0fb40f5a492dbc4bd496499dc227e8d", "filename": "src/libcore/vec.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc3bb7b68a2e7e43b244a00c4ff96d14b74de251/src%2Flibcore%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc3bb7b68a2e7e43b244a00c4ff96d14b74de251/src%2Flibcore%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fvec.rs?ref=cc3bb7b68a2e7e43b244a00c4ff96d14b74de251", "patch": "@@ -280,12 +280,8 @@ pub pure fn view<T>(v: &r/[T], start: uint, end: uint) -> &r/[T] {\n }\n \n /// Return a slice that points into another slice.\n-<<<<<<< HEAD\n #[inline(always)]\n pub pure fn mut_view<T>(v: &r/[mut T], start: uint, end: uint) -> &r/[mut T] {\n-=======\n-pub pure fn mut_view<T>(v: &mut r/[T], start: uint, end: uint) -> &mut r/[T] {\n->>>>>>> RIMOV, round 11\n     assert (start <= end);\n     assert (end <= len(v));\n     do as_mut_buf(v) |p, _len| {"}]}