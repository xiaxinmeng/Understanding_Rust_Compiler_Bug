{"sha": "3debf5006aa9d6810e4691fa03c6660ab998bae7", "node_id": "C_kwDOAAsO6NoAKDNkZWJmNTAwNmFhOWQ2ODEwZTQ2OTFmYTAzYzY2NjBhYjk5OGJhZTc", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2022-11-17T04:07:15Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2022-11-18T16:46:47Z"}, "message": "Only use `...` instead of `_` for type elision\n\n`_` might confuse people into believing that the type isn't known,\nwhile `...` is not used anywhere else for types and is not valid\nsyntax, making it more likely to convey the right understanding.", "tree": {"sha": "4552c583695a8dccd5cfcefafec4f2a00d2adea5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4552c583695a8dccd5cfcefafec4f2a00d2adea5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3debf5006aa9d6810e4691fa03c6660ab998bae7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3debf5006aa9d6810e4691fa03c6660ab998bae7", "html_url": "https://github.com/rust-lang/rust/commit/3debf5006aa9d6810e4691fa03c6660ab998bae7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3debf5006aa9d6810e4691fa03c6660ab998bae7/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ed1376490dbc80a204ca8ff4cabf9667a7e141d", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ed1376490dbc80a204ca8ff4cabf9667a7e141d", "html_url": "https://github.com/rust-lang/rust/commit/4ed1376490dbc80a204ca8ff4cabf9667a7e141d"}], "stats": {"total": 16, "additions": 6, "deletions": 10}, "files": [{"sha": "f17dc1cedbbc2f2da328838307289b51e5a8c036", "filename": "compiler/rustc_middle/src/ty/print/pretty.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3debf5006aa9d6810e4691fa03c6660ab998bae7/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3debf5006aa9d6810e4691fa03c6660ab998bae7/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs?ref=3debf5006aa9d6810e4691fa03c6660ab998bae7", "patch": "@@ -1765,11 +1765,7 @@ impl<'tcx> Printer<'tcx> for FmtPrinter<'_, 'tcx> {\n             self.pretty_print_type(ty)\n         } else {\n             self.truncated = true;\n-            if let ty::Adt(_, substs) = ty.kind() && substs.len() > 0 {\n-                write!(self, \"...\")?;\n-            } else {\n-                write!(self, \"_\")?;\n-            }\n+            write!(self, \"...\")?;\n             Ok(self)\n         }\n     }"}, {"sha": "5b8299fe839d7bcdb100808ed8c4e7a5049d5458", "filename": "src/test/ui/issues/issue-37311-type-length-limit/issue-37311.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3debf5006aa9d6810e4691fa03c6660ab998bae7/src%2Ftest%2Fui%2Fissues%2Fissue-37311-type-length-limit%2Fissue-37311.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3debf5006aa9d6810e4691fa03c6660ab998bae7/src%2Ftest%2Fui%2Fissues%2Fissue-37311-type-length-limit%2Fissue-37311.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-37311-type-length-limit%2Fissue-37311.stderr?ref=3debf5006aa9d6810e4691fa03c6660ab998bae7", "patch": "@@ -1,4 +1,4 @@\n-error: reached the recursion limit while instantiating `<(&(&(_, _), _), _) as Foo>::recurse`\n+error: reached the recursion limit while instantiating `<(&(&(..., ...), ...), ...) as Foo>::recurse`\n   --> $DIR/issue-37311.rs:17:9\n    |\n LL |         (self, self).recurse();"}, {"sha": "4746f918bf8dd53b761d70b0bfcad528f2bddf55", "filename": "src/test/ui/issues/issue-67552.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3debf5006aa9d6810e4691fa03c6660ab998bae7/src%2Ftest%2Fui%2Fissues%2Fissue-67552.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3debf5006aa9d6810e4691fa03c6660ab998bae7/src%2Ftest%2Fui%2Fissues%2Fissue-67552.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-67552.stderr?ref=3debf5006aa9d6810e4691fa03c6660ab998bae7", "patch": "@@ -1,4 +1,4 @@\n-error: reached the recursion limit while instantiating `rec::<&mut &mut &mut &mut &mut _>`\n+error: reached the recursion limit while instantiating `rec::<&mut &mut &mut &mut &mut ...>`\n   --> $DIR/issue-67552.rs:29:9\n    |\n LL |         rec(identity(&mut it))"}, {"sha": "a67bfd018a2b5cfd9f96255a5c34eddfda1b56c3", "filename": "src/test/ui/recursion/issue-83150.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3debf5006aa9d6810e4691fa03c6660ab998bae7/src%2Ftest%2Fui%2Frecursion%2Fissue-83150.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3debf5006aa9d6810e4691fa03c6660ab998bae7/src%2Ftest%2Fui%2Frecursion%2Fissue-83150.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frecursion%2Fissue-83150.stderr?ref=3debf5006aa9d6810e4691fa03c6660ab998bae7", "patch": "@@ -14,7 +14,7 @@ error[E0275]: overflow evaluating the requirement `<std::ops::Range<u8> as Itera\n    = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`issue_83150`)\n    = note: required for `Map<&mut std::ops::Range<u8>, [closure@$DIR/issue-83150.rs:12:24: 12:27]>` to implement `Iterator`\n    = note: 64 redundant requirements hidden\n-   = note: required for `&mut Map<&mut Map<&mut Map<_, _>, _>, _>` to implement `Iterator`\n+   = note: required for `&mut Map<&mut Map<&mut Map<..., ...>, ...>, ...>` to implement `Iterator`\n    = note: the full type name has been written to '$TEST_BUILD_DIR/recursion/issue-83150/issue-83150.long-type-hash.txt'\n \n error: aborting due to previous error; 1 warning emitted"}, {"sha": "a74d2524996a10d4d9f85c9ed166f1733264c3fe", "filename": "src/test/ui/traits/issue-91949-hangs-on-recursion.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3debf5006aa9d6810e4691fa03c6660ab998bae7/src%2Ftest%2Fui%2Ftraits%2Fissue-91949-hangs-on-recursion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3debf5006aa9d6810e4691fa03c6660ab998bae7/src%2Ftest%2Fui%2Ftraits%2Fissue-91949-hangs-on-recursion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fissue-91949-hangs-on-recursion.stderr?ref=3debf5006aa9d6810e4691fa03c6660ab998bae7", "patch": "@@ -17,7 +17,7 @@ error[E0275]: overflow evaluating the requirement `(): Sized`\n    = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"512\"]` attribute to your crate (`issue_91949_hangs_on_recursion`)\n    = note: required for `std::iter::Empty<()>` to implement `Iterator`\n    = note: 171 redundant requirements hidden\n-   = note: required for `IteratorOfWrapped<(), Map<IteratorOfWrapped<(), Map<..., _>>, _>>` to implement `Iterator`\n+   = note: required for `IteratorOfWrapped<(), Map<IteratorOfWrapped<(), Map<..., ...>>, ...>>` to implement `Iterator`\n    = note: the full type name has been written to '$TEST_BUILD_DIR/traits/issue-91949-hangs-on-recursion/issue-91949-hangs-on-recursion.long-type-hash.txt'\n \n error: aborting due to previous error; 1 warning emitted"}, {"sha": "ff487466902236425d4be9180f9fb20f71ac6bd2", "filename": "src/test/ui/type_length_limit.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3debf5006aa9d6810e4691fa03c6660ab998bae7/src%2Ftest%2Fui%2Ftype_length_limit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3debf5006aa9d6810e4691fa03c6660ab998bae7/src%2Ftest%2Fui%2Ftype_length_limit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype_length_limit.stderr?ref=3debf5006aa9d6810e4691fa03c6660ab998bae7", "patch": "@@ -1,4 +1,4 @@\n-error: reached the type-length limit while instantiating `std::mem::drop::<Option<((((_, _, _), _, _), _, _), _, _)>>`\n+error: reached the type-length limit while instantiating `std::mem::drop::<Option<((((..., ..., ...), ..., ...), ..., ...), ..., ...)>>`\n   --> $SRC_DIR/core/src/mem/mod.rs:LL:COL\n    |\n LL | pub fn drop<T>(_x: T) {}"}]}