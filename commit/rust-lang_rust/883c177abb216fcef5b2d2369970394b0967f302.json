{"sha": "883c177abb216fcef5b2d2369970394b0967f302", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4M2MxNzdhYmIyMTZmY2VmNWIyZDIzNjk5NzAzOTRiMDk2N2YzMDI=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-05-04T13:26:17Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-05-14T09:35:44Z"}, "message": "Move doc alias discovery into the Attributes struct and some code improvements", "tree": {"sha": "34b9fdecabc434035d378415a7713327d4cfbc46", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34b9fdecabc434035d378415a7713327d4cfbc46"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/883c177abb216fcef5b2d2369970394b0967f302", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/883c177abb216fcef5b2d2369970394b0967f302", "html_url": "https://github.com/rust-lang/rust/commit/883c177abb216fcef5b2d2369970394b0967f302", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/883c177abb216fcef5b2d2369970394b0967f302/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f581cf754492f9f122193b8d8a7750ab38a87485", "url": "https://api.github.com/repos/rust-lang/rust/commits/f581cf754492f9f122193b8d8a7750ab38a87485", "html_url": "https://github.com/rust-lang/rust/commit/f581cf754492f9f122193b8d8a7750ab38a87485"}], "stats": {"total": 54, "additions": 15, "deletions": 39}, "files": [{"sha": "cd767802714b03ab4bdab3722ae41590b033b651", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/883c177abb216fcef5b2d2369970394b0967f302/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/883c177abb216fcef5b2d2369970394b0967f302/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=883c177abb216fcef5b2d2369970394b0967f302", "patch": "@@ -643,6 +643,15 @@ impl Attributes {\n             })\n             .collect()\n     }\n+\n+    pub fn get_doc_aliases(&self) -> FxHashSet<String> {\n+        self.other_attrs\n+            .lists(sym::doc)\n+            .filter(|a| a.check_name(sym::alias))\n+            .filter_map(|a| a.value_str().map(|s| s.to_string().replace(\"\\\"\", \"\")))\n+            .filter(|v| !v.is_empty())\n+            .collect::<FxHashSet<_>>()\n+    }\n }\n \n impl PartialEq for Attributes {"}, {"sha": "abca8ab778cc350e44e1815b4167612e67a079b7", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/883c177abb216fcef5b2d2369970394b0967f302/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/883c177abb216fcef5b2d2369970394b0967f302/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=883c177abb216fcef5b2d2369970394b0967f302", "patch": "@@ -278,7 +278,7 @@ pub struct RenderInfo {\n /// Struct representing one entry in the JS search index. These are all emitted\n /// by hand to a large JS file at the end of cache-creation.\n #[derive(Debug)]\n-pub struct IndexItem {\n+struct IndexItem {\n     ty: ItemType,\n     name: String,\n     path: String,"}, {"sha": "b8d97c2ac503bae863fbd436954e09b2a8455f61", "filename": "src/librustdoc/html/render/cache.rs", "status": "modified", "additions": 4, "deletions": 37, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/883c177abb216fcef5b2d2369970394b0967f302/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/883c177abb216fcef5b2d2369970394b0967f302/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs?ref=883c177abb216fcef5b2d2369970394b0967f302", "patch": "@@ -328,15 +328,7 @@ impl DocFolder for Cache {\n                             search_type: get_index_search_type(&item),\n                         });\n \n-                        for alias in item\n-                            .attrs\n-                            .lists(sym::doc)\n-                            .filter(|a| a.check_name(sym::alias))\n-                            .filter_map(|a| a.value_str().map(|s| s.to_string().replace(\"\\\"\", \"\")))\n-                            .filter(|v| !v.is_empty())\n-                            .collect::<FxHashSet<_>>()\n-                            .into_iter()\n-                        {\n+                        for alias in item.attrs.get_doc_aliases() {\n                             self.aliases\n                                 .entry(alias.to_lowercase())\n                                 .or_insert(Vec::with_capacity(1))\n@@ -378,9 +370,6 @@ impl DocFolder for Cache {\n             | clean::MacroItem(..)\n             | clean::ProcMacroItem(..)\n             | clean::VariantItem(..)\n-            | clean::StructFieldItem(..)\n-            | clean::TyMethodItem(..)\n-            | clean::MethodItem(..)\n                 if !self.stripped_mod =>\n             {\n                 // Re-exported items mean that the same id can show up twice\n@@ -564,15 +553,7 @@ fn build_index(krate: &clean::Crate, cache: &mut Cache) -> String {\n                 parent_idx: None,\n                 search_type: get_index_search_type(&item),\n             });\n-            for alias in item\n-                .attrs\n-                .lists(sym::doc)\n-                .filter(|a| a.check_name(sym::alias))\n-                .filter_map(|a| a.value_str().map(|s| s.to_string().replace(\"\\\"\", \"\")))\n-                .filter(|v| !v.is_empty())\n-                .collect::<FxHashSet<_>>()\n-                .into_iter()\n-            {\n+            for alias in item.attrs.get_doc_aliases().into_iter() {\n                 aliases\n                     .entry(alias.to_lowercase())\n                     .or_insert(Vec::with_capacity(1))\n@@ -619,22 +600,8 @@ fn build_index(krate: &clean::Crate, cache: &mut Cache) -> String {\n         .map(|module| shorten(plain_summary_line(module.doc_value())))\n         .unwrap_or(String::new());\n \n-    let crate_aliases = aliases\n-        .iter()\n-        .map(|(k, values)| {\n-            (\n-                k.clone(),\n-                values\n-                    .iter()\n-                    .filter_map(|v| {\n-                        let x = &crate_items[*v];\n-                        if x.parent_idx.is_some() == x.parent.is_some() { Some(*v) } else { None }\n-                    })\n-                    .collect::<Vec<_>>(),\n-            )\n-        })\n-        .filter(|(_, values)| !values.is_empty())\n-        .collect::<Vec<_>>();\n+    let crate_aliases =\n+        aliases.iter().map(|(k, values)| (k.clone(), values.clone())).collect::<Vec<_>>();\n \n     #[derive(Serialize)]\n     struct CrateData<'a> {"}, {"sha": "22e312e13c011e44690d839baa698a2186e1a662", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/883c177abb216fcef5b2d2369970394b0967f302/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/883c177abb216fcef5b2d2369970394b0967f302/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=883c177abb216fcef5b2d2369970394b0967f302", "patch": "@@ -972,7 +972,7 @@ function getSearchElement() {\n                     desc: item.desc,\n                     ty: item.ty,\n                     parent: item.parent,\n-                    type: item.parent,\n+                    type: item.type,\n                     is_alias: true,\n                 };\n             }"}]}