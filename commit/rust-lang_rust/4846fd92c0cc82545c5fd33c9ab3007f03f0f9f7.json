{"sha": "4846fd92c0cc82545c5fd33c9ab3007f03f0f9f7", "node_id": "C_kwDOAAsO6NoAKDQ4NDZmZDkyYzBjYzgyNTQ1YzVmZDMzYzlhYjMwMDdmMDNmMGY5Zjc", "commit": {"author": {"name": "Beno\u00eet du Garreau", "email": "bdgdlm@outlook.com", "date": "2021-10-03T20:56:34Z"}, "committer": {"name": "Beno\u00eet du Garreau", "email": "bdgdlm@outlook.com", "date": "2021-10-03T20:56:34Z"}, "message": "Revert suggested use of `unwrap_or`", "tree": {"sha": "b56a55bd427bb6d80f39bb021ae6cb214320227a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b56a55bd427bb6d80f39bb021ae6cb214320227a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4846fd92c0cc82545c5fd33c9ab3007f03f0f9f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4846fd92c0cc82545c5fd33c9ab3007f03f0f9f7", "html_url": "https://github.com/rust-lang/rust/commit/4846fd92c0cc82545c5fd33c9ab3007f03f0f9f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4846fd92c0cc82545c5fd33c9ab3007f03f0f9f7/comments", "author": {"login": "a1phyr", "id": 47725341, "node_id": "MDQ6VXNlcjQ3NzI1MzQx", "avatar_url": "https://avatars.githubusercontent.com/u/47725341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a1phyr", "html_url": "https://github.com/a1phyr", "followers_url": "https://api.github.com/users/a1phyr/followers", "following_url": "https://api.github.com/users/a1phyr/following{/other_user}", "gists_url": "https://api.github.com/users/a1phyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/a1phyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a1phyr/subscriptions", "organizations_url": "https://api.github.com/users/a1phyr/orgs", "repos_url": "https://api.github.com/users/a1phyr/repos", "events_url": "https://api.github.com/users/a1phyr/events{/privacy}", "received_events_url": "https://api.github.com/users/a1phyr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "a1phyr", "id": 47725341, "node_id": "MDQ6VXNlcjQ3NzI1MzQx", "avatar_url": "https://avatars.githubusercontent.com/u/47725341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a1phyr", "html_url": "https://github.com/a1phyr", "followers_url": "https://api.github.com/users/a1phyr/followers", "following_url": "https://api.github.com/users/a1phyr/following{/other_user}", "gists_url": "https://api.github.com/users/a1phyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/a1phyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a1phyr/subscriptions", "organizations_url": "https://api.github.com/users/a1phyr/orgs", "repos_url": "https://api.github.com/users/a1phyr/repos", "events_url": "https://api.github.com/users/a1phyr/events{/privacy}", "received_events_url": "https://api.github.com/users/a1phyr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70e55a8938bb84542f73a127edd5c91f2c8bd0aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/70e55a8938bb84542f73a127edd5c91f2c8bd0aa", "html_url": "https://github.com/rust-lang/rust/commit/70e55a8938bb84542f73a127edd5c91f2c8bd0aa"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "5bdb6ed91761fd862307be94fd0333f9d80a1484", "filename": "library/core/src/num/int_macros.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4846fd92c0cc82545c5fd33c9ab3007f03f0f9f7/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4846fd92c0cc82545c5fd33c9ab3007f03f0f9f7/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs?ref=4846fd92c0cc82545c5fd33c9ab3007f03f0f9f7", "patch": "@@ -885,7 +885,11 @@ macro_rules! int_impl {\n         #[inline]\n         pub const fn saturating_add_unsigned(self, rhs: $UnsignedT) -> Self {\n             // Overflow can only happen at the upper bound\n-            self.checked_add_unsigned(rhs).unwrap_or(Self::MAX)\n+            // We cannot use `unwrap_or` here because it is not `const`\n+            match self.checked_add_unsigned(rhs) {\n+                Some(x) => x,\n+                None => Self::MAX,\n+            }\n         }\n \n         /// Saturating integer subtraction. Computes `self - rhs`, saturating at the\n@@ -928,7 +932,11 @@ macro_rules! int_impl {\n         #[inline]\n         pub const fn saturating_sub_unsigned(self, rhs: $UnsignedT) -> Self {\n             // Overflow can only happen at the lower bound\n-            self.checked_sub_unsigned(rhs).unwrap_or(Self::MIN)\n+            // We cannot use `unwrap_or` here because it is not `const`\n+            match self.checked_sub_unsigned(rhs) {\n+                Some(x) => x,\n+                None => Self::MIN,\n+            }\n         }\n \n         /// Saturating integer negation. Computes `-self`, returning `MAX` if `self == MIN`"}]}