{"sha": "fcbe73ec1caad761eb6cf1a641fa667ac920076b", "node_id": "C_kwDOAAsO6NoAKGZjYmU3M2VjMWNhYWQ3NjFlYjZjZjFhNjQxZmE2NjdhYzkyMDA3NmI", "commit": {"author": {"name": "Ariel Davis", "email": "ariel.z.davis@icloud.com", "date": "2023-05-06T07:52:32Z"}, "committer": {"name": "Ariel Davis", "email": "ariel.z.davis@icloud.com", "date": "2023-05-06T07:52:32Z"}, "message": "Refactor position", "tree": {"sha": "13a528a93326c498b2b3e8f414107bdbd4292f31", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13a528a93326c498b2b3e8f414107bdbd4292f31"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fcbe73ec1caad761eb6cf1a641fa667ac920076b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fcbe73ec1caad761eb6cf1a641fa667ac920076b", "html_url": "https://github.com/rust-lang/rust/commit/fcbe73ec1caad761eb6cf1a641fa667ac920076b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fcbe73ec1caad761eb6cf1a641fa667ac920076b/comments", "author": {"login": "azdavis", "id": 6496454, "node_id": "MDQ6VXNlcjY0OTY0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6496454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azdavis", "html_url": "https://github.com/azdavis", "followers_url": "https://api.github.com/users/azdavis/followers", "following_url": "https://api.github.com/users/azdavis/following{/other_user}", "gists_url": "https://api.github.com/users/azdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/azdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azdavis/subscriptions", "organizations_url": "https://api.github.com/users/azdavis/orgs", "repos_url": "https://api.github.com/users/azdavis/repos", "events_url": "https://api.github.com/users/azdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/azdavis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "azdavis", "id": 6496454, "node_id": "MDQ6VXNlcjY0OTY0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6496454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azdavis", "html_url": "https://github.com/azdavis", "followers_url": "https://api.github.com/users/azdavis/followers", "following_url": "https://api.github.com/users/azdavis/following{/other_user}", "gists_url": "https://api.github.com/users/azdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/azdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azdavis/subscriptions", "organizations_url": "https://api.github.com/users/azdavis/orgs", "repos_url": "https://api.github.com/users/azdavis/repos", "events_url": "https://api.github.com/users/azdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/azdavis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bb21533c68bc551ef2ec70a3b70bb99b4d2e786", "url": "https://api.github.com/repos/rust-lang/rust/commits/0bb21533c68bc551ef2ec70a3b70bb99b4d2e786", "html_url": "https://github.com/rust-lang/rust/commit/0bb21533c68bc551ef2ec70a3b70bb99b4d2e786"}], "stats": {"total": 41, "additions": 19, "deletions": 22}, "files": [{"sha": "e1d1130ff1b874f4262178d5f9de52f404e0f9da", "filename": "crates/rust-analyzer/src/diagnostics/to_proto.rs", "status": "modified", "additions": 19, "deletions": 22, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/fcbe73ec1caad761eb6cf1a641fa667ac920076b/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fcbe73ec1caad761eb6cf1a641fa667ac920076b/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs?ref=fcbe73ec1caad761eb6cf1a641fa667ac920076b", "patch": "@@ -79,36 +79,33 @@ fn position(\n     position_encoding: &PositionEncoding,\n     span: &DiagnosticSpan,\n     line_offset: usize,\n-    column_offset: usize,\n+    column_offset_utf32: usize,\n ) -> lsp_types::Position {\n     let line_index = line_offset - span.line_start;\n \n-    let mut true_column_offset = column_offset;\n-    if let Some(line) = span.text.get(line_index) {\n-        if line.text.chars().count() == line.text.len() {\n-            // all one byte utf-8 char\n-            return lsp_types::Position {\n-                line: (line_offset as u32).saturating_sub(1),\n-                character: (column_offset as u32).saturating_sub(1),\n-            };\n-        }\n-        let mut char_offset = 0;\n-        for c in line.text.chars() {\n-            char_offset += 1;\n-            if char_offset > column_offset {\n-                break;\n+    let column_offset_encoded = match span.text.get(line_index) {\n+        // Fast path.\n+        Some(line) if line.text.is_ascii() => column_offset_utf32,\n+        Some(line) => {\n+            let line_prefix_len = line\n+                .text\n+                .char_indices()\n+                .take(column_offset_utf32)\n+                .last()\n+                .map(|(pos, c)| pos + c.len_utf8())\n+                .unwrap_or(0);\n+            let line_prefix = &line.text[..line_prefix_len];\n+            match position_encoding {\n+                PositionEncoding::Utf8 => line_prefix.len(),\n+                PositionEncoding::Wide(enc) => enc.measure(line_prefix),\n             }\n-            let len = match position_encoding {\n-                PositionEncoding::Utf8 => c.len_utf8(),\n-                PositionEncoding::Wide(w) => w.measure(&c.to_string()),\n-            };\n-            true_column_offset += len - 1;\n         }\n-    }\n+        None => column_offset_utf32,\n+    };\n \n     lsp_types::Position {\n         line: (line_offset as u32).saturating_sub(1),\n-        character: (true_column_offset as u32).saturating_sub(1),\n+        character: (column_offset_encoded as u32).saturating_sub(1),\n     }\n }\n "}]}