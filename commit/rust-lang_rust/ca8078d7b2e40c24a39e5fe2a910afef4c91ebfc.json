{"sha": "ca8078d7b2e40c24a39e5fe2a910afef4c91ebfc", "node_id": "C_kwDOAAsO6NoAKGNhODA3OGQ3YjJlNDBjMjRhMzllNWZlMmE5MTBhZmVmNGM5MWViZmM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-10-07T06:23:23Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-10-07T06:23:23Z"}, "message": "Auto merge of #89495 - Mark-Simulacrum:add-inlines, r=michaelwoerister\n\nAdd two inline annotations for hot functions\n\nThese two functions are essentially no-ops (and compile to just a load and\nreturn), but show up in process_obligations profiles with a high call count --\nso worthwhile to try and inline them. This is not normally possible as they're\nnon-generic, so they don't get offered for inlining by our current algorithm.", "tree": {"sha": "9cc6117c01bcd8dfa90105c01335a5969ef6a727", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cc6117c01bcd8dfa90105c01335a5969ef6a727"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca8078d7b2e40c24a39e5fe2a910afef4c91ebfc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca8078d7b2e40c24a39e5fe2a910afef4c91ebfc", "html_url": "https://github.com/rust-lang/rust/commit/ca8078d7b2e40c24a39e5fe2a910afef4c91ebfc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca8078d7b2e40c24a39e5fe2a910afef4c91ebfc/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3e6770efbd76c4ad1e17468895b538a2efec4bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3e6770efbd76c4ad1e17468895b538a2efec4bd", "html_url": "https://github.com/rust-lang/rust/commit/d3e6770efbd76c4ad1e17468895b538a2efec4bd"}, {"sha": "1c2ad79f9d789b0d449a1bc4dfe7d7ddc2ed4109", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c2ad79f9d789b0d449a1bc4dfe7d7ddc2ed4109", "html_url": "https://github.com/rust-lang/rust/commit/1c2ad79f9d789b0d449a1bc4dfe7d7ddc2ed4109"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "82970f214fa66f9b67fdadf09070cf5ca84e55e1", "filename": "compiler/rustc_infer/src/infer/type_variable.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca8078d7b2e40c24a39e5fe2a910afef4c91ebfc/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ftype_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca8078d7b2e40c24a39e5fe2a910afef4c91ebfc/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ftype_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ftype_variable.rs?ref=ca8078d7b2e40c24a39e5fe2a910afef4c91ebfc", "patch": "@@ -400,6 +400,7 @@ pub(crate) struct TyVidEqKey<'tcx> {\n }\n \n impl<'tcx> From<ty::TyVid> for TyVidEqKey<'tcx> {\n+    #[inline] // make this function eligible for inlining - it is quite hot.\n     fn from(vid: ty::TyVid) -> Self {\n         TyVidEqKey { vid, phantom: PhantomData }\n     }"}, {"sha": "91dbbec782f891714190ab4cdbfe211935758d27", "filename": "compiler/rustc_type_ir/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca8078d7b2e40c24a39e5fe2a910afef4c91ebfc/compiler%2Frustc_type_ir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca8078d7b2e40c24a39e5fe2a910afef4c91ebfc/compiler%2Frustc_type_ir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_type_ir%2Fsrc%2Flib.rs?ref=ca8078d7b2e40c24a39e5fe2a910afef4c91ebfc", "patch": "@@ -437,6 +437,7 @@ impl EqUnifyValue for IntVarValue {}\n \n impl UnifyKey for IntVid {\n     type Value = Option<IntVarValue>;\n+    #[inline] // make this function eligible for inlining - it is quite hot.\n     fn index(&self) -> u32 {\n         self.index\n     }"}]}