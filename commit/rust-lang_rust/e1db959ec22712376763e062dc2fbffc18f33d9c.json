{"sha": "e1db959ec22712376763e062dc2fbffc18f33d9c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxZGI5NTllYzIyNzEyMzc2NzYzZTA2MmRjMmZiZmZjMThmMzNkOWM=", "commit": {"author": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2012-10-22T02:23:50Z"}, "committer": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2012-10-22T02:23:50Z"}, "message": "rustc: add new intrinsics - atomic_cxchg{_acq,_rel}", "tree": {"sha": "63c0810cfa7f2860e77be5885cda1c9eead3dc71", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63c0810cfa7f2860e77be5885cda1c9eead3dc71"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1db959ec22712376763e062dc2fbffc18f33d9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1db959ec22712376763e062dc2fbffc18f33d9c", "html_url": "https://github.com/rust-lang/rust/commit/e1db959ec22712376763e062dc2fbffc18f33d9c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1db959ec22712376763e062dc2fbffc18f33d9c/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "082d3d51674203d97fd21e6cda6181b4dccfb2e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/082d3d51674203d97fd21e6cda6181b4dccfb2e1", "html_url": "https://github.com/rust-lang/rust/commit/082d3d51674203d97fd21e6cda6181b4dccfb2e1"}], "stats": {"total": 79, "additions": 73, "deletions": 6}, "files": [{"sha": "f1397006b16b958d61ec1ebd3b3c1d065fcea09e", "filename": "src/rustc/lib/llvm.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e1db959ec22712376763e062dc2fbffc18f33d9c/src%2Frustc%2Flib%2Fllvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1db959ec22712376763e062dc2fbffc18f33d9c/src%2Frustc%2Flib%2Fllvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Flib%2Fllvm.rs?ref=e1db959ec22712376763e062dc2fbffc18f33d9c", "patch": "@@ -843,6 +843,9 @@ extern mod llvm {\n                         Name: *c_char) -> ValueRef;\n \n     /* Atomic Operations */\n+    fn LLVMBuildAtomicCmpXchg(B: BuilderRef, LHS: ValueRef,\n+                              CMP: ValueRef, RHS: ValueRef,\n+                              ++Order: AtomicOrdering) -> ValueRef;\n     fn LLVMBuildAtomicRMW(B: BuilderRef, ++Op: AtomicBinOp,\n                           LHS: ValueRef, RHS: ValueRef,\n                           ++Order: AtomicOrdering) -> ValueRef;"}, {"sha": "f7690b7bc93004dd38fa05a75bc766a38c4bfb28", "filename": "src/rustc/middle/trans/build.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e1db959ec22712376763e062dc2fbffc18f33d9c/src%2Frustc%2Fmiddle%2Ftrans%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1db959ec22712376763e062dc2fbffc18f33d9c/src%2Frustc%2Fmiddle%2Ftrans%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fbuild.rs?ref=e1db959ec22712376763e062dc2fbffc18f33d9c", "patch": "@@ -813,6 +813,11 @@ fn Resume(cx: block, Exn: ValueRef) -> ValueRef {\n }\n \n // Atomic Operations\n+fn AtomicCmpXchg(cx: block, dst: ValueRef,\n+                 cmp: ValueRef, src: ValueRef,\n+                 order: AtomicOrdering) -> ValueRef {\n+    llvm::LLVMBuildAtomicCmpXchg(B(cx), dst, cmp, src, order)\n+}\n fn AtomicRMW(cx: block, op: AtomicBinOp,\n              dst: ValueRef, src: ValueRef,\n              order: AtomicOrdering) -> ValueRef {"}, {"sha": "8fa23ef8fabd8ce2e7de9f43c07dae434914bd65", "filename": "src/rustc/middle/trans/foreign.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e1db959ec22712376763e062dc2fbffc18f33d9c/src%2Frustc%2Fmiddle%2Ftrans%2Fforeign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1db959ec22712376763e062dc2fbffc18f33d9c/src%2Frustc%2Fmiddle%2Ftrans%2Fforeign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fforeign.rs?ref=e1db959ec22712376763e062dc2fbffc18f33d9c", "patch": "@@ -799,6 +799,30 @@ fn trans_intrinsic(ccx: @crate_ctxt, decl: ValueRef, item: @ast::foreign_item,\n                                Some(substs), Some(item.span));\n     let mut bcx = top_scope_block(fcx, None), lltop = bcx.llbb;\n     match ccx.sess.str_of(item.ident) {\n+        ~\"atomic_cxchg\" => {\n+            let old = AtomicCmpXchg(bcx,\n+                                    get_param(decl, first_real_arg),\n+                                    get_param(decl, first_real_arg + 1u),\n+                                    get_param(decl, first_real_arg + 2u),\n+                                    SequentiallyConsistent);\n+            Store(bcx, old, fcx.llretptr);\n+        }\n+        ~\"atomic_cxchg_acq\" => {\n+            let old = AtomicCmpXchg(bcx,\n+                                    get_param(decl, first_real_arg),\n+                                    get_param(decl, first_real_arg + 1u),\n+                                    get_param(decl, first_real_arg + 2u),\n+                                    Acquire);\n+            Store(bcx, old, fcx.llretptr);\n+        }\n+        ~\"atomic_cxchg_rel\" => {\n+            let old = AtomicCmpXchg(bcx,\n+                                    get_param(decl, first_real_arg),\n+                                    get_param(decl, first_real_arg + 1u),\n+                                    get_param(decl, first_real_arg + 2u),\n+                                    Release);\n+            Store(bcx, old, fcx.llretptr);\n+        }\n         ~\"atomic_xchg\" => {\n             let old = AtomicRMW(bcx, Xchg,\n                                 get_param(decl, first_real_arg),"}, {"sha": "ddd50d47c08fd116fb7cec9ee701a184ca4274c4", "filename": "src/rustc/middle/trans/type_use.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e1db959ec22712376763e062dc2fbffc18f33d9c/src%2Frustc%2Fmiddle%2Ftrans%2Ftype_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1db959ec22712376763e062dc2fbffc18f33d9c/src%2Frustc%2Fmiddle%2Ftrans%2Ftype_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Ftype_use.rs?ref=e1db959ec22712376763e062dc2fbffc18f33d9c", "patch": "@@ -98,11 +98,12 @@ fn type_uses_for(ccx: @crate_ctxt, fn_id: def_id, n_tps: uint)\n \n                 ~\"get_tydesc\" | ~\"needs_drop\" => use_tydesc,\n \n-                ~\"atomic_xchg\"     | ~\"atomic_xadd\"     |\n-                ~\"atomic_xsub\"     | ~\"atomic_xchg_acq\" |\n-                ~\"atomic_xadd_acq\" | ~\"atomic_xsub_acq\" |\n-                ~\"atomic_xchg_rel\" | ~\"atomic_xadd_rel\" |\n-                ~\"atomic_xsub_rel\" => 0,\n+                ~\"atomic_cxchg\"    | ~\"atomic_cxchg_acq\"|\n+                ~\"atomic_cxchg_rel\"| ~\"atomic_xchg\"     |\n+                ~\"atomic_xadd\"     | ~\"atomic_xsub\"     |\n+                ~\"atomic_xchg_acq\" | ~\"atomic_xadd_acq\" |\n+                ~\"atomic_xsub_acq\" | ~\"atomic_xchg_rel\" |\n+                ~\"atomic_xadd_rel\" | ~\"atomic_xsub_rel\" => 0,\n \n                 ~\"visit_tydesc\"  | ~\"forget\" | ~\"addr_of\" |\n                 ~\"frame_address\" | ~\"morestack_addr\" => 0,"}, {"sha": "f4764c5d595d816a129234c2a01f96c717a4825e", "filename": "src/rustc/middle/typeck/check.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e1db959ec22712376763e062dc2fbffc18f33d9c/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1db959ec22712376763e062dc2fbffc18f33d9c/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs?ref=e1db959ec22712376763e062dc2fbffc18f33d9c", "patch": "@@ -2605,7 +2605,15 @@ fn check_intrinsic_type(ccx: @crate_ctxt, it: @ast::foreign_item) {\n       }\n       ~\"needs_drop\" => (1u, ~[], ty::mk_bool(tcx)),\n \n-      ~\"atomic_xchg\"     | ~\"atomic_xadd\"     | ~\"atomic_xsub\" |\n+      ~\"atomic_cxchg\"    | ~\"atomic_cxchg_acq\"| ~\"atomic_cxchg_rel\" => {\n+        (0u, ~[arg(ast::by_copy,\n+                   ty::mk_mut_rptr(tcx, ty::re_bound(ty::br_anon(0)),\n+                                   ty::mk_int(tcx))),\n+               arg(ast::by_copy, ty::mk_int(tcx)),\n+               arg(ast::by_copy, ty::mk_int(tcx))],\n+         ty::mk_int(tcx))\n+      }\n+      ~\"atomic_xchg\"     | ~\"atomic_xadd\"     | ~\"atomic_xsub\"     |\n       ~\"atomic_xchg_acq\" | ~\"atomic_xadd_acq\" | ~\"atomic_xsub_acq\" |\n       ~\"atomic_xchg_rel\" | ~\"atomic_xadd_rel\" | ~\"atomic_xsub_rel\" => {\n         (0u, ~[arg(ast::by_copy,"}, {"sha": "39a707ad3206c64022f5403e7b68a45adf03213c", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e1db959ec22712376763e062dc2fbffc18f33d9c/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/e1db959ec22712376763e062dc2fbffc18f33d9c/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=e1db959ec22712376763e062dc2fbffc18f33d9c", "patch": "@@ -482,6 +482,14 @@ extern \"C\" LLVMTypeRef LLVMMetadataType(void) {\n   return LLVMMetadataTypeInContext(LLVMGetGlobalContext());\n }\n \n+extern \"C\" LLVMValueRef LLVMBuildAtomicCmpXchg(LLVMBuilderRef B,\n+                                               LLVMValueRef target,\n+                                               LLVMValueRef old,\n+                                               LLVMValueRef source,\n+                                               AtomicOrdering order) {\n+    return wrap(unwrap(B)->CreateAtomicCmpXchg(unwrap(target), unwrap(old),\n+                                               unwrap(source), order));\n+}\n extern \"C\" LLVMValueRef LLVMBuildAtomicRMW(LLVMBuilderRef B,\n                                            AtomicRMWInst::BinOp op,\n                                            LLVMValueRef target,"}, {"sha": "44636f4f36b16c1c2d7e63cda5db796d8f2142ac", "filename": "src/rustllvm/rustllvm.def.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e1db959ec22712376763e062dc2fbffc18f33d9c/src%2Frustllvm%2Frustllvm.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/e1db959ec22712376763e062dc2fbffc18f33d9c/src%2Frustllvm%2Frustllvm.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2Frustllvm.def.in?ref=e1db959ec22712376763e062dc2fbffc18f33d9c", "patch": "@@ -84,6 +84,7 @@ LLVMArrayType\n LLVMBasicBlockAsValue\n LLVMBlockAddress\n LLVMBuildAShr\n+LLVMBuildAtomicCmpXchg\n LLVMBuildAtomicRMW\n LLVMBuildAdd\n LLVMBuildAggregateRet"}, {"sha": "f3ea9fd531c38a2992cd9d087ccba3848c3403b2", "filename": "src/test/auxiliary/cci_intrinsic.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e1db959ec22712376763e062dc2fbffc18f33d9c/src%2Ftest%2Fauxiliary%2Fcci_intrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1db959ec22712376763e062dc2fbffc18f33d9c/src%2Ftest%2Fauxiliary%2Fcci_intrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcci_intrinsic.rs?ref=e1db959ec22712376763e062dc2fbffc18f33d9c", "patch": "@@ -2,6 +2,10 @@\n #[abi = \"rust-intrinsic\"]\n extern mod rusti {\n     #[legacy_exports];\n+    fn atomic_cxchg(dst: &mut int, old: int, src: int) -> int;\n+    fn atomic_cxchg_acq(dst: &mut int, old: int, src: int) -> int;\n+    fn atomic_cxchg_rel(dst: &mut int, old: int, src: int) -> int;\n+\n     fn atomic_xchg(dst: &mut int, src: int) -> int;\n     fn atomic_xchg_acq(dst: &mut int, src: int) -> int;\n     fn atomic_xchg_rel(dst: &mut int, src: int) -> int;"}, {"sha": "8438ecf383ec13c75199564d073876310311130a", "filename": "src/test/run-pass/intrinsic-atomics.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e1db959ec22712376763e062dc2fbffc18f33d9c/src%2Ftest%2Frun-pass%2Fintrinsic-atomics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1db959ec22712376763e062dc2fbffc18f33d9c/src%2Ftest%2Frun-pass%2Fintrinsic-atomics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fintrinsic-atomics.rs?ref=e1db959ec22712376763e062dc2fbffc18f33d9c", "patch": "@@ -1,6 +1,10 @@\n #[abi = \"rust-intrinsic\"]\n extern mod rusti {\n     #[legacy_exports];\n+    fn atomic_cxchg(dst: &mut int, old: int, src: int) -> int;\n+    fn atomic_cxchg_acq(dst: &mut int, old: int, src: int) -> int;\n+    fn atomic_cxchg_rel(dst: &mut int, old: int, src: int) -> int;\n+\n     fn atomic_xchg(dst: &mut int, src: int) -> int;\n     fn atomic_xchg_acq(dst: &mut int, src: int) -> int;\n     fn atomic_xchg_rel(dst: &mut int, src: int) -> int;\n@@ -17,6 +21,15 @@ extern mod rusti {\n fn main() {\n     let x = ~mut 1;\n \n+    assert rusti::atomic_cxchg(x, 1, 2) == 1;\n+    assert *x == 2;\n+\n+    assert rusti::atomic_cxchg_acq(x, 1, 3) == 2;\n+    assert *x == 2;\n+\n+    assert rusti::atomic_cxchg_rel(x, 2, 1) == 2;\n+    assert *x == 1;\n+\n     assert rusti::atomic_xchg(x, 0) == 1;\n     assert *x == 0;\n "}]}