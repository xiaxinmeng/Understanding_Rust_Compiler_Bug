{"sha": "e91689cd97657ae2db5e716a5178ea4f5779570a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5MTY4OWNkOTc2NTdhZTJkYjVlNzE2YTUxNzhlYTRmNTc3OTU3MGE=", "commit": {"author": {"name": "Chris Gregory", "email": "czipperz@gmail.com", "date": "2019-03-25T20:38:12Z"}, "committer": {"name": "Chris Gregory", "email": "czipperz@gmail.com", "date": "2019-03-25T20:38:21Z"}, "message": "Rework documentation to be about fat pointers", "tree": {"sha": "206f40324d35f87497e7a880c5e1ebe9f1acd382", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/206f40324d35f87497e7a880c5e1ebe9f1acd382"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e91689cd97657ae2db5e716a5178ea4f5779570a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e91689cd97657ae2db5e716a5178ea4f5779570a", "html_url": "https://github.com/rust-lang/rust/commit/e91689cd97657ae2db5e716a5178ea4f5779570a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e91689cd97657ae2db5e716a5178ea4f5779570a/comments", "author": {"login": "czipperz", "id": 10054343, "node_id": "MDQ6VXNlcjEwMDU0MzQz", "avatar_url": "https://avatars.githubusercontent.com/u/10054343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/czipperz", "html_url": "https://github.com/czipperz", "followers_url": "https://api.github.com/users/czipperz/followers", "following_url": "https://api.github.com/users/czipperz/following{/other_user}", "gists_url": "https://api.github.com/users/czipperz/gists{/gist_id}", "starred_url": "https://api.github.com/users/czipperz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/czipperz/subscriptions", "organizations_url": "https://api.github.com/users/czipperz/orgs", "repos_url": "https://api.github.com/users/czipperz/repos", "events_url": "https://api.github.com/users/czipperz/events{/privacy}", "received_events_url": "https://api.github.com/users/czipperz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "czipperz", "id": 10054343, "node_id": "MDQ6VXNlcjEwMDU0MzQz", "avatar_url": "https://avatars.githubusercontent.com/u/10054343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/czipperz", "html_url": "https://github.com/czipperz", "followers_url": "https://api.github.com/users/czipperz/followers", "following_url": "https://api.github.com/users/czipperz/following{/other_user}", "gists_url": "https://api.github.com/users/czipperz/gists{/gist_id}", "starred_url": "https://api.github.com/users/czipperz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/czipperz/subscriptions", "organizations_url": "https://api.github.com/users/czipperz/orgs", "repos_url": "https://api.github.com/users/czipperz/repos", "events_url": "https://api.github.com/users/czipperz/events{/privacy}", "received_events_url": "https://api.github.com/users/czipperz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00716b480fa8fbbfc0a3d64b908cafe7141b1f09", "url": "https://api.github.com/repos/rust-lang/rust/commits/00716b480fa8fbbfc0a3d64b908cafe7141b1f09", "html_url": "https://github.com/rust-lang/rust/commit/00716b480fa8fbbfc0a3d64b908cafe7141b1f09"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "d795bf0ad83030694e756d3215e45fdde5e1c646", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e91689cd97657ae2db5e716a5178ea4f5779570a/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e91689cd97657ae2db5e716a5178ea4f5779570a/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=e91689cd97657ae2db5e716a5178ea4f5779570a", "patch": "@@ -2483,9 +2483,13 @@ impl<T: ?Sized> Eq for *mut T {}\n /// by their address rather than comparing the values they point to\n /// (which is what the `PartialEq for &T` implementation does).\n ///\n-/// Smart pointer types, such as `Box`, `Rc`, and `Arc` do not compare\n-/// using this function, instead they compare the values rather than\n-/// their addresses.\n+/// A reference in Rust is sometimes stored different than a raw\n+/// memory address.  These cases are called fat pointers.  A reference\n+/// to a slice must store both the address of the slice and the length\n+/// of the slice.  A reference to an object satisfying a trait must\n+/// also point to the vtable for the trait's methods.  Since this\n+/// function compares pointers in totality, careful consideration to\n+/// the type of the variable must be made.\n ///\n /// # Examples\n ///\n@@ -2499,9 +2503,9 @@ impl<T: ?Sized> Eq for *mut T {}\n /// let other_five_ref = &other_five;\n ///\n /// assert!(five_ref == same_five_ref);\n-/// assert!(five_ref == other_five_ref);\n-///\n /// assert!(ptr::eq(five_ref, same_five_ref));\n+///\n+/// assert!(five_ref == other_five_ref);\n /// assert!(!ptr::eq(five_ref, other_five_ref));\n /// ```\n #[stable(feature = \"ptr_eq\", since = \"1.17.0\")]"}]}