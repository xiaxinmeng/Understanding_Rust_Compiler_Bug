{"sha": "80feed380d478a14e5acd99fc8721ed0e6de19ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwZmVlZDM4MGQ0NzhhMTRlNWFjZDk5ZmM4NzIxZWQwZTZkZTE5YmE=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-10-12T14:10:16Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-10-15T18:54:23Z"}, "message": "Deduplicate vtables within a single evaluation", "tree": {"sha": "90611f491e78fa83a4ae15821250aa293da2eb84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/90611f491e78fa83a4ae15821250aa293da2eb84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80feed380d478a14e5acd99fc8721ed0e6de19ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80feed380d478a14e5acd99fc8721ed0e6de19ba", "html_url": "https://github.com/rust-lang/rust/commit/80feed380d478a14e5acd99fc8721ed0e6de19ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80feed380d478a14e5acd99fc8721ed0e6de19ba/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f9b581f71810744069228f86242e6ba00b7d09c", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f9b581f71810744069228f86242e6ba00b7d09c", "html_url": "https://github.com/rust-lang/rust/commit/4f9b581f71810744069228f86242e6ba00b7d09c"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "be9f2b8f658dd95b7907cb1c3ff7783bd61b9ff7", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/80feed380d478a14e5acd99fc8721ed0e6de19ba/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80feed380d478a14e5acd99fc8721ed0e6de19ba/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=80feed380d478a14e5acd99fc8721ed0e6de19ba", "patch": "@@ -27,6 +27,7 @@ use rustc::mir::interpret::{\n     EvalResult, EvalErrorKind,\n     truncate, sign_extend,\n };\n+use rustc_data_structures::fx::FxHashMap;\n \n use syntax::source_map::{self, Span};\n \n@@ -50,6 +51,9 @@ pub struct EvalContext<'a, 'mir, 'tcx: 'a + 'mir, M: Machine<'a, 'mir, 'tcx>> {\n \n     /// The virtual call stack.\n     pub(crate) stack: Vec<Frame<'mir, 'tcx, M::PointerTag>>,\n+\n+    /// A cache for deduplicating vtables\n+    pub(super) vtables: FxHashMap<(Ty<'tcx>, ty::PolyTraitRef<'tcx>), AllocId>,\n }\n \n /// A stack frame.\n@@ -209,6 +213,7 @@ impl<'a, 'mir, 'tcx: 'mir, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tc\n             param_env,\n             memory: Memory::new(tcx, memory_data),\n             stack: Vec::new(),\n+            vtables: FxHashMap(),\n         }\n     }\n "}, {"sha": "b4c73ad02c3132b389c2a1b57f11381a455e9212", "filename": "src/librustc_mir/interpret/traits.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/80feed380d478a14e5acd99fc8721ed0e6de19ba/src%2Flibrustc_mir%2Finterpret%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80feed380d478a14e5acd99fc8721ed0e6de19ba/src%2Flibrustc_mir%2Finterpret%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Ftraits.rs?ref=80feed380d478a14e5acd99fc8721ed0e6de19ba", "patch": "@@ -28,7 +28,9 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M>\n     ) -> EvalResult<'tcx, Pointer<M::PointerTag>> {\n         debug!(\"get_vtable(trait_ref={:?})\", trait_ref);\n \n-        // FIXME: Cache this!\n+        if let Some(&vtable) = self.vtables.get(&(ty, trait_ref)) {\n+            return Ok(Pointer::from(vtable).with_default_tag());\n+        }\n \n         let layout = self.layout_of(trait_ref.self_ty())?;\n         assert!(!layout.is_unsized(), \"can't create a vtable for an unsized type\");\n@@ -64,6 +66,7 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M>\n         }\n \n         self.memory.mark_immutable(vtable.alloc_id)?;\n+        assert!(self.vtables.insert((ty, trait_ref), vtable.alloc_id).is_none());\n \n         Ok(vtable)\n     }"}]}