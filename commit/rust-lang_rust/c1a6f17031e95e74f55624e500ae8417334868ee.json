{"sha": "c1a6f17031e95e74f55624e500ae8417334868ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxYTZmMTcwMzFlOTVlNzRmNTU2MjRlNTAwYWU4NDE3MzM0ODY4ZWU=", "commit": {"author": {"name": "Liigo Zhuang", "email": "com.liigo@gmail.com", "date": "2016-11-18T02:40:51Z"}, "committer": {"name": "Liigo Zhuang", "email": "com.liigo@gmail.com", "date": "2016-11-30T02:33:22Z"}, "message": "rustdoc: get back missing crate-name when --playground-url is used\n\nfollow up PR #37763", "tree": {"sha": "d20b40819dcf558b27bb5d659c616360d084f596", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d20b40819dcf558b27bb5d659c616360d084f596"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1a6f17031e95e74f55624e500ae8417334868ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1a6f17031e95e74f55624e500ae8417334868ee", "html_url": "https://github.com/rust-lang/rust/commit/c1a6f17031e95e74f55624e500ae8417334868ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1a6f17031e95e74f55624e500ae8417334868ee/comments", "author": {"login": "liigo", "id": 346530, "node_id": "MDQ6VXNlcjM0NjUzMA==", "avatar_url": "https://avatars.githubusercontent.com/u/346530?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liigo", "html_url": "https://github.com/liigo", "followers_url": "https://api.github.com/users/liigo/followers", "following_url": "https://api.github.com/users/liigo/following{/other_user}", "gists_url": "https://api.github.com/users/liigo/gists{/gist_id}", "starred_url": "https://api.github.com/users/liigo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liigo/subscriptions", "organizations_url": "https://api.github.com/users/liigo/orgs", "repos_url": "https://api.github.com/users/liigo/repos", "events_url": "https://api.github.com/users/liigo/events{/privacy}", "received_events_url": "https://api.github.com/users/liigo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "liigo", "id": 346530, "node_id": "MDQ6VXNlcjM0NjUzMA==", "avatar_url": "https://avatars.githubusercontent.com/u/346530?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liigo", "html_url": "https://github.com/liigo", "followers_url": "https://api.github.com/users/liigo/followers", "following_url": "https://api.github.com/users/liigo/following{/other_user}", "gists_url": "https://api.github.com/users/liigo/gists{/gist_id}", "starred_url": "https://api.github.com/users/liigo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liigo/subscriptions", "organizations_url": "https://api.github.com/users/liigo/orgs", "repos_url": "https://api.github.com/users/liigo/repos", "events_url": "https://api.github.com/users/liigo/events{/privacy}", "received_events_url": "https://api.github.com/users/liigo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b30022a1d32ebbd41f6623ab6fe7c62d489548e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/b30022a1d32ebbd41f6623ab6fe7c62d489548e1", "html_url": "https://github.com/rust-lang/rust/commit/b30022a1d32ebbd41f6623ab6fe7c62d489548e1"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "7fa2e5cbdd7c131dfe3cb0eb48c43ec7d6164833", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c1a6f17031e95e74f55624e500ae8417334868ee/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1a6f17031e95e74f55624e500ae8417334868ee/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=c1a6f17031e95e74f55624e500ae8417334868ee", "patch": "@@ -451,6 +451,14 @@ pub fn run(mut krate: clean::Crate,\n         css_file_extension: css_file_extension.clone(),\n     };\n \n+    // If user passed in `--playground-url` arg, we fill in crate name here\n+    markdown::PLAYGROUND.with(|slot| {\n+        if slot.borrow().is_some() {\n+            let url = slot.borrow().as_ref().unwrap().1.clone();\n+            *slot.borrow_mut() = Some((Some(krate.name.clone()), url));\n+        }\n+    });\n+\n     // Crawl the crate attributes looking for attributes which control how we're\n     // going to emit HTML\n     if let Some(attrs) = krate.module.as_ref().map(|m| &m.attrs) {"}]}