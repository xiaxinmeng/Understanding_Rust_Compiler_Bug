{"sha": "f6f03639b185b18bd601ca23e3c48844c0ddb184", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2ZjAzNjM5YjE4NWIxOGJkNjAxY2EyM2UzYzQ4ODQ0YzBkZGIxODQ=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-07-18T23:54:48Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-07-22T04:35:40Z"}, "message": "Gate signatures on the config", "tree": {"sha": "263abe28374dc05cd520340b6efc4389d182e8bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/263abe28374dc05cd520340b6efc4389d182e8bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6f03639b185b18bd601ca23e3c48844c0ddb184", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6f03639b185b18bd601ca23e3c48844c0ddb184", "html_url": "https://github.com/rust-lang/rust/commit/f6f03639b185b18bd601ca23e3c48844c0ddb184", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6f03639b185b18bd601ca23e3c48844c0ddb184/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52e9f2035ae396cae4a0e0430763b53a676d7eb9", "url": "https://api.github.com/repos/rust-lang/rust/commits/52e9f2035ae396cae4a0e0430763b53a676d7eb9", "html_url": "https://github.com/rust-lang/rust/commit/52e9f2035ae396cae4a0e0430763b53a676d7eb9"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "3557b4752e7e434c7926770d3d8bb3b4438f4522", "filename": "src/librustc_save_analysis/sig.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/f6f03639b185b18bd601ca23e3c48844c0ddb184/src%2Flibrustc_save_analysis%2Fsig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6f03639b185b18bd601ca23e3c48844c0ddb184/src%2Flibrustc_save_analysis%2Fsig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fsig.rs?ref=f6f03639b185b18bd601ca23e3c48844c0ddb184", "patch": "@@ -45,21 +45,33 @@ use syntax::print::pprust;\n \n \n pub fn item_signature(item: &ast::Item, scx: &SaveContext) -> Option<Signature> {\n+    if !scx.config.signatures {\n+        return None;\n+    }\n     item.make(0, None, scx).ok()\n }\n \n pub fn foreign_item_signature(item: &ast::ForeignItem, scx: &SaveContext) -> Option<Signature> {\n+    if !scx.config.signatures {\n+        return None;\n+    }\n     item.make(0, None, scx).ok()\n }\n \n /// Signature for a struct or tuple field declaration.\n /// Does not include a trailing comma.\n pub fn field_signature(field: &ast::StructField, scx: &SaveContext) -> Option<Signature> {\n+    if !scx.config.signatures {\n+        return None;\n+    }\n     field.make(0, None, scx).ok()\n }\n \n /// Does not include a trailing comma.\n pub fn variant_signature(variant: &ast::Variant, scx: &SaveContext) -> Option<Signature> {\n+    if !scx.config.signatures {\n+        return None;\n+    }\n     variant.node.make(0, None, scx).ok()\n }\n \n@@ -68,6 +80,9 @@ pub fn method_signature(id: NodeId,\n                         m: &ast::MethodSig,\n                         scx: &SaveContext)\n                         -> Option<Signature> {\n+    if !scx.config.signatures {\n+        return None;\n+    }\n     make_method_signature(id, ident, m, scx).ok()\n }\n \n@@ -77,6 +92,9 @@ pub fn assoc_const_signature(id: NodeId,\n                              default: Option<&ast::Expr>,\n                              scx: &SaveContext)\n                              -> Option<Signature> {\n+    if !scx.config.signatures {\n+        return None;\n+    }\n     make_assoc_const_signature(id, ident, ty, default, scx).ok()\n }\n \n@@ -86,6 +104,9 @@ pub fn assoc_type_signature(id: NodeId,\n                             default: Option<&ast::Ty>,\n                             scx: &SaveContext)\n                             -> Option<Signature> {\n+    if !scx.config.signatures {\n+        return None;\n+    }\n     make_assoc_type_signature(id, ident, bounds, default, scx).ok()\n }\n "}]}