{"sha": "f2aa8c41876cce93c6bb4ada79600b8ef8e3d599", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyYWE4YzQxODc2Y2NlOTNjNmJiNGFkYTc5NjAwYjhlZjhlM2Q1OTk=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-11-03T23:56:59Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-11-04T00:24:26Z"}, "message": "rollup merge of #18593 : hirschenberger/issue-18587\n\nConflicts:\n\tsrc/test/compile-fail/lint-exceeding-bitshifts.rs", "tree": {"sha": "9b084ab7e33e8f857167d3baf2500d484db27f7e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b084ab7e33e8f857167d3baf2500d484db27f7e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2aa8c41876cce93c6bb4ada79600b8ef8e3d599", "comment_count": 13, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2aa8c41876cce93c6bb4ada79600b8ef8e3d599", "html_url": "https://github.com/rust-lang/rust/commit/f2aa8c41876cce93c6bb4ada79600b8ef8e3d599", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2aa8c41876cce93c6bb4ada79600b8ef8e3d599/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d6cd7707036ef75a6fad90d4e5189e6916e1be8", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d6cd7707036ef75a6fad90d4e5189e6916e1be8", "html_url": "https://github.com/rust-lang/rust/commit/5d6cd7707036ef75a6fad90d4e5189e6916e1be8"}, {"sha": "e7f310970867061ae1eb8d95ce7a674560533857", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7f310970867061ae1eb8d95ce7a674560533857", "html_url": "https://github.com/rust-lang/rust/commit/e7f310970867061ae1eb8d95ce7a674560533857"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "f83facbb621eae3ec262df6f7aa45cdd7ab7a341", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f2aa8c41876cce93c6bb4ada79600b8ef8e3d599/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2aa8c41876cce93c6bb4ada79600b8ef8e3d599/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=f2aa8c41876cce93c6bb4ada79600b8ef8e3d599", "patch": "@@ -39,7 +39,7 @@ use std::cmp;\n use std::collections::HashMap;\n use std::collections::hash_map::{Occupied, Vacant};\n use std::slice;\n-use std::{int, i8, i16, i32, i64, uint, u8, u16, u32, u64, f32, f64};\n+use std::{i8, i16, i32, i64, u8, u16, u32, u64, f32, f64};\n use syntax::abi;\n use syntax::ast_map;\n use syntax::ast_util::is_shift_binop;\n@@ -180,8 +180,8 @@ impl LintPass for TypeLimits {\n \n                 if is_shift_binop(binop) {\n                     let opt_ty_bits = match ty::get(ty::expr_ty(cx.tcx, &**l)).sty {\n-                        ty::ty_int(t) => Some(int_ty_bits(t)),\n-                        ty::ty_uint(t) => Some(uint_ty_bits(t)),\n+                        ty::ty_int(t) => Some(int_ty_bits(t, cx.sess().targ_cfg.int_type)),\n+                        ty::ty_uint(t) => Some(uint_ty_bits(t, cx.sess().targ_cfg.uint_type)),\n                         _ => None\n                     };\n \n@@ -312,19 +312,19 @@ impl LintPass for TypeLimits {\n             }\n         }\n \n-        fn int_ty_bits(int_ty: ast::IntTy) -> u64 {\n+        fn int_ty_bits(int_ty: ast::IntTy, target_int_ty: ast::IntTy) -> u64 {\n             match int_ty {\n-                ast::TyI =>    int::BITS as u64,\n+                ast::TyI =>    int_ty_bits(target_int_ty, target_int_ty),\n                 ast::TyI8 =>   i8::BITS  as u64,\n                 ast::TyI16 =>  i16::BITS as u64,\n                 ast::TyI32 =>  i32::BITS as u64,\n                 ast::TyI64 =>  i64::BITS as u64\n             }\n         }\n \n-        fn uint_ty_bits(uint_ty: ast::UintTy) -> u64 {\n+        fn uint_ty_bits(uint_ty: ast::UintTy, target_uint_ty: ast::UintTy) -> u64 {\n             match uint_ty {\n-                ast::TyU =>    uint::BITS as u64,\n+                ast::TyU =>    uint_ty_bits(target_uint_ty, target_uint_ty),\n                 ast::TyU8 =>   u8::BITS  as u64,\n                 ast::TyU16 =>  u16::BITS as u64,\n                 ast::TyU32 =>  u32::BITS as u64,"}, {"sha": "dbb65d8b7cefd6a3928455cd6e3f6e47d11562e3", "filename": "src/test/compile-fail/lint-exceeding-bitshifts.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f2aa8c41876cce93c6bb4ada79600b8ef8e3d599/src%2Ftest%2Fcompile-fail%2Flint-exceeding-bitshifts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2aa8c41876cce93c6bb4ada79600b8ef8e3d599/src%2Ftest%2Fcompile-fail%2Flint-exceeding-bitshifts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-exceeding-bitshifts.rs?ref=f2aa8c41876cce93c6bb4ada79600b8ef8e3d599", "patch": "@@ -10,6 +10,7 @@\n \n #![deny(exceeding_bitshifts)]\n #![allow(unused_variables)]\n+#![allow(dead_code)]\n \n fn main() {\n       let n = 1u8 << 7;\n@@ -54,5 +55,8 @@ fn main() {\n \n       let n = 1u8 << (4+3);\n       let n = 1u8 << (4+4); //~ ERROR: bitshift exceeds the type's number of bits\n+\n+      let n = 1i << std::int::BITS; //~ ERROR: bitshift exceeds the type's number of bits\n+      let n = 1u << std::uint::BITS; //~ ERROR: bitshift exceeds the type's number of bits\n }\n "}]}