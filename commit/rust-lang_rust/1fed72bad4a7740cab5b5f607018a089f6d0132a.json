{"sha": "1fed72bad4a7740cab5b5f607018a089f6d0132a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmZWQ3MmJhZDRhNzc0MGNhYjViNWY2MDcwMThhMDg5ZjZkMDEzMmE=", "commit": {"author": {"name": "Wayne Warren", "email": "wayne.warren.s@gmail.com", "date": "2018-11-21T12:05:52Z"}, "committer": {"name": "Wayne Warren", "email": "wayne.warren.s@gmail.com", "date": "2018-11-21T13:52:02Z"}, "message": "Address 'clippy::single-match' dogfood lint", "tree": {"sha": "ae96fa55ddfe56ebf84b8b62ba3c19db489cd0ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae96fa55ddfe56ebf84b8b62ba3c19db489cd0ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1fed72bad4a7740cab5b5f607018a089f6d0132a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1fed72bad4a7740cab5b5f607018a089f6d0132a", "html_url": "https://github.com/rust-lang/rust/commit/1fed72bad4a7740cab5b5f607018a089f6d0132a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1fed72bad4a7740cab5b5f607018a089f6d0132a/comments", "author": {"login": "waynr", "id": 1441126, "node_id": "MDQ6VXNlcjE0NDExMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1441126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waynr", "html_url": "https://github.com/waynr", "followers_url": "https://api.github.com/users/waynr/followers", "following_url": "https://api.github.com/users/waynr/following{/other_user}", "gists_url": "https://api.github.com/users/waynr/gists{/gist_id}", "starred_url": "https://api.github.com/users/waynr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waynr/subscriptions", "organizations_url": "https://api.github.com/users/waynr/orgs", "repos_url": "https://api.github.com/users/waynr/repos", "events_url": "https://api.github.com/users/waynr/events{/privacy}", "received_events_url": "https://api.github.com/users/waynr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "waynr", "id": 1441126, "node_id": "MDQ6VXNlcjE0NDExMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1441126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waynr", "html_url": "https://github.com/waynr", "followers_url": "https://api.github.com/users/waynr/followers", "following_url": "https://api.github.com/users/waynr/following{/other_user}", "gists_url": "https://api.github.com/users/waynr/gists{/gist_id}", "starred_url": "https://api.github.com/users/waynr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waynr/subscriptions", "organizations_url": "https://api.github.com/users/waynr/orgs", "repos_url": "https://api.github.com/users/waynr/repos", "events_url": "https://api.github.com/users/waynr/events{/privacy}", "received_events_url": "https://api.github.com/users/waynr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4a6ee4a0c8308342c60e6b597872c19a5c6704c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4a6ee4a0c8308342c60e6b597872c19a5c6704c", "html_url": "https://github.com/rust-lang/rust/commit/d4a6ee4a0c8308342c60e6b597872c19a5c6704c"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "2929752bbb2d13ab22ffe3eaa3dc4f94c6689068", "filename": "clippy_lints/src/trivially_copy_pass_by_ref.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1fed72bad4a7740cab5b5f607018a089f6d0132a/clippy_lints%2Fsrc%2Ftrivially_copy_pass_by_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fed72bad4a7740cab5b5f607018a089f6d0132a/clippy_lints%2Fsrc%2Ftrivially_copy_pass_by_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftrivially_copy_pass_by_ref.rs?ref=1fed72bad4a7740cab5b5f607018a089f6d0132a", "patch": "@@ -153,9 +153,8 @@ impl<'a, 'tcx> TriviallyCopyPassByRef {\n         trait_items: &[TraitItemRef]\n     ) {\n         for item in trait_items {\n-            match item.kind {\n-                AssociatedItemKind::Method{..} => self.check_trait_method(cx, item),\n-                _ => (),\n+            if let AssociatedItemKind::Method{..} = item.kind {\n+                self.check_trait_method(cx, item);\n             }\n         }\n     }\n@@ -172,9 +171,8 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for TriviallyCopyPassByRef {\n         if in_macro(item.span) {\n             return;\n         }\n-        match item.node {\n-            ItemKind::Trait(_, _, _, _, ref trait_items) => self.check_trait_items(cx, trait_items),\n-            _ => (),\n+        if let ItemKind::Trait(_, _, _, _, ref trait_items) = item.node {\n+            self.check_trait_items(cx, trait_items);\n         }\n     }\n "}]}