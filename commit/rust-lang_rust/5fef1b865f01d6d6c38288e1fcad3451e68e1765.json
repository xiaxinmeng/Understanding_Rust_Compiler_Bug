{"sha": "5fef1b865f01d6d6c38288e1fcad3451e68e1765", "node_id": "C_kwDOAAsO6NoAKDVmZWYxYjg2NWYwMWQ2ZDZjMzgyODhlMWZjYWQzNDUxZTY4ZTE3NjU", "commit": {"author": {"name": "Jean CASPAR", "email": "55629512+JeanCASPAR@users.noreply.github.com", "date": "2022-08-22T17:34:19Z"}, "committer": {"name": "Jean CASPAR", "email": "55629512+JeanCASPAR@users.noreply.github.com", "date": "2022-08-22T17:34:19Z"}, "message": "Resolve conflicts", "tree": {"sha": "7c8306078c9c1b47b31c8c8fb0685df29feb8c00", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c8306078c9c1b47b31c8c8fb0685df29feb8c00"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5fef1b865f01d6d6c38288e1fcad3451e68e1765", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5fef1b865f01d6d6c38288e1fcad3451e68e1765", "html_url": "https://github.com/rust-lang/rust/commit/5fef1b865f01d6d6c38288e1fcad3451e68e1765", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5fef1b865f01d6d6c38288e1fcad3451e68e1765/comments", "author": {"login": "JeanCASPAR", "id": 55629512, "node_id": "MDQ6VXNlcjU1NjI5NTEy", "avatar_url": "https://avatars.githubusercontent.com/u/55629512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeanCASPAR", "html_url": "https://github.com/JeanCASPAR", "followers_url": "https://api.github.com/users/JeanCASPAR/followers", "following_url": "https://api.github.com/users/JeanCASPAR/following{/other_user}", "gists_url": "https://api.github.com/users/JeanCASPAR/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeanCASPAR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeanCASPAR/subscriptions", "organizations_url": "https://api.github.com/users/JeanCASPAR/orgs", "repos_url": "https://api.github.com/users/JeanCASPAR/repos", "events_url": "https://api.github.com/users/JeanCASPAR/events{/privacy}", "received_events_url": "https://api.github.com/users/JeanCASPAR/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JeanCASPAR", "id": 55629512, "node_id": "MDQ6VXNlcjU1NjI5NTEy", "avatar_url": "https://avatars.githubusercontent.com/u/55629512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeanCASPAR", "html_url": "https://github.com/JeanCASPAR", "followers_url": "https://api.github.com/users/JeanCASPAR/followers", "following_url": "https://api.github.com/users/JeanCASPAR/following{/other_user}", "gists_url": "https://api.github.com/users/JeanCASPAR/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeanCASPAR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeanCASPAR/subscriptions", "organizations_url": "https://api.github.com/users/JeanCASPAR/orgs", "repos_url": "https://api.github.com/users/JeanCASPAR/repos", "events_url": "https://api.github.com/users/JeanCASPAR/events{/privacy}", "received_events_url": "https://api.github.com/users/JeanCASPAR/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9472df10d0dc9e2a1ee027d6f7ebe947bd660ae8", "url": "https://api.github.com/repos/rust-lang/rust/commits/9472df10d0dc9e2a1ee027d6f7ebe947bd660ae8", "html_url": "https://github.com/rust-lang/rust/commit/9472df10d0dc9e2a1ee027d6f7ebe947bd660ae8"}], "stats": {"total": 36, "additions": 18, "deletions": 18}, "files": [{"sha": "59f1b7180e4f4c5eb02c551ebb143208c9990642", "filename": "compiler/rustc_ast_lowering/src/errors.rs", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/5fef1b865f01d6d6c38288e1fcad3451e68e1765/compiler%2Frustc_ast_lowering%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fef1b865f01d6d6c38288e1fcad3451e68e1765/compiler%2Frustc_ast_lowering%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Ferrors.rs?ref=5fef1b865f01d6d6c38288e1fcad3451e68e1765", "patch": "@@ -150,21 +150,21 @@ pub struct AsyncGeneratorsNotSupported {\n }\n \n #[derive(SessionDiagnostic, Clone, Copy)]\n-#[error(ast_lowering::inline_asm_unsupported_target, code = \"E0472\")]\n+#[diag(ast_lowering::inline_asm_unsupported_target, code = \"E0472\")]\n pub struct InlineAsmUnsupportedTarget {\n     #[primary_span]\n     pub span: Span,\n }\n \n #[derive(SessionDiagnostic, Clone, Copy)]\n-#[error(ast_lowering::att_syntax_only_x86)]\n+#[diag(ast_lowering::att_syntax_only_x86)]\n pub struct AttSyntaxOnlyX86 {\n     #[primary_span]\n     pub span: Span,\n }\n \n #[derive(SessionDiagnostic, Clone, Copy)]\n-#[error(ast_lowering::abi_specified_multiple_times)]\n+#[diag(ast_lowering::abi_specified_multiple_times)]\n pub struct AbiSpecifiedMultipleTimes {\n     #[primary_span]\n     pub abi_span: Span,\n@@ -176,23 +176,23 @@ pub struct AbiSpecifiedMultipleTimes {\n }\n \n #[derive(SessionDiagnostic, Clone, Copy)]\n-#[error(ast_lowering::clobber_abi_not_supported)]\n+#[diag(ast_lowering::clobber_abi_not_supported)]\n pub struct ClobberAbiNotSupported {\n     #[primary_span]\n     pub abi_span: Span,\n }\n \n #[derive(SessionDiagnostic)]\n #[note]\n-#[error(ast_lowering::invalid_abi_clobber_abi)]\n+#[diag(ast_lowering::invalid_abi_clobber_abi)]\n pub struct InvalidAbiClobberAbi {\n     #[primary_span]\n     pub abi_span: Span,\n     pub supported_abis: String,\n }\n \n #[derive(SessionDiagnostic, Clone, Copy)]\n-#[error(ast_lowering::invalid_register)]\n+#[diag(ast_lowering::invalid_register)]\n pub struct InvalidRegister<'a> {\n     #[primary_span]\n     pub op_span: Span,\n@@ -201,7 +201,7 @@ pub struct InvalidRegister<'a> {\n }\n \n #[derive(SessionDiagnostic, Clone, Copy)]\n-#[error(ast_lowering::invalid_register_class)]\n+#[diag(ast_lowering::invalid_register_class)]\n pub struct InvalidRegisterClass<'a> {\n     #[primary_span]\n     pub op_span: Span,\n@@ -210,7 +210,7 @@ pub struct InvalidRegisterClass<'a> {\n }\n \n #[derive(SessionDiagnostic)]\n-#[error(ast_lowering::invalid_asm_template_modifier_reg_class)]\n+#[diag(ast_lowering::invalid_asm_template_modifier_reg_class)]\n pub struct InvalidAsmTemplateModifierRegClass {\n     #[primary_span]\n     #[label(ast_lowering::template_modifier)]\n@@ -230,7 +230,7 @@ pub enum InvalidAsmTemplateModifierRegClassSub {\n }\n \n #[derive(SessionDiagnostic, Clone, Copy)]\n-#[error(ast_lowering::invalid_asm_template_modifier_const)]\n+#[diag(ast_lowering::invalid_asm_template_modifier_const)]\n pub struct InvalidAsmTemplateModifierConst {\n     #[primary_span]\n     #[label(ast_lowering::template_modifier)]\n@@ -240,7 +240,7 @@ pub struct InvalidAsmTemplateModifierConst {\n }\n \n #[derive(SessionDiagnostic, Clone, Copy)]\n-#[error(ast_lowering::invalid_asm_template_modifier_sym)]\n+#[diag(ast_lowering::invalid_asm_template_modifier_sym)]\n pub struct InvalidAsmTemplateModifierSym {\n     #[primary_span]\n     #[label(ast_lowering::template_modifier)]\n@@ -250,15 +250,15 @@ pub struct InvalidAsmTemplateModifierSym {\n }\n \n #[derive(SessionDiagnostic, Clone, Copy)]\n-#[error(ast_lowering::register_class_only_clobber)]\n+#[diag(ast_lowering::register_class_only_clobber)]\n pub struct RegisterClassOnlyClobber {\n     #[primary_span]\n     pub op_span: Span,\n     pub reg_class_name: Symbol,\n }\n \n #[derive(SessionDiagnostic, Clone, Copy)]\n-#[error(ast_lowering::register_conflict)]\n+#[diag(ast_lowering::register_conflict)]\n pub struct RegisterConflict<'a> {\n     #[primary_span]\n     #[label(ast_lowering::register1)]\n@@ -273,7 +273,7 @@ pub struct RegisterConflict<'a> {\n \n #[derive(SessionDiagnostic, Clone, Copy)]\n #[help]\n-#[error(ast_lowering::sub_tuple_binding)]\n+#[diag(ast_lowering::sub_tuple_binding)]\n pub struct SubTupleBinding<'a> {\n     #[primary_span]\n     #[label]\n@@ -289,7 +289,7 @@ pub struct SubTupleBinding<'a> {\n }\n \n #[derive(SessionDiagnostic, Clone, Copy)]\n-#[error(ast_lowering::extra_double_dot)]\n+#[diag(ast_lowering::extra_double_dot)]\n pub struct ExtraDoubleDot<'a> {\n     #[primary_span]\n     #[label]\n@@ -301,28 +301,28 @@ pub struct ExtraDoubleDot<'a> {\n \n #[derive(SessionDiagnostic, Clone, Copy)]\n #[note]\n-#[error(ast_lowering::misplaced_double_dot)]\n+#[diag(ast_lowering::misplaced_double_dot)]\n pub struct MisplacedDoubleDot {\n     #[primary_span]\n     pub span: Span,\n }\n \n #[derive(SessionDiagnostic, Clone, Copy)]\n-#[error(ast_lowering::misplaced_relax_trait_bound)]\n+#[diag(ast_lowering::misplaced_relax_trait_bound)]\n pub struct MisplacedRelaxTraitBound {\n     #[primary_span]\n     pub span: Span,\n }\n \n #[derive(SessionDiagnostic, Clone, Copy)]\n-#[error(ast_lowering::not_supported_for_lifetime_binder_async_closure)]\n+#[diag(ast_lowering::not_supported_for_lifetime_binder_async_closure)]\n pub struct NotSupportedForLifetimeBinderAsyncClosure {\n     #[primary_span]\n     pub span: Span,\n }\n \n #[derive(SessionDiagnostic, Clone, Copy)]\n-#[error(ast_lowering::arbitrary_expression_in_pattern)]\n+#[diag(ast_lowering::arbitrary_expression_in_pattern)]\n pub struct ArbitraryExpressionInPattern {\n     #[primary_span]\n     pub span: Span,"}]}