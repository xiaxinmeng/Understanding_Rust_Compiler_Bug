{"sha": "00cc6d24099eb93ecfeb9bf807ab9e5130a01749", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwY2M2ZDI0MDk5ZWI5M2VjZmViOWJmODA3YWI5ZTUxMzBhMDE3NDk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-10-24T03:22:29Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-10-24T03:22:29Z"}, "message": "auto merge of #17896 : mahkoh/rust/intmax, r=alexcrichton\n\nCloses #17075\r\n\r\nI don't know if this is correct. The easiest way to find out is to run the following program on all targets but I can't do it myself.\r\n```c\r\n#include <stdint.h>\r\n#include <stdio.h>\r\n\r\nint main(void)\r\n{\r\n\tif (sizeof(intmax_t) != 8) {\r\n\t\tputs(\"ERROR\");\r\n\t\treturn 1;\r\n\t}\r\n}\r\n```", "tree": {"sha": "07b68e2bf4955b227e68a8c5168fea27bdd97d8d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/07b68e2bf4955b227e68a8c5168fea27bdd97d8d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/00cc6d24099eb93ecfeb9bf807ab9e5130a01749", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/00cc6d24099eb93ecfeb9bf807ab9e5130a01749", "html_url": "https://github.com/rust-lang/rust/commit/00cc6d24099eb93ecfeb9bf807ab9e5130a01749", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/00cc6d24099eb93ecfeb9bf807ab9e5130a01749/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c53f8a920ec065ed109e2834572645cc47a9e597", "url": "https://api.github.com/repos/rust-lang/rust/commits/c53f8a920ec065ed109e2834572645cc47a9e597", "html_url": "https://github.com/rust-lang/rust/commit/c53f8a920ec065ed109e2834572645cc47a9e597"}, {"sha": "3ff7a3d4ec98bcb063d846aee6037ea48ba5a15d", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ff7a3d4ec98bcb063d846aee6037ea48ba5a15d", "html_url": "https://github.com/rust-lang/rust/commit/3ff7a3d4ec98bcb063d846aee6037ea48ba5a15d"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "d1a08660cb9c21b6b9e824b6370ee6912bdd12d0", "filename": "src/liblibc/lib.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/00cc6d24099eb93ecfeb9bf807ab9e5130a01749/src%2Fliblibc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00cc6d24099eb93ecfeb9bf807ab9e5130a01749/src%2Fliblibc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblibc%2Flib.rs?ref=00cc6d24099eb93ecfeb9bf807ab9e5130a01749", "patch": "@@ -103,6 +103,7 @@ pub use types::os::arch::c95::{c_ushort, clock_t, ptrdiff_t, c_schar};\n pub use types::os::arch::c95::{size_t, time_t, suseconds_t};\n pub use types::os::arch::c99::{c_longlong, c_ulonglong};\n pub use types::os::arch::c99::{intptr_t, uintptr_t};\n+pub use types::os::arch::c99::{intmax_t, uintmax_t};\n pub use types::os::arch::posix88::{dev_t, ino_t, mode_t};\n pub use types::os::arch::posix88::{off_t, pid_t, ssize_t};\n \n@@ -533,6 +534,8 @@ pub mod types {\n                 pub type c_ulonglong = u64;\n                 pub type intptr_t = i32;\n                 pub type uintptr_t = u32;\n+                pub type intmax_t = i64;\n+                pub type uintmax_t = u64;\n             }\n             #[cfg(any(target_arch = \"x86\",\n                       target_arch = \"mips\",\n@@ -740,6 +743,8 @@ pub mod types {\n                 pub type c_ulonglong = u64;\n                 pub type intptr_t = i64;\n                 pub type uintptr_t = u64;\n+                pub type intmax_t = i64;\n+                pub type uintmax_t = u64;\n             }\n             pub mod posix88 {\n                 pub type off_t = i64;\n@@ -973,6 +978,8 @@ pub mod types {\n                 pub type c_ulonglong = u64;\n                 pub type intptr_t = i64;\n                 pub type uintptr_t = u64;\n+                pub type intmax_t = i64;\n+                pub type uintmax_t = u64;\n             }\n             pub mod posix88 {\n                 pub type off_t = i64;\n@@ -1186,6 +1193,8 @@ pub mod types {\n                 pub type c_ulonglong = u64;\n                 pub type intptr_t = i64;\n                 pub type uintptr_t = u64;\n+                pub type intmax_t = i64;\n+                pub type uintmax_t = u64;\n             }\n             pub mod posix88 {\n                 pub type off_t = i64;\n@@ -1426,6 +1435,9 @@ pub mod types {\n                 pub type uintptr_t = u32;\n                 #[cfg(target_arch = \"x86_64\")]\n                 pub type uintptr_t = u64;\n+\n+                pub type intmax_t = i64;\n+                pub type uintmax_t = u64;\n             }\n \n             pub mod posix88 {\n@@ -1815,6 +1827,8 @@ pub mod types {\n                 pub type c_ulonglong = u64;\n                 pub type intptr_t = i32;\n                 pub type uintptr_t = u32;\n+                pub type intmax_t = i64;\n+                pub type uintmax_t = u64;\n             }\n             pub mod posix88 {\n                 pub type off_t = i64;\n@@ -1916,6 +1930,8 @@ pub mod types {\n                 pub type c_ulonglong = u64;\n                 pub type intptr_t = i64;\n                 pub type uintptr_t = u64;\n+                pub type intmax_t = i64;\n+                pub type uintmax_t = u64;\n             }\n             pub mod posix88 {\n                 pub type off_t = i64;"}]}