{"sha": "283e0e670b7b6f925d5973f2b2b373304b17b114", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4M2UwZTY3MGI3YjZmOTI1ZDU5NzNmMmIyYjM3MzMwNGIxN2IxMTQ=", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2021-07-19T15:20:24Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2021-08-26T09:00:30Z"}, "message": "is_polymorphic doesn't matter for tests", "tree": {"sha": "cea9dc29a42f22748ab8e900a0df6eb2515acd48", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cea9dc29a42f22748ab8e900a0df6eb2515acd48"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/283e0e670b7b6f925d5973f2b2b373304b17b114", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/283e0e670b7b6f925d5973f2b2b373304b17b114", "html_url": "https://github.com/rust-lang/rust/commit/283e0e670b7b6f925d5973f2b2b373304b17b114", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/283e0e670b7b6f925d5973f2b2b373304b17b114/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ba8f4d2589a93063d6023a80d51619c60e33f43", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ba8f4d2589a93063d6023a80d51619c60e33f43", "html_url": "https://github.com/rust-lang/rust/commit/5ba8f4d2589a93063d6023a80d51619c60e33f43"}], "stats": {"total": 11, "additions": 3, "deletions": 8}, "files": [{"sha": "7e99a6ada2f938ed9d2f12275e53bf24ba70dccc", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/283e0e670b7b6f925d5973f2b2b373304b17b114/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/283e0e670b7b6f925d5973f2b2b373304b17b114/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=283e0e670b7b6f925d5973f2b2b373304b17b114", "patch": "@@ -294,11 +294,8 @@ impl<'tcx> Body<'tcx> {\n     /// The returned MIR contains no `LocalDecl`s (even for the return place) or source scopes. It\n     /// is only useful for testing but cannot be `#[cfg(test)]` because it is used in a different\n     /// crate.\n-    pub fn new_cfg_only(\n-        tcx: TyCtxt<'tcx>,\n-        basic_blocks: IndexVec<BasicBlock, BasicBlockData<'tcx>>,\n-    ) -> Self {\n-        let mut body = Body {\n+    pub fn new_cfg_only(basic_blocks: IndexVec<BasicBlock, BasicBlockData<'tcx>>) -> Self {\n+        Body {\n             phase: MirPhase::Build,\n             source: MirSource::item(DefId::local(CRATE_DEF_INDEX)),\n             basic_blocks,\n@@ -314,9 +311,7 @@ impl<'tcx> Body<'tcx> {\n             is_polymorphic: false,\n             predecessor_cache: PredecessorCache::new(),\n             is_cyclic: GraphIsCyclicCache::new(),\n-        };\n-        body.is_polymorphic = body.has_param_types_or_consts(tcx);\n-        body\n+        }\n     }\n \n     #[inline]"}]}