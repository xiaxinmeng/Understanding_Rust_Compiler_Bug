{"sha": "bb7ab5c85db7954f2662e84a88610b8b39b501c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiN2FiNWM4NWRiNzk1NGYyNjYyZTg0YTg4NjEwYjhiMzliNTAxYzc=", "commit": {"author": {"name": "memoryleak47", "email": "memoryleak47@protonmail.ch", "date": "2018-03-23T05:10:03Z"}, "committer": {"name": "memoryleak47", "email": "memoryleak47@protonmail.ch", "date": "2018-03-23T05:10:03Z"}, "message": "some tidy fixes", "tree": {"sha": "3a25080d7f1bb2613205bd01a2f5248cc80a7525", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a25080d7f1bb2613205bd01a2f5248cc80a7525"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb7ab5c85db7954f2662e84a88610b8b39b501c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb7ab5c85db7954f2662e84a88610b8b39b501c7", "html_url": "https://github.com/rust-lang/rust/commit/bb7ab5c85db7954f2662e84a88610b8b39b501c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb7ab5c85db7954f2662e84a88610b8b39b501c7/comments", "author": {"login": "memoryleak47", "id": 5725430, "node_id": "MDQ6VXNlcjU3MjU0MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/5725430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/memoryleak47", "html_url": "https://github.com/memoryleak47", "followers_url": "https://api.github.com/users/memoryleak47/followers", "following_url": "https://api.github.com/users/memoryleak47/following{/other_user}", "gists_url": "https://api.github.com/users/memoryleak47/gists{/gist_id}", "starred_url": "https://api.github.com/users/memoryleak47/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/memoryleak47/subscriptions", "organizations_url": "https://api.github.com/users/memoryleak47/orgs", "repos_url": "https://api.github.com/users/memoryleak47/repos", "events_url": "https://api.github.com/users/memoryleak47/events{/privacy}", "received_events_url": "https://api.github.com/users/memoryleak47/received_events", "type": "User", "site_admin": false}, "committer": {"login": "memoryleak47", "id": 5725430, "node_id": "MDQ6VXNlcjU3MjU0MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/5725430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/memoryleak47", "html_url": "https://github.com/memoryleak47", "followers_url": "https://api.github.com/users/memoryleak47/followers", "following_url": "https://api.github.com/users/memoryleak47/following{/other_user}", "gists_url": "https://api.github.com/users/memoryleak47/gists{/gist_id}", "starred_url": "https://api.github.com/users/memoryleak47/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/memoryleak47/subscriptions", "organizations_url": "https://api.github.com/users/memoryleak47/orgs", "repos_url": "https://api.github.com/users/memoryleak47/repos", "events_url": "https://api.github.com/users/memoryleak47/events{/privacy}", "received_events_url": "https://api.github.com/users/memoryleak47/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4023f054b1830f22459b882271a8e0430da2fcb5", "url": "https://api.github.com/repos/rust-lang/rust/commits/4023f054b1830f22459b882271a8e0430da2fcb5", "html_url": "https://github.com/rust-lang/rust/commit/4023f054b1830f22459b882271a8e0430da2fcb5"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "41fc67a66f47df828fd6f380c9c8e8607a78f57e", "filename": "src/tools/compiletest/src/common.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/bb7ab5c85db7954f2662e84a88610b8b39b501c7/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb7ab5c85db7954f2662e84a88610b8b39b501c7/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs?ref=bb7ab5c85db7954f2662e84a88610b8b39b501c7", "patch": "@@ -106,6 +106,13 @@ impl CompareMode {\n             CompareMode::Nll => \"nll\"\n         }\n     }\n+\n+    pub fn parse(s: String) -> CompareMode {\n+        match s.as_str() {\n+            \"nll\" => CompareMode::Nll,\n+            x => panic!(\"unknown --compare-mode option: {}\", x),\n+        }\n+    }\n }\n \n #[derive(Clone)]\n@@ -246,7 +253,11 @@ pub struct TestPaths {\n }\n \n /// Used by `ui` tests to generate things like `foo.stderr` from `foo.rs`.\n-pub fn expected_output_path(testpaths: &TestPaths, revision: Option<&str>, compare_mode: &Option<CompareMode>, kind: &str) -> PathBuf {\n+pub fn expected_output_path(testpaths: &TestPaths,\n+                            revision: Option<&str>,\n+                            compare_mode: &Option<CompareMode>,\n+                            kind: &str) -> PathBuf {\n+\n     assert!(UI_EXTENSIONS.contains(&kind));\n     let mut parts = Vec::new();\n "}, {"sha": "795ad0c74b7c2deafd40632499bbf7a1de05a32e", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bb7ab5c85db7954f2662e84a88610b8b39b501c7/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb7ab5c85db7954f2662e84a88610b8b39b501c7/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=bb7ab5c85db7954f2662e84a88610b8b39b501c7", "patch": "@@ -327,7 +327,7 @@ pub fn parse_config(args: Vec<String>) -> Config {\n         quiet: matches.opt_present(\"quiet\"),\n         color,\n         remote_test_client: matches.opt_str(\"remote-test-client\").map(PathBuf::from),\n-        compare_mode: matches.opt_str(\"compare-mode\").and_then(|x| if x == \"nll\" { Some(CompareMode::Nll) } else { panic!(\"Unknown compare-mode {}\", x) }),\n+        compare_mode: matches.opt_str(\"compare-mode\").map(CompareMode::parse),\n \n         cc: matches.opt_str(\"cc\").unwrap(),\n         cxx: matches.opt_str(\"cxx\").unwrap(),\n@@ -696,7 +696,10 @@ fn up_to_date(config: &Config, testpaths: &TestPaths, props: &EarlyProps) -> boo\n     // UI test files.\n     for extension in UI_EXTENSIONS {\n         for revision in &props.revisions {\n-            let path = &expected_output_path(testpaths, Some(revision), &config.compare_mode, extension);\n+            let path = &expected_output_path(testpaths,\n+                                             Some(revision),\n+                                             &config.compare_mode,\n+                                             extension);\n             inputs.push(mtime(path));\n         }\n "}, {"sha": "540ff13eae55081a460bddcdfd8fa32143ce69a4", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bb7ab5c85db7954f2662e84a88610b8b39b501c7/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb7ab5c85db7954f2662e84a88610b8b39b501c7/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=bb7ab5c85db7954f2662e84a88610b8b39b501c7", "patch": "@@ -2803,7 +2803,11 @@ impl<'test> TestCx<'test> {\n     }\n \n     fn expected_output_path(&self, kind: &str) -> Result<PathBuf, String> {\n-        let mut path = expected_output_path(&self.testpaths, self.revision, &self.config.compare_mode, kind);\n+        let mut path = expected_output_path(&self.testpaths,\n+                                            self.revision,\n+                                            &self.config.compare_mode,\n+                                            kind);\n+\n         if !path.exists() && self.config.compare_mode.is_some() {\n             // fallback!\n             path = expected_output_path(&self.testpaths, self.revision, &None, kind);"}]}