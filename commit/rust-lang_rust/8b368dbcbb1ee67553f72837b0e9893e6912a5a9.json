{"sha": "8b368dbcbb1ee67553f72837b0e9893e6912a5a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiMzY4ZGJjYmIxZWU2NzU1M2Y3MjgzN2IwZTk4OTNlNjkxMmE1YTk=", "commit": {"author": {"name": "Andrew Paverd", "email": "andrew.paverd@microsoft.com", "date": "2020-06-25T14:45:24Z"}, "committer": {"name": "Andrew Paverd", "email": "andrew.paverd@microsoft.com", "date": "2020-06-25T14:45:24Z"}, "message": "Bootstrap: fallback detection of Windows", "tree": {"sha": "23989accda154fe9e6f22796b12b961b0073efd9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/23989accda154fe9e6f22796b12b961b0073efd9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b368dbcbb1ee67553f72837b0e9893e6912a5a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b368dbcbb1ee67553f72837b0e9893e6912a5a9", "html_url": "https://github.com/rust-lang/rust/commit/8b368dbcbb1ee67553f72837b0e9893e6912a5a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b368dbcbb1ee67553f72837b0e9893e6912a5a9/comments", "author": {"login": "ajpaverd", "id": 207321, "node_id": "MDQ6VXNlcjIwNzMyMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/207321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajpaverd", "html_url": "https://github.com/ajpaverd", "followers_url": "https://api.github.com/users/ajpaverd/followers", "following_url": "https://api.github.com/users/ajpaverd/following{/other_user}", "gists_url": "https://api.github.com/users/ajpaverd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajpaverd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajpaverd/subscriptions", "organizations_url": "https://api.github.com/users/ajpaverd/orgs", "repos_url": "https://api.github.com/users/ajpaverd/repos", "events_url": "https://api.github.com/users/ajpaverd/events{/privacy}", "received_events_url": "https://api.github.com/users/ajpaverd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ajpaverd", "id": 207321, "node_id": "MDQ6VXNlcjIwNzMyMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/207321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajpaverd", "html_url": "https://github.com/ajpaverd", "followers_url": "https://api.github.com/users/ajpaverd/followers", "following_url": "https://api.github.com/users/ajpaverd/following{/other_user}", "gists_url": "https://api.github.com/users/ajpaverd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajpaverd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajpaverd/subscriptions", "organizations_url": "https://api.github.com/users/ajpaverd/orgs", "repos_url": "https://api.github.com/users/ajpaverd/repos", "events_url": "https://api.github.com/users/ajpaverd/events{/privacy}", "received_events_url": "https://api.github.com/users/ajpaverd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c90ae8404b6b83bc3cba35840ddf7edd500cc86", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c90ae8404b6b83bc3cba35840ddf7edd500cc86", "html_url": "https://github.com/rust-lang/rust/commit/3c90ae8404b6b83bc3cba35840ddf7edd500cc86"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "1949d70e5deea1b370f1f583651b02a39a99a56a", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8b368dbcbb1ee67553f72837b0e9893e6912a5a9/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/8b368dbcbb1ee67553f72837b0e9893e6912a5a9/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=8b368dbcbb1ee67553f72837b0e9893e6912a5a9", "patch": "@@ -184,6 +184,7 @@ def default_build_triple():\n     ostype = require([\"uname\", \"-s\"], exit=required)\n     cputype = require(['uname', '-m'], exit=required)\n \n+    # If we do not have `uname`, assume Windows.\n     if ostype is None or cputype is None:\n         return 'x86_64-pc-windows-msvc'\n \n@@ -236,6 +237,11 @@ def default_build_triple():\n         if ostype.endswith('WOW64'):\n             cputype = 'x86_64'\n         ostype = 'pc-windows-gnu'\n+    elif sys.platform == 'win32':\n+        # Some Windows platforms might have a `uname` command that returns a\n+        # non-standard string (e.g. gnuwin32 tools returns `windows32`). In\n+        # these cases, fall back to using sys.platform.\n+        return 'x86_64-pc-windows-msvc'\n     else:\n         err = \"unknown OS type: {}\".format(ostype)\n         sys.exit(err)"}]}