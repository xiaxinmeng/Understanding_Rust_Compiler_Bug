{"sha": "98df45830a04498c9207c4251a16ef6c80629146", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4ZGY0NTgzMGEwNDQ5OGM5MjA3YzQyNTFhMTZlZjZjODA2MjkxNDY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-10-03T00:36:50Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-10-03T00:36:50Z"}, "message": "Auto merge of #28672 - sanxiyn:const-eval-span, r=alexcrichton\n\nFix #28402.", "tree": {"sha": "b77e86d28652807496d6eb6424b029d446a9ec67", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b77e86d28652807496d6eb6424b029d446a9ec67"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98df45830a04498c9207c4251a16ef6c80629146", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98df45830a04498c9207c4251a16ef6c80629146", "html_url": "https://github.com/rust-lang/rust/commit/98df45830a04498c9207c4251a16ef6c80629146", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98df45830a04498c9207c4251a16ef6c80629146/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bfb26033af68949646081429040db606a044db22", "url": "https://api.github.com/repos/rust-lang/rust/commits/bfb26033af68949646081429040db606a044db22", "html_url": "https://github.com/rust-lang/rust/commit/bfb26033af68949646081429040db606a044db22"}, {"sha": "4fb789b86eb4d9f50c1ae6477126cd84025ff566", "url": "https://api.github.com/repos/rust-lang/rust/commits/4fb789b86eb4d9f50c1ae6477126cd84025ff566", "html_url": "https://github.com/rust-lang/rust/commit/4fb789b86eb4d9f50c1ae6477126cd84025ff566"}], "stats": {"total": 46, "additions": 37, "deletions": 9}, "files": [{"sha": "a8f20815a9a8b872e126e4f3835834cf1fafa6c6", "filename": "src/librustc/middle/check_match.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/98df45830a04498c9207c4251a16ef6c80629146/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98df45830a04498c9207c4251a16ef6c80629146/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs?ref=98df45830a04498c9207c4251a16ef6c80629146", "patch": "@@ -281,11 +281,10 @@ fn check_for_static_nan(cx: &MatchCheckCtxt, pat: &Pat) {\n                 Ok(_) => {}\n \n                 Err(err) => {\n-                    let subspan = p.span.lo <= err.span.lo && err.span.hi <= p.span.hi;\n                     span_err!(cx.tcx.sess, err.span, E0471,\n                               \"constant evaluation error: {}\",\n                               err.description());\n-                    if !subspan {\n+                    if !p.span.contains(err.span) {\n                         cx.tcx.sess.span_note(p.span,\n                                               \"in pattern here\")\n                     }"}, {"sha": "a05d9b19d23213ab51b8d8aa3f0674f4037ed726", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/98df45830a04498c9207c4251a16ef6c80629146/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98df45830a04498c9207c4251a16ef6c80629146/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=98df45830a04498c9207c4251a16ef6c80629146", "patch": "@@ -1692,12 +1692,10 @@ pub fn ast_ty_to_ty<'tcx>(this: &AstConv<'tcx>,\n                     }\n                 }\n                 Err(ref r) => {\n-                    let subspan  =\n-                        ast_ty.span.lo <= r.span.lo && r.span.hi <= ast_ty.span.hi;\n                     span_err!(tcx.sess, r.span, E0250,\n                               \"array length constant evaluation error: {}\",\n                               r.description());\n-                    if !subspan {\n+                    if !ast_ty.span.contains(r.span) {\n                         span_note!(tcx.sess, ast_ty.span, \"for array length here\")\n                     }\n                     this.tcx().types.err"}, {"sha": "7a70bc73b7338886b991e32bdfbb37220a40032b", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/98df45830a04498c9207c4251a16ef6c80629146/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98df45830a04498c9207c4251a16ef6c80629146/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=98df45830a04498c9207c4251a16ef6c80629146", "patch": "@@ -1173,9 +1173,12 @@ fn convert_enum_def<'tcx>(tcx: &ty::ctxt<'tcx>,\n                 None\n             },\n             Err(err) => {\n-              span_err!(tcx.sess, err.span, E0080,\n-                        \"constant evaluation error: {}\",\n-                        err.description());\n+                span_err!(tcx.sess, err.span, E0080,\n+                          \"constant evaluation error: {}\",\n+                          err.description());\n+                if !e.span.contains(err.span) {\n+                    tcx.sess.span_note(e.span, \"for enum discriminant here\");\n+                }\n                 None\n             }\n         }"}, {"sha": "aa4dd1d53c502c07a17bb0faaeae08e95e8cd540", "filename": "src/libsyntax/codemap.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/98df45830a04498c9207c4251a16ef6c80629146/src%2Flibsyntax%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98df45830a04498c9207c4251a16ef6c80629146/src%2Flibsyntax%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fcodemap.rs?ref=98df45830a04498c9207c4251a16ef6c80629146", "patch": "@@ -142,6 +142,10 @@ impl Span {\n     pub fn substitute_dummy(self, other: Span) -> Span {\n         if self == DUMMY_SP { other } else { self }\n     }\n+\n+    pub fn contains(self, other: Span) -> bool {\n+        self.lo <= other.lo && other.hi <= self.hi\n+    }\n }\n \n #[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)]\n@@ -1011,7 +1015,7 @@ impl CodeMap {\n \n                     let span_comes_from_this_expansion =\n                         info.callee.span.map_or(span == info.call_site, |mac_span| {\n-                            mac_span.lo <= span.lo && span.hi <= mac_span.hi\n+                            mac_span.contains(span)\n                         });\n \n                     debug!(\"span_allows_unstable: span: {:?} call_site: {:?} callee: {:?}\","}, {"sha": "8e9209916f35b84c7088199fa32689a04e68feb3", "filename": "src/test/compile-fail/const-eval-span.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/98df45830a04498c9207c4251a16ef6c80629146/src%2Ftest%2Fcompile-fail%2Fconst-eval-span.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98df45830a04498c9207c4251a16ef6c80629146/src%2Ftest%2Fcompile-fail%2Fconst-eval-span.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-eval-span.rs?ref=98df45830a04498c9207c4251a16ef6c80629146", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Check that error in constant evaluation of enum discriminant\n+// provides the context for what caused the evaluation.\n+\n+struct S(i32);\n+\n+const CONSTANT: S = S(0);\n+//~^ ERROR: constant evaluation error: unsupported constant expr\n+\n+enum E {\n+    V = CONSTANT,\n+    //~^ NOTE: for enum discriminant here\n+}\n+\n+fn main() {}"}]}