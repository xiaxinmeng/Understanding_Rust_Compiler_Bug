{"sha": "c56a10ca3b5a72194034bb697ed8289e0635fb51", "node_id": "C_kwDOAAsO6NoAKGM1NmExMGNhM2I1YTcyMTk0MDM0YmI2OTdlZDgyODllMDYzNWZiNTE", "commit": {"author": {"name": "mark", "email": "markm@cs.wisc.edu", "date": "2022-01-23T00:49:12Z"}, "committer": {"name": "mark", "email": "markm@cs.wisc.edu", "date": "2022-03-16T15:35:24Z"}, "message": "rustc_error: make ErrorReported impossible to construct\n\nThere are a few places were we have to construct it, though, and a few\nplaces that are more invasive to change. To do this, we create a\nconstructor with a long obvious name.", "tree": {"sha": "370242856bbc635955969c4c2e8e733a068e32e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/370242856bbc635955969c4c2e8e733a068e32e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c56a10ca3b5a72194034bb697ed8289e0635fb51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c56a10ca3b5a72194034bb697ed8289e0635fb51", "html_url": "https://github.com/rust-lang/rust/commit/c56a10ca3b5a72194034bb697ed8289e0635fb51", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c56a10ca3b5a72194034bb697ed8289e0635fb51/comments", "author": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e439761b8fe67f39c1a987fae10433b9a29c045a", "url": "https://api.github.com/repos/rust-lang/rust/commits/e439761b8fe67f39c1a987fae10433b9a29c045a", "html_url": "https://github.com/rust-lang/rust/commit/e439761b8fe67f39c1a987fae10433b9a29c045a"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "4657791345b8eb22d3f0d1c304d829ca2132c2ff", "filename": "src/constant.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c56a10ca3b5a72194034bb697ed8289e0635fb51/src%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c56a10ca3b5a72194034bb697ed8289e0635fb51/src%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconstant.rs?ref=c56a10ca3b5a72194034bb697ed8289e0635fb51", "patch": "@@ -1,7 +1,6 @@\n //! Handling of `static`s, `const`s and promoted allocations\n \n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n-use rustc_errors::ErrorGuaranteed;\n use rustc_middle::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n use rustc_middle::mir::interpret::{\n     read_target_uint, AllocId, ConstAllocation, ConstValue, ErrorHandled, GlobalAlloc, Scalar,\n@@ -54,7 +53,7 @@ pub(crate) fn check_constants(fx: &mut FunctionCx<'_, '_, '_>) -> bool {\n                 {\n                     all_constants_ok = false;\n                     match err {\n-                        ErrorHandled::Reported(ErrorGuaranteed) | ErrorHandled::Linted => {\n+                        ErrorHandled::Reported(_) | ErrorHandled::Linted => {\n                             fx.tcx.sess.span_err(constant.span, \"erroneous constant encountered\");\n                         }\n                         ErrorHandled::TooGeneric => {"}]}