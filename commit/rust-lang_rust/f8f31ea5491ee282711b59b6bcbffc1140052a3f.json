{"sha": "f8f31ea5491ee282711b59b6bcbffc1140052a3f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4ZjMxZWE1NDkxZWUyODI3MTFiNTliNmJjYmZmYzExNDAwNTJhM2Y=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-17T14:01:34Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-17T14:01:34Z"}, "message": "Remove some TODOs.", "tree": {"sha": "cf07ae66b0da9a3d7013a7aa190d6f846060aa16", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf07ae66b0da9a3d7013a7aa190d6f846060aa16"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8f31ea5491ee282711b59b6bcbffc1140052a3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8f31ea5491ee282711b59b6bcbffc1140052a3f", "html_url": "https://github.com/rust-lang/rust/commit/f8f31ea5491ee282711b59b6bcbffc1140052a3f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8f31ea5491ee282711b59b6bcbffc1140052a3f/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12457607c3df8ff86f7c27348b60bbfe5643a33d", "url": "https://api.github.com/repos/rust-lang/rust/commits/12457607c3df8ff86f7c27348b60bbfe5643a33d", "html_url": "https://github.com/rust-lang/rust/commit/12457607c3df8ff86f7c27348b60bbfe5643a33d"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "25f5e54191471b0d2dd0e2bc3fc44c446aa59fc7", "filename": "src/interpreter.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f8f31ea5491ee282711b59b6bcbffc1140052a3f/src%2Finterpreter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8f31ea5491ee282711b59b6bcbffc1140052a3f/src%2Finterpreter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter.rs?ref=f8f31ea5491ee282711b59b6bcbffc1140052a3f", "patch": "@@ -305,8 +305,7 @@ impl<'a, 'tcx: 'a, 'arena> Interpreter<'a, 'tcx, 'arena> {\n                 let ptr_arg = try!(self.eval_operand(&args[0]));\n                 let offset_arg = try!(self.eval_operand(&args[1]));\n                 let ptr = try!(self.memory.read_ptr(ptr_arg));\n-                // TODO(tsion): read_isize\n-                let offset = try!(self.memory.read_int(offset_arg, 8));\n+                let offset = try!(self.memory.read_int(offset_arg, self.memory.pointer_size));\n                 let result_ptr = ptr.offset(offset as isize * pointee_size);\n                 try!(self.memory.write_ptr(dest, result_ptr));\n             }\n@@ -433,9 +432,14 @@ impl<'a, 'tcx: 'a, 'arena> Interpreter<'a, 'tcx, 'arena> {\n                         let dest_pointee_ty = pointee_type(dest_ty).unwrap();\n \n                         match (&src_pointee_ty.sty, &dest_pointee_ty.sty) {\n-                            (&ty::TyArray(_, length), &ty::TySlice(_)) =>\n-                                // TODO(tsion): Add write_usize? (Host/target issues.)\n-                                self.memory.write_uint(dest.offset(8), length as u64, 8),\n+                            (&ty::TyArray(_, length), &ty::TySlice(_)) => {\n+                                let size = self.memory.pointer_size;\n+                                self.memory.write_uint(\n+                                    dest.offset(size as isize),\n+                                    length as u64,\n+                                    size,\n+                                )\n+                            }\n \n                             _ => panic!(\"can't handle cast: {:?}\", rvalue),\n                         }"}]}