{"sha": "ef8df9df6811fc6597a40cf4cb853c30e9329206", "node_id": "C_kwDOAAsO6NoAKGVmOGRmOWRmNjgxMWZjNjU5N2E0MGNmNGNiODUzYzMwZTkzMjkyMDY", "commit": {"author": {"name": "Yechan Bae", "email": "yechan@gatech.edu", "date": "2021-10-01T18:26:04Z"}, "committer": {"name": "Yechan Bae", "email": "yechan@gatech.edu", "date": "2021-10-01T18:26:04Z"}, "message": "Forgot to bless ui-toml test", "tree": {"sha": "d396d5778d536d4eadd58ada60b1acff3f7b0394", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d396d5778d536d4eadd58ada60b1acff3f7b0394"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef8df9df6811fc6597a40cf4cb853c30e9329206", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef8df9df6811fc6597a40cf4cb853c30e9329206", "html_url": "https://github.com/rust-lang/rust/commit/ef8df9df6811fc6597a40cf4cb853c30e9329206", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef8df9df6811fc6597a40cf4cb853c30e9329206/comments", "author": {"login": "Qwaz", "id": 5073807, "node_id": "MDQ6VXNlcjUwNzM4MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/5073807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Qwaz", "html_url": "https://github.com/Qwaz", "followers_url": "https://api.github.com/users/Qwaz/followers", "following_url": "https://api.github.com/users/Qwaz/following{/other_user}", "gists_url": "https://api.github.com/users/Qwaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Qwaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Qwaz/subscriptions", "organizations_url": "https://api.github.com/users/Qwaz/orgs", "repos_url": "https://api.github.com/users/Qwaz/repos", "events_url": "https://api.github.com/users/Qwaz/events{/privacy}", "received_events_url": "https://api.github.com/users/Qwaz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Qwaz", "id": 5073807, "node_id": "MDQ6VXNlcjUwNzM4MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/5073807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Qwaz", "html_url": "https://github.com/Qwaz", "followers_url": "https://api.github.com/users/Qwaz/followers", "following_url": "https://api.github.com/users/Qwaz/following{/other_user}", "gists_url": "https://api.github.com/users/Qwaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Qwaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Qwaz/subscriptions", "organizations_url": "https://api.github.com/users/Qwaz/orgs", "repos_url": "https://api.github.com/users/Qwaz/repos", "events_url": "https://api.github.com/users/Qwaz/events{/privacy}", "received_events_url": "https://api.github.com/users/Qwaz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dfed2e31d5caa0ff7e53b442e8bd3585e78aba09", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfed2e31d5caa0ff7e53b442e8bd3585e78aba09", "html_url": "https://github.com/rust-lang/rust/commit/dfed2e31d5caa0ff7e53b442e8bd3585e78aba09"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "74ec93cfa55179081cd1a6c599a9392778269f5a", "filename": "tests/ui-toml/strict_non_send_field_in_send_ty/test.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ef8df9df6811fc6597a40cf4cb853c30e9329206/tests%2Fui-toml%2Fstrict_non_send_field_in_send_ty%2Ftest.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ef8df9df6811fc6597a40cf4cb853c30e9329206/tests%2Fui-toml%2Fstrict_non_send_field_in_send_ty%2Ftest.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fstrict_non_send_field_in_send_ty%2Ftest.stderr?ref=ef8df9df6811fc6597a40cf4cb853c30e9329206", "patch": "@@ -5,7 +5,7 @@ LL | unsafe impl Send for NoGeneric {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::non-send-field-in-send-ty` implied by `-D warnings`\n-note: the field `rc_is_not_send` has type `std::rc::Rc<std::string::String>` which is `!Send`\n+note: the type of field `rc_is_not_send` is `!Send`\n   --> $DIR/test.rs:8:5\n    |\n LL |     rc_is_not_send: Rc<String>,\n@@ -18,19 +18,19 @@ error: this implementation is unsound, as some fields in `MultiField<T>` are `!S\n LL | unsafe impl<T> Send for MultiField<T> {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-note: the field `field1` has type `T` which is `!Send`\n+note: the type of field `field1` is `!Send`\n   --> $DIR/test.rs:14:5\n    |\n LL |     field1: T,\n    |     ^^^^^^^^^\n    = help: add `T: Send` bound in `Send` impl\n-note: the field `field2` has type `T` which is `!Send`\n+note: the type of field `field2` is `!Send`\n   --> $DIR/test.rs:15:5\n    |\n LL |     field2: T,\n    |     ^^^^^^^^^\n    = help: add `T: Send` bound in `Send` impl\n-note: the field `field3` has type `T` which is `!Send`\n+note: the type of field `field3` is `!Send`\n   --> $DIR/test.rs:16:5\n    |\n LL |     field3: T,\n@@ -43,7 +43,7 @@ error: this implementation is unsound, as some fields in `MyOption<T>` are `!Sen\n LL | unsafe impl<T> Send for MyOption<T> {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-note: the field `0` has type `T` which is `!Send`\n+note: the type of field `0` is `!Send`\n   --> $DIR/test.rs:22:12\n    |\n LL |     MySome(T),\n@@ -56,31 +56,31 @@ error: this implementation is unsound, as some fields in `HeuristicTest` are `!S\n LL | unsafe impl Send for HeuristicTest {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-note: the field `field1` has type `std::vec::Vec<*const NonSend>` which is `!Send`\n+note: the type of field `field1` is `!Send`\n   --> $DIR/test.rs:34:5\n    |\n LL |     field1: Vec<*const NonSend>,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: use a thread-safe type that implements `Send`\n-note: the field `field2` has type `[*const NonSend; 3]` which is `!Send`\n+note: the type of field `field2` is `!Send`\n   --> $DIR/test.rs:35:5\n    |\n LL |     field2: [*const NonSend; 3],\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: use a thread-safe type that implements `Send`\n-note: the field `field3` has type `(*const NonSend, *const NonSend, *const NonSend)` which is `!Send`\n+note: the type of field `field3` is `!Send`\n   --> $DIR/test.rs:36:5\n    |\n LL |     field3: (*const NonSend, *const NonSend, *const NonSend),\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: use a thread-safe type that implements `Send`\n-note: the field `field4` has type `(*const NonSend, std::rc::Rc<u8>)` which is `!Send`\n+note: the type of field `field4` is `!Send`\n   --> $DIR/test.rs:37:5\n    |\n LL |     field4: (*const NonSend, Rc<u8>),\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: use a thread-safe type that implements `Send`\n-note: the field `field5` has type `std::vec::Vec<std::vec::Vec<*const NonSend>>` which is `!Send`\n+note: the type of field `field5` is `!Send`\n   --> $DIR/test.rs:38:5\n    |\n LL |     field5: Vec<Vec<*const NonSend>>,"}]}