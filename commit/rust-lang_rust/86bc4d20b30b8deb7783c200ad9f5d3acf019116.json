{"sha": "86bc4d20b30b8deb7783c200ad9f5d3acf019116", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2YmM0ZDIwYjMwYjhkZWI3NzgzYzIwMGFkOWY1ZDNhY2YwMTkxMTY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-10T16:48:39Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-10T20:30:24Z"}, "message": "Also reload when adding new examples, tests, etc", "tree": {"sha": "fa25cf01edc141a11405af52c5501e9209f01d5a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa25cf01edc141a11405af52c5501e9209f01d5a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86bc4d20b30b8deb7783c200ad9f5d3acf019116", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86bc4d20b30b8deb7783c200ad9f5d3acf019116", "html_url": "https://github.com/rust-lang/rust/commit/86bc4d20b30b8deb7783c200ad9f5d3acf019116", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86bc4d20b30b8deb7783c200ad9f5d3acf019116/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1eed627d909e897309b3d50654a592505654147", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1eed627d909e897309b3d50654a592505654147", "html_url": "https://github.com/rust-lang/rust/commit/c1eed627d909e897309b3d50654a592505654147"}], "stats": {"total": 69, "additions": 58, "deletions": 11}, "files": [{"sha": "728dc996243ff55bfc1bcc7487e058b6023912bc", "filename": "crates/rust-analyzer/src/global_state.rs", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/86bc4d20b30b8deb7783c200ad9f5d3acf019116/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86bc4d20b30b8deb7783c200ad9f5d3acf019116/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs?ref=86bc4d20b30b8deb7783c200ad9f5d3acf019116", "patch": "@@ -122,6 +122,9 @@ impl GlobalState {\n     }\n \n     pub(crate) fn process_changes(&mut self) -> bool {\n+        let mut fs_changes = Vec::new();\n+        let mut has_fs_changes = false;\n+\n         let change = {\n             let mut change = AnalysisChange::new();\n             let (vfs, line_endings_map) = &mut *self.vfs.write();\n@@ -130,13 +133,14 @@ impl GlobalState {\n                 return false;\n             }\n \n-            let fs_op = changed_files.iter().any(|it| it.is_created_or_deleted());\n-            if fs_op {\n-                let roots = self.source_root_config.partition(&vfs);\n-                change.set_roots(roots)\n-            }\n-\n             for file in changed_files {\n+                if file.is_created_or_deleted() {\n+                    if let Some(path) = vfs.file_path(file.file_id).as_path() {\n+                        fs_changes.push((path.to_path_buf(), file.change_kind));\n+                        has_fs_changes = true;\n+                    }\n+                }\n+\n                 let text = if file.exists() {\n                     let bytes = vfs.file_contents(file.file_id).to_vec();\n                     match String::from_utf8(bytes).ok() {\n@@ -152,10 +156,15 @@ impl GlobalState {\n                 };\n                 change.change_file(file.file_id, text);\n             }\n+            if has_fs_changes {\n+                let roots = self.source_root_config.partition(&vfs);\n+                change.set_roots(roots);\n+            }\n             change\n         };\n \n         self.analysis_host.apply_change(change);\n+        self.maybe_refresh(&fs_changes);\n         true\n     }\n "}, {"sha": "cea03fb6b6c782b343e8c75f185b7f6c96ed16e4", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/86bc4d20b30b8deb7783c200ad9f5d3acf019116/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86bc4d20b30b8deb7783c200ad9f5d3acf019116/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=86bc4d20b30b8deb7783c200ad9f5d3acf019116", "patch": "@@ -22,6 +22,7 @@ use crate::{\n     Result,\n };\n use ra_project_model::ProjectWorkspace;\n+use vfs::ChangeKind;\n \n pub fn main_loop(config: Config, connection: Connection) -> Result<()> {\n     log::info!(\"initial config: {:#?}\", config);\n@@ -428,7 +429,9 @@ impl GlobalState {\n                 if let Some(flycheck) = &this.flycheck {\n                     flycheck.handle.update();\n                 }\n-                this.maybe_refresh(params.text_document.uri.as_str());\n+                if let Ok(abs_path) = from_proto::abs_path(&params.text_document.uri) {\n+                    this.maybe_refresh(&[(abs_path, ChangeKind::Modify)]);\n+                }\n                 Ok(())\n             })?\n             .on::<lsp_types::notification::DidChangeConfiguration>(|this, _params| {"}, {"sha": "a425320f6819a2e7db3cf6269c2ba616bce69b86", "filename": "crates/rust-analyzer/src/reload.rs", "status": "modified", "additions": 38, "deletions": 3, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/86bc4d20b30b8deb7783c200ad9f5d3acf019116/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86bc4d20b30b8deb7783c200ad9f5d3acf019116/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freload.rs?ref=86bc4d20b30b8deb7783c200ad9f5d3acf019116", "patch": "@@ -6,7 +6,7 @@ use flycheck::FlycheckHandle;\n use ra_db::{CrateGraph, SourceRoot, VfsPath};\n use ra_ide::AnalysisChange;\n use ra_project_model::{PackageRoot, ProcMacroClient, ProjectWorkspace};\n-use vfs::{file_set::FileSetConfig, AbsPath};\n+use vfs::{file_set::FileSetConfig, AbsPath, AbsPathBuf, ChangeKind};\n \n use crate::{\n     config::{Config, FilesWatcher, LinkedProject},\n@@ -27,8 +27,8 @@ impl GlobalState {\n             self.reload_flycheck();\n         }\n     }\n-    pub(crate) fn maybe_refresh(&mut self, saved_doc_url: &str) {\n-        if !(saved_doc_url.ends_with(\"Cargo.toml\") || saved_doc_url.ends_with(\"Cargo.lock\")) {\n+    pub(crate) fn maybe_refresh(&mut self, changes: &[(AbsPathBuf, ChangeKind)]) {\n+        if !changes.iter().any(|(path, kind)| is_interesting(path, *kind)) {\n             return;\n         }\n         match self.status {\n@@ -40,6 +40,41 @@ impl GlobalState {\n         } else {\n             self.transition(Status::NeedsReload);\n         }\n+\n+        fn is_interesting(path: &AbsPath, change_kind: ChangeKind) -> bool {\n+            const IMPLICIT_TARGET_FILES: &[&str] = &[\"build.rs\", \"src/main.rs\", \"src/lib.rs\"];\n+            const IMPLICIT_TARGET_DIRS: &[&str] = &[\"src/bin\", \"examples\", \"tests\", \"benches\"];\n+\n+            if path.ends_with(\"Cargo.toml\") || path.ends_with(\"Cargo.lock\") {\n+                return true;\n+            }\n+            if change_kind == ChangeKind::Modify {\n+                return false;\n+            }\n+            if path.extension().map(|it| it.to_str()) != Some(\"rs\".into()) {\n+                return false;\n+            }\n+            if IMPLICIT_TARGET_FILES.iter().any(|it| path.ends_with(it)) {\n+                return true;\n+            }\n+            let parent = match path.parent() {\n+                Some(it) => it,\n+                None => return false,\n+            };\n+            if IMPLICIT_TARGET_DIRS.iter().any(|it| parent.ends_with(it)) {\n+                return true;\n+            }\n+            if path.ends_with(\"main.rs\") {\n+                let grand_parent = match parent.parent() {\n+                    Some(it) => it,\n+                    None => return false,\n+                };\n+                if IMPLICIT_TARGET_DIRS.iter().any(|it| grand_parent.ends_with(it)) {\n+                    return true;\n+                }\n+            }\n+            false\n+        }\n     }\n     pub(crate) fn transition(&mut self, new_status: Status) {\n         self.status = new_status;"}, {"sha": "569da8a1c9dde580cb565aff84af0d48eac81e66", "filename": "crates/vfs/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86bc4d20b30b8deb7783c200ad9f5d3acf019116/crates%2Fvfs%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86bc4d20b30b8deb7783c200ad9f5d3acf019116/crates%2Fvfs%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fvfs%2Fsrc%2Flib.rs?ref=86bc4d20b30b8deb7783c200ad9f5d3acf019116", "patch": "@@ -70,7 +70,7 @@ impl ChangedFile {\n     }\n }\n \n-#[derive(Eq, PartialEq)]\n+#[derive(Eq, PartialEq, Copy, Clone)]\n pub enum ChangeKind {\n     Create,\n     Modify,"}]}