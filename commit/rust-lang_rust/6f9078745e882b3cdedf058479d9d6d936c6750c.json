{"sha": "6f9078745e882b3cdedf058479d9d6d936c6750c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmOTA3ODc0NWU4ODJiM2NkZWRmMDU4NDc5ZDlkNmQ5MzZjNjc1MGM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-09-24T09:02:19Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-09-24T09:02:19Z"}, "message": "Auto merge of #44786 - thombles:tk/i41314, r=petrochenkov\n\nImprove diagnostics when attempting to match tuple enum variant with struct pattern\n\nAdds an extra note as below to explain that a tuple pattern was probably intended.\n\n```\nerror[E0026]: variant `X::Y` does not have a field named `data`\n  --> src/main.rs:18:16\n   |\n18 |         X::Y { data } => println!(\"The data is {}\", data)\n   |                ^^^^ variant `X::Y` does not have field `data`\n\nerror[E0027]: pattern does not mention field `0`\n  --> src/main.rs:18:9\n   |\n18 |         X::Y { data } => println!(\"The data is {}\", data)\n   |         ^^^^^^^^^^^^^ missing field `0`\n   |\n   = note: trying to match a tuple variant with a struct variant pattern\n```\n\nFixes #41314.", "tree": {"sha": "2d86c32f4dfd472742a6c422a216db175d0b892b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d86c32f4dfd472742a6c422a216db175d0b892b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f9078745e882b3cdedf058479d9d6d936c6750c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f9078745e882b3cdedf058479d9d6d936c6750c", "html_url": "https://github.com/rust-lang/rust/commit/6f9078745e882b3cdedf058479d9d6d936c6750c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f9078745e882b3cdedf058479d9d6d936c6750c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "acb73dbe8b311eb2ffa640ac3e01795d84159df4", "url": "https://api.github.com/repos/rust-lang/rust/commits/acb73dbe8b311eb2ffa640ac3e01795d84159df4", "html_url": "https://github.com/rust-lang/rust/commit/acb73dbe8b311eb2ffa640ac3e01795d84159df4"}, {"sha": "def660cad5c77478c28c3d4092e8d17367050935", "url": "https://api.github.com/repos/rust-lang/rust/commits/def660cad5c77478c28c3d4092e8d17367050935", "html_url": "https://github.com/rust-lang/rust/commit/def660cad5c77478c28c3d4092e8d17367050935"}], "stats": {"total": 48, "additions": 43, "deletions": 5}, "files": [{"sha": "d942b2d123070da587408d319dc6d1211f928371", "filename": "src/librustc_typeck/check/_match.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6f9078745e882b3cdedf058479d9d6d936c6750c/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f9078745e882b3cdedf058479d9d6d936c6750c/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2F_match.rs?ref=6f9078745e882b3cdedf058479d9d6d936c6750c", "patch": "@@ -787,11 +787,14 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n             for field in variant.fields\n                 .iter()\n                 .filter(|field| !used_fields.contains_key(&field.name)) {\n-                struct_span_err!(tcx.sess, span, E0027,\n-                                \"pattern does not mention field `{}`\",\n-                                field.name)\n-                                .span_label(span, format!(\"missing field `{}`\", field.name))\n-                                .emit();\n+                let mut diag = struct_span_err!(tcx.sess, span, E0027,\n+                                                \"pattern does not mention field `{}`\",\n+                                                field.name);\n+                diag.span_label(span, format!(\"missing field `{}`\", field.name));\n+                if variant.ctor_kind == CtorKind::Fn {\n+                    diag.note(\"trying to match a tuple variant with a struct variant pattern\");\n+                }\n+                diag.emit();\n             }\n         }\n     }"}, {"sha": "5127a8ce1748223be552a2a13649cd4871e6306f", "filename": "src/test/ui/type-check/issue-41314.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/6f9078745e882b3cdedf058479d9d6d936c6750c/src%2Ftest%2Fui%2Ftype-check%2Fissue-41314.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f9078745e882b3cdedf058479d9d6d936c6750c/src%2Ftest%2Fui%2Ftype-check%2Fissue-41314.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-check%2Fissue-41314.rs?ref=6f9078745e882b3cdedf058479d9d6d936c6750c", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+enum X {\n+    Y(u32)\n+}\n+\n+fn main() {\n+    match X::Y(0) {\n+        X::Y { number } => {}\n+    }\n+}"}, {"sha": "acae7a350877aa51b40039d1186a70bafb3a7a0a", "filename": "src/test/ui/type-check/issue-41314.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/6f9078745e882b3cdedf058479d9d6d936c6750c/src%2Ftest%2Fui%2Ftype-check%2Fissue-41314.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f9078745e882b3cdedf058479d9d6d936c6750c/src%2Ftest%2Fui%2Ftype-check%2Fissue-41314.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-check%2Fissue-41314.stderr?ref=6f9078745e882b3cdedf058479d9d6d936c6750c", "patch": "@@ -0,0 +1,16 @@\n+error[E0026]: variant `X::Y` does not have a field named `number`\n+  --> $DIR/issue-41314.rs:17:16\n+   |\n+17 |         X::Y { number } => {}\n+   |                ^^^^^^ variant `X::Y` does not have field `number`\n+\n+error[E0027]: pattern does not mention field `0`\n+  --> $DIR/issue-41314.rs:17:9\n+   |\n+17 |         X::Y { number } => {}\n+   |         ^^^^^^^^^^^^^^^ missing field `0`\n+   |\n+   = note: trying to match a tuple variant with a struct variant pattern\n+\n+error: aborting due to 2 previous errors\n+"}]}