{"sha": "b9d879876ead547b1f42d392438f0e4fb682c037", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5ZDg3OTg3NmVhZDU0N2IxZjQyZDM5MjQzOGYwZTRmYjY4MmMwMzc=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-08-22T12:25:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-22T12:25:18Z"}, "message": "Merge #9979\n\n9979: fix: Incorrect up-mapping for tokens in derive attributes r=Veykril a=Veykril\n\nMerely detaching the attributes causes incorrect spans to appear when mapping tokens up as the token ids resolve to the ranges of the stripped item so all the text ranges of its tokens are actually lower than the non-stripped ones.\r\n\r\nSame fix as with attributes can be applied here, just replace the derive attribute with an equal amount of whitespace.\r\n\r\nFixes #9387\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "2c4a947d351b35773f01ef667c2057e09d3b641e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c4a947d351b35773f01ef667c2057e09d3b641e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9d879876ead547b1f42d392438f0e4fb682c037", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhIkIuCRBK7hj4Ov3rIwAA1AoIAJhI8hhrqAPFhNfnFbFAPSHX\nP0pHrf+wZW4hMHVpJxA6YWeDGHUVP5wUDtw6W2/pthA0xe/BO97Qob28eVcJzOyp\nyar074uCPFO80JcoZNncyJ+lHj9Mru7srCtPB8NjJ3VK9HwWJZyMxBLHNeJ8snxS\n9bXIzjHDszbqANzKFSOnF1lExbM61aNdCPmApkL72OavwNHwqKKeDjEd+ShS0hEO\nYeOP12z2q/c89BDg6ZW7Y6XdFtFLa7rxWm9+6EYwnoljK/46EQ49cJ1LrEH2Rp8Q\nHDspQ+uWuCK35hkzK1YDXiKtuBZe1bLka7eWp8dnMAVbSfiovzFfOfHgl+g0hms=\n=m3Am\n-----END PGP SIGNATURE-----\n", "payload": "tree 2c4a947d351b35773f01ef667c2057e09d3b641e\nparent e535791756e4ca8b5b610afa9c0cc1dc5fde9906\nparent 5507512eafdbe3fd8ad42e608c2feb6b16a82b49\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1629635118 +0000\ncommitter GitHub <noreply@github.com> 1629635118 +0000\n\nMerge #9979\n\n9979: fix: Incorrect up-mapping for tokens in derive attributes r=Veykril a=Veykril\n\nMerely detaching the attributes causes incorrect spans to appear when mapping tokens up as the token ids resolve to the ranges of the stripped item so all the text ranges of its tokens are actually lower than the non-stripped ones.\r\n\r\nSame fix as with attributes can be applied here, just replace the derive attribute with an equal amount of whitespace.\r\n\r\nFixes #9387\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9d879876ead547b1f42d392438f0e4fb682c037", "html_url": "https://github.com/rust-lang/rust/commit/b9d879876ead547b1f42d392438f0e4fb682c037", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9d879876ead547b1f42d392438f0e4fb682c037/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e535791756e4ca8b5b610afa9c0cc1dc5fde9906", "url": "https://api.github.com/repos/rust-lang/rust/commits/e535791756e4ca8b5b610afa9c0cc1dc5fde9906", "html_url": "https://github.com/rust-lang/rust/commit/e535791756e4ca8b5b610afa9c0cc1dc5fde9906"}, {"sha": "5507512eafdbe3fd8ad42e608c2feb6b16a82b49", "url": "https://api.github.com/repos/rust-lang/rust/commits/5507512eafdbe3fd8ad42e608c2feb6b16a82b49", "html_url": "https://github.com/rust-lang/rust/commit/5507512eafdbe3fd8ad42e608c2feb6b16a82b49"}], "stats": {"total": 33, "additions": 23, "deletions": 10}, "files": [{"sha": "0ad48a470b2953c42a8aa07437ea623afce99d15", "filename": "crates/hir_expand/src/input.rs", "status": "modified", "additions": 23, "deletions": 10, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/b9d879876ead547b1f42d392438f0e4fb682c037/crates%2Fhir_expand%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9d879876ead547b1f42d392438f0e4fb682c037/crates%2Fhir_expand%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Finput.rs?ref=b9d879876ead547b1f42d392438f0e4fb682c037", "patch": "@@ -40,7 +40,7 @@ fn remove_derives_up_to(item: ast::Item, attr_index: usize) -> ast::Item {\n             attr.path().and_then(|path| path.as_single_segment()).and_then(|seg| seg.name_ref())\n         {\n             if name.as_name() == name![derive] {\n-                attr.syntax().detach();\n+                replace_attr(&item, &attr);\n             }\n         }\n     }\n@@ -54,10 +54,14 @@ fn remove_attr_invoc(item: ast::Item, attr_index: usize) -> ast::Item {\n         .attrs()\n         .nth(attr_index)\n         .unwrap_or_else(|| panic!(\"cannot find attribute #{}\", attr_index));\n+    replace_attr(&item, &attr);\n+    item\n+}\n+\n+fn replace_attr(item: &ast::Item, attr: &ast::Attr) {\n     let syntax_index = attr.syntax().index();\n     let ws = make::tokens::whitespace(&\" \".repeat(u32::from(attr.syntax().text().len()) as usize));\n     item.syntax().splice_children(syntax_index..syntax_index + 1, vec![ws.into()]);\n-    item\n }\n \n #[cfg(test)]\n@@ -78,7 +82,9 @@ mod tests {\n         assert_eq!(items.len(), 1);\n \n         let item = remove_derives_up_to(items.pop().unwrap(), attr);\n-        expect.assert_eq(&item.to_string());\n+        let res: String =\n+            item.syntax().children_with_tokens().map(|e| format!(\"{:?}\\n\", e)).collect();\n+        expect.assert_eq(&res);\n     }\n \n     #[test]\n@@ -95,13 +101,20 @@ struct A {\n }\n         \"#,\n             expect![[r#\"\n-#[allow(unused)]\n-\n-\n-#[derive(Clone)]\n-struct A {\n-    bar: u32\n-}\"#]],\n+                Node(ATTR@0..16)\n+                Token(WHITESPACE@16..17 \"\\n\")\n+                Token(WHITESPACE@17..32 \"               \")\n+                Token(WHITESPACE@32..33 \"\\n\")\n+                Token(WHITESPACE@33..49 \"                \")\n+                Token(WHITESPACE@49..50 \"\\n\")\n+                Node(ATTR@50..66)\n+                Token(WHITESPACE@66..67 \"\\n\")\n+                Token(STRUCT_KW@67..73 \"struct\")\n+                Token(WHITESPACE@73..74 \" \")\n+                Node(NAME@74..75)\n+                Token(WHITESPACE@75..76 \" \")\n+                Node(RECORD_FIELD_LIST@76..92)\n+            \"#]],\n         );\n     }\n }"}]}