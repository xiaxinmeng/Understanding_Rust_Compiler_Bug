{"sha": "503e74e96958045025448f90c8da4c7bd1484be9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwM2U3NGU5Njk1ODA0NTAyNTQ0OGY5MGM4ZGE0YzdiZDE0ODRiZTk=", "commit": {"author": {"name": "Paul Dicker", "email": "pitdicker@gmail.com", "date": "2019-02-06T13:17:22Z"}, "committer": {"name": "Paul Dicker", "email": "pitdicker@gmail.com", "date": "2019-02-15T09:07:03Z"}, "message": "Fix SECURITY_SQOS_PRESENT missing\nif security_qos_flags(SECURITY_ANONYMOUS) is set", "tree": {"sha": "bde9f2559072c805fb839c309cdeb48c1b483ba2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bde9f2559072c805fb839c309cdeb48c1b483ba2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/503e74e96958045025448f90c8da4c7bd1484be9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/503e74e96958045025448f90c8da4c7bd1484be9", "html_url": "https://github.com/rust-lang/rust/commit/503e74e96958045025448f90c8da4c7bd1484be9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/503e74e96958045025448f90c8da4c7bd1484be9/comments", "author": {"login": "pitdicker", "id": 6255050, "node_id": "MDQ6VXNlcjYyNTUwNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/6255050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pitdicker", "html_url": "https://github.com/pitdicker", "followers_url": "https://api.github.com/users/pitdicker/followers", "following_url": "https://api.github.com/users/pitdicker/following{/other_user}", "gists_url": "https://api.github.com/users/pitdicker/gists{/gist_id}", "starred_url": "https://api.github.com/users/pitdicker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pitdicker/subscriptions", "organizations_url": "https://api.github.com/users/pitdicker/orgs", "repos_url": "https://api.github.com/users/pitdicker/repos", "events_url": "https://api.github.com/users/pitdicker/events{/privacy}", "received_events_url": "https://api.github.com/users/pitdicker/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pitdicker", "id": 6255050, "node_id": "MDQ6VXNlcjYyNTUwNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/6255050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pitdicker", "html_url": "https://github.com/pitdicker", "followers_url": "https://api.github.com/users/pitdicker/followers", "following_url": "https://api.github.com/users/pitdicker/following{/other_user}", "gists_url": "https://api.github.com/users/pitdicker/gists{/gist_id}", "starred_url": "https://api.github.com/users/pitdicker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pitdicker/subscriptions", "organizations_url": "https://api.github.com/users/pitdicker/orgs", "repos_url": "https://api.github.com/users/pitdicker/repos", "events_url": "https://api.github.com/users/pitdicker/events{/privacy}", "received_events_url": "https://api.github.com/users/pitdicker/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f47ec2ad5b6887b3d400aee49e2294bd27733d18", "url": "https://api.github.com/repos/rust-lang/rust/commits/f47ec2ad5b6887b3d400aee49e2294bd27733d18", "html_url": "https://github.com/rust-lang/rust/commit/f47ec2ad5b6887b3d400aee49e2294bd27733d18"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "e1f815a525c9827c9284be02fbe41bcbfc68ba44", "filename": "src/libstd/sys/windows/fs.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/503e74e96958045025448f90c8da4c7bd1484be9/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/503e74e96958045025448f90c8da4c7bd1484be9/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs?ref=503e74e96958045025448f90c8da4c7bd1484be9", "patch": "@@ -191,7 +191,11 @@ impl OpenOptions {\n     pub fn access_mode(&mut self, access_mode: u32) { self.access_mode = Some(access_mode); }\n     pub fn share_mode(&mut self, share_mode: u32) { self.share_mode = share_mode; }\n     pub fn attributes(&mut self, attrs: u32) { self.attributes = attrs; }\n-    pub fn security_qos_flags(&mut self, flags: u32) { self.security_qos_flags = flags; }\n+    pub fn security_qos_flags(&mut self, flags: u32) {\n+        // We have to set `SECURITY_SQOS_PRESENT` here, because one of the valid flags we can\n+        // receive is `SECURITY_ANONYMOUS = 0x0`, which we can't check for later on.\n+        self.security_qos_flags = flags | c::SECURITY_SQOS_PRESENT;\n+    }\n     pub fn security_attributes(&mut self, attrs: c::LPSECURITY_ATTRIBUTES) {\n         self.security_attributes = attrs as usize;\n     }\n@@ -239,7 +243,6 @@ impl OpenOptions {\n         self.custom_flags |\n         self.attributes |\n         self.security_qos_flags |\n-        if self.security_qos_flags != 0 { c::SECURITY_SQOS_PRESENT } else { 0 } |\n         if self.create_new { c::FILE_FLAG_OPEN_REPARSE_POINT } else { 0 }\n     }\n }"}]}