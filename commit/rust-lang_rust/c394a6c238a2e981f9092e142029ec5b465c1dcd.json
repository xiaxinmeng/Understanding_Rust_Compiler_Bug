{"sha": "c394a6c238a2e981f9092e142029ec5b465c1dcd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzOTRhNmMyMzhhMmU5ODFmOTA5MmUxNDIwMjllYzViNDY1YzFkY2Q=", "commit": {"author": {"name": "Aidan Cully", "email": "github@aidan.users.panix.com", "date": "2014-12-05T23:39:58Z"}, "committer": {"name": "Aidan Cully", "email": "github@aidan.users.panix.com", "date": "2014-12-05T23:39:58Z"}, "message": "prefer \"FIXME\" to \"TODO\".", "tree": {"sha": "23648629a1fd3f7b12240d59519ea7f007b91072", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/23648629a1fd3f7b12240d59519ea7f007b91072"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c394a6c238a2e981f9092e142029ec5b465c1dcd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c394a6c238a2e981f9092e142029ec5b465c1dcd", "html_url": "https://github.com/rust-lang/rust/commit/c394a6c238a2e981f9092e142029ec5b465c1dcd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c394a6c238a2e981f9092e142029ec5b465c1dcd/comments", "author": {"login": "aidancully", "id": 503301, "node_id": "MDQ6VXNlcjUwMzMwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/503301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aidancully", "html_url": "https://github.com/aidancully", "followers_url": "https://api.github.com/users/aidancully/followers", "following_url": "https://api.github.com/users/aidancully/following{/other_user}", "gists_url": "https://api.github.com/users/aidancully/gists{/gist_id}", "starred_url": "https://api.github.com/users/aidancully/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aidancully/subscriptions", "organizations_url": "https://api.github.com/users/aidancully/orgs", "repos_url": "https://api.github.com/users/aidancully/repos", "events_url": "https://api.github.com/users/aidancully/events{/privacy}", "received_events_url": "https://api.github.com/users/aidancully/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aidancully", "id": 503301, "node_id": "MDQ6VXNlcjUwMzMwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/503301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aidancully", "html_url": "https://github.com/aidancully", "followers_url": "https://api.github.com/users/aidancully/followers", "following_url": "https://api.github.com/users/aidancully/following{/other_user}", "gists_url": "https://api.github.com/users/aidancully/gists{/gist_id}", "starred_url": "https://api.github.com/users/aidancully/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aidancully/subscriptions", "organizations_url": "https://api.github.com/users/aidancully/orgs", "repos_url": "https://api.github.com/users/aidancully/repos", "events_url": "https://api.github.com/users/aidancully/events{/privacy}", "received_events_url": "https://api.github.com/users/aidancully/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7bf7bd6a75c38ed71df69cb9149eb7fdce23ced5", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bf7bd6a75c38ed71df69cb9149eb7fdce23ced5", "html_url": "https://github.com/rust-lang/rust/commit/7bf7bd6a75c38ed71df69cb9149eb7fdce23ced5"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "3eb0e3f46cb90e81cdb229ecb0251e18ad5d291b", "filename": "src/libstd/sys/common/thread_local.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c394a6c238a2e981f9092e142029ec5b465c1dcd/src%2Flibstd%2Fsys%2Fcommon%2Fthread_local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c394a6c238a2e981f9092e142029ec5b465c1dcd/src%2Flibstd%2Fsys%2Fcommon%2Fthread_local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcommon%2Fthread_local.rs?ref=c394a6c238a2e981f9092e142029ec5b465c1dcd", "patch": "@@ -193,7 +193,7 @@ impl StaticKey {\n         // prove that it has not yet been set. As such, we'll continue using a\n         // value of 0, but with some gyrations to make sure we have a non-0\n         // value returned from the creation routine.\n-        // TODO: this is clearly a hack, and should be cleaned up.\n+        // FIXME: this is clearly a hack, and should be cleaned up.\n         let key1 = imp::create(self.dtor);\n         let key = if key1 != 0 {\n             key1"}]}