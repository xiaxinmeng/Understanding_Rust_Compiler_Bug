{"sha": "97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a", "node_id": "C_kwDOAAsO6NoAKDk3NTk4ZTllOGZmYjJlNWUyMTFhZTVjZTljZjFmYzk2ZjY0MzcxMGE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-05-23T21:28:40Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-05-23T21:28:40Z"}, "message": "Auto merge of #10810 - samueltardieu:needless-else, r=llogiq\n\nneedless_else: new lint to check for empty `else` clauses\n\nEmpty `else` clauses are useless. They happen in the wild and are not linted yet: https://github.com/uutils/coreutils/pull/4880/files\n\n`else` clauses containing or preceded by comments are not linted as the comments might be important.\n\nchangelog: [`needless_else`]: new lint", "tree": {"sha": "ef697b437105b30206867e71258845c4c48dacb6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef697b437105b30206867e71258845c4c48dacb6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a", "html_url": "https://github.com/rust-lang/rust/commit/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe792d9f7dceac7ddb38524a15031c0ea68730fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe792d9f7dceac7ddb38524a15031c0ea68730fa", "html_url": "https://github.com/rust-lang/rust/commit/fe792d9f7dceac7ddb38524a15031c0ea68730fa"}, {"sha": "e6646eb5fd180d94606f7e5a31f1168db6511dc3", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6646eb5fd180d94606f7e5a31f1168db6511dc3", "html_url": "https://github.com/rust-lang/rust/commit/e6646eb5fd180d94606f7e5a31f1168db6511dc3"}], "stats": {"total": 301, "additions": 231, "deletions": 70}, "files": [{"sha": "3dfc4f7b6a47c57967baffe0cbb97076263c4a44", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a", "patch": "@@ -4874,6 +4874,7 @@ Released 2018-09-13\n [`needless_collect`]: https://rust-lang.github.io/rust-clippy/master/index.html#needless_collect\n [`needless_continue`]: https://rust-lang.github.io/rust-clippy/master/index.html#needless_continue\n [`needless_doctest_main`]: https://rust-lang.github.io/rust-clippy/master/index.html#needless_doctest_main\n+[`needless_else`]: https://rust-lang.github.io/rust-clippy/master/index.html#needless_else\n [`needless_for_each`]: https://rust-lang.github.io/rust-clippy/master/index.html#needless_for_each\n [`needless_late_init`]: https://rust-lang.github.io/rust-clippy/master/index.html#needless_late_init\n [`needless_lifetimes`]: https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes"}, {"sha": "c225e376d148d09e1cd33c2035ed295dacabbcd4", "filename": "clippy_lints/src/declared_lints.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a/clippy_lints%2Fsrc%2Fdeclared_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a/clippy_lints%2Fsrc%2Fdeclared_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdeclared_lints.rs?ref=97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a", "patch": "@@ -449,6 +449,7 @@ pub(crate) static LINTS: &[&crate::LintInfo] = &[\n     crate::needless_bool::NEEDLESS_BOOL_ASSIGN_INFO,\n     crate::needless_borrowed_ref::NEEDLESS_BORROWED_REFERENCE_INFO,\n     crate::needless_continue::NEEDLESS_CONTINUE_INFO,\n+    crate::needless_else::NEEDLESS_ELSE_INFO,\n     crate::needless_for_each::NEEDLESS_FOR_EACH_INFO,\n     crate::needless_late_init::NEEDLESS_LATE_INIT_INFO,\n     crate::needless_parens_on_range_literals::NEEDLESS_PARENS_ON_RANGE_LITERALS_INFO,"}, {"sha": "10404d51ba55668e096fc92bd4b4d9167f9342ea", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a", "patch": "@@ -218,6 +218,7 @@ mod needless_arbitrary_self_type;\n mod needless_bool;\n mod needless_borrowed_ref;\n mod needless_continue;\n+mod needless_else;\n mod needless_for_each;\n mod needless_late_init;\n mod needless_parens_on_range_literals;\n@@ -992,6 +993,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(|_| Box::new(items_after_test_module::ItemsAfterTestModule));\n     store.register_early_pass(|| Box::new(ref_patterns::RefPatterns));\n     store.register_late_pass(|_| Box::new(default_constructed_unit_structs::DefaultConstructedUnitStructs));\n+    store.register_early_pass(|| Box::new(needless_else::NeedlessElse));\n     // add lints here, do not remove this comment, it's used in `new_lint`\n }\n "}, {"sha": "8faf033e406899f4d6ccf0037fa1a28df6162c5e", "filename": "clippy_lints/src/needless_else.rs", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a/clippy_lints%2Fsrc%2Fneedless_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a/clippy_lints%2Fsrc%2Fneedless_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_else.rs?ref=97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a", "patch": "@@ -0,0 +1,57 @@\n+use clippy_utils::{diagnostics::span_lint_and_sugg, source::trim_span, span_extract_comment};\n+use rustc_ast::ast::{Expr, ExprKind};\n+use rustc_errors::Applicability;\n+use rustc_lint::{EarlyContext, EarlyLintPass, LintContext};\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n+\n+declare_clippy_lint! {\n+    /// ### What it does\n+    /// Checks for empty `else` branches.\n+    ///\n+    /// ### Why is this bad?\n+    /// An empty else branch does nothing and can be removed.\n+    ///\n+    /// ### Example\n+    /// ```rust\n+    ///# fn check() -> bool { true }\n+    /// if check() {\n+    ///     println!(\"Check successful!\");\n+    /// } else {\n+    /// }\n+    /// ```\n+    /// Use instead:\n+    /// ```rust\n+    ///# fn check() -> bool { true }\n+    /// if check() {\n+    ///     println!(\"Check successful!\");\n+    /// }\n+    /// ```\n+    #[clippy::version = \"1.71.0\"]\n+    pub NEEDLESS_ELSE,\n+    style,\n+    \"empty else branch\"\n+}\n+declare_lint_pass!(NeedlessElse => [NEEDLESS_ELSE]);\n+\n+impl EarlyLintPass for NeedlessElse {\n+    fn check_expr(&mut self, cx: &EarlyContext<'_>, expr: &Expr) {\n+        if let ExprKind::If(_, then_block, Some(else_clause)) = &expr.kind &&\n+            let ExprKind::Block(block, _) = &else_clause.kind &&\n+            !expr.span.from_expansion() &&\n+            !else_clause.span.from_expansion() &&\n+            block.stmts.is_empty() {\n+                let span = trim_span(cx.sess().source_map(), expr.span.trim_start(then_block.span).unwrap());\n+                if span_extract_comment(cx.sess().source_map(), span).is_empty() {\n+                    span_lint_and_sugg(\n+                        cx,\n+                        NEEDLESS_ELSE,\n+                        span,\n+                        \"this else branch is empty\",\n+                        \"you can remove it\",\n+                        String::new(),\n+                        Applicability::MachineApplicable,\n+                    );\n+                }\n+            }\n+    }\n+}"}, {"sha": "4882416c414ac976dd975a9d4e688f92b6a0bf17", "filename": "tests/ui-toml/ifs_same_cond/ifs_same_cond.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a/tests%2Fui-toml%2Fifs_same_cond%2Fifs_same_cond.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a/tests%2Fui-toml%2Fifs_same_cond%2Fifs_same_cond.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fifs_same_cond%2Fifs_same_cond.rs?ref=97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a", "patch": "@@ -1,5 +1,5 @@\n #![warn(clippy::ifs_same_cond)]\n-#![allow(clippy::if_same_then_else, clippy::comparison_chain)]\n+#![allow(clippy::if_same_then_else, clippy::comparison_chain, clippy::needless_else)]\n \n fn main() {}\n "}, {"sha": "5780ea0893777fefee8a2d3aeeb6d9e1722639d3", "filename": "tests/ui/branches_sharing_code/valid_if_blocks.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a/tests%2Fui%2Fbranches_sharing_code%2Fvalid_if_blocks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a/tests%2Fui%2Fbranches_sharing_code%2Fvalid_if_blocks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbranches_sharing_code%2Fvalid_if_blocks.rs?ref=97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a", "patch": "@@ -1,6 +1,10 @@\n #![deny(clippy::branches_sharing_code, clippy::if_same_then_else)]\n #![allow(dead_code)]\n-#![allow(clippy::mixed_read_write_in_expression, clippy::uninlined_format_args)]\n+#![allow(\n+    clippy::mixed_read_write_in_expression,\n+    clippy::uninlined_format_args,\n+    clippy::needless_else\n+)]\n \n // This tests valid if blocks that shouldn't trigger the lint\n "}, {"sha": "a7e72b780affcc95030b1cf27299f97764280d2a", "filename": "tests/ui/branches_sharing_code/valid_if_blocks.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a/tests%2Fui%2Fbranches_sharing_code%2Fvalid_if_blocks.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a/tests%2Fui%2Fbranches_sharing_code%2Fvalid_if_blocks.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbranches_sharing_code%2Fvalid_if_blocks.stderr?ref=97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a", "patch": "@@ -1,13 +1,13 @@\n error: this `if` has identical blocks\n-  --> $DIR/valid_if_blocks.rs:105:14\n+  --> $DIR/valid_if_blocks.rs:109:14\n    |\n LL |       if false {\n    |  ______________^\n LL | |     } else {\n    | |_____^\n    |\n note: same as this\n-  --> $DIR/valid_if_blocks.rs:106:12\n+  --> $DIR/valid_if_blocks.rs:110:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -20,7 +20,7 @@ LL | #![deny(clippy::branches_sharing_code, clippy::if_same_then_else)]\n    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this `if` has identical blocks\n-  --> $DIR/valid_if_blocks.rs:116:15\n+  --> $DIR/valid_if_blocks.rs:120:15\n    |\n LL |       if x == 0 {\n    |  _______________^\n@@ -31,7 +31,7 @@ LL | |     } else {\n    | |_____^\n    |\n note: same as this\n-  --> $DIR/valid_if_blocks.rs:120:12\n+  --> $DIR/valid_if_blocks.rs:124:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -42,19 +42,19 @@ LL | |     }\n    | |_____^\n \n error: this `if` has identical blocks\n-  --> $DIR/valid_if_blocks.rs:127:23\n+  --> $DIR/valid_if_blocks.rs:131:23\n    |\n LL |     let _ = if x == 6 { 7 } else { 7 };\n    |                       ^^^^^\n    |\n note: same as this\n-  --> $DIR/valid_if_blocks.rs:127:34\n+  --> $DIR/valid_if_blocks.rs:131:34\n    |\n LL |     let _ = if x == 6 { 7 } else { 7 };\n    |                                  ^^^^^\n \n error: this `if` has identical blocks\n-  --> $DIR/valid_if_blocks.rs:133:23\n+  --> $DIR/valid_if_blocks.rs:137:23\n    |\n LL |       } else if x == 68 {\n    |  _______________________^\n@@ -66,7 +66,7 @@ LL | |     } else {\n    | |_____^\n    |\n note: same as this\n-  --> $DIR/valid_if_blocks.rs:138:12\n+  --> $DIR/valid_if_blocks.rs:142:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -78,7 +78,7 @@ LL | |     };\n    | |_____^\n \n error: this `if` has identical blocks\n-  --> $DIR/valid_if_blocks.rs:147:23\n+  --> $DIR/valid_if_blocks.rs:151:23\n    |\n LL |       } else if x == 68 {\n    |  _______________________^\n@@ -88,7 +88,7 @@ LL | |     } else {\n    | |_____^\n    |\n note: same as this\n-  --> $DIR/valid_if_blocks.rs:150:12\n+  --> $DIR/valid_if_blocks.rs:154:12\n    |\n LL |       } else {\n    |  ____________^"}, {"sha": "a5373cdcae1208edeea4776659419446a45f2d30", "filename": "tests/ui/crashes/ice-7410.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a/tests%2Fui%2Fcrashes%2Fice-7410.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a/tests%2Fui%2Fcrashes%2Fice-7410.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fice-7410.rs?ref=97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a", "patch": "@@ -6,6 +6,7 @@\n #![no_std]\n #![allow(clippy::if_same_then_else)]\n #![allow(clippy::redundant_pattern_matching)]\n+#![allow(clippy::needless_else)]\n \n use core::panic::PanicInfo;\n "}, {"sha": "f62da157d1b94b11a37fc7467969be40601348ce", "filename": "tests/ui/ifs_same_cond.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a/tests%2Fui%2Fifs_same_cond.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a/tests%2Fui%2Fifs_same_cond.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fifs_same_cond.rs?ref=97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a", "patch": "@@ -1,5 +1,5 @@\n #![warn(clippy::ifs_same_cond)]\n-#![allow(clippy::if_same_then_else, clippy::comparison_chain)] // all empty blocks\n+#![allow(clippy::if_same_then_else, clippy::comparison_chain, clippy::needless_else)] // all empty blocks\n \n fn ifs_same_cond() {\n     let a = 0;"}, {"sha": "14f81728a868aea0d8e25109b7ef717d144bc344", "filename": "tests/ui/needless_else.fixed", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a/tests%2Fui%2Fneedless_else.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a/tests%2Fui%2Fneedless_else.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_else.fixed?ref=97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a", "patch": "@@ -0,0 +1,40 @@\n+//@run-rustfix\n+#![allow(unused)]\n+#![warn(clippy::needless_else)]\n+#![allow(clippy::suspicious_else_formatting)]\n+\n+macro_rules! mac {\n+    ($test:expr) => {\n+        if $test {\n+            println!(\"Test successful!\");\n+        } else {\n+        }\n+    };\n+}\n+\n+fn main() {\n+    let b = std::hint::black_box(true);\n+\n+    if b {\n+        println!(\"Foobar\");\n+    } \n+\n+    if b {\n+        println!(\"Foobar\");\n+    } else {\n+        // Do not lint because this comment might be important\n+    }\n+\n+    if b {\n+        println!(\"Foobar\");\n+    } else\n+    /* Do not lint because this comment might be important */\n+    {\n+    }\n+\n+    // Do not lint because of the expression\n+    let _ = if b { 1 } else { 2 };\n+\n+    // Do not lint because inside a macro\n+    mac!(b);\n+}"}, {"sha": "fae11818141b7b646230001cd05b7b6ff5ed2494", "filename": "tests/ui/needless_else.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a/tests%2Fui%2Fneedless_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a/tests%2Fui%2Fneedless_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_else.rs?ref=97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a", "patch": "@@ -0,0 +1,41 @@\n+//@run-rustfix\n+#![allow(unused)]\n+#![warn(clippy::needless_else)]\n+#![allow(clippy::suspicious_else_formatting)]\n+\n+macro_rules! mac {\n+    ($test:expr) => {\n+        if $test {\n+            println!(\"Test successful!\");\n+        } else {\n+        }\n+    };\n+}\n+\n+fn main() {\n+    let b = std::hint::black_box(true);\n+\n+    if b {\n+        println!(\"Foobar\");\n+    } else {\n+    }\n+\n+    if b {\n+        println!(\"Foobar\");\n+    } else {\n+        // Do not lint because this comment might be important\n+    }\n+\n+    if b {\n+        println!(\"Foobar\");\n+    } else\n+    /* Do not lint because this comment might be important */\n+    {\n+    }\n+\n+    // Do not lint because of the expression\n+    let _ = if b { 1 } else { 2 };\n+\n+    // Do not lint because inside a macro\n+    mac!(b);\n+}"}, {"sha": "a7b2f1959c77bf0ae8d7de79a12ad6c280d645b4", "filename": "tests/ui/needless_else.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a/tests%2Fui%2Fneedless_else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a/tests%2Fui%2Fneedless_else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_else.stderr?ref=97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a", "patch": "@@ -0,0 +1,12 @@\n+error: this else branch is empty\n+  --> $DIR/needless_else.rs:20:7\n+   |\n+LL |       } else {\n+   |  _______^\n+LL | |     }\n+   | |_____^ help: you can remove it\n+   |\n+   = note: `-D clippy::needless-else` implied by `-D warnings`\n+\n+error: aborting due to previous error\n+"}, {"sha": "4dabf313963dee1e3b3fbd8da683792bdd2b4958", "filename": "tests/ui/needless_return.fixed", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a/tests%2Fui%2Fneedless_return.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a/tests%2Fui%2Fneedless_return.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_return.fixed?ref=97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a", "patch": "@@ -7,7 +7,8 @@\n     clippy::if_same_then_else,\n     clippy::single_match,\n     clippy::needless_bool,\n-    clippy::equatable_if_let\n+    clippy::equatable_if_let,\n+    clippy::needless_else\n )]\n #![warn(clippy::needless_return)]\n "}, {"sha": "542f562b314969aeb1cb0108e9f23cf7772b3c50", "filename": "tests/ui/needless_return.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a/tests%2Fui%2Fneedless_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a/tests%2Fui%2Fneedless_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_return.rs?ref=97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a", "patch": "@@ -7,7 +7,8 @@\n     clippy::if_same_then_else,\n     clippy::single_match,\n     clippy::needless_bool,\n-    clippy::equatable_if_let\n+    clippy::equatable_if_let,\n+    clippy::needless_else\n )]\n #![warn(clippy::needless_return)]\n "}, {"sha": "b5a7d61139d8d1b5ecc0d53c4c162acb42196529", "filename": "tests/ui/needless_return.stderr", "status": "modified", "additions": 52, "deletions": 52, "changes": 104, "blob_url": "https://github.com/rust-lang/rust/blob/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a/tests%2Fui%2Fneedless_return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a/tests%2Fui%2Fneedless_return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_return.stderr?ref=97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a", "patch": "@@ -1,5 +1,5 @@\n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:27:5\n+  --> $DIR/needless_return.rs:28:5\n    |\n LL |     return true;\n    |     ^^^^^^^^^^^\n@@ -8,87 +8,87 @@ LL |     return true;\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:31:5\n+  --> $DIR/needless_return.rs:32:5\n    |\n LL |     return true;\n    |     ^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:36:5\n+  --> $DIR/needless_return.rs:37:5\n    |\n LL |     return true;;;\n    |     ^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:41:5\n+  --> $DIR/needless_return.rs:42:5\n    |\n LL |     return true;; ; ;\n    |     ^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:46:9\n+  --> $DIR/needless_return.rs:47:9\n    |\n LL |         return true;\n    |         ^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:48:9\n+  --> $DIR/needless_return.rs:49:9\n    |\n LL |         return false;\n    |         ^^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:54:17\n+  --> $DIR/needless_return.rs:55:17\n    |\n LL |         true => return false,\n    |                 ^^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:56:13\n+  --> $DIR/needless_return.rs:57:13\n    |\n LL |             return true;\n    |             ^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:63:9\n+  --> $DIR/needless_return.rs:64:9\n    |\n LL |         return true;\n    |         ^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:65:16\n+  --> $DIR/needless_return.rs:66:16\n    |\n LL |     let _ = || return true;\n    |                ^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:69:5\n+  --> $DIR/needless_return.rs:70:5\n    |\n LL |     return the_answer!();\n    |     ^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:72:21\n+  --> $DIR/needless_return.rs:73:21\n    |\n LL |   fn test_void_fun() {\n    |  _____________________^\n@@ -98,7 +98,7 @@ LL | |     return;\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:77:11\n+  --> $DIR/needless_return.rs:78:11\n    |\n LL |       if b {\n    |  ___________^\n@@ -108,7 +108,7 @@ LL | |         return;\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:79:13\n+  --> $DIR/needless_return.rs:80:13\n    |\n LL |       } else {\n    |  _____________^\n@@ -118,15 +118,15 @@ LL | |         return;\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:87:14\n+  --> $DIR/needless_return.rs:88:14\n    |\n LL |         _ => return,\n    |              ^^^^^^\n    |\n    = help: replace `return` with a unit value\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:95:24\n+  --> $DIR/needless_return.rs:96:24\n    |\n LL |               let _ = 42;\n    |  ________________________^\n@@ -136,39 +136,39 @@ LL | |             return;\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:98:14\n+  --> $DIR/needless_return.rs:99:14\n    |\n LL |         _ => return,\n    |              ^^^^^^\n    |\n    = help: replace `return` with a unit value\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:111:9\n+  --> $DIR/needless_return.rs:112:9\n    |\n LL |         return String::from(\"test\");\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:113:9\n+  --> $DIR/needless_return.rs:114:9\n    |\n LL |         return String::new();\n    |         ^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:135:32\n+  --> $DIR/needless_return.rs:136:32\n    |\n LL |         bar.unwrap_or_else(|_| return)\n    |                                ^^^^^^\n    |\n    = help: replace `return` with an empty block\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:139:21\n+  --> $DIR/needless_return.rs:140:21\n    |\n LL |           let _ = || {\n    |  _____________________^\n@@ -178,95 +178,95 @@ LL | |             return;\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:142:20\n+  --> $DIR/needless_return.rs:143:20\n    |\n LL |         let _ = || return;\n    |                    ^^^^^^\n    |\n    = help: replace `return` with an empty block\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:148:32\n+  --> $DIR/needless_return.rs:149:32\n    |\n LL |         res.unwrap_or_else(|_| return Foo)\n    |                                ^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:157:5\n+  --> $DIR/needless_return.rs:158:5\n    |\n LL |     return true;\n    |     ^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:161:5\n+  --> $DIR/needless_return.rs:162:5\n    |\n LL |     return true;\n    |     ^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:166:9\n+  --> $DIR/needless_return.rs:167:9\n    |\n LL |         return true;\n    |         ^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:168:9\n+  --> $DIR/needless_return.rs:169:9\n    |\n LL |         return false;\n    |         ^^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:174:17\n+  --> $DIR/needless_return.rs:175:17\n    |\n LL |         true => return false,\n    |                 ^^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:176:13\n+  --> $DIR/needless_return.rs:177:13\n    |\n LL |             return true;\n    |             ^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:183:9\n+  --> $DIR/needless_return.rs:184:9\n    |\n LL |         return true;\n    |         ^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:185:16\n+  --> $DIR/needless_return.rs:186:16\n    |\n LL |     let _ = || return true;\n    |                ^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:189:5\n+  --> $DIR/needless_return.rs:190:5\n    |\n LL |     return the_answer!();\n    |     ^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:192:33\n+  --> $DIR/needless_return.rs:193:33\n    |\n LL |   async fn async_test_void_fun() {\n    |  _________________________________^\n@@ -276,7 +276,7 @@ LL | |     return;\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:197:11\n+  --> $DIR/needless_return.rs:198:11\n    |\n LL |       if b {\n    |  ___________^\n@@ -286,7 +286,7 @@ LL | |         return;\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:199:13\n+  --> $DIR/needless_return.rs:200:13\n    |\n LL |       } else {\n    |  _____________^\n@@ -296,95 +296,95 @@ LL | |         return;\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:207:14\n+  --> $DIR/needless_return.rs:208:14\n    |\n LL |         _ => return,\n    |              ^^^^^^\n    |\n    = help: replace `return` with a unit value\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:220:9\n+  --> $DIR/needless_return.rs:221:9\n    |\n LL |         return String::from(\"test\");\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:222:9\n+  --> $DIR/needless_return.rs:223:9\n    |\n LL |         return String::new();\n    |         ^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:238:5\n+  --> $DIR/needless_return.rs:239:5\n    |\n LL |     return format!(\"Hello {}\", \"world!\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:250:9\n+  --> $DIR/needless_return.rs:251:9\n    |\n LL |         return true;\n    |         ^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:252:9\n+  --> $DIR/needless_return.rs:253:9\n    |\n LL |         return false;\n    |         ^^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:259:13\n+  --> $DIR/needless_return.rs:260:13\n    |\n LL |             return 10;\n    |             ^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:262:13\n+  --> $DIR/needless_return.rs:263:13\n    |\n LL |             return 100;\n    |             ^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:270:9\n+  --> $DIR/needless_return.rs:271:9\n    |\n LL |         return 0;\n    |         ^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:277:13\n+  --> $DIR/needless_return.rs:278:13\n    |\n LL |             return *(x as *const isize);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:279:13\n+  --> $DIR/needless_return.rs:280:13\n    |\n LL |             return !*(x as *const isize);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:286:20\n+  --> $DIR/needless_return.rs:287:20\n    |\n LL |           let _ = 42;\n    |  ____________________^\n@@ -395,39 +395,39 @@ LL | |         return;\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:293:20\n+  --> $DIR/needless_return.rs:294:20\n    |\n LL |         let _ = 42; return;\n    |                    ^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:305:9\n+  --> $DIR/needless_return.rs:306:9\n    |\n LL |         return Ok(format!(\"ok!\"));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:307:9\n+  --> $DIR/needless_return.rs:308:9\n    |\n LL |         return Err(format!(\"err!\"));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:313:9\n+  --> $DIR/needless_return.rs:314:9\n    |\n LL |         return if true { 1 } else { 2 };\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:317:9\n+  --> $DIR/needless_return.rs:318:9\n    |\n LL |         return if b1 { 0 } else { 1 } | if b2 { 2 } else { 3 } | if b3 { 4 } else { 5 };\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "481c9b263fbb8933a9f09afae1d1a6e26ab7e4a1", "filename": "tests/ui/redundant_pattern_matching_drop_order.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a/tests%2Fui%2Fredundant_pattern_matching_drop_order.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a/tests%2Fui%2Fredundant_pattern_matching_drop_order.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching_drop_order.fixed?ref=97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a", "patch": "@@ -2,7 +2,7 @@\n \n // Issue #5746\n #![warn(clippy::redundant_pattern_matching)]\n-#![allow(clippy::if_same_then_else, clippy::equatable_if_let)]\n+#![allow(clippy::if_same_then_else, clippy::equatable_if_let, clippy::needless_else)]\n use std::task::Poll::{Pending, Ready};\n \n fn main() {"}, {"sha": "86e46d41e65a1bfc0dd01f8f07b30a026ff5a198", "filename": "tests/ui/redundant_pattern_matching_drop_order.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a/tests%2Fui%2Fredundant_pattern_matching_drop_order.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a/tests%2Fui%2Fredundant_pattern_matching_drop_order.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching_drop_order.rs?ref=97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a", "patch": "@@ -2,7 +2,7 @@\n \n // Issue #5746\n #![warn(clippy::redundant_pattern_matching)]\n-#![allow(clippy::if_same_then_else, clippy::equatable_if_let)]\n+#![allow(clippy::if_same_then_else, clippy::equatable_if_let, clippy::needless_else)]\n use std::task::Poll::{Pending, Ready};\n \n fn main() {"}, {"sha": "4823d9092089b291953261da687cc0b8bce81515", "filename": "tests/ui/suspicious_else_formatting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a/tests%2Fui%2Fsuspicious_else_formatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a/tests%2Fui%2Fsuspicious_else_formatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuspicious_else_formatting.rs?ref=97598e9e8ffb2e5e211ae5ce9cf1fc96f643710a", "patch": "@@ -1,7 +1,7 @@\n //@aux-build:proc_macro_suspicious_else_formatting.rs\n \n #![warn(clippy::suspicious_else_formatting)]\n-#![allow(clippy::if_same_then_else, clippy::let_unit_value)]\n+#![allow(clippy::if_same_then_else, clippy::let_unit_value, clippy::needless_else)]\n \n extern crate proc_macro_suspicious_else_formatting;\n use proc_macro_suspicious_else_formatting::DeriveBadSpan;"}]}