{"sha": "cdde06ea97ad7ef9718cc0896ab3989f11188da2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkZGUwNmVhOTdhZDdlZjk3MThjYzA4OTZhYjM5ODlmMTExODhkYTI=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-08-28T11:18:58Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-08-29T05:20:42Z"}, "message": "Fix merge conflicts.", "tree": {"sha": "364736a3e4a71fa0cf660d368d61783d8aaf96c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/364736a3e4a71fa0cf660d368d61783d8aaf96c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cdde06ea97ad7ef9718cc0896ab3989f11188da2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cdde06ea97ad7ef9718cc0896ab3989f11188da2", "html_url": "https://github.com/rust-lang/rust/commit/cdde06ea97ad7ef9718cc0896ab3989f11188da2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cdde06ea97ad7ef9718cc0896ab3989f11188da2/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "663caa9ddf856c5e3a9612b1ac002c8d0646a3c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/663caa9ddf856c5e3a9612b1ac002c8d0646a3c2", "html_url": "https://github.com/rust-lang/rust/commit/663caa9ddf856c5e3a9612b1ac002c8d0646a3c2"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "d26de9b2a6c53462f90386e8edb46fcc425885a1", "filename": "src/librustc_typeck/check/intrinsic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cdde06ea97ad7ef9718cc0896ab3989f11188da2/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdde06ea97ad7ef9718cc0896ab3989f11188da2/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs?ref=cdde06ea97ad7ef9718cc0896ab3989f11188da2", "patch": "@@ -52,7 +52,7 @@ fn equate_intrinsic_type<'a, 'tcx>(ccx: &CrateCtxt<'a, 'tcx>,\n     let i_n_tps = i_ty.generics.types.len();\n     if i_n_tps != n_tps {\n         let span = match it.node {\n-            hir::ForeignItemFn(_, ref generics) => generics.span().unwrap_or(it.span),\n+            hir::ForeignItemFn(_, ref generics) => generics.span,\n             hir::ForeignItemStatic(_, _) => it.span\n         };\n "}]}