{"sha": "f6c58afe151ff810b06499cce5b417e3d41d83de", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2YzU4YWZlMTUxZmY4MTBiMDY0OTljY2U1YjQxN2UzZDQxZDgzZGU=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-01-08T02:11:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-08T02:11:45Z"}, "message": "Rollup merge of #80785 - petrochenkov:prettyparen, r=Aaron1011\n\nrustc_ast_pretty: Remove `PrintState::insert_extra_parens`\n\nIt's no longer necessary after #79472.\n\nr? `@Aaron1011`", "tree": {"sha": "a2da9bd4dfff1b7ec9a75bf0bf5dd36dbaba3eb5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a2da9bd4dfff1b7ec9a75bf0bf5dd36dbaba3eb5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6c58afe151ff810b06499cce5b417e3d41d83de", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf979hCRBK7hj4Ov3rIwAAdHIIAHbnPYJJun2OnSBP+T6ntwhQ\nrhEfKgMHfUWti02E03VPwj6uooMGyke689gyTJxCvnZstU+mFa3PWSF9kFN/pOdc\nUk6ZBdfyRZUGea+embc5q9/1vZb2eftDlLE1rH6qSNLO3Oj1BGxIsoR28Wsi5J2A\nkiKf+oA11u0UG620IA9VMVDdDZFPWjPZ7IcQumJ2vVIznnW78Bzxz0VuZlflw1Y3\np4CDvMC4DQ2yQdvNfohOgjoNd84IzV8xrbU1RQwEbCMZSOmrYkyczVaiba48fqh2\nkIU8qHSvVnK7p8gX7dpofT4jp8wQMgO3ZD0vTLebkLCru+LG/ev9Nal2LvWThGg=\n=FT0f\n-----END PGP SIGNATURE-----\n", "payload": "tree a2da9bd4dfff1b7ec9a75bf0bf5dd36dbaba3eb5\nparent c851ae9d268ad2f90b44edac95b365095c6e426f\nparent f915e3e5cff7505178bb19286db8abd7b8eb25dc\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1610071905 +0900\ncommitter GitHub <noreply@github.com> 1610071905 +0900\n\nRollup merge of #80785 - petrochenkov:prettyparen, r=Aaron1011\n\nrustc_ast_pretty: Remove `PrintState::insert_extra_parens`\n\nIt's no longer necessary after #79472.\n\nr? `@Aaron1011`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6c58afe151ff810b06499cce5b417e3d41d83de", "html_url": "https://github.com/rust-lang/rust/commit/f6c58afe151ff810b06499cce5b417e3d41d83de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6c58afe151ff810b06499cce5b417e3d41d83de/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c851ae9d268ad2f90b44edac95b365095c6e426f", "url": "https://api.github.com/repos/rust-lang/rust/commits/c851ae9d268ad2f90b44edac95b365095c6e426f", "html_url": "https://github.com/rust-lang/rust/commit/c851ae9d268ad2f90b44edac95b365095c6e426f"}, {"sha": "f915e3e5cff7505178bb19286db8abd7b8eb25dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/f915e3e5cff7505178bb19286db8abd7b8eb25dc", "html_url": "https://github.com/rust-lang/rust/commit/f915e3e5cff7505178bb19286db8abd7b8eb25dc"}], "stats": {"total": 39, "additions": 3, "deletions": 36}, "files": [{"sha": "b88699f6ee176c5ba8185f72b644687c67009c20", "filename": "compiler/rustc_ast_pretty/src/pprust/mod.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f6c58afe151ff810b06499cce5b417e3d41d83de/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6c58afe151ff810b06499cce5b417e3d41d83de/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fmod.rs?ref=f6c58afe151ff810b06499cce5b417e3d41d83de", "patch": "@@ -8,11 +8,6 @@ use rustc_ast as ast;\n use rustc_ast::token::{Nonterminal, Token, TokenKind};\n use rustc_ast::tokenstream::{TokenStream, TokenTree};\n \n-pub fn nonterminal_to_string_no_extra_parens(nt: &Nonterminal) -> String {\n-    let state = State::without_insert_extra_parens();\n-    state.nonterminal_to_string(nt)\n-}\n-\n pub fn nonterminal_to_string(nt: &Nonterminal) -> String {\n     State::new().nonterminal_to_string(nt)\n }"}, {"sha": "ca816ef676959fe13a237d6bd3e507eff9afcc68", "filename": "compiler/rustc_ast_pretty/src/pprust/state.rs", "status": "modified", "additions": 2, "deletions": 26, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f6c58afe151ff810b06499cce5b417e3d41d83de/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6c58afe151ff810b06499cce5b417e3d41d83de/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs?ref=f6c58afe151ff810b06499cce5b417e3d41d83de", "patch": "@@ -88,13 +88,6 @@ pub struct State<'a> {\n     comments: Option<Comments<'a>>,\n     ann: &'a (dyn PpAnn + 'a),\n     is_expanded: bool,\n-    // If `true`, additional parenthesis (separate from `ExprKind::Paren`)\n-    // are inserted to ensure that proper precedence is preserved\n-    // in the pretty-printed output.\n-    //\n-    // This is usually `true`, except when performing the pretty-print/reparse\n-    // check in `nt_to_tokenstream`\n-    insert_extra_parens: bool,\n }\n \n crate const INDENT_UNIT: usize = 4;\n@@ -115,7 +108,6 @@ pub fn print_crate<'a>(\n         comments: Some(Comments::new(sm, filename, input)),\n         ann,\n         is_expanded,\n-        insert_extra_parens: true,\n     };\n \n     if is_expanded && !krate.attrs.iter().any(|attr| attr.has_name(sym::no_core)) {\n@@ -235,7 +227,6 @@ impl std::ops::DerefMut for State<'_> {\n }\n \n pub trait PrintState<'a>: std::ops::Deref<Target = pp::Printer> + std::ops::DerefMut {\n-    fn insert_extra_parens(&self) -> bool;\n     fn comments(&mut self) -> &mut Option<Comments<'a>>;\n     fn print_ident(&mut self, ident: Ident);\n     fn print_generic_args(&mut self, args: &ast::GenericArgs, colons_before_params: bool);\n@@ -819,16 +810,12 @@ pub trait PrintState<'a>: std::ops::Deref<Target = pp::Printer> + std::ops::Dere\n \n     fn to_string(&self, f: impl FnOnce(&mut State<'_>)) -> String {\n         let mut printer = State::new();\n-        printer.insert_extra_parens = self.insert_extra_parens();\n         f(&mut printer);\n         printer.s.eof()\n     }\n }\n \n impl<'a> PrintState<'a> for State<'a> {\n-    fn insert_extra_parens(&self) -> bool {\n-        self.insert_extra_parens\n-    }\n     fn comments(&mut self) -> &mut Option<Comments<'a>> {\n         &mut self.comments\n     }\n@@ -865,17 +852,7 @@ impl<'a> PrintState<'a> for State<'a> {\n \n impl<'a> State<'a> {\n     pub fn new() -> State<'a> {\n-        State {\n-            s: pp::mk_printer(),\n-            comments: None,\n-            ann: &NoAnn,\n-            is_expanded: false,\n-            insert_extra_parens: true,\n-        }\n-    }\n-\n-    pub(super) fn without_insert_extra_parens() -> State<'a> {\n-        State { insert_extra_parens: false, ..State::new() }\n+        State { s: pp::mk_printer(), comments: None, ann: &NoAnn, is_expanded: false }\n     }\n \n     // Synthesizes a comment that was not textually present in the original source\n@@ -1680,8 +1657,7 @@ impl<'a> State<'a> {\n     }\n \n     /// Prints `expr` or `(expr)` when `needs_par` holds.\n-    fn print_expr_cond_paren(&mut self, expr: &ast::Expr, mut needs_par: bool) {\n-        needs_par &= self.insert_extra_parens;\n+    fn print_expr_cond_paren(&mut self, expr: &ast::Expr, needs_par: bool) {\n         if needs_par {\n             self.popen();\n         }"}, {"sha": "a9aa192bbcc3b53f8b9d1390e7e7ea743a51e492", "filename": "compiler/rustc_hir_pretty/src/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f6c58afe151ff810b06499cce5b417e3d41d83de/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6c58afe151ff810b06499cce5b417e3d41d83de/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs?ref=f6c58afe151ff810b06499cce5b417e3d41d83de", "patch": "@@ -138,9 +138,6 @@ impl std::ops::DerefMut for State<'_> {\n }\n \n impl<'a> PrintState<'a> for State<'a> {\n-    fn insert_extra_parens(&self) -> bool {\n-        true\n-    }\n     fn comments(&mut self) -> &mut Option<Comments<'a>> {\n         &mut self.comments\n     }"}, {"sha": "0da9cd3fe5ee937d78bb90d3774d0de4e4fc4d49", "filename": "compiler/rustc_parse/src/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f6c58afe151ff810b06499cce5b417e3d41d83de/compiler%2Frustc_parse%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6c58afe151ff810b06499cce5b417e3d41d83de/compiler%2Frustc_parse%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Flib.rs?ref=f6c58afe151ff810b06499cce5b417e3d41d83de", "patch": "@@ -283,8 +283,7 @@ pub fn nt_to_tokenstream(\n     } else if matches!(synthesize_tokens, CanSynthesizeMissingTokens::Yes) {\n         return fake_token_stream(sess, nt);\n     } else {\n-        let pretty = rustc_ast_pretty::pprust::nonterminal_to_string_no_extra_parens(&nt);\n-        panic!(\"Missing tokens for nt {:?}\", pretty);\n+        panic!(\"Missing tokens for nt {:?}\", pprust::nonterminal_to_string(nt));\n     }\n }\n "}]}