{"sha": "8d6472a76c6615ad56c693b706e1232e07537b71", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkNjQ3MmE3NmM2NjE1YWQ1NmM2OTNiNzA2ZTEyMzJlMDc1MzdiNzE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-20T11:51:55Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-20T14:07:09Z"}, "message": "test self-referential generator", "tree": {"sha": "571b89a2e1a95583b9187d8c3802afd82253accb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/571b89a2e1a95583b9187d8c3802afd82253accb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d6472a76c6615ad56c693b706e1232e07537b71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d6472a76c6615ad56c693b706e1232e07537b71", "html_url": "https://github.com/rust-lang/rust/commit/8d6472a76c6615ad56c693b706e1232e07537b71", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d6472a76c6615ad56c693b706e1232e07537b71/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "669b9ea5bcd69d4cb5eadb0d91db3fc3d24e68f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/669b9ea5bcd69d4cb5eadb0d91db3fc3d24e68f8", "html_url": "https://github.com/rust-lang/rust/commit/669b9ea5bcd69d4cb5eadb0d91db3fc3d24e68f8"}], "stats": {"total": 40, "additions": 26, "deletions": 14}, "files": [{"sha": "603093a037c73931c23a25131b2db2512df6d1b6", "filename": "tests/run-pass/generator.rs", "status": "renamed", "additions": 26, "deletions": 14, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/8d6472a76c6615ad56c693b706e1232e07537b71/tests%2Frun-pass%2Fgenerator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d6472a76c6615ad56c693b706e1232e07537b71/tests%2Frun-pass%2Fgenerator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fgenerator.rs?ref=8d6472a76c6615ad56c693b706e1232e07537b71", "patch": "@@ -13,11 +13,11 @@\n use std::ops::{GeneratorState, Generator};\n \n fn finish<T>(mut amt: usize, mut t: T) -> T::Return\n-    where T: Generator<Yield = ()>\n+    where T: Generator<Yield = usize>\n {\n     loop {\n         match unsafe { t.resume() } {\n-            GeneratorState::Yielded(()) => amt -= 1,\n+            GeneratorState::Yielded(y) => amt -= y,\n             GeneratorState::Complete(ret) => {\n                 assert_eq!(amt, 0);\n                 return ret\n@@ -28,38 +28,50 @@ fn finish<T>(mut amt: usize, mut t: T) -> T::Return\n }\n \n fn main() {\n-    finish(1, || yield);\n+    finish(1, || yield 1);\n     finish(3, || {\n         let mut x = 0;\n-        yield;\n+        yield 1;\n         x += 1;\n-        yield;\n+        yield 1;\n         x += 1;\n-        yield;\n+        yield 1;\n         assert_eq!(x, 2);\n     });\n-    finish(8, || {\n-        for _ in 0..8 {\n-            yield;\n+    finish(7*8/2, || {\n+        for i in 0..8 {\n+            yield i;\n         }\n     });\n     finish(1, || {\n         if true {\n-            yield;\n+            yield 1;\n         } else {\n         }\n     });\n     finish(1, || {\n         if false {\n         } else {\n-            yield;\n+            yield 1;\n         }\n     });\n     finish(2, || {\n-        if { yield; false } {\n-            yield;\n+        if { yield 1; false } {\n+            yield 1;\n             panic!()\n         }\n-        yield\n+        yield 1;\n     });\n+    // also test a self-referential generator\n+    assert_eq!(\n+        finish(5, || {\n+            let mut x = Box::new(5);\n+            let y = &mut *x;\n+            *y = 5;\n+            yield *y;\n+            *y = 10;\n+            *x\n+        }),\n+        10\n+    );\n }", "previous_filename": "tests/run-pass/generator_control_flow.rs"}]}