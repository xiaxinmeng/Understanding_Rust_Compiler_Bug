{"sha": "7c92735f08711cf15dd2dbdbd6119d49ae765807", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjOTI3MzVmMDg3MTFjZjE1ZGQyZGJkYmQ2MTE5ZDQ5YWU3NjU4MDc=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-07-02T00:21:15Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-07-04T01:20:54Z"}, "message": "core: add a primitive page for `()`.", "tree": {"sha": "65a61ba4cc54eb1f87e26451d4b0497566360ab1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65a61ba4cc54eb1f87e26451d4b0497566360ab1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c92735f08711cf15dd2dbdbd6119d49ae765807", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c92735f08711cf15dd2dbdbd6119d49ae765807", "html_url": "https://github.com/rust-lang/rust/commit/7c92735f08711cf15dd2dbdbd6119d49ae765807", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c92735f08711cf15dd2dbdbd6119d49ae765807/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f89cc11827a36e6d1eb4e22322a51eb9b1153450", "url": "https://api.github.com/repos/rust-lang/rust/commits/f89cc11827a36e6d1eb4e22322a51eb9b1153450", "html_url": "https://github.com/rust-lang/rust/commit/f89cc11827a36e6d1eb4e22322a51eb9b1153450"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "4f85ae22e5bfce1af4ed1a538814b9d5046c645b", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7c92735f08711cf15dd2dbdbd6119d49ae765807/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c92735f08711cf15dd2dbdbd6119d49ae765807/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=7c92735f08711cf15dd2dbdbd6119d49ae765807", "patch": "@@ -122,6 +122,10 @@ pub mod simd;\n pub mod slice;\n pub mod str;\n pub mod tuple;\n+// FIXME #15320: primitive documentation needs top-level modules, this\n+// should be `core::tuple::unit`.\n+#[path = \"tuple/unit.rs\"]\n+pub mod unit;\n pub mod fmt;\n \n #[doc(hidden)]"}, {"sha": "4f34c64de1ba5d90dc79717100d5955dad3a3577", "filename": "src/libcore/tuple/mod.rs", "status": "renamed", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7c92735f08711cf15dd2dbdbd6119d49ae765807/src%2Flibcore%2Ftuple%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c92735f08711cf15dd2dbdbd6119d49ae765807/src%2Flibcore%2Ftuple%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftuple%2Fmod.rs?ref=7c92735f08711cf15dd2dbdbd6119d49ae765807", "patch": "@@ -61,6 +61,8 @@\n \n #![doc(primitive = \"tuple\")]\n \n+pub use unit;\n+\n use clone::Clone;\n use cmp::*;\n use default::Default;", "previous_filename": "src/libcore/tuple.rs"}, {"sha": "a60b3d098d36115e13e7d10e741475006f8fbf3b", "filename": "src/libcore/tuple/unit.rs", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/7c92735f08711cf15dd2dbdbd6119d49ae765807/src%2Flibcore%2Ftuple%2Funit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c92735f08711cf15dd2dbdbd6119d49ae765807/src%2Flibcore%2Ftuple%2Funit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftuple%2Funit.rs?ref=7c92735f08711cf15dd2dbdbd6119d49ae765807", "patch": "@@ -0,0 +1,44 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![doc(primitive = \"unit\")]\n+\n+//! The `()` type, sometimes called \"unit\" or \"nil\".\n+//!\n+//! The `()` type has exactly one value `()`, and is used when there\n+//! is no other meaningful value that could be returned. `()` is most\n+//! commonly seen implicitly: functions without a `-> ...` implicitly\n+//! have return type `()`, that is, these are equivalent:\n+//!\n+//! ```rust\n+//! fn long() -> () {}\n+//!\n+//! fn short() {}\n+//! ```\n+//!\n+//! The semicolon `;` can be used to discard the result of an\n+//! expression at the end of a block, making the expression (and thus\n+//! the block) evaluate to `()`. For example,\n+//!\n+//! ```rust\n+//! fn returns_i64() -> i64 {\n+//!     1i64\n+//! }\n+//! fn returns_unit() {\n+//!     1i64;\n+//! }\n+//!\n+//! let is_i64 = {\n+//!     returns_i64()\n+//! };\n+//! let is_unit = {\n+//!     returns_i64();\n+//! };\n+//! ```"}, {"sha": "39da8afd03e5507ddfcc1bacd71a2abdaf9dbdea", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7c92735f08711cf15dd2dbdbd6119d49ae765807/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c92735f08711cf15dd2dbdbd6119d49ae765807/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=7c92735f08711cf15dd2dbdbd6119d49ae765807", "patch": "@@ -160,6 +160,9 @@ pub use core::ptr;\n pub use core::raw;\n pub use core::simd;\n pub use core::tuple;\n+// FIXME #15320: primitive documentation needs top-level modules, this\n+// should be `std::tuple::unit`.\n+pub use core::unit;\n #[cfg(not(test))] pub use core::ty;\n pub use core::result;\n pub use core::option;"}]}