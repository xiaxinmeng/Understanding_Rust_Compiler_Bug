{"sha": "ab4154697512ec076c4c5550d218d46638353eb9", "node_id": "C_kwDOAAsO6NoAKGFiNDE1NDY5NzUxMmVjMDc2YzRjNTU1MGQyMThkNDY2MzgzNTNlYjk", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-11-24T08:54:09Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-11-25T16:10:10Z"}, "message": "Address reviews", "tree": {"sha": "b918f03574fce53ff3c6ec877d4d4b6dcb94adcb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b918f03574fce53ff3c6ec877d4d4b6dcb94adcb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab4154697512ec076c4c5550d218d46638353eb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab4154697512ec076c4c5550d218d46638353eb9", "html_url": "https://github.com/rust-lang/rust/commit/ab4154697512ec076c4c5550d218d46638353eb9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab4154697512ec076c4c5550d218d46638353eb9/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd1163f4611d8597d03d2efd569d63a1d82bfd15", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd1163f4611d8597d03d2efd569d63a1d82bfd15", "html_url": "https://github.com/rust-lang/rust/commit/dd1163f4611d8597d03d2efd569d63a1d82bfd15"}], "stats": {"total": 35, "additions": 15, "deletions": 20}, "files": [{"sha": "d06f21c89c4a71cdc07d7aaf487f2f3a88d6d146", "filename": "clippy_lints/src/semicolon_block.rs", "status": "modified", "additions": 15, "deletions": 20, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/ab4154697512ec076c4c5550d218d46638353eb9/clippy_lints%2Fsrc%2Fsemicolon_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab4154697512ec076c4c5550d218d46638353eb9/clippy_lints%2Fsrc%2Fsemicolon_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsemicolon_block.rs?ref=ab4154697512ec076c4c5550d218d46638353eb9", "patch": "@@ -67,25 +67,21 @@ impl LateLintPass<'_> for SemicolonBlock {\n     fn check_stmt(&mut self, cx: &LateContext<'_>, stmt: &Stmt<'_>) {\n         match stmt.kind {\n             StmtKind::Expr(Expr {\n-                kind:\n-                    ExprKind::Block(\n-                        block @ Block {\n-                            expr: None,\n-                            stmts:\n-                                &[\n-                                    ..,\n-                                    Stmt {\n-                                        kind: StmtKind::Semi(expr),\n-                                        span,\n-                                        ..\n-                                    },\n-                                ],\n-                            ..\n-                        },\n-                        _,\n-                    ),\n+                kind: ExprKind::Block(block, _),\n                 ..\n-            }) if !block.span.from_expansion() => semicolon_outside_block(cx, block, expr, span),\n+            }) if !block.span.from_expansion() => {\n+                let Block {\n+                    expr: None,\n+                    stmts: [.., stmt],\n+                    ..\n+                } = block else { return };\n+                let &Stmt {\n+                    kind: StmtKind::Semi(expr),\n+                    span,\n+                    ..\n+                } = stmt else { return };\n+                semicolon_outside_block(cx, block, expr, span)\n+            },\n             StmtKind::Semi(Expr {\n                 kind: ExprKind::Block(block @ Block { expr: Some(tail), .. }, _),\n                 ..\n@@ -96,8 +92,7 @@ impl LateLintPass<'_> for SemicolonBlock {\n }\n \n fn semicolon_inside_block(cx: &LateContext<'_>, block: &Block<'_>, tail: &Expr<'_>, semi_span: Span) {\n-    let tail_span_end = tail.span.source_callsite().hi();\n-    let insert_span = Span::with_root_ctxt(tail_span_end, tail_span_end);\n+    let insert_span = tail.span.source_callsite().shrink_to_hi();\n     let remove_span = semi_span.with_lo(block.span.hi());\n \n     span_lint_and_then("}]}