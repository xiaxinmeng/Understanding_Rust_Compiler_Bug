{"sha": "cd29740e6ece9bc5a99a72b987e8e6e39e67fc72", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkMjk3NDBlNmVjZTliYzVhOTlhNzJiOTg3ZThlNmUzOWU2N2ZjNzI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-02-25T12:08:43Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-02-25T12:08:43Z"}, "message": "Auto merge of #3805 - martinsp:ice-3747, r=Manishearth\n\nFix ICE #3747\n\nI'm not sure if this was the correct approach.\n\nI don't know if I put tests/ui/crashses/ice-3747.rs in correct place because the test always passed when I ran it with `cargo test`, even without the fix applied.\n\nIf I run that test with `env CLIPPY_TESTS=true cargo run --bin clippy-driver -- -L ./target/debug tests/ui/crashes/ice-3747.rs` then the test correctly fails without the fix applied\n\nfixes #3747", "tree": {"sha": "e8b579400e9a3df123db8efc134b2ec603841a82", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e8b579400e9a3df123db8efc134b2ec603841a82"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd29740e6ece9bc5a99a72b987e8e6e39e67fc72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd29740e6ece9bc5a99a72b987e8e6e39e67fc72", "html_url": "https://github.com/rust-lang/rust/commit/cd29740e6ece9bc5a99a72b987e8e6e39e67fc72", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd29740e6ece9bc5a99a72b987e8e6e39e67fc72/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1233b39ca915c65131c6e404c24e69ab80bf5e0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1233b39ca915c65131c6e404c24e69ab80bf5e0c", "html_url": "https://github.com/rust-lang/rust/commit/1233b39ca915c65131c6e404c24e69ab80bf5e0c"}, {"sha": "391ee7987dca6c5ca9ea32a4d8dfd28586d4c89a", "url": "https://api.github.com/repos/rust-lang/rust/commits/391ee7987dca6c5ca9ea32a4d8dfd28586d4c89a", "html_url": "https://github.com/rust-lang/rust/commit/391ee7987dca6c5ca9ea32a4d8dfd28586d4c89a"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "3b15f2760c155d246d7131a4c9b7e303a464735c", "filename": "clippy_lints/src/functions.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cd29740e6ece9bc5a99a72b987e8e6e39e67fc72/clippy_lints%2Fsrc%2Ffunctions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd29740e6ece9bc5a99a72b987e8e6e39e67fc72/clippy_lints%2Fsrc%2Ffunctions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffunctions.rs?ref=cd29740e6ece9bc5a99a72b987e8e6e39e67fc72", "patch": "@@ -152,7 +152,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Functions {\n \n         let nodeid = cx.tcx.hir().hir_to_node_id(hir_id);\n         self.check_raw_ptr(cx, unsafety, decl, body, nodeid);\n-        self.check_line_number(cx, span);\n+        self.check_line_number(cx, span, body);\n     }\n \n     fn check_trait_item(&mut self, cx: &LateContext<'a, 'tcx>, item: &'tcx hir::TraitItem) {\n@@ -183,12 +183,12 @@ impl<'a, 'tcx> Functions {\n         }\n     }\n \n-    fn check_line_number(self, cx: &LateContext<'_, '_>, span: Span) {\n+    fn check_line_number(self, cx: &LateContext<'_, '_>, span: Span, body: &'tcx hir::Body) {\n         if in_external_macro(cx.sess(), span) {\n             return;\n         }\n \n-        let code_snippet = snippet(cx, span, \"..\");\n+        let code_snippet = snippet(cx, body.value.span, \"..\");\n         let mut line_count: u64 = 0;\n         let mut in_comment = false;\n         let mut code_in_line;"}, {"sha": "cdf018cbc88d8426193b2951d64734312df50dc2", "filename": "tests/ui/crashes/ice-3747.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/cd29740e6ece9bc5a99a72b987e8e6e39e67fc72/tests%2Fui%2Fcrashes%2Fice-3747.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd29740e6ece9bc5a99a72b987e8e6e39e67fc72/tests%2Fui%2Fcrashes%2Fice-3747.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fice-3747.rs?ref=cd29740e6ece9bc5a99a72b987e8e6e39e67fc72", "patch": "@@ -0,0 +1,17 @@\n+/// Test for https://github.com/rust-lang/rust-clippy/issues/3747\n+\n+macro_rules! a {\n+    ( $pub:tt $($attr:tt)* ) => {\n+        $($attr)* $pub fn say_hello() {}\n+    };\n+}\n+\n+macro_rules! b {\n+    () => {\n+        a! { pub }\n+    };\n+}\n+\n+b! {}\n+\n+fn main() {}"}]}