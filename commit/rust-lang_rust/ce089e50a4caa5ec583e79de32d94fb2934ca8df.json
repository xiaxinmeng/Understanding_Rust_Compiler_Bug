{"sha": "ce089e50a4caa5ec583e79de32d94fb2934ca8df", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlMDg5ZTUwYTRjYWE1ZWM1ODNlNzlkZTMyZDk0ZmIyOTM0Y2E4ZGY=", "commit": {"author": {"name": "Jared Roesch", "email": "roeschinc@gmail.com", "date": "2015-07-01T20:08:25Z"}, "committer": {"name": "Jared Roesch", "email": "roeschinc@gmail.com", "date": "2015-07-01T20:08:25Z"}, "message": "Address nits", "tree": {"sha": "32806930deed9fc8d0fd2fad47b251f8a8e90976", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/32806930deed9fc8d0fd2fad47b251f8a8e90976"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce089e50a4caa5ec583e79de32d94fb2934ca8df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce089e50a4caa5ec583e79de32d94fb2934ca8df", "html_url": "https://github.com/rust-lang/rust/commit/ce089e50a4caa5ec583e79de32d94fb2934ca8df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce089e50a4caa5ec583e79de32d94fb2934ca8df/comments", "author": {"login": "jroesch", "id": 696509, "node_id": "MDQ6VXNlcjY5NjUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/696509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jroesch", "html_url": "https://github.com/jroesch", "followers_url": "https://api.github.com/users/jroesch/followers", "following_url": "https://api.github.com/users/jroesch/following{/other_user}", "gists_url": "https://api.github.com/users/jroesch/gists{/gist_id}", "starred_url": "https://api.github.com/users/jroesch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jroesch/subscriptions", "organizations_url": "https://api.github.com/users/jroesch/orgs", "repos_url": "https://api.github.com/users/jroesch/repos", "events_url": "https://api.github.com/users/jroesch/events{/privacy}", "received_events_url": "https://api.github.com/users/jroesch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jroesch", "id": 696509, "node_id": "MDQ6VXNlcjY5NjUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/696509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jroesch", "html_url": "https://github.com/jroesch", "followers_url": "https://api.github.com/users/jroesch/followers", "following_url": "https://api.github.com/users/jroesch/following{/other_user}", "gists_url": "https://api.github.com/users/jroesch/gists{/gist_id}", "starred_url": "https://api.github.com/users/jroesch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jroesch/subscriptions", "organizations_url": "https://api.github.com/users/jroesch/orgs", "repos_url": "https://api.github.com/users/jroesch/repos", "events_url": "https://api.github.com/users/jroesch/events{/privacy}", "received_events_url": "https://api.github.com/users/jroesch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a8f83a6e59abb53adaafe7a9f70ff7069feefae", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a8f83a6e59abb53adaafe7a9f70ff7069feefae", "html_url": "https://github.com/rust-lang/rust/commit/7a8f83a6e59abb53adaafe7a9f70ff7069feefae"}], "stats": {"total": 27, "additions": 19, "deletions": 8}, "files": [{"sha": "a303c49bf8db7d08565aac54d07f9cd44ab4b520", "filename": "src/librustc/middle/check_match.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ce089e50a4caa5ec583e79de32d94fb2934ca8df/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce089e50a4caa5ec583e79de32d94fb2934ca8df/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs?ref=ce089e50a4caa5ec583e79de32d94fb2934ca8df", "patch": "@@ -1113,7 +1113,10 @@ fn check_legality_of_move_bindings(cx: &MatchCheckCtxt,\n                     ast::PatIdent(ast::BindByValue(_), _, ref sub) => {\n                         let pat_ty = tcx.node_id_to_type(p.id);\n                         //FIXME: (@jroesch) this code should be floated up as well\n-                        let infcx = infer::new_infer_ctxt(cx.tcx, &cx.tcx.tables, Some(cx.param_env.clone()), false);\n+                        let infcx = infer::new_infer_ctxt(cx.tcx,\n+                                                          &cx.tcx.tables,\n+                                                          Some(cx.param_env.clone()),\n+                                                          false);\n                         if infcx.type_moves_by_default(pat_ty, pat.span) {\n                             check_move(p, sub.as_ref().map(|p| &**p));\n                         }\n@@ -1143,7 +1146,11 @@ fn check_for_mutation_in_guard<'a, 'tcx>(cx: &'a MatchCheckCtxt<'a, 'tcx>,\n         cx: cx,\n     };\n \n-    let infcx = infer::new_infer_ctxt(cx.tcx, &cx.tcx.tables, Some(checker.cx.param_env.clone()), false);\n+    let infcx = infer::new_infer_ctxt(cx.tcx,\n+                                      &cx.tcx.tables,\n+                                      Some(checker.cx.param_env.clone()),\n+                                      false);\n+\n     let mut visitor = ExprUseVisitor::new(&mut checker, &infcx);\n     visitor.walk_expr(guard);\n }"}, {"sha": "c9017432473a7b5c8e100eec0fbd53583eefbb18", "filename": "src/librustc/middle/check_rvalues.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ce089e50a4caa5ec583e79de32d94fb2934ca8df/src%2Flibrustc%2Fmiddle%2Fcheck_rvalues.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce089e50a4caa5ec583e79de32d94fb2934ca8df/src%2Flibrustc%2Fmiddle%2Fcheck_rvalues.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcheck_rvalues.rs?ref=ce089e50a4caa5ec583e79de32d94fb2934ca8df", "patch": "@@ -41,7 +41,10 @@ impl<'a, 'tcx, 'v> visit::Visitor<'v> for RvalueContext<'a, 'tcx> {\n         {\n             // FIXME (@jroesch) change this to be an inference context\n             let param_env = ParameterEnvironment::for_item(self.tcx, fn_id);\n-            let infcx = infer::new_infer_ctxt(self.tcx, &self.tcx.tables, Some(param_env.clone()), false);\n+            let infcx = infer::new_infer_ctxt(self.tcx,\n+                                              &self.tcx.tables,\n+                                              Some(param_env.clone()),\n+                                              false);\n             let mut delegate = RvalueContextDelegate { tcx: self.tcx, param_env: &param_env };\n             let mut euv = euv::ExprUseVisitor::new(&mut delegate, &infcx);\n             euv.walk_fn(fd, b);"}, {"sha": "7df37bdae07dbe0e16d04c903796bd4e8c4f01eb", "filename": "src/librustc/middle/infer/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce089e50a4caa5ec583e79de32d94fb2934ca8df/src%2Flibrustc%2Fmiddle%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce089e50a4caa5ec583e79de32d94fb2934ca8df/src%2Flibrustc%2Fmiddle%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Fmod.rs?ref=ce089e50a4caa5ec583e79de32d94fb2934ca8df", "patch": "@@ -1318,6 +1318,8 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n     pub fn type_moves_by_default(&self, ty: Ty<'tcx>, span: Span) -> bool {\n         let ty = self.resolve_type_vars_if_possible(&ty);\n         !traits::type_known_to_meet_builtin_bound(self, ty, ty::BoundCopy, span)\n+        // FIXME(@jroesch): should be able to use:\n+        // ty.moves_by_default(&self.parameter_environment, span)\n     }\n \n     pub fn node_method_ty(&self, method_call: ty::MethodCall)"}, {"sha": "5126a549887eda690c5236bc4c794b701609aa64", "filename": "src/librustc/middle/traits/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce089e50a4caa5ec583e79de32d94fb2934ca8df/src%2Flibrustc%2Fmiddle%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce089e50a4caa5ec583e79de32d94fb2934ca8df/src%2Flibrustc%2Fmiddle%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Fmod.rs?ref=ce089e50a4caa5ec583e79de32d94fb2934ca8df", "patch": "@@ -436,7 +436,7 @@ pub fn fully_normalize<'a,'tcx,T>(infcx: &InferCtxt<'a,'tcx>,\n     debug!(\"normalize_param_env(value={:?})\", value);\n \n     let mut selcx = &mut SelectionContext::new(infcx);\n-    // FIXME (@jroesch):\n+    // FIXME (@jroesch) ISSUE 26721\n     // I'm not sure if this is a bug or not, needs further investigation.\n     // It appears that by reusing the fulfillment_cx here we incur more\n     // obligations and later trip an asssertion on regionck.rs line 337.\n@@ -459,7 +459,7 @@ pub fn fully_normalize<'a,'tcx,T>(infcx: &InferCtxt<'a,'tcx>,\n     for obligation in obligations {\n         fulfill_cx.register_predicate_obligation(selcx.infcx(), obligation);\n     }\n-    \n+\n     try!(fulfill_cx.select_all_or_error(infcx));\n     let resolved_value = infcx.resolve_type_vars_if_possible(&normalized_value);\n     debug!(\"normalize_param_env: resolved_value={:?}\", resolved_value);"}, {"sha": "b1b0097cbf654c107a41332c4ac8ae7693424568", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce089e50a4caa5ec583e79de32d94fb2934ca8df/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce089e50a4caa5ec583e79de32d94fb2934ca8df/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=ce089e50a4caa5ec583e79de32d94fb2934ca8df", "patch": "@@ -4385,7 +4385,7 @@ impl<'tcx> TyS<'tcx> {\n         is_impld\n     }\n \n-    // temp hack, probably should be private\n+    // FIXME (@jroesch): I made this public to use it, not sure if should be private\n     pub fn moves_by_default<'a>(&'tcx self, param_env: &ParameterEnvironment<'a,'tcx>,\n                            span: Span) -> bool {\n         if self.flags.get().intersects(TypeFlags::MOVENESS_CACHED) {"}, {"sha": "96564277cdc1de8352675cd916259fe6e5bebe77", "filename": "src/librustc_trans/trans/common.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ce089e50a4caa5ec583e79de32d94fb2934ca8df/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce089e50a4caa5ec583e79de32d94fb2934ca8df/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs?ref=ce089e50a4caa5ec583e79de32d94fb2934ca8df", "patch": "@@ -22,7 +22,6 @@ use middle::cfg;\n use middle::def;\n use middle::infer;\n use middle::lang_items::LangItem;\n-use middle::region;\n use middle::subst::{self, Substs};\n use trans::base;\n use trans::build;"}, {"sha": "3d1b384c2d91517967ec362f33b4e3029070c512", "filename": "src/librustc_trans/trans/debuginfo/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce089e50a4caa5ec583e79de32d94fb2934ca8df/src%2Flibrustc_trans%2Ftrans%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce089e50a4caa5ec583e79de32d94fb2934ca8df/src%2Flibrustc_trans%2Ftrans%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fdebuginfo%2Fmod.rs?ref=ce089e50a4caa5ec583e79de32d94fb2934ca8df", "patch": "@@ -30,7 +30,7 @@ use rustc::ast_map;\n use trans::common::{NodeIdAndSpan, CrateContext, FunctionContext, Block};\n use trans;\n use trans::monomorphize;\n-use middle::ty::Ty; \n+use middle::ty::Ty;\n use session::config::{self, FullDebugInfo, LimitedDebugInfo, NoDebugInfo};\n use util::nodemap::{DefIdMap, NodeMap, FnvHashMap, FnvHashSet};\n "}]}