{"sha": "d55917ea598e761c49a1e5bb9134f372a7461062", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1NTkxN2VhNTk4ZTc2MWM0OWExZTViYjkxMzRmMzcyYTc0NjEwNjI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-04T18:24:44Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-04T18:28:38Z"}, "message": "std: Fix net::url constructor names", "tree": {"sha": "1b52fd6dc57974e8dd57a0905066f99b48062834", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b52fd6dc57974e8dd57a0905066f99b48062834"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d55917ea598e761c49a1e5bb9134f372a7461062", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d55917ea598e761c49a1e5bb9134f372a7461062", "html_url": "https://github.com/rust-lang/rust/commit/d55917ea598e761c49a1e5bb9134f372a7461062", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d55917ea598e761c49a1e5bb9134f372a7461062/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "225cdc4894638ea36b44dec8605fc357db191e64", "url": "https://api.github.com/repos/rust-lang/rust/commits/225cdc4894638ea36b44dec8605fc357db191e64", "html_url": "https://github.com/rust-lang/rust/commit/225cdc4894638ea36b44dec8605fc357db191e64"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "70d8cf704975c716c263e38b7ef0d482f39b4ad0", "filename": "src/libstd/net_url.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d55917ea598e761c49a1e5bb9134f372a7461062/src%2Flibstd%2Fnet_url.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d55917ea598e761c49a1e5bb9134f372a7461062/src%2Flibstd%2Fnet_url.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet_url.rs?ref=d55917ea598e761c49a1e5bb9134f372a7461062", "patch": "@@ -8,7 +8,7 @@ use from_str::FromStr;\n use result::{Err, Ok};\n use to_str::ToStr;\n \n-export Url, url, userinfo, query;\n+export Url, Query;\n export from_str, to_str;\n export get_scheme;\n export query_to_str;\n@@ -34,14 +34,14 @@ type UserInfo = {\n \n type Query = ~[(~str, ~str)];\n \n-fn url(-scheme: ~str, -user: Option<UserInfo>, -host: ~str,\n+fn Url(-scheme: ~str, -user: Option<UserInfo>, -host: ~str,\n        -port: Option<~str>, -path: ~str, -query: Query,\n        -fragment: Option<~str>) -> Url {\n     Url { scheme: scheme, user: user, host: host, port: port,\n      path: path, query: query, fragment: fragment }\n }\n \n-fn userinfo(-user: ~str, -pass: Option<~str>) -> UserInfo {\n+fn UserInfo(-user: ~str, -pass: Option<~str>) -> UserInfo {\n     {user: user, pass: pass}\n }\n \n@@ -300,7 +300,7 @@ fn userinfo_from_str(uinfo: ~str) -> UserInfo {\n     } else {\n         option::Some(p)\n     };\n-    return userinfo(user, pass);\n+    return UserInfo(user, pass);\n }\n \n fn userinfo_to_str(-userinfo: UserInfo) -> ~str {\n@@ -648,7 +648,7 @@ fn from_str(rawurl: &str) -> result::Result<Url, ~str> {\n     }\n     let (query, fragment) = result::unwrap(qry);\n \n-    return result::Ok(url(scheme, userinfo, host,\n+    return result::Ok(Url(scheme, userinfo, host,\n                        port, path, query, fragment));\n }\n "}]}