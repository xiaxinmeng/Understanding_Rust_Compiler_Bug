{"sha": "77dfd71b951f3c3f1f385fa819d388aae721be68", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3ZGZkNzFiOTUxZjNjM2YxZjM4NWZhODE5ZDM4OGFhZTcyMWJlNjg=", "commit": {"author": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2021-02-13T10:47:44Z"}, "committer": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2021-02-13T10:47:44Z"}, "message": "fix 82032", "tree": {"sha": "60a6e3f9734e8d4b38672fe91b92cbc7b616892d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60a6e3f9734e8d4b38672fe91b92cbc7b616892d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77dfd71b951f3c3f1f385fa819d388aae721be68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77dfd71b951f3c3f1f385fa819d388aae721be68", "html_url": "https://github.com/rust-lang/rust/commit/77dfd71b951f3c3f1f385fa819d388aae721be68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77dfd71b951f3c3f1f385fa819d388aae721be68/comments", "author": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "committer": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d416093209d0dd77a4cdeb5a2f1b5de1316787ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/d416093209d0dd77a4cdeb5a2f1b5de1316787ec", "html_url": "https://github.com/rust-lang/rust/commit/d416093209d0dd77a4cdeb5a2f1b5de1316787ec"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "0400431a542ee74825501726b2a7a170d23d6a81", "filename": "compiler/rustc_mir/src/borrow_check/diagnostics/mutability_errors.rs", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/77dfd71b951f3c3f1f385fa819d388aae721be68/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fmutability_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77dfd71b951f3c3f1f385fa819d388aae721be68/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fmutability_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fmutability_errors.rs?ref=77dfd71b951f3c3f1f385fa819d388aae721be68", "patch": "@@ -1,6 +1,7 @@\n use rustc_hir as hir;\n use rustc_hir::Node;\n use rustc_index::vec::Idx;\n+use rustc_middle::hir::map::Map;\n use rustc_middle::mir::{Mutability, Place, PlaceRef, ProjectionElem};\n use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_middle::{\n@@ -543,13 +544,24 @@ impl<'a, 'tcx> MirBorrowckCtxt<'a, 'tcx> {\n     // Attempt to search similar mutable associated items for suggestion.\n     // In the future, attempt in all path but initially for RHS of for_loop\n     fn suggest_similar_mut_method_for_for_loop(&self, err: &mut DiagnosticBuilder<'_>) {\n-        let hir = self.infcx.tcx.hir();\n-        let node = hir.item(self.mir_hir_id());\n         use hir::{\n-            Expr,\n+            BodyId, Expr,\n             ExprKind::{Block, Call, DropTemps, Match, MethodCall},\n+            HirId, ImplItem, ImplItemKind, Item, ItemKind,\n         };\n-        if let hir::ItemKind::Fn(_, _, body_id) = node.kind {\n+\n+        fn maybe_body_id_of_fn(hir_map: &Map<'tcx>, id: HirId) -> Option<BodyId> {\n+            match hir_map.find(id) {\n+                Some(Node::Item(Item { kind: ItemKind::Fn(_, _, body_id), .. }))\n+                | Some(Node::ImplItem(ImplItem { kind: ImplItemKind::Fn(_, body_id), .. })) => {\n+                    Some(*body_id)\n+                }\n+                _ => None,\n+            }\n+        }\n+        let hir_map = self.infcx.tcx.hir();\n+        let mir_body_hir_id = self.mir_hir_id();\n+        if let Some(fn_body_id) = maybe_body_id_of_fn(&hir_map, mir_body_hir_id) {\n             if let Block(\n                 hir::Block {\n                     expr:\n@@ -579,7 +591,7 @@ impl<'a, 'tcx> MirBorrowckCtxt<'a, 'tcx> {\n                     ..\n                 },\n                 _,\n-            ) = hir.body(body_id).value.kind\n+            ) = hir_map.body(fn_body_id).value.kind\n             {\n                 let opt_suggestions = path_segment\n                     .hir_id"}]}