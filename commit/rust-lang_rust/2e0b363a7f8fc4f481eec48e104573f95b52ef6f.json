{"sha": "2e0b363a7f8fc4f481eec48e104573f95b52ef6f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlMGIzNjNhN2Y4ZmM0ZjQ4MWVlYzQ4ZTEwNDU3M2Y5NWI1MmVmNmY=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-03-27T04:26:49Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-03-27T14:04:15Z"}, "message": "syntax: Remove dead code from the parser", "tree": {"sha": "3cbd6f068d8428d1e3bbfb0e3cd3f68647dc4d5f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3cbd6f068d8428d1e3bbfb0e3cd3f68647dc4d5f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e0b363a7f8fc4f481eec48e104573f95b52ef6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e0b363a7f8fc4f481eec48e104573f95b52ef6f", "html_url": "https://github.com/rust-lang/rust/commit/2e0b363a7f8fc4f481eec48e104573f95b52ef6f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e0b363a7f8fc4f481eec48e104573f95b52ef6f/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b26ae289d0c69350742daa9cadb1c099d2ec3816", "url": "https://api.github.com/repos/rust-lang/rust/commits/b26ae289d0c69350742daa9cadb1c099d2ec3816", "html_url": "https://github.com/rust-lang/rust/commit/b26ae289d0c69350742daa9cadb1c099d2ec3816"}], "stats": {"total": 8, "additions": 0, "deletions": 8}, "files": [{"sha": "9cd53e72aa355dd6c10e3abb6eaf56a59fad7fea", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2e0b363a7f8fc4f481eec48e104573f95b52ef6f/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e0b363a7f8fc4f481eec48e104573f95b52ef6f/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=2e0b363a7f8fc4f481eec48e104573f95b52ef6f", "patch": "@@ -3116,14 +3116,6 @@ pub impl Parser {\n     //    impl<T> Foo { ... }\n     //    impl<T> ToStr for ~[T] { ... }\n     fn parse_item_impl(&self, visibility: ast::visibility) -> item_info {\n-        fn wrap_path(p: &Parser, pt: @path) -> @Ty {\n-            @Ty {\n-                id: p.get_id(),\n-                node: ty_path(pt, p.get_id()),\n-                span: pt.span,\n-            }\n-        }\n-\n         // First, parse type parameters if necessary.\n         let generics = self.parse_generics();\n "}]}