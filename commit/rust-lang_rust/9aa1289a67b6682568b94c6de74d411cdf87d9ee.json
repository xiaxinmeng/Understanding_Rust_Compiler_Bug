{"sha": "9aa1289a67b6682568b94c6de74d411cdf87d9ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhYTEyODlhNjdiNjY4MjU2OGI5NGM2ZGU3NGQ0MTFjZGY4N2Q5ZWU=", "commit": {"author": {"name": "Andrea Canciani", "email": "ranma42@gmail.com", "date": "2015-09-12T15:05:29Z"}, "committer": {"name": "Andrea Canciani", "email": "ranma42@gmail.com", "date": "2015-09-12T15:05:29Z"}, "message": "Add a comment to explain the `#[inline(never)]` annotation\n\nand regenerate the platform intrinsics source files.", "tree": {"sha": "258e43b7f3d006b64b115330766db66016b771d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/258e43b7f3d006b64b115330766db66016b771d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9aa1289a67b6682568b94c6de74d411cdf87d9ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9aa1289a67b6682568b94c6de74d411cdf87d9ee", "html_url": "https://github.com/rust-lang/rust/commit/9aa1289a67b6682568b94c6de74d411cdf87d9ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9aa1289a67b6682568b94c6de74d411cdf87d9ee/comments", "author": {"login": "ranma42", "id": 1506030, "node_id": "MDQ6VXNlcjE1MDYwMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1506030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ranma42", "html_url": "https://github.com/ranma42", "followers_url": "https://api.github.com/users/ranma42/followers", "following_url": "https://api.github.com/users/ranma42/following{/other_user}", "gists_url": "https://api.github.com/users/ranma42/gists{/gist_id}", "starred_url": "https://api.github.com/users/ranma42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ranma42/subscriptions", "organizations_url": "https://api.github.com/users/ranma42/orgs", "repos_url": "https://api.github.com/users/ranma42/repos", "events_url": "https://api.github.com/users/ranma42/events{/privacy}", "received_events_url": "https://api.github.com/users/ranma42/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ranma42", "id": 1506030, "node_id": "MDQ6VXNlcjE1MDYwMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1506030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ranma42", "html_url": "https://github.com/ranma42", "followers_url": "https://api.github.com/users/ranma42/followers", "following_url": "https://api.github.com/users/ranma42/following{/other_user}", "gists_url": "https://api.github.com/users/ranma42/gists{/gist_id}", "starred_url": "https://api.github.com/users/ranma42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ranma42/subscriptions", "organizations_url": "https://api.github.com/users/ranma42/orgs", "repos_url": "https://api.github.com/users/ranma42/repos", "events_url": "https://api.github.com/users/ranma42/events{/privacy}", "received_events_url": "https://api.github.com/users/ranma42/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ef62a44903df9574b25ca0d04e3a648b6bb54cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ef62a44903df9574b25ca0d04e3a648b6bb54cd", "html_url": "https://github.com/rust-lang/rust/commit/9ef62a44903df9574b25ca0d04e3a648b6bb54cd"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "e3aa4e688d38beea06fa567826570c3bccc0f3a8", "filename": "src/etc/platform-intrinsics/generator.py", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9aa1289a67b6682568b94c6de74d411cdf87d9ee/src%2Fetc%2Fplatform-intrinsics%2Fgenerator.py", "raw_url": "https://github.com/rust-lang/rust/raw/9aa1289a67b6682568b94c6de74d411cdf87d9ee/src%2Fetc%2Fplatform-intrinsics%2Fgenerator.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fplatform-intrinsics%2Fgenerator.py?ref=9aa1289a67b6682568b94c6de74d411cdf87d9ee", "patch": "@@ -737,6 +737,8 @@ def open(self, platform):\n use IntrinsicDef::Named;\n use rustc::middle::ty;\n \n+// The default inlining settings trigger a pathological behaviour in\n+// LLVM, which causes makes compilation very slow. See #28273.\n #[inline(never)]\n pub fn find<'tcx>(_tcx: &ty::ctxt<'tcx>, name: &str) -> Option<Intrinsic> {{\n     if !name.starts_with(\"{0}\") {{ return None }}"}, {"sha": "fda65554cd2f23f4df334a0e061a636fe1e1e05f", "filename": "src/librustc_platform_intrinsics/aarch64.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9aa1289a67b6682568b94c6de74d411cdf87d9ee/src%2Flibrustc_platform_intrinsics%2Faarch64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9aa1289a67b6682568b94c6de74d411cdf87d9ee/src%2Flibrustc_platform_intrinsics%2Faarch64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_platform_intrinsics%2Faarch64.rs?ref=9aa1289a67b6682568b94c6de74d411cdf87d9ee", "patch": "@@ -17,6 +17,8 @@ use {Intrinsic, i, i_, u, u_, f, v, v_, agg, p, void};\n use IntrinsicDef::Named;\n use rustc::middle::ty;\n \n+// The default inlining settings trigger a pathological behaviour in\n+// LLVM, which causes makes compilation very slow. See #28273.\n #[inline(never)]\n pub fn find<'tcx>(_tcx: &ty::ctxt<'tcx>, name: &str) -> Option<Intrinsic> {\n     if !name.starts_with(\"aarch64_v\") { return None }"}, {"sha": "166bf66d819c77c2eb8f5608a0a4c112269d95d7", "filename": "src/librustc_platform_intrinsics/arm.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9aa1289a67b6682568b94c6de74d411cdf87d9ee/src%2Flibrustc_platform_intrinsics%2Farm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9aa1289a67b6682568b94c6de74d411cdf87d9ee/src%2Flibrustc_platform_intrinsics%2Farm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_platform_intrinsics%2Farm.rs?ref=9aa1289a67b6682568b94c6de74d411cdf87d9ee", "patch": "@@ -13,10 +13,12 @@\n \n #![allow(unused_imports)]\n \n-use {Intrinsic, i, i_, u, u_, f, v, agg, p};\n+use {Intrinsic, i, i_, u, u_, f, v, v_, agg, p, void};\n use IntrinsicDef::Named;\n use rustc::middle::ty;\n \n+// The default inlining settings trigger a pathological behaviour in\n+// LLVM, which causes makes compilation very slow. See #28273.\n #[inline(never)]\n pub fn find<'tcx>(_tcx: &ty::ctxt<'tcx>, name: &str) -> Option<Intrinsic> {\n     if !name.starts_with(\"arm_v\") { return None }"}, {"sha": "144fd5f4e761b1ac53f0464cd2d5707abddca71c", "filename": "src/librustc_platform_intrinsics/x86.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9aa1289a67b6682568b94c6de74d411cdf87d9ee/src%2Flibrustc_platform_intrinsics%2Fx86.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9aa1289a67b6682568b94c6de74d411cdf87d9ee/src%2Flibrustc_platform_intrinsics%2Fx86.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_platform_intrinsics%2Fx86.rs?ref=9aa1289a67b6682568b94c6de74d411cdf87d9ee", "patch": "@@ -17,6 +17,8 @@ use {Intrinsic, i, i_, u, u_, f, v, v_, agg, p, void};\n use IntrinsicDef::Named;\n use rustc::middle::ty;\n \n+// The default inlining settings trigger a pathological behaviour in\n+// LLVM, which causes makes compilation very slow. See #28273.\n #[inline(never)]\n pub fn find<'tcx>(_tcx: &ty::ctxt<'tcx>, name: &str) -> Option<Intrinsic> {\n     if !name.starts_with(\"x86_mm\") { return None }"}]}