{"sha": "c0ed53c0dab14b9000abe4e6c9e86918d8c48224", "node_id": "C_kwDOAAsO6NoAKGMwZWQ1M2MwZGFiMTRiOTAwMGFiZTRlNmM5ZTg2OTE4ZDhjNDgyMjQ", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-04-27T00:47:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-27T00:47:12Z"}, "message": "Rollup merge of #96430 - GuillaumeGomez:search-exclamation, r=notriddle\n\nFix handling of `!` in rustdoc search\n\nFixes #96399.\n\nI also updated the eBNF.\n\ncc `@jsha`\nr? `@notriddle`", "tree": {"sha": "45dd5a170c4517798ef7de3ac2395aba4fe352e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45dd5a170c4517798ef7de3ac2395aba4fe352e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0ed53c0dab14b9000abe4e6c9e86918d8c48224", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiaJKRCRBK7hj4Ov3rIwAAuPwIAAxeieU3oxgslu+mcS2yuN6a\n5G1AUdBDFiAKOBqdz77dE9TG5KWwUcImOzwWPIwQzrAvFkSyCEHDLI0UFfbbUrRk\nljhSDKfeJyZ8spSdYY8u2IBVFp5iau8mIDD+n5hqFMBjJIkMDfUr48paPieVyUY9\nvI/GNYwMp10TUYUFmCsbwThHbbMtl90eB9E8OClo1yyRy8bEHbYlMng+Ix7XbwsY\nKG8rI+JOtmsD8nwXunac0LxMUjOpU/GgfJiCt69W/A/UxSUAZSSFT7eaVt17Funb\nTC2ShEwTBHjArmwmIBFClbkq65HlZQZZQOik+W2VVTFRJOKdTp3DFrl4gCqMeNU=\n=ObV5\n-----END PGP SIGNATURE-----\n", "payload": "tree 45dd5a170c4517798ef7de3ac2395aba4fe352e4\nparent 875b22ff3023eab82fe98a33f040ee5c6560683a\nparent 4ea149905b460e086809d7a34dfcbdca312bee3d\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1651020432 +0200\ncommitter GitHub <noreply@github.com> 1651020432 +0200\n\nRollup merge of #96430 - GuillaumeGomez:search-exclamation, r=notriddle\n\nFix handling of `!` in rustdoc search\n\nFixes #96399.\n\nI also updated the eBNF.\n\ncc `@jsha`\nr? `@notriddle`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0ed53c0dab14b9000abe4e6c9e86918d8c48224", "html_url": "https://github.com/rust-lang/rust/commit/c0ed53c0dab14b9000abe4e6c9e86918d8c48224", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0ed53c0dab14b9000abe4e6c9e86918d8c48224/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "875b22ff3023eab82fe98a33f040ee5c6560683a", "url": "https://api.github.com/repos/rust-lang/rust/commits/875b22ff3023eab82fe98a33f040ee5c6560683a", "html_url": "https://github.com/rust-lang/rust/commit/875b22ff3023eab82fe98a33f040ee5c6560683a"}, {"sha": "4ea149905b460e086809d7a34dfcbdca312bee3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ea149905b460e086809d7a34dfcbdca312bee3d", "html_url": "https://github.com/rust-lang/rust/commit/4ea149905b460e086809d7a34dfcbdca312bee3d"}], "stats": {"total": 151, "additions": 148, "deletions": 3}, "files": [{"sha": "c1d2ec540b0b0bcf14cfcbc5cbe7e4253986ccf7", "filename": "src/librustdoc/html/static/js/search.js", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c0ed53c0dab14b9000abe4e6c9e86918d8c48224/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js", "raw_url": "https://github.com/rust-lang/rust/raw/c0ed53c0dab14b9000abe4e6c9e86918d8c48224/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js?ref=c0ed53c0dab14b9000abe4e6c9e86918d8c48224", "patch": "@@ -310,10 +310,20 @@ window.initSearch = function(rawSearchIndex) {\n      */\n     function getIdentEndPosition(parserState) {\n         let end = parserState.pos;\n+        let foundExclamation = false;\n         while (parserState.pos < parserState.length) {\n             const c = parserState.userQuery[parserState.pos];\n             if (!isIdentCharacter(c)) {\n-                if (isErrorCharacter(c)) {\n+                if (c === \"!\") {\n+                    if (foundExclamation) {\n+                        throw new Error(\"Cannot have more than one `!` in an ident\");\n+                    } else if (parserState.pos + 1 < parserState.length &&\n+                        isIdentCharacter(parserState.userQuery[parserState.pos + 1]))\n+                    {\n+                        throw new Error(\"`!` can only be at the end of an ident\");\n+                    }\n+                    foundExclamation = true;\n+                } else if (isErrorCharacter(c)) {\n                     throw new Error(`Unexpected \\`${c}\\``);\n                 } else if (\n                     isStopCharacter(c) ||\n@@ -329,6 +339,7 @@ window.initSearch = function(rawSearchIndex) {\n                     }\n                     // Skip current \":\".\n                     parserState.pos += 1;\n+                    foundExclamation = false;\n                 } else {\n                     throw new Error(`Unexpected \\`${c}\\``);\n                 }\n@@ -591,7 +602,7 @@ window.initSearch = function(rawSearchIndex) {\n      *\n      * The supported syntax by this parser is as follow:\n      *\n-     * ident = *(ALPHA / DIGIT / \"_\")\n+     * ident = *(ALPHA / DIGIT / \"_\") [!]\n      * path = ident *(DOUBLE-COLON ident)\n      * arg = path [generics]\n      * arg-without-generic = path"}, {"sha": "dc42031e05f2f21f2522fe94e1a6fbade387fec8", "filename": "src/test/rustdoc-js-std/parser-errors.js", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c0ed53c0dab14b9000abe4e6c9e86918d8c48224/src%2Ftest%2Frustdoc-js-std%2Fparser-errors.js", "raw_url": "https://github.com/rust-lang/rust/raw/c0ed53c0dab14b9000abe4e6c9e86918d8c48224/src%2Ftest%2Frustdoc-js-std%2Fparser-errors.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js-std%2Fparser-errors.js?ref=c0ed53c0dab14b9000abe4e6c9e86918d8c48224", "patch": "@@ -35,6 +35,8 @@ const QUERY = [\n     \"a,:\",\n     \"  a<>  :\",\n     \"mod : :\",\n+    \"a!a\",\n+    \"a!!\",\n ];\n \n const PARSED = [\n@@ -362,4 +364,22 @@ const PARSED = [\n         userQuery: \"mod : :\",\n         error: 'Unexpected `:`',\n     },\n+    {\n+        elems: [],\n+        foundElems: 0,\n+        original: \"a!a\",\n+        returned: [],\n+        typeFilter: -1,\n+        userQuery: \"a!a\",\n+        error: '`!` can only be at the end of an ident',\n+    },\n+    {\n+        elems: [],\n+        foundElems: 0,\n+        original: \"a!!\",\n+        returned: [],\n+        typeFilter: -1,\n+        userQuery: \"a!!\",\n+        error: 'Cannot have more than one `!` in an ident',\n+    },\n ];"}, {"sha": "4b5ab01ac761b5fb449ec11920757e6a8ffedcec", "filename": "src/test/rustdoc-js-std/parser-ident.js", "status": "added", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/rust-lang/rust/blob/c0ed53c0dab14b9000abe4e6c9e86918d8c48224/src%2Ftest%2Frustdoc-js-std%2Fparser-ident.js", "raw_url": "https://github.com/rust-lang/rust/raw/c0ed53c0dab14b9000abe4e6c9e86918d8c48224/src%2Ftest%2Frustdoc-js-std%2Fparser-ident.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js-std%2Fparser-ident.js?ref=c0ed53c0dab14b9000abe4e6c9e86918d8c48224", "patch": "@@ -0,0 +1,93 @@\n+const QUERY = [\n+    \"R<!>\",\n+    \"!\",\n+    \"a!\",\n+    \"a!::b\",\n+    \"a!::b!\",\n+];\n+\n+const PARSED = [\n+    {\n+        elems: [{\n+            name: \"r\",\n+            fullPath: [\"r\"],\n+            pathWithoutLast: [],\n+            pathLast: \"r\",\n+            generics: [\n+                {\n+                    name: \"!\",\n+                    fullPath: [\"!\"],\n+                    pathWithoutLast: [],\n+                    pathLast: \"!\",\n+                    generics: [],\n+                },\n+            ],\n+        }],\n+        foundElems: 1,\n+        original: \"R<!>\",\n+        returned: [],\n+        typeFilter: -1,\n+        userQuery: \"r<!>\",\n+        error: null,\n+    },\n+    {\n+        elems: [{\n+            name: \"!\",\n+            fullPath: [\"!\"],\n+            pathWithoutLast: [],\n+            pathLast: \"!\",\n+            generics: [],\n+        }],\n+        foundElems: 1,\n+        original: \"!\",\n+        returned: [],\n+        typeFilter: -1,\n+        userQuery: \"!\",\n+        error: null,\n+    },\n+    {\n+        elems: [{\n+            name: \"a!\",\n+            fullPath: [\"a!\"],\n+            pathWithoutLast: [],\n+            pathLast: \"a!\",\n+            generics: [],\n+        }],\n+        foundElems: 1,\n+        original: \"a!\",\n+        returned: [],\n+        typeFilter: -1,\n+        userQuery: \"a!\",\n+        error: null,\n+    },\n+    {\n+        elems: [{\n+            name: \"a!::b\",\n+            fullPath: [\"a!\", \"b\"],\n+            pathWithoutLast: [\"a!\"],\n+            pathLast: \"b\",\n+            generics: [],\n+        }],\n+        foundElems: 1,\n+        original: \"a!::b\",\n+        returned: [],\n+        typeFilter: -1,\n+        userQuery: \"a!::b\",\n+        error: null,\n+    },\n+    {\n+        elems: [{\n+            name: \"a!::b!\",\n+            fullPath: [\"a!\", \"b!\"],\n+            pathWithoutLast: [\"a!\"],\n+            pathLast: \"b!\",\n+            generics: [],\n+        }],\n+        foundElems: 1,\n+        original: \"a!::b!\",\n+        returned: [],\n+        typeFilter: -1,\n+        userQuery: \"a!::b!\",\n+        error: null,\n+    },\n+];"}, {"sha": "6fce17dcabdd815085239bae4348a83cb8ef26db", "filename": "src/test/rustdoc-js-std/parser-returned.js", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/c0ed53c0dab14b9000abe4e6c9e86918d8c48224/src%2Ftest%2Frustdoc-js-std%2Fparser-returned.js", "raw_url": "https://github.com/rust-lang/rust/raw/c0ed53c0dab14b9000abe4e6c9e86918d8c48224/src%2Ftest%2Frustdoc-js-std%2Fparser-returned.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js-std%2Fparser-returned.js?ref=c0ed53c0dab14b9000abe4e6c9e86918d8c48224", "patch": "@@ -1,4 +1,10 @@\n-const QUERY = ['-> F<P>', '-> P', '->,a', 'aaaaa->a'];\n+const QUERY = [\n+    \"-> F<P>\",\n+    \"-> P\",\n+    \"->,a\",\n+    \"aaaaa->a\",\n+    \"-> !\",\n+];\n \n const PARSED = [\n     {\n@@ -75,4 +81,19 @@ const PARSED = [\n         userQuery: \"aaaaa->a\",\n         error: null,\n     },\n+    {\n+        elems: [],\n+        foundElems: 1,\n+        original: \"-> !\",\n+        returned: [{\n+            name: \"!\",\n+            fullPath: [\"!\"],\n+            pathWithoutLast: [],\n+            pathLast: \"!\",\n+            generics: [],\n+        }],\n+        typeFilter: -1,\n+        userQuery: \"-> !\",\n+        error: null,\n+    },\n ];"}]}