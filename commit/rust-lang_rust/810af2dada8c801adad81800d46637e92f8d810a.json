{"sha": "810af2dada8c801adad81800d46637e92f8d810a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxMGFmMmRhZGE4YzgwMWFkYWQ4MTgwMGQ0NjYzN2U5MmY4ZDgxMGE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-18T22:06:22Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-18T23:02:43Z"}, "message": "rustdoc: Put fn docs inside fn bodies", "tree": {"sha": "3374ca17b04293d861926c61e0bfb5d30b776fb1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3374ca17b04293d861926c61e0bfb5d30b776fb1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/810af2dada8c801adad81800d46637e92f8d810a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/810af2dada8c801adad81800d46637e92f8d810a", "html_url": "https://github.com/rust-lang/rust/commit/810af2dada8c801adad81800d46637e92f8d810a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/810af2dada8c801adad81800d46637e92f8d810a/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "919191149920ac58421c0a80906a541c09bca8d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/919191149920ac58421c0a80906a541c09bca8d4", "html_url": "https://github.com/rust-lang/rust/commit/919191149920ac58421c0a80906a541c09bca8d4"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "2e82d987b264c9f136be81049c91fce1a2227f19", "filename": "src/rustdoc/attr_parser.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/810af2dada8c801adad81800d46637e92f8d810a/src%2Frustdoc%2Fattr_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/810af2dada8c801adad81800d46637e92f8d810a/src%2Frustdoc%2Fattr_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fattr_parser.rs?ref=810af2dada8c801adad81800d46637e92f8d810a", "patch": "@@ -24,12 +24,14 @@ type arg_attrs = {\n     desc: str\n };\n \n-#[doc =\n-  \"Given a vec of attributes, extract the meta_items contained in the \\\n-   doc attribute\"]\n fn doc_meta(\n     attrs: [ast::attribute]\n ) -> option<@ast::meta_item> {\n+\n+    #[doc =\n+      \"Given a vec of attributes, extract the meta_items contained in the \\\n+       doc attribute\"];\n+\n     let doc_attrs = attr::find_attrs_by_name(attrs, \"doc\");\n     let doc_metas = attr::attr_metas(doc_attrs);\n     if vec::is_not_empty(doc_metas) {"}, {"sha": "be183e3b0be7a0a49ba9c66df3e93f8866eeabd4", "filename": "src/rustdoc/extract.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/810af2dada8c801adad81800d46637e92f8d810a/src%2Frustdoc%2Fextract.rs", "raw_url": "https://github.com/rust-lang/rust/raw/810af2dada8c801adad81800d46637e92f8d810a/src%2Frustdoc%2Fextract.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fextract.rs?ref=810af2dada8c801adad81800d46637e92f8d810a", "patch": "@@ -4,11 +4,13 @@ import rustc::syntax::ast;\n \n export from_srv, extract;\n \n-#[doc = \"Use the AST service to create a document tree\"]\n fn from_srv(\n     srv: astsrv::srv,\n     default_name: str\n ) -> doc::cratedoc {\n+\n+    #[doc = \"Use the AST service to create a document tree\"];\n+\n     astsrv::exec(srv) {|ctxt|\n         extract(ctxt.ast, default_name)\n     }"}, {"sha": "2abb6b4718bc255cf872939a4584e3cbe742ac4c", "filename": "src/rustdoc/rustdoc.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/810af2dada8c801adad81800d46637e92f8d810a/src%2Frustdoc%2Frustdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/810af2dada8c801adad81800d46637e92f8d810a/src%2Frustdoc%2Frustdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Frustdoc.rs?ref=810af2dada8c801adad81800d46637e92f8d810a", "patch": "@@ -5,12 +5,14 @@\n #[doc = \"A single operation on the document model\"]\n type pass = fn~(srv: astsrv::srv, doc: doc::cratedoc) -> doc::cratedoc;\n \n-#[doc = \"Run a series of passes over the document\"]\n fn run_passes(\n     srv: astsrv::srv,\n     doc: doc::cratedoc,\n     passes: [pass]\n ) -> doc::cratedoc {\n+\n+    #[doc = \"Run a series of passes over the document\"];\n+\n     vec::foldl(doc, passes) {|doc, pass|\n         pass(srv, doc)\n     }"}]}