{"sha": "787f5a2c12e72af923c1b0983e0f5b97839bcd40", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4N2Y1YTJjMTJlNzJhZjkyM2MxYjA5ODNlMGY1Yjk3ODM5YmNkNDA=", "commit": {"author": {"name": "Wilco Kusee", "email": "wilcokusee@gmail.com", "date": "2019-01-13T11:49:54Z"}, "committer": {"name": "Wilco Kusee", "email": "wilcokusee@gmail.com", "date": "2019-01-13T11:49:54Z"}, "message": "Add run-rustfix to infallible_destructuring_match", "tree": {"sha": "51d0522bbbd6a4c7c49e72db480f5d674579b1ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51d0522bbbd6a4c7c49e72db480f5d674579b1ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/787f5a2c12e72af923c1b0983e0f5b97839bcd40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/787f5a2c12e72af923c1b0983e0f5b97839bcd40", "html_url": "https://github.com/rust-lang/rust/commit/787f5a2c12e72af923c1b0983e0f5b97839bcd40", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/787f5a2c12e72af923c1b0983e0f5b97839bcd40/comments", "author": {"login": "detrumi", "id": 5758008, "node_id": "MDQ6VXNlcjU3NTgwMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/5758008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/detrumi", "html_url": "https://github.com/detrumi", "followers_url": "https://api.github.com/users/detrumi/followers", "following_url": "https://api.github.com/users/detrumi/following{/other_user}", "gists_url": "https://api.github.com/users/detrumi/gists{/gist_id}", "starred_url": "https://api.github.com/users/detrumi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/detrumi/subscriptions", "organizations_url": "https://api.github.com/users/detrumi/orgs", "repos_url": "https://api.github.com/users/detrumi/repos", "events_url": "https://api.github.com/users/detrumi/events{/privacy}", "received_events_url": "https://api.github.com/users/detrumi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "detrumi", "id": 5758008, "node_id": "MDQ6VXNlcjU3NTgwMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/5758008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/detrumi", "html_url": "https://github.com/detrumi", "followers_url": "https://api.github.com/users/detrumi/followers", "following_url": "https://api.github.com/users/detrumi/following{/other_user}", "gists_url": "https://api.github.com/users/detrumi/gists{/gist_id}", "starred_url": "https://api.github.com/users/detrumi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/detrumi/subscriptions", "organizations_url": "https://api.github.com/users/detrumi/orgs", "repos_url": "https://api.github.com/users/detrumi/repos", "events_url": "https://api.github.com/users/detrumi/events{/privacy}", "received_events_url": "https://api.github.com/users/detrumi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "87407c5e5f27ade439ddf5b98e5d739ddb4ef1bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/87407c5e5f27ade439ddf5b98e5d739ddb4ef1bd", "html_url": "https://github.com/rust-lang/rust/commit/87407c5e5f27ade439ddf5b98e5d739ddb4ef1bd"}], "stats": {"total": 87, "additions": 84, "deletions": 3}, "files": [{"sha": "f16f0fd00197b90695cc58adcb1a2d00465bbd76", "filename": "tests/ui/infallible_destructuring_match.fixed", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/rust-lang/rust/blob/787f5a2c12e72af923c1b0983e0f5b97839bcd40/tests%2Fui%2Finfallible_destructuring_match.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/787f5a2c12e72af923c1b0983e0f5b97839bcd40/tests%2Fui%2Finfallible_destructuring_match.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finfallible_destructuring_match.fixed?ref=787f5a2c12e72af923c1b0983e0f5b97839bcd40", "patch": "@@ -0,0 +1,79 @@\n+// run-rustfix\n+#![feature(exhaustive_patterns, never_type)]\n+#![allow(dead_code, unreachable_code, unused_variables)]\n+#![allow(clippy::let_and_return)]\n+\n+enum SingleVariantEnum {\n+    Variant(i32),\n+}\n+\n+struct TupleStruct(i32);\n+\n+enum EmptyEnum {}\n+\n+fn infallible_destructuring_match_enum() {\n+    let wrapper = SingleVariantEnum::Variant(0);\n+\n+    // This should lint!\n+    let SingleVariantEnum::Variant(data) = wrapper;\n+\n+    // This shouldn't!\n+    let data = match wrapper {\n+        SingleVariantEnum::Variant(_) => -1,\n+    };\n+\n+    // Neither should this!\n+    let data = match wrapper {\n+        SingleVariantEnum::Variant(i) => -1,\n+    };\n+\n+    let SingleVariantEnum::Variant(data) = wrapper;\n+}\n+\n+fn infallible_destructuring_match_struct() {\n+    let wrapper = TupleStruct(0);\n+\n+    // This should lint!\n+    let TupleStruct(data) = wrapper;\n+\n+    // This shouldn't!\n+    let data = match wrapper {\n+        TupleStruct(_) => -1,\n+    };\n+\n+    // Neither should this!\n+    let data = match wrapper {\n+        TupleStruct(i) => -1,\n+    };\n+\n+    let TupleStruct(data) = wrapper;\n+}\n+\n+fn never_enum() {\n+    let wrapper: Result<i32, !> = Ok(23);\n+\n+    // This should lint!\n+    let Ok(data) = wrapper;\n+\n+    // This shouldn't!\n+    let data = match wrapper {\n+        Ok(_) => -1,\n+    };\n+\n+    // Neither should this!\n+    let data = match wrapper {\n+        Ok(i) => -1,\n+    };\n+\n+    let Ok(data) = wrapper;\n+}\n+\n+impl EmptyEnum {\n+    fn match_on(&self) -> ! {\n+        // The lint shouldn't pick this up, as `let` won't work here!\n+        let data = match *self {};\n+        data\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "a4823ad60ad3dc9496a155bb7a16c7e71c3b1541", "filename": "tests/ui/infallible_destructuring_match.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/787f5a2c12e72af923c1b0983e0f5b97839bcd40/tests%2Fui%2Finfallible_destructuring_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/787f5a2c12e72af923c1b0983e0f5b97839bcd40/tests%2Fui%2Finfallible_destructuring_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finfallible_destructuring_match.rs?ref=787f5a2c12e72af923c1b0983e0f5b97839bcd40", "patch": "@@ -1,4 +1,6 @@\n+// run-rustfix\n #![feature(exhaustive_patterns, never_type)]\n+#![allow(dead_code, unreachable_code, unused_variables)]\n #![allow(clippy::let_and_return)]\n \n enum SingleVariantEnum {"}, {"sha": "e3693d44e9a1397ce724eab08d0a4df3d315520f", "filename": "tests/ui/infallible_destructuring_match.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/787f5a2c12e72af923c1b0983e0f5b97839bcd40/tests%2Fui%2Finfallible_destructuring_match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/787f5a2c12e72af923c1b0983e0f5b97839bcd40/tests%2Fui%2Finfallible_destructuring_match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finfallible_destructuring_match.stderr?ref=787f5a2c12e72af923c1b0983e0f5b97839bcd40", "patch": "@@ -1,5 +1,5 @@\n error: you seem to be trying to use match to destructure a single infallible pattern. Consider using `let`\n-  --> $DIR/infallible_destructuring_match.rs:16:5\n+  --> $DIR/infallible_destructuring_match.rs:18:5\n    |\n LL | /     let data = match wrapper {\n LL | |         SingleVariantEnum::Variant(i) => i,\n@@ -9,15 +9,15 @@ LL | |     };\n    = note: `-D clippy::infallible-destructuring-match` implied by `-D warnings`\n \n error: you seem to be trying to use match to destructure a single infallible pattern. Consider using `let`\n-  --> $DIR/infallible_destructuring_match.rs:37:5\n+  --> $DIR/infallible_destructuring_match.rs:39:5\n    |\n LL | /     let data = match wrapper {\n LL | |         TupleStruct(i) => i,\n LL | |     };\n    | |______^ help: try this: `let TupleStruct(data) = wrapper;`\n \n error: you seem to be trying to use match to destructure a single infallible pattern. Consider using `let`\n-  --> $DIR/infallible_destructuring_match.rs:58:5\n+  --> $DIR/infallible_destructuring_match.rs:60:5\n    |\n LL | /     let data = match wrapper {\n LL | |         Ok(i) => i,"}]}