{"sha": "64ac04567ba397f8600952e3875b9a197f7b2910", "node_id": "C_kwDOAAsO6NoAKDY0YWMwNDU2N2JhMzk3Zjg2MDA5NTJlMzg3NWI5YTE5N2Y3YjI5MTA", "commit": {"author": {"name": "Frank King", "email": "frankking1729@gmail.com", "date": "2022-03-17T15:11:49Z"}, "committer": {"name": "Frank King", "email": "frankking1729@gmail.com", "date": "2022-05-29T03:44:30Z"}, "message": "protect `std::io::Take::limit` from overflow in `read`\n\nfixs #94981", "tree": {"sha": "3ac114b1fe8f881953e0149f9fac19ce6e45cd3d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ac114b1fe8f881953e0149f9fac19ce6e45cd3d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64ac04567ba397f8600952e3875b9a197f7b2910", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64ac04567ba397f8600952e3875b9a197f7b2910", "html_url": "https://github.com/rust-lang/rust/commit/64ac04567ba397f8600952e3875b9a197f7b2910", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64ac04567ba397f8600952e3875b9a197f7b2910/comments", "author": {"login": "frank-king", "id": 16741972, "node_id": "MDQ6VXNlcjE2NzQxOTcy", "avatar_url": "https://avatars.githubusercontent.com/u/16741972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frank-king", "html_url": "https://github.com/frank-king", "followers_url": "https://api.github.com/users/frank-king/followers", "following_url": "https://api.github.com/users/frank-king/following{/other_user}", "gists_url": "https://api.github.com/users/frank-king/gists{/gist_id}", "starred_url": "https://api.github.com/users/frank-king/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frank-king/subscriptions", "organizations_url": "https://api.github.com/users/frank-king/orgs", "repos_url": "https://api.github.com/users/frank-king/repos", "events_url": "https://api.github.com/users/frank-king/events{/privacy}", "received_events_url": "https://api.github.com/users/frank-king/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frank-king", "id": 16741972, "node_id": "MDQ6VXNlcjE2NzQxOTcy", "avatar_url": "https://avatars.githubusercontent.com/u/16741972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frank-king", "html_url": "https://github.com/frank-king", "followers_url": "https://api.github.com/users/frank-king/followers", "following_url": "https://api.github.com/users/frank-king/following{/other_user}", "gists_url": "https://api.github.com/users/frank-king/gists{/gist_id}", "starred_url": "https://api.github.com/users/frank-king/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frank-king/subscriptions", "organizations_url": "https://api.github.com/users/frank-king/orgs", "repos_url": "https://api.github.com/users/frank-king/repos", "events_url": "https://api.github.com/users/frank-king/events{/privacy}", "received_events_url": "https://api.github.com/users/frank-king/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be52b4af5ec7e49572cb16519b7e144d6bcb051d", "url": "https://api.github.com/repos/rust-lang/rust/commits/be52b4af5ec7e49572cb16519b7e144d6bcb051d", "html_url": "https://github.com/rust-lang/rust/commit/be52b4af5ec7e49572cb16519b7e144d6bcb051d"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "004f18bbfcbc6d4da2d2ad278423b32c829dfe2a", "filename": "library/std/src/io/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/64ac04567ba397f8600952e3875b9a197f7b2910/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64ac04567ba397f8600952e3875b9a197f7b2910/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fmod.rs?ref=64ac04567ba397f8600952e3875b9a197f7b2910", "patch": "@@ -2559,6 +2559,7 @@ impl<T: Read> Read for Take<T> {\n \n         let max = cmp::min(buf.len() as u64, self.limit) as usize;\n         let n = self.inner.read(&mut buf[..max])?;\n+        assert!(n as u64 <= self.limit, \"number of read bytes exceeds limit\");\n         self.limit -= n as u64;\n         Ok(n)\n     }"}, {"sha": "b11292ed82d7f9e178b4e2541f60a461b6243bfa", "filename": "library/std/src/io/tests.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/64ac04567ba397f8600952e3875b9a197f7b2910/library%2Fstd%2Fsrc%2Fio%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64ac04567ba397f8600952e3875b9a197f7b2910/library%2Fstd%2Fsrc%2Fio%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Ftests.rs?ref=64ac04567ba397f8600952e3875b9a197f7b2910", "patch": "@@ -583,6 +583,25 @@ fn test_write_all_vectored() {\n     }\n }\n \n+// Issue 94981\n+#[test]\n+#[should_panic = \"number of read bytes exceeds limit\"]\n+fn test_take_wrong_length() {\n+    struct LieAboutSize(bool);\n+\n+    impl Read for LieAboutSize {\n+        fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {\n+            // Lie about the read size at first time of read.\n+            if core::mem::take(&mut self.0) { Ok(buf.len() + 1) } else { Ok(buf.len()) }\n+        }\n+    }\n+\n+    let mut buffer = vec![0; 4];\n+    let mut reader = LieAboutSize(true).take(4);\n+    // Primed the `Limit` by lying about the read size.\n+    let _ = reader.read(&mut buffer[..]);\n+}\n+\n #[bench]\n fn bench_take_read(b: &mut test::Bencher) {\n     b.iter(|| {"}]}