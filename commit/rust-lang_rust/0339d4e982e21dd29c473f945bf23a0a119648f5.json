{"sha": "0339d4e982e21dd29c473f945bf23a0a119648f5", "node_id": "C_kwDOAAsO6NoAKDAzMzlkNGU5ODJlMjFkZDI5YzQ3M2Y5NDViZjIzYTBhMTE5NjQ4ZjU", "commit": {"author": {"name": "Boxy", "email": "supbscripter@gmail.com", "date": "2023-04-27T07:34:11Z"}, "committer": {"name": "Boxy", "email": "supbscripter@gmail.com", "date": "2023-04-27T07:35:19Z"}, "message": "rename `needs_infer` to `has_infer`", "tree": {"sha": "4398726195c129918db3a52e86d854008aed9e7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4398726195c129918db3a52e86d854008aed9e7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0339d4e982e21dd29c473f945bf23a0a119648f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0339d4e982e21dd29c473f945bf23a0a119648f5", "html_url": "https://github.com/rust-lang/rust/commit/0339d4e982e21dd29c473f945bf23a0a119648f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0339d4e982e21dd29c473f945bf23a0a119648f5/comments", "author": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "331c5471d7fba4ac4ff69d162a62f7663bfbbf6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/331c5471d7fba4ac4ff69d162a62f7663bfbbf6a", "html_url": "https://github.com/rust-lang/rust/commit/331c5471d7fba4ac4ff69d162a62f7663bfbbf6a"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "a65720116440e3bdb5d49db508f5b1b9c1c64fba", "filename": "clippy_utils/src/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0339d4e982e21dd29c473f945bf23a0a119648f5/clippy_utils%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0339d4e982e21dd29c473f945bf23a0a119648f5/clippy_utils%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fty.rs?ref=0339d4e982e21dd29c473f945bf23a0a119648f5", "patch": "@@ -226,7 +226,7 @@ pub fn implements_trait_with_env<'tcx>(\n     ty_params: impl IntoIterator<Item = Option<GenericArg<'tcx>>>,\n ) -> bool {\n     // Clippy shouldn't have infer types\n-    assert!(!ty.needs_infer());\n+    assert!(!ty.has_infer());\n \n     let ty = tcx.erase_regions(ty);\n     if ty.has_escaping_bound_vars() {"}]}