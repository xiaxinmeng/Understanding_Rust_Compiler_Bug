{"sha": "59bd6e2eea151f097a65f2634dc5488b3c272d92", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5YmQ2ZTJlZWExNTFmMDk3YTY1ZjI2MzRkYzU0ODhiM2MyNzJkOTI=", "commit": {"author": {"name": "Daiki Ihara", "email": "sasurau4@gmail.com", "date": "2020-11-30T15:10:12Z"}, "committer": {"name": "Daiki Ihara", "email": "sasurau4@gmail.com", "date": "2020-11-30T15:10:12Z"}, "message": "Extract tests module to file in vfs crate", "tree": {"sha": "647c3f191e7425791bf828387d5d3ce6f98b0cac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/647c3f191e7425791bf828387d5d3ce6f98b0cac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/59bd6e2eea151f097a65f2634dc5488b3c272d92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/59bd6e2eea151f097a65f2634dc5488b3c272d92", "html_url": "https://github.com/rust-lang/rust/commit/59bd6e2eea151f097a65f2634dc5488b3c272d92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/59bd6e2eea151f097a65f2634dc5488b3c272d92/comments", "author": {"login": "sasurau4", "id": 13580199, "node_id": "MDQ6VXNlcjEzNTgwMTk5", "avatar_url": "https://avatars.githubusercontent.com/u/13580199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sasurau4", "html_url": "https://github.com/sasurau4", "followers_url": "https://api.github.com/users/sasurau4/followers", "following_url": "https://api.github.com/users/sasurau4/following{/other_user}", "gists_url": "https://api.github.com/users/sasurau4/gists{/gist_id}", "starred_url": "https://api.github.com/users/sasurau4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sasurau4/subscriptions", "organizations_url": "https://api.github.com/users/sasurau4/orgs", "repos_url": "https://api.github.com/users/sasurau4/repos", "events_url": "https://api.github.com/users/sasurau4/events{/privacy}", "received_events_url": "https://api.github.com/users/sasurau4/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sasurau4", "id": 13580199, "node_id": "MDQ6VXNlcjEzNTgwMTk5", "avatar_url": "https://avatars.githubusercontent.com/u/13580199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sasurau4", "html_url": "https://github.com/sasurau4", "followers_url": "https://api.github.com/users/sasurau4/followers", "following_url": "https://api.github.com/users/sasurau4/following{/other_user}", "gists_url": "https://api.github.com/users/sasurau4/gists{/gist_id}", "starred_url": "https://api.github.com/users/sasurau4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sasurau4/subscriptions", "organizations_url": "https://api.github.com/users/sasurau4/orgs", "repos_url": "https://api.github.com/users/sasurau4/repos", "events_url": "https://api.github.com/users/sasurau4/events{/privacy}", "received_events_url": "https://api.github.com/users/sasurau4/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8a2ff6ecc8e45c7e1420e01d52c8b7a315140e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8a2ff6ecc8e45c7e1420e01d52c8b7a315140e6", "html_url": "https://github.com/rust-lang/rust/commit/c8a2ff6ecc8e45c7e1420e01d52c8b7a315140e6"}], "stats": {"total": 156, "additions": 74, "deletions": 82}, "files": [{"sha": "9093fbd979813fd854bc6ad4cb29da6783834fdc", "filename": "crates/vfs/src/file_set.rs", "status": "modified", "additions": 1, "deletions": 50, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/59bd6e2eea151f097a65f2634dc5488b3c272d92/crates%2Fvfs%2Fsrc%2Ffile_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59bd6e2eea151f097a65f2634dc5488b3c272d92/crates%2Fvfs%2Fsrc%2Ffile_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fvfs%2Fsrc%2Ffile_set.rs?ref=59bd6e2eea151f097a65f2634dc5488b3c272d92", "patch": "@@ -158,53 +158,4 @@ impl fst::Automaton for PrefixOf<'_> {\n }\n \n #[cfg(test)]\n-mod tests {\n-    use super::*;\n-\n-    #[test]\n-    fn path_prefix() {\n-        let mut file_set = FileSetConfig::builder();\n-        file_set.add_file_set(vec![VfsPath::new_virtual_path(\"/foo\".into())]);\n-        file_set.add_file_set(vec![VfsPath::new_virtual_path(\"/foo/bar/baz\".into())]);\n-        let file_set = file_set.build();\n-\n-        let mut vfs = Vfs::default();\n-        vfs.set_file_contents(\n-            VfsPath::new_virtual_path(\"/foo/src/lib.rs\".into()),\n-            Some(Vec::new()),\n-        );\n-        vfs.set_file_contents(\n-            VfsPath::new_virtual_path(\"/foo/src/bar/baz/lib.rs\".into()),\n-            Some(Vec::new()),\n-        );\n-        vfs.set_file_contents(\n-            VfsPath::new_virtual_path(\"/foo/bar/baz/lib.rs\".into()),\n-            Some(Vec::new()),\n-        );\n-        vfs.set_file_contents(VfsPath::new_virtual_path(\"/quux/lib.rs\".into()), Some(Vec::new()));\n-\n-        let partition = file_set.partition(&vfs).into_iter().map(|it| it.len()).collect::<Vec<_>>();\n-        assert_eq!(partition, vec![2, 1, 1]);\n-    }\n-\n-    #[test]\n-    fn name_prefix() {\n-        let mut file_set = FileSetConfig::builder();\n-        file_set.add_file_set(vec![VfsPath::new_virtual_path(\"/foo\".into())]);\n-        file_set.add_file_set(vec![VfsPath::new_virtual_path(\"/foo-things\".into())]);\n-        let file_set = file_set.build();\n-\n-        let mut vfs = Vfs::default();\n-        vfs.set_file_contents(\n-            VfsPath::new_virtual_path(\"/foo/src/lib.rs\".into()),\n-            Some(Vec::new()),\n-        );\n-        vfs.set_file_contents(\n-            VfsPath::new_virtual_path(\"/foo-things/src/lib.rs\".into()),\n-            Some(Vec::new()),\n-        );\n-\n-        let partition = file_set.partition(&vfs).into_iter().map(|it| it.len()).collect::<Vec<_>>();\n-        assert_eq!(partition, vec![1, 1, 0]);\n-    }\n-}\n+mod tests;"}, {"sha": "2146df185d3a7815fe13c4467b6516004b868eac", "filename": "crates/vfs/src/file_set/tests.rs", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/59bd6e2eea151f097a65f2634dc5488b3c272d92/crates%2Fvfs%2Fsrc%2Ffile_set%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59bd6e2eea151f097a65f2634dc5488b3c272d92/crates%2Fvfs%2Fsrc%2Ffile_set%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fvfs%2Fsrc%2Ffile_set%2Ftests.rs?ref=59bd6e2eea151f097a65f2634dc5488b3c272d92", "patch": "@@ -0,0 +1,42 @@\n+use super::*;\n+\n+#[test]\n+fn path_prefix() {\n+    let mut file_set = FileSetConfig::builder();\n+    file_set.add_file_set(vec![VfsPath::new_virtual_path(\"/foo\".into())]);\n+    file_set.add_file_set(vec![VfsPath::new_virtual_path(\"/foo/bar/baz\".into())]);\n+    let file_set = file_set.build();\n+\n+    let mut vfs = Vfs::default();\n+    vfs.set_file_contents(VfsPath::new_virtual_path(\"/foo/src/lib.rs\".into()), Some(Vec::new()));\n+    vfs.set_file_contents(\n+        VfsPath::new_virtual_path(\"/foo/src/bar/baz/lib.rs\".into()),\n+        Some(Vec::new()),\n+    );\n+    vfs.set_file_contents(\n+        VfsPath::new_virtual_path(\"/foo/bar/baz/lib.rs\".into()),\n+        Some(Vec::new()),\n+    );\n+    vfs.set_file_contents(VfsPath::new_virtual_path(\"/quux/lib.rs\".into()), Some(Vec::new()));\n+\n+    let partition = file_set.partition(&vfs).into_iter().map(|it| it.len()).collect::<Vec<_>>();\n+    assert_eq!(partition, vec![2, 1, 1]);\n+}\n+\n+#[test]\n+fn name_prefix() {\n+    let mut file_set = FileSetConfig::builder();\n+    file_set.add_file_set(vec![VfsPath::new_virtual_path(\"/foo\".into())]);\n+    file_set.add_file_set(vec![VfsPath::new_virtual_path(\"/foo-things\".into())]);\n+    let file_set = file_set.build();\n+\n+    let mut vfs = Vfs::default();\n+    vfs.set_file_contents(VfsPath::new_virtual_path(\"/foo/src/lib.rs\".into()), Some(Vec::new()));\n+    vfs.set_file_contents(\n+        VfsPath::new_virtual_path(\"/foo-things/src/lib.rs\".into()),\n+        Some(Vec::new()),\n+    );\n+\n+    let partition = file_set.partition(&vfs).into_iter().map(|it| it.len()).collect::<Vec<_>>();\n+    assert_eq!(partition, vec![1, 1, 0]);\n+}"}, {"sha": "bd14911c96f9e723128b0d075b2ca31416dbe31d", "filename": "crates/vfs/src/vfs_path.rs", "status": "modified", "additions": 1, "deletions": 32, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/59bd6e2eea151f097a65f2634dc5488b3c272d92/crates%2Fvfs%2Fsrc%2Fvfs_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59bd6e2eea151f097a65f2634dc5488b3c272d92/crates%2Fvfs%2Fsrc%2Fvfs_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fvfs%2Fsrc%2Fvfs_path.rs?ref=59bd6e2eea151f097a65f2634dc5488b3c272d92", "patch": "@@ -311,35 +311,4 @@ impl VirtualPath {\n }\n \n #[cfg(test)]\n-mod tests {\n-    use super::*;\n-\n-    #[test]\n-    fn virtual_path_extensions() {\n-        assert_eq!(VirtualPath(\"/\".to_string()).name_and_extension(), None);\n-        assert_eq!(\n-            VirtualPath(\"/directory\".to_string()).name_and_extension(),\n-            Some((\"directory\", None))\n-        );\n-        assert_eq!(\n-            VirtualPath(\"/directory/\".to_string()).name_and_extension(),\n-            Some((\"directory\", None))\n-        );\n-        assert_eq!(\n-            VirtualPath(\"/directory/file\".to_string()).name_and_extension(),\n-            Some((\"file\", None))\n-        );\n-        assert_eq!(\n-            VirtualPath(\"/directory/.file\".to_string()).name_and_extension(),\n-            Some((\".file\", None))\n-        );\n-        assert_eq!(\n-            VirtualPath(\"/directory/.file.rs\".to_string()).name_and_extension(),\n-            Some((\".file\", Some(\"rs\")))\n-        );\n-        assert_eq!(\n-            VirtualPath(\"/directory/file.rs\".to_string()).name_and_extension(),\n-            Some((\"file\", Some(\"rs\")))\n-        );\n-    }\n-}\n+mod tests;"}, {"sha": "510e021e89035ca6f510a06a18855d398f5149d1", "filename": "crates/vfs/src/vfs_path/tests.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/59bd6e2eea151f097a65f2634dc5488b3c272d92/crates%2Fvfs%2Fsrc%2Fvfs_path%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59bd6e2eea151f097a65f2634dc5488b3c272d92/crates%2Fvfs%2Fsrc%2Fvfs_path%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fvfs%2Fsrc%2Fvfs_path%2Ftests.rs?ref=59bd6e2eea151f097a65f2634dc5488b3c272d92", "patch": "@@ -0,0 +1,30 @@\n+use super::*;\n+\n+#[test]\n+fn virtual_path_extensions() {\n+    assert_eq!(VirtualPath(\"/\".to_string()).name_and_extension(), None);\n+    assert_eq!(\n+        VirtualPath(\"/directory\".to_string()).name_and_extension(),\n+        Some((\"directory\", None))\n+    );\n+    assert_eq!(\n+        VirtualPath(\"/directory/\".to_string()).name_and_extension(),\n+        Some((\"directory\", None))\n+    );\n+    assert_eq!(\n+        VirtualPath(\"/directory/file\".to_string()).name_and_extension(),\n+        Some((\"file\", None))\n+    );\n+    assert_eq!(\n+        VirtualPath(\"/directory/.file\".to_string()).name_and_extension(),\n+        Some((\".file\", None))\n+    );\n+    assert_eq!(\n+        VirtualPath(\"/directory/.file.rs\".to_string()).name_and_extension(),\n+        Some((\".file\", Some(\"rs\")))\n+    );\n+    assert_eq!(\n+        VirtualPath(\"/directory/file.rs\".to_string()).name_and_extension(),\n+        Some((\"file\", Some(\"rs\")))\n+    );\n+}"}]}