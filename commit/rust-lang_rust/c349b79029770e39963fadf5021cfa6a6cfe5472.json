{"sha": "c349b79029770e39963fadf5021cfa6a6cfe5472", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzNDliNzkwMjk3NzBlMzk5NjNmYWRmNTAyMWNmYTZhNmNmZTU0NzI=", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-07-09T14:25:46Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-08-31T05:24:59Z"}, "message": "Apply suggestions", "tree": {"sha": "5626a77aa2d3949685a16e7f0be507ef443cfd03", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5626a77aa2d3949685a16e7f0be507ef443cfd03"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c349b79029770e39963fadf5021cfa6a6cfe5472", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEQ7Fl7qPq2YcWF1dqAn35M4hird0FAmEtvS0ACgkQAn35M4hi\nrd0rKw/9FDerwe3RrkBFGytw9iWVXUvtXAZ3vOJIHSMcMTPexMPtqRwjC2CCQKvQ\nEXR98JAJYOsOj+JlnOrk1HvgzXQQZKl98ts+a8L6l2jqNCUWZJRb0tN/pxwGRWvU\n2+i+vTFHMk1T3x5asGZ9/Mw2oKjF6Q4g+7m/W9yRcatCE/cMVjAbdJQ3IOuUts3D\nzMFUonYLRlJb52MakX/ujx7YOXL2aA+4bgZoVbwSAOHLucqXKE70C4dwbEo35yXZ\nt7OEdEsb6sZRl9PJcL0f5PVZ4rCN3IwOklIN21RMTtyM+99YLt4gRnmD/+QkczkY\nMcWLa5KekeExNZ6GT+GfsbNig83ITjF+rSamUvPIaaU5hVgjLdHvWHA0hOmCjJAy\ntNRpExh2pugT4CQrVWyu3ZOZiqwi7roeuVM6PeH8j+knjajoMdW3NITnGKd3fwkL\nShWsps2t4ngTt6F5hdgsYzVcymq1pkBBi7xAJj+AtbF0dzJTTqUgeuRCDO9T9nl+\nGJM8lItM1U3NfK9KdXfqev4+J8v+ENZpgYvyezptcQ5gBy0xlwpC6ZI9yO9a4Wi0\nY9FQwsnA/z/IaimjIuf+N29DvgI/d9dSFJVjOH7opdLT0LKj28CZ5/aryz7QYQik\neQAcSsmDkefTofL3pLWbg85JMcnzC/yIGTi55r2K0fUpDVjf5v4=\n=bXZx\n-----END PGP SIGNATURE-----", "payload": "tree 5626a77aa2d3949685a16e7f0be507ef443cfd03\nparent aff4cd5ce725602249c2554b04b1066d09acd31e\nauthor Deadbeef <ent3rm4n@gmail.com> 1625840746 +0800\ncommitter Deadbeef <ent3rm4n@gmail.com> 1630387499 +0000\n\nApply suggestions\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c349b79029770e39963fadf5021cfa6a6cfe5472", "html_url": "https://github.com/rust-lang/rust/commit/c349b79029770e39963fadf5021cfa6a6cfe5472", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c349b79029770e39963fadf5021cfa6a6cfe5472/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aff4cd5ce725602249c2554b04b1066d09acd31e", "url": "https://api.github.com/repos/rust-lang/rust/commits/aff4cd5ce725602249c2554b04b1066d09acd31e", "html_url": "https://github.com/rust-lang/rust/commit/aff4cd5ce725602249c2554b04b1066d09acd31e"}], "stats": {"total": 44, "additions": 18, "deletions": 26}, "files": [{"sha": "b25323c4e0a74710e20853ad87e55d6706f187da", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 18, "deletions": 26, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/c349b79029770e39963fadf5021cfa6a6cfe5472/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c349b79029770e39963fadf5021cfa6a6cfe5472/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=c349b79029770e39963fadf5021cfa6a6cfe5472", "patch": "@@ -7,13 +7,13 @@ use rustc_data_structures::fx::FxHashMap;\n use rustc_hir as hir;\n use rustc_hir::def::CtorKind;\n use rustc_hir::def_id::DefId;\n-use rustc_middle::bug;\n use rustc_middle::middle::stability;\n+use rustc_middle::span_bug;\n use rustc_middle::ty::layout::LayoutError;\n use rustc_middle::ty::{Adt, TyCtxt};\n use rustc_span::hygiene::MacroKind;\n use rustc_span::symbol::{kw, sym, Symbol};\n-use rustc_target::abi::Variants;\n+use rustc_target::abi::{Layout, Variants};\n \n use super::{\n     collect_paths_for_type, document, ensure_trailing_slash, item_ty_to_strs, notable_traits_decl,\n@@ -1606,6 +1606,15 @@ fn document_non_exhaustive(w: &mut Buffer, item: &clean::Item) {\n }\n \n fn document_type_layout(w: &mut Buffer, cx: &Context<'_>, ty_def_id: DefId) {\n+    fn write_size_of_layout(w: &mut Buffer, layout: &Layout) {\n+        if layout.abi.is_unsized() {\n+            write!(w, \"(unsized)\");\n+        } else {\n+            let bytes = layout.size.bytes();\n+            write!(w, \"{size} byte{pl}\", size = bytes, pl = if bytes == 1 { \"\" } else { \"s\" },);\n+        }\n+    }\n+\n     if !cx.shared.show_type_layout {\n         return;\n     }\n@@ -1627,17 +1636,9 @@ fn document_type_layout(w: &mut Buffer, cx: &Context<'_>, ty_def_id: DefId) {\n                  <a href=\\\"https://doc.rust-lang.org/reference/type-layout.html\\\">\u201cType Layout\u201d</a> \\\n                  chapter for details on type layout guarantees.</p></div>\"\n             );\n-            if ty_layout.layout.abi.is_unsized() {\n-                writeln!(w, \"<p><strong>Size:</strong> (unsized)</p>\");\n-            } else {\n-                let bytes = ty_layout.layout.size.bytes();\n-                writeln!(\n-                    w,\n-                    \"<p><strong>Size:</strong> {size} byte{pl}</p>\",\n-                    size = bytes,\n-                    pl = if bytes == 1 { \"\" } else { \"s\" },\n-                );\n-            }\n+            w.write_str(\"<p><strong>Size:</strong> \");\n+            write_size_of_layout(w, ty_layout.layout);\n+            writeln!(w, \"</p>\");\n             if let Variants::Multiple { variants, .. } = &ty_layout.layout.variants {\n                 if !variants.is_empty() {\n                     w.write_str(\n@@ -1649,23 +1650,14 @@ fn document_type_layout(w: &mut Buffer, cx: &Context<'_>, ty_def_id: DefId) {\n                     let adt = if let Adt(adt, _) = ty_layout.ty.kind() {\n                         adt\n                     } else {\n-                        bug!(\"not an adt\")\n+                        span_bug!(tcx.def_span(ty_def_id), \"not an adt\")\n                     };\n \n                     for (index, layout) in variants.iter_enumerated() {\n                         let ident = adt.variants[index].ident;\n-                        if layout.abi.is_unsized() {\n-                            writeln!(w, \"<li><code>{name}</code> (unsized)</li>\", name = ident);\n-                        } else {\n-                            let bytes = layout.size.bytes();\n-                            writeln!(\n-                                w,\n-                                \"<li><code>{name}</code>: {size} byte{pl}</li>\",\n-                                name = ident,\n-                                size = bytes,\n-                                pl = if bytes == 1 { \"\" } else { \"s\" },\n-                            );\n-                        }\n+                        write!(w, \"<li><code>{name}</code> \", name = ident);\n+                        write_size_of_layout(w, layout);\n+                        writeln!(w, \"</li>\");\n                     }\n                     w.write_str(\"</ul></p>\");\n                 }"}]}