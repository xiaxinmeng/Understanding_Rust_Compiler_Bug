{"sha": "ea780a69f3d1d47eaacd2811ab7d742c1627b3d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhNzgwYTY5ZjNkMWQ0N2VhYWNkMjgxMWFiN2Q3NDJjMTYyN2IzZDU=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2020-01-26T14:13:14Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2020-02-12T08:34:27Z"}, "message": "Extract driver test", "tree": {"sha": "2b544ebff6908da0584ea2438320790d5f26a546", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b544ebff6908da0584ea2438320790d5f26a546"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea780a69f3d1d47eaacd2811ab7d742c1627b3d5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAl5DuJMACgkQaTCGhp1Q\nZjc1VQ/+PMTmxUIiHhFh8g8CUU1GVR9gUMibtqeKtH7eAVE6WkD3WlOfD0KIdoBQ\nOxts60jshBHTtThpkHRDvt9DD1zwcTj4oT7KE5/CpjsRsWRVPp+oOyAU3II0xOkg\nalqMc6Xy12GjUD1RlFkMVd8JagBmzCHZMyJXpxz7d7obdbFurC3k5oT2fASYA2Lc\nEXMui9pbxhHTEjt4EcuGsBY1uEp0lR13sNsMHmgiZmdhOADucu2a1J/3z2mgdQhK\n7dtdIskwmFwl24jws6rlRAn5vKUXGZMRS7Qs/TIVr6Yu3XYU85KzXNqyptiBNtnC\nBteOvoP1VIO4E+ySpV1eX1+ocsq+1shWUio+TeP5v2SaiGjbIXb76T+PA+TB3iI+\n1Z1mCt07ESkctDWaGTiaT//0iraqoV6zKHOStvmaNhsy2U3SXgbwmzQ3ipw4b4Iz\neRbRO+zhDy29Ulm6u24xeuInXeC3TsiWbymv0Ju+st3pnG6Y1Yy/DYHk5Zb748KO\nHNUWK5nubGWxb8ZADD9FRl+4cz7mujLUMW7AhplZbLd5d0OqaA0wM9BDvuStG/sV\nssbR6PlvFg0GIOitgSbBRlwBdRjuQr7sqqKjVL4Gw0lxsP3ADsPDJd+itSS0bIy4\ncsbEL1HYtdak0c/KgjfjgahiWNAnlWFbckJ7lHKUlfGZNQj9YTo=\n=UkEY\n-----END PGP SIGNATURE-----", "payload": "tree 2b544ebff6908da0584ea2438320790d5f26a546\nparent 935b94d80b4456c0c9e50526af2c9f441b846949\nauthor flip1995 <hello@philkrones.com> 1580047994 +0100\ncommitter flip1995 <hello@philkrones.com> 1581496467 +0100\n\nExtract driver test\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea780a69f3d1d47eaacd2811ab7d742c1627b3d5", "html_url": "https://github.com/rust-lang/rust/commit/ea780a69f3d1d47eaacd2811ab7d742c1627b3d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea780a69f3d1d47eaacd2811ab7d742c1627b3d5/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "935b94d80b4456c0c9e50526af2c9f441b846949", "url": "https://api.github.com/repos/rust-lang/rust/commits/935b94d80b4456c0c9e50526af2c9f441b846949", "html_url": "https://github.com/rust-lang/rust/commit/935b94d80b4456c0c9e50526af2c9f441b846949"}], "stats": {"total": 89, "additions": 35, "deletions": 54}, "files": [{"sha": "eb81e45a64eadc842063a47ddbc1a66843463484", "filename": ".github/driver.sh", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/ea780a69f3d1d47eaacd2811ab7d742c1627b3d5/.github%2Fdriver.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ea780a69f3d1d47eaacd2811ab7d742c1627b3d5/.github%2Fdriver.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fdriver.sh?ref=ea780a69f3d1d47eaacd2811ab7d742c1627b3d5", "patch": "@@ -0,0 +1,29 @@\n+#! /bin/bash\n+\n+set -ex\n+\n+# Check sysroot handling\n+sysroot=$(./target/debug/clippy-driver --print sysroot)\n+test \"$sysroot\" = \"$(rustc --print sysroot)\"\n+\n+if [[ ${OS} == \"Windows\" ]]; then\n+  desired_sysroot=C:/tmp\n+else\n+  desired_sysroot=/tmp\n+fi\n+sysroot=$(./target/debug/clippy-driver --sysroot $desired_sysroot --print sysroot)\n+test \"$sysroot\" = $desired_sysroot\n+\n+sysroot=$(SYSROOT=$desired_sysroot ./target/debug/clippy-driver --print sysroot)\n+test \"$sysroot\" = $desired_sysroot\n+\n+# Make sure this isn't set - clippy-driver should cope without it\n+unset CARGO_MANIFEST_DIR\n+\n+# Run a lint and make sure it produces the expected output. It's also expected to exit with code 1\n+# FIXME: How to match the clippy invocation in compile-test.rs?\n+./target/debug/clippy-driver -Dwarnings -Aunused -Zui-testing --emit metadata --crate-type bin tests/ui/cstring.rs 2> cstring.stderr && exit 1\n+sed -e \"s,tests/ui,\\$DIR,\" -e \"/= help/d\" cstring.stderr > normalized.stderr\n+diff normalized.stderr tests/ui/cstring.stderr\n+\n+# TODO: CLIPPY_CONF_DIR / CARGO_MANIFEST_DIR"}, {"sha": "9661f826abd3bcbe41effb27e9fb37048103e3f8", "filename": ".github/workflows/clippy.yml", "status": "modified", "additions": 3, "deletions": 25, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/ea780a69f3d1d47eaacd2811ab7d742c1627b3d5/.github%2Fworkflows%2Fclippy.yml", "raw_url": "https://github.com/rust-lang/rust/raw/ea780a69f3d1d47eaacd2811ab7d742c1627b3d5/.github%2Fworkflows%2Fclippy.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fclippy.yml?ref=ea780a69f3d1d47eaacd2811ab7d742c1627b3d5", "patch": "@@ -68,31 +68,9 @@ jobs:\n       run: ../target/debug/cargo-clippy\n       working-directory: clippy_workspace_tests\n     - name: Test clippy-driver\n-      run: |\n-        (\n-          set -ex\n-          # Check sysroot handling\n-          sysroot=$(./target/debug/clippy-driver --print sysroot)\n-          test \"$sysroot\" = \"$(rustc --print sysroot)\"\n-\n-          desired_sysroot=/tmp\n-          sysroot=$(./target/debug/clippy-driver --sysroot $desired_sysroot --print sysroot)\n-          test \"$sysroot\" = $desired_sysroot\n-\n-          sysroot=$(SYSROOT=$desired_sysroot ./target/debug/clippy-driver --print sysroot)\n-          test \"$sysroot\" = $desired_sysroot\n-\n-          # Make sure this isn't set - clippy-driver should cope without it\n-          unset CARGO_MANIFEST_DIR\n-\n-          # Run a lint and make sure it produces the expected output. It's also expected to exit with code 1\n-          # FIXME: How to match the clippy invocation in compile-test.rs?\n-          ./target/debug/clippy-driver -Dwarnings -Aunused -Zui-testing --emit metadata --crate-type bin tests/ui/cstring.rs 2> cstring.stderr && exit 1\n-          sed -e 's,tests/ui,$DIR,' -e '/= help/d' cstring.stderr > normalized.stderr\n-          diff normalized.stderr tests/ui/cstring.stderr\n-\n-          # TODO: CLIPPY_CONF_DIR / CARGO_MANIFEST_DIR\n-        )\n+      run: bash .github/driver.sh\n+      env:\n+        OS: ${{ runner.os }}\n \n     - name: Run cargo-cache --autoclean\n       run: |"}, {"sha": "49e4251f9dae7d460ca43341e26a7901ff7bd836", "filename": ".github/workflows/clippy_bors.yml", "status": "modified", "additions": 3, "deletions": 29, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/ea780a69f3d1d47eaacd2811ab7d742c1627b3d5/.github%2Fworkflows%2Fclippy_bors.yml", "raw_url": "https://github.com/rust-lang/rust/raw/ea780a69f3d1d47eaacd2811ab7d742c1627b3d5/.github%2Fworkflows%2Fclippy_bors.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fclippy_bors.yml?ref=ea780a69f3d1d47eaacd2811ab7d742c1627b3d5", "patch": "@@ -136,36 +136,10 @@ jobs:\n       shell: bash\n       working-directory: clippy_workspace_tests\n     - name: Test clippy-driver\n-      run: |\n-        (\n-          set -ex\n-          # Check sysroot handling\n-          sysroot=$(./target/debug/clippy-driver --print sysroot)\n-          test \"$sysroot\" = \"$(rustc --print sysroot)\"\n-\n-          if [[ ${{ runner.os }} == \"Windows\" ]]; then\n-            desired_sysroot=C:/tmp\n-          else\n-            desired_sysroot=/tmp\n-          fi\n-          sysroot=$(./target/debug/clippy-driver --sysroot $desired_sysroot --print sysroot)\n-          test \"$sysroot\" = $desired_sysroot\n-\n-          sysroot=$(SYSROOT=$desired_sysroot ./target/debug/clippy-driver --print sysroot)\n-          test \"$sysroot\" = $desired_sysroot\n-\n-          # Make sure this isn't set - clippy-driver should cope without it\n-          unset CARGO_MANIFEST_DIR\n-\n-          # Run a lint and make sure it produces the expected output. It's also expected to exit with code 1\n-          # FIXME: How to match the clippy invocation in compile-test.rs?\n-          ./target/debug/clippy-driver -Dwarnings -Aunused -Zui-testing --emit metadata --crate-type bin tests/ui/cstring.rs 2> cstring.stderr && exit 1\n-          sed -e 's,tests/ui,$DIR,' -e '/= help/d' cstring.stderr > normalized.stderr\n-          diff normalized.stderr tests/ui/cstring.stderr\n-\n-          # TODO: CLIPPY_CONF_DIR / CARGO_MANIFEST_DIR\n-        )\n+      run: bash .github/driver.sh\n       shell: bash\n+      env:\n+        OS: ${{ runner.os }}\n \n     - name: Run cargo-cache --autoclean\n       run: |"}]}