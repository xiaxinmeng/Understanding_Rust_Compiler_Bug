{"sha": "d255d4a4ff394da96bb669fef7a70871e08498fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyNTVkNGE0ZmYzOTRkYTk2YmI2NjlmZWY3YTcwODcxZTA4NDk4ZmE=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-12-31T12:47:15Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-12-31T12:47:15Z"}, "message": "std: print RUST_LOG=::help in sorted order.\n\nFixes #8949.", "tree": {"sha": "3888ae679946849d63536fec3967a856e25735f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3888ae679946849d63536fec3967a856e25735f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d255d4a4ff394da96bb669fef7a70871e08498fa", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d255d4a4ff394da96bb669fef7a70871e08498fa", "html_url": "https://github.com/rust-lang/rust/commit/d255d4a4ff394da96bb669fef7a70871e08498fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d255d4a4ff394da96bb669fef7a70871e08498fa/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df25bb65eb56aa3815226c74190079be3904c13c", "url": "https://api.github.com/repos/rust-lang/rust/commits/df25bb65eb56aa3815226c74190079be3904c13c", "html_url": "https://github.com/rust-lang/rust/commit/df25bb65eb56aa3815226c74190079be3904c13c"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "dfcf49734df1776e8d3748a24f732c626a3be9cd", "filename": "src/libstd/rt/logging.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d255d4a4ff394da96bb669fef7a70871e08498fa/src%2Flibstd%2Frt%2Flogging.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d255d4a4ff394da96bb669fef7a70871e08498fa/src%2Flibstd%2Frt%2Flogging.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Flogging.rs?ref=d255d4a4ff394da96bb669fef7a70871e08498fa", "patch": "@@ -17,7 +17,7 @@ use io::stdio::StdWriter;\n use io::buffered::LineBufferedWriter;\n use rt::crate_map::{ModEntry, CrateMap, iter_crate_map, get_crate_map};\n use str::StrSlice;\n-use vec::ImmutableVector;\n+use vec::{ImmutableVector, MutableTotalOrdVector};\n #[cfg(test)] use cast::transmute;\n \n struct LogDirective {\n@@ -141,7 +141,14 @@ fn update_log_settings(crate_map: &CrateMap, settings: ~str) {\n     if settings.len() > 0 {\n         if settings == ~\"::help\" || settings == ~\"?\" {\n             rterrln!(\"\\nCrate log map:\\n\");\n-            iter_crate_map(crate_map, |entry| rterrln!(\" {}\", entry.name));\n+\n+            let mut entries = ~[];\n+            iter_crate_map(crate_map, |entry| entries.push(entry.name.to_owned()));\n+            entries.sort();\n+\n+            for name in entries.iter() {\n+                rterrln!(\" {}\", *name);\n+            }\n             unsafe { exit(1); }\n         }\n         dirs = parse_logging_spec(settings);"}]}