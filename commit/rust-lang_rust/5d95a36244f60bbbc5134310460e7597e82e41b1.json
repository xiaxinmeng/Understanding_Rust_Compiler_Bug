{"sha": "5d95a36244f60bbbc5134310460e7597e82e41b1", "node_id": "C_kwDOAAsO6NoAKDVkOTVhMzYyNDRmNjBiYmJjNTEzNDMxMDQ2MGU3NTk3ZTgyZTQxYjE", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-22T18:51:23Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-22T18:51:23Z"}, "message": "do not claim that transmute is like memcpy", "tree": {"sha": "7b0def74aa7dd8649d4f84c0a3c59916b39073e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b0def74aa7dd8649d4f84c0a3c59916b39073e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d95a36244f60bbbc5134310460e7597e82e41b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d95a36244f60bbbc5134310460e7597e82e41b1", "html_url": "https://github.com/rust-lang/rust/commit/5d95a36244f60bbbc5134310460e7597e82e41b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d95a36244f60bbbc5134310460e7597e82e41b1/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22d25f21dc008785f52e7c2833de4f4236b1066b", "url": "https://api.github.com/repos/rust-lang/rust/commits/22d25f21dc008785f52e7c2833de4f4236b1066b", "html_url": "https://github.com/rust-lang/rust/commit/22d25f21dc008785f52e7c2833de4f4236b1066b"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "6bf95a1b008e101211808e1a901b984419c535fb", "filename": "library/core/src/intrinsics.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5d95a36244f60bbbc5134310460e7597e82e41b1/library%2Fcore%2Fsrc%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d95a36244f60bbbc5134310460e7597e82e41b1/library%2Fcore%2Fsrc%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fintrinsics.rs?ref=5d95a36244f60bbbc5134310460e7597e82e41b1", "patch": "@@ -1212,8 +1212,9 @@ extern \"rust-intrinsic\" {\n     ///\n     /// `transmute` is semantically equivalent to a bitwise move of one type\n     /// into another. It copies the bits from the source value into the\n-    /// destination value, then forgets the original. It's equivalent to C's\n-    /// `memcpy` under the hood, just like `transmute_copy`.\n+    /// destination value, then forgets the original. Note that source and destination\n+    /// are passed by-value, which means if `T` or `U` contains padding, that padding\n+    /// might *not* be preserved by `transmute`.\n     ///\n     /// Because `transmute` is a by-value operation, alignment of the *transmuted values\n     /// themselves* is not a concern. As with any other function, the compiler already ensures"}]}