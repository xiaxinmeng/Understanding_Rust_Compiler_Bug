{"sha": "c15aa5e3a373a4dfad8c276a9de06bc8f5ed44df", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxNWFhNWUzYTM3M2E0ZGZhZDhjMjc2YTlkZTA2YmM4ZjVlZDQ0ZGY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-12T17:22:55Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-12T18:35:29Z"}, "message": "stdlib: EBML API fixes", "tree": {"sha": "88c580dfb9016a68565618f14cf1450b2d9e296f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88c580dfb9016a68565618f14cf1450b2d9e296f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c15aa5e3a373a4dfad8c276a9de06bc8f5ed44df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c15aa5e3a373a4dfad8c276a9de06bc8f5ed44df", "html_url": "https://github.com/rust-lang/rust/commit/c15aa5e3a373a4dfad8c276a9de06bc8f5ed44df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c15aa5e3a373a4dfad8c276a9de06bc8f5ed44df/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3275cad6d5217b12e4747bc280a1dd43246e13e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/3275cad6d5217b12e4747bc280a1dd43246e13e4", "html_url": "https://github.com/rust-lang/rust/commit/3275cad6d5217b12e4747bc280a1dd43246e13e4"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "333cd9046ec1dab3ea0b7d78318464de3d65f7fd", "filename": "src/lib/ebmlivec.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/c15aa5e3a373a4dfad8c276a9de06bc8f5ed44df/src%2Flib%2Febmlivec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c15aa5e3a373a4dfad8c276a9de06bc8f5ed44df/src%2Flib%2Febmlivec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Febmlivec.rs?ref=c15aa5e3a373a4dfad8c276a9de06bc8f5ed44df", "patch": "@@ -17,7 +17,7 @@ type ebml_state = rec(ebml_tag ebml_tag, uint tag_pos, uint data_pos);\n // ebml reading\n type doc = rec(@u8[] data, uint start, uint end);\n \n-fn vint_at(&@u8[] data, uint start) -> tup(uint, uint) {\n+fn vint_at(&u8[] data, uint start) -> tup(uint, uint) {\n     auto a = data.(start);\n     if (a & 0x80u8 != 0u8) { ret tup(a & 0x7fu8 as uint, start + 1u); }\n     if (a & 0x40u8 != 0u8) {\n@@ -40,17 +40,17 @@ fn new_doc(&@u8[] data) -> doc {\n }\n \n fn doc_at(&@u8[] data, uint start) -> doc {\n-    auto elt_tag = vint_at(data, start);\n-    auto elt_size = vint_at(data, elt_tag._1);\n+    auto elt_tag = vint_at(*data, start);\n+    auto elt_size = vint_at(*data, elt_tag._1);\n     auto end = elt_size._1 + elt_size._0;\n     ret rec(data=data, start=elt_size._1, end=end);\n }\n \n fn maybe_get_doc(doc d, uint tg) -> option::t[doc] {\n     auto pos = d.start;\n     while (pos < d.end) {\n-        auto elt_tag = vint_at(d.data, pos);\n-        auto elt_size = vint_at(d.data, elt_tag._1);\n+        auto elt_tag = vint_at(*d.data, pos);\n+        auto elt_size = vint_at(*d.data, elt_tag._1);\n         pos = elt_size._1 + elt_size._0;\n         if (elt_tag._0 == tg) {\n             ret some[doc](rec(data=d.data, start=elt_size._1, end=pos));\n@@ -72,8 +72,8 @@ fn get_doc(doc d, uint tg) -> doc {\n iter docs(doc d) -> tup(uint, doc) {\n     auto pos = d.start;\n     while (pos < d.end) {\n-        auto elt_tag = vint_at(d.data, pos);\n-        auto elt_size = vint_at(d.data, elt_tag._1);\n+        auto elt_tag = vint_at(*d.data, pos);\n+        auto elt_size = vint_at(*d.data, elt_tag._1);\n         pos = elt_size._1 + elt_size._0;\n         put tup(elt_tag._0, rec(data=d.data, start=elt_size._1, end=pos));\n     }\n@@ -82,8 +82,8 @@ iter docs(doc d) -> tup(uint, doc) {\n iter tagged_docs(doc d, uint tg) -> doc {\n     auto pos = d.start;\n     while (pos < d.end) {\n-        auto elt_tag = vint_at(d.data, pos);\n-        auto elt_size = vint_at(d.data, elt_tag._1);\n+        auto elt_tag = vint_at(*d.data, pos);\n+        auto elt_size = vint_at(*d.data, elt_tag._1);\n         pos = elt_size._1 + elt_size._0;\n         if (elt_tag._0 == tg) {\n             put rec(data=d.data, start=elt_size._1, end=pos);"}]}