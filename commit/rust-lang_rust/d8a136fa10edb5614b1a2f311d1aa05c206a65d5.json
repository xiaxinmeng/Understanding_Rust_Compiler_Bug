{"sha": "d8a136fa10edb5614b1a2f311d1aa05c206a65d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4YTEzNmZhMTBlZGI1NjE0YjFhMmYzMTFkMWFhMDVjMjA2YTY1ZDU=", "commit": {"author": {"name": "Stein Somers", "email": "git@steinsomers.be", "date": "2020-01-10T16:31:56Z"}, "committer": {"name": "Stein Somers", "email": "stein@debby.fritz.box", "date": "2020-03-21T14:03:09Z"}, "message": "Test pretty printing more and fix overzealous type substitution", "tree": {"sha": "a3a63eed754aa4e44f52b52da6aa33080d0c7153", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3a63eed754aa4e44f52b52da6aa33080d0c7153"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8a136fa10edb5614b1a2f311d1aa05c206a65d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8a136fa10edb5614b1a2f311d1aa05c206a65d5", "html_url": "https://github.com/rust-lang/rust/commit/d8a136fa10edb5614b1a2f311d1aa05c206a65d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8a136fa10edb5614b1a2f311d1aa05c206a65d5/comments", "author": {"login": "ssomers", "id": 10174877, "node_id": "MDQ6VXNlcjEwMTc0ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/10174877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssomers", "html_url": "https://github.com/ssomers", "followers_url": "https://api.github.com/users/ssomers/followers", "following_url": "https://api.github.com/users/ssomers/following{/other_user}", "gists_url": "https://api.github.com/users/ssomers/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssomers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssomers/subscriptions", "organizations_url": "https://api.github.com/users/ssomers/orgs", "repos_url": "https://api.github.com/users/ssomers/repos", "events_url": "https://api.github.com/users/ssomers/events{/privacy}", "received_events_url": "https://api.github.com/users/ssomers/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "98803c182b2ba6ef5dccb6bf501958249295eac0", "url": "https://api.github.com/repos/rust-lang/rust/commits/98803c182b2ba6ef5dccb6bf501958249295eac0", "html_url": "https://github.com/rust-lang/rust/commit/98803c182b2ba6ef5dccb6bf501958249295eac0"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "51dfc3fff3f92e3c162d8ae933c6e304d82f6128", "filename": "src/etc/gdb_rust_pretty_printing.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d8a136fa10edb5614b1a2f311d1aa05c206a65d5/src%2Fetc%2Fgdb_rust_pretty_printing.py", "raw_url": "https://github.com/rust-lang/rust/raw/d8a136fa10edb5614b1a2f311d1aa05c206a65d5/src%2Fetc%2Fgdb_rust_pretty_printing.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fgdb_rust_pretty_printing.py?ref=d8a136fa10edb5614b1a2f311d1aa05c206a65d5", "patch": "@@ -335,7 +335,7 @@ def children(self):\n def children_of_node(boxed_node, height, want_values):\n     node_ptr = boxed_node['ptr']['pointer']\n     if height > 0:\n-        type_name = str(node_ptr.type.target()).replace('LeafNode', 'InternalNode')\n+        type_name = str(node_ptr.type.target()).replace('LeafNode', 'InternalNode', 1)\n         node_type = gdb.lookup_type(type_name)\n         node_ptr = node_ptr.cast(node_type.pointer())\n         leaf = node_ptr['data']"}, {"sha": "1da2042b2224ac5e3d93185ed5dd9c01c70123cf", "filename": "src/test/debuginfo/pretty-std-collections.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d8a136fa10edb5614b1a2f311d1aa05c206a65d5/src%2Ftest%2Fdebuginfo%2Fpretty-std-collections.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8a136fa10edb5614b1a2f311d1aa05c206a65d5/src%2Ftest%2Fdebuginfo%2Fpretty-std-collections.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fpretty-std-collections.rs?ref=d8a136fa10edb5614b1a2f311d1aa05c206a65d5", "patch": "@@ -26,17 +26,22 @@\n // gdb-command: print empty_btree_map\n // gdb-check:$4 = BTreeMap<i32, u32>(len: 0)\n \n+// gdb-command: print nasty_btree_map\n+// gdb-check:$5 = BTreeMap<i32, pretty_std_collections::MyLeafNode>(len: 1) = {[1] = pretty_std_collections::MyLeafNode (11)}\n+\n // gdb-command: print vec_deque\n-// gdb-check:$5 = VecDeque<i32>(len: 3, cap: 8) = {5, 3, 7}\n+// gdb-check:$6 = VecDeque<i32>(len: 3, cap: 8) = {5, 3, 7}\n \n // gdb-command: print vec_deque2\n-// gdb-check:$6 = VecDeque<i32>(len: 7, cap: 8) = {2, 3, 4, 5, 6, 7, 8}\n+// gdb-check:$7 = VecDeque<i32>(len: 7, cap: 8) = {2, 3, 4, 5, 6, 7, 8}\n \n #![allow(unused_variables)]\n use std::collections::BTreeMap;\n use std::collections::BTreeSet;\n use std::collections::VecDeque;\n \n+struct MyLeafNode(i32); // helps to ensure we don't blindly replace substring \"LeafNode\"\n+\n fn main() {\n     // BTreeSet\n     let mut btree_set = BTreeSet::new();\n@@ -54,6 +59,9 @@ fn main() {\n \n     let mut empty_btree_map: BTreeMap<i32, u32> = BTreeMap::new();\n \n+    let mut nasty_btree_map: BTreeMap<i32, MyLeafNode> = BTreeMap::new();\n+    nasty_btree_map.insert(1, MyLeafNode(11));\n+\n     // VecDeque\n     let mut vec_deque = VecDeque::new();\n     vec_deque.push_back(5);"}]}