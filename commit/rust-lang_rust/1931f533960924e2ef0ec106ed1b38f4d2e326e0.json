{"sha": "1931f533960924e2ef0ec106ed1b38f4d2e326e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5MzFmNTMzOTYwOTI0ZTJlZjBlYzEwNmVkMWIzOGY0ZDJlMzI2ZTA=", "commit": {"author": {"name": "Aaron Power", "email": "theaaronepower@gmail.com", "date": "2018-05-28T08:03:27Z"}, "committer": {"name": "Aaron Power", "email": "theaaronepower@gmail.com", "date": "2018-05-28T08:03:27Z"}, "message": "Removed stable feature flags", "tree": {"sha": "b93f7de2fccd601de653b6b2b8147a287da79e3b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b93f7de2fccd601de653b6b2b8147a287da79e3b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1931f533960924e2ef0ec106ed1b38f4d2e326e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1931f533960924e2ef0ec106ed1b38f4d2e326e0", "html_url": "https://github.com/rust-lang/rust/commit/1931f533960924e2ef0ec106ed1b38f4d2e326e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1931f533960924e2ef0ec106ed1b38f4d2e326e0/comments", "author": null, "committer": null, "parents": [{"sha": "fc008aa14c59a0b0cb0a1e60fe836f83019a722a", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc008aa14c59a0b0cb0a1e60fe836f83019a722a", "html_url": "https://github.com/rust-lang/rust/commit/fc008aa14c59a0b0cb0a1e60fe836f83019a722a"}], "stats": {"total": 149, "additions": 70, "deletions": 79}, "files": [{"sha": "4cf9a6998659b8a299d0883bc6adee6a8eb6bc2f", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1931f533960924e2ef0ec106ed1b38f4d2e326e0/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1931f533960924e2ef0ec106ed1b38f4d2e326e0/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=1931f533960924e2ef0ec106ed1b38f4d2e326e0", "patch": "@@ -4,14 +4,11 @@\n #![feature(rustc_private)]\n #![feature(slice_patterns)]\n #![feature(stmt_expr_attributes)]\n-#![feature(conservative_impl_trait)]\n #![feature(range_contains)]\n #![feature(macro_vis_matcher)]\n #![allow(unknown_lints, indexing_slicing, shadow_reuse, missing_docs_in_private_items)]\n #![recursion_limit = \"256\"]\n-// FIXME(mark-i-m) remove after i128 stablization merges\n #![allow(stable_features)]\n-#![feature(i128, i128_type)]\n #![feature(iterator_find_map)]\n \n "}, {"sha": "700215baa64ab624eaab9875895434a09f6018c9", "filename": "tests/run-pass/needless_lifetimes_impl_trait.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1931f533960924e2ef0ec106ed1b38f4d2e326e0/tests%2Frun-pass%2Fneedless_lifetimes_impl_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1931f533960924e2ef0ec106ed1b38f4d2e326e0/tests%2Frun-pass%2Fneedless_lifetimes_impl_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fneedless_lifetimes_impl_trait.rs?ref=1931f533960924e2ef0ec106ed1b38f4d2e326e0", "patch": "@@ -1,6 +1,4 @@\n \n-#![allow(stable_features)]\n-#![feature(conservative_impl_trait)]\n #![deny(needless_lifetimes)]\n #![allow(dead_code)]\n "}, {"sha": "71d4ea98e07abeef6ec2e0c78474464270525013", "filename": "tests/ui/replace_consts.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1931f533960924e2ef0ec106ed1b38f4d2e326e0/tests%2Fui%2Freplace_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1931f533960924e2ef0ec106ed1b38f4d2e326e0/tests%2Fui%2Freplace_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Freplace_consts.rs?ref=1931f533960924e2ef0ec106ed1b38f4d2e326e0", "patch": "@@ -2,10 +2,6 @@\n #![allow(blacklisted_name)]\n #![deny(replace_consts)]\n \n-// FIXME(mark-i-m) remove after i128 stablization merges\n-#![allow(stable_features)]\n-#![feature(i128, i128_type)]\n-\n use std::sync::atomic::*;\n use std::sync::{ONCE_INIT, Once};\n "}, {"sha": "0a9d5f4ab7556544fcb5931c148953e98b26e163", "filename": "tests/ui/replace_consts.stderr", "status": "modified", "additions": 70, "deletions": 70, "changes": 140, "blob_url": "https://github.com/rust-lang/rust/blob/1931f533960924e2ef0ec106ed1b38f4d2e326e0/tests%2Fui%2Freplace_consts.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1931f533960924e2ef0ec106ed1b38f4d2e326e0/tests%2Fui%2Freplace_consts.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Freplace_consts.stderr?ref=1931f533960924e2ef0ec106ed1b38f4d2e326e0", "patch": "@@ -1,7 +1,7 @@\n error: using `ATOMIC_BOOL_INIT`\n-  --> $DIR/replace_consts.rs:16:17\n+  --> $DIR/replace_consts.rs:12:17\n    |\n-16 |     { let foo = ATOMIC_BOOL_INIT; };\n+12 |     { let foo = ATOMIC_BOOL_INIT; };\n    |                 ^^^^^^^^^^^^^^^^ help: try this: `AtomicBool::new(false)`\n    |\n note: lint level defined here\n@@ -11,207 +11,207 @@ note: lint level defined here\n    |         ^^^^^^^^^^^^^^\n \n error: using `ATOMIC_ISIZE_INIT`\n-  --> $DIR/replace_consts.rs:17:17\n+  --> $DIR/replace_consts.rs:13:17\n    |\n-17 |     { let foo = ATOMIC_ISIZE_INIT; };\n+13 |     { let foo = ATOMIC_ISIZE_INIT; };\n    |                 ^^^^^^^^^^^^^^^^^ help: try this: `AtomicIsize::new(0)`\n \n error: using `ATOMIC_I8_INIT`\n-  --> $DIR/replace_consts.rs:18:17\n+  --> $DIR/replace_consts.rs:14:17\n    |\n-18 |     { let foo = ATOMIC_I8_INIT; };\n+14 |     { let foo = ATOMIC_I8_INIT; };\n    |                 ^^^^^^^^^^^^^^ help: try this: `AtomicI8::new(0)`\n \n error: using `ATOMIC_I16_INIT`\n-  --> $DIR/replace_consts.rs:19:17\n+  --> $DIR/replace_consts.rs:15:17\n    |\n-19 |     { let foo = ATOMIC_I16_INIT; };\n+15 |     { let foo = ATOMIC_I16_INIT; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `AtomicI16::new(0)`\n \n error: using `ATOMIC_I32_INIT`\n-  --> $DIR/replace_consts.rs:20:17\n+  --> $DIR/replace_consts.rs:16:17\n    |\n-20 |     { let foo = ATOMIC_I32_INIT; };\n+16 |     { let foo = ATOMIC_I32_INIT; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `AtomicI32::new(0)`\n \n error: using `ATOMIC_I64_INIT`\n-  --> $DIR/replace_consts.rs:21:17\n+  --> $DIR/replace_consts.rs:17:17\n    |\n-21 |     { let foo = ATOMIC_I64_INIT; };\n+17 |     { let foo = ATOMIC_I64_INIT; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `AtomicI64::new(0)`\n \n error: using `ATOMIC_USIZE_INIT`\n-  --> $DIR/replace_consts.rs:22:17\n+  --> $DIR/replace_consts.rs:18:17\n    |\n-22 |     { let foo = ATOMIC_USIZE_INIT; };\n+18 |     { let foo = ATOMIC_USIZE_INIT; };\n    |                 ^^^^^^^^^^^^^^^^^ help: try this: `AtomicUsize::new(0)`\n \n error: using `ATOMIC_U8_INIT`\n-  --> $DIR/replace_consts.rs:23:17\n+  --> $DIR/replace_consts.rs:19:17\n    |\n-23 |     { let foo = ATOMIC_U8_INIT; };\n+19 |     { let foo = ATOMIC_U8_INIT; };\n    |                 ^^^^^^^^^^^^^^ help: try this: `AtomicU8::new(0)`\n \n error: using `ATOMIC_U16_INIT`\n-  --> $DIR/replace_consts.rs:24:17\n+  --> $DIR/replace_consts.rs:20:17\n    |\n-24 |     { let foo = ATOMIC_U16_INIT; };\n+20 |     { let foo = ATOMIC_U16_INIT; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `AtomicU16::new(0)`\n \n error: using `ATOMIC_U32_INIT`\n-  --> $DIR/replace_consts.rs:25:17\n+  --> $DIR/replace_consts.rs:21:17\n    |\n-25 |     { let foo = ATOMIC_U32_INIT; };\n+21 |     { let foo = ATOMIC_U32_INIT; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `AtomicU32::new(0)`\n \n error: using `ATOMIC_U64_INIT`\n-  --> $DIR/replace_consts.rs:26:17\n+  --> $DIR/replace_consts.rs:22:17\n    |\n-26 |     { let foo = ATOMIC_U64_INIT; };\n+22 |     { let foo = ATOMIC_U64_INIT; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `AtomicU64::new(0)`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:28:17\n+  --> $DIR/replace_consts.rs:24:17\n    |\n-28 |     { let foo = std::isize::MIN; };\n+24 |     { let foo = std::isize::MIN; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `isize::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:29:17\n+  --> $DIR/replace_consts.rs:25:17\n    |\n-29 |     { let foo = std::i8::MIN; };\n+25 |     { let foo = std::i8::MIN; };\n    |                 ^^^^^^^^^^^^ help: try this: `i8::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:30:17\n+  --> $DIR/replace_consts.rs:26:17\n    |\n-30 |     { let foo = std::i16::MIN; };\n+26 |     { let foo = std::i16::MIN; };\n    |                 ^^^^^^^^^^^^^ help: try this: `i16::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:31:17\n+  --> $DIR/replace_consts.rs:27:17\n    |\n-31 |     { let foo = std::i32::MIN; };\n+27 |     { let foo = std::i32::MIN; };\n    |                 ^^^^^^^^^^^^^ help: try this: `i32::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:32:17\n+  --> $DIR/replace_consts.rs:28:17\n    |\n-32 |     { let foo = std::i64::MIN; };\n+28 |     { let foo = std::i64::MIN; };\n    |                 ^^^^^^^^^^^^^ help: try this: `i64::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:33:17\n+  --> $DIR/replace_consts.rs:29:17\n    |\n-33 |     { let foo = std::i128::MIN; };\n+29 |     { let foo = std::i128::MIN; };\n    |                 ^^^^^^^^^^^^^^ help: try this: `i128::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:34:17\n+  --> $DIR/replace_consts.rs:30:17\n    |\n-34 |     { let foo = std::usize::MIN; };\n+30 |     { let foo = std::usize::MIN; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `usize::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:35:17\n+  --> $DIR/replace_consts.rs:31:17\n    |\n-35 |     { let foo = std::u8::MIN; };\n+31 |     { let foo = std::u8::MIN; };\n    |                 ^^^^^^^^^^^^ help: try this: `u8::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:36:17\n+  --> $DIR/replace_consts.rs:32:17\n    |\n-36 |     { let foo = std::u16::MIN; };\n+32 |     { let foo = std::u16::MIN; };\n    |                 ^^^^^^^^^^^^^ help: try this: `u16::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:37:17\n+  --> $DIR/replace_consts.rs:33:17\n    |\n-37 |     { let foo = std::u32::MIN; };\n+33 |     { let foo = std::u32::MIN; };\n    |                 ^^^^^^^^^^^^^ help: try this: `u32::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:38:17\n+  --> $DIR/replace_consts.rs:34:17\n    |\n-38 |     { let foo = std::u64::MIN; };\n+34 |     { let foo = std::u64::MIN; };\n    |                 ^^^^^^^^^^^^^ help: try this: `u64::min_value()`\n \n error: using `MIN`\n-  --> $DIR/replace_consts.rs:39:17\n+  --> $DIR/replace_consts.rs:35:17\n    |\n-39 |     { let foo = std::u128::MIN; };\n+35 |     { let foo = std::u128::MIN; };\n    |                 ^^^^^^^^^^^^^^ help: try this: `u128::min_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:41:17\n+  --> $DIR/replace_consts.rs:37:17\n    |\n-41 |     { let foo = std::isize::MAX; };\n+37 |     { let foo = std::isize::MAX; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `isize::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:42:17\n+  --> $DIR/replace_consts.rs:38:17\n    |\n-42 |     { let foo = std::i8::MAX; };\n+38 |     { let foo = std::i8::MAX; };\n    |                 ^^^^^^^^^^^^ help: try this: `i8::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:43:17\n+  --> $DIR/replace_consts.rs:39:17\n    |\n-43 |     { let foo = std::i16::MAX; };\n+39 |     { let foo = std::i16::MAX; };\n    |                 ^^^^^^^^^^^^^ help: try this: `i16::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:44:17\n+  --> $DIR/replace_consts.rs:40:17\n    |\n-44 |     { let foo = std::i32::MAX; };\n+40 |     { let foo = std::i32::MAX; };\n    |                 ^^^^^^^^^^^^^ help: try this: `i32::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:45:17\n+  --> $DIR/replace_consts.rs:41:17\n    |\n-45 |     { let foo = std::i64::MAX; };\n+41 |     { let foo = std::i64::MAX; };\n    |                 ^^^^^^^^^^^^^ help: try this: `i64::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:46:17\n+  --> $DIR/replace_consts.rs:42:17\n    |\n-46 |     { let foo = std::i128::MAX; };\n+42 |     { let foo = std::i128::MAX; };\n    |                 ^^^^^^^^^^^^^^ help: try this: `i128::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:47:17\n+  --> $DIR/replace_consts.rs:43:17\n    |\n-47 |     { let foo = std::usize::MAX; };\n+43 |     { let foo = std::usize::MAX; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `usize::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:48:17\n+  --> $DIR/replace_consts.rs:44:17\n    |\n-48 |     { let foo = std::u8::MAX; };\n+44 |     { let foo = std::u8::MAX; };\n    |                 ^^^^^^^^^^^^ help: try this: `u8::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:49:17\n+  --> $DIR/replace_consts.rs:45:17\n    |\n-49 |     { let foo = std::u16::MAX; };\n+45 |     { let foo = std::u16::MAX; };\n    |                 ^^^^^^^^^^^^^ help: try this: `u16::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:50:17\n+  --> $DIR/replace_consts.rs:46:17\n    |\n-50 |     { let foo = std::u32::MAX; };\n+46 |     { let foo = std::u32::MAX; };\n    |                 ^^^^^^^^^^^^^ help: try this: `u32::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:51:17\n+  --> $DIR/replace_consts.rs:47:17\n    |\n-51 |     { let foo = std::u64::MAX; };\n+47 |     { let foo = std::u64::MAX; };\n    |                 ^^^^^^^^^^^^^ help: try this: `u64::max_value()`\n \n error: using `MAX`\n-  --> $DIR/replace_consts.rs:52:17\n+  --> $DIR/replace_consts.rs:48:17\n    |\n-52 |     { let foo = std::u128::MAX; };\n+48 |     { let foo = std::u128::MAX; };\n    |                 ^^^^^^^^^^^^^^ help: try this: `u128::max_value()`\n \n error: aborting due to 35 previous errors"}]}