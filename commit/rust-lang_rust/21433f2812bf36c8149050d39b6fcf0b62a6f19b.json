{"sha": "21433f2812bf36c8149050d39b6fcf0b62a6f19b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxNDMzZjI4MTJiZjM2YzgxNDkwNTBkMzliNmZjZjBiNjJhNmYxOWI=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-12-03T10:07:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-12-03T10:07:19Z"}, "message": "Rollup merge of #56435 - RalfJung:libstd-without-c, r=alexcrichton\n\nmake the C part of compiler-builtins opt-out\n\nI'd like to be able to use Xargo to build a libstd without having a full C toolchain for the target.  This is a start (but the fact that libstd is a dylib is still a problem).\n\nHowever, compiler_builtin already has somewhat similar logic to not require a C compiler for wasm:\n\nhttps://github.com/rust-lang-nursery/compiler-builtins/blob/fe74674f6e4be76d47b66f67d529ebf4186f4eb1/build.rs#L36-L41\n\n(WTF GitHub, why doesn't this show an embedded code preview??)\n\nI wonder if there is a way to not have two separate mechanisms? Like, move the above wasm logic to some place that controls the libstd feature, or so? Or is it okay to have these two mechanisms co-exist?\n\nCc @alexcrichton", "tree": {"sha": "7fa44324eb1fe317110b748fa62fbddbb2dafdec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7fa44324eb1fe317110b748fa62fbddbb2dafdec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21433f2812bf36c8149050d39b6fcf0b62a6f19b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcBQBXCRBK7hj4Ov3rIwAAdHIIADMXhjsuQB4WVw2EPVgttjtS\nUyDqs6Po15mHMibNxssb9hw3vOOTSU/zkktNnvWa5vP60JHj7C8nNjJapDhNJNaw\n+LRenuohRm3dfJ1+yF1HjpjhE0Hze0g/mJ0PTIe7/mFXtfr8349DoIeOxcqB+yxG\nJ/Oe5XMiVRlB03wghnwHNXs07L5o/3ZBulPwMjBlaz8Ikf+a8IxBOnioRAuV75fi\nSlkTTAXsVfjq0CvlTp7ma7UZjOCv7fOG83HmCqfrxOLkbkxMp4W8BRFJVTjkdocr\nBWRPSxapOlDICcjqbe3W8CkqFepCPzi86FNvOWmHaivVgeC2mRLF8K3AcxH+AHQ=\n=CsCK\n-----END PGP SIGNATURE-----\n", "payload": "tree 7fa44324eb1fe317110b748fa62fbddbb2dafdec\nparent a498a6d198dcaa55281b1eb5acff3820ae5b9c1e\nparent bd20718c8f14cc7f486e1556f7d7897f8f32725b\nauthor kennytm <kennytm@gmail.com> 1543831639 +0800\ncommitter GitHub <noreply@github.com> 1543831639 +0800\n\nRollup merge of #56435 - RalfJung:libstd-without-c, r=alexcrichton\n\nmake the C part of compiler-builtins opt-out\n\nI'd like to be able to use Xargo to build a libstd without having a full C toolchain for the target.  This is a start (but the fact that libstd is a dylib is still a problem).\n\nHowever, compiler_builtin already has somewhat similar logic to not require a C compiler for wasm:\n\nhttps://github.com/rust-lang-nursery/compiler-builtins/blob/fe74674f6e4be76d47b66f67d529ebf4186f4eb1/build.rs#L36-L41\n\n(WTF GitHub, why doesn't this show an embedded code preview??)\n\nI wonder if there is a way to not have two separate mechanisms? Like, move the above wasm logic to some place that controls the libstd feature, or so? Or is it okay to have these two mechanisms co-exist?\n\nCc @alexcrichton\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21433f2812bf36c8149050d39b6fcf0b62a6f19b", "html_url": "https://github.com/rust-lang/rust/commit/21433f2812bf36c8149050d39b6fcf0b62a6f19b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21433f2812bf36c8149050d39b6fcf0b62a6f19b/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a498a6d198dcaa55281b1eb5acff3820ae5b9c1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/a498a6d198dcaa55281b1eb5acff3820ae5b9c1e", "html_url": "https://github.com/rust-lang/rust/commit/a498a6d198dcaa55281b1eb5acff3820ae5b9c1e"}, {"sha": "bd20718c8f14cc7f486e1556f7d7897f8f32725b", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd20718c8f14cc7f486e1556f7d7897f8f32725b", "html_url": "https://github.com/rust-lang/rust/commit/bd20718c8f14cc7f486e1556f7d7897f8f32725b"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "cae2f405318be7a6cc8284dd0a193257fac3148d", "filename": "src/libstd/Cargo.toml", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/21433f2812bf36c8149050d39b6fcf0b62a6f19b/src%2Flibstd%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/21433f2812bf36c8149050d39b6fcf0b62a6f19b/src%2Flibstd%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2FCargo.toml?ref=21433f2812bf36c8149050d39b6fcf0b62a6f19b", "patch": "@@ -43,9 +43,12 @@ cc = \"1.0\"\n build_helper = { path = \"../build_helper\" }\n \n [features]\n+default = [\"compiler_builtins_c\"]\n+\n backtrace = []\n panic-unwind = [\"panic_unwind\"]\n profiler = [\"profiler_builtins\"]\n+compiler_builtins_c = [\"compiler_builtins/c\"]\n \n # Make panics and failed asserts immediately abort without formatting any message\n panic_immediate_abort = [\"core/panic_immediate_abort\"]"}, {"sha": "9804177280f66b147a26773402ab102127a34915", "filename": "src/rustc/compiler_builtins_shim/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/21433f2812bf36c8149050d39b6fcf0b62a6f19b/src%2Frustc%2Fcompiler_builtins_shim%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/21433f2812bf36c8149050d39b6fcf0b62a6f19b/src%2Frustc%2Fcompiler_builtins_shim%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fcompiler_builtins_shim%2FCargo.toml?ref=21433f2812bf36c8149050d39b6fcf0b62a6f19b", "patch": "@@ -34,7 +34,7 @@ cc = \"1.0.1\"\n \n [features]\n c = []\n-default = [\"c\", \"rustbuild\", \"compiler-builtins\"]\n+default = [\"rustbuild\", \"compiler-builtins\"]\n mem = []\n rustbuild = []\n compiler-builtins = []"}]}