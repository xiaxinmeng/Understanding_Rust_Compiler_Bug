{"sha": "72cb109bec8e73b1568c2f287ed08348453bf534", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyY2IxMDliZWM4ZTczYjE1NjhjMmYyODdlZDA4MzQ4NDUzYmY1MzQ=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-03-15T19:13:33Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-03-15T20:12:25Z"}, "message": "Faster submodule updating", "tree": {"sha": "0331ee07cc2a2151ca8cfb2733da917c1bf71557", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0331ee07cc2a2151ca8cfb2733da917c1bf71557"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72cb109bec8e73b1568c2f287ed08348453bf534", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72cb109bec8e73b1568c2f287ed08348453bf534", "html_url": "https://github.com/rust-lang/rust/commit/72cb109bec8e73b1568c2f287ed08348453bf534", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72cb109bec8e73b1568c2f287ed08348453bf534/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff2d506c2c748bd218f74c6014abc4cecc8c74c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff2d506c2c748bd218f74c6014abc4cecc8c74c4", "html_url": "https://github.com/rust-lang/rust/commit/ff2d506c2c748bd218f74c6014abc4cecc8c74c4"}], "stats": {"total": 66, "additions": 54, "deletions": 12}, "files": [{"sha": "aec5e5a0e2c800220da705d7101a96de198d8491", "filename": "config.toml.example", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/72cb109bec8e73b1568c2f287ed08348453bf534/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/72cb109bec8e73b1568c2f287ed08348453bf534/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=72cb109bec8e73b1568c2f287ed08348453bf534", "patch": "@@ -118,6 +118,10 @@\n # Indicate whether submodules are managed and updated automatically.\n #submodules = true\n \n+# Update submodules only when the checked out commit in the submodules differs\n+# from what is committed in the main rustc repo.\n+#fast-submodules = true\n+\n # The path to (or name of) the GDB executable to use. This is only used for\n # executing the debuginfo test suite.\n #gdb = \"gdb\""}, {"sha": "6ea374b2f265a128558f0767473a3e093f32aae7", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 50, "deletions": 12, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/72cb109bec8e73b1568c2f287ed08348453bf534/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/72cb109bec8e73b1568c2f287ed08348453bf534/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=72cb109bec8e73b1568c2f287ed08348453bf534", "patch": "@@ -614,20 +614,55 @@ def build_triple(self):\n             return config\n         return default_build_triple()\n \n+    def check_submodule(self, module, slow_submodules):\n+        if not slow_submodules:\n+            checked_out = subprocess.Popen([\"git\", \"rev-parse\", \"HEAD\"],\n+                                           cwd=os.path.join(self.rust_root, module),\n+                                           stdout=subprocess.PIPE)\n+            return checked_out\n+        else:\n+            return None\n+\n+    def update_submodule(self, module, checked_out, recorded_submodules):\n+        module_path = os.path.join(self.rust_root, module)\n+\n+        if checked_out != None:\n+            default_encoding = sys.getdefaultencoding()\n+            checked_out = checked_out.communicate()[0].decode(default_encoding).strip()\n+            if recorded_submodules[module] == checked_out:\n+                return\n+\n+        print(\"Updating submodule\", module)\n+\n+        run([\"git\", \"submodule\", \"-q\", \"sync\", module],\n+            cwd=self.rust_root, verbose=self.verbose)\n+        run([\"git\", \"submodule\", \"update\",\n+            \"--init\", \"--recursive\", module],\n+            cwd=self.rust_root, verbose=self.verbose)\n+        run([\"git\", \"reset\", \"-q\", \"--hard\"],\n+            cwd=module_path, verbose=self.verbose)\n+        run([\"git\", \"clean\", \"-qdfx\"],\n+            cwd=module_path, verbose=self.verbose)\n+\n     def update_submodules(self):\n         \"\"\"Update submodules\"\"\"\n         if (not os.path.exists(os.path.join(self.rust_root, \".git\"))) or \\\n                 self.get_toml('submodules') == \"false\":\n             return\n-        print('Updating submodules')\n+        slow_submodules = self.get_toml('fast-submodule') == \"false\"\n+        start_time = time()\n+        if slow_submodules:\n+            print('Unconditionally updating all submodules')\n+        else:\n+            print('Updating only changed submodules')\n         default_encoding = sys.getdefaultencoding()\n-        run([\"git\", \"submodule\", \"-q\", \"sync\"], cwd=self.rust_root, verbose=self.verbose)\n         submodules = [s.split(' ', 1)[1] for s in subprocess.check_output(\n             [\"git\", \"config\", \"--file\",\n              os.path.join(self.rust_root, \".gitmodules\"),\n              \"--get-regexp\", \"path\"]\n         ).decode(default_encoding).splitlines()]\n         filtered_submodules = []\n+        submodules_names = []\n         for module in submodules:\n             if module.endswith(\"llvm\"):\n                 if self.get_toml('llvm-config'):\n@@ -645,16 +680,19 @@ def update_submodules(self):\n                 config = self.get_toml('lld')\n                 if config is None or config == 'false':\n                     continue\n-            filtered_submodules.append(module)\n-        run([\"git\", \"submodule\", \"update\",\n-             \"--init\", \"--recursive\"] + filtered_submodules,\n-            cwd=self.rust_root, verbose=self.verbose)\n-        run([\"git\", \"submodule\", \"-q\", \"foreach\", \"git\",\n-             \"reset\", \"-q\", \"--hard\"],\n-            cwd=self.rust_root, verbose=self.verbose)\n-        run([\"git\", \"submodule\", \"-q\", \"foreach\", \"git\",\n-             \"clean\", \"-qdfx\"],\n-            cwd=self.rust_root, verbose=self.verbose)\n+            check = self.check_submodule(module, slow_submodules)\n+            filtered_submodules.append((module, check))\n+            submodules_names.append(module)\n+        recorded = subprocess.Popen([\"git\", \"ls-tree\", \"HEAD\"] + submodules_names,\n+                                    cwd=self.rust_root, stdout=subprocess.PIPE)\n+        recorded = recorded.communicate()[0].decode(default_encoding).strip().splitlines()\n+        recorded_submodules = {}\n+        for data in recorded:\n+            data = data.split()\n+            recorded_submodules[data[3]] = data[2]\n+        for module in filtered_submodules:\n+            self.update_submodule(module[0], module[1], recorded_submodules)\n+        print(\"Submodules updated in %.2f seconds\" % (time() - start_time))\n \n     def set_dev_environment(self):\n         \"\"\"Set download URL for development environment\"\"\""}]}