{"sha": "befa29e0dc4219b7d96ec92ef1d5765c21153e39", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlZmEyOWUwZGM0MjE5YjdkOTZlYzkyZWYxZDU3NjVjMjExNTNlMzk=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-11-26T05:05:32Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-11-26T05:05:32Z"}, "message": "save-analysis: use absolute paths for file names", "tree": {"sha": "75a0b75b4d4e813888096ce044be96782cd3a0af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75a0b75b4d4e813888096ce044be96782cd3a0af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/befa29e0dc4219b7d96ec92ef1d5765c21153e39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/befa29e0dc4219b7d96ec92ef1d5765c21153e39", "html_url": "https://github.com/rust-lang/rust/commit/befa29e0dc4219b7d96ec92ef1d5765c21153e39", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/befa29e0dc4219b7d96ec92ef1d5765c21153e39/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "498f08d36921b6b193cd4369138e5717a8dc930a", "url": "https://api.github.com/repos/rust-lang/rust/commits/498f08d36921b6b193cd4369138e5717a8dc930a", "html_url": "https://github.com/rust-lang/rust/commit/498f08d36921b6b193cd4369138e5717a8dc930a"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "8108eb5484b8b2827d3c529cad5298a7f3705c57", "filename": "src/librustc_trans/save/recorder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/befa29e0dc4219b7d96ec92ef1d5765c21153e39/src%2Flibrustc_trans%2Fsave%2Frecorder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/befa29e0dc4219b7d96ec92ef1d5765c21153e39/src%2Flibrustc_trans%2Fsave%2Frecorder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fsave%2Frecorder.rs?ref=befa29e0dc4219b7d96ec92ef1d5765c21153e39", "patch": "@@ -665,7 +665,7 @@ impl<'a, 'tcx: 'a> FmtStrs<'a, 'tcx> {\n     pub fn external_crate_str(&mut self, span: Span, name: &str, num: ast::CrateNum) {\n         let lo_loc = self.span.sess.codemap().lookup_char_pos(span.lo);\n         self.record_without_span(ExternalCrate,\n-                                 svec!(name, num, lo_loc.file.name),\n+                                 svec!(name, num, SpanUtils::make_path_string(&lo_loc.file.name)),\n                                  span);\n     }\n "}, {"sha": "773d5caea5f1afd0ce0271b7e71eb2684e38d43e", "filename": "src/librustc_trans/save/span_utils.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/befa29e0dc4219b7d96ec92ef1d5765c21153e39/src%2Flibrustc_trans%2Fsave%2Fspan_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/befa29e0dc4219b7d96ec92ef1d5765c21153e39/src%2Flibrustc_trans%2Fsave%2Fspan_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fsave%2Fspan_utils.rs?ref=befa29e0dc4219b7d96ec92ef1d5765c21153e39", "patch": "@@ -13,6 +13,8 @@ use rustc::session::Session;\n use save::generated_code;\n \n use std::cell::Cell;\n+use std::env;\n+use std::path::Path;\n \n use syntax::ast;\n use syntax::codemap::*;\n@@ -35,6 +37,15 @@ impl<'a> SpanUtils<'a> {\n         }\n     }\n \n+    pub fn make_path_string(file_name: &str) -> String {\n+        let path = Path::new(file_name);\n+        if path.is_absolute() {\n+            path.clone().display().to_string()\n+        } else {\n+            env::current_dir().unwrap().join(&path).display().to_string()\n+        }\n+    }\n+\n     // Standard string for extents/location.\n     #[rustfmt_skip]\n     pub fn extent_str(&self, span: Span) -> String {\n@@ -47,7 +58,7 @@ impl<'a> SpanUtils<'a> {\n \n         format!(\"file_name,\\\"{}\\\",file_line,{},file_col,{},extent_start,{},extent_start_bytes,{},\\\n                  file_line_end,{},file_col_end,{},extent_end,{},extent_end_bytes,{}\",\n-                lo_loc.file.name,\n+                SpanUtils::make_path_string(&lo_loc.file.name),\n                 lo_loc.line, lo_loc.col.to_usize(), lo_pos.to_usize(), lo_pos_byte.to_usize(),\n                 hi_loc.line, hi_loc.col.to_usize(), hi_pos.to_usize(), hi_pos_byte.to_usize())\n     }"}]}