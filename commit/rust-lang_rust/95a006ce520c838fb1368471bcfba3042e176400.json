{"sha": "95a006ce520c838fb1368471bcfba3042e176400", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1YTAwNmNlNTIwYzgzOGZiMTM2ODQ3MWJjZmJhMzA0MmUxNzY0MDA=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-26T02:23:21Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-26T05:04:53Z"}, "message": "rustdoc: Add enum doc attributes to the doc tree", "tree": {"sha": "17da8da7a52892b0945151d89616c2616478f85d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17da8da7a52892b0945151d89616c2616478f85d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95a006ce520c838fb1368471bcfba3042e176400", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95a006ce520c838fb1368471bcfba3042e176400", "html_url": "https://github.com/rust-lang/rust/commit/95a006ce520c838fb1368471bcfba3042e176400", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95a006ce520c838fb1368471bcfba3042e176400/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a25bc195e25fcce97301b907e2a03501daafb9b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/a25bc195e25fcce97301b907e2a03501daafb9b9", "html_url": "https://github.com/rust-lang/rust/commit/a25bc195e25fcce97301b907e2a03501daafb9b9"}], "stats": {"total": 60, "additions": 59, "deletions": 1}, "files": [{"sha": "784931caf64afd07051a09fe54e413fb096132ee", "filename": "src/rustdoc/attr_pass.rs", "status": "modified", "additions": 59, "deletions": 1, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/95a006ce520c838fb1368471bcfba3042e176400/src%2Frustdoc%2Fattr_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95a006ce520c838fb1368471bcfba3042e176400/src%2Frustdoc%2Fattr_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fattr_pass.rs?ref=95a006ce520c838fb1368471bcfba3042e176400", "patch": "@@ -23,7 +23,8 @@ fn run(\n         fold_crate: fold_crate,\n         fold_mod: fold_mod,\n         fold_fn: fold_fn,\n-        fold_const: fold_const\n+        fold_const: fold_const,\n+        fold_enum: fold_enum\n         with *fold::default_seq_fold(srv)\n     });\n     fold.fold_crate(fold, doc)\n@@ -249,3 +250,60 @@ fn fold_const_should_extract_docs() {\n     assert doc.brief == some(\"foo\");\n     assert doc.desc == some(\"bar\");\n }\n+\n+fn fold_enum(\n+    fold: fold::fold<astsrv::srv>,\n+    doc: doc::enumdoc\n+) -> doc::enumdoc {\n+    let srv = fold.ctxt;\n+    let attrs = parse_item_attrs(srv, doc.id, attr_parser::parse_enum);\n+\n+    ~{\n+        brief: attrs.brief,\n+        desc: attrs.desc,\n+        variants: vec::map(doc.variants) {|variant|\n+            let attrs = astsrv::exec(srv) {|ctxt|\n+                alt ctxt.map.get(doc.id) {\n+                  ast_map::node_item(@{\n+                    node: ast::item_enum(ast_variants, _), _\n+                  }) {\n+                    let ast_variant = option::get(\n+                        vec::find(ast_variants) {|v|\n+                            v.node.name == variant.name\n+                        });\n+\n+                    attr_parser::parse_variant(ast_variant.node.attrs)\n+                  }\n+                }\n+            };\n+\n+            ~{\n+                desc: attrs.desc\n+                with *variant\n+            }\n+        }\n+        with *doc\n+    }\n+}\n+\n+#[test]\n+fn fold_enum_should_extract_docs() {\n+    let source = \"#[doc(brief = \\\"a\\\", desc = \\\"b\\\")]\\\n+                  enum a { v }\";\n+    let srv = astsrv::mk_srv_from_str(source);\n+    let doc = extract::from_srv(srv, \"\");\n+    let fold = fold::default_seq_fold(srv);\n+    let doc = fold_enum(fold, doc.topmod.enums[0]);\n+    assert doc.brief == some(\"a\");\n+    assert doc.desc == some(\"b\");\n+}\n+\n+#[test]\n+fn fold_enum_should_extract_variant_docs() {\n+    let source = \"enum a { #[doc = \\\"c\\\"] v }\";\n+    let srv = astsrv::mk_srv_from_str(source);\n+    let doc = extract::from_srv(srv, \"\");\n+    let fold = fold::default_seq_fold(srv);\n+    let doc = fold_enum(fold, doc.topmod.enums[0]);\n+    assert doc.variants[0].desc == some(\"c\");\n+}"}]}