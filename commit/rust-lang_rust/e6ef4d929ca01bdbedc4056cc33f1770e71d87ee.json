{"sha": "e6ef4d929ca01bdbedc4056cc33f1770e71d87ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2ZWY0ZDkyOWNhMDFiZGJlZGM0MDU2Y2MzM2YxNzcwZTcxZDg3ZWU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-12-01T01:08:06Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-12-01T04:31:33Z"}, "message": "rt: Remove the stack pointer field of stk_seg", "tree": {"sha": "dd694a48debb4f149e4ddef41881dad6ee478812", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd694a48debb4f149e4ddef41881dad6ee478812"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6ef4d929ca01bdbedc4056cc33f1770e71d87ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6ef4d929ca01bdbedc4056cc33f1770e71d87ee", "html_url": "https://github.com/rust-lang/rust/commit/e6ef4d929ca01bdbedc4056cc33f1770e71d87ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6ef4d929ca01bdbedc4056cc33f1770e71d87ee/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "408d4ec0ef40a2ce650fab8d730a79f08d35054a", "url": "https://api.github.com/repos/rust-lang/rust/commits/408d4ec0ef40a2ce650fab8d730a79f08d35054a", "html_url": "https://github.com/rust-lang/rust/commit/408d4ec0ef40a2ce650fab8d730a79f08d35054a"}], "stats": {"total": 51, "additions": 9, "deletions": 42}, "files": [{"sha": "2805fc2b10ebb8990a4b7be4ffad7e9c0f4c5f62", "filename": "src/rt/arch/i386/morestack.S", "status": "modified", "additions": 4, "deletions": 14, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e6ef4d929ca01bdbedc4056cc33f1770e71d87ee/src%2Frt%2Farch%2Fi386%2Fmorestack.S", "raw_url": "https://github.com/rust-lang/rust/raw/e6ef4d929ca01bdbedc4056cc33f1770e71d87ee/src%2Frt%2Farch%2Fi386%2Fmorestack.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fi386%2Fmorestack.S?ref=e6ef4d929ca01bdbedc4056cc33f1770e71d87ee", "patch": "@@ -8,14 +8,12 @@\n #if defined(__APPLE__) || defined(_WIN32)\n #define RUST_NEW_STACK2         _rust_new_stack2\n #define RUST_DEL_STACK          _rust_del_stack\n-#define RUST_GET_PREV_STACK     _rust_get_prev_stack\n #define RUST_GET_TASK           _rust_get_task\n #define UPCALL_CALL_C           _upcall_call_shim_on_c_stack\n #define MORESTACK               ___morestack\n #else\n #define RUST_NEW_STACK2         rust_new_stack2\n #define RUST_DEL_STACK          rust_del_stack\n-#define RUST_GET_PREV_STACK     rust_get_prev_stack\n #define RUST_GET_TASK           rust_get_task\n #define UPCALL_CALL_C           upcall_call_shim_on_c_stack\n #define MORESTACK               __morestack\n@@ -59,7 +57,6 @@ MORESTACK:\n \tjz .L$bail\n \n \t// The arguments to rust_new_stack2\n-\tmovl %esp, 20(%esp) // Save the stack pointer\n \tmovl 36(%esp),%eax  // Size of stack arguments\n \tmovl %eax,16(%esp)\n \tleal 44+ALIGNMENT(%esp),%eax // Address of stack arguments\n@@ -81,21 +78,14 @@ MORESTACK:\n \t// Now the function that called us has returned, so we need to delete the\n \t// old stack space.\n \n-\t// NB: This is assuming we already have at least 2 words\n-\t// pushed onto the C stack. This is always true because\n-\t// Rust functions have implicit arguments.\n-\tmovl $RUST_GET_PREV_STACK,4(%esp)\n-\tmovl $0, (%esp)\n-\tcall UPCALL_CALL_C\n-\n \t// Switch back to the rust stack\n-\tmovl %eax, %esp\n+\tmovl %ebp, %esp\n \n-\tmovl $RUST_DEL_STACK,4(%esp)\n-\tmovl $0, (%esp)\n+\tpushl $RUST_DEL_STACK\n+\tpushl $0\n \tcall UPCALL_CALL_C\n \n-\taddl $24,%esp\n+\taddl $8,%esp\n \tpopl %ebp\n \tretl $8\n "}, {"sha": "d8070cfd9f0c92b76cf37bf68c334e40fbb846d9", "filename": "src/rt/arch/x86_64/morestack.S", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e6ef4d929ca01bdbedc4056cc33f1770e71d87ee/src%2Frt%2Farch%2Fx86_64%2Fmorestack.S", "raw_url": "https://github.com/rust-lang/rust/raw/e6ef4d929ca01bdbedc4056cc33f1770e71d87ee/src%2Frt%2Farch%2Fx86_64%2Fmorestack.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fx86_64%2Fmorestack.S?ref=e6ef4d929ca01bdbedc4056cc33f1770e71d87ee", "patch": "@@ -9,14 +9,12 @@\n #define RUST_NEW_STACK2     _rust_new_stack2\n #define RUST_DEL_STACK      _rust_del_stack\n #define RUST_DEL_STACK      _rust_del_stack\n-#define RUST_GET_PREV_STACK _rust_get_prev_stack\n #define UPCALL_CALL_C       _upcall_call_shim_on_c_stack\n #define MORESTACK           ___morestack\n #else\n #define RUST_NEW_STACK2     rust_new_stack2\n #define RUST_DEL_STACK      rust_del_stack\n #define RUST_DEL_STACK      rust_del_stack\n-#define RUST_GET_PREV_STACK rust_get_prev_stack\n #define UPCALL_CALL_C       upcall_call_shim_on_c_stack\n #define MORESTACK           __morestack\n #endif\n@@ -63,9 +61,6 @@ MORESTACK:\n \tmovq %rsp, %rbp\n \t.cfi_def_cfa_register %rbp\n \n-\t// Alignment\n-\tpushq $0\n-\n \t// FIXME: libgcc also saves rax. not sure if we need to\n \n \t// Save argument registers\n@@ -82,7 +77,6 @@ MORESTACK:\n \tmovq %rbp, %rcx\n \taddq $24, %rcx  // Base pointer, return address x2\n \n-\tpushq %rbp // Save the Rust stack pointer\n \tpushq %r11 // Size of stack arguments\n \tpushq %rcx // Address of stack arguments\n \tpushq %r10 // The amount of stack needed\n@@ -92,7 +86,7 @@ MORESTACK:\n \tcall UPCALL_CALL_C@PLT\n \n \t// Pop the new_stack_args struct\n-\taddq $32, %rsp\n+\taddq $24, %rsp\n \n \t// Pop the saved arguments\n \tpopq %r9\n@@ -108,13 +102,8 @@ MORESTACK:\n \n         call *%r10              // Reenter the caller function\n \n-\tleaq RUST_GET_PREV_STACK@PLT(%rip), %rsi\n-\tmovq $0, %rdi\n-\tcall UPCALL_CALL_C@PLT\n-\n-\t// Switch back to the rust stack, positioned\n-\t// where we pushed %ebp\n-\tmovq %rax, %rsp\n+\t// Switch back to the rust stack\n+\tmovq %rbp, %rsp\n \n \t// Align the stack again\n \tpushq $0"}, {"sha": "7210fe3956c0b513a681e75e64487df7d52aa243", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e6ef4d929ca01bdbedc4056cc33f1770e71d87ee/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/e6ef4d929ca01bdbedc4056cc33f1770e71d87ee/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=e6ef4d929ca01bdbedc4056cc33f1770e71d87ee", "patch": "@@ -67,14 +67,11 @@ record_sp(void *limit);\n \n // Entry points for `__morestack` (see arch/*/morestack.S).\n extern \"C\" void *\n-rust_new_stack(size_t stk_sz, void *args_addr, size_t args_sz,\n-               uintptr_t current_sp) {\n+rust_new_stack(size_t stk_sz, void *args_addr, size_t args_sz) {\n     rust_task *task = rust_scheduler::get_task();\n \n     stk_seg *stk_seg = new_stk(task->sched, task, stk_sz + args_sz);\n \n-    // Save the previous stack pointer so it can be restored later\n-    stk_seg->return_sp = current_sp;\n     uint8_t *new_sp = (uint8_t*)stk_seg->limit;\n     size_t sizeof_retaddr = sizeof(void*);\n     // Make enough room on the new stack to hold the old stack pointer\n@@ -90,15 +87,14 @@ struct rust_new_stack2_args {\n   size_t stk_sz;\n   void *args_addr;\n   size_t args_sz;\n-  uintptr_t current_sp;\n };\n \n // A new stack function suitable for calling through\n // upcall_call_shim_on_c_stack\n extern \"C\" void *\n rust_new_stack2(struct rust_new_stack2_args *args) {\n     return rust_new_stack(args->stk_sz, args->args_addr,\n-                          args->args_sz, args->current_sp);\n+                          args->args_sz);\n }\n \n extern \"C\" void\n@@ -108,12 +104,6 @@ rust_del_stack() {\n     record_sp(task->stk->data + RED_ZONE_SIZE);\n }\n \n-extern \"C\" uintptr_t\n-rust_get_prev_stack() {\n-    rust_task *task = rust_scheduler::get_task();\n-    return task->stk->return_sp;\n-}\n-\n extern \"C\" rust_task *\n rust_get_task() {\n     return rust_scheduler::get_task();"}, {"sha": "a6d68331fdaf353450bf5d8c09298ec9355dbd7e", "filename": "src/rt/rust_task.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e6ef4d929ca01bdbedc4056cc33f1770e71d87ee/src%2Frt%2Frust_task.h", "raw_url": "https://github.com/rust-lang/rust/raw/e6ef4d929ca01bdbedc4056cc33f1770e71d87ee/src%2Frt%2Frust_task.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.h?ref=e6ef4d929ca01bdbedc4056cc33f1770e71d87ee", "patch": "@@ -26,7 +26,6 @@ struct rust_box;\n struct stk_seg {\n     stk_seg *next;\n     uintptr_t limit;\n-    uintptr_t return_sp;\n     unsigned int valgrind_id;\n #ifndef _LP64\n     uint32_t pad;"}, {"sha": "68d791f162da1fb0222b2558d3521fbb883cbc57", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e6ef4d929ca01bdbedc4056cc33f1770e71d87ee/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/e6ef4d929ca01bdbedc4056cc33f1770e71d87ee/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=e6ef4d929ca01bdbedc4056cc33f1770e71d87ee", "patch": "@@ -30,7 +30,6 @@ refcount\n rust_del_stack\n rust_file_is_dir\n rust_getcwd\n-rust_get_prev_stack\n rust_get_stdin\n rust_get_stdout\n rust_get_stderr"}]}