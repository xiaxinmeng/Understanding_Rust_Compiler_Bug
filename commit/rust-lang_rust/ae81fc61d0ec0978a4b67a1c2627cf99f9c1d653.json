{"sha": "ae81fc61d0ec0978a4b67a1c2627cf99f9c1d653", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlODFmYzYxZDBlYzA5NzhhNGI2N2ExYzI2MjdjZjk5ZjljMWQ2NTM=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-08-19T23:39:58Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-08-19T23:39:58Z"}, "message": "Fix ICE", "tree": {"sha": "91c7f63ea2dbd848a36ca8a75118feb2a7b75925", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91c7f63ea2dbd848a36ca8a75118feb2a7b75925"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae81fc61d0ec0978a4b67a1c2627cf99f9c1d653", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae81fc61d0ec0978a4b67a1c2627cf99f9c1d653", "html_url": "https://github.com/rust-lang/rust/commit/ae81fc61d0ec0978a4b67a1c2627cf99f9c1d653", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae81fc61d0ec0978a4b67a1c2627cf99f9c1d653/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5c2470ba3a3cb94450a522af34aabd20f1cb7b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5c2470ba3a3cb94450a522af34aabd20f1cb7b4", "html_url": "https://github.com/rust-lang/rust/commit/b5c2470ba3a3cb94450a522af34aabd20f1cb7b4"}], "stats": {"total": 23, "additions": 11, "deletions": 12}, "files": [{"sha": "8703b99b9592f0fcb380d9db66aab7b88586764e", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ae81fc61d0ec0978a4b67a1c2627cf99f9c1d653/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae81fc61d0ec0978a4b67a1c2627cf99f9c1d653/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=ae81fc61d0ec0978a4b67a1c2627cf99f9c1d653", "patch": "@@ -4944,13 +4944,17 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n             // `impl Trait` is treated as a normal generic parameter internally,\n             // but we don't allow users to specify the parameter's value\n             // explicitly, so we have to do some error-checking here.\n-            suppress_errors.insert(index, AstConv::check_generic_arg_count_for_call(\n+            let suppress = AstConv::check_generic_arg_count_for_call(\n                 self.tcx,\n                 span,\n                 &generics,\n                 &seg,\n                 false, // `is_method_call`\n-            ));\n+            );\n+            if suppress {\n+                self.set_tainted_by_errors(); // See issue #53251.\n+            }\n+            suppress_errors.insert(index, suppress);\n         }\n \n         let has_self = path_segs.last().map(|PathSeg(def_id, _)| {"}, {"sha": "b36e9645e17bc33b10cab46c5b6aae01592b762c", "filename": "src/test/ui/issue-53251.stderr", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ae81fc61d0ec0978a4b67a1c2627cf99f9c1d653/src%2Ftest%2Fui%2Fissue-53251.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae81fc61d0ec0978a4b67a1c2627cf99f9c1d653/src%2Ftest%2Fui%2Fissue-53251.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-53251.stderr?ref=ae81fc61d0ec0978a4b67a1c2627cf99f9c1d653", "patch": "@@ -1,17 +1,12 @@\n-error[E0601]: `main` function not found in crate `issue_53251`\n-   |\n-   = note: consider adding a `main` function to `$DIR/issue-53251.rs`\n-\n-error[E0087]: too many type parameters provided: expected at most 0 type parameters, found 1 type parameter\n-  --> $DIR/issue-53251.rs:21:24\n+error[E0087]: wrong number of type arguments: expected 0, found 1\n+  --> $DIR/issue-53251.rs:21:17\n    |\n LL |                 S::f::<i64>();\n-   |                        ^^^ expected 0 type parameters\n+   |                 ^^^^^^^^^^^ unexpected type argument\n ...\n LL | impl_add!(a b);\n    | --------------- in this macro invocation\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n-Some errors occurred: E0087, E0601.\n-For more information about an error, try `rustc --explain E0087`.\n+For more information about this error, try `rustc --explain E0087`."}]}