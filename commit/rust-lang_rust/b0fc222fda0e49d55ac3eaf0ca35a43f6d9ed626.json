{"sha": "b0fc222fda0e49d55ac3eaf0ca35a43f6d9ed626", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwZmMyMjJmZGEwZTQ5ZDU1YWMzZWFmMGNhMzVhNDNmNmQ5ZWQ2MjY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-12-15T00:36:32Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-12-15T00:36:32Z"}, "message": "Fix broken tests", "tree": {"sha": "1906dd55c50e031b3f8fac898a6dba156643a10a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1906dd55c50e031b3f8fac898a6dba156643a10a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b0fc222fda0e49d55ac3eaf0ca35a43f6d9ed626", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b0fc222fda0e49d55ac3eaf0ca35a43f6d9ed626", "html_url": "https://github.com/rust-lang/rust/commit/b0fc222fda0e49d55ac3eaf0ca35a43f6d9ed626", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b0fc222fda0e49d55ac3eaf0ca35a43f6d9ed626/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9601bce10ac5d037b0d1ce532196f08f4b7fd95", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9601bce10ac5d037b0d1ce532196f08f4b7fd95", "html_url": "https://github.com/rust-lang/rust/commit/a9601bce10ac5d037b0d1ce532196f08f4b7fd95"}], "stats": {"total": 66, "additions": 3, "deletions": 63}, "files": [{"sha": "98d3643704a1f01fd5747c61f85843868dc09bcf", "filename": "doc/rust.md", "status": "modified", "additions": 3, "deletions": 63, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/b0fc222fda0e49d55ac3eaf0ca35a43f6d9ed626/doc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/b0fc222fda0e49d55ac3eaf0ca35a43f6d9ed626/doc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.md?ref=b0fc222fda0e49d55ac3eaf0ca35a43f6d9ed626", "patch": "@@ -858,13 +858,14 @@ If a sequence of such redirections form a cycle or cannot be unambiguously resol\n \n An example of re-exporting:\n ~~~~\n+# fn main() { }\n mod quux {\n-    mod foo {\n+    pub mod foo {\n         pub fn bar() { }\n         pub fn baz() { }\n     }\n     \n-    pub use foo::*;\n+    pub use quux::foo::*;\n }\n ~~~~\n \n@@ -3036,67 +3037,6 @@ An executing task can yield control at any time, by making a library call to\n non-executing state (blocked, dead) similarly deschedules the task.\n \n \n-### Spawning tasks\n-\n-A call to `core::task::spawn`, passing a 0-argument function as its single\n-argument, causes the runtime to construct a new task executing the passed\n-function. The passed function is referred to as the _entry function_ for\n-the spawned task, and any captured environment it carries is moved from the\n-spawning task to the spawned task before the spawned task begins execution.\n-\n-The result of a `spawn` call is a `core::task::Task` value.\n-\n-An example of a `spawn` call:\n-\n-~~~~\n-let po = comm::Port();\n-let ch = comm::Chan(&po);\n-\n-do task::spawn {\n-    // let task run, do other things\n-    ...\n-    comm::send(ch, true);\n-};\n-\n-let result = comm::recv(po);\n-~~~~\n-\n-\n-### Sending values into channels\n-\n-Sending a value into a channel is done by a library call to `core::comm::send`,\n-which takes a channel and a value to send, and moves the value into the\n-channel's outgoing buffer.\n-\n-An example of a send:\n-\n-~~~~\n-let po = comm::Port();\n-let ch = comm::Chan(&po);\n-comm::send(ch, ~\"hello, world\");\n-~~~~\n-\n-\n-### Receiving values from ports\n-\n-Receiving a value is done by a call to the `recv` method on a value of type\n-`core::comm::Port`. This call causes the receiving task to enter the *blocked\n-reading* state until a value arrives in the port's receive queue, at which\n-time the port deques a value to return, and un-blocks the receiving task.\n-\n-An example of a *receive*:\n-\n-~~~~~~~~\n-# let po = comm::Port();\n-# let ch = comm::Chan(&po);\n-# comm::send(ch, ~\"\");\n-let s = comm::recv(po);\n-~~~~~~~~\n-\n-> **Note:** this communication system will be replaced by a higher-performance system called \"pipes\",\n-> in future versions of Rust.\n-\n-\n # Runtime services, linkage and debugging\n \n "}]}