{"sha": "c29e05e7450053e2a90635976a7fe2d6e5a7fd15", "node_id": "C_kwDOAAsO6NoAKGMyOWUwNWU3NDUwMDUzZTJhOTA2MzU5NzZhN2ZlMmQ2ZTVhN2ZkMTU", "commit": {"author": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-06-27T14:47:27Z"}, "committer": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-06-30T07:59:21Z"}, "message": "lint: port `CString` ptr diagnostics\n\nSigned-off-by: David Wood <david.wood@huawei.com>", "tree": {"sha": "d2dbe42c059d50273f26853095aebe70f71e8bfd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2dbe42c059d50273f26853095aebe70f71e8bfd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c29e05e7450053e2a90635976a7fe2d6e5a7fd15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c29e05e7450053e2a90635976a7fe2d6e5a7fd15", "html_url": "https://github.com/rust-lang/rust/commit/c29e05e7450053e2a90635976a7fe2d6e5a7fd15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c29e05e7450053e2a90635976a7fe2d6e5a7fd15/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f35c7993b7b9a0301b0af27aa78a637fce4208b", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f35c7993b7b9a0301b0af27aa78a637fce4208b", "html_url": "https://github.com/rust-lang/rust/commit/4f35c7993b7b9a0301b0af27aa78a637fce4208b"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "178a58f1836baa39be6a7a8068255b1a6cd264ff", "filename": "compiler/rustc_error_messages/locales/en-US/lint.ftl", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c29e05e7450053e2a90635976a7fe2d6e5a7fd15/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/c29e05e7450053e2a90635976a7fe2d6e5a7fd15/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl?ref=c29e05e7450053e2a90635976a7fe2d6e5a7fd15", "patch": "@@ -54,3 +54,9 @@ lint-diag-out-of-impl =\n     diagnostics should only be created in `SessionDiagnostic`/`AddSubdiagnostic` impls\n \n lint-untranslatable-diag = diagnostics should be created using translatable messages\n+\n+lint-cstring-ptr = getting the inner pointer of a temporary `CString`\n+    .as-ptr-label = this pointer will be invalid\n+    .unwrap-label = this `CString` is deallocated at the end of the statement, bind it to a variable to extend its lifetime\n+    .note = pointers do not have a lifetime; when calling `as_ptr` the `CString` will be deallocated at the end of the statement because nothing is referencing it as far as the type system is concerned\n+    .help = for more information, see https://doc.rust-lang.org/reference/destructors.html"}, {"sha": "ff5a01749c19e66b5246c514c6a71f2307fe8826", "filename": "compiler/rustc_lint/src/methods.rs", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c29e05e7450053e2a90635976a7fe2d6e5a7fd15/compiler%2Frustc_lint%2Fsrc%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c29e05e7450053e2a90635976a7fe2d6e5a7fd15/compiler%2Frustc_lint%2Fsrc%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fmethods.rs?ref=c29e05e7450053e2a90635976a7fe2d6e5a7fd15", "patch": "@@ -1,6 +1,7 @@\n use crate::LateContext;\n use crate::LateLintPass;\n use crate::LintContext;\n+use rustc_errors::fluent;\n use rustc_hir::{Expr, ExprKind, PathSegment};\n use rustc_middle::ty;\n use rustc_span::{symbol::sym, ExpnKind, Span};\n@@ -88,16 +89,12 @@ fn lint_cstring_as_ptr(\n             if let ty::Adt(adt, _) = substs.type_at(0).kind() {\n                 if cx.tcx.is_diagnostic_item(sym::cstring_type, adt.did()) {\n                     cx.struct_span_lint(TEMPORARY_CSTRING_AS_PTR, as_ptr_span, |diag| {\n-                        let mut diag = diag\n-                            .build(\"getting the inner pointer of a temporary `CString`\");\n-                        diag.span_label(as_ptr_span, \"this pointer will be invalid\");\n-                        diag.span_label(\n-                            unwrap.span,\n-                            \"this `CString` is deallocated at the end of the statement, bind it to a variable to extend its lifetime\",\n-                        );\n-                        diag.note(\"pointers do not have a lifetime; when calling `as_ptr` the `CString` will be deallocated at the end of the statement because nothing is referencing it as far as the type system is concerned\");\n-                        diag.help(\"for more information, see https://doc.rust-lang.org/reference/destructors.html\");\n-                        diag.emit();\n+                        diag.build(fluent::lint::cstring_ptr)\n+                            .span_label(as_ptr_span, fluent::lint::as_ptr_label)\n+                            .span_label(unwrap.span, fluent::lint::unwrap_label)\n+                            .note(fluent::lint::note)\n+                            .help(fluent::lint::help)\n+                            .emit();\n                     });\n                 }\n             }"}]}