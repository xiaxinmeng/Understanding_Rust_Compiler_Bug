{"sha": "be9129f556f8f43158ccac31dab50aa6b79115b6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlOTEyOWY1NTZmOGY0MzE1OGNjYWMzMWRhYjUwYWE2Yjc5MTE1YjY=", "commit": {"author": {"name": "Kevin Cantu", "email": "me@kevincantu.org", "date": "2012-01-31T04:06:38Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-31T22:29:11Z"}, "message": "Comment fixes in str", "tree": {"sha": "ccd8087797f7ca3aa81a3edbbfc767889ca9154f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ccd8087797f7ca3aa81a3edbbfc767889ca9154f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be9129f556f8f43158ccac31dab50aa6b79115b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be9129f556f8f43158ccac31dab50aa6b79115b6", "html_url": "https://github.com/rust-lang/rust/commit/be9129f556f8f43158ccac31dab50aa6b79115b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be9129f556f8f43158ccac31dab50aa6b79115b6/comments", "author": {"login": "killerswan", "id": 195060, "node_id": "MDQ6VXNlcjE5NTA2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/195060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killerswan", "html_url": "https://github.com/killerswan", "followers_url": "https://api.github.com/users/killerswan/followers", "following_url": "https://api.github.com/users/killerswan/following{/other_user}", "gists_url": "https://api.github.com/users/killerswan/gists{/gist_id}", "starred_url": "https://api.github.com/users/killerswan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killerswan/subscriptions", "organizations_url": "https://api.github.com/users/killerswan/orgs", "repos_url": "https://api.github.com/users/killerswan/repos", "events_url": "https://api.github.com/users/killerswan/events{/privacy}", "received_events_url": "https://api.github.com/users/killerswan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03b8c8df0174967206d1d65c1ac311e205050e1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/03b8c8df0174967206d1d65c1ac311e205050e1c", "html_url": "https://github.com/rust-lang/rust/commit/03b8c8df0174967206d1d65c1ac311e205050e1c"}], "stats": {"total": 28, "additions": 11, "deletions": 17}, "files": [{"sha": "7c588b139708ccdf9d85227df4f3a55afc746d94", "filename": "src/libcore/str.rs", "status": "modified", "additions": 11, "deletions": 17, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/be9129f556f8f43158ccac31dab50aa6b79115b6/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be9129f556f8f43158ccac31dab50aa6b79115b6/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=be9129f556f8f43158ccac31dab50aa6b79115b6", "patch": "@@ -183,7 +183,6 @@ fn from_chars(chs: [char]) -> str {\n     ret buf;\n }\n \n-// FIXME: not unsafe now\n /*\n Function: from_cstr\n \n@@ -1371,35 +1370,30 @@ An unsafe buffer of bytes. Corresponds to a C char pointer.\n */\n type sbuf = *u8;\n \n+// Module: unsafe\n+//\n+// These functions may create invalid UTF-8 strings and eat your baby.\n mod unsafe {\n    export\n       // UNSAFE\n       from_bytes,\n       from_byte;\n \n-   /*\n-   Function: unsafe::from_bytes\n-\n-   Converts a vector of bytes to a string. Does not verify that the\n-   vector contains valid UTF-8.\n-\n-   FIXME: stop exporting\n-   */\n+   // Function: unsafe::from_bytes\n+   //\n+   // Converts a vector of bytes to a string. Does not verify that the\n+   // vector contains valid UTF-8.\n    unsafe fn from_bytes(v: [const u8]) -> str unsafe {\n        let vcopy: [u8] = v + [0u8];\n        let scopy: str = ::unsafe::reinterpret_cast(vcopy);\n        ::unsafe::leak(vcopy);\n        ret scopy;\n    }\n \n-   /*\n-   Function: unsafe::from_byte\n-\n-   Converts a byte to a string. Does not verify that the byte is\n-   valid UTF-8.\n-\n-   FIXME: stop exporting\n-   */\n+   // Function: unsafe::from_byte\n+   //\n+   // Converts a byte to a string. Does not verify that the byte is\n+   // valid UTF-8.\n    unsafe fn from_byte(u: u8) -> str { unsafe::from_bytes([u]) }\n }\n "}]}