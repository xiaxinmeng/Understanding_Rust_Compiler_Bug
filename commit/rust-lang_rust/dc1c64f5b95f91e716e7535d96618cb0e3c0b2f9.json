{"sha": "dc1c64f5b95f91e716e7535d96618cb0e3c0b2f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjMWM2NGY1Yjk1ZjkxZTcxNmU3NTM1ZDk2NjE4Y2IwZTNjMGIyZjk=", "commit": {"author": {"name": "DJMcNab", "email": "36049421+DJMcNab@users.noreply.github.com", "date": "2018-12-20T18:24:38Z"}, "committer": {"name": "DJMcNab", "email": "36049421+DJMcNab@users.noreply.github.com", "date": "2018-12-20T19:07:11Z"}, "message": "Support a blank expression before a semicolon", "tree": {"sha": "cf5ca2a03c977c1003b4a3cef4d27f8b9999031a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf5ca2a03c977c1003b4a3cef4d27f8b9999031a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc1c64f5b95f91e716e7535d96618cb0e3c0b2f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc1c64f5b95f91e716e7535d96618cb0e3c0b2f9", "html_url": "https://github.com/rust-lang/rust/commit/dc1c64f5b95f91e716e7535d96618cb0e3c0b2f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc1c64f5b95f91e716e7535d96618cb0e3c0b2f9/comments", "author": {"login": "DJMcNab", "id": 36049421, "node_id": "MDQ6VXNlcjM2MDQ5NDIx", "avatar_url": "https://avatars.githubusercontent.com/u/36049421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DJMcNab", "html_url": "https://github.com/DJMcNab", "followers_url": "https://api.github.com/users/DJMcNab/followers", "following_url": "https://api.github.com/users/DJMcNab/following{/other_user}", "gists_url": "https://api.github.com/users/DJMcNab/gists{/gist_id}", "starred_url": "https://api.github.com/users/DJMcNab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DJMcNab/subscriptions", "organizations_url": "https://api.github.com/users/DJMcNab/orgs", "repos_url": "https://api.github.com/users/DJMcNab/repos", "events_url": "https://api.github.com/users/DJMcNab/events{/privacy}", "received_events_url": "https://api.github.com/users/DJMcNab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DJMcNab", "id": 36049421, "node_id": "MDQ6VXNlcjM2MDQ5NDIx", "avatar_url": "https://avatars.githubusercontent.com/u/36049421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DJMcNab", "html_url": "https://github.com/DJMcNab", "followers_url": "https://api.github.com/users/DJMcNab/followers", "following_url": "https://api.github.com/users/DJMcNab/following{/other_user}", "gists_url": "https://api.github.com/users/DJMcNab/gists{/gist_id}", "starred_url": "https://api.github.com/users/DJMcNab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DJMcNab/subscriptions", "organizations_url": "https://api.github.com/users/DJMcNab/orgs", "repos_url": "https://api.github.com/users/DJMcNab/repos", "events_url": "https://api.github.com/users/DJMcNab/events{/privacy}", "received_events_url": "https://api.github.com/users/DJMcNab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "057c95d3dd72725f13bfef25827b9034f19ba877", "url": "https://api.github.com/repos/rust-lang/rust/commits/057c95d3dd72725f13bfef25827b9034f19ba877", "html_url": "https://github.com/rust-lang/rust/commit/057c95d3dd72725f13bfef25827b9034f19ba877"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "67fc1766730cee50190781ae3ab54763954afbf5", "filename": "crates/ra_syntax/src/grammar/expressions.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/dc1c64f5b95f91e716e7535d96618cb0e3c0b2f9/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc1c64f5b95f91e716e7535d96618cb0e3c0b2f9/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fexpressions.rs?ref=dc1c64f5b95f91e716e7535d96618cb0e3c0b2f9", "patch": "@@ -42,6 +42,11 @@ pub(crate) fn block(p: &mut Parser) {\n     }\n     let m = p.start();\n     p.bump();\n+    // test nocontentexpr\n+    // fn foo(){\n+    //     ;;;some_expr();;;;{;;;};;;;Ok(())\n+    // }\n+    while p.eat(SEMI) {}\n     while !p.at(EOF) && !p.at(R_CURLY) {\n         match p.current() {\n             LET_KW => let_stmt(p),\n@@ -89,6 +94,7 @@ pub(crate) fn block(p: &mut Parser) {\n                 }\n             }\n         }\n+        while p.eat(SEMI) {}\n     }\n     p.expect(R_CURLY);\n     m.complete(p, BLOCK);"}]}