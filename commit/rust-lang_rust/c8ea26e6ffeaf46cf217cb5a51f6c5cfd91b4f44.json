{"sha": "c8ea26e6ffeaf46cf217cb5a51f6c5cfd91b4f44", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4ZWEyNmU2ZmZlYWY0NmNmMjE3Y2I1YTUxZjZjNWNmZDkxYjRmNDQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-06T23:39:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-06T23:39:38Z"}, "message": "Rollup merge of #63333 - jethrogb:jb/error-codes-features, r=Mark-Simulacrum\n\nRemove unnecessary features from compiler error code list", "tree": {"sha": "8896a44042f2aa13935c389b7581d8679f1c42b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8896a44042f2aa13935c389b7581d8679f1c42b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c8ea26e6ffeaf46cf217cb5a51f6c5cfd91b4f44", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdSg+6CRBK7hj4Ov3rIwAAdHIIAFULht9H/2CPCTBW74iF0bDh\nYHJKKnFqQN0L1f5juSDhNn3FsVSRzisG3kti3K6ltrZxUwYNAnfndPmaCUB9V5/B\nFQP163rLCoH8uPnkzk4Tt4OCffAuQKa//RfN+pgQU6vjjlXPV/Q+bOVWUf0O4/db\n4QigpJiZiet0Jx5Tg+UZF8/y8VBg/m4TK7AdszFYMpfFuwVUTRde/0wJ70yK0qXi\nsRh3Fi2HElQ1CKfJtRABC+HewRs56pufuBkDKiwNJWC5ZZzpTJ7vncaJ5S1NRzxe\nN5miRVkF+oV0mJl9imKjVZIywMpKDSt70CPP9+YpRtv6MmF1e02nfEMGWibXaik=\n=+s36\n-----END PGP SIGNATURE-----\n", "payload": "tree 8896a44042f2aa13935c389b7581d8679f1c42b9\nparent 2c81d606f958b879c7dfbffe8a36ce1704fd4aa8\nparent c22cc1d67afe1c2f0c60a3cc4e6d8ba70c34bf99\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1565134778 +0200\ncommitter GitHub <noreply@github.com> 1565134778 +0200\n\nRollup merge of #63333 - jethrogb:jb/error-codes-features, r=Mark-Simulacrum\n\nRemove unnecessary features from compiler error code list\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c8ea26e6ffeaf46cf217cb5a51f6c5cfd91b4f44", "html_url": "https://github.com/rust-lang/rust/commit/c8ea26e6ffeaf46cf217cb5a51f6c5cfd91b4f44", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c8ea26e6ffeaf46cf217cb5a51f6c5cfd91b4f44/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c81d606f958b879c7dfbffe8a36ce1704fd4aa8", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c81d606f958b879c7dfbffe8a36ce1704fd4aa8", "html_url": "https://github.com/rust-lang/rust/commit/2c81d606f958b879c7dfbffe8a36ce1704fd4aa8"}, {"sha": "c22cc1d67afe1c2f0c60a3cc4e6d8ba70c34bf99", "url": "https://api.github.com/repos/rust-lang/rust/commits/c22cc1d67afe1c2f0c60a3cc4e6d8ba70c34bf99", "html_url": "https://github.com/rust-lang/rust/commit/c22cc1d67afe1c2f0c60a3cc4e6d8ba70c34bf99"}], "stats": {"total": 6, "additions": 0, "deletions": 6}, "files": [{"sha": "86c263a447bb6ecf9bd940e6239829cf9fe6ea80", "filename": "src/librustc_mir/error_codes.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c8ea26e6ffeaf46cf217cb5a51f6c5cfd91b4f44/src%2Flibrustc_mir%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8ea26e6ffeaf46cf217cb5a51f6c5cfd91b4f44/src%2Flibrustc_mir%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ferror_codes.rs?ref=c8ea26e6ffeaf46cf217cb5a51f6c5cfd91b4f44", "patch": "@@ -2027,15 +2027,13 @@ Local variables, function parameters and temporaries are all dropped before the\n end of the function body. So a reference to them cannot be returned.\n \n ```compile_fail,E0515\n-#![feature(nll)]\n fn get_dangling_reference() -> &'static i32 {\n     let x = 0;\n     &x\n }\n ```\n \n ```compile_fail,E0515\n-#![feature(nll)]\n use std::slice::Iter;\n fn get_dangling_iterator<'a>() -> Iter<'a, i32> {\n     let v = vec![1, 2, 3];\n@@ -2233,7 +2231,6 @@ function which outlived the lifetime of the function.\n Example of erroneous code:\n \n ```compile_fail,E0712\n-#![feature(nll)]\n #![feature(thread_local)]\n \n #[thread_local]\n@@ -2286,8 +2283,6 @@ not run while the string-data is borrowed; for example by taking `S`\n by reference:\n \n ```\n-#![feature(nll)]\n-\n pub struct S<'a> { data: &'a mut String }\n \n impl<'a> Drop for S<'a> {\n@@ -2312,7 +2307,6 @@ while a borrow is still in active use.\n Erroneous code example:\n \n ```compile_fail,E0716\n-# #![feature(nll)]\n fn foo() -> i32 { 22 }\n fn bar(x: &i32) -> &i32 { x }\n let p = bar(&foo());"}]}