{"sha": "8a563e4a46a699aa0e77ed38f925b61d843a9d36", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhNTYzZTRhNDZhNjk5YWEwZTc3ZWQzOGY5MjViNjFkODQzYTlkMzY=", "commit": {"author": {"name": "Andr\u00e9 Oliveira", "email": "p32blo@gmail.com", "date": "2021-08-10T13:35:37Z"}, "committer": {"name": "Andr\u00e9 Oliveira", "email": "p32blo@gmail.com", "date": "2021-08-10T13:43:08Z"}, "message": "Use local node_modules to allow the graph to load offline\n\n- Fix some warnings", "tree": {"sha": "edf66661c4aa266366c535637fb97f97c2937cf3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/edf66661c4aa266366c535637fb97f97c2937cf3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a563e4a46a699aa0e77ed38f925b61d843a9d36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a563e4a46a699aa0e77ed38f925b61d843a9d36", "html_url": "https://github.com/rust-lang/rust/commit/8a563e4a46a699aa0e77ed38f925b61d843a9d36", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a563e4a46a699aa0e77ed38f925b61d843a9d36/comments", "author": {"login": "p32blo", "id": 6619062, "node_id": "MDQ6VXNlcjY2MTkwNjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6619062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/p32blo", "html_url": "https://github.com/p32blo", "followers_url": "https://api.github.com/users/p32blo/followers", "following_url": "https://api.github.com/users/p32blo/following{/other_user}", "gists_url": "https://api.github.com/users/p32blo/gists{/gist_id}", "starred_url": "https://api.github.com/users/p32blo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/p32blo/subscriptions", "organizations_url": "https://api.github.com/users/p32blo/orgs", "repos_url": "https://api.github.com/users/p32blo/repos", "events_url": "https://api.github.com/users/p32blo/events{/privacy}", "received_events_url": "https://api.github.com/users/p32blo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "p32blo", "id": 6619062, "node_id": "MDQ6VXNlcjY2MTkwNjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6619062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/p32blo", "html_url": "https://github.com/p32blo", "followers_url": "https://api.github.com/users/p32blo/followers", "following_url": "https://api.github.com/users/p32blo/following{/other_user}", "gists_url": "https://api.github.com/users/p32blo/gists{/gist_id}", "starred_url": "https://api.github.com/users/p32blo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/p32blo/subscriptions", "organizations_url": "https://api.github.com/users/p32blo/orgs", "repos_url": "https://api.github.com/users/p32blo/repos", "events_url": "https://api.github.com/users/p32blo/events{/privacy}", "received_events_url": "https://api.github.com/users/p32blo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4f68e62c29b08fb888e02151c54f5e6f38dd425", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4f68e62c29b08fb888e02151c54f5e6f38dd425", "html_url": "https://github.com/rust-lang/rust/commit/f4f68e62c29b08fb888e02151c54f5e6f38dd425"}], "stats": {"total": 48, "additions": 36, "deletions": 12}, "files": [{"sha": "e61572eb2b6eecc993e1471439b8162b848dc90b", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8a563e4a46a699aa0e77ed38f925b61d843a9d36/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a563e4a46a699aa0e77ed38f925b61d843a9d36/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=8a563e4a46a699aa0e77ed38f925b61d843a9d36", "patch": "@@ -3,8 +3,8 @@\n //! `ide` crate.\n \n use std::{\n-    io::{Read, Write as _},\n-    process::{self, Command, Stdio},\n+    io::{Write as _},\n+    process::{self, Stdio},\n };\n \n use ide::{"}, {"sha": "fd8fc32db48a014d81b143dc67ff27d680421cac", "filename": "editors/code/src/commands.ts", "status": "modified", "additions": 30, "deletions": 10, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/8a563e4a46a699aa0e77ed38f925b61d843a9d36/editors%2Fcode%2Fsrc%2Fcommands.ts", "raw_url": "https://github.com/rust-lang/rust/raw/8a563e4a46a699aa0e77ed38f925b61d843a9d36/editors%2Fcode%2Fsrc%2Fcommands.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands.ts?ref=8a563e4a46a699aa0e77ed38f925b61d843a9d36", "patch": "@@ -1,6 +1,7 @@\n import * as vscode from 'vscode';\n import * as lc from 'vscode-languageclient';\n import * as ra from './lsp_ext';\n+import * as path from 'path';\n \n import { Ctx, Cmd } from './ctx';\n import { applySnippetWorkspaceEdit, applySnippetTextEdits } from './snippets';\n@@ -474,28 +475,47 @@ function crateGraph(ctx: Ctx, full: boolean): Cmd {\n     return async () => {\n         const panel = vscode.window.createWebviewPanel(\"rust-analyzer.crate-graph\", \"rust-analyzer crate graph\", vscode.ViewColumn.Two, {\n             enableScripts: true,\n-            retainContextWhenHidden: true\n-          });\n+            retainContextWhenHidden: true,\n+            localResourceRoots: [vscode.Uri.joinPath(vscode.Uri.parse(ctx.extensionPath), \"node_modules\")]\n+        });\n         const params = {\n             full: full,\n         };\n         const dot = await ctx.client.sendRequest(ra.viewCrateGraph, params);\n \n         console.log(dot);\n \n+        let script_d3 = vscode.Uri.file(path.join(ctx.extensionPath, 'node_modules', 'd3', 'dist', 'd3.min.js'));\n+        let script_d3_gv = vscode.Uri.file(path.join(ctx.extensionPath, 'node_modules', 'd3-graphviz', 'build', 'd3-graphviz.min.js'));\n+        let script_wasm = vscode.Uri.file(path.join(ctx.extensionPath, 'node_modules', '@hpcc-js', 'wasm', 'dist', 'index.min.js'));\n+\n+        console.log(script_d3, script_d3_gv, script_wasm);\n+\n         const html = `\n         <!DOCTYPE html>\n         <meta charset=\"utf-8\">\n-\n+        <head>\n+            <style>\n+                body {\n+                    padding: 0px\n+                }\n+                ::-webkit-scrollbar {\n+                    display: none;\n+                }\n+            </style>\n+        </head>\n         <body>\n-            <script src=\"https://d3js.org/d3.v5.min.js\"></script>\n-            <script src=\"https://unpkg.com/@hpcc-js/wasm@0.3.11/dist/index.min.js\"></script>\n-            <script src=\"https://unpkg.com/d3-graphviz@3.0.5/build/d3-graphviz.js\"></script>\n-            <div id=\"graph\" style=\"text-align: center;\"></div>\n+            <script src=\"${panel.webview.asWebviewUri(script_d3)}\"></script>\n+            <script src=\"${panel.webview.asWebviewUri(script_wasm)}\"></script>\n+            <script src=\"${panel.webview.asWebviewUri(script_d3_gv)}\"></script>\n+            <div id=\"graph\"></div>\n             <script>\n-                let margin = 0;\n-                d3.select(\"#graph\").graphviz().fit(true).width(window.innerWidth - margin).height(window.innerHeight - margin)\n-                    .renderDot(\\`${dot}\\`);\n+                d3.select(\"#graph\")\n+                  .graphviz()\n+                  .fit(true)\n+                  .width(window.innerWidth)\n+                  .height(window.innerHeight)\n+                  .renderDot(\\`${dot}\\`);\n             </script>\n         </body>\n         `;"}, {"sha": "666a4b6972bb2557babd850dcb739fc38deb77ee", "filename": "editors/code/src/ctx.ts", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8a563e4a46a699aa0e77ed38f925b61d843a9d36/editors%2Fcode%2Fsrc%2Fctx.ts", "raw_url": "https://github.com/rust-lang/rust/raw/8a563e4a46a699aa0e77ed38f925b61d843a9d36/editors%2Fcode%2Fsrc%2Fctx.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fctx.ts?ref=8a563e4a46a699aa0e77ed38f925b61d843a9d36", "patch": "@@ -68,6 +68,10 @@ export class Ctx {\n         this.pushCleanup(d);\n     }\n \n+    get extensionPath(): string {\n+        return this.extCtx.extensionPath;\n+    }\n+\n     get globalState(): vscode.Memento {\n         return this.extCtx.globalState;\n     }"}]}