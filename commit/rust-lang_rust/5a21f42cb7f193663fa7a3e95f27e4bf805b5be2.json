{"sha": "5a21f42cb7f193663fa7a3e95f27e4bf805b5be2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhMjFmNDJjYjdmMTkzNjYzZmE3YTNlOTVmMjdlNGJmODA1YjViZTI=", "commit": {"author": {"name": "king6cong", "email": "king6cong@gmail.com", "date": "2017-02-04T02:21:26Z"}, "committer": {"name": "king6cong", "email": "king6cong@gmail.com", "date": "2017-02-04T02:37:09Z"}, "message": "run rustfmt for librustc/util/fs.rs", "tree": {"sha": "09a7dc87cc888d1539fb352defa481d01832f736", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09a7dc87cc888d1539fb352defa481d01832f736"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a21f42cb7f193663fa7a3e95f27e4bf805b5be2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a21f42cb7f193663fa7a3e95f27e4bf805b5be2", "html_url": "https://github.com/rust-lang/rust/commit/5a21f42cb7f193663fa7a3e95f27e4bf805b5be2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a21f42cb7f193663fa7a3e95f27e4bf805b5be2/comments", "author": {"login": "king6cong", "id": 302560, "node_id": "MDQ6VXNlcjMwMjU2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/302560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/king6cong", "html_url": "https://github.com/king6cong", "followers_url": "https://api.github.com/users/king6cong/followers", "following_url": "https://api.github.com/users/king6cong/following{/other_user}", "gists_url": "https://api.github.com/users/king6cong/gists{/gist_id}", "starred_url": "https://api.github.com/users/king6cong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/king6cong/subscriptions", "organizations_url": "https://api.github.com/users/king6cong/orgs", "repos_url": "https://api.github.com/users/king6cong/repos", "events_url": "https://api.github.com/users/king6cong/events{/privacy}", "received_events_url": "https://api.github.com/users/king6cong/received_events", "type": "User", "site_admin": false}, "committer": {"login": "king6cong", "id": 302560, "node_id": "MDQ6VXNlcjMwMjU2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/302560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/king6cong", "html_url": "https://github.com/king6cong", "followers_url": "https://api.github.com/users/king6cong/followers", "following_url": "https://api.github.com/users/king6cong/following{/other_user}", "gists_url": "https://api.github.com/users/king6cong/gists{/gist_id}", "starred_url": "https://api.github.com/users/king6cong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/king6cong/subscriptions", "organizations_url": "https://api.github.com/users/king6cong/orgs", "repos_url": "https://api.github.com/users/king6cong/repos", "events_url": "https://api.github.com/users/king6cong/events{/privacy}", "received_events_url": "https://api.github.com/users/king6cong/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "768f6a9b57c83030919adb30565918f1b520596f", "url": "https://api.github.com/repos/rust-lang/rust/commits/768f6a9b57c83030919adb30565918f1b520596f", "html_url": "https://github.com/rust-lang/rust/commit/768f6a9b57c83030919adb30565918f1b520596f"}], "stats": {"total": 22, "additions": 12, "deletions": 10}, "files": [{"sha": "3b4b3998c574531ee3cd16afaaf8540a0d2be24b", "filename": "src/librustc/util/fs.rs", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/5a21f42cb7f193663fa7a3e95f27e4bf805b5be2/src%2Flibrustc%2Futil%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a21f42cb7f193663fa7a3e95f27e4bf805b5be2/src%2Flibrustc%2Futil%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Ffs.rs?ref=5a21f42cb7f193663fa7a3e95f27e4bf805b5be2", "patch": "@@ -31,7 +31,7 @@ use std::io;\n //   https://github.com/rust-lang/rust/issues/25505#issuecomment-102876737\n pub fn fix_windows_verbatim_for_gcc(p: &Path) -> PathBuf {\n     if !cfg!(windows) {\n-        return p.to_path_buf()\n+        return p.to_path_buf();\n     }\n     let mut components = p.components();\n     let prefix = match components.next() {\n@@ -58,7 +58,7 @@ pub fn fix_windows_verbatim_for_gcc(p: &Path) -> PathBuf {\n \n pub enum LinkOrCopy {\n     Link,\n-    Copy\n+    Copy,\n }\n \n /// Copy `p` into `q`, preferring to use hard-linking if possible. If\n@@ -76,7 +76,7 @@ pub fn link_or_copy<P: AsRef<Path>, Q: AsRef<Path>>(p: P, q: Q) -> io::Result<Li\n         Err(_) => {\n             match fs::copy(p, q) {\n                 Ok(_) => Ok(LinkOrCopy::Copy),\n-                Err(e) => Err(e)\n+                Err(e) => Err(e),\n             }\n         }\n     }\n@@ -85,12 +85,15 @@ pub fn link_or_copy<P: AsRef<Path>, Q: AsRef<Path>>(p: P, q: Q) -> io::Result<Li\n #[derive(Debug)]\n pub enum RenameOrCopyRemove {\n     Rename,\n-    CopyRemove\n+    CopyRemove,\n }\n \n /// Rename `p` into `q`, preferring to use `rename` if possible.\n-/// If `rename` fails (rename may fail for reasons such as crossing filesystem), fallback to copy & remove\n-pub fn rename_or_copy_remove<P: AsRef<Path>, Q: AsRef<Path>>(p: P, q: Q) -> io::Result<RenameOrCopyRemove> {\n+/// If `rename` fails (rename may fail for reasons such as crossing\n+/// filesystem), fallback to copy & remove\n+pub fn rename_or_copy_remove<P: AsRef<Path>, Q: AsRef<Path>>(p: P,\n+                                                             q: Q)\n+                                                             -> io::Result<RenameOrCopyRemove> {\n     let p = p.as_ref();\n     let q = q.as_ref();\n     match fs::rename(p, q) {\n@@ -100,8 +103,8 @@ pub fn rename_or_copy_remove<P: AsRef<Path>, Q: AsRef<Path>>(p: P, q: Q) -> io::\n                 Ok(_) => {\n                     fs::remove_file(p)?;\n                     Ok(RenameOrCopyRemove::CopyRemove)\n-                },\n-                Err(e) => Err(e)\n+                }\n+                Err(e) => Err(e),\n             }\n         }\n     }\n@@ -118,8 +121,7 @@ pub fn create_dir_racy(path: &Path) -> io::Result<()> {\n     }\n     match path.parent() {\n         Some(p) => try!(create_dir_racy(p)),\n-        None => return Err(io::Error::new(io::ErrorKind::Other,\n-                                          \"failed to create whole tree\")),\n+        None => return Err(io::Error::new(io::ErrorKind::Other, \"failed to create whole tree\")),\n     }\n     match fs::create_dir(path) {\n         Ok(()) => Ok(()),"}]}