{"sha": "a929c952d42d874b15dadb17bc6837484a01e893", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5MjljOTUyZDQyZDg3NGIxNWRhZGIxN2JjNjgzNzQ4NGEwMWU4OTM=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-08-20T19:32:04Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-08-20T19:32:04Z"}, "message": "Add more architectures to with_object", "tree": {"sha": "ee7d350c808c708fa62b4cec1c8586d551fdfc81", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee7d350c808c708fa62b4cec1c8586d551fdfc81"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a929c952d42d874b15dadb17bc6837484a01e893", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a929c952d42d874b15dadb17bc6837484a01e893", "html_url": "https://github.com/rust-lang/rust/commit/a929c952d42d874b15dadb17bc6837484a01e893", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a929c952d42d874b15dadb17bc6837484a01e893/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d29e0484cf671a21399264d8b4c94d06a66f3b9a", "url": "https://api.github.com/repos/rust-lang/rust/commits/d29e0484cf671a21399264d8b4c94d06a66f3b9a", "html_url": "https://github.com/rust-lang/rust/commit/d29e0484cf671a21399264d8b4c94d06a66f3b9a"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "023d197ab394505bedda4db4304e55438731935d", "filename": "src/backend.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a929c952d42d874b15dadb17bc6837484a01e893/src%2Fbackend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a929c952d42d874b15dadb17bc6837484a01e893/src%2Fbackend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbackend.rs?ref=a929c952d42d874b15dadb17bc6837484a01e893", "patch": "@@ -122,10 +122,23 @@ pub(crate) fn with_object(sess: &Session, name: &str, f: impl FnOnce(&mut Object\n         binary_format => sess.fatal(&format!(\"binary format {} is unsupported\", binary_format)),\n     };\n     let architecture = match triple.architecture {\n+        target_lexicon::Architecture::Aarch64(_) => object::Architecture::Aarch64,\n+        target_lexicon::Architecture::Arm(_) => object::Architecture::Arm,\n+        target_lexicon::Architecture::Avr => object::Architecture::Avr,\n+        target_lexicon::Architecture::Hexagon => object::Architecture::Hexagon,\n+        target_lexicon::Architecture::Mips32(_) => object::Architecture::Mips,\n+        target_lexicon::Architecture::Mips64(_) => object::Architecture::Mips64,\n+        target_lexicon::Architecture::Msp430 => object::Architecture::Msp430,\n+        target_lexicon::Architecture::Powerpc => object::Architecture::PowerPc,\n+        target_lexicon::Architecture::Powerpc64 => object::Architecture::PowerPc64,\n+        target_lexicon::Architecture::Powerpc64le => todo!(),\n+        target_lexicon::Architecture::Riscv32(_) => object::Architecture::Riscv32,\n+        target_lexicon::Architecture::Riscv64(_) => object::Architecture::Riscv64,\n+        target_lexicon::Architecture::S390x => object::Architecture::S390x,\n+        target_lexicon::Architecture::Sparc64 => object::Architecture::Sparc64,\n+        target_lexicon::Architecture::Sparcv9 => object::Architecture::Sparc64,\n         target_lexicon::Architecture::X86_32(_) => object::Architecture::I386,\n         target_lexicon::Architecture::X86_64 => object::Architecture::X86_64,\n-        target_lexicon::Architecture::Arm(_) => object::Architecture::Arm,\n-        target_lexicon::Architecture::Aarch64(_) => object::Architecture::Aarch64,\n         architecture => {\n             sess.fatal(&format!(\"target architecture {:?} is unsupported\", architecture,))\n         }"}]}