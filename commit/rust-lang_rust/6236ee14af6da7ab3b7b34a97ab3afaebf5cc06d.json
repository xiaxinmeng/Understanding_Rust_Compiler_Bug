{"sha": "6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyMzZlZTE0YWY2ZGE3YWIzYjdiMzRhOTdhYjNhZmFlYmY1Y2MwNmQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-11-01T16:57:23Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-11-01T18:08:56Z"}, "message": "add -Z continue-parse-after-error to parse-fail tests\n\nThe new handling fixed a latent bug in the parser error handling where\nit would only abort after the second error (when configured to stop\nafter the first error). This is because the check for `error_count != 0`\nwas occuring before the increment. Since the increment is tied to the\n`emit()` call now this no longer occurs.", "tree": {"sha": "996106c8df686274de5b903505c642f254d6f595", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/996106c8df686274de5b903505c642f254d6f595"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d", "html_url": "https://github.com/rust-lang/rust/commit/6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad46ad6a77e6909b5ecab19825687e2c3a1e57f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad46ad6a77e6909b5ecab19825687e2c3a1e57f1", "html_url": "https://github.com/rust-lang/rust/commit/ad46ad6a77e6909b5ecab19825687e2c3a1e57f1"}], "stats": {"total": 28, "additions": 15, "deletions": 13}, "files": [{"sha": "70055a101815fce2188e67eee0d49fc4b6f1fe45", "filename": "src/test/parse-fail/associated-types-project-from-hrtb-explicit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d/src%2Ftest%2Fparse-fail%2Fassociated-types-project-from-hrtb-explicit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d/src%2Ftest%2Fparse-fail%2Fassociated-types-project-from-hrtb-explicit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fassociated-types-project-from-hrtb-explicit.rs?ref=6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// compile-flags: -Z parse-only\n+// compile-flags: -Z parse-only -Z continue-parse-after-error\n \n // Test you can't use a higher-ranked trait bound inside of a qualified\n // path (just won't parse)."}, {"sha": "2bb593258ae4b82248f09efd6817d7cb505920c5", "filename": "src/test/parse-fail/generic-non-trailing-defaults.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d/src%2Ftest%2Fparse-fail%2Fgeneric-non-trailing-defaults.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d/src%2Ftest%2Fparse-fail%2Fgeneric-non-trailing-defaults.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fgeneric-non-trailing-defaults.rs?ref=6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// compile-flags: -Z parse-only\n+// compile-flags: -Z parse-only -Z continue-parse-after-error\n \n struct Heap;\n "}, {"sha": "de5aeb02ab788d91612f76a97de202d86e91d76d", "filename": "src/test/parse-fail/issue-17904.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d/src%2Ftest%2Fparse-fail%2Fissue-17904.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d/src%2Ftest%2Fparse-fail%2Fissue-17904.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fissue-17904.rs?ref=6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// compile-flags: -Z parse-only\n+// compile-flags: -Z parse-only -Z continue-parse-after-error\n \n struct Baz<U> where U: Eq(U); //This is parsed as the new Fn* style parenthesis syntax.\n struct Baz<U> where U: Eq(U) -> R; // Notice this parses as well."}, {"sha": "c8406af52ae0c475bb94cbd88fe59705c83695c2", "filename": "src/test/parse-fail/lex-bad-octal-literal.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d/src%2Ftest%2Fparse-fail%2Flex-bad-octal-literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d/src%2Ftest%2Fparse-fail%2Flex-bad-octal-literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Flex-bad-octal-literal.rs?ref=6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// compile-flags: -Z parse-only -Z continue-parse-after-error\n+\n fn main() {\n     0o18; //~ ERROR invalid digit for a base 8 literal\n     0o1234_9_5670;  //~ ERROR invalid digit for a base 8 literal"}, {"sha": "a8771ae93af524fe84dfabb9958b950612a60062", "filename": "src/test/parse-fail/lifetime-no-keyword.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d/src%2Ftest%2Fparse-fail%2Flifetime-no-keyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d/src%2Ftest%2Fparse-fail%2Flifetime-no-keyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Flifetime-no-keyword.rs?ref=6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// compile-flags: -Z parse-only\n+// compile-flags: -Z parse-only -Z continue-parse-after-error\n \n fn foo<'a>(a: &'a isize) { }\n fn bar(a: &'static isize) { }"}, {"sha": "2e33f98add6b4460e53b861a1a11e3637a15fe8a", "filename": "src/test/parse-fail/raw-byte-string-literals.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d/src%2Ftest%2Fparse-fail%2Fraw-byte-string-literals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d/src%2Ftest%2Fparse-fail%2Fraw-byte-string-literals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fraw-byte-string-literals.rs?ref=6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d", "patch": "@@ -8,10 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// compile-flags: -Z parse-only\n+// compile-flags: -Z parse-only -Z continue-parse-after-error\n \n \n pub fn main() {\n-    br\"\u00e9\";  //~ raw byte string must be ASCII\n-    br##~\"a\"~##;  //~ only `#` is allowed in raw string delimitation\n+    br\"\u00e9\";  //~ ERROR raw byte string must be ASCII\n+    br##~\"a\"~##;  //~ ERROR only `#` is allowed in raw string delimitation\n }"}, {"sha": "6deb3bb2e95185c299a6f916bb7d3a8c170d75b4", "filename": "src/test/parse-fail/removed-syntax-field-let.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d/src%2Ftest%2Fparse-fail%2Fremoved-syntax-field-let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d/src%2Ftest%2Fparse-fail%2Fremoved-syntax-field-let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fremoved-syntax-field-let.rs?ref=6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// compile-flags: -Z parse-only\n+// compile-flags: -Z parse-only -Z continue-parse-after-error\n \n struct s {\n     let foo: (),"}, {"sha": "1971ffeaf2648708ec05a2ab4f2e48916aa639e4", "filename": "src/test/parse-fail/syntax-trait-polarity.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d/src%2Ftest%2Fparse-fail%2Fsyntax-trait-polarity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d/src%2Ftest%2Fparse-fail%2Fsyntax-trait-polarity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fsyntax-trait-polarity.rs?ref=6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// compile-flags: -Z parse-only\n+// compile-flags: -Z parse-only -Z continue-parse-after-error\n \n #![feature(optin_builtin_traits)]\n "}, {"sha": "44bb1f930c7bdcb945ae5d6cbd348d20917f7e5e", "filename": "src/test/parse-fail/trailing-plus-in-bounds.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d/src%2Ftest%2Fparse-fail%2Ftrailing-plus-in-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d/src%2Ftest%2Fparse-fail%2Ftrailing-plus-in-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Ftrailing-plus-in-bounds.rs?ref=6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// compile-flags: -Z parse-only\n+// compile-flags: -Z parse-only -Z continue-parse-after-error\n \n use std::fmt::Debug;\n "}, {"sha": "b7dcc8a8b3bc1a5774ebd4ce41e22dcf37bb254c", "filename": "src/test/parse-fail/trait-bounds-not-on-impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d/src%2Ftest%2Fparse-fail%2Ftrait-bounds-not-on-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d/src%2Ftest%2Fparse-fail%2Ftrait-bounds-not-on-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Ftrait-bounds-not-on-impl.rs?ref=6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// compile-flags: -Z parse-only\n+// compile-flags: -Z parse-only -Z continue-parse-after-error\n \n trait Foo {\n }"}, {"sha": "9e16e29ba50b3f8d5662d8e8c8edea4f7e4e2cc4", "filename": "src/test/parse-fail/use-as-where-use-ends-with-mod-sep.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d/src%2Ftest%2Fparse-fail%2Fuse-as-where-use-ends-with-mod-sep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d/src%2Ftest%2Fparse-fail%2Fuse-as-where-use-ends-with-mod-sep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fuse-as-where-use-ends-with-mod-sep.rs?ref=6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// compile-flags: -Z parse-only\n+// compile-flags: -Z parse-only -Z continue-parse-after-error\n \n use std::any:: as foo; //~ ERROR expected identifier, found keyword `as`\n //~^ ERROR: expected one of `::`, `;`, or `as`, found `foo`"}, {"sha": "45165b76c4af0acd64e340d0372f7a94518a5ebd", "filename": "src/test/parse-fail/where-clauses-no-bounds-or-predicates.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d/src%2Ftest%2Fparse-fail%2Fwhere-clauses-no-bounds-or-predicates.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d/src%2Ftest%2Fparse-fail%2Fwhere-clauses-no-bounds-or-predicates.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fwhere-clauses-no-bounds-or-predicates.rs?ref=6236ee14af6da7ab3b7b34a97ab3afaebf5cc06d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// compile-flags: -Z parse-only\n+// compile-flags: -Z parse-only -Z continue-parse-after-error\n \n fn equal1<T>(_: &T, _: &T) -> bool where {\n //~^ ERROR a `where` clause must have at least one predicate in it"}]}