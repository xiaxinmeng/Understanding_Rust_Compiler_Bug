{"sha": "68e98a2a858a60462501ea2a9097fe94d70ff993", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4ZTk4YTJhODU4YTYwNDYyNTAxZWEyYTkwOTdmZTk0ZDcwZmY5OTM=", "commit": {"author": {"name": "Taylor Cramer", "email": "cramertj@google.com", "date": "2019-01-07T19:45:34Z"}, "committer": {"name": "Taylor Cramer", "email": "cramertj@google.com", "date": "2019-01-07T19:45:34Z"}, "message": "Reborrow Pin<P> using &mut in `Pin::set`\n\nThis makes it possible to call `.set` multiple times without\nusing `.as_mut()` first to reborrow the pointer.", "tree": {"sha": "c913a791c9847c49d1481caee17becc4ac8511f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c913a791c9847c49d1481caee17becc4ac8511f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68e98a2a858a60462501ea2a9097fe94d70ff993", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68e98a2a858a60462501ea2a9097fe94d70ff993", "html_url": "https://github.com/rust-lang/rust/commit/68e98a2a858a60462501ea2a9097fe94d70ff993", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68e98a2a858a60462501ea2a9097fe94d70ff993/comments", "author": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21ac19d8fefb023752645fcf2517ce0fad663bf0", "url": "https://api.github.com/repos/rust-lang/rust/commits/21ac19d8fefb023752645fcf2517ce0fad663bf0", "html_url": "https://github.com/rust-lang/rust/commit/21ac19d8fefb023752645fcf2517ce0fad663bf0"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "762e07549a52a40613a5e9bf47456e5b9f78e11a", "filename": "src/libcore/pin.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/68e98a2a858a60462501ea2a9097fe94d70ff993/src%2Flibcore%2Fpin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68e98a2a858a60462501ea2a9097fe94d70ff993/src%2Flibcore%2Fpin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpin.rs?ref=68e98a2a858a60462501ea2a9097fe94d70ff993", "patch": "@@ -175,11 +175,11 @@ impl<P: DerefMut> Pin<P> {\n     /// Assign a new value to the memory behind the pinned reference.\n     #[stable(feature = \"pin\", since = \"1.33.0\")]\n     #[inline(always)]\n-    pub fn set(mut self: Pin<P>, value: P::Target)\n+    pub fn set(self: &mut Pin<P>, value: P::Target)\n     where\n         P::Target: Sized,\n     {\n-        *self.pointer = value;\n+        *(self.pointer) = value;\n     }\n }\n "}]}