{"sha": "46e229661d18c1ab55dc9c739925361f1e2d3477", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2ZTIyOTY2MWQxOGMxYWI1NWRjOWM3Mzk5MjUzNjFmMWUyZDM0Nzc=", "commit": {"author": {"name": "Tshepang Lekhonkhobe", "email": "tshepang@gmail.com", "date": "2015-12-08T22:04:54Z"}, "committer": {"name": "Tshepang Lekhonkhobe", "email": "tshepang@gmail.com", "date": "2015-12-17T19:34:18Z"}, "message": "doc: improve drain examples and remove secondary info from leading paragraph", "tree": {"sha": "85026d1513c3c6a4d800565c7f0c581a81b5b943", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85026d1513c3c6a4d800565c7f0c581a81b5b943"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46e229661d18c1ab55dc9c739925361f1e2d3477", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46e229661d18c1ab55dc9c739925361f1e2d3477", "html_url": "https://github.com/rust-lang/rust/commit/46e229661d18c1ab55dc9c739925361f1e2d3477", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46e229661d18c1ab55dc9c739925361f1e2d3477/comments", "author": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tshepang", "id": 588486, "node_id": "MDQ6VXNlcjU4ODQ4Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/588486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tshepang", "html_url": "https://github.com/tshepang", "followers_url": "https://api.github.com/users/tshepang/followers", "following_url": "https://api.github.com/users/tshepang/following{/other_user}", "gists_url": "https://api.github.com/users/tshepang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tshepang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tshepang/subscriptions", "organizations_url": "https://api.github.com/users/tshepang/orgs", "repos_url": "https://api.github.com/users/tshepang/repos", "events_url": "https://api.github.com/users/tshepang/events{/privacy}", "received_events_url": "https://api.github.com/users/tshepang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4dbdfb493357427a0f94ce09badef581f5d62bbd", "url": "https://api.github.com/repos/rust-lang/rust/commits/4dbdfb493357427a0f94ce09badef581f5d62bbd", "html_url": "https://github.com/rust-lang/rust/commit/4dbdfb493357427a0f94ce09badef581f5d62bbd"}], "stats": {"total": 41, "additions": 26, "deletions": 15}, "files": [{"sha": "8f38530c640699eaed00c327dccc618d2ac2a794", "filename": "src/libcollections/string.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/46e229661d18c1ab55dc9c739925361f1e2d3477/src%2Flibcollections%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46e229661d18c1ab55dc9c739925361f1e2d3477/src%2Flibcollections%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstring.rs?ref=46e229661d18c1ab55dc9c739925361f1e2d3477", "patch": "@@ -1015,8 +1015,10 @@ impl String {\n     }\n \n     /// Create a draining iterator that removes the specified range in the string\n-    /// and yields the removed chars from start to end. The element range is\n-    /// removed even if the iterator is not consumed until the end.\n+    /// and yields the removed chars.\n+    ///\n+    /// Note: The element range is removed even if the iterator is not\n+    /// consumed until the end.\n     ///\n     /// # Panics\n     ///"}, {"sha": "228d31c6b171da02044f853e8cfc3ed503ebaf46", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/46e229661d18c1ab55dc9c739925361f1e2d3477/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46e229661d18c1ab55dc9c739925361f1e2d3477/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=46e229661d18c1ab55dc9c739925361f1e2d3477", "patch": "@@ -725,10 +725,12 @@ impl<T> Vec<T> {\n     }\n \n     /// Create a draining iterator that removes the specified range in the vector\n-    /// and yields the removed items from start to end. The element range is\n-    /// removed even if the iterator is not consumed until the end.\n+    /// and yields the removed items.\n     ///\n-    /// Note: It is unspecified how many elements are removed from the vector,\n+    /// Note 1: The element range is removed even if the iterator is not\n+    /// consumed until the end.\n+    ///\n+    /// Note 2: It is unspecified how many elements are removed from the vector,\n     /// if the `Drain` value is leaked.\n     ///\n     /// # Panics\n@@ -739,11 +741,14 @@ impl<T> Vec<T> {\n     /// # Examples\n     ///\n     /// ```\n-    /// // Draining using `..` clears the whole vector.\n     /// let mut v = vec![1, 2, 3];\n-    /// let u: Vec<_> = v.drain(..).collect();\n+    /// let u: Vec<_> = v.drain(1..).collect();\n+    /// assert_eq!(v, &[1]);\n+    /// assert_eq!(u, &[2, 3]);\n+    ///\n+    /// // A full range clears the vector\n+    /// v.drain(..);\n     /// assert_eq!(v, &[]);\n-    /// assert_eq!(u, &[1, 2, 3]);\n     /// ```\n     #[stable(feature = \"drain\", since = \"1.6.0\")]\n     pub fn drain<R>(&mut self, range: R) -> Drain<T>"}, {"sha": "5450b55f9fc5b31db147ea944c84eba10c12f5af", "filename": "src/libcollections/vec_deque.rs", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/46e229661d18c1ab55dc9c739925361f1e2d3477/src%2Flibcollections%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46e229661d18c1ab55dc9c739925361f1e2d3477/src%2Flibcollections%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec_deque.rs?ref=46e229661d18c1ab55dc9c739925361f1e2d3477", "patch": "@@ -763,10 +763,12 @@ impl<T> VecDeque<T> {\n     }\n \n     /// Create a draining iterator that removes the specified range in the\n-    /// `VecDeque` and yields the removed items from start to end. The element\n-    /// range is removed even if the iterator is not consumed until the end.\n+    /// `VecDeque` and yields the removed items.\n     ///\n-    /// Note: It is unspecified how many elements are removed from the deque,\n+    /// Note 1: The element range is removed even if the iterator is not\n+    /// consumed until the end.\n+    ///\n+    /// Note 2: It is unspecified how many elements are removed from the deque,\n     /// if the `Drain` value is not dropped, but the borrow it holds expires\n     /// (eg. due to mem::forget).\n     ///\n@@ -779,11 +781,13 @@ impl<T> VecDeque<T> {\n     ///\n     /// ```\n     /// use std::collections::VecDeque;\n+\n+    /// let mut v: VecDeque<_> = vec![1, 2, 3].into_iter().collect();\n+    /// assert_eq!(vec![3].into_iter().collect::<VecDeque<_>>(), v.drain(2..).collect());\n+    /// assert_eq!(vec![1, 2].into_iter().collect::<VecDeque<_>>(), v);\n     ///\n-    /// // draining using `..` clears the whole deque.\n-    /// let mut v = VecDeque::new();\n-    /// v.push_back(1);\n-    /// assert_eq!(v.drain(..).next(), Some(1));\n+    /// // A full range clears all contents\n+    /// v.drain(..);\n     /// assert!(v.is_empty());\n     /// ```\n     #[inline]"}]}