{"sha": "c4f2c48d9bed4146b1b317e17854f1cefcaf0f42", "node_id": "C_kwDOAAsO6NoAKGM0ZjJjNDhkOWJlZDQxNDZiMWIzMTdlMTc4NTRmMWNlZmNhZjBmNDI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-24T20:28:34Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-24T20:28:34Z"}, "message": "Auto merge of #10702 - blyxyas:fix-let_underscore_untyped_help_message, r=Manishearth\n\nImprove the help message + add a help span\n\nThis would close #10410, because it applies the general consensus achieved in that issue (that replacing `let _ = ...` to `_ = ...` doesn't present any benefits).\n\nI also added a little help message span.\n\nchangelog:[`let_underscore_untyped`]: Fix the help message confusion + add a help message span.", "tree": {"sha": "8f8863d70cb7f29b36aead61624feeb1ffa5a351", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f8863d70cb7f29b36aead61624feeb1ffa5a351"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c4f2c48d9bed4146b1b317e17854f1cefcaf0f42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c4f2c48d9bed4146b1b317e17854f1cefcaf0f42", "html_url": "https://github.com/rust-lang/rust/commit/c4f2c48d9bed4146b1b317e17854f1cefcaf0f42", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c4f2c48d9bed4146b1b317e17854f1cefcaf0f42/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30db6edf3667c056c5623a5bf21d457d1c630fb6", "url": "https://api.github.com/repos/rust-lang/rust/commits/30db6edf3667c056c5623a5bf21d457d1c630fb6", "html_url": "https://github.com/rust-lang/rust/commit/30db6edf3667c056c5623a5bf21d457d1c630fb6"}, {"sha": "acf50a7dc685ad5267e2fcff5a1545d5e56f5c44", "url": "https://api.github.com/repos/rust-lang/rust/commits/acf50a7dc685ad5267e2fcff5a1545d5e56f5c44", "html_url": "https://github.com/rust-lang/rust/commit/acf50a7dc685ad5267e2fcff5a1545d5e56f5c44"}], "stats": {"total": 40, "additions": 33, "deletions": 7}, "files": [{"sha": "16772a9d5987b619321f2f13f351308b8dd633a8", "filename": "clippy_lints/src/let_underscore.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c4f2c48d9bed4146b1b317e17854f1cefcaf0f42/clippy_lints%2Fsrc%2Flet_underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4f2c48d9bed4146b1b317e17854f1cefcaf0f42/clippy_lints%2Fsrc%2Flet_underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flet_underscore.rs?ref=c4f2c48d9bed4146b1b317e17854f1cefcaf0f42", "patch": "@@ -6,6 +6,7 @@ use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::lint::in_external_macro;\n use rustc_middle::ty::subst::GenericArgKind;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n+use rustc_span::{BytePos, Span};\n \n declare_clippy_lint! {\n     /// ### What it does\n@@ -205,8 +206,13 @@ impl<'tcx> LateLintPass<'tcx> for LetUnderscore {\n                     LET_UNDERSCORE_UNTYPED,\n                     local.span,\n                     \"non-binding `let` without a type annotation\",\n-                    None,\n-                    \"consider adding a type annotation or removing the `let` keyword\",\n+                    Some(\n+\t\t\t\t\t\tSpan::new(local.pat.span.hi(),\n+\t\t\t\t\t\tlocal.pat.span.hi() + BytePos(1),\n+\t\t\t\t\t\tlocal.pat.span.ctxt(),\n+\t\t\t\t\t\tlocal.pat.span.parent()\n+\t\t\t\t\t)),\n+                    \"consider adding a type annotation\",\n                 );\n             }\n         }"}, {"sha": "6844cb998f72a2a73896749c4b434c334f8eb454", "filename": "tests/ui/let_underscore_untyped.stderr", "status": "modified", "additions": 25, "deletions": 5, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/c4f2c48d9bed4146b1b317e17854f1cefcaf0f42/tests%2Fui%2Flet_underscore_untyped.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c4f2c48d9bed4146b1b317e17854f1cefcaf0f42/tests%2Fui%2Flet_underscore_untyped.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_underscore_untyped.stderr?ref=c4f2c48d9bed4146b1b317e17854f1cefcaf0f42", "patch": "@@ -4,7 +4,11 @@ error: non-binding `let` without a type annotation\n LL |     let _ = a();\n    |     ^^^^^^^^^^^^\n    |\n-   = help: consider adding a type annotation or removing the `let` keyword\n+help: consider adding a type annotation\n+  --> $DIR/let_underscore_untyped.rs:36:10\n+   |\n+LL |     let _ = a();\n+   |          ^\n    = note: `-D clippy::let-underscore-untyped` implied by `-D warnings`\n \n error: non-binding `let` without a type annotation\n@@ -13,31 +17,47 @@ error: non-binding `let` without a type annotation\n LL |     let _ = b(1);\n    |     ^^^^^^^^^^^^^\n    |\n-   = help: consider adding a type annotation or removing the `let` keyword\n+help: consider adding a type annotation\n+  --> $DIR/let_underscore_untyped.rs:37:10\n+   |\n+LL |     let _ = b(1);\n+   |          ^\n \n error: non-binding `let` without a type annotation\n   --> $DIR/let_underscore_untyped.rs:39:5\n    |\n LL |     let _ = d(&1);\n    |     ^^^^^^^^^^^^^^\n    |\n-   = help: consider adding a type annotation or removing the `let` keyword\n+help: consider adding a type annotation\n+  --> $DIR/let_underscore_untyped.rs:39:10\n+   |\n+LL |     let _ = d(&1);\n+   |          ^\n \n error: non-binding `let` without a type annotation\n   --> $DIR/let_underscore_untyped.rs:40:5\n    |\n LL |     let _ = e();\n    |     ^^^^^^^^^^^^\n    |\n-   = help: consider adding a type annotation or removing the `let` keyword\n+help: consider adding a type annotation\n+  --> $DIR/let_underscore_untyped.rs:40:10\n+   |\n+LL |     let _ = e();\n+   |          ^\n \n error: non-binding `let` without a type annotation\n   --> $DIR/let_underscore_untyped.rs:41:5\n    |\n LL |     let _ = f();\n    |     ^^^^^^^^^^^^\n    |\n-   = help: consider adding a type annotation or removing the `let` keyword\n+help: consider adding a type annotation\n+  --> $DIR/let_underscore_untyped.rs:41:10\n+   |\n+LL |     let _ = f();\n+   |          ^\n \n error: aborting due to 5 previous errors\n "}]}