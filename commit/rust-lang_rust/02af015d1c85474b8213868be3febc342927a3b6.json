{"sha": "02af015d1c85474b8213868be3febc342927a3b6", "node_id": "C_kwDOAAsO6NoAKDAyYWYwMTVkMWM4NTQ3NGI4MjEzODY4YmUzZmViYzM0MjkyN2EzYjY", "commit": {"author": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-03-27T17:09:06Z"}, "committer": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-03-27T17:09:06Z"}, "message": "[error index] Move some logic from build.rs to main.rs", "tree": {"sha": "95ff5da6d8f7dff23bcb841b7f145a8c3d85caab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/95ff5da6d8f7dff23bcb841b7f145a8c3d85caab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02af015d1c85474b8213868be3febc342927a3b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02af015d1c85474b8213868be3febc342927a3b6", "html_url": "https://github.com/rust-lang/rust/commit/02af015d1c85474b8213868be3febc342927a3b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02af015d1c85474b8213868be3febc342927a3b6/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37b55c8a0cafdb60b9168da34f904acc70157df8", "url": "https://api.github.com/repos/rust-lang/rust/commits/37b55c8a0cafdb60b9168da34f904acc70157df8", "html_url": "https://github.com/rust-lang/rust/commit/37b55c8a0cafdb60b9168da34f904acc70157df8"}], "stats": {"total": 56, "additions": 23, "deletions": 33}, "files": [{"sha": "70b00b36cf1757ec55fd048a6498b6781548fdcd", "filename": "src/tools/error_index_generator/build.rs", "status": "modified", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/02af015d1c85474b8213868be3febc342927a3b6/src%2Ftools%2Ferror_index_generator%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02af015d1c85474b8213868be3febc342927a3b6/src%2Ftools%2Ferror_index_generator%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ferror_index_generator%2Fbuild.rs?ref=02af015d1c85474b8213868be3febc342927a3b6", "patch": "@@ -7,7 +7,6 @@ fn main() {\n     // Note that we could skip one of the .. but this ensures we at least loosely find the right\n     // directory.\n     let out_dir = PathBuf::from(env::var(\"OUT_DIR\").unwrap());\n-    let dest = out_dir.join(\"error_codes.rs\");\n \n     let error_codes_path = \"../../../compiler/rustc_error_codes/src/error_codes.rs\";\n \n@@ -29,35 +28,4 @@ fn main() {\n         let md_content = fs::read_to_string(entry.path()).unwrap();\n         fs::write(&out_dir.join(entry.file_name()), &md_content).unwrap();\n     }\n-\n-    let mut all = String::new();\n-    all.push_str(\n-        r###\"\n-fn register_all() -> Vec<(&'static str, Option<&'static str>)> {\n-    let mut long_codes: Vec<(&'static str, Option<&'static str>)> = Vec::new();\n-    macro_rules! register_diagnostics {\n-        ($($ecode:ident: $message:expr,)*) => (\n-            register_diagnostics!{$($ecode:$message,)* ;}\n-        );\n-\n-        ($($ecode:ident: $message:expr,)* ; $($code:ident,)*) => (\n-            $(\n-                {long_codes.extend([\n-                    (stringify!($ecode), Some($message)),\n-                ].iter());}\n-            )*\n-            $(\n-                {long_codes.extend([\n-                    stringify!($code),\n-                ].iter().cloned().map(|s| (s, None)).collect::<Vec<_>>());}\n-            )*\n-        )\n-    }\n-\"###,\n-    );\n-    all.push_str(r#\"include!(concat!(env!(\"OUT_DIR\"), \"/all_error_codes.rs\"));\"#);\n-    all.push_str(\"\\nlong_codes\\n\");\n-    all.push_str(\"}\\n\");\n-\n-    fs::write(&dest, all).unwrap();\n }"}, {"sha": "51ed1b5a61cbebd1d72f661e9d5c27d08fa6e26b", "filename": "src/tools/error_index_generator/main.rs", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/02af015d1c85474b8213868be3febc342927a3b6/src%2Ftools%2Ferror_index_generator%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02af015d1c85474b8213868be3febc342927a3b6/src%2Ftools%2Ferror_index_generator%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ferror_index_generator%2Fmain.rs?ref=02af015d1c85474b8213868be3febc342927a3b6", "patch": "@@ -277,4 +277,26 @@ fn main() {\n     }\n }\n \n-include!(concat!(env!(\"OUT_DIR\"), \"/error_codes.rs\"));\n+fn register_all() -> Vec<(&'static str, Option<&'static str>)> {\n+    let mut long_codes: Vec<(&'static str, Option<&'static str>)> = Vec::new();\n+    macro_rules! register_diagnostics {\n+        ($($ecode:ident: $message:expr,)*) => (\n+            register_diagnostics!{$($ecode:$message,)* ;}\n+        );\n+\n+        ($($ecode:ident: $message:expr,)* ; $($code:ident,)*) => (\n+            $(\n+                {long_codes.extend([\n+                    (stringify!($ecode), Some($message)),\n+                ].iter());}\n+            )*\n+            $(\n+                {long_codes.extend([\n+                    stringify!($code),\n+                ].iter().cloned().map(|s| (s, None)).collect::<Vec<_>>());}\n+            )*\n+        )\n+    }\n+    include!(concat!(env!(\"OUT_DIR\"), \"/all_error_codes.rs\"));\n+    long_codes\n+}"}]}