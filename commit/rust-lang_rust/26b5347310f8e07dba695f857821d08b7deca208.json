{"sha": "26b5347310f8e07dba695f857821d08b7deca208", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2YjUzNDczMTBmOGUwN2RiYTY5NWY4NTc4MjFkMDhiN2RlY2EyMDg=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2014-06-25T00:03:49Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2014-06-25T21:16:12Z"}, "message": "remove unneccessary pubs, shorten names", "tree": {"sha": "7b9922d283049986217496ed5ba0087c632505a6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b9922d283049986217496ed5ba0087c632505a6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26b5347310f8e07dba695f857821d08b7deca208", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26b5347310f8e07dba695f857821d08b7deca208", "html_url": "https://github.com/rust-lang/rust/commit/26b5347310f8e07dba695f857821d08b7deca208", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26b5347310f8e07dba695f857821d08b7deca208/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84027937745835e1c9328013ba9b8faebf4352af", "url": "https://api.github.com/repos/rust-lang/rust/commits/84027937745835e1c9328013ba9b8faebf4352af", "html_url": "https://github.com/rust-lang/rust/commit/84027937745835e1c9328013ba9b8faebf4352af"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "2b325d1c7876f6955023f665cac2eea4e81806be", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/26b5347310f8e07dba695f857821d08b7deca208/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26b5347310f8e07dba695f857821d08b7deca208/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=26b5347310f8e07dba695f857821d08b7deca208", "patch": "@@ -662,11 +662,11 @@ fn expand_non_macro_stmt(s: &Stmt, fld: &mut MacroExpander)\n // from a given thingy and puts them in a mutable\n // array (passed in to the traversal).\n #[deriving(Clone)]\n-pub struct NewNameFinderContext {\n+struct NameFinderContext {\n     ident_accumulator: Vec<ast::Ident> ,\n }\n \n-impl Visitor<()> for NewNameFinderContext {\n+impl Visitor<()> for NameFinderContext {\n     fn visit_pat(&mut self, pattern: &ast::Pat, _: ()) {\n         match *pattern {\n             // we found a pat_ident!\n@@ -703,8 +703,8 @@ impl Visitor<()> for NewNameFinderContext {\n // return a visitor that extracts the pat_ident paths\n // from a given thingy and puts them in a mutable\n // array (passed in to the traversal)\n-pub fn new_name_finder(idents: Vec<ast::Ident> ) -> NewNameFinderContext {\n-    NewNameFinderContext {\n+fn new_name_finder(idents: Vec<ast::Ident> ) -> NameFinderContext {\n+    NameFinderContext {\n         ident_accumulator: idents,\n     }\n }\n@@ -1012,7 +1012,7 @@ fn original_span(cx: &ExtCtxt) -> Gc<codemap::ExpnInfo> {\n \n #[cfg(test)]\n mod test {\n-    use super::*;\n+    use super::{new_name_finder, expand_crate, contains_macro_escape};\n     use ast;\n     use ast::{Attribute_, AttrOuter, MetaWord};\n     use attr;\n@@ -1032,11 +1032,11 @@ mod test {\n     // from a given thingy and puts them in a mutable\n     // array (passed in to the traversal)\n     #[deriving(Clone)]\n-    struct NewPathExprFinderContext {\n+    struct PathExprFinderContext {\n         path_accumulator: Vec<ast::Path> ,\n     }\n \n-    impl Visitor<()> for NewPathExprFinderContext {\n+    impl Visitor<()> for PathExprFinderContext {\n \n         fn visit_expr(&mut self, expr: &ast::Expr, _: ()) {\n             match *expr {\n@@ -1052,8 +1052,8 @@ mod test {\n     // return a visitor that extracts the paths\n     // from a given thingy and puts them in a mutable\n     // array (passed in to the traversal)\n-    pub fn new_path_finder(paths: Vec<ast::Path> ) -> NewPathExprFinderContext {\n-        NewPathExprFinderContext {\n+    fn new_path_finder(paths: Vec<ast::Path> ) -> PathExprFinderContext {\n+        PathExprFinderContext {\n             path_accumulator: paths\n         }\n     }"}]}