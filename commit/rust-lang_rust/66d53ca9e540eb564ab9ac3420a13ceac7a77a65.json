{"sha": "66d53ca9e540eb564ab9ac3420a13ceac7a77a65", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2ZDUzY2E5ZTU0MGViNTY0YWI5YWMzNDIwYTEzY2VhYzdhNzdhNjU=", "commit": {"author": {"name": "Ed Schouten", "email": "ed@nuxi.nl", "date": "2018-01-18T20:09:34Z"}, "committer": {"name": "Ed Schouten", "email": "ed@nuxi.nl", "date": "2018-01-18T20:11:24Z"}, "message": "Make liballoc_jemalloc work on CloudABI.\n\nThe automated builds for CloudABI in dist-various-2 don't use\n--disable-jemalloc, even though my original container image did. Instead\nof setting that flag, let's go the extra mile of making jemalloc work.\nCloudABI's C library already uses jemalloc and now exposes the API\nextensions used by us.", "tree": {"sha": "6dc5632c8e0a23823c66645668302b2cb69d59fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6dc5632c8e0a23823c66645668302b2cb69d59fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66d53ca9e540eb564ab9ac3420a13ceac7a77a65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66d53ca9e540eb564ab9ac3420a13ceac7a77a65", "html_url": "https://github.com/rust-lang/rust/commit/66d53ca9e540eb564ab9ac3420a13ceac7a77a65", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66d53ca9e540eb564ab9ac3420a13ceac7a77a65/comments", "author": {"login": "EdSchouten", "id": 736085, "node_id": "MDQ6VXNlcjczNjA4NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/736085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdSchouten", "html_url": "https://github.com/EdSchouten", "followers_url": "https://api.github.com/users/EdSchouten/followers", "following_url": "https://api.github.com/users/EdSchouten/following{/other_user}", "gists_url": "https://api.github.com/users/EdSchouten/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdSchouten/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdSchouten/subscriptions", "organizations_url": "https://api.github.com/users/EdSchouten/orgs", "repos_url": "https://api.github.com/users/EdSchouten/repos", "events_url": "https://api.github.com/users/EdSchouten/events{/privacy}", "received_events_url": "https://api.github.com/users/EdSchouten/received_events", "type": "User", "site_admin": false}, "committer": {"login": "EdSchouten", "id": 736085, "node_id": "MDQ6VXNlcjczNjA4NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/736085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EdSchouten", "html_url": "https://github.com/EdSchouten", "followers_url": "https://api.github.com/users/EdSchouten/followers", "following_url": "https://api.github.com/users/EdSchouten/following{/other_user}", "gists_url": "https://api.github.com/users/EdSchouten/gists{/gist_id}", "starred_url": "https://api.github.com/users/EdSchouten/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EdSchouten/subscriptions", "organizations_url": "https://api.github.com/users/EdSchouten/orgs", "repos_url": "https://api.github.com/users/EdSchouten/repos", "events_url": "https://api.github.com/users/EdSchouten/events{/privacy}", "received_events_url": "https://api.github.com/users/EdSchouten/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3bd4af88bea2e6ecdd3455ed89b3ef1fc3500aa4", "url": "https://api.github.com/repos/rust-lang/rust/commits/3bd4af88bea2e6ecdd3455ed89b3ef1fc3500aa4", "html_url": "https://github.com/rust-lang/rust/commit/3bd4af88bea2e6ecdd3455ed89b3ef1fc3500aa4"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "0aa46dc6d205fa0976caf5a7bbd005abcd4b26e7", "filename": "src/liballoc_jemalloc/build.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/66d53ca9e540eb564ab9ac3420a13ceac7a77a65/src%2Fliballoc_jemalloc%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66d53ca9e540eb564ab9ac3420a13ceac7a77a65/src%2Fliballoc_jemalloc%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc_jemalloc%2Fbuild.rs?ref=66d53ca9e540eb564ab9ac3420a13ceac7a77a65", "patch": "@@ -29,13 +29,20 @@ fn main() {\n     // for targets like emscripten, even if we don't use it.\n     let target = env::var(\"TARGET\").expect(\"TARGET was not set\");\n     let host = env::var(\"HOST\").expect(\"HOST was not set\");\n-    if target.contains(\"bitrig\") || target.contains(\"cloudabi\") || target.contains(\"emscripten\") ||\n-       target.contains(\"fuchsia\") || target.contains(\"msvc\") || target.contains(\"openbsd\") ||\n-       target.contains(\"redox\") || target.contains(\"rumprun\") || target.contains(\"wasm32\") {\n+    if target.contains(\"bitrig\") || target.contains(\"emscripten\") || target.contains(\"fuchsia\") ||\n+       target.contains(\"msvc\") || target.contains(\"openbsd\") || target.contains(\"redox\") ||\n+       target.contains(\"rumprun\") || target.contains(\"wasm32\") {\n         println!(\"cargo:rustc-cfg=dummy_jemalloc\");\n         return;\n     }\n \n+    // CloudABI ships with a copy of jemalloc that has been patched to\n+    // work well with sandboxing. Don't attempt to build our own copy,\n+    // as it won't build.\n+    if target.contains(\"cloudabi\") {\n+        return;\n+    }\n+\n     if target.contains(\"android\") {\n         println!(\"cargo:rustc-link-lib=gcc\");\n     } else if !target.contains(\"windows\") && !target.contains(\"musl\") {"}]}