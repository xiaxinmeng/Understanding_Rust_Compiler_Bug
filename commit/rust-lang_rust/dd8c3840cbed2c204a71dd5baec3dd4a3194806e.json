{"sha": "dd8c3840cbed2c204a71dd5baec3dd4a3194806e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkOGMzODQwY2JlZDJjMjA0YTcxZGQ1YmFlYzNkZDRhMzE5NDgwNmU=", "commit": {"author": {"name": "Roberto Vidal", "email": "vidal.roberto.j@gmail.com", "date": "2019-04-23T20:19:45Z"}, "committer": {"name": "Roberto Vidal", "email": "vidal.roberto.j@gmail.com", "date": "2019-04-23T20:19:45Z"}, "message": "CR corrections", "tree": {"sha": "9c0e138351303baa3aca006d53cf3d88bf5f5851", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c0e138351303baa3aca006d53cf3d88bf5f5851"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd8c3840cbed2c204a71dd5baec3dd4a3194806e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd8c3840cbed2c204a71dd5baec3dd4a3194806e", "html_url": "https://github.com/rust-lang/rust/commit/dd8c3840cbed2c204a71dd5baec3dd4a3194806e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd8c3840cbed2c204a71dd5baec3dd4a3194806e/comments", "author": {"login": "jrvidal", "id": 1636604, "node_id": "MDQ6VXNlcjE2MzY2MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1636604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrvidal", "html_url": "https://github.com/jrvidal", "followers_url": "https://api.github.com/users/jrvidal/followers", "following_url": "https://api.github.com/users/jrvidal/following{/other_user}", "gists_url": "https://api.github.com/users/jrvidal/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrvidal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrvidal/subscriptions", "organizations_url": "https://api.github.com/users/jrvidal/orgs", "repos_url": "https://api.github.com/users/jrvidal/repos", "events_url": "https://api.github.com/users/jrvidal/events{/privacy}", "received_events_url": "https://api.github.com/users/jrvidal/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jrvidal", "id": 1636604, "node_id": "MDQ6VXNlcjE2MzY2MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1636604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrvidal", "html_url": "https://github.com/jrvidal", "followers_url": "https://api.github.com/users/jrvidal/followers", "following_url": "https://api.github.com/users/jrvidal/following{/other_user}", "gists_url": "https://api.github.com/users/jrvidal/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrvidal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrvidal/subscriptions", "organizations_url": "https://api.github.com/users/jrvidal/orgs", "repos_url": "https://api.github.com/users/jrvidal/repos", "events_url": "https://api.github.com/users/jrvidal/events{/privacy}", "received_events_url": "https://api.github.com/users/jrvidal/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b56f0102014111e2e57f0df743626d69bab18081", "url": "https://api.github.com/repos/rust-lang/rust/commits/b56f0102014111e2e57f0df743626d69bab18081", "html_url": "https://github.com/rust-lang/rust/commit/b56f0102014111e2e57f0df743626d69bab18081"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "1dcff8beb3b55ac8e34d79a3151ac6304c977e27", "filename": "crates/ra_ide_api/src/symbol_index.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dd8c3840cbed2c204a71dd5baec3dd4a3194806e/crates%2Fra_ide_api%2Fsrc%2Fsymbol_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd8c3840cbed2c204a71dd5baec3dd4a3194806e/crates%2Fra_ide_api%2Fsrc%2Fsymbol_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fsymbol_index.rs?ref=dd8c3840cbed2c204a71dd5baec3dd4a3194806e", "patch": "@@ -136,7 +136,7 @@ impl Hash for SymbolIndex {\n \n impl SymbolIndex {\n     fn new(mut symbols: Vec<FileSymbol>) -> SymbolIndex {\n-        fn cmp_key<'a>(s1: &'a FileSymbol) -> impl Ord + Eq + 'a {\n+        fn cmp_key<'a>(s1: &'a FileSymbol) -> impl Ord + 'a {\n             unicase::Ascii::new(s1.name.as_str())\n         }\n \n@@ -186,7 +186,7 @@ impl SymbolIndex {\n         debug_assert![start <= (std::u32::MAX as usize)];\n         debug_assert![end <= (std::u32::MAX as usize)];\n \n-        ((start as u64) << 32) + end as u64\n+        ((start as u64) << 32) | end as u64\n     }\n \n     fn map_value_to_range(value: u64) -> (usize, usize) {"}]}