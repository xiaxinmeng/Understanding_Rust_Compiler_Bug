{"sha": "60f1944ebf29d738d870df86ee46c92cb3f09448", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwZjE5NDRlYmYyOWQ3MzhkODcwZGY4NmVlNDZjOTJjYjNmMDk0NDg=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-05-03T19:45:36Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-05-04T02:10:46Z"}, "message": "rustc: rename DefPathData::{MacroDef,LifetimeParam} to {Macro,Lifetime}Ns.", "tree": {"sha": "a623c3444a9e22d72a129293efa591f4486e6ac8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a623c3444a9e22d72a129293efa591f4486e6ac8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60f1944ebf29d738d870df86ee46c92cb3f09448", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60f1944ebf29d738d870df86ee46c92cb3f09448", "html_url": "https://github.com/rust-lang/rust/commit/60f1944ebf29d738d870df86ee46c92cb3f09448", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60f1944ebf29d738d870df86ee46c92cb3f09448/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2efeb485a99dc3a769f21f111310a6541b21d8b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/2efeb485a99dc3a769f21f111310a6541b21d8b2", "html_url": "https://github.com/rust-lang/rust/commit/2efeb485a99dc3a769f21f111310a6541b21d8b2"}], "stats": {"total": 40, "additions": 22, "deletions": 18}, "files": [{"sha": "0ac9429de1392496cbb7e512a02dd03299422623", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60f1944ebf29d738d870df86ee46c92cb3f09448/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60f1944ebf29d738d870df86ee46c92cb3f09448/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=60f1944ebf29d738d870df86ee46c92cb3f09448", "patch": "@@ -952,7 +952,7 @@ impl<'a> LoweringContext<'a> {\n         self.resolver.definitions().create_def_with_parent(\n             parent_index,\n             node_id,\n-            DefPathData::LifetimeParam(str_name),\n+            DefPathData::LifetimeNs(str_name),\n             DefIndexAddressSpace::High,\n             Mark::root(),\n             span,\n@@ -1749,7 +1749,7 @@ impl<'a> LoweringContext<'a> {\n                     self.context.resolver.definitions().create_def_with_parent(\n                         self.parent,\n                         def_node_id,\n-                        DefPathData::LifetimeParam(name.ident().as_interned_str()),\n+                        DefPathData::LifetimeNs(name.ident().as_interned_str()),\n                         DefIndexAddressSpace::High,\n                         Mark::root(),\n                         lifetime.span,"}, {"sha": "fadd29d3d0c6c47526c17a90f4817eea1e71a59b", "filename": "src/librustc/hir/map/def_collector.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/60f1944ebf29d738d870df86ee46c92cb3f09448/src%2Flibrustc%2Fhir%2Fmap%2Fdef_collector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60f1944ebf29d738d870df86ee46c92cb3f09448/src%2Flibrustc%2Fhir%2Fmap%2Fdef_collector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fdef_collector.rs?ref=60f1944ebf29d738d870df86ee46c92cb3f09448", "patch": "@@ -164,7 +164,7 @@ impl<'a> visit::Visitor<'a> for DefCollector<'a> {\n             }\n             ItemKind::Static(..) | ItemKind::Const(..) | ItemKind::Fn(..) =>\n                 DefPathData::ValueNs(i.ident.as_interned_str()),\n-            ItemKind::MacroDef(..) => DefPathData::MacroDef(i.ident.as_interned_str()),\n+            ItemKind::MacroDef(..) => DefPathData::MacroNs(i.ident.as_interned_str()),\n             ItemKind::Mac(..) => return self.visit_macro_invoc(i.id),\n             ItemKind::GlobalAsm(..) => DefPathData::Misc,\n             ItemKind::Use(..) => {\n@@ -236,7 +236,7 @@ impl<'a> visit::Visitor<'a> for DefCollector<'a> {\n     fn visit_generic_param(&mut self, param: &'a GenericParam) {\n         let name = param.ident.as_interned_str();\n         let def_path_data = match param.kind {\n-            GenericParamKind::Lifetime { .. } => DefPathData::LifetimeParam(name),\n+            GenericParamKind::Lifetime { .. } => DefPathData::LifetimeNs(name),\n             GenericParamKind::Type { .. } => DefPathData::TypeNs(name),\n             GenericParamKind::Const { .. } => DefPathData::ValueNs(name),\n         };"}, {"sha": "fc9d6d86500ba36808299b96083d6c091843d651", "filename": "src/librustc/hir/map/definitions.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/60f1944ebf29d738d870df86ee46c92cb3f09448/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60f1944ebf29d738d870df86ee46c92cb3f09448/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs?ref=60f1944ebf29d738d870df86ee46c92cb3f09448", "patch": "@@ -341,13 +341,13 @@ pub enum DefPathData {\n     TypeNs(InternedString),\n     /// Something in the value NS\n     ValueNs(InternedString),\n-    /// A macro rule\n-    MacroDef(InternedString),\n+    /// Something in the macro NS\n+    MacroNs(InternedString),\n+    /// Something in the lifetime NS\n+    LifetimeNs(InternedString),\n     /// A closure expression\n     ClosureExpr,\n     // Subportions of items\n-    /// A lifetime (generic) parameter\n-    LifetimeParam(InternedString),\n     /// Implicit ctor for a unit or tuple-like struct or enum variant.\n     Ctor,\n     /// A constant expression (see {ast,hir}::AnonConst).\n@@ -614,8 +614,8 @@ impl DefPathData {\n         match *self {\n             TypeNs(name) |\n             ValueNs(name) |\n-            MacroDef(name) |\n-            LifetimeParam(name) |\n+            MacroNs(name) |\n+            LifetimeNs(name) |\n             GlobalMetaData(name) => Some(name),\n \n             Impl |\n@@ -633,8 +633,8 @@ impl DefPathData {\n         let s = match *self {\n             TypeNs(name) |\n             ValueNs(name) |\n-            MacroDef(name) |\n-            LifetimeParam(name) |\n+            MacroNs(name) |\n+            LifetimeNs(name) |\n             GlobalMetaData(name) => {\n                 return name\n             }"}, {"sha": "e09dcd16bd3dc65e8277b72f3728422c1cf2cbf3", "filename": "src/librustc/ty/print/pretty.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/60f1944ebf29d738d870df86ee46c92cb3f09448/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60f1944ebf29d738d870df86ee46c92cb3f09448/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs?ref=60f1944ebf29d738d870df86ee46c92cb3f09448", "patch": "@@ -858,12 +858,16 @@ impl TyCtxt<'_, '_, '_> {\n     // (but also some things just print a `DefId` generally so maybe we need this?)\n     fn guess_def_namespace(self, def_id: DefId) -> Namespace {\n         match self.def_key(def_id).disambiguated_data.data {\n-            DefPathData::ValueNs(..) |\n-            DefPathData::AnonConst |\n-            DefPathData::ClosureExpr |\n-            DefPathData::Ctor => Namespace::ValueNS,\n+            DefPathData::TypeNs(..)\n+            | DefPathData::CrateRoot\n+            | DefPathData::ImplTrait => Namespace::TypeNS,\n \n-            DefPathData::MacroDef(..) => Namespace::MacroNS,\n+            DefPathData::ValueNs(..)\n+            | DefPathData::AnonConst\n+            | DefPathData::ClosureExpr\n+            | DefPathData::Ctor => Namespace::ValueNS,\n+\n+            DefPathData::MacroNs(..) => Namespace::MacroNS,\n \n             _ => Namespace::TypeNS,\n         }"}, {"sha": "048acf56ea7a777bc2cdf4d39fcda0fad0807395", "filename": "src/librustc_metadata/decoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/60f1944ebf29d738d870df86ee46c92cb3f09448/src%2Flibrustc_metadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60f1944ebf29d738d870df86ee46c92cb3f09448/src%2Flibrustc_metadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fdecoder.rs?ref=60f1944ebf29d738d870df86ee46c92cb3f09448", "patch": "@@ -459,7 +459,7 @@ crate fn proc_macro_def_path_table(crate_root: &CrateRoot,\n         let def_index = definitions.create_def_with_parent(\n             crate_root,\n             ast::DUMMY_NODE_ID,\n-            DefPathData::MacroDef(name.as_interned_str()),\n+            DefPathData::MacroNs(name.as_interned_str()),\n             DefIndexAddressSpace::High,\n             Mark::root(),\n             DUMMY_SP);"}]}