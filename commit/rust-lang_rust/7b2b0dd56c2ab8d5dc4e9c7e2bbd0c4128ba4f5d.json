{"sha": "7b2b0dd56c2ab8d5dc4e9c7e2bbd0c4128ba4f5d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiMmIwZGQ1NmMyYWI4ZDVkYzRlOWM3ZTJiYmQwYzQxMjhiYTRmNWQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-06-22T06:09:34Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-06-22T06:09:34Z"}, "message": "test HashMap creation in libstd-MIR, and make it work again", "tree": {"sha": "403019c467a5d995af34ad89151d093f481004d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/403019c467a5d995af34ad89151d093f481004d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b2b0dd56c2ab8d5dc4e9c7e2bbd0c4128ba4f5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b2b0dd56c2ab8d5dc4e9c7e2bbd0c4128ba4f5d", "html_url": "https://github.com/rust-lang/rust/commit/7b2b0dd56c2ab8d5dc4e9c7e2bbd0c4128ba4f5d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b2b0dd56c2ab8d5dc4e9c7e2bbd0c4128ba4f5d/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "894306e47d1bf5d7c4328d762e0e2c94dbeea2fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/894306e47d1bf5d7c4328d762e0e2c94dbeea2fe", "html_url": "https://github.com/rust-lang/rust/commit/894306e47d1bf5d7c4328d762e0e2c94dbeea2fe"}], "stats": {"total": 7, "additions": 2, "deletions": 5}, "files": [{"sha": "8ede9fa7559b9c9c3c60008f75d48187bbcdc688", "filename": "src/terminator/intrinsic.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7b2b0dd56c2ab8d5dc4e9c7e2bbd0c4128ba4f5d/src%2Fterminator%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b2b0dd56c2ab8d5dc4e9c7e2bbd0c4128ba4f5d/src%2Fterminator%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fterminator%2Fintrinsic.rs?ref=7b2b0dd56c2ab8d5dc4e9c7e2bbd0c4128ba4f5d", "patch": "@@ -424,9 +424,10 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                 let ty_align = self.type_align(ty)?;\n                 let val_byte = self.value_to_primval(arg_vals[1], u8)?.to_u128()? as u8;\n                 let size = self.type_size(ty)?.expect(\"write_bytes() type must be sized\");\n-                let ptr = arg_vals[0].read_ptr(&self.memory)?.to_ptr()?;\n+                let ptr = arg_vals[0].read_ptr(&self.memory)?;\n                 let count = self.value_to_primval(arg_vals[2], usize)?.to_u64()?;\n                 if count > 0 {\n+                    let ptr = ptr.to_ptr()?;\n                     self.memory.check_align(ptr, ty_align, size * count)?;\n                     self.memory.write_repeat(ptr, val_byte, size * count)?;\n                 }"}, {"sha": "c0c396240733a5250ebaaeb00bcefe4bbfb0445f", "filename": "tests/run-pass-fullmir/hashmap.rs", "status": "renamed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7b2b0dd56c2ab8d5dc4e9c7e2bbd0c4128ba4f5d/tests%2Frun-pass-fullmir%2Fhashmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b2b0dd56c2ab8d5dc4e9c7e2bbd0c4128ba4f5d/tests%2Frun-pass-fullmir%2Fhashmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass-fullmir%2Fhashmap.rs?ref=7b2b0dd56c2ab8d5dc4e9c7e2bbd0c4128ba4f5d", "patch": "@@ -1,10 +1,6 @@\n use std::collections::{self, HashMap};\n use std::hash::BuildHasherDefault;\n \n-// This disables the test completely:\n-// ignore-stage1\n-// TODO: The tests actually passes against rustc and miri with MIR-libstd, but right now, we cannot express that in the test flags\n-\n fn main() {\n     let map : HashMap<String, i32, BuildHasherDefault<collections::hash_map::DefaultHasher>> = Default::default();\n     assert_eq!(map.values().fold(0, |x, y| x+y), 0);", "previous_filename": "tests/run-pass/hashmap.rs"}]}