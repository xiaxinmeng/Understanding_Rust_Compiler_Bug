{"sha": "b3bd547dda70d2e1574a6896deb84c85866adf76", "node_id": "C_kwDOAAsO6NoAKGIzYmQ1NDdkZGE3MGQyZTE1NzRhNjg5NmRlYjg0Yzg1ODY2YWRmNzY", "commit": {"author": {"name": "Ole Strohm", "email": "strohm99@gmail.com", "date": "2022-03-22T11:10:48Z"}, "committer": {"name": "Ole Strohm", "email": "strohm99@gmail.com", "date": "2022-03-22T11:10:48Z"}, "message": "applied rustfmt", "tree": {"sha": "56c1a3f1ea9738a58e40ec1c1628a1eee2fe9fd3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/56c1a3f1ea9738a58e40ec1c1628a1eee2fe9fd3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3bd547dda70d2e1574a6896deb84c85866adf76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3bd547dda70d2e1574a6896deb84c85866adf76", "html_url": "https://github.com/rust-lang/rust/commit/b3bd547dda70d2e1574a6896deb84c85866adf76", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3bd547dda70d2e1574a6896deb84c85866adf76/comments", "author": {"login": "OleStrohm", "id": 6892524, "node_id": "MDQ6VXNlcjY4OTI1MjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6892524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OleStrohm", "html_url": "https://github.com/OleStrohm", "followers_url": "https://api.github.com/users/OleStrohm/followers", "following_url": "https://api.github.com/users/OleStrohm/following{/other_user}", "gists_url": "https://api.github.com/users/OleStrohm/gists{/gist_id}", "starred_url": "https://api.github.com/users/OleStrohm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OleStrohm/subscriptions", "organizations_url": "https://api.github.com/users/OleStrohm/orgs", "repos_url": "https://api.github.com/users/OleStrohm/repos", "events_url": "https://api.github.com/users/OleStrohm/events{/privacy}", "received_events_url": "https://api.github.com/users/OleStrohm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "OleStrohm", "id": 6892524, "node_id": "MDQ6VXNlcjY4OTI1MjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6892524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OleStrohm", "html_url": "https://github.com/OleStrohm", "followers_url": "https://api.github.com/users/OleStrohm/followers", "following_url": "https://api.github.com/users/OleStrohm/following{/other_user}", "gists_url": "https://api.github.com/users/OleStrohm/gists{/gist_id}", "starred_url": "https://api.github.com/users/OleStrohm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OleStrohm/subscriptions", "organizations_url": "https://api.github.com/users/OleStrohm/orgs", "repos_url": "https://api.github.com/users/OleStrohm/repos", "events_url": "https://api.github.com/users/OleStrohm/events{/privacy}", "received_events_url": "https://api.github.com/users/OleStrohm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94113b0ac6a9a8c0dfabe94f8be57c7c7d7cd513", "url": "https://api.github.com/repos/rust-lang/rust/commits/94113b0ac6a9a8c0dfabe94f8be57c7c7d7cd513", "html_url": "https://github.com/rust-lang/rust/commit/94113b0ac6a9a8c0dfabe94f8be57c7c7d7cd513"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "0dc67ede36e7a20841c90a734041a5812da65b7e", "filename": "crates/ide_assists/src/handlers/add_missing_match_arms.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b3bd547dda70d2e1574a6896deb84c85866adf76/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fadd_missing_match_arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3bd547dda70d2e1574a6896deb84c85866adf76/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fadd_missing_match_arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fadd_missing_match_arms.rs?ref=b3bd547dda70d2e1574a6896deb84c85866adf76", "patch": "@@ -303,7 +303,9 @@ fn lift_enum(e: hir::Enum) -> ExtendedEnum {\n impl ExtendedEnum {\n     fn is_non_exhaustive(self, db: &RootDatabase, krate: Crate) -> bool {\n         match self {\n-            ExtendedEnum::Enum(e) => e.attrs(db).by_key(\"non_exhaustive\").exists() && e.module(db).krate() != krate,\n+            ExtendedEnum::Enum(e) => {\n+                e.attrs(db).by_key(\"non_exhaustive\").exists() && e.module(db).krate() != krate\n+            }\n             _ => false,\n         }\n     }"}]}