{"sha": "22c27385734808a69c5520a8417dd3e45f01b536", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyYzI3Mzg1NzM0ODA4YTY5YzU1MjBhODQxN2RkM2U0NWYwMWI1MzY=", "commit": {"author": {"name": "Ethan Brierley", "email": "ethanboxx@gmail.com", "date": "2021-09-04T14:47:00Z"}, "committer": {"name": "Ethan Brierley", "email": "ethanboxx@gmail.com", "date": "2021-09-04T14:47:00Z"}, "message": "Minor cleanup: make imports more consistent", "tree": {"sha": "4a33ccf061245a1e7da2ce3319d4c071955521d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a33ccf061245a1e7da2ce3319d4c071955521d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/22c27385734808a69c5520a8417dd3e45f01b536", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/22c27385734808a69c5520a8417dd3e45f01b536", "html_url": "https://github.com/rust-lang/rust/commit/22c27385734808a69c5520a8417dd3e45f01b536", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/22c27385734808a69c5520a8417dd3e45f01b536/comments", "author": {"login": "eopb", "id": 8074468, "node_id": "MDQ6VXNlcjgwNzQ0Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/8074468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eopb", "html_url": "https://github.com/eopb", "followers_url": "https://api.github.com/users/eopb/followers", "following_url": "https://api.github.com/users/eopb/following{/other_user}", "gists_url": "https://api.github.com/users/eopb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eopb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eopb/subscriptions", "organizations_url": "https://api.github.com/users/eopb/orgs", "repos_url": "https://api.github.com/users/eopb/repos", "events_url": "https://api.github.com/users/eopb/events{/privacy}", "received_events_url": "https://api.github.com/users/eopb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eopb", "id": 8074468, "node_id": "MDQ6VXNlcjgwNzQ0Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/8074468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eopb", "html_url": "https://github.com/eopb", "followers_url": "https://api.github.com/users/eopb/followers", "following_url": "https://api.github.com/users/eopb/following{/other_user}", "gists_url": "https://api.github.com/users/eopb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eopb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eopb/subscriptions", "organizations_url": "https://api.github.com/users/eopb/orgs", "repos_url": "https://api.github.com/users/eopb/repos", "events_url": "https://api.github.com/users/eopb/events{/privacy}", "received_events_url": "https://api.github.com/users/eopb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85d6029c136f155a2b994be8ef7b2ed0876428bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/85d6029c136f155a2b994be8ef7b2ed0876428bf", "html_url": "https://github.com/rust-lang/rust/commit/85d6029c136f155a2b994be8ef7b2ed0876428bf"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "5f7a9a17e03aaa7bafb4fc43c66c84d163ee0440", "filename": "compiler/rustc_trait_selection/src/traits/const_evaluatable.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/22c27385734808a69c5520a8417dd3e45f01b536/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22c27385734808a69c5520a8417dd3e45f01b536/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs?ref=22c27385734808a69c5520a8417dd3e45f01b536", "patch": "@@ -8,7 +8,6 @@\n //! In this case we try to build an abstract representation of this constant using\n //! `mir_abstract_const` which can then be checked for structural equality with other\n //! generic constants mentioned in the `caller_bounds` of the current environment.\n-use crate::traits::ty::subst::GenericArg;\n use rustc_errors::ErrorReported;\n use rustc_hir::def::DefKind;\n use rustc_index::bit_set::BitSet;\n@@ -17,7 +16,7 @@ use rustc_infer::infer::InferCtxt;\n use rustc_middle::mir::abstract_const::{Node, NodeId, NotConstEvaluatable};\n use rustc_middle::mir::interpret::ErrorHandled;\n use rustc_middle::mir::{self, Rvalue, StatementKind, TerminatorKind};\n-use rustc_middle::ty::subst::{Subst, SubstsRef};\n+use rustc_middle::ty::subst::{GenericArg, Subst, SubstsRef};\n use rustc_middle::ty::{self, TyCtxt, TypeFoldable};\n use rustc_session::lint;\n use rustc_span::def_id::LocalDefId;"}]}