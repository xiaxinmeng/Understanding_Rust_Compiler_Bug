{"sha": "675bfb6d169f29ffc3b0eadeab81901a32b79e73", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3NWJmYjZkMTY5ZjI5ZmZjM2IwZWFkZWFiODE5MDFhMzJiNzllNzM=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2019-07-02T06:45:56Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2019-07-04T10:53:12Z"}, "message": "fix a dep_graph doc regarding type_of_item", "tree": {"sha": "9fc3e3c9ebad5e66000b795792af8c4573802aa3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9fc3e3c9ebad5e66000b795792af8c4573802aa3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/675bfb6d169f29ffc3b0eadeab81901a32b79e73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/675bfb6d169f29ffc3b0eadeab81901a32b79e73", "html_url": "https://github.com/rust-lang/rust/commit/675bfb6d169f29ffc3b0eadeab81901a32b79e73", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/675bfb6d169f29ffc3b0eadeab81901a32b79e73/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01e0d83336d58f4fb1a25552ebd77226619b8137", "url": "https://api.github.com/repos/rust-lang/rust/commits/01e0d83336d58f4fb1a25552ebd77226619b8137", "html_url": "https://github.com/rust-lang/rust/commit/01e0d83336d58f4fb1a25552ebd77226619b8137"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "ee22d0b755a097565df5b53cc4db22c2e5da4922", "filename": "src/librustc/dep_graph/dep_tracking_map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/675bfb6d169f29ffc3b0eadeab81901a32b79e73/src%2Flibrustc%2Fdep_graph%2Fdep_tracking_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/675bfb6d169f29ffc3b0eadeab81901a32b79e73/src%2Flibrustc%2Fdep_graph%2Fdep_tracking_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fdep_tracking_map.rs?ref=675bfb6d169f29ffc3b0eadeab81901a32b79e73", "patch": "@@ -55,7 +55,7 @@ impl<M: DepTrackingMapConfig> MemoizationMap for RefCell<DepTrackingMap<M>> {\n     ///\n     /// ```\n     /// fn type_of_item(..., item: &hir::Item) -> Ty<'tcx> {\n-    ///     let item_def_id = ccx.tcx.hir().local_def_id_from_node_id(it.id);\n+    ///     let item_def_id = ccx.tcx.hir().local_def_id(it.hir_id);\n     ///     ccx.tcx.item_types.memoized(item_def_id, || {\n     ///         ccx.tcx.dep_graph.read(DepNode::Hir(item_def_id)); // (*)\n     ///         compute_type_of_item(ccx, item)"}]}