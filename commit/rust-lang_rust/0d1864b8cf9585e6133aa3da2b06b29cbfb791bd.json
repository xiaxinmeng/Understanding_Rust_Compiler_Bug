{"sha": "0d1864b8cf9585e6133aa3da2b06b29cbfb791bd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkMTg2NGI4Y2Y5NTg1ZTYxMzNhYTNkYTJiMDZiMjljYmZiNzkxYmQ=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2017-07-17T12:52:36Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2017-07-22T18:38:40Z"}, "message": "Remove unnecessary unsafe in test/ui/print_type_sizes/nullable.rs", "tree": {"sha": "76c57c5c607af84893eceb729fedfe33fe8dca42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76c57c5c607af84893eceb729fedfe33fe8dca42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d1864b8cf9585e6133aa3da2b06b29cbfb791bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d1864b8cf9585e6133aa3da2b06b29cbfb791bd", "html_url": "https://github.com/rust-lang/rust/commit/0d1864b8cf9585e6133aa3da2b06b29cbfb791bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d1864b8cf9585e6133aa3da2b06b29cbfb791bd/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff7f220a431e1405a791d865f84e98143fd8af0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff7f220a431e1405a791d865f84e98143fd8af0e", "html_url": "https://github.com/rust-lang/rust/commit/ff7f220a431e1405a791d865f84e98143fd8af0e"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "5052c59a39dcfcfa2989e48f0b11fff0279bad88", "filename": "src/test/ui/print_type_sizes/nullable.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0d1864b8cf9585e6133aa3da2b06b29cbfb791bd/src%2Ftest%2Fui%2Fprint_type_sizes%2Fnullable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d1864b8cf9585e6133aa3da2b06b29cbfb791bd/src%2Ftest%2Fui%2Fprint_type_sizes%2Fnullable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprint_type_sizes%2Fnullable.rs?ref=0d1864b8cf9585e6133aa3da2b06b29cbfb791bd", "patch": "@@ -56,9 +56,7 @@ pub struct NestedNonZero<T: Zeroable> {\n \n impl<T: Zeroable+One> Default for NestedNonZero<T> {\n     fn default() -> Self {\n-        unsafe {\n-            NestedNonZero { pre: 0, val: NonZero::new_unchecked(T::one()), post: 0 }\n-        }\n+        NestedNonZero { pre: 0, val: NonZero::new(T::one()).unwrap(), post: 0 }\n     }\n }\n "}]}