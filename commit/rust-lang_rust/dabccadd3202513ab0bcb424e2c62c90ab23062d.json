{"sha": "dabccadd3202513ab0bcb424e2c62c90ab23062d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhYmNjYWRkMzIwMjUxM2FiMGJjYjQyNGUyYzYyYzkwYWIyMzA2MmQ=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-02-25T23:00:05Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-02-25T23:43:50Z"}, "message": "Update manual to define identifiers using UAX 31 XID_Start / XID_Continue.", "tree": {"sha": "022782b600f4140ecdca82cf9132e18b77d0eece", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/022782b600f4140ecdca82cf9132e18b77d0eece"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dabccadd3202513ab0bcb424e2c62c90ab23062d", "comment_count": 2, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dabccadd3202513ab0bcb424e2c62c90ab23062d", "html_url": "https://github.com/rust-lang/rust/commit/dabccadd3202513ab0bcb424e2c62c90ab23062d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dabccadd3202513ab0bcb424e2c62c90ab23062d/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69464aae62aef5a65fcf5bb79ab18f8967f32206", "url": "https://api.github.com/repos/rust-lang/rust/commits/69464aae62aef5a65fcf5bb79ab18f8967f32206", "html_url": "https://github.com/rust-lang/rust/commit/69464aae62aef5a65fcf5bb79ab18f8967f32206"}], "stats": {"total": 32, "additions": 19, "deletions": 13}, "files": [{"sha": "740d45c66583dcfb33f25db4386f7517d54194c1", "filename": "doc/rust.texi", "status": "modified", "additions": 19, "deletions": 13, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/dabccadd3202513ab0bcb424e2c62c90ab23062d/doc%2Frust.texi", "raw_url": "https://github.com/rust-lang/rust/raw/dabccadd3202513ab0bcb424e2c62c90ab23062d/doc%2Frust.texi", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.texi?ref=dabccadd3202513ab0bcb424e2c62c90ab23062d", "patch": "@@ -592,10 +592,12 @@ or interrupted by ignored characters.\n \n Most tokens in Rust follow rules similar to the C family.\n \n-Most tokens (including identifiers, whitespace, keywords, operators and\n-structural symbols) are drawn from the ASCII-compatible range of\n-Unicode. String and character literals, however, may include the full range of\n-Unicode characters.\n+Most tokens (including whitespace, keywords, operators and structural symbols)\n+are drawn from the ASCII-compatible range of Unicode. Identifiers are drawn\n+from Unicode characters specified by the @code{XID_start} and\n+@code{XID_continue} rules given by UAX #31@footnote{Unicode Standard Annex\n+#31: Unicode Identifier and Pattern Syntax}. String and character literals may\n+include the full range of Unicode characters.\n \n @emph{TODO: formalize this section much more}.\n \n@@ -638,18 +640,22 @@ token or a syntactic extension token.  Multi-line comments may be nested.\n @c * Ref.Lex.Ident::             Identifier tokens.\n @cindex Identifier token\n \n-Identifiers follow the pattern of C identifiers: they begin with a\n-@emph{letter} or @emph{underscore}, and continue with any combination of\n-@emph{letters}, @emph{decimal digits} and underscores, and must not be equal\n-to any keyword or reserved token. @xref{Ref.Lex.Key}. @xref{Ref.Lex.Res}.\n+Identifiers follow the rules given by Unicode Standard Annex #31, in the form\n+closed under NFKC normalization, @emph{excluding} those tokens that are\n+otherwise defined as keywords or reserved\n+tokens. @xref{Ref.Lex.Key}. @xref{Ref.Lex.Res}.\n \n-A @emph{letter} is a Unicode character in the ranges U+0061-U+007A and\n-U+0041-U+005A (@code{'a'}-@code{'z'} and @code{'A'}-@code{'Z'}).\n+That is: an identifier starts with any character having derived property\n+@code{XID_Start} and continues with zero or more characters having derived\n+property @code{XID_Continue}; and such an identifier is NFKC-normalized during\n+lexing, such that all subsequent comparison of identifiers is performed on the\n+NFKC-normalized forms.\n \n-An @dfn{underscore} is the character U+005F ('_').\n+@emph{TODO: define relationship between Unicode and Rust versions}.\n \n-A @dfn{decimal digit} is a character in the range U+0030-U+0039\n-(@code{'0'}-@code{'9'}).\n+@footnote{This identifier syntax is a superset of the identifier syntaxes of C\n+and Java, and is modeled on Python PEP #3131, which formed the definition of\n+identifiers in Python 3.0 and later.}\n \n @node       Ref.Lex.Key\n @subsection Ref.Lex.Key"}]}