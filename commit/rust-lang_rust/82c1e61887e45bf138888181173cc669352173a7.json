{"sha": "82c1e61887e45bf138888181173cc669352173a7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyYzFlNjE4ODdlNDViZjEzODg4ODE4MTE3M2NjNjY5MzUyMTczYTc=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-07-30T13:51:07Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-07-30T14:01:26Z"}, "message": "Fix assists assuming comma belonging to MATCH_ARM_LIST", "tree": {"sha": "ae73c34606c60ea321094ee8d43e3f9f98360e5f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae73c34606c60ea321094ee8d43e3f9f98360e5f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/82c1e61887e45bf138888181173cc669352173a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/82c1e61887e45bf138888181173cc669352173a7", "html_url": "https://github.com/rust-lang/rust/commit/82c1e61887e45bf138888181173cc669352173a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/82c1e61887e45bf138888181173cc669352173a7/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f04cff102f2748f8b51e25cf1c28a6097fee1592", "url": "https://api.github.com/repos/rust-lang/rust/commits/f04cff102f2748f8b51e25cf1c28a6097fee1592", "html_url": "https://github.com/rust-lang/rust/commit/f04cff102f2748f8b51e25cf1c28a6097fee1592"}], "stats": {"total": 22, "additions": 9, "deletions": 13}, "files": [{"sha": "0ebc5d267c66ad19173afe270552836af2985041", "filename": "crates/ide_assists/src/handlers/merge_match_arms.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/82c1e61887e45bf138888181173cc669352173a7/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmerge_match_arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82c1e61887e45bf138888181173cc669352173a7/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmerge_match_arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmerge_match_arms.rs?ref=82c1e61887e45bf138888181173cc669352173a7", "patch": "@@ -72,7 +72,7 @@ pub(crate) fn merge_match_arms(acc: &mut Assists, ctx: &AssistContext) -> Option\n                     .join(\" | \")\n             };\n \n-            let arm = format!(\"{} => {}\", pats, current_expr.syntax().text());\n+            let arm = format!(\"{} => {},\", pats, current_expr.syntax().text());\n \n             if let [first, .., last] = &*arms_to_merge {\n                 let start = first.syntax().text_range().start();\n@@ -118,7 +118,7 @@ enum X { A, B, C }\n fn main() {\n     let x = X::A;\n     let y = match x {\n-        X::A | X::B => { 1i32 }\n+        X::A | X::B => { 1i32 },\n         X::C => { 2i32 }\n     }\n }\n@@ -183,7 +183,7 @@ fn main() {\n     let x = X::A;\n     let y = match x {\n         X::A => { 1i32 },\n-        _ => { 2i32 }\n+        _ => { 2i32 },\n     }\n }\n \"#,"}, {"sha": "b6a7aee59e4f872d0e834d59becaa24e6908a78f", "filename": "crates/ide_diagnostics/src/handlers/inactive_code.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/82c1e61887e45bf138888181173cc669352173a7/crates%2Fide_diagnostics%2Fsrc%2Fhandlers%2Finactive_code.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82c1e61887e45bf138888181173cc669352173a7/crates%2Fide_diagnostics%2Fsrc%2Fhandlers%2Finactive_code.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_diagnostics%2Fsrc%2Fhandlers%2Finactive_code.rs?ref=82c1e61887e45bf138888181173cc669352173a7", "patch": "@@ -64,7 +64,7 @@ fn f() {\n     match () {\n         () => (),\n         #[cfg(a)] () => (),\n-      //^^^^^^^^^^^^^^^^^^ weak: code is inactive due to #[cfg] directives: a is disabled\n+      //^^^^^^^^^^^^^^^^^^^ weak: code is inactive due to #[cfg] directives: a is disabled\n     }\n \n     #[cfg(a)] 0          // Trailing expression of block"}, {"sha": "e9280ab45cc1ca0864792c77b3ea92a484cfb3c7", "filename": "crates/syntax/src/ast/edit_in_place.rs", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/82c1e61887e45bf138888181173cc669352173a7/crates%2Fsyntax%2Fsrc%2Fast%2Fedit_in_place.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82c1e61887e45bf138888181173cc669352173a7/crates%2Fsyntax%2Fsrc%2Fast%2Fedit_in_place.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Fedit_in_place.rs?ref=82c1e61887e45bf138888181173cc669352173a7", "patch": "@@ -359,14 +359,10 @@ impl ast::MatchArmList {\n         let mut elements = Vec::new();\n         let position = match self.arms().last() {\n             Some(last_arm) => {\n-                let comma = last_arm\n-                    .syntax()\n-                    .siblings_with_tokens(Direction::Next)\n-                    .find(|it| it.kind() == T![,]);\n-                if needs_comma(&last_arm) && comma.is_none() {\n-                    elements.push(make::token(SyntaxKind::COMMA).into());\n+                if needs_comma(&last_arm) {\n+                    ted::append_child(last_arm.syntax(), make::token(SyntaxKind::COMMA));\n                 }\n-                Position::after(comma.unwrap_or_else(|| last_arm.syntax().clone().into()))\n+                Position::after(last_arm.syntax().clone())\n             }\n             None => match self.l_curly_token() {\n                 Some(it) => Position::after(it),\n@@ -377,12 +373,12 @@ impl ast::MatchArmList {\n         elements.push(make::tokens::whitespace(&format!(\"\\n{}\", indent)).into());\n         elements.push(arm.syntax().clone().into());\n         if needs_comma(&arm) {\n-            elements.push(make::token(SyntaxKind::COMMA).into());\n+            ted::append_child(arm.syntax(), make::token(SyntaxKind::COMMA));\n         }\n         ted::insert_all(position, elements);\n \n         fn needs_comma(arm: &ast::MatchArm) -> bool {\n-            arm.expr().map_or(false, |e| !e.is_block_like())\n+            arm.expr().map_or(false, |e| !e.is_block_like()) && arm.comma_token().is_none()\n         }\n     }\n }"}]}