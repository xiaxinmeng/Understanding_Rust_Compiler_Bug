{"sha": "22404e1f473e72e88ceaca7e7b8ae6a19f6f3e8b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyNDA0ZTFmNDczZTcyZTg4Y2VhY2E3ZTdiOGFlNmExOWY2ZjNlOGI=", "commit": {"author": {"name": "Martin Pool", "email": "mbp@sourcefrog.net", "date": "2015-10-07T02:29:27Z"}, "committer": {"name": "Martin Pool", "email": "mbp@sourcefrog.net", "date": "2015-10-07T02:29:27Z"}, "message": "Link from Fuse type docstring to iter.fuse that creates them", "tree": {"sha": "249d398a34c6b97120d3ee041fba7e9dd21721b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/249d398a34c6b97120d3ee041fba7e9dd21721b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/22404e1f473e72e88ceaca7e7b8ae6a19f6f3e8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/22404e1f473e72e88ceaca7e7b8ae6a19f6f3e8b", "html_url": "https://github.com/rust-lang/rust/commit/22404e1f473e72e88ceaca7e7b8ae6a19f6f3e8b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/22404e1f473e72e88ceaca7e7b8ae6a19f6f3e8b/comments", "author": {"login": "sourcefrog", "id": 346355, "node_id": "MDQ6VXNlcjM0NjM1NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/346355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sourcefrog", "html_url": "https://github.com/sourcefrog", "followers_url": "https://api.github.com/users/sourcefrog/followers", "following_url": "https://api.github.com/users/sourcefrog/following{/other_user}", "gists_url": "https://api.github.com/users/sourcefrog/gists{/gist_id}", "starred_url": "https://api.github.com/users/sourcefrog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sourcefrog/subscriptions", "organizations_url": "https://api.github.com/users/sourcefrog/orgs", "repos_url": "https://api.github.com/users/sourcefrog/repos", "events_url": "https://api.github.com/users/sourcefrog/events{/privacy}", "received_events_url": "https://api.github.com/users/sourcefrog/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sourcefrog", "id": 346355, "node_id": "MDQ6VXNlcjM0NjM1NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/346355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sourcefrog", "html_url": "https://github.com/sourcefrog", "followers_url": "https://api.github.com/users/sourcefrog/followers", "following_url": "https://api.github.com/users/sourcefrog/following{/other_user}", "gists_url": "https://api.github.com/users/sourcefrog/gists{/gist_id}", "starred_url": "https://api.github.com/users/sourcefrog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sourcefrog/subscriptions", "organizations_url": "https://api.github.com/users/sourcefrog/orgs", "repos_url": "https://api.github.com/users/sourcefrog/repos", "events_url": "https://api.github.com/users/sourcefrog/events{/privacy}", "received_events_url": "https://api.github.com/users/sourcefrog/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c21fd9a34f763c532ded7bf141b90a01cef76c43", "url": "https://api.github.com/repos/rust-lang/rust/commits/c21fd9a34f763c532ded7bf141b90a01cef76c43", "html_url": "https://github.com/rust-lang/rust/commit/c21fd9a34f763c532ded7bf141b90a01cef76c43"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "6a9c45b032ee35410b60afdccb925aedc9ec7253", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/22404e1f473e72e88ceaca7e7b8ae6a19f6f3e8b/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22404e1f473e72e88ceaca7e7b8ae6a19f6f3e8b/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=22404e1f473e72e88ceaca7e7b8ae6a19f6f3e8b", "patch": "@@ -2338,6 +2338,9 @@ impl<I: DoubleEndedIterator, U, F> DoubleEndedIterator for FlatMap<I, U, F> wher\n \n /// An iterator that yields `None` forever after the underlying iterator\n /// yields `None` once.\n+///\n+/// These can be created through\n+/// [`iter.fuse()`](trait.Iterator.html#method.fuse).\n #[derive(Clone)]\n #[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]"}]}