{"sha": "f311db100ba338d13a6f590288e027623a8e9434", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzMTFkYjEwMGJhMzM4ZDEzYTZmNTkwMjg4ZTAyNzYyM2E4ZTk0MzQ=", "commit": {"author": {"name": "Albin Hedman", "email": "albin9604@gmail.com", "date": "2020-12-02T18:14:10Z"}, "committer": {"name": "Albin Hedman", "email": "albin9604@gmail.com", "date": "2020-12-02T18:14:10Z"}, "message": "Added tests for assume_init", "tree": {"sha": "bef8acdcde76f55b4aef6a9c6741a474f77c6bb8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bef8acdcde76f55b4aef6a9c6741a474f77c6bb8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f311db100ba338d13a6f590288e027623a8e9434", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f311db100ba338d13a6f590288e027623a8e9434", "html_url": "https://github.com/rust-lang/rust/commit/f311db100ba338d13a6f590288e027623a8e9434", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f311db100ba338d13a6f590288e027623a8e9434/comments", "author": {"login": "usbalbin", "id": 10927717, "node_id": "MDQ6VXNlcjEwOTI3NzE3", "avatar_url": "https://avatars.githubusercontent.com/u/10927717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usbalbin", "html_url": "https://github.com/usbalbin", "followers_url": "https://api.github.com/users/usbalbin/followers", "following_url": "https://api.github.com/users/usbalbin/following{/other_user}", "gists_url": "https://api.github.com/users/usbalbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/usbalbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usbalbin/subscriptions", "organizations_url": "https://api.github.com/users/usbalbin/orgs", "repos_url": "https://api.github.com/users/usbalbin/repos", "events_url": "https://api.github.com/users/usbalbin/events{/privacy}", "received_events_url": "https://api.github.com/users/usbalbin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "usbalbin", "id": 10927717, "node_id": "MDQ6VXNlcjEwOTI3NzE3", "avatar_url": "https://avatars.githubusercontent.com/u/10927717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usbalbin", "html_url": "https://github.com/usbalbin", "followers_url": "https://api.github.com/users/usbalbin/followers", "following_url": "https://api.github.com/users/usbalbin/following{/other_user}", "gists_url": "https://api.github.com/users/usbalbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/usbalbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usbalbin/subscriptions", "organizations_url": "https://api.github.com/users/usbalbin/orgs", "repos_url": "https://api.github.com/users/usbalbin/repos", "events_url": "https://api.github.com/users/usbalbin/events{/privacy}", "received_events_url": "https://api.github.com/users/usbalbin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ef5dbe7167376be7a0babefb0b4971d703e4b5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ef5dbe7167376be7a0babefb0b4971d703e4b5d", "html_url": "https://github.com/rust-lang/rust/commit/1ef5dbe7167376be7a0babefb0b4971d703e4b5d"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "7822c69d10b351d04c0197f4eef133a32bfa2c76", "filename": "library/core/tests/mem.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f311db100ba338d13a6f590288e027623a8e9434/library%2Fcore%2Ftests%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f311db100ba338d13a6f590288e027623a8e9434/library%2Fcore%2Ftests%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fmem.rs?ref=f311db100ba338d13a6f590288e027623a8e9434", "patch": "@@ -129,3 +129,21 @@ fn test_discriminant_send_sync() {\n     is_send_sync::<Discriminant<Regular>>();\n     is_send_sync::<Discriminant<NotSendSync>>();\n }\n+\n+#[test]\n+fn assume_init_good() {\n+    const TRUE: bool = {\n+        let mut x = MaybeUninit::<bool>::uninit();\n+        x.as_mut_ptr().write(true);\n+        x.assume_init()\n+    };\n+    assert!(TRUE);\n+}\n+\n+#[test]\n+#[should_panic]\n+fn assume_init_bad() {\n+    const BAD: () = {\n+        MaybeUninit::<!>::uninit().assume_init();\n+    };\n+}"}]}