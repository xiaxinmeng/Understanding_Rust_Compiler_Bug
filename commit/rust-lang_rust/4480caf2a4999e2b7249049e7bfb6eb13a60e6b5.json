{"sha": "4480caf2a4999e2b7249049e7bfb6eb13a60e6b5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0ODBjYWYyYTQ5OTllMmI3MjQ5MDQ5ZTdiZmI2ZWIxM2E2MGU2YjU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-10-18T06:22:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-10-18T06:22:15Z"}, "message": "auto merge of #18024 : phungleson/rust/fix-var-name-in-doc, r=brson\n\nMake the doc more consistent & runnable.\r\n\r\n* Use `_index` instead of `_rhs` when appropriate.\r\n* Use `_from` and `_to` to avoid warning.\r\n* Remove unnecessary `::core::ops`", "tree": {"sha": "cb0f12e27edca14086d069b4bfd6a076149af187", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb0f12e27edca14086d069b4bfd6a076149af187"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4480caf2a4999e2b7249049e7bfb6eb13a60e6b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4480caf2a4999e2b7249049e7bfb6eb13a60e6b5", "html_url": "https://github.com/rust-lang/rust/commit/4480caf2a4999e2b7249049e7bfb6eb13a60e6b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4480caf2a4999e2b7249049e7bfb6eb13a60e6b5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c0f87610d8fdcb6a90cd8dd1a372fe0ccc8a418", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c0f87610d8fdcb6a90cd8dd1a372fe0ccc8a418", "html_url": "https://github.com/rust-lang/rust/commit/2c0f87610d8fdcb6a90cd8dd1a372fe0ccc8a418"}, {"sha": "d9da3471e8e074f3780e6dffe869852719f46bac", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9da3471e8e074f3780e6dffe869852719f46bac", "html_url": "https://github.com/rust-lang/rust/commit/d9da3471e8e074f3780e6dffe869852719f46bac"}], "stats": {"total": 21, "additions": 10, "deletions": 11}, "files": [{"sha": "6de5f31c6d198b92848e62b43b8ae2117b4761eb", "filename": "src/libcore/ops.rs", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/4480caf2a4999e2b7249049e7bfb6eb13a60e6b5/src%2Flibcore%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4480caf2a4999e2b7249049e7bfb6eb13a60e6b5/src%2Flibcore%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops.rs?ref=4480caf2a4999e2b7249049e7bfb6eb13a60e6b5", "patch": "@@ -626,7 +626,7 @@ shr_impl!(uint u8 u16 u32 u64 int i8 i16 i32 i64)\n  * struct Foo;\n  *\n  * impl Index<Foo, Foo> for Foo {\n- *     fn index<'a>(&'a self, _rhs: &Foo) -> &'a Foo {\n+ *     fn index<'a>(&'a self, _index: &Foo) -> &'a Foo {\n  *         println!(\"Indexing!\");\n  *         self\n  *     }\n@@ -657,7 +657,7 @@ pub trait Index<Index, Result> {\n  * struct Foo;\n  *\n  * impl IndexMut<Foo, Foo> for Foo {\n- *     fn index_mut<'a>(&'a mut self, _rhs: &Foo) -> &'a mut Foo {\n+ *     fn index_mut<'a>(&'a mut self, _index: &Foo) -> &'a mut Foo {\n  *         println!(\"Indexing!\");\n  *         self\n  *     }\n@@ -687,20 +687,20 @@ pub trait IndexMut<Index, Result> {\n  * ```ignore\n  * struct Foo;\n  *\n- * impl ::core::ops::Slice<Foo, Foo> for Foo {\n+ * impl Slice<Foo, Foo> for Foo {\n  *     fn as_slice_<'a>(&'a self) -> &'a Foo {\n  *         println!(\"Slicing!\");\n  *         self\n  *     }\n- *     fn slice_from_or_fail<'a>(&'a self, from: &Foo) -> &'a Foo {\n+ *     fn slice_from_or_fail<'a>(&'a self, _from: &Foo) -> &'a Foo {\n  *         println!(\"Slicing!\");\n  *         self\n  *     }\n- *     fn slice_to_or_fail<'a>(&'a self, to: &Foo) -> &'a Foo {\n+ *     fn slice_to_or_fail<'a>(&'a self, _to: &Foo) -> &'a Foo {\n  *         println!(\"Slicing!\");\n  *         self\n  *     }\n- *     fn slice_or_fail<'a>(&'a self, from: &Foo, to: &Foo) -> &'a Foo {\n+ *     fn slice_or_fail<'a>(&'a self, _from: &Foo, _to: &Foo) -> &'a Foo {\n  *         println!(\"Slicing!\");\n  *         self\n  *     }\n@@ -736,20 +736,20 @@ pub trait Slice<Idx, Sized? Result> for Sized? {\n  * ```ignore\n  * struct Foo;\n  *\n- * impl ::core::ops::SliceMut<Foo, Foo> for Foo {\n+ * impl SliceMut<Foo, Foo> for Foo {\n  *     fn as_mut_slice_<'a>(&'a mut self) -> &'a mut Foo {\n  *         println!(\"Slicing!\");\n  *         self\n  *     }\n- *     fn slice_from_or_fail_mut<'a>(&'a mut self, from: &Foo) -> &'a mut Foo {\n+ *     fn slice_from_or_fail_mut<'a>(&'a mut self, _from: &Foo) -> &'a mut Foo {\n  *         println!(\"Slicing!\");\n  *         self\n  *     }\n- *     fn slice_to_or_fail_mut<'a>(&'a mut self, to: &Foo) -> &'a mut Foo {\n+ *     fn slice_to_or_fail_mut<'a>(&'a mut self, _to: &Foo) -> &'a mut Foo {\n  *         println!(\"Slicing!\");\n  *         self\n  *     }\n- *     fn slice_or_fail_mut<'a>(&'a mut self, from: &Foo, to: &Foo) -> &'a mut Foo {\n+ *     fn slice_or_fail_mut<'a>(&'a mut self, _from: &Foo, _to: &Foo) -> &'a mut Foo {\n  *         println!(\"Slicing!\");\n  *         self\n  *     }\n@@ -901,4 +901,3 @@ def_fn_mut!(A0 A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 A11 A12)\n def_fn_mut!(A0 A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 A11 A12 A13)\n def_fn_mut!(A0 A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 A11 A12 A13 A14)\n def_fn_mut!(A0 A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 A11 A12 A13 A14 A15)\n-"}]}