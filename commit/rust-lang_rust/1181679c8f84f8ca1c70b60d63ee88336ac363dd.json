{"sha": "1181679c8f84f8ca1c70b60d63ee88336ac363dd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExODE2NzljOGY4NGY4Y2ExYzcwYjYwZDYzZWU4ODMzNmFjMzYzZGQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-08-07T01:12:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-08-07T01:12:15Z"}, "message": "Auto merge of #27574 - brson:cache-staged-api, r=huonw\n\nThis search happens a lot! Locally, compiling hyper sees the following improvements:\r\n\r\nbefore\r\n\r\nreal    0m30.843s\r\nuser    0m51.644s\r\nsys     0m2.128s\r\n\r\nreal    0m30.164s\r\nuser    0m53.320s\r\nsys     0m2.208s\r\n\r\nafter\r\n\r\nreal    0m28.438s\r\nuser    0m51.076s\r\nsys     0m2.276s\r\n\r\nreal    0m28.612s\r\nuser    0m51.560s\r\nsys     0m2.192s", "tree": {"sha": "4c6bafd6ff8376eefb74719a604502700102ea68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c6bafd6ff8376eefb74719a604502700102ea68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1181679c8f84f8ca1c70b60d63ee88336ac363dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1181679c8f84f8ca1c70b60d63ee88336ac363dd", "html_url": "https://github.com/rust-lang/rust/commit/1181679c8f84f8ca1c70b60d63ee88336ac363dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1181679c8f84f8ca1c70b60d63ee88336ac363dd/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68f79288bf1ac2b014277750cbf59416c91f7d04", "url": "https://api.github.com/repos/rust-lang/rust/commits/68f79288bf1ac2b014277750cbf59416c91f7d04", "html_url": "https://github.com/rust-lang/rust/commit/68f79288bf1ac2b014277750cbf59416c91f7d04"}, {"sha": "fd142bb741848236d4ab3a7655e58014d29889da", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd142bb741848236d4ab3a7655e58014d29889da", "html_url": "https://github.com/rust-lang/rust/commit/fd142bb741848236d4ab3a7655e58014d29889da"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "bbb2d4fade1f070be5818d624294abf1fd6918b1", "filename": "src/librustc/metadata/creader.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1181679c8f84f8ca1c70b60d63ee88336ac363dd/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1181679c8f84f8ca1c70b60d63ee88336ac363dd/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcreader.rs?ref=1181679c8f84f8ca1c70b60d63ee88336ac363dd", "patch": "@@ -261,6 +261,7 @@ impl<'a> CrateReader<'a> {\n         let loader::Library { dylib, rlib, metadata } = lib;\n \n         let cnum_map = self.resolve_crate_deps(root, metadata.as_slice(), span);\n+        let staged_api = self.is_staged_api(metadata.as_slice());\n \n         let cmeta = Rc::new( cstore::crate_metadata {\n             name: name.to_string(),\n@@ -270,6 +271,7 @@ impl<'a> CrateReader<'a> {\n             cnum: cnum,\n             codemap_import_info: RefCell::new(vec![]),\n             span: span,\n+            staged_api: staged_api\n         });\n \n         let source = cstore::CrateSource {\n@@ -283,6 +285,17 @@ impl<'a> CrateReader<'a> {\n         (cnum, cmeta, source)\n     }\n \n+    fn is_staged_api(&self, data: &[u8]) -> bool {\n+        let attrs = decoder::get_crate_attributes(data);\n+        for attr in &attrs {\n+            if &attr.name()[..] == \"staged_api\" {\n+                match attr.node.value.node { ast::MetaWord(_) => return true, _ => (/*pass*/) }\n+            }\n+        }\n+\n+        return false;\n+    }\n+\n     fn resolve_crate(&mut self,\n                      root: &Option<CratePaths>,\n                      ident: &str,"}, {"sha": "9c45ffe35a8ec877251e15a106ca41073074a823", "filename": "src/librustc/metadata/csearch.rs", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1181679c8f84f8ca1c70b60d63ee88336ac363dd/src%2Flibrustc%2Fmetadata%2Fcsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1181679c8f84f8ca1c70b60d63ee88336ac363dd/src%2Flibrustc%2Fmetadata%2Fcsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcsearch.rs?ref=1181679c8f84f8ca1c70b60d63ee88336ac363dd", "patch": "@@ -22,7 +22,6 @@ use rbml::reader;\n use std::rc::Rc;\n use syntax::ast;\n use syntax::attr;\n-use syntax::attr::AttrMetaMethods;\n use syntax::diagnostic::expect;\n \n use std::collections::hash_map::HashMap;\n@@ -386,15 +385,7 @@ pub fn get_stability(cstore: &cstore::CStore,\n }\n \n pub fn is_staged_api(cstore: &cstore::CStore, krate: ast::CrateNum) -> bool {\n-    let cdata = cstore.get_crate_data(krate);\n-    let attrs = decoder::get_crate_attributes(cdata.data());\n-    for attr in &attrs {\n-        if &attr.name()[..] == \"staged_api\" {\n-            match attr.node.value.node { ast::MetaWord(_) => return true, _ => (/*pass*/) }\n-        }\n-    }\n-\n-    return false;\n+    cstore.get_crate_data(krate).staged_api\n }\n \n pub fn get_repr_attrs(cstore: &cstore::CStore, def: ast::DefId)"}, {"sha": "19d494824cf3aa92efd0591f6fca30cb6b2e8557", "filename": "src/librustc/metadata/cstore.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1181679c8f84f8ca1c70b60d63ee88336ac363dd/src%2Flibrustc%2Fmetadata%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1181679c8f84f8ca1c70b60d63ee88336ac363dd/src%2Flibrustc%2Fmetadata%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcstore.rs?ref=1181679c8f84f8ca1c70b60d63ee88336ac363dd", "patch": "@@ -63,6 +63,7 @@ pub struct crate_metadata {\n     pub cnum: ast::CrateNum,\n     pub codemap_import_info: RefCell<Vec<ImportedFileMap>>,\n     pub span: codemap::Span,\n+    pub staged_api: bool\n }\n \n #[derive(Copy, Debug, PartialEq, Clone)]"}]}