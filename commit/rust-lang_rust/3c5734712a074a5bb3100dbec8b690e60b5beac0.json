{"sha": "3c5734712a074a5bb3100dbec8b690e60b5beac0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjNTczNDcxMmEwNzRhNWJiMzEwMGRiZWM4YjY5MGU2MGI1YmVhYzA=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-02-10T14:54:21Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-02-10T14:59:20Z"}, "message": "Add more tests", "tree": {"sha": "2a9098516877f68242a6d8c7c8fb8bbfd615e19e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a9098516877f68242a6d8c7c8fb8bbfd615e19e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c5734712a074a5bb3100dbec8b690e60b5beac0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c5734712a074a5bb3100dbec8b690e60b5beac0", "html_url": "https://github.com/rust-lang/rust/commit/3c5734712a074a5bb3100dbec8b690e60b5beac0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c5734712a074a5bb3100dbec8b690e60b5beac0/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a00fa0c06f70a377279ae77a01f19b05b3cb7437", "url": "https://api.github.com/repos/rust-lang/rust/commits/a00fa0c06f70a377279ae77a01f19b05b3cb7437", "html_url": "https://github.com/rust-lang/rust/commit/a00fa0c06f70a377279ae77a01f19b05b3cb7437"}], "stats": {"total": 92, "additions": 84, "deletions": 8}, "files": [{"sha": "20ceb74151b06028a6c64e001a89cc1f1eac5b33", "filename": "crates/hir_ty/src/tests/simple.rs", "status": "modified", "additions": 33, "deletions": 8, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/3c5734712a074a5bb3100dbec8b690e60b5beac0/crates%2Fhir_ty%2Fsrc%2Ftests%2Fsimple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c5734712a074a5bb3100dbec8b690e60b5beac0/crates%2Fhir_ty%2Fsrc%2Ftests%2Fsimple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Fsimple.rs?ref=3c5734712a074a5bb3100dbec8b690e60b5beac0", "patch": "@@ -2427,13 +2427,38 @@ fn infer_inner_type() {\n         }\n     \"#,\n         expect![[r#\"\n-        9..89 '{     ...eld; }': ()\n-        47..48 's': S\n-        51..65 'S { field: 0 }': S\n-        62..63 '0': u32\n-        75..76 'f': u32\n-        79..80 's': S\n-        79..86 's.field': u32\n-    \"#]],\n+            9..89 '{     ...eld; }': ()\n+            47..48 's': S\n+            51..65 'S { field: 0 }': S\n+            62..63 '0': u32\n+            75..76 'f': u32\n+            79..80 's': S\n+            79..86 's.field': u32\n+        \"#]],\n+    );\n+}\n+\n+#[test]\n+fn infer_nested_inner_type() {\n+    check_infer(\n+        r#\"\n+        fn foo() {\n+            {\n+                let s = S { field: 0 };\n+                let f = s.field;\n+            }\n+            struct S { field: u32 }\n+        }\n+    \"#,\n+        expect![[r#\"\n+            9..109 '{     ...32 } }': ()\n+            15..79 '{     ...     }': ()\n+            29..30 's': S\n+            33..47 'S { field: 0 }': S\n+            44..45 '0': u32\n+            61..62 'f': u32\n+            65..66 's': S\n+            65..72 's.field': u32\n+        \"#]],\n     );\n }"}, {"sha": "e030f4a97edadafefffbb6e758fbe8275b202575", "filename": "crates/hir_ty/src/tests/traits.rs", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/3c5734712a074a5bb3100dbec8b690e60b5beac0/crates%2Fhir_ty%2Fsrc%2Ftests%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c5734712a074a5bb3100dbec8b690e60b5beac0/crates%2Fhir_ty%2Fsrc%2Ftests%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Ftraits.rs?ref=3c5734712a074a5bb3100dbec8b690e60b5beac0", "patch": "@@ -3151,3 +3151,54 @@ fn test() {\n     \"#,\n     );\n }\n+\n+#[test]\n+fn inner_use() {\n+    check_types(\n+        r#\"\n+mod m {\n+    pub trait Tr {\n+        fn method(&self) -> u8 { 0 }\n+    }\n+\n+    impl Tr for () {}\n+}\n+\n+fn f() {\n+    use m::Tr;\n+\n+    ().method();\n+  //^^^^^^^^^^^ u8\n+}\n+        \"#,\n+    );\n+}\n+\n+#[test]\n+fn inner_use_in_block() {\n+    check_types(\n+        r#\"\n+mod m {\n+    pub trait Tr {\n+        fn method(&self) -> u8 { 0 }\n+    }\n+\n+    impl Tr for () {}\n+}\n+\n+fn f() {\n+    {\n+        use m::Tr;\n+\n+        ().method();\n+      //^^^^^^^^^^^ u8\n+    }\n+\n+    {\n+        ().method();\n+      //^^^^^^^^^^^ {unknown}\n+    }\n+}\n+        \"#,\n+    );\n+}"}]}