{"sha": "2c539d4eecec3c63f878a3798e0ea4df79b46f19", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjNTM5ZDRlZWNlYzNjNjNmODc4YTM3OThlMGVhNGRmNzliNDZmMTk=", "commit": {"author": {"name": "Palmer Cox", "email": "p@lmercox.com", "date": "2013-12-12T01:51:22Z"}, "committer": {"name": "\u201cPalmer", "email": "pcox@intelligent.net", "date": "2013-12-21T01:40:16Z"}, "message": "Update next() and size_hint() for MutSpliterIterator\n\nUpdate the next() method to just return self.v in the case that we've reached\nthe last element that the iterator will yield. This produces equivalent\nbehavior as before, but without the cost of updating the field.\n\nUpdate the size_hint() method to return a better hint now that #9629 is fixed.", "tree": {"sha": "2142e50e6cc40f15c51305ec2bd77ca01023e1ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2142e50e6cc40f15c51305ec2bd77ca01023e1ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c539d4eecec3c63f878a3798e0ea4df79b46f19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c539d4eecec3c63f878a3798e0ea4df79b46f19", "html_url": "https://github.com/rust-lang/rust/commit/2c539d4eecec3c63f878a3798e0ea4df79b46f19", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c539d4eecec3c63f878a3798e0ea4df79b46f19/comments", "author": null, "committer": null, "parents": [{"sha": "efd619467df28b48b97250b2857b18a032b5dab6", "url": "https://api.github.com/repos/rust-lang/rust/commits/efd619467df28b48b97250b2857b18a032b5dab6", "html_url": "https://github.com/rust-lang/rust/commit/efd619467df28b48b97250b2857b18a032b5dab6"}], "stats": {"total": 19, "additions": 8, "deletions": 11}, "files": [{"sha": "b03cef093504398e14f247b6ffee43da112d2efc", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/2c539d4eecec3c63f878a3798e0ea4df79b46f19/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c539d4eecec3c63f878a3798e0ea4df79b46f19/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=2c539d4eecec3c63f878a3798e0ea4df79b46f19", "patch": "@@ -2528,13 +2528,13 @@ impl<'a, T> Iterator<&'a mut [T]> for MutSplitIterator<'a, T> {\n \n     #[inline]\n     fn size_hint(&self) -> (uint, Option<uint>) {\n-        if self.finished { return (0, Some(0)) }\n-\n-        // if the predicate doesn't match anything, we yield one slice\n-        // if it matches every element, we yield len+1 empty slices.\n-        // FIXME #9629\n-        //(1, Some(self.v.len() + 1))\n-        (1, None)\n+        if self.finished {\n+            (0, Some(0))\n+        } else {\n+            // if the predicate doesn't match anything, we yield one slice\n+            // if it matches every element, we yield len+1 empty slices.\n+            (1, Some(self.v.len() + 1))\n+        }\n     }\n }\n \n@@ -2547,10 +2547,7 @@ impl<'a, T> DoubleEndedIterator<&'a mut [T]> for MutSplitIterator<'a, T> {\n             None => {\n                 self.finished = true;\n                 let tmp = util::replace(&mut self.v, &mut []);\n-                let len = tmp.len();\n-                let (head, tail) = tmp.mut_split_at(len);\n-                self.v = tail;\n-                Some(head)\n+                Some(tmp)\n             }\n             Some(idx) => {\n                 let tmp = util::replace(&mut self.v, &mut []);"}]}