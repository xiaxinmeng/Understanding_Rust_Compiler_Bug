{"sha": "50da3ea5bcf31d3c4784f2e5158fd1e7d74aa2d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwZGEzZWE1YmNmMzFkM2M0Nzg0ZjJlNTE1OGZkMWU3ZDc0YWEyZDY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-09T19:08:59Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-09T19:08:59Z"}, "message": "rustc: Instantiate tag patterns with the type parameters supplied by the programmer. size-and-align.rs typechecks now.", "tree": {"sha": "5ccc74aac133abf4bb0ed9e1a8e480cdfc4f8f21", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ccc74aac133abf4bb0ed9e1a8e480cdfc4f8f21"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50da3ea5bcf31d3c4784f2e5158fd1e7d74aa2d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50da3ea5bcf31d3c4784f2e5158fd1e7d74aa2d6", "html_url": "https://github.com/rust-lang/rust/commit/50da3ea5bcf31d3c4784f2e5158fd1e7d74aa2d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50da3ea5bcf31d3c4784f2e5158fd1e7d74aa2d6/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b828ec36fb6d1b6ef5b41d8366287e0b38b4da2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b828ec36fb6d1b6ef5b41d8366287e0b38b4da2e", "html_url": "https://github.com/rust-lang/rust/commit/b828ec36fb6d1b6ef5b41d8366287e0b38b4da2e"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "50ac6bb7b4b748e2a1a9eaa6dbcc4c6502225ea9", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/50da3ea5bcf31d3c4784f2e5158fd1e7d74aa2d6/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50da3ea5bcf31d3c4784f2e5158fd1e7d74aa2d6/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=50da3ea5bcf31d3c4784f2e5158fd1e7d74aa2d6", "patch": "@@ -1461,6 +1461,12 @@ fn check_pat(&@fn_ctxt fcx, @ast.pat pat) -> @ast.pat {\n             auto t = fcx.ccx.item_types.get(vdef._1);\n             auto len = _vec.len[ast.ident](p.node.idents);\n             auto last_id = p.node.idents.(len - 1u);\n+\n+            auto ty_params = fcx.ccx.item_ty_params.get(vdef._0);\n+            auto tag_ty = fcx.ccx.item_types.get(vdef._0);\n+            auto tpt = tup(some(ty_params), tag_ty);\n+            auto ann = instantiate_path(fcx, p, tpt, pat.span);\n+\n             alt (t.struct) {\n                 // N-ary variants have function types.\n                 case (ty.ty_fn(_, ?args, ?tag_ty)) {\n@@ -1483,14 +1489,11 @@ fn check_pat(&@fn_ctxt fcx, @ast.pat pat) -> @ast.pat {\n                         new_subpats += vec(check_pat(fcx, subpat));\n                     }\n \n-                    auto ann = ast.ann_type(tag_ty, none[vec[@ty.t]]);\n                     new_pat = ast.pat_tag(p, new_subpats, vdef_opt, ann);\n                 }\n \n                 // Nullary variants have tag types.\n                 case (ty.ty_tag(?tid, _)) {\n-                    // TODO: ty params\n-\n                     auto subpats_len = _vec.len[@ast.pat](subpats);\n                     if (subpats_len > 0u) {\n                         // TODO: pluralize properly\n@@ -1504,9 +1507,6 @@ fn check_pat(&@fn_ctxt fcx, @ast.pat pat) -> @ast.pat {\n                         fail;   // TODO: recover\n                     }\n \n-                    let vec[@ty.t] tys = vec(); // FIXME\n-                    auto ann = ast.ann_type(plain_ty(ty.ty_tag(tid, tys)),\n-                                            none[vec[@ty.t]]);\n                     new_pat = ast.pat_tag(p, subpats, vdef_opt, ann);\n                 }\n             }"}]}