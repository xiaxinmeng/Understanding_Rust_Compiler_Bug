{"sha": "04b4b500b9c602c45c7cd5264e969e1a91c1a99d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0YjRiNTAwYjljNjAyYzQ1YzdjZDUyNjRlOTY5ZTFhOTFjMWE5OWQ=", "commit": {"author": {"name": "Murarth", "email": "murarth@gmail.com", "date": "2014-12-02T21:55:07Z"}, "committer": {"name": "Murarth", "email": "murarth@gmail.com", "date": "2014-12-11T22:33:27Z"}, "message": "Perform compiler state reset in phase_1", "tree": {"sha": "543fc59789850878ed007bece43072d83cb79cda", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/543fc59789850878ed007bece43072d83cb79cda"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04b4b500b9c602c45c7cd5264e969e1a91c1a99d", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04b4b500b9c602c45c7cd5264e969e1a91c1a99d", "html_url": "https://github.com/rust-lang/rust/commit/04b4b500b9c602c45c7cd5264e969e1a91c1a99d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04b4b500b9c602c45c7cd5264e969e1a91c1a99d/comments", "author": {"login": "murarth", "id": 1332722, "node_id": "MDQ6VXNlcjEzMzI3MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1332722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/murarth", "html_url": "https://github.com/murarth", "followers_url": "https://api.github.com/users/murarth/followers", "following_url": "https://api.github.com/users/murarth/following{/other_user}", "gists_url": "https://api.github.com/users/murarth/gists{/gist_id}", "starred_url": "https://api.github.com/users/murarth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/murarth/subscriptions", "organizations_url": "https://api.github.com/users/murarth/orgs", "repos_url": "https://api.github.com/users/murarth/repos", "events_url": "https://api.github.com/users/murarth/events{/privacy}", "received_events_url": "https://api.github.com/users/murarth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "murarth", "id": 1332722, "node_id": "MDQ6VXNlcjEzMzI3MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1332722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/murarth", "html_url": "https://github.com/murarth", "followers_url": "https://api.github.com/users/murarth/followers", "following_url": "https://api.github.com/users/murarth/following{/other_user}", "gists_url": "https://api.github.com/users/murarth/gists{/gist_id}", "starred_url": "https://api.github.com/users/murarth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/murarth/subscriptions", "organizations_url": "https://api.github.com/users/murarth/orgs", "repos_url": "https://api.github.com/users/murarth/repos", "events_url": "https://api.github.com/users/murarth/events{/privacy}", "received_events_url": "https://api.github.com/users/murarth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c028452b5837a8d35485f24c4b18ede8da6b191", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c028452b5837a8d35485f24c4b18ede8da6b191", "html_url": "https://github.com/rust-lang/rust/commit/2c028452b5837a8d35485f24c4b18ede8da6b191"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "78486e128aca43bf0c5c093ba34fd0488b219969", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/04b4b500b9c602c45c7cd5264e969e1a91c1a99d/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04b4b500b9c602c45c7cd5264e969e1a91c1a99d/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=04b4b500b9c602c45c7cd5264e969e1a91c1a99d", "patch": "@@ -46,12 +46,6 @@ pub fn compile_input(sess: Session,\n                      outdir: &Option<Path>,\n                      output: &Option<Path>,\n                      addl_plugins: Option<Plugins>) {\n-    // These may be left in an incoherent state after a previous compile.\n-    // `clear_tables` and `get_ident_interner().clear()` can be used to free\n-    // memory, but they do not restore the initial state.\n-    syntax::ext::mtwt::reset_tables();\n-    token::reset_ident_interner();\n-\n     // We need nested scopes here, because the intermediate results can keep\n     // large chunks of memory alive and we want to free them as soon as\n     // possible to keep the peak memory usage low\n@@ -115,6 +109,12 @@ pub fn source_name(input: &Input) -> String {\n \n pub fn phase_1_parse_input(sess: &Session, cfg: ast::CrateConfig, input: &Input)\n     -> ast::Crate {\n+    // These may be left in an incoherent state after a previous compile.\n+    // `clear_tables` and `get_ident_interner().clear()` can be used to free\n+    // memory, but they do not restore the initial state.\n+    syntax::ext::mtwt::reset_tables();\n+    token::reset_ident_interner();\n+\n     let krate = time(sess.time_passes(), \"parsing\", (), |_| {\n         match *input {\n             Input::File(ref file) => {"}]}