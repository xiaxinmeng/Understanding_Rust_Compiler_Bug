{"sha": "f2b49d978cbd24e35d4a10fcad9f5951ef4e2867", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyYjQ5ZDk3OGNiZDI0ZTM1ZDRhMTBmY2FkOWY1OTUxZWY0ZTI4Njc=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-06-06T09:47:52Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-06-10T11:08:13Z"}, "message": "avoid 'const-context' terminology", "tree": {"sha": "a086634bb883580fb3238a49caf6e389b08edf87", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a086634bb883580fb3238a49caf6e389b08edf87"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2b49d978cbd24e35d4a10fcad9f5951ef4e2867", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2b49d978cbd24e35d4a10fcad9f5951ef4e2867", "html_url": "https://github.com/rust-lang/rust/commit/f2b49d978cbd24e35d4a10fcad9f5951ef4e2867", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2b49d978cbd24e35d4a10fcad9f5951ef4e2867/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed02b156c5599c827de9d4fe04fa08b0a3fee102", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed02b156c5599c827de9d4fe04fa08b0a3fee102", "html_url": "https://github.com/rust-lang/rust/commit/ed02b156c5599c827de9d4fe04fa08b0a3fee102"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "ca676cf194553e257ae2a49ba99ea3745b60576a", "filename": "src/librustc_mir/transform/qualify_consts.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f2b49d978cbd24e35d4a10fcad9f5951ef4e2867/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2b49d978cbd24e35d4a10fcad9f5951ef4e2867/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs?ref=f2b49d978cbd24e35d4a10fcad9f5951ef4e2867", "patch": "@@ -48,9 +48,8 @@ enum Mode {\n }\n \n impl Mode {\n-    /// Determine whether we are running in \"const context\".  \"const context\" refers\n-    /// to code type-checked according to the rules of the \"const type system\":\n-    /// the bodies of const/static items and `const fn`.\n+    /// Determine whether we have to do full const-checking because syntactically, we\n+    /// are required to be \"const\".\n     #[inline]\n     fn requires_const_checking(self) -> bool {\n         self != Mode::NonConstFn"}]}