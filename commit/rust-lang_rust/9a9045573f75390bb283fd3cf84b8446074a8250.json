{"sha": "9a9045573f75390bb283fd3cf84b8446074a8250", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhOTA0NTU3M2Y3NTM5MGJiMjgzZmQzY2Y4NGI4NDQ2MDc0YTgyNTA=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-11-24T15:36:41Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-11-29T17:19:42Z"}, "message": "Remove call_lifetime_intrinsic from cg_ssa", "tree": {"sha": "5d61c47fd85ba4e8a931e217068357ab18a94d4d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d61c47fd85ba4e8a931e217068357ab18a94d4d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a9045573f75390bb283fd3cf84b8446074a8250", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a9045573f75390bb283fd3cf84b8446074a8250", "html_url": "https://github.com/rust-lang/rust/commit/9a9045573f75390bb283fd3cf84b8446074a8250", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a9045573f75390bb283fd3cf84b8446074a8250/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "187c4cf2572f2bf43a2ee8cee9e459d9ecbc429a", "url": "https://api.github.com/repos/rust-lang/rust/commits/187c4cf2572f2bf43a2ee8cee9e459d9ecbc429a", "html_url": "https://github.com/rust-lang/rust/commit/187c4cf2572f2bf43a2ee8cee9e459d9ecbc429a"}], "stats": {"total": 48, "additions": 22, "deletions": 26}, "files": [{"sha": "fd0649e78964fb7ba5ab6c5ea64546950ee2128b", "filename": "src/librustc_codegen_llvm/builder.rs", "status": "modified", "additions": 18, "deletions": 16, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/9a9045573f75390bb283fd3cf84b8446074a8250/src%2Flibrustc_codegen_llvm%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a9045573f75390bb283fd3cf84b8446074a8250/src%2Flibrustc_codegen_llvm%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fbuilder.rs?ref=9a9045573f75390bb283fd3cf84b8446074a8250", "patch": "@@ -1350,22 +1350,6 @@ impl BuilderMethods<'a, 'tcx> for Builder<'a, 'll, 'tcx> {\n         self.call_lifetime_intrinsic(\"llvm.lifetime.end\", ptr, size);\n     }\n \n-    fn call_lifetime_intrinsic(&mut self, intrinsic: &str, ptr: &'ll Value, size: Size) {\n-        if self.cx.sess().opts.optimize == config::OptLevel::No {\n-            return;\n-        }\n-\n-        let size = size.bytes();\n-        if size == 0 {\n-            return;\n-        }\n-\n-        let lifetime_intrinsic = self.cx.get_intrinsic(intrinsic);\n-\n-        let ptr = self.pointercast(ptr, self.cx.type_i8p());\n-        self.call(lifetime_intrinsic, &[self.cx.const_u64(size), ptr], None);\n-    }\n-\n     fn call(\n         &mut self,\n         llfn: &'ll Value,\n@@ -1420,3 +1404,21 @@ impl BuilderMethods<'a, 'tcx> for Builder<'a, 'll, 'tcx> {\n         llvm::Attribute::NoInline.apply_callsite(llvm::AttributePlace::Function, llret);\n     }\n }\n+\n+impl Builder<'a, 'll, 'tcx> {\n+    fn call_lifetime_intrinsic(&mut self, intrinsic: &str, ptr: &'ll Value, size: Size) {\n+        if self.cx.sess().opts.optimize == config::OptLevel::No {\n+            return;\n+        }\n+\n+        let size = size.bytes();\n+        if size == 0 {\n+            return;\n+        }\n+\n+        let lifetime_intrinsic = self.cx.get_intrinsic(intrinsic);\n+\n+        let ptr = self.pointercast(ptr, self.cx.type_i8p());\n+        self.call(lifetime_intrinsic, &[self.cx.const_u64(size), ptr], None);\n+    }\n+}"}, {"sha": "071bd8ad67bc899ac2261fe2424829d3a7ac47f2", "filename": "src/librustc_codegen_ssa/traits/builder.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9a9045573f75390bb283fd3cf84b8446074a8250/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a9045573f75390bb283fd3cf84b8446074a8250/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbuilder.rs?ref=9a9045573f75390bb283fd3cf84b8446074a8250", "patch": "@@ -297,18 +297,12 @@ pub trait BuilderMethods<'a, 'tcx: 'a>:\n     ) -> Cow<'b, [Self::Value]>\n     where\n         [Self::Value]: ToOwned;\n+\n+    /// Called for `StorageLive`\n     fn lifetime_start(&mut self, ptr: Self::Value, size: Size);\n-    fn lifetime_end(&mut self, ptr: Self::Value, size: Size);\n \n-    /// If LLVM lifetime intrinsic support is enabled (i.e. optimizations\n-    /// on), and `ptr` is nonzero-sized, then extracts the size of `ptr`\n-    /// and the intrinsic for `lt` and passes them to `emit`, which is in\n-    /// charge of generating code to call the passed intrinsic on whatever\n-    /// block of generated code is targeted for the intrinsic.\n-    ///\n-    /// If LLVM lifetime intrinsic support is disabled (i.e.  optimizations\n-    /// off) or `ptr` is zero-sized, then no-op (does not call `emit`).\n-    fn call_lifetime_intrinsic(&mut self, intrinsic: &str, ptr: Self::Value, size: Size);\n+    /// Called for `StorageDead`\n+    fn lifetime_end(&mut self, ptr: Self::Value, size: Size);\n \n     fn call(\n         &mut self,"}]}