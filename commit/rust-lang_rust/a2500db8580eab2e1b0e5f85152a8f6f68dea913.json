{"sha": "a2500db8580eab2e1b0e5f85152a8f6f68dea913", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyNTAwZGI4NTgwZWFiMmUxYjBlNWY4NTE1MmE4ZjZmNjhkZWE5MTM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-07T15:00:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-07-07T15:00:20Z"}, "message": "Rollup merge of #62286 - petrhosek:rustc-no-duplicate-archives, r=cramertj\n\nCheck if the archive has already been added to avoid duplicates\n\nThis avoids adding archives multiple times, which results in duplicate\nobjects in the resulting rlib, leading to symbol collision and link\nfailures. This could happen when crate contains multiple link attributes\nthat all reference the same archive.", "tree": {"sha": "ce23f3fd2a867e26cb249b79ed193baab3420f83", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce23f3fd2a867e26cb249b79ed193baab3420f83"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2500db8580eab2e1b0e5f85152a8f6f68dea913", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdIgkECRBK7hj4Ov3rIwAAdHIIABZx5DOmZkslVF9cUvwcBwyB\nndQ9Om+uaR+Z+4YwF5rKje5lr9S7TEjzK3ezlczvHKHJDi3FkcHw0bnWgM2qB+kS\njUJpfPmF2uSb2V00lDumBkmLws4iBlQwDYhrYeF2L/XFo01jWubDyljO9XVlDiM0\nTHg45S5r55UxzSaza6J+lT9KDTc8SHt+F/AFxpYBEkD0enZHsqOkfwpifkuu83c9\n8XcK3oxaslOuo99VbcLphKvC2f8bZQHmmC0mu9FjB73/Q2KfzFh7M8Ih4bNFEPrA\naQZup39Y9u9Rr/9FYj0qpYk3Mdlk774DBw0iTPQ9Cz3aMPPA0KcC7Cnp+QguTx8=\n=W1uu\n-----END PGP SIGNATURE-----\n", "payload": "tree ce23f3fd2a867e26cb249b79ed193baab3420f83\nparent fe807fcf3e8c76fc54c19a1bb0570579a4ecfe95\nparent 069c52fa111e592f65605c54f5e9b77be0676595\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1562511620 +0200\ncommitter GitHub <noreply@github.com> 1562511620 +0200\n\nRollup merge of #62286 - petrhosek:rustc-no-duplicate-archives, r=cramertj\n\nCheck if the archive has already been added to avoid duplicates\n\nThis avoids adding archives multiple times, which results in duplicate\nobjects in the resulting rlib, leading to symbol collision and link\nfailures. This could happen when crate contains multiple link attributes\nthat all reference the same archive.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2500db8580eab2e1b0e5f85152a8f6f68dea913", "html_url": "https://github.com/rust-lang/rust/commit/a2500db8580eab2e1b0e5f85152a8f6f68dea913", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2500db8580eab2e1b0e5f85152a8f6f68dea913/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe807fcf3e8c76fc54c19a1bb0570579a4ecfe95", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe807fcf3e8c76fc54c19a1bb0570579a4ecfe95", "html_url": "https://github.com/rust-lang/rust/commit/fe807fcf3e8c76fc54c19a1bb0570579a4ecfe95"}, {"sha": "069c52fa111e592f65605c54f5e9b77be0676595", "url": "https://api.github.com/repos/rust-lang/rust/commits/069c52fa111e592f65605c54f5e9b77be0676595", "html_url": "https://github.com/rust-lang/rust/commit/069c52fa111e592f65605c54f5e9b77be0676595"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "e3b7cb235c6788bf23a327507ea6ab39447c4a8e", "filename": "src/librustc_codegen_llvm/back/archive.rs", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a2500db8580eab2e1b0e5f85152a8f6f68dea913/src%2Flibrustc_codegen_llvm%2Fback%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2500db8580eab2e1b0e5f85152a8f6f68dea913/src%2Flibrustc_codegen_llvm%2Fback%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Farchive.rs?ref=a2500db8580eab2e1b0e5f85152a8f6f68dea913", "patch": "@@ -36,11 +36,20 @@ enum Addition {\n         name_in_archive: String,\n     },\n     Archive {\n+        path: PathBuf,\n         archive: ArchiveRO,\n         skip: Box<dyn FnMut(&str) -> bool>,\n     },\n }\n \n+impl Addition {\n+    fn path(&self) -> &Path {\n+        match self {\n+            Addition::File { path, .. } | Addition::Archive { path, .. } => path,\n+        }\n+    }\n+}\n+\n fn is_relevant_child(c: &Child<'_>) -> bool {\n     match c.name() {\n         Some(name) => !name.contains(\"SYMDEF\"),\n@@ -188,12 +197,16 @@ impl<'a> LlvmArchiveBuilder<'a> {\n                       -> io::Result<()>\n         where F: FnMut(&str) -> bool + 'static\n     {\n-        let archive = match ArchiveRO::open(archive) {\n+        let archive_ro = match ArchiveRO::open(archive) {\n             Ok(ar) => ar,\n             Err(e) => return Err(io::Error::new(io::ErrorKind::Other, e)),\n         };\n+        if self.additions.iter().any(|ar| ar.path() == archive) {\n+            return Ok(())\n+        }\n         self.additions.push(Addition::Archive {\n-            archive,\n+            path: archive.to_path_buf(),\n+            archive: archive_ro,\n             skip: Box::new(skip),\n         });\n         Ok(())\n@@ -243,7 +256,7 @@ impl<'a> LlvmArchiveBuilder<'a> {\n                         strings.push(path);\n                         strings.push(name);\n                     }\n-                    Addition::Archive { archive, skip } => {\n+                    Addition::Archive { archive, skip, .. } => {\n                         for child in archive.iter() {\n                             let child = child.map_err(string_to_io_error)?;\n                             if !is_relevant_child(&child) {"}]}