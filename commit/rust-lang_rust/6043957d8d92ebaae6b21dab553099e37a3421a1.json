{"sha": "6043957d8d92ebaae6b21dab553099e37a3421a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwNDM5NTdkOGQ5MmViYWFlNmIyMWRhYjU1MzA5OWUzN2EzNDIxYTE=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-31T00:37:45Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2014-01-03T22:02:00Z"}, "message": "libsyntax: De-`@mut` `ps::boxes`", "tree": {"sha": "2bc4bed16e2465af2c673b08bd8095f4ac7a70fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2bc4bed16e2465af2c673b08bd8095f4ac7a70fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6043957d8d92ebaae6b21dab553099e37a3421a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6043957d8d92ebaae6b21dab553099e37a3421a1", "html_url": "https://github.com/rust-lang/rust/commit/6043957d8d92ebaae6b21dab553099e37a3421a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6043957d8d92ebaae6b21dab553099e37a3421a1/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5eafcc4f932860fa020e7fb4a7f527be05d7f20f", "url": "https://api.github.com/repos/rust-lang/rust/commits/5eafcc4f932860fa020e7fb4a7f527be05d7f20f", "html_url": "https://github.com/rust-lang/rust/commit/5eafcc4f932860fa020e7fb4a7f527be05d7f20f"}], "stats": {"total": 38, "additions": 26, "deletions": 12}, "files": [{"sha": "b275ccb02895b180eb943763fbb02313e7a70ac2", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6043957d8d92ebaae6b21dab553099e37a3421a1/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6043957d8d92ebaae6b21dab553099e37a3421a1/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=6043957d8d92ebaae6b21dab553099e37a3421a1", "patch": "@@ -1306,8 +1306,9 @@ mod test {\n         let a3_name = gensym(\"a3\");\n         // a context that renames from (\"a\",empty) to \"a2\" :\n         let ctxt2 = new_rename(ast::Ident::new(a_name),a2_name,EMPTY_CTXT);\n-        let pending_renames = @mut ~[(ast::Ident::new(a_name),a2_name),\n-                                     (ast::Ident{name:a_name,ctxt:ctxt2},a3_name)];\n+        let pending_renames =\n+            @RefCell::new(~[(ast::Ident::new(a_name),a2_name),\n+                            (ast::Ident{name:a_name,ctxt:ctxt2},a3_name)]);\n         let double_renamed = renames_to_fold(pending_renames).fold_crate(item_ast);\n         let mut path_finder = new_path_finder(~[]);\n         visit::walk_crate(&mut path_finder, &double_renamed, ());"}, {"sha": "0d68f117460709284866e8235e11341a567f13fc", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 23, "deletions": 10, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/6043957d8d92ebaae6b21dab553099e37a3421a1/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6043957d8d92ebaae6b21dab553099e37a3421a1/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=6043957d8d92ebaae6b21dab553099e37a3421a1", "patch": "@@ -28,6 +28,7 @@ use print::pp;\n use print::pprust;\n \n use std::cast;\n+use std::cell::RefCell;\n use std::char;\n use std::str;\n use std::io;\n@@ -73,17 +74,23 @@ pub struct ps {\n     comments: Option<~[comments::cmnt]>,\n     literals: Option<~[comments::lit]>,\n     cur_cmnt_and_lit: CurrentCommentAndLiteral,\n-    boxes: @mut ~[pp::breaks],\n+    boxes: RefCell<~[pp::breaks]>,\n     ann: @pp_ann\n }\n \n pub fn ibox(s: &mut ps, u: uint) {\n-    s.boxes.push(pp::inconsistent);\n+    {\n+        let mut boxes = s.boxes.borrow_mut();\n+        boxes.get().push(pp::inconsistent);\n+    }\n     pp::ibox(&mut s.s, u);\n }\n \n pub fn end(s: &mut ps) {\n-    s.boxes.pop();\n+    {\n+        let mut boxes = s.boxes.borrow_mut();\n+        boxes.get().pop();\n+    }\n     pp::end(&mut s.s);\n }\n \n@@ -105,7 +112,7 @@ pub fn rust_printer_annotated(writer: ~io::Writer,\n             cur_cmnt: 0,\n             cur_lit: 0\n         },\n-        boxes: @mut ~[],\n+        boxes: RefCell::new(~[]),\n         ann: ann\n     };\n }\n@@ -148,7 +155,7 @@ pub fn print_crate(cm: @CodeMap,\n             cur_cmnt: 0,\n             cur_lit: 0\n         },\n-        boxes: @mut ~[],\n+        boxes: RefCell::new(~[]),\n         ann: ann\n     };\n     print_crate_(&mut s, crate);\n@@ -243,13 +250,19 @@ pub fn variant_to_str(var: &ast::variant, intr: @ident_interner) -> ~str {\n }\n \n pub fn cbox(s: &mut ps, u: uint) {\n-    s.boxes.push(pp::consistent);\n+    {\n+        let mut boxes = s.boxes.borrow_mut();\n+        boxes.get().push(pp::consistent);\n+    }\n     pp::cbox(&mut s.s, u);\n }\n \n // \"raw box\"\n pub fn rbox(s: &mut ps, u: uint, b: pp::breaks) {\n-    s.boxes.push(b);\n+    {\n+        let mut boxes = s.boxes.borrow_mut();\n+        boxes.get().push(b);\n+    }\n     pp::rbox(&mut s.s, u, b);\n }\n \n@@ -306,10 +319,10 @@ pub fn is_bol(s: &mut ps) -> bool {\n }\n \n pub fn in_cbox(s: &mut ps) -> bool {\n-    let boxes = &*s.boxes;\n-    let len = boxes.len();\n+    let boxes = s.boxes.borrow();\n+    let len = boxes.get().len();\n     if len == 0u { return false; }\n-    return boxes[len - 1u] == pp::consistent;\n+    return boxes.get()[len - 1u] == pp::consistent;\n }\n \n pub fn hardbreak_if_not_bol(s: &mut ps) {"}]}