{"sha": "2eaf79cfbb447156151cb5435eff5f14f41c40f7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlYWY3OWNmYmI0NDcxNTYxNTFjYjU0MzVlZmY1ZjE0ZjQxYzQwZjc=", "commit": {"author": {"name": "CAD97", "email": "cad97@cad97.com", "date": "2020-08-17T17:19:15Z"}, "committer": {"name": "CAD97", "email": "cad97@cad97.com", "date": "2020-08-17T17:19:15Z"}, "message": "Document missing match arm false positive\n\nThis should already be guarded against\n(https://github.com/rust-analyzer/rust-analyzer/blob/d2212a49f6d447a14cdc87a9de2a4844e78b6905/crates/hir_ty/src/diagnostics/expr.rs#L225-L230)\nbut it isn't preventing this false positive for some reason.", "tree": {"sha": "a0363a0316057ef330faef5fa513ea121bb826e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0363a0316057ef330faef5fa513ea121bb826e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2eaf79cfbb447156151cb5435eff5f14f41c40f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2eaf79cfbb447156151cb5435eff5f14f41c40f7", "html_url": "https://github.com/rust-lang/rust/commit/2eaf79cfbb447156151cb5435eff5f14f41c40f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2eaf79cfbb447156151cb5435eff5f14f41c40f7/comments", "author": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d95a8447cf1874dac6381b5b1e644093b72e435", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d95a8447cf1874dac6381b5b1e644093b72e435", "html_url": "https://github.com/rust-lang/rust/commit/7d95a8447cf1874dac6381b5b1e644093b72e435"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "1602c3fb4c3291a72e9c69c4eef0972b1327af4a", "filename": "crates/hir_ty/src/diagnostics/match_check.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/2eaf79cfbb447156151cb5435eff5f14f41c40f7/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fmatch_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2eaf79cfbb447156151cb5435eff5f14f41c40f7/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fmatch_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fmatch_check.rs?ref=2eaf79cfbb447156151cb5435eff5f14f41c40f7", "patch": "@@ -1335,6 +1335,25 @@ fn panic(a: Category, b: Category) {\n         );\n     }\n \n+    #[test]\n+    fn unknown_type() {\n+        check_diagnostics(\n+            r#\"\n+enum Option<T> { Some(T), None }\n+\n+fn main() {\n+    // FIXME: This is a false positive, as the `Never` type is not known here.\n+    // `Never` is deliberately not defined so that it's an uninferred type.\n+    match Option::<Never>::None {\n+        None => (),\n+        Some(never) => match never {},\n+        //                   ^^^^^ Missing match arm\n+    }\n+}\n+\"#,\n+        );\n+    }\n+\n     mod false_negatives {\n         //! The implementation of match checking here is a work in progress. As we roll this out, we\n         //! prefer false negatives to false positives (ideally there would be no false positives). This"}]}