{"sha": "26a1e532e6ce2067b5c157af0157f3b18697781a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2YTFlNTMyZTZjZTIwNjdiNWMxNTdhZjAxNTdmM2IxODY5Nzc4MWE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-09T07:58:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-09T07:58:39Z"}, "message": "Auto merge of #4361 - lzutao:fix-raw-string-on-single_char_pattern, r=phansch\n\nFix lint_single_char_pattern on raw string literal\n\nCloses #4356\nchangelog: Handle raw string literal on `single_char_literal` lint.", "tree": {"sha": "763d96c200af43d38a28ebedee0f7df584eaa57e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/763d96c200af43d38a28ebedee0f7df584eaa57e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26a1e532e6ce2067b5c157af0157f3b18697781a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26a1e532e6ce2067b5c157af0157f3b18697781a", "html_url": "https://github.com/rust-lang/rust/commit/26a1e532e6ce2067b5c157af0157f3b18697781a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26a1e532e6ce2067b5c157af0157f3b18697781a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "764d68749a7387d7b50fc4c67864b73a1adaba54", "url": "https://api.github.com/repos/rust-lang/rust/commits/764d68749a7387d7b50fc4c67864b73a1adaba54", "html_url": "https://github.com/rust-lang/rust/commit/764d68749a7387d7b50fc4c67864b73a1adaba54"}, {"sha": "b825cddb6d7b2ec7dc479f200047ddf43a01fea0", "url": "https://api.github.com/repos/rust-lang/rust/commits/b825cddb6d7b2ec7dc479f200047ddf43a01fea0", "html_url": "https://github.com/rust-lang/rust/commit/b825cddb6d7b2ec7dc479f200047ddf43a01fea0"}], "stats": {"total": 59, "additions": 55, "deletions": 4}, "files": [{"sha": "19151a414c7e82d2deb759656a3bb9133d0bc8e0", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/26a1e532e6ce2067b5c157af0157f3b18697781a/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26a1e532e6ce2067b5c157af0157f3b18697781a/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=26a1e532e6ce2067b5c157af0157f3b18697781a", "patch": "@@ -2329,13 +2329,20 @@ fn lint_chars_last_cmp_with_unwrap<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, info: &\n fn lint_single_char_pattern<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, _expr: &'tcx hir::Expr, arg: &'tcx hir::Expr) {\n     if_chain! {\n         if let hir::ExprKind::Lit(lit) = &arg.node;\n-        if let ast::LitKind::Str(r, _) = lit.node;\n+        if let ast::LitKind::Str(r, style) = lit.node;\n         if r.as_str().len() == 1;\n         then {\n             let mut applicability = Applicability::MachineApplicable;\n             let snip = snippet_with_applicability(cx, arg.span, \"..\", &mut applicability);\n-            let c = &snip[1..snip.len() - 1];\n-            let hint = format!(\"'{}'\", if c == \"'\" { \"\\\\'\" } else { c });\n+            let ch = if let ast::StrStyle::Raw(nhash) = style {\n+                let nhash = nhash as usize;\n+                // for raw string: r##\"a\"##\n+                &snip[(nhash + 2)..(snip.len() - 1 - nhash)]\n+            } else {\n+                // for regular string: \"a\"\n+                &snip[1..(snip.len() - 1)]\n+            };\n+            let hint = format!(\"'{}'\", if ch == \"'\" { \"\\\\'\" } else { ch });\n             span_lint_and_sugg(\n                 cx,\n                 SINGLE_CHAR_PATTERN,"}, {"sha": "3871c4f2268cc36e02c1c73916b2cbcaff9a5ffb", "filename": "tests/ui/single_char_pattern.fixed", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/26a1e532e6ce2067b5c157af0157f3b18697781a/tests%2Fui%2Fsingle_char_pattern.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/26a1e532e6ce2067b5c157af0157f3b18697781a/tests%2Fui%2Fsingle_char_pattern.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_char_pattern.fixed?ref=26a1e532e6ce2067b5c157af0157f3b18697781a", "patch": "@@ -53,4 +53,11 @@ fn main() {\n     // Issue #3204\n     const S: &str = \"#\";\n     x.find(S);\n+\n+    // Raw string\n+    x.split('a');\n+    x.split('a');\n+    x.split('a');\n+    x.split('\\'');\n+    x.split('#');\n }"}, {"sha": "32afe339cd81cc0cf07d87dc231f4368be748392", "filename": "tests/ui/single_char_pattern.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/26a1e532e6ce2067b5c157af0157f3b18697781a/tests%2Fui%2Fsingle_char_pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26a1e532e6ce2067b5c157af0157f3b18697781a/tests%2Fui%2Fsingle_char_pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_char_pattern.rs?ref=26a1e532e6ce2067b5c157af0157f3b18697781a", "patch": "@@ -53,4 +53,11 @@ fn main() {\n     // Issue #3204\n     const S: &str = \"#\";\n     x.find(S);\n+\n+    // Raw string\n+    x.split(r\"a\");\n+    x.split(r#\"a\"#);\n+    x.split(r###\"a\"###);\n+    x.split(r###\"'\"###);\n+    x.split(r###\"#\"###);\n }"}, {"sha": "464ed375976fcb38d030868e1484918441f2be5a", "filename": "tests/ui/single_char_pattern.stderr", "status": "modified", "additions": 31, "deletions": 1, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/26a1e532e6ce2067b5c157af0157f3b18697781a/tests%2Fui%2Fsingle_char_pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/26a1e532e6ce2067b5c157af0157f3b18697781a/tests%2Fui%2Fsingle_char_pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_char_pattern.stderr?ref=26a1e532e6ce2067b5c157af0157f3b18697781a", "patch": "@@ -132,5 +132,35 @@ error: single-character string constant used as pattern\n LL |     x.starts_with(\"/x03\"); // issue #2996\n    |                   ^^^^^^ help: try using a char instead: `'/x03'`\n \n-error: aborting due to 22 previous errors\n+error: single-character string constant used as pattern\n+  --> $DIR/single_char_pattern.rs:58:13\n+   |\n+LL |     x.split(r\"a\");\n+   |             ^^^^ help: try using a char instead: `'a'`\n+\n+error: single-character string constant used as pattern\n+  --> $DIR/single_char_pattern.rs:59:13\n+   |\n+LL |     x.split(r#\"a\"#);\n+   |             ^^^^^^ help: try using a char instead: `'a'`\n+\n+error: single-character string constant used as pattern\n+  --> $DIR/single_char_pattern.rs:60:13\n+   |\n+LL |     x.split(r###\"a\"###);\n+   |             ^^^^^^^^^^ help: try using a char instead: `'a'`\n+\n+error: single-character string constant used as pattern\n+  --> $DIR/single_char_pattern.rs:61:13\n+   |\n+LL |     x.split(r###\"'\"###);\n+   |             ^^^^^^^^^^ help: try using a char instead: `'/''`\n+\n+error: single-character string constant used as pattern\n+  --> $DIR/single_char_pattern.rs:62:13\n+   |\n+LL |     x.split(r###\"#\"###);\n+   |             ^^^^^^^^^^ help: try using a char instead: `'#'`\n+\n+error: aborting due to 27 previous errors\n "}]}