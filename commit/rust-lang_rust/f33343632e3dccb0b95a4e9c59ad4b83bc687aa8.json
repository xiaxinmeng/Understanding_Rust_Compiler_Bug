{"sha": "f33343632e3dccb0b95a4e9c59ad4b83bc687aa8", "node_id": "C_kwDOAAsO6NoAKGYzMzM0MzYzMmUzZGNjYjBiOTVhNGU5YzU5YWQ0YjgzYmM2ODdhYTg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-10-04T04:14:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-04T04:14:10Z"}, "message": "Rollup merge of #102547 - GuillaumeGomez:migrate-css-theme-search-result, r=notriddle,jsha\n\nMigrate CSS theme for search results\n\nPart of https://github.com/rust-lang/rust/pull/98460.\n\nJust like https://github.com/rust-lang/rust/pull/102237, I unified theme to how the `ayu` handles this one: only one color for the background when search results are focused or hovered.\n\nYou can test it [here](https://rustdoc.crud.net/imperio/migrate-css-theme-search-result/lib2/index.html?search=coo).\n\ncc `@jsha`\nr? `@notriddle`\n\nPS: The repetition in GUI tests is getting out of hand so I opened https://github.com/GuillaumeGomez/browser-UI-test/issues/363 to think about adding possibility to declare functions so we can greatly improve this.", "tree": {"sha": "d43f3431b21f1a50a6d0056e838f9d5ea4a785bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d43f3431b21f1a50a6d0056e838f9d5ea4a785bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f33343632e3dccb0b95a4e9c59ad4b83bc687aa8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjO7MSCRBK7hj4Ov3rIwAAJCAIACLuu0fvxzO28jfqA7Z9OZ6j\n1yZAfd2DYV7NiBfGKVxV0vsPDn0QU+iDEm5L+D2XB3wFh7D3B8/z4wjKV69dISs8\nddqYQTtjR/nSy/sa89USsXCpEMgKfFiDYBszjVcIbndxMXlYPQIRy8neTW9iRn4v\nEsijiMKdKHiG6cgEun4G2sCVwSdcr8CmivJHaqR+9ImxVG6pjYexLbkb8pq4s+ep\n9hYYU1o0HzYyMVq+XGWK91y4ZnbN8PbLXHRSe5HF0orY6GiyseTSAGh5z8m2WJBM\nWQGwg9JJDJis9l54vWbP2jsrJog+O2kc7xnBdRPGirwg7R8t7ZBCWoeLPUHx4B0=\n=RNQR\n-----END PGP SIGNATURE-----\n", "payload": "tree d43f3431b21f1a50a6d0056e838f9d5ea4a785bf\nparent a2126e752f0c6384d9ba34cad7174a4ebb06497e\nparent b8a63a61b857218afa76e8efdb9289bd45092d19\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1664856850 +0200\ncommitter GitHub <noreply@github.com> 1664856850 +0200\n\nRollup merge of #102547 - GuillaumeGomez:migrate-css-theme-search-result, r=notriddle,jsha\n\nMigrate CSS theme for search results\n\nPart of https://github.com/rust-lang/rust/pull/98460.\n\nJust like https://github.com/rust-lang/rust/pull/102237, I unified theme to how the `ayu` handles this one: only one color for the background when search results are focused or hovered.\n\nYou can test it [here](https://rustdoc.crud.net/imperio/migrate-css-theme-search-result/lib2/index.html?search=coo).\n\ncc `@jsha`\nr? `@notriddle`\n\nPS: The repetition in GUI tests is getting out of hand so I opened https://github.com/GuillaumeGomez/browser-UI-test/issues/363 to think about adding possibility to declare functions so we can greatly improve this.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f33343632e3dccb0b95a4e9c59ad4b83bc687aa8", "html_url": "https://github.com/rust-lang/rust/commit/f33343632e3dccb0b95a4e9c59ad4b83bc687aa8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f33343632e3dccb0b95a4e9c59ad4b83bc687aa8/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2126e752f0c6384d9ba34cad7174a4ebb06497e", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2126e752f0c6384d9ba34cad7174a4ebb06497e", "html_url": "https://github.com/rust-lang/rust/commit/a2126e752f0c6384d9ba34cad7174a4ebb06497e"}, {"sha": "b8a63a61b857218afa76e8efdb9289bd45092d19", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8a63a61b857218afa76e8efdb9289bd45092d19", "html_url": "https://github.com/rust-lang/rust/commit/b8a63a61b857218afa76e8efdb9289bd45092d19"}], "stats": {"total": 733, "additions": 605, "deletions": 128}, "files": [{"sha": "fb0448531f6007081005ba7229a9c30d87637b81", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f33343632e3dccb0b95a4e9c59ad4b83bc687aa8/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/f33343632e3dccb0b95a4e9c59ad4b83bc687aa8/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=f33343632e3dccb0b95a4e9c59ad4b83bc687aa8", "patch": "@@ -970,6 +970,11 @@ so that we can apply CSS-filters to change the arrow color in themes */\n \tpadding-right: 1em;\n }\n \n+.search-results a:hover,\n+.search-results a:focus {\n+\tbackground-color: var(--search-result-link-focus-background-color);\n+}\n+\n .popover {\n \tfont-size: 1rem;\n \tposition: absolute;"}, {"sha": "7245dce6ed6e34225b4d85d11916368fa492e19f", "filename": "src/librustdoc/html/static/css/themes/ayu.css", "status": "modified", "additions": 1, "deletions": 24, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/f33343632e3dccb0b95a4e9c59ad4b83bc687aa8/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css", "raw_url": "https://github.com/rust-lang/rust/raw/f33343632e3dccb0b95a4e9c59ad4b83bc687aa8/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css?ref=f33343632e3dccb0b95a4e9c59ad4b83bc687aa8", "patch": "@@ -37,6 +37,7 @@ Original by Dempfi (https://github.com/dempfi/ayu)\n \t--link-color: #39afd7;\n \t--sidebar-link-color: #53b1db;\n \t--sidebar-current-link-background-color: transparent;\n+\t--search-result-link-focus-background-color: #3c3c3c;\n \t--stab-background-color: #314559;\n \t--stab-code-color: #e6e1cf;\n }\n@@ -250,30 +251,6 @@ pre.rust .kw {}\n pre.rust .self, pre.rust .bool-val, pre.rust .prelude-val, pre.rust .attribute {}\n pre.rust .kw-2, pre.rust .prelude-ty {}\n \n-.search-results a:focus span {}\n-a.result-trait:focus {}\n-a.result-traitalias:focus {}\n-a.result-mod:focus,\n-a.result-externcrate:focus {}\n-a.result-mod:focus {}\n-a.result-externcrate:focus {}\n-a.result-enum:focus {}\n-a.result-struct:focus {}\n-a.result-union:focus {}\n-a.result-fn:focus,\n-a.result-method:focus,\n-a.result-tymethod:focus {}\n-a.result-type:focus {}\n-a.result-associatedtype:focus {}\n-a.result-foreigntype:focus {}\n-a.result-attr:focus,\n-a.result-derive:focus,\n-a.result-macro:focus {}\n-a.result-constant:focus,\n-a.result-static:focus {}\n-a.result-primitive:focus {}\n-a.result-keyword:focus {}\n-\n kbd {\n \tcolor: #c5c5c5;\n \tbackground-color: #314559;"}, {"sha": "9d5406e65a8b90b71c8cd41d24989864df678bea", "filename": "src/librustdoc/html/static/css/themes/dark.css", "status": "modified", "additions": 1, "deletions": 30, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/f33343632e3dccb0b95a4e9c59ad4b83bc687aa8/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css", "raw_url": "https://github.com/rust-lang/rust/raw/f33343632e3dccb0b95a4e9c59ad4b83bc687aa8/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css?ref=f33343632e3dccb0b95a4e9c59ad4b83bc687aa8", "patch": "@@ -32,6 +32,7 @@\n \t--link-color: #d2991d;\n \t--sidebar-link-color: #fdbf35;\n \t--sidebar-current-link-background-color: #444;\n+\t--search-result-link-focus-background-color: #616161;\n \t--stab-background-color: #314559;\n \t--stab-code-color: #e6e1cf;\n }\n@@ -58,36 +59,6 @@ input:focus + .slider {\n \tbackground-color: #0a042f !important;\n }\n \n-.search-results a:hover {\n-\tbackground-color: #777;\n-}\n-\n-.search-results a:focus {\n-\tcolor: #eee !important;\n-\tbackground-color: #616161;\n-}\n-.search-results a:focus span { color: #eee !important; }\n-a.result-trait:focus { background-color: #013191; }\n-a.result-traitalias:focus { background-color: #013191; }\n-a.result-mod:focus,\n-a.result-externcrate:focus { background-color: #884719; }\n-a.result-enum:focus { background-color: #194e9f; }\n-a.result-struct:focus { background-color: #194e9f; }\n-a.result-union:focus { background-color: #194e9f; }\n-a.result-fn:focus,\n-a.result-method:focus,\n-a.result-tymethod:focus { background-color: #4950ed; }\n-a.result-type:focus { background-color: #194e9f; }\n-a.result-associatedtype:focus { background-color: #884719; }\n-a.result-foreigntype:focus { background-color: #194e9f; }\n-a.result-attr:focus,\n-a.result-derive:focus,\n-a.result-macro:focus { background-color: #217d1c; }\n-a.result-constant:focus,\n-a.result-static:focus { background-color: #884719; }\n-a.result-primitive:focus { background-color: #194e9f; }\n-a.result-keyword:focus { background-color: #884719; }\n-\n .content .item-info::before { color: #ccc; }\n \n pre.rust .comment { color: #8d8d8b; }"}, {"sha": "b63895e56c687ea0faaba01097969439b901e8d1", "filename": "src/librustdoc/html/static/css/themes/light.css", "status": "modified", "additions": 1, "deletions": 30, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/f33343632e3dccb0b95a4e9c59ad4b83bc687aa8/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css", "raw_url": "https://github.com/rust-lang/rust/raw/f33343632e3dccb0b95a4e9c59ad4b83bc687aa8/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css?ref=f33343632e3dccb0b95a4e9c59ad4b83bc687aa8", "patch": "@@ -32,6 +32,7 @@\n \t--link-color: #3873ad;\n \t--sidebar-link-color: #356da4;\n \t--sidebar-current-link-background-color: #fff;\n+\t--search-result-link-focus-background-color: #ccc;\n \t--stab-background-color: #fff5d6;\n \t--stab-code-color: #000;\n }\n@@ -57,36 +58,6 @@ input:focus + .slider {\n \tbackground-color: #FDFFD3 !important;\n }\n \n-.search-results a:hover {\n-\tbackground-color: #ddd;\n-}\n-\n-.search-results a:focus {\n-\tcolor: #000 !important;\n-\tbackground-color: #ccc;\n-}\n-.search-results a:focus span { color: #000 !important; }\n-a.result-trait:focus { background-color: #c7b6ff; }\n-a.result-traitalias:focus { background-color: #c7b6ff; }\n-a.result-mod:focus,\n-a.result-externcrate:focus { background-color: #afc6e4; }\n-a.result-enum:focus { background-color: #e7b1a0; }\n-a.result-struct:focus { background-color: #e7b1a0; }\n-a.result-union:focus { background-color: #e7b1a0; }\n-a.result-fn:focus,\n-a.result-method:focus,\n-a.result-tymethod:focus { background-color: #c6afb3; }\n-a.result-type:focus { background-color: #e7b1a0; }\n-a.result-associatedtype:focus { background-color: #afc6e4; }\n-a.result-foreigntype:focus { background-color: #e7b1a0; }\n-a.result-attr:focus,\n-a.result-derive:focus,\n-a.result-macro:focus { background-color: #8ce488; }\n-a.result-constant:focus,\n-a.result-static:focus { background-color: #afc6e4; }\n-a.result-primitive:focus { background-color: #e7b1a0; }\n-a.result-keyword:focus { background-color: #afc6e4; }\n-\n .content .item-info::before { color: #ccc; }\n \n body.source .example-wrap pre.rust a {"}, {"sha": "807646cce37e92166ee86c86557a822e7951319d", "filename": "src/test/rustdoc-gui/search-result-color.goml", "status": "modified", "additions": 597, "deletions": 44, "changes": 641, "blob_url": "https://github.com/rust-lang/rust/blob/f33343632e3dccb0b95a4e9c59ad4b83bc687aa8/src%2Ftest%2Frustdoc-gui%2Fsearch-result-color.goml", "raw_url": "https://github.com/rust-lang/rust/raw/f33343632e3dccb0b95a4e9c59ad4b83bc687aa8/src%2Ftest%2Frustdoc-gui%2Fsearch-result-color.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsearch-result-color.goml?ref=f33343632e3dccb0b95a4e9c59ad4b83bc687aa8", "patch": "@@ -30,54 +30,243 @@ assert-css: (\n \n // Checking the color of \"keyword\".\n assert-css: (\n-    \".result-name .keyword\",\n+    \".result-keyword .keyword\",\n     {\"color\": \"rgb(57, 175, 215)\"},\n     ALL,\n )\n+assert-css: (\n+    \".result-keyword\",\n+    {\"color\": \"rgb(0, 150, 207)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n+)\n+move-cursor-to: \".result-keyword\"\n+assert-css: (\n+    \".result-keyword:hover\",\n+    {\"color\": \"rgb(255, 255, 255)\", \"background-color\": \"rgb(60, 60, 60)\"},\n+)\n+assert-css: (\n+    \".result-keyword:hover .keyword\",\n+    {\"color\": \"rgb(57, 175, 215)\"},\n+)\n+move-cursor-to: \".search-input\"\n+focus: \".result-keyword\"\n+assert-css: (\n+    \".result-keyword:focus\",\n+    {\"color\": \"rgb(255, 255, 255)\", \"background-color\": \"rgb(60, 60, 60)\"},\n+)\n+assert-css: (\n+    \".result-keyword:focus .keyword\",\n+    {\"color\": \"rgb(57, 175, 215)\"},\n+)\n+\n // Check the color of \"struct\".\n assert-css: (\n-    \".result-name .struct\",\n+    \".result-struct .struct\",\n     {\"color\": \"rgb(255, 160, 165)\"},\n     ALL,\n )\n+assert-css: (\n+    \".result-struct\",\n+    {\"color\": \"rgb(0, 150, 207)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n+)\n+move-cursor-to: \".result-struct\"\n+assert-css: (\n+    \".result-struct:hover\",\n+    {\"color\": \"rgb(255, 255, 255)\", \"background-color\": \"rgb(60, 60, 60)\"},\n+)\n+assert-css: (\n+    \".result-struct:hover .struct\",\n+    {\"color\": \"rgb(255, 160, 165)\"},\n+)\n+move-cursor-to: \".search-input\"\n+focus: \".result-struct\"\n+assert-css: (\n+    \".result-struct:focus\",\n+    {\"color\": \"rgb(255, 255, 255)\", \"background-color\": \"rgb(60, 60, 60)\"},\n+)\n+assert-css: (\n+    \".result-struct:focus .struct\",\n+    {\"color\": \"rgb(255, 160, 165)\"},\n+)\n+\n // Check the color of \"associated type\".\n assert-css: (\n-    \".result-name .associatedtype\",\n+    \".result-associatedtype .associatedtype\",\n     {\"color\": \"rgb(57, 175, 215)\"},\n     ALL,\n )\n+assert-css: (\n+    \".result-associatedtype\",\n+    {\"color\": \"rgb(0, 150, 207)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n+)\n+move-cursor-to: \".result-associatedtype\"\n+assert-css: (\n+    \".result-associatedtype:hover\",\n+    {\"color\": \"rgb(255, 255, 255)\", \"background-color\": \"rgb(60, 60, 60)\"},\n+)\n+assert-css: (\n+    \".result-associatedtype:hover .associatedtype\",\n+    {\"color\": \"rgb(57, 175, 215)\"},\n+)\n+move-cursor-to: \".search-input\"\n+focus: \".result-associatedtype\"\n+assert-css: (\n+    \".result-associatedtype:focus\",\n+    {\"color\": \"rgb(255, 255, 255)\", \"background-color\": \"rgb(60, 60, 60)\"},\n+)\n+assert-css: (\n+    \".result-associatedtype:focus .associatedtype\",\n+    {\"color\": \"rgb(57, 175, 215)\"},\n+)\n+\n // Check the color of \"type method\".\n assert-css: (\n-    \".result-name .tymethod\",\n+    \".result-tymethod .tymethod\",\n     {\"color\": \"rgb(253, 214, 135)\"},\n     ALL,\n )\n+assert-css: (\n+    \".result-tymethod\",\n+    {\"color\": \"rgb(0, 150, 207)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n+)\n+assert-css: (\n+    \".result-tymethod .tymethod\",\n+    {\"color\": \"rgb(253, 214, 135)\"},\n+)\n+move-cursor-to: \".result-tymethod\"\n+assert-css: (\n+    \".result-tymethod:hover\",\n+    {\"color\": \"rgb(255, 255, 255)\", \"background-color\": \"rgb(60, 60, 60)\"},\n+)\n+move-cursor-to: \".search-input\"\n+focus: \".result-tymethod\"\n+assert-css: (\n+    \".result-tymethod:focus\",\n+    {\"color\": \"rgb(255, 255, 255)\", \"background-color\": \"rgb(60, 60, 60)\"},\n+)\n+\n // Check the color of \"method\".\n assert-css: (\n-    \".result-name .method\",\n+    \".result-method .method\",\n     {\"color\": \"rgb(253, 214, 135)\"},\n     ALL,\n )\n+assert-css: (\n+    \".result-method\",\n+    {\"color\": \"rgb(0, 150, 207)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n+)\n+move-cursor-to: \".result-method\"\n+assert-css: (\n+    \".result-method:hover\",\n+    {\"color\": \"rgb(255, 255, 255)\", \"background-color\": \"rgb(60, 60, 60)\"},\n+)\n+assert-css: (\n+    \".result-method:hover .method\",\n+    {\"color\": \"rgb(253, 214, 135)\"},\n+)\n+move-cursor-to: \".search-input\"\n+focus: \".result-method\"\n+assert-css: (\n+    \".result-method:focus\",\n+    {\"color\": \"rgb(255, 255, 255)\", \"background-color\": \"rgb(60, 60, 60)\"},\n+)\n+assert-css: (\n+    \".result-method:focus .method\",\n+    {\"color\": \"rgb(253, 214, 135)\"},\n+)\n+\n // Check the color of \"struct field\".\n assert-css: (\n-    \".result-name .structfield\",\n+    \".result-structfield .structfield\",\n     {\"color\": \"rgb(0, 150, 207)\"},\n     ALL,\n )\n+assert-css: (\n+    \".result-structfield\",\n+    {\"color\": \"rgb(0, 150, 207)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n+)\n+move-cursor-to: \".result-structfield\"\n+assert-css: (\n+    \".result-structfield:hover\",\n+    {\"color\": \"rgb(255, 255, 255)\", \"background-color\": \"rgb(60, 60, 60)\"},\n+)\n+assert-css: (\n+    \".result-structfield:hover .structfield\",\n+    {\"color\": \"rgb(255, 255, 255)\"},\n+)\n+move-cursor-to: \".search-input\"\n+focus: \".result-structfield\"\n+assert-css: (\n+    \".result-structfield:focus\",\n+    {\"color\": \"rgb(255, 255, 255)\", \"background-color\": \"rgb(60, 60, 60)\"},\n+)\n+assert-css: (\n+    \".result-structfield:focus .structfield\",\n+    {\"color\": \"rgb(255, 255, 255)\"},\n+)\n+\n // Check the color of \"macro\".\n assert-css: (\n-    \".result-name .macro\",\n+    \".result-macro .macro\",\n     {\"color\": \"rgb(163, 122, 204)\"},\n     ALL,\n )\n+assert-css: (\n+    \".result-macro\",\n+    {\"color\": \"rgb(0, 150, 207)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n+)\n+move-cursor-to: \".result-macro\"\n+assert-css: (\n+    \".result-macro:hover\",\n+    {\"color\": \"rgb(255, 255, 255)\", \"background-color\": \"rgb(60, 60, 60)\"},\n+)\n+assert-css: (\n+    \".result-macro:hover .macro\",\n+    {\"color\": \"rgb(163, 122, 204)\"},\n+)\n+move-cursor-to: \".search-input\"\n+focus: \".result-macro\"\n+assert-css: (\n+    \".result-macro:focus\",\n+    {\"color\": \"rgb(255, 255, 255)\", \"background-color\": \"rgb(60, 60, 60)\"},\n+)\n+assert-css: (\n+    \".result-macro:focus .macro\",\n+    {\"color\": \"rgb(163, 122, 204)\"},\n+)\n+\n // Check the color of \"fn\".\n assert-css: (\n-    \".result-name .fn\",\n+    \".result-fn .fn\",\n     {\"color\": \"rgb(253, 214, 135)\"},\n     ALL,\n )\n+assert-css: (\n+    \".result-fn\",\n+    {\"color\": \"rgb(0, 150, 207)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n+)\n+move-cursor-to: \".result-fn\"\n+assert-css: (\n+    \".result-fn:hover\",\n+    {\"color\": \"rgb(255, 255, 255)\", \"background-color\": \"rgb(60, 60, 60)\"},\n+)\n+assert-css: (\n+    \".result-fn:hover .fn\",\n+    {\"color\": \"rgb(253, 214, 135)\"},\n+)\n+move-cursor-to: \".search-input\"\n+focus: \".result-fn\"\n+assert-css: (\n+    \".result-fn:focus\",\n+    {\"color\": \"rgb(255, 255, 255)\", \"background-color\": \"rgb(60, 60, 60)\"},\n+)\n+assert-css: (\n+    \".result-fn:focus .fn\",\n+    {\"color\": \"rgb(253, 214, 135)\"},\n+)\n \n // Checking the `<a>` container.\n+move-cursor-to: \".search-input\"\n+focus: \".search-input\" // To ensure the `<a>` container isnt focus or hover.\n assert-css: (\n     \"//*[@class='result-name']/*[text()='test_docs::']/ancestor::a\",\n     {\"color\": \"rgb(0, 150, 207)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n@@ -113,76 +302,258 @@ assert-css: (\n     {\"color\": \"rgb(221, 221, 221)\"},\n )\n \n-// Checking the color for \"keyword\".\n+// Checking the color for \"keyword\" text.\n assert-css: (\n     \"//*[@class='result-name']//*[text()='(keyword)']\",\n     {\"color\": \"rgb(221, 221, 221)\"},\n )\n \n // Checking the color of \"keyword\".\n assert-css: (\n-    \".result-name .keyword\",\n+    \".result-keyword .keyword\",\n     {\"color\": \"rgb(210, 153, 29)\"},\n     ALL,\n )\n+assert-css: (\n+    \".result-keyword\",\n+    {\"color\": \"rgb(221, 221, 221)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n+)\n+move-cursor-to: \".result-keyword\"\n+assert-css: (\n+    \".result-keyword:hover\",\n+    {\"color\": \"rgb(221, 221, 221)\", \"background-color\": \"rgb(97, 97, 97)\"},\n+)\n+assert-css: (\n+    \".result-keyword:hover .keyword\",\n+    {\"color\": \"rgb(210, 153, 29)\"},\n+)\n+move-cursor-to: \".search-input\"\n+focus: \".result-keyword\"\n+assert-css: (\n+    \".result-keyword:focus\",\n+    {\"color\": \"rgb(221, 221, 221)\", \"background-color\": \"rgb(97, 97, 97)\"},\n+)\n+assert-css: (\n+    \".result-keyword:focus .keyword\",\n+    {\"color\": \"rgb(210, 153, 29)\"},\n+)\n+\n // Check the color of \"struct\".\n assert-css: (\n-    \".result-name .struct\",\n+    \".result-struct .struct\",\n     {\"color\": \"rgb(45, 191, 184)\"},\n     ALL,\n )\n+assert-css: (\n+    \".result-struct\",\n+    {\"color\": \"rgb(221, 221, 221)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n+)\n+move-cursor-to: \".result-struct\"\n+assert-css: (\n+    \".result-struct:hover\",\n+    {\"color\": \"rgb(221, 221, 221)\", \"background-color\": \"rgb(97, 97, 97)\"},\n+)\n+assert-css: (\n+    \".result-struct:hover .struct\",\n+    {\"color\": \"rgb(45, 191, 184)\"},\n+)\n+move-cursor-to: \".search-input\"\n+focus: \".result-struct\"\n+assert-css: (\n+    \".result-struct:focus\",\n+    {\"color\": \"rgb(221, 221, 221)\", \"background-color\": \"rgb(97, 97, 97)\"},\n+)\n+assert-css: (\n+    \".result-struct:focus .struct\",\n+    {\"color\": \"rgb(45, 191, 184)\"},\n+)\n+\n // Check the color of \"associated type\".\n assert-css: (\n-    \".result-name .associatedtype\",\n+    \".result-associatedtype .associatedtype\",\n     {\"color\": \"rgb(210, 153, 29)\"},\n     ALL,\n )\n+assert-css: (\n+    \".result-associatedtype\",\n+    {\"color\": \"rgb(221, 221, 221)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n+)\n+move-cursor-to: \".result-associatedtype\"\n+assert-css: (\n+    \".result-associatedtype:hover\",\n+    {\"color\": \"rgb(221, 221, 221)\", \"background-color\": \"rgb(97, 97, 97)\"},\n+)\n+assert-css: (\n+    \".result-associatedtype:hover .associatedtype\",\n+    {\"color\": \"rgb(210, 153, 29)\"},\n+)\n+move-cursor-to: \".search-input\"\n+focus: \".result-associatedtype\"\n+assert-css: (\n+    \".result-associatedtype:focus\",\n+    {\"color\": \"rgb(221, 221, 221)\", \"background-color\": \"rgb(97, 97, 97)\"},\n+)\n+assert-css: (\n+    \".result-associatedtype:focus .associatedtype\",\n+    {\"color\": \"rgb(210, 153, 29)\"},\n+)\n+\n // Check the color of \"type method\".\n assert-css: (\n-    \".result-name .tymethod\",\n+    \".result-tymethod .tymethod\",\n     {\"color\": \"rgb(43, 171, 99)\"},\n     ALL,\n )\n+assert-css: (\n+    \".result-tymethod\",\n+    {\"color\": \"rgb(221, 221, 221)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n+)\n+move-cursor-to: \".result-tymethod\"\n+assert-css: (\n+    \".result-tymethod:hover\",\n+    {\"color\": \"rgb(221, 221, 221)\", \"background-color\": \"rgb(97, 97, 97)\"},\n+)\n+assert-css: (\n+    \".result-tymethod:hover .tymethod\",\n+    {\"color\": \"rgb(43, 171, 99)\"},\n+)\n+move-cursor-to: \".search-input\"\n+focus: \".result-tymethod\"\n+assert-css: (\n+    \".result-tymethod:focus\",\n+    {\"color\": \"rgb(221, 221, 221)\", \"background-color\": \"rgb(97, 97, 97)\"},\n+)\n+assert-css: (\n+    \".result-tymethod:focus .tymethod\",\n+    {\"color\": \"rgb(43, 171, 99)\"},\n+)\n+\n // Check the color of \"method\".\n assert-css: (\n-    \".result-name .method\",\n+    \".result-method .method\",\n     {\"color\": \"rgb(43, 171, 99)\"},\n     ALL,\n )\n+assert-css: (\n+    \".result-method\",\n+    {\"color\": \"rgb(221, 221, 221)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n+)\n+move-cursor-to: \".result-method\"\n+assert-css: (\n+    \".result-method:hover\",\n+    {\"color\": \"rgb(221, 221, 221)\", \"background-color\": \"rgb(97, 97, 97)\"},\n+)\n+assert-css: (\n+    \".result-method:hover .method\",\n+    {\"color\": \"rgb(43, 171, 99)\"},\n+)\n+move-cursor-to: \".search-input\"\n+focus: \".result-method\"\n+assert-css: (\n+    \".result-method:focus\",\n+    {\"color\": \"rgb(221, 221, 221)\", \"background-color\": \"rgb(97, 97, 97)\"},\n+)\n+assert-css: (\n+    \".result-method:focus .method\",\n+    {\"color\": \"rgb(43, 171, 99)\"},\n+)\n+\n // Check the color of \"struct field\".\n assert-css: (\n-    \".result-name .structfield\",\n+    \".result-structfield .structfield\",\n     {\"color\": \"rgb(221, 221, 221)\"},\n     ALL,\n )\n+assert-css: (\n+    \".result-structfield\",\n+    {\"color\": \"rgb(221, 221, 221)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n+)\n+move-cursor-to: \".result-structfield\"\n+assert-css: (\n+    \".result-structfield:hover\",\n+    {\"color\": \"rgb(221, 221, 221)\", \"background-color\": \"rgb(97, 97, 97)\"},\n+)\n+assert-css: (\n+    \".result-structfield:hover .structfield\",\n+    {\"color\": \"rgb(221, 221, 221)\"},\n+)\n+move-cursor-to: \".search-input\"\n+focus: \".result-structfield\"\n+assert-css: (\n+    \".result-structfield:focus\",\n+    {\"color\": \"rgb(221, 221, 221)\", \"background-color\": \"rgb(97, 97, 97)\"},\n+)\n+assert-css: (\n+    \".result-structfield:focus .structfield\",\n+    {\"color\": \"rgb(221, 221, 221)\"},\n+)\n+\n // Check the color of \"macro\".\n assert-css: (\n-    \".result-name .macro\",\n+    \".result-macro .macro\",\n     {\"color\": \"rgb(9, 189, 0)\"},\n     ALL,\n )\n+assert-css: (\n+    \".result-macro\",\n+    {\"color\": \"rgb(221, 221, 221)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n+)\n+move-cursor-to: \".result-macro\"\n+assert-css: (\n+    \".result-macro:hover\",\n+    {\"color\": \"rgb(221, 221, 221)\", \"background-color\": \"rgb(97, 97, 97)\"},\n+)\n+assert-css: (\n+    \".result-macro:hover .macro\",\n+    {\"color\": \"rgb(9, 189, 0)\"},\n+)\n+move-cursor-to: \".search-input\"\n+focus: \".result-macro\"\n+assert-css: (\n+    \".result-macro:focus\",\n+    {\"color\": \"rgb(221, 221, 221)\", \"background-color\": \"rgb(97, 97, 97)\"},\n+)\n+assert-css: (\n+    \".result-macro:focus .macro\",\n+    {\"color\": \"rgb(9, 189, 0)\"},\n+)\n+\n // Check the color of \"fn\".\n assert-css: (\n-    \".result-name .fn\",\n+    \".result-fn .fn\",\n     {\"color\": \"rgb(43, 171, 99)\"},\n     ALL,\n )\n-\n-// Checking the `<a>` container.\n assert-css: (\n-    \"//*[@class='result-name']/*[text()='test_docs::']/ancestor::a\",\n+    \".result-fn\",\n     {\"color\": \"rgb(221, 221, 221)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n )\n-\n-// Checking color and background on hover.\n-move-cursor-to: \"//*[@class='desc']//*[text()='Just a normal struct.']\"\n+move-cursor-to: \".result-fn\"\n assert-css: (\n-    \"//*[@class='result-name']/*[text()='test_docs::']\",\n-    {\"color\": \"rgb(221, 221, 221)\"},\n+    \".result-fn:hover\",\n+    {\"color\": \"rgb(221, 221, 221)\", \"background-color\": \"rgb(97, 97, 97)\"},\n )\n+assert-css: (\n+    \".result-fn:hover .fn\",\n+    {\"color\": \"rgb(43, 171, 99)\"},\n+)\n+move-cursor-to: \".search-input\"\n+focus: \".result-fn\"\n+assert-css: (\n+    \".result-fn:focus\",\n+    {\"color\": \"rgb(221, 221, 221)\", \"background-color\": \"rgb(97, 97, 97)\"},\n+)\n+assert-css: (\n+    \".result-fn:focus .fn\",\n+    {\"color\": \"rgb(43, 171, 99)\"},\n+)\n+\n+// Checking the `<a>` container.\n+move-cursor-to: \".search-input\"\n+focus: \".search-input\" // To ensure the `<a>` container isnt focus or hover.\n assert-css: (\n     \"//*[@class='result-name']/*[text()='test_docs::']/ancestor::a\",\n-    {\"color\": \"rgb(221, 221, 221)\", \"background-color\": \"rgb(119, 119, 119)\"},\n+    {\"color\": \"rgb(221, 221, 221)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n )\n \n // Light theme\n@@ -200,76 +571,258 @@ assert-css: (\n     {\"color\": \"rgb(0, 0, 0)\"},\n )\n \n-// Checking the color for \"keyword\".\n+// Checking the color for \"keyword\" text.\n assert-css: (\n     \"//*[@class='result-name']//*[text()='(keyword)']\",\n     {\"color\": \"rgb(0, 0, 0)\"},\n )\n \n // Checking the color of \"keyword\".\n assert-css: (\n-    \".result-name .keyword\",\n+    \".result-keyword .keyword\",\n     {\"color\": \"rgb(56, 115, 173)\"},\n     ALL,\n )\n+assert-css: (\n+    \".result-keyword\",\n+    {\"color\": \"rgb(0, 0, 0)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n+)\n+move-cursor-to: \".result-keyword\"\n+assert-css: (\n+    \".result-keyword:hover\",\n+    {\"color\": \"rgb(0, 0, 0)\", \"background-color\": \"rgb(204, 204, 204)\"},\n+)\n+assert-css: (\n+    \".result-keyword:hover .keyword\",\n+    {\"color\": \"rgb(56, 115, 173)\"},\n+)\n+move-cursor-to: \".search-input\"\n+focus: \".result-keyword\"\n+assert-css: (\n+    \".result-keyword:focus\",\n+    {\"color\": \"rgb(0, 0, 0)\", \"background-color\": \"rgb(204, 204, 204)\"},\n+)\n+assert-css: (\n+    \".result-keyword:focus .keyword\",\n+    {\"color\": \"rgb(56, 115, 173)\"},\n+)\n+\n // Check the color of \"struct\".\n assert-css: (\n-    \".result-name .struct\",\n+    \".result-struct .struct\",\n     {\"color\": \"rgb(173, 55, 138)\"},\n     ALL,\n )\n+assert-css: (\n+    \".result-struct\",\n+    {\"color\": \"rgb(0, 0, 0)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n+)\n+move-cursor-to: \".result-struct\"\n+assert-css: (\n+    \".result-struct:hover\",\n+    {\"color\": \"rgb(0, 0, 0)\", \"background-color\": \"rgb(204, 204, 204)\"},\n+)\n+assert-css: (\n+    \".result-struct:hover .struct\",\n+    {\"color\": \"rgb(173, 55, 138)\"},\n+)\n+move-cursor-to: \".search-input\"\n+focus: \".result-struct\"\n+assert-css: (\n+    \".result-struct:focus\",\n+    {\"color\": \"rgb(0, 0, 0)\", \"background-color\": \"rgb(204, 204, 204)\"},\n+)\n+assert-css: (\n+    \".result-struct:focus .struct\",\n+    {\"color\": \"rgb(173, 55, 138)\"},\n+)\n+\n // Check the color of \"associated type\".\n assert-css: (\n-    \".result-name .associatedtype\",\n+    \".result-associatedtype .associatedtype\",\n     {\"color\": \"rgb(56, 115, 173)\"},\n     ALL,\n )\n+assert-css: (\n+    \".result-associatedtype\",\n+    {\"color\": \"rgb(0, 0, 0)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n+)\n+move-cursor-to: \".result-associatedtype\"\n+assert-css: (\n+    \".result-associatedtype:hover\",\n+    {\"color\": \"rgb(0, 0, 0)\", \"background-color\": \"rgb(204, 204, 204)\"},\n+)\n+assert-css: (\n+    \".result-associatedtype:hover .associatedtype\",\n+    {\"color\": \"rgb(56, 115, 173)\"},\n+)\n+move-cursor-to: \".search-input\"\n+focus: \".result-associatedtype\"\n+assert-css: (\n+    \".result-associatedtype:focus\",\n+    {\"color\": \"rgb(0, 0, 0)\", \"background-color\": \"rgb(204, 204, 204)\"},\n+)\n+assert-css: (\n+    \".result-associatedtype:focus .associatedtype\",\n+    {\"color\": \"rgb(56, 115, 173)\"},\n+)\n+\n // Check the color of \"type method\".\n assert-css: (\n-    \".result-name .tymethod\",\n+    \".result-tymethod .tymethod\",\n     {\"color\": \"rgb(173, 124, 55)\"},\n     ALL,\n )\n+assert-css: (\n+    \".result-tymethod\",\n+    {\"color\": \"rgb(0, 0, 0)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n+)\n+move-cursor-to: \".result-tymethod\"\n+assert-css: (\n+    \".result-tymethod:hover\",\n+    {\"color\": \"rgb(0, 0, 0)\", \"background-color\": \"rgb(204, 204, 204)\"},\n+)\n+assert-css: (\n+    \".result-tymethod:hover .tymethod\",\n+    {\"color\": \"rgb(173, 124, 55)\"},\n+)\n+move-cursor-to: \".search-input\"\n+focus: \".result-tymethod\"\n+assert-css: (\n+    \".result-tymethod:focus\",\n+    {\"color\": \"rgb(0, 0, 0)\", \"background-color\": \"rgb(204, 204, 204)\"},\n+)\n+assert-css: (\n+    \".result-tymethod:focus .tymethod\",\n+    {\"color\": \"rgb(173, 124, 55)\"},\n+)\n+\n // Check the color of \"method\".\n assert-css: (\n-    \".result-name .method\",\n+    \".result-method .method\",\n     {\"color\": \"rgb(173, 124, 55)\"},\n     ALL,\n )\n+assert-css: (\n+    \".result-method\",\n+    {\"color\": \"rgb(0, 0, 0)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n+)\n+move-cursor-to: \".result-method\"\n+assert-css: (\n+    \".result-method:hover\",\n+    {\"color\": \"rgb(0, 0, 0)\", \"background-color\": \"rgb(204, 204, 204)\"},\n+)\n+assert-css: (\n+    \".result-method:hover .method\",\n+    {\"color\": \"rgb(173, 124, 55)\"},\n+)\n+move-cursor-to: \".search-input\"\n+focus: \".result-method\"\n+assert-css: (\n+    \".result-method:focus\",\n+    {\"color\": \"rgb(0, 0, 0)\", \"background-color\": \"rgb(204, 204, 204)\"},\n+)\n+assert-css: (\n+    \".result-method:focus .method\",\n+    {\"color\": \"rgb(173, 124, 55)\"},\n+)\n+\n // Check the color of \"struct field\".\n assert-css: (\n-    \".result-name .structfield\",\n+    \".result-structfield .structfield\",\n     {\"color\": \"rgb(0, 0, 0)\"},\n     ALL,\n )\n+assert-css: (\n+    \".result-structfield\",\n+    {\"color\": \"rgb(0, 0, 0)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n+)\n+move-cursor-to: \".result-structfield\"\n+assert-css: (\n+    \".result-structfield:hover\",\n+    {\"color\": \"rgb(0, 0, 0)\", \"background-color\": \"rgb(204, 204, 204)\"},\n+)\n+assert-css: (\n+    \".result-structfield:hover .structfield\",\n+    {\"color\": \"rgb(0, 0, 0)\"},\n+)\n+move-cursor-to: \".search-input\"\n+focus: \".result-structfield\"\n+assert-css: (\n+    \".result-structfield:focus\",\n+    {\"color\": \"rgb(0, 0, 0)\", \"background-color\": \"rgb(204, 204, 204)\"},\n+)\n+assert-css: (\n+    \".result-structfield:focus .structfield\",\n+    {\"color\": \"rgb(0, 0, 0)\"},\n+)\n+\n // Check the color of \"macro\".\n assert-css: (\n-    \".result-name .macro\",\n+    \".result-macro .macro\",\n     {\"color\": \"rgb(6, 128, 0)\"},\n     ALL,\n )\n+assert-css: (\n+    \".result-macro\",\n+    {\"color\": \"rgb(0, 0, 0)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n+)\n+move-cursor-to: \".result-macro\"\n+assert-css: (\n+    \".result-macro:hover\",\n+    {\"color\": \"rgb(0, 0, 0)\", \"background-color\": \"rgb(204, 204, 204)\"},\n+)\n+assert-css: (\n+    \".result-macro:hover .macro\",\n+    {\"color\": \"rgb(6, 128, 0)\"},\n+)\n+move-cursor-to: \".search-input\"\n+focus: \".result-macro\"\n+assert-css: (\n+    \".result-macro:focus\",\n+    {\"color\": \"rgb(0, 0, 0)\", \"background-color\": \"rgb(204, 204, 204)\"},\n+)\n+assert-css: (\n+    \".result-macro:focus .macro\",\n+    {\"color\": \"rgb(6, 128, 0)\"},\n+)\n+\n // Check the color of \"fn\".\n assert-css: (\n-    \".result-name .fn\",\n+    \".result-fn .fn\",\n     {\"color\": \"rgb(173, 124, 55)\"},\n     ALL,\n )\n-\n-// Checking the `<a>` container.\n assert-css: (\n-    \"//*[@class='result-name']/*[text()='test_docs::']/ancestor::a\",\n+    \".result-fn\",\n     {\"color\": \"rgb(0, 0, 0)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n )\n-\n-// Checking color and background on hover.\n-move-cursor-to: \"//*[@class='desc']//*[text()='Just a normal struct.']\"\n+move-cursor-to: \".result-fn\"\n assert-css: (\n-    \"//*[@class='result-name']/*[text()='test_docs::']\",\n-    {\"color\": \"rgb(0, 0, 0)\"},\n+    \".result-fn:hover\",\n+    {\"color\": \"rgb(0, 0, 0)\", \"background-color\": \"rgb(204, 204, 204)\"},\n )\n+assert-css: (\n+    \".result-fn:hover .fn\",\n+    {\"color\": \"rgb(173, 124, 55)\"},\n+)\n+move-cursor-to: \".search-input\"\n+focus: \".result-fn\"\n+assert-css: (\n+    \".result-fn:focus\",\n+    {\"color\": \"rgb(0, 0, 0)\", \"background-color\": \"rgb(204, 204, 204)\"},\n+)\n+assert-css: (\n+    \".result-fn:focus .fn\",\n+    {\"color\": \"rgb(173, 124, 55)\"},\n+)\n+\n+// Checking the `<a>` container.\n+move-cursor-to: \".search-input\"\n+focus: \".search-input\" // To ensure the `<a>` container isnt focus or hover.\n assert-css: (\n     \"//*[@class='result-name']/*[text()='test_docs::']/ancestor::a\",\n-    {\"color\": \"rgb(0, 0, 0)\", \"background-color\": \"rgb(221, 221, 221)\"},\n+    {\"color\": \"rgb(0, 0, 0)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n )\n \n // Check the alias more specifically in the dark theme."}]}