{"sha": "a9c3b3885da3395427773a2f48a0e1f9f033551b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5YzNiMzg4NWRhMzM5NTQyNzc3M2EyZjQ4YTBlMWY5ZjAzMzU1MWI=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-05-30T22:52:23Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-05-30T22:52:23Z"}, "message": "add a zsh completion file for rustc", "tree": {"sha": "bd6a78ec6b521d46e8f875c9a824e8ca6ac7fa37", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd6a78ec6b521d46e8f875c9a824e8ca6ac7fa37"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9c3b3885da3395427773a2f48a0e1f9f033551b", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9c3b3885da3395427773a2f48a0e1f9f033551b", "html_url": "https://github.com/rust-lang/rust/commit/a9c3b3885da3395427773a2f48a0e1f9f033551b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9c3b3885da3395427773a2f48a0e1f9f033551b/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "784a8495d211c2195911e0a7ee5bcada931b3d45", "url": "https://api.github.com/repos/rust-lang/rust/commits/784a8495d211c2195911e0a7ee5bcada931b3d45", "html_url": "https://github.com/rust-lang/rust/commit/784a8495d211c2195911e0a7ee5bcada931b3d45"}], "stats": {"total": 102, "additions": 102, "deletions": 0}, "files": [{"sha": "faa21a296169404ef528dff6e336c287355494ad", "filename": "src/etc/zsh/_rust", "status": "added", "additions": 102, "deletions": 0, "changes": 102, "blob_url": "https://github.com/rust-lang/rust/blob/a9c3b3885da3395427773a2f48a0e1f9f033551b/src%2Fetc%2Fzsh%2F_rust", "raw_url": "https://github.com/rust-lang/rust/raw/a9c3b3885da3395427773a2f48a0e1f9f033551b/src%2Fetc%2Fzsh%2F_rust", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fzsh%2F_rust?ref=a9c3b3885da3395427773a2f48a0e1f9f033551b", "patch": "@@ -0,0 +1,102 @@\n+#compdef rustc\n+\n+local -a _rustc_opts_switches _rustc_opts_lint _rustc_opts_debug\n+\n+typeset -A opt_args\n+\n+_rustc_opts_switches=(\n+    --bin'[Compile an executable crate (default)]'\n+    -c'[Compile and assemble, but do not link]'\n+    --cfg'[Configure the compilation environment]'\n+    --emit-llvm'[Produce an LLVM bitcode file]'\n+    {-h,--help}'[Display this message]'\n+    -L'[Add a directory to the library search path]'\n+    --lib'[Compile a library crate]'\n+    --linker'[Program to use for linking instead of the default.]'\n+    --link-args'[FLAGS is a space-separated list of flags passed to the linker]'\n+    --ls'[List the symbols defined by a library crate]'\n+    --no-trans'[Run all passes except translation; no output]'\n+    -O'[Equivalent to --opt-level=2]'\n+    -o'[Write output to <filename>]'\n+    --opt-level'[Optimize with possible levels 0-3]'\n+    --out-dir'[Write output to compiler-chosen filename in <dir>]'\n+    --parse-only'[Parse only; do not compile, assemble, or link]'\n+    --pretty'[Pretty-print the input instead of compiling]'\n+    -S'[Compile only; do not assemble or link]'\n+    --save-temps'[Write intermediate files (.bc, .opt.bc, .o) in addition to normal output]'\n+    --sysroot'[Override the system root]'\n+    --test'[Build a test harness]'\n+    --target'[Target triple cpu-manufacturer-kernel\\[-os\\] to compile]'\n+    --target-feature'[Target specific attributes (llc -mattr=help for detail)]'\n+    --android-cross-path'[The path to the Android NDK]'\n+    {-W,--warn}'[Set lint warnings]'\n+    {-A,--allow}'[Set lint allowed]'\n+    {-D,--deny}'[Set lint denied]'\n+    {-F,--forbid}'[Set lint forbidden]'\n+    -Z'[Set internal debugging options]'\n+    {-v,--version}'[Print version info and exit]'\n+)\n+\n+_rustc_opts_lint=(\n+    'path-statement:path statements with no effect'\n+    'deprecated-pattern:warn about deprecated uses of pattern bindings'\n+    'non-implicitly-copyable-typarams:passing non implicitly copyable types as copy type params'\n+    'missing-trait-doc:detects missing documentation for traits'\n+    'missing-struct-doc:detects missing documentation for structs'\n+    'ctypes:proper use of core::libc types in foreign modules'\n+    'implicit-copies:implicit copies of non implicitly copyable data'\n+    \"unused-mut:detect mut variables which don't need to be mutable\"\n+    'unused-imports:imports that are never used'\n+    'heap-memory:use of any (~ type or @ type) heap memory'\n+    'default-methods:allow default methods'\n+    'unused-variable:detect variables which are not used in any way'\n+    'dead-assignment:detect assignments that will never be read'\n+    'unrecognized-lint:unrecognized lint attribute'\n+    'type-limits:comparisons made useless by limits of the types involved'\n+    'unused-unsafe:unnecessary use of an `unsafe` block'\n+    'while-true:suggest using loop { } instead of while(true) { }'\n+    'non-camel-case-types:types, variants and traits should have camel case names'\n+    'managed-heap-memory:use of managed (@ type) heap memory'\n+    'unnecessary-allocation:detects unnecessary allocations that can be eliminated'\n+    'owned-heap-memory:use of owned (~ type) heap memory'\n+)\n+\n+_rustc_opts_debug=(\n+    'verbose:in general, enable more debug printouts'\n+    'time-passes:measure time of each rustc pass'\n+    'count-llvm-insns:count where LLVM instrs originate'\n+    'time-llvm-passes:measure time of each LLVM pass'\n+    'trans-stats:gather trans statistics'\n+    'asm-comments:generate comments into the assembly (may change behavior)'\n+    'no-verify:skip LLVM verification'\n+    'trace:emit trace logs'\n+    'coherence:perform coherence checking'\n+    'borrowck-stats:gather borrowck statistics'\n+    \"borrowck-note-pure:note where purity is req'd\"\n+    \"borrowck-note-loan:note where loans are req'd\"\n+    'no-landing-pads:omit landing pads for unwinding'\n+    'debug-llvm:enable debug output from LLVM'\n+    'count-type-sizes:count the sizes of aggregate types'\n+    'meta-stats:gather metadata statistics'\n+    'no-opt:do not optimize, even if -O is passed'\n+    'no-monomorphic-collapse:do not collapse template instantiations'\n+    'print-link-args:Print the arguments passed to the linker'\n+    'gc:Garbage collect shared data (experimental)'\n+    'jit:Execute using JIT (experimental)'\n+    'extra-debug-info:Extra debugging info (experimental)'\n+    'debug-info:Produce debug info (experimental)'\n+    'static:Use or produce static libraries or binaries (experimental)'\n+    'no-debug-borrows:do not show where borrow checks fail'\n+    'lint-llvm:Run the LLVM lint pass on the pre-optimization IR'\n+)\n+\n+_rustc() {\n+    case $words[2] in\n+        -[WADF]) _describe 'options' _rustc_opts_lint ;;\n+        -Z) _describe 'options' _rustc_opts_debug ;;\n+        -)  _arguments -s -w : \"$_rustc_opts_switches[@]\" ;;\n+        *) _files -g \"*.rs\" ;;\n+  esac\n+}\n+\n+_rustc \"$@\""}]}