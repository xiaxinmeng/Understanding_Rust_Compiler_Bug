{"sha": "1a99a32bd7cfd38e1d084d3dad3290c5b764ac7a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhOTlhMzJiZDdjZmQzOGUxZDA4NGQzZGFkMzI5MGM1Yjc2NGFjN2E=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-02-07T13:28:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-02-07T13:28:33Z"}, "message": "Rollup merge of #58028 - GuillaumeGomez:fix-settings-image-link, r=QuietMisdreavus\n\nFix image link in the settings menu\n\nFixes #57892.\n\nr? @QuietMisdreavus", "tree": {"sha": "bdda1a88caa4ec019e0200f9a6a250a3e3f76c40", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bdda1a88caa4ec019e0200f9a6a250a3e3f76c40"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a99a32bd7cfd38e1d084d3dad3290c5b764ac7a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcXDKBCRBK7hj4Ov3rIwAAdHIIAI/oM+WhFyYWUbw54JEAGy+r\n1pnPpoyQ6N74CsVtnAolQSe74BkZPsCZ2XXxzQBrv27h97rPwEzrxl+0zwkCNI95\nTZvxe2u6Xy7+3BDi8M2bkxyAKcsQKxtA2zpKm3fTcYB1ngAp3He6cfBo+7fCV1Lh\nHJqJh6fNMnlSeCKoGx53wEz71jLN3S+TjKcVbquepb9WGDRHbs8aksG5GAUCmJ4i\nzQoKgdgtnYD1P1nTJNDGySboclPP2ehxrL1KwAlcu0z2Nf3kKEM59idFUEOrcs0j\nB132Amy5VBOmg9Nj73wHj01MPSWsFoyA1edC6uIw/0V3ZAx8jO21RsQsdep7HcQ=\n=Fbrj\n-----END PGP SIGNATURE-----\n", "payload": "tree bdda1a88caa4ec019e0200f9a6a250a3e3f76c40\nparent bb9d66d3ba256956a8acddc514fbdbccc1f4f65c\nparent 5cf20ca3c539d8d2e2560055f516ef95251837c1\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1549546113 +0100\ncommitter GitHub <noreply@github.com> 1549546113 +0100\n\nRollup merge of #58028 - GuillaumeGomez:fix-settings-image-link, r=QuietMisdreavus\n\nFix image link in the settings menu\n\nFixes #57892.\n\nr? @QuietMisdreavus\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a99a32bd7cfd38e1d084d3dad3290c5b764ac7a", "html_url": "https://github.com/rust-lang/rust/commit/1a99a32bd7cfd38e1d084d3dad3290c5b764ac7a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a99a32bd7cfd38e1d084d3dad3290c5b764ac7a/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb9d66d3ba256956a8acddc514fbdbccc1f4f65c", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb9d66d3ba256956a8acddc514fbdbccc1f4f65c", "html_url": "https://github.com/rust-lang/rust/commit/bb9d66d3ba256956a8acddc514fbdbccc1f4f65c"}, {"sha": "5cf20ca3c539d8d2e2560055f516ef95251837c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/5cf20ca3c539d8d2e2560055f516ef95251837c1", "html_url": "https://github.com/rust-lang/rust/commit/5cf20ca3c539d8d2e2560055f516ef95251837c1"}], "stats": {"total": 50, "additions": 35, "deletions": 15}, "files": [{"sha": "b444993c1b5ecd9f153492c5a2058248c2fe6d93", "filename": "src/librustdoc/html/layout.rs", "status": "modified", "additions": 18, "deletions": 10, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/1a99a32bd7cfd38e1d084d3dad3290c5b764ac7a/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a99a32bd7cfd38e1d084d3dad3290c5b764ac7a/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Flayout.rs?ref=1a99a32bd7cfd38e1d084d3dad3290c5b764ac7a", "patch": "@@ -4,6 +4,8 @@ use std::path::PathBuf;\n \n use externalfiles::ExternalHtml;\n \n+use html::render::SlashChecker;\n+\n #[derive(Clone)]\n pub struct Layout {\n     pub logo: String,\n@@ -176,16 +178,22 @@ pub fn render<T: fmt::Display, S: fmt::Display>(\n     static_root_path = static_root_path,\n     root_path = page.root_path,\n     css_class = page.css_class,\n-    logo      = if layout.logo.is_empty() {\n-        format!(\"<a href='{}{}/index.html'>\\\n-                 <img src='{static_root_path}rust-logo{suffix}.png' alt='logo' width='100'></a>\",\n-                static_root_path=static_root_path,\n-                suffix=page.resource_suffix)\n-    } else {\n-        format!(\"<a href='{}{}/index.html'>\\\n-                 <img src='{}' alt='logo' width='100'></a>\",\n-                page.root_path, layout.krate,\n-                layout.logo)\n+    logo      = {\n+        let p = format!(\"{}{}\", page.root_path, layout.krate);\n+        let p = SlashChecker(&p);\n+        if layout.logo.is_empty() {\n+            format!(\"<a href='{path}index.html'>\\\n+                     <img src='{static_root_path}rust-logo{suffix}.png' \\\n+                          alt='logo' width='100'></a>\",\n+                    path=p,\n+                    static_root_path=static_root_path,\n+                    suffix=page.resource_suffix)\n+        } else {\n+            format!(\"<a href='{}index.html'>\\\n+                     <img src='{}' alt='logo' width='100'></a>\",\n+                    p,\n+                    layout.logo)\n+        }\n     },\n     title     = page.title,\n     description = page.description,"}, {"sha": "1014766dd905e18e7f88fe23a22741ef3f42b62b", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/1a99a32bd7cfd38e1d084d3dad3290c5b764ac7a/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a99a32bd7cfd38e1d084d3dad3290c5b764ac7a/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=1a99a32bd7cfd38e1d084d3dad3290c5b764ac7a", "patch": "@@ -73,6 +73,18 @@ use minifier;\n /// A pair of name and its optional document.\n pub type NameDoc = (String, Option<String>);\n \n+pub struct SlashChecker<'a>(pub &'a str);\n+\n+impl<'a> Display for SlashChecker<'a> {\n+    fn fmt(&self, f: &mut Formatter) -> fmt::Result {\n+        if !self.0.ends_with(\"/\") && !self.0.is_empty() {\n+            write!(f, \"{}/\", self.0)\n+        } else {\n+            write!(f, \"{}\", self.0)\n+        }\n+    }\n+}\n+\n /// Major driving force in all rustdoc rendering. This contains information\n /// about where in the tree-like hierarchy rendering is occurring and controls\n /// how the current page is being rendered.\n@@ -1140,7 +1152,8 @@ themePicker.onblur = handleThemeButtonsBlur;\n                                   krates\n                                     .iter()\n                                     .map(|s| {\n-                                        format!(\"<li><a href=\\\"{}/index.html\\\">{}</li>\", s, s)\n+                                        format!(\"<li><a href=\\\"{}index.html\\\">{}</li>\",\n+                                                SlashChecker(s), s)\n                                     })\n                                     .collect::<String>());\n             try_err!(layout::render(&mut w, &cx.shared.layout,\n@@ -2075,8 +2088,7 @@ impl Context {\n         let mut themes = self.shared.themes.clone();\n         let sidebar = \"<p class='location'>Settings</p><div class='sidebar-elems'></div>\";\n         themes.push(PathBuf::from(\"settings.css\"));\n-        let mut layout = self.shared.layout.clone();\n-        layout.krate = String::new();\n+        let layout = self.shared.layout.clone();\n         try_err!(layout::render(&mut w, &layout,\n                                 &page, &sidebar, &settings,\n                                 self.shared.css_file_extension.is_some(),\n@@ -2455,7 +2467,7 @@ impl<'a> fmt::Display for Item<'a> {\n \n fn item_path(ty: ItemType, name: &str) -> String {\n     match ty {\n-        ItemType::Module => format!(\"{}/index.html\", name),\n+        ItemType::Module => format!(\"{}index.html\", SlashChecker(name)),\n         _ => format!(\"{}.{}.html\", ty.css_class(), name),\n     }\n }"}, {"sha": "c721c024468ddf2b75e8ee6b608b9217eba9ecad", "filename": "src/test/rustdoc/keyword.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1a99a32bd7cfd38e1d084d3dad3290c5b764ac7a/src%2Ftest%2Frustdoc%2Fkeyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a99a32bd7cfd38e1d084d3dad3290c5b764ac7a/src%2Ftest%2Frustdoc%2Fkeyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fkeyword.rs?ref=1a99a32bd7cfd38e1d084d3dad3290c5b764ac7a", "patch": "@@ -7,7 +7,7 @@\n // @has foo/keyword.match.html '//a[@class=\"keyword\"]' 'match'\n // @has foo/keyword.match.html '//span[@class=\"in-band\"]' 'Keyword match'\n // @has foo/keyword.match.html '//section[@id=\"main\"]//div[@class=\"docblock\"]//p' 'this is a test!'\n-// @!has foo/index.html '//a/@href' 'foo/index.html'\n+// @has foo/index.html '//a/@href' '../foo/index.html'\n // @!has foo/foo/index.html\n // @!has-dir foo/foo\n #[doc(keyword = \"match\")]"}]}