{"sha": "6f7801f810644c22dfe8c089b5ccc32c9de833d7", "node_id": "C_kwDOAAsO6NoAKDZmNzgwMWY4MTA2NDRjMjJkZmU4YzA4OWI1Y2NjMzJjOWRlODMzZDc", "commit": {"author": {"name": "Josh Soref", "email": "2119212+jsoref@users.noreply.github.com", "date": "2023-04-17T19:22:43Z"}, "committer": {"name": "Josh Soref", "email": "2119212+jsoref@users.noreply.github.com", "date": "2023-04-23T14:53:06Z"}, "message": "Rewrite search_same description", "tree": {"sha": "4b0498ed5a5836c608a4a72ac1730f5bdeeaccb4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b0498ed5a5836c608a4a72ac1730f5bdeeaccb4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f7801f810644c22dfe8c089b5ccc32c9de833d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f7801f810644c22dfe8c089b5ccc32c9de833d7", "html_url": "https://github.com/rust-lang/rust/commit/6f7801f810644c22dfe8c089b5ccc32c9de833d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f7801f810644c22dfe8c089b5ccc32c9de833d7/comments", "author": {"login": "jsoref", "id": 2119212, "node_id": "MDQ6VXNlcjIxMTkyMTI=", "avatar_url": "https://avatars.githubusercontent.com/u/2119212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsoref", "html_url": "https://github.com/jsoref", "followers_url": "https://api.github.com/users/jsoref/followers", "following_url": "https://api.github.com/users/jsoref/following{/other_user}", "gists_url": "https://api.github.com/users/jsoref/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsoref/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsoref/subscriptions", "organizations_url": "https://api.github.com/users/jsoref/orgs", "repos_url": "https://api.github.com/users/jsoref/repos", "events_url": "https://api.github.com/users/jsoref/events{/privacy}", "received_events_url": "https://api.github.com/users/jsoref/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsoref", "id": 2119212, "node_id": "MDQ6VXNlcjIxMTkyMTI=", "avatar_url": "https://avatars.githubusercontent.com/u/2119212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsoref", "html_url": "https://github.com/jsoref", "followers_url": "https://api.github.com/users/jsoref/followers", "following_url": "https://api.github.com/users/jsoref/following{/other_user}", "gists_url": "https://api.github.com/users/jsoref/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsoref/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsoref/subscriptions", "organizations_url": "https://api.github.com/users/jsoref/orgs", "repos_url": "https://api.github.com/users/jsoref/repos", "events_url": "https://api.github.com/users/jsoref/events{/privacy}", "received_events_url": "https://api.github.com/users/jsoref/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2061faf9e7774bf8bc3ac6842cd2a095e1f2597", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2061faf9e7774bf8bc3ac6842cd2a095e1f2597", "html_url": "https://github.com/rust-lang/rust/commit/d2061faf9e7774bf8bc3ac6842cd2a095e1f2597"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "35378143a7931fd524f028bb842448c1a02fb7ef", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6f7801f810644c22dfe8c089b5ccc32c9de833d7/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f7801f810644c22dfe8c089b5ccc32c9de833d7/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=6f7801f810644c22dfe8c089b5ccc32c9de833d7", "patch": "@@ -2233,8 +2233,12 @@ pub fn is_slice_of_primitives(cx: &LateContext<'_>, expr: &Expr<'_>) -> Option<S\n     None\n }\n \n-/// returns list of all pairs (a, b) from `exprs` such that `eq(a, b)`\n-/// `hash` must be comformed with `eq`\n+/// Returns list of all pairs `(a, b)` where `eq(a, b) == true`\n+/// and `a` is before `b` in `exprs` for all `a` and `b` in\n+/// `exprs`\n+///\n+/// Given functions `eq` and `hash` such that `eq(a, b) == true`\n+/// implies `hash(a) == hash(b)`\n pub fn search_same<T, Hash, Eq>(exprs: &[T], hash: Hash, eq: Eq) -> Vec<(&T, &T)>\n where\n     Hash: Fn(&T) -> u64,"}]}