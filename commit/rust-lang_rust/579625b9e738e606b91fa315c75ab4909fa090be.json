{"sha": "579625b9e738e606b91fa315c75ab4909fa090be", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3OTYyNWI5ZTczOGU2MDZiOTFmYTMxNWM3NWFiNDkwOWZhMDkwYmU=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-11-15T23:11:02Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-11-19T19:48:11Z"}, "message": "Revert expansion of impl HashStable for Frame.", "tree": {"sha": "9e9d59c91a3d94cda4f4f93a86d6b04d2cf45041", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e9d59c91a3d94cda4f4f93a86d6b04d2cf45041"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/579625b9e738e606b91fa315c75ab4909fa090be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/579625b9e738e606b91fa315c75ab4909fa090be", "html_url": "https://github.com/rust-lang/rust/commit/579625b9e738e606b91fa315c75ab4909fa090be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/579625b9e738e606b91fa315c75ab4909fa090be/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4da5fe7fdbb4b2a257f37fc725a756f01d2927fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/4da5fe7fdbb4b2a257f37fc725a756f01d2927fc", "html_url": "https://github.com/rust-lang/rust/commit/4da5fe7fdbb4b2a257f37fc725a756f01d2927fc"}], "stats": {"total": 32, "additions": 12, "deletions": 20}, "files": [{"sha": "08640476f7ab720e21b7feb0d9d45aab1238a4ef", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/579625b9e738e606b91fa315c75ab4909fa090be/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/579625b9e738e606b91fa315c75ab4909fa090be/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=579625b9e738e606b91fa315c75ab4909fa090be", "patch": "@@ -3,7 +3,6 @@ use std::fmt::Write;\n use std::mem;\n \n use syntax::source_map::{self, Span, DUMMY_SP};\n-use rustc::ich::StableHashingContext;\n use rustc::hir::def_id::DefId;\n use rustc::hir::def::DefKind;\n use rustc::mir;\n@@ -19,7 +18,6 @@ use rustc::mir::interpret::{\n     InterpResult, truncate, sign_extend,\n };\n use rustc_data_structures::fx::FxHashMap;\n-use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_macros::HashStable;\n \n use super::{\n@@ -831,21 +829,3 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         frames\n     }\n }\n-\n-impl<'ctx, 'mir, 'tcx, Tag, Extra> HashStable<StableHashingContext<'ctx>>\n-for Frame<'mir, 'tcx, Tag, Extra>\n-    where Extra: HashStable<StableHashingContext<'ctx>>,\n-          Tag:   HashStable<StableHashingContext<'ctx>>\n-{\n-    fn hash_stable(&self, hcx: &mut StableHashingContext<'ctx>, hasher: &mut StableHasher) {\n-        self.body.hash_stable(hcx, hasher);\n-        self.instance.hash_stable(hcx, hasher);\n-        self.span.hash_stable(hcx, hasher);\n-        self.return_to_block.hash_stable(hcx, hasher);\n-        self.return_place.as_ref().map(|r| &**r).hash_stable(hcx, hasher);\n-        self.locals.hash_stable(hcx, hasher);\n-        self.block.hash_stable(hcx, hasher);\n-        self.stmt.hash_stable(hcx, hasher);\n-        self.extra.hash_stable(hcx, hasher);\n-    }\n-}"}, {"sha": "b460badd1fdac3353ec54e9737ba7c0968025e5e", "filename": "src/librustc_mir/interpret/snapshot.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/579625b9e738e606b91fa315c75ab4909fa090be/src%2Flibrustc_mir%2Finterpret%2Fsnapshot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/579625b9e738e606b91fa315c75ab4909fa090be/src%2Flibrustc_mir%2Finterpret%2Fsnapshot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fsnapshot.rs?ref=579625b9e738e606b91fa315c75ab4909fa090be", "patch": "@@ -304,6 +304,18 @@ struct FrameSnapshot<'a, 'tcx> {\n     stmt: usize,\n }\n \n+impl_stable_hash_for!(impl<> for struct Frame<'mir, 'tcx> {\n+    body,\n+    instance,\n+    span,\n+    return_to_block,\n+    return_place -> (return_place.as_ref().map(|r| &**r)),\n+    locals,\n+    block,\n+    stmt,\n+    extra,\n+});\n+\n impl<'a, 'mir, 'tcx, Ctx> Snapshot<'a, Ctx> for &'a Frame<'mir, 'tcx>\n     where Ctx: SnapshotContext<'a>,\n {"}]}