{"sha": "a184c83535230af39fad3e238b7422b4972d597e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExODRjODM1MzUyMzBhZjM5ZmFkM2UyMzhiNzQyMmI0OTcyZDU5N2U=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-10-07T09:12:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-07T09:12:09Z"}, "message": "Merge #6160\n\n6160: Add validation check for ambiguous trait objects r=matklad a=Veykril\n\nFixes #285.\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "f1efa09f139d6bd20ad63980b178697bd8aaab59", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1efa09f139d6bd20ad63980b178697bd8aaab59"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a184c83535230af39fad3e238b7422b4972d597e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJffYZpCRBK7hj4Ov3rIwAAdHIIAFbt7eJw5H6Xje5SYtn135wR\nNUCfWEa11gNEc6GnNRfJBzDHlo7m6TyYDzmVUtKVxOE6I/kpJVyIEL+JtYti1UrV\nmdNjKAnKzbVAQZdt+h6I8qyJI84fbnowuLJMNr5Ni+xBDCpSsLI9YxunioJerjLu\nYJ9XEe/kblqscB6gQVS6oO2bTYeo22SpzQMypQcG4ae8piMmZ1yOks/sOnqnpkcQ\np1OM7mBNg5ymLh5wmFrWMZ9i0XEcDmnXX2FXmnnDPtUD+IKf1LCh+kZ5o35z7bz8\ntcBcuX6o8lHcrYeI/s5v3LOCtlJD79SpmmGLN4ERVIMpdKYrUdSfdpumsRNcVfI=\n=69/B\n-----END PGP SIGNATURE-----\n", "payload": "tree f1efa09f139d6bd20ad63980b178697bd8aaab59\nparent 761c87963d59ea0fe2d08a23aae94f0913e2660d\nparent 6f38552edb7be10d526aa6510200b547a301593f\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1602061929 +0000\ncommitter GitHub <noreply@github.com> 1602061929 +0000\n\nMerge #6160\n\n6160: Add validation check for ambiguous trait objects r=matklad a=Veykril\n\nFixes #285.\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a184c83535230af39fad3e238b7422b4972d597e", "html_url": "https://github.com/rust-lang/rust/commit/a184c83535230af39fad3e238b7422b4972d597e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a184c83535230af39fad3e238b7422b4972d597e/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "761c87963d59ea0fe2d08a23aae94f0913e2660d", "url": "https://api.github.com/repos/rust-lang/rust/commits/761c87963d59ea0fe2d08a23aae94f0913e2660d", "html_url": "https://github.com/rust-lang/rust/commit/761c87963d59ea0fe2d08a23aae94f0913e2660d"}, {"sha": "6f38552edb7be10d526aa6510200b547a301593f", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f38552edb7be10d526aa6510200b547a301593f", "html_url": "https://github.com/rust-lang/rust/commit/6f38552edb7be10d526aa6510200b547a301593f"}], "stats": {"total": 449, "additions": 448, "deletions": 1}, "files": [{"sha": "0f9a5e8ae7edee379d01d626f67372316a744720", "filename": "crates/syntax/src/validation.rs", "status": "modified", "additions": 44, "deletions": 1, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/a184c83535230af39fad3e238b7422b4972d597e/crates%2Fsyntax%2Fsrc%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a184c83535230af39fad3e238b7422b4972d597e/crates%2Fsyntax%2Fsrc%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fvalidation.rs?ref=a184c83535230af39fad3e238b7422b4972d597e", "patch": "@@ -3,10 +3,11 @@\n mod block;\n \n use crate::{\n-    ast, match_ast, AstNode, SyntaxError,\n+    algo, ast, match_ast, AstNode, SyntaxError,\n     SyntaxKind::{BYTE, BYTE_STRING, CHAR, CONST, FN, INT_NUMBER, STRING, TYPE_ALIAS},\n     SyntaxNode, SyntaxToken, TextSize, T,\n };\n+use rowan::Direction;\n use rustc_lexer::unescape::{\n     self, unescape_byte, unescape_byte_literal, unescape_char, unescape_literal, Mode,\n };\n@@ -95,6 +96,9 @@ pub(crate) fn validate(root: &SyntaxNode) -> Vec<SyntaxError> {\n                 ast::Visibility(it) => validate_visibility(it, &mut errors),\n                 ast::RangeExpr(it) => validate_range_expr(it, &mut errors),\n                 ast::PathSegment(it) => validate_path_keywords(it, &mut errors),\n+                ast::RefType(it) => validate_trait_object_ref_ty(it, &mut errors),\n+                ast::PtrType(it) => validate_trait_object_ptr_ty(it, &mut errors),\n+                ast::FnPtrType(it) => validate_trait_object_fn_ptr_ret_ty(it, &mut errors),\n                 _ => (),\n             }\n         }\n@@ -301,3 +305,42 @@ fn validate_path_keywords(segment: ast::PathSegment, errors: &mut Vec<SyntaxErro\n         return true;\n     }\n }\n+\n+fn validate_trait_object_ref_ty(ty: ast::RefType, errors: &mut Vec<SyntaxError>) {\n+    if let Some(ast::Type::DynTraitType(ty)) = ty.ty() {\n+        if let Some(err) = validate_trait_object_ty(ty) {\n+            errors.push(err);\n+        }\n+    }\n+}\n+\n+fn validate_trait_object_ptr_ty(ty: ast::PtrType, errors: &mut Vec<SyntaxError>) {\n+    if let Some(ast::Type::DynTraitType(ty)) = ty.ty() {\n+        if let Some(err) = validate_trait_object_ty(ty) {\n+            errors.push(err);\n+        }\n+    }\n+}\n+\n+fn validate_trait_object_fn_ptr_ret_ty(ty: ast::FnPtrType, errors: &mut Vec<SyntaxError>) {\n+    if let Some(ast::Type::DynTraitType(ty)) = ty.ret_type().and_then(|ty| ty.ty()) {\n+        if let Some(err) = validate_trait_object_ty(ty) {\n+            errors.push(err);\n+        }\n+    }\n+}\n+\n+fn validate_trait_object_ty(ty: ast::DynTraitType) -> Option<SyntaxError> {\n+    let tbl = ty.type_bound_list()?;\n+\n+    if tbl.bounds().count() > 1 {\n+        let dyn_token = ty.dyn_token()?;\n+        let potential_parentheses =\n+            algo::skip_trivia_token(dyn_token.prev_token()?, Direction::Prev)?;\n+        let kind = potential_parentheses.kind();\n+        if !matches!(kind, T!['('] | T![<] | T![=]) {\n+            return Some(SyntaxError::new(\"ambiguous `+` in a type\", ty.syntax().text_range()));\n+        }\n+    }\n+    None\n+}"}, {"sha": "592741cdb1b57e941493ef2150117a147eaa4b05", "filename": "crates/syntax/test_data/parser/err/0046_ambiguous_trait_object.rast", "status": "added", "additions": 192, "deletions": 0, "changes": 192, "blob_url": "https://github.com/rust-lang/rust/blob/a184c83535230af39fad3e238b7422b4972d597e/crates%2Fsyntax%2Ftest_data%2Fparser%2Ferr%2F0046_ambiguous_trait_object.rast", "raw_url": "https://github.com/rust-lang/rust/raw/a184c83535230af39fad3e238b7422b4972d597e/crates%2Fsyntax%2Ftest_data%2Fparser%2Ferr%2F0046_ambiguous_trait_object.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Ferr%2F0046_ambiguous_trait_object.rast?ref=a184c83535230af39fad3e238b7422b4972d597e", "patch": "@@ -0,0 +1,192 @@\n+SOURCE_FILE@0..187\n+  TYPE_ALIAS@0..35\n+    TYPE_KW@0..4 \"type\"\n+    WHITESPACE@4..5 \" \"\n+    NAME@5..8\n+      IDENT@5..8 \"Foo\"\n+    GENERIC_PARAM_LIST@8..12\n+      L_ANGLE@8..9 \"<\"\n+      LIFETIME_PARAM@9..11\n+        LIFETIME@9..11 \"\\'a\"\n+      R_ANGLE@11..12 \">\"\n+    WHITESPACE@12..13 \" \"\n+    EQ@13..14 \"=\"\n+    WHITESPACE@14..15 \" \"\n+    REF_TYPE@15..34\n+      AMP@15..16 \"&\"\n+      LIFETIME@16..18 \"\\'a\"\n+      WHITESPACE@18..19 \" \"\n+      DYN_TRAIT_TYPE@19..34\n+        DYN_KW@19..22 \"dyn\"\n+        WHITESPACE@22..23 \" \"\n+        TYPE_BOUND_LIST@23..34\n+          TYPE_BOUND@23..27\n+            PATH_TYPE@23..27\n+              PATH@23..27\n+                PATH_SEGMENT@23..27\n+                  NAME_REF@23..27\n+                    IDENT@23..27 \"Send\"\n+          WHITESPACE@27..28 \" \"\n+          PLUS@28..29 \"+\"\n+          WHITESPACE@29..30 \" \"\n+          TYPE_BOUND@30..34\n+            PATH_TYPE@30..34\n+              PATH@30..34\n+                PATH_SEGMENT@30..34\n+                  NAME_REF@30..34\n+                    IDENT@30..34 \"Sync\"\n+    SEMICOLON@34..35 \";\"\n+  WHITESPACE@35..36 \"\\n\"\n+  TYPE_ALIAS@36..70\n+    TYPE_KW@36..40 \"type\"\n+    WHITESPACE@40..41 \" \"\n+    NAME@41..44\n+      IDENT@41..44 \"Foo\"\n+    WHITESPACE@44..45 \" \"\n+    EQ@45..46 \"=\"\n+    WHITESPACE@46..47 \" \"\n+    PTR_TYPE@47..69\n+      STAR@47..48 \"*\"\n+      CONST_KW@48..53 \"const\"\n+      WHITESPACE@53..54 \" \"\n+      DYN_TRAIT_TYPE@54..69\n+        DYN_KW@54..57 \"dyn\"\n+        WHITESPACE@57..58 \" \"\n+        TYPE_BOUND_LIST@58..69\n+          TYPE_BOUND@58..62\n+            PATH_TYPE@58..62\n+              PATH@58..62\n+                PATH_SEGMENT@58..62\n+                  NAME_REF@58..62\n+                    IDENT@58..62 \"Send\"\n+          WHITESPACE@62..63 \" \"\n+          PLUS@63..64 \"+\"\n+          WHITESPACE@64..65 \" \"\n+          TYPE_BOUND@65..69\n+            PATH_TYPE@65..69\n+              PATH@65..69\n+                PATH_SEGMENT@65..69\n+                  NAME_REF@65..69\n+                    IDENT@65..69 \"Sync\"\n+    SEMICOLON@69..70 \";\"\n+  WHITESPACE@70..71 \"\\n\"\n+  TYPE_ALIAS@71..109\n+    TYPE_KW@71..75 \"type\"\n+    WHITESPACE@75..76 \" \"\n+    NAME@76..79\n+      IDENT@76..79 \"Foo\"\n+    WHITESPACE@79..80 \" \"\n+    EQ@80..81 \"=\"\n+    WHITESPACE@81..82 \" \"\n+    FN_PTR_TYPE@82..108\n+      FN_KW@82..84 \"fn\"\n+      PARAM_LIST@84..86\n+        L_PAREN@84..85 \"(\"\n+        R_PAREN@85..86 \")\"\n+      WHITESPACE@86..87 \" \"\n+      RET_TYPE@87..108\n+        THIN_ARROW@87..89 \"->\"\n+        WHITESPACE@89..90 \" \"\n+        DYN_TRAIT_TYPE@90..108\n+          DYN_KW@90..93 \"dyn\"\n+          WHITESPACE@93..94 \" \"\n+          TYPE_BOUND_LIST@94..108\n+            TYPE_BOUND@94..98\n+              PATH_TYPE@94..98\n+                PATH@94..98\n+                  PATH_SEGMENT@94..98\n+                    NAME_REF@94..98\n+                      IDENT@94..98 \"Send\"\n+            WHITESPACE@98..99 \" \"\n+            PLUS@99..100 \"+\"\n+            WHITESPACE@100..101 \" \"\n+            TYPE_BOUND@101..108\n+              LIFETIME@101..108 \"\\'static\"\n+    SEMICOLON@108..109 \";\"\n+  WHITESPACE@109..110 \"\\n\"\n+  FN@110..186\n+    FN_KW@110..112 \"fn\"\n+    WHITESPACE@112..113 \" \"\n+    NAME@113..117\n+      IDENT@113..117 \"main\"\n+    PARAM_LIST@117..119\n+      L_PAREN@117..118 \"(\"\n+      R_PAREN@118..119 \")\"\n+    WHITESPACE@119..120 \" \"\n+    BLOCK_EXPR@120..186\n+      L_CURLY@120..121 \"{\"\n+      WHITESPACE@121..126 \"\\n    \"\n+      LET_STMT@126..184\n+        LET_KW@126..129 \"let\"\n+        WHITESPACE@129..130 \" \"\n+        IDENT_PAT@130..131\n+          NAME@130..131\n+            IDENT@130..131 \"b\"\n+        WHITESPACE@131..132 \" \"\n+        EQ@132..133 \"=\"\n+        WHITESPACE@133..134 \" \"\n+        CAST_EXPR@134..183\n+          PAREN_EXPR@134..138\n+            L_PAREN@134..135 \"(\"\n+            REF_EXPR@135..137\n+              AMP@135..136 \"&\"\n+              PATH_EXPR@136..137\n+                PATH@136..137\n+                  PATH_SEGMENT@136..137\n+                    NAME_REF@136..137\n+                      IDENT@136..137 \"a\"\n+            R_PAREN@137..138 \")\"\n+          WHITESPACE@138..139 \" \"\n+          AS_KW@139..141 \"as\"\n+          WHITESPACE@141..142 \" \"\n+          REF_TYPE@142..183\n+            AMP@142..143 \"&\"\n+            DYN_TRAIT_TYPE@143..183\n+              DYN_KW@143..146 \"dyn\"\n+              WHITESPACE@146..147 \" \"\n+              TYPE_BOUND_LIST@147..183\n+                TYPE_BOUND@147..175\n+                  PATH_TYPE@147..175\n+                    PATH@147..175\n+                      PATH_SEGMENT@147..175\n+                        NAME_REF@147..150\n+                          IDENT@147..150 \"Add\"\n+                        GENERIC_ARG_LIST@150..175\n+                          L_ANGLE@150..151 \"<\"\n+                          TYPE_ARG@151..156\n+                            PATH_TYPE@151..156\n+                              PATH@151..156\n+                                PATH_SEGMENT@151..156\n+                                  NAME_REF@151..156\n+                                    IDENT@151..156 \"Other\"\n+                          COMMA@156..157 \",\"\n+                          WHITESPACE@157..158 \" \"\n+                          ASSOC_TYPE_ARG@158..174\n+                            NAME_REF@158..164\n+                              IDENT@158..164 \"Output\"\n+                            WHITESPACE@164..165 \" \"\n+                            EQ@165..166 \"=\"\n+                            WHITESPACE@166..167 \" \"\n+                            PATH_TYPE@167..174\n+                              PATH@167..174\n+                                PATH_SEGMENT@167..174\n+                                  NAME_REF@167..174\n+                                    IDENT@167..174 \"Addable\"\n+                          R_ANGLE@174..175 \">\"\n+                WHITESPACE@175..176 \" \"\n+                PLUS@176..177 \"+\"\n+                WHITESPACE@177..178 \" \"\n+                TYPE_BOUND@178..183\n+                  PATH_TYPE@178..183\n+                    PATH@178..183\n+                      PATH_SEGMENT@178..183\n+                        NAME_REF@178..183\n+                          IDENT@178..183 \"Other\"\n+        SEMICOLON@183..184 \";\"\n+      WHITESPACE@184..185 \"\\n\"\n+      R_CURLY@185..186 \"}\"\n+  WHITESPACE@186..187 \"\\n\"\n+error 19..34: ambiguous `+` in a type\n+error 54..69: ambiguous `+` in a type\n+error 90..108: ambiguous `+` in a type\n+error 143..183: ambiguous `+` in a type"}, {"sha": "3a73d81bb5dc6afcfe9470eca8e18e6f04a7b20d", "filename": "crates/syntax/test_data/parser/err/0046_ambiguous_trait_object.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a184c83535230af39fad3e238b7422b4972d597e/crates%2Fsyntax%2Ftest_data%2Fparser%2Ferr%2F0046_ambiguous_trait_object.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a184c83535230af39fad3e238b7422b4972d597e/crates%2Fsyntax%2Ftest_data%2Fparser%2Ferr%2F0046_ambiguous_trait_object.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Ferr%2F0046_ambiguous_trait_object.rs?ref=a184c83535230af39fad3e238b7422b4972d597e", "patch": "@@ -0,0 +1,6 @@\n+type Foo<'a> = &'a dyn Send + Sync;\r\n+type Foo = *const dyn Send + Sync;\r\n+type Foo = fn() -> dyn Send + 'static;\r\n+fn main() {\r\n+    let b = (&a) as &dyn Add<Other, Output = Addable> + Other;\r\n+}\r"}, {"sha": "0cd868a83376567bf4714feac9a5d0c62da2b534", "filename": "crates/syntax/test_data/parser/ok/0069_multi_trait_object.rast", "status": "added", "additions": 200, "deletions": 0, "changes": 200, "blob_url": "https://github.com/rust-lang/rust/blob/a184c83535230af39fad3e238b7422b4972d597e/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0069_multi_trait_object.rast", "raw_url": "https://github.com/rust-lang/rust/raw/a184c83535230af39fad3e238b7422b4972d597e/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0069_multi_trait_object.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0069_multi_trait_object.rast?ref=a184c83535230af39fad3e238b7422b4972d597e", "patch": "@@ -0,0 +1,200 @@\n+SOURCE_FILE@0..195\n+  TYPE_ALIAS@0..37\n+    TYPE_KW@0..4 \"type\"\n+    WHITESPACE@4..5 \" \"\n+    NAME@5..8\n+      IDENT@5..8 \"Foo\"\n+    GENERIC_PARAM_LIST@8..12\n+      L_ANGLE@8..9 \"<\"\n+      LIFETIME_PARAM@9..11\n+        LIFETIME@9..11 \"\\'a\"\n+      R_ANGLE@11..12 \">\"\n+    WHITESPACE@12..13 \" \"\n+    EQ@13..14 \"=\"\n+    WHITESPACE@14..15 \" \"\n+    REF_TYPE@15..36\n+      AMP@15..16 \"&\"\n+      LIFETIME@16..18 \"\\'a\"\n+      WHITESPACE@18..19 \" \"\n+      PAREN_TYPE@19..36\n+        L_PAREN@19..20 \"(\"\n+        DYN_TRAIT_TYPE@20..35\n+          DYN_KW@20..23 \"dyn\"\n+          WHITESPACE@23..24 \" \"\n+          TYPE_BOUND_LIST@24..35\n+            TYPE_BOUND@24..28\n+              PATH_TYPE@24..28\n+                PATH@24..28\n+                  PATH_SEGMENT@24..28\n+                    NAME_REF@24..28\n+                      IDENT@24..28 \"Send\"\n+            WHITESPACE@28..29 \" \"\n+            PLUS@29..30 \"+\"\n+            WHITESPACE@30..31 \" \"\n+            TYPE_BOUND@31..35\n+              PATH_TYPE@31..35\n+                PATH@31..35\n+                  PATH_SEGMENT@31..35\n+                    NAME_REF@31..35\n+                      IDENT@31..35 \"Sync\"\n+        R_PAREN@35..36 \")\"\n+    SEMICOLON@36..37 \";\"\n+  WHITESPACE@37..38 \"\\n\"\n+  TYPE_ALIAS@38..74\n+    TYPE_KW@38..42 \"type\"\n+    WHITESPACE@42..43 \" \"\n+    NAME@43..46\n+      IDENT@43..46 \"Foo\"\n+    WHITESPACE@46..47 \" \"\n+    EQ@47..48 \"=\"\n+    WHITESPACE@48..49 \" \"\n+    PTR_TYPE@49..73\n+      STAR@49..50 \"*\"\n+      CONST_KW@50..55 \"const\"\n+      WHITESPACE@55..56 \" \"\n+      PAREN_TYPE@56..73\n+        L_PAREN@56..57 \"(\"\n+        DYN_TRAIT_TYPE@57..72\n+          DYN_KW@57..60 \"dyn\"\n+          WHITESPACE@60..61 \" \"\n+          TYPE_BOUND_LIST@61..72\n+            TYPE_BOUND@61..65\n+              PATH_TYPE@61..65\n+                PATH@61..65\n+                  PATH_SEGMENT@61..65\n+                    NAME_REF@61..65\n+                      IDENT@61..65 \"Send\"\n+            WHITESPACE@65..66 \" \"\n+            PLUS@66..67 \"+\"\n+            WHITESPACE@67..68 \" \"\n+            TYPE_BOUND@68..72\n+              PATH_TYPE@68..72\n+                PATH@68..72\n+                  PATH_SEGMENT@68..72\n+                    NAME_REF@68..72\n+                      IDENT@68..72 \"Sync\"\n+        R_PAREN@72..73 \")\"\n+    SEMICOLON@73..74 \";\"\n+  WHITESPACE@74..75 \"\\n\"\n+  TYPE_ALIAS@75..115\n+    TYPE_KW@75..79 \"type\"\n+    WHITESPACE@79..80 \" \"\n+    NAME@80..83\n+      IDENT@80..83 \"Foo\"\n+    WHITESPACE@83..84 \" \"\n+    EQ@84..85 \"=\"\n+    WHITESPACE@85..86 \" \"\n+    FN_PTR_TYPE@86..114\n+      FN_KW@86..88 \"fn\"\n+      PARAM_LIST@88..90\n+        L_PAREN@88..89 \"(\"\n+        R_PAREN@89..90 \")\"\n+      WHITESPACE@90..91 \" \"\n+      RET_TYPE@91..114\n+        THIN_ARROW@91..93 \"->\"\n+        WHITESPACE@93..94 \" \"\n+        PAREN_TYPE@94..114\n+          L_PAREN@94..95 \"(\"\n+          DYN_TRAIT_TYPE@95..113\n+            DYN_KW@95..98 \"dyn\"\n+            WHITESPACE@98..99 \" \"\n+            TYPE_BOUND_LIST@99..113\n+              TYPE_BOUND@99..103\n+                PATH_TYPE@99..103\n+                  PATH@99..103\n+                    PATH_SEGMENT@99..103\n+                      NAME_REF@99..103\n+                        IDENT@99..103 \"Send\"\n+              WHITESPACE@103..104 \" \"\n+              PLUS@104..105 \"+\"\n+              WHITESPACE@105..106 \" \"\n+              TYPE_BOUND@106..113\n+                LIFETIME@106..113 \"\\'static\"\n+          R_PAREN@113..114 \")\"\n+    SEMICOLON@114..115 \";\"\n+  WHITESPACE@115..116 \"\\n\"\n+  FN@116..194\n+    FN_KW@116..118 \"fn\"\n+    WHITESPACE@118..119 \" \"\n+    NAME@119..123\n+      IDENT@119..123 \"main\"\n+    PARAM_LIST@123..125\n+      L_PAREN@123..124 \"(\"\n+      R_PAREN@124..125 \")\"\n+    WHITESPACE@125..126 \" \"\n+    BLOCK_EXPR@126..194\n+      L_CURLY@126..127 \"{\"\n+      WHITESPACE@127..132 \"\\n    \"\n+      LET_STMT@132..192\n+        LET_KW@132..135 \"let\"\n+        WHITESPACE@135..136 \" \"\n+        IDENT_PAT@136..137\n+          NAME@136..137\n+            IDENT@136..137 \"b\"\n+        WHITESPACE@137..138 \" \"\n+        EQ@138..139 \"=\"\n+        WHITESPACE@139..140 \" \"\n+        CAST_EXPR@140..191\n+          PAREN_EXPR@140..144\n+            L_PAREN@140..141 \"(\"\n+            REF_EXPR@141..143\n+              AMP@141..142 \"&\"\n+              PATH_EXPR@142..143\n+                PATH@142..143\n+                  PATH_SEGMENT@142..143\n+                    NAME_REF@142..143\n+                      IDENT@142..143 \"a\"\n+            R_PAREN@143..144 \")\"\n+          WHITESPACE@144..145 \" \"\n+          AS_KW@145..147 \"as\"\n+          WHITESPACE@147..148 \" \"\n+          REF_TYPE@148..191\n+            AMP@148..149 \"&\"\n+            PAREN_TYPE@149..191\n+              L_PAREN@149..150 \"(\"\n+              DYN_TRAIT_TYPE@150..190\n+                DYN_KW@150..153 \"dyn\"\n+                WHITESPACE@153..154 \" \"\n+                TYPE_BOUND_LIST@154..190\n+                  TYPE_BOUND@154..182\n+                    PATH_TYPE@154..182\n+                      PATH@154..182\n+                        PATH_SEGMENT@154..182\n+                          NAME_REF@154..157\n+                            IDENT@154..157 \"Add\"\n+                          GENERIC_ARG_LIST@157..182\n+                            L_ANGLE@157..158 \"<\"\n+                            TYPE_ARG@158..163\n+                              PATH_TYPE@158..163\n+                                PATH@158..163\n+                                  PATH_SEGMENT@158..163\n+                                    NAME_REF@158..163\n+                                      IDENT@158..163 \"Other\"\n+                            COMMA@163..164 \",\"\n+                            WHITESPACE@164..165 \" \"\n+                            ASSOC_TYPE_ARG@165..181\n+                              NAME_REF@165..171\n+                                IDENT@165..171 \"Output\"\n+                              WHITESPACE@171..172 \" \"\n+                              EQ@172..173 \"=\"\n+                              WHITESPACE@173..174 \" \"\n+                              PATH_TYPE@174..181\n+                                PATH@174..181\n+                                  PATH_SEGMENT@174..181\n+                                    NAME_REF@174..181\n+                                      IDENT@174..181 \"Addable\"\n+                            R_ANGLE@181..182 \">\"\n+                  WHITESPACE@182..183 \" \"\n+                  PLUS@183..184 \"+\"\n+                  WHITESPACE@184..185 \" \"\n+                  TYPE_BOUND@185..190\n+                    PATH_TYPE@185..190\n+                      PATH@185..190\n+                        PATH_SEGMENT@185..190\n+                          NAME_REF@185..190\n+                            IDENT@185..190 \"Other\"\n+              R_PAREN@190..191 \")\"\n+        SEMICOLON@191..192 \";\"\n+      WHITESPACE@192..193 \"\\n\"\n+      R_CURLY@193..194 \"}\"\n+  WHITESPACE@194..195 \"\\n\""}, {"sha": "97eb79c486f1d5c872e38dd709c08da9a138c4a1", "filename": "crates/syntax/test_data/parser/ok/0069_multi_trait_object.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a184c83535230af39fad3e238b7422b4972d597e/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0069_multi_trait_object.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a184c83535230af39fad3e238b7422b4972d597e/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0069_multi_trait_object.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0069_multi_trait_object.rs?ref=a184c83535230af39fad3e238b7422b4972d597e", "patch": "@@ -0,0 +1,6 @@\n+type Foo<'a> = &'a (dyn Send + Sync);\n+type Foo = *const (dyn Send + Sync);\n+type Foo = fn() -> (dyn Send + 'static);\n+fn main() {\n+    let b = (&a) as &(dyn Add<Other, Output = Addable> + Other);\n+}"}]}