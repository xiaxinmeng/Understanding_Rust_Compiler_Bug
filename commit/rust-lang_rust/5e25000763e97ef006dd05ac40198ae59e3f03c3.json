{"sha": "5e25000763e97ef006dd05ac40198ae59e3f03c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlMjUwMDA3NjNlOTdlZjAwNmRkMDVhYzQwMTk4YWU1OWUzZjAzYzM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-11T01:39:44Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-11T01:41:01Z"}, "message": "Profiling example", "tree": {"sha": "7933c8914e42915c4cb62cba318a6731de2f808b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7933c8914e42915c4cb62cba318a6731de2f808b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e25000763e97ef006dd05ac40198ae59e3f03c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e25000763e97ef006dd05ac40198ae59e3f03c3", "html_url": "https://github.com/rust-lang/rust/commit/5e25000763e97ef006dd05ac40198ae59e3f03c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e25000763e97ef006dd05ac40198ae59e3f03c3/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7ba7f47a79a2881cf208ef9d944609e8fd4eec9", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7ba7f47a79a2881cf208ef9d944609e8fd4eec9", "html_url": "https://github.com/rust-lang/rust/commit/e7ba7f47a79a2881cf208ef9d944609e8fd4eec9"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "d8888e050dbd4e68f747367d3fea6f4bfc1bfdfe", "filename": "crates/ra_hir_ty/src/infer.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5e25000763e97ef006dd05ac40198ae59e3f03c3/crates%2Fra_hir_ty%2Fsrc%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e25000763e97ef006dd05ac40198ae59e3f03c3/crates%2Fra_hir_ty%2Fsrc%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Finfer.rs?ref=5e25000763e97ef006dd05ac40198ae59e3f03c3", "patch": "@@ -65,6 +65,11 @@ mod coerce;\n /// The entry point of type inference.\n pub(crate) fn infer_query(db: &dyn HirDatabase, def: DefWithBodyId) -> Arc<InferenceResult> {\n     let _p = profile(\"infer_query\");\n+    let _cpu_profieler;\n+    if ra_prof::Scope::is_active() {\n+        _cpu_profieler = ra_prof::cpu_profiler();\n+    }\n+\n     let resolver = def.resolver(db.upcast());\n     let mut ctx = InferenceContext::new(db, def, resolver);\n "}, {"sha": "2a285718e28991ca05b11c6e246303e5508554e4", "filename": "crates/ra_ide/src/completion.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5e25000763e97ef006dd05ac40198ae59e3f03c3/crates%2Fra_ide%2Fsrc%2Fcompletion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e25000763e97ef006dd05ac40198ae59e3f03c3/crates%2Fra_ide%2Fsrc%2Fcompletion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion.rs?ref=5e25000763e97ef006dd05ac40198ae59e3f03c3", "patch": "@@ -106,6 +106,7 @@ pub(crate) fn completions(\n     config: &CompletionConfig,\n     position: FilePosition,\n ) -> Option<Completions> {\n+    let _s = ra_prof::Scope::enter();\n     let ctx = CompletionContext::new(db, position, config)?;\n \n     let mut acc = Completions::default();"}, {"sha": "db9b59ed64e2598170d75e2e61375bbdad383550", "filename": "crates/ra_prof/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5e25000763e97ef006dd05ac40198ae59e3f03c3/crates%2Fra_prof%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/5e25000763e97ef006dd05ac40198ae59e3f03c3/crates%2Fra_prof%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_prof%2FCargo.toml?ref=5e25000763e97ef006dd05ac40198ae59e3f03c3", "patch": "@@ -24,4 +24,4 @@ cpu_profiler = []\n # Uncomment to enable for the whole crate graph\n # default = [ \"backtrace\" ]\n # default = [ \"jemalloc\" ]\n-# default = [ \"cpu_profiler\" ]\n+default = [ \"cpu_profiler\" ]"}, {"sha": "7163a842431cbe2731d50063b65a8f7b659c6aee", "filename": "crates/ra_prof/src/lib.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5e25000763e97ef006dd05ac40198ae59e3f03c3/crates%2Fra_prof%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e25000763e97ef006dd05ac40198ae59e3f03c3/crates%2Fra_prof%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_prof%2Fsrc%2Flib.rs?ref=5e25000763e97ef006dd05ac40198ae59e3f03c3", "patch": "@@ -66,14 +66,19 @@ impl Drop for Scope {\n /// 2. Build with `cpu_profiler` feature.\n /// 3. Tun the code, the *raw* output would be in the `./out.profile` file.\n /// 4. Install pprof for visualization (https://github.com/google/pprof).\n-/// 5. Use something like `pprof -svg target/release/rust-analyzer ./out.profile` to see the results.\n+/// 5. Bump sampling frequency to once per ms: `export CPUPROFILE_FREQUENCY=1000`\n+/// 6. Use something like `pprof -svg target/release/rust-analyzer ./out.profile` to see the results.\n ///\n /// For example, here's how I run profiling on NixOS:\n ///\n /// ```bash\n /// $ nix-shell -p gperftools --run \\\n ///     'cargo run --release -p rust-analyzer -- parse < ~/projects/rustbench/parser.rs > /dev/null'\n /// ```\n+///\n+/// See this diff for how to profile completions:\n+///\n+/// https://github.com/rust-analyzer/rust-analyzer/pull/5306\n #[derive(Debug)]\n pub struct CpuProfiler {\n     _private: (),"}]}