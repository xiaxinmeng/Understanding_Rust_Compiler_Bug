{"sha": "2e6711fca5005364e908eae61ece8083cd334124", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlNjcxMWZjYTUwMDUzNjRlOTA4ZWFlNjFlY2U4MDgzY2QzMzQxMjQ=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-04-20T01:46:22Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-04-20T01:46:54Z"}, "message": "Small fast-path hack to ty.hash_ty and eq_ty.", "tree": {"sha": "7f1b7650734cccb1c0f7df4be38913bc7eb43dab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f1b7650734cccb1c0f7df4be38913bc7eb43dab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e6711fca5005364e908eae61ece8083cd334124", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e6711fca5005364e908eae61ece8083cd334124", "html_url": "https://github.com/rust-lang/rust/commit/2e6711fca5005364e908eae61ece8083cd334124", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e6711fca5005364e908eae61ece8083cd334124/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1080ac5349718e45d4c6d2bb20f7b0496e19cbd6", "url": "https://api.github.com/repos/rust-lang/rust/commits/1080ac5349718e45d4c6d2bb20f7b0496e19cbd6", "html_url": "https://github.com/rust-lang/rust/commit/1080ac5349718e45d4c6d2bb20f7b0496e19cbd6"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "0723d356ab6f6368a8fe347882ba2fa881ff20a5", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/2e6711fca5005364e908eae61ece8083cd334124/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e6711fca5005364e908eae61ece8083cd334124/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=2e6711fca5005364e908eae61ece8083cd334124", "patch": "@@ -661,12 +661,57 @@ fn def_to_str(ast.def_id did) -> str {\n     ret #fmt(\"%d:%d\", did._0, did._1);\n }\n \n+fn simple_ty_code(&@t ty) -> uint {\n+    alt (ty.struct) {\n+        case (ty_nil) { ret 0u; }\n+        case (ty_bool) { ret 1u; }\n+        case (ty_int) { ret 2u; }\n+        case (ty_float) { ret 3u; }\n+        case (ty_uint) { ret 4u; }\n+        case (ty_machine(?tm)) {\n+            alt (tm) {\n+                case (common.ty_i8) { ret 5u; }\n+                case (common.ty_i16) { ret 6u; }\n+                case (common.ty_i32) { ret 7u; }\n+                case (common.ty_i64) { ret 8u; }\n+\n+                case (common.ty_u8) { ret 9u; }\n+                case (common.ty_u16) { ret 10u; }\n+                case (common.ty_u32) { ret 11u; }\n+                case (common.ty_u64) { ret 12u; }\n+\n+                case (common.ty_f32) { ret 13u; }\n+                case (common.ty_f64) { ret 14u; }\n+            }\n+        }\n+        case (ty_char) { ret 15u; }\n+        case (ty_str) { ret 16u; }\n+        case (ty_task) { ret 17u; }\n+        case (ty_type) { ret 18u; }\n+        case (ty_native) { ret 19u; }\n+        case (_) {\n+        }\n+    }\n+    ret 0xffffu;\n+}\n+\n fn hash_ty(&@t ty) -> uint {\n+    auto s = simple_ty_code(ty);\n+    if (s != 0xffffu) {\n+        ret s;\n+    }\n     auto f = def_to_str;\n     ret _str.hash(metadata.ty_str(ty, f));\n }\n \n fn eq_ty(&@t a, &@t b) -> bool {\n+\n+    auto sa = simple_ty_code(a);\n+    if (sa != 0xffffu) {\n+        auto sb = simple_ty_code(b);\n+        ret sa == sb;\n+    }\n+\n     // FIXME: this is gross, but I think it's safe, and I don't think writing\n     // a giant function to handle all the cases is necessary when structural\n     // equality will someday save the day."}]}