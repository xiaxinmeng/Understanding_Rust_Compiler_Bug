{"sha": "41d7d8e35e54576d55dc6ed3649a6a6e7d6b749e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxZDdkOGUzNWU1NDU3NmQ1NWRjNmVkMzY0OWE2YTZlN2Q2Yjc0OWU=", "commit": {"author": {"name": "Irina Popa", "email": "irinagpopa@gmail.com", "date": "2018-07-13T10:06:06Z"}, "committer": {"name": "Irina Popa", "email": "irinagpopa@gmail.com", "date": "2018-07-30T17:10:32Z"}, "message": "rustc_codegen_llvm: use safe references for Archive.", "tree": {"sha": "df5d5d7bc16b6c9f7ff0cb0f7456e6e55e784adc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df5d5d7bc16b6c9f7ff0cb0f7456e6e55e784adc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41d7d8e35e54576d55dc6ed3649a6a6e7d6b749e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41d7d8e35e54576d55dc6ed3649a6a6e7d6b749e", "html_url": "https://github.com/rust-lang/rust/commit/41d7d8e35e54576d55dc6ed3649a6a6e7d6b749e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41d7d8e35e54576d55dc6ed3649a6a6e7d6b749e/comments", "author": {"login": "irinagpopa", "id": 32459019, "node_id": "MDQ6VXNlcjMyNDU5MDE5", "avatar_url": "https://avatars.githubusercontent.com/u/32459019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irinagpopa", "html_url": "https://github.com/irinagpopa", "followers_url": "https://api.github.com/users/irinagpopa/followers", "following_url": "https://api.github.com/users/irinagpopa/following{/other_user}", "gists_url": "https://api.github.com/users/irinagpopa/gists{/gist_id}", "starred_url": "https://api.github.com/users/irinagpopa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irinagpopa/subscriptions", "organizations_url": "https://api.github.com/users/irinagpopa/orgs", "repos_url": "https://api.github.com/users/irinagpopa/repos", "events_url": "https://api.github.com/users/irinagpopa/events{/privacy}", "received_events_url": "https://api.github.com/users/irinagpopa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "irinagpopa", "id": 32459019, "node_id": "MDQ6VXNlcjMyNDU5MDE5", "avatar_url": "https://avatars.githubusercontent.com/u/32459019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irinagpopa", "html_url": "https://github.com/irinagpopa", "followers_url": "https://api.github.com/users/irinagpopa/followers", "following_url": "https://api.github.com/users/irinagpopa/following{/other_user}", "gists_url": "https://api.github.com/users/irinagpopa/gists{/gist_id}", "starred_url": "https://api.github.com/users/irinagpopa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irinagpopa/subscriptions", "organizations_url": "https://api.github.com/users/irinagpopa/orgs", "repos_url": "https://api.github.com/users/irinagpopa/repos", "events_url": "https://api.github.com/users/irinagpopa/events{/privacy}", "received_events_url": "https://api.github.com/users/irinagpopa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e3a70526952c285a3187b855e2cf3398afe6b38", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e3a70526952c285a3187b855e2cf3398afe6b38", "html_url": "https://github.com/rust-lang/rust/commit/0e3a70526952c285a3187b855e2cf3398afe6b38"}], "stats": {"total": 28, "additions": 11, "deletions": 17}, "files": [{"sha": "98a08f8501af9b482a558501f1488e439b8b135c", "filename": "src/librustc_codegen_llvm/llvm/archive_ro.rs", "status": "modified", "additions": 8, "deletions": 13, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/41d7d8e35e54576d55dc6ed3649a6a6e7d6b749e/src%2Flibrustc_codegen_llvm%2Fllvm%2Farchive_ro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41d7d8e35e54576d55dc6ed3649a6a6e7d6b749e/src%2Flibrustc_codegen_llvm%2Fllvm%2Farchive_ro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm%2Farchive_ro.rs?ref=41d7d8e35e54576d55dc6ed3649a6a6e7d6b749e", "patch": "@@ -10,16 +10,14 @@\n \n //! A wrapper around LLVM's archive (.a) code\n \n-use super::ArchiveRef;\n-\n use std::ffi::CString;\n use std::marker;\n use std::path::Path;\n use std::slice;\n use std::str;\n \n pub struct ArchiveRO {\n-    ptr: ArchiveRef,\n+    raw: &'static mut super::Archive,\n }\n \n unsafe impl Send for ArchiveRO {}\n@@ -44,12 +42,9 @@ impl ArchiveRO {\n     pub fn open(dst: &Path) -> Result<ArchiveRO, String> {\n         return unsafe {\n             let s = path2cstr(dst);\n-            let ar = super::LLVMRustOpenArchive(s.as_ptr());\n-            if ar.is_null() {\n-                Err(super::last_error().unwrap_or(\"failed to open archive\".to_string()))\n-            } else {\n-                Ok(ArchiveRO { ptr: ar })\n-            }\n+            let ar = super::LLVMRustOpenArchive(s.as_ptr())\n+                .ok_or_else(|| super::last_error().unwrap_or(\"failed to open archive\".to_string()))?;\n+            Ok(ArchiveRO { raw: ar })\n         };\n \n         #[cfg(unix)]\n@@ -65,14 +60,14 @@ impl ArchiveRO {\n         }\n     }\n \n-    pub fn raw(&self) -> ArchiveRef {\n-        self.ptr\n+    pub fn raw(&self) -> &super::Archive {\n+        self.raw\n     }\n \n     pub fn iter(&self) -> Iter {\n         unsafe {\n             Iter {\n-                ptr: super::LLVMRustArchiveIteratorNew(self.ptr),\n+                ptr: super::LLVMRustArchiveIteratorNew(self.raw),\n                 _data: marker::PhantomData,\n             }\n         }\n@@ -82,7 +77,7 @@ impl ArchiveRO {\n impl Drop for ArchiveRO {\n     fn drop(&mut self) {\n         unsafe {\n-            super::LLVMRustDestroyArchive(self.ptr);\n+            super::LLVMRustDestroyArchive(&mut *(self.raw as *mut _));\n         }\n     }\n }"}, {"sha": "f6d206cf5adce40e3441f50fa35ba4764e94774b", "filename": "src/librustc_codegen_llvm/llvm/ffi.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/41d7d8e35e54576d55dc6ed3649a6a6e7d6b749e/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41d7d8e35e54576d55dc6ed3649a6a6e7d6b749e/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs?ref=41d7d8e35e54576d55dc6ed3649a6a6e7d6b749e", "patch": "@@ -399,7 +399,6 @@ pub type SectionIteratorRef = *mut SectionIterator;\n extern { pub type Pass; }\n extern { pub type TargetMachine; }\n extern { pub type Archive; }\n-pub type ArchiveRef = *mut Archive;\n extern { pub type ArchiveIterator; }\n pub type ArchiveIteratorRef = *mut ArchiveIterator;\n extern { pub type ArchiveChild; }\n@@ -1471,14 +1470,14 @@ extern \"C\" {\n     pub fn LLVMRustRunRestrictionPass(M: &Module, syms: *const *const c_char, len: size_t);\n     pub fn LLVMRustMarkAllFunctionsNounwind(M: &Module);\n \n-    pub fn LLVMRustOpenArchive(path: *const c_char) -> ArchiveRef;\n-    pub fn LLVMRustArchiveIteratorNew(AR: ArchiveRef) -> ArchiveIteratorRef;\n+    pub fn LLVMRustOpenArchive(path: *const c_char) -> Option<&'static mut Archive>;\n+    pub fn LLVMRustArchiveIteratorNew(AR: &Archive) -> ArchiveIteratorRef;\n     pub fn LLVMRustArchiveIteratorNext(AIR: ArchiveIteratorRef) -> ArchiveChildRef;\n     pub fn LLVMRustArchiveChildName(ACR: ArchiveChildRef, size: *mut size_t) -> *const c_char;\n     pub fn LLVMRustArchiveChildData(ACR: ArchiveChildRef, size: *mut size_t) -> *const c_char;\n     pub fn LLVMRustArchiveChildFree(ACR: ArchiveChildRef);\n     pub fn LLVMRustArchiveIteratorFree(AIR: ArchiveIteratorRef);\n-    pub fn LLVMRustDestroyArchive(AR: ArchiveRef);\n+    pub fn LLVMRustDestroyArchive(AR: &'static mut Archive);\n \n     pub fn LLVMRustGetSectionName(SI: SectionIteratorRef, data: *mut *const c_char) -> size_t;\n "}]}