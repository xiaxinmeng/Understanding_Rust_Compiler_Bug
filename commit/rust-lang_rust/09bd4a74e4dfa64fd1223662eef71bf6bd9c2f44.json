{"sha": "09bd4a74e4dfa64fd1223662eef71bf6bd9c2f44", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5YmQ0YTc0ZTRkZmE2NGZkMTIyMzY2MmVlZjcxYmY2YmQ5YzJmNDQ=", "commit": {"author": {"name": "Ga\u00ebtan Cassiers", "email": "gaetan.cassiers@gmail.com", "date": "2015-05-24T21:46:02Z"}, "committer": {"name": "Ga\u00ebtan Cassiers", "email": "gaetan.cassiers@gmail.com", "date": "2015-05-24T21:46:02Z"}, "message": "Avoid dangling )", "tree": {"sha": "10ce1751bb8bd7c9f8c6b5b956b5317621a64df5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10ce1751bb8bd7c9f8c6b5b956b5317621a64df5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09bd4a74e4dfa64fd1223662eef71bf6bd9c2f44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09bd4a74e4dfa64fd1223662eef71bf6bd9c2f44", "html_url": "https://github.com/rust-lang/rust/commit/09bd4a74e4dfa64fd1223662eef71bf6bd9c2f44", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09bd4a74e4dfa64fd1223662eef71bf6bd9c2f44/comments", "author": {"login": "cassiersg", "id": 9348542, "node_id": "MDQ6VXNlcjkzNDg1NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/9348542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cassiersg", "html_url": "https://github.com/cassiersg", "followers_url": "https://api.github.com/users/cassiersg/followers", "following_url": "https://api.github.com/users/cassiersg/following{/other_user}", "gists_url": "https://api.github.com/users/cassiersg/gists{/gist_id}", "starred_url": "https://api.github.com/users/cassiersg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cassiersg/subscriptions", "organizations_url": "https://api.github.com/users/cassiersg/orgs", "repos_url": "https://api.github.com/users/cassiersg/repos", "events_url": "https://api.github.com/users/cassiersg/events{/privacy}", "received_events_url": "https://api.github.com/users/cassiersg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cassiersg", "id": 9348542, "node_id": "MDQ6VXNlcjkzNDg1NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/9348542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cassiersg", "html_url": "https://github.com/cassiersg", "followers_url": "https://api.github.com/users/cassiersg/followers", "following_url": "https://api.github.com/users/cassiersg/following{/other_user}", "gists_url": "https://api.github.com/users/cassiersg/gists{/gist_id}", "starred_url": "https://api.github.com/users/cassiersg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cassiersg/subscriptions", "organizations_url": "https://api.github.com/users/cassiersg/orgs", "repos_url": "https://api.github.com/users/cassiersg/repos", "events_url": "https://api.github.com/users/cassiersg/events{/privacy}", "received_events_url": "https://api.github.com/users/cassiersg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1fc693c5e5676f93a331a0498dc6ba36193cd66", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1fc693c5e5676f93a331a0498dc6ba36193cd66", "html_url": "https://github.com/rust-lang/rust/commit/c1fc693c5e5676f93a331a0498dc6ba36193cd66"}], "stats": {"total": 32, "additions": 6, "deletions": 26}, "files": [{"sha": "79234eb7f1376a481977d1d32e04c0a53d319b05", "filename": "src/expr.rs", "status": "modified", "additions": 4, "deletions": 15, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/09bd4a74e4dfa64fd1223662eef71bf6bd9c2f44/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09bd4a74e4dfa64fd1223662eef71bf6bd9c2f44/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=09bd4a74e4dfa64fd1223662eef71bf6bd9c2f44", "patch": "@@ -127,24 +127,13 @@ impl<'a> FmtVisitor<'a> {\n \n     fn rewrite_paren(&mut self, subexpr: &ast::Expr, width: usize, offset: usize) -> String {\n         debug!(\"rewrite_paren, width: {}, offset: {}\", width, offset);\n-        // 1 is for opening paren\n-        let subexpr_str = self.rewrite_expr(subexpr, width-1, offset+1);\n+        // 1 is for opening paren, 2 is for opening+closing, we want to keep the closing\n+        // paren on the same line as the subexpr\n+        let subexpr_str = self.rewrite_expr(subexpr, width-2, offset+1);\n         debug!(\"rewrite_paren, subexpr_str: `{}`\", subexpr_str);\n-        let mut lines = subexpr_str.rsplit('\\n');\n-        let last_line_len = lines.next().unwrap().len();\n-        let last_line_offset = match lines.next() {\n-            None => offset+1,\n-            Some(_) => 0,\n-        };\n-        if width + offset - last_line_offset - last_line_len > 0 {\n-            format!(\"({})\", subexpr_str)\n-        } else {\n-            // FIXME That's correct unless we have width < 2. Return an Option for such cases ?\n-            format!(\"({}\\n{} )\", subexpr_str, make_indent(offset))\n-        }\n+        format!(\"({})\", subexpr_str)\n     }\n \n-\n     pub fn rewrite_expr(&mut self, expr: &ast::Expr, width: usize, offset: usize) -> String {\n         match expr.node {\n             ast::Expr_::ExprLit(ref l) => {"}, {"sha": "9816988357582a4d9d407f892a7f74bff97baaad", "filename": "tests/idem/paren.rs", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/09bd4a74e4dfa64fd1223662eef71bf6bd9c2f44/tests%2Fidem%2Fparen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09bd4a74e4dfa64fd1223662eef71bf6bd9c2f44/tests%2Fidem%2Fparen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fidem%2Fparen.rs?ref=09bd4a74e4dfa64fd1223662eef71bf6bd9c2f44", "patch": "@@ -2,15 +2,6 @@\n \n fn foo() {\n     let very_long_variable_name = (a + first + simple + test);\n-    let very_long_variable_name = (write + something + here + to + fill + the + line + 12 + 34 + 567\n-                                   );\n-    let very_long_variable_name = (write + something + here + to + fill + the + line + 12 + 34 + 567\n-                                   + 78);\n-    let very_long_variable_name = (write + something + here + to + fill + the + line + 12 + 34 + 567\n-                                   + 78 + fill + another + line + AAAA + BBBBBBB + CCCCCCCCCCCCCCCCC\n-                                   );\n-    let very_long_variable_name = (write + something + here + to + fill + the + line + 12 + 34 + 567\n-                                   + 78 + fill + another + line + AAAA + BBBBBBB + CCCCCCCCCCCCCCC +\n-                                   DDDDDDD + EEEEEE);\n-\n+    let very_long_variable_name = (a + first + simple + test + AAAAAAAAAAAAA + BBBBBBBBBBBBBBBBBB +\n+                                   b + c);\n }"}]}