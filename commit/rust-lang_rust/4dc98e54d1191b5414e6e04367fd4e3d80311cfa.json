{"sha": "4dc98e54d1191b5414e6e04367fd4e3d80311cfa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkYzk4ZTU0ZDExOTFiNTQxNGU2ZTA0MzY3ZmQ0ZTNkODAzMTFjZmE=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-01T01:10:51Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-01T01:10:51Z"}, "message": "Make the ugly detailed leak-spray on rustc failures optional.", "tree": {"sha": "d50353cc01e308632cb1c8938a952bb91289df67", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d50353cc01e308632cb1c8938a952bb91289df67"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4dc98e54d1191b5414e6e04367fd4e3d80311cfa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4dc98e54d1191b5414e6e04367fd4e3d80311cfa", "html_url": "https://github.com/rust-lang/rust/commit/4dc98e54d1191b5414e6e04367fd4e3d80311cfa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4dc98e54d1191b5414e6e04367fd4e3d80311cfa/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45043374ff4d4eb48bed52ff8f8251f9cddf239a", "url": "https://api.github.com/repos/rust-lang/rust/commits/45043374ff4d4eb48bed52ff8f8251f9cddf239a", "html_url": "https://github.com/rust-lang/rust/commit/45043374ff4d4eb48bed52ff8f8251f9cddf239a"}], "stats": {"total": 29, "additions": 22, "deletions": 7}, "files": [{"sha": "fb19620f8b9512323d2647055c2b2689e5b4817d", "filename": "src/rt/memory_region.cpp", "status": "modified", "additions": 21, "deletions": 7, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/4dc98e54d1191b5414e6e04367fd4e3d80311cfa/src%2Frt%2Fmemory_region.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/4dc98e54d1191b5414e6e04367fd4e3d80311cfa/src%2Frt%2Fmemory_region.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fmemory_region.cpp?ref=4dc98e54d1191b5414e6e04367fd4e3d80311cfa", "patch": "@@ -5,12 +5,13 @@\n \n memory_region::memory_region(rust_srv *srv, bool synchronized) :\n     _srv(srv), _parent(NULL), _live_allocations(0),\n+    _detailed_leaks(getenv(\"RUST_DETAILED_LEAKS\") != NULL),\n     _synchronized(synchronized) {\n-    // Nop.\n }\n \n memory_region::memory_region(memory_region *parent) :\n     _srv(parent->_srv), _parent(parent), _live_allocations(0),\n+    _detailed_leaks(parent->_detailed_leaks),\n     _synchronized(parent->_synchronized) {\n     // Nop.\n }\n@@ -83,15 +84,28 @@ memory_region::~memory_region() {\n     }\n     char msg[128];\n     snprintf(msg, sizeof(msg),\n-        \"leaked memory in rust main loop (%\" PRIuPTR \" objects)\",\n-        _live_allocations);\n+             \"leaked memory in rust main loop (%\" PRIuPTR \" objects)\",\n+             _live_allocations);\n #ifdef TRACK_ALLOCATIONS\n-    for (size_t i = 0; i < _allocation_list.size(); i++) {\n-        if (_allocation_list[i] != NULL) {\n-            printf(\"allocation 0x%\" PRIxPTR \" was not freed\\n\",\n-                (uintptr_t) _allocation_list[i]);\n+    if (_detailed_leaks) {\n+        for (size_t i = 0; i < _allocation_list.size(); i++) {\n+            if (_allocation_list[i] != NULL) {\n+                printf(\"allocation 0x%\" PRIxPTR \" was not freed\\n\",\n+                       (uintptr_t) _allocation_list[i]);\n+            }\n         }\n     }\n #endif\n     _srv->fatal(msg, __FILE__, __LINE__, \"%d objects\", _live_allocations);\n }\n+\n+//\n+// Local Variables:\n+// mode: C++\n+// fill-column: 78;\n+// indent-tabs-mode: nil\n+// c-basic-offset: 4\n+// buffer-file-coding-system: utf-8-unix\n+// compile-command: \"make -k -C .. 2>&1 | sed -e 's/\\\\/x\\\\//x:\\\\//g'\";\n+// End:\n+//"}, {"sha": "b483c60218cd224b0eab20e336c6ed1c4e88bbf2", "filename": "src/rt/memory_region.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4dc98e54d1191b5414e6e04367fd4e3d80311cfa/src%2Frt%2Fmemory_region.h", "raw_url": "https://github.com/rust-lang/rust/raw/4dc98e54d1191b5414e6e04367fd4e3d80311cfa/src%2Frt%2Fmemory_region.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fmemory_region.h?ref=4dc98e54d1191b5414e6e04367fd4e3d80311cfa", "patch": "@@ -19,6 +19,7 @@ class memory_region {\n     memory_region *_parent;\n     size_t _live_allocations;\n     array_list<void *> _allocation_list;\n+    const bool _detailed_leaks;\n     const bool _synchronized;\n     lock_and_signal _lock;\n public:"}]}