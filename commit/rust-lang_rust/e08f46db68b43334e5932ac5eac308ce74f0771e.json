{"sha": "e08f46db68b43334e5932ac5eac308ce74f0771e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwOGY0NmRiNjhiNDMzMzRlNTkzMmFjNWVhYzMwOGNlNzRmMDc3MWU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-02T08:55:27Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-06T03:39:56Z"}, "message": "rt: Move receive code into rust_port", "tree": {"sha": "c7f3abc65418ab58ee90f957a76f933b6f830cf9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7f3abc65418ab58ee90f957a76f933b6f830cf9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e08f46db68b43334e5932ac5eac308ce74f0771e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e08f46db68b43334e5932ac5eac308ce74f0771e", "html_url": "https://github.com/rust-lang/rust/commit/e08f46db68b43334e5932ac5eac308ce74f0771e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e08f46db68b43334e5932ac5eac308ce74f0771e/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77295c56c5b7edec061cbcd374ef584171088cbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/77295c56c5b7edec061cbcd374ef584171088cbc", "html_url": "https://github.com/rust-lang/rust/commit/77295c56c5b7edec061cbcd374ef584171088cbc"}], "stats": {"total": 52, "additions": 24, "deletions": 28}, "files": [{"sha": "b6ad9397e9c034fe946c6b7aef5a466ec336c076", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 1, "deletions": 23, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e08f46db68b43334e5932ac5eac308ce74f0771e/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/e08f46db68b43334e5932ac5eac308ce74f0771e/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=e08f46db68b43334e5932ac5eac308ce74f0771e", "patch": "@@ -544,29 +544,7 @@ rust_task_yield(rust_task *task, bool *killed) {\n \n extern \"C\" CDECL void\n port_recv(uintptr_t *dptr, rust_port *port, uintptr_t *yield) {\n-    *yield = false;\n-    rust_task *task = rust_task_thread::get_task();\n-    {\n-        scoped_lock with(port->lock);\n-\n-        LOG(task, comm, \"port: 0x%\" PRIxPTR \", dptr: 0x%\" PRIxPTR\n-            \", size: 0x%\" PRIxPTR,\n-            (uintptr_t) port, (uintptr_t) dptr, port->unit_sz);\n-\n-        if (port->receive(dptr)) {\n-            return;\n-        }\n-\n-        // No data was buffered on any incoming channel, so block this task on\n-        // the port. Remember the rendezvous location so that any sender task\n-        // can write to it before waking up this task.\n-\n-        LOG(task, comm, \"<=== waiting for rendezvous data ===\");\n-        task->rendezvous_ptr = dptr;\n-        task->block(port, \"waiting for rendezvous data\");\n-    }\n-    *yield = true;\n-    return;\n+    port->receive(dptr, yield);\n }\n \n extern \"C\" CDECL void"}, {"sha": "41884f8f60c9fad838550dd00b6604b7c7da5223", "filename": "src/rt/rust_port.cpp", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/e08f46db68b43334e5932ac5eac308ce74f0771e/src%2Frt%2Frust_port.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/e08f46db68b43334e5932ac5eac308ce74f0771e/src%2Frt%2Frust_port.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_port.cpp?ref=e08f46db68b43334e5932ac5eac308ce74f0771e", "patch": "@@ -63,14 +63,32 @@ void rust_port::send(void *sptr) {\n     }\n }\n \n-bool rust_port::receive(void *dptr) {\n-    I(task->thread, lock.lock_held_by_current_thread());\n+void rust_port::receive(void *dptr, uintptr_t *yield) {\n+    I(task->thread, !lock.lock_held_by_current_thread());\n+\n+    LOG(task, comm, \"port: 0x%\" PRIxPTR \", dptr: 0x%\" PRIxPTR\n+        \", size: 0x%\" PRIxPTR,\n+        (uintptr_t) this, (uintptr_t) dptr, unit_sz);\n+\n+    scoped_lock with(lock);\n+\n+    *yield = false;\n+\n     if (buffer.is_empty() == false) {\n         buffer.dequeue(dptr);\n         LOG(task, comm, \"<=== read data ===\");\n-        return true;\n+        return;\n     }\n-    return false;\n+\n+    // No data was buffered on any incoming channel, so block this task on\n+    // the port. Remember the rendezvous location so that any sender task\n+    // can write to it before waking up this task.\n+\n+    LOG(task, comm, \"<=== waiting for rendezvous data ===\");\n+    task->rendezvous_ptr = (uintptr_t*) dptr;\n+    task->block(this, \"waiting for rendezvous data\");\n+\n+    *yield = true;\n }\n \n size_t rust_port::size() {"}, {"sha": "0fbfeeac2eced57c9ebb0a5af03dae66e787bd09", "filename": "src/rt/rust_port.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e08f46db68b43334e5932ac5eac308ce74f0771e/src%2Frt%2Frust_port.h", "raw_url": "https://github.com/rust-lang/rust/raw/e08f46db68b43334e5932ac5eac308ce74f0771e/src%2Frt%2Frust_port.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_port.h?ref=e08f46db68b43334e5932ac5eac308ce74f0771e", "patch": "@@ -20,7 +20,7 @@ class rust_port : public kernel_owned<rust_port>, public rust_cond {\n     ~rust_port();\n     void log_state();\n     void send(void *sptr);\n-    bool receive(void *dptr);\n+    void receive(void *dptr, uintptr_t *yield);\n     size_t size();\n     void detach();\n };"}]}