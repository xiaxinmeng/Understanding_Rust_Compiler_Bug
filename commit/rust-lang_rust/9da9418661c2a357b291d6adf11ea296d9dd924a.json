{"sha": "9da9418661c2a357b291d6adf11ea296d9dd924a", "node_id": "C_kwDOAAsO6NoAKDlkYTk0MTg2NjFjMmEzNTdiMjkxZDZhZGYxMWVhMjk2ZDlkZDkyNGE", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-03-31T12:52:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-31T12:52:11Z"}, "message": "Merge #11861\n\n11861: internal: Add \"view file text\" command to debug sync issues r=jonas-schievink a=jonas-schievink\n\nI saw a file sync bug the other day but didn't know how to further debug it. This command might give a clue as to what's wrong and help debug issues like https://github.com/rust-analyzer/rust-analyzer/issues/4829.\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonas.schievink@ferrous-systems.com>", "tree": {"sha": "045d7021543058b40ecbf3b9ccd40928f63bf7c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/045d7021543058b40ecbf3b9ccd40928f63bf7c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9da9418661c2a357b291d6adf11ea296d9dd924a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiRaP7CRBK7hj4Ov3rIwAAPF0IABvsHDxqS29ApdP3mLeSWLrA\n6ZAiGKXJozlUzI1XOmys3dpoGPGwmz24hUlgB7ucBdooA4KH3wxAFMasFZlXQQiI\nZEkNB79+0NFa4kiCzcqTV7v9HEoGwcAWE+ZeBDNqr7Z3RZHt82t9wmdsnBDvVsSf\nJHvUSuu+fnIZ7GfNDF5fMymibCAxsttx9t8jy2qSs2ajyUvceEYRIY8ozVbG80wq\nHKfDURmnJWhfDGVrCQWdvS/v1mnUzv+3pdLlIh3EymdldyDVyTqjIZAuToFHKu/R\n0vbErSIk/YVxVYJ1oNdGWux6lpvYH7P++9BCcHFaW8MvpBdJbqL8iO0ufA6O23Y=\n=rYuS\n-----END PGP SIGNATURE-----\n", "payload": "tree 045d7021543058b40ecbf3b9ccd40928f63bf7c2\nparent 259182b50b131647975926e8c94aad4c47d33747\nparent ec2d0233831cdd1d88a0d0be43534a014c3e4899\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1648731131 +0000\ncommitter GitHub <noreply@github.com> 1648731131 +0000\n\nMerge #11861\n\n11861: internal: Add \"view file text\" command to debug sync issues r=jonas-schievink a=jonas-schievink\n\nI saw a file sync bug the other day but didn't know how to further debug it. This command might give a clue as to what's wrong and help debug issues like https://github.com/rust-analyzer/rust-analyzer/issues/4829.\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonas.schievink@ferrous-systems.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9da9418661c2a357b291d6adf11ea296d9dd924a", "html_url": "https://github.com/rust-lang/rust/commit/9da9418661c2a357b291d6adf11ea296d9dd924a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9da9418661c2a357b291d6adf11ea296d9dd924a/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "259182b50b131647975926e8c94aad4c47d33747", "url": "https://api.github.com/repos/rust-lang/rust/commits/259182b50b131647975926e8c94aad4c47d33747", "html_url": "https://github.com/rust-lang/rust/commit/259182b50b131647975926e8c94aad4c47d33747"}, {"sha": "ec2d0233831cdd1d88a0d0be43534a014c3e4899", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec2d0233831cdd1d88a0d0be43534a014c3e4899", "html_url": "https://github.com/rust-lang/rust/commit/ec2d0233831cdd1d88a0d0be43534a014c3e4899"}], "stats": {"total": 90, "additions": 89, "deletions": 1}, "files": [{"sha": "15f497836783d8c05567671ea3c9baf16e226548", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9da9418661c2a357b291d6adf11ea296d9dd924a/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9da9418661c2a357b291d6adf11ea296d9dd924a/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=9da9418661c2a357b291d6adf11ea296d9dd924a", "patch": "@@ -123,6 +123,14 @@ pub(crate) fn handle_view_hir(\n     Ok(res)\n }\n \n+pub(crate) fn handle_view_file_text(\n+    snap: GlobalStateSnapshot,\n+    params: lsp_types::TextDocumentIdentifier,\n+) -> Result<String> {\n+    let file_id = from_proto::file_id(&snap, &params.uri)?;\n+    Ok(snap.analysis.file_text(file_id)?.to_string())\n+}\n+\n pub(crate) fn handle_view_item_tree(\n     snap: GlobalStateSnapshot,\n     params: lsp_ext::ViewItemTreeParams,"}, {"sha": "b638a571113e5bb9df0318c6c69f11969d07f5c4", "filename": "crates/rust-analyzer/src/lsp_ext.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9da9418661c2a357b291d6adf11ea296d9dd924a/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9da9418661c2a357b291d6adf11ea296d9dd924a/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs?ref=9da9418661c2a357b291d6adf11ea296d9dd924a", "patch": "@@ -70,6 +70,14 @@ impl Request for ViewHir {\n     const METHOD: &'static str = \"rust-analyzer/viewHir\";\n }\n \n+pub enum ViewFileText {}\n+\n+impl Request for ViewFileText {\n+    type Params = lsp_types::TextDocumentIdentifier;\n+    type Result = String;\n+    const METHOD: &'static str = \"rust-analyzer/viewFileText\";\n+}\n+\n #[derive(Deserialize, Serialize, Debug)]\n #[serde(rename_all = \"camelCase\")]\n pub struct ViewCrateGraphParams {"}, {"sha": "2d898d76a6dd9667c4c23377c0ce4f399d4f30cb", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9da9418661c2a357b291d6adf11ea296d9dd924a/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9da9418661c2a357b291d6adf11ea296d9dd924a/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=9da9418661c2a357b291d6adf11ea296d9dd924a", "patch": "@@ -590,6 +590,7 @@ impl GlobalState {\n             .on::<lsp_ext::AnalyzerStatus>(handlers::handle_analyzer_status)\n             .on::<lsp_ext::SyntaxTree>(handlers::handle_syntax_tree)\n             .on::<lsp_ext::ViewHir>(handlers::handle_view_hir)\n+            .on::<lsp_ext::ViewFileText>(handlers::handle_view_file_text)\n             .on::<lsp_ext::ViewCrateGraph>(handlers::handle_view_crate_graph)\n             .on::<lsp_ext::ViewItemTree>(handlers::handle_view_item_tree)\n             .on::<lsp_ext::ExpandMacro>(handlers::handle_expand_macro)"}, {"sha": "516d1caccc354eb870e06983eca9975083941034", "filename": "docs/dev/lsp-extensions.md", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/9da9418661c2a357b291d6adf11ea296d9dd924a/docs%2Fdev%2Flsp-extensions.md", "raw_url": "https://github.com/rust-lang/rust/raw/9da9418661c2a357b291d6adf11ea296d9dd924a/docs%2Fdev%2Flsp-extensions.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Flsp-extensions.md?ref=9da9418661c2a357b291d6adf11ea296d9dd924a", "patch": "@@ -1,5 +1,5 @@\n <!---\n-lsp_ext.rs hash: 854109e98d02a780\n+lsp_ext.rs hash: a61de7db4504a4d1\n \n If you need to change the above hash to make the test pass, please check if you\n need to adjust this doc as well and ping this issue:\n@@ -494,6 +494,17 @@ Primarily for debugging, but very useful for all people working on rust-analyzer\n Returns a textual representation of the HIR of the function containing the cursor.\n For debugging or when working on rust-analyzer itself.\n \n+## View File Text\n+\n+**Method:** `rust-analyzer/viewFileText`\n+\n+**Request:** `TextDocumentIdentifier`\n+\n+**Response:** `string`\n+\n+Returns the text of a file as seen by the server.\n+This is for debugging file sync problems.\n+\n ## View ItemTree\n \n **Method:** `rust-analyzer/viewItemTree`"}, {"sha": "7df00d2ef2c8bbbe64d985dd5eeb82f866906aea", "filename": "editors/code/package.json", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/9da9418661c2a357b291d6adf11ea296d9dd924a/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/9da9418661c2a357b291d6adf11ea296d9dd924a/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=9da9418661c2a357b291d6adf11ea296d9dd924a", "patch": "@@ -104,6 +104,11 @@\n                 \"title\": \"View Hir\",\n                 \"category\": \"Rust Analyzer\"\n             },\n+            {\n+                \"command\": \"rust-analyzer.viewFileText\",\n+                \"title\": \"View File Text (as seen by the server)\",\n+                \"category\": \"Rust Analyzer\"\n+            },\n             {\n                 \"command\": \"rust-analyzer.viewItemTree\",\n                 \"title\": \"Debug ItemTree\",\n@@ -1408,6 +1413,10 @@\n                     \"command\": \"rust-analyzer.viewHir\",\n                     \"when\": \"inRustProject\"\n                 },\n+                {\n+                    \"command\": \"rust-analyzer.viewFileText\",\n+                    \"when\": \"inRustProject\"\n+                },\n                 {\n                     \"command\": \"rust-analyzer.expandMacro\",\n                     \"when\": \"inRustProject\""}, {"sha": "2802668be301b50db4a1286575562d1f3fe214a8", "filename": "editors/code/src/commands.ts", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/9da9418661c2a357b291d6adf11ea296d9dd924a/editors%2Fcode%2Fsrc%2Fcommands.ts", "raw_url": "https://github.com/rust-lang/rust/raw/9da9418661c2a357b291d6adf11ea296d9dd924a/editors%2Fcode%2Fsrc%2Fcommands.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands.ts?ref=9da9418661c2a357b291d6adf11ea296d9dd924a", "patch": "@@ -432,6 +432,54 @@ export function viewHir(ctx: Ctx): Cmd {\n     };\n }\n \n+export function viewFileText(ctx: Ctx): Cmd {\n+    const tdcp = new class implements vscode.TextDocumentContentProvider {\n+        readonly uri = vscode.Uri.parse('rust-analyzer://viewFileText/file.rs');\n+        readonly eventEmitter = new vscode.EventEmitter<vscode.Uri>();\n+        constructor() {\n+            vscode.workspace.onDidChangeTextDocument(this.onDidChangeTextDocument, this, ctx.subscriptions);\n+            vscode.window.onDidChangeActiveTextEditor(this.onDidChangeActiveTextEditor, this, ctx.subscriptions);\n+        }\n+\n+        private onDidChangeTextDocument(event: vscode.TextDocumentChangeEvent) {\n+            if (isRustDocument(event.document)) {\n+                // We need to order this after language server updates, but there's no API for that.\n+                // Hence, good old sleep().\n+                void sleep(10).then(() => this.eventEmitter.fire(this.uri));\n+            }\n+        }\n+        private onDidChangeActiveTextEditor(editor: vscode.TextEditor | undefined) {\n+            if (editor && isRustEditor(editor)) {\n+                this.eventEmitter.fire(this.uri);\n+            }\n+        }\n+\n+        provideTextDocumentContent(_uri: vscode.Uri, ct: vscode.CancellationToken): vscode.ProviderResult<string> {\n+            const rustEditor = ctx.activeRustEditor;\n+            const client = ctx.client;\n+            if (!rustEditor || !client) return '';\n+\n+            const params = client.code2ProtocolConverter.asTextDocumentIdentifier(rustEditor.document);\n+            return client.sendRequest(ra.viewFileText, params, ct);\n+        }\n+\n+        get onDidChange(): vscode.Event<vscode.Uri> {\n+            return this.eventEmitter.event;\n+        }\n+    };\n+\n+    ctx.pushCleanup(vscode.workspace.registerTextDocumentContentProvider('rust-analyzer', tdcp));\n+\n+    return async () => {\n+        const document = await vscode.workspace.openTextDocument(tdcp.uri);\n+        tdcp.eventEmitter.fire(tdcp.uri);\n+        void await vscode.window.showTextDocument(document, {\n+            viewColumn: vscode.ViewColumn.Two,\n+            preserveFocus: true\n+        });\n+    };\n+}\n+\n export function viewItemTree(ctx: Ctx): Cmd {\n     const tdcp = new class implements vscode.TextDocumentContentProvider {\n         readonly uri = vscode.Uri.parse('rust-analyzer://viewItemTree/itemtree.rs');"}, {"sha": "0ae5e93a73f47723dc8548f2848cce32f9e3eda8", "filename": "editors/code/src/lsp_ext.ts", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9da9418661c2a357b291d6adf11ea296d9dd924a/editors%2Fcode%2Fsrc%2Flsp_ext.ts", "raw_url": "https://github.com/rust-lang/rust/raw/9da9418661c2a357b291d6adf11ea296d9dd924a/editors%2Fcode%2Fsrc%2Flsp_ext.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Flsp_ext.ts?ref=9da9418661c2a357b291d6adf11ea296d9dd924a", "patch": "@@ -36,6 +36,8 @@ export const syntaxTree = new lc.RequestType<SyntaxTreeParams, string, void>(\"ru\n \n export const viewHir = new lc.RequestType<lc.TextDocumentPositionParams, string, void>(\"rust-analyzer/viewHir\");\n \n+export const viewFileText = new lc.RequestType<lc.TextDocumentIdentifier, string, void>(\"rust-analyzer/viewFileText\");\n+\n export interface ViewItemTreeParams {\n     textDocument: lc.TextDocumentIdentifier;\n }"}, {"sha": "36a095bdd367feb7df72f4a5e51c0256b4d9bcb4", "filename": "editors/code/src/main.ts", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9da9418661c2a357b291d6adf11ea296d9dd924a/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/9da9418661c2a357b291d6adf11ea296d9dd924a/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=9da9418661c2a357b291d6adf11ea296d9dd924a", "patch": "@@ -114,6 +114,7 @@ async function initCommonContext(context: vscode.ExtensionContext, ctx: Ctx) {\n     ctx.registerCommand('parentModule', commands.parentModule);\n     ctx.registerCommand('syntaxTree', commands.syntaxTree);\n     ctx.registerCommand('viewHir', commands.viewHir);\n+    ctx.registerCommand('viewFileText', commands.viewFileText);\n     ctx.registerCommand('viewItemTree', commands.viewItemTree);\n     ctx.registerCommand('viewCrateGraph', commands.viewCrateGraph);\n     ctx.registerCommand('viewFullCrateGraph', commands.viewFullCrateGraph);"}]}