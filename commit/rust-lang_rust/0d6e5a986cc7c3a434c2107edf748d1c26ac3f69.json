{"sha": "0d6e5a986cc7c3a434c2107edf748d1c26ac3f69", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkNmU1YTk4NmNjN2MzYTQzNGMyMTA3ZWRmNzQ4ZDFjMjZhYzNmNjk=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-01-09T10:35:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-09T10:35:17Z"}, "message": "Merge #2771\n\n2771: Remove the Default impl for SourceRoot r=matklad a=michalt\n\nLet's be always explicit whether we create a library (i.e., an immutable\r\ndependency) or a local `SourceRoot`, since it can have a large impact on\r\nthe validation performance in salsa. (we found it the hard way recently,\r\nwhere the `Default` instance made it quite tricky to spot a bug)\r\n\r\nSigned-off-by: Michal Terepeta <michal.terepeta@gmail.com>\n\nCo-authored-by: Michal Terepeta <michal.terepeta@gmail.com>", "tree": {"sha": "c5adb573c201abf473370c947e714c8d9cd129ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5adb573c201abf473370c947e714c8d9cd129ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d6e5a986cc7c3a434c2107edf748d1c26ac3f69", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeFwHlCRBK7hj4Ov3rIwAAdHIIADBOgtUpNp3jpZ7DgmaPEjRM\nnXJm+pcyw1w7K6YZR/M5Ue0i3ks6n5GzIhL6rMv4LaAI/Ap+LARVnb8476CR+eFv\n3cEcI+k+YCPRn+uI5de6Sj5XLatihligNzGbokDA0C0vMl+2I+g3ltr2n+19cS31\nzA5ityVXrPWRdeDMeodYoZ8yFGTX3lgRedyqzye7PGV2/z/paCe1E9GDIQezhLJR\nYU+w9Ml/kq2rCz+5F2Kzl8E08IBGZ8D5uji+bcZ2X46LOm702MzOekAoIzdX6t55\nlU2SnCmpT1+bYGK07T8FsZhVQmxPmvZHP1tINBcTzVC0WJrUGSf8aoxhqlgK9gk=\n=xi+h\n-----END PGP SIGNATURE-----\n", "payload": "tree c5adb573c201abf473370c947e714c8d9cd129ff\nparent 5ced6f4be31576849f37e15c150f3ca3eea37b4d\nparent d761435ba006227bc1a83f8450cfde000dac5aa3\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1578566117 +0000\ncommitter GitHub <noreply@github.com> 1578566117 +0000\n\nMerge #2771\n\n2771: Remove the Default impl for SourceRoot r=matklad a=michalt\n\nLet's be always explicit whether we create a library (i.e., an immutable\r\ndependency) or a local `SourceRoot`, since it can have a large impact on\r\nthe validation performance in salsa. (we found it the hard way recently,\r\nwhere the `Default` instance made it quite tricky to spot a bug)\r\n\r\nSigned-off-by: Michal Terepeta <michal.terepeta@gmail.com>\n\nCo-authored-by: Michal Terepeta <michal.terepeta@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d6e5a986cc7c3a434c2107edf748d1c26ac3f69", "html_url": "https://github.com/rust-lang/rust/commit/0d6e5a986cc7c3a434c2107edf748d1c26ac3f69", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d6e5a986cc7c3a434c2107edf748d1c26ac3f69/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ced6f4be31576849f37e15c150f3ca3eea37b4d", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ced6f4be31576849f37e15c150f3ca3eea37b4d", "html_url": "https://github.com/rust-lang/rust/commit/5ced6f4be31576849f37e15c150f3ca3eea37b4d"}, {"sha": "d761435ba006227bc1a83f8450cfde000dac5aa3", "url": "https://api.github.com/repos/rust-lang/rust/commits/d761435ba006227bc1a83f8450cfde000dac5aa3", "html_url": "https://github.com/rust-lang/rust/commit/d761435ba006227bc1a83f8450cfde000dac5aa3"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "30b598e9a8107cc83d9bfb80497fba41e7f89daa", "filename": "crates/ra_db/src/fixture.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0d6e5a986cc7c3a434c2107edf748d1c26ac3f69/crates%2Fra_db%2Fsrc%2Ffixture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d6e5a986cc7c3a434c2107edf748d1c26ac3f69/crates%2Fra_db%2Fsrc%2Ffixture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Ffixture.rs?ref=0d6e5a986cc7c3a434c2107edf748d1c26ac3f69", "patch": "@@ -49,7 +49,7 @@ fn with_single_file(db: &mut dyn SourceDatabaseExt, text: &str) -> FileId {\n     let file_id = FileId(0);\n     let rel_path: RelativePathBuf = \"/main.rs\".into();\n \n-    let mut source_root = SourceRoot::default();\n+    let mut source_root = SourceRoot::new_local();\n     source_root.insert_file(rel_path.clone(), file_id);\n \n     let mut crate_graph = CrateGraph::default();\n@@ -77,7 +77,7 @@ fn with_files(db: &mut dyn SourceDatabaseExt, fixture: &str) -> Option<FilePosit\n     let mut crate_deps = Vec::new();\n     let mut default_crate_root: Option<FileId> = None;\n \n-    let mut source_root = SourceRoot::default();\n+    let mut source_root = SourceRoot::new_local();\n     let mut source_root_id = WORKSPACE;\n     let mut source_root_prefix: RelativePathBuf = \"/\".into();\n     let mut file_id = FileId(0);\n@@ -87,7 +87,7 @@ fn with_files(db: &mut dyn SourceDatabaseExt, fixture: &str) -> Option<FilePosit\n     for entry in fixture.iter() {\n         let meta = match parse_meta(&entry.meta) {\n             ParsedMeta::Root { path } => {\n-                let source_root = std::mem::replace(&mut source_root, SourceRoot::default());\n+                let source_root = std::mem::replace(&mut source_root, SourceRoot::new_local());\n                 db.set_source_root(source_root_id, Arc::new(source_root));\n                 source_root_id.0 += 1;\n                 source_root_prefix = path;"}, {"sha": "07269237ad33a86669cf920952de7c882dd5306c", "filename": "crates/ra_db/src/input.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0d6e5a986cc7c3a434c2107edf748d1c26ac3f69/crates%2Fra_db%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d6e5a986cc7c3a434c2107edf748d1c26ac3f69/crates%2Fra_db%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Finput.rs?ref=0d6e5a986cc7c3a434c2107edf748d1c26ac3f69", "patch": "@@ -33,7 +33,7 @@ pub struct FileId(pub u32);\n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]\n pub struct SourceRootId(pub u32);\n \n-#[derive(Default, Clone, Debug, PartialEq, Eq)]\n+#[derive(Clone, Debug, PartialEq, Eq)]\n pub struct SourceRoot {\n     /// Sysroot or crates.io library.\n     ///\n@@ -44,11 +44,11 @@ pub struct SourceRoot {\n }\n \n impl SourceRoot {\n-    pub fn new() -> SourceRoot {\n-        Default::default()\n+    pub fn new_local() -> SourceRoot {\n+        SourceRoot { is_library: false, files: Default::default() }\n     }\n     pub fn new_library() -> SourceRoot {\n-        SourceRoot { is_library: true, ..SourceRoot::new() }\n+        SourceRoot { is_library: true, files: Default::default() }\n     }\n     pub fn insert_file(&mut self, path: RelativePathBuf, file_id: FileId) {\n         self.files.insert(path, file_id);"}, {"sha": "b0aa2c8e029edaaa6aa4c26afe4abf1a7ef89de0", "filename": "crates/ra_ide/src/change.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0d6e5a986cc7c3a434c2107edf748d1c26ac3f69/crates%2Fra_ide%2Fsrc%2Fchange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d6e5a986cc7c3a434c2107edf748d1c26ac3f69/crates%2Fra_ide%2Fsrc%2Fchange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fchange.rs?ref=0d6e5a986cc7c3a434c2107edf748d1c26ac3f69", "patch": "@@ -176,7 +176,8 @@ impl RootDatabase {\n         if !change.new_roots.is_empty() {\n             let mut local_roots = Vec::clone(&self.local_roots());\n             for (root_id, is_local) in change.new_roots {\n-                let root = if is_local { SourceRoot::new() } else { SourceRoot::new_library() };\n+                let root =\n+                    if is_local { SourceRoot::new_local() } else { SourceRoot::new_library() };\n                 let durability = durability(&root);\n                 self.set_source_root_with_durability(root_id, Arc::new(root), durability);\n                 if is_local {"}]}