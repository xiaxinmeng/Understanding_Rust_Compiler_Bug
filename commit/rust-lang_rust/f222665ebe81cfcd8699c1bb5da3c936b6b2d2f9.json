{"sha": "f222665ebe81cfcd8699c1bb5da3c936b6b2d2f9", "node_id": "C_kwDOAAsO6NoAKGYyMjI2NjVlYmU4MWNmY2Q4Njk5YzFiYjVkYTNjOTM2YjZiMmQyZjk", "commit": {"author": {"name": "Dawer", "email": "7803845+iDawer@users.noreply.github.com", "date": "2021-09-28T19:26:58Z"}, "committer": {"name": "Dawer", "email": "7803845+iDawer@users.noreply.github.com", "date": "2021-09-28T19:26:58Z"}, "message": "fix: replace errors in a type when doing autoderef", "tree": {"sha": "645000c65b769900f537c03be75192c74ec9266d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/645000c65b769900f537c03be75192c74ec9266d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f222665ebe81cfcd8699c1bb5da3c936b6b2d2f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f222665ebe81cfcd8699c1bb5da3c936b6b2d2f9", "html_url": "https://github.com/rust-lang/rust/commit/f222665ebe81cfcd8699c1bb5da3c936b6b2d2f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f222665ebe81cfcd8699c1bb5da3c936b6b2d2f9/comments", "author": {"login": "iDawer", "id": 7803845, "node_id": "MDQ6VXNlcjc4MDM4NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7803845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iDawer", "html_url": "https://github.com/iDawer", "followers_url": "https://api.github.com/users/iDawer/followers", "following_url": "https://api.github.com/users/iDawer/following{/other_user}", "gists_url": "https://api.github.com/users/iDawer/gists{/gist_id}", "starred_url": "https://api.github.com/users/iDawer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iDawer/subscriptions", "organizations_url": "https://api.github.com/users/iDawer/orgs", "repos_url": "https://api.github.com/users/iDawer/repos", "events_url": "https://api.github.com/users/iDawer/events{/privacy}", "received_events_url": "https://api.github.com/users/iDawer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iDawer", "id": 7803845, "node_id": "MDQ6VXNlcjc4MDM4NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7803845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iDawer", "html_url": "https://github.com/iDawer", "followers_url": "https://api.github.com/users/iDawer/followers", "following_url": "https://api.github.com/users/iDawer/following{/other_user}", "gists_url": "https://api.github.com/users/iDawer/gists{/gist_id}", "starred_url": "https://api.github.com/users/iDawer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iDawer/subscriptions", "organizations_url": "https://api.github.com/users/iDawer/orgs", "repos_url": "https://api.github.com/users/iDawer/repos", "events_url": "https://api.github.com/users/iDawer/events{/privacy}", "received_events_url": "https://api.github.com/users/iDawer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11aed78e2b0aa573f152a2159ae3525b01c9581d", "url": "https://api.github.com/repos/rust-lang/rust/commits/11aed78e2b0aa573f152a2159ae3525b01c9581d", "html_url": "https://github.com/rust-lang/rust/commit/11aed78e2b0aa573f152a2159ae3525b01c9581d"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "5b3bea2307e60c3ade4aaf772edfae0ce77d9deb", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f222665ebe81cfcd8699c1bb5da3c936b6b2d2f9/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f222665ebe81cfcd8699c1bb5da3c936b6b2d2f9/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=f222665ebe81cfcd8699c1bb5da3c936b6b2d2f9", "patch": "@@ -2504,9 +2504,8 @@ impl Type {\n \n     pub fn autoderef<'a>(&'a self, db: &'a dyn HirDatabase) -> impl Iterator<Item = Type> + 'a {\n         // There should be no inference vars in types passed here\n-        // FIXME check that?\n-        let canonical =\n-            Canonical { value: self.ty.clone(), binders: CanonicalVarKinds::empty(&Interner) };\n+        let ty = hir_ty::replace_errors_with_variables(&self.ty).value;\n+        let canonical = Canonical { value: ty, binders: CanonicalVarKinds::empty(&Interner) };\n         let environment = self.env.env.clone();\n         let ty = InEnvironment { goal: canonical, environment };\n         autoderef(db, Some(self.krate), ty)\n@@ -2600,7 +2599,6 @@ impl Type {\n         callback: &mut dyn FnMut(&Ty, AssocItemId) -> ControlFlow<()>,\n     ) {\n         // There should be no inference vars in types passed here\n-        // FIXME check that?\n         let canonical = hir_ty::replace_errors_with_variables(&self.ty);\n \n         let env = self.env.clone();"}]}