{"sha": "4ea7bb8f12b36f7e6b831f92df6285686ad2557a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlYTdiYjhmMTJiMzZmN2U2YjgzMWY5MmRmNjI4NTY4NmFkMjU1N2E=", "commit": {"author": {"name": "Matthew Kraai", "email": "kraai@ftbfs.org", "date": "2019-12-08T13:34:03Z"}, "committer": {"name": "Matthew Kraai", "email": "kraai@ftbfs.org", "date": "2019-12-08T13:36:22Z"}, "message": "Move `Layout`s instead of binding by reference", "tree": {"sha": "6afd3fc10e469b180d88de84246c512a085f2731", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6afd3fc10e469b180d88de84246c512a085f2731"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ea7bb8f12b36f7e6b831f92df6285686ad2557a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ea7bb8f12b36f7e6b831f92df6285686ad2557a", "html_url": "https://github.com/rust-lang/rust/commit/4ea7bb8f12b36f7e6b831f92df6285686ad2557a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ea7bb8f12b36f7e6b831f92df6285686ad2557a/comments", "author": {"login": "kraai", "id": 552646, "node_id": "MDQ6VXNlcjU1MjY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/552646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kraai", "html_url": "https://github.com/kraai", "followers_url": "https://api.github.com/users/kraai/followers", "following_url": "https://api.github.com/users/kraai/following{/other_user}", "gists_url": "https://api.github.com/users/kraai/gists{/gist_id}", "starred_url": "https://api.github.com/users/kraai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kraai/subscriptions", "organizations_url": "https://api.github.com/users/kraai/orgs", "repos_url": "https://api.github.com/users/kraai/repos", "events_url": "https://api.github.com/users/kraai/events{/privacy}", "received_events_url": "https://api.github.com/users/kraai/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kraai", "id": 552646, "node_id": "MDQ6VXNlcjU1MjY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/552646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kraai", "html_url": "https://github.com/kraai", "followers_url": "https://api.github.com/users/kraai/followers", "following_url": "https://api.github.com/users/kraai/following{/other_user}", "gists_url": "https://api.github.com/users/kraai/gists{/gist_id}", "starred_url": "https://api.github.com/users/kraai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kraai/subscriptions", "organizations_url": "https://api.github.com/users/kraai/orgs", "repos_url": "https://api.github.com/users/kraai/repos", "events_url": "https://api.github.com/users/kraai/events{/privacy}", "received_events_url": "https://api.github.com/users/kraai/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e862c01aadb2d029864f7bb256cf6c85bbb5d7e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/e862c01aadb2d029864f7bb256cf6c85bbb5d7e4", "html_url": "https://github.com/rust-lang/rust/commit/e862c01aadb2d029864f7bb256cf6c85bbb5d7e4"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "b02b074190834602b85d3b31500843d79807f2ce", "filename": "src/libcore/alloc.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4ea7bb8f12b36f7e6b831f92df6285686ad2557a/src%2Flibcore%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ea7bb8f12b36f7e6b831f92df6285686ad2557a/src%2Flibcore%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Falloc.rs?ref=4ea7bb8f12b36f7e6b831f92df6285686ad2557a", "patch": "@@ -1143,9 +1143,9 @@ pub unsafe trait Alloc {\n         where Self: Sized\n     {\n         match Layout::array::<T>(n) {\n-            Ok(ref layout) if layout.size() > 0 => {\n+            Ok(layout) if layout.size() > 0 => {\n                 unsafe {\n-                    self.alloc(layout.clone()).map(|p| p.cast())\n+                    self.alloc(layout).map(|p| p.cast())\n                 }\n             }\n             _ => Err(AllocErr),\n@@ -1193,9 +1193,9 @@ pub unsafe trait Alloc {\n         where Self: Sized\n     {\n         match (Layout::array::<T>(n_old), Layout::array::<T>(n_new)) {\n-            (Ok(ref k_old), Ok(ref k_new)) if k_old.size() > 0 && k_new.size() > 0 => {\n+            (Ok(k_old), Ok(k_new)) if k_old.size() > 0 && k_new.size() > 0 => {\n                 debug_assert!(k_old.align() == k_new.align());\n-                self.realloc(ptr.cast(), k_old.clone(), k_new.size()).map(NonNull::cast)\n+                self.realloc(ptr.cast(), k_old, k_new.size()).map(NonNull::cast)\n             }\n             _ => {\n                 Err(AllocErr)\n@@ -1227,8 +1227,8 @@ pub unsafe trait Alloc {\n         where Self: Sized\n     {\n         match Layout::array::<T>(n) {\n-            Ok(ref k) if k.size() > 0 => {\n-                Ok(self.dealloc(ptr.cast(), k.clone()))\n+            Ok(k) if k.size() > 0 => {\n+                Ok(self.dealloc(ptr.cast(), k))\n             }\n             _ => {\n                 Err(AllocErr)"}]}