{"sha": "4560b61cd15aa026a03a64c99ead1edf7896826f", "node_id": "C_kwDOAAsO6NoAKDQ1NjBiNjFjZDE1YWEwMjZhMDNhNjRjOTllYWQxZWRmNzg5NjgyNmY", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-31T21:22:11Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-04-11T17:45:42Z"}, "message": "Broken tests", "tree": {"sha": "318cd189f9af4300744a698062d46014396667a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/318cd189f9af4300744a698062d46014396667a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4560b61cd15aa026a03a64c99ead1edf7896826f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4560b61cd15aa026a03a64c99ead1edf7896826f", "html_url": "https://github.com/rust-lang/rust/commit/4560b61cd15aa026a03a64c99ead1edf7896826f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4560b61cd15aa026a03a64c99ead1edf7896826f/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25c342f30a3947323e0112af3ac5baa24a363396", "url": "https://api.github.com/repos/rust-lang/rust/commits/25c342f30a3947323e0112af3ac5baa24a363396", "html_url": "https://github.com/rust-lang/rust/commit/25c342f30a3947323e0112af3ac5baa24a363396"}], "stats": {"total": 72, "additions": 72, "deletions": 0}, "files": [{"sha": "f4f1cea6b81769e3922e9101da5ebb282e01698b", "filename": "tests/ui/closures/self-supertrait-bounds.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4560b61cd15aa026a03a64c99ead1edf7896826f/tests%2Fui%2Fclosures%2Fself-supertrait-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560b61cd15aa026a03a64c99ead1edf7896826f/tests%2Fui%2Fclosures%2Fself-supertrait-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fclosures%2Fself-supertrait-bounds.rs?ref=4560b61cd15aa026a03a64c99ead1edf7896826f", "patch": "@@ -0,0 +1,14 @@\n+// check-pass\n+\n+// Makes sure that we only consider `Self` supertrait predicates while\n+// elaborating during closure signature deduction.\n+\n+#![feature(trait_alias)]\n+\n+trait Confusing<F> = Fn(i32) where F: Fn(u32);\n+\n+fn alias<T: Confusing<F>, F>(_: T, _: F) {}\n+\n+fn main() {\n+    alias(|_| {}, |_| {});\n+}"}, {"sha": "46f00c06bf1cadaab75c767128e0ce6f53ccb1ca", "filename": "tests/ui/lint/unused/trait-alias-supertrait.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/4560b61cd15aa026a03a64c99ead1edf7896826f/tests%2Fui%2Flint%2Funused%2Ftrait-alias-supertrait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560b61cd15aa026a03a64c99ead1edf7896826f/tests%2Fui%2Flint%2Funused%2Ftrait-alias-supertrait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint%2Funused%2Ftrait-alias-supertrait.rs?ref=4560b61cd15aa026a03a64c99ead1edf7896826f", "patch": "@@ -0,0 +1,15 @@\n+// check-pass\n+\n+// Make sure that we only consider *Self* supertrait predicates\n+// in the `unused_must_use` lint.\n+\n+#![feature(trait_alias)]\n+#![deny(unused_must_use)]\n+\n+trait Foo<T> = Sized where T: Iterator;\n+\n+fn test<T: Iterator>() -> impl Foo<T> {}\n+\n+fn main() {\n+    test::<std::iter::Once<()>>();\n+}"}, {"sha": "4f9eaacb8ed068bc3896385f095ec5ae936eff46", "filename": "tests/ui/traits/alias/dont-elaborate-non-self.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4560b61cd15aa026a03a64c99ead1edf7896826f/tests%2Fui%2Ftraits%2Falias%2Fdont-elaborate-non-self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560b61cd15aa026a03a64c99ead1edf7896826f/tests%2Fui%2Ftraits%2Falias%2Fdont-elaborate-non-self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Falias%2Fdont-elaborate-non-self.rs?ref=4560b61cd15aa026a03a64c99ead1edf7896826f", "patch": "@@ -0,0 +1,10 @@\n+#![feature(trait_alias)]\n+\n+use std::future::Future;\n+\n+trait F<Fut: Future<Output = usize>> = Fn() -> Fut;\n+\n+fn f<Fut>(a: dyn F<Fut>) {}\n+//~^ ERROR the size for values of type `(dyn Fn() -> Fut + 'static)` cannot be known at compilation time\n+\n+fn main() {}"}, {"sha": "4a5e445d1efbe0a7eb7dc0bfda9f6c0c10ef8c7e", "filename": "tests/ui/traits/trait-upcasting/alias-where-clause-isnt-supertrait.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/4560b61cd15aa026a03a64c99ead1edf7896826f/tests%2Fui%2Ftraits%2Ftrait-upcasting%2Falias-where-clause-isnt-supertrait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4560b61cd15aa026a03a64c99ead1edf7896826f/tests%2Fui%2Ftraits%2Ftrait-upcasting%2Falias-where-clause-isnt-supertrait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Ftrait-upcasting%2Falias-where-clause-isnt-supertrait.rs?ref=4560b61cd15aa026a03a64c99ead1edf7896826f", "patch": "@@ -0,0 +1,33 @@\n+#![feature(trait_upcasting)]\n+#![feature(trait_alias)]\n+\n+// Although we *elaborate* `T: Alias` to `i32: B`, we should\n+// not consider `B` to be a supertrait of the type.\n+trait Alias = A where i32: B;\n+\n+trait A {}\n+\n+trait B {\n+    fn test(&self);\n+}\n+\n+trait C: Alias {}\n+\n+impl A for () {}\n+\n+impl C for () {}\n+\n+impl B for i32 {\n+    fn test(&self) {\n+        println!(\"hi {self}\");\n+    }\n+}\n+\n+fn test(x: &dyn C) -> &dyn B {\n+    x\n+    //~^ ERROR mismatched types\n+}\n+\n+fn main() {\n+    let x: &dyn C = &();\n+}"}]}