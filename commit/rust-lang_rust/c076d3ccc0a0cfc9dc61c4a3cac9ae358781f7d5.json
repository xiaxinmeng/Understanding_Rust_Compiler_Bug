{"sha": "c076d3ccc0a0cfc9dc61c4a3cac9ae358781f7d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwNzZkM2NjYzBhMGNmYzlkYzYxYzRhM2NhYzlhZTM1ODc4MWY3ZDU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-08-03T01:14:05Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-08-03T01:14:50Z"}, "message": "rustc: Translate class literals correctly if the class has a destructor", "tree": {"sha": "b2f7f0d17b597a6e9c460ac457ac2118b41fc2b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b2f7f0d17b597a6e9c460ac457ac2118b41fc2b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c076d3ccc0a0cfc9dc61c4a3cac9ae358781f7d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c076d3ccc0a0cfc9dc61c4a3cac9ae358781f7d5", "html_url": "https://github.com/rust-lang/rust/commit/c076d3ccc0a0cfc9dc61c4a3cac9ae358781f7d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c076d3ccc0a0cfc9dc61c4a3cac9ae358781f7d5/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16a0f72f8ca85b1e2a1b69043dc16c6cf20cc83f", "url": "https://api.github.com/repos/rust-lang/rust/commits/16a0f72f8ca85b1e2a1b69043dc16c6cf20cc83f", "html_url": "https://github.com/rust-lang/rust/commit/16a0f72f8ca85b1e2a1b69043dc16c6cf20cc83f"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "203d17ec1a9c37b6dcefc235ab8db51bd946c5aa", "filename": "src/rustc/middle/trans/base.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c076d3ccc0a0cfc9dc61c4a3cac9ae358781f7d5/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c076d3ccc0a0cfc9dc61c4a3cac9ae358781f7d5/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=c076d3ccc0a0cfc9dc61c4a3cac9ae358781f7d5", "patch": "@@ -3452,7 +3452,17 @@ fn trans_struct(block_context: block, span: span, fields: ~[ast::field],\n             }\n         }\n \n-        let dest = GEPi(block_context, dest_address, ~[0, index]);\n+        // If the class has a destructor, our GEP is a little more\n+        // complicated.\n+        let dest;\n+        if ty::ty_dtor(block_context.tcx(), class_id).is_some() {\n+            dest = GEPi(block_context,\n+                        GEPi(block_context, dest_address, ~[0, 1]),\n+                        ~[0, index]);\n+        } else {\n+            dest = GEPi(block_context, dest_address, ~[0, index]);\n+        }\n+\n         block_context = trans_expr_save_in(block_context,\n                                            field.node.expr,\n                                            dest);"}]}