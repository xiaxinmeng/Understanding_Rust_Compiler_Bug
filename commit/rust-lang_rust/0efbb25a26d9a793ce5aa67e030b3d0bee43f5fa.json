{"sha": "0efbb25a26d9a793ce5aa67e030b3d0bee43f5fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlZmJiMjVhMjZkOWE3OTNjZTVhYTY3ZTAzMGIzZDBiZWU0M2Y1ZmE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-08-14T06:59:18Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-08-14T06:59:18Z"}, "message": "auto merge of #8477 : catamorphism/rust/issue-4096, r=msullivan\n\nr? @msullivan ...e parameters\r\n\r\nIn this case, it's likely to be that the user forgot the `self` type, so\r\nsay so.\r\n\r\nCloses #4096", "tree": {"sha": "a99a23d96d8be6959a43fa83bb85465c72f6c468", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a99a23d96d8be6959a43fa83bb85465c72f6c468"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0efbb25a26d9a793ce5aa67e030b3d0bee43f5fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0efbb25a26d9a793ce5aa67e030b3d0bee43f5fa", "html_url": "https://github.com/rust-lang/rust/commit/0efbb25a26d9a793ce5aa67e030b3d0bee43f5fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0efbb25a26d9a793ce5aa67e030b3d0bee43f5fa/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e86d414f2224cbdbd65e26761831ac6f9842d82e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e86d414f2224cbdbd65e26761831ac6f9842d82e", "html_url": "https://github.com/rust-lang/rust/commit/e86d414f2224cbdbd65e26761831ac6f9842d82e"}, {"sha": "db2d9caeda41bbda7490166c63af3a0481c210a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/db2d9caeda41bbda7490166c63af3a0481c210a5", "html_url": "https://github.com/rust-lang/rust/commit/db2d9caeda41bbda7490166c63af3a0481c210a5"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "a46ee330a857954aa7d4d909da5400b616164b95", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0efbb25a26d9a793ce5aa67e030b3d0bee43f5fa/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0efbb25a26d9a793ce5aa67e030b3d0bee43f5fa/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=0efbb25a26d9a793ce5aa67e030b3d0bee43f5fa", "patch": "@@ -3208,10 +3208,19 @@ pub fn instantiate_path(fcx: @mut FnCtxt,\n                   ty_param_count, ty_substs_len));\n         fcx.infcx().next_ty_vars(ty_param_count)\n     } else if ty_substs_len < ty_param_count {\n+        let is_static_method = match fcx.ccx.tcx.def_map.find(&node_id) {\n+            Some(&ast::def_static_method(*)) => true,\n+            _ => false\n+        };\n         fcx.ccx.tcx.sess.span_err\n             (span,\n              fmt!(\"not enough type parameters provided: expected %u, found %u\",\n                   ty_param_count, ty_substs_len));\n+        if is_static_method {\n+            fcx.ccx.tcx.sess.span_note\n+                (span, \"Static methods have an extra implicit type parameter -- \\\n+                 did you omit the type parameter for the `Self` type?\");\n+        }\n         fcx.infcx().next_ty_vars(ty_param_count)\n     } else {\n         pth.types.map(|aty| fcx.to_ty(aty))"}, {"sha": "3f1172b6de8f61c7e8244b8c8e823adbb94c63f7", "filename": "src/test/compile-fail/issue-4096.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/0efbb25a26d9a793ce5aa67e030b3d0bee43f5fa/src%2Ftest%2Fcompile-fail%2Fissue-4096.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0efbb25a26d9a793ce5aa67e030b3d0bee43f5fa/src%2Ftest%2Fcompile-fail%2Fissue-4096.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-4096.rs?ref=0efbb25a26d9a793ce5aa67e030b3d0bee43f5fa", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub trait Nummy {\n+    fn from_inty<T>() -> Self;\n+}\n+\n+impl Nummy for float {\n+    fn from_inty<T>() -> float { 0.0 }\n+}\n+\n+fn main() {\n+    let _1:float = Nummy::from_inty::<int>();  //~ ERROR not enough type\n+    //~^ NOTE Static methods have an extra implicit type parameter\n+}"}]}