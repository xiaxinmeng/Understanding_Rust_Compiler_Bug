{"sha": "3c024d6c62d9add4051b4d8a863b402c07e8c984", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjMDI0ZDZjNjJkOWFkZDQwNTFiNGQ4YTg2M2I0MDJjMDdlOGM5ODQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-10-25T14:41:17Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-10-25T14:41:17Z"}, "message": "dead code", "tree": {"sha": "bd186600a09df7ecc856502b3d2b2b18bc0be2ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd186600a09df7ecc856502b3d2b2b18bc0be2ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c024d6c62d9add4051b4d8a863b402c07e8c984", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c024d6c62d9add4051b4d8a863b402c07e8c984", "html_url": "https://github.com/rust-lang/rust/commit/3c024d6c62d9add4051b4d8a863b402c07e8c984", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c024d6c62d9add4051b4d8a863b402c07e8c984/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0eb33605a917d2e7289debe0c915e75286b834f", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0eb33605a917d2e7289debe0c915e75286b834f", "html_url": "https://github.com/rust-lang/rust/commit/e0eb33605a917d2e7289debe0c915e75286b834f"}], "stats": {"total": 22, "additions": 0, "deletions": 22}, "files": [{"sha": "25b9935cb3fd51fdf67e44f14b885ba999b03a80", "filename": "crates/ra_analysis/src/db/input.rs", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/3c024d6c62d9add4051b4d8a863b402c07e8c984/crates%2Fra_analysis%2Fsrc%2Fdb%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c024d6c62d9add4051b4d8a863b402c07e8c984/crates%2Fra_analysis%2Fsrc%2Fdb%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdb%2Finput.rs?ref=3c024d6c62d9add4051b4d8a863b402c07e8c984", "patch": "@@ -59,25 +59,3 @@ impl Hash for SourceRoot {\n }\n \n pub(crate) const WORKSPACE: SourceRootId = SourceRootId(0);\n-\n-\n-#[derive(Default, Debug, Eq)]\n-pub(crate) struct FileSet {\n-    pub(crate) files: FxHashSet<FileId>,\n-    pub(crate) resolver: FileResolverImp,\n-}\n-\n-impl PartialEq for FileSet {\n-    fn eq(&self, other: &FileSet) -> bool {\n-        self.files == other.files && self.resolver == other.resolver\n-    }\n-}\n-\n-impl Hash for FileSet {\n-    fn hash<H: Hasher>(&self, hasher: &mut H) {\n-        let mut files = self.files.iter().cloned().collect::<Vec<_>>();\n-        files.sort();\n-        files.hash(hasher);\n-    }\n-}\n-"}]}