{"sha": "2d759046ba685f419b3de79367e5b973c1b84105", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkNzU5MDQ2YmE2ODVmNDE5YjNkZTc5MzY3ZTViOTczYzFiODQxMDU=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-09-02T03:35:59Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-09-07T22:42:17Z"}, "message": "Implement stackless placeholder expansion.", "tree": {"sha": "71de6deca2295c6a8d418e951fb1d3cd3b43b545", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71de6deca2295c6a8d418e951fb1d3cd3b43b545"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d759046ba685f419b3de79367e5b973c1b84105", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d759046ba685f419b3de79367e5b973c1b84105", "html_url": "https://github.com/rust-lang/rust/commit/2d759046ba685f419b3de79367e5b973c1b84105", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d759046ba685f419b3de79367e5b973c1b84105/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d76bf3ed80b0f6d6fb44704f98df1067353de300", "url": "https://api.github.com/repos/rust-lang/rust/commits/d76bf3ed80b0f6d6fb44704f98df1067353de300", "html_url": "https://github.com/rust-lang/rust/commit/d76bf3ed80b0f6d6fb44704f98df1067353de300"}], "stats": {"total": 30, "additions": 22, "deletions": 8}, "files": [{"sha": "c5b637a980000f50bbc42546aba64ecbfeed0670", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/2d759046ba685f419b3de79367e5b973c1b84105/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d759046ba685f419b3de79367e5b973c1b84105/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=2d759046ba685f419b3de79367e5b973c1b84105", "patch": "@@ -26,7 +26,6 @@ use ptr::P;\n use tokenstream::TokenTree;\n use util::small_vector::SmallVector;\n \n-use std::collections::HashMap;\n use std::mem;\n use std::path::PathBuf;\n use std::rc::Rc;\n@@ -182,10 +181,11 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n \n     // Fully expand all the invocations in `expansion`.\n     fn expand(&mut self, expansion: Expansion) -> Expansion {\n+        self.cx.recursion_count = 0;\n         let (expansion, mut invocations) = self.collect_invocations(expansion);\n         invocations.reverse();\n \n-        let mut expansions = HashMap::new();\n+        let mut expansions = vec![vec![(0, expansion)]];\n         while let Some(invoc) = invocations.pop() {\n             let Invocation { mark, module, depth, backtrace, .. } = invoc;\n             self.cx.syntax_env.current_module = module;\n@@ -198,13 +198,24 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n             self.cx.recursion_count = depth + 1;\n             let (expansion, new_invocations) = self.collect_invocations(expansion);\n \n-            expansions.insert(mark.as_u32(), expansion);\n+            if expansions.len() == depth {\n+                expansions.push(Vec::new());\n+            }\n+            expansions[depth].push((mark.as_u32(), expansion));\n             if !self.single_step {\n                 invocations.extend(new_invocations.into_iter().rev());\n             }\n         }\n \n-        expansion.fold_with(&mut PlaceholderExpander::new(expansions))\n+        let mut placeholder_expander = PlaceholderExpander::new();\n+        while let Some(expansions) = expansions.pop() {\n+            for (mark, expansion) in expansions.into_iter().rev() {\n+                let expansion = expansion.fold_with(&mut placeholder_expander);\n+                placeholder_expander.add(mark, expansion);\n+            }\n+        }\n+\n+        placeholder_expander.remove(0)\n     }\n \n     fn collect_invocations(&mut self, expansion: Expansion) -> (Expansion, Vec<Invocation>) {"}, {"sha": "abadcf867b146a28f9425848eca0e79e53a55348", "filename": "src/libsyntax/ext/placeholders.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/2d759046ba685f419b3de79367e5b973c1b84105/src%2Flibsyntax%2Fext%2Fplaceholders.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d759046ba685f419b3de79367e5b973c1b84105/src%2Flibsyntax%2Fext%2Fplaceholders.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fplaceholders.rs?ref=2d759046ba685f419b3de79367e5b973c1b84105", "patch": "@@ -74,15 +74,18 @@ pub struct PlaceholderExpander {\n }\n \n impl PlaceholderExpander {\n-    pub fn new(expansions: HashMap<ast::NodeId, Expansion>) -> Self {\n+    pub fn new() -> Self {\n         PlaceholderExpander {\n-            expansions: expansions,\n+            expansions: HashMap::new(),\n         }\n     }\n \n+    pub fn add(&mut self, id: ast::NodeId, expansion: Expansion) {\n+        self.expansions.insert(id, expansion);\n+    }\n+\n     pub fn remove(&mut self, id: ast::NodeId) -> Expansion {\n-        let expansion = self.expansions.remove(&id).unwrap();\n-        expansion.fold_with(self)\n+        self.expansions.remove(&id).unwrap()\n     }\n }\n "}]}