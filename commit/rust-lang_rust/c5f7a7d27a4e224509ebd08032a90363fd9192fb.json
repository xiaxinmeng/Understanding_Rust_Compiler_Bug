{"sha": "c5f7a7d27a4e224509ebd08032a90363fd9192fb", "node_id": "C_kwDOAAsO6NoAKGM1ZjdhN2QyN2E0ZTIyNDUwOWViZDA4MDMyYTkwMzYzZmQ5MTkyZmI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-11T15:25:26Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-11T15:25:26Z"}, "message": "Auto merge of #2215 - InfRandomness:getpid_shim, r=RalfJung\n\nGetpid shim", "tree": {"sha": "d6f49d74e60d47536297dc59f8b78e16300821c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6f49d74e60d47536297dc59f8b78e16300821c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5f7a7d27a4e224509ebd08032a90363fd9192fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5f7a7d27a4e224509ebd08032a90363fd9192fb", "html_url": "https://github.com/rust-lang/rust/commit/c5f7a7d27a4e224509ebd08032a90363fd9192fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5f7a7d27a4e224509ebd08032a90363fd9192fb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7656fc45cf13ade469661a11f84999b5e43e2e29", "url": "https://api.github.com/repos/rust-lang/rust/commits/7656fc45cf13ade469661a11f84999b5e43e2e29", "html_url": "https://github.com/rust-lang/rust/commit/7656fc45cf13ade469661a11f84999b5e43e2e29"}, {"sha": "3e03054ef0056e728a081b03cde8546f91c822aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e03054ef0056e728a081b03cde8546f91c822aa", "html_url": "https://github.com/rust-lang/rust/commit/3e03054ef0056e728a081b03cde8546f91c822aa"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "a65919286117c1051360c2c92d06459b6eed565f", "filename": "src/shims/env.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/c5f7a7d27a4e224509ebd08032a90363fd9192fb/src%2Fshims%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5f7a7d27a4e224509ebd08032a90363fd9192fb/src%2Fshims%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fenv.rs?ref=c5f7a7d27a4e224509ebd08032a90363fd9192fb", "patch": "@@ -465,4 +465,31 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n \n         Ok(())\n     }\n+\n+    fn getpid(&mut self) -> InterpResult<'tcx, i32> {\n+        let this = self.eval_context_mut();\n+        let target_os = &this.tcx.sess.target.os;\n+        assert!(\n+            target_os == \"linux\" || target_os == \"macos\",\n+            \"`getpid` is only available for the UNIX target family\"\n+        );\n+\n+        this.check_no_isolation(\"`getpid`\")?;\n+\n+        // The reason we need to do this wacky of a conversion is because\n+        // `libc::getpid` returns an i32, however, `std::process::id()` return an u32.\n+        // So we un-do the conversion that stdlib does and turn it back into an i32.\n+\n+        Ok(std::process::id() as i32)\n+    }\n+\n+    #[allow(non_snake_case)]\n+    fn GetCurrentProcessId(&mut self) -> InterpResult<'tcx, u32> {\n+        let this = self.eval_context_mut();\n+        this.assert_target_os(\"windows\", \"GetCurrentProcessId\");\n+\n+        this.check_no_isolation(\"`GetCurrentProcessId`\")?;\n+\n+        Ok(std::process::id())\n+    }\n }"}, {"sha": "d002ab75b9bed685de3cd316feb89e929143c8f2", "filename": "src/shims/unix/foreign_items.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c5f7a7d27a4e224509ebd08032a90363fd9192fb/src%2Fshims%2Funix%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5f7a7d27a4e224509ebd08032a90363fd9192fb/src%2Fshims%2Funix%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Funix%2Fforeign_items.rs?ref=c5f7a7d27a4e224509ebd08032a90363fd9192fb", "patch": "@@ -474,6 +474,12 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 this.write_null(dest)?;\n             }\n \n+            \"getpid\" => {\n+                let [] = this.check_shim(abi, Abi::C { unwind: false}, link_name, args)?;\n+                let result = this.getpid()?;\n+                this.write_scalar(Scalar::from_i32(result), dest)?;\n+            }\n+\n             // Platform-specific shims\n             _ => {\n                 match this.tcx.sess.target.os.as_ref() {"}, {"sha": "0bb082dba9b2fe94cb334e94ecfa2438d748edcf", "filename": "src/shims/windows/foreign_items.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c5f7a7d27a4e224509ebd08032a90363fd9192fb/src%2Fshims%2Fwindows%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5f7a7d27a4e224509ebd08032a90363fd9192fb/src%2Fshims%2Fwindows%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fwindows%2Fforeign_items.rs?ref=c5f7a7d27a4e224509ebd08032a90363fd9192fb", "patch": "@@ -419,6 +419,11 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 let [] = this.check_shim(abi, Abi::System { unwind: false }, link_name, args)?;\n                 this.write_scalar(Scalar::from_machine_isize(1, this), dest)?;\n             }\n+            \"GetCurrentProcessId\" if this.frame_in_std() => {\n+                let [] = this.check_shim(abi, Abi::System { unwind: false }, link_name, args)?;\n+                let result = this.GetCurrentProcessId()?;\n+                this.write_scalar(Scalar::from_u32(result), dest)?;\n+            }\n \n             _ => return Ok(EmulateByNameResult::NotSupported),\n         }"}, {"sha": "258fdeaa8497fd4ffdd8b86a8f9bb2d6e0593da4", "filename": "tests/pass/getpid.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c5f7a7d27a4e224509ebd08032a90363fd9192fb/tests%2Fpass%2Fgetpid.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5f7a7d27a4e224509ebd08032a90363fd9192fb/tests%2Fpass%2Fgetpid.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fgetpid.rs?ref=c5f7a7d27a4e224509ebd08032a90363fd9192fb", "patch": "@@ -0,0 +1,9 @@\n+// compile-flags: -Zmiri-disable-isolation\n+\n+fn getpid() -> u32 {\n+    std::process::id()\n+}\n+\n+fn main() {\n+    getpid();\n+}"}]}