{"sha": "b7341db5d82e93c4257763b33fec853817197078", "node_id": "C_kwDOAAsO6NoAKGI3MzQxZGI1ZDgyZTkzYzQyNTc3NjNiMzNmZWM4NTM4MTcxOTcwNzg", "commit": {"author": {"name": "Ezra Shaw", "email": "ezrasure@outlook.com", "date": "2023-01-02T03:22:18Z"}, "committer": {"name": "Ezra Shaw", "email": "ezrasure@outlook.com", "date": "2023-01-02T03:22:18Z"}, "message": "fix CI", "tree": {"sha": "2ad70485ee80e13bdbcd6a79e5a444298fae1b41", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ad70485ee80e13bdbcd6a79e5a444298fae1b41"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7341db5d82e93c4257763b33fec853817197078", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJJBAABCAAzFiEEYSWD6p+RIeSP1N2eF81cKtrg00QFAmOyTeoVHGV6cmFzdXJl\nQG91dGxvb2suY29tAAoJEBfNXCra4NNEM0MQAI0EbeOW1z0V658Njn0UdTetJJRP\nYXLpl41bU8wNcW3JjHb5qN4lijW+VouvSH9gbYJSTLjJNGkTfbBXzvH5E/1mw7um\nMHqydL/I+tCnx5uAPaSxdnhCkNbuR+sr0EzfxZfKMeLzQsLm5JHnljKRdMVujiM8\npHvhVx5my0vav95fmyJilN5nFJgUvn3vbSrw0yi3KI+rV/n3DmJzOf68lRZsbhPw\nECZjOJ/lRXqPXfZI8aguBtpRvJhXOupyNasmYTBEpZAdSMfZQjh900xO86AFpwhU\naiT628WRE1PbRSt17i0/1PybPfclRg/h/d/41MJNoYmnXiurv/kZfSixQqIoAeeR\nVmwSXIEcqVvydig5sNhjlF7bz+US6yQ8HVd2y8po6VcBKTWMceNWFe15fRXeNWa3\nerS7x99wn8ep4g/q7xTp7n0pxAqR2ZjiPIuHVhSBPXgLFUrIsGWFwtbpgGcFhHG6\n7vKzik6InXpMy3YhEG1v+E9VgfZsXxZY9WPgYbYbQbJu/Zz/OzRz4SC7m9kUhwJR\nxVU9vvHMksH9DY70ev4X42XQ96o5jCfR4D+GFHvyR9R2vHlcfX9D3cYjKQHecG3G\nR3u+2unY1aAENTwzz4HQWfmLJ90bhf/2+kWkq1YCD7udWTdb3NQebsQGwn/7WHwI\nB0+wVMGB95pxUZCe\n=QGH6\n-----END PGP SIGNATURE-----", "payload": "tree 2ad70485ee80e13bdbcd6a79e5a444298fae1b41\nparent 1f1dd5f3cc522de86eb0ef5b8df53af0e347f73b\nauthor Ezra Shaw <ezrasure@outlook.com> 1672629738 +1300\ncommitter Ezra Shaw <ezrasure@outlook.com> 1672629738 +1300\n\nfix CI\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7341db5d82e93c4257763b33fec853817197078", "html_url": "https://github.com/rust-lang/rust/commit/b7341db5d82e93c4257763b33fec853817197078", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7341db5d82e93c4257763b33fec853817197078/comments", "author": {"login": "Ezrashaw", "id": 38062690, "node_id": "MDQ6VXNlcjM4MDYyNjkw", "avatar_url": "https://avatars.githubusercontent.com/u/38062690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ezrashaw", "html_url": "https://github.com/Ezrashaw", "followers_url": "https://api.github.com/users/Ezrashaw/followers", "following_url": "https://api.github.com/users/Ezrashaw/following{/other_user}", "gists_url": "https://api.github.com/users/Ezrashaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ezrashaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ezrashaw/subscriptions", "organizations_url": "https://api.github.com/users/Ezrashaw/orgs", "repos_url": "https://api.github.com/users/Ezrashaw/repos", "events_url": "https://api.github.com/users/Ezrashaw/events{/privacy}", "received_events_url": "https://api.github.com/users/Ezrashaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ezrashaw", "id": 38062690, "node_id": "MDQ6VXNlcjM4MDYyNjkw", "avatar_url": "https://avatars.githubusercontent.com/u/38062690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ezrashaw", "html_url": "https://github.com/Ezrashaw", "followers_url": "https://api.github.com/users/Ezrashaw/followers", "following_url": "https://api.github.com/users/Ezrashaw/following{/other_user}", "gists_url": "https://api.github.com/users/Ezrashaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ezrashaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ezrashaw/subscriptions", "organizations_url": "https://api.github.com/users/Ezrashaw/orgs", "repos_url": "https://api.github.com/users/Ezrashaw/repos", "events_url": "https://api.github.com/users/Ezrashaw/events{/privacy}", "received_events_url": "https://api.github.com/users/Ezrashaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f1dd5f3cc522de86eb0ef5b8df53af0e347f73b", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f1dd5f3cc522de86eb0ef5b8df53af0e347f73b", "html_url": "https://github.com/rust-lang/rust/commit/1f1dd5f3cc522de86eb0ef5b8df53af0e347f73b"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "938e194abdf051574127d74510f7ae1b33b9cfef", "filename": "src/tools/tidy/src/error_codes.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b7341db5d82e93c4257763b33fec853817197078/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7341db5d82e93c4257763b33fec853817197078/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes.rs?ref=b7341db5d82e93c4257763b33fec853817197078", "patch": "@@ -173,38 +173,39 @@ fn check_error_codes_docs(\n             return;\n         }\n \n-        let (found_code_example, found_proper_doctest, emit_ignore_warning, emit_no_longer_warning) = check_explanation_has_doctest(&contents, &err_code);\n-        if has_test.2 {\n+        let (found_code_example, found_proper_doctest, emit_ignore_warning, emit_no_longer_warning) =\n+            check_explanation_has_doctest(&contents, &err_code);\n+        if emit_ignore_warning {\n             verbose_print!(\n                 verbose,\n                 \"warning: Error code `{err_code}` uses the ignore header. This should not be used, add the error code to the \\\n                 `IGNORE_DOCTEST_CHECK` constant instead.\"\n             );\n         }\n-        if has_test.3 {\n+        if emit_no_longer_warning {\n             no_longer_emitted_codes.push(err_code.to_owned());\n             verbose_print!(\n                 verbose,\n                 \"warning: Error code `{err_code}` is no longer emitted and should be removed entirely.\"\n             );\n         }\n-        if !has_test.0 {\n+        if !found_code_example {\n             verbose_print!(\n                 verbose,\n                 \"warning: Error code `{err_code}` doesn't have a code example, all error codes are expected to have one \\\n                 (even if untested).\"\n             );\n         }\n \n-        let test_ignored = IGNORE_DOCTEST_CHECK.contains(&err_code);\n+        let test_ignored = IGNORE_DOCTEST_CHECK.contains(&&err_code);\n \n         // Check that the explanation has a doctest, and if it shouldn't, that it doesn't\n-        if !has_test.1 && !test_ignored {\n+        if !found_proper_doctest && !test_ignored {\n             errors.push(format!(\n                 \"`{}` doesn't use its own error code in compile_fail example\",\n                 path.display(),\n             ));\n-        } else if has_test.1 && test_ignored {\n+        } else if found_proper_doctest && test_ignored {\n             errors.push(format!(\n                 \"`{}` has a compile_fail doctest with its own error code, it shouldn't \\\n                 be listed in `IGNORE_DOCTEST_CHECK`\","}]}