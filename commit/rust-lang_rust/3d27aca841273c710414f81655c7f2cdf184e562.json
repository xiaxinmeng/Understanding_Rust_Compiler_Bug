{"sha": "3d27aca841273c710414f81655c7f2cdf184e562", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkMjdhY2E4NDEyNzNjNzEwNDE0ZjgxNjU1YzdmMmNkZjE4NGU1NjI=", "commit": {"author": {"name": "Petr Hosek", "email": "phosek@google.com", "date": "2018-10-16T00:27:07Z"}, "committer": {"name": "Petr Hosek", "email": "phosek@google.com", "date": "2018-11-05T23:46:00Z"}, "message": "Use lld directly for Fuchsia target\n\nFuchsia already uses lld as the default linker, so there's no reason\nto always invoke it through Clang, instead we can simply invoke lld\ndirectly and pass the set of flags that matches Clang.", "tree": {"sha": "772d58423ef65edd10232b0cb518751721c941a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/772d58423ef65edd10232b0cb518751721c941a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d27aca841273c710414f81655c7f2cdf184e562", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d27aca841273c710414f81655c7f2cdf184e562", "html_url": "https://github.com/rust-lang/rust/commit/3d27aca841273c710414f81655c7f2cdf184e562", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d27aca841273c710414f81655c7f2cdf184e562/comments", "author": {"login": "petrhosek", "id": 283696, "node_id": "MDQ6VXNlcjI4MzY5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/283696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrhosek", "html_url": "https://github.com/petrhosek", "followers_url": "https://api.github.com/users/petrhosek/followers", "following_url": "https://api.github.com/users/petrhosek/following{/other_user}", "gists_url": "https://api.github.com/users/petrhosek/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrhosek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrhosek/subscriptions", "organizations_url": "https://api.github.com/users/petrhosek/orgs", "repos_url": "https://api.github.com/users/petrhosek/repos", "events_url": "https://api.github.com/users/petrhosek/events{/privacy}", "received_events_url": "https://api.github.com/users/petrhosek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrhosek", "id": 283696, "node_id": "MDQ6VXNlcjI4MzY5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/283696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrhosek", "html_url": "https://github.com/petrhosek", "followers_url": "https://api.github.com/users/petrhosek/followers", "following_url": "https://api.github.com/users/petrhosek/following{/other_user}", "gists_url": "https://api.github.com/users/petrhosek/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrhosek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrhosek/subscriptions", "organizations_url": "https://api.github.com/users/petrhosek/orgs", "repos_url": "https://api.github.com/users/petrhosek/repos", "events_url": "https://api.github.com/users/petrhosek/events{/privacy}", "received_events_url": "https://api.github.com/users/petrhosek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10f42cbde015c44a019e8b6dceca472a1532f36a", "url": "https://api.github.com/repos/rust-lang/rust/commits/10f42cbde015c44a019e8b6dceca472a1532f36a", "html_url": "https://github.com/rust-lang/rust/commit/10f42cbde015c44a019e8b6dceca472a1532f36a"}], "stats": {"total": 50, "additions": 28, "deletions": 22}, "files": [{"sha": "a97c88336e427d9f185da49607736c45685c23f5", "filename": "src/bootstrap/bin/rustc.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3d27aca841273c710414f81655c7f2cdf184e562/src%2Fbootstrap%2Fbin%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d27aca841273c710414f81655c7f2cdf184e562/src%2Fbootstrap%2Fbin%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustc.rs?ref=3d27aca841273c710414f81655c7f2cdf184e562", "patch": "@@ -232,7 +232,9 @@ fn main() {\n                 // flesh out rpath support more fully in the future.\n                 cmd.arg(\"-Z\").arg(\"osx-rpath-install-name\");\n                 Some(\"-Wl,-rpath,@loader_path/../lib\")\n-            } else if !target.contains(\"windows\") && !target.contains(\"wasm32\") {\n+            } else if !target.contains(\"windows\") &&\n+                      !target.contains(\"wasm32\") &&\n+                      !target.contains(\"fuchsia\") {\n                 Some(\"-Wl,-rpath,$ORIGIN/../lib\")\n             } else {\n                 None"}, {"sha": "58525d0fc1a92ad06c24def1d19c8baea30745b3", "filename": "src/bootstrap/configure.py", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3d27aca841273c710414f81655c7f2cdf184e562/src%2Fbootstrap%2Fconfigure.py", "raw_url": "https://github.com/rust-lang/rust/raw/3d27aca841273c710414f81655c7f2cdf184e562/src%2Fbootstrap%2Fconfigure.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfigure.py?ref=3d27aca841273c710414f81655c7f2cdf184e562", "patch": "@@ -68,6 +68,7 @@ def v(*args):\n o(\"profiler\", \"build.profiler\", \"build the profiler runtime\")\n o(\"emscripten\", None, \"compile the emscripten backend as well as LLVM\")\n o(\"full-tools\", None, \"enable all tools\")\n+o(\"lld\", \"rust.lld\", \"build lld\")\n o(\"lldb\", \"rust.lldb\", \"build lldb\")\n o(\"missing-tools\", \"dist.missing-tools\", \"allow failures when building tools\")\n "}, {"sha": "ea9d5bf3fa05c7ae8b0d863ec9c7bb4ed116ff9b", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3d27aca841273c710414f81655c7f2cdf184e562/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d27aca841273c710414f81655c7f2cdf184e562/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=3d27aca841273c710414f81655c7f2cdf184e562", "patch": "@@ -843,7 +843,8 @@ impl Build {\n         } else if target != self.config.build &&\n                   !target.contains(\"msvc\") &&\n                   !target.contains(\"emscripten\") &&\n-                  !target.contains(\"wasm32\") {\n+                  !target.contains(\"wasm32\") &&\n+                  !target.contains(\"fuchsia\") {\n             Some(self.cc(target))\n         } else {\n             None"}, {"sha": "944c2a51b8d1fb4c1939328438cd96df4e498091", "filename": "src/ci/docker/dist-various-2/Dockerfile", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/3d27aca841273c710414f81655c7f2cdf184e562/src%2Fci%2Fdocker%2Fdist-various-2%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/3d27aca841273c710414f81655c7f2cdf184e562/src%2Fci%2Fdocker%2Fdist-various-2%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-various-2%2FDockerfile?ref=3d27aca841273c710414f81655c7f2cdf184e562", "patch": "@@ -47,6 +47,17 @@ ENV \\\n     CC_x86_64_sun_solaris=x86_64-sun-solaris2.10-gcc \\\n     CXX_x86_64_sun_solaris=x86_64-sun-solaris2.10-g++\n \n+ENV CARGO_TARGET_X86_64_FUCHSIA_AR /usr/local/bin/llvm-ar\n+ENV CARGO_TARGET_X86_64_FUCHSIA_RUSTFLAGS \\\n+-C link-arg=--sysroot=/usr/local/x86_64-fuchsia \\\n+-C link-arg=-L/usr/local/x86_64-fuchsia/lib \\\n+-C link-arg=-L/usr/local/lib/x86_64-fuchsia/lib\n+ENV CARGO_TARGET_AARCH64_FUCHSIA_AR /usr/local/bin/llvm-ar\n+ENV CARGO_TARGET_AARCH64_FUCHSIA_RUSTFLAGS \\\n+-C link-arg=--sysroot=/usr/local/aarch64-fuchsia \\\n+-C link-arg=-L/usr/local/aarch64-fuchsia/lib \\\n+-C link-arg=-L/usr/local/lib/aarch64-fuchsia/lib\n+\n ENV TARGETS=x86_64-fuchsia\n ENV TARGETS=$TARGETS,aarch64-fuchsia\n ENV TARGETS=$TARGETS,sparcv9-sun-solaris\n@@ -55,5 +66,5 @@ ENV TARGETS=$TARGETS,x86_64-sun-solaris\n ENV TARGETS=$TARGETS,x86_64-unknown-linux-gnux32\n ENV TARGETS=$TARGETS,x86_64-unknown-cloudabi\n \n-ENV RUST_CONFIGURE_ARGS --enable-extended --disable-docs\n+ENV RUST_CONFIGURE_ARGS --enable-extended --enable-lld --disable-docs\n ENV SCRIPT python2.7 ../x.py dist --target $TARGETS"}, {"sha": "9ef4fe3b3af4b4d380f20f9d6ea3fe8d5c2b701a", "filename": "src/librustc_target/spec/aarch64_fuchsia.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3d27aca841273c710414f81655c7f2cdf184e562/src%2Flibrustc_target%2Fspec%2Faarch64_fuchsia.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d27aca841273c710414f81655c7f2cdf184e562/src%2Flibrustc_target%2Fspec%2Faarch64_fuchsia.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Faarch64_fuchsia.rs?ref=3d27aca841273c710414f81655c7f2cdf184e562", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use spec::{LldFlavor, LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::fuchsia_base::opts();\n@@ -24,7 +24,7 @@ pub fn target() -> TargetResult {\n         target_os: \"fuchsia\".to_string(),\n         target_env: String::new(),\n         target_vendor: String::new(),\n-        linker_flavor: LinkerFlavor::Gcc,\n+        linker_flavor: LinkerFlavor::Lld(LldFlavor::Ld),\n         options: TargetOptions {\n             abi_blacklist: super::arm_base::abi_blacklist(),\n             .. base"}, {"sha": "8c20755492e31569f67b086d12e69839e2949fbb", "filename": "src/librustc_target/spec/fuchsia_base.rs", "status": "modified", "additions": 6, "deletions": 14, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/3d27aca841273c710414f81655c7f2cdf184e562/src%2Flibrustc_target%2Fspec%2Ffuchsia_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d27aca841273c710414f81655c7f2cdf184e562/src%2Flibrustc_target%2Fspec%2Ffuchsia_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Ffuchsia_base.rs?ref=3d27aca841273c710414f81655c7f2cdf184e562", "patch": "@@ -8,27 +8,19 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use spec::{LinkArgs, LinkerFlavor, TargetOptions};\n+use spec::{LldFlavor, LinkArgs, LinkerFlavor, TargetOptions};\n use std::default::Default;\n \n pub fn opts() -> TargetOptions {\n     let mut args = LinkArgs::new();\n-    args.insert(LinkerFlavor::Gcc, vec![\n-        // We want to be able to strip as much executable code as possible\n-        // from the linker command line, and this flag indicates to the\n-        // linker that it can avoid linking in dynamic libraries that don't\n-        // actually satisfy any symbols up to that point (as with many other\n-        // resolutions the linker does). This option only applies to all\n-        // following libraries so we're sure to pass it as one of the first\n-        // arguments.\n-        // FIXME: figure out whether these linker args are desirable\n-        //\"-Wl,--as-needed\".to_string(),\n-\n-        // Always enable NX protection when it is available\n-        //\"-Wl,-z,noexecstack\".to_string(),\n+    args.insert(LinkerFlavor::Lld(LldFlavor::Ld), vec![\n+        \"--build-id\".to_string(), \"--hash-style=gnu\".to_string(),\n+        \"-z\".to_string(), \"rodynamic\".to_string(),\n     ]);\n \n     TargetOptions {\n+        linker: Some(\"rust-lld\".to_owned()),\n+        lld_flavor: LldFlavor::Ld,\n         dynamic_linking: true,\n         executables: true,\n         target_family: Some(\"unix\".to_string()),"}, {"sha": "08df78d0db05d906e231941176b10e3ed6248da6", "filename": "src/librustc_target/spec/x86_64_fuchsia.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3d27aca841273c710414f81655c7f2cdf184e562/src%2Flibrustc_target%2Fspec%2Fx86_64_fuchsia.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d27aca841273c710414f81655c7f2cdf184e562/src%2Flibrustc_target%2Fspec%2Fx86_64_fuchsia.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_fuchsia.rs?ref=3d27aca841273c710414f81655c7f2cdf184e562", "patch": "@@ -8,13 +8,12 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use spec::{LinkerFlavor, Target, TargetResult};\n+use spec::{LldFlavor, LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::fuchsia_base::opts();\n     base.cpu = \"x86-64\".to_string();\n     base.max_atomic_width = Some(64);\n-    base.pre_link_args.get_mut(&LinkerFlavor::Gcc).unwrap().push(\"-m64\".to_string());\n     base.stack_probes = true;\n \n     Ok(Target {\n@@ -27,7 +26,7 @@ pub fn target() -> TargetResult {\n         target_os: \"fuchsia\".to_string(),\n         target_env: String::new(),\n         target_vendor: String::new(),\n-        linker_flavor: LinkerFlavor::Gcc,\n+        linker_flavor: LinkerFlavor::Lld(LldFlavor::Ld),\n         options: base,\n     })\n }"}]}