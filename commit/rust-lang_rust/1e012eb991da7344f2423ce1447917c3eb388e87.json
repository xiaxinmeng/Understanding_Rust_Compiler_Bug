{"sha": "1e012eb991da7344f2423ce1447917c3eb388e87", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlMDEyZWI5OTFkYTczNDRmMjQyM2NlMTQ0NzkxN2MzZWIzODhlODc=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-01T15:22:56Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-01T15:22:56Z"}, "message": "Move all config to config", "tree": {"sha": "5d94bfd18cfc0fef4185bd70e4e65d0e633c10c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d94bfd18cfc0fef4185bd70e4e65d0e633c10c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e012eb991da7344f2423ce1447917c3eb388e87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e012eb991da7344f2423ce1447917c3eb388e87", "html_url": "https://github.com/rust-lang/rust/commit/1e012eb991da7344f2423ce1447917c3eb388e87", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e012eb991da7344f2423ce1447917c3eb388e87/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "797cd34c7c996251816226dac369fece1587a416", "url": "https://api.github.com/repos/rust-lang/rust/commits/797cd34c7c996251816226dac369fece1587a416", "html_url": "https://github.com/rust-lang/rust/commit/797cd34c7c996251816226dac369fece1587a416"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "91735a726552f5068affb4fd5eba3ad51bc3da28", "filename": "crates/ra_project_model/src/cargo_workspace.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1e012eb991da7344f2423ce1447917c3eb388e87/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e012eb991da7344f2423ce1447917c3eb388e87/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs?ref=1e012eb991da7344f2423ce1447917c3eb388e87", "patch": "@@ -43,6 +43,7 @@ impl ops::Index<Target> for CargoWorkspace {\n     }\n }\n \n+// TODO: rename to CargoConfig, kill `rename_all`, kill serde dep?\n #[derive(Deserialize, Clone, Debug, PartialEq, Eq)]\n #[serde(rename_all = \"camelCase\", default)]\n pub struct CargoFeatures {"}, {"sha": "8a8e42ed8694a77fcb9053271394d92cf99e47d1", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1e012eb991da7344f2423ce1447917c3eb388e87/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e012eb991da7344f2423ce1447917c3eb388e87/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=1e012eb991da7344f2423ce1447917c3eb388e87", "patch": "@@ -30,6 +30,11 @@ pub struct Config {\n     pub check: Option<FlycheckConfig>,\n     pub vscode_lldb: bool,\n     pub proc_macro_srv: Option<String>,\n+    pub lru_capacity: Option<usize>,\n+    pub use_client_watching: bool,\n+    pub exclude_globs: Vec<String>,\n+    pub cargo: CargoFeatures,\n+    pub with_sysroot: bool,\n }\n \n #[derive(Debug, Clone)]\n@@ -101,6 +106,11 @@ pub(crate) fn get_config(\n         rustfmt: RustfmtConfig::Rustfmt { extra_args: config.rustfmt_args.clone() },\n         vscode_lldb: config.vscode_lldb,\n         proc_macro_srv: None, // FIXME: get this from config\n+        lru_capacity: config.lru_capacity,\n+        use_client_watching: config.use_client_watching,\n+        exclude_globs: config.exclude_globs.clone(),\n+        cargo: config.cargo_features.clone(),\n+        with_sysroot: config.with_sysroot,\n     }\n }\n "}, {"sha": "c973d43fa1c77faabbabe0b4344791567f9a6dcf", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1e012eb991da7344f2423ce1447917c3eb388e87/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e012eb991da7344f2423ce1447917c3eb388e87/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=1e012eb991da7344f2423ce1447917c3eb388e87", "patch": "@@ -71,7 +71,9 @@ pub fn main_loop(\n     config: ServerConfig,\n     connection: Connection,\n ) -> Result<()> {\n-    log::info!(\"server_config: {:#?}\", config);\n+    let text_document_caps = client_caps.text_document.as_ref();\n+    let config = get_config(&config, text_document_caps);\n+    log::info!(\"initial config: {:#?}\", config);\n \n     // Windows scheduler implements priority boosts: if thread waits for an\n     // event (like a condvar), and event fires, priority of the thread is\n@@ -92,19 +94,16 @@ pub fn main_loop(\n         SetThreadPriority(thread, thread_priority_above_normal);\n     }\n \n-    let text_document_caps = client_caps.text_document.as_ref();\n     let mut loop_state = LoopState::default();\n     let mut world_state = {\n-        // TODO: refactor\n-        let new_config = get_config(&config, text_document_caps);\n         // FIXME: support dynamic workspace loading.\n         let workspaces = {\n             let mut loaded_workspaces = Vec::new();\n             for ws_root in &ws_roots {\n                 let workspace = ra_project_model::ProjectWorkspace::discover_with_sysroot(\n                     ws_root.as_path(),\n                     config.with_sysroot,\n-                    &config.cargo_features,\n+                    &config.cargo,\n                 );\n                 match workspace {\n                     Ok(workspace) => loaded_workspaces.push(workspace),\n@@ -114,7 +113,7 @@ pub fn main_loop(\n                         if let Some(ra_project_model::CargoTomlNotFoundError { .. }) =\n                             e.downcast_ref()\n                         {\n-                            if !new_config.notifications.cargo_toml_not_found {\n+                            if !config.notifications.cargo_toml_not_found {\n                                 continue;\n                             }\n                         }\n@@ -163,7 +162,7 @@ pub fn main_loop(\n             config.lru_capacity,\n             &globs,\n             Watch(!config.use_client_watching),\n-            new_config,\n+            config,\n         )\n     };\n "}]}