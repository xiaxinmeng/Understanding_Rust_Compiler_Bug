{"sha": "082915290da2619ecc9528fb6af3fae2a9d8e997", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4MjkxNTI5MGRhMjYxOWVjYzk1MjhmYjZhZjNmYWUyYTlkOGU5OTc=", "commit": {"author": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2016-07-29T11:20:57Z"}, "committer": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2016-08-13T13:37:09Z"}, "message": "Make unused lint ignore unused `!`", "tree": {"sha": "6ace424bde89a28a8a1526ffc12d02cfedf2d33d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ace424bde89a28a8a1526ffc12d02cfedf2d33d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/082915290da2619ecc9528fb6af3fae2a9d8e997", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/082915290da2619ecc9528fb6af3fae2a9d8e997", "html_url": "https://github.com/rust-lang/rust/commit/082915290da2619ecc9528fb6af3fae2a9d8e997", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/082915290da2619ecc9528fb6af3fae2a9d8e997/comments", "author": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "committer": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f31d9757f8a49fde0b7b6a6698d967bb0b1561fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/f31d9757f8a49fde0b7b6a6698d967bb0b1561fe", "html_url": "https://github.com/rust-lang/rust/commit/f31d9757f8a49fde0b7b6a6698d967bb0b1561fe"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "cd24de6a0a748a225beba109dfbf5d3d50828a6b", "filename": "src/librustc_lint/unused.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/082915290da2619ecc9528fb6af3fae2a9d8e997/src%2Flibrustc_lint%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/082915290da2619ecc9528fb6af3fae2a9d8e997/src%2Flibrustc_lint%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Funused.rs?ref=082915290da2619ecc9528fb6af3fae2a9d8e997", "patch": "@@ -133,6 +133,7 @@ impl LateLintPass for UnusedResults {\n         let t = cx.tcx.expr_ty(&expr);\n         let warned = match t.sty {\n             ty::TyTuple(ref tys) if tys.is_empty() => return,\n+            ty::TyEmpty => return,\n             ty::TyBool => return,\n             ty::TyStruct(def, _) |\n             ty::TyEnum(def, _) => {"}]}