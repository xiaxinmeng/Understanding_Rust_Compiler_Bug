{"sha": "a6c4eaa93c7400450facd0eb0580e4d641f2e297", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2YzRlYWE5M2M3NDAwNDUwZmFjZDBlYjA1ODBlNGQ2NDFmMmUyOTc=", "commit": {"author": {"name": "Konrad Borowski", "email": "konrad@borowski.pw", "date": "2018-12-30T01:43:56Z"}, "committer": {"name": "Konrad Borowski", "email": "konrad@borowski.pw", "date": "2018-12-30T01:45:34Z"}, "message": "random_state lint", "tree": {"sha": "2ea3a66dcae657f04207181344f589554ad50d70", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ea3a66dcae657f04207181344f589554ad50d70"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6c4eaa93c7400450facd0eb0580e4d641f2e297", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6c4eaa93c7400450facd0eb0580e4d641f2e297", "html_url": "https://github.com/rust-lang/rust/commit/a6c4eaa93c7400450facd0eb0580e4d641f2e297", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6c4eaa93c7400450facd0eb0580e4d641f2e297/comments", "author": {"login": "xfix", "id": 1297598, "node_id": "MDQ6VXNlcjEyOTc1OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1297598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xfix", "html_url": "https://github.com/xfix", "followers_url": "https://api.github.com/users/xfix/followers", "following_url": "https://api.github.com/users/xfix/following{/other_user}", "gists_url": "https://api.github.com/users/xfix/gists{/gist_id}", "starred_url": "https://api.github.com/users/xfix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xfix/subscriptions", "organizations_url": "https://api.github.com/users/xfix/orgs", "repos_url": "https://api.github.com/users/xfix/repos", "events_url": "https://api.github.com/users/xfix/events{/privacy}", "received_events_url": "https://api.github.com/users/xfix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xfix", "id": 1297598, "node_id": "MDQ6VXNlcjEyOTc1OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1297598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xfix", "html_url": "https://github.com/xfix", "followers_url": "https://api.github.com/users/xfix/followers", "following_url": "https://api.github.com/users/xfix/following{/other_user}", "gists_url": "https://api.github.com/users/xfix/gists{/gist_id}", "starred_url": "https://api.github.com/users/xfix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xfix/subscriptions", "organizations_url": "https://api.github.com/users/xfix/orgs", "repos_url": "https://api.github.com/users/xfix/repos", "events_url": "https://api.github.com/users/xfix/events{/privacy}", "received_events_url": "https://api.github.com/users/xfix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ece8b8e7d6a37caa809c1fc1c8c8dd6263ea11ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/ece8b8e7d6a37caa809c1fc1c8c8dd6263ea11ff", "html_url": "https://github.com/rust-lang/rust/commit/ece8b8e7d6a37caa809c1fc1c8c8dd6263ea11ff"}], "stats": {"total": 102, "additions": 101, "deletions": 1}, "files": [{"sha": "b5c8feb8ac6596c911aa028fc28d5d72ad5dfa09", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a6c4eaa93c7400450facd0eb0580e4d641f2e297/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/a6c4eaa93c7400450facd0eb0580e4d641f2e297/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=a6c4eaa93c7400450facd0eb0580e4d641f2e297", "patch": "@@ -814,6 +814,7 @@ All notable changes to this project will be documented in this file.\n [`ptr_offset_with_cast`]: https://rust-lang.github.io/rust-clippy/master/index.html#ptr_offset_with_cast\n [`pub_enum_variant_names`]: https://rust-lang.github.io/rust-clippy/master/index.html#pub_enum_variant_names\n [`question_mark`]: https://rust-lang.github.io/rust-clippy/master/index.html#question_mark\n+[`random_state`]: https://rust-lang.github.io/rust-clippy/master/index.html#random_state\n [`range_minus_one`]: https://rust-lang.github.io/rust-clippy/master/index.html#range_minus_one\n [`range_plus_one`]: https://rust-lang.github.io/rust-clippy/master/index.html#range_plus_one\n [`range_step_by_zero`]: https://rust-lang.github.io/rust-clippy/master/index.html#range_step_by_zero"}, {"sha": "be24f1be8272ff29543a6cb1ec632e38c8662f3a", "filename": "README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6c4eaa93c7400450facd0eb0580e4d641f2e297/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/a6c4eaa93c7400450facd0eb0580e4d641f2e297/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=a6c4eaa93c7400450facd0eb0580e4d641f2e297", "patch": "@@ -7,7 +7,7 @@\n \n A collection of lints to catch common mistakes and improve your [Rust](https://github.com/rust-lang/rust) code.\n \n-[There are 290 lints included in this crate!](https://rust-lang.github.io/rust-clippy/master/index.html)\n+[There are 291 lints included in this crate!](https://rust-lang.github.io/rust-clippy/master/index.html)\n \n We have a bunch of lint categories to allow you to choose how much Clippy is supposed to ~~annoy~~ help you:\n "}, {"sha": "0aa9ff5985f49df86916314c385031cdbfcc5773", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a6c4eaa93c7400450facd0eb0580e4d641f2e297/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6c4eaa93c7400450facd0eb0580e4d641f2e297/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=a6c4eaa93c7400450facd0eb0580e4d641f2e297", "patch": "@@ -180,6 +180,7 @@ pub mod precedence;\n pub mod ptr;\n pub mod ptr_offset_with_cast;\n pub mod question_mark;\n+pub mod random_state;\n pub mod ranges;\n pub mod redundant_clone;\n pub mod redundant_field_names;\n@@ -484,6 +485,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n     reg.register_late_lint_pass(box ptr_offset_with_cast::Pass);\n     reg.register_late_lint_pass(box redundant_clone::RedundantClone);\n     reg.register_late_lint_pass(box slow_vector_initialization::Pass);\n+    reg.register_late_lint_pass(box random_state::Pass);\n \n     reg.register_lint_group(\"clippy::restriction\", Some(\"clippy_restriction\"), vec![\n         arithmetic::FLOAT_ARITHMETIC,\n@@ -1023,6 +1025,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n         fallible_impl_from::FALLIBLE_IMPL_FROM,\n         mutex_atomic::MUTEX_INTEGER,\n         needless_borrow::NEEDLESS_BORROW,\n+        random_state::RANDOM_STATE,\n         redundant_clone::REDUNDANT_CLONE,\n         unwrap::PANICKING_UNWRAP,\n         unwrap::UNNECESSARY_UNWRAP,"}, {"sha": "02abd2e93bd7db8d62f697dd829a714a19296958", "filename": "clippy_lints/src/random_state.rs", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/a6c4eaa93c7400450facd0eb0580e4d641f2e297/clippy_lints%2Fsrc%2Frandom_state.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6c4eaa93c7400450facd0eb0580e4d641f2e297/clippy_lints%2Fsrc%2Frandom_state.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Frandom_state.rs?ref=a6c4eaa93c7400450facd0eb0580e4d641f2e297", "patch": "@@ -0,0 +1,48 @@\n+use crate::utils::{match_type, paths, span_lint};\n+use rustc::hir::Ty;\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::ty::subst::UnpackedKind;\n+use rustc::ty::TyKind;\n+use rustc::{declare_tool_lint, lint_array};\n+\n+/// **What it does:** Checks for usage of `RandomState`\n+///\n+/// **Why is this bad?** Some applications don't need collision prevention\n+/// which lowers the performance.\n+///\n+/// **Known problems:** None.\n+///\n+/// **Example:**\n+/// ```rust\n+/// fn x() {\n+///     let mut map = std::collections::HashMap::new();\n+///     map.insert(3, 4);\n+/// }\n+/// ```\n+declare_clippy_lint! {\n+    pub RANDOM_STATE,\n+    nursery,\n+    \"use of RandomState\"\n+}\n+\n+pub struct Pass;\n+\n+impl LintPass for Pass {\n+    fn get_lints(&self) -> LintArray {\n+        lint_array!(RANDOM_STATE)\n+    }\n+}\n+\n+impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n+    fn check_ty(&mut self, cx: &LateContext<'a, 'tcx>, ty: &Ty) {\n+        if let TyKind::Adt(_, substs) = cx.tables.node_id_to_type(ty.hir_id).sty {\n+            for subst in substs {\n+                if let UnpackedKind::Type(build_hasher) = subst.unpack() {\n+                    if match_type(cx, build_hasher, &paths::RANDOM_STATE) {\n+                        span_lint(cx, RANDOM_STATE, ty.span, \"usage of RandomState\");\n+                    }\n+                }\n+            }\n+        }\n+    }\n+}"}, {"sha": "0ec684e36bca9726355c09756f0a1be0dc20d687", "filename": "clippy_lints/src/utils/paths.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a6c4eaa93c7400450facd0eb0580e4d641f2e297/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6c4eaa93c7400450facd0eb0580e4d641f2e297/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fpaths.rs?ref=a6c4eaa93c7400450facd0eb0580e4d641f2e297", "patch": "@@ -73,6 +73,7 @@ pub const PATH_BUF: [&str; 3] = [\"std\", \"path\", \"PathBuf\"];\n pub const PATH_TO_PATH_BUF: [&str; 4] = [\"std\", \"path\", \"Path\", \"to_path_buf\"];\n pub const PTR_NULL: [&str; 2] = [\"ptr\", \"null\"];\n pub const PTR_NULL_MUT: [&str; 2] = [\"ptr\", \"null_mut\"];\n+pub const RANDOM_STATE: [&str; 5] = [\"std\", \"collections\", \"hash\", \"map\", \"RandomState\"];\n pub const RANGE: [&str; 3] = [\"core\", \"ops\", \"Range\"];\n pub const RANGE_ARGUMENT_TRAIT: [&str; 3] = [\"core\", \"ops\", \"RangeBounds\"];\n pub const RANGE_FROM: [&str; 3] = [\"core\", \"ops\", \"RangeFrom\"];"}, {"sha": "31f4b4d49b462a8da35421b14af82b3cebc85198", "filename": "tests/ui/random_state.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a6c4eaa93c7400450facd0eb0580e4d641f2e297/tests%2Fui%2Frandom_state.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6c4eaa93c7400450facd0eb0580e4d641f2e297/tests%2Fui%2Frandom_state.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frandom_state.rs?ref=a6c4eaa93c7400450facd0eb0580e4d641f2e297", "patch": "@@ -0,0 +1,19 @@\n+#![warn(clippy::random_state)]\n+\n+use std::collections::hash_map::RandomState;\n+use std::collections::hash_map::{DefaultHasher, HashMap};\n+use std::hash::{BuildHasherDefault};\n+\n+fn main() {\n+    // Should warn\n+    let mut map = HashMap::new();\n+    map.insert(3, 4);\n+    let mut map = HashMap::with_hasher(RandomState::new());\n+    map.insert(true, false);\n+    let _map: HashMap<_, _> = vec![(2, 3)].into_iter().collect();\n+    let _vec: Vec<HashMap<i32, i32>>;\n+    // Shouldn't warn\n+    let _map: HashMap<i32, i32, BuildHasherDefault<DefaultHasher>> = HashMap::default();\n+    let mut map = HashMap::with_hasher(BuildHasherDefault::<DefaultHasher>::default());\n+    map.insert(\"a\", \"b\");\n+}"}, {"sha": "df224bf0c298c00fc4ebdd1a7de222d15defb0a9", "filename": "tests/ui/random_state.stderr", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/a6c4eaa93c7400450facd0eb0580e4d641f2e297/tests%2Fui%2Frandom_state.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a6c4eaa93c7400450facd0eb0580e4d641f2e297/tests%2Fui%2Frandom_state.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frandom_state.stderr?ref=a6c4eaa93c7400450facd0eb0580e4d641f2e297", "patch": "@@ -0,0 +1,28 @@\n+error: usage of RandomState\n+  --> $DIR/random_state.rs:9:19\n+   |\n+LL |     let mut map = HashMap::new();\n+   |                   ^^^^^^^^^^^^\n+   |\n+   = note: `-D clippy::random-state` implied by `-D warnings`\n+\n+error: usage of RandomState\n+  --> $DIR/random_state.rs:11:19\n+   |\n+LL |     let mut map = HashMap::with_hasher(RandomState::new());\n+   |                   ^^^^^^^^^^^^^^^^^^^^\n+\n+error: usage of RandomState\n+  --> $DIR/random_state.rs:13:15\n+   |\n+LL |     let _map: HashMap<_, _> = vec![(2, 3)].into_iter().collect();\n+   |               ^^^^^^^^^^^^^\n+\n+error: usage of RandomState\n+  --> $DIR/random_state.rs:14:19\n+   |\n+LL |     let _vec: Vec<HashMap<i32, i32>>;\n+   |                   ^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 4 previous errors\n+"}]}