{"sha": "689a868a1f6f20b49ea904ca7cda14636b7768b3", "node_id": "C_kwDOAAsO6NoAKDY4OWE4NjhhMWY2ZjIwYjQ5ZWE5MDRjYTdjZGExNDYzNmI3NzY4YjM", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2021-12-16T15:17:16Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2021-12-16T15:17:16Z"}, "message": "Remove some noise from opaque type errors around associated types", "tree": {"sha": "65045ca55b1eaeeded1353c228c483ca0be5d274", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65045ca55b1eaeeded1353c228c483ca0be5d274"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/689a868a1f6f20b49ea904ca7cda14636b7768b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/689a868a1f6f20b49ea904ca7cda14636b7768b3", "html_url": "https://github.com/rust-lang/rust/commit/689a868a1f6f20b49ea904ca7cda14636b7768b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/689a868a1f6f20b49ea904ca7cda14636b7768b3/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8402169aaa12e7bbb9630796a8caec90a3055ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8402169aaa12e7bbb9630796a8caec90a3055ca", "html_url": "https://github.com/rust-lang/rust/commit/f8402169aaa12e7bbb9630796a8caec90a3055ca"}], "stats": {"total": 74, "additions": 17, "deletions": 57}, "files": [{"sha": "eab5e5a5fb4e933dbd1dd585a9e965a2280fa34c", "filename": "compiler/rustc_infer/src/infer/opaque_types.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/689a868a1f6f20b49ea904ca7cda14636b7768b3/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fopaque_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/689a868a1f6f20b49ea904ca7cda14636b7768b3/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fopaque_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fopaque_types.rs?ref=689a868a1f6f20b49ea904ca7cda14636b7768b3", "patch": "@@ -551,6 +551,20 @@ impl<'a, 'tcx> Instantiator<'a, 'tcx> {\n             let predicate = predicate.subst(tcx, substs);\n             debug!(?predicate);\n \n+            // Replace all other mentions of the same opaque type with the hidden type,\n+            // as the bounds must hold on the hidden type after all.\n+            let predicate = predicate.fold_with(&mut BottomUpFolder {\n+                tcx,\n+                ty_op: |ty| match *ty.kind() {\n+                    ty::Opaque(def_id2, substs2) if def_id == def_id2 && substs == substs2 => {\n+                        ty_var\n+                    }\n+                    _ => ty,\n+                },\n+                lt_op: |lt| lt,\n+                ct_op: |ct| ct,\n+            });\n+\n             // We can't normalize associated types from `rustc_infer`, but we can eagerly register inference variables for them.\n             let predicate = predicate.fold_with(&mut BottomUpFolder {\n                 tcx,"}, {"sha": "cee8186dd8f8c432c3a2ccf10f49ae3822e120f5", "filename": "src/test/ui/type-alias-impl-trait/bound_reduction2.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/689a868a1f6f20b49ea904ca7cda14636b7768b3/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fbound_reduction2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/689a868a1f6f20b49ea904ca7cda14636b7768b3/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fbound_reduction2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fbound_reduction2.rs?ref=689a868a1f6f20b49ea904ca7cda14636b7768b3", "patch": "@@ -15,9 +15,5 @@ impl<W> Trait<W> for () {}\n \n fn foo_desugared<T: TraitWithAssoc>(_: T) -> Foo<T::Assoc> {\n     //~^ ERROR non-defining opaque type use in defining scope\n-    //~| ERROR non-defining opaque type use in defining scope\n-    //~| ERROR non-defining opaque type use in defining scope\n-    //~| ERROR `T` is part of concrete type but not used in parameter list\n-    //~| ERROR `T` is part of concrete type but not used in parameter list\n     ()\n }"}, {"sha": "03e696fe8980376392a3df6e8219d9ae3dbd03fc", "filename": "src/test/ui/type-alias-impl-trait/bound_reduction2.stderr", "status": "modified", "additions": 3, "deletions": 53, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/689a868a1f6f20b49ea904ca7cda14636b7768b3/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fbound_reduction2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/689a868a1f6f20b49ea904ca7cda14636b7768b3/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fbound_reduction2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fbound_reduction2.stderr?ref=689a868a1f6f20b49ea904ca7cda14636b7768b3", "patch": "@@ -1,70 +1,20 @@\n-error: type parameter `T` is part of concrete type but not used in parameter list for the `impl Trait` type alias\n-  --> $DIR/bound_reduction2.rs:16:60\n-   |\n-LL |   fn foo_desugared<T: TraitWithAssoc>(_: T) -> Foo<T::Assoc> {\n-   |  ____________________________________________________________^\n-LL | |\n-LL | |\n-LL | |\n-...  |\n-LL | |     ()\n-LL | | }\n-   | |_^\n-\n-error: type parameter `T` is part of concrete type but not used in parameter list for the `impl Trait` type alias\n-  --> $DIR/bound_reduction2.rs:16:60\n-   |\n-LL |   fn foo_desugared<T: TraitWithAssoc>(_: T) -> Foo<T::Assoc> {\n-   |  ____________________________________________________________^\n-LL | |\n-LL | |\n-LL | |\n-...  |\n-LL | |     ()\n-LL | | }\n-   | |_^\n-\n error: non-defining opaque type use in defining scope\n-  --> $DIR/bound_reduction2.rs:16:1\n+  --> $DIR/bound_reduction2.rs:16:46\n    |\n LL | fn foo_desugared<T: TraitWithAssoc>(_: T) -> Foo<T::Assoc> {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                                              ^^^^^^^^^^^^^\n    |\n note: used non-generic type `<T as TraitWithAssoc>::Assoc` for generic parameter\n   --> $DIR/bound_reduction2.rs:9:10\n    |\n LL | type Foo<V> = impl Trait<V>;\n    |          ^\n \n-error: non-defining opaque type use in defining scope\n-  --> $DIR/bound_reduction2.rs:16:1\n-   |\n-LL | fn foo_desugared<T: TraitWithAssoc>(_: T) -> Foo<T::Assoc> {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-note: used non-generic type `_` for generic parameter\n-  --> $DIR/bound_reduction2.rs:9:10\n-   |\n-LL | type Foo<V> = impl Trait<V>;\n-   |          ^\n-\n-error: non-defining opaque type use in defining scope\n-  --> $DIR/bound_reduction2.rs:16:1\n-   |\n-LL | fn foo_desugared<T: TraitWithAssoc>(_: T) -> Foo<T::Assoc> {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-note: used non-generic type `_` for generic parameter\n-  --> $DIR/bound_reduction2.rs:9:10\n-   |\n-LL | type Foo<V> = impl Trait<V>;\n-   |          ^\n-\n error: could not find defining uses\n   --> $DIR/bound_reduction2.rs:9:15\n    |\n LL | type Foo<V> = impl Trait<V>;\n    |               ^^^^^^^^^^^^^\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 2 previous errors\n "}]}