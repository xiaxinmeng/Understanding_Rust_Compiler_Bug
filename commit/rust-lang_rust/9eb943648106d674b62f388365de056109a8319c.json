{"sha": "9eb943648106d674b62f388365de056109a8319c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllYjk0MzY0ODEwNmQ2NzRiNjJmMzg4MzY1ZGUwNTYxMDlhODMxOWM=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-12-23T16:20:24Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-12-25T13:38:51Z"}, "message": "Fix indentation", "tree": {"sha": "59dd16f5c702b485ad2b16abeeee9a969b322f67", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59dd16f5c702b485ad2b16abeeee9a969b322f67"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9eb943648106d674b62f388365de056109a8319c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9eb943648106d674b62f388365de056109a8319c", "html_url": "https://github.com/rust-lang/rust/commit/9eb943648106d674b62f388365de056109a8319c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9eb943648106d674b62f388365de056109a8319c/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b35a5da4ea15a826908fc07d0d77ca9ef292ac78", "url": "https://api.github.com/repos/rust-lang/rust/commits/b35a5da4ea15a826908fc07d0d77ca9ef292ac78", "html_url": "https://github.com/rust-lang/rust/commit/b35a5da4ea15a826908fc07d0d77ca9ef292ac78"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "395596eb06237a6d8efc70b2a016c458d4ff4180", "filename": "src/intrinsics/mod.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9eb943648106d674b62f388365de056109a8319c/src%2Fintrinsics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9eb943648106d674b62f388365de056109a8319c/src%2Fintrinsics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fmod.rs?ref=9eb943648106d674b62f388365de056109a8319c", "patch": "@@ -305,14 +305,14 @@ macro simd_int_flt_binop {\n \n macro simd_flt_binop($fx:expr, $intrinsic:expr, $op:ident($x:ident, $y:ident) -> $ret:ident) {\n     let (lane_layout, lane_count) = lane_type_and_count($fx.tcx, $x.layout());\n-        let x_val = $x.load_vector($fx);\n-        let y_val = $y.load_vector($fx);\n+    let x_val = $x.load_vector($fx);\n+    let y_val = $y.load_vector($fx);\n \n-        let res = match lane_layout.ty.kind {\n-            ty::Float(_) => $fx.bcx.ins().$op(x_val, y_val),\n-            _ => unreachable!(\"{:?}\", lane_layout.ty),\n-        };\n-        $ret.write_cvalue($fx, CValue::by_val(res, $ret.layout()));\n+    let res = match lane_layout.ty.kind {\n+        ty::Float(_) => $fx.bcx.ins().$op(x_val, y_val),\n+        _ => unreachable!(\"{:?}\", lane_layout.ty),\n+    };\n+    $ret.write_cvalue($fx, CValue::by_val(res, $ret.layout()));\n }\n \n pub fn codegen_intrinsic_call<'tcx>("}]}