{"sha": "dcbf2f324f3e3c116b3a7f45b501e2382e89510d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjYmYyZjMyNGYzZTNjMTE2YjNhN2Y0NWI1MDFlMjM4MmU4OTUxMGQ=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2020-10-29T16:45:15Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2020-10-29T16:45:15Z"}, "message": "rustc_llvm: unwrap LLVMMetadataRef before casting\n\nDirectly casting the opaque pointer was [reported] to cause an\n\"incomplete type\" error with GCC 9.3:\n\n```\nllvm-wrapper/RustWrapper.cpp:939:31:   required from here\n/usr/include/c++/9.3/type_traits:1301:12: error: invalid use of incomplete type 'struct LLVMOpaqueMetadata'\n 1301 |     struct is_base_of\n      |            ^~~~~~~~~~\nIn file included from [...]/rust/src/llvm-project/llvm/include/llvm-c/BitReader.h:23,\n                 from llvm-wrapper/LLVMWrapper.h:1,\n                 from llvm-wrapper/RustWrapper.cpp:1:\n[...]/rust/src/llvm-project/llvm/include/llvm-c/Types.h:89:16: note: forward declaration of 'struct LLVMOpaqueMetadata'\n   89 | typedef struct LLVMOpaqueMetadata *LLVMMetadataRef;\n      |                ^~~~~~~~~~~~~~~~~~\n```\n\n[reported]: https://zulip-archive.rust-lang.org/182449tcompilerhelp/12215halprustcllvmbuildfail.html#214915124\n\nA simple `unwrap` fixes the issue.", "tree": {"sha": "47b1c7ca68f8ab02723fc1c78edba07c6e74802b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47b1c7ca68f8ab02723fc1c78edba07c6e74802b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dcbf2f324f3e3c116b3a7f45b501e2382e89510d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dcbf2f324f3e3c116b3a7f45b501e2382e89510d", "html_url": "https://github.com/rust-lang/rust/commit/dcbf2f324f3e3c116b3a7f45b501e2382e89510d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dcbf2f324f3e3c116b3a7f45b501e2382e89510d/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a53fb30e3bf2655b0563da6d561c23cda5f3ec11", "url": "https://api.github.com/repos/rust-lang/rust/commits/a53fb30e3bf2655b0563da6d561c23cda5f3ec11", "html_url": "https://github.com/rust-lang/rust/commit/a53fb30e3bf2655b0563da6d561c23cda5f3ec11"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "c689ac9427abe65491cd493622601e8a892fd26d", "filename": "compiler/rustc_llvm/llvm-wrapper/RustWrapper.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dcbf2f324f3e3c116b3a7f45b501e2382e89510d/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/dcbf2f324f3e3c116b3a7f45b501e2382e89510d/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp?ref=dcbf2f324f3e3c116b3a7f45b501e2382e89510d", "patch": "@@ -936,7 +936,7 @@ extern \"C\" LLVMValueRef LLVMRustDIBuilderInsertDeclareAtEnd(\n   return wrap(Builder->insertDeclare(\n       unwrap(V), unwrap<DILocalVariable>(VarInfo),\n       Builder->createExpression(llvm::ArrayRef<int64_t>(AddrOps, AddrOpsCount)),\n-      DebugLoc(cast<MDNode>(DL)),\n+      DebugLoc(cast<MDNode>(unwrap(DL))),\n       unwrap(InsertAtEnd)));\n }\n "}]}