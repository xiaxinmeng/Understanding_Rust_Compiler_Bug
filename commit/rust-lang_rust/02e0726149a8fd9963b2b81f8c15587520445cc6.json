{"sha": "02e0726149a8fd9963b2b81f8c15587520445cc6", "node_id": "C_kwDOAAsO6NoAKDAyZTA3MjYxNDlhOGZkOTk2M2IyYjgxZjhjMTU1ODc1MjA0NDVjYzY", "commit": {"author": {"name": "togami2864", "email": "tuabobo123@gmail.com", "date": "2021-11-15T17:29:02Z"}, "committer": {"name": "togami2864", "email": "tuabobo123@gmail.com", "date": "2021-11-15T17:29:02Z"}, "message": "fix a bug that the closure arguments are not displayed", "tree": {"sha": "f536178e208ead454d4f2c4a2b5389ddd13eebee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f536178e208ead454d4f2c4a2b5389ddd13eebee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02e0726149a8fd9963b2b81f8c15587520445cc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02e0726149a8fd9963b2b81f8c15587520445cc6", "html_url": "https://github.com/rust-lang/rust/commit/02e0726149a8fd9963b2b81f8c15587520445cc6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02e0726149a8fd9963b2b81f8c15587520445cc6/comments", "author": {"login": "togami2864", "id": 62130798, "node_id": "MDQ6VXNlcjYyMTMwNzk4", "avatar_url": "https://avatars.githubusercontent.com/u/62130798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/togami2864", "html_url": "https://github.com/togami2864", "followers_url": "https://api.github.com/users/togami2864/followers", "following_url": "https://api.github.com/users/togami2864/following{/other_user}", "gists_url": "https://api.github.com/users/togami2864/gists{/gist_id}", "starred_url": "https://api.github.com/users/togami2864/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/togami2864/subscriptions", "organizations_url": "https://api.github.com/users/togami2864/orgs", "repos_url": "https://api.github.com/users/togami2864/repos", "events_url": "https://api.github.com/users/togami2864/events{/privacy}", "received_events_url": "https://api.github.com/users/togami2864/received_events", "type": "User", "site_admin": false}, "committer": {"login": "togami2864", "id": 62130798, "node_id": "MDQ6VXNlcjYyMTMwNzk4", "avatar_url": "https://avatars.githubusercontent.com/u/62130798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/togami2864", "html_url": "https://github.com/togami2864", "followers_url": "https://api.github.com/users/togami2864/followers", "following_url": "https://api.github.com/users/togami2864/following{/other_user}", "gists_url": "https://api.github.com/users/togami2864/gists{/gist_id}", "starred_url": "https://api.github.com/users/togami2864/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/togami2864/subscriptions", "organizations_url": "https://api.github.com/users/togami2864/orgs", "repos_url": "https://api.github.com/users/togami2864/repos", "events_url": "https://api.github.com/users/togami2864/events{/privacy}", "received_events_url": "https://api.github.com/users/togami2864/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bbffe825ed12231e333bd641eb46aa477cde3b8f", "url": "https://api.github.com/repos/rust-lang/rust/commits/bbffe825ed12231e333bd641eb46aa477cde3b8f", "html_url": "https://github.com/rust-lang/rust/commit/bbffe825ed12231e333bd641eb46aa477cde3b8f"}], "stats": {"total": 28, "additions": 9, "deletions": 19}, "files": [{"sha": "a18db4d93714260d439dddb00e56c0f3187eaab1", "filename": "clippy_lints/src/methods/option_map_or_none.rs", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/02e0726149a8fd9963b2b81f8c15587520445cc6/clippy_lints%2Fsrc%2Fmethods%2Foption_map_or_none.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02e0726149a8fd9963b2b81f8c15587520445cc6/clippy_lints%2Fsrc%2Fmethods%2Foption_map_or_none.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Foption_map_or_none.rs?ref=02e0726149a8fd9963b2b81f8c15587520445cc6", "patch": "@@ -21,7 +21,7 @@ fn reduce_unit_expression<'a>(\n             match block.expr {\n                 Some(inner_expr) => {\n                     // If block only contains an expression,\n-                    // reduce `{ X }` to `X`\n+                    // reduce `|x| { x + 1 }` to `|x| x + 1`\n                     reduce_unit_expression(cx, inner_expr)\n                 },\n                 _ => None,\n@@ -51,7 +51,6 @@ pub(super) fn check<'tcx>(\n         return;\n     }\n \n-    // let (lint_name, msg, instead, hint) = {\n     let default_arg_is_none = if let hir::ExprKind::Path(ref qpath) = def_arg.kind {\n         is_lang_ctor(cx, qpath, OptionNone)\n     } else {\n@@ -71,7 +70,8 @@ pub(super) fn check<'tcx>(\n \n     if is_option {\n         let self_snippet = snippet(cx, recv.span, \"..\");\n-        if let hir::ExprKind::Closure(_, _, id, _, _) = map_arg.kind {\n+        if let hir::ExprKind::Closure(_, _, id, span, _) = map_arg.kind {\n+            let arg_snippet = snippet(cx, span, \"..\");\n             if_chain! {\n                 let body = cx.tcx.hir().body(id);\n                 if let Some((func, arg_char)) = reduce_unit_expression(cx, &body.value);\n@@ -89,7 +89,7 @@ pub(super) fn check<'tcx>(\n                         expr.span,\n                         msg,\n                         \"try using `map` instead\",\n-                        format!(\"{0}.map({1})\", self_snippet, func_snippet),\n+                        format!(\"{0}.map({1} {2})\", self_snippet, arg_snippet,func_snippet),\n                         Applicability::MachineApplicable,\n                     );\n                 }\n@@ -99,30 +99,27 @@ pub(super) fn check<'tcx>(\n         let func_snippet = snippet(cx, map_arg.span, \"..\");\n         let msg = \"called `map_or(None, ..)` on an `Option` value. This can be done more directly by calling \\\n                        `and_then(..)` instead\";\n-        span_lint_and_sugg(\n+        return span_lint_and_sugg(\n             cx,\n             OPTION_MAP_OR_NONE,\n             expr.span,\n             msg,\n             \"try using `and_then` instead\",\n             format!(\"{0}.and_then({1})\", self_snippet, func_snippet),\n             Applicability::MachineApplicable,\n-        )\n+        );\n     } else if f_arg_is_some {\n         let msg = \"called `map_or(None, Some)` on a `Result` value. This can be done more directly by calling \\\n                        `ok()` instead\";\n         let self_snippet = snippet(cx, recv.span, \"..\");\n-        span_lint_and_sugg(\n+        return span_lint_and_sugg(\n             cx,\n             RESULT_MAP_OR_INTO_OPTION,\n             expr.span,\n             msg,\n             \"try using `ok` instead\",\n             format!(\"{0}.ok()\", self_snippet),\n             Applicability::MachineApplicable,\n-        )\n-    } else {\n-        // nothing to lint!\n-        return;\n+        );\n     }\n }"}, {"sha": "560b767fba2ae5cef37ba30aff21206608837dee", "filename": "tests/ui/option_map_or_none.stderr", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/02e0726149a8fd9963b2b81f8c15587520445cc6/tests%2Fui%2Foption_map_or_none.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/02e0726149a8fd9963b2b81f8c15587520445cc6/tests%2Fui%2Foption_map_or_none.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_map_or_none.stderr?ref=02e0726149a8fd9963b2b81f8c15587520445cc6", "patch": "@@ -13,14 +13,7 @@ LL |       let _ :Option<i32> = opt.map_or(None, |x| {\n    |  __________________________^\n LL | |                         Some(x + 1)\n LL | |                        });\n-   | |_________________________^\n-   |\n-help: try using `map` instead\n-   |\n-LL ~     let _ :Option<i32> = opt.map(|x| {\n-LL +                         x + 1\n-LL ~                        });\n-   |\n+   | |_________________________^ help: try using `map` instead: `opt.map(|x| x + 1)`\n \n error: called `map_or(None, ..)` on an `Option` value. This can be done more directly by calling `and_then(..)` instead\n   --> $DIR/option_map_or_none.rs:20:26"}]}