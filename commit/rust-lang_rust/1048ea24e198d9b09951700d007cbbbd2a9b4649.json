{"sha": "1048ea24e198d9b09951700d007cbbbd2a9b4649", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwNDhlYTI0ZTE5OGQ5YjA5OTUxNzAwZDAwN2NiYmJkMmE5YjQ2NDk=", "commit": {"author": {"name": "Jonathan Turner", "email": "jonathandturner@users.noreply.github.com", "date": "2016-08-31T13:29:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-31T13:29:09Z"}, "message": "Rollup merge of #36101 - frewsxcv:debug-path-components, r=alexcrichton\n\nImplement `Debug` for `std::path::{Components,Iter}`.\n\nNone", "tree": {"sha": "2b57ac2cc6615e8b677118e54fd2049974f9bcfc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b57ac2cc6615e8b677118e54fd2049974f9bcfc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1048ea24e198d9b09951700d007cbbbd2a9b4649", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1048ea24e198d9b09951700d007cbbbd2a9b4649", "html_url": "https://github.com/rust-lang/rust/commit/1048ea24e198d9b09951700d007cbbbd2a9b4649", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1048ea24e198d9b09951700d007cbbbd2a9b4649/comments", "author": {"login": "jonathandturner", "id": 111457284, "node_id": "O_kgDOBqS0BA", "avatar_url": "https://avatars.githubusercontent.com/u/111457284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathandturner", "html_url": "https://github.com/jonathandturner", "followers_url": "https://api.github.com/users/jonathandturner/followers", "following_url": "https://api.github.com/users/jonathandturner/following{/other_user}", "gists_url": "https://api.github.com/users/jonathandturner/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathandturner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathandturner/subscriptions", "organizations_url": "https://api.github.com/users/jonathandturner/orgs", "repos_url": "https://api.github.com/users/jonathandturner/repos", "events_url": "https://api.github.com/users/jonathandturner/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathandturner/received_events", "type": "Organization", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18b5ae301978a2afeac20b9e38d0ebd71eb49752", "url": "https://api.github.com/repos/rust-lang/rust/commits/18b5ae301978a2afeac20b9e38d0ebd71eb49752", "html_url": "https://github.com/rust-lang/rust/commit/18b5ae301978a2afeac20b9e38d0ebd71eb49752"}, {"sha": "268b3f58184cc7efa8196a28cccffcc01a5d61ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/268b3f58184cc7efa8196a28cccffcc01a5d61ac", "html_url": "https://github.com/rust-lang/rust/commit/268b3f58184cc7efa8196a28cccffcc01a5d61ac"}], "stats": {"total": 81, "additions": 81, "deletions": 0}, "files": [{"sha": "dbf17b3c813f6d10da9f7f6f25f4bb58cb866fea", "filename": "src/libstd/path.rs", "status": "modified", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/1048ea24e198d9b09951700d007cbbbd2a9b4649/src%2Flibstd%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1048ea24e198d9b09951700d007cbbbd2a9b4649/src%2Flibstd%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath.rs?ref=1048ea24e198d9b09951700d007cbbbd2a9b4649", "patch": "@@ -639,6 +639,25 @@ pub struct Iter<'a> {\n     inner: Components<'a>,\n }\n \n+#[stable(feature = \"path_components_debug\", since = \"1.13.0\")]\n+impl<'a> fmt::Debug for Components<'a> {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        struct DebugHelper<'a>(&'a Path);\n+\n+        impl<'a> fmt::Debug for DebugHelper<'a> {\n+            fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+                f.debug_list()\n+                    .entries(self.0.components())\n+                    .finish()\n+            }\n+        }\n+\n+        f.debug_tuple(\"Components\")\n+            .field(&DebugHelper(self.as_path()))\n+            .finish()\n+    }\n+}\n+\n impl<'a> Components<'a> {\n     // how long is the prefix, if any?\n     #[inline]\n@@ -818,6 +837,25 @@ impl<'a> AsRef<OsStr> for Components<'a> {\n     }\n }\n \n+#[stable(feature = \"path_iter_debug\", since = \"1.13.0\")]\n+impl<'a> fmt::Debug for Iter<'a> {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        struct DebugHelper<'a>(&'a Path);\n+\n+        impl<'a> fmt::Debug for DebugHelper<'a> {\n+            fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+                f.debug_list()\n+                    .entries(self.0.iter())\n+                    .finish()\n+            }\n+        }\n+\n+        f.debug_tuple(\"Iter\")\n+            .field(&DebugHelper(self.as_path()))\n+            .finish()\n+    }\n+}\n+\n impl<'a> Iter<'a> {\n     /// Extracts a slice corresponding to the portion of the path remaining for iteration.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -3483,4 +3521,47 @@ mod tests {\n                 );\n         }\n     }\n+\n+    #[test]\n+    fn test_components_debug() {\n+        let path = Path::new(\"/tmp\");\n+\n+        let mut components = path.components();\n+\n+        let expected = \"Components([RootDir, Normal(\\\"tmp\\\")])\";\n+        let actual = format!(\"{:?}\", components);\n+        assert_eq!(expected, actual);\n+\n+        let _ = components.next().unwrap();\n+        let expected = \"Components([Normal(\\\"tmp\\\")])\";\n+        let actual = format!(\"{:?}\", components);\n+        assert_eq!(expected, actual);\n+\n+        let _ = components.next().unwrap();\n+        let expected = \"Components([])\";\n+        let actual = format!(\"{:?}\", components);\n+        assert_eq!(expected, actual);\n+    }\n+\n+    #[cfg(unix)]\n+    #[test]\n+    fn test_iter_debug() {\n+        let path = Path::new(\"/tmp\");\n+\n+        let mut iter = path.iter();\n+\n+        let expected = \"Iter([\\\"/\\\", \\\"tmp\\\"])\";\n+        let actual = format!(\"{:?}\", iter);\n+        assert_eq!(expected, actual);\n+\n+        let _ = iter.next().unwrap();\n+        let expected = \"Iter([\\\"tmp\\\"])\";\n+        let actual = format!(\"{:?}\", iter);\n+        assert_eq!(expected, actual);\n+\n+        let _ = iter.next().unwrap();\n+        let expected = \"Iter([])\";\n+        let actual = format!(\"{:?}\", iter);\n+        assert_eq!(expected, actual);\n+    }\n }"}]}