{"sha": "cab360fe3105264f483c4f2b1a33f3d9010e3436", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhYjM2MGZlMzEwNTI2NGY0ODNjNGYyYjFhMzNmM2Q5MDEwZTM0MzY=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-07-17T12:58:49Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-07-17T12:58:49Z"}, "message": "Correctly resolve assoc. types in path bindings", "tree": {"sha": "b7fda0bb6a3871d597cbbaf5e9034cc99cb1709e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7fda0bb6a3871d597cbbaf5e9034cc99cb1709e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cab360fe3105264f483c4f2b1a33f3d9010e3436", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cab360fe3105264f483c4f2b1a33f3d9010e3436", "html_url": "https://github.com/rust-lang/rust/commit/cab360fe3105264f483c4f2b1a33f3d9010e3436", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cab360fe3105264f483c4f2b1a33f3d9010e3436/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23df3834333a4db1449b2ba52e878ade47d1dfb2", "url": "https://api.github.com/repos/rust-lang/rust/commits/23df3834333a4db1449b2ba52e878ade47d1dfb2", "html_url": "https://github.com/rust-lang/rust/commit/23df3834333a4db1449b2ba52e878ade47d1dfb2"}], "stats": {"total": 102, "additions": 102, "deletions": 0}, "files": [{"sha": "4e3f428fae78d8f0384b2879543f24c49e8ea4e2", "filename": "crates/ra_ide/src/goto_definition.rs", "status": "modified", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/cab360fe3105264f483c4f2b1a33f3d9010e3436/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cab360fe3105264f483c4f2b1a33f3d9010e3436/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs?ref=cab360fe3105264f483c4f2b1a33f3d9010e3436", "patch": "@@ -881,6 +881,86 @@ pub mod module {\n     macro_rules! _mac { () => { () } }\n     pub use crate::_mac as mac;\n }\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn goto_def_for_assoc_ty_in_path() {\n+        check(\n+            r#\"\n+trait Iterator {\n+    type Item;\n+       //^^^^\n+}\n+\n+fn f() -> impl Iterator<Item<|> = u8> {}\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn goto_def_for_assoc_ty_in_path_multiple() {\n+        check(\n+            r#\"\n+trait Iterator {\n+    type A;\n+       //^\n+    type B;\n+}\n+\n+fn f() -> impl Iterator<A<|> = u8, B = ()> {}\n+\"#,\n+        );\n+        check(\n+            r#\"\n+trait Iterator {\n+    type A;\n+    type B;\n+       //^\n+}\n+\n+fn f() -> impl Iterator<A = u8, B<|> = ()> {}\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn goto_def_for_assoc_ty_ufcs() {\n+        check(\n+            r#\"\n+trait Iterator {\n+    type Item;\n+       //^^^^\n+}\n+\n+fn g() -> <() as Iterator<Item<|> = ()>>::Item {}\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn goto_def_for_assoc_ty_ufcs_multiple() {\n+        check(\n+            r#\"\n+trait Iterator {\n+    type A;\n+       //^\n+    type B;\n+}\n+\n+fn g() -> <() as Iterator<A<|> = (), B = u8>>::B {}\n+\"#,\n+        );\n+        check(\n+            r#\"\n+trait Iterator {\n+    type A;\n+    type B;\n+       //^\n+}\n+\n+fn g() -> <() as Iterator<A = (), B<|> = u8>>::A {}\n \"#,\n         );\n     }"}, {"sha": "e06b189a00a24892dd6bf3275872f597351deafc", "filename": "crates/ra_ide_db/src/defs.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/cab360fe3105264f483c4f2b1a33f3d9010e3436/crates%2Fra_ide_db%2Fsrc%2Fdefs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cab360fe3105264f483c4f2b1a33f3d9010e3436/crates%2Fra_ide_db%2Fsrc%2Fdefs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Fdefs.rs?ref=cab360fe3105264f483c4f2b1a33f3d9010e3436", "patch": "@@ -254,6 +254,28 @@ pub fn classify_name_ref(\n         }\n     }\n \n+    if ast::AssocTypeArg::cast(parent.clone()).is_some() {\n+        // `Trait<Assoc = Ty>`\n+        //        ^^^^^\n+        let path = name_ref.syntax().ancestors().find_map(ast::Path::cast)?;\n+        let resolved = sema.resolve_path(&path)?;\n+        if let PathResolution::Def(ModuleDef::Trait(tr)) = resolved {\n+            if let Some(ty) = tr\n+                .items(sema.db)\n+                .iter()\n+                .filter_map(|assoc| match assoc {\n+                    hir::AssocItem::TypeAlias(it) => Some(*it),\n+                    _ => None,\n+                })\n+                .find(|alias| alias.name(sema.db).to_string() == **name_ref.text())\n+            {\n+                return Some(NameRefClass::Definition(Definition::ModuleDef(\n+                    ModuleDef::TypeAlias(ty),\n+                )));\n+            }\n+        }\n+    }\n+\n     if let Some(macro_call) = parent.ancestors().find_map(ast::MacroCall::cast) {\n         if let Some(path) = macro_call.path() {\n             if path.qualifier().is_none() {"}]}