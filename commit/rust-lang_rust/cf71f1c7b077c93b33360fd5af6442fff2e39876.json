{"sha": "cf71f1c7b077c93b33360fd5af6442fff2e39876", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmNzFmMWM3YjA3N2M5M2IzMzM2MGZkNWFmNjQ0MmZmZjJlMzk4NzY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-08-16T11:21:11Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-08-16T11:21:11Z"}, "message": "auto merge of #16525 : thestinger/rust/readonly, r=pcwalton\n\nThese are already marked as `noalias` due to the immutability guarantee\r\n(see 4c2d4cd3dea344e81e4df24382ac3f23e2f86f40), but more information can\r\nbe bubbled up to the caller via `readonly`.", "tree": {"sha": "fc4a96829918a5d83bdfdb1e3d69739e451cf131", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc4a96829918a5d83bdfdb1e3d69739e451cf131"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf71f1c7b077c93b33360fd5af6442fff2e39876", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf71f1c7b077c93b33360fd5af6442fff2e39876", "html_url": "https://github.com/rust-lang/rust/commit/cf71f1c7b077c93b33360fd5af6442fff2e39876", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf71f1c7b077c93b33360fd5af6442fff2e39876/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec9476cd63af58d55e552532d14040d972392bd6", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec9476cd63af58d55e552532d14040d972392bd6", "html_url": "https://github.com/rust-lang/rust/commit/ec9476cd63af58d55e552532d14040d972392bd6"}, {"sha": "48edb32a3fc8ba6cc3db9a9d11f5201a919391f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/48edb32a3fc8ba6cc3db9a9d11f5201a919391f5", "html_url": "https://github.com/rust-lang/rust/commit/48edb32a3fc8ba6cc3db9a9d11f5201a919391f5"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "8ea99a5cad3ff3df5f6492e79a6c014d1ff2204e", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/cf71f1c7b077c93b33360fd5af6442fff2e39876/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf71f1c7b077c93b33360fd5af6442fff2e39876/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=cf71f1c7b077c93b33360fd5af6442fff2e39876", "patch": "@@ -2278,7 +2278,7 @@ pub fn get_fn_llvm_attributes(ccx: &CrateContext, fn_ty: ty::t)\n         match ty::get(ret_ty).sty {\n             // `~` pointer return values never alias because ownership\n             // is transferred\n-            ty::ty_uniq(it)  if match ty::get(it).sty {\n+            ty::ty_uniq(it) if match ty::get(it).sty {\n                 ty::ty_str | ty::ty_vec(..) | ty::ty_trait(..) => true, _ => false\n             } => {}\n             ty::ty_uniq(_) => {\n@@ -2354,15 +2354,21 @@ pub fn get_fn_llvm_attributes(ccx: &CrateContext, fn_ty: ty::t)\n             }\n \n             // `&mut` pointer parameters never alias other parameters, or mutable global data\n-            // `&` pointer parameters never alias either (for LLVM's purposes) as long as the\n-            // interior is safe\n+            //\n+            // `&T` where `T` contains no `UnsafeCell<U>` is immutable, and can be marked as both\n+            // `readonly` and `noalias`, as LLVM's definition of `noalias` is based solely on\n+            // memory dependencies rather than pointer equality\n             ty::ty_rptr(b, mt) if mt.mutbl == ast::MutMutable ||\n                                   !ty::type_contents(ccx.tcx(), mt.ty).interior_unsafe() => {\n \n                 let llsz = llsize_of_real(ccx, type_of::type_of(ccx, mt.ty));\n                 attrs.arg(idx, llvm::NoAliasAttribute)\n                      .arg(idx, llvm::DereferenceableAttribute(llsz));\n \n+                if mt.mutbl == ast::MutImmutable {\n+                    attrs.arg(idx, llvm::ReadOnlyAttribute);\n+                }\n+\n                 match b {\n                     ReLateBound(_, BrAnon(_)) => {\n                         attrs.arg(idx, llvm::NoCaptureAttribute);"}]}