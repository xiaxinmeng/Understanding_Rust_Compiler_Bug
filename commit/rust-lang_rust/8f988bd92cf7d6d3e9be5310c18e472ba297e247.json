{"sha": "8f988bd92cf7d6d3e9be5310c18e472ba297e247", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmOTg4YmQ5MmNmN2Q2ZDNlOWJlNTMxMGMxOGU0NzJiYTI5N2UyNDc=", "commit": {"author": {"name": "Ohad Ravid", "email": "ohad.rv@gmail.com", "date": "2019-10-23T20:22:13Z"}, "committer": {"name": "Ohad Ravid", "email": "ohad.rv@gmail.com", "date": "2019-10-26T11:08:50Z"}, "message": "Coherence should allow fundamental types to impl traits", "tree": {"sha": "abfda1e6610844b0296e5fcb093a3194e21ba6b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/abfda1e6610844b0296e5fcb093a3194e21ba6b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f988bd92cf7d6d3e9be5310c18e472ba297e247", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f988bd92cf7d6d3e9be5310c18e472ba297e247", "html_url": "https://github.com/rust-lang/rust/commit/8f988bd92cf7d6d3e9be5310c18e472ba297e247", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f988bd92cf7d6d3e9be5310c18e472ba297e247/comments", "author": {"login": "ohadravid", "id": 2358365, "node_id": "MDQ6VXNlcjIzNTgzNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/2358365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ohadravid", "html_url": "https://github.com/ohadravid", "followers_url": "https://api.github.com/users/ohadravid/followers", "following_url": "https://api.github.com/users/ohadravid/following{/other_user}", "gists_url": "https://api.github.com/users/ohadravid/gists{/gist_id}", "starred_url": "https://api.github.com/users/ohadravid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ohadravid/subscriptions", "organizations_url": "https://api.github.com/users/ohadravid/orgs", "repos_url": "https://api.github.com/users/ohadravid/repos", "events_url": "https://api.github.com/users/ohadravid/events{/privacy}", "received_events_url": "https://api.github.com/users/ohadravid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ohadravid", "id": 2358365, "node_id": "MDQ6VXNlcjIzNTgzNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/2358365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ohadravid", "html_url": "https://github.com/ohadravid", "followers_url": "https://api.github.com/users/ohadravid/followers", "following_url": "https://api.github.com/users/ohadravid/following{/other_user}", "gists_url": "https://api.github.com/users/ohadravid/gists{/gist_id}", "starred_url": "https://api.github.com/users/ohadravid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ohadravid/subscriptions", "organizations_url": "https://api.github.com/users/ohadravid/orgs", "repos_url": "https://api.github.com/users/ohadravid/repos", "events_url": "https://api.github.com/users/ohadravid/events{/privacy}", "received_events_url": "https://api.github.com/users/ohadravid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f466f52c1bf8f2e4454e31c683a88625ad4b4033", "url": "https://api.github.com/repos/rust-lang/rust/commits/f466f52c1bf8f2e4454e31c683a88625ad4b4033", "html_url": "https://github.com/rust-lang/rust/commit/f466f52c1bf8f2e4454e31c683a88625ad4b4033"}], "stats": {"total": 46, "additions": 42, "deletions": 4}, "files": [{"sha": "2734fce4ea55ab9e3ea64fad1aa24ba724ad9fab", "filename": "src/librustc/traits/coherence.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8f988bd92cf7d6d3e9be5310c18e472ba297e247/src%2Flibrustc%2Ftraits%2Fcoherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f988bd92cf7d6d3e9be5310c18e472ba297e247/src%2Flibrustc%2Ftraits%2Fcoherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fcoherence.rs?ref=8f988bd92cf7d6d3e9be5310c18e472ba297e247", "patch": "@@ -378,15 +378,21 @@ fn orphan_check_trait_ref<'tcx>(\n         //      Let Ti be the first such type.\n         //     - No uncovered type parameters P1..=Pn may appear in T0..Ti (excluding Ti)\n         //\n-        fn uncover_fundamental_ty(ty: Ty<'_>) -> Vec<Ty<'_>> {\n-            if fundamental_ty(ty) {\n-                ty.walk_shallow().flat_map(|ty| uncover_fundamental_ty(ty)).collect()\n+        fn uncover_fundamental_ty<'a>(\n+            tcx: TyCtxt<'_>,\n+            ty: Ty<'a>,\n+            in_crate: InCrate,\n+        ) -> Vec<Ty<'a>> {\n+            if fundamental_ty(ty) && !ty_is_local(tcx, ty, in_crate) {\n+                ty.walk_shallow().flat_map(|ty| uncover_fundamental_ty(tcx, ty, in_crate)).collect()\n             } else {\n                 vec![ty]\n             }\n         }\n \n-        for input_ty in trait_ref.input_types().flat_map(uncover_fundamental_ty) {\n+        for input_ty in\n+            trait_ref.input_types().flat_map(|ty| uncover_fundamental_ty(tcx, ty, in_crate))\n+        {\n             debug!(\"orphan_check_trait_ref: check ty `{:?}`\", input_ty);\n             if ty_is_local(tcx, input_ty, in_crate) {\n                 debug!(\"orphan_check_trait_ref: ty_is_local `{:?}`\", input_ty);"}, {"sha": "d461b5abd60ff849f03a568b89443c43e739b878", "filename": "src/test/ui/coherence/impl-foreign-for-locally-defined-fundamental.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8f988bd92cf7d6d3e9be5310c18e472ba297e247/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-locally-defined-fundamental.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f988bd92cf7d6d3e9be5310c18e472ba297e247/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-locally-defined-fundamental.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-locally-defined-fundamental.rs?ref=8f988bd92cf7d6d3e9be5310c18e472ba297e247", "patch": "@@ -0,0 +1,16 @@\n+#![feature(fundamental)]\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+// check-pass\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+\n+#[fundamental]\n+struct Local;\n+\n+impl Remote for Local {}\n+\n+fn main() {}"}, {"sha": "0a3d9e2e0e89c3a8aa884cb119f78475de810b73", "filename": "src/test/ui/coherence/impl-foreign-for-locally-defined-fundamental[foreign].rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8f988bd92cf7d6d3e9be5310c18e472ba297e247/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-locally-defined-fundamental%5Bforeign%5D.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f988bd92cf7d6d3e9be5310c18e472ba297e247/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-locally-defined-fundamental%5Bforeign%5D.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign-for-locally-defined-fundamental%5Bforeign%5D.rs?ref=8f988bd92cf7d6d3e9be5310c18e472ba297e247", "patch": "@@ -0,0 +1,16 @@\n+#![feature(fundamental)]\n+#![feature(re_rebalance_coherence)]\n+\n+// compile-flags:--crate-name=test\n+// aux-build:coherence_lib.rs\n+// check-pass\n+\n+extern crate coherence_lib as lib;\n+use lib::*;\n+\n+#[fundamental]\n+struct MyBox<T>(T);\n+\n+impl<T> Remote for MyBox<T> {}\n+\n+fn main() {}"}]}