{"sha": "fa68567a1fa87e92ad39b1749a134faedbbeae48", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhNjg1NjdhMWZhODdlOTJhZDM5YjE3NDlhMTM0ZmFlZGJiZWFlNDg=", "commit": {"author": {"name": "Ian Jackson", "email": "ijackson@chiark.greenend.org.uk", "date": "2021-01-04T17:37:34Z"}, "committer": {"name": "Ian Jackson", "email": "ijackson@chiark.greenend.org.uk", "date": "2021-01-13T12:50:29Z"}, "message": "unix ExitStatus: Add tracking issue to new methods\n\nSigned-off-by: Ian Jackson <ijackson@chiark.greenend.org.uk>", "tree": {"sha": "507ae05316bb88a1d1a6f091b89623fc9d9abf34", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/507ae05316bb88a1d1a6f091b89623fc9d9abf34"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa68567a1fa87e92ad39b1749a134faedbbeae48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa68567a1fa87e92ad39b1749a134faedbbeae48", "html_url": "https://github.com/rust-lang/rust/commit/fa68567a1fa87e92ad39b1749a134faedbbeae48", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa68567a1fa87e92ad39b1749a134faedbbeae48/comments", "author": {"login": "ijackson", "id": 2090772, "node_id": "MDQ6VXNlcjIwOTA3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2090772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijackson", "html_url": "https://github.com/ijackson", "followers_url": "https://api.github.com/users/ijackson/followers", "following_url": "https://api.github.com/users/ijackson/following{/other_user}", "gists_url": "https://api.github.com/users/ijackson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijackson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijackson/subscriptions", "organizations_url": "https://api.github.com/users/ijackson/orgs", "repos_url": "https://api.github.com/users/ijackson/repos", "events_url": "https://api.github.com/users/ijackson/events{/privacy}", "received_events_url": "https://api.github.com/users/ijackson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ijackson", "id": 2090772, "node_id": "MDQ6VXNlcjIwOTA3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2090772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijackson", "html_url": "https://github.com/ijackson", "followers_url": "https://api.github.com/users/ijackson/followers", "following_url": "https://api.github.com/users/ijackson/following{/other_user}", "gists_url": "https://api.github.com/users/ijackson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijackson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijackson/subscriptions", "organizations_url": "https://api.github.com/users/ijackson/orgs", "repos_url": "https://api.github.com/users/ijackson/repos", "events_url": "https://api.github.com/users/ijackson/events{/privacy}", "received_events_url": "https://api.github.com/users/ijackson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06a405c49cfcdc091f1d84a3c6147d78fbdb5928", "url": "https://api.github.com/repos/rust-lang/rust/commits/06a405c49cfcdc091f1d84a3c6147d78fbdb5928", "html_url": "https://github.com/rust-lang/rust/commit/06a405c49cfcdc091f1d84a3c6147d78fbdb5928"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "889382d3ed4ec684eb6331a540fdf2d4bd45118e", "filename": "library/std/src/sys/unix/ext/process.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fa68567a1fa87e92ad39b1749a134faedbbeae48/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa68567a1fa87e92ad39b1749a134faedbbeae48/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fprocess.rs?ref=fa68567a1fa87e92ad39b1749a134faedbbeae48", "patch": "@@ -177,25 +177,25 @@ pub trait ExitStatusExt {\n     fn signal(&self) -> Option<i32>;\n \n     /// If the process was terminated by a signal, says whether it dumped core.\n-    #[unstable(feature = \"unix_process_wait_more\", issue = \"none\")]\n+    #[unstable(feature = \"unix_process_wait_more\", issue = \"80695\")]\n     fn core_dumped(&self) -> bool;\n \n     /// If the process was stopped by a signal, returns that signal.\n     ///\n     /// In other words, if `WIFSTOPPED`, this returns `WSTOPSIG`.  This is only possible if the status came from\n     /// a `wait` system call which was passed `WUNTRACED`, was then converted into an `ExitStatus`.\n-    #[unstable(feature = \"unix_process_wait_more\", issue = \"none\")]\n+    #[unstable(feature = \"unix_process_wait_more\", issue = \"80695\")]\n     fn stopped_signal(&self) -> Option<i32>;\n \n     /// Whether the process was continued from a stopped status.\n     ///\n     /// Ie, `WIFCONTINUED`.  This is only possible if the status came from a `wait` system call\n     /// which was passed `WCONTINUED`, was then converted into an `ExitStatus`.\n-    #[unstable(feature = \"unix_process_wait_more\", issue = \"none\")]\n+    #[unstable(feature = \"unix_process_wait_more\", issue = \"80695\")]\n     fn continued(&self) -> bool;\n \n     /// Returns the underlying raw `wait` status.\n-    #[unstable(feature = \"unix_process_wait_more\", issue = \"none\")]\n+    #[unstable(feature = \"unix_process_wait_more\", issue = \"80695\")]\n     fn into_raw(self) -> i32;\n }\n "}]}