{"sha": "26bc88d48c2e780b3a56f77b3f8b8d8e3c383ade", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2YmM4OGQ0OGMyZTc4MGIzYTU2Zjc3YjNmOGI4ZDhlM2MzODNhZGU=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-06-12T13:30:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-06-12T13:30:20Z"}, "message": "Merge pull request #2839 from mikerite/duration_subsec_pr_2\n\nAdd duration_subsec lint", "tree": {"sha": "87fe2373a11f5d9428d6477c4fb18f75ae74becf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87fe2373a11f5d9428d6477c4fb18f75ae74becf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26bc88d48c2e780b3a56f77b3f8b8d8e3c383ade", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbH8rsCRBK7hj4Ov3rIwAAdHIIAAc1peIoTSl78TFO2bPK6fTW\nvxB9+3oBL5zqqB7+A+LbjR43864ERbJVJLKFeDiM0bzCS7K5foPAlu3p7EGAIo05\nuKfZnnlPXLPwrx9GrOACdX4fUkSzM3wPvrGhGY0J5l6tirMctUDEHiiu9RP5Mdyk\ngZDlrT48gb0gtvMKv+EQl/V/j5KvmNLh24gbSuy/v5HaoyMqAOsaNiGUOEa7jhM7\nBLNHTGFNiOzJV/3RiiOHhE5Sd/ZXr5CSYbe8rK5VFJR0eR5GTbfGDQZ+hnqT+Mii\n3UHR5PMRQznEcoNIXkjPGi/8lgZWuNKf3gHLgCCERW5xI9X+bQvBo13sHf1K2XM=\n=jCiM\n-----END PGP SIGNATURE-----\n", "payload": "tree 87fe2373a11f5d9428d6477c4fb18f75ae74becf\nparent 8f0edba6e991973dc67fc1e2ff51200c695c57fd\nparent 725e9621d0ea1f07ad75d5f26193dfba72ee73b2\nauthor Oliver Schneider <github35764891676564198441@oli-obk.de> 1528810220 -0700\ncommitter GitHub <noreply@github.com> 1528810220 -0700\n\nMerge pull request #2839 from mikerite/duration_subsec_pr_2\n\nAdd duration_subsec lint"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26bc88d48c2e780b3a56f77b3f8b8d8e3c383ade", "html_url": "https://github.com/rust-lang/rust/commit/26bc88d48c2e780b3a56f77b3f8b8d8e3c383ade", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26bc88d48c2e780b3a56f77b3f8b8d8e3c383ade/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f0edba6e991973dc67fc1e2ff51200c695c57fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f0edba6e991973dc67fc1e2ff51200c695c57fd", "html_url": "https://github.com/rust-lang/rust/commit/8f0edba6e991973dc67fc1e2ff51200c695c57fd"}, {"sha": "725e9621d0ea1f07ad75d5f26193dfba72ee73b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/725e9621d0ea1f07ad75d5f26193dfba72ee73b2", "html_url": "https://github.com/rust-lang/rust/commit/725e9621d0ea1f07ad75d5f26193dfba72ee73b2"}], "stats": {"total": 129, "additions": 129, "deletions": 0}, "files": [{"sha": "5f34803c81379c0ab073b24bbda7e2748fe2cde3", "filename": "clippy_lints/src/duration_subsec.rs", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/26bc88d48c2e780b3a56f77b3f8b8d8e3c383ade/clippy_lints%2Fsrc%2Fduration_subsec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26bc88d48c2e780b3a56f77b3f8b8d8e3c383ade/clippy_lints%2Fsrc%2Fduration_subsec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fduration_subsec.rs?ref=26bc88d48c2e780b3a56f77b3f8b8d8e3c383ade", "patch": "@@ -0,0 +1,63 @@\n+use rustc::hir::*;\n+use rustc::lint::*;\n+use syntax::codemap::Spanned;\n+\n+use crate::consts::{constant, Constant};\n+use crate::utils::paths;\n+use crate::utils::{match_type, snippet, span_lint_and_sugg, walk_ptrs_ty};\n+\n+/// **What it does:** Checks for calculation of subsecond microseconds or milliseconds\n+/// from other `Duration` methods.\n+///\n+/// **Why is this bad?** It's more concise to call `Duration::subsec_micros()` or\n+/// `Duration::subsec_millis()` than to calculate them.\n+///\n+/// **Known problems:** None.\n+///\n+/// **Example:**\n+/// ```rust\n+/// let dur = Duration::new(5, 0);\n+/// let _micros = dur.subsec_nanos() / 1_000;\n+/// let _millis = dur.subsec_nanos() / 1_000_000;\n+/// ```\n+declare_clippy_lint! {\n+    pub DURATION_SUBSEC,\n+    complexity,\n+    \"checks for calculation of subsecond microseconds or milliseconds\"\n+}\n+\n+#[derive(Copy, Clone)]\n+pub struct DurationSubsec;\n+\n+impl LintPass for DurationSubsec {\n+    fn get_lints(&self) -> LintArray {\n+        lint_array!(DURATION_SUBSEC)\n+    }\n+}\n+\n+impl<'a, 'tcx> LateLintPass<'a, 'tcx> for DurationSubsec {\n+    fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr) {\n+        if_chain! {\n+            if let ExprBinary(Spanned { node: BiDiv, .. }, ref left, ref right) = expr.node;\n+            if let ExprMethodCall(ref method_path, _ , ref args) = left.node;\n+            if match_type(cx, walk_ptrs_ty(cx.tables.expr_ty(&args[0])), &paths::DURATION);\n+            if let Some((Constant::Int(divisor), _)) = constant(cx, cx.tables, right);\n+            then {\n+                let suggested_fn = match (method_path.name.as_str().as_ref(), divisor) {\n+                    (\"subsec_micros\", 1_000) => \"subsec_millis\",\n+                    (\"subsec_nanos\", 1_000) => \"subsec_micros\",\n+                    (\"subsec_nanos\", 1_000_000) => \"subsec_millis\",\n+                    _ => return,\n+                };\n+                span_lint_and_sugg(\n+                    cx,\n+                    DURATION_SUBSEC,\n+                    expr.span,\n+                    &format!(\"Calling `{}()` is more concise than this calculation\", suggested_fn),\n+                    \"try\",\n+                    format!(\"{}.{}()\", snippet(cx, args[0].span, \"_\"), suggested_fn),\n+                );\n+            }\n+        }\n+    }\n+}"}, {"sha": "52145341400b140335b61bc9c62db1b576843486", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/26bc88d48c2e780b3a56f77b3f8b8d8e3c383ade/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26bc88d48c2e780b3a56f77b3f8b8d8e3c383ade/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=26bc88d48c2e780b3a56f77b3f8b8d8e3c383ade", "patch": "@@ -116,6 +116,7 @@ pub mod doc;\n pub mod double_comparison;\n pub mod double_parens;\n pub mod drop_forget_ref;\n+pub mod duration_subsec;\n pub mod else_if_without_else;\n pub mod empty_enum;\n pub mod entry;\n@@ -423,6 +424,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n     reg.register_late_lint_pass(box inherent_impl::Pass::default());\n     reg.register_late_lint_pass(box neg_cmp_op_on_partial_ord::NoNegCompOpForPartialOrd);\n     reg.register_late_lint_pass(box unwrap::Pass);\n+    reg.register_late_lint_pass(box duration_subsec::DurationSubsec);\n \n \n     reg.register_lint_group(\"clippy_restriction\", vec![\n@@ -517,6 +519,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n         drop_forget_ref::DROP_REF,\n         drop_forget_ref::FORGET_COPY,\n         drop_forget_ref::FORGET_REF,\n+        duration_subsec::DURATION_SUBSEC,\n         entry::MAP_ENTRY,\n         enum_clike::ENUM_CLIKE_UNPORTABLE_VARIANT,\n         enum_variants::ENUM_VARIANT_NAMES,\n@@ -789,6 +792,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n         cyclomatic_complexity::CYCLOMATIC_COMPLEXITY,\n         double_comparison::DOUBLE_COMPARISONS,\n         double_parens::DOUBLE_PARENS,\n+        duration_subsec::DURATION_SUBSEC,\n         eval_order_dependence::DIVERGING_SUB_EXPRESSION,\n         eval_order_dependence::EVAL_ORDER_DEPENDENCE,\n         explicit_write::EXPLICIT_WRITE,"}, {"sha": "5af1a151c8ca64d52c419548027c2b345b39f118", "filename": "clippy_lints/src/utils/paths.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/26bc88d48c2e780b3a56f77b3f8b8d8e3c383ade/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26bc88d48c2e780b3a56f77b3f8b8d8e3c383ade/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fpaths.rs?ref=26bc88d48c2e780b3a56f77b3f8b8d8e3c383ade", "patch": "@@ -27,6 +27,7 @@ pub const DEFAULT_TRAIT: [&str; 3] = [\"core\", \"default\", \"Default\"];\n pub const DISPLAY_FMT_METHOD: [&str; 4] = [\"core\", \"fmt\", \"Display\", \"fmt\"];\n pub const DOUBLE_ENDED_ITERATOR: [&str; 4] = [\"core\", \"iter\", \"traits\", \"DoubleEndedIterator\"];\n pub const DROP: [&str; 3] = [\"core\", \"mem\", \"drop\"];\n+pub const DURATION: [&str; 3] = [\"core\", \"time\", \"Duration\"];\n pub const FMT_ARGUMENTS_NEWV1: [&str; 4] = [\"core\", \"fmt\", \"Arguments\", \"new_v1\"];\n pub const FMT_ARGUMENTS_NEWV1FORMATTED: [&str; 4] = [\"core\", \"fmt\", \"Arguments\", \"new_v1_formatted\"];\n pub const FMT_ARGUMENTV1_NEW: [&str; 4] = [\"core\", \"fmt\", \"ArgumentV1\", \"new\"];"}, {"sha": "8c75c5f2fcd8e7e4b218bbf002ebbcd8414031ce", "filename": "tests/ui/duration_subsec.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/26bc88d48c2e780b3a56f77b3f8b8d8e3c383ade/tests%2Fui%2Fduration_subsec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26bc88d48c2e780b3a56f77b3f8b8d8e3c383ade/tests%2Fui%2Fduration_subsec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fduration_subsec.rs?ref=26bc88d48c2e780b3a56f77b3f8b8d8e3c383ade", "patch": "@@ -0,0 +1,27 @@\n+#![warn(duration_subsec)]\n+\n+use std::time::Duration;\n+\n+fn main() {\n+    let dur = Duration::new(5, 0);\n+\n+    let bad_millis_1 = dur.subsec_micros() / 1_000;\n+    let bad_millis_2 = dur.subsec_nanos() / 1_000_000;\n+    let good_millis = dur.subsec_millis();\n+    assert_eq!(bad_millis_1, good_millis);\n+    assert_eq!(bad_millis_2, good_millis);\n+\n+    let bad_micros = dur.subsec_nanos() / 1_000;\n+    let good_micros = dur.subsec_micros();\n+    assert_eq!(bad_micros, good_micros);\n+\n+    // Handle refs\n+    let _ = (&dur).subsec_nanos() / 1_000;\n+\n+    // Handle constants\n+    const NANOS_IN_MICRO: u32 = 1_000;\n+    let _ = dur.subsec_nanos() / NANOS_IN_MICRO;\n+\n+    // Other literals aren't linted\n+    let _ = dur.subsec_nanos() / 699;\n+}"}, {"sha": "a1aacec3a75ac9b475a4456efca63527c12203dc", "filename": "tests/ui/duration_subsec.stderr", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/26bc88d48c2e780b3a56f77b3f8b8d8e3c383ade/tests%2Fui%2Fduration_subsec.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/26bc88d48c2e780b3a56f77b3f8b8d8e3c383ade/tests%2Fui%2Fduration_subsec.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fduration_subsec.stderr?ref=26bc88d48c2e780b3a56f77b3f8b8d8e3c383ade", "patch": "@@ -0,0 +1,34 @@\n+error: Calling `subsec_millis()` is more concise than this calculation\n+ --> $DIR/duration_subsec.rs:8:24\n+  |\n+8 |     let bad_millis_1 = dur.subsec_micros() / 1_000;\n+  |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `dur.subsec_millis()`\n+  |\n+  = note: `-D duration-subsec` implied by `-D warnings`\n+\n+error: Calling `subsec_millis()` is more concise than this calculation\n+ --> $DIR/duration_subsec.rs:9:24\n+  |\n+9 |     let bad_millis_2 = dur.subsec_nanos() / 1_000_000;\n+  |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `dur.subsec_millis()`\n+\n+error: Calling `subsec_micros()` is more concise than this calculation\n+  --> $DIR/duration_subsec.rs:14:22\n+   |\n+14 |     let bad_micros = dur.subsec_nanos() / 1_000;\n+   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `dur.subsec_micros()`\n+\n+error: Calling `subsec_micros()` is more concise than this calculation\n+  --> $DIR/duration_subsec.rs:19:13\n+   |\n+19 |     let _ = (&dur).subsec_nanos() / 1_000;\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(&dur).subsec_micros()`\n+\n+error: Calling `subsec_micros()` is more concise than this calculation\n+  --> $DIR/duration_subsec.rs:23:13\n+   |\n+23 |     let _ = dur.subsec_nanos() / NANOS_IN_MICRO;\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `dur.subsec_micros()`\n+\n+error: aborting due to 5 previous errors\n+"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "tests/ui/duration_subsec.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/26bc88d48c2e780b3a56f77b3f8b8d8e3c383ade/tests%2Fui%2Fduration_subsec.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/26bc88d48c2e780b3a56f77b3f8b8d8e3c383ade/tests%2Fui%2Fduration_subsec.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fduration_subsec.stdout?ref=26bc88d48c2e780b3a56f77b3f8b8d8e3c383ade"}]}