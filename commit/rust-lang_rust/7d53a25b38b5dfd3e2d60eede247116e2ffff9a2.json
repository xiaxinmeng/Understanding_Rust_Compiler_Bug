{"sha": "7d53a25b38b5dfd3e2d60eede247116e2ffff9a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkNTNhMjViMzhiNWRmZDNlMmQ2MGVlZGUyNDcxMTZlMmZmZmY5YTI=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2016-03-15T10:34:17Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2016-03-21T17:36:22Z"}, "message": "factor the wrapped Index newtype definitions into a macro.", "tree": {"sha": "9bfa191446a8dc481b42307daee40e34bfee10a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9bfa191446a8dc481b42307daee40e34bfee10a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d53a25b38b5dfd3e2d60eede247116e2ffff9a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d53a25b38b5dfd3e2d60eede247116e2ffff9a2", "html_url": "https://github.com/rust-lang/rust/commit/7d53a25b38b5dfd3e2d60eede247116e2ffff9a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d53a25b38b5dfd3e2d60eede247116e2ffff9a2/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24ff32748428320cabb74101260fef8facfe4a26", "url": "https://api.github.com/repos/rust-lang/rust/commits/24ff32748428320cabb74101260fef8facfe4a26", "html_url": "https://github.com/rust-lang/rust/commit/24ff32748428320cabb74101260fef8facfe4a26"}], "stats": {"total": 50, "additions": 22, "deletions": 28}, "files": [{"sha": "1b663ef9749b79a758b6db2c5ea754414f1f35b0", "filename": "src/librustc_borrowck/borrowck/mir/gather_moves.rs", "status": "modified", "additions": 22, "deletions": 28, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/7d53a25b38b5dfd3e2d60eede247116e2ffff9a2/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fgather_moves.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d53a25b38b5dfd3e2d60eede247116e2ffff9a2/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fgather_moves.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fgather_moves.rs?ref=7d53a25b38b5dfd3e2d60eede247116e2ffff9a2", "patch": "@@ -25,22 +25,32 @@ use std::usize;\n use super::dataflow::BitDenotation;\n use super::abs_domain::{AbstractElem, Lift};\n \n-/// Index into MovePathData.move_paths\n-#[derive(Copy, Clone, PartialEq, Eq, Debug)]\n-pub struct MovePathIndex(usize);\n-\n-const INVALID_MOVE_PATH_INDEX: MovePathIndex = MovePathIndex(usize::MAX);\n-\n-impl MovePathIndex {\n-    pub fn idx(&self) -> Option<usize> {\n-        if *self == INVALID_MOVE_PATH_INDEX {\n-            None\n-        } else {\n-            Some(self.0)\n+macro_rules! new_index {\n+    ($Index:ident, $INVALID_INDEX:ident) => {\n+        #[derive(Copy, Clone, PartialEq, Eq, Debug)]\n+        pub struct $Index(usize);\n+\n+        const $INVALID_INDEX: $Index = $Index(usize::MAX);\n+\n+        impl $Index {\n+            pub fn idx(&self) -> Option<usize> {\n+                if *self == $INVALID_INDEX {\n+                    None\n+                } else {\n+                    Some(self.0)\n+                }\n+            }\n         }\n     }\n }\n \n+/// Index into MovePathData.move_paths\n+new_index!(MovePathIndex, INVALID_MOVE_PATH_INDEX);\n+\n+/// Index into MoveData.moves.\n+new_index!(MoveOutIndex, INVALID_MOVE_OUT_INDEX);\n+\n+\n /// `MovePath` is a canonicalized representation of a path that is\n /// moved or assigned to.\n ///\n@@ -99,22 +109,6 @@ impl<'tcx> fmt::Debug for MovePath<'tcx> {\n     }\n }\n \n-/// Index into MoveData.moves.\n-#[derive(Copy, Clone, PartialEq, Eq, Debug)]\n-pub struct MoveOutIndex(usize);\n-\n-impl MoveOutIndex {\n-    pub fn idx(&self) -> Option<usize> {\n-        if *self == INVALID_MOVE_OUT_INDEX {\n-            None\n-        } else {\n-            Some(self.0)\n-        }\n-    }\n-}\n-\n-const INVALID_MOVE_OUT_INDEX: MoveOutIndex = MoveOutIndex(usize::MAX);\n-\n pub struct MoveData<'tcx> {\n     pub move_paths: MovePathData<'tcx>,\n     pub moves: Vec<MoveOut>,"}]}