{"sha": "03ba8ab6067fc642c63cb3645db6beb4d425ae6e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzYmE4YWI2MDY3ZmM2NDJjNjNjYjM2NDVkYjZiZWI0ZDQyNWFlNmU=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-04-02T12:28:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-02T12:28:20Z"}, "message": "Rollup merge of #83535 - MidasLamb:mir-type-count-mismatch, r=nikomatsakis\n\nBreak when there is a mismatch in the type count\n\nWhen other errors are generated, there can be a mismatch between the\namount of input types in MIR, and the amount in the function itself.\nBreak from the comparative loop if this is the case to prevent\nout-of-bounds.\nFixes #83499", "tree": {"sha": "ca7e5f84bedb5993fa1255ac8547dd4798975566", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca7e5f84bedb5993fa1255ac8547dd4798975566"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03ba8ab6067fc642c63cb3645db6beb4d425ae6e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgZw3lCRBK7hj4Ov3rIwAAdHIIAA9pcR6h245TGAFS+FCrmhW5\nHRe8zbPxjfEo8wdkbRshNVd2v0UoBYfUCmeaRFmkzrt22CCpGIDSrjHUgMosHvlK\npmAzkj8/Smu+sgcgJ91NEqX6hktp33M1UTgEcLR71qwPEV6/BTesQcc9Da2YEpT5\nXAYuTAr0LviVUFQx6J0UOAIyPsLDWdjMbiw/ARV9vohGao9gw0KdgYW1yvPYocE1\nehc3MaK/ZTyPD4QZrMprPSF6GKRnyEwCqwFQpf+xXy5DwBiESxrXiPKXoysNQ1Ra\nReJjE4Ov0jCDZa5wawlQnt/3ui9uhe9dBpyaUTpCFgXYsFL+/hVSFjVfrzgS4rI=\n=vrO+\n-----END PGP SIGNATURE-----\n", "payload": "tree ca7e5f84bedb5993fa1255ac8547dd4798975566\nparent 5662d9343f0696efcc38a1264656737c9f22d427\nparent 2d813b26092ac67933de06009e2eede04b056923\nauthor Yuki Okushi <jtitor@2k36.org> 1617366500 +0900\ncommitter GitHub <noreply@github.com> 1617366500 +0900\n\nRollup merge of #83535 - MidasLamb:mir-type-count-mismatch, r=nikomatsakis\n\nBreak when there is a mismatch in the type count\n\nWhen other errors are generated, there can be a mismatch between the\namount of input types in MIR, and the amount in the function itself.\nBreak from the comparative loop if this is the case to prevent\nout-of-bounds.\nFixes #83499\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03ba8ab6067fc642c63cb3645db6beb4d425ae6e", "html_url": "https://github.com/rust-lang/rust/commit/03ba8ab6067fc642c63cb3645db6beb4d425ae6e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03ba8ab6067fc642c63cb3645db6beb4d425ae6e/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5662d9343f0696efcc38a1264656737c9f22d427", "url": "https://api.github.com/repos/rust-lang/rust/commits/5662d9343f0696efcc38a1264656737c9f22d427", "html_url": "https://github.com/rust-lang/rust/commit/5662d9343f0696efcc38a1264656737c9f22d427"}, {"sha": "2d813b26092ac67933de06009e2eede04b056923", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d813b26092ac67933de06009e2eede04b056923", "html_url": "https://github.com/rust-lang/rust/commit/2d813b26092ac67933de06009e2eede04b056923"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "1bb447d1057815e7764d9342d2f56311813e506e", "filename": "compiler/rustc_mir/src/borrow_check/type_check/input_output.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/03ba8ab6067fc642c63cb3645db6beb4d425ae6e/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Ftype_check%2Finput_output.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03ba8ab6067fc642c63cb3645db6beb4d425ae6e/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Ftype_check%2Finput_output.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Ftype_check%2Finput_output.rs?ref=03ba8ab6067fc642c63cb3645db6beb4d425ae6e", "patch": "@@ -70,6 +70,12 @@ impl<'a, 'tcx> TypeChecker<'a, 'tcx> {\n \n         // Equate expected input tys with those in the MIR.\n         for (argument_index, &normalized_input_ty) in normalized_input_tys.iter().enumerate() {\n+            if argument_index + 1 >= body.local_decls.len() {\n+                self.tcx()\n+                    .sess\n+                    .delay_span_bug(body.span, \"found more normalized_input_ty than local_decls\");\n+                break;\n+            }\n             // In MIR, argument N is stored in local N+1.\n             let local = Local::new(argument_index + 1);\n "}, {"sha": "4d404d015ec0b017e96f4827f1740bc02c9428a8", "filename": "src/test/ui/mir/issue-83499-input-output-iteration-ice.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/03ba8ab6067fc642c63cb3645db6beb4d425ae6e/src%2Ftest%2Fui%2Fmir%2Fissue-83499-input-output-iteration-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03ba8ab6067fc642c63cb3645db6beb4d425ae6e/src%2Ftest%2Fui%2Fmir%2Fissue-83499-input-output-iteration-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fissue-83499-input-output-iteration-ice.rs?ref=03ba8ab6067fc642c63cb3645db6beb4d425ae6e", "patch": "@@ -0,0 +1,10 @@\n+// Test that when in MIR the amount of local_decls and amount of normalized_input_tys don't match\n+// that an out-of-bounds access does not occur.\n+#![feature(c_variadic)]\n+\n+fn main() {}\n+\n+fn foo(_: Bar, ...) -> impl {}\n+//~^ ERROR only foreign or `unsafe extern \"C\" functions may be C-variadic\n+//~| ERROR cannot find type `Bar` in this scope\n+//~| ERROR at least one trait must be specified"}, {"sha": "eb172684899cfbdd92f8de352591358fb514a241", "filename": "src/test/ui/mir/issue-83499-input-output-iteration-ice.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/03ba8ab6067fc642c63cb3645db6beb4d425ae6e/src%2Ftest%2Fui%2Fmir%2Fissue-83499-input-output-iteration-ice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/03ba8ab6067fc642c63cb3645db6beb4d425ae6e/src%2Ftest%2Fui%2Fmir%2Fissue-83499-input-output-iteration-ice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fissue-83499-input-output-iteration-ice.stderr?ref=03ba8ab6067fc642c63cb3645db6beb4d425ae6e", "patch": "@@ -0,0 +1,21 @@\n+error: only foreign or `unsafe extern \"C\" functions may be C-variadic\n+  --> $DIR/issue-83499-input-output-iteration-ice.rs:7:16\n+   |\n+LL | fn foo(_: Bar, ...) -> impl {}\n+   |                ^^^\n+\n+error: at least one trait must be specified\n+  --> $DIR/issue-83499-input-output-iteration-ice.rs:7:24\n+   |\n+LL | fn foo(_: Bar, ...) -> impl {}\n+   |                        ^^^^\n+\n+error[E0412]: cannot find type `Bar` in this scope\n+  --> $DIR/issue-83499-input-output-iteration-ice.rs:7:11\n+   |\n+LL | fn foo(_: Bar, ...) -> impl {}\n+   |           ^^^ not found in this scope\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0412`."}]}