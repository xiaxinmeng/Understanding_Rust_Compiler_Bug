{"sha": "8f1df30d06072f03407654b1cde11a1a067bdfad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmMWRmMzBkMDYwNzJmMDM0MDc2NTRiMWNkZTExYTFhMDY3YmRmYWQ=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-01-11T00:12:26Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-01-11T01:18:25Z"}, "message": "Only require `allow_internal_unstable` for stable `const fn`", "tree": {"sha": "2d7e164ab92874f8982fae5e20e3995d53d62d80", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d7e164ab92874f8982fae5e20e3995d53d62d80"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f1df30d06072f03407654b1cde11a1a067bdfad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f1df30d06072f03407654b1cde11a1a067bdfad", "html_url": "https://github.com/rust-lang/rust/commit/8f1df30d06072f03407654b1cde11a1a067bdfad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f1df30d06072f03407654b1cde11a1a067bdfad/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac6eb0db01a781d4f4940b34bd4c1cbe7e75263a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac6eb0db01a781d4f4940b34bd4c1cbe7e75263a", "html_url": "https://github.com/rust-lang/rust/commit/ac6eb0db01a781d4f4940b34bd4c1cbe7e75263a"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "74b21435eaee4d27d0e25bf63aa3acf33e51e073", "filename": "src/librustc_mir/transform/qualify_min_const_fn.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8f1df30d06072f03407654b1cde11a1a067bdfad/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f1df30d06072f03407654b1cde11a1a067bdfad/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs?ref=8f1df30d06072f03407654b1cde11a1a067bdfad", "patch": "@@ -281,8 +281,21 @@ fn check_place(\n     Ok(())\n }\n \n-/// Returns whether `allow_internal_unstable(..., <feature_gate>, ...)` is present.\n+/// Returns `true` if the given feature gate is allowed within the function with the given `DefId`.\n fn feature_allowed(tcx: TyCtxt<'tcx>, def_id: DefId, feature_gate: Symbol) -> bool {\n+    // All features require that the corresponding gate be enabled.\n+    if !tcx.features().enabled(feature_gate) {\n+        return false;\n+    }\n+\n+    // If this crate is not using stability attributes, or this function is not claiming to be a\n+    // stable `const fn`, that is all that is required.\n+    if !tcx.features().staged_api || tcx.has_attr(def_id, sym::rustc_const_unstable) {\n+        return true;\n+    }\n+\n+    // However, we cannot allow stable `const fn`s to use unstable features without an explicit\n+    // opt-in via `allow_internal_unstable`.\n     attr::allow_internal_unstable(&tcx.get_attrs(def_id), &tcx.sess.diagnostic())\n         .map_or(false, |mut features| features.any(|name| name == feature_gate))\n }"}]}