{"sha": "3750348daff89741e3153e0e120aa70a45ff5b68", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3NTAzNDhkYWZmODk3NDFlMzE1M2UwZTEyMGFhNzBhNDVmZjViNjg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-04-08T01:18:12Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-04-08T01:18:12Z"}, "message": "Auto merge of #59724 - oli-obk:const_arg_ice, r=eddyb\n\nFunction arguments should never get promoted\n\nfixes https://github.com/rust-lang/rust/issues/59469", "tree": {"sha": "576d92e46ee6da7e3bfd45db6125d1d1c264fc72", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/576d92e46ee6da7e3bfd45db6125d1d1c264fc72"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3750348daff89741e3153e0e120aa70a45ff5b68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3750348daff89741e3153e0e120aa70a45ff5b68", "html_url": "https://github.com/rust-lang/rust/commit/3750348daff89741e3153e0e120aa70a45ff5b68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3750348daff89741e3153e0e120aa70a45ff5b68/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "474e7a6486758ea6fc761893b1a49cd9076fb0ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/474e7a6486758ea6fc761893b1a49cd9076fb0ab", "html_url": "https://github.com/rust-lang/rust/commit/474e7a6486758ea6fc761893b1a49cd9076fb0ab"}, {"sha": "01e83943f9dbcd421826eaed5fa04df8e1bb5570", "url": "https://api.github.com/repos/rust-lang/rust/commits/01e83943f9dbcd421826eaed5fa04df8e1bb5570", "html_url": "https://github.com/rust-lang/rust/commit/01e83943f9dbcd421826eaed5fa04df8e1bb5570"}], "stats": {"total": 69, "additions": 65, "deletions": 4}, "files": [{"sha": "1faa9ad0d0da4e19c5585e0e889db982422a2455", "filename": "src/librustc_mir/transform/qualify_consts.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3750348daff89741e3153e0e120aa70a45ff5b68/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3750348daff89741e3153e0e120aa70a45ff5b68/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs?ref=3750348daff89741e3153e0e120aa70a45ff5b68", "patch": "@@ -639,15 +639,15 @@ impl<'a, 'tcx> Checker<'a, 'tcx> {\n                             per_local.insert(local);\n                         }\n                     }\n-                    cx.per_local[IsNotPromotable].insert(local);\n+                    cx.per_local[IsNotConst].insert(local);\n                 }\n \n                 LocalKind::Var if mode == Mode::Fn => {\n                     cx.per_local[IsNotConst].insert(local);\n                 }\n \n                 LocalKind::Temp if !temps[local].is_promotable() => {\n-                    cx.per_local[IsNotPromotable].insert(local);\n+                    cx.per_local[IsNotConst].insert(local);\n                 }\n \n                 _ => {}\n@@ -817,15 +817,15 @@ impl<'a, 'tcx> Checker<'a, 'tcx> {\n             }\n         }\n \n-        // Ensure the `IsNotPromotable` qualification is preserved.\n+        // Ensure the `IsNotConst` qualification is preserved.\n         // NOTE(eddyb) this is actually unnecessary right now, as\n         // we never replace the local's qualif, but we might in\n         // the future, and so it serves to catch changes that unset\n         // important bits (in which case, asserting `contains` could\n         // be replaced with calling `insert` to re-set the bit).\n         if kind == LocalKind::Temp {\n             if !self.temp_promotion_state[index].is_promotable() {\n-                assert!(self.cx.per_local[IsNotPromotable].contains(index));\n+                assert!(self.cx.per_local[IsNotConst].contains(index));\n             }\n         }\n     }"}, {"sha": "0da4b44a96839daa9d6fb3e1941dbeb441c92704", "filename": "src/test/ui/consts/const_arg_local.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/3750348daff89741e3153e0e120aa70a45ff5b68/src%2Ftest%2Fui%2Fconsts%2Fconst_arg_local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3750348daff89741e3153e0e120aa70a45ff5b68/src%2Ftest%2Fui%2Fconsts%2Fconst_arg_local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_arg_local.rs?ref=3750348daff89741e3153e0e120aa70a45ff5b68", "patch": "@@ -0,0 +1,13 @@\n+// only-x86_64\n+\n+#[cfg(target_arch = \"x86\")]\n+use std::arch::x86::*;\n+#[cfg(target_arch = \"x86_64\")]\n+use std::arch::x86_64::*;\n+\n+unsafe fn pclmul(a: __m128i, b: __m128i) -> __m128i {\n+    let imm8 = 3;\n+    _mm_clmulepi64_si128(a, b, imm8) //~ ERROR argument 3 is required to be a constant\n+}\n+\n+fn main() {}"}, {"sha": "197b2f082e5a00d13471d07642cc506c58bc9596", "filename": "src/test/ui/consts/const_arg_local.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3750348daff89741e3153e0e120aa70a45ff5b68/src%2Ftest%2Fui%2Fconsts%2Fconst_arg_local.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3750348daff89741e3153e0e120aa70a45ff5b68/src%2Ftest%2Fui%2Fconsts%2Fconst_arg_local.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_arg_local.stderr?ref=3750348daff89741e3153e0e120aa70a45ff5b68", "patch": "@@ -0,0 +1,8 @@\n+error: argument 3 is required to be a constant\n+  --> $DIR/const_arg_local.rs:10:5\n+   |\n+LL |     _mm_clmulepi64_si128(a, b, imm8)\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "25f45104d6aa1d3c75b1e64912472c32020eccfc", "filename": "src/test/ui/consts/const_arg_promotable.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3750348daff89741e3153e0e120aa70a45ff5b68/src%2Ftest%2Fui%2Fconsts%2Fconst_arg_promotable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3750348daff89741e3153e0e120aa70a45ff5b68/src%2Ftest%2Fui%2Fconsts%2Fconst_arg_promotable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_arg_promotable.rs?ref=3750348daff89741e3153e0e120aa70a45ff5b68", "patch": "@@ -0,0 +1,12 @@\n+// only-x86_64\n+\n+#[cfg(target_arch = \"x86\")]\n+use std::arch::x86::*;\n+#[cfg(target_arch = \"x86_64\")]\n+use std::arch::x86_64::*;\n+\n+unsafe fn pclmul(a: __m128i, b: __m128i) -> __m128i {\n+    _mm_clmulepi64_si128(a, b, *&mut 42) //~ ERROR argument 3 is required to be a constant\n+}\n+\n+fn main() {}"}, {"sha": "5de3ee6654ad9c47d400f9f0a905a52ae47b35fc", "filename": "src/test/ui/consts/const_arg_promotable.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3750348daff89741e3153e0e120aa70a45ff5b68/src%2Ftest%2Fui%2Fconsts%2Fconst_arg_promotable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3750348daff89741e3153e0e120aa70a45ff5b68/src%2Ftest%2Fui%2Fconsts%2Fconst_arg_promotable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_arg_promotable.stderr?ref=3750348daff89741e3153e0e120aa70a45ff5b68", "patch": "@@ -0,0 +1,8 @@\n+error: argument 3 is required to be a constant\n+  --> $DIR/const_arg_promotable.rs:9:5\n+   |\n+LL |     _mm_clmulepi64_si128(a, b, *&mut 42)\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "92ff264cd2b8ef959aee3a3425dc2a811fd47e5b", "filename": "src/test/ui/consts/const_arg_wrapper.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3750348daff89741e3153e0e120aa70a45ff5b68/src%2Ftest%2Fui%2Fconsts%2Fconst_arg_wrapper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3750348daff89741e3153e0e120aa70a45ff5b68/src%2Ftest%2Fui%2Fconsts%2Fconst_arg_wrapper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_arg_wrapper.rs?ref=3750348daff89741e3153e0e120aa70a45ff5b68", "patch": "@@ -0,0 +1,12 @@\n+// only-x86_64\n+\n+#[cfg(target_arch = \"x86\")]\n+use std::arch::x86::*;\n+#[cfg(target_arch = \"x86_64\")]\n+use std::arch::x86_64::*;\n+\n+unsafe fn pclmul(a: __m128i, b: __m128i, imm8: i32) -> __m128i {\n+    _mm_clmulepi64_si128(a, b, imm8) //~ ERROR argument 3 is required to be a constant\n+}\n+\n+fn main() {}"}, {"sha": "4acf2f0f4d1e5dfa87835df27864cfabb90ca163", "filename": "src/test/ui/consts/const_arg_wrapper.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3750348daff89741e3153e0e120aa70a45ff5b68/src%2Ftest%2Fui%2Fconsts%2Fconst_arg_wrapper.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3750348daff89741e3153e0e120aa70a45ff5b68/src%2Ftest%2Fui%2Fconsts%2Fconst_arg_wrapper.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_arg_wrapper.stderr?ref=3750348daff89741e3153e0e120aa70a45ff5b68", "patch": "@@ -0,0 +1,8 @@\n+error: argument 3 is required to be a constant\n+  --> $DIR/const_arg_wrapper.rs:9:5\n+   |\n+LL |     _mm_clmulepi64_si128(a, b, imm8)\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}]}