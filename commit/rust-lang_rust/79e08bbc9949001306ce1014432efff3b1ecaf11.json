{"sha": "79e08bbc9949001306ce1014432efff3b1ecaf11", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5ZTA4YmJjOTk0OTAwMTMwNmNlMTAxNDQzMmVmZmYzYjFlY2FmMTE=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2020-06-14T18:16:35Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2020-06-14T18:20:56Z"}, "message": "structural_match: non-structural-match ty closures\n\nThis commit adds a `Closure` variant to `NonStructuralMatchTy` in\n`structural_match`, fixing an ICE which can occur when\n`impl_trait_in_bindings` is used with constants.\n\nSigned-off-by: David Wood <david@davidtw.co>", "tree": {"sha": "2b5917f4193ae91236c696f2e7e39f5a48cf53c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b5917f4193ae91236c696f2e7e39f5a48cf53c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79e08bbc9949001306ce1014432efff3b1ecaf11", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEfgm2/wUjk9OnjxlyJZLnbIc4H9kFAl7mapMACgkQJZLnbIc4\nH9mjMBAAgEmeV9aIRkyNVCR/cGttyFpgj2/H2un2HS4amWupOI0hiQDw6dvWTjEZ\n6BexggleTymxBuG4TdujnkamJTtW4JXIUPFfrpspyqTMyB7YkAmi6UCHo0HC1mgj\n0SdxfQNwCY7S2KSFl8y6mx0HKwvKgWPYmDAj/JK25XLuODTvv9ONaaL+vbLQvOgX\niaPpXX6/p7eSJ9vzg9UgsL8YLPTp3K1oaKNR6Z1++7WN4L0HOyfTRLdwJ8F2GDTH\nii6byo4P3UMTwrhurv6PIu7wL1Ncp4wUuPt96RYBAYoHFCTl0uACugvjTDrxOYwZ\nPUVJgrmCph35LaHLOX6rh2Gs7yYHABXZQb7REOfx1PwKEx2/7CJAMryV1yzS1kJW\nyXdyn2LzTpKKf5BskVeGkpYcW2hQYH1E+y2mm91XokCmDUKcgIDwrlLcireRC+Gf\nMOT4Tu3zK1603xfARDGoLDvy451jDYouKKIx6jmDyeWs2frqeh1EDZEsYAHf2hNk\np+t3GLeHibYVD+9b2ZaZGJ9HvbJpdCODY/YnBIRunxY3QX2dKXo6gWZkD3EVjATw\nLSEsjLFTR66lmNEBvOx8i7uTwlQm8F9o+zSHQCRyuQTspRPUaEmr5z/Brp1JUuA+\ne86OMpmnNh0u8v0/+akNsmU+FrqI3Fhc/WboxuaakwNsALrF46Q=\n=KSU6\n-----END PGP SIGNATURE-----", "payload": "tree 2b5917f4193ae91236c696f2e7e39f5a48cf53c0\nparent 4fb54ed484e2239a3e9eff3be17df00d2a162be3\nauthor David Wood <david@davidtw.co> 1592158595 +0100\ncommitter David Wood <david@davidtw.co> 1592158856 +0100\n\nstructural_match: non-structural-match ty closures\n\nThis commit adds a `Closure` variant to `NonStructuralMatchTy` in\n`structural_match`, fixing an ICE which can occur when\n`impl_trait_in_bindings` is used with constants.\n\nSigned-off-by: David Wood <david@davidtw.co>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79e08bbc9949001306ce1014432efff3b1ecaf11", "html_url": "https://github.com/rust-lang/rust/commit/79e08bbc9949001306ce1014432efff3b1ecaf11", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79e08bbc9949001306ce1014432efff3b1ecaf11/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4fb54ed484e2239a3e9eff3be17df00d2a162be3", "url": "https://api.github.com/repos/rust-lang/rust/commits/4fb54ed484e2239a3e9eff3be17df00d2a162be3", "html_url": "https://github.com/rust-lang/rust/commit/4fb54ed484e2239a3e9eff3be17df00d2a162be3"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "087c2c064cfaf3c57f4de92a1911f85905ff2b4b", "filename": "src/librustc_mir_build/hair/pattern/const_to_pat.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/79e08bbc9949001306ce1014432efff3b1ecaf11/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fconst_to_pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79e08bbc9949001306ce1014432efff3b1ecaf11/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fconst_to_pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2Fconst_to_pat.rs?ref=79e08bbc9949001306ce1014432efff3b1ecaf11", "patch": "@@ -130,6 +130,9 @@ impl<'a, 'tcx> ConstToPat<'a, 'tcx> {\n                     traits::NonStructuralMatchTy::Generator => {\n                         \"generators cannot be used in patterns\".to_string()\n                     }\n+                    traits::NonStructuralMatchTy::Closure => {\n+                        \"closures cannot be used in patterns\".to_string()\n+                    }\n                     traits::NonStructuralMatchTy::Param => {\n                         bug!(\"use of a constant whose type is a parameter inside a pattern\")\n                     }"}, {"sha": "c4deb639140ca3119191d60e7376e4526f70395c", "filename": "src/librustc_trait_selection/traits/structural_match.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/79e08bbc9949001306ce1014432efff3b1ecaf11/src%2Flibrustc_trait_selection%2Ftraits%2Fstructural_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79e08bbc9949001306ce1014432efff3b1ecaf11/src%2Flibrustc_trait_selection%2Ftraits%2Fstructural_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Fstructural_match.rs?ref=79e08bbc9949001306ce1014432efff3b1ecaf11", "patch": "@@ -18,6 +18,7 @@ pub enum NonStructuralMatchTy<'tcx> {\n     Opaque,\n     Generator,\n     Projection,\n+    Closure,\n }\n \n /// This method traverses the structure of `ty`, trying to find an\n@@ -162,6 +163,10 @@ impl<'a, 'tcx> TypeVisitor<'tcx> for Search<'a, 'tcx> {\n                 self.found = Some(NonStructuralMatchTy::Generator);\n                 return true; // Stop visiting.\n             }\n+            ty::Closure(..) => {\n+                self.found = Some(NonStructuralMatchTy::Closure);\n+                return true; // Stop visiting.\n+            }\n             ty::RawPtr(..) => {\n                 // structural-match ignores substructure of\n                 // `*const _`/`*mut _`, so skip `super_visit_with`.\n@@ -211,7 +216,7 @@ impl<'a, 'tcx> TypeVisitor<'tcx> for Search<'a, 'tcx> {\n                 ty.super_visit_with(self);\n                 return false;\n             }\n-            ty::Closure(..) | ty::Infer(_) | ty::Placeholder(_) | ty::Bound(..) => {\n+            ty::Infer(_) | ty::Placeholder(_) | ty::Bound(..) => {\n                 bug!(\"unexpected type during structural-match checking: {:?}\", ty);\n             }\n             ty::Error => {"}, {"sha": "fd8fe5f48dfa23aa1a2a1a050e6b84e43f53b896", "filename": "src/test/ui/impl-trait-in-bindings-issue-73003.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/79e08bbc9949001306ce1014432efff3b1ecaf11/src%2Ftest%2Fui%2Fimpl-trait-in-bindings-issue-73003.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79e08bbc9949001306ce1014432efff3b1ecaf11/src%2Ftest%2Fui%2Fimpl-trait-in-bindings-issue-73003.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait-in-bindings-issue-73003.rs?ref=79e08bbc9949001306ce1014432efff3b1ecaf11", "patch": "@@ -0,0 +1,8 @@\n+// check-pass\n+\n+#![feature(impl_trait_in_bindings)]\n+//~^ WARN the feature `impl_trait_in_bindings` is incomplete\n+\n+const _: impl Fn() = ||();\n+\n+fn main() {}"}, {"sha": "715671c8add834eee7f379d64fb6d6317ee70320", "filename": "src/test/ui/impl-trait-in-bindings-issue-73003.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/79e08bbc9949001306ce1014432efff3b1ecaf11/src%2Ftest%2Fui%2Fimpl-trait-in-bindings-issue-73003.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/79e08bbc9949001306ce1014432efff3b1ecaf11/src%2Ftest%2Fui%2Fimpl-trait-in-bindings-issue-73003.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait-in-bindings-issue-73003.stderr?ref=79e08bbc9949001306ce1014432efff3b1ecaf11", "patch": "@@ -0,0 +1,11 @@\n+warning: the feature `impl_trait_in_bindings` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/impl-trait-in-bindings-issue-73003.rs:3:12\n+   |\n+LL | #![feature(impl_trait_in_bindings)]\n+   |            ^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #63065 <https://github.com/rust-lang/rust/issues/63065> for more information\n+\n+warning: 1 warning emitted\n+"}]}