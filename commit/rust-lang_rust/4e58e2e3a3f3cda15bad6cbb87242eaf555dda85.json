{"sha": "4e58e2e3a3f3cda15bad6cbb87242eaf555dda85", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlNThlMmUzYTNmM2NkYTE1YmFkNmNiYjg3MjQyZWFmNTU1ZGRhODU=", "commit": {"author": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2019-09-17T09:48:38Z"}, "committer": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2019-09-28T00:11:13Z"}, "message": "Work around for #64506", "tree": {"sha": "d5fdb658c1a81fbd60ce2ef56ddb226f03de5752", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d5fdb658c1a81fbd60ce2ef56ddb226f03de5752"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e58e2e3a3f3cda15bad6cbb87242eaf555dda85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e58e2e3a3f3cda15bad6cbb87242eaf555dda85", "html_url": "https://github.com/rust-lang/rust/commit/4e58e2e3a3f3cda15bad6cbb87242eaf555dda85", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e58e2e3a3f3cda15bad6cbb87242eaf555dda85/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93335141021df7d53ba597f6315a8014fe21195f", "url": "https://api.github.com/repos/rust-lang/rust/commits/93335141021df7d53ba597f6315a8014fe21195f", "html_url": "https://github.com/rust-lang/rust/commit/93335141021df7d53ba597f6315a8014fe21195f"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "4da5d979cc3e8137b3333bbfb2c435ed30dfaae6", "filename": "src/librustc/mir/interpret/error.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4e58e2e3a3f3cda15bad6cbb87242eaf555dda85/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e58e2e3a3f3cda15bad6cbb87242eaf555dda85/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs?ref=4e58e2e3a3f3cda15bad6cbb87242eaf555dda85", "patch": "@@ -397,6 +397,10 @@ pub enum UnsupportedOpInfo<'tcx> {\n     /// while evaluating `const` items.\n     ReadOfStaticInConst,\n \n+    /// FIXME(#64506) Error used to work around accessing projections of\n+    /// uninhabited types.\n+    UninhabitedValue,\n+\n     // -- Everything below is not categorized yet --\n     FunctionAbiMismatch(Abi, Abi),\n     FunctionArgMismatch(Ty<'tcx>, Ty<'tcx>),\n@@ -564,6 +568,8 @@ impl fmt::Debug for UnsupportedOpInfo<'tcx> {\n                 write!(f, \"{}\", msg),\n             ReadOfStaticInConst =>\n                 write!(f, \"tried to read from a static during const evaluation\"),\n+            UninhabitedValue =>\n+                write!(f, \"tried to use an uninhabited value\"),\n         }\n     }\n }"}, {"sha": "1ece913eb59a4061890015477fe6e1c5e26242c9", "filename": "src/librustc_mir/interpret/place.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4e58e2e3a3f3cda15bad6cbb87242eaf555dda85/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e58e2e3a3f3cda15bad6cbb87242eaf555dda85/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fplace.rs?ref=4e58e2e3a3f3cda15bad6cbb87242eaf555dda85", "patch": "@@ -9,7 +9,7 @@ use rustc::mir;\n use rustc::mir::interpret::truncate;\n use rustc::ty::{self, Ty};\n use rustc::ty::layout::{\n-    self, Size, Align, LayoutOf, TyLayout, HasDataLayout, VariantIdx, PrimitiveExt\n+    self, Size, Abi, Align, LayoutOf, TyLayout, HasDataLayout, VariantIdx, PrimitiveExt\n };\n use rustc::ty::TypeFoldable;\n \n@@ -385,6 +385,10 @@ where\n                 stride * field\n             }\n             layout::FieldPlacement::Union(count) => {\n+                // FIXME(#64506) `UninhabitedValue` can be removed when this issue is resolved\n+                if base.layout.abi == Abi::Uninhabited {\n+                    throw_unsup!(UninhabitedValue);\n+                }\n                 assert!(field < count as u64,\n                         \"Tried to access field {} of union with {} fields\", field, count);\n                 // Offset is always 0"}]}