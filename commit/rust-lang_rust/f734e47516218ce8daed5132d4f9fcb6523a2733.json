{"sha": "f734e47516218ce8daed5132d4f9fcb6523a2733", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3MzRlNDc1MTYyMThjZThkYWVkNTEzMmQ0ZjlmY2I2NTIzYTI3MzM=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-02-07T16:00:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-07T16:00:21Z"}, "message": "Rollup merge of #68909 - tmandry:panic-abort-nocapture, r=alexcrichton\n\nRespect --nocapture in panic=abort test mode\n\nr? @alexcrichton", "tree": {"sha": "b3b0c16fe034bc805bd7c1ecb03521e1bce8d5fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3b0c16fe034bc805bd7c1ecb03521e1bce8d5fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f734e47516218ce8daed5132d4f9fcb6523a2733", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJePYmVCRBK7hj4Ov3rIwAAdHIIAGxghB4DuRAVYZ10or8HVF9/\nk5/Z5fKDdK+13HIAizAtrNBJZRsLDShRpk1ndaxB5AlqbEb/VJ+23ND13+BmU+ab\nlxV145igyaEtdiJO4uubhvXURVKv8c/4/pTHapyvHkHLy3gvxNEQ0qW/F9ky15W/\nyOIZXXRxQ9/q+T7mSjHr891bd/TjO7LNIiNVnq02VexShwPi56EIyEqf4BsjbvjU\nNI0zt1Wmw4liJPSfwEfORJ9EpK8hjC6+FqT3iYw+c0ir4+kRtIDctDWe4xb/SsQ6\nizccCyquXtp9HyYMESRV0euaP2tjfeasBDkQ86wzsv1Y5K0MHrFCFGPOlWRIreE=\n=G66N\n-----END PGP SIGNATURE-----\n", "payload": "tree b3b0c16fe034bc805bd7c1ecb03521e1bce8d5fc\nparent 90f6267dea73b06f56549ea79d2ab283cb93cc1c\nparent 861b328f7d62aebd1cfe381eb81bc7e80faf758e\nauthor Dylan DPC <dylan.dpc@gmail.com> 1581091221 +0100\ncommitter GitHub <noreply@github.com> 1581091221 +0100\n\nRollup merge of #68909 - tmandry:panic-abort-nocapture, r=alexcrichton\n\nRespect --nocapture in panic=abort test mode\n\nr? @alexcrichton\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f734e47516218ce8daed5132d4f9fcb6523a2733", "html_url": "https://github.com/rust-lang/rust/commit/f734e47516218ce8daed5132d4f9fcb6523a2733", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f734e47516218ce8daed5132d4f9fcb6523a2733/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90f6267dea73b06f56549ea79d2ab283cb93cc1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/90f6267dea73b06f56549ea79d2ab283cb93cc1c", "html_url": "https://github.com/rust-lang/rust/commit/90f6267dea73b06f56549ea79d2ab283cb93cc1c"}, {"sha": "861b328f7d62aebd1cfe381eb81bc7e80faf758e", "url": "https://api.github.com/repos/rust-lang/rust/commits/861b328f7d62aebd1cfe381eb81bc7e80faf758e", "html_url": "https://github.com/rust-lang/rust/commit/861b328f7d62aebd1cfe381eb81bc7e80faf758e"}], "stats": {"total": 97, "additions": 88, "deletions": 9}, "files": [{"sha": "de001cacbe19591cfd2dcf3e423a48fd1e920e17", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 17, "deletions": 9, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/f734e47516218ce8daed5132d4f9fcb6523a2733/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f734e47516218ce8daed5132d4f9fcb6523a2733/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=f734e47516218ce8daed5132d4f9fcb6523a2733", "patch": "@@ -63,8 +63,7 @@ use std::{\n     env, io,\n     io::prelude::Write,\n     panic::{self, catch_unwind, AssertUnwindSafe, PanicInfo},\n-    process,\n-    process::{Command, Termination},\n+    process::{self, Command, Termination},\n     sync::mpsc::{channel, Sender},\n     sync::{Arc, Mutex},\n     thread,\n@@ -457,9 +456,13 @@ pub fn run_test(\n                 monitor_ch,\n                 opts.time,\n             ),\n-            RunStrategy::SpawnPrimary => {\n-                spawn_test_subprocess(desc, opts.time.is_some(), monitor_ch, opts.time)\n-            }\n+            RunStrategy::SpawnPrimary => spawn_test_subprocess(\n+                desc,\n+                opts.nocapture,\n+                opts.time.is_some(),\n+                monitor_ch,\n+                opts.time,\n+            ),\n         };\n \n         // If the platform is single-threaded we're just going to run\n@@ -558,6 +561,7 @@ fn run_test_in_process(\n \n fn spawn_test_subprocess(\n     desc: TestDesc,\n+    nocapture: bool,\n     report_time: bool,\n     monitor_ch: Sender<CompletedTest>,\n     time_opts: Option<time::TestTimeOptions>,\n@@ -566,11 +570,15 @@ fn spawn_test_subprocess(\n         let args = env::args().collect::<Vec<_>>();\n         let current_exe = &args[0];\n \n+        let mut command = Command::new(current_exe);\n+        command.env(SECONDARY_TEST_INVOKER_VAR, desc.name.as_slice());\n+        if nocapture {\n+            command.stdout(process::Stdio::inherit());\n+            command.stderr(process::Stdio::inherit());\n+        }\n+\n         let start = report_time.then(Instant::now);\n-        let output = match Command::new(current_exe)\n-            .env(SECONDARY_TEST_INVOKER_VAR, desc.name.as_slice())\n-            .output()\n-        {\n+        let output = match command.output() {\n             Ok(out) => out,\n             Err(e) => {\n                 let err = format!(\"Failed to spawn {} as child for test: {:?}\", args[0], e);"}, {"sha": "75f798386502047e867c223409f8246fce90e72b", "filename": "src/test/ui/test-panic-abort-nocapture.rs", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/f734e47516218ce8daed5132d4f9fcb6523a2733/src%2Ftest%2Fui%2Ftest-panic-abort-nocapture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f734e47516218ce8daed5132d4f9fcb6523a2733/src%2Ftest%2Fui%2Ftest-panic-abort-nocapture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftest-panic-abort-nocapture.rs?ref=f734e47516218ce8daed5132d4f9fcb6523a2733", "patch": "@@ -0,0 +1,39 @@\n+// no-prefer-dynamic\n+// compile-flags: --test -Cpanic=abort -Zpanic_abort_tests\n+// run-flags: --test-threads=1 --nocapture\n+// run-fail\n+// check-run-results\n+// exec-env:RUST_BACKTRACE=0\n+\n+// ignore-wasm no panic or subprocess support\n+// ignore-emscripten no panic or subprocess support\n+\n+#![cfg(test)]\n+\n+use std::io::Write;\n+\n+#[test]\n+fn it_works() {\n+    println!(\"about to succeed\");\n+    assert_eq!(1 + 1, 2);\n+}\n+\n+#[test]\n+#[should_panic]\n+fn it_panics() {\n+    println!(\"about to panic\");\n+    assert_eq!(1 + 1, 4);\n+}\n+\n+#[test]\n+fn it_fails() {\n+    println!(\"about to fail\");\n+    assert_eq!(1 + 1, 4);\n+}\n+\n+#[test]\n+fn it_writes_to_stdio() {\n+    println!(\"hello, world\");\n+    writeln!(std::io::stdout(), \"testing123\").unwrap();\n+    writeln!(std::io::stderr(), \"testing321\").unwrap();\n+}"}, {"sha": "37fbe3d3ff21f7d6897a67bcf5289192c69c40fd", "filename": "src/test/ui/test-panic-abort-nocapture.run.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f734e47516218ce8daed5132d4f9fcb6523a2733/src%2Ftest%2Fui%2Ftest-panic-abort-nocapture.run.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f734e47516218ce8daed5132d4f9fcb6523a2733/src%2Ftest%2Fui%2Ftest-panic-abort-nocapture.run.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftest-panic-abort-nocapture.run.stderr?ref=f734e47516218ce8daed5132d4f9fcb6523a2733", "patch": "@@ -0,0 +1,9 @@\n+thread 'main' panicked at 'assertion failed: `(left == right)`\n+  left: `2`,\n+ right: `4`', $DIR/test-panic-abort-nocapture.rs:31:5\n+note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n+thread 'main' panicked at 'assertion failed: `(left == right)`\n+  left: `2`,\n+ right: `4`', $DIR/test-panic-abort-nocapture.rs:25:5\n+note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n+testing321"}, {"sha": "87a246db5e07b3234e041c34fa07d4632ae01b45", "filename": "src/test/ui/test-panic-abort-nocapture.run.stdout", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/f734e47516218ce8daed5132d4f9fcb6523a2733/src%2Ftest%2Fui%2Ftest-panic-abort-nocapture.run.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/f734e47516218ce8daed5132d4f9fcb6523a2733/src%2Ftest%2Fui%2Ftest-panic-abort-nocapture.run.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftest-panic-abort-nocapture.run.stdout?ref=f734e47516218ce8daed5132d4f9fcb6523a2733", "patch": "@@ -0,0 +1,23 @@\n+\n+running 4 tests\n+test it_fails ... about to fail\n+FAILED\n+test it_panics ... about to panic\n+ok\n+test it_works ... about to succeed\n+ok\n+test it_writes_to_stdio ... hello, world\n+testing123\n+ok\n+\n+failures:\n+\n+---- it_fails stdout ----\n+---- it_fails stderr ----\n+\n+\n+failures:\n+    it_fails\n+\n+test result: FAILED. 3 passed; 1 failed; 0 ignored; 0 measured; 0 filtered out\n+"}]}