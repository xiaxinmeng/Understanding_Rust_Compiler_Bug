{"sha": "9b29573a4bfcecfcd3c48ada589f6129323a559c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliMjk1NzNhNGJmY2VjZmNkM2M0OGFkYTU4OWY2MTI5MzIzYTU1OWM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-06-22T18:26:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-22T18:26:30Z"}, "message": "Merge #9379\n\n9379: internal: remove one more accidentally quadratic code-path r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "61b75baa49f6b88c24fbda5f44ac734fed1f7d98", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61b75baa49f6b88c24fbda5f44ac734fed1f7d98"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b29573a4bfcecfcd3c48ada589f6129323a559c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg0itWCRBK7hj4Ov3rIwAAJykIAHcIuIUqgYfPYMfRXKKJ1Y5i\n3c6nPUoQHNGFPiGhA//C+E8b8F8QNPWsD+VmtiUcQrqQXf4ef/MdpBc9MofHCAPR\n2NSNtin1wyCqtGEVr3ANnj4kO74DeQ4lD2rVuXS0S0N57UmcYSQvyOpo4hcbKrR4\ngTPRyOaw25FbUEKrb95QQEyrsibZ5nh0HKDtPOg+fim8p461ria9BCfW6EjYssxW\nYVTeACkToD6rcDlZvXE/StKSwmQ4F1CQ1sm9SbzCZe0DIbuSgDUtI9/5/cz/v4gR\n8xDc5ZCoBfhSAl4ofjKmEQPbYrC4ZEuNl6ZSKC3CRytvdtKrHe0E/sRFNY3bem4=\n=Et8k\n-----END PGP SIGNATURE-----\n", "payload": "tree 61b75baa49f6b88c24fbda5f44ac734fed1f7d98\nparent 9239943b84ec2bd687c4c80d2c3a0df4f8caf31c\nparent 7be2d2f008595114e19aad0aa0608ddedfe3edf7\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1624386390 +0000\ncommitter GitHub <noreply@github.com> 1624386390 +0000\n\nMerge #9379\n\n9379: internal: remove one more accidentally quadratic code-path r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b29573a4bfcecfcd3c48ada589f6129323a559c", "html_url": "https://github.com/rust-lang/rust/commit/9b29573a4bfcecfcd3c48ada589f6129323a559c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b29573a4bfcecfcd3c48ada589f6129323a559c/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9239943b84ec2bd687c4c80d2c3a0df4f8caf31c", "url": "https://api.github.com/repos/rust-lang/rust/commits/9239943b84ec2bd687c4c80d2c3a0df4f8caf31c", "html_url": "https://github.com/rust-lang/rust/commit/9239943b84ec2bd687c4c80d2c3a0df4f8caf31c"}, {"sha": "7be2d2f008595114e19aad0aa0608ddedfe3edf7", "url": "https://api.github.com/repos/rust-lang/rust/commits/7be2d2f008595114e19aad0aa0608ddedfe3edf7", "html_url": "https://github.com/rust-lang/rust/commit/7be2d2f008595114e19aad0aa0608ddedfe3edf7"}], "stats": {"total": 58, "additions": 32, "deletions": 26}, "files": [{"sha": "3f000088971c0d8125166ea3c23e9298b16430ab", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 10, "deletions": 20, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/9b29573a4bfcecfcd3c48ada589f6129323a559c/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b29573a4bfcecfcd3c48ada589f6129323a559c/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=9b29573a4bfcecfcd3c48ada589f6129323a559c", "patch": "@@ -303,26 +303,6 @@ impl ModuleDef {\n         Some(segments.join(\"::\"))\n     }\n \n-    pub fn definition_visibility(&self, db: &dyn HirDatabase) -> Option<Visibility> {\n-        let module = match self {\n-            ModuleDef::Module(it) => it.parent(db)?,\n-            ModuleDef::Function(it) => return Some(it.visibility(db)),\n-            ModuleDef::Adt(it) => it.module(db),\n-            ModuleDef::Variant(it) => {\n-                let parent = it.parent_enum(db);\n-                let module = it.module(db);\n-                return module.visibility_of(db, &ModuleDef::Adt(Adt::Enum(parent)));\n-            }\n-            ModuleDef::Const(it) => return Some(it.visibility(db)),\n-            ModuleDef::Static(it) => it.module(db),\n-            ModuleDef::Trait(it) => it.module(db),\n-            ModuleDef::TypeAlias(it) => return Some(it.visibility(db)),\n-            ModuleDef::BuiltinType(_) => return None,\n-        };\n-\n-        module.visibility_of(db, self)\n-    }\n-\n     pub fn name(self, db: &dyn HirDatabase) -> Option<Name> {\n         match self {\n             ModuleDef::Adt(it) => Some(it.name(db)),\n@@ -893,6 +873,16 @@ impl Adt {\n     }\n }\n \n+impl HasVisibility for Adt {\n+    fn visibility(&self, db: &dyn HirDatabase) -> Visibility {\n+        match self {\n+            Adt::Struct(it) => it.visibility(db),\n+            Adt::Union(it) => it.visibility(db),\n+            Adt::Enum(it) => it.visibility(db),\n+        }\n+    }\n+}\n+\n #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n pub enum VariantDef {\n     Struct(Struct),"}, {"sha": "fddd1fc2d2ad190827843addf95bd8989f9a5b64", "filename": "crates/ide_db/src/defs.rs", "status": "modified", "additions": 22, "deletions": 6, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/9b29573a4bfcecfcd3c48ada589f6129323a559c/crates%2Fide_db%2Fsrc%2Fdefs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b29573a4bfcecfcd3c48ada589f6129323a559c/crates%2Fide_db%2Fsrc%2Fdefs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fdefs.rs?ref=9b29573a4bfcecfcd3c48ada589f6129323a559c", "patch": "@@ -43,13 +43,29 @@ impl Definition {\n \n     pub fn visibility(&self, db: &RootDatabase) -> Option<Visibility> {\n         match self {\n-            Definition::Macro(_) => None,\n             Definition::Field(sf) => Some(sf.visibility(db)),\n-            Definition::ModuleDef(def) => def.definition_visibility(db),\n-            Definition::SelfType(_) => None,\n-            Definition::Local(_) => None,\n-            Definition::GenericParam(_) => None,\n-            Definition::Label(_) => None,\n+            Definition::ModuleDef(def) => match def {\n+                ModuleDef::Module(it) => {\n+                    // FIXME: should work like other cases here.\n+                    let parent = it.parent(db)?;\n+                    parent.visibility_of(db, def)\n+                }\n+                ModuleDef::Function(it) => Some(it.visibility(db)),\n+                ModuleDef::Adt(it) => Some(it.visibility(db)),\n+                ModuleDef::Const(it) => Some(it.visibility(db)),\n+                ModuleDef::Static(it) => Some(it.visibility(db)),\n+                ModuleDef::Trait(it) => Some(it.visibility(db)),\n+                ModuleDef::TypeAlias(it) => Some(it.visibility(db)),\n+                // NB: Variants don't have their own visibility, and just inherit\n+                // one from the parent. Not sure if that's the right thing to do.\n+                ModuleDef::Variant(it) => Some(it.parent_enum(db).visibility(db)),\n+                ModuleDef::BuiltinType(_) => None,\n+            },\n+            Definition::Macro(_)\n+            | Definition::SelfType(_)\n+            | Definition::Local(_)\n+            | Definition::GenericParam(_)\n+            | Definition::Label(_) => None,\n         }\n     }\n "}]}