{"sha": "cc9008b7d497930ba768bc90703183a81b047774", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjOTAwOGI3ZDQ5NzkzMGJhNzY4YmM5MDcwMzE4M2E4MWIwNDc3NzQ=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2018-01-13T11:27:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-01-13T11:27:36Z"}, "message": "Merge pull request #2347 from kimsnj/extrem_comp\n\nFix #1159: avoid comparing fixed and target sized types in lint", "tree": {"sha": "37484f3f56af1e13c94c21670358ea2e50ce8954", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37484f3f56af1e13c94c21670358ea2e50ce8954"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc9008b7d497930ba768bc90703183a81b047774", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaWe0oCRBK7hj4Ov3rIwAAdHIIAJnW3sS5gYuHEx/SjWWciFNT\nWt4xUnvPpLjemEPqJEKQQSuBnXkFzx8JCid8hZIVhx1qIApsUGaHz/TKkYB9/FO8\nSkebYM9HoI/fhKhLNrN0tphP/y8wy7NpHtC/GU9iwitmVVAXT6Vi27SX9tHKz5SF\nGk/8GeryClZJ2aEF+Mi3sKP7e7uxT1Ug+Y/m7zsk/xFR4z9sWXjkTz0nk2kWp557\nKY7WAA9C+FZ5XgZDQ+kqtzlNxLwZykmDaEQK/6FCNtE/7Q6F0wqO7bxAxn4eglVU\neAJTY77fRhyCQ9XVmePLLud4EUlS3ZDwzeY+84+AKE61ayTQFDNREcnrwOJltGw=\n=7s3i\n-----END PGP SIGNATURE-----\n", "payload": "tree 37484f3f56af1e13c94c21670358ea2e50ce8954\nparent b863a00a4eff98335ab7994bece97c632a8ad65a\nparent 53c0ae01698a9b53d56d7186c55a617a75668187\nauthor Oliver Schneider <oli-obk@users.noreply.github.com> 1515842856 +0100\ncommitter GitHub <noreply@github.com> 1515842856 +0100\n\nMerge pull request #2347 from kimsnj/extrem_comp\n\nFix #1159: avoid comparing fixed and target sized types in lint"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc9008b7d497930ba768bc90703183a81b047774", "html_url": "https://github.com/rust-lang/rust/commit/cc9008b7d497930ba768bc90703183a81b047774", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc9008b7d497930ba768bc90703183a81b047774/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b863a00a4eff98335ab7994bece97c632a8ad65a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b863a00a4eff98335ab7994bece97c632a8ad65a", "html_url": "https://github.com/rust-lang/rust/commit/b863a00a4eff98335ab7994bece97c632a8ad65a"}, {"sha": "53c0ae01698a9b53d56d7186c55a617a75668187", "url": "https://api.github.com/repos/rust-lang/rust/commits/53c0ae01698a9b53d56d7186c55a617a75668187", "html_url": "https://github.com/rust-lang/rust/commit/53c0ae01698a9b53d56d7186c55a617a75668187"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "c0c72408c7da572d80fc7114d43ff4547d8fbe73", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/cc9008b7d497930ba768bc90703183a81b047774/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc9008b7d497930ba768bc90703183a81b047774/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=cc9008b7d497930ba768bc90703183a81b047774", "patch": "@@ -1106,6 +1106,20 @@ enum AbsurdComparisonResult {\n }\n \n \n+fn is_cast_between_fixed_and_target<'a, 'tcx>(\n+    cx: &LateContext<'a, 'tcx>,\n+    expr: &'tcx Expr\n+) -> bool {\n+\n+    if let ExprCast(ref cast_exp, _) = expr.node {\n+        let precast_ty = cx.tables.expr_ty(cast_exp);\n+        let cast_ty = cx.tables.expr_ty(expr);\n+\n+        return is_isize_or_usize(precast_ty) != is_isize_or_usize(cast_ty)\n+    }\n+\n+    return false;\n+}\n \n fn detect_absurd_comparison<'a, 'tcx>(\n     cx: &LateContext<'a, 'tcx>,\n@@ -1123,6 +1137,11 @@ fn detect_absurd_comparison<'a, 'tcx>(\n         return None;\n     }\n \n+    // comparisons between fix sized types and target sized types are considered unanalyzable\n+    if is_cast_between_fixed_and_target(cx, lhs) || is_cast_between_fixed_and_target(cx, rhs) {\n+        return None;\n+    }\n+\n     let normalized = normalize_comparison(op, lhs, rhs);\n     let (rel, normalized_lhs, normalized_rhs) = if let Some(val) = normalized {\n         val"}, {"sha": "8c036e6c072557c3a4c257a39dc7098a19cf01c9", "filename": "tests/ui/absurd-extreme-comparisons.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/cc9008b7d497930ba768bc90703183a81b047774/tests%2Fui%2Fabsurd-extreme-comparisons.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc9008b7d497930ba768bc90703183a81b047774/tests%2Fui%2Fabsurd-extreme-comparisons.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fabsurd-extreme-comparisons.rs?ref=cc9008b7d497930ba768bc90703183a81b047774", "patch": "@@ -50,3 +50,8 @@ impl PartialOrd<u32> for U {\n pub fn foo(val: U) -> bool {\n     val > std::u32::MAX\n }\n+\n+pub fn bar(len: u64) -> bool {\n+    // This is OK as we are casting from target sized to fixed size\n+    len >= std::usize::MAX as u64\n+}"}]}