{"sha": "4f0a64736b94a84da4272867366b8679b585e603", "node_id": "C_kwDOAAsO6NoAKDRmMGE2NDczNmI5NGE4NGRhNDI3Mjg2NzM2NmI4Njc5YjU4NWU2MDM", "commit": {"author": {"name": "Alan Egerton", "email": "eggyal@gmail.com", "date": "2022-06-17T12:15:00Z"}, "committer": {"name": "Alan Egerton", "email": "eggyal@gmail.com", "date": "2022-07-06T05:41:53Z"}, "message": "Update TypeVisitor paths", "tree": {"sha": "308153eb8dcc4a08ff2349ba65e7105542acd46e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/308153eb8dcc4a08ff2349ba65e7105542acd46e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f0a64736b94a84da4272867366b8679b585e603", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEm/Nz5g9hEBdpmKVOB8rDzKfgZD8FAmLFIKcACgkQB8rDzKfg\nZD9FFxAAhSCjOAEMbfK8VkYFiB637+TuRczl8Hdd5XDEYE0XK5bDe7Sxq+VjRg6j\nLI+Y5qiZfMTRr15dlt7qXn/CLjp0HBt09yOB6e5Z6Z0Of4Axmvy2WNamfFz1dc8i\ny20we5pSYz76Ub95V0nalPIp1uZplXxBUYbeBNb0htFWvN7unF34D7x3NXvncFi6\nyK+3DrEbcKoasYlHnHpukwziZC4Y37zDBEjmXR2IhtdApg0G/u90ix/ETvbVDmj+\n7jjjFDEGZAgJanvDpMwNN4iyXsgwuILcTxhu85De+6WjeIsVwy53vdh4kXF8N4WB\nZrGfj7txxZwlPxJPcU5U7/ujVl/e2PaW4Pe1Fd0TmHqZ0yuTYJwsZPFjo6kqfRy3\nLqHMhTXtRa1XBzlJEMJkhebwl75JtZ2ni1prhNxIajsU0RLmrOtf9XIoqhthU/zZ\nMZZu8EQV/SWpJgCTuu2GVBabl2JgQXiOA1ISPmoibz5fK7a6WVpoHl+aCys4eIXV\nlv3acW9YFbP/L6Kr8mbSxBDJrJ2ijfdq3S3FdiAxKqB9dLjxEa+1Pzn0gE+x7ar9\ncV9ZBnjdwqd4xf8eDtPLaLi3LRlMNuXbbEbNjxHAtV2QhjPLncgCiMtHzXWpsmCB\nSJt0Z1fCcfnxI2ul5WSsPiihH3XuErdDHwWJDwMS8Spnme+gHX4=\n=Mc/9\n-----END PGP SIGNATURE-----", "payload": "tree 308153eb8dcc4a08ff2349ba65e7105542acd46e\nparent e9e5d0685b0d1e068b1511242b6da9e57a74561f\nauthor Alan Egerton <eggyal@gmail.com> 1655468100 +0100\ncommitter Alan Egerton <eggyal@gmail.com> 1657086113 +0100\n\nUpdate TypeVisitor paths\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f0a64736b94a84da4272867366b8679b585e603", "html_url": "https://github.com/rust-lang/rust/commit/4f0a64736b94a84da4272867366b8679b585e603", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f0a64736b94a84da4272867366b8679b585e603/comments", "author": {"login": "eggyal", "id": 3089613, "node_id": "MDQ6VXNlcjMwODk2MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3089613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eggyal", "html_url": "https://github.com/eggyal", "followers_url": "https://api.github.com/users/eggyal/followers", "following_url": "https://api.github.com/users/eggyal/following{/other_user}", "gists_url": "https://api.github.com/users/eggyal/gists{/gist_id}", "starred_url": "https://api.github.com/users/eggyal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eggyal/subscriptions", "organizations_url": "https://api.github.com/users/eggyal/orgs", "repos_url": "https://api.github.com/users/eggyal/repos", "events_url": "https://api.github.com/users/eggyal/events{/privacy}", "received_events_url": "https://api.github.com/users/eggyal/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eggyal", "id": 3089613, "node_id": "MDQ6VXNlcjMwODk2MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3089613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eggyal", "html_url": "https://github.com/eggyal", "followers_url": "https://api.github.com/users/eggyal/followers", "following_url": "https://api.github.com/users/eggyal/following{/other_user}", "gists_url": "https://api.github.com/users/eggyal/gists{/gist_id}", "starred_url": "https://api.github.com/users/eggyal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eggyal/subscriptions", "organizations_url": "https://api.github.com/users/eggyal/orgs", "repos_url": "https://api.github.com/users/eggyal/repos", "events_url": "https://api.github.com/users/eggyal/events{/privacy}", "received_events_url": "https://api.github.com/users/eggyal/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9e5d0685b0d1e068b1511242b6da9e57a74561f", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9e5d0685b0d1e068b1511242b6da9e57a74561f", "html_url": "https://github.com/rust-lang/rust/commit/e9e5d0685b0d1e068b1511242b6da9e57a74561f"}], "stats": {"total": 308, "additions": 161, "deletions": 147}, "files": [{"sha": "5e9cec5c350c9953172a375fa2afd463c0b7c662", "filename": "compiler/rustc_borrowck/src/constraint_generation.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_borrowck%2Fsrc%2Fconstraint_generation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_borrowck%2Fsrc%2Fconstraint_generation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fconstraint_generation.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -5,7 +5,6 @@ use rustc_middle::mir::{\n     BasicBlock, BasicBlockData, Body, Local, Location, Place, PlaceRef, ProjectionElem, Rvalue,\n     SourceInfo, Statement, StatementKind, Terminator, TerminatorKind, UserTypeProjection,\n };\n-use rustc_middle::ty::fold::TypeFoldable;\n use rustc_middle::ty::subst::SubstsRef;\n use rustc_middle::ty::visit::TypeVisitable;\n use rustc_middle::ty::{self, RegionVid, Ty};"}, {"sha": "d0e0203bf8c44d0e918f941839f878272baedabc", "filename": "compiler/rustc_borrowck/src/region_infer/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_borrowck%2Fsrc%2Fregion_infer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_borrowck%2Fsrc%2Fregion_infer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fregion_infer%2Fmod.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -19,7 +19,9 @@ use rustc_middle::mir::{\n };\n use rustc_middle::traits::ObligationCause;\n use rustc_middle::traits::ObligationCauseCode;\n-use rustc_middle::ty::{self, subst::SubstsRef, RegionVid, Ty, TyCtxt, TypeFoldable};\n+use rustc_middle::ty::{\n+    self, subst::SubstsRef, RegionVid, Ty, TyCtxt, TypeFoldable, TypeVisitable,\n+};\n use rustc_span::Span;\n \n use crate::{"}, {"sha": "d129e8454265bdab3e19adafe2f7d4299295acac", "filename": "compiler/rustc_borrowck/src/region_infer/opaque_types.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_borrowck%2Fsrc%2Fregion_infer%2Fopaque_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_borrowck%2Fsrc%2Fregion_infer%2Fopaque_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fregion_infer%2Fopaque_types.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -2,7 +2,9 @@ use rustc_data_structures::vec_map::VecMap;\n use rustc_hir::def_id::DefId;\n use rustc_hir::OpaqueTyOrigin;\n use rustc_infer::infer::InferCtxt;\n-use rustc_middle::ty::{self, OpaqueHiddenType, OpaqueTypeKey, TyCtxt, TypeFoldable};\n+use rustc_middle::ty::{\n+    self, OpaqueHiddenType, OpaqueTypeKey, TyCtxt, TypeFoldable, TypeVisitable,\n+};\n use rustc_trait_selection::opaque_types::InferCtxtExt;\n \n use super::RegionInferenceContext;"}, {"sha": "3f9c0cecccc68c4dcb7e91f73aae146f1f0c8721", "filename": "compiler/rustc_borrowck/src/type_check/constraint_conversion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fconstraint_conversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fconstraint_conversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fconstraint_conversion.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -6,7 +6,7 @@ use rustc_infer::infer::region_constraints::{GenericKind, VerifyBound};\n use rustc_infer::infer::{self, InferCtxt, SubregionOrigin};\n use rustc_middle::mir::ConstraintCategory;\n use rustc_middle::ty::subst::GenericArgKind;\n-use rustc_middle::ty::TypeFoldable;\n+use rustc_middle::ty::TypeVisitable;\n use rustc_middle::ty::{self, TyCtxt};\n use rustc_span::{Span, DUMMY_SP};\n "}, {"sha": "d4e61ec213b60236dc4adb501bdb143f211c91b5", "filename": "compiler/rustc_borrowck/src/type_check/liveness/trace.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fliveness%2Ftrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fliveness%2Ftrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fliveness%2Ftrace.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -3,7 +3,7 @@ use rustc_index::bit_set::HybridBitSet;\n use rustc_index::interval::IntervalSet;\n use rustc_infer::infer::canonical::QueryRegionConstraints;\n use rustc_middle::mir::{BasicBlock, Body, ConstraintCategory, Local, Location};\n-use rustc_middle::ty::{Ty, TypeFoldable, TypeVisitable};\n+use rustc_middle::ty::{Ty, TypeVisitable};\n use rustc_trait_selection::traits::query::dropck_outlives::DropckOutlivesResult;\n use rustc_trait_selection::traits::query::type_op::outlives::DropckOutlives;\n use rustc_trait_selection::traits::query::type_op::{TypeOp, TypeOpOutput};"}, {"sha": "d71a4983a92c42823088636cafbbd251101052d9", "filename": "compiler/rustc_borrowck/src/type_check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -27,8 +27,8 @@ use rustc_middle::mir::AssertKind;\n use rustc_middle::mir::*;\n use rustc_middle::ty::adjustment::PointerCast;\n use rustc_middle::ty::cast::CastTy;\n-use rustc_middle::ty::fold::TypeFoldable;\n use rustc_middle::ty::subst::{GenericArgKind, SubstsRef, UserSubsts};\n+use rustc_middle::ty::visit::TypeVisitable;\n use rustc_middle::ty::{\n     self, CanonicalUserTypeAnnotation, CanonicalUserTypeAnnotations, OpaqueHiddenType,\n     OpaqueTypeKey, RegionVid, ToPredicate, Ty, TyCtxt, UserType, UserTypeAnnotationIndex,"}, {"sha": "be2d3108c5fa919c54386e5ee922931f67cb7973", "filename": "compiler/rustc_codegen_cranelift/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_codegen_cranelift%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_codegen_cranelift%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_cranelift%2Fsrc%2Flib.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -79,7 +79,7 @@ mod prelude {\n     pub(crate) use rustc_middle::ty::layout::{self, LayoutOf, TyAndLayout};\n     pub(crate) use rustc_middle::ty::{\n         self, FloatTy, Instance, InstanceDef, IntTy, ParamEnv, Ty, TyCtxt, TypeAndMut,\n-        TypeFoldable, UintTy,\n+        TypeFoldable, TypeVisitable, UintTy,\n     };\n     pub(crate) use rustc_target::abi::{Abi, Scalar, Size, VariantIdx};\n "}, {"sha": "c1041125ecce7542ceace76b05ae01c8b9346a4f", "filename": "compiler/rustc_codegen_gcc/src/callee.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_codegen_gcc%2Fsrc%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_codegen_gcc%2Fsrc%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_gcc%2Fsrc%2Fcallee.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -1,6 +1,6 @@\n use gccjit::{FunctionType, RValue};\n use rustc_codegen_ssa::traits::BaseTypeMethods;\n-use rustc_middle::ty::{self, Instance, TypeFoldable};\n+use rustc_middle::ty::{self, Instance, TypeVisitable};\n use rustc_middle::ty::layout::{FnAbiOf, HasTyCtxt};\n \n use crate::abi::FnAbiGccExt;"}, {"sha": "9468a1ef4bbbbf66cff714810947e9e0db894275", "filename": "compiler/rustc_codegen_gcc/src/mono_item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_codegen_gcc%2Fsrc%2Fmono_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_codegen_gcc%2Fsrc%2Fmono_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_gcc%2Fsrc%2Fmono_item.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -1,7 +1,7 @@\n use rustc_codegen_ssa::traits::PreDefineMethods;\n use rustc_middle::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n use rustc_middle::mir::mono::{Linkage, Visibility};\n-use rustc_middle::ty::{self, Instance, TypeFoldable};\n+use rustc_middle::ty::{self, Instance, TypeVisitable};\n use rustc_middle::ty::layout::{FnAbiOf, LayoutOf};\n use rustc_span::def_id::DefId;\n "}, {"sha": "524d10fb5e24d02e52829d96d0b5a970850d1c6e", "filename": "compiler/rustc_codegen_gcc/src/type_of.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_codegen_gcc%2Fsrc%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_codegen_gcc%2Fsrc%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_gcc%2Fsrc%2Ftype_of.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -3,7 +3,7 @@ use std::fmt::Write;\n use gccjit::{Struct, Type};\n use crate::rustc_codegen_ssa::traits::{BaseTypeMethods, DerivedTypeMethods, LayoutTypeMethods};\n use rustc_middle::bug;\n-use rustc_middle::ty::{self, Ty, TypeFoldable};\n+use rustc_middle::ty::{self, Ty, TypeVisitable};\n use rustc_middle::ty::layout::{FnAbiOf, LayoutOf, TyAndLayout};\n use rustc_middle::ty::print::with_no_trimmed_paths;\n use rustc_target::abi::{self, Abi, F32, F64, FieldsShape, Int, Integer, Pointer, PointeeInfo, Size, TyAbiInterface, Variants};"}, {"sha": "72155d874a2572e6630cf3ec7e16c20f8e7049d2", "filename": "compiler/rustc_codegen_llvm/src/callee.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcallee.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -13,7 +13,7 @@ use rustc_codegen_ssa::traits::*;\n use tracing::debug;\n \n use rustc_middle::ty::layout::{FnAbiOf, HasTyCtxt};\n-use rustc_middle::ty::{self, Instance, TypeFoldable};\n+use rustc_middle::ty::{self, Instance, TypeVisitable};\n \n /// Codegens a reference to a fn/method item, monomorphizing and\n /// inlining as it goes."}, {"sha": "64ecbc82c560058a321d30ffd1dd742697f5b1f0", "filename": "compiler/rustc_codegen_llvm/src/debuginfo/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmod.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -27,7 +27,7 @@ use rustc_index::vec::IndexVec;\n use rustc_middle::mir;\n use rustc_middle::ty::layout::LayoutOf;\n use rustc_middle::ty::subst::{GenericArgKind, SubstsRef};\n-use rustc_middle::ty::{self, Instance, ParamEnv, Ty, TypeFoldable};\n+use rustc_middle::ty::{self, Instance, ParamEnv, Ty, TypeVisitable};\n use rustc_session::config::{self, DebugInfo};\n use rustc_session::Session;\n use rustc_span::symbol::Symbol;"}, {"sha": "6e94284852f357970663599fbf08766576eef75c", "filename": "compiler/rustc_codegen_llvm/src/mono_item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_codegen_llvm%2Fsrc%2Fmono_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_codegen_llvm%2Fsrc%2Fmono_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fmono_item.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -8,7 +8,7 @@ use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n pub use rustc_middle::mir::mono::MonoItem;\n use rustc_middle::mir::mono::{Linkage, Visibility};\n use rustc_middle::ty::layout::{FnAbiOf, LayoutOf};\n-use rustc_middle::ty::{self, Instance, TypeFoldable};\n+use rustc_middle::ty::{self, Instance, TypeVisitable};\n use rustc_session::config::CrateType;\n use rustc_target::spec::RelocModel;\n use tracing::debug;"}, {"sha": "9f0e6c80b19a7f0108620d5fa07275f7dd90aaee", "filename": "compiler/rustc_codegen_llvm/src/type_of.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_codegen_llvm%2Fsrc%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_codegen_llvm%2Fsrc%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Ftype_of.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -6,7 +6,7 @@ use rustc_codegen_ssa::traits::*;\n use rustc_middle::bug;\n use rustc_middle::ty::layout::{FnAbiOf, LayoutOf, TyAndLayout};\n use rustc_middle::ty::print::{with_no_trimmed_paths, with_no_visible_paths};\n-use rustc_middle::ty::{self, Ty, TypeFoldable};\n+use rustc_middle::ty::{self, Ty, TypeVisitable};\n use rustc_target::abi::{Abi, AddressSpace, Align, FieldsShape};\n use rustc_target::abi::{Int, Pointer, F32, F64};\n use rustc_target::abi::{PointeeInfo, Scalar, Size, TyAbiInterface, Variants};"}, {"sha": "f296a04dea16f143eee0cd82c2eb12eab7121239", "filename": "compiler/rustc_codegen_ssa/src/mir/block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fblock.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -17,7 +17,7 @@ use rustc_middle::mir::AssertKind;\n use rustc_middle::mir::{self, SwitchTargets};\n use rustc_middle::ty::layout::{HasTyCtxt, LayoutOf};\n use rustc_middle::ty::print::{with_no_trimmed_paths, with_no_visible_paths};\n-use rustc_middle::ty::{self, Instance, Ty, TypeFoldable};\n+use rustc_middle::ty::{self, Instance, Ty, TypeVisitable};\n use rustc_span::source_map::Span;\n use rustc_span::{sym, Symbol};\n use rustc_symbol_mangling::typeid_for_fnabi;"}, {"sha": "ec3f7a2156a4addc8822fee403210dd2902e0589", "filename": "compiler/rustc_codegen_ssa/src/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fmod.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -2,7 +2,7 @@ use crate::traits::*;\n use rustc_middle::mir;\n use rustc_middle::mir::interpret::ErrorHandled;\n use rustc_middle::ty::layout::{FnAbiOf, HasTyCtxt, TyAndLayout};\n-use rustc_middle::ty::{self, Instance, Ty, TypeFoldable};\n+use rustc_middle::ty::{self, Instance, Ty, TypeFoldable, TypeVisitable};\n use rustc_symbol_mangling::typeid_for_fnabi;\n use rustc_target::abi::call::{FnAbi, PassMode};\n "}, {"sha": "2bc521d5bbe0b8bca7c3ea812ee8f8d9bd38c0ba", "filename": "compiler/rustc_const_eval/src/interpret/util.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Futil.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -1,7 +1,5 @@\n use rustc_middle::mir::interpret::InterpResult;\n-use rustc_middle::ty::{\n-    self, Ty, TyCtxt, TypeFoldable, TypeSuperFoldable, TypeVisitable, TypeVisitor,\n-};\n+use rustc_middle::ty::{self, Ty, TyCtxt, TypeSuperVisitable, TypeVisitable, TypeVisitor};\n use std::convert::TryInto;\n use std::ops::ControlFlow;\n "}, {"sha": "f87de4f6a08a4e58200a1f05a75ea8aec9705f99", "filename": "compiler/rustc_const_eval/src/transform/check_consts/check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fcheck.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -10,7 +10,7 @@ use rustc_middle::mir::visit::{MutatingUseContext, NonMutatingUseContext, PlaceC\n use rustc_middle::mir::*;\n use rustc_middle::ty::subst::{GenericArgKind, InternalSubsts};\n use rustc_middle::ty::{self, adjustment::PointerCast, Instance, InstanceDef, Ty, TyCtxt};\n-use rustc_middle::ty::{Binder, TraitPredicate, TraitRef, TypeFoldable};\n+use rustc_middle::ty::{Binder, TraitPredicate, TraitRef, TypeVisitable};\n use rustc_mir_dataflow::{self, Analysis};\n use rustc_span::{sym, Span, Symbol};\n use rustc_trait_selection::traits::error_reporting::InferCtxtExt;"}, {"sha": "6298fa7f062cb7de212393c25eea853bb4d0d5b0", "filename": "compiler/rustc_const_eval/src/transform/promote_consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fpromote_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fpromote_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fpromote_consts.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -17,7 +17,7 @@ use rustc_middle::mir::traversal::ReversePostorderIter;\n use rustc_middle::mir::visit::{MutVisitor, MutatingUseContext, PlaceContext, Visitor};\n use rustc_middle::mir::*;\n use rustc_middle::ty::subst::InternalSubsts;\n-use rustc_middle::ty::{self, List, TyCtxt, TypeFoldable};\n+use rustc_middle::ty::{self, List, TyCtxt, TypeVisitable};\n use rustc_span::Span;\n \n use rustc_index::vec::{Idx, IndexVec};"}, {"sha": "7b9c6329d326ed6760aec5652e0b2f608fe91671", "filename": "compiler/rustc_const_eval/src/transform/validate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -12,7 +12,7 @@ use rustc_middle::mir::{\n     Statement, StatementKind, Terminator, TerminatorKind, UnOp, START_BLOCK,\n };\n use rustc_middle::ty::fold::BottomUpFolder;\n-use rustc_middle::ty::{self, InstanceDef, ParamEnv, Ty, TyCtxt, TypeFoldable};\n+use rustc_middle::ty::{self, InstanceDef, ParamEnv, Ty, TyCtxt, TypeFoldable, TypeVisitable};\n use rustc_mir_dataflow::impls::MaybeStorageLive;\n use rustc_mir_dataflow::storage::always_live_locals;\n use rustc_mir_dataflow::{Analysis, ResultsCursor};"}, {"sha": "8bf1de34a9b5cace73b66a13e3f888ebafc6fbb9", "filename": "compiler/rustc_infer/src/infer/combine.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcombine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcombine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcombine.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -37,7 +37,7 @@ use rustc_middle::traits::ObligationCause;\n use rustc_middle::ty::error::{ExpectedFound, TypeError};\n use rustc_middle::ty::relate::{self, Relate, RelateResult, TypeRelation};\n use rustc_middle::ty::subst::SubstsRef;\n-use rustc_middle::ty::{self, InferConst, ToPredicate, Ty, TyCtxt, TypeFoldable};\n+use rustc_middle::ty::{self, InferConst, ToPredicate, Ty, TyCtxt, TypeVisitable};\n use rustc_middle::ty::{IntType, UintType};\n use rustc_span::{Span, DUMMY_SP};\n "}, {"sha": "665669be2dd5682fbf6883dfb83210ca57cf4914", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -68,7 +68,7 @@ use rustc_middle::dep_graph::DepContext;\n use rustc_middle::ty::print::with_no_trimmed_paths;\n use rustc_middle::ty::{\n     self, error::TypeError, Binder, List, Region, Subst, Ty, TyCtxt, TypeFoldable,\n-    TypeSuperFoldable,\n+    TypeSuperVisitable, TypeVisitable,\n };\n use rustc_span::{sym, symbol::kw, BytePos, DesugaringKind, Pos, Span};\n use rustc_target::spec::abi;\n@@ -1540,7 +1540,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n             }\n         }\n \n-        impl<'tcx> ty::fold::TypeVisitor<'tcx> for OpaqueTypesVisitor<'tcx> {\n+        impl<'tcx> ty::visit::TypeVisitor<'tcx> for OpaqueTypesVisitor<'tcx> {\n             fn visit_ty(&mut self, t: Ty<'tcx>) -> ControlFlow<Self::BreakTy> {\n                 if let Some((kind, def_id)) = TyCategory::from_ty(self.tcx, t) {\n                     let span = self.tcx.def_span(def_id);"}, {"sha": "02928c4aa57cdd5b884529d4c7f1243336662a9b", "filename": "compiler/rustc_infer/src/infer/error_reporting/nice_region_error/static_impl_trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -10,7 +10,7 @@ use rustc_hir::def_id::DefId;\n use rustc_hir::intravisit::{walk_ty, Visitor};\n use rustc_hir::{self as hir, GenericBound, Item, ItemKind, Lifetime, LifetimeName, Node, TyKind};\n use rustc_middle::ty::{\n-    self, AssocItemContainer, StaticLifetimeVisitor, Ty, TyCtxt, TypeSuperFoldable, TypeVisitor,\n+    self, AssocItemContainer, StaticLifetimeVisitor, Ty, TyCtxt, TypeSuperVisitable, TypeVisitor,\n };\n use rustc_span::symbol::Ident;\n use rustc_span::Span;"}, {"sha": "91bf9695dfc140ab2fc052b6abb3911b7fadf7e8", "filename": "compiler/rustc_infer/src/infer/error_reporting/nice_region_error/trait_impl_difference.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ftrait_impl_difference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ftrait_impl_difference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ftrait_impl_difference.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -11,7 +11,7 @@ use rustc_hir::def_id::{DefId, LocalDefId};\n use rustc_hir::intravisit::Visitor;\n use rustc_middle::hir::nested_filter;\n use rustc_middle::ty::print::RegionHighlightMode;\n-use rustc_middle::ty::{self, Ty, TyCtxt, TypeSuperFoldable, TypeVisitor};\n+use rustc_middle::ty::{self, Ty, TyCtxt, TypeSuperVisitable, TypeVisitor};\n use rustc_span::{Span, Symbol};\n \n use std::ops::ControlFlow;\n@@ -88,7 +88,7 @@ impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {\n             }\n         }\n \n-        impl<'tcx> ty::fold::TypeVisitor<'tcx> for HighlightBuilder<'tcx> {\n+        impl<'tcx> ty::visit::TypeVisitor<'tcx> for HighlightBuilder<'tcx> {\n             fn visit_region(&mut self, r: ty::Region<'tcx>) -> ControlFlow<Self::BreakTy> {\n                 if !r.has_name() && self.counter <= 3 {\n                     self.highlight.highlighting_region(r, self.counter);"}, {"sha": "b356da0be554efcce5758f55b0cd2731077ac4f5", "filename": "compiler/rustc_infer/src/infer/error_reporting/nice_region_error/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Futil.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -5,7 +5,7 @@ use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n use crate::infer::TyCtxt;\n use rustc_hir as hir;\n use rustc_hir::def_id::LocalDefId;\n-use rustc_middle::ty::{self, Binder, DefIdTree, Region, Ty, TypeFoldable, TypeVisitable};\n+use rustc_middle::ty::{self, Binder, DefIdTree, Region, Ty, TypeVisitable};\n use rustc_span::Span;\n \n /// Information about the anonymous region we are searching for."}, {"sha": "84004d2b21f902bce8fe3b5e7a8d2416143bc1bc", "filename": "compiler/rustc_infer/src/infer/freshen.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ffreshen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ffreshen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ffreshen.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -34,7 +34,7 @@ use super::InferCtxt;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_middle::infer::unify_key::ToType;\n use rustc_middle::ty::fold::TypeFolder;\n-use rustc_middle::ty::{self, Ty, TyCtxt, TypeFoldable, TypeSuperFoldable};\n+use rustc_middle::ty::{self, Ty, TyCtxt, TypeFoldable, TypeSuperFoldable, TypeVisitable};\n use std::collections::hash_map::Entry;\n \n pub struct TypeFreshener<'a, 'tcx> {"}, {"sha": "bab4f3e9e362ffb4a4c2fcea4c83c45b85d97fcc", "filename": "compiler/rustc_infer/src/infer/nll_relate/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fnll_relate%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fnll_relate%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fnll_relate%2Fmod.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -27,9 +27,8 @@ use crate::infer::{ConstVarValue, ConstVariableValue};\n use crate::infer::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_middle::ty::error::TypeError;\n-use rustc_middle::ty::fold::{TypeFoldable, TypeSuperFoldable, TypeVisitor};\n use rustc_middle::ty::relate::{self, Relate, RelateResult, TypeRelation};\n-use rustc_middle::ty::visit::TypeVisitable;\n+use rustc_middle::ty::visit::{TypeSuperVisitable, TypeVisitable, TypeVisitor};\n use rustc_middle::ty::{self, InferConst, Ty, TyCtxt};\n use rustc_span::Span;\n use std::fmt::Debug;"}, {"sha": "26d689f29eeaf690c4dfc47186e712b33f421811", "filename": "compiler/rustc_infer/src/infer/opaque_types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fopaque_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fopaque_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fopaque_types.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -9,7 +9,7 @@ use rustc_middle::traits::ObligationCause;\n use rustc_middle::ty::fold::BottomUpFolder;\n use rustc_middle::ty::subst::{GenericArgKind, Subst};\n use rustc_middle::ty::{\n-    self, OpaqueHiddenType, OpaqueTypeKey, Ty, TyCtxt, TypeFoldable, TypeSuperFoldable,\n+    self, OpaqueHiddenType, OpaqueTypeKey, Ty, TyCtxt, TypeFoldable, TypeSuperVisitable,\n     TypeVisitable, TypeVisitor,\n };\n use rustc_span::Span;"}, {"sha": "7234660dbcd32c4e75a54ba281d26e8c683108ba", "filename": "compiler/rustc_infer/src/infer/outlives/components.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_infer%2Fsrc%2Finfer%2Foutlives%2Fcomponents.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_infer%2Fsrc%2Finfer%2Foutlives%2Fcomponents.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Foutlives%2Fcomponents.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -4,7 +4,7 @@\n \n use rustc_data_structures::sso::SsoHashSet;\n use rustc_middle::ty::subst::{GenericArg, GenericArgKind};\n-use rustc_middle::ty::{self, Ty, TyCtxt, TypeFoldable};\n+use rustc_middle::ty::{self, Ty, TyCtxt, TypeVisitable};\n use smallvec::{smallvec, SmallVec};\n \n #[derive(Debug)]"}, {"sha": "59cf39abe644055f010cbe79165edf32919cdd67", "filename": "compiler/rustc_infer/src/infer/outlives/obligations.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_infer%2Fsrc%2Finfer%2Foutlives%2Fobligations.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_infer%2Fsrc%2Finfer%2Foutlives%2Fobligations.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Foutlives%2Fobligations.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -69,7 +69,7 @@ use crate::infer::{\n use crate::traits::{ObligationCause, ObligationCauseCode};\n use rustc_data_structures::undo_log::UndoLogs;\n use rustc_middle::ty::subst::GenericArgKind;\n-use rustc_middle::ty::{self, Region, Ty, TyCtxt, TypeFoldable};\n+use rustc_middle::ty::{self, Region, Ty, TyCtxt, TypeVisitable};\n use smallvec::smallvec;\n \n impl<'cx, 'tcx> InferCtxt<'cx, 'tcx> {"}, {"sha": "772e297b7b44556a305b1ce7b68f38c47dd71667", "filename": "compiler/rustc_infer/src/infer/outlives/test_type_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_infer%2Fsrc%2Finfer%2Foutlives%2Ftest_type_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_infer%2Fsrc%2Finfer%2Foutlives%2Ftest_type_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Foutlives%2Ftest_type_match.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -1,7 +1,7 @@\n use std::collections::hash_map::Entry;\n \n use rustc_data_structures::fx::FxHashMap;\n-use rustc_middle::ty::TypeFoldable;\n+use rustc_middle::ty::TypeVisitable;\n use rustc_middle::ty::{\n     self,\n     error::TypeError,"}, {"sha": "a61456874292075af538eaac5597f9f97b117659", "filename": "compiler/rustc_infer/src/infer/resolve.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fresolve.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -1,8 +1,9 @@\n use super::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use super::{FixupError, FixupResult, InferCtxt, Span};\n use rustc_middle::mir;\n-use rustc_middle::ty::fold::{FallibleTypeFolder, TypeFolder, TypeSuperFoldable, TypeVisitor};\n-use rustc_middle::ty::{self, Const, InferConst, Ty, TyCtxt, TypeFoldable};\n+use rustc_middle::ty::fold::{FallibleTypeFolder, TypeFolder, TypeSuperFoldable};\n+use rustc_middle::ty::visit::{TypeSuperVisitable, TypeVisitor};\n+use rustc_middle::ty::{self, Const, InferConst, Ty, TyCtxt, TypeFoldable, TypeVisitable};\n \n use std::ops::ControlFlow;\n "}, {"sha": "b27571275b73395da0c74945defec150f9f2dbcf", "filename": "compiler/rustc_infer/src/infer/sub.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fsub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fsub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fsub.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -4,8 +4,8 @@ use super::SubregionOrigin;\n use crate::infer::combine::ConstEquateRelation;\n use crate::infer::{TypeVariableOrigin, TypeVariableOriginKind};\n use crate::traits::Obligation;\n-use rustc_middle::ty::fold::TypeFoldable;\n use rustc_middle::ty::relate::{Cause, Relate, RelateResult, TypeRelation};\n+use rustc_middle::ty::visit::TypeVisitable;\n use rustc_middle::ty::TyVar;\n use rustc_middle::ty::{self, ToPredicate, Ty, TyCtxt};\n use std::mem;"}, {"sha": "573d2d1e330165c5499279656bf54e1a6f6f3491", "filename": "compiler/rustc_infer/src/traits/structural_impls.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_infer%2Fsrc%2Ftraits%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_infer%2Fsrc%2Ftraits%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Ftraits%2Fstructural_impls.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -1,8 +1,8 @@\n use crate::traits;\n use crate::traits::project::Normalized;\n use rustc_middle::ty;\n-use rustc_middle::ty::fold::{FallibleTypeFolder, TypeFoldable, TypeVisitor};\n-use rustc_middle::ty::visit::TypeVisitable;\n+use rustc_middle::ty::fold::{FallibleTypeFolder, TypeFoldable};\n+use rustc_middle::ty::visit::{TypeVisitable, TypeVisitor};\n \n use std::fmt;\n use std::ops::ControlFlow;"}, {"sha": "53e3e1a198ee1a1c0412fda208c71edb8868219d", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -1645,7 +1645,7 @@ declare_lint_pass!(\n \n impl<'tcx> LateLintPass<'tcx> for TrivialConstraints {\n     fn check_item(&mut self, cx: &LateContext<'tcx>, item: &'tcx hir::Item<'tcx>) {\n-        use rustc_middle::ty::fold::TypeFoldable;\n+        use rustc_middle::ty::visit::TypeVisitable;\n         use rustc_middle::ty::PredicateKind::*;\n \n         if cx.tcx.features().trivial_bounds {"}, {"sha": "f41ee6404992d197175b8c6d33e97b9696137780", "filename": "compiler/rustc_lint/src/enum_intrinsics_non_enums.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_lint%2Fsrc%2Fenum_intrinsics_non_enums.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_lint%2Fsrc%2Fenum_intrinsics_non_enums.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fenum_intrinsics_non_enums.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -1,7 +1,7 @@\n use crate::{context::LintContext, LateContext, LateLintPass};\n use rustc_errors::fluent;\n use rustc_hir as hir;\n-use rustc_middle::ty::{fold::TypeFoldable, Ty};\n+use rustc_middle::ty::{visit::TypeVisitable, Ty};\n use rustc_span::{symbol::sym, Span};\n \n declare_lint! {"}, {"sha": "11a752ff09705547328d54b5f452e71b0d232c3f", "filename": "compiler/rustc_lint/src/noop_method_call.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_lint%2Fsrc%2Fnoop_method_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_lint%2Fsrc%2Fnoop_method_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fnoop_method_call.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -1,5 +1,5 @@\n use crate::context::LintContext;\n-use crate::rustc_middle::ty::TypeFoldable;\n+use crate::rustc_middle::ty::TypeVisitable;\n use crate::LateContext;\n use crate::LateLintPass;\n use rustc_errors::fluent;"}, {"sha": "7f6ef91045335f3942f5d68f627833cbc2225dac", "filename": "compiler/rustc_lint/src/types.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_lint%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_lint%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Ftypes.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -7,7 +7,7 @@ use rustc_hir as hir;\n use rustc_hir::{is_range_literal, Expr, ExprKind, Node};\n use rustc_middle::ty::layout::{IntegerExt, LayoutOf, SizeSkeleton};\n use rustc_middle::ty::subst::SubstsRef;\n-use rustc_middle::ty::{self, AdtKind, DefIdTree, Ty, TyCtxt, TypeFoldable, TypeSuperFoldable};\n+use rustc_middle::ty::{self, AdtKind, DefIdTree, Ty, TyCtxt, TypeSuperVisitable, TypeVisitable};\n use rustc_span::source_map;\n use rustc_span::symbol::sym;\n use rustc_span::{Span, Symbol, DUMMY_SP};\n@@ -1182,7 +1182,7 @@ impl<'a, 'tcx> ImproperCTypesVisitor<'a, 'tcx> {\n             cx: &'a LateContext<'tcx>,\n         }\n \n-        impl<'a, 'tcx> ty::fold::TypeVisitor<'tcx> for ProhibitOpaqueTypes<'a, 'tcx> {\n+        impl<'a, 'tcx> ty::visit::TypeVisitor<'tcx> for ProhibitOpaqueTypes<'a, 'tcx> {\n             type BreakTy = Ty<'tcx>;\n \n             fn visit_ty(&mut self, ty: Ty<'tcx>) -> ControlFlow<Self::BreakTy> {"}, {"sha": "786927e2dad70766a974cb8e046e1bb8747dc9ff", "filename": "compiler/rustc_middle/src/mir/interpret/queries.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fqueries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fqueries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fqueries.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -1,8 +1,8 @@\n use super::{ErrorHandled, EvalToConstValueResult, EvalToValTreeResult, GlobalId};\n \n use crate::mir;\n-use crate::ty::fold::TypeFoldable;\n use crate::ty::subst::InternalSubsts;\n+use crate::ty::visit::TypeVisitable;\n use crate::ty::{self, query::TyCtxtAt, query::TyCtxtEnsure, TyCtxt};\n use rustc_hir::def_id::DefId;\n use rustc_span::{Span, DUMMY_SP};"}, {"sha": "e7d7317456c7400683a7bdbf55397a7ab440add6", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -8,10 +8,10 @@ use crate::mir::interpret::{\n use crate::mir::traversal::PostorderCache;\n use crate::mir::visit::MirVisitable;\n use crate::ty::codec::{TyDecoder, TyEncoder};\n-use crate::ty::fold::{FallibleTypeFolder, TypeFoldable, TypeSuperFoldable, TypeVisitor};\n+use crate::ty::fold::{FallibleTypeFolder, TypeFoldable, TypeSuperFoldable};\n use crate::ty::print::{FmtPrinter, Printer};\n use crate::ty::subst::{GenericArg, InternalSubsts, Subst, SubstsRef};\n-use crate::ty::visit::TypeVisitable;\n+use crate::ty::visit::{TypeSuperVisitable, TypeVisitable, TypeVisitor};\n use crate::ty::{self, List, Ty, TyCtxt};\n use crate::ty::{AdtDef, InstanceDef, ScalarInt, UserTypeAnnotationIndex};\n "}, {"sha": "3c1d0061ae1279c7ea281d2eb2f38744b3995de7", "filename": "compiler/rustc_middle/src/traits/specialization_graph.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fspecialization_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fspecialization_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fspecialization_graph.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -1,5 +1,5 @@\n use crate::ty::fast_reject::SimplifiedType;\n-use crate::ty::fold::TypeFoldable;\n+use crate::ty::visit::TypeVisitable;\n use crate::ty::{self, TyCtxt};\n use rustc_data_structures::fx::FxIndexMap;\n use rustc_errors::ErrorGuaranteed;"}, {"sha": "a4e7a12bba3232b5526b7ea107c6c38e401d00a2", "filename": "compiler/rustc_middle/src/ty/consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -2,7 +2,7 @@ use crate::mir::interpret::LitToConstInput;\n use crate::mir::ConstantKind;\n use crate::ty::{\n     self, InlineConstSubsts, InlineConstSubstsParts, InternalSubsts, ParamEnv, ParamEnvAnd, Ty,\n-    TyCtxt, TypeFoldable,\n+    TyCtxt, TypeVisitable,\n };\n use rustc_data_structures::intern::Interned;\n use rustc_errors::ErrorGuaranteed;"}, {"sha": "cb0137d2e5e09c8b8f84cf5dee284db3873b0113", "filename": "compiler/rustc_middle/src/ty/consts/kind.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fkind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fkind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fkind.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -4,7 +4,7 @@ use crate::mir::interpret::{AllocId, ConstValue, Scalar};\n use crate::mir::Promoted;\n use crate::ty::subst::{InternalSubsts, SubstsRef};\n use crate::ty::ParamEnv;\n-use crate::ty::{self, TyCtxt, TypeFoldable};\n+use crate::ty::{self, TyCtxt, TypeVisitable};\n use rustc_errors::ErrorGuaranteed;\n use rustc_hir::def_id::DefId;\n use rustc_macros::HashStable;"}, {"sha": "25bc6dc6167845e052575a5fffb833a4116cad3e", "filename": "compiler/rustc_middle/src/ty/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_middle%2Fsrc%2Fty%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_middle%2Fsrc%2Fty%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fdiagnostics.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -3,8 +3,8 @@\n use std::ops::ControlFlow;\n \n use crate::ty::{\n-    fold::TypeFoldable, visit::TypeVisitable, Const, ConstKind, DefIdTree, ExistentialPredicate,\n-    InferTy, PolyTraitPredicate, Ty, TyCtxt, TypeSuperFoldable, TypeVisitor,\n+    visit::TypeVisitable, Const, ConstKind, DefIdTree, ExistentialPredicate, InferTy,\n+    PolyTraitPredicate, Ty, TyCtxt, TypeSuperVisitable, TypeVisitor,\n };\n \n use rustc_data_structures::fx::FxHashMap;"}, {"sha": "f39fa363a160ed8ef4c15c4eefc8d93b5b61180f", "filename": "compiler/rustc_middle/src/ty/erase_regions.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_middle%2Fsrc%2Fty%2Ferase_regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_middle%2Fsrc%2Fty%2Ferase_regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Ferase_regions.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -1,5 +1,6 @@\n use crate::mir;\n use crate::ty::fold::{TypeFoldable, TypeFolder, TypeSuperFoldable};\n+use crate::ty::visit::TypeVisitable;\n use crate::ty::{self, Ty, TyCtxt, TypeFlags};\n \n pub(super) fn provide(providers: &mut ty::query::Providers) {"}, {"sha": "8d019a3bad8cc7d4c263b507122c41c34a7806f0", "filename": "compiler/rustc_middle/src/ty/fast_reject.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_middle%2Fsrc%2Fty%2Ffast_reject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_middle%2Fsrc%2Fty%2Ffast_reject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Ffast_reject.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -1,6 +1,6 @@\n use crate::mir::Mutability;\n use crate::ty::subst::GenericArgKind;\n-use crate::ty::{self, Ty, TyCtxt, TypeFoldable};\n+use crate::ty::{self, Ty, TyCtxt, TypeVisitable};\n use rustc_hir::def_id::DefId;\n use std::fmt::Debug;\n use std::hash::Hash;"}, {"sha": "391abdbe84c5af9fbfac581764a2dd1ac1c7e93c", "filename": "compiler/rustc_middle/src/ty/instance.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_middle%2Fsrc%2Fty%2Finstance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_middle%2Fsrc%2Fty%2Finstance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Finstance.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -1,7 +1,9 @@\n use crate::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n use crate::ty::print::{FmtPrinter, Printer};\n use crate::ty::subst::{InternalSubsts, Subst};\n-use crate::ty::{self, EarlyBinder, SubstsRef, Ty, TyCtxt, TypeFoldable, TypeSuperFoldable};\n+use crate::ty::{\n+    self, EarlyBinder, SubstsRef, Ty, TyCtxt, TypeFoldable, TypeSuperFoldable, TypeVisitable,\n+};\n use rustc_errors::ErrorGuaranteed;\n use rustc_hir::def::Namespace;\n use rustc_hir::def_id::{CrateNum, DefId};"}, {"sha": "b1518e92f9fd121be5eebddd1bd85c1a0ae1e0b8", "filename": "compiler/rustc_middle/src/ty/layout.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -2,7 +2,7 @@ use crate::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n use crate::mir::{GeneratorLayout, GeneratorSavedLocal};\n use crate::ty::normalize_erasing_regions::NormalizationError;\n use crate::ty::subst::Subst;\n-use crate::ty::{self, subst::SubstsRef, EarlyBinder, ReprOptions, Ty, TyCtxt, TypeFoldable};\n+use crate::ty::{self, subst::SubstsRef, EarlyBinder, ReprOptions, Ty, TyCtxt, TypeVisitable};\n use rustc_ast as ast;\n use rustc_attr as attr;\n use rustc_hir as hir;"}, {"sha": "887236c484bcbd84f8c436ca76f04f5c19f33180", "filename": "compiler/rustc_middle/src/ty/print/pretty.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -2,7 +2,7 @@ use crate::mir::interpret::{AllocRange, GlobalAlloc, Pointer, Provenance, Scalar\n use crate::ty::subst::{GenericArg, GenericArgKind, Subst};\n use crate::ty::{\n     self, ConstInt, DefIdTree, ParamConst, ScalarInt, Term, Ty, TyCtxt, TypeFoldable,\n-    TypeSuperFoldable, TypeVisitable,\n+    TypeSuperFoldable, TypeSuperVisitable, TypeVisitable,\n };\n use rustc_apfloat::ieee::{Double, Single};\n use rustc_data_structures::fx::{FxHashMap, FxIndexMap};\n@@ -2284,7 +2284,7 @@ impl<'tcx> FmtPrinter<'_, 'tcx> {\n             type_collector: SsoHashSet<Ty<'tcx>>,\n         }\n \n-        impl<'tcx> ty::fold::TypeVisitor<'tcx> for LateBoundRegionNameCollector<'_, 'tcx> {\n+        impl<'tcx> ty::visit::TypeVisitor<'tcx> for LateBoundRegionNameCollector<'_, 'tcx> {\n             type BreakTy = ();\n \n             fn visit_region(&mut self, r: ty::Region<'tcx>) -> ControlFlow<Self::BreakTy> {"}, {"sha": "1b4008019fbc58a039d9f73547627a7e2cfdfdb4", "filename": "compiler/rustc_middle/src/ty/structural_impls.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_middle%2Fsrc%2Fty%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_middle%2Fsrc%2Fty%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fstructural_impls.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -4,9 +4,9 @@\n \n use crate::mir::interpret;\n use crate::mir::ProjectionKind;\n-use crate::ty::fold::{FallibleTypeFolder, TypeFoldable, TypeSuperFoldable, TypeVisitor};\n+use crate::ty::fold::{FallibleTypeFolder, TypeFoldable, TypeSuperFoldable};\n use crate::ty::print::{with_no_trimmed_paths, FmtPrinter, Printer};\n-use crate::ty::visit::{TypeSuperVisitable, TypeVisitable};\n+use crate::ty::visit::{TypeSuperVisitable, TypeVisitable, TypeVisitor};\n use crate::ty::{self, InferConst, Lift, Term, Ty, TyCtxt};\n use rustc_data_structures::functor::IdFunctor;\n use rustc_hir as hir;"}, {"sha": "815e39aab571535987472c823d0bafded31b1d78", "filename": "compiler/rustc_middle/src/ty/sty.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -3,12 +3,12 @@\n #![allow(rustc::usage_of_ty_tykind)]\n \n use crate::infer::canonical::Canonical;\n-use crate::ty::fold::ValidateBoundVars;\n use crate::ty::subst::{GenericArg, InternalSubsts, Subst, SubstsRef};\n+use crate::ty::visit::ValidateBoundVars;\n use crate::ty::InferTy::*;\n use crate::ty::{\n-    self, AdtDef, DefIdTree, Discr, Term, Ty, TyCtxt, TypeFlags, TypeFoldable, TypeSuperFoldable,\n-    TypeVisitable, TypeVisitor,\n+    self, AdtDef, DefIdTree, Discr, Term, Ty, TyCtxt, TypeFlags, TypeSuperVisitable, TypeVisitable,\n+    TypeVisitor,\n };\n use crate::ty::{List, ParamEnv};\n use polonius_engine::Atom;"}, {"sha": "3a524d7b0f30716fb448006d0bddd374141cbe04", "filename": "compiler/rustc_middle/src/ty/subst.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsubst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsubst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsubst.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -2,11 +2,9 @@\n \n use crate::mir;\n use crate::ty::codec::{TyDecoder, TyEncoder};\n-use crate::ty::fold::{\n-    FallibleTypeFolder, TypeFoldable, TypeFolder, TypeSuperFoldable, TypeVisitor,\n-};\n+use crate::ty::fold::{FallibleTypeFolder, TypeFoldable, TypeFolder, TypeSuperFoldable};\n use crate::ty::sty::{ClosureSubsts, GeneratorSubsts, InlineConstSubsts};\n-use crate::ty::visit::TypeVisitable;\n+use crate::ty::visit::{TypeVisitable, TypeVisitor};\n use crate::ty::{self, Lift, List, ParamConst, Ty, TyCtxt};\n \n use rustc_data_structures::intern::{Interned, WithStableHash};"}, {"sha": "826c16dda4aa7dc443e29e13066a9bff26d8a298", "filename": "compiler/rustc_middle/src/ty/trait_def.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_middle%2Fsrc%2Fty%2Ftrait_def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_middle%2Fsrc%2Fty%2Ftrait_def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Ftrait_def.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -1,6 +1,6 @@\n use crate::traits::specialization_graph;\n use crate::ty::fast_reject::{self, SimplifiedType, TreatParams};\n-use crate::ty::fold::TypeFoldable;\n+use crate::ty::visit::TypeVisitable;\n use crate::ty::{Ident, Ty, TyCtxt};\n use hir::def_id::LOCAL_CRATE;\n use rustc_hir as hir;"}, {"sha": "3a876df84c287982e8e3ae3224a8324cfdd62285", "filename": "compiler/rustc_middle/src/ty/util.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -6,6 +6,7 @@ use crate::ty::query::TyCtxtAt;\n use crate::ty::subst::{GenericArgKind, Subst, SubstsRef};\n use crate::ty::{\n     self, DefIdTree, FallibleTypeFolder, Ty, TyCtxt, TypeFoldable, TypeFolder, TypeSuperFoldable,\n+    TypeVisitable,\n };\n use rustc_apfloat::Float as _;\n use rustc_ast as ast;"}, {"sha": "e6d42af9817a1551fd570aff5c317c56a47ce808", "filename": "compiler/rustc_mir_build/src/build/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmod.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -20,7 +20,7 @@ use rustc_middle::mir::interpret::Scalar;\n use rustc_middle::mir::*;\n use rustc_middle::thir::{BindingMode, Expr, ExprId, LintLevel, LocalVarId, PatKind, Thir};\n use rustc_middle::ty::subst::Subst;\n-use rustc_middle::ty::{self, Ty, TyCtxt, TypeFoldable, TypeckResults};\n+use rustc_middle::ty::{self, Ty, TyCtxt, TypeVisitable, TypeckResults};\n use rustc_span::symbol::sym;\n use rustc_span::Span;\n use rustc_span::Symbol;"}, {"sha": "070e563f396319cfec6a75fe27011dc656997852", "filename": "compiler/rustc_mir_transform/src/const_prop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -19,7 +19,7 @@ use rustc_middle::mir::{\n use rustc_middle::ty::layout::{LayoutError, LayoutOf, LayoutOfHelpers, TyAndLayout};\n use rustc_middle::ty::subst::{InternalSubsts, Subst};\n use rustc_middle::ty::{\n-    self, ConstKind, EarlyBinder, Instance, ParamEnv, Ty, TyCtxt, TypeFoldable,\n+    self, ConstKind, EarlyBinder, Instance, ParamEnv, Ty, TyCtxt, TypeVisitable,\n };\n use rustc_span::{def_id::DefId, Span};\n use rustc_target::abi::{HasDataLayout, Size, TargetDataLayout};"}, {"sha": "e3ab42d09efff522692670244d93315ff426a8bb", "filename": "compiler/rustc_mir_transform/src/const_prop_lint.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop_lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop_lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop_lint.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -18,7 +18,8 @@ use rustc_middle::mir::{\n use rustc_middle::ty::layout::{LayoutError, LayoutOf, LayoutOfHelpers, TyAndLayout};\n use rustc_middle::ty::subst::{InternalSubsts, Subst};\n use rustc_middle::ty::{\n-    self, ConstInt, ConstKind, EarlyBinder, Instance, ParamEnv, ScalarInt, Ty, TyCtxt, TypeFoldable,\n+    self, ConstInt, ConstKind, EarlyBinder, Instance, ParamEnv, ScalarInt, Ty, TyCtxt,\n+    TypeVisitable,\n };\n use rustc_session::lint;\n use rustc_span::{def_id::DefId, Span};"}, {"sha": "a3a35f95071e93a8281234b1c7569b5fcc4d3e38", "filename": "compiler/rustc_mir_transform/src/inline/cycle.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_mir_transform%2Fsrc%2Finline%2Fcycle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_mir_transform%2Fsrc%2Finline%2Fcycle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Finline%2Fcycle.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -2,7 +2,7 @@ use rustc_data_structures::fx::{FxHashMap, FxHashSet, FxIndexSet};\n use rustc_data_structures::stack::ensure_sufficient_stack;\n use rustc_hir::def_id::{DefId, LocalDefId};\n use rustc_middle::mir::TerminatorKind;\n-use rustc_middle::ty::TypeFoldable;\n+use rustc_middle::ty::TypeVisitable;\n use rustc_middle::ty::{self, subst::SubstsRef, InstanceDef, TyCtxt};\n use rustc_session::Limit;\n "}, {"sha": "9776cd0ab8bc9898f4be29ccdb26fc8d3e8a58b4", "filename": "compiler/rustc_mir_transform/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_mir_transform%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_mir_transform%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Flib.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -28,7 +28,7 @@ use rustc_index::vec::IndexVec;\n use rustc_middle::mir::visit::Visitor as _;\n use rustc_middle::mir::{traversal, Body, ConstQualifs, MirPass, MirPhase, Promoted};\n use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::{self, TyCtxt, TypeFoldable};\n+use rustc_middle::ty::{self, TyCtxt, TypeVisitable};\n use rustc_span::{Span, Symbol};\n \n #[macro_use]"}, {"sha": "b3ac0f4cbeaa48b972ba605c2a88cb541f4899db", "filename": "compiler/rustc_monomorphize/src/collector.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -194,7 +194,9 @@ use rustc_middle::mir::{self, Local, Location};\n use rustc_middle::ty::adjustment::{CustomCoerceUnsized, PointerCast};\n use rustc_middle::ty::print::with_no_trimmed_paths;\n use rustc_middle::ty::subst::{GenericArgKind, InternalSubsts};\n-use rustc_middle::ty::{self, GenericParamDefKind, Instance, Ty, TyCtxt, TypeFoldable, VtblEntry};\n+use rustc_middle::ty::{\n+    self, GenericParamDefKind, Instance, Ty, TyCtxt, TypeFoldable, TypeVisitable, VtblEntry,\n+};\n use rustc_middle::{middle::codegen_fn_attrs::CodegenFnAttrFlags, mir::visit::TyContext};\n use rustc_session::config::EntryFnType;\n use rustc_session::lint::builtin::LARGE_ASSIGNMENTS;"}, {"sha": "9190e5fe4eb08e00ec33c1c41ed96186366f71d2", "filename": "compiler/rustc_monomorphize/src/partitioning/default.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_monomorphize%2Fsrc%2Fpartitioning%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_monomorphize%2Fsrc%2Fpartitioning%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2Fsrc%2Fpartitioning%2Fdefault.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -9,7 +9,7 @@ use rustc_middle::middle::exported_symbols::{SymbolExportInfo, SymbolExportLevel\n use rustc_middle::mir::mono::{CodegenUnit, CodegenUnitNameBuilder, Linkage, Visibility};\n use rustc_middle::mir::mono::{InstantiationMode, MonoItem};\n use rustc_middle::ty::print::characteristic_def_id_of_type;\n-use rustc_middle::ty::{self, fold::TypeFoldable, DefIdTree, InstanceDef, TyCtxt};\n+use rustc_middle::ty::{self, visit::TypeVisitable, DefIdTree, InstanceDef, TyCtxt};\n use rustc_span::symbol::Symbol;\n \n use super::PartitioningCx;"}, {"sha": "aaa924d7fa0deca6e17644e123e44bea5b2bf138", "filename": "compiler/rustc_monomorphize/src/polymorphize.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_monomorphize%2Fsrc%2Fpolymorphize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_monomorphize%2Fsrc%2Fpolymorphize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2Fsrc%2Fpolymorphize.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -13,9 +13,9 @@ use rustc_middle::mir::{\n };\n use rustc_middle::ty::{\n     self,\n-    fold::{TypeFoldable, TypeSuperFoldable, TypeVisitor},\n     query::Providers,\n     subst::SubstsRef,\n+    visit::{TypeSuperVisitable, TypeVisitable, TypeVisitor},\n     Const, Ty, TyCtxt,\n };\n use rustc_span::symbol::sym;"}, {"sha": "cd91e402cac476dfbd62529097218d3849918fc4", "filename": "compiler/rustc_privacy/src/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_privacy%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_privacy%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_privacy%2Fsrc%2Flib.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -27,9 +27,7 @@ use rustc_middle::thir::abstract_const::Node as ACNode;\n use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::subst::InternalSubsts;\n use rustc_middle::ty::{self, Const, DefIdTree, GenericParamDefKind};\n-use rustc_middle::ty::{\n-    TraitRef, Ty, TyCtxt, TypeFoldable, TypeSuperFoldable, TypeVisitable, TypeVisitor,\n-};\n+use rustc_middle::ty::{TraitRef, Ty, TyCtxt, TypeSuperVisitable, TypeVisitable, TypeVisitor};\n use rustc_session::lint;\n use rustc_span::hygiene::Transparency;\n use rustc_span::symbol::{kw, Ident};"}, {"sha": "470438471cb96cdc80eb26b597d5968a7fd8c4bf", "filename": "compiler/rustc_symbol_mangling/src/legacy.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_symbol_mangling%2Fsrc%2Flegacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_symbol_mangling%2Fsrc%2Flegacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_symbol_mangling%2Fsrc%2Flegacy.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -3,7 +3,7 @@ use rustc_hir::def_id::CrateNum;\n use rustc_hir::definitions::{DefPathData, DisambiguatedDefPathData};\n use rustc_middle::ty::print::{PrettyPrinter, Print, Printer};\n use rustc_middle::ty::subst::{GenericArg, GenericArgKind};\n-use rustc_middle::ty::{self, Instance, Ty, TyCtxt, TypeFoldable};\n+use rustc_middle::ty::{self, Instance, Ty, TyCtxt, TypeVisitable};\n use rustc_middle::util::common::record_time;\n \n use tracing::debug;"}, {"sha": "13229a3995c220bae7660e1822da970b644c3c8d", "filename": "compiler/rustc_symbol_mangling/src/v0.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_symbol_mangling%2Fsrc%2Fv0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_symbol_mangling%2Fsrc%2Fv0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_symbol_mangling%2Fsrc%2Fv0.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -9,7 +9,7 @@ use rustc_middle::ty::layout::IntegerExt;\n use rustc_middle::ty::print::{Print, Printer};\n use rustc_middle::ty::subst::{GenericArg, GenericArgKind, Subst};\n use rustc_middle::ty::{\n-    self, EarlyBinder, FloatTy, Instance, IntTy, Ty, TyCtxt, TypeFoldable, TypeVisitable, UintTy,\n+    self, EarlyBinder, FloatTy, Instance, IntTy, Ty, TyCtxt, TypeVisitable, UintTy,\n };\n use rustc_span::symbol::kw;\n use rustc_target::abi::call::FnAbi;"}, {"sha": "8b7e8984a8adbf359b4be7882198932deea4413a", "filename": "compiler/rustc_trait_selection/src/autoderef.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Fautoderef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Fautoderef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fautoderef.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -4,7 +4,7 @@ use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_infer::infer::InferCtxt;\n use rustc_middle::ty::{self, TraitRef, Ty, TyCtxt};\n-use rustc_middle::ty::{ToPredicate, TypeFoldable};\n+use rustc_middle::ty::{ToPredicate, TypeVisitable};\n use rustc_session::Limit;\n use rustc_span::def_id::LOCAL_CRATE;\n use rustc_span::Span;"}, {"sha": "9d30374f8b8aeac6bb0641558454f4f1c9c0bf46", "filename": "compiler/rustc_trait_selection/src/infer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Finfer.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -9,7 +9,7 @@ use rustc_middle::infer::canonical::{Canonical, CanonicalizedQueryResponse, Quer\n use rustc_middle::traits::query::Fallible;\n use rustc_middle::ty::subst::SubstsRef;\n use rustc_middle::ty::ToPredicate;\n-use rustc_middle::ty::{self, Ty, TypeFoldable};\n+use rustc_middle::ty::{self, Ty, TypeFoldable, TypeVisitable};\n use rustc_span::{Span, DUMMY_SP};\n \n use std::fmt::Debug;"}, {"sha": "d290f7b074cb5a894d89d704c227324ae5afa762", "filename": "compiler/rustc_trait_selection/src/opaque_types.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Fopaque_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Fopaque_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fopaque_types.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -9,6 +9,7 @@ use rustc_infer::infer::{InferCtxt, TyCtxtInferExt as _};\n use rustc_infer::traits::{Obligation, ObligationCause, TraitEngine};\n use rustc_middle::ty::fold::{TypeFoldable, TypeFolder, TypeSuperFoldable};\n use rustc_middle::ty::subst::{GenericArg, GenericArgKind, InternalSubsts};\n+use rustc_middle::ty::visit::TypeVisitable;\n use rustc_middle::ty::{self, OpaqueHiddenType, OpaqueTypeKey, ToPredicate, Ty, TyCtxt};\n use rustc_span::Span;\n "}, {"sha": "65ff9ceb67ecbbabb52db70271b970fe6649f4d8", "filename": "compiler/rustc_trait_selection/src/traits/auto_trait.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fauto_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fauto_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fauto_trait.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -8,6 +8,7 @@ use crate::infer::InferCtxt;\n use crate::traits::project::ProjectAndUnifyResult;\n use rustc_middle::mir::interpret::ErrorHandled;\n use rustc_middle::ty::fold::{TypeFolder, TypeSuperFoldable};\n+use rustc_middle::ty::visit::TypeVisitable;\n use rustc_middle::ty::{Region, RegionVid, Term};\n \n use rustc_data_structures::fx::{FxHashMap, FxHashSet};"}, {"sha": "9ef7ac9a8e04af75f8160168811c547666c4833a", "filename": "compiler/rustc_trait_selection/src/traits/chalk_fulfill.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fchalk_fulfill.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fchalk_fulfill.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fchalk_fulfill.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -8,7 +8,7 @@ use crate::traits::{\n     PredicateObligation, SelectionError, TraitEngine,\n };\n use rustc_data_structures::fx::{FxHashMap, FxIndexSet};\n-use rustc_middle::ty::{self, Ty, TypeFoldable};\n+use rustc_middle::ty::{self, Ty, TypeVisitable};\n \n pub struct FulfillmentContext<'tcx> {\n     obligations: FxIndexSet<PredicateObligation<'tcx>>,"}, {"sha": "f933f1c3c94a75d14019118aa33c83719338be6f", "filename": "compiler/rustc_trait_selection/src/traits/coherence.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -20,8 +20,8 @@ use rustc_infer::infer::{InferCtxt, TyCtxtInferExt};\n use rustc_infer::traits::{util, TraitEngine};\n use rustc_middle::traits::specialization_graph::OverlapMode;\n use rustc_middle::ty::fast_reject::{DeepRejectCtxt, TreatParams};\n-use rustc_middle::ty::fold::TypeFoldable;\n use rustc_middle::ty::subst::Subst;\n+use rustc_middle::ty::visit::TypeVisitable;\n use rustc_middle::ty::{self, ImplSubject, Ty, TyCtxt};\n use rustc_span::symbol::sym;\n use rustc_span::DUMMY_SP;"}, {"sha": "f9b4a1583cc741004100b065f9e0b48def6fa5c5", "filename": "compiler/rustc_trait_selection/src/traits/const_evaluatable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -17,7 +17,7 @@ use rustc_middle::mir::interpret::{ErrorHandled, LitToConstError, LitToConstInpu\n use rustc_middle::thir;\n use rustc_middle::thir::abstract_const::{self, Node, NodeId, NotConstEvaluatable};\n use rustc_middle::ty::subst::{Subst, SubstsRef};\n-use rustc_middle::ty::{self, DelaySpanBugEmitted, EarlyBinder, TyCtxt, TypeFoldable};\n+use rustc_middle::ty::{self, DelaySpanBugEmitted, EarlyBinder, TyCtxt, TypeVisitable};\n use rustc_session::lint;\n use rustc_span::def_id::LocalDefId;\n use rustc_span::Span;"}, {"sha": "8fd58f3ce1abc37b1768d19edb78a7e5bc35224e", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -30,6 +30,7 @@ use rustc_middle::ty::error::ExpectedFound;\n use rustc_middle::ty::fold::{TypeFolder, TypeSuperFoldable};\n use rustc_middle::ty::{\n     self, SubtypePredicate, ToPolyTraitRef, ToPredicate, TraitRef, Ty, TyCtxt, TypeFoldable,\n+    TypeVisitable,\n };\n use rustc_span::symbol::{kw, sym};\n use rustc_span::{ExpnKind, Span, DUMMY_SP};"}, {"sha": "31d54b5b403937fe5e129f3da8474ec045491333", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -24,7 +24,7 @@ use rustc_middle::hir::map;\n use rustc_middle::ty::{\n     self, suggest_arbitrary_trait_bound, suggest_constraining_type_param, AdtKind, DefIdTree,\n     GeneratorDiagnosticData, GeneratorInteriorTypeCause, Infer, InferTy, IsSuggestable,\n-    ToPredicate, Ty, TyCtxt, TypeFoldable, TypeFolder, TypeSuperFoldable,\n+    ToPredicate, Ty, TyCtxt, TypeFoldable, TypeFolder, TypeSuperFoldable, TypeVisitable,\n };\n use rustc_middle::ty::{TypeAndMut, TypeckResults};\n use rustc_session::Limit;"}, {"sha": "2dd85631b4898a70e8155d2b086c1a71b95587e3", "filename": "compiler/rustc_trait_selection/src/traits/fulfill.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ffulfill.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ffulfill.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ffulfill.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -10,7 +10,7 @@ use rustc_middle::thir::abstract_const::NotConstEvaluatable;\n use rustc_middle::ty::error::{ExpectedFound, TypeError};\n use rustc_middle::ty::subst::SubstsRef;\n use rustc_middle::ty::ToPredicate;\n-use rustc_middle::ty::{self, Binder, Const, Ty, TypeFoldable};\n+use rustc_middle::ty::{self, Binder, Const, Ty, TypeVisitable};\n use std::marker::PhantomData;\n \n use super::const_evaluatable;"}, {"sha": "dd2769c7186981273fa6c87d4be513d348cab8d4", "filename": "compiler/rustc_trait_selection/src/traits/misc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmisc.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -5,7 +5,7 @@ use crate::traits::{self, ObligationCause};\n \n use rustc_hir as hir;\n use rustc_infer::infer::TyCtxtInferExt;\n-use rustc_middle::ty::{self, Ty, TyCtxt, TypeFoldable};\n+use rustc_middle::ty::{self, Ty, TyCtxt, TypeVisitable};\n \n use crate::traits::error_reporting::InferCtxtExt;\n "}, {"sha": "74d2eb17b6b30e1fc6e2e54d53667c6f822c99b3", "filename": "compiler/rustc_trait_selection/src/traits/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -32,6 +32,7 @@ use rustc_hir::def_id::DefId;\n use rustc_hir::lang_items::LangItem;\n use rustc_middle::ty::fold::TypeFoldable;\n use rustc_middle::ty::subst::{InternalSubsts, SubstsRef};\n+use rustc_middle::ty::visit::TypeVisitable;\n use rustc_middle::ty::{self, GenericParamDefKind, ToPredicate, Ty, TyCtxt, VtblEntry};\n use rustc_span::{sym, Span};\n use smallvec::SmallVec;"}, {"sha": "ac1811244ca5e6167b09c81674e0e8255e02a4d2", "filename": "compiler/rustc_trait_selection/src/traits/object_safety.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fobject_safety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fobject_safety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fobject_safety.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -19,7 +19,7 @@ use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_middle::ty::subst::{GenericArg, InternalSubsts, Subst};\n use rustc_middle::ty::{\n-    self, EarlyBinder, Ty, TyCtxt, TypeFoldable, TypeSuperFoldable, TypeVisitable, TypeVisitor,\n+    self, EarlyBinder, Ty, TyCtxt, TypeSuperVisitable, TypeVisitable, TypeVisitor,\n };\n use rustc_middle::ty::{Predicate, ToPredicate};\n use rustc_session::lint::builtin::WHERE_CLAUSES_OBJECT_SAFETY;"}, {"sha": "b3e7fbb35782860a847a54968614d9a58084434d", "filename": "compiler/rustc_trait_selection/src/traits/project.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -29,9 +29,9 @@ use rustc_hir::def_id::DefId;\n use rustc_hir::lang_items::LangItem;\n use rustc_infer::infer::resolve::OpportunisticRegionResolver;\n use rustc_middle::traits::select::OverflowError;\n-use rustc_middle::ty::fold::{MaxUniverse, TypeFoldable, TypeFolder, TypeSuperFoldable};\n+use rustc_middle::ty::fold::{TypeFoldable, TypeFolder, TypeSuperFoldable};\n use rustc_middle::ty::subst::Subst;\n-use rustc_middle::ty::visit::TypeVisitable;\n+use rustc_middle::ty::visit::{MaxUniverse, TypeVisitable};\n use rustc_middle::ty::{self, EarlyBinder, Term, ToPredicate, Ty, TyCtxt};\n use rustc_span::symbol::sym;\n "}, {"sha": "eccfb3477b9dd00e6726bc8f3a3033d528dca021", "filename": "compiler/rustc_trait_selection/src/traits/query/normalize.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Fnormalize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Fnormalize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Fnormalize.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -14,7 +14,7 @@ use rustc_infer::traits::Normalized;\n use rustc_middle::mir;\n use rustc_middle::ty::fold::{FallibleTypeFolder, TypeFoldable, TypeSuperFoldable};\n use rustc_middle::ty::subst::Subst;\n-use rustc_middle::ty::visit::TypeVisitable;\n+use rustc_middle::ty::visit::{TypeSuperVisitable, TypeVisitable};\n use rustc_middle::ty::{self, Ty, TyCtxt, TypeVisitor};\n \n use std::ops::ControlFlow;"}, {"sha": "0f7af41cfe3ff5b0b320e2f7861afdee1dcf6b6e", "filename": "compiler/rustc_trait_selection/src/traits/select/candidate_assembly.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fcandidate_assembly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fcandidate_assembly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fcandidate_assembly.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -12,7 +12,7 @@ use rustc_infer::traits::TraitEngine;\n use rustc_infer::traits::{Obligation, SelectionError, TraitObligation};\n use rustc_lint_defs::builtin::DEREF_INTO_DYN_SUPERTRAIT;\n use rustc_middle::ty::print::with_no_trimmed_paths;\n-use rustc_middle::ty::{self, ToPredicate, Ty, TypeFoldable};\n+use rustc_middle::ty::{self, ToPredicate, Ty, TypeVisitable};\n use rustc_target::spec::abi::Abi;\n \n use crate::traits;"}, {"sha": "596ee43562234421e37fe7153cdbe3d1bc22fa61", "filename": "compiler/rustc_trait_selection/src/traits/select/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -39,7 +39,7 @@ use rustc_middle::ty::print::with_no_trimmed_paths;\n use rustc_middle::ty::relate::TypeRelation;\n use rustc_middle::ty::subst::{Subst, SubstsRef};\n use rustc_middle::ty::{self, EarlyBinder, PolyProjectionPredicate, ToPolyTraitRef, ToPredicate};\n-use rustc_middle::ty::{Ty, TyCtxt, TypeFoldable};\n+use rustc_middle::ty::{Ty, TyCtxt, TypeFoldable, TypeVisitable};\n use rustc_span::symbol::sym;\n \n use std::cell::{Cell, RefCell};"}, {"sha": "fcb73b43fa8a1354aa9c09faf010a8701da67d9b", "filename": "compiler/rustc_trait_selection/src/traits/specialize/specialization_graph.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fspecialization_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fspecialization_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fspecialization_graph.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -4,7 +4,7 @@ use crate::traits;\n use rustc_hir::def_id::DefId;\n use rustc_middle::ty::fast_reject::{self, SimplifiedType, TreatParams};\n use rustc_middle::ty::print::with_no_trimmed_paths;\n-use rustc_middle::ty::{self, TyCtxt, TypeFoldable};\n+use rustc_middle::ty::{self, TyCtxt, TypeVisitable};\n \n pub use rustc_middle::traits::specialization_graph::*;\n "}, {"sha": "f3ae34ce30a4883fb9c300bd03907f1d74246e0c", "filename": "compiler/rustc_trait_selection/src/traits/structural_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fstructural_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fstructural_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fstructural_match.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -6,7 +6,7 @@ use rustc_data_structures::fx::FxHashSet;\n use rustc_hir as hir;\n use rustc_hir::lang_items::LangItem;\n use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::{self, AdtDef, Ty, TyCtxt, TypeFoldable, TypeSuperFoldable, TypeVisitor};\n+use rustc_middle::ty::{self, AdtDef, Ty, TyCtxt, TypeSuperVisitable, TypeVisitable, TypeVisitor};\n use rustc_span::Span;\n use std::ops::ControlFlow;\n "}, {"sha": "3170b29ee69733777702926ac673cbfa480f0c62", "filename": "compiler/rustc_trait_selection/src/traits/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Futil.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -6,7 +6,7 @@ use smallvec::SmallVec;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir::def_id::DefId;\n use rustc_middle::ty::subst::{GenericArg, Subst, SubstsRef};\n-use rustc_middle::ty::{self, EarlyBinder, ImplSubject, ToPredicate, Ty, TyCtxt, TypeFoldable};\n+use rustc_middle::ty::{self, EarlyBinder, ImplSubject, ToPredicate, Ty, TyCtxt, TypeVisitable};\n \n use super::{Normalized, Obligation, ObligationCause, PredicateObligation, SelectionContext};\n pub use rustc_infer::traits::{self, util::*};"}, {"sha": "d43b3c9091fc6a9d6659bbb1cc19f2f134921fb4", "filename": "compiler/rustc_trait_selection/src/traits/wf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fwf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fwf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fwf.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -5,7 +5,7 @@ use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::lang_items::LangItem;\n use rustc_middle::ty::subst::{GenericArg, GenericArgKind, SubstsRef};\n-use rustc_middle::ty::{self, ToPredicate, Ty, TyCtxt, TypeFoldable};\n+use rustc_middle::ty::{self, ToPredicate, Ty, TyCtxt, TypeVisitable};\n use rustc_span::Span;\n \n use std::iter;"}, {"sha": "c7c604e14e3ee4d235ffc5db02c1b7b1c82d0247", "filename": "compiler/rustc_traits/src/chalk/lowering.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Flowering.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -35,8 +35,8 @@ use rustc_ast::ast;\n use rustc_middle::traits::{ChalkEnvironmentAndGoal, ChalkRustInterner as RustInterner};\n use rustc_middle::ty::subst::{GenericArg, GenericArgKind, SubstsRef};\n use rustc_middle::ty::{\n-    self, Binder, Region, Ty, TyCtxt, TypeFoldable, TypeFolder, TypeSuperFoldable, TypeVisitable,\n-    TypeVisitor,\n+    self, Binder, Region, Ty, TyCtxt, TypeFoldable, TypeFolder, TypeSuperFoldable,\n+    TypeSuperVisitable, TypeVisitable, TypeVisitor,\n };\n use rustc_span::def_id::DefId;\n "}, {"sha": "db7ea4253e36c86454addb406e20a8fdb6ded972", "filename": "compiler/rustc_traits/src/chalk/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Fmod.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -14,7 +14,7 @@ use rustc_middle::infer::canonical::{CanonicalTyVarKind, CanonicalVarKind};\n use rustc_middle::traits::ChalkRustInterner;\n use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::subst::GenericArg;\n-use rustc_middle::ty::{self, BoundVar, ParamTy, TyCtxt, TypeFoldable};\n+use rustc_middle::ty::{self, BoundVar, ParamTy, TyCtxt, TypeFoldable, TypeVisitable};\n \n use rustc_infer::infer::canonical::{\n     Canonical, CanonicalVarValues, Certainty, QueryRegionConstraints, QueryResponse,"}, {"sha": "c7cac8fca899bf23441fa56ad6c469074a3abb79", "filename": "compiler/rustc_traits/src/implied_outlives_bounds.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_traits%2Fsrc%2Fimplied_outlives_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_traits%2Fsrc%2Fimplied_outlives_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_traits%2Fsrc%2Fimplied_outlives_bounds.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -9,7 +9,7 @@ use rustc_infer::infer::{InferCtxt, TyCtxtInferExt};\n use rustc_infer::traits::query::OutlivesBound;\n use rustc_infer::traits::TraitEngineExt as _;\n use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::{self, Ty, TyCtxt, TypeFoldable};\n+use rustc_middle::ty::{self, Ty, TyCtxt, TypeVisitable};\n use rustc_span::source_map::DUMMY_SP;\n use rustc_trait_selection::infer::InferCtxtBuilderExt;\n use rustc_trait_selection::traits::query::{CanonicalTyGoal, Fallible, NoSolution};"}, {"sha": "5e58f2379827ebded1a3173a75b208ba8fc54615", "filename": "compiler/rustc_ty_utils/src/instance.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_ty_utils%2Fsrc%2Finstance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_ty_utils%2Fsrc%2Finstance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ty_utils%2Fsrc%2Finstance.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -4,7 +4,7 @@ use rustc_infer::infer::TyCtxtInferExt;\n use rustc_middle::traits::CodegenObligationError;\n use rustc_middle::ty::subst::SubstsRef;\n use rustc_middle::ty::{\n-    self, Binder, Instance, Ty, TyCtxt, TypeFoldable, TypeSuperFoldable, TypeVisitable, TypeVisitor,\n+    self, Binder, Instance, Ty, TyCtxt, TypeSuperVisitable, TypeVisitable, TypeVisitor,\n };\n use rustc_span::{sym, DUMMY_SP};\n use rustc_trait_selection::traits;"}, {"sha": "703277ec66ae6c06edae7a159011aea06bc306ef", "filename": "compiler/rustc_typeck/src/astconv/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -28,7 +28,7 @@ use rustc_middle::middle::stability::AllowUnstable;\n use rustc_middle::ty::subst::{self, GenericArgKind, InternalSubsts, Subst, SubstsRef};\n use rustc_middle::ty::GenericParamDefKind;\n use rustc_middle::ty::{\n-    self, Const, DefIdTree, EarlyBinder, IsSuggestable, Ty, TyCtxt, TypeFoldable,\n+    self, Const, DefIdTree, EarlyBinder, IsSuggestable, Ty, TyCtxt, TypeVisitable,\n };\n use rustc_session::lint::builtin::{AMBIGUOUS_ASSOCIATED_ITEMS, BARE_TRAIT_OBJECTS};\n use rustc_span::edition::Edition;"}, {"sha": "deaadf0e5c84a3392c62911cbc8341768f1cd65a", "filename": "compiler/rustc_typeck/src/check/_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2F_match.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -4,7 +4,7 @@ use rustc_errors::{Applicability, Diagnostic, MultiSpan};\n use rustc_hir::{self as hir, ExprKind};\n use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc_infer::traits::Obligation;\n-use rustc_middle::ty::{self, ToPredicate, Ty, TypeFoldable};\n+use rustc_middle::ty::{self, ToPredicate, Ty, TypeVisitable};\n use rustc_span::Span;\n use rustc_trait_selection::traits::query::evaluate_obligation::InferCtxtExt;\n use rustc_trait_selection::traits::{"}, {"sha": "2c8be88ef6c929343d01c5ba374539dda7efa269", "filename": "compiler/rustc_typeck/src/check/callee.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcallee.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -18,7 +18,7 @@ use rustc_middle::ty::adjustment::{\n     Adjust, Adjustment, AllowTwoPhase, AutoBorrow, AutoBorrowMutability,\n };\n use rustc_middle::ty::subst::{Subst, SubstsRef};\n-use rustc_middle::ty::{self, Ty, TyCtxt, TypeFoldable};\n+use rustc_middle::ty::{self, Ty, TyCtxt, TypeVisitable};\n use rustc_span::symbol::{sym, Ident};\n use rustc_span::Span;\n use rustc_target::spec::abi;"}, {"sha": "66dd5582490523b870494f083175cf13b9d33be2", "filename": "compiler/rustc_typeck/src/check/cast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcast.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -40,7 +40,7 @@ use rustc_middle::ty::adjustment::AllowTwoPhase;\n use rustc_middle::ty::cast::{CastKind, CastTy};\n use rustc_middle::ty::error::TypeError;\n use rustc_middle::ty::subst::SubstsRef;\n-use rustc_middle::ty::{self, Ty, TypeAndMut, TypeFoldable};\n+use rustc_middle::ty::{self, Ty, TypeAndMut, TypeVisitable};\n use rustc_session::lint;\n use rustc_session::Session;\n use rustc_span::symbol::sym;"}, {"sha": "6ed2ce155d92337bcc1fc8c4b4cf262f00d6110e", "filename": "compiler/rustc_typeck/src/check/check.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -21,7 +21,9 @@ use rustc_middle::hir::nested_filter;\n use rustc_middle::ty::layout::{LayoutError, MAX_SIMD_LANES};\n use rustc_middle::ty::subst::GenericArgKind;\n use rustc_middle::ty::util::{Discr, IntTypeExt};\n-use rustc_middle::ty::{self, ParamEnv, ToPredicate, Ty, TyCtxt, TypeFoldable, TypeSuperFoldable};\n+use rustc_middle::ty::{\n+    self, ParamEnv, ToPredicate, Ty, TyCtxt, TypeSuperVisitable, TypeVisitable,\n+};\n use rustc_session::lint::builtin::{UNINHABITED_STATIC, UNSUPPORTED_CALLING_CONVENTIONS};\n use rustc_span::symbol::sym;\n use rustc_span::{self, Span};\n@@ -522,7 +524,7 @@ pub(super) fn check_opaque_for_inheriting_lifetimes<'tcx>(\n \n     struct FoundParentLifetime;\n     struct FindParentLifetimeVisitor<'tcx>(&'tcx ty::Generics);\n-    impl<'tcx> ty::fold::TypeVisitor<'tcx> for FindParentLifetimeVisitor<'tcx> {\n+    impl<'tcx> ty::visit::TypeVisitor<'tcx> for FindParentLifetimeVisitor<'tcx> {\n         type BreakTy = FoundParentLifetime;\n \n         fn visit_region(&mut self, r: ty::Region<'tcx>) -> ControlFlow<Self::BreakTy> {\n@@ -556,7 +558,7 @@ pub(super) fn check_opaque_for_inheriting_lifetimes<'tcx>(\n         selftys: Vec<(Span, Option<String>)>,\n     }\n \n-    impl<'tcx> ty::fold::TypeVisitor<'tcx> for ProhibitOpaqueVisitor<'tcx> {\n+    impl<'tcx> ty::visit::TypeVisitor<'tcx> for ProhibitOpaqueVisitor<'tcx> {\n         type BreakTy = Ty<'tcx>;\n \n         fn visit_ty(&mut self, t: Ty<'tcx>) -> ControlFlow<Self::BreakTy> {\n@@ -1595,7 +1597,7 @@ fn opaque_type_cycle_error(tcx: TyCtxt<'_>, def_id: LocalDefId, span: Span) -> E\n                 .filter(|(_, ty)| !matches!(ty.kind(), ty::Never))\n             {\n                 struct OpaqueTypeCollector(Vec<DefId>);\n-                impl<'tcx> ty::fold::TypeVisitor<'tcx> for OpaqueTypeCollector {\n+                impl<'tcx> ty::visit::TypeVisitor<'tcx> for OpaqueTypeCollector {\n                     fn visit_ty(&mut self, t: Ty<'tcx>) -> ControlFlow<Self::BreakTy> {\n                         match *t.kind() {\n                             ty::Opaque(def, _) => {"}, {"sha": "1681e6af8123930b0dd62b1d8779186e3fc47d76", "filename": "compiler/rustc_typeck/src/check/closure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fclosure.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -10,8 +10,8 @@ use rustc_hir::lang_items::LangItem;\n use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc_infer::infer::LateBoundRegionConversionTime;\n use rustc_infer::infer::{InferOk, InferResult};\n-use rustc_middle::ty::fold::TypeFoldable;\n use rustc_middle::ty::subst::InternalSubsts;\n+use rustc_middle::ty::visit::TypeVisitable;\n use rustc_middle::ty::{self, Ty};\n use rustc_span::source_map::Span;\n use rustc_target::spec::abi::Abi;"}, {"sha": "acd7e4a92dcc98c75e10e0485541f26d9dfc30ce", "filename": "compiler/rustc_typeck/src/check/coercion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcoercion.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -50,9 +50,9 @@ use rustc_middle::ty::adjustment::{\n     Adjust, Adjustment, AllowTwoPhase, AutoBorrow, AutoBorrowMutability, PointerCast,\n };\n use rustc_middle::ty::error::TypeError;\n-use rustc_middle::ty::fold::TypeFoldable;\n use rustc_middle::ty::relate::RelateResult;\n use rustc_middle::ty::subst::SubstsRef;\n+use rustc_middle::ty::visit::TypeVisitable;\n use rustc_middle::ty::{self, ToPredicate, Ty, TypeAndMut};\n use rustc_session::parse::feature_err;\n use rustc_span::symbol::sym;"}, {"sha": "45ea04f2342889da9a88df839473013abfd3519c", "filename": "compiler/rustc_typeck/src/check/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -44,7 +44,7 @@ use rustc_middle::middle::stability;\n use rustc_middle::ty::adjustment::{Adjust, Adjustment, AllowTwoPhase};\n use rustc_middle::ty::error::TypeError::FieldMisMatch;\n use rustc_middle::ty::subst::SubstsRef;\n-use rustc_middle::ty::{self, AdtKind, DefIdTree, Ty, TypeFoldable};\n+use rustc_middle::ty::{self, AdtKind, DefIdTree, Ty, TypeVisitable};\n use rustc_session::parse::feature_err;\n use rustc_span::hygiene::DesugaringKind;\n use rustc_span::lev_distance::find_best_match_for_name;"}, {"sha": "1794446e92aa5251e9d880f213fd683aa9268f50", "filename": "compiler/rustc_typeck/src/check/fn_ctxt/checks.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -24,7 +24,7 @@ use rustc_infer::infer::error_reporting::{FailureCode, ObligationCauseExt};\n use rustc_infer::infer::InferOk;\n use rustc_infer::infer::TypeTrace;\n use rustc_middle::ty::adjustment::AllowTwoPhase;\n-use rustc_middle::ty::fold::TypeFoldable;\n+use rustc_middle::ty::visit::TypeVisitable;\n use rustc_middle::ty::{self, IsSuggestable, Ty, TyCtxt};\n use rustc_session::Session;\n use rustc_span::symbol::Ident;"}, {"sha": "05bcc710e16258977dad795ed29b2ba1b55ca9e7", "filename": "compiler/rustc_typeck/src/check/fn_ctxt/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fmod.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -15,8 +15,8 @@ use rustc_hir::def_id::DefId;\n use rustc_infer::infer;\n use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc_middle::infer::unify_key::{ConstVariableOrigin, ConstVariableOriginKind};\n-use rustc_middle::ty::fold::TypeFoldable;\n use rustc_middle::ty::subst::GenericArgKind;\n+use rustc_middle::ty::visit::TypeVisitable;\n use rustc_middle::ty::{self, Const, Ty, TyCtxt};\n use rustc_session::Session;\n use rustc_span::symbol::Ident;"}, {"sha": "2ce258cf69c7aa97732a98363c843018f2fa9482", "filename": "compiler/rustc_typeck/src/check/inherited.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Finherited.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Finherited.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Finherited.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -8,6 +8,7 @@ use rustc_hir::HirIdMap;\n use rustc_infer::infer;\n use rustc_infer::infer::{InferCtxt, InferOk, TyCtxtInferExt};\n use rustc_middle::ty::fold::TypeFoldable;\n+use rustc_middle::ty::visit::TypeVisitable;\n use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_span::{self, Span};\n use rustc_trait_selection::infer::InferCtxtExt as _;"}, {"sha": "cc91f2431e07660ea71a05fdba47c0e4da9de038", "filename": "compiler/rustc_typeck/src/check/intrinsicck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fintrinsicck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fintrinsicck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fintrinsicck.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -4,7 +4,7 @@ use rustc_errors::struct_span_err;\n use rustc_hir as hir;\n use rustc_index::vec::Idx;\n use rustc_middle::ty::layout::{LayoutError, SizeSkeleton};\n-use rustc_middle::ty::{self, Article, FloatTy, InferTy, IntTy, Ty, TyCtxt, TypeFoldable, UintTy};\n+use rustc_middle::ty::{self, Article, FloatTy, InferTy, IntTy, Ty, TyCtxt, TypeVisitable, UintTy};\n use rustc_session::lint;\n use rustc_span::{Span, Symbol, DUMMY_SP};\n use rustc_target::abi::{Pointer, VariantIdx};"}, {"sha": "e29f0275bf48da791dc9095e8170cd7813c2dedc", "filename": "compiler/rustc_typeck/src/check/method/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fmod.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -21,7 +21,7 @@ use rustc_infer::infer::{self, InferOk};\n use rustc_middle::ty::subst::Subst;\n use rustc_middle::ty::subst::{InternalSubsts, SubstsRef};\n use rustc_middle::ty::GenericParamDefKind;\n-use rustc_middle::ty::{self, ToPredicate, Ty, TypeFoldable};\n+use rustc_middle::ty::{self, ToPredicate, Ty, TypeVisitable};\n use rustc_span::symbol::Ident;\n use rustc_span::Span;\n use rustc_trait_selection::traits;"}, {"sha": "e9b91414a07ab5fea6f6e828691026229c1b3553", "filename": "compiler/rustc_typeck/src/check/method/probe.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprobe.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -21,7 +21,9 @@ use rustc_middle::middle::stability;\n use rustc_middle::ty::fast_reject::{simplify_type, TreatParams};\n use rustc_middle::ty::subst::{InternalSubsts, Subst, SubstsRef};\n use rustc_middle::ty::GenericParamDefKind;\n-use rustc_middle::ty::{self, EarlyBinder, ParamEnvAnd, ToPredicate, Ty, TyCtxt, TypeFoldable};\n+use rustc_middle::ty::{\n+    self, EarlyBinder, ParamEnvAnd, ToPredicate, Ty, TyCtxt, TypeFoldable, TypeVisitable,\n+};\n use rustc_session::lint;\n use rustc_span::def_id::LocalDefId;\n use rustc_span::lev_distance::{"}, {"sha": "e7a2b32571c461096b3e87711693ec86258b3bfd", "filename": "compiler/rustc_typeck/src/check/method/suggest.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -17,7 +17,7 @@ use rustc_middle::traits::util::supertraits;\n use rustc_middle::ty::fast_reject::{simplify_type, TreatParams};\n use rustc_middle::ty::print::with_crate_prefix;\n use rustc_middle::ty::ToPolyTraitRef;\n-use rustc_middle::ty::{self, DefIdTree, ToPredicate, Ty, TyCtxt, TypeFoldable};\n+use rustc_middle::ty::{self, DefIdTree, ToPredicate, Ty, TyCtxt, TypeVisitable};\n use rustc_span::symbol::{kw, sym, Ident};\n use rustc_span::{lev_distance, source_map, ExpnKind, FileName, MacroKind, Span};\n use rustc_trait_selection::traits::error_reporting::on_unimplemented::InferCtxtExt as _;"}, {"sha": "42893789957f4fd1609e863fd82110e85e7b2933", "filename": "compiler/rustc_typeck/src/check/op.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fop.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -10,7 +10,7 @@ use rustc_middle::ty::adjustment::{\n     Adjust, Adjustment, AllowTwoPhase, AutoBorrow, AutoBorrowMutability,\n };\n use rustc_middle::ty::{\n-    self, Ty, TyCtxt, TypeFoldable, TypeFolder, TypeSuperFoldable, TypeVisitor,\n+    self, Ty, TyCtxt, TypeFolder, TypeSuperFoldable, TypeSuperVisitable, TypeVisitable, TypeVisitor,\n };\n use rustc_span::source_map::Spanned;\n use rustc_span::symbol::{sym, Ident};"}, {"sha": "fbfbfba5c2ad21c9407105425a27467fc6a1bac8", "filename": "compiler/rustc_typeck/src/check/pat.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -13,7 +13,7 @@ use rustc_hir::{HirId, Pat, PatKind};\n use rustc_infer::infer;\n use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc_middle::middle::stability::EvalResult;\n-use rustc_middle::ty::{self, Adt, BindingMode, Ty, TypeFoldable};\n+use rustc_middle::ty::{self, Adt, BindingMode, Ty, TypeVisitable};\n use rustc_session::lint::builtin::NON_EXHAUSTIVE_OMITTED_PATTERNS;\n use rustc_span::hygiene::DesugaringKind;\n use rustc_span::lev_distance::find_best_match_for_name;"}, {"sha": "84a8cc431f4d7b5e7cdf1d193d1414c30361415a", "filename": "compiler/rustc_typeck/src/check/wfcheck.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwfcheck.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -18,7 +18,7 @@ use rustc_middle::ty::subst::{GenericArgKind, InternalSubsts, Subst};\n use rustc_middle::ty::trait_def::TraitSpecializationKind;\n use rustc_middle::ty::{\n     self, AdtKind, DefIdTree, EarlyBinder, GenericParamDefKind, ToPredicate, Ty, TyCtxt,\n-    TypeFoldable, TypeVisitable, TypeVisitor,\n+    TypeFoldable, TypeSuperVisitable, TypeVisitable, TypeVisitor,\n };\n use rustc_session::parse::feature_err;\n use rustc_span::symbol::{sym, Ident, Symbol};\n@@ -1369,7 +1369,7 @@ fn check_where_clauses<'tcx, 'fcx>(\n             struct CountParams {\n                 params: FxHashSet<u32>,\n             }\n-            impl<'tcx> ty::fold::TypeVisitor<'tcx> for CountParams {\n+            impl<'tcx> ty::visit::TypeVisitor<'tcx> for CountParams {\n                 type BreakTy = ();\n \n                 fn visit_ty(&mut self, t: Ty<'tcx>) -> ControlFlow<Self::BreakTy> {"}, {"sha": "41d241f84aceaf7f7e098d9b40706a2587479ee6", "filename": "compiler/rustc_typeck/src/check/writeback.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwriteback.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -15,6 +15,7 @@ use rustc_middle::hir::place::Place as HirPlace;\n use rustc_middle::mir::FakeReadCause;\n use rustc_middle::ty::adjustment::{Adjust, Adjustment, PointerCast};\n use rustc_middle::ty::fold::{TypeFoldable, TypeFolder, TypeSuperFoldable};\n+use rustc_middle::ty::visit::{TypeSuperVisitable, TypeVisitable};\n use rustc_middle::ty::{self, ClosureSizeProfileData, Ty, TyCtxt};\n use rustc_span::symbol::sym;\n use rustc_span::Span;"}, {"sha": "d532050d05035417069c0e443c933f9b9c081fd6", "filename": "compiler/rustc_typeck/src/coherence/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Fbuiltin.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -11,7 +11,7 @@ use rustc_infer::infer;\n use rustc_infer::infer::outlives::env::OutlivesEnvironment;\n use rustc_infer::infer::TyCtxtInferExt;\n use rustc_middle::ty::adjustment::CoerceUnsizedInfo;\n-use rustc_middle::ty::{self, suggest_constraining_type_params, Ty, TyCtxt, TypeFoldable};\n+use rustc_middle::ty::{self, suggest_constraining_type_params, Ty, TyCtxt, TypeVisitable};\n use rustc_trait_selection::traits::error_reporting::InferCtxtExt;\n use rustc_trait_selection::traits::misc::{can_type_implement_copy, CopyImplementationError};\n use rustc_trait_selection::traits::predicate_for_trait_def;"}, {"sha": "623c2a15232de26a98a3b39aa0d4a3a1c412dc79", "filename": "compiler/rustc_typeck/src/coherence/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Fmod.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -8,7 +8,7 @@\n use rustc_errors::struct_span_err;\n use rustc_hir::def_id::{DefId, LocalDefId};\n use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::{self, TyCtxt, TypeFoldable};\n+use rustc_middle::ty::{self, TyCtxt, TypeVisitable};\n use rustc_span::Span;\n use rustc_trait_selection::traits;\n "}, {"sha": "ef0a9a27a016a7e86750a3169de9de4922afe2e7", "filename": "compiler/rustc_typeck/src/coherence/orphan.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Forphan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Forphan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Forphan.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -10,7 +10,7 @@ use rustc_middle::ty::subst::GenericArgKind;\n use rustc_middle::ty::subst::InternalSubsts;\n use rustc_middle::ty::util::IgnoreRegions;\n use rustc_middle::ty::{\n-    self, ImplPolarity, Ty, TyCtxt, TypeFoldable, TypeSuperFoldable, TypeVisitor,\n+    self, ImplPolarity, Ty, TyCtxt, TypeSuperVisitable, TypeVisitable, TypeVisitor,\n };\n use rustc_session::lint;\n use rustc_span::def_id::{DefId, LocalDefId};"}, {"sha": "f942a4fb53a261aff64781c2b3138bab25ae5567", "filename": "compiler/rustc_typeck/src/collect/type_of.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Ftype_of.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -8,7 +8,7 @@ use rustc_hir::{HirId, Node};\n use rustc_middle::hir::nested_filter;\n use rustc_middle::ty::subst::InternalSubsts;\n use rustc_middle::ty::util::IntTypeExt;\n-use rustc_middle::ty::{self, DefIdTree, Ty, TyCtxt, TypeFoldable, TypeFolder, TypeSuperFoldable};\n+use rustc_middle::ty::{self, DefIdTree, Ty, TyCtxt, TypeFolder, TypeSuperFoldable, TypeVisitable};\n use rustc_span::symbol::Ident;\n use rustc_span::{Span, DUMMY_SP};\n "}, {"sha": "8428e46640671e2dcca2082db884d6fc41b2c714", "filename": "compiler/rustc_typeck/src/constrained_generic_params.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fconstrained_generic_params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fconstrained_generic_params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fconstrained_generic_params.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -1,6 +1,5 @@\n use rustc_data_structures::fx::FxHashSet;\n-use rustc_middle::ty::fold::{TypeFoldable, TypeSuperFoldable, TypeVisitor};\n-use rustc_middle::ty::visit::TypeVisitable;\n+use rustc_middle::ty::visit::{TypeSuperVisitable, TypeVisitable, TypeVisitor};\n use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_span::source_map::Span;\n use std::ops::ControlFlow;"}, {"sha": "e7ca70de4ba717923abe601b55179012e213c12c", "filename": "compiler/rustc_typeck/src/impl_wf_check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fimpl_wf_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fimpl_wf_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fimpl_wf_check.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -16,7 +16,7 @@ use rustc_errors::struct_span_err;\n use rustc_hir::def::DefKind;\n use rustc_hir::def_id::LocalDefId;\n use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::{self, TyCtxt, TypeFoldable};\n+use rustc_middle::ty::{self, TyCtxt, TypeVisitable};\n use rustc_span::Span;\n \n use std::collections::hash_map::Entry::{Occupied, Vacant};"}, {"sha": "c46b825f4578db25282d0b20fd853eb6f3946123", "filename": "compiler/rustc_typeck/src/impl_wf_check/min_specialization.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fimpl_wf_check%2Fmin_specialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fimpl_wf_check%2Fmin_specialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fimpl_wf_check%2Fmin_specialization.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -75,7 +75,7 @@ use rustc_infer::infer::{InferCtxt, TyCtxtInferExt};\n use rustc_infer::traits::specialization_graph::Node;\n use rustc_middle::ty::subst::{GenericArg, InternalSubsts, SubstsRef};\n use rustc_middle::ty::trait_def::TraitSpecializationKind;\n-use rustc_middle::ty::{self, TyCtxt, TypeFoldable};\n+use rustc_middle::ty::{self, TyCtxt, TypeVisitable};\n use rustc_span::Span;\n use rustc_trait_selection::traits::{self, translate_substs, wf};\n "}, {"sha": "ced919f66db41996e07877cd329ca6da5bfc7922", "filename": "compiler/rustc_typeck/src/mem_categorization.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fmem_categorization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fmem_categorization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fmem_categorization.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -51,6 +51,7 @@\n use rustc_middle::hir::place::*;\n use rustc_middle::ty::adjustment;\n use rustc_middle::ty::fold::TypeFoldable;\n+use rustc_middle::ty::visit::TypeVisitable;\n use rustc_middle::ty::{self, Ty, TyCtxt};\n \n use rustc_data_structures::fx::FxIndexMap;"}, {"sha": "324df313ef1d8bbc49370e6c4f389207304cadc6", "filename": "compiler/rustc_typeck/src/structured_errors/missing_cast_for_variadic_arg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fstructured_errors%2Fmissing_cast_for_variadic_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fstructured_errors%2Fmissing_cast_for_variadic_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fstructured_errors%2Fmissing_cast_for_variadic_arg.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -1,6 +1,6 @@\n use crate::structured_errors::StructuredDiagnostic;\n use rustc_errors::{Applicability, DiagnosticBuilder, DiagnosticId, ErrorGuaranteed};\n-use rustc_middle::ty::{Ty, TypeFoldable};\n+use rustc_middle::ty::{Ty, TypeVisitable};\n use rustc_session::Session;\n use rustc_span::Span;\n "}, {"sha": "bb608805488ef1850755e0009d1ab097551d381b", "filename": "compiler/rustc_typeck/src/structured_errors/sized_unsized_cast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fstructured_errors%2Fsized_unsized_cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/compiler%2Frustc_typeck%2Fsrc%2Fstructured_errors%2Fsized_unsized_cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fstructured_errors%2Fsized_unsized_cast.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -1,6 +1,6 @@\n use crate::structured_errors::StructuredDiagnostic;\n use rustc_errors::{DiagnosticBuilder, DiagnosticId, ErrorGuaranteed};\n-use rustc_middle::ty::{Ty, TypeFoldable};\n+use rustc_middle::ty::{Ty, TypeVisitable};\n use rustc_session::Session;\n use rustc_span::Span;\n "}, {"sha": "0f4a2f79ac5d7a95c173fcf3d72593486ad324e5", "filename": "src/tools/clippy/clippy_lints/src/dereference.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fdereference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fdereference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fdereference.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -15,7 +15,7 @@ use rustc_hir::{\n use rustc_infer::infer::TyCtxtInferExt;\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::ty::adjustment::{Adjust, Adjustment, AutoBorrow, AutoBorrowMutability};\n-use rustc_middle::ty::{self, Ty, TyCtxt, TypeFoldable, TypeckResults};\n+use rustc_middle::ty::{self, Ty, TyCtxt, TypeVisitable, TypeckResults};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::{symbol::sym, Span, Symbol};\n use rustc_trait_selection::infer::InferCtxtExt;"}, {"sha": "42fac550ec69c4af85f9e6cb76e6f37bdaadc163", "filename": "src/tools/clippy/clippy_lints/src/eta_reduction.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Feta_reduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Feta_reduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Feta_reduction.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -12,7 +12,7 @@ use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::ty::adjustment::{Adjust, Adjustment, AutoBorrow};\n use rustc_middle::ty::binding::BindingMode;\n use rustc_middle::ty::subst::Subst;\n-use rustc_middle::ty::{self, ClosureKind, Ty, TypeFoldable};\n+use rustc_middle::ty::{self, ClosureKind, Ty, TypeVisitable};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::symbol::sym;\n "}, {"sha": "4db103bbc1305ace26d744ecfb4d53113dc8dab9", "filename": "src/tools/clippy/clippy_lints/src/mut_key.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmut_key.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmut_key.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmut_key.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -2,7 +2,7 @@ use clippy_utils::diagnostics::span_lint;\n use clippy_utils::trait_ref_of_method;\n use rustc_hir as hir;\n use rustc_lint::{LateContext, LateLintPass};\n-use rustc_middle::ty::TypeFoldable;\n+use rustc_middle::ty::TypeVisitable;\n use rustc_middle::ty::{Adt, Array, Ref, Slice, Tuple, Ty};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;"}, {"sha": "0cbef1c95fe95ba4a15b565d2cbc147593cf6b50", "filename": "src/tools/clippy/clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -13,7 +13,7 @@ use rustc_hir::{HirIdMap, HirIdSet};\n use rustc_infer::infer::TyCtxtInferExt;\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::mir::FakeReadCause;\n-use rustc_middle::ty::{self, TypeFoldable};\n+use rustc_middle::ty::{self, TypeVisitable};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::symbol::kw;\n use rustc_span::{sym, Span};"}, {"sha": "6d0b9a0f03fa89160df15b4700fec428033e7b3f", "filename": "src/tools/clippy/clippy_lints/src/redundant_clone.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fredundant_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fredundant_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fredundant_clone.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -14,7 +14,7 @@ use rustc_middle::mir::{\n     visit::{MutatingUseContext, NonMutatingUseContext, PlaceContext, Visitor as _},\n     Mutability,\n };\n-use rustc_middle::ty::{self, fold::TypeVisitor, Ty};\n+use rustc_middle::ty::{self, visit::TypeVisitor, Ty};\n use rustc_mir_dataflow::{Analysis, AnalysisDomain, CallReturnPlaces, GenKill, GenKillAnalysis, ResultsCursor};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::{BytePos, Span};"}, {"sha": "5eb03275b8ec1663e5061618c95dd9d63e1e9443", "filename": "src/tools/clippy/clippy_lints/src/transmute/transmute_ptr_to_ref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftransmute%2Ftransmute_ptr_to_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftransmute%2Ftransmute_ptr_to_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftransmute%2Ftransmute_ptr_to_ref.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -5,7 +5,7 @@ use clippy_utils::{meets_msrv, msrvs, sugg};\n use rustc_errors::Applicability;\n use rustc_hir::{self as hir, Expr, GenericArg, Mutability, Path, TyKind};\n use rustc_lint::LateContext;\n-use rustc_middle::ty::{self, Ty, TypeFoldable};\n+use rustc_middle::ty::{self, Ty, TypeVisitable};\n use rustc_semver::RustcVersion;\n \n /// Checks for `transmute_ptr_to_ref` lint."}, {"sha": "8122cd716e01183a362b4a091b23fbf8d1d150c1", "filename": "src/tools/clippy/clippy_lints/src/transmute/useless_transmute.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftransmute%2Fuseless_transmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftransmute%2Fuseless_transmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftransmute%2Fuseless_transmute.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -4,7 +4,7 @@ use clippy_utils::sugg;\n use rustc_errors::Applicability;\n use rustc_hir::Expr;\n use rustc_lint::LateContext;\n-use rustc_middle::ty::{self, Ty, TypeFoldable};\n+use rustc_middle::ty::{self, Ty, TypeVisitable};\n \n /// Checks for `useless_transmute` lint.\n /// Returns `true` if it's triggered, otherwise returns `false`."}, {"sha": "b2f536ca7815b7e155f4dfc5a4052dceebdb97ce", "filename": "src/tools/clippy/clippy_lints/src/types/vec_box.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftypes%2Fvec_box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftypes%2Fvec_box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftypes%2Fvec_box.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -6,7 +6,7 @@ use rustc_errors::Applicability;\n use rustc_hir::{self as hir, def_id::DefId, GenericArg, QPath, TyKind};\n use rustc_lint::LateContext;\n use rustc_middle::ty::layout::LayoutOf;\n-use rustc_middle::ty::TypeFoldable;\n+use rustc_middle::ty::TypeVisitable;\n use rustc_span::symbol::sym;\n use rustc_typeck::hir_ty_to_ty;\n "}, {"sha": "cf509455aad0aeea766170e78a53aedc94377699", "filename": "src/tools/clippy/clippy_lints/src/unit_types/let_unit_value.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Funit_types%2Flet_unit_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Funit_types%2Flet_unit_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Funit_types%2Flet_unit_value.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -7,7 +7,7 @@ use rustc_hir::def::{DefKind, Res};\n use rustc_hir::{Expr, ExprKind, PatKind, Stmt, StmtKind};\n use rustc_lint::{LateContext, LintContext};\n use rustc_middle::lint::in_external_macro;\n-use rustc_middle::ty::{self, Ty, TypeFoldable, TypeSuperFoldable, TypeVisitor};\n+use rustc_middle::ty::{self, Ty, TypeVisitable, TypeSuperVisitable, TypeVisitor};\n \n use super::LET_UNIT_VALUE;\n "}, {"sha": "8dc43c0e29436d369b05d50d0880da07477352b3", "filename": "src/tools/clippy/clippy_lints/src/zero_sized_map_values.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fzero_sized_map_values.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fzero_sized_map_values.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fzero_sized_map_values.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -4,7 +4,7 @@ use if_chain::if_chain;\n use rustc_hir::{self as hir, HirId, ItemKind, Node};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::ty::layout::LayoutOf as _;\n-use rustc_middle::ty::{Adt, Ty, TypeFoldable};\n+use rustc_middle::ty::{Adt, Ty, TypeVisitable};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::sym;\n use rustc_typeck::hir_ty_to_ty;"}, {"sha": "1b32f0aaeb8df141c79a18a389109c772873768d", "filename": "src/tools/clippy/clippy_utils/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f0a64736b94a84da4272867366b8679b585e603/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f0a64736b94a84da4272867366b8679b585e603/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Flib.rs?ref=4f0a64736b94a84da4272867366b8679b585e603", "patch": "@@ -93,7 +93,7 @@ use rustc_middle::ty::fast_reject::SimplifiedTypeGen::{\n     ArraySimplifiedType, BoolSimplifiedType, CharSimplifiedType, FloatSimplifiedType, IntSimplifiedType,\n     PtrSimplifiedType, SliceSimplifiedType, StrSimplifiedType, UintSimplifiedType,\n };\n-use rustc_middle::ty::{layout::IntegerExt, BorrowKind, DefIdTree, Ty, TyCtxt, TypeAndMut, TypeFoldable, UpvarCapture};\n+use rustc_middle::ty::{layout::IntegerExt, BorrowKind, DefIdTree, Ty, TyCtxt, TypeAndMut, TypeVisitable, UpvarCapture};\n use rustc_middle::ty::{FloatTy, IntTy, UintTy};\n use rustc_semver::RustcVersion;\n use rustc_session::Session;"}]}