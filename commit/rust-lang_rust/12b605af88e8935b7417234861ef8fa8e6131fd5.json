{"sha": "12b605af88e8935b7417234861ef8fa8e6131fd5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyYjYwNWFmODhlODkzNWI3NDE3MjM0ODYxZWY4ZmE4ZTYxMzFmZDU=", "commit": {"author": {"name": "Sebastian Dr\u00f6ge", "email": "sebastian@centricular.com", "date": "2021-01-31T16:53:11Z"}, "committer": {"name": "Sebastian Dr\u00f6ge", "email": "sebastian@centricular.com", "date": "2021-02-01T07:47:23Z"}, "message": "Implement `TrustedLen` for `iter::Fuse<I: TrustedLen>`", "tree": {"sha": "0634032589b00e177d0305e009dffb48cf6a070d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0634032589b00e177d0305e009dffb48cf6a070d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12b605af88e8935b7417234861ef8fa8e6131fd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12b605af88e8935b7417234861ef8fa8e6131fd5", "html_url": "https://github.com/rust-lang/rust/commit/12b605af88e8935b7417234861ef8fa8e6131fd5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12b605af88e8935b7417234861ef8fa8e6131fd5/comments", "author": {"login": "sdroege", "id": 301846, "node_id": "MDQ6VXNlcjMwMTg0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/301846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdroege", "html_url": "https://github.com/sdroege", "followers_url": "https://api.github.com/users/sdroege/followers", "following_url": "https://api.github.com/users/sdroege/following{/other_user}", "gists_url": "https://api.github.com/users/sdroege/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdroege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdroege/subscriptions", "organizations_url": "https://api.github.com/users/sdroege/orgs", "repos_url": "https://api.github.com/users/sdroege/repos", "events_url": "https://api.github.com/users/sdroege/events{/privacy}", "received_events_url": "https://api.github.com/users/sdroege/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sdroege", "id": 301846, "node_id": "MDQ6VXNlcjMwMTg0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/301846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdroege", "html_url": "https://github.com/sdroege", "followers_url": "https://api.github.com/users/sdroege/followers", "following_url": "https://api.github.com/users/sdroege/following{/other_user}", "gists_url": "https://api.github.com/users/sdroege/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdroege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdroege/subscriptions", "organizations_url": "https://api.github.com/users/sdroege/orgs", "repos_url": "https://api.github.com/users/sdroege/repos", "events_url": "https://api.github.com/users/sdroege/events{/privacy}", "received_events_url": "https://api.github.com/users/sdroege/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99893346e85de78cb9cb021f831a2fe0b7dd1470", "url": "https://api.github.com/repos/rust-lang/rust/commits/99893346e85de78cb9cb021f831a2fe0b7dd1470", "html_url": "https://github.com/rust-lang/rust/commit/99893346e85de78cb9cb021f831a2fe0b7dd1470"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "7a852c2cb9da55dc9d8bbb5c85c4987a22ae64a3", "filename": "library/core/src/iter/adapters/fuse.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/12b605af88e8935b7417234861ef8fa8e6131fd5/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Ffuse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12b605af88e8935b7417234861ef8fa8e6131fd5/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Ffuse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Ffuse.rs?ref=12b605af88e8935b7417234861ef8fa8e6131fd5", "patch": "@@ -1,6 +1,8 @@\n use crate::intrinsics;\n use crate::iter::adapters::{zip::try_get_unchecked, InPlaceIterable, SourceIter};\n-use crate::iter::{DoubleEndedIterator, ExactSizeIterator, FusedIterator, TrustedRandomAccess};\n+use crate::iter::{\n+    DoubleEndedIterator, ExactSizeIterator, FusedIterator, TrustedLen, TrustedRandomAccess,\n+};\n use crate::ops::Try;\n \n /// An iterator that yields `None` forever after the underlying iterator\n@@ -182,6 +184,12 @@ where\n     }\n }\n \n+#[unstable(feature = \"trusted_len\", issue = \"37572\")]\n+// SAFETY: `TrustedLen` requires that an accurate length is reported via `size_hint()`. As `Fuse`\n+// is just forwarding this to the wrapped iterator `I` this property is preserved and it is safe to\n+// implement `TrustedLen` here.\n+unsafe impl<I> TrustedLen for Fuse<I> where I: TrustedLen {}\n+\n #[doc(hidden)]\n #[unstable(feature = \"trusted_random_access\", issue = \"none\")]\n // SAFETY: `TrustedRandomAccess` requires that `size_hint()` must be exact and cheap to call, and"}]}