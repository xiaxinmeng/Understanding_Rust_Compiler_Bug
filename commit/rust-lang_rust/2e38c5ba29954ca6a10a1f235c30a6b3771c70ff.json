{"sha": "2e38c5ba29954ca6a10a1f235c30a6b3771c70ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlMzhjNWJhMjk5NTRjYTZhMTBhMWYyMzVjMzBhNmIzNzcxYzcwZmY=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2015-12-17T20:03:26Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2015-12-17T20:03:26Z"}, "message": "Add (commented) test for basic use of std::option::Option.", "tree": {"sha": "75762e7e1b893da97a229e1fb1a96ebe5d2f0439", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75762e7e1b893da97a229e1fb1a96ebe5d2f0439"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e38c5ba29954ca6a10a1f235c30a6b3771c70ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e38c5ba29954ca6a10a1f235c30a6b3771c70ff", "html_url": "https://github.com/rust-lang/rust/commit/2e38c5ba29954ca6a10a1f235c30a6b3771c70ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e38c5ba29954ca6a10a1f235c30a6b3771c70ff/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df96c61591e9ad2c37b410450878ce14e726b8e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/df96c61591e9ad2c37b410450878ce14e726b8e4", "html_url": "https://github.com/rust-lang/rust/commit/df96c61591e9ad2c37b410450878ce14e726b8e4"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "e818e9f86c5da2d3b537de17186656b11bb5a20d", "filename": "test/basic.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/2e38c5ba29954ca6a10a1f235c30a6b3771c70ff/test%2Fbasic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e38c5ba29954ca6a10a1f235c30a6b3771c70ff/test%2Fbasic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test%2Fbasic.rs?ref=2e38c5ba29954ca6a10a1f235c30a6b3771c70ff", "patch": "@@ -113,14 +113,23 @@ enum MyOption<T> {\n }\n \n #[miri_run(expected = \"Int(13)\")]\n-fn match_opt_some() -> i32 {\n+fn match_my_opt_some() -> i32 {\n     let x = MyOption::Some { data: 13 };\n     match x {\n         MyOption::Some { data } => data,\n         MyOption::None => 42,\n     }\n }\n \n+// #[miri_run(expected = \"Int(13)\")]\n+// fn match_opt_some() -> i32 {\n+//     let x = Some(13);\n+//     match x {\n+//         Some(data)  => data,\n+//         None => 42,\n+//     }\n+// }\n+\n // #[miri_run(expected = \"Int(42)\")]\n // fn match_opt_none() -> i32 {\n //     let x = MyOption::None;"}]}