{"sha": "ebebe96aab1e22cee1fea2470582c84d2d5c5e47", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViZWJlOTZhYWIxZTIyY2VlMWZlYTI0NzA1ODJjODRkMmQ1YzVlNDc=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2016-04-16T04:41:21Z"}, "committer": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2016-04-16T04:41:21Z"}, "message": "Merge pull request #938 from kamalmarhubi/rename-doc-hint\n\nconfig: Rename get_variant_names to doc_hint", "tree": {"sha": "24888a1c1016e9a05f4acba01059b583e9e473cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24888a1c1016e9a05f4acba01059b583e9e473cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ebebe96aab1e22cee1fea2470582c84d2d5c5e47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ebebe96aab1e22cee1fea2470582c84d2d5c5e47", "html_url": "https://github.com/rust-lang/rust/commit/ebebe96aab1e22cee1fea2470582c84d2d5c5e47", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ebebe96aab1e22cee1fea2470582c84d2d5c5e47/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "847bad603ebba003044ddcfa286b1d3ea4e7f73e", "url": "https://api.github.com/repos/rust-lang/rust/commits/847bad603ebba003044ddcfa286b1d3ea4e7f73e", "html_url": "https://github.com/rust-lang/rust/commit/847bad603ebba003044ddcfa286b1d3ea4e7f73e"}, {"sha": "a2426a678d47c4dd7ecb891bf82c57b4201af702", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2426a678d47c4dd7ecb891bf82c57b4201af702", "html_url": "https://github.com/rust-lang/rust/commit/a2426a678d47c4dd7ecb891bf82c57b4201af702"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "3316984b8619a8ec05719f23add4235938edb1f0", "filename": "src/config.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ebebe96aab1e22cee1fea2470582c84d2d5c5e47/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebebe96aab1e22cee1fea2470582c84d2d5c5e47/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=ebebe96aab1e22cee1fea2470582c84d2d5c5e47", "patch": "@@ -153,26 +153,27 @@ configuration_option_enum! { WriteMode:\n     Checkstyle,\n }\n \n-// This trait and the following impl blocks are there so that we an use\n-// UCFS inside the get_docs() function on types for configs.\n-pub trait ConfigType {\n-    fn get_variant_names() -> String;\n+/// Trait for types that can be used in `Config`.\n+pub trait ConfigType: Sized {\n+    /// Returns hint text for use in `Config::print_docs()`. For enum types, this is a\n+    /// pipe-separated list of variants; for other types it returns \"<type>\".\n+    fn doc_hint() -> String;\n }\n \n impl ConfigType for bool {\n-    fn get_variant_names() -> String {\n+    fn doc_hint() -> String {\n         String::from(\"<boolean>\")\n     }\n }\n \n impl ConfigType for usize {\n-    fn get_variant_names() -> String {\n+    fn doc_hint() -> String {\n         String::from(\"<unsigned integer>\")\n     }\n }\n \n impl ConfigType for String {\n-    fn get_variant_names() -> String {\n+    fn doc_hint() -> String {\n         String::from(\"<string>\")\n     }\n }\n@@ -278,7 +279,7 @@ macro_rules! create_config {\n                     name_out.push(' ');\n                     println!(\"{}{} Default: {:?}\",\n                              name_out,\n-                             <$ty>::get_variant_names(),\n+                             <$ty>::doc_hint(),\n                              $def);\n                     $(\n                         println!(\"{}{}\", space_str, $dstring);"}, {"sha": "f9debdbcec352dcecd7940e9d3b793e7ecd7620f", "filename": "src/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ebebe96aab1e22cee1fea2470582c84d2d5c5e47/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebebe96aab1e22cee1fea2470582c84d2d5c5e47/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=ebebe96aab1e22cee1fea2470582c84d2d5c5e47", "patch": "@@ -219,7 +219,7 @@ macro_rules! impl_enum_decodable {\n         }\n \n         impl ::config::ConfigType for $e {\n-            fn get_variant_names() -> String {\n+            fn doc_hint() -> String {\n                 let mut variants = Vec::new();\n                 $(\n                     variants.push(stringify!($x));"}]}