{"sha": "2b035d908b6d81fea4e8aaabafac9f69d9e20936", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiMDM1ZDkwOGI2ZDgxZmVhNGU4YWFhYmFmYWM5ZjY5ZDllMjA5MzY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-08-29T13:00:48Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-08-29T13:00:48Z"}, "message": "auto merge of #8838 : brson/rust/rvfpelim, r=alexcrichton\n\nThis reverts commit 2c0f9bd35493def5e23f0f43ddeba54da9d788b4, reversing\r\nchanges made to f8c4f0ea9c96218dbc81081799e77875fbb071de.\r\n\r\nConflicts:\r\n\tsrc/rustllvm/RustWrapper.cpp\r\n\r\nFixes #8833", "tree": {"sha": "d453c0e7c0b473b51ca75d77c046f671ec7b5524", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d453c0e7c0b473b51ca75d77c046f671ec7b5524"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b035d908b6d81fea4e8aaabafac9f69d9e20936", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b035d908b6d81fea4e8aaabafac9f69d9e20936", "html_url": "https://github.com/rust-lang/rust/commit/2b035d908b6d81fea4e8aaabafac9f69d9e20936", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b035d908b6d81fea4e8aaabafac9f69d9e20936/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33d65720360dedf612cab5f0d4343429e11b227e", "url": "https://api.github.com/repos/rust-lang/rust/commits/33d65720360dedf612cab5f0d4343429e11b227e", "html_url": "https://github.com/rust-lang/rust/commit/33d65720360dedf612cab5f0d4343429e11b227e"}, {"sha": "3801534d1085e74660a3bf9c84535938d9e74976", "url": "https://api.github.com/repos/rust-lang/rust/commits/3801534d1085e74660a3bf9c84535938d9e74976", "html_url": "https://github.com/rust-lang/rust/commit/3801534d1085e74660a3bf9c84535938d9e74976"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "12ccc55d4fae135020c85a0529f26f7046cefd54", "filename": "mk/llvm.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b035d908b6d81fea4e8aaabafac9f69d9e20936/mk%2Fllvm.mk", "raw_url": "https://github.com/rust-lang/rust/raw/2b035d908b6d81fea4e8aaabafac9f69d9e20936/mk%2Fllvm.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fllvm.mk?ref=2b035d908b6d81fea4e8aaabafac9f69d9e20936", "patch": "@@ -26,7 +26,7 @@ ifeq ($(CFG_LLVM_ROOT),)\n \n $$(LLVM_CONFIG_$(1)): $$(LLVM_DEPS)\n \t@$$(call E, make: llvm)\n-\t$$(Q)$$(MAKE) -C $$(CFG_LLVM_BUILD_DIR_$(1))\n+\t$$(Q)$$(MAKE) -C $$(CFG_LLVM_BUILD_DIR_$(1)) $$(CFG_LLVM_BUILD_ENV)\n \t$$(Q)touch $$(LLVM_CONFIG_$(1))\n endif\n "}, {"sha": "6ee5420664d8e1c819efa0bfe8a000519b6a6a0d", "filename": "mk/platform.mk", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2b035d908b6d81fea4e8aaabafac9f69d9e20936/mk%2Fplatform.mk", "raw_url": "https://github.com/rust-lang/rust/raw/2b035d908b6d81fea4e8aaabafac9f69d9e20936/mk%2Fplatform.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fplatform.mk?ref=2b035d908b6d81fea4e8aaabafac9f69d9e20936", "patch": "@@ -26,7 +26,10 @@ endef\n $(foreach t,$(CFG_TARGET_TRIPLES),$(eval $(call DEF_OSTYPE_VAR,$(t))))\n $(foreach t,$(CFG_TARGET_TRIPLES),$(info cfg: os for $(t) is $(OSTYPE_$(t))))\n \n-CFG_GCCISH_CFLAGS += -DUSE_UTF8\n+# FIXME: no-omit-frame-pointer is just so that task_start_wrapper\n+# has a frame pointer and the stack walker can understand it. Turning off\n+# frame pointers everywhere is overkill\n+CFG_GCCISH_CFLAGS += -fno-omit-frame-pointer -DUSE_UTF8\n \n # On Darwin, we need to run dsymutil so the debugging information ends\n # up in the right place.  On other platforms, it automatically gets\n@@ -150,6 +153,7 @@ CFG_GCCISH_POST_LIB_FLAGS_x86_64-unknown-linux-gnu := -Wl,-no-whole-archive\n CFG_DEF_SUFFIX_x86_64-unknown-linux-gnu := .linux.def\n CFG_INSTALL_NAME_x86_64-unknown-linux-gnu =\n CFG_LIBUV_LINK_FLAGS_x86_64-unknown-linux-gnu =\n+CFG_LLVM_BUILD_ENV_x86_64-unknown-linux-gnu=\"CXXFLAGS=-fno-omit-frame-pointer\"\n CFG_EXE_SUFFIX_x86_64-unknown-linux-gnu =\n CFG_WINDOWSY_x86_64-unknown-linux-gnu :=\n CFG_UNIXY_x86_64-unknown-linux-gnu := 1\n@@ -175,6 +179,7 @@ CFG_GCCISH_POST_LIB_FLAGS_i686-unknown-linux-gnu := -Wl,-no-whole-archive\n CFG_DEF_SUFFIX_i686-unknown-linux-gnu := .linux.def\n CFG_INSTALL_NAME_i686-unknown-linux-gnu =\n CFG_LIBUV_LINK_FLAGS_i686-unknown-linux-gnu =\n+CFG_LLVM_BUILD_ENV_i686-unknown-linux-gnu=\"CXXFLAGS=-fno-omit-frame-pointer\"\n CFG_EXE_SUFFIX_i686-unknown-linux-gnu =\n CFG_WINDOWSY_i686-unknown-linux-gnu :=\n CFG_UNIXY_i686-unknown-linux-gnu := 1"}, {"sha": "431b620e68f77b1eafadfc99912e874f36cd07f2", "filename": "src/rustllvm/PassWrapper.cpp", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2b035d908b6d81fea4e8aaabafac9f69d9e20936/src%2Frustllvm%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/2b035d908b6d81fea4e8aaabafac9f69d9e20936/src%2Frustllvm%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FPassWrapper.cpp?ref=2b035d908b6d81fea4e8aaabafac9f69d9e20936", "patch": "@@ -78,6 +78,7 @@ LLVMRustCreateTargetMachine(const char *triple,\n     }\n \n     TargetOptions Options;\n+    Options.NoFramePointerElim = true;\n     Options.EnableSegmentedStacks = EnableSegmentedStacks;\n     Options.FixedStackSegmentSize = 2 * 1024 * 1024; // XXX: This is too big.\n     Options.FloatABIType ="}, {"sha": "54af6fe7e73bafe60f73384f211c0c06bbc5e933", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2b035d908b6d81fea4e8aaabafac9f69d9e20936/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/2b035d908b6d81fea4e8aaabafac9f69d9e20936/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=2b035d908b6d81fea4e8aaabafac9f69d9e20936", "patch": "@@ -284,6 +284,7 @@ LLVMRustBuildJIT(void* mem,\n   std::string Err;\n   TargetOptions Options;\n   Options.JITEmitDebugInfo = true;\n+  Options.NoFramePointerElim = true;\n   Options.EnableSegmentedStacks = EnableSegmentedStacks;\n   RustMCJITMemoryManager* MM = (RustMCJITMemoryManager*) mem;\n   assert(MM);"}]}