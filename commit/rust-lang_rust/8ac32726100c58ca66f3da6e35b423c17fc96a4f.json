{"sha": "8ac32726100c58ca66f3da6e35b423c17fc96a4f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhYzMyNzI2MTAwYzU4Y2E2NmYzZGE2ZTM1YjQyM2MxN2ZjOTZhNGY=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-09-12T02:05:08Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-10-25T20:48:44Z"}, "message": "save-analysis: handle missing field names\n\nFIxes https://github.com/rust-lang-nursery/rls/issues/1031", "tree": {"sha": "716049582ec1f2186c7bd1cca5b7a43d1ddd1527", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/716049582ec1f2186c7bd1cca5b7a43d1ddd1527"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ac32726100c58ca66f3da6e35b423c17fc96a4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ac32726100c58ca66f3da6e35b423c17fc96a4f", "html_url": "https://github.com/rust-lang/rust/commit/8ac32726100c58ca66f3da6e35b423c17fc96a4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ac32726100c58ca66f3da6e35b423c17fc96a4f/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cdcbdfdf0ad46f534f45997fdd42409492ac000c", "url": "https://api.github.com/repos/rust-lang/rust/commits/cdcbdfdf0ad46f534f45997fdd42409492ac000c", "html_url": "https://github.com/rust-lang/rust/commit/cdcbdfdf0ad46f534f45997fdd42409492ac000c"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "9e0233149cc28f893bb6c442047c9a663f502327", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8ac32726100c58ca66f3da6e35b423c17fc96a4f/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ac32726100c58ca66f3da6e35b423c17fc96a4f/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=8ac32726100c58ca66f3da6e35b423c17fc96a4f", "patch": "@@ -809,13 +809,14 @@ impl<'l, 'tcx: 'l> SaveContext<'l, 'tcx> {\n         field_ref: &ast::Field,\n         variant: &ty::VariantDef,\n     ) -> Option<Ref> {\n-        let index = self.tcx.find_field_index(field_ref.ident, variant).unwrap();\n         filter!(self.span_utils, field_ref.ident.span);\n-        let span = self.span_from_span(field_ref.ident.span);\n-        Some(Ref {\n-            kind: RefKind::Variable,\n-            span,\n-            ref_id: id_from_def_id(variant.fields[index].did),\n+        self.tcx.find_field_index(field_ref.ident, variant).map(|index| {\n+            let span = self.span_from_span(field_ref.ident.span);\n+            Ref {\n+                kind: RefKind::Variable,\n+                span,\n+                ref_id: id_from_def_id(variant.fields[index].did),\n+            }\n         })\n     }\n "}]}