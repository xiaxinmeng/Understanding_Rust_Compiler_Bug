{"sha": "a02bf76c9667ad7a25df3b672b3748398451a3d0", "node_id": "C_kwDOAAsO6NoAKGEwMmJmNzZjOTY2N2FkN2EyNWRmM2I2NzJiMzc0ODM5ODQ1MWEzZDA", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-01-03T10:59:01Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-01-03T10:59:01Z"}, "message": "review", "tree": {"sha": "a2bb1ddc87ec12c9624b63e2d4db0ac2ad3e3c9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a2bb1ddc87ec12c9624b63e2d4db0ac2ad3e3c9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a02bf76c9667ad7a25df3b672b3748398451a3d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a02bf76c9667ad7a25df3b672b3748398451a3d0", "html_url": "https://github.com/rust-lang/rust/commit/a02bf76c9667ad7a25df3b672b3748398451a3d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a02bf76c9667ad7a25df3b672b3748398451a3d0/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "484dc1f7a25f05550b3248ee09415ceecdf013e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/484dc1f7a25f05550b3248ee09415ceecdf013e7", "html_url": "https://github.com/rust-lang/rust/commit/484dc1f7a25f05550b3248ee09415ceecdf013e7"}], "stats": {"total": 6, "additions": 1, "deletions": 5}, "files": [{"sha": "4971bb6d1aad7bff565fd43bf957cfae6b7620cd", "filename": "compiler/rustc_save_analysis/src/sig.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a02bf76c9667ad7a25df3b672b3748398451a3d0/compiler%2Frustc_save_analysis%2Fsrc%2Fsig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a02bf76c9667ad7a25df3b672b3748398451a3d0/compiler%2Frustc_save_analysis%2Fsrc%2Fsig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_save_analysis%2Fsrc%2Fsig.rs?ref=a02bf76c9667ad7a25df3b672b3748398451a3d0", "patch": "@@ -312,11 +312,7 @@ impl<'hir> Sig for hir::Ty<'hir> {\n             }\n             hir::TyKind::Array(ref ty, ref length) => {\n                 let nested_ty = ty.make(offset + 1, id, scx)?;\n-                let hir_id = match length {\n-                    &hir::ArrayLen::Infer(hir_id, _) => hir_id,\n-                    hir::ArrayLen::Body(anon_const) => anon_const.hir_id,\n-                };\n-                let expr = id_to_string(&scx.tcx.hir(), hir_id).replace('\\n', \" \");\n+                let expr = id_to_string(&scx.tcx.hir(), length.hir_id()).replace('\\n', \" \");\n                 let text = format!(\"[{}; {}]\", nested_ty.text, expr);\n                 Ok(replace_text(nested_ty, text))\n             }"}]}