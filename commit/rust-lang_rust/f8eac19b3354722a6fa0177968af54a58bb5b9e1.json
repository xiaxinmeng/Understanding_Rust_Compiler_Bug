{"sha": "f8eac19b3354722a6fa0177968af54a58bb5b9e1", "node_id": "C_kwDOAAsO6NoAKGY4ZWFjMTliMzM1NDcyMmE2ZmEwMTc3OTY4YWY1NGE1OGJiNWI5ZTE", "commit": {"author": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2023-03-03T15:24:08Z"}, "committer": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2023-03-03T15:24:08Z"}, "message": "Support trait aliases in IDE where type support isn't needed", "tree": {"sha": "7d43783bd87168c1ba3080e2af798966ecd856be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d43783bd87168c1ba3080e2af798966ecd856be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8eac19b3354722a6fa0177968af54a58bb5b9e1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEkSbsQIURluxz4rzf4laYqTBYYXEFAmQCERgACgkQ4laYqTBY\nYXGg2w//aNht4o6ruu9tnzhSJd+1s5EehaZvbSgbX8TQB1Tr1iygA/KAnetOSygw\nbGB/f0ZBMnSjaaK9TM4re8JG9Vp7xBH1U/Hr24UgcEIiYQVH4WbBO1sHWyo9mT57\n/D74Z/sIqhQdtGpeNEY0ey82rVTOOOe/6lxUDJpBKkRogiugyDhAvYwEu+0xvFSZ\nCUaWxjo7Nz4VBszI3QG2M+LzG/xge47vDfnsk8nfuhP3ZjRRxNTuV8Hfbm0Zx12A\nmj5QIJRNVFs+KSGuMgFHpC9l/i5vJ3tAU2iUzbeGCx0VTTs4ylCEJzVXyMwf1MN9\nWPYfCWRCw141QyN0kTTbV5QQy6w2ZVvQyp9b24fqg9OKgCXj7R2zyVBjUHxhw+B5\nyg+29EVTJ6Jog+d33D5MCBee6aanXIrI7ZsOTVdvb7u0SupATJoLh4bhIOr5JD4m\nBKTJq/INfDtepi9YEaS/KPZaE3onXblFn01jTFe/g1qG1+JHlr5YArl7v0qSgGlG\n4uyy7WdvXKyqUEb8KbAh48kIparS8jm/1AydeWL3tqpmQ+HbAlV4JwJv7Ry7Y5Sq\nLuqWHmQuWUIUD1XYUsO80ydooJdh9QTs5NJRleVhIgczITIHHI9M/M9plEegXFZz\n46pOiv8xFOgAh/Ux9vhy0ZNrLFNyRqwKjiHisbAPX1y32Mmu8iE=\n=a63q\n-----END PGP SIGNATURE-----", "payload": "tree 7d43783bd87168c1ba3080e2af798966ecd856be\nparent 29c957f97388afd2a21ec3364ea4ce8c269cfbcd\nauthor Ryo Yoshida <low.ryoshida@gmail.com> 1677857048 +0900\ncommitter Ryo Yoshida <low.ryoshida@gmail.com> 1677857048 +0900\n\nSupport trait aliases in IDE where type support isn't needed\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8eac19b3354722a6fa0177968af54a58bb5b9e1", "html_url": "https://github.com/rust-lang/rust/commit/f8eac19b3354722a6fa0177968af54a58bb5b9e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8eac19b3354722a6fa0177968af54a58bb5b9e1/comments", "author": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29c957f97388afd2a21ec3364ea4ce8c269cfbcd", "url": "https://api.github.com/repos/rust-lang/rust/commits/29c957f97388afd2a21ec3364ea4ce8c269cfbcd", "html_url": "https://github.com/rust-lang/rust/commit/29c957f97388afd2a21ec3364ea4ce8c269cfbcd"}], "stats": {"total": 124, "additions": 95, "deletions": 29}, "files": [{"sha": "a32ac35496aa4942e4db180b80f85049916c3c4f", "filename": "crates/ide/src/file_structure.rs", "status": "modified", "additions": 52, "deletions": 27, "changes": 79, "blob_url": "https://github.com/rust-lang/rust/blob/f8eac19b3354722a6fa0177968af54a58bb5b9e1/crates%2Fide%2Fsrc%2Ffile_structure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8eac19b3354722a6fa0177968af54a58bb5b9e1/crates%2Fide%2Fsrc%2Ffile_structure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Ffile_structure.rs?ref=f8eac19b3354722a6fa0177968af54a58bb5b9e1", "patch": "@@ -149,6 +149,7 @@ fn structure_node(node: &SyntaxNode) -> Option<StructureNode> {\n             ast::Enum(it) => decl(it, StructureNodeKind::SymbolKind(SymbolKind::Enum)),\n             ast::Variant(it) => decl(it, StructureNodeKind::SymbolKind(SymbolKind::Variant)),\n             ast::Trait(it) => decl(it, StructureNodeKind::SymbolKind(SymbolKind::Trait)),\n+            ast::TraitAlias(it) => decl(it, StructureNodeKind::SymbolKind(SymbolKind::TraitAlias)),\n             ast::Module(it) => decl(it, StructureNodeKind::SymbolKind(SymbolKind::Module)),\n             ast::TypeAlias(it) => decl_with_type_ref(&it, it.ty(), StructureNodeKind::SymbolKind(SymbolKind::TypeAlias)),\n             ast::RecordField(it) => decl_with_type_ref(&it, it.ty(), StructureNodeKind::SymbolKind(SymbolKind::Field)),\n@@ -262,6 +263,8 @@ enum E { X, Y(i32) }\n type T = ();\n static S: i32 = 92;\n const C: i32 = 92;\n+trait Tr {}\n+trait Alias = Tr;\n \n impl E {}\n \n@@ -457,11 +460,33 @@ fn g() {}\n                         ),\n                         deprecated: false,\n                     },\n+                    StructureNode {\n+                        parent: None,\n+                        label: \"Tr\",\n+                        navigation_range: 239..241,\n+                        node_range: 233..244,\n+                        kind: SymbolKind(\n+                            Trait,\n+                        ),\n+                        detail: None,\n+                        deprecated: false,\n+                    },\n+                    StructureNode {\n+                        parent: None,\n+                        label: \"Alias\",\n+                        navigation_range: 251..256,\n+                        node_range: 245..262,\n+                        kind: SymbolKind(\n+                            TraitAlias,\n+                        ),\n+                        detail: None,\n+                        deprecated: false,\n+                    },\n                     StructureNode {\n                         parent: None,\n                         label: \"impl E\",\n-                        navigation_range: 239..240,\n-                        node_range: 234..243,\n+                        navigation_range: 269..270,\n+                        node_range: 264..273,\n                         kind: SymbolKind(\n                             Impl,\n                         ),\n@@ -471,8 +496,8 @@ fn g() {}\n                     StructureNode {\n                         parent: None,\n                         label: \"impl fmt::Debug for E\",\n-                        navigation_range: 265..266,\n-                        node_range: 245..269,\n+                        navigation_range: 295..296,\n+                        node_range: 275..299,\n                         kind: SymbolKind(\n                             Impl,\n                         ),\n@@ -482,8 +507,8 @@ fn g() {}\n                     StructureNode {\n                         parent: None,\n                         label: \"mc\",\n-                        navigation_range: 284..286,\n-                        node_range: 271..303,\n+                        navigation_range: 314..316,\n+                        node_range: 301..333,\n                         kind: SymbolKind(\n                             Macro,\n                         ),\n@@ -493,8 +518,8 @@ fn g() {}\n                     StructureNode {\n                         parent: None,\n                         label: \"mcexp\",\n-                        navigation_range: 334..339,\n-                        node_range: 305..356,\n+                        navigation_range: 364..369,\n+                        node_range: 335..386,\n                         kind: SymbolKind(\n                             Macro,\n                         ),\n@@ -504,8 +529,8 @@ fn g() {}\n                     StructureNode {\n                         parent: None,\n                         label: \"mcexp\",\n-                        navigation_range: 387..392,\n-                        node_range: 358..409,\n+                        navigation_range: 417..422,\n+                        node_range: 388..439,\n                         kind: SymbolKind(\n                             Macro,\n                         ),\n@@ -515,8 +540,8 @@ fn g() {}\n                     StructureNode {\n                         parent: None,\n                         label: \"obsolete\",\n-                        navigation_range: 428..436,\n-                        node_range: 411..441,\n+                        navigation_range: 458..466,\n+                        node_range: 441..471,\n                         kind: SymbolKind(\n                             Function,\n                         ),\n@@ -528,8 +553,8 @@ fn g() {}\n                     StructureNode {\n                         parent: None,\n                         label: \"very_obsolete\",\n-                        navigation_range: 481..494,\n-                        node_range: 443..499,\n+                        navigation_range: 511..524,\n+                        node_range: 473..529,\n                         kind: SymbolKind(\n                             Function,\n                         ),\n@@ -541,17 +566,17 @@ fn g() {}\n                     StructureNode {\n                         parent: None,\n                         label: \"Some region name\",\n-                        navigation_range: 501..528,\n-                        node_range: 501..528,\n+                        navigation_range: 531..558,\n+                        node_range: 531..558,\n                         kind: Region,\n                         detail: None,\n                         deprecated: false,\n                     },\n                     StructureNode {\n                         parent: None,\n                         label: \"m\",\n-                        navigation_range: 568..569,\n-                        node_range: 543..606,\n+                        navigation_range: 598..599,\n+                        node_range: 573..636,\n                         kind: SymbolKind(\n                             Module,\n                         ),\n@@ -560,22 +585,22 @@ fn g() {}\n                     },\n                     StructureNode {\n                         parent: Some(\n-                            20,\n+                            22,\n                         ),\n                         label: \"dontpanic\",\n-                        navigation_range: 543..563,\n-                        node_range: 543..563,\n+                        navigation_range: 573..593,\n+                        node_range: 573..593,\n                         kind: Region,\n                         detail: None,\n                         deprecated: false,\n                     },\n                     StructureNode {\n                         parent: Some(\n-                            20,\n+                            22,\n                         ),\n                         label: \"f\",\n-                        navigation_range: 575..576,\n-                        node_range: 572..581,\n+                        navigation_range: 605..606,\n+                        node_range: 602..611,\n                         kind: SymbolKind(\n                             Function,\n                         ),\n@@ -586,11 +611,11 @@ fn g() {}\n                     },\n                     StructureNode {\n                         parent: Some(\n-                            20,\n+                            22,\n                         ),\n                         label: \"g\",\n-                        navigation_range: 598..599,\n-                        node_range: 582..604,\n+                        navigation_range: 628..629,\n+                        node_range: 612..634,\n                         kind: SymbolKind(\n                             Function,\n                         ),"}, {"sha": "cf0819a2524b91418aa52a2b2f14ea8380eb44b3", "filename": "crates/ide/src/goto_definition.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f8eac19b3354722a6fa0177968af54a58bb5b9e1/crates%2Fide%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8eac19b3354722a6fa0177968af54a58bb5b9e1/crates%2Fide%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fgoto_definition.rs?ref=f8eac19b3354722a6fa0177968af54a58bb5b9e1", "patch": "@@ -764,6 +764,13 @@ trait Foo$0 { }\n \"#,\n         );\n \n+        check(\n+            r#\"\n+trait Foo$0 = ;\n+    //^^^\n+\"#,\n+        );\n+\n         check(\n             r#\"\n mod bar$0 { }\n@@ -1423,7 +1430,6 @@ include!(\"included.rs$0\");\n         );\n     }\n \n-    #[cfg(test)]\n     mod goto_impl_of_trait_fn {\n         use super::check;\n         #[test]"}, {"sha": "411eb695fbf2752c6a443f73c19f7e15534262aa", "filename": "crates/ide/src/markup.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f8eac19b3354722a6fa0177968af54a58bb5b9e1/crates%2Fide%2Fsrc%2Fmarkup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8eac19b3354722a6fa0177968af54a58bb5b9e1/crates%2Fide%2Fsrc%2Fmarkup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fmarkup.rs?ref=f8eac19b3354722a6fa0177968af54a58bb5b9e1", "patch": "@@ -32,7 +32,7 @@ impl Markup {\n     pub fn as_str(&self) -> &str {\n         self.text.as_str()\n     }\n-    pub fn fenced_block(contents: &impl fmt::Display) -> Markup {\n+    pub fn fenced_block(contents: impl fmt::Display) -> Markup {\n         format!(\"```rust\\n{contents}\\n```\").into()\n     }\n }"}, {"sha": "b955ea99f0c04618c4b3108840b507835d74122f", "filename": "crates/ide/src/move_item.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f8eac19b3354722a6fa0177968af54a58bb5b9e1/crates%2Fide%2Fsrc%2Fmove_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8eac19b3354722a6fa0177968af54a58bb5b9e1/crates%2Fide%2Fsrc%2Fmove_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fmove_item.rs?ref=f8eac19b3354722a6fa0177968af54a58bb5b9e1", "patch": "@@ -73,6 +73,7 @@ fn find_ancestors(item: SyntaxElement, direction: Direction, range: TextRange) -\n         SyntaxKind::MACRO_CALL,\n         SyntaxKind::TYPE_ALIAS,\n         SyntaxKind::TRAIT,\n+        SyntaxKind::TRAIT_ALIAS,\n         SyntaxKind::IMPL,\n         SyntaxKind::MACRO_DEF,\n         SyntaxKind::STRUCT,"}, {"sha": "11d10d2b85420c74728b5eaf3e11cdc76341bb96", "filename": "crates/ide/src/navigation_target.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f8eac19b3354722a6fa0177968af54a58bb5b9e1/crates%2Fide%2Fsrc%2Fnavigation_target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8eac19b3354722a6fa0177968af54a58bb5b9e1/crates%2Fide%2Fsrc%2Fnavigation_target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fnavigation_target.rs?ref=f8eac19b3354722a6fa0177968af54a58bb5b9e1", "patch": "@@ -549,6 +549,7 @@ pub(crate) fn description_from_symbol(db: &RootDatabase, symbol: &FileSymbol) ->\n             ast::Struct(it) => sema.to_def(&it).map(|it| it.display(db).to_string()),\n             ast::Enum(it) => sema.to_def(&it).map(|it| it.display(db).to_string()),\n             ast::Trait(it) => sema.to_def(&it).map(|it| it.display(db).to_string()),\n+            ast::TraitAlias(it) => sema.to_def(&it).map(|it| it.display(db).to_string()),\n             ast::Module(it) => sema.to_def(&it).map(|it| it.display(db).to_string()),\n             ast::TypeAlias(it) => sema.to_def(&it).map(|it| it.display(db).to_string()),\n             ast::Const(it) => sema.to_def(&it).map(|it| it.display(db).to_string()),"}, {"sha": "3684c1033f32fa7e8faf8d153e633ebb5cdf58aa", "filename": "crates/ide/src/references.rs", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/f8eac19b3354722a6fa0177968af54a58bb5b9e1/crates%2Fide%2Fsrc%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8eac19b3354722a6fa0177968af54a58bb5b9e1/crates%2Fide%2Fsrc%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Freferences.rs?ref=f8eac19b3354722a6fa0177968af54a58bb5b9e1", "patch": "@@ -1355,6 +1355,38 @@ impl Foo {\n         );\n     }\n \n+    #[test]\n+    fn test_trait_alias() {\n+        check(\n+            r#\"\n+trait Foo {}\n+trait Bar$0 = Foo where Self: ;\n+fn foo<T: Bar>(_: impl Bar, _: &dyn Bar) {}\n+\"#,\n+            expect![[r#\"\n+                Bar TraitAlias FileId(0) 13..42 19..22\n+\n+                FileId(0) 53..56\n+                FileId(0) 66..69\n+                FileId(0) 79..82\n+            \"#]],\n+        );\n+    }\n+\n+    #[test]\n+    fn test_trait_alias_self() {\n+        check(\n+            r#\"\n+trait Foo = where Self$0: ;\n+\"#,\n+            expect![[r#\"\n+                Self TypeParam FileId(0) 6..9 6..9\n+\n+                FileId(0) 18..22\n+            \"#]],\n+        );\n+    }\n+\n     #[test]\n     fn test_attr_differs_from_fn_with_same_name() {\n         check("}, {"sha": "8a8a9151c425729a62c8554266bc0aae0df6f57f", "filename": "crates/ide/src/runnables.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f8eac19b3354722a6fa0177968af54a58bb5b9e1/crates%2Fide%2Fsrc%2Frunnables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8eac19b3354722a6fa0177968af54a58bb5b9e1/crates%2Fide%2Fsrc%2Frunnables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Frunnables.rs?ref=f8eac19b3354722a6fa0177968af54a58bb5b9e1", "patch": "@@ -416,6 +416,7 @@ fn module_def_doctest(db: &RootDatabase, def: Definition) -> Option<Runnable> {\n         Definition::Const(it) => it.attrs(db),\n         Definition::Static(it) => it.attrs(db),\n         Definition::Trait(it) => it.attrs(db),\n+        Definition::TraitAlias(it) => it.attrs(db),\n         Definition::TypeAlias(it) => it.attrs(db),\n         Definition::Macro(it) => it.attrs(db),\n         Definition::SelfType(it) => it.attrs(db),"}]}