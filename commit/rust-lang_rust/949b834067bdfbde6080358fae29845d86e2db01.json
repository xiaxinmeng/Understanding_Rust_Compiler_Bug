{"sha": "949b834067bdfbde6080358fae29845d86e2db01", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0OWI4MzQwNjdiZGZiZGU2MDgwMzU4ZmFlMjk4NDVkODZlMmRiMDE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-09-27T00:38:23Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-09-27T00:38:23Z"}, "message": "Auto merge of #6090 - Fishrock123:rc_buffer-formatting-caveats, r=yaahc\n\nlints: clarify rc_buffer and add caveats\n\nThis didn't display some types properly in the docs due the lack of code formatting.\n\nAlso, refs for the caveat:\nhttps://github.com/rust-lang/rust-clippy/pull/6044#issuecomment-699559082\nhttps://github.com/http-rs/surf/pull/242\n\nFwiw I can't get `cargo test` to run, even on nightly. I get:\n```\nerror[E0463]: can't find crate for `rustc_ast`\n```\n\n*Please keep the line below*\nchangelog: none, nightly", "tree": {"sha": "3a7914bc1b0064c7ae59dad6ebe48358c5be9900", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a7914bc1b0064c7ae59dad6ebe48358c5be9900"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/949b834067bdfbde6080358fae29845d86e2db01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/949b834067bdfbde6080358fae29845d86e2db01", "html_url": "https://github.com/rust-lang/rust/commit/949b834067bdfbde6080358fae29845d86e2db01", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/949b834067bdfbde6080358fae29845d86e2db01/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea079eb8a4ad3b7ccdfd102bbbd722bf0a203378", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea079eb8a4ad3b7ccdfd102bbbd722bf0a203378", "html_url": "https://github.com/rust-lang/rust/commit/ea079eb8a4ad3b7ccdfd102bbbd722bf0a203378"}, {"sha": "00e641b91417a0b4489544406f60a1e2babe7c88", "url": "https://api.github.com/repos/rust-lang/rust/commits/00e641b91417a0b4489544406f60a1e2babe7c88", "html_url": "https://github.com/rust-lang/rust/commit/00e641b91417a0b4489544406f60a1e2babe7c88"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "17d950169fd3e77f2e7855e37adb083d65d6e562", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/949b834067bdfbde6080358fae29845d86e2db01/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/949b834067bdfbde6080358fae29845d86e2db01/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=949b834067bdfbde6080358fae29845d86e2db01", "patch": "@@ -216,18 +216,19 @@ declare_clippy_lint! {\n }\n \n declare_clippy_lint! {\n-    /// **What it does:** Checks for Rc<T> and Arc<T> when T is a mutable buffer type such as String or Vec\n+    /// **What it does:** Checks for `Rc<T>` and `Arc<T>` when `T` is a mutable buffer type such as `String` or `Vec`.\n     ///\n-    /// **Why is this bad?** Expressions such as Rc<String> have no advantage over Rc<str>, since\n-    /// it is larger and involves an extra level of indirection, and doesn't implement Borrow<str>.\n+    /// **Why is this bad?** Expressions such as `Rc<String>` usually have no advantage over `Rc<str>`, since\n+    /// it is larger and involves an extra level of indirection, and doesn't implement `Borrow<str>`.\n     ///\n-    /// While mutating a buffer type would still be possible with Rc::get_mut(), it only\n-    /// works if there are no additional references yet, which defeats the purpose of\n+    /// While mutating a buffer type would still be possible with `Rc::get_mut()`, it only\n+    /// works if there are no additional references yet, which usually defeats the purpose of\n     /// enclosing it in a shared ownership type. Instead, additionally wrapping the inner\n-    /// type with an interior mutable container (such as RefCell or Mutex) would normally\n+    /// type with an interior mutable container (such as `RefCell` or `Mutex`) would normally\n     /// be used.\n     ///\n-    /// **Known problems:** None.\n+    /// **Known problems:** This pattern can be desirable to avoid the overhead of a `RefCell` or `Mutex` for\n+    /// cases where mutation only happens before there are any additional references.\n     ///\n     /// **Example:**\n     /// ```rust,ignore"}]}