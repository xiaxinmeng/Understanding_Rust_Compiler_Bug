{"sha": "1886123b7d35b98608f4281ceb288524b34e54b4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4ODYxMjNiN2QzNWI5ODYwOGY0MjgxY2ViMjg4NTI0YjM0ZTU0YjQ=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-06-06T10:11:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-06T10:11:22Z"}, "message": "Rollup merge of #86028 - LingMan:dupe_empty_check, r=jyn514\n\nDrop an `if let` that will always succeed\n\nWe've already checked that `proj_base == []` in the line above and renaming\n`place_local` to `local` doesn't gain us anything.\n\n``@rustbot`` modify labels +C-cleanup +T-compiler", "tree": {"sha": "e1d666d57a5fcdcbd59c20ba36f0f2c7268ad5bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1d666d57a5fcdcbd59c20ba36f0f2c7268ad5bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1886123b7d35b98608f4281ceb288524b34e54b4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgvJ9KCRBK7hj4Ov3rIwAApBQIAH53a7gMUMtFL91KuIJYaIyD\nBJjVlBuv9PeCVCUn4/X7cwrsY82hR6ThiuurHyVPMR57iegz7qJOcHMYy3kuWNMc\nfvDy779j5oVa5QZDs6djVoK1J8RyPKAAQUzZHROcbVT0mRFyPNkD63pZQRwNwpW9\nKOrsp8qq9uRZA8Gve+J0buzZASghIlVchKr/Awnp3oS/gTBiy+YddL1Ke1I6KxAr\nkBoMiV1p2RdB7It5gR0FV/mVcn99bca/+aBYn69g7Eon2flJZ6L13qQhUDYPD/B7\nzkBlXXYjkt7ilXA6gdQqE0ZbeQmyo3Taj9CexZ2UvT4cMmMQIa5OsrtIYFSuDh0=\n=GphH\n-----END PGP SIGNATURE-----\n", "payload": "tree e1d666d57a5fcdcbd59c20ba36f0f2c7268ad5bd\nparent 302f3dcf9067aa0b63f0572feccebd6e3f4f1dd2\nparent f4080fca627d36ffda16410cb957348119ae64ea\nauthor Yuki Okushi <jtitor@2k36.org> 1622974282 +0900\ncommitter GitHub <noreply@github.com> 1622974282 +0900\n\nRollup merge of #86028 - LingMan:dupe_empty_check, r=jyn514\n\nDrop an `if let` that will always succeed\n\nWe've already checked that `proj_base == []` in the line above and renaming\n`place_local` to `local` doesn't gain us anything.\n\n``@rustbot`` modify labels +C-cleanup +T-compiler\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1886123b7d35b98608f4281ceb288524b34e54b4", "html_url": "https://github.com/rust-lang/rust/commit/1886123b7d35b98608f4281ceb288524b34e54b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1886123b7d35b98608f4281ceb288524b34e54b4/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "302f3dcf9067aa0b63f0572feccebd6e3f4f1dd2", "url": "https://api.github.com/repos/rust-lang/rust/commits/302f3dcf9067aa0b63f0572feccebd6e3f4f1dd2", "html_url": "https://github.com/rust-lang/rust/commit/302f3dcf9067aa0b63f0572feccebd6e3f4f1dd2"}, {"sha": "f4080fca627d36ffda16410cb957348119ae64ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4080fca627d36ffda16410cb957348119ae64ea", "html_url": "https://github.com/rust-lang/rust/commit/f4080fca627d36ffda16410cb957348119ae64ea"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "4fbd27c89d9c8f6b7f0338f3d2020ad1c3db6f28", "filename": "compiler/rustc_mir/src/transform/check_consts/validation.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1886123b7d35b98608f4281ceb288524b34e54b4/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1886123b7d35b98608f4281ceb288524b34e54b4/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=1886123b7d35b98608f4281ceb288524b34e54b4", "patch": "@@ -729,13 +729,11 @@ impl Visitor<'tcx> for Validator<'mir, 'tcx> {\n                 let base_ty = Place::ty_from(place_local, proj_base, self.body, self.tcx).ty;\n                 if let ty::RawPtr(_) = base_ty.kind() {\n                     if proj_base.is_empty() {\n-                        if let (local, []) = (place_local, proj_base) {\n-                            let decl = &self.body.local_decls[local];\n-                            if let Some(box LocalInfo::StaticRef { def_id, .. }) = decl.local_info {\n-                                let span = decl.source_info.span;\n-                                self.check_static(def_id, span);\n-                                return;\n-                            }\n+                        let decl = &self.body.local_decls[place_local];\n+                        if let Some(box LocalInfo::StaticRef { def_id, .. }) = decl.local_info {\n+                            let span = decl.source_info.span;\n+                            self.check_static(def_id, span);\n+                            return;\n                         }\n                     }\n                     self.check_op(ops::RawPtrDeref);"}]}