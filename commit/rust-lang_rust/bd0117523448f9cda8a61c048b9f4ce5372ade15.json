{"sha": "bd0117523448f9cda8a61c048b9f4ce5372ade15", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkMDExNzUyMzQ0OGY5Y2RhOGE2MWMwNDhiOWY0Y2U1MzcyYWRlMTU=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "arielb1@mail.tau.ac.il", "date": "2015-07-28T16:21:24Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "arielb1@mail.tau.ac.il", "date": "2015-07-28T16:21:24Z"}, "message": "clarify the parenthetical notation stability error message\n\nThis also calls the right API, which e.g. prevents a suggestion\nfor #![feature(unboxed_closures)] on stable.\n\nFixes #26970", "tree": {"sha": "6575757a1818459426bbc686af63063b9bf87f26", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6575757a1818459426bbc686af63063b9bf87f26"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd0117523448f9cda8a61c048b9f4ce5372ade15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd0117523448f9cda8a61c048b9f4ce5372ade15", "html_url": "https://github.com/rust-lang/rust/commit/bd0117523448f9cda8a61c048b9f4ce5372ade15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd0117523448f9cda8a61c048b9f4ce5372ade15/comments", "author": null, "committer": null, "parents": [{"sha": "4c371bb6de7a1c21b7403b86a66a8ce3318ff003", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c371bb6de7a1c21b7403b86a66a8ce3318ff003", "html_url": "https://github.com/rust-lang/rust/commit/4c371bb6de7a1c21b7403b86a66a8ce3318ff003"}], "stats": {"total": 36, "additions": 17, "deletions": 19}, "files": [{"sha": "20e9608bb15f2a87fe0989a39ba22efc244f359b", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/bd0117523448f9cda8a61c048b9f4ce5372ade15/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd0117523448f9cda8a61c048b9f4ce5372ade15/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=bd0117523448f9cda8a61c048b9f4ce5372ade15", "patch": "@@ -69,6 +69,7 @@ use util::nodemap::FnvHashSet;\n use std::slice;\n use syntax::{abi, ast, ast_util};\n use syntax::codemap::{Span, Pos};\n+use syntax::feature_gate::emit_feature_err;\n use syntax::parse::token;\n use syntax::print::pprust;\n \n@@ -791,12 +792,11 @@ fn create_substs_for_ast_trait_ref<'a,'tcx>(this: &AstConv<'tcx>,\n             // For now, require that parenthetical notation be used\n             // only with `Fn()` etc.\n             if !this.tcx().sess.features.borrow().unboxed_closures && trait_def.paren_sugar {\n-                span_err!(this.tcx().sess, span, E0215,\n-                                         \"angle-bracket notation is not stable when \\\n-                                         used with the `Fn` family of traits, use parentheses\");\n-                fileline_help!(this.tcx().sess, span,\n-                           \"add `#![feature(unboxed_closures)]` to \\\n-                            the crate attributes to enable\");\n+                emit_feature_err(&this.tcx().sess.parse_sess.span_diagnostic,\n+                                 \"unboxed_closures\", span,\n+                                 \"\\\n+                    the precise format of `Fn`-family traits' type parameters is \\\n+                    subject to change. Use parenthetical notation (Fn(Foo, Bar) -> Baz) instead\");\n             }\n \n             convert_angle_bracketed_parameters(this, rscope, span, &trait_def.generics, data)\n@@ -805,12 +805,10 @@ fn create_substs_for_ast_trait_ref<'a,'tcx>(this: &AstConv<'tcx>,\n             // For now, require that parenthetical notation be used\n             // only with `Fn()` etc.\n             if !this.tcx().sess.features.borrow().unboxed_closures && !trait_def.paren_sugar {\n-                span_err!(this.tcx().sess, span, E0216,\n-                                         \"parenthetical notation is only stable when \\\n-                                         used with the `Fn` family of traits\");\n-                fileline_help!(this.tcx().sess, span,\n-                           \"add `#![feature(unboxed_closures)]` to \\\n-                            the crate attributes to enable\");\n+                emit_feature_err(&this.tcx().sess.parse_sess.span_diagnostic,\n+                                 \"unboxed_closures\", span,\n+                                 \"\\\n+                    parenthetical notation is only stable when used with `Fn`-family traits\");\n             }\n \n             convert_parenthesized_parameters(this, rscope, span, &trait_def.generics, data)"}, {"sha": "21262c53dbb6bd989d4520b988b5d093a141adf8", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bd0117523448f9cda8a61c048b9f4ce5372ade15/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd0117523448f9cda8a61c048b9f4ce5372ade15/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=bd0117523448f9cda8a61c048b9f4ce5372ade15", "patch": "@@ -2319,14 +2319,14 @@ register_diagnostics! {\n     E0212, // cannot extract an associated type from a higher-ranked trait bound\n     E0213, // associated types are not accepted in this context\n     E0214, // parenthesized parameters may only be used with a trait\n-    E0215, // angle-bracket notation is not stable with `Fn`\n-    E0216, // parenthetical notation is only stable with `Fn`\n+//  E0215, // angle-bracket notation is not stable with `Fn`\n+//  E0216, // parenthetical notation is only stable with `Fn`\n     E0217, // ambiguous associated type, defined in multiple supertraits\n     E0218, // no associated type defined\n     E0219, // associated type defined in higher-ranked supertrait\n     E0221, // ambiguous associated type in bounds\n-    //E0222, // Error code E0045 (variadic function must have C calling\n-             // convention) duplicate\n+//  E0222, // Error code E0045 (variadic function must have C calling\n+           // convention) duplicate\n     E0224, // at least one non-builtin train is required for an object type\n     E0226, // only a single explicit lifetime bound is permitted\n     E0227, // ambiguous lifetime bound, explicit lifetime bound required"}, {"sha": "3a3ea058b4e4d76350e0242de0aef550a6300938", "filename": "src/test/compile-fail/unboxed-closure-feature-gate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bd0117523448f9cda8a61c048b9f4ce5372ade15/src%2Ftest%2Fcompile-fail%2Funboxed-closure-feature-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd0117523448f9cda8a61c048b9f4ce5372ade15/src%2Ftest%2Fcompile-fail%2Funboxed-closure-feature-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funboxed-closure-feature-gate.rs?ref=bd0117523448f9cda8a61c048b9f4ce5372ade15", "patch": "@@ -21,7 +21,7 @@ trait Foo<A> {\n \n fn main() {\n     let x: Box<Foo(isize)>;\n-    //~^ ERROR parenthetical notation is only stable when used with the `Fn` family\n+    //~^ ERROR parenthetical notation is only stable when used with `Fn`-family\n \n     // No errors with these:\n     let x: Box<Fn(isize)>;"}, {"sha": "ed27a4d0b2a2fdc8438637582446c106a186709d", "filename": "src/test/compile-fail/unboxed-closure-sugar-not-used-on-fn.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bd0117523448f9cda8a61c048b9f4ce5372ade15/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-not-used-on-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd0117523448f9cda8a61c048b9f4ce5372ade15/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-not-used-on-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-not-used-on-fn.rs?ref=bd0117523448f9cda8a61c048b9f4ce5372ade15", "patch": "@@ -12,11 +12,11 @@\n // Test that the `Fn` traits require `()` form without a feature gate.\n \n fn bar1(x: &Fn<(), Output=()>) {\n-    //~^ ERROR angle-bracket notation is not stable when used with the `Fn` family\n+    //~^ ERROR of `Fn`-family traits' type parameters is subject to change\n }\n \n fn bar2<T>(x: &T) where T: Fn<()> {\n-    //~^ ERROR angle-bracket notation is not stable when used with the `Fn` family\n+    //~^ ERROR of `Fn`-family traits' type parameters is subject to change\n }\n \n fn main() { }"}]}