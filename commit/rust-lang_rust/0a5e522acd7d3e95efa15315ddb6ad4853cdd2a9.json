{"sha": "0a5e522acd7d3e95efa15315ddb6ad4853cdd2a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhNWU1MjJhY2Q3ZDNlOTVlZmExNTMxNWRkYjZhZDQ4NTNjZGQyYTk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-03-29T19:21:46Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-03-29T19:21:46Z"}, "message": "auto merge of #5623 : brson/rust/snapshot, r=brson", "tree": {"sha": "47a9e8208164891de7ce416dbd688f87fddb9a89", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47a9e8208164891de7ce416dbd688f87fddb9a89"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a5e522acd7d3e95efa15315ddb6ad4853cdd2a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a5e522acd7d3e95efa15315ddb6ad4853cdd2a9", "html_url": "https://github.com/rust-lang/rust/commit/0a5e522acd7d3e95efa15315ddb6ad4853cdd2a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a5e522acd7d3e95efa15315ddb6ad4853cdd2a9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bda4dd3c911ba54e342de2ff1b59e371442e58dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/bda4dd3c911ba54e342de2ff1b59e371442e58dd", "html_url": "https://github.com/rust-lang/rust/commit/bda4dd3c911ba54e342de2ff1b59e371442e58dd"}, {"sha": "518c295a03c5422aec26ac067307c32d11a92e66", "url": "https://api.github.com/repos/rust-lang/rust/commits/518c295a03c5422aec26ac067307c32d11a92e66", "html_url": "https://github.com/rust-lang/rust/commit/518c295a03c5422aec26ac067307c32d11a92e66"}], "stats": {"total": 96, "additions": 8, "deletions": 88}, "files": [{"sha": "7b7cf01d2b5db478fb42cab7a793901f32ced913", "filename": "src/librustc/middle/astencode.rs", "status": "modified", "additions": 0, "deletions": 39, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/0a5e522acd7d3e95efa15315ddb6ad4853cdd2a9/src%2Flibrustc%2Fmiddle%2Fastencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a5e522acd7d3e95efa15315ddb6ad4853cdd2a9/src%2Flibrustc%2Fmiddle%2Fastencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fastencode.rs?ref=0a5e522acd7d3e95efa15315ddb6ad4853cdd2a9", "patch": "@@ -681,45 +681,6 @@ impl vtable_decoder_helpers for reader::Decoder {\n         @self.read_to_vec(|| self.read_vtable_origin(xcx) )\n     }\n \n-    #[cfg(stage0)]\n-    fn read_vtable_origin(&self, xcx: @ExtendedDecodeContext)\n-        -> typeck::vtable_origin {\n-        do self.read_enum(~\"vtable_origin\") {\n-            do self.read_enum_variant |i| {\n-                match i {\n-                  0 => {\n-                    typeck::vtable_static(\n-                        do self.read_enum_variant_arg(0u) {\n-                            self.read_def_id(xcx)\n-                        },\n-                        do self.read_enum_variant_arg(1u) {\n-                            self.read_tys(xcx)\n-                        },\n-                        do self.read_enum_variant_arg(2u) {\n-                            self.read_vtable_res(xcx)\n-                        }\n-                    )\n-                  }\n-                  1 => {\n-                    typeck::vtable_param(\n-                        do self.read_enum_variant_arg(0u) {\n-                            self.read_uint()\n-                        },\n-                        do self.read_enum_variant_arg(1u) {\n-                            self.read_uint()\n-                        }\n-                    )\n-                  }\n-                  // hard to avoid - user input\n-                  _ => fail!(~\"bad enum variant\")\n-                }\n-            }\n-        }\n-    }\n-\n-    #[cfg(stage1)]\n-    #[cfg(stage2)]\n-    #[cfg(stage3)]\n     fn read_vtable_origin(&self, xcx: @ExtendedDecodeContext)\n         -> typeck::vtable_origin {\n         do self.read_enum(\"vtable_origin\") {"}, {"sha": "484220776c3d5772ba967d1c0b130ec707256df3", "filename": "src/libstd/ebml.rs", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/0a5e522acd7d3e95efa15315ddb6ad4853cdd2a9/src%2Flibstd%2Febml.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a5e522acd7d3e95efa15315ddb6ad4853cdd2a9/src%2Flibstd%2Febml.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Febml.rs?ref=0a5e522acd7d3e95efa15315ddb6ad4853cdd2a9", "patch": "@@ -334,19 +334,6 @@ pub mod reader {\n             self.push_doc(self.next_doc(EsEnum), f)\n         }\n \n-        #[cfg(stage0)]\n-        fn read_enum_variant<T>(&self, f: &fn(uint) -> T) -> T {\n-            debug!(\"read_enum_variant()\");\n-            let idx = self._next_uint(EsEnumVid);\n-            debug!(\"  idx=%u\", idx);\n-            do self.push_doc(self.next_doc(EsEnumBody)) {\n-                f(idx)\n-            }\n-        }\n-\n-        #[cfg(stage1)]\n-        #[cfg(stage2)]\n-        #[cfg(stage3)]\n         fn read_enum_variant<T>(&self, _names: &[&str], f: &fn(uint) -> T) -> T {\n             debug!(\"read_enum_variant()\");\n             let idx = self._next_uint(EsEnumVid);\n@@ -410,23 +397,6 @@ pub mod reader {\n             f()\n         }\n \n-        #[cfg(stage0)]\n-        fn read_option<T>(&self, f: &fn(bool) -> T) -> T {\n-            debug!(\"read_option()\");\n-            do self.read_enum(\"Option\") || {\n-                do self.read_enum_variant |idx| {\n-                    match idx {\n-                        0 => f(false),\n-                        1 => f(true),\n-                        _ => fail!(),\n-                    }\n-                }\n-            }\n-        }\n-\n-        #[cfg(stage1)]\n-        #[cfg(stage2)]\n-        #[cfg(stage3)]\n         fn read_option<T>(&self, f: &fn(bool) -> T) -> T {\n             debug!(\"read_option()\");\n             do self.read_enum(\"Option\") || {"}, {"sha": "190d2d3fe0b5662a2922dd9ddc8cdda599d52023", "filename": "src/libstd/json.rs", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0a5e522acd7d3e95efa15315ddb6ad4853cdd2a9/src%2Flibstd%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a5e522acd7d3e95efa15315ddb6ad4853cdd2a9/src%2Flibstd%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fjson.rs?ref=0a5e522acd7d3e95efa15315ddb6ad4853cdd2a9", "patch": "@@ -854,19 +854,6 @@ impl<'self> serialize::Decoder for Decoder<'self> {\n         f()\n     }\n \n-    #[cfg(stage0)]\n-    fn read_enum_variant<T>(&self, f: &fn(uint) -> T) -> T {\n-        debug!(\"read_enum_variant()\");\n-        let idx = match *self.peek() {\n-            Null => 0,\n-            _ => 1,\n-        };\n-        f(idx)\n-    }\n-\n-    #[cfg(stage1)]\n-    #[cfg(stage2)]\n-    #[cfg(stage3)]\n     fn read_enum_variant<T>(&self, names: &[&str], f: &fn(uint) -> T) -> T {\n         debug!(\"read_enum_variant(names=%?)\", names);\n         let name = match *self.peek() {"}, {"sha": "8e7ab318e1739a19ccbc5b3dbbe6b4f7d1bcf02a", "filename": "src/libstd/serialize.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0a5e522acd7d3e95efa15315ddb6ad4853cdd2a9/src%2Flibstd%2Fserialize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a5e522acd7d3e95efa15315ddb6ad4853cdd2a9/src%2Flibstd%2Fserialize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fserialize.rs?ref=0a5e522acd7d3e95efa15315ddb6ad4853cdd2a9", "patch": "@@ -93,12 +93,6 @@ pub trait Decoder {\n     // Compound types:\n     fn read_enum<T>(&self, name: &str, f: &fn() -> T) -> T;\n \n-    #[cfg(stage0)]\n-    fn read_enum_variant<T>(&self, f: &fn(uint) -> T) -> T;\n-\n-    #[cfg(stage1)]\n-    #[cfg(stage2)]\n-    #[cfg(stage3)]\n     fn read_enum_variant<T>(&self, names: &[&str], f: &fn(uint) -> T) -> T;\n \n     fn read_enum_variant_arg<T>(&self, idx: uint, f: &fn() -> T) -> T;"}, {"sha": "fafd5467655cefc57d6c2f860bf05e7b0b8c198b", "filename": "src/snapshots.txt", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0a5e522acd7d3e95efa15315ddb6ad4853cdd2a9/src%2Fsnapshots.txt", "raw_url": "https://github.com/rust-lang/rust/raw/0a5e522acd7d3e95efa15315ddb6ad4853cdd2a9/src%2Fsnapshots.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsnapshots.txt?ref=0a5e522acd7d3e95efa15315ddb6ad4853cdd2a9", "patch": "@@ -1,3 +1,11 @@\n+S 2013-03-28 f7a2371\n+  macos-i386 2e05a33716fc4982db53946c3b0dccf0194826fe\n+  macos-x86_64 fbd3feec8dd17a6b6c8df114e6e9b4cd17cc6172\n+  linux-i386 b89197edd3ba5be7c2ee6577f048d7663640e1d1\n+  linux-x86_64 61a4377c6d0ca5814c2b2b752d73b61b741a23c9\n+  winnt-i386 858a74afb210b30697227a87b67e44786b383a0c\n+  freebsd-x86_64 01f1e4b94504045e763eecb71c7e0852f6e85036\n+\n S 2013-03-27 8c15409\n   macos-x86_64 05eb3801b60056d95715c891d00c5d372e34d00c\n   macos-i386 4119e3fa614fa86adf60ed0183d00db3ce6d0dbc"}]}