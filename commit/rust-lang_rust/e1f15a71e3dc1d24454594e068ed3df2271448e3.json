{"sha": "e1f15a71e3dc1d24454594e068ed3df2271448e3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxZjE1YTcxZTNkYzFkMjQ0NTQ1OTRlMDY4ZWQzZGYyMjcxNDQ4ZTM=", "commit": {"author": {"name": "Paul Woolcock", "email": "pwoolcoc+github@gmail.com", "date": "2012-01-30T00:43:11Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-01-30T17:20:05Z"}, "message": "Alter/remove tests that include/concern ternary\n\n3 tests, pretty/block-disambig.rs, run-pass/operator-overloading.rs,\nand run-pass/weird-exprs.rs, all included the ternary operator.  These\nwere changed to use the if-then-else construct instead.\n\n2 tests, run-pass/block-arg-in-ternary.rs and run-pass/ternary.rs, were\nonly there because of the ternary operator, and were removed.", "tree": {"sha": "7e28db369bd4820fc4af6d8cc741c2e23e247d0a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e28db369bd4820fc4af6d8cc741c2e23e247d0a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1f15a71e3dc1d24454594e068ed3df2271448e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1f15a71e3dc1d24454594e068ed3df2271448e3", "html_url": "https://github.com/rust-lang/rust/commit/e1f15a71e3dc1d24454594e068ed3df2271448e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1f15a71e3dc1d24454594e068ed3df2271448e3/comments", "author": null, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86d473ad1fa297536b56fb3e1012d7dcbe4f21a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/86d473ad1fa297536b56fb3e1012d7dcbe4f21a3", "html_url": "https://github.com/rust-lang/rust/commit/86d473ad1fa297536b56fb3e1012d7dcbe4f21a3"}], "stats": {"total": 55, "additions": 3, "deletions": 52}, "files": [{"sha": "545fe2c12ff7bd30e9c56619da3fd79a9cb9c378", "filename": "src/test/pretty/block-disambig.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e1f15a71e3dc1d24454594e068ed3df2271448e3/src%2Ftest%2Fpretty%2Fblock-disambig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1f15a71e3dc1d24454594e068ed3df2271448e3/src%2Ftest%2Fpretty%2Fblock-disambig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fblock-disambig.rs?ref=e1f15a71e3dc1d24454594e068ed3df2271448e3", "patch": "@@ -24,7 +24,7 @@ fn test7() -> uint {\n     (*regs < 2) as uint\n }\n \n-fn test8() -> int { let val = @0; alt true { true { } } *val < 1 ? 0 : 1 }\n+fn test8() -> int { let val = @0; alt true { true { } } if *val < 1 { 0 } else { 1 } }\n \n fn test9() { let regs = @mutable 0; alt true { true { } } *regs += 1; }\n "}, {"sha": "84ad2da4f4e84b538af0603898b5c643028310b3", "filename": "src/test/run-pass/block-arg-in-ternary.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/86d473ad1fa297536b56fb3e1012d7dcbe4f21a3/src%2Ftest%2Frun-pass%2Fblock-arg-in-ternary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86d473ad1fa297536b56fb3e1012d7dcbe4f21a3/src%2Ftest%2Frun-pass%2Fblock-arg-in-ternary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fblock-arg-in-ternary.rs?ref=86d473ad1fa297536b56fb3e1012d7dcbe4f21a3", "patch": "@@ -1,6 +0,0 @@\n-// Allow block arguments with ternary... why not, no chance of ambig.\n-fn main() {\n-    let v = [-1f, 1f];\n-    let foo = vec::any(v) { |e| float::is_negative(e) } ? true : false;\n-    assert foo;\n-}"}, {"sha": "7fc995f93875fc112995fe9e0b3f42ce5515918b", "filename": "src/test/run-pass/operator-overloading.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e1f15a71e3dc1d24454594e068ed3df2271448e3/src%2Ftest%2Frun-pass%2Foperator-overloading.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1f15a71e3dc1d24454594e068ed3df2271448e3/src%2Ftest%2Frun-pass%2Foperator-overloading.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Foperator-overloading.rs?ref=e1f15a71e3dc1d24454594e068ed3df2271448e3", "patch": "@@ -11,7 +11,7 @@ impl point_ops for point {\n         {x: -self.x, y: -self.y}\n     }\n     fn [](x: bool) -> int {\n-        x ? self.x : self.y\n+        if x { self.x } else { self.y }\n     }\n }\n "}, {"sha": "6adfada2c90e99aa275c378d6ec9eb80dc5f1e94", "filename": "src/test/run-pass/ternary.rs", "status": "removed", "additions": 0, "deletions": 43, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/86d473ad1fa297536b56fb3e1012d7dcbe4f21a3/src%2Ftest%2Frun-pass%2Fternary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86d473ad1fa297536b56fb3e1012d7dcbe4f21a3/src%2Ftest%2Frun-pass%2Fternary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fternary.rs?ref=86d473ad1fa297536b56fb3e1012d7dcbe4f21a3", "patch": "@@ -1,43 +0,0 @@\n-fn test_simple() { let x = true ? 10 : 11; assert (x == 10); }\n-\n-fn test_precedence() {\n-    let x;\n-\n-    x = true || true ? 10 : 11;\n-    assert (x == 10);\n-\n-    x = true == false ? 10 : 11;\n-    assert (x == 11);\n-\n-    x = true ? false ? 10 : 11 : 12;\n-    assert (x == 11);\n-\n-    let y = true ? 0xF0 : 0x0 | 0x0F;\n-    assert (y == 0xF0);\n-\n-    y = true ? 0xF0 | 0x0F : 0x0;\n-    assert (y == 0xFF);\n-}\n-\n-fn test_associativity() {\n-    // Ternary is right-associative\n-    let x = false ? 10 : false ? 11 : 12;\n-    assert (x == 12);\n-}\n-\n-fn test_lval() {\n-    let box1: @mutable int = @mutable 10;\n-    let box2: @mutable int = @mutable 10;\n-    *(true ? box1 : box2) = 100;\n-    assert (*box1 == 100);\n-}\n-\n-fn test_as_stmt() { let s; true ? s = 10 : s = 12; assert (s == 10); }\n-\n-fn main() {\n-    test_simple();\n-    test_precedence();\n-    test_associativity();\n-    test_lval();\n-    test_as_stmt();\n-}"}, {"sha": "a373c3baf0ae2d90f4079500b4f4faa4d5d2582f", "filename": "src/test/run-pass/weird-exprs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e1f15a71e3dc1d24454594e068ed3df2271448e3/src%2Ftest%2Frun-pass%2Fweird-exprs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1f15a71e3dc1d24454594e068ed3df2271448e3/src%2Ftest%2Frun-pass%2Fweird-exprs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fweird-exprs.rs?ref=e1f15a71e3dc1d24454594e068ed3df2271448e3", "patch": "@@ -19,7 +19,7 @@ fn zombiejesus() {\n     do  {\n         while (ret) {\n             if (ret) {\n-                alt (ret) { _ { ret ? ret : ret } };\n+                alt (ret) { _ { if ret { ret } else { ret } } };\n             } else if (ret) {\n                 ret;\n             }"}]}