{"sha": "bbc0238e90c4966b76f43342bddba10ac9e9a0a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiYzAyMzhlOTBjNDk2NmI3NmY0MzM0MmJkZGJhMTBhYzllOWEwYTA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-01T11:33:25Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-01T11:33:25Z"}, "message": "Auto merge of #31962 - sanxiyn:const-eval-map, r=arielb1\n\nFix #31910.", "tree": {"sha": "8bdc895adf67c8ee5e2b4f014e3c39623590514a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8bdc895adf67c8ee5e2b4f014e3c39623590514a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bbc0238e90c4966b76f43342bddba10ac9e9a0a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bbc0238e90c4966b76f43342bddba10ac9e9a0a0", "html_url": "https://github.com/rust-lang/rust/commit/bbc0238e90c4966b76f43342bddba10ac9e9a0a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bbc0238e90c4966b76f43342bddba10ac9e9a0a0/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a52494f7e259f49a3be176dc6fb151c755d6686", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a52494f7e259f49a3be176dc6fb151c755d6686", "html_url": "https://github.com/rust-lang/rust/commit/0a52494f7e259f49a3be176dc6fb151c755d6686"}, {"sha": "33bd1442aad7608a8c31a58abc1bdb11d573fc76", "url": "https://api.github.com/repos/rust-lang/rust/commits/33bd1442aad7608a8c31a58abc1bdb11d573fc76", "html_url": "https://github.com/rust-lang/rust/commit/33bd1442aad7608a8c31a58abc1bdb11d573fc76"}], "stats": {"total": 40, "additions": 39, "deletions": 1}, "files": [{"sha": "3d28f3a8a3f0cb732b437409a14c7fb8eea8a83b", "filename": "src/librustc/middle/const_eval.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/bbc0238e90c4966b76f43342bddba10ac9e9a0a0/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbc0238e90c4966b76f43342bddba10ac9e9a0a0/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs?ref=bbc0238e90c4966b76f43342bddba10ac9e9a0a0", "patch": "@@ -1019,7 +1019,7 @@ pub fn eval_const_expr_partial<'tcx>(tcx: &ty::ctxt<'tcx>,\n               }\n               Some(Def::AssociatedConst(def_id)) => {\n                   if let Some(node_id) = tcx.map.as_local_node_id(def_id) {\n-                      match tcx.impl_or_trait_item(def_id).container() {\n+                      match impl_or_trait_container(tcx, def_id) {\n                           ty::TraitContainer(trait_id) => match tcx.map.find(node_id) {\n                               Some(ast_map::NodeTraitItem(ti)) => match ti.node {\n                                   hir::ConstTraitItem(ref ty, _) => {\n@@ -1222,6 +1222,23 @@ pub fn eval_const_expr_partial<'tcx>(tcx: &ty::ctxt<'tcx>,\n     Ok(result)\n }\n \n+fn impl_or_trait_container(tcx: &ty::ctxt, def_id: DefId) -> ty::ImplOrTraitItemContainer {\n+    // This is intended to be equivalent to tcx.impl_or_trait_item(def_id).container()\n+    // for local def_id, but it can be called before tcx.impl_or_trait_items is complete.\n+    if let Some(node_id) = tcx.map.as_local_node_id(def_id) {\n+        if let Some(ast_map::NodeItem(item)) = tcx.map.find(tcx.map.get_parent_node(node_id)) {\n+            let container_id = tcx.map.local_def_id(item.id);\n+            match item.node {\n+                hir::ItemImpl(..) => return ty::ImplContainer(container_id),\n+                hir::ItemTrait(..) => return ty::TraitContainer(container_id),\n+                _ => ()\n+            }\n+        }\n+        panic!(\"No impl or trait container for {:?}\", def_id);\n+    }\n+    panic!(\"{:?} is not local\", def_id);\n+}\n+\n fn resolve_trait_associated_const<'a, 'tcx: 'a>(tcx: &'a ty::ctxt<'tcx>,\n                                                 ti: &'tcx hir::TraitItem,\n                                                 trait_id: DefId,"}, {"sha": "65fcd7df77ebeb0eb27080067aa9a3a589cbc55a", "filename": "src/test/compile-fail/issue-31910.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/bbc0238e90c4966b76f43342bddba10ac9e9a0a0/src%2Ftest%2Fcompile-fail%2Fissue-31910.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbc0238e90c4966b76f43342bddba10ac9e9a0a0/src%2Ftest%2Fcompile-fail%2Fissue-31910.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-31910.rs?ref=bbc0238e90c4966b76f43342bddba10ac9e9a0a0", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(associated_consts)]\n+\n+enum Enum<T: Trait> {\n+    X = Trait::Number, //~ ERROR constant evaluation error\n+}\n+\n+trait Trait {\n+    const Number: i32 = 1;\n+}\n+\n+fn main() {}"}]}