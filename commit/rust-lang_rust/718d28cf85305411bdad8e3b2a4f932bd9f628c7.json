{"sha": "718d28cf85305411bdad8e3b2a4f932bd9f628c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxOGQyOGNmODUzMDU0MTFiZGFkOGUzYjJhNGY5MzJiZDlmNjI4Yzc=", "commit": {"author": {"name": "camelid", "email": "camelidcamel@gmail.com", "date": "2020-06-01T03:45:08Z"}, "committer": {"name": "camelid", "email": "camelidcamel@gmail.com", "date": "2020-06-01T03:45:08Z"}, "message": "Correct generic parameter ordering in error note", "tree": {"sha": "10fe642f221bbcab278f8d440d41db9fb40841d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10fe642f221bbcab278f8d440d41db9fb40841d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/718d28cf85305411bdad8e3b2a4f932bd9f628c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/718d28cf85305411bdad8e3b2a4f932bd9f628c7", "html_url": "https://github.com/rust-lang/rust/commit/718d28cf85305411bdad8e3b2a4f932bd9f628c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/718d28cf85305411bdad8e3b2a4f932bd9f628c7/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d93d3f4a42fd45b2a0da658d39555316a1b6793", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d93d3f4a42fd45b2a0da658d39555316a1b6793", "html_url": "https://github.com/rust-lang/rust/commit/0d93d3f4a42fd45b2a0da658d39555316a1b6793"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "9b47c4c7dde700b11c0096fce401d86eea789924", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/718d28cf85305411bdad8e3b2a4f932bd9f628c7/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/718d28cf85305411bdad8e3b2a4f932bd9f628c7/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=718d28cf85305411bdad8e3b2a4f932bd9f628c7", "patch": "@@ -8,6 +8,7 @@\n use crate::collect::PlaceholderHirTyCollector;\n use crate::middle::resolve_lifetime as rl;\n use crate::require_c_abi_if_c_variadic;\n+use rustc_ast::ast::ParamKindOrd;\n use rustc_ast::util::lev_distance::find_best_match_for_name;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::ErrorReported;\n@@ -483,8 +484,23 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n             arg.descr(),\n             kind,\n         );\n+\n+        let kind_ord = match kind {\n+            \"lifetime\" => ParamKindOrd::Lifetime,\n+            \"type\" => ParamKindOrd::Type,\n+            \"constant\" => ParamKindOrd::Const,\n+            _ => panic!(),\n+        };\n+        let arg_ord = match arg {\n+            GenericArg::Lifetime(_) => ParamKindOrd::Lifetime,\n+            GenericArg::Type(_) => ParamKindOrd::Type,\n+            GenericArg::Const(_) => ParamKindOrd::Const,\n+        };\n+\n         // This note will be true as long as generic parameters are strictly ordered by their kind.\n-        err.note(&format!(\"{} arguments must be provided before {} arguments\", kind, arg.descr()));\n+        let (first, last) =\n+            if kind_ord < arg_ord { (kind, arg.descr()) } else { (arg.descr(), kind) };\n+        err.note(&format!(\"{} arguments must be provided before {} arguments\", first, last));\n         err.emit();\n     }\n "}, {"sha": "96f1656bae4ac321c6b2cbfdb4149e3ed7744635", "filename": "src/test/ui/suggestions/suggest-move-types.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/718d28cf85305411bdad8e3b2a4f932bd9f628c7/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/718d28cf85305411bdad8e3b2a4f932bd9f628c7/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-types.stderr?ref=718d28cf85305411bdad8e3b2a4f932bd9f628c7", "patch": "@@ -124,15 +124,15 @@ error[E0747]: lifetime provided when a type was expected\n LL | struct Cl<'a, 'b, 'c, T, U, V, M: ThreeWithLifetime<T, 'a, A=(), B=(), C=(), U, 'b, V, 'c>> {\n    |                                                        ^^\n    |\n-   = note: type arguments must be provided before lifetime arguments\n+   = note: lifetime arguments must be provided before type arguments\n \n error[E0747]: lifetime provided when a type was expected\n   --> $DIR/suggest-move-types.rs:82:56\n    |\n LL | struct Dl<'a, 'b, 'c, T, U, V, M: ThreeWithLifetime<T, 'a, A=(), B=(), U, 'b, C=(), V, 'c>> {\n    |                                                        ^^\n    |\n-   = note: type arguments must be provided before lifetime arguments\n+   = note: lifetime arguments must be provided before type arguments\n \n error: aborting due to 12 previous errors\n "}]}