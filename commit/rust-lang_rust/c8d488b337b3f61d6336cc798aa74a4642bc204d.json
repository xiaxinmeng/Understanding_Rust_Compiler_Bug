{"sha": "c8d488b337b3f61d6336cc798aa74a4642bc204d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4ZDQ4OGIzMzdiM2Y2MWQ2MzM2Y2M3OThhYTc0YTQ2NDJiYzIwNGQ=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-05-20T23:53:24Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-05-20T23:57:37Z"}, "message": "Change node_ann hash table to a vector in typestate", "tree": {"sha": "f7be3edfc9041f81863550bc71c1ad5369f70c0f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7be3edfc9041f81863550bc71c1ad5369f70c0f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c8d488b337b3f61d6336cc798aa74a4642bc204d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c8d488b337b3f61d6336cc798aa74a4642bc204d", "html_url": "https://github.com/rust-lang/rust/commit/c8d488b337b3f61d6336cc798aa74a4642bc204d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c8d488b337b3f61d6336cc798aa74a4642bc204d/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9128a1bab8e54529a3fa2464b085ba782477c2ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/9128a1bab8e54529a3fa2464b085ba782477c2ff", "html_url": "https://github.com/rust-lang/rust/commit/9128a1bab8e54529a3fa2464b085ba782477c2ff"}], "stats": {"total": 43, "additions": 31, "deletions": 12}, "files": [{"sha": "ab1468d87c40b1b1f7d5e256e9b46c3b66a71343", "filename": "src/comp/middle/tstate/annotate.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c8d488b337b3f61d6336cc798aa74a4642bc204d/src%2Fcomp%2Fmiddle%2Ftstate%2Fannotate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8d488b337b3f61d6336cc798aa74a4642bc204d/src%2Fcomp%2Fmiddle%2Ftstate%2Fannotate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fannotate.rs?ref=c8d488b337b3f61d6336cc798aa74a4642bc204d", "patch": "@@ -86,11 +86,12 @@ import util::common::log_expr;\n import util::common::log_block;\n import util::common::log_stmt;\n \n-import middle::tstate::aux::fn_info;\n-import middle::tstate::aux::fn_info_map;\n-import middle::tstate::aux::num_locals;\n-import middle::tstate::aux::get_fn_info;\n-import middle::tstate::aux::crate_ctxt;\n+import aux::fn_info;\n+import aux::fn_info_map;\n+import aux::num_locals;\n+import aux::get_fn_info;\n+import aux::crate_ctxt;\n+import aux::add_node;\n import middle::tstate::ann::empty_ann;\n \n fn collect_ids_expr(&@expr e, @vec[uint] res) -> () {\n@@ -140,7 +141,7 @@ fn node_ids_in_fn(&_fn f, &ident i, &def_id d, &ann a, @vec[uint] res) -> () {\n fn init_vecs(&crate_ctxt ccx, @vec[uint] node_ids, uint len) -> () {\n     for (uint i in *node_ids) {\n         log(uistr(i) + \" |-> \" + uistr(len));\n-        ccx.node_anns.insert(i, empty_ann(len));\n+        add_node(ccx, i, empty_ann(len));\n     }\n }\n "}, {"sha": "48302344d079fb34349eef4ac269460253a8409a", "filename": "src/comp/middle/tstate/auxiliary.rs", "status": "modified", "additions": 24, "deletions": 6, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/c8d488b337b3f61d6336cc798aa74a4642bc204d/src%2Fcomp%2Fmiddle%2Ftstate%2Fauxiliary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8d488b337b3f61d6336cc798aa74a4642bc204d/src%2Fcomp%2Fmiddle%2Ftstate%2Fauxiliary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fauxiliary.rs?ref=c8d488b337b3f61d6336cc798aa74a4642bc204d", "patch": "@@ -1,5 +1,7 @@\n import std::bitv;\n+import std::vec;\n import std::vec::len;\n+import std::vec::grow;\n import std::vec::pop;\n import std::option;\n import std::option::none;\n@@ -156,7 +158,7 @@ type fn_info      = rec(@std::map::hashmap[def_id, var_info] vars,\n                         controlflow cf);\n \n /* mapping from node ID to typestate annotation */\n-type node_ann_table = @std::map::hashmap[uint, ts_ann];\n+type node_ann_table = @vec[ts_ann];\n \n /* mapping from function name to fn_info map */\n type fn_info_map = @std::map::hashmap[def_id, fn_info];\n@@ -175,10 +177,26 @@ fn get_fn_info(&crate_ctxt ccx, def_id did) -> fn_info {\n     ret ccx.fm.get(did);\n }\n \n+fn add_node(&crate_ctxt ccx, uint i, &ts_ann a) -> () {\n+    auto sz = len(*(ccx.node_anns)); \n+    if (sz <= i) {\n+        grow(*(ccx.node_anns), (i - sz) + 1u, empty_ann(0u));\n+    }\n+    ccx.node_anns.(i) = a;\n+}\n+\n+fn get_ts_ann(&crate_ctxt ccx, uint i) -> option::t[ts_ann] {\n+    if (i < len(*(ccx.node_anns))) {\n+        ret some[ts_ann](ccx.node_anns.(i));\n+    }\n+    else {\n+        ret none[ts_ann];\n+    }\n+}\n /********* utils ********/\n \n fn ann_to_ts_ann(&crate_ctxt ccx, &ann a) -> ts_ann {\n-    alt (ccx.node_anns.find(a.id)) {\n+    alt (get_ts_ann(ccx, a.id)) {\n         case (none[ts_ann])         { \n             log_err (\"ann_to_ts_ann: no ts_ann for node_id \"\n                      + uistr(a.id));\n@@ -296,8 +314,8 @@ fn block_poststate(&crate_ctxt ccx, &block b) -> poststate {\n \n /* sets the pre_and_post for an ann */\n fn with_pp(&crate_ctxt ccx, &ann a, pre_and_post p) {\n-    ccx.node_anns.insert(a.id, @rec(conditions=p,\n-                                    states=empty_states(pps_len(p))));\n+    add_node(ccx, a.id, @rec(conditions=p,\n+                             states=empty_states(pps_len(p))));\n }\n \n fn set_prestate_ann(&crate_ctxt ccx, &ann a, &prestate pre) -> bool {\n@@ -370,8 +388,8 @@ fn num_locals(fn_info m) -> uint {\n }\n \n fn new_crate_ctxt(ty::ctxt cx) -> crate_ctxt {\n-    ret rec(tcx=cx, node_anns=@new_uint_hash[ts_ann](),\n-            fm=@new_def_hash[fn_info]());\n+    let vec[ts_ann] na = [];\n+    ret rec(tcx=cx, node_anns=@na, fm=@new_def_hash[fn_info]());\n }\n \n fn controlflow_def_id(&crate_ctxt ccx, &def_id d) -> controlflow {"}]}