{"sha": "45d5a420ada9c11f61347fd4c63c7f0234adaea7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1ZDVhNDIwYWRhOWMxMWY2MTM0N2ZkNGM2M2M3ZjAyMzRhZGFlYTc=", "commit": {"author": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2018-02-10T21:20:42Z"}, "committer": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2018-02-10T21:20:42Z"}, "message": "Correct a few stability attributes", "tree": {"sha": "9d4e77fc1e2baf5fc47cb3a0973958c0cd2f8f75", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d4e77fc1e2baf5fc47cb3a0973958c0cd2f8f75"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45d5a420ada9c11f61347fd4c63c7f0234adaea7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45d5a420ada9c11f61347fd4c63c7f0234adaea7", "html_url": "https://github.com/rust-lang/rust/commit/45d5a420ada9c11f61347fd4c63c7f0234adaea7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45d5a420ada9c11f61347fd4c63c7f0234adaea7/comments", "author": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39abcc04139a0fd24422f422271849dc91e39a88", "url": "https://api.github.com/repos/rust-lang/rust/commits/39abcc04139a0fd24422f422271849dc91e39a88", "html_url": "https://github.com/rust-lang/rust/commit/39abcc04139a0fd24422f422271849dc91e39a88"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "21d4a486b983313cf407a9efe2cb282a2e7369f0", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/45d5a420ada9c11f61347fd4c63c7f0234adaea7/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45d5a420ada9c11f61347fd4c63c7f0234adaea7/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=45d5a420ada9c11f61347fd4c63c7f0234adaea7", "patch": "@@ -2881,7 +2881,7 @@ pub enum FpCategory {\n            issue = \"32110\")]\n pub trait Float: Sized {\n     /// Type used by `to_bits` and `from_bits`.\n-    #[stable(feature = \"core_float_bits\", since = \"1.24.0\")]\n+    #[stable(feature = \"core_float_bits\", since = \"1.25.0\")]\n     type Bits;\n \n     /// Returns `true` if this value is NaN and false otherwise.\n@@ -2947,10 +2947,10 @@ pub trait Float: Sized {\n     fn min(self, other: Self) -> Self;\n \n     /// Raw transmutation to integer.\n-    #[stable(feature = \"core_float_bits\", since=\"1.24.0\")]\n+    #[stable(feature = \"core_float_bits\", since=\"1.25.0\")]\n     fn to_bits(self) -> Self::Bits;\n     /// Raw transmutation from integer.\n-    #[stable(feature = \"core_float_bits\", since=\"1.24.0\")]\n+    #[stable(feature = \"core_float_bits\", since=\"1.25.0\")]\n     fn from_bits(v: Self::Bits) -> Self;\n }\n "}, {"sha": "b266771b818e5b71d5627ba3f4641216e402359a", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/45d5a420ada9c11f61347fd4c63c7f0234adaea7/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45d5a420ada9c11f61347fd4c63c7f0234adaea7/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=45d5a420ada9c11f61347fd4c63c7f0234adaea7", "patch": "@@ -2573,7 +2573,7 @@ impl<T: ?Sized> Clone for NonNull<T> {\n #[stable(feature = \"nonnull\", since = \"1.25.0\")]\n impl<T: ?Sized> Copy for NonNull<T> { }\n \n-#[stable(feature = \"nonnull\", since = \"1.25.0\")]\n+#[unstable(feature = \"coerce_unsized\", issue = \"27732\")]\n impl<T: ?Sized, U: ?Sized> CoerceUnsized<NonNull<U>> for NonNull<T> where T: Unsize<U> { }\n \n #[stable(feature = \"nonnull\", since = \"1.25.0\")]\n@@ -2621,7 +2621,7 @@ impl<T: ?Sized> hash::Hash for NonNull<T> {\n     }\n }\n \n-#[stable(feature = \"nonnull\", since = \"1.25.0\")]\n+#[unstable(feature = \"ptr_internals\", issue = \"0\")]\n impl<T: ?Sized> From<Unique<T>> for NonNull<T> {\n     fn from(unique: Unique<T>) -> Self {\n         NonNull { pointer: unique.pointer }"}, {"sha": "b8d0719b9b992b565daf45d68b161b9e68dfff87", "filename": "src/libcore/time.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/45d5a420ada9c11f61347fd4c63c7f0234adaea7/src%2Flibcore%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45d5a420ada9c11f61347fd4c63c7f0234adaea7/src%2Flibcore%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftime.rs?ref=45d5a420ada9c11f61347fd4c63c7f0234adaea7", "patch": "@@ -7,7 +7,7 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n-#![stable(feature = \"duration_core\", since = \"1.24.0\")]\n+#![stable(feature = \"duration_core\", since = \"1.25.0\")]\n \n //! Temporal quantification.\n //!\n@@ -58,7 +58,7 @@ const MICROS_PER_SEC: u64 = 1_000_000;\n ///\n /// let ten_millis = Duration::from_millis(10);\n /// ```\n-#[stable(feature = \"duration_core\", since = \"1.24.0\")]\n+#[stable(feature = \"duration\", since = \"1.3.0\")]\n #[derive(Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Debug, Hash, Default)]\n pub struct Duration {\n     secs: u64,"}, {"sha": "76bcb5fedc94aed53fe7c86454897938808c2e31", "filename": "src/libstd/io/cursor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45d5a420ada9c11f61347fd4c63c7f0234adaea7/src%2Flibstd%2Fio%2Fcursor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45d5a420ada9c11f61347fd4c63c7f0234adaea7/src%2Flibstd%2Fio%2Fcursor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fcursor.rs?ref=45d5a420ada9c11f61347fd4c63c7f0234adaea7", "patch": "@@ -296,7 +296,7 @@ impl<'a> Write for Cursor<&'a mut [u8]> {\n     fn flush(&mut self) -> io::Result<()> { Ok(()) }\n }\n \n-#[unstable(feature = \"cursor_mut_vec\", issue = \"30132\")]\n+#[stable(feature = \"cursor_mut_vec\", since = \"1.25.0\")]\n impl<'a> Write for Cursor<&'a mut Vec<u8>> {\n     fn write(&mut self, buf: &[u8]) -> io::Result<usize> {\n         vec_write(&mut self.pos, self.inner, buf)"}, {"sha": "e03a182653e5a451810c99820ed16ea8b1de4fe5", "filename": "src/libstd/path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45d5a420ada9c11f61347fd4c63c7f0234adaea7/src%2Flibstd%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45d5a420ada9c11f61347fd4c63c7f0234adaea7/src%2Flibstd%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath.rs?ref=45d5a420ada9c11f61347fd4c63c7f0234adaea7", "patch": "@@ -576,7 +576,7 @@ impl<'a> AsRef<OsStr> for Component<'a> {\n     }\n }\n \n-#[stable(feature = \"path_component_asref\", since = \"1.24.0\")]\n+#[stable(feature = \"path_component_asref\", since = \"1.25.0\")]\n impl<'a> AsRef<Path> for Component<'a> {\n     fn as_ref(&self) -> &Path {\n         self.as_os_str().as_ref()"}, {"sha": "f8dbc4d0f4532bdcb920e437754439c104aca45d", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45d5a420ada9c11f61347fd4c63c7f0234adaea7/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45d5a420ada9c11f61347fd4c63c7f0234adaea7/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=45d5a420ada9c11f61347fd4c63c7f0234adaea7", "patch": "@@ -538,7 +538,7 @@ declare_features! (\n     // instead of just the platforms on which it is the C ABI\n     (accepted, abi_sysv64, \"1.24.0\", Some(36167)),\n     // Allows `repr(align(16))` struct attribute (RFC 1358)\n-    (accepted, repr_align, \"1.24.0\", Some(33626)),\n+    (accepted, repr_align, \"1.25.0\", Some(33626)),\n     // allow '|' at beginning of match arms (RFC 1925)\n     (accepted, match_beginning_vert, \"1.25.0\", Some(44101)),\n     // Nested groups in `use` (RFC 2128)"}]}