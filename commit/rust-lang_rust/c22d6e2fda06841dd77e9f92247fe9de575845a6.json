{"sha": "c22d6e2fda06841dd77e9f92247fe9de575845a6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyMmQ2ZTJmZGEwNjg0MWRkNzdlOWY5MjI0N2ZlOWRlNTc1ODQ1YTY=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-02-02T06:39:25Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-02-02T06:43:12Z"}, "message": "Fix rustdoc ICE on macros defined within functions\n\nfixes #47639", "tree": {"sha": "b0c3b38d2ac944d8c370e03ab79fbd052f7473a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0c3b38d2ac944d8c370e03ab79fbd052f7473a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c22d6e2fda06841dd77e9f92247fe9de575845a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c22d6e2fda06841dd77e9f92247fe9de575845a6", "html_url": "https://github.com/rust-lang/rust/commit/c22d6e2fda06841dd77e9f92247fe9de575845a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c22d6e2fda06841dd77e9f92247fe9de575845a6/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6741e416feb54b18de41c348ecc70ba5cbc961ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/6741e416feb54b18de41c348ecc70ba5cbc961ce", "html_url": "https://github.com/rust-lang/rust/commit/6741e416feb54b18de41c348ecc70ba5cbc961ce"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "2efb9f2dc9cae04a7aafd133d194a8949f9ac24a", "filename": "src/librustc/lint/context.rs", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/c22d6e2fda06841dd77e9f92247fe9de575845a6/src%2Flibrustc%2Flint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c22d6e2fda06841dd77e9f92247fe9de575845a6/src%2Flibrustc%2Flint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fcontext.rs?ref=c22d6e2fda06841dd77e9f92247fe9de575845a6", "patch": "@@ -1042,11 +1042,20 @@ pub fn check_ast_crate(sess: &Session, krate: &ast::Crate) {\n     // Put the lint store levels and passes back in the session.\n     cx.lint_sess.restore(&sess.lint_store);\n \n-    // Emit all buffered lints from early on in the session now that we've\n-    // calculated the lint levels for all AST nodes.\n-    for (_id, lints) in cx.buffered.map {\n-        for early_lint in lints {\n-            span_bug!(early_lint.span, \"failed to process buffered lint here\");\n+    // All of the buffered lints should have been emitted at this point.\n+    // If not, that means that we somehow buffered a lint for a node id\n+    // that was not lint-checked (perhaps it doesn't exist?). This is a bug.\n+    //\n+    // Rustdoc runs everybody-loops before the early lints and removes\n+    // function bodies, so it's totally possible for linted\n+    // node ids to not exist (e.g. macros defined within functions for the\n+    // unused_macro lint) anymore. So we only run this check\n+    // when we're not in rustdoc mode. (see issue #47639)\n+    if !sess.opts.actually_rustdoc {\n+        for (_id, lints) in cx.buffered.map {\n+            for early_lint in lints {\n+                span_bug!(early_lint.span, \"failed to process buffered lint here\");\n+            }\n         }\n     }\n }"}]}