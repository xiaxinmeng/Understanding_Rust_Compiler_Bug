{"sha": "c346e89db8a57e15111daa35685a2542d3be7c77", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzNDZlODlkYjhhNTdlMTUxMTFkYWEzNTY4NWEyNTQyZDNiZTdjNzc=", "commit": {"author": {"name": "Naz\u0131m Can Alt\u0131nova", "email": "canaltinova@gmail.com", "date": "2020-08-10T15:49:39Z"}, "committer": {"name": "Naz\u0131m Can Alt\u0131nova", "email": "canaltinova@gmail.com", "date": "2020-08-10T21:06:05Z"}, "message": "Manually implement Debug for BTreeMap::ValuesMut struct\n\nDeriving debug prints all the values including keys. But ValuesMut\nstruct should only print the values.", "tree": {"sha": "9ce153def9e9234c6c96b2d06f18a46eca6eec1b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ce153def9e9234c6c96b2d06f18a46eca6eec1b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c346e89db8a57e15111daa35685a2542d3be7c77", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEpYetfNnk4ATM3f2Aci54bwcpZHoFAl8xtr0ACgkQci54bwcp\nZHpY4g/+P2npEgWqVj8tKdRhbYLwNofAuowr+XqQUzAeQrINCIheQxbeHWvoaUn5\nIc1FuJ1Kn/EjjLSw7B6/T9OeTednundbGsTYau3PXJPzPF6Zq/sCRzohFNLfAT6q\nB4SoQ2FWIJhtQ6nup/n/LCM4fus2cae7U+LOfAyaBLVB2uc+xdLjjulG0zQG//Rc\nj0kZ+b99uH1kClyX22KCKX3FECh2RaU+JzgjPG1HjJNsjwv1rkn+wTF9aaPH2h94\nk0Dnyfy22xs9MLTWnlLCKIUGaeXUvGNYcS+11PCypdzsCflHMt/3qrs7HEuPeNMs\nljEGs0etBWcyB/J/Bv6Eg+Izdu/7gdrUsEq89Sulxx1nohpjPtAUhEm55PomlciI\nag85dy5hEu5A6q8yxXbEYsikr+O0GM/ra/PP4R9ZckkMz9VJggx72sfu+IWzCfYu\no3BjdkPKYgLZk7tP1xzM6gCaVULbO2fJwM3XpO5mwzaXKz740vr5A7HTBoa7A+Hk\nWooVFvl+1DIUhlPE6l2DV90r/tTNttH/HWdfvJLJmHddD6wxtvfGS3+v3T6+YFJQ\nZeR7mxsED0w8Xqj9Mx2m7o29B5ZNGYkhZEL5EFtAjJKQASDk8yMjkBwxdWA4nwDn\nCFkXvNS51lh44r7h8ibhRNk4wMR/7MJbg0hfHhslWUZlEfqW5tI=\n=fVzX\n-----END PGP SIGNATURE-----", "payload": "tree 9ce153def9e9234c6c96b2d06f18a46eca6eec1b\nparent 456738e3d1ad7dadffaed287d3055ca38b5fa375\nauthor Naz\u0131m Can Alt\u0131nova <canaltinova@gmail.com> 1597074579 +0200\ncommitter Naz\u0131m Can Alt\u0131nova <canaltinova@gmail.com> 1597093565 +0200\n\nManually implement Debug for BTreeMap::ValuesMut struct\n\nDeriving debug prints all the values including keys. But ValuesMut\nstruct should only print the values.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c346e89db8a57e15111daa35685a2542d3be7c77", "html_url": "https://github.com/rust-lang/rust/commit/c346e89db8a57e15111daa35685a2542d3be7c77", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c346e89db8a57e15111daa35685a2542d3be7c77/comments", "author": {"login": "canova", "id": 466239, "node_id": "MDQ6VXNlcjQ2NjIzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/466239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canova", "html_url": "https://github.com/canova", "followers_url": "https://api.github.com/users/canova/followers", "following_url": "https://api.github.com/users/canova/following{/other_user}", "gists_url": "https://api.github.com/users/canova/gists{/gist_id}", "starred_url": "https://api.github.com/users/canova/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canova/subscriptions", "organizations_url": "https://api.github.com/users/canova/orgs", "repos_url": "https://api.github.com/users/canova/repos", "events_url": "https://api.github.com/users/canova/events{/privacy}", "received_events_url": "https://api.github.com/users/canova/received_events", "type": "User", "site_admin": false}, "committer": {"login": "canova", "id": 466239, "node_id": "MDQ6VXNlcjQ2NjIzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/466239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canova", "html_url": "https://github.com/canova", "followers_url": "https://api.github.com/users/canova/followers", "following_url": "https://api.github.com/users/canova/following{/other_user}", "gists_url": "https://api.github.com/users/canova/gists{/gist_id}", "starred_url": "https://api.github.com/users/canova/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canova/subscriptions", "organizations_url": "https://api.github.com/users/canova/orgs", "repos_url": "https://api.github.com/users/canova/repos", "events_url": "https://api.github.com/users/canova/events{/privacy}", "received_events_url": "https://api.github.com/users/canova/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "456738e3d1ad7dadffaed287d3055ca38b5fa375", "url": "https://api.github.com/repos/rust-lang/rust/commits/456738e3d1ad7dadffaed287d3055ca38b5fa375", "html_url": "https://github.com/rust-lang/rust/commit/456738e3d1ad7dadffaed287d3055ca38b5fa375"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "a08c19e3df4e9ff63760c8f49728e6a75da4580c", "filename": "library/alloc/src/collections/btree/map.rs", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/c346e89db8a57e15111daa35685a2542d3be7c77/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c346e89db8a57e15111daa35685a2542d3be7c77/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs?ref=c346e89db8a57e15111daa35685a2542d3be7c77", "patch": "@@ -361,11 +361,17 @@ impl<K, V: fmt::Debug> fmt::Debug for Values<'_, K, V> {\n ///\n /// [`values_mut`]: BTreeMap::values_mut\n #[stable(feature = \"map_values_mut\", since = \"1.10.0\")]\n-#[derive(Debug)]\n pub struct ValuesMut<'a, K: 'a, V: 'a> {\n     inner: IterMut<'a, K, V>,\n }\n \n+#[stable(feature = \"map_values_mut\", since = \"1.10.0\")]\n+impl<K, V: fmt::Debug> fmt::Debug for ValuesMut<'_, K, V> {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        f.debug_list().entries(self.inner.iter().map(|(_, val)| val)).finish()\n+    }\n+}\n+\n /// An owning iterator over the keys of a `BTreeMap`.\n ///\n /// This `struct` is created by the [`into_keys`] method on [`BTreeMap`].\n@@ -1519,6 +1525,14 @@ impl<K, V> ExactSizeIterator for IterMut<'_, K, V> {\n #[stable(feature = \"fused\", since = \"1.26.0\")]\n impl<K, V> FusedIterator for IterMut<'_, K, V> {}\n \n+impl<'a, K, V> IterMut<'a, K, V> {\n+    /// Returns an iterator of references over the remaining items.\n+    #[inline]\n+    pub(super) fn iter(&self) -> Iter<'_, K, V> {\n+        Iter { range: self.range.iter(), length: self.length }\n+    }\n+}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<K, V> IntoIterator for BTreeMap<K, V> {\n     type Item = (K, V);\n@@ -2006,6 +2020,15 @@ impl<'a, K, V> RangeMut<'a, K, V> {\n     unsafe fn next_unchecked(&mut self) -> (&'a mut K, &'a mut V) {\n         unsafe { unwrap_unchecked(self.front.as_mut()).next_unchecked() }\n     }\n+\n+    /// Returns an iterator of references over the remaining items.\n+    #[inline]\n+    pub(super) fn iter(&self) -> Range<'_, K, V> {\n+        Range {\n+            front: self.front.as_ref().map(|f| f.reborrow()),\n+            back: self.back.as_ref().map(|b| b.reborrow()),\n+        }\n+    }\n }\n \n #[stable(feature = \"btree_range\", since = \"1.17.0\")]"}]}