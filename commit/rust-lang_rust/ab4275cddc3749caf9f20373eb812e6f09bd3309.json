{"sha": "ab4275cddc3749caf9f20373eb812e6f09bd3309", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiNDI3NWNkZGMzNzQ5Y2FmOWYyMDM3M2ViODEyZTZmMDliZDMzMDk=", "commit": {"author": {"name": "Ayaz Hafiz", "email": "ayaz.hafiz.1@gmail.com", "date": "2020-07-10T05:32:49Z"}, "committer": {"name": "Ayaz Hafiz", "email": "ayaz.hafiz.1@gmail.com", "date": "2020-07-10T05:32:49Z"}, "message": "fixup! Don't visit foreign function bodies when lowering ast to hir", "tree": {"sha": "ed2a6e5481bd5dfde53784729f8c759105450d36", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed2a6e5481bd5dfde53784729f8c759105450d36"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab4275cddc3749caf9f20373eb812e6f09bd3309", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEP1kDyr3I3sjT29nTtEP3owMMmu0FAl8H/YEACgkQtEP3owMM\nmu2kbg/9GO5Uav9nETNnOsBJRMDsppYnL1yFTEOircCupYSVbED+/BKzOgGDq8x5\na8mPqfN4boSJDoQ79NkdTrX9Zpaodep/YPOsEs9gSYcrvbxqwpm7HiZ8ecJORZSm\nX/tAOzdf42Af+qbymkhXza1vdxPORn4MFLG19eXnglHoIccMokZfbUbooniBz4ld\n1ug4FaG1hnbAN2XJ4rxYGCC6eqrrkT2Tl55SzNb2Y8/LgjmKGyouCskd1xtC1Bcu\n/69PxEFZA2Cco7vst6jCk/+d+BktQcLdW79rZFLCvCcwvlQLHl/OAD1QhxIN4yNB\n03lf6XiyuPolGSqWrDCgSqXqPtlzV4ofIAkpvcegzr+27UMm8hw6vau2/FvkcPm9\nmqvKxE23MwohTLUny1/RfUTS4Dbjml1JqwvunkHzn9Ru/q42DeF/9fxhwlRs+2Cq\n3F0H5AlgjuyJR+bzfjmvNth5pYD3ywi0/t3esLGLiCAjB0IMVGIl36vl2kBp6f0Z\nHWMigg5wD3ED9o/JhjbnXi+zz29sN/gA2t2N19NsB3eGzWxh1NTOQI2TMTLISQWL\naSkJ+4DP5eE2witg55+oP1hmSDwnVNJ5DvwuxGXaSr9we3l5DXfetDysGb2B8uvA\nD2//VlYs6GO6kYaQl91b0a/uEAqE/d+BvUf382i8LqHSvx1ASkM=\n=kic0\n-----END PGP SIGNATURE-----", "payload": "tree ed2a6e5481bd5dfde53784729f8c759105450d36\nparent 230393993ffc255d3f20d98400c8a376bd51d1c0\nauthor Ayaz Hafiz <ayaz.hafiz.1@gmail.com> 1594359169 -0700\ncommitter Ayaz Hafiz <ayaz.hafiz.1@gmail.com> 1594359169 -0700\n\nfixup! Don't visit foreign function bodies when lowering ast to hir\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab4275cddc3749caf9f20373eb812e6f09bd3309", "html_url": "https://github.com/rust-lang/rust/commit/ab4275cddc3749caf9f20373eb812e6f09bd3309", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab4275cddc3749caf9f20373eb812e6f09bd3309/comments", "author": {"login": "ayazhafiz", "id": 20735482, "node_id": "MDQ6VXNlcjIwNzM1NDgy", "avatar_url": "https://avatars.githubusercontent.com/u/20735482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ayazhafiz", "html_url": "https://github.com/ayazhafiz", "followers_url": "https://api.github.com/users/ayazhafiz/followers", "following_url": "https://api.github.com/users/ayazhafiz/following{/other_user}", "gists_url": "https://api.github.com/users/ayazhafiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ayazhafiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ayazhafiz/subscriptions", "organizations_url": "https://api.github.com/users/ayazhafiz/orgs", "repos_url": "https://api.github.com/users/ayazhafiz/repos", "events_url": "https://api.github.com/users/ayazhafiz/events{/privacy}", "received_events_url": "https://api.github.com/users/ayazhafiz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ayazhafiz", "id": 20735482, "node_id": "MDQ6VXNlcjIwNzM1NDgy", "avatar_url": "https://avatars.githubusercontent.com/u/20735482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ayazhafiz", "html_url": "https://github.com/ayazhafiz", "followers_url": "https://api.github.com/users/ayazhafiz/followers", "following_url": "https://api.github.com/users/ayazhafiz/following{/other_user}", "gists_url": "https://api.github.com/users/ayazhafiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ayazhafiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ayazhafiz/subscriptions", "organizations_url": "https://api.github.com/users/ayazhafiz/orgs", "repos_url": "https://api.github.com/users/ayazhafiz/repos", "events_url": "https://api.github.com/users/ayazhafiz/events{/privacy}", "received_events_url": "https://api.github.com/users/ayazhafiz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "230393993ffc255d3f20d98400c8a376bd51d1c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/230393993ffc255d3f20d98400c8a376bd51d1c0", "html_url": "https://github.com/rust-lang/rust/commit/230393993ffc255d3f20d98400c8a376bd51d1c0"}], "stats": {"total": 43, "additions": 12, "deletions": 31}, "files": [{"sha": "21f1137c46e23c9603d8e8aecf06f86e00214324", "filename": "src/librustc_ast_lowering/item.rs", "status": "modified", "additions": 12, "deletions": 31, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/ab4275cddc3749caf9f20373eb812e6f09bd3309/src%2Flibrustc_ast_lowering%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab4275cddc3749caf9f20373eb812e6f09bd3309/src%2Flibrustc_ast_lowering%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Fitem.rs?ref=ab4275cddc3749caf9f20373eb812e6f09bd3309", "patch": "@@ -77,39 +77,20 @@ impl<'a> Visitor<'a> for ItemLowerer<'a, '_, '_> {\n         }\n     }\n \n-    // Forked from the original method because we don't want to descend into foreign function\n-    // blocks. Such blocks are semantically invalid and the hir does not preserve them, so lowering\n-    // items contained in them may be unexpected by later passes.\n-    fn visit_foreign_item(&mut self, item: &'a ForeignItem) {\n-        let Item { id: _, span: _, ident, ref vis, ref attrs, ref kind, tokens: _ } = *item;\n-        self.visit_vis(vis);\n-        self.visit_ident(ident);\n-        walk_list!(self, visit_attribute, attrs);\n-        match kind {\n-            ForeignItemKind::Static(ty, _, expr) => {\n-                self.visit_ty(ty);\n-                walk_list!(self, visit_expr, expr);\n+    fn visit_fn(&mut self, fk: FnKind<'a>, _: Span, _: NodeId) {\n+        match fk {\n+            FnKind::Fn(FnCtxt::Foreign, _, sig, _, _) => {\n+                self.visit_fn_header(&sig.header);\n+                visit::walk_fn_decl(self, &sig.decl);\n             }\n-            ForeignItemKind::Fn(_, sig, generics, body) => {\n-                self.visit_generics(generics);\n-                let kind = FnKind::Fn(FnCtxt::Foreign, ident, sig, vis, body.as_deref());\n-                match kind {\n-                    FnKind::Fn(_, _, sig, _, _) => {\n-                        self.visit_fn_header(&sig.header);\n-                        visit::walk_fn_decl(self, &sig.decl);\n-                    }\n-                    FnKind::Closure(decl, _) => {\n-                        visit::walk_fn_decl(self, decl);\n-                    }\n-                }\n-            }\n-            ForeignItemKind::TyAlias(_, generics, bounds, ty) => {\n-                self.visit_generics(generics);\n-                walk_list!(self, visit_param_bound, bounds);\n-                walk_list!(self, visit_ty, ty);\n+            FnKind::Fn(_, _, sig, _, body) => {\n+                self.visit_fn_header(&sig.header);\n+                visit::walk_fn_decl(self, &sig.decl);\n+                walk_list!(self, visit_block, body);\n             }\n-            ForeignItemKind::MacCall(mac) => {\n-                self.visit_mac(mac);\n+            FnKind::Closure(decl, body) => {\n+                visit::walk_fn_decl(self, decl);\n+                self.visit_expr(body);\n             }\n         }\n     }"}]}