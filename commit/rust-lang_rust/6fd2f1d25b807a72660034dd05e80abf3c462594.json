{"sha": "6fd2f1d25b807a72660034dd05e80abf3c462594", "node_id": "C_kwDOAAsO6NoAKDZmZDJmMWQyNWI4MDdhNzI2NjAwMzRkZDA1ZTgwYWJmM2M0NjI1OTQ", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-10-10T09:45:17Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-10-10T09:45:17Z"}, "message": "internal: move tests", "tree": {"sha": "709af665f436d8ef22c8a1c9d8091342dc61e2e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/709af665f436d8ef22c8a1c9d8091342dc61e2e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6fd2f1d25b807a72660034dd05e80abf3c462594", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6fd2f1d25b807a72660034dd05e80abf3c462594", "html_url": "https://github.com/rust-lang/rust/commit/6fd2f1d25b807a72660034dd05e80abf3c462594", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6fd2f1d25b807a72660034dd05e80abf3c462594/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a854a72539c14c90daf6e0385fa6f72b53aacd5", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a854a72539c14c90daf6e0385fa6f72b53aacd5", "html_url": "https://github.com/rust-lang/rust/commit/5a854a72539c14c90daf6e0385fa6f72b53aacd5"}], "stats": {"total": 91, "additions": 54, "deletions": 37}, "files": [{"sha": "dc6ab36b7612fe307d001aa028a743831dc872d0", "filename": "crates/hir_def/src/macro_expansion_tests/mbe.rs", "status": "modified", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/6fd2f1d25b807a72660034dd05e80abf3c462594/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fd2f1d25b807a72660034dd05e80abf3c462594/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs?ref=6fd2f1d25b807a72660034dd05e80abf3c462594", "patch": "@@ -1185,3 +1185,57 @@ ok!();\n \"#]],\n     );\n }\n+\n+#[test]\n+fn test_vertical_bar_with_pat() {\n+    check(\n+        r#\"\n+macro_rules! m { (|$pat:pat| ) => { ok!(); } }\n+m! { |x| }\n+ \"#,\n+        expect![[r#\"\n+macro_rules! m { (|$pat:pat| ) => { ok!(); } }\n+ok!();\n+ \"#]],\n+    );\n+}\n+\n+#[test]\n+fn test_dollar_crate_lhs_is_not_meta() {\n+    check(\n+        r#\"\n+macro_rules! m {\n+    ($crate) => { err!(); };\n+    () => { ok!(); };\n+}\n+m!{}\n+\"#,\n+        expect![[r#\"\n+macro_rules! m {\n+    ($crate) => { err!(); };\n+    () => { ok!(); };\n+}\n+ok!();\n+\"#]],\n+    );\n+}\n+\n+#[test]\n+fn test_lifetime() {\n+    check(\n+        r#\"\n+macro_rules! m {\n+    ($lt:lifetime) => { struct Ref<$lt>{ s: &$ lt str } }\n+}\n+m! {'a}\n+\"#,\n+        expect![[r#\"\n+macro_rules! m {\n+    ($lt:lifetime) => { struct Ref<$lt>{ s: &$ lt str } }\n+}\n+struct Ref<'a> {\n+    s: &'a str\n+}\n+\"#]],\n+    );\n+}"}, {"sha": "8dd1f3311945b6e68326cb82790d81a39ac1ccb4", "filename": "crates/mbe/src/tests/expand.rs", "status": "modified", "additions": 0, "deletions": 37, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/6fd2f1d25b807a72660034dd05e80abf3c462594/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fd2f1d25b807a72660034dd05e80abf3c462594/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs?ref=6fd2f1d25b807a72660034dd05e80abf3c462594", "patch": "@@ -101,43 +101,6 @@ fn test_attr_to_token_tree() {\n     );\n }\n \n-#[test]\n-fn test_vertical_bar_with_pat() {\n-    parse_macro(\n-        r#\"\n-            macro_rules! foo {\n-                 (| $pat:pat | ) => { 0 }\n-            }\n-    \"#,\n-    )\n-    .assert_expand_items(r#\"foo! { | x | }\"#, r#\"0\"#);\n-}\n-\n-#[test]\n-fn test_dollar_crate_lhs_is_not_meta() {\n-    parse_macro(\n-        r#\"\n-macro_rules! foo {\n-    ($crate) => {};\n-    () => {0};\n-}\n-    \"#,\n-    )\n-    .assert_expand_items(r#\"foo!{}\"#, r#\"0\"#);\n-}\n-\n-#[test]\n-fn test_lifetime() {\n-    parse_macro(\n-        r#\"\n-        macro_rules! foo {\n-              ($ lt:lifetime) => { struct Ref<$ lt>{ s: &$ lt str } }\n-        }\n-\"#,\n-    )\n-    .assert_expand_items(r#\"foo!{'a}\"#, r#\"struct Ref <'a > {s : &'a str}\"#);\n-}\n-\n #[test]\n fn test_literal() {\n     parse_macro("}]}