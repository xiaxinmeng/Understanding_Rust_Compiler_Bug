{"sha": "ef73b3ae2eac3a03f5b966a4f8b2a568e3619d51", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmNzNiM2FlMmVhYzNhMDNmNWI5NjZhNGY4YjJhNTY4ZTM2MTlkNTE=", "commit": {"author": {"name": "Bryan Drewery", "email": "bryan@shatow.net", "date": "2018-03-01T17:18:16Z"}, "committer": {"name": "Bryan Drewery", "email": "bryan@shatow.net", "date": "2018-03-01T17:18:16Z"}, "message": "Add comment explaining when posix_spawn() can be supported.", "tree": {"sha": "dcf7a65f36af1e3147a0f891a7060091a01ce45e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dcf7a65f36af1e3147a0f891a7060091a01ce45e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef73b3ae2eac3a03f5b966a4f8b2a568e3619d51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef73b3ae2eac3a03f5b966a4f8b2a568e3619d51", "html_url": "https://github.com/rust-lang/rust/commit/ef73b3ae2eac3a03f5b966a4f8b2a568e3619d51", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef73b3ae2eac3a03f5b966a4f8b2a568e3619d51/comments", "author": {"login": "bdrewery", "id": 33693, "node_id": "MDQ6VXNlcjMzNjkz", "avatar_url": "https://avatars.githubusercontent.com/u/33693?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdrewery", "html_url": "https://github.com/bdrewery", "followers_url": "https://api.github.com/users/bdrewery/followers", "following_url": "https://api.github.com/users/bdrewery/following{/other_user}", "gists_url": "https://api.github.com/users/bdrewery/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdrewery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdrewery/subscriptions", "organizations_url": "https://api.github.com/users/bdrewery/orgs", "repos_url": "https://api.github.com/users/bdrewery/repos", "events_url": "https://api.github.com/users/bdrewery/events{/privacy}", "received_events_url": "https://api.github.com/users/bdrewery/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bdrewery", "id": 33693, "node_id": "MDQ6VXNlcjMzNjkz", "avatar_url": "https://avatars.githubusercontent.com/u/33693?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdrewery", "html_url": "https://github.com/bdrewery", "followers_url": "https://api.github.com/users/bdrewery/followers", "following_url": "https://api.github.com/users/bdrewery/following{/other_user}", "gists_url": "https://api.github.com/users/bdrewery/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdrewery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdrewery/subscriptions", "organizations_url": "https://api.github.com/users/bdrewery/orgs", "repos_url": "https://api.github.com/users/bdrewery/repos", "events_url": "https://api.github.com/users/bdrewery/events{/privacy}", "received_events_url": "https://api.github.com/users/bdrewery/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e2d9260f9425cd700199383096d8201190737de", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e2d9260f9425cd700199383096d8201190737de", "html_url": "https://github.com/rust-lang/rust/commit/2e2d9260f9425cd700199383096d8201190737de"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "bd6a8d3f64bee895dff362e9c309d44def511c7a", "filename": "src/libstd/sys/unix/process/process_unix.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ef73b3ae2eac3a03f5b966a4f8b2a568e3619d51/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef73b3ae2eac3a03f5b966a4f8b2a568e3619d51/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs?ref=ef73b3ae2eac3a03f5b966a4f8b2a568e3619d51", "patch": "@@ -242,6 +242,8 @@ impl Command {\n         Ok(None)\n     }\n \n+    // Only support platforms for which posix_spawn() can return ENOENT\n+    // directly.\n     #[cfg(any(target_os = \"macos\", target_os = \"freebsd\"))]\n     fn posix_spawn(&mut self, stdio: &ChildPipes, envp: Option<&CStringArray>)\n         -> io::Result<Option<Process>>"}]}