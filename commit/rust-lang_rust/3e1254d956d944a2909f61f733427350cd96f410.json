{"sha": "3e1254d956d944a2909f61f733427350cd96f410", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlMTI1NGQ5NTZkOTQ0YTI5MDlmNjFmNzMzNDI3MzUwY2Q5NmY0MTA=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-07-17T18:51:31Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-07-17T18:51:31Z"}, "message": "sync::Once: Use Acquire on the hot path, and explain why we don't use it elsewhere", "tree": {"sha": "806215f64765419d8d139a2c247c323c6f8bdbf2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/806215f64765419d8d139a2c247c323c6f8bdbf2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e1254d956d944a2909f61f733427350cd96f410", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e1254d956d944a2909f61f733427350cd96f410", "html_url": "https://github.com/rust-lang/rust/commit/3e1254d956d944a2909f61f733427350cd96f410", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e1254d956d944a2909f61f733427350cd96f410/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c84d8187395b641616649a0f16f15a78ea8bbce", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c84d8187395b641616649a0f16f15a78ea8bbce", "html_url": "https://github.com/rust-lang/rust/commit/1c84d8187395b641616649a0f16f15a78ea8bbce"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "443e2a6980d9eb85571a8db0bd4dda60211e3547", "filename": "src/libstd/sync/once.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3e1254d956d944a2909f61f733427350cd96f410/src%2Flibstd%2Fsync%2Fonce.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e1254d956d944a2909f61f733427350cd96f410/src%2Flibstd%2Fsync%2Fonce.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fonce.rs?ref=3e1254d956d944a2909f61f733427350cd96f410", "patch": "@@ -220,7 +220,11 @@ impl Once {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn call_once<F>(&self, f: F) where F: FnOnce() {\n         // Fast path, just see if we've completed initialization.\n-        if self.state.load(Ordering::SeqCst) == COMPLETE {\n+        // An `Acquire` load is enough because that makes all the initialization\n+        // operations visible to us. The cold path uses SeqCst consistently\n+        // because the performance difference really does not matter there,\n+        // and SeqCst minimizes the chances of something going wrong.\n+        if self.state.load(Ordering::Acquire) == COMPLETE {\n             return\n         }\n \n@@ -277,7 +281,11 @@ impl Once {\n     #[unstable(feature = \"once_poison\", issue = \"33577\")]\n     pub fn call_once_force<F>(&self, f: F) where F: FnOnce(&OnceState) {\n         // same as above, just with a different parameter to `call_inner`.\n-        if self.state.load(Ordering::SeqCst) == COMPLETE {\n+        // An `Acquire` load is enough because that makes all the initialization\n+        // operations visible to us. The cold path uses SeqCst consistently\n+        // because the performance difference really does not matter there,\n+        // and SeqCst minimizes the chances of something going wrong.\n+        if self.state.load(Ordering::Acquire) == COMPLETE {\n             return\n         }\n "}]}