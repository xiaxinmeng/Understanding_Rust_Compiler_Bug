{"sha": "f0b21c2d1e21a6502098ff86773fd1b0bb39ce10", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwYjIxYzJkMWUyMWE2NTAyMDk4ZmY4Njc3M2ZkMWIwYmIzOWNlMTA=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-06-17T02:34:18Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-06-17T05:21:25Z"}, "message": "Rename `ast::ExprKind::Again` -> `ast::ExprKind::Continue`", "tree": {"sha": "e097eabf44d7eb4587d514db06dea4b80596b095", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e097eabf44d7eb4587d514db06dea4b80596b095"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0b21c2d1e21a6502098ff86773fd1b0bb39ce10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0b21c2d1e21a6502098ff86773fd1b0bb39ce10", "html_url": "https://github.com/rust-lang/rust/commit/f0b21c2d1e21a6502098ff86773fd1b0bb39ce10", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0b21c2d1e21a6502098ff86773fd1b0bb39ce10/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "962d5c16b5bb8103785781e61e578ab5a784b1c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/962d5c16b5bb8103785781e61e578ab5a784b1c4", "html_url": "https://github.com/rust-lang/rust/commit/962d5c16b5bb8103785781e61e578ab5a784b1c4"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "70de40e17b3f447d4b04329e9b2cce4483802f85", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f0b21c2d1e21a6502098ff86773fd1b0bb39ce10/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0b21c2d1e21a6502098ff86773fd1b0bb39ce10/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=f0b21c2d1e21a6502098ff86773fd1b0bb39ce10", "patch": "@@ -1210,7 +1210,7 @@ impl<'a> LoweringContext<'a> {\n                     hir::ExprPath(hir_qself, self.lower_path(path))\n                 }\n                 ExprKind::Break(opt_ident) => hir::ExprBreak(self.lower_opt_sp_ident(opt_ident)),\n-                ExprKind::Again(opt_ident) => hir::ExprAgain(self.lower_opt_sp_ident(opt_ident)),\n+                ExprKind::Continue(opt_ident) => hir::ExprAgain(self.lower_opt_sp_ident(opt_ident)),\n                 ExprKind::Ret(ref e) => hir::ExprRet(e.as_ref().map(|x| self.lower_expr(x))),\n                 ExprKind::InlineAsm(InlineAsm {\n                         ref inputs,"}, {"sha": "199f0a4e9d5f4bfa01f14d3c4833341b5a8b283b", "filename": "src/librustc_passes/ast_validation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f0b21c2d1e21a6502098ff86773fd1b0bb39ce10/src%2Flibrustc_passes%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0b21c2d1e21a6502098ff86773fd1b0bb39ce10/src%2Flibrustc_passes%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fast_validation.rs?ref=f0b21c2d1e21a6502098ff86773fd1b0bb39ce10", "patch": "@@ -73,7 +73,7 @@ impl<'a, 'v> Visitor<'v> for AstValidator<'a> {\n         match expr.node {\n             ExprKind::While(_, _, Some(ident)) | ExprKind::Loop(_, Some(ident)) |\n             ExprKind::WhileLet(_, _, _, Some(ident)) | ExprKind::ForLoop(_, _, _, Some(ident)) |\n-            ExprKind::Break(Some(ident)) | ExprKind::Again(Some(ident)) => {\n+            ExprKind::Break(Some(ident)) | ExprKind::Continue(Some(ident)) => {\n                 self.check_label(ident.node, ident.span, expr.id);\n             }\n             _ => {}"}, {"sha": "1e527cac953cd2429a3428afc6003bef33b5c333", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f0b21c2d1e21a6502098ff86773fd1b0bb39ce10/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0b21c2d1e21a6502098ff86773fd1b0bb39ce10/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=f0b21c2d1e21a6502098ff86773fd1b0bb39ce10", "patch": "@@ -2988,7 +2988,7 @@ impl<'a> Resolver<'a> {\n                 })\n             }\n \n-            ExprKind::Break(Some(label)) | ExprKind::Again(Some(label)) => {\n+            ExprKind::Break(Some(label)) | ExprKind::Continue(Some(label)) => {\n                 match self.search_label(mtwt::resolve(label.node)) {\n                     None => {\n                         self.record_def(expr.id, err_path_resolution());"}, {"sha": "e55c2645e6e56e5aea615d3fd2923aaa2ed8b7f2", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f0b21c2d1e21a6502098ff86773fd1b0bb39ce10/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0b21c2d1e21a6502098ff86773fd1b0bb39ce10/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=f0b21c2d1e21a6502098ff86773fd1b0bb39ce10", "patch": "@@ -1020,7 +1020,7 @@ pub enum ExprKind {\n     /// A `break`, with an optional label to break\n     Break(Option<SpannedIdent>),\n     /// A `continue`, with an optional label\n-    Again(Option<SpannedIdent>),\n+    Continue(Option<SpannedIdent>),\n     /// A `return`, with an optional value to be returned\n     Ret(Option<P<Expr>>),\n "}, {"sha": "a9d89c9b55ca88e45c8481d4ac83e1fafe88fcd1", "filename": "src/libsyntax/fold.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f0b21c2d1e21a6502098ff86773fd1b0bb39ce10/src%2Flibsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0b21c2d1e21a6502098ff86773fd1b0bb39ce10/src%2Flibsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffold.rs?ref=f0b21c2d1e21a6502098ff86773fd1b0bb39ce10", "patch": "@@ -1238,7 +1238,7 @@ pub fn noop_fold_expr<T: Folder>(Expr {id, node, span, attrs}: Expr, folder: &mu\n                 respan(folder.new_span(label.span),\n                        folder.fold_ident(label.node)))\n             ),\n-            ExprKind::Again(opt_ident) => ExprKind::Again(opt_ident.map(|label|\n+            ExprKind::Continue(opt_ident) => ExprKind::Continue(opt_ident.map(|label|\n                 respan(folder.new_span(label.span),\n                        folder.fold_ident(label.node)))\n             ),"}, {"sha": "a3fbc3da955887c115a58545619f917f3a48bb11", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f0b21c2d1e21a6502098ff86773fd1b0bb39ce10/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0b21c2d1e21a6502098ff86773fd1b0bb39ce10/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=f0b21c2d1e21a6502098ff86773fd1b0bb39ce10", "patch": "@@ -2285,14 +2285,14 @@ impl<'a> Parser<'a> {\n                 }\n                 if self.eat_keyword(keywords::Continue) {\n                     let ex = if self.token.is_lifetime() {\n-                        let ex = ExprKind::Again(Some(Spanned{\n+                        let ex = ExprKind::Continue(Some(Spanned{\n                             node: self.get_lifetime(),\n                             span: self.span\n                         }));\n                         self.bump();\n                         ex\n                     } else {\n-                        ExprKind::Again(None)\n+                        ExprKind::Continue(None)\n                     };\n                     let hi = self.last_span.hi;\n                     return Ok(self.mk_expr(lo, hi, ex, attrs));"}, {"sha": "c257ea6a5369348c0923d6539abc6cf862592b0c", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f0b21c2d1e21a6502098ff86773fd1b0bb39ce10/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0b21c2d1e21a6502098ff86773fd1b0bb39ce10/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=f0b21c2d1e21a6502098ff86773fd1b0bb39ce10", "patch": "@@ -2184,7 +2184,7 @@ impl<'a> State<'a> {\n                     try!(space(&mut self.s));\n                 }\n             }\n-            ast::ExprKind::Again(opt_ident) => {\n+            ast::ExprKind::Continue(opt_ident) => {\n                 try!(word(&mut self.s, \"continue\"));\n                 try!(space(&mut self.s));\n                 if let Some(ident) = opt_ident {"}, {"sha": "2498f33f87350c2037daf9d3ef5b6c2d6b3f7eda", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f0b21c2d1e21a6502098ff86773fd1b0bb39ce10/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0b21c2d1e21a6502098ff86773fd1b0bb39ce10/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=f0b21c2d1e21a6502098ff86773fd1b0bb39ce10", "patch": "@@ -755,7 +755,7 @@ pub fn walk_expr<'v, V: Visitor<'v>>(visitor: &mut V, expression: &'v Expr) {\n             }\n             visitor.visit_path(path, expression.id)\n         }\n-        ExprKind::Break(ref opt_sp_ident) | ExprKind::Again(ref opt_sp_ident) => {\n+        ExprKind::Break(ref opt_sp_ident) | ExprKind::Continue(ref opt_sp_ident) => {\n             walk_opt_sp_ident(visitor, opt_sp_ident);\n         }\n         ExprKind::Ret(ref optional_expression) => {"}]}