{"sha": "da78c1fd43c39166e09dd4b5cf93a66396841c2d", "node_id": "C_kwDOAAsO6NoAKGRhNzhjMWZkNDNjMzkxNjZlMDlkZDRiNWNmOTNhNjYzOTY4NDFjMmQ", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-10-01T22:40:04Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-10-01T22:40:04Z"}, "message": "Make `feature(const_btree_len)` implied by `feature(const_btree_new)`", "tree": {"sha": "2da8cab03446052c7f8f1494818a7ac708fbbbb7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2da8cab03446052c7f8f1494818a7ac708fbbbb7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da78c1fd43c39166e09dd4b5cf93a66396841c2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da78c1fd43c39166e09dd4b5cf93a66396841c2d", "html_url": "https://github.com/rust-lang/rust/commit/da78c1fd43c39166e09dd4b5cf93a66396841c2d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da78c1fd43c39166e09dd4b5cf93a66396841c2d/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f606127be52016904ac7f770e443cb634c9cea34", "url": "https://api.github.com/repos/rust-lang/rust/commits/f606127be52016904ac7f770e443cb634c9cea34", "html_url": "https://github.com/rust-lang/rust/commit/f606127be52016904ac7f770e443cb634c9cea34"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "3687f84b1bd46f04a74ca2baad8e799eee0c866d", "filename": "library/alloc/src/collections/btree/map.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/da78c1fd43c39166e09dd4b5cf93a66396841c2d/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da78c1fd43c39166e09dd4b5cf93a66396841c2d/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs?ref=da78c1fd43c39166e09dd4b5cf93a66396841c2d", "patch": "@@ -2392,7 +2392,11 @@ impl<K, V, A: Allocator + Clone> BTreeMap<K, V, A> {\n     /// ```\n     #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    #[rustc_const_unstable(feature = \"const_btree_len\", issue = \"71835\")]\n+    #[rustc_const_unstable(\n+        feature = \"const_btree_len\",\n+        issue = \"71835\",\n+        implied_by = \"const_btree_new\"\n+    )]\n     pub const fn len(&self) -> usize {\n         self.length\n     }\n@@ -2413,7 +2417,11 @@ impl<K, V, A: Allocator + Clone> BTreeMap<K, V, A> {\n     /// ```\n     #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    #[rustc_const_unstable(feature = \"const_btree_len\", issue = \"71835\")]\n+    #[rustc_const_unstable(\n+        feature = \"const_btree_len\",\n+        issue = \"71835\",\n+        implied_by = \"const_btree_new\"\n+    )]\n     pub const fn is_empty(&self) -> bool {\n         self.len() == 0\n     }"}, {"sha": "5783d836e105d42c704bba9ecffcf1f9c8f612f8", "filename": "library/alloc/src/collections/btree/set.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/da78c1fd43c39166e09dd4b5cf93a66396841c2d/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da78c1fd43c39166e09dd4b5cf93a66396841c2d/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset.rs?ref=da78c1fd43c39166e09dd4b5cf93a66396841c2d", "patch": "@@ -1174,7 +1174,11 @@ impl<T, A: Allocator + Clone> BTreeSet<T, A> {\n     /// ```\n     #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    #[rustc_const_unstable(feature = \"const_btree_len\", issue = \"71835\")]\n+    #[rustc_const_unstable(\n+        feature = \"const_btree_len\",\n+        issue = \"71835\",\n+        implied_by = \"const_btree_new\"\n+    )]\n     pub const fn len(&self) -> usize {\n         self.map.len()\n     }\n@@ -1193,7 +1197,11 @@ impl<T, A: Allocator + Clone> BTreeSet<T, A> {\n     /// ```\n     #[must_use]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    #[rustc_const_unstable(feature = \"const_btree_len\", issue = \"71835\")]\n+    #[rustc_const_unstable(\n+        feature = \"const_btree_len\",\n+        issue = \"71835\",\n+        implied_by = \"const_btree_new\"\n+    )]\n     pub const fn is_empty(&self) -> bool {\n         self.len() == 0\n     }"}]}