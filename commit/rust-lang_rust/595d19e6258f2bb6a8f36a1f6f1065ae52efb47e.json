{"sha": "595d19e6258f2bb6a8f36a1f6f1065ae52efb47e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5NWQxOWU2MjU4ZjJiYjZhOGYzNmExZjZmMTA2NWFlNTJlZmI0N2U=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-10-25T17:21:37Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-10-25T17:21:37Z"}, "message": "rustc: replace a few `.cloned()` with `.copied()`.", "tree": {"sha": "738bbcb411577c73ff7e1e00893ef3eb44aee312", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/738bbcb411577c73ff7e1e00893ef3eb44aee312"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/595d19e6258f2bb6a8f36a1f6f1065ae52efb47e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/595d19e6258f2bb6a8f36a1f6f1065ae52efb47e", "html_url": "https://github.com/rust-lang/rust/commit/595d19e6258f2bb6a8f36a1f6f1065ae52efb47e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/595d19e6258f2bb6a8f36a1f6f1065ae52efb47e/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d81e9dd2ff873df9bb67da5c05d54b18d78b983", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d81e9dd2ff873df9bb67da5c05d54b18d78b983", "html_url": "https://github.com/rust-lang/rust/commit/4d81e9dd2ff873df9bb67da5c05d54b18d78b983"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "58e638e93ba34463c8409300280ea6e565839300", "filename": "src/librustc/hir/map/definitions.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/595d19e6258f2bb6a8f36a1f6f1065ae52efb47e/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/595d19e6258f2bb6a8f36a1f6f1065ae52efb47e/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs?ref=595d19e6258f2bb6a8f36a1f6f1065ae52efb47e", "patch": "@@ -359,7 +359,7 @@ impl Definitions {\n \n     #[inline]\n     pub fn opt_def_index(&self, node: ast::NodeId) -> Option<DefIndex> {\n-        self.node_to_def_index.get(&node).cloned()\n+        self.node_to_def_index.get(&node).copied()\n     }\n \n     #[inline]\n@@ -413,7 +413,7 @@ impl Definitions {\n     #[inline]\n     pub fn opt_span(&self, def_id: DefId) -> Option<Span> {\n         if def_id.krate == LOCAL_CRATE {\n-            self.def_index_to_span.get(&def_id.index).cloned()\n+            self.def_index_to_span.get(&def_id.index).copied()\n         } else {\n             None\n         }\n@@ -525,7 +525,7 @@ impl Definitions {\n     }\n \n     pub fn expansion_that_defined(&self, index: DefIndex) -> ExpnId {\n-        self.expansions_that_defined.get(&index).cloned().unwrap_or(ExpnId::root())\n+        self.expansions_that_defined.get(&index).copied().unwrap_or(ExpnId::root())\n     }\n \n     pub fn parent_module_of_macro_def(&self, expn_id: ExpnId) -> DefId {"}]}