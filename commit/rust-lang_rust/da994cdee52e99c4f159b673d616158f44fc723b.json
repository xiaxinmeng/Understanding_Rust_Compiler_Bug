{"sha": "da994cdee52e99c4f159b673d616158f44fc723b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhOTk0Y2RlZTUyZTk5YzRmMTU5YjY3M2Q2MTYxNThmNDRmYzcyM2I=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-03-10T22:51:16Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-03-11T00:18:25Z"}, "message": "Rollup merge of #40092 - sinkuu:fix_suggestion_index, r=pnkfelix\n\nFix suggestion span error with a line containing multibyte characters\n\nThis PR fixes broken suggestions caused by multibyte characters.\n\ne.g. for this code, rustc provides a broken suggestion ([playground](https://is.gd/DWGLu7)):\n\n```rust\nfn main() {\n    let tup = (1,);\n    println!(\"\u2603{}\", tup[0]);\n}\n```\n\n```\nerror: cannot index a value of type `({integer},)`\n --> <anon>:3:21\n  |\n3 |     println!(\"\u2603{}\", tup[0]);\n  |                     ^^^^^^\n  |\nhelp: to access tuple elements, use tuple indexing syntax as shown\n  |     println!(\"\u2603{}\"tup.00]);\n\nerror: aborting due to previous error\n```\n\n`CodeSuggestion::splice_lines` is misusing `Loc.col` (`CharPos`) as a byte offset when slicing source.", "tree": {"sha": "1e9bc561832f20135c86442514dfeb60d271120f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e9bc561832f20135c86442514dfeb60d271120f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da994cdee52e99c4f159b673d616158f44fc723b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da994cdee52e99c4f159b673d616158f44fc723b", "html_url": "https://github.com/rust-lang/rust/commit/da994cdee52e99c4f159b673d616158f44fc723b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da994cdee52e99c4f159b673d616158f44fc723b/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b92073dd521515a902c6354ad94f0adf4cf5c8a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/b92073dd521515a902c6354ad94f0adf4cf5c8a5", "html_url": "https://github.com/rust-lang/rust/commit/b92073dd521515a902c6354ad94f0adf4cf5c8a5"}, {"sha": "8a64cf7fb72ca93608be19e13dd83c23168b17d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a64cf7fb72ca93608be19e13dd83c23168b17d7", "html_url": "https://github.com/rust-lang/rust/commit/8a64cf7fb72ca93608be19e13dd83c23168b17d7"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "4c889dad8ca5050b0803be1a360b84bfda96fbb0", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/da994cdee52e99c4f159b673d616158f44fc723b/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da994cdee52e99c4f159b673d616158f44fc723b/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=da994cdee52e99c4f159b673d616158f44fc723b", "patch": "@@ -90,7 +90,8 @@ impl CodeSuggestion {\n                          hi_opt: Option<&Loc>) {\n             let (lo, hi_opt) = (lo.col.to_usize(), hi_opt.map(|hi| hi.col.to_usize()));\n             if let Some(line) = line_opt {\n-                if line.len() > lo {\n+                if let Some(lo) = line.char_indices().map(|(i, _)| i).nth(lo) {\n+                    let hi_opt = hi_opt.and_then(|hi| line.char_indices().map(|(i, _)| i).nth(hi));\n                     buf.push_str(match hi_opt {\n                         Some(hi) => &line[lo..hi],\n                         None => &line[lo..],"}, {"sha": "67dbe1dc7b5668fbeb8d389e57a5d970d536891f", "filename": "src/test/ui/span/suggestion-non-ascii.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/da994cdee52e99c4f159b673d616158f44fc723b/src%2Ftest%2Fui%2Fspan%2Fsuggestion-non-ascii.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da994cdee52e99c4f159b673d616158f44fc723b/src%2Ftest%2Fui%2Fspan%2Fsuggestion-non-ascii.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fsuggestion-non-ascii.rs?ref=da994cdee52e99c4f159b673d616158f44fc723b", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+\n+fn main() {\n+    let tup = (1,);\n+    println!(\"\u2603{}\", tup[0]);\n+}\n+"}, {"sha": "385c211f393c6c9f94cc88f3c096e15e8880bf59", "filename": "src/test/ui/span/suggestion-non-ascii.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/da994cdee52e99c4f159b673d616158f44fc723b/src%2Ftest%2Fui%2Fspan%2Fsuggestion-non-ascii.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/da994cdee52e99c4f159b673d616158f44fc723b/src%2Ftest%2Fui%2Fspan%2Fsuggestion-non-ascii.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fsuggestion-non-ascii.stderr?ref=da994cdee52e99c4f159b673d616158f44fc723b", "patch": "@@ -0,0 +1,11 @@\n+error: cannot index a value of type `({integer},)`\n+  --> $DIR/suggestion-non-ascii.rs:14:21\n+   |\n+14 |     println!(\"\u2603{}\", tup[0]);\n+   |                     ^^^^^^\n+   |\n+help: to access tuple elements, use tuple indexing syntax as shown\n+   |     println!(\"\u2603{}\", tup.0);\n+\n+error: aborting due to previous error\n+"}]}