{"sha": "1f85c711aff340ac8da97b944e8f202219327f15", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmODVjNzExYWZmMzQwYWM4ZGE5N2I5NDRlOGYyMDIyMTkzMjdmMTU=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-01-20T22:07:57Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-01-20T22:07:57Z"}, "message": "fix long lines", "tree": {"sha": "4d4c2e9f3dab4eaa2223fbb14339e20adf02ef98", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d4c2e9f3dab4eaa2223fbb14339e20adf02ef98"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f85c711aff340ac8da97b944e8f202219327f15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f85c711aff340ac8da97b944e8f202219327f15", "html_url": "https://github.com/rust-lang/rust/commit/1f85c711aff340ac8da97b944e8f202219327f15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f85c711aff340ac8da97b944e8f202219327f15/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b86c90b73a31fda69a78f251cf7cebdb86fcdba5", "url": "https://api.github.com/repos/rust-lang/rust/commits/b86c90b73a31fda69a78f251cf7cebdb86fcdba5", "html_url": "https://github.com/rust-lang/rust/commit/b86c90b73a31fda69a78f251cf7cebdb86fcdba5"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "1e526c5d08f4de1f68568b7ba80dcd3a0f8d6dd8", "filename": "src/libcore/send_map.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1f85c711aff340ac8da97b944e8f202219327f15/src%2Flibcore%2Fsend_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f85c711aff340ac8da97b944e8f202219327f15/src%2Flibcore%2Fsend_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fsend_map.rs?ref=1f85c711aff340ac8da97b944e8f202219327f15", "patch": "@@ -474,8 +474,12 @@ pub mod linear {\n     }\n \n     impl <T: Hash IterBytes Eq> LinearSet<T>: Eq {\n-        pure fn eq(&self, other: &LinearSet<T>) -> bool { self.map == other.map }\n-        pure fn ne(&self, other: &LinearSet<T>) -> bool { self.map != other.map }\n+        pure fn eq(&self, other: &LinearSet<T>) -> bool {\n+            self.map == other.map\n+        }\n+        pure fn ne(&self, other: &LinearSet<T>) -> bool {\n+            self.map != other.map\n+        }\n     }\n \n     impl <T: Hash IterBytes Eq> LinearSet<T>: Set<T> {"}]}