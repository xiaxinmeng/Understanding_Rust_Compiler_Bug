{"sha": "01f65afa4adff6dfbea84621e6851c028aaa7159", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxZjY1YWZhNGFkZmY2ZGZiZWE4NDYyMWU2ODUxYzAyOGFhYTcxNTk=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2020-09-14T14:21:38Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2020-09-14T14:21:38Z"}, "message": "diag: improve closure/generic parameter mismatch\n\nThis commit improves the diagnostic when a type parameter is expected\nand a closure is found, noting that each closure has a distinct type and\ntherefore could not always match the caller-chosen type of the\nparameter.\n\nSigned-off-by: David Wood <david@davidtw.co>", "tree": {"sha": "53426d492d50b6db269e91bce49a8a6196b22263", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53426d492d50b6db269e91bce49a8a6196b22263"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01f65afa4adff6dfbea84621e6851c028aaa7159", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEfgm2/wUjk9OnjxlyJZLnbIc4H9kFAl9ffK0ACgkQJZLnbIc4\nH9k5gRAAlwWy29eOC33rbqdG95qKm6m+dAqRuTUeKFIXHEcHxOt6ytmINqjancCd\nMPe80sEzFNeXChMi1UAF002jlAghyXbOM+8hs23FelSaXAQOBiUETnmZFMWb2veS\nw/liCn0Jpan8tlCp9boJpOwB/XhKJSC+QhQA4nhSBiwbaaBy5E7SvoWyzH8pJN9E\nL4pGEHZsCsXbiCBVZ4++g9kY/+WN2AEJSLvgAGGjPQmGpBj/GDw+JZGKYB6PUAVL\nw7s1PrB5ntnlDpxXGm7fODkqWY2Eug+0DC8+ERjEnMcOjx8F16EzJGGLnxws7ERX\ngtcVXbQhIYw40sIngZ23RnA2EMzHUoJfugfxp6/ONEHVGTCXi5c0Xls0FFMFv4M9\nt2SVj3rMNQe5exRSo5xJsE0UVgwjh0o8y6v4XwT1fCATitNb/+ZN1otz+Lcnwe13\n35SxKi3mBVioQArXVzakf2CRIlV5NefsGaEjnWt7TnbeUo4HA2JSorjmQz26B5zk\nXtZTH/zN+fhBy5ONY3GRoHO3ag+dW8EvArw9nSeRNMM6DnombPRgIyv9X/mv5aXW\nEYtKEPmoNNX4UdNPSSsWSufHs2MrhgAQKAVuS2DAHYHM8rzA0fpeJil2H/tMXvX5\nPvnd1LHabDtqCJd4YMrIrKaZ7qBjwZhft6kKoAAqcw9MgpOJPgw=\n=+fFA\n-----END PGP SIGNATURE-----", "payload": "tree 53426d492d50b6db269e91bce49a8a6196b22263\nparent b5f55b7e1562286798358730e06b0ba13b4c0ea6\nauthor David Wood <david@davidtw.co> 1600093298 +0100\ncommitter David Wood <david@davidtw.co> 1600093298 +0100\n\ndiag: improve closure/generic parameter mismatch\n\nThis commit improves the diagnostic when a type parameter is expected\nand a closure is found, noting that each closure has a distinct type and\ntherefore could not always match the caller-chosen type of the\nparameter.\n\nSigned-off-by: David Wood <david@davidtw.co>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01f65afa4adff6dfbea84621e6851c028aaa7159", "html_url": "https://github.com/rust-lang/rust/commit/01f65afa4adff6dfbea84621e6851c028aaa7159", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01f65afa4adff6dfbea84621e6851c028aaa7159/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5f55b7e1562286798358730e06b0ba13b4c0ea6", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5f55b7e1562286798358730e06b0ba13b4c0ea6", "html_url": "https://github.com/rust-lang/rust/commit/b5f55b7e1562286798358730e06b0ba13b4c0ea6"}], "stats": {"total": 42, "additions": 37, "deletions": 5}, "files": [{"sha": "fadb1d39f97371435566be32c973a750e91f8dac", "filename": "compiler/rustc_middle/src/ty/error.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/01f65afa4adff6dfbea84621e6851c028aaa7159/compiler%2Frustc_middle%2Fsrc%2Fty%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01f65afa4adff6dfbea84621e6851c028aaa7159/compiler%2Frustc_middle%2Fsrc%2Fty%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Ferror.rs?ref=01f65afa4adff6dfbea84621e6851c028aaa7159", "patch": "@@ -473,6 +473,18 @@ impl<T> Trait<T> for X {\n                                  #traits-as-parameters\",\n                         );\n                     }\n+                    (ty::Param(p), ty::Closure(..) | ty::Generator(..)) => {\n+                        let generics = self.generics_of(body_owner_def_id);\n+                        let p_span = self.def_span(generics.type_param(p, self).def_id);\n+                        if !sp.contains(p_span) {\n+                            db.span_label(p_span, \"this type parameter\");\n+                        }\n+                        db.help(&format!(\n+                            \"every closure has a distinct type and so could not always match the \\\n+                             caller-chosen type of parameter `{}`\",\n+                            p\n+                        ));\n+                    }\n                     (ty::Param(p), _) | (_, ty::Param(p)) => {\n                         let generics = self.generics_of(body_owner_def_id);\n                         let p_span = self.def_span(generics.type_param(p, self).def_id);"}, {"sha": "7d4bdcd9e7d6a755a249986b95ae4016bb740426", "filename": "compiler/rustc_typeck/src/check/demand.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/01f65afa4adff6dfbea84621e6851c028aaa7159/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01f65afa4adff6dfbea84621e6851c028aaa7159/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs?ref=01f65afa4adff6dfbea84621e6851c028aaa7159", "patch": "@@ -117,11 +117,10 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         ty\n     }\n \n-    // Checks that the type of `expr` can be coerced to `expected`.\n-    //\n-    // N.B., this code relies on `self.diverges` to be accurate. In\n-    // particular, assignments to `!` will be permitted if the\n-    // diverges flag is currently \"always\".\n+    /// Checks that the type of `expr` can be coerced to `expected`.\n+    ///\n+    /// N.B., this code relies on `self.diverges` to be accurate. In particular, assignments to `!`\n+    /// will be permitted if the diverges flag is currently \"always\".\n     pub fn demand_coerce_diag(\n         &self,\n         expr: &hir::Expr<'_>,"}, {"sha": "12903f79010cbafd3118ed660301446afcf797a5", "filename": "src/test/ui/issues/issue-51154.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/01f65afa4adff6dfbea84621e6851c028aaa7159/src%2Ftest%2Fui%2Fissues%2Fissue-51154.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01f65afa4adff6dfbea84621e6851c028aaa7159/src%2Ftest%2Fui%2Fissues%2Fissue-51154.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-51154.rs?ref=01f65afa4adff6dfbea84621e6851c028aaa7159", "patch": "@@ -0,0 +1,6 @@\n+fn foo<F: FnMut()>() {\n+    let _: Box<F> = Box::new(|| ());\n+    //~^ ERROR mismatched types\n+}\n+\n+fn main() {}"}, {"sha": "3c3428f3096a8d282912dc512fe28bd1db9c2646", "filename": "src/test/ui/issues/issue-51154.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/01f65afa4adff6dfbea84621e6851c028aaa7159/src%2Ftest%2Fui%2Fissues%2Fissue-51154.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/01f65afa4adff6dfbea84621e6851c028aaa7159/src%2Ftest%2Fui%2Fissues%2Fissue-51154.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-51154.stderr?ref=01f65afa4adff6dfbea84621e6851c028aaa7159", "patch": "@@ -0,0 +1,15 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-51154.rs:2:30\n+   |\n+LL | fn foo<F: FnMut()>() {\n+   |        - this type parameter\n+LL |     let _: Box<F> = Box::new(|| ());\n+   |                              ^^^^^ expected type parameter `F`, found closure\n+   |\n+   = note: expected type parameter `F`\n+                     found closure `[closure@$DIR/issue-51154.rs:2:30: 2:35]`\n+   = help: every closure has a distinct type and so could not always match the caller-chosen type of parameter `F`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}]}