{"sha": "2becb621667caec05f01198f80e0d430315935e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiZWNiNjIxNjY3Y2FlYzA1ZjAxMTk4ZjgwZTBkNDMwMzE1OTM1ZTU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-30T03:37:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-07-30T03:37:44Z"}, "message": "Rollup merge of #63109 - alexcrichton:disable-windows-fs-test, r=sfackler\n\nstd: Fix a failing `fs` test on Windows\n\nIn testing 4-core machines on Azure the `realpath_works_tricky` test in\nthe standard library is failing with \"The directory name is invalid\". In\nattempting to debug this test I was able to reproduce the failure\nlocally on my machine, and after inspecing the test it I believe is\nexploiting Unix-specific behavior that seems to only sometimes work on\nWindows. Specifically the test basically executes:\n\n    mkdir -p a/b\n    mkdir -p a/d\n    touch a/f\n    ln -s a/b/c ../d/e\n    ln -s a/d/e ../f\n\nand then asserts that `canonicalize(\"a/b/c\")` and\n`canonicalize(\"a/d/e\")` are equivalent to `a/f`. On Windows however the\nfirst symlink is a \"directory symlink\" and the second is a file symlink.\nIn both cases, though, they're pointing to files. This means that for\nwhatever reason locally and on the 4-core environment the call to\n`canonicalize` is failing. On Azure today it seems to be passing, and\nI'm not entirely sure why. I'm sort of presuming that there's some sort\nof internals going on here where there's some global Windows setting\nwhich makes symlinks behavior more unix-like and ignore the directory\nhint.\n\nIn any case this should keep the test working and also fixes the test\nlocally for me. It's also worth pointing out that this test was made Windows compatible in https://github.com/rust-lang/rust/pull/31360, a pretty ancient PR at this point.", "tree": {"sha": "717371da9d8d3b98e902f3013aae0d249c187120", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/717371da9d8d3b98e902f3013aae0d249c187120"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2becb621667caec05f01198f80e0d430315935e5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdP7uICRBK7hj4Ov3rIwAAdHIIAF+bDQci5lGe7Y34Fwr+foQD\nVJvIbggo/fI35Yx7mTAyJBORqpFqsqzZ7v6P7rGLcg/jPIVDYbXgz8Gy5l5hwB+N\n1nm6Z1XLsLZuR7xRK/6i7rVuo4Rt/iLt7qsEnzbttzVmCm2PoXHhUR56QuJ8QwAm\nw+N4g7oK4MVeSGhoCtEc4VxSWxL6n3Lp7ijLi3/+BEq6HViMhHhNoPUhgekJLbh4\n5VeQD6j7HG65qg3evFccmOuQXBGi1GzvlEuMhOYuKOlhO6vc9SoCtE/GTeKONfEO\nyt26DVt0eQuU0ON/5YCjR1MlKOymN6aXZQB0S05NQzttuS/h1LAg5uUOsVq23X4=\n=xpe6\n-----END PGP SIGNATURE-----\n", "payload": "tree 717371da9d8d3b98e902f3013aae0d249c187120\nparent a03caecc53c9a668a6cecbc0dd2c6b0c316dd775\nparent 8d7fb87e6521c39af2e4fca11c61ab2eb765df82\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1564457864 +0200\ncommitter GitHub <noreply@github.com> 1564457864 +0200\n\nRollup merge of #63109 - alexcrichton:disable-windows-fs-test, r=sfackler\n\nstd: Fix a failing `fs` test on Windows\n\nIn testing 4-core machines on Azure the `realpath_works_tricky` test in\nthe standard library is failing with \"The directory name is invalid\". In\nattempting to debug this test I was able to reproduce the failure\nlocally on my machine, and after inspecing the test it I believe is\nexploiting Unix-specific behavior that seems to only sometimes work on\nWindows. Specifically the test basically executes:\n\n    mkdir -p a/b\n    mkdir -p a/d\n    touch a/f\n    ln -s a/b/c ../d/e\n    ln -s a/d/e ../f\n\nand then asserts that `canonicalize(\"a/b/c\")` and\n`canonicalize(\"a/d/e\")` are equivalent to `a/f`. On Windows however the\nfirst symlink is a \"directory symlink\" and the second is a file symlink.\nIn both cases, though, they're pointing to files. This means that for\nwhatever reason locally and on the 4-core environment the call to\n`canonicalize` is failing. On Azure today it seems to be passing, and\nI'm not entirely sure why. I'm sort of presuming that there's some sort\nof internals going on here where there's some global Windows setting\nwhich makes symlinks behavior more unix-like and ignore the directory\nhint.\n\nIn any case this should keep the test working and also fixes the test\nlocally for me. It's also worth pointing out that this test was made Windows compatible in https://github.com/rust-lang/rust/pull/31360, a pretty ancient PR at this point.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2becb621667caec05f01198f80e0d430315935e5", "html_url": "https://github.com/rust-lang/rust/commit/2becb621667caec05f01198f80e0d430315935e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2becb621667caec05f01198f80e0d430315935e5/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a03caecc53c9a668a6cecbc0dd2c6b0c316dd775", "url": "https://api.github.com/repos/rust-lang/rust/commits/a03caecc53c9a668a6cecbc0dd2c6b0c316dd775", "html_url": "https://github.com/rust-lang/rust/commit/a03caecc53c9a668a6cecbc0dd2c6b0c316dd775"}, {"sha": "8d7fb87e6521c39af2e4fca11c61ab2eb765df82", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d7fb87e6521c39af2e4fca11c61ab2eb765df82", "html_url": "https://github.com/rust-lang/rust/commit/8d7fb87e6521c39af2e4fca11c61ab2eb765df82"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "f7c32a5c20d3d0aacd8562170fc7a8749806730f", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2becb621667caec05f01198f80e0d430315935e5/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2becb621667caec05f01198f80e0d430315935e5/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=2becb621667caec05f01198f80e0d430315935e5", "patch": "@@ -3316,11 +3316,11 @@ mod tests {\n         fs::create_dir_all(&d).unwrap();\n         File::create(&f).unwrap();\n         if cfg!(not(windows)) {\n-            symlink_dir(\"../d/e\", &c).unwrap();\n+            symlink_file(\"../d/e\", &c).unwrap();\n             symlink_file(\"../f\", &e).unwrap();\n         }\n         if cfg!(windows) {\n-            symlink_dir(r\"..\\d\\e\", &c).unwrap();\n+            symlink_file(r\"..\\d\\e\", &c).unwrap();\n             symlink_file(r\"..\\f\", &e).unwrap();\n         }\n "}]}