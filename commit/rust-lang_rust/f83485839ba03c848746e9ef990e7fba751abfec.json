{"sha": "f83485839ba03c848746e9ef990e7fba751abfec", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4MzQ4NTgzOWJhMDNjODQ4NzQ2ZTllZjk5MGU3ZmJhNzUxYWJmZWM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-10T16:18:15Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-10T16:18:15Z"}, "message": "better change visibility assist\n\n* don't add visibility before #derive\n* suggest changing pub(crate) into pub", "tree": {"sha": "aa52c6c6cf575368ff7ec81a471323742113b23b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa52c6c6cf575368ff7ec81a471323742113b23b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f83485839ba03c848746e9ef990e7fba751abfec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f83485839ba03c848746e9ef990e7fba751abfec", "html_url": "https://github.com/rust-lang/rust/commit/f83485839ba03c848746e9ef990e7fba751abfec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f83485839ba03c848746e9ef990e7fba751abfec/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "acd90bc33b6111b47af68d51ec668bf027afb31d", "url": "https://api.github.com/repos/rust-lang/rust/commits/acd90bc33b6111b47af68d51ec668bf027afb31d", "html_url": "https://github.com/rust-lang/rust/commit/acd90bc33b6111b47af68d51ec668bf027afb31d"}], "stats": {"total": 69, "additions": 59, "deletions": 10}, "files": [{"sha": "6e8bc263241e08ba667ecd259a7cb22d648a577d", "filename": "crates/ra_ide_api_light/src/assists/change_visibility.rs", "status": "modified", "additions": 59, "deletions": 10, "changes": 69, "blob_url": "https://github.com/rust-lang/rust/blob/f83485839ba03c848746e9ef990e7fba751abfec/crates%2Fra_ide_api_light%2Fsrc%2Fassists%2Fchange_visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f83485839ba03c848746e9ef990e7fba751abfec/crates%2Fra_ide_api_light%2Fsrc%2Fassists%2Fchange_visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2Fsrc%2Fassists%2Fchange_visibility.rs?ref=f83485839ba03c848746e9ef990e7fba751abfec", "patch": "@@ -1,7 +1,7 @@\n use ra_syntax::{\n-    AstNode,\n+    AstNode, SyntaxNode, TextUnit,\n     ast::{self, VisibilityOwner, NameOwner},\n-    SyntaxKind::{VISIBILITY, FN_KW, MOD_KW, STRUCT_KW, ENUM_KW, TRAIT_KW, FN_DEF, MODULE, STRUCT_DEF, ENUM_DEF, TRAIT_DEF, IDENT},\n+    SyntaxKind::{VISIBILITY, FN_KW, MOD_KW, STRUCT_KW, ENUM_KW, TRAIT_KW, FN_DEF, MODULE, STRUCT_DEF, ENUM_DEF, TRAIT_DEF, IDENT, WHITESPACE, COMMENT, ATTR},\n };\n \n use crate::assists::{AssistCtx, Assist};\n@@ -30,14 +30,14 @@ fn add_vis(ctx: AssistCtx) -> Option<Assist> {\n         if parent.children().any(|child| child.kind() == VISIBILITY) {\n             return None;\n         }\n-        parent.range().start()\n+        vis_offset(parent)\n     } else {\n         let ident = ctx.leaf_at_offset().find(|leaf| leaf.kind() == IDENT)?;\n         let field = ident.ancestors().find_map(ast::NamedFieldDef::cast)?;\n         if field.name()?.syntax().range() != ident.range() && field.visibility().is_some() {\n             return None;\n         }\n-        field.syntax().range().start()\n+        vis_offset(field.syntax())\n     };\n \n     ctx.build(\"make pub(crate)\", |edit| {\n@@ -46,14 +46,31 @@ fn add_vis(ctx: AssistCtx) -> Option<Assist> {\n     })\n }\n \n+fn vis_offset(node: &SyntaxNode) -> TextUnit {\n+    node.children()\n+        .skip_while(|it| match it.kind() {\n+            WHITESPACE | COMMENT | ATTR => true,\n+            _ => false,\n+        })\n+        .next()\n+        .map(|it| it.range().start())\n+        .unwrap_or(node.range().start())\n+}\n+\n fn change_vis(ctx: AssistCtx, vis: &ast::Visibility) -> Option<Assist> {\n-    if vis.syntax().text() != \"pub\" {\n-        return None;\n+    if vis.syntax().text() == \"pub\" {\n+        return ctx.build(\"chage to pub(crate)\", |edit| {\n+            edit.replace(vis.syntax().range(), \"pub(crate)\");\n+            edit.set_cursor(vis.syntax().range().start());\n+        });\n     }\n-    ctx.build(\"chage to pub(crate)\", |edit| {\n-        edit.replace(vis.syntax().range(), \"pub(crate)\");\n-        edit.set_cursor(vis.syntax().range().start());\n-    })\n+    if vis.syntax().text() == \"pub(crate)\" {\n+        return ctx.build(\"chage to pub\", |edit| {\n+            edit.replace(vis.syntax().range(), \"pub\");\n+            edit.set_cursor(vis.syntax().range().start());\n+        });\n+    }\n+    None\n }\n \n #[cfg(test)]\n@@ -113,4 +130,36 @@ mod tests {\n             \"<|>pub(crate) fn foo() {}\",\n         )\n     }\n+\n+    #[test]\n+    fn change_visibility_pub_crate_to_pub() {\n+        check_assist(\n+            change_visibility,\n+            \"<|>pub(crate) fn foo() {}\",\n+            \"<|>pub fn foo() {}\",\n+        )\n+    }\n+\n+    #[test]\n+    fn change_visibility_handles_comment_attrs() {\n+        check_assist(\n+            change_visibility,\n+            \"\n+            /// docs\n+\n+            // comments\n+\n+            #[derive(Debug)]\n+            <|>struct Foo;\n+            \",\n+            \"\n+            /// docs\n+\n+            // comments\n+\n+            #[derive(Debug)]\n+            <|>pub(crate) struct Foo;\n+            \",\n+        )\n+    }\n }"}]}