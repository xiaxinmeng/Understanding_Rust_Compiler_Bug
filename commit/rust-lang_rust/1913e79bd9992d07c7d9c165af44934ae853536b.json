{"sha": "1913e79bd9992d07c7d9c165af44934ae853536b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5MTNlNzliZDk5OTJkMDdjN2Q5YzE2NWFmNDQ5MzRhZTg1MzUzNmI=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-02-24T21:51:11Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-02-24T21:51:11Z"}, "message": "Rollup merge of #22758 - ejjeong:aarch64-linux-android, r=alexcrichton\n\n This commit has already been merged in #21774,\nbut i think it has been accidently overriden by #22584 and #22480.\nr? @alexcrichton", "tree": {"sha": "15a9592c5186fd56004bdf243f9131fce4f4bafe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/15a9592c5186fd56004bdf243f9131fce4f4bafe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1913e79bd9992d07c7d9c165af44934ae853536b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1913e79bd9992d07c7d9c165af44934ae853536b", "html_url": "https://github.com/rust-lang/rust/commit/1913e79bd9992d07c7d9c165af44934ae853536b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1913e79bd9992d07c7d9c165af44934ae853536b/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ff8b8aa8fba8e05c2f19d41f2722a58f0fd3302", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ff8b8aa8fba8e05c2f19d41f2722a58f0fd3302", "html_url": "https://github.com/rust-lang/rust/commit/4ff8b8aa8fba8e05c2f19d41f2722a58f0fd3302"}, {"sha": "0afebe63dd0b8e01cac824e86de7df6d6fd29bbd", "url": "https://api.github.com/repos/rust-lang/rust/commits/0afebe63dd0b8e01cac824e86de7df6d6fd29bbd", "html_url": "https://github.com/rust-lang/rust/commit/0afebe63dd0b8e01cac824e86de7df6d6fd29bbd"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "68c5c65e7cdb11cfac9bf64ff25732d8efbba32b", "filename": "src/libstd/sys/unix/process.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1913e79bd9992d07c7d9c165af44934ae853536b/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1913e79bd9992d07c7d9c165af44934ae853536b/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs?ref=1913e79bd9992d07c7d9c165af44934ae853536b", "patch": "@@ -69,7 +69,6 @@ impl Process {\n               K: BytesContainer + Eq + Hash, V: BytesContainer\n     {\n         use libc::funcs::posix88::unistd::{fork, dup2, close, chdir, execvp};\n-        use libc::funcs::bsd44::getdtablesize;\n \n         mod rustrt {\n             extern {\n@@ -82,6 +81,15 @@ impl Process {\n             assert_eq!(ret, 0);\n         }\n \n+        #[cfg(all(target_os = \"android\", target_arch = \"aarch64\"))]\n+        unsafe fn getdtablesize() -> c_int {\n+            libc::sysconf(libc::consts::os::sysconf::_SC_OPEN_MAX) as c_int\n+        }\n+        #[cfg(not(all(target_os = \"android\", target_arch = \"aarch64\")))]\n+        unsafe fn getdtablesize() -> c_int {\n+            libc::funcs::bsd44::getdtablesize()\n+        }\n+\n         let dirp = cfg.cwd().map(|c| c.as_ptr()).unwrap_or(ptr::null());\n \n         // temporary until unboxed closures land"}, {"sha": "b7a1b002f55983a0048fc742f2a0167a8be32ecc", "filename": "src/libstd/sys/unix/process2.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1913e79bd9992d07c7d9c165af44934ae853536b/src%2Flibstd%2Fsys%2Funix%2Fprocess2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1913e79bd9992d07c7d9c165af44934ae853536b/src%2Flibstd%2Fsys%2Funix%2Fprocess2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess2.rs?ref=1913e79bd9992d07c7d9c165af44934ae853536b", "patch": "@@ -141,7 +141,6 @@ impl Process {\n                  -> io::Result<Process>\n     {\n         use libc::funcs::posix88::unistd::{fork, dup2, close, chdir, execvp};\n-        use libc::funcs::bsd44::getdtablesize;\n \n         mod rustrt {\n             extern {\n@@ -154,6 +153,16 @@ impl Process {\n             assert_eq!(ret, 0);\n         }\n \n+        #[cfg(all(target_os = \"android\", target_arch = \"aarch64\"))]\n+        unsafe fn getdtablesize() -> c_int {\n+            libc::sysconf(libc::consts::os::sysconf::_SC_OPEN_MAX) as c_int\n+        }\n+\n+        #[cfg(not(all(target_os = \"android\", target_arch = \"aarch64\")))]\n+        unsafe fn getdtablesize() -> c_int {\n+            libc::funcs::bsd44::getdtablesize()\n+        }\n+\n         let dirp = cfg.cwd.as_ref().map(|c| c.as_ptr()).unwrap_or(ptr::null());\n \n         with_envp(cfg.env.as_ref(), |envp: *const c_void| {"}]}