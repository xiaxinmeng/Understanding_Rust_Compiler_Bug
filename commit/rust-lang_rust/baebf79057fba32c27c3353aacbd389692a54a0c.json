{"sha": "baebf79057fba32c27c3353aacbd389692a54a0c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhZWJmNzkwNTdmYmEzMmMyN2MzMzUzYWFjYmQzODk2OTJhNTRhMGM=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2019-04-09T07:36:17Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2019-04-15T05:23:04Z"}, "message": "Move modules outside the proc macro", "tree": {"sha": "cc12ca826d1f1edebee1cccfa1f814cb87f0b51a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc12ca826d1f1edebee1cccfa1f814cb87f0b51a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/baebf79057fba32c27c3353aacbd389692a54a0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/baebf79057fba32c27c3353aacbd389692a54a0c", "html_url": "https://github.com/rust-lang/rust/commit/baebf79057fba32c27c3353aacbd389692a54a0c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/baebf79057fba32c27c3353aacbd389692a54a0c/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "afeda72dad761325ea759fd2008730e24a165b9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/afeda72dad761325ea759fd2008730e24a165b9c", "html_url": "https://github.com/rust-lang/rust/commit/afeda72dad761325ea759fd2008730e24a165b9c"}], "stats": {"total": 70, "additions": 44, "deletions": 26}, "files": [{"sha": "15f4d988a1f657ada92c39d4655cae91249079f7", "filename": "src/librustc_macros/src/symbols.rs", "status": "modified", "additions": 16, "deletions": 26, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/baebf79057fba32c27c3353aacbd389692a54a0c/src%2Flibrustc_macros%2Fsrc%2Fsymbols.rs", "raw_url": "https://github.com/rust-lang/rust/raw/baebf79057fba32c27c3353aacbd389692a54a0c/src%2Flibrustc_macros%2Fsrc%2Fsymbols.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_macros%2Fsrc%2Fsymbols.rs?ref=baebf79057fba32c27c3353aacbd389692a54a0c", "patch": "@@ -129,37 +129,27 @@ pub fn symbols(input: TokenStream) -> TokenStream {\n     }\n \n     TokenStream::from(quote! {\n-        #[allow(non_upper_case_globals)]\n-        pub mod keywords {\n-            use super::{Symbol, Ident};\n-            #[derive(Clone, Copy, PartialEq, Eq)]\n-            pub struct Keyword {\n-                ident: Ident,\n-            }\n-            impl Keyword {\n-                #[inline] pub fn ident(self) -> Ident { self.ident }\n-                #[inline] pub fn name(self) -> Symbol { self.ident.name }\n-            }\n-\n-            #keyword_stream\n-\n-            impl std::str::FromStr for Keyword {\n-                type Err = ();\n-\n-                fn from_str(s: &str) -> Result<Self, ()> {\n-                    match s {\n-                        #from_str_stream\n-                        _ => Err(()),\n+        macro_rules! keywords {\n+            () => {\n+                #keyword_stream\n+\n+                impl std::str::FromStr for Keyword {\n+                    type Err = ();\n+\n+                    fn from_str(s: &str) -> Result<Self, ()> {\n+                        match s {\n+                            #from_str_stream\n+                            _ => Err(()),\n+                        }\n                     }\n                 }\n             }\n         }\n \n-        #[allow(non_upper_case_globals)]\n-        pub mod symbols {\n-            use super::Symbol;\n-\n-            #symbols_stream\n+        macro_rules! symbols {\n+            () => {\n+                #symbols_stream\n+            }\n         }\n \n         impl Interner {"}, {"sha": "a5611d9ab147f608c777c91303c99a26515432cc", "filename": "src/libsyntax_pos/symbol.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/baebf79057fba32c27c3353aacbd389692a54a0c/src%2Flibsyntax_pos%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/baebf79057fba32c27c3353aacbd389692a54a0c/src%2Flibsyntax_pos%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fsymbol.rs?ref=baebf79057fba32c27c3353aacbd389692a54a0c", "patch": "@@ -406,6 +406,34 @@ impl Interner {\n     }\n }\n \n+pub mod keywords {\n+    use super::{Symbol, Ident};\n+\n+    #[derive(Clone, Copy, PartialEq, Eq)]\n+    pub struct Keyword {\n+        ident: Ident,\n+    }\n+\n+    impl Keyword {\n+        #[inline]\n+        pub fn ident(self) -> Ident {\n+            self.ident\n+        }\n+\n+        #[inline]\n+        pub fn name(self) -> Symbol {\n+            self.ident.name\n+        }\n+    }\n+\n+    keywords!();\n+}\n+\n+pub mod symbols {\n+    use super::Symbol;\n+    symbols!();\n+}\n+\n impl Symbol {\n     fn is_used_keyword_2018(self) -> bool {\n         self == keywords::Dyn.name()"}]}