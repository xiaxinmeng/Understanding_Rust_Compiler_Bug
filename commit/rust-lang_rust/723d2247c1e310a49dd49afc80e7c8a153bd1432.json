{"sha": "723d2247c1e310a49dd49afc80e7c8a153bd1432", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyM2QyMjQ3YzFlMzEwYTQ5ZGQ0OWFmYzgwZTdjOGExNTNiZDE0MzI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-03-12T22:40:32Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-03-18T23:59:11Z"}, "message": "core: Don't use printf in rtdebug!\n\nThe bots were showing a segfault that I can't reproduce. Assuming it's\nvarargs related so let's not use printf", "tree": {"sha": "ab07b2939179303c07d07086e881cf8f56a38ae7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab07b2939179303c07d07086e881cf8f56a38ae7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/723d2247c1e310a49dd49afc80e7c8a153bd1432", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/723d2247c1e310a49dd49afc80e7c8a153bd1432", "html_url": "https://github.com/rust-lang/rust/commit/723d2247c1e310a49dd49afc80e7c8a153bd1432", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/723d2247c1e310a49dd49afc80e7c8a153bd1432/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d30c75897416621092023063b885494f2a64e406", "url": "https://api.github.com/repos/rust-lang/rust/commits/d30c75897416621092023063b885494f2a64e406", "html_url": "https://github.com/rust-lang/rust/commit/d30c75897416621092023063b885494f2a64e406"}], "stats": {"total": 14, "additions": 4, "deletions": 10}, "files": [{"sha": "556431e9315348f555e1b3f25b2327184fded87b", "filename": "src/libcore/rt/mod.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/723d2247c1e310a49dd49afc80e7c8a153bd1432/src%2Flibcore%2Frt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/723d2247c1e310a49dd49afc80e7c8a153bd1432/src%2Flibcore%2Frt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fmod.rs?ref=723d2247c1e310a49dd49afc80e7c8a153bd1432", "patch": "@@ -15,16 +15,10 @@ macro_rules! rtdebug_ (\n         dumb_println(fmt!( $($arg),+ ));\n \n         fn dumb_println(s: &str) {\n-            use str::as_c_str;\n-            use libc::c_char;\n-\n-            extern {\n-                fn printf(s: *c_char);\n-            }\n-\n-            do as_c_str(s.to_str() + \"\\n\") |s| {\n-                unsafe { printf(s); }\n-            }\n+            use io::WriterUtil;\n+            let dbg = ::libc::STDERR_FILENO as ::io::fd_t;\n+            dbg.write_str(s);\n+            dbg.write_str(\"\\n\");\n         }\n \n     } )"}]}