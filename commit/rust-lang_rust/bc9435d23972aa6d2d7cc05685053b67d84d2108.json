{"sha": "bc9435d23972aa6d2d7cc05685053b67d84d2108", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjOTQzNWQyMzk3MmFhNmQyZDdjYzA1Njg1MDUzYjY3ZDg0ZDIxMDg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-10T09:31:31Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-10T09:31:31Z"}, "message": "tidy up", "tree": {"sha": "9485bc0ea927997df07c489a796232d8fb1ce7e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9485bc0ea927997df07c489a796232d8fb1ce7e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc9435d23972aa6d2d7cc05685053b67d84d2108", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc9435d23972aa6d2d7cc05685053b67d84d2108", "html_url": "https://github.com/rust-lang/rust/commit/bc9435d23972aa6d2d7cc05685053b67d84d2108", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc9435d23972aa6d2d7cc05685053b67d84d2108/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a9dbfff6e0622e69cb37ba0cda919f619dad1cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a9dbfff6e0622e69cb37ba0cda919f619dad1cd", "html_url": "https://github.com/rust-lang/rust/commit/9a9dbfff6e0622e69cb37ba0cda919f619dad1cd"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "7d3ae19e1a30c69cf519d60f633a86c17c779616", "filename": "src/librustc_mir/interpret/memory.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bc9435d23972aa6d2d7cc05685053b67d84d2108/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc9435d23972aa6d2d7cc05685053b67d84d2108/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs?ref=bc9435d23972aa6d2d7cc05685053b67d84d2108", "patch": "@@ -313,7 +313,12 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> Memory<'a, 'mir, 'tcx, M> {\n \n     /// Check if the memory range beginning at `ptr` and of size `Size` is \"in-bounds\".\n     #[inline(always)]\n-    pub fn check_bounds(&self, ptr: Pointer<M::PointerTag>, size: Size, access: bool) -> EvalResult<'tcx> {\n+    pub fn check_bounds(\n+        &self,\n+        ptr: Pointer<M::PointerTag>,\n+        size: Size,\n+        access: bool\n+    ) -> EvalResult<'tcx> {\n         // if ptr.offset is in bounds, then so is ptr (because offset checks for overflow)\n         self.check_bounds_ptr(ptr.offset(size, &*self)?, access)\n     }"}]}