{"sha": "a94881563c18e4ffca2e24aed4bd8f5de583cc91", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5NDg4MTU2M2MxOGU0ZmZjYTJlMjRhZWQ0YmQ4ZjVkZTU4M2NjOTE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-06-15T11:48:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-06-15T11:48:29Z"}, "message": "Auto merge of #34180 - durka:patch-24, r=brson\n\nderive Hash (and not Copy) for ranges\n\nFixes #34170.\n\nAlso, `RangeInclusive` was `Copy` by mistake -- fix that, which is a [breaking-change] to that unstable type.", "tree": {"sha": "09ff7de58807e87a673d21ee2acbf5ca64d4c3e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09ff7de58807e87a673d21ee2acbf5ca64d4c3e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a94881563c18e4ffca2e24aed4bd8f5de583cc91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a94881563c18e4ffca2e24aed4bd8f5de583cc91", "html_url": "https://github.com/rust-lang/rust/commit/a94881563c18e4ffca2e24aed4bd8f5de583cc91", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a94881563c18e4ffca2e24aed4bd8f5de583cc91/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5f3706c0d90541ea76b1dfa28ec473af97aacb0", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5f3706c0d90541ea76b1dfa28ec473af97aacb0", "html_url": "https://github.com/rust-lang/rust/commit/c5f3706c0d90541ea76b1dfa28ec473af97aacb0"}, {"sha": "df924ca2a189598ed5f0bedcd452f8831d70060c", "url": "https://api.github.com/repos/rust-lang/rust/commits/df924ca2a189598ed5f0bedcd452f8831d70060c", "html_url": "https://github.com/rust-lang/rust/commit/df924ca2a189598ed5f0bedcd452f8831d70060c"}], "stats": {"total": 218, "additions": 212, "deletions": 6}, "files": [{"sha": "5e1210b2ff9bd3a6cb4fa9887127e36756731354", "filename": "src/libcore/ops.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a94881563c18e4ffca2e24aed4bd8f5de583cc91/src%2Flibcore%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a94881563c18e4ffca2e24aed4bd8f5de583cc91/src%2Flibcore%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops.rs?ref=a94881563c18e4ffca2e24aed4bd8f5de583cc91", "patch": "@@ -1475,7 +1475,7 @@ pub trait IndexMut<Idx: ?Sized>: Index<Idx> {\n ///     assert_eq!(arr[1..3], [  1,2  ]);\n /// }\n /// ```\n-#[derive(Copy, Clone, PartialEq, Eq)]\n+#[derive(Copy, Clone, PartialEq, Eq, Hash)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct RangeFull;\n \n@@ -1506,7 +1506,7 @@ impl fmt::Debug for RangeFull {\n ///     assert_eq!(arr[1..3], [  1,2  ]);  // Range\n /// }\n /// ```\n-#[derive(Clone, PartialEq, Eq)]\n+#[derive(Clone, PartialEq, Eq, Hash)]  // not Copy -- see #27186\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct Range<Idx> {\n     /// The lower bound of the range (inclusive).\n@@ -1570,7 +1570,7 @@ impl<Idx: PartialOrd<Idx>> Range<Idx> {\n ///     assert_eq!(arr[1..3], [  1,2  ]);\n /// }\n /// ```\n-#[derive(Clone, PartialEq, Eq)]\n+#[derive(Clone, PartialEq, Eq, Hash)]  // not Copy -- see #27186\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct RangeFrom<Idx> {\n     /// The lower bound of the range (inclusive).\n@@ -1619,7 +1619,7 @@ impl<Idx: PartialOrd<Idx>> RangeFrom<Idx> {\n ///     assert_eq!(arr[1..3], [  1,2  ]);\n /// }\n /// ```\n-#[derive(Copy, Clone, PartialEq, Eq)]\n+#[derive(Copy, Clone, PartialEq, Eq, Hash)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct RangeTo<Idx> {\n     /// The upper bound of the range (exclusive).\n@@ -1669,7 +1669,7 @@ impl<Idx: PartialOrd<Idx>> RangeTo<Idx> {\n ///     assert_eq!(arr[1...2], [  1,2  ]);  // RangeInclusive\n /// }\n /// ```\n-#[derive(Copy, Clone, PartialEq, Eq)]\n+#[derive(Clone, PartialEq, Eq, Hash)]  // not Copy -- see #27186\n #[unstable(feature = \"inclusive_range\", reason = \"recently added, follows RFC\", issue = \"28237\")]\n pub enum RangeInclusive<Idx> {\n     /// Empty range (iteration has finished)\n@@ -1774,7 +1774,7 @@ impl<Idx: PartialOrd<Idx>> RangeInclusive<Idx> {\n ///     assert_eq!(arr[1...2], [  1,2  ]);\n /// }\n /// ```\n-#[derive(Copy, Clone, PartialEq, Eq)]\n+#[derive(Copy, Clone, PartialEq, Eq, Hash)]\n #[unstable(feature = \"inclusive_range\", reason = \"recently added, follows RFC\", issue = \"28237\")]\n pub struct RangeToInclusive<Idx> {\n     /// The upper bound of the range (inclusive)"}, {"sha": "852197177585feac7b0651af8a857cc505a5bc42", "filename": "src/test/compile-fail/range_traits-1.rs", "status": "added", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/rust-lang/rust/blob/a94881563c18e4ffca2e24aed4bd8f5de583cc91/src%2Ftest%2Fcompile-fail%2Frange_traits-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a94881563c18e4ffca2e24aed4bd8f5de583cc91/src%2Ftest%2Fcompile-fail%2Frange_traits-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frange_traits-1.rs?ref=a94881563c18e4ffca2e24aed4bd8f5de583cc91", "patch": "@@ -0,0 +1,93 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(inclusive_range)]\n+\n+use std::ops::*;\n+\n+// FIXME #34229 duplicated errors\n+#[derive(Clone, PartialEq, Eq, PartialOrd, Ord, Hash, Debug)]\n+struct AllTheRanges {\n+    a: Range<usize>,\n+    //~^ ERROR PartialOrd\n+    //~^^ ERROR PartialOrd\n+    //~^^^ ERROR Ord\n+    //~^^^^ ERROR binary operation\n+    //~^^^^^ ERROR binary operation\n+    //~^^^^^^ ERROR binary operation\n+    //~^^^^^^^ ERROR binary operation\n+    //~^^^^^^^^ ERROR binary operation\n+    //~^^^^^^^^^ ERROR binary operation\n+    //~^^^^^^^^^^ ERROR binary operation\n+    //~^^^^^^^^^^^ ERROR binary operation\n+    b: RangeTo<usize>,\n+    //~^ ERROR PartialOrd\n+    //~^^ ERROR PartialOrd\n+    //~^^^ ERROR Ord\n+    //~^^^^ ERROR binary operation\n+    //~^^^^^ ERROR binary operation\n+    //~^^^^^^ ERROR binary operation\n+    //~^^^^^^^ ERROR binary operation\n+    //~^^^^^^^^ ERROR binary operation\n+    //~^^^^^^^^^ ERROR binary operation\n+    //~^^^^^^^^^^ ERROR binary operation\n+    //~^^^^^^^^^^^ ERROR binary operation\n+    c: RangeFrom<usize>,\n+    //~^ ERROR PartialOrd\n+    //~^^ ERROR PartialOrd\n+    //~^^^ ERROR Ord\n+    //~^^^^ ERROR binary operation\n+    //~^^^^^ ERROR binary operation\n+    //~^^^^^^ ERROR binary operation\n+    //~^^^^^^^ ERROR binary operation\n+    //~^^^^^^^^ ERROR binary operation\n+    //~^^^^^^^^^ ERROR binary operation\n+    //~^^^^^^^^^^ ERROR binary operation\n+    //~^^^^^^^^^^^ ERROR binary operation\n+    d: RangeFull,\n+    //~^ ERROR PartialOrd\n+    //~^^ ERROR PartialOrd\n+    //~^^^ ERROR Ord\n+    //~^^^^ ERROR binary operation\n+    //~^^^^^ ERROR binary operation\n+    //~^^^^^^ ERROR binary operation\n+    //~^^^^^^^ ERROR binary operation\n+    //~^^^^^^^^ ERROR binary operation\n+    //~^^^^^^^^^ ERROR binary operation\n+    //~^^^^^^^^^^ ERROR binary operation\n+    //~^^^^^^^^^^^ ERROR binary operation\n+    e: RangeInclusive<usize>,\n+    //~^ ERROR PartialOrd\n+    //~^^ ERROR PartialOrd\n+    //~^^^ ERROR Ord\n+    //~^^^^ ERROR binary operation\n+    //~^^^^^ ERROR binary operation\n+    //~^^^^^^ ERROR binary operation\n+    //~^^^^^^^ ERROR binary operation\n+    //~^^^^^^^^ ERROR binary operation\n+    //~^^^^^^^^^ ERROR binary operation\n+    //~^^^^^^^^^^ ERROR binary operation\n+    //~^^^^^^^^^^^ ERROR binary operation\n+    f: RangeToInclusive<usize>,\n+    //~^ ERROR PartialOrd\n+    //~^^ ERROR PartialOrd\n+    //~^^^ ERROR Ord\n+    //~^^^^ ERROR binary operation\n+    //~^^^^^ ERROR binary operation\n+    //~^^^^^^ ERROR binary operation\n+    //~^^^^^^^ ERROR binary operation\n+    //~^^^^^^^^ ERROR binary operation\n+    //~^^^^^^^^^ ERROR binary operation\n+    //~^^^^^^^^^^ ERROR binary operation\n+    //~^^^^^^^^^^^ ERROR binary operation\n+}\n+\n+fn main() {}\n+"}, {"sha": "64fcd25f538b2074b2cebcc4379fbb3604e021b2", "filename": "src/test/compile-fail/range_traits-2.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a94881563c18e4ffca2e24aed4bd8f5de583cc91/src%2Ftest%2Fcompile-fail%2Frange_traits-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a94881563c18e4ffca2e24aed4bd8f5de583cc91/src%2Ftest%2Fcompile-fail%2Frange_traits-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frange_traits-2.rs?ref=a94881563c18e4ffca2e24aed4bd8f5de583cc91", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::ops::*;\n+\n+#[derive(Copy, Clone)] //~ ERROR Copy\n+struct R(Range<usize>);\n+\n+fn main() {}\n+"}, {"sha": "d26b7956ae83ae215ee6b98f46d3301fd8d955c4", "filename": "src/test/compile-fail/range_traits-3.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a94881563c18e4ffca2e24aed4bd8f5de583cc91/src%2Ftest%2Fcompile-fail%2Frange_traits-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a94881563c18e4ffca2e24aed4bd8f5de583cc91/src%2Ftest%2Fcompile-fail%2Frange_traits-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frange_traits-3.rs?ref=a94881563c18e4ffca2e24aed4bd8f5de583cc91", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::ops::*;\n+\n+#[derive(Copy, Clone)] //~ ERROR Copy\n+struct R(RangeFrom<usize>);\n+\n+fn main() {}\n+"}, {"sha": "630969bdbdf72caa4d1f14233564f0ac0892cdd3", "filename": "src/test/compile-fail/range_traits-4.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a94881563c18e4ffca2e24aed4bd8f5de583cc91/src%2Ftest%2Fcompile-fail%2Frange_traits-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a94881563c18e4ffca2e24aed4bd8f5de583cc91/src%2Ftest%2Fcompile-fail%2Frange_traits-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frange_traits-4.rs?ref=a94881563c18e4ffca2e24aed4bd8f5de583cc91", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(rustc_attrs)]\n+\n+use std::ops::*;\n+\n+#[derive(Copy, Clone)]\n+struct R(RangeTo<usize>);\n+\n+#[rustc_error]\n+fn main() {} //~ ERROR success\n+"}, {"sha": "5963c4a9496cb7875ee761bc8d59c03a4d549693", "filename": "src/test/compile-fail/range_traits-5.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a94881563c18e4ffca2e24aed4bd8f5de583cc91/src%2Ftest%2Fcompile-fail%2Frange_traits-5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a94881563c18e4ffca2e24aed4bd8f5de583cc91/src%2Ftest%2Fcompile-fail%2Frange_traits-5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frange_traits-5.rs?ref=a94881563c18e4ffca2e24aed4bd8f5de583cc91", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(rustc_attrs)]\n+\n+use std::ops::*;\n+\n+#[derive(Copy, Clone)]\n+struct R(RangeFull);\n+\n+#[rustc_error]\n+fn main() {} //~ ERROR success\n+"}, {"sha": "7c62711feaee1434da103e3d112d3c8ef12a9d11", "filename": "src/test/compile-fail/range_traits-6.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a94881563c18e4ffca2e24aed4bd8f5de583cc91/src%2Ftest%2Fcompile-fail%2Frange_traits-6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a94881563c18e4ffca2e24aed4bd8f5de583cc91/src%2Ftest%2Fcompile-fail%2Frange_traits-6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frange_traits-6.rs?ref=a94881563c18e4ffca2e24aed4bd8f5de583cc91", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(inclusive_range)]\n+\n+use std::ops::*;\n+\n+#[derive(Copy, Clone)] //~ ERROR Copy\n+struct R(RangeInclusive<usize>);\n+\n+fn main() {}\n+"}, {"sha": "b6fec773a77737a615a8c4ae145990e40d14ab31", "filename": "src/test/compile-fail/range_traits-7.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a94881563c18e4ffca2e24aed4bd8f5de583cc91/src%2Ftest%2Fcompile-fail%2Frange_traits-7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a94881563c18e4ffca2e24aed4bd8f5de583cc91/src%2Ftest%2Fcompile-fail%2Frange_traits-7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frange_traits-7.rs?ref=a94881563c18e4ffca2e24aed4bd8f5de583cc91", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(rustc_attrs, inclusive_range)]\n+\n+use std::ops::*;\n+\n+#[derive(Copy, Clone)]\n+struct R(RangeToInclusive<usize>);\n+\n+#[rustc_error]\n+fn main() {} //~ ERROR success\n+"}]}