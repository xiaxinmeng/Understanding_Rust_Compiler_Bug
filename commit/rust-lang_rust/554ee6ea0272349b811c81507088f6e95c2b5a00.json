{"sha": "554ee6ea0272349b811c81507088f6e95c2b5a00", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1NGVlNmVhMDI3MjM0OWI4MTFjODE1MDcwODhmNmU5NWMyYjVhMDA=", "commit": {"author": {"name": "Phil Ellison", "email": "phil.j.ellison@gmail.com", "date": "2020-12-30T17:33:33Z"}, "committer": {"name": "Phil Ellison", "email": "phil.j.ellison@gmail.com", "date": "2021-01-07T19:01:33Z"}, "message": "cargo fmt", "tree": {"sha": "6a6049c226ee4a54b5c8dcd56beeeb9a0e93b76a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a6049c226ee4a54b5c8dcd56beeeb9a0e93b76a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/554ee6ea0272349b811c81507088f6e95c2b5a00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/554ee6ea0272349b811c81507088f6e95c2b5a00", "html_url": "https://github.com/rust-lang/rust/commit/554ee6ea0272349b811c81507088f6e95c2b5a00", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/554ee6ea0272349b811c81507088f6e95c2b5a00/comments", "author": {"login": "theotherphil", "id": 1974256, "node_id": "MDQ6VXNlcjE5NzQyNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1974256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theotherphil", "html_url": "https://github.com/theotherphil", "followers_url": "https://api.github.com/users/theotherphil/followers", "following_url": "https://api.github.com/users/theotherphil/following{/other_user}", "gists_url": "https://api.github.com/users/theotherphil/gists{/gist_id}", "starred_url": "https://api.github.com/users/theotherphil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theotherphil/subscriptions", "organizations_url": "https://api.github.com/users/theotherphil/orgs", "repos_url": "https://api.github.com/users/theotherphil/repos", "events_url": "https://api.github.com/users/theotherphil/events{/privacy}", "received_events_url": "https://api.github.com/users/theotherphil/received_events", "type": "User", "site_admin": false}, "committer": {"login": "theotherphil", "id": 1974256, "node_id": "MDQ6VXNlcjE5NzQyNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1974256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theotherphil", "html_url": "https://github.com/theotherphil", "followers_url": "https://api.github.com/users/theotherphil/followers", "following_url": "https://api.github.com/users/theotherphil/following{/other_user}", "gists_url": "https://api.github.com/users/theotherphil/gists{/gist_id}", "starred_url": "https://api.github.com/users/theotherphil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theotherphil/subscriptions", "organizations_url": "https://api.github.com/users/theotherphil/orgs", "repos_url": "https://api.github.com/users/theotherphil/repos", "events_url": "https://api.github.com/users/theotherphil/events{/privacy}", "received_events_url": "https://api.github.com/users/theotherphil/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2dbe6e43a28a22be2b5d8631dff83b644520f59", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2dbe6e43a28a22be2b5d8631dff83b644520f59", "html_url": "https://github.com/rust-lang/rust/commit/b2dbe6e43a28a22be2b5d8631dff83b644520f59"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "a1c484fdff4de3cfb0e486384a0fb1cee4dbdf6f", "filename": "crates/hir_ty/src/diagnostics/expr.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/554ee6ea0272349b811c81507088f6e95c2b5a00/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/554ee6ea0272349b811c81507088f6e95c2b5a00/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fexpr.rs?ref=554ee6ea0272349b811c81507088f6e95c2b5a00", "patch": "@@ -11,8 +11,8 @@ use crate::{\n     db::HirDatabase,\n     diagnostics::{\n         match_check::{is_useful, MatchCheckCtx, Matrix, PatStack, Usefulness},\n-        MismatchedArgCount, MissingFields, MissingMatchArms, MissingOkOrSomeInTailExpr, MissingPatFields,\n-        RemoveThisSemicolon,\n+        MismatchedArgCount, MissingFields, MissingMatchArms, MissingOkOrSomeInTailExpr,\n+        MissingPatFields, RemoveThisSemicolon,\n     },\n     utils::variant_data,\n     ApplicationTy, InferenceResult, Ty, TypeCtor,\n@@ -324,19 +324,22 @@ impl<'a, 'b> ExprValidator<'a, 'b> {\n         let (params, required) = match &mismatch.expected {\n             Ty::Apply(ApplicationTy { ctor, parameters }) if ctor == &core_result_ctor => {\n                 (parameters, \"Ok\".to_string())\n-            },\n+            }\n             Ty::Apply(ApplicationTy { ctor, parameters }) if ctor == &core_option_ctor => {\n                 (parameters, \"Some\".to_string())\n-            },\n+            }\n             _ => return,\n         };\n \n         if params.len() > 0 && params[0] == mismatch.actual {\n             let (_, source_map) = db.body_with_source_map(self.owner.into());\n \n             if let Ok(source_ptr) = source_map.expr_syntax(id) {\n-                self.sink\n-                    .push(MissingOkOrSomeInTailExpr { file: source_ptr.file_id, expr: source_ptr.value, required });\n+                self.sink.push(MissingOkOrSomeInTailExpr {\n+                    file: source_ptr.file_id,\n+                    expr: source_ptr.value,\n+                    required,\n+                });\n             }\n         }\n     }"}, {"sha": "d7ad88ed523b2141a94008b67e6682e4b213416d", "filename": "crates/ide/src/diagnostics/fixes.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/554ee6ea0272349b811c81507088f6e95c2b5a00/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/554ee6ea0272349b811c81507088f6e95c2b5a00/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes.rs?ref=554ee6ea0272349b811c81507088f6e95c2b5a00", "patch": "@@ -101,7 +101,8 @@ impl DiagnosticWithFix for MissingOkOrSomeInTailExpr {\n         let tail_expr_range = tail_expr.syntax().text_range();\n         let replacement = format!(\"{}({})\", self.required, tail_expr.syntax());\n         let edit = TextEdit::replace(tail_expr_range, replacement);\n-        let source_change = SourceFileEdit { file_id: self.file.original_file(sema.db), edit }.into();\n+        let source_change =\n+            SourceFileEdit { file_id: self.file.original_file(sema.db), edit }.into();\n         let name = if self.required == \"Ok\" { \"Wrap with Ok\" } else { \"Wrap with Some\" };\n         Some(Fix::new(name, source_change, tail_expr_range))\n     }"}]}