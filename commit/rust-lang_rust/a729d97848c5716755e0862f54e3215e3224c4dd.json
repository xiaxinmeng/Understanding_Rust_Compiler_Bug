{"sha": "a729d97848c5716755e0862f54e3215e3224c4dd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3MjlkOTc4NDhjNTcxNjc1NWUwODYyZjU0ZTMyMTVlMzIyNGM0ZGQ=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-05-31T20:17:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-05-31T20:17:12Z"}, "message": "Rollup merge of #51146 - dlrobertson:fix_51102, r=estebank\n\ntypeck: Do not pass the field check on field error\n\nIf a struct pattern has a field error return an error.\n\nFixes: #51102", "tree": {"sha": "e7afe49441ece7586ad7f581c2c1ea16b2f3fd2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7afe49441ece7586ad7f581c2c1ea16b2f3fd2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a729d97848c5716755e0862f54e3215e3224c4dd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbEFhICRBK7hj4Ov3rIwAAdHIIAA0wkt3kVjorG6na43A0lwy9\nw9LKqz7bSU3Tx1rf/d3CTc3Hv4V10G6GUhmlM/NNUZnNkAdjwhBB2SZO/oPdWs1f\nWwhG5RHamPmUf9yUzt+sXiN94UvbJgsVSaLEGjKDsQhSPV+XhOW6lkkm8p85XIcX\niys4XvZicg2C61Ae699sMqHXjjlEh2MpSFqnuPbtpclEIX9BWA8g2cRqFAXd7NF5\nwGt3qYaGQnq4JfIDMLKog2svDtzTxBJeqQMjCBptfYqqm/Czy77iA/imYGOWb4vk\n9GYch7DcPbU/qTKbo4JHdZR58Mm37F7s5r134Rrt/8+/8dUUmfh+cEeIZyy2TZE=\n=akEa\n-----END PGP SIGNATURE-----\n", "payload": "tree e7afe49441ece7586ad7f581c2c1ea16b2f3fd2c\nparent 2f0e3d3046746ca9af29215d04073e349ebc05e0\nparent 8f6441513e8ada486f6301d436a82a539baf34f7\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1527797832 +0200\ncommitter GitHub <noreply@github.com> 1527797832 +0200\n\nRollup merge of #51146 - dlrobertson:fix_51102, r=estebank\n\ntypeck: Do not pass the field check on field error\n\nIf a struct pattern has a field error return an error.\n\nFixes: #51102\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a729d97848c5716755e0862f54e3215e3224c4dd", "html_url": "https://github.com/rust-lang/rust/commit/a729d97848c5716755e0862f54e3215e3224c4dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a729d97848c5716755e0862f54e3215e3224c4dd/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f0e3d3046746ca9af29215d04073e349ebc05e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f0e3d3046746ca9af29215d04073e349ebc05e0", "html_url": "https://github.com/rust-lang/rust/commit/2f0e3d3046746ca9af29215d04073e349ebc05e0"}, {"sha": "8f6441513e8ada486f6301d436a82a539baf34f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f6441513e8ada486f6301d436a82a539baf34f7", "html_url": "https://github.com/rust-lang/rust/commit/8f6441513e8ada486f6301d436a82a539baf34f7"}], "stats": {"total": 85, "additions": 82, "deletions": 3}, "files": [{"sha": "c260655bd3e83a366a1d0b2957bf8356e9e5407a", "filename": "src/librustc_typeck/check/_match.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a729d97848c5716755e0862f54e3215e3224c4dd/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a729d97848c5716755e0862f54e3215e3224c4dd/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2F_match.rs?ref=a729d97848c5716755e0862f54e3215e3224c4dd", "patch": "@@ -721,8 +721,11 @@ https://doc.rust-lang.org/reference/types.html#trait-objects\");\n         self.demand_eqtype(pat.span, expected, pat_ty);\n \n         // Type check subpatterns.\n-        self.check_struct_pat_fields(pat_ty, pat.id, pat.span, variant, fields, etc, def_bm);\n-        pat_ty\n+        if self.check_struct_pat_fields(pat_ty, pat.id, pat.span, variant, fields, etc, def_bm) {\n+            pat_ty\n+        } else {\n+            self.tcx.types.err\n+        }\n     }\n \n     fn check_pat_path(&self,\n@@ -847,7 +850,7 @@ https://doc.rust-lang.org/reference/types.html#trait-objects\");\n                                variant: &'tcx ty::VariantDef,\n                                fields: &'gcx [Spanned<hir::FieldPat>],\n                                etc: bool,\n-                               def_bm: ty::BindingMode) {\n+                               def_bm: ty::BindingMode) -> bool {\n         let tcx = self.tcx;\n \n         let (substs, adt) = match adt_ty.sty {\n@@ -865,6 +868,7 @@ https://doc.rust-lang.org/reference/types.html#trait-objects\");\n \n         // Keep track of which fields have already appeared in the pattern.\n         let mut used_fields = FxHashMap();\n+        let mut no_field_errors = true;\n \n         let mut inexistent_fields = vec![];\n         // Typecheck each field.\n@@ -880,6 +884,7 @@ https://doc.rust-lang.org/reference/types.html#trait-objects\");\n                                     format!(\"multiple uses of `{}` in pattern\", field.ident))\n                         .span_label(*occupied.get(), format!(\"first use of `{}`\", field.ident))\n                         .emit();\n+                    no_field_errors = false;\n                     tcx.types.err\n                 }\n                 Vacant(vacant) => {\n@@ -892,6 +897,7 @@ https://doc.rust-lang.org/reference/types.html#trait-objects\");\n                         })\n                         .unwrap_or_else(|| {\n                             inexistent_fields.push((span, field.ident));\n+                            no_field_errors = false;\n                             tcx.types.err\n                         })\n                 }\n@@ -990,5 +996,6 @@ https://doc.rust-lang.org/reference/types.html#trait-objects\");\n                 diag.emit();\n             }\n         }\n+        no_field_errors\n     }\n }"}, {"sha": "c8f106687ae1cb4d8b517a2fc46d80a1515d8994", "filename": "src/test/ui/issue-51102.rs", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/a729d97848c5716755e0862f54e3215e3224c4dd/src%2Ftest%2Fui%2Fissue-51102.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a729d97848c5716755e0862f54e3215e3224c4dd/src%2Ftest%2Fui%2Fissue-51102.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-51102.rs?ref=a729d97848c5716755e0862f54e3215e3224c4dd", "patch": "@@ -0,0 +1,48 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+enum SimpleEnum {\n+    NoState,\n+}\n+\n+struct SimpleStruct {\n+    no_state_here: u64,\n+}\n+\n+fn main() {\n+    let _ = |simple| {\n+        match simple {\n+            SimpleStruct {\n+                state: 0,\n+                //~^ struct `SimpleStruct` does not have a field named `state` [E0026]\n+                ..\n+            } => (),\n+        }\n+    };\n+\n+    let _ = |simple| {\n+        match simple {\n+            SimpleStruct {\n+                no_state_here: 0,\n+                no_state_here: 1\n+                //~^ ERROR field `no_state_here` bound multiple times in the pattern [E0025]\n+            } => (),\n+        }\n+    };\n+\n+    let _ = |simple| {\n+        match simple {\n+            SimpleEnum::NoState {\n+                state: 0\n+                //~^ ERROR variant `SimpleEnum::NoState` does not have a field named `state` [E0026]\n+            } => (),\n+        }\n+    };\n+}"}, {"sha": "a4bd0fb914fee7ba825f972ed73a7cf20a767dfe", "filename": "src/test/ui/issue-51102.stderr", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/a729d97848c5716755e0862f54e3215e3224c4dd/src%2Ftest%2Fui%2Fissue-51102.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a729d97848c5716755e0862f54e3215e3224c4dd/src%2Ftest%2Fui%2Fissue-51102.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-51102.stderr?ref=a729d97848c5716755e0862f54e3215e3224c4dd", "patch": "@@ -0,0 +1,24 @@\n+error[E0026]: struct `SimpleStruct` does not have a field named `state`\n+  --> $DIR/issue-51102.rs:23:17\n+   |\n+LL |                 state: 0,\n+   |                 ^^^^^^^^ struct `SimpleStruct` does not have this field\n+\n+error[E0025]: field `no_state_here` bound multiple times in the pattern\n+  --> $DIR/issue-51102.rs:34:17\n+   |\n+LL |                 no_state_here: 0,\n+   |                 ---------------- first use of `no_state_here`\n+LL |                 no_state_here: 1\n+   |                 ^^^^^^^^^^^^^^^^ multiple uses of `no_state_here` in pattern\n+\n+error[E0026]: variant `SimpleEnum::NoState` does not have a field named `state`\n+  --> $DIR/issue-51102.rs:43:17\n+   |\n+LL |                 state: 0\n+   |                 ^^^^^^^^ variant `SimpleEnum::NoState` does not have this field\n+\n+error: aborting due to 3 previous errors\n+\n+Some errors occurred: E0025, E0026.\n+For more information about an error, try `rustc --explain E0025`."}]}