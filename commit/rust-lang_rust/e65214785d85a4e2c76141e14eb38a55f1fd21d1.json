{"sha": "e65214785d85a4e2c76141e14eb38a55f1fd21d1", "node_id": "C_kwDOAAsO6NoAKGU2NTIxNDc4NWQ4NWE0ZTJjNzYxNDFlMTRlYjM4YTU1ZjFmZDIxZDE", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2022-07-10T13:31:58Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2022-07-12T10:20:55Z"}, "message": "add more tests", "tree": {"sha": "f143cf3af4639ea694bcd2e56e9ecca080b7c587", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f143cf3af4639ea694bcd2e56e9ecca080b7c587"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e65214785d85a4e2c76141e14eb38a55f1fd21d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e65214785d85a4e2c76141e14eb38a55f1fd21d1", "html_url": "https://github.com/rust-lang/rust/commit/e65214785d85a4e2c76141e14eb38a55f1fd21d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e65214785d85a4e2c76141e14eb38a55f1fd21d1/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "944c0e23b8e44782e5097a7265bd78d124b92523", "url": "https://api.github.com/repos/rust-lang/rust/commits/944c0e23b8e44782e5097a7265bd78d124b92523", "html_url": "https://github.com/rust-lang/rust/commit/944c0e23b8e44782e5097a7265bd78d124b92523"}], "stats": {"total": 140, "additions": 122, "deletions": 18}, "files": [{"sha": "4bf6b54fe0787bea76ab402796cbaefa388eed68", "filename": "src/test/ui/repr/auxiliary/repr-transparent-non-exhaustive.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e65214785d85a4e2c76141e14eb38a55f1fd21d1/src%2Ftest%2Fui%2Frepr%2Fauxiliary%2Frepr-transparent-non-exhaustive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e65214785d85a4e2c76141e14eb38a55f1fd21d1/src%2Ftest%2Fui%2Frepr%2Fauxiliary%2Frepr-transparent-non-exhaustive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frepr%2Fauxiliary%2Frepr-transparent-non-exhaustive.rs?ref=e65214785d85a4e2c76141e14eb38a55f1fd21d1", "patch": "@@ -5,6 +5,14 @@ pub struct Private { _priv: () }\n #[non_exhaustive]\n pub struct NonExhaustive {}\n \n+#[non_exhaustive]\n+pub enum NonExhaustiveEnum {}\n+\n+pub enum NonExhaustiveVariant {\n+    #[non_exhaustive]\n+    A,\n+}\n+\n pub struct ExternalIndirection<T> {\n     pub x: T,\n }"}, {"sha": "9ccd8610dad475e3db80972685845150dae927b5", "filename": "src/test/ui/repr/repr-transparent-non-exhaustive.rs", "status": "modified", "additions": 41, "deletions": 5, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/e65214785d85a4e2c76141e14eb38a55f1fd21d1/src%2Ftest%2Fui%2Frepr%2Frepr-transparent-non-exhaustive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e65214785d85a4e2c76141e14eb38a55f1fd21d1/src%2Ftest%2Fui%2Frepr%2Frepr-transparent-non-exhaustive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frepr%2Frepr-transparent-non-exhaustive.rs?ref=e65214785d85a4e2c76141e14eb38a55f1fd21d1", "patch": "@@ -3,7 +3,13 @@\n // aux-build: repr-transparent-non-exhaustive.rs\n extern crate repr_transparent_non_exhaustive;\n \n-use repr_transparent_non_exhaustive::{Private, NonExhaustive, ExternalIndirection};\n+use repr_transparent_non_exhaustive::{\n+    Private,\n+    NonExhaustive,\n+    NonExhaustiveEnum,\n+    NonExhaustiveVariant,\n+    ExternalIndirection,\n+};\n \n pub struct InternalPrivate {\n     _priv: (),\n@@ -38,22 +44,52 @@ pub struct T6(Sized, NonExhaustive);\n //~| WARN this was previously accepted by the compiler\n \n #[repr(transparent)]\n-pub struct T7(Sized, InternalIndirection<Private>);\n+pub struct T7(Sized, NonExhaustiveEnum);\n //~^ ERROR zero-sized fields in repr(transparent) cannot contain external non-exhaustive types\n //~| WARN this was previously accepted by the compiler\n \n #[repr(transparent)]\n-pub struct T8(Sized, InternalIndirection<NonExhaustive>);\n+pub struct T8(Sized, NonExhaustiveVariant);\n //~^ ERROR zero-sized fields in repr(transparent) cannot contain external non-exhaustive types\n //~| WARN this was previously accepted by the compiler\n \n #[repr(transparent)]\n-pub struct T9(Sized, ExternalIndirection<Private>);\n+pub struct T9(Sized, InternalIndirection<Private>);\n //~^ ERROR zero-sized fields in repr(transparent) cannot contain external non-exhaustive types\n //~| WARN this was previously accepted by the compiler\n \n #[repr(transparent)]\n-pub struct T10(Sized, ExternalIndirection<NonExhaustive>);\n+pub struct T10(Sized, InternalIndirection<NonExhaustive>);\n+//~^ ERROR zero-sized fields in repr(transparent) cannot contain external non-exhaustive types\n+//~| WARN this was previously accepted by the compiler\n+\n+#[repr(transparent)]\n+pub struct T11(Sized, InternalIndirection<NonExhaustiveEnum>);\n+//~^ ERROR zero-sized fields in repr(transparent) cannot contain external non-exhaustive types\n+//~| WARN this was previously accepted by the compiler\n+\n+#[repr(transparent)]\n+pub struct T12(Sized, InternalIndirection<NonExhaustiveVariant>);\n+//~^ ERROR zero-sized fields in repr(transparent) cannot contain external non-exhaustive types\n+//~| WARN this was previously accepted by the compiler\n+\n+#[repr(transparent)]\n+pub struct T13(Sized, ExternalIndirection<Private>);\n+//~^ ERROR zero-sized fields in repr(transparent) cannot contain external non-exhaustive types\n+//~| WARN this was previously accepted by the compiler\n+\n+#[repr(transparent)]\n+pub struct T14(Sized, ExternalIndirection<NonExhaustive>);\n+//~^ ERROR zero-sized fields in repr(transparent) cannot contain external non-exhaustive types\n+//~| WARN this was previously accepted by the compiler\n+\n+#[repr(transparent)]\n+pub struct T15(Sized, ExternalIndirection<NonExhaustiveEnum>);\n+//~^ ERROR zero-sized fields in repr(transparent) cannot contain external non-exhaustive types\n+//~| WARN this was previously accepted by the compiler\n+\n+#[repr(transparent)]\n+pub struct T16(Sized, ExternalIndirection<NonExhaustiveVariant>);\n //~^ ERROR zero-sized fields in repr(transparent) cannot contain external non-exhaustive types\n //~| WARN this was previously accepted by the compiler\n "}, {"sha": "3b1e334a0cbe2a6738e303e311653c5b38816e96", "filename": "src/test/ui/repr/repr-transparent-non-exhaustive.stderr", "status": "modified", "additions": 73, "deletions": 13, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/e65214785d85a4e2c76141e14eb38a55f1fd21d1/src%2Ftest%2Fui%2Frepr%2Frepr-transparent-non-exhaustive.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e65214785d85a4e2c76141e14eb38a55f1fd21d1/src%2Ftest%2Fui%2Frepr%2Frepr-transparent-non-exhaustive.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frepr%2Frepr-transparent-non-exhaustive.stderr?ref=e65214785d85a4e2c76141e14eb38a55f1fd21d1", "patch": "@@ -1,5 +1,5 @@\n error: zero-sized fields in repr(transparent) cannot contain external non-exhaustive types\n-  --> $DIR/repr-transparent-non-exhaustive.rs:31:22\n+  --> $DIR/repr-transparent-non-exhaustive.rs:37:22\n    |\n LL | pub struct T5(Sized, Private);\n    |                      ^^^^^^^\n@@ -14,7 +14,7 @@ LL | #![deny(repr_transparent_external_private_fields)]\n    = note: this struct contains `Private`, which contains private fields, and makes it not a breaking change to become non-zero-sized in the future.\n \n error: zero-sized fields in repr(transparent) cannot contain external non-exhaustive types\n-  --> $DIR/repr-transparent-non-exhaustive.rs:36:22\n+  --> $DIR/repr-transparent-non-exhaustive.rs:42:22\n    |\n LL | pub struct T6(Sized, NonExhaustive);\n    |                      ^^^^^^^^^^^^^\n@@ -24,44 +24,104 @@ LL | pub struct T6(Sized, NonExhaustive);\n    = note: this struct contains `NonExhaustive`, which is marked with `#[non_exhaustive]`, and makes it not a breaking change to become non-zero-sized in the future.\n \n error: zero-sized fields in repr(transparent) cannot contain external non-exhaustive types\n-  --> $DIR/repr-transparent-non-exhaustive.rs:41:22\n+  --> $DIR/repr-transparent-non-exhaustive.rs:47:22\n    |\n-LL | pub struct T7(Sized, InternalIndirection<Private>);\n+LL | pub struct T7(Sized, NonExhaustiveEnum);\n+   |                      ^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #78586 <https://github.com/rust-lang/rust/issues/78586>\n+   = note: this enum contains `NonExhaustiveEnum`, which is marked with `#[non_exhaustive]`, and makes it not a breaking change to become non-zero-sized in the future.\n+\n+error: zero-sized fields in repr(transparent) cannot contain external non-exhaustive types\n+  --> $DIR/repr-transparent-non-exhaustive.rs:52:22\n+   |\n+LL | pub struct T8(Sized, NonExhaustiveVariant);\n+   |                      ^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #78586 <https://github.com/rust-lang/rust/issues/78586>\n+   = note: this enum contains `NonExhaustiveVariant`, which is marked with `#[non_exhaustive]`, and makes it not a breaking change to become non-zero-sized in the future.\n+\n+error: zero-sized fields in repr(transparent) cannot contain external non-exhaustive types\n+  --> $DIR/repr-transparent-non-exhaustive.rs:57:22\n+   |\n+LL | pub struct T9(Sized, InternalIndirection<Private>);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #78586 <https://github.com/rust-lang/rust/issues/78586>\n    = note: this struct contains `Private`, which contains private fields, and makes it not a breaking change to become non-zero-sized in the future.\n \n error: zero-sized fields in repr(transparent) cannot contain external non-exhaustive types\n-  --> $DIR/repr-transparent-non-exhaustive.rs:46:22\n+  --> $DIR/repr-transparent-non-exhaustive.rs:62:23\n    |\n-LL | pub struct T8(Sized, InternalIndirection<NonExhaustive>);\n-   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | pub struct T10(Sized, InternalIndirection<NonExhaustive>);\n+   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #78586 <https://github.com/rust-lang/rust/issues/78586>\n    = note: this struct contains `NonExhaustive`, which is marked with `#[non_exhaustive]`, and makes it not a breaking change to become non-zero-sized in the future.\n \n error: zero-sized fields in repr(transparent) cannot contain external non-exhaustive types\n-  --> $DIR/repr-transparent-non-exhaustive.rs:51:22\n+  --> $DIR/repr-transparent-non-exhaustive.rs:67:23\n    |\n-LL | pub struct T9(Sized, ExternalIndirection<Private>);\n-   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | pub struct T11(Sized, InternalIndirection<NonExhaustiveEnum>);\n+   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #78586 <https://github.com/rust-lang/rust/issues/78586>\n+   = note: this enum contains `NonExhaustiveEnum`, which is marked with `#[non_exhaustive]`, and makes it not a breaking change to become non-zero-sized in the future.\n+\n+error: zero-sized fields in repr(transparent) cannot contain external non-exhaustive types\n+  --> $DIR/repr-transparent-non-exhaustive.rs:72:23\n+   |\n+LL | pub struct T12(Sized, InternalIndirection<NonExhaustiveVariant>);\n+   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #78586 <https://github.com/rust-lang/rust/issues/78586>\n+   = note: this enum contains `NonExhaustiveVariant`, which is marked with `#[non_exhaustive]`, and makes it not a breaking change to become non-zero-sized in the future.\n+\n+error: zero-sized fields in repr(transparent) cannot contain external non-exhaustive types\n+  --> $DIR/repr-transparent-non-exhaustive.rs:77:23\n+   |\n+LL | pub struct T13(Sized, ExternalIndirection<Private>);\n+   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #78586 <https://github.com/rust-lang/rust/issues/78586>\n    = note: this struct contains `Private`, which contains private fields, and makes it not a breaking change to become non-zero-sized in the future.\n \n error: zero-sized fields in repr(transparent) cannot contain external non-exhaustive types\n-  --> $DIR/repr-transparent-non-exhaustive.rs:56:23\n+  --> $DIR/repr-transparent-non-exhaustive.rs:82:23\n    |\n-LL | pub struct T10(Sized, ExternalIndirection<NonExhaustive>);\n+LL | pub struct T14(Sized, ExternalIndirection<NonExhaustive>);\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #78586 <https://github.com/rust-lang/rust/issues/78586>\n    = note: this struct contains `NonExhaustive`, which is marked with `#[non_exhaustive]`, and makes it not a breaking change to become non-zero-sized in the future.\n \n-error: aborting due to 6 previous errors\n+error: zero-sized fields in repr(transparent) cannot contain external non-exhaustive types\n+  --> $DIR/repr-transparent-non-exhaustive.rs:87:23\n+   |\n+LL | pub struct T15(Sized, ExternalIndirection<NonExhaustiveEnum>);\n+   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #78586 <https://github.com/rust-lang/rust/issues/78586>\n+   = note: this enum contains `NonExhaustiveEnum`, which is marked with `#[non_exhaustive]`, and makes it not a breaking change to become non-zero-sized in the future.\n+\n+error: zero-sized fields in repr(transparent) cannot contain external non-exhaustive types\n+  --> $DIR/repr-transparent-non-exhaustive.rs:92:23\n+   |\n+LL | pub struct T16(Sized, ExternalIndirection<NonExhaustiveVariant>);\n+   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #78586 <https://github.com/rust-lang/rust/issues/78586>\n+   = note: this enum contains `NonExhaustiveVariant`, which is marked with `#[non_exhaustive]`, and makes it not a breaking change to become non-zero-sized in the future.\n+\n+error: aborting due to 12 previous errors\n "}]}