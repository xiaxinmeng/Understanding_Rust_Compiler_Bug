{"sha": "5fd47c7aac811763ac20e3573ef79f27295a6109", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmZDQ3YzdhYWM4MTE3NjNhYzIwZTM1NzNlZjc5ZjI3Mjk1YTYxMDk=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-08-21T22:46:27Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-08-22T00:26:18Z"}, "message": "rustpkg: Re-enable some more tests", "tree": {"sha": "ff8a33b8622d432fe2c16f036f125c8720d23581", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff8a33b8622d432fe2c16f036f125c8720d23581"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5fd47c7aac811763ac20e3573ef79f27295a6109", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5fd47c7aac811763ac20e3573ef79f27295a6109", "html_url": "https://github.com/rust-lang/rust/commit/5fd47c7aac811763ac20e3573ef79f27295a6109", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5fd47c7aac811763ac20e3573ef79f27295a6109/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "996989cdb4c936ee3e41e65e6cd4d22c073206f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/996989cdb4c936ee3e41e65e6cd4d22c073206f9", "html_url": "https://github.com/rust-lang/rust/commit/996989cdb4c936ee3e41e65e6cd4d22c073206f9"}], "stats": {"total": 43, "additions": 22, "deletions": 21}, "files": [{"sha": "e70aab723c6ea0ae5361fd904d267fcff4635743", "filename": "src/librustpkg/tests.rs", "status": "modified", "additions": 22, "deletions": 21, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/5fd47c7aac811763ac20e3573ef79f27295a6109/src%2Flibrustpkg%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fd47c7aac811763ac20e3573ef79f27295a6109/src%2Flibrustpkg%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Ftests.rs?ref=5fd47c7aac811763ac20e3573ef79f27295a6109", "patch": "@@ -473,13 +473,16 @@ fn test_install_invalid() {\n }\n \n // Tests above should (maybe) be converted to shell out to rustpkg, too\n-\n+#[test]\n fn test_install_git() {\n     let sysroot = test_sysroot();\n     debug!(\"sysroot = %s\", sysroot.to_str());\n     let temp_pkg_id = git_repo_pkg();\n     let repo = init_git_repo(&temp_pkg_id.path);\n-    let repo_subdir = repo.push(\"mockgithub.com\").push(\"catamorphism\").push(\"test_pkg\");\n+    debug!(\"repo = %s\", repo.to_str());\n+    let repo_subdir = repo.push(\"mockgithub.com\").push(\"catamorphism\").push(\"test-pkg\");\n+    debug!(\"repo_subdir = %s\", repo_subdir.to_str());\n+\n     writeFile(&repo_subdir.push(\"main.rs\"),\n               \"fn main() { let _x = (); }\");\n     writeFile(&repo_subdir.push(\"lib.rs\"),\n@@ -494,30 +497,28 @@ fn test_install_git() {\n            temp_pkg_id.path.to_str(), repo.to_str());\n     // should have test, bench, lib, and main\n     command_line_test([~\"install\", temp_pkg_id.path.to_str()], &repo);\n+    let ws = repo.push(\".rust\");\n     // Check that all files exist\n-    debug!(\"Checking for files in %s\", repo.to_str());\n-    let exec = target_executable_in_workspace(&temp_pkg_id, &repo);\n+    debug!(\"Checking for files in %s\", ws.to_str());\n+    let exec = target_executable_in_workspace(&temp_pkg_id, &ws);\n     debug!(\"exec = %s\", exec.to_str());\n     assert!(os::path_exists(&exec));\n     assert!(is_rwx(&exec));\n     let _built_lib =\n         built_library_in_workspace(&temp_pkg_id,\n-                                   &repo).expect(\"test_install_git: built lib should exist\");\n-    let lib = target_library_in_workspace(&temp_pkg_id, &repo);\n-    debug!(\"lib = %s\", lib.to_str());\n-    assert!(os::path_exists(&lib));\n-    assert!(is_rwx(&lib));\n+                                   &ws).expect(\"test_install_git: built lib should exist\");\n+    assert_lib_exists(&ws, temp_pkg_id.short_name, temp_pkg_id.version.clone());\n     let built_test = built_test_in_workspace(&temp_pkg_id,\n-                         &repo).expect(\"test_install_git: built test should exist\");\n+                         &ws).expect(\"test_install_git: built test should exist\");\n     assert!(os::path_exists(&built_test));\n     let built_bench = built_bench_in_workspace(&temp_pkg_id,\n-                          &repo).expect(\"test_install_git: built bench should exist\");\n+                          &ws).expect(\"test_install_git: built bench should exist\");\n     assert!(os::path_exists(&built_bench));\n     // And that the test and bench executables aren't installed\n-    let test = target_test_in_workspace(&temp_pkg_id, &repo);\n+    let test = target_test_in_workspace(&temp_pkg_id, &ws);\n     assert!(!os::path_exists(&test));\n     debug!(\"test = %s\", test.to_str());\n-    let bench = target_bench_in_workspace(&temp_pkg_id, &repo);\n+    let bench = target_bench_in_workspace(&temp_pkg_id, &ws);\n     debug!(\"bench = %s\", bench.to_str());\n     assert!(!os::path_exists(&bench));\n }\n@@ -563,6 +564,7 @@ fn test_package_ids_must_be_relative_path_like() {\n \n }\n \n+#[test]\n fn test_package_version() {\n     let local_path = \"mockgithub.com/catamorphism/test_pkg_version\";\n     let repo = init_git_repo(&Path(local_path));\n@@ -578,28 +580,27 @@ fn test_package_version() {\n               \"#[bench] pub fn f() { (); }\");\n     add_git_tag(&repo_subdir, ~\"0.4\");\n \n+    // It won't pick up the 0.4 version because the dir isn't in the RUST_PATH, but...\n     let temp_pkg_id = PkgId::new(\"mockgithub.com/catamorphism/test_pkg_version\");\n-    match temp_pkg_id.version {\n-        ExactRevision(~\"0.4\") => (),\n-        _ => fail!(fmt!(\"test_package_version: package version was %?, expected Some(0.4)\",\n-                        temp_pkg_id.version))\n-    }\n     // This should look at the prefix, clone into a workspace, then build.\n     command_line_test([~\"install\", ~\"mockgithub.com/catamorphism/test_pkg_version\"],\n                       &repo);\n+    let ws = repo.push(\".rust\");\n+    // we can still match on the filename to make sure it contains the 0.4 version\n     assert!(match built_library_in_workspace(&temp_pkg_id,\n-                                             &repo) {\n+                                             &ws) {\n         Some(p) => p.to_str().ends_with(fmt!(\"0.4%s\", os::consts::DLL_SUFFIX)),\n         None    => false\n     });\n-    assert!(built_executable_in_workspace(&temp_pkg_id, &repo)\n-            == Some(repo.push(\"build\").\n+    assert!(built_executable_in_workspace(&temp_pkg_id, &ws)\n+            == Some(ws.push(\"build\").\n                     push(\"mockgithub.com\").\n                     push(\"catamorphism\").\n                     push(\"test_pkg_version\").\n                     push(\"test_pkg_version\")));\n }\n \n+#[test]\n fn test_package_request_version() {\n     let local_path = \"mockgithub.com/catamorphism/test_pkg_version\";\n     let repo = init_git_repo(&Path(local_path));"}]}