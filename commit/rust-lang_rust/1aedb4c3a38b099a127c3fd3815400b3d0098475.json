{"sha": "1aedb4c3a38b099a127c3fd3815400b3d0098475", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhZWRiNGMzYTM4YjA5OWExMjdjM2ZkMzgxNTQwMGIzZDAwOTg0NzU=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-03-04T15:46:41Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-03-04T15:46:41Z"}, "message": "Remove unnecessary bound from HashMap::try_insert.", "tree": {"sha": "89201fc6e0d1ca0c2a64a881830d858cd4b28346", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89201fc6e0d1ca0c2a64a881830d858cd4b28346"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1aedb4c3a38b099a127c3fd3815400b3d0098475", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1aedb4c3a38b099a127c3fd3815400b3d0098475", "html_url": "https://github.com/rust-lang/rust/commit/1aedb4c3a38b099a127c3fd3815400b3d0098475", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1aedb4c3a38b099a127c3fd3815400b3d0098475/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da01455813f8887d7c709f8c37bff9dcbbce34c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/da01455813f8887d7c709f8c37bff9dcbbce34c3", "html_url": "https://github.com/rust-lang/rust/commit/da01455813f8887d7c709f8c37bff9dcbbce34c3"}], "stats": {"total": 5, "additions": 1, "deletions": 4}, "files": [{"sha": "cd6787cf5881286f9153c7625cec2917532c76e9", "filename": "library/std/src/collections/hash/map.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1aedb4c3a38b099a127c3fd3815400b3d0098475/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1aedb4c3a38b099a127c3fd3815400b3d0098475/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs?ref=1aedb4c3a38b099a127c3fd3815400b3d0098475", "patch": "@@ -868,10 +868,7 @@ where\n     /// assert_eq!(err.value, \"b\");\n     /// ```\n     #[unstable(feature = \"map_try_insert\", issue = \"none\")]\n-    pub fn try_insert(&mut self, key: K, value: V) -> Result<&mut V, OccupiedError<'_, K, V>>\n-    where\n-        K: Ord,\n-    {\n+    pub fn try_insert(&mut self, key: K, value: V) -> Result<&mut V, OccupiedError<'_, K, V>> {\n         match self.entry(key) {\n             Occupied(entry) => Err(OccupiedError { entry, value }),\n             Vacant(entry) => Ok(entry.insert(value)),"}]}