{"sha": "c307e90daaaba8b66e3335a82d343f7a62361c02", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzMDdlOTBkYWFhYmE4YjY2ZTMzMzVhODJkMzQzZjdhNjIzNjFjMDI=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2020-09-01T02:18:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-01T02:18:21Z"}, "message": "Rollup merge of #76139 - CDirkx:cow-is-borrowed, r=ecstatic-morse\n\nMake `cow_is_borrowed` methods const\n\nConstify the following methods of `alloc::borrow::Cow`:\n - `is_borrowed`\n - `is_owned`\n\nAnalogous to the const methods `is_some` and `is_none` for Option, and `is_ok` and `is_err` for Result.\n\nThese methods are still unstable under `cow_is_borrowed`.\nPossible because of #49146 (Allow if and match in constants).\n\nTracking issue: #65143", "tree": {"sha": "1f6e7c947c63cfe2f04214e39c6c9d7519289572", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f6e7c947c63cfe2f04214e39c6c9d7519289572"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c307e90daaaba8b66e3335a82d343f7a62361c02", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfTa9tCRBK7hj4Ov3rIwAAdHIIAHCpx69YpJPp0iBASpJcMtOm\nWf1XONVTyI3D0wyk18X73XIivDD29aUkxonUzY0q8040UqjOV0nq9+nQF0iVlgSm\n3I9p7IlRx0LPUwitMUq0dS36WweGL/tyILdj338Q2B+CEIh4vcrLaav5PxKPYBUS\npjNSjezN4KxgcnwHtoNW2okRzfbe2nJwher+kvaEaOsvxoRYM7VPnycgrm8QZhq2\nfA5eEsHfwTM8CVJpAc+ppRURkHgo2Mj6cyEEqbZxwDGcPYE4XswLSNUBtzWKSjGZ\nHoJMjPFZCKfmpxa4YF8FjEGstMvntstXE6gAM4OwJk8bb4l6bEZtqHW8uYkUHdw=\n=J7mJ\n-----END PGP SIGNATURE-----\n", "payload": "tree 1f6e7c947c63cfe2f04214e39c6c9d7519289572\nparent 4f276202f52ca6cfd122cc88ea304b197ab06a02\nparent d591829ed0c9c589c0b05e9cabf1b90d30ed19a9\nauthor Tyler Mandry <tmandry@gmail.com> 1598926701 -0700\ncommitter GitHub <noreply@github.com> 1598926701 -0700\n\nRollup merge of #76139 - CDirkx:cow-is-borrowed, r=ecstatic-morse\n\nMake `cow_is_borrowed` methods const\n\nConstify the following methods of `alloc::borrow::Cow`:\n - `is_borrowed`\n - `is_owned`\n\nAnalogous to the const methods `is_some` and `is_none` for Option, and `is_ok` and `is_err` for Result.\n\nThese methods are still unstable under `cow_is_borrowed`.\nPossible because of #49146 (Allow if and match in constants).\n\nTracking issue: #65143\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c307e90daaaba8b66e3335a82d343f7a62361c02", "html_url": "https://github.com/rust-lang/rust/commit/c307e90daaaba8b66e3335a82d343f7a62361c02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c307e90daaaba8b66e3335a82d343f7a62361c02/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f276202f52ca6cfd122cc88ea304b197ab06a02", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f276202f52ca6cfd122cc88ea304b197ab06a02", "html_url": "https://github.com/rust-lang/rust/commit/4f276202f52ca6cfd122cc88ea304b197ab06a02"}, {"sha": "d591829ed0c9c589c0b05e9cabf1b90d30ed19a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/d591829ed0c9c589c0b05e9cabf1b90d30ed19a9", "html_url": "https://github.com/rust-lang/rust/commit/d591829ed0c9c589c0b05e9cabf1b90d30ed19a9"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "e7260f3956c3833671ac771677956e6285c5e48d", "filename": "library/alloc/src/borrow.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c307e90daaaba8b66e3335a82d343f7a62361c02/library%2Falloc%2Fsrc%2Fborrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c307e90daaaba8b66e3335a82d343f7a62361c02/library%2Falloc%2Fsrc%2Fborrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fborrow.rs?ref=c307e90daaaba8b66e3335a82d343f7a62361c02", "patch": "@@ -217,7 +217,7 @@ impl<B: ?Sized + ToOwned> Cow<'_, B> {\n     /// assert!(!bull.is_borrowed());\n     /// ```\n     #[unstable(feature = \"cow_is_borrowed\", issue = \"65143\")]\n-    pub fn is_borrowed(&self) -> bool {\n+    pub const fn is_borrowed(&self) -> bool {\n         match *self {\n             Borrowed(_) => true,\n             Owned(_) => false,\n@@ -239,7 +239,7 @@ impl<B: ?Sized + ToOwned> Cow<'_, B> {\n     /// assert!(!bull.is_owned());\n     /// ```\n     #[unstable(feature = \"cow_is_borrowed\", issue = \"65143\")]\n-    pub fn is_owned(&self) -> bool {\n+    pub const fn is_owned(&self) -> bool {\n         !self.is_borrowed()\n     }\n "}, {"sha": "adebe20f5a25591df1f21b58a7dd7acec590e820", "filename": "src/test/ui/consts/cow-is-borrowed.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c307e90daaaba8b66e3335a82d343f7a62361c02/src%2Ftest%2Fui%2Fconsts%2Fcow-is-borrowed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c307e90daaaba8b66e3335a82d343f7a62361c02/src%2Ftest%2Fui%2Fconsts%2Fcow-is-borrowed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fcow-is-borrowed.rs?ref=c307e90daaaba8b66e3335a82d343f7a62361c02", "patch": "@@ -0,0 +1,15 @@\n+// run-pass\n+\n+#![feature(cow_is_borrowed)]\n+\n+use std::borrow::Cow;\n+\n+fn main() {\n+    const COW: Cow<str> = Cow::Borrowed(\"moo\");\n+\n+    const IS_BORROWED: bool = COW.is_borrowed();\n+    assert!(IS_BORROWED);\n+\n+    const IS_OWNED: bool = COW.is_owned();\n+    assert!(!IS_OWNED);\n+}"}]}