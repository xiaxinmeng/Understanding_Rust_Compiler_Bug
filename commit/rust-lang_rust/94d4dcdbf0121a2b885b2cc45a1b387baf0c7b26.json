{"sha": "94d4dcdbf0121a2b885b2cc45a1b387baf0c7b26", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0ZDRkY2RiZjAxMjFhMmI4ODViMmNjNDVhMWIzODdiYWYwYzdiMjY=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-02-13T13:47:36Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-02-13T16:55:40Z"}, "message": "Fix bug in handling of block functions in last-use analysis\n\nIt would fail to start out with a fresh scope when going over\na loop or block function for the second time, and thus not\nrecognize last uses of locals defined inside the block.\n\nCloses #1818", "tree": {"sha": "bda3371fa008463afa5f6bfc3f3f43f4e3649544", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bda3371fa008463afa5f6bfc3f3f43f4e3649544"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94d4dcdbf0121a2b885b2cc45a1b387baf0c7b26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94d4dcdbf0121a2b885b2cc45a1b387baf0c7b26", "html_url": "https://github.com/rust-lang/rust/commit/94d4dcdbf0121a2b885b2cc45a1b387baf0c7b26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94d4dcdbf0121a2b885b2cc45a1b387baf0c7b26/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "520c3f5f798f65b7b26fe9c7f6409ef2f3cf6984", "url": "https://api.github.com/repos/rust-lang/rust/commits/520c3f5f798f65b7b26fe9c7f6409ef2f3cf6984", "html_url": "https://github.com/rust-lang/rust/commit/520c3f5f798f65b7b26fe9c7f6409ef2f3cf6984"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "111cbde0fa38bf0b0b9261bbb99405e477d77751", "filename": "src/comp/middle/last_use.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/94d4dcdbf0121a2b885b2cc45a1b387baf0c7b26/src%2Fcomp%2Fmiddle%2Flast_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94d4dcdbf0121a2b885b2cc45a1b387baf0c7b26/src%2Fcomp%2Fmiddle%2Flast_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Flast_use.rs?ref=94d4dcdbf0121a2b885b2cc45a1b387baf0c7b26", "patch": "@@ -137,7 +137,6 @@ fn visit_expr(ex: @expr, cx: ctx, v: visit::vt<ctx>) {\n         // n.b.: safe to ignore copies, as if they are unused\n         // then they are ignored, otherwise they will show up\n         // as freevars in the body.\n-\n         vec::iter(cap_clause.moves) {|ci|\n             clear_def_if_path(cx, cx.def_map.get(ci.id), true);\n         }\n@@ -203,13 +202,18 @@ fn visit_fn(fk: visit::fn_kind, decl: fn_decl, body: blk,\n fn visit_block(tp: block_type, cx: ctx, visit: fn()) {\n     let local = @{type: tp, mutable second: false, mutable exits: []};\n     cx.blocks = cons(local, @cx.blocks);\n+    let start_current = cx.current;\n     visit();\n     local.second = true;\n+    local.exits = [];\n+    cx.current = start_current;\n     visit();\n     let cx_blocks = cx.blocks;\n     check is_not_empty(cx_blocks);\n     cx.blocks = tail(cx_blocks);\n-    cx.current = join_branches(local.exits);\n+    let branches = if tp == func { local.exits + [cx.current] }\n+                   else { local.exits };\n+    cx.current = join_branches(branches);\n }\n \n fn add_block_exit(cx: ctx, tp: block_type) -> bool {"}, {"sha": "d0593853e1d55b875355aa8d8d7e3ac982b40ea5", "filename": "src/test/run-pass/last-use-in-block.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/94d4dcdbf0121a2b885b2cc45a1b387baf0c7b26/src%2Ftest%2Frun-pass%2Flast-use-in-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94d4dcdbf0121a2b885b2cc45a1b387baf0c7b26/src%2Ftest%2Frun-pass%2Flast-use-in-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flast-use-in-block.rs?ref=94d4dcdbf0121a2b885b2cc45a1b387baf0c7b26", "patch": "@@ -0,0 +1,16 @@\n+// Issue #1818\n+\n+fn loop<T>(s: str, f: fn(str) -> T) -> T {\n+    while false {\n+        let r = f(s);\n+        ret r;\n+    }\n+    fail;\n+}\n+\n+fn apply<T>(s: str, f: fn(str) -> T) -> T {\n+    fn g<T>(s: str, f: fn(str) -> T) -> T {f(s)}\n+    g(s) {|v| let r = f(v); r }\n+}\n+\n+fn main() {}"}]}