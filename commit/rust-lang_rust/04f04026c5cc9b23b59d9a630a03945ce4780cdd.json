{"sha": "04f04026c5cc9b23b59d9a630a03945ce4780cdd", "node_id": "C_kwDOAAsO6NoAKDA0ZjA0MDI2YzVjYzliMjNiNTlkOWE2MzBhMDM5NDVjZTQ3ODBjZGQ", "commit": {"author": {"name": "Jacob Hoffman-Andrews", "email": "github@hoffman-andrews.com", "date": "2022-01-07T23:21:08Z"}, "committer": {"name": "Jacob Hoffman-Andrews", "email": "github@hoffman-andrews.com", "date": "2022-01-15T03:33:37Z"}, "message": "Add support for \"always theme\" in setting", "tree": {"sha": "81031aee782eec712322c0b5549908f73f10bb0f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81031aee782eec712322c0b5549908f73f10bb0f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04f04026c5cc9b23b59d9a630a03945ce4780cdd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04f04026c5cc9b23b59d9a630a03945ce4780cdd", "html_url": "https://github.com/rust-lang/rust/commit/04f04026c5cc9b23b59d9a630a03945ce4780cdd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04f04026c5cc9b23b59d9a630a03945ce4780cdd/comments", "author": {"login": "jsha", "id": 220205, "node_id": "MDQ6VXNlcjIyMDIwNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/220205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsha", "html_url": "https://github.com/jsha", "followers_url": "https://api.github.com/users/jsha/followers", "following_url": "https://api.github.com/users/jsha/following{/other_user}", "gists_url": "https://api.github.com/users/jsha/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsha/subscriptions", "organizations_url": "https://api.github.com/users/jsha/orgs", "repos_url": "https://api.github.com/users/jsha/repos", "events_url": "https://api.github.com/users/jsha/events{/privacy}", "received_events_url": "https://api.github.com/users/jsha/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsha", "id": 220205, "node_id": "MDQ6VXNlcjIyMDIwNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/220205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsha", "html_url": "https://github.com/jsha", "followers_url": "https://api.github.com/users/jsha/followers", "following_url": "https://api.github.com/users/jsha/following{/other_user}", "gists_url": "https://api.github.com/users/jsha/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsha/subscriptions", "organizations_url": "https://api.github.com/users/jsha/orgs", "repos_url": "https://api.github.com/users/jsha/repos", "events_url": "https://api.github.com/users/jsha/events{/privacy}", "received_events_url": "https://api.github.com/users/jsha/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4b994ff80a993fb144d8ce2af6f2caf34b30347", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4b994ff80a993fb144d8ce2af6f2caf34b30347", "html_url": "https://github.com/rust-lang/rust/commit/c4b994ff80a993fb144d8ce2af6f2caf34b30347"}], "stats": {"total": 57, "additions": 47, "deletions": 10}, "files": [{"sha": "cf5dda3f2d410d5dd11699b8b1cacc959bd25d54", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/04f04026c5cc9b23b59d9a630a03945ce4780cdd/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04f04026c5cc9b23b59d9a630a03945ce4780cdd/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=04f04026c5cc9b23b59d9a630a03945ce4780cdd", "patch": "@@ -421,6 +421,12 @@ fn settings(root_path: &str, suffix: &str, theme_names: Vec<String>) -> Result<S\n             \"Theme preferences\",\n             vec![\n                 Setting::from((\"use-system-theme\", \"Use system theme\", true)),\n+                Setting::Select {\n+                    js_data_name: \"theme\",\n+                    description: \"Theme\",\n+                    default_value: \"light\",\n+                    options: theme_names.clone(),\n+                },\n                 Setting::Select {\n                     js_data_name: \"preferred-dark-theme\",\n                     description: \"Preferred dark theme\","}, {"sha": "e5c7e1ea1a03c36c57455d9106f979f07c079247", "filename": "src/librustdoc/html/static/js/settings.js", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/04f04026c5cc9b23b59d9a630a03945ce4780cdd/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsettings.js", "raw_url": "https://github.com/rust-lang/rust/raw/04f04026c5cc9b23b59d9a630a03945ce4780cdd/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsettings.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsettings.js?ref=04f04026c5cc9b23b59d9a630a03945ce4780cdd", "patch": "@@ -1,15 +1,18 @@\n // Local js definitions:\n /* global getSettingValue, getVirtualKey, onEachLazy, updateLocalStorage, updateSystemTheme */\n+/* global addClass, removeClass */\n \n (function () {\n     function changeSetting(settingName, value) {\n         updateLocalStorage(\"rustdoc-\" + settingName, value);\n \n         switch (settingName) {\n+            case \"theme\":\n             case \"preferred-dark-theme\":\n             case \"preferred-light-theme\":\n             case \"use-system-theme\":\n                 updateSystemTheme();\n+                updateLightAndDark();\n                 break;\n         }\n     }\n@@ -29,7 +32,32 @@\n         }\n     }\n \n+    function showLightAndDark() {\n+        addClass(document.getElementById(\"theme\").parentElement.parentElement, \"hidden\");\n+        removeClass(document.getElementById(\"preferred-light-theme\").parentElement.parentElement,\n+            \"hidden\");\n+        removeClass(document.getElementById(\"preferred-dark-theme\").parentElement.parentElement,\n+            \"hidden\");\n+    }\n+\n+    function hideLightAndDark() {\n+        addClass(document.getElementById(\"preferred-light-theme\").parentElement.parentElement,\n+            \"hidden\");\n+        addClass(document.getElementById(\"preferred-dark-theme\").parentElement.parentElement,\n+            \"hidden\");\n+        removeClass(document.getElementById(\"theme\").parentElement.parentElement, \"hidden\");\n+    }\n+\n+    function updateLightAndDark() {\n+        if (getSettingValue(\"use-system-theme\") !== \"false\") {\n+            showLightAndDark();\n+        } else {\n+            hideLightAndDark();\n+        }\n+    }\n+\n     function setEvents() {\n+        updateLightAndDark();\n         onEachLazy(document.getElementsByClassName(\"slider\"), function(elem) {\n             var toggle = elem.previousElementSibling;\n             var settingId = toggle.id;"}, {"sha": "2394df4c715d4fc5421c2e94a510ed76904e08df", "filename": "src/librustdoc/html/static/js/storage.js", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/04f04026c5cc9b23b59d9a630a03945ce4780cdd/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fstorage.js", "raw_url": "https://github.com/rust-lang/rust/raw/04f04026c5cc9b23b59d9a630a03945ce4780cdd/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fstorage.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fstorage.js?ref=04f04026c5cc9b23b59d9a630a03945ce4780cdd", "patch": "@@ -187,22 +187,25 @@ var updateSystemTheme = (function() {\n     var mql = window.matchMedia(\"(prefers-color-scheme: dark)\");\n \n     function handlePreferenceChange(mql) {\n+        let use = function(theme) {\n+            switchTheme(window.currentTheme, window.mainTheme, theme, true);\n+        };\n         // maybe the user has disabled the setting in the meantime!\n         if (getSettingValue(\"use-system-theme\") !== \"false\") {\n             var lightTheme = getSettingValue(\"preferred-light-theme\") || \"light\";\n             var darkTheme = getSettingValue(\"preferred-dark-theme\") || \"dark\";\n \n             if (mql.matches) {\n-                // prefers a dark theme\n-                switchTheme(window.currentTheme, window.mainTheme, darkTheme, true);\n+                use(darkTheme);\n             } else {\n                 // prefers a light theme, or has no preference\n-                switchTheme(window.currentTheme, window.mainTheme, lightTheme, true);\n+                use(lightTheme);\n             }\n-\n             // note: we save the theme so that it doesn't suddenly change when\n             // the user disables \"use-system-theme\" and reloads the page or\n             // navigates to another page\n+        } else {\n+            use(getSettingValue(\"theme\"));\n         }\n     }\n "}, {"sha": "67b9164cfec71ecadfbe8e36453f1d281a2eb07f", "filename": "src/test/rustdoc-gui/toggle-docs-mobile.goml", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/04f04026c5cc9b23b59d9a630a03945ce4780cdd/src%2Ftest%2Frustdoc-gui%2Ftoggle-docs-mobile.goml", "raw_url": "https://github.com/rust-lang/rust/raw/04f04026c5cc9b23b59d9a630a03945ce4780cdd/src%2Ftest%2Frustdoc-gui%2Ftoggle-docs-mobile.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Ftoggle-docs-mobile.goml?ref=04f04026c5cc9b23b59d9a630a03945ce4780cdd", "patch": "@@ -1,12 +1,12 @@\n goto: file://|DOC_PATH|/test_docs/struct.Foo.html\n size: (433, 600)\n assert-attribute: (\".top-doc\", {\"open\": \"\"})\n-click: (4, 240) // This is the position of the top doc comment toggle\n+click: (4, 260) // This is the position of the top doc comment toggle\n assert-attribute-false: (\".top-doc\", {\"open\": \"\"})\n-click: (4, 240)\n+click: (4, 260)\n assert-attribute: (\".top-doc\", {\"open\": \"\"})\n // To ensure that the toggle isn't over the text, we check that the toggle isn't clicked.\n-click: (3, 240)\n+click: (3, 260)\n assert-attribute: (\".top-doc\", {\"open\": \"\"})\n \n // Assert the position of the toggle on the top doc block.\n@@ -22,10 +22,10 @@ assert-position: (\n // Now we do the same but with a little bigger width\n size: (600, 600)\n assert-attribute: (\".top-doc\", {\"open\": \"\"})\n-click: (4, 240) // New Y position since all search elements are back on one line.\n+click: (4, 260) // New Y position since all search elements are back on one line.\n assert-attribute-false: (\".top-doc\", {\"open\": \"\"})\n-click: (4, 240)\n+click: (4, 260)\n assert-attribute: (\".top-doc\", {\"open\": \"\"})\n // To ensure that the toggle isn't over the text, we check that the toggle isn't clicked.\n-click: (3, 240)\n+click: (3, 260)\n assert-attribute: (\".top-doc\", {\"open\": \"\"})"}]}