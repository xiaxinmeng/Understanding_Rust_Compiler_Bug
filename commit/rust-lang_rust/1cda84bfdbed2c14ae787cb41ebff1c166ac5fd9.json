{"sha": "1cda84bfdbed2c14ae787cb41ebff1c166ac5fd9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjZGE4NGJmZGJlZDJjMTRhZTc4N2NiNDFlYmZmMWMxNjZhYzVmZDk=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-08-16T16:13:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-08-16T16:13:21Z"}, "message": "Rollup merge of #53360 - PramodBisht:issue/51602, r=estebank\n\nAddressed #51602\n\nFixed #51602\nr? @estebank\n\nhere I have addressed the case where `in` was not expected right after `if` block. Speaking of `type ascription` I am not sure if this the best approach which I have implemented. Plus I think one more test case can be added to test `type-ascription` case, though I don't have any at this point of time. I will ping you again if all existing testcases pass.", "tree": {"sha": "b7b38447566584642f1f91f7126e2ae8d3da3001", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7b38447566584642f1f91f7126e2ae8d3da3001"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1cda84bfdbed2c14ae787cb41ebff1c166ac5fd9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbdaKiCRBK7hj4Ov3rIwAAdHIIALI0pVmVbj3ZR1iCKlh4nFzi\nxxHBfKIl95lxDIczML2Z83TADMEYFT0wKqtxdyZELcDBmnZu6Fh6DYkGv/Kph+0E\nUCjr5Iqm/BJab6abooO+tXFurKV+vyxsVBtLxPfkIq7o+exA45uSI/Lg4w3xmkwq\np5TauKdXmAiQiP8NiG22Wiy+qRr91zhxfAPtsd5slxY1w9Wka+u2CvxKJXohCj7x\nY1FGrE56tXeImgqDqYClSBQfPhx94VY2clzHhCUu9wAcGNgFhzcxAluStmEE/7n3\n49UHjEF5fwtM9GSlt0jC4mls/caAX2pgFG10Z9CFOjd12cVj5OINHMN+UGNy6+4=\n=W1YJ\n-----END PGP SIGNATURE-----\n", "payload": "tree b7b38447566584642f1f91f7126e2ae8d3da3001\nparent e6068828bddd8b756512e7f0af6d2126908c891f\nparent b70be5bc7953007c333db510b5784c7a051a9b27\nauthor kennytm <kennytm@gmail.com> 1534436001 +0800\ncommitter GitHub <noreply@github.com> 1534436001 +0800\n\nRollup merge of #53360 - PramodBisht:issue/51602, r=estebank\n\nAddressed #51602\n\nFixed #51602\nr? @estebank\n\nhere I have addressed the case where `in` was not expected right after `if` block. Speaking of `type ascription` I am not sure if this the best approach which I have implemented. Plus I think one more test case can be added to test `type-ascription` case, though I don't have any at this point of time. I will ping you again if all existing testcases pass.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1cda84bfdbed2c14ae787cb41ebff1c166ac5fd9", "html_url": "https://github.com/rust-lang/rust/commit/1cda84bfdbed2c14ae787cb41ebff1c166ac5fd9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1cda84bfdbed2c14ae787cb41ebff1c166ac5fd9/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6068828bddd8b756512e7f0af6d2126908c891f", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6068828bddd8b756512e7f0af6d2126908c891f", "html_url": "https://github.com/rust-lang/rust/commit/e6068828bddd8b756512e7f0af6d2126908c891f"}, {"sha": "b70be5bc7953007c333db510b5784c7a051a9b27", "url": "https://api.github.com/repos/rust-lang/rust/commits/b70be5bc7953007c333db510b5784c7a051a9b27", "html_url": "https://github.com/rust-lang/rust/commit/b70be5bc7953007c333db510b5784c7a051a9b27"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "345464c66642570e2e39a6d22358f54192c5b5f8", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1cda84bfdbed2c14ae787cb41ebff1c166ac5fd9/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cda84bfdbed2c14ae787cb41ebff1c166ac5fd9/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=1cda84bfdbed2c14ae787cb41ebff1c166ac5fd9", "patch": "@@ -4719,7 +4719,12 @@ impl<'a> Parser<'a> {\n         if !self.eat(&token::OpenDelim(token::Brace)) {\n             let sp = self.span;\n             let tok = self.this_token_to_string();\n+            let mut do_not_suggest_help = false;\n             let mut e = self.span_fatal(sp, &format!(\"expected `{{`, found `{}`\", tok));\n+            if self.token.is_keyword(keywords::In) || self.token == token::Colon {\n+                do_not_suggest_help = true;\n+                e.span_label(sp, \"expected `{`\");\n+            }\n \n             // Check to see if the user has written something like\n             //\n@@ -4729,7 +4734,8 @@ impl<'a> Parser<'a> {\n             // Which is valid in other languages, but not Rust.\n             match self.parse_stmt_without_recovery(false) {\n                 Ok(Some(stmt)) => {\n-                    if self.look_ahead(1, |t| t == &token::OpenDelim(token::Brace)) {\n+                    if self.look_ahead(1, |t| t == &token::OpenDelim(token::Brace))\n+                        || do_not_suggest_help {\n                         // if the next token is an open brace (e.g., `if a b {`), the place-\n                         // inside-a-block suggestion would be more likely wrong than right\n                         return Err(e);"}, {"sha": "a3edecb94f7c5d107f082bac1a16decf92004caa", "filename": "src/test/ui/issue-51602.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/1cda84bfdbed2c14ae787cb41ebff1c166ac5fd9/src%2Ftest%2Fui%2Fissue-51602.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cda84bfdbed2c14ae787cb41ebff1c166ac5fd9/src%2Ftest%2Fui%2Fissue-51602.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-51602.rs?ref=1cda84bfdbed2c14ae787cb41ebff1c166ac5fd9", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main(){\n+    if i in 1..10 {\n+        break;\n+    }\n+}"}, {"sha": "ac079b452c5eb4647b8be348617a7653dcf57e2a", "filename": "src/test/ui/issue-51602.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1cda84bfdbed2c14ae787cb41ebff1c166ac5fd9/src%2Ftest%2Fui%2Fissue-51602.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1cda84bfdbed2c14ae787cb41ebff1c166ac5fd9/src%2Ftest%2Fui%2Fissue-51602.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-51602.stderr?ref=1cda84bfdbed2c14ae787cb41ebff1c166ac5fd9", "patch": "@@ -0,0 +1,10 @@\n+error: expected `{`, found `in`\n+  --> $DIR/issue-51602.rs:12:10\n+   |\n+LL |     if i in 1..10 {\n+   |     --   ^^ expected `{`\n+   |     |\n+   |     this `if` statement has a condition, but no block\n+\n+error: aborting due to previous error\n+"}]}