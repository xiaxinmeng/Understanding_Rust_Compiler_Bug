{"sha": "925baa8b373e81b5199f27e87cc762d59649507e", "node_id": "C_kwDOAAsO6NoAKDkyNWJhYThiMzczZTgxYjUxOTlmMjdlODdjYzc2MmQ1OTY0OTUwN2U", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-05T13:29:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-05T13:29:08Z"}, "message": "Rollup merge of #108613 - jyn514:rm-skip-rebuild, r=Mark-Simulacrum\n\nRemove `llvm.skip-rebuild` option\n\nThis was added to in 2019 to speed up rebuild times when LLVM was modified. Now that download-ci-llvm exists, I don't think it makes sense to support an unsound option like this that can lead to miscompiles; and the code cleanup is nice too.\n\nr? `@Mark-Simulacrum` cc `@varkor` #65612", "tree": {"sha": "ba3f66ce01bbfbd5a89bf5c8b730b3142bfefda8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba3f66ce01bbfbd5a89bf5c8b730b3142bfefda8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/925baa8b373e81b5199f27e87cc762d59649507e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkBJkkCRBK7hj4Ov3rIwAA8iIIAHI3rNfGlnPpXv4TaDY2OsKN\nYZJXX+U8VBC19SzCot0ghj2bMzfYV2inFJIWoAlCMUiUaVkfB5LX0kQj4Z3Xwt/F\nQz3Fg8iKenneq2mpL4oo3CxpMlotPVj+S2RHp8U6XyY8a7zTdMIZ4iCVP+LTVy9J\na7c5dfNHO7uf96V1jSoqaJvgIK/qVgvh42bnx2xIBbf2SFGV4xllqTRwz9JrFn5H\n0+bkBVkVfK4kGuuaGKNY8ajDd1D9Q/sl/WyrPyoao5Jvk8H7YJy5RffGFwUcFmFf\nxB36gxOuQWPpsaQc0KIFcMy0GXg2KMtf+Z2AZbIW44XnrWMgqugTuIRjBut7DcQ=\n=fBTF\n-----END PGP SIGNATURE-----\n", "payload": "tree ba3f66ce01bbfbd5a89bf5c8b730b3142bfefda8\nparent 2f8bf34c9c5a1ffc98a82009683ac911bc5f6a57\nparent daf99a437ee3e7de9f7bb7b7f2805e4699246f3d\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1678022948 +0100\ncommitter GitHub <noreply@github.com> 1678022948 +0100\n\nRollup merge of #108613 - jyn514:rm-skip-rebuild, r=Mark-Simulacrum\n\nRemove `llvm.skip-rebuild` option\n\nThis was added to in 2019 to speed up rebuild times when LLVM was modified. Now that download-ci-llvm exists, I don't think it makes sense to support an unsound option like this that can lead to miscompiles; and the code cleanup is nice too.\n\nr? `@Mark-Simulacrum` cc `@varkor` #65612\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/925baa8b373e81b5199f27e87cc762d59649507e", "html_url": "https://github.com/rust-lang/rust/commit/925baa8b373e81b5199f27e87cc762d59649507e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/925baa8b373e81b5199f27e87cc762d59649507e/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f8bf34c9c5a1ffc98a82009683ac911bc5f6a57", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f8bf34c9c5a1ffc98a82009683ac911bc5f6a57", "html_url": "https://github.com/rust-lang/rust/commit/2f8bf34c9c5a1ffc98a82009683ac911bc5f6a57"}, {"sha": "daf99a437ee3e7de9f7bb7b7f2805e4699246f3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/daf99a437ee3e7de9f7bb7b7f2805e4699246f3d", "html_url": "https://github.com/rust-lang/rust/commit/daf99a437ee3e7de9f7bb7b7f2805e4699246f3d"}], "stats": {"total": 38, "additions": 0, "deletions": 38}, "files": [{"sha": "267aa8cb548386c5d291c2f587cfdb8ac9be9520", "filename": "config.toml.example", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/925baa8b373e81b5199f27e87cc762d59649507e/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/925baa8b373e81b5199f27e87cc762d59649507e/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=925baa8b373e81b5199f27e87cc762d59649507e", "patch": "@@ -46,12 +46,6 @@ changelog-seen = 2\n # Defaults to \"if-available\" when `channel = \"dev\"` and \"false\" otherwise.\n #download-ci-llvm = \"if-available\"\n \n-# Indicates whether LLVM rebuild should be skipped when running bootstrap. If\n-# this is `false` then the compiler's LLVM will be rebuilt whenever the built\n-# version doesn't have the correct hash. If it is `true` then LLVM will never\n-# be rebuilt. The default value is `false`.\n-#skip-rebuild = false\n-\n # Indicates whether the LLVM build is a Release or Debug build\n #optimize = true\n "}, {"sha": "bf1aff7b72f47c4dab395c717d955ce9ed2e57fb", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/925baa8b373e81b5199f27e87cc762d59649507e/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/925baa8b373e81b5199f27e87cc762d59649507e/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=925baa8b373e81b5199f27e87cc762d59649507e", "patch": "@@ -112,7 +112,6 @@ pub struct Config {\n     pub backtrace_on_ice: bool,\n \n     // llvm codegen options\n-    pub llvm_skip_rebuild: bool,\n     pub llvm_assertions: bool,\n     pub llvm_tests: bool,\n     pub llvm_plugins: bool,\n@@ -666,7 +665,6 @@ define_config! {\n define_config! {\n     /// TOML representation of how the LLVM build is configured.\n     struct Llvm {\n-        skip_rebuild: Option<bool> = \"skip-rebuild\",\n         optimize: Option<bool> = \"optimize\",\n         thin_lto: Option<bool> = \"thin-lto\",\n         release_debuginfo: Option<bool> = \"release-debuginfo\",\n@@ -1060,11 +1058,6 @@ impl Config {\n             config.mandir = install.mandir.map(PathBuf::from);\n         }\n \n-        // We want the llvm-skip-rebuild flag to take precedence over the\n-        // skip-rebuild config.toml option so we store it separately\n-        // so that we can infer the right value\n-        let mut llvm_skip_rebuild = flags.llvm_skip_rebuild;\n-\n         // Store off these values as options because if they're not provided\n         // we'll infer default values for them later\n         let mut llvm_assertions = None;\n@@ -1170,7 +1163,6 @@ impl Config {\n             llvm_assertions = llvm.assertions;\n             llvm_tests = llvm.tests;\n             llvm_plugins = llvm.plugins;\n-            llvm_skip_rebuild = llvm_skip_rebuild.or(llvm.skip_rebuild);\n             set(&mut config.llvm_optimize, llvm.optimize);\n             set(&mut config.llvm_thin_lto, llvm.thin_lto);\n             set(&mut config.llvm_release_debuginfo, llvm.release_debuginfo);\n@@ -1324,7 +1316,6 @@ impl Config {\n         // Now that we've reached the end of our configuration, infer the\n         // default values for all options that we haven't otherwise stored yet.\n \n-        config.llvm_skip_rebuild = llvm_skip_rebuild.unwrap_or(false);\n         config.llvm_assertions = llvm_assertions.unwrap_or(false);\n         config.llvm_tests = llvm_tests.unwrap_or(false);\n         config.llvm_plugins = llvm_plugins.unwrap_or(false);"}, {"sha": "2b0b772a61817bd5504ca220e19dbca1b4158f99", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/925baa8b373e81b5199f27e87cc762d59649507e/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/925baa8b373e81b5199f27e87cc762d59649507e/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=925baa8b373e81b5199f27e87cc762d59649507e", "patch": "@@ -67,8 +67,6 @@ pub struct Flags {\n     // true => deny, false => warn\n     pub deny_warnings: Option<bool>,\n \n-    pub llvm_skip_rebuild: Option<bool>,\n-\n     pub rust_profile_use: Option<String>,\n     pub rust_profile_generate: Option<String>,\n \n@@ -249,14 +247,6 @@ To learn more about a subcommand, run `./x.py <subcommand> -h`\",\n         opts.optopt(\"\", \"error-format\", \"rustc error format\", \"FORMAT\");\n         opts.optflag(\"\", \"json-output\", \"use message-format=json\");\n         opts.optopt(\"\", \"color\", \"whether to use color in cargo and rustc output\", \"STYLE\");\n-        opts.optopt(\n-            \"\",\n-            \"llvm-skip-rebuild\",\n-            \"whether rebuilding llvm should be skipped \\\n-             a VALUE of TRUE indicates that llvm will not be rebuilt \\\n-             VALUE overrides the skip-rebuild option in config.toml.\",\n-            \"VALUE\",\n-        );\n         opts.optopt(\n             \"\",\n             \"rust-profile-generate\",\n@@ -714,9 +704,6 @@ Arguments:\n                 .collect::<Vec<_>>(),\n             include_default_paths: matches.opt_present(\"include-default-paths\"),\n             deny_warnings: parse_deny_warnings(&matches),\n-            llvm_skip_rebuild: matches.opt_str(\"llvm-skip-rebuild\").map(|s| s.to_lowercase()).map(\n-                |s| s.parse::<bool>().expect(\"`llvm-skip-rebuild` should be either true or false\"),\n-            ),\n             color: matches\n                 .opt_get_default(\"color\", Color::Auto)\n                 .expect(\"`color` should be `always`, `never`, or `auto`\"),"}, {"sha": "8453a25f38a56dc1cf992f159c183330e7b85402", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/925baa8b373e81b5199f27e87cc762d59649507e/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/925baa8b373e81b5199f27e87cc762d59649507e/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=925baa8b373e81b5199f27e87cc762d59649507e", "patch": "@@ -108,15 +108,6 @@ pub fn prebuilt_llvm_config(\n     let stamp = out_dir.join(\"llvm-finished-building\");\n     let stamp = HashStamp::new(stamp, builder.in_tree_llvm_info.sha());\n \n-    if builder.config.llvm_skip_rebuild && stamp.path.exists() {\n-        builder.info(\n-            \"Warning: \\\n-                Using a potentially stale build of LLVM; \\\n-                This may not behave well.\",\n-        );\n-        return Ok(res);\n-    }\n-\n     if stamp.is_done() {\n         if stamp.hash.is_none() {\n             builder.info("}, {"sha": "32d3440f1dc989f8bde6ad5a895a2c38f26c91da", "filename": "src/doc/rustc/src/platform-support/armeb-unknown-linux-gnueabi.md", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/925baa8b373e81b5199f27e87cc762d59649507e/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Farmeb-unknown-linux-gnueabi.md", "raw_url": "https://github.com/rust-lang/rust/raw/925baa8b373e81b5199f27e87cc762d59649507e/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Farmeb-unknown-linux-gnueabi.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Farmeb-unknown-linux-gnueabi.md?ref=925baa8b373e81b5199f27e87cc762d59649507e", "patch": "@@ -26,7 +26,6 @@ Therefore, you can build Rust with support for the target by adding it to the ta\n ```toml\n [llvm]\n download-ci-llvm = false\n-skip-rebuild = true\n optimize = true\n ninja = true\n targets = \"ARM;X86\""}]}