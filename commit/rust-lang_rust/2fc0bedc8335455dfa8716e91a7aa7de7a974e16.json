{"sha": "2fc0bedc8335455dfa8716e91a7aa7de7a974e16", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmYzBiZWRjODMzNTQ1NWRmYTg3MTZlOTFhN2FhN2RlN2E5NzRlMTY=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-05-21T01:27:54Z"}, "committer": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-05-21T01:32:57Z"}, "message": "rustc: Don't write metadata for unexported items", "tree": {"sha": "83c1cb3178fbe8647d85e74f551bfedba9da5959", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83c1cb3178fbe8647d85e74f551bfedba9da5959"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2fc0bedc8335455dfa8716e91a7aa7de7a974e16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2fc0bedc8335455dfa8716e91a7aa7de7a974e16", "html_url": "https://github.com/rust-lang/rust/commit/2fc0bedc8335455dfa8716e91a7aa7de7a974e16", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2fc0bedc8335455dfa8716e91a7aa7de7a974e16/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78178242057a6a60f6f3a36b9f4a6feae62c7881", "url": "https://api.github.com/repos/rust-lang/rust/commits/78178242057a6a60f6f3a36b9f4a6feae62c7881", "html_url": "https://github.com/rust-lang/rust/commit/78178242057a6a60f6f3a36b9f4a6feae62c7881"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "db84eeabb48ce62dc3dd813fbc8ddcce4294896f", "filename": "src/comp/middle/metadata.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2fc0bedc8335455dfa8716e91a7aa7de7a974e16/src%2Fcomp%2Fmiddle%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fc0bedc8335455dfa8716e91a7aa7de7a974e16/src%2Fcomp%2Fmiddle%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fmetadata.rs?ref=2fc0bedc8335455dfa8716e91a7aa7de7a974e16", "patch": "@@ -341,8 +341,11 @@ fn encode_module_item_paths(&ebml::writer ebml_w,\n                             &ast::_mod module,\n                             &vec[str] path,\n                             &mutable vec[tup(str, uint)] index) {\n-    // TODO: only encode exported items\n     for (@ast::item it in module.items) {\n+        if (!ast::is_exported(ast::item_ident(it), module)) {\n+            cont;\n+        }\n+\n         alt (it.node) {\n             case (ast::item_const(?id, _, ?tps, ?did, ?ann)) {\n                 add_to_index(ebml_w, path, index, id);"}]}