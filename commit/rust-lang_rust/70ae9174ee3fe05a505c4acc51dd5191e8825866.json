{"sha": "70ae9174ee3fe05a505c4acc51dd5191e8825866", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwYWU5MTc0ZWUzZmUwNWE1MDVjNGFjYzUxZGQ1MTkxZTg4MjU4NjY=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-03-22T09:51:34Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-03-22T14:43:47Z"}, "message": "Rollup merge of #49211 - varkor:chalk-lowering-Implemented-From-Env, r=nikomatsakis\n\nImplement Chalk lowering rule \"Implemented-From-Env\"\n\nThis extends the Chalk lowering pass with the \"Implemented-From-Env\" rule for generating program clauses from a trait definition as part of #49177.\n\nr? @nikomatsakis", "tree": {"sha": "0e60df89b3b7d61406ca4d5f0b0e47a7ad7e340f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e60df89b3b7d61406ca4d5f0b0e47a7ad7e340f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70ae9174ee3fe05a505c4acc51dd5191e8825866", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlqzwSMACgkQ/vbIBR0O\nATyvcA//YY0vbixp8XeV/k/YlIPskpKcJ1z0yFFhanBaJskEtpwHah1dqTw++Rgy\nrCWpLOda67wkyT4qyQQ0MlJaU2G3V6Dq1np7BhWWDhUhZrcHcOtc0qAoOGjSemBN\nDKnmykn8IQmDty9R51GS3b/Tap61qrbC6hQWayU+6Q8S4ijN8JOowcQDfcjEULv3\n2M9pcMR5HA+SHjMaFOkKfb6lTUimfKg75oytpVXDtimLC1ODNZnIU6dhl+bcAB/s\nc0nIOdHNQEPZIz85WzM5AHxBBtIoxtJLFvzlcEl4ESUG/xZVn2coBiqYiWHK2Nur\nNkLwTZkqyRE42jZlvA6+7dVrcBM7dQPfphma4nBd3KC5uvHedicIgcs0BaEvnDh9\nz4G87dqJLe54Tw7VTL+JAg/JaJWlmKf+2CXgklJMGnqAdIr7Tr6VvcdEFebOkr9v\nkDmj2McRWxmpvUjLMORlBt/COnIfzRTarMz0+uXniycHmOSvujM4x70wuI0/7zcv\nwGunDFdNmBupDbNLt/PmHh77HVf2iLYyPZLpyWG4cbBPLACKy+LOWIaYzREMhjSJ\nSzDUlgggpYys+uNgt+9z51IYjCtZ6kW0PGWYeD/u4MnwFRsjvKmAfOvgAothVIAa\nk9IZltyHn7DIElhQaP/Yf24UAS1144VzQ2CK8idCInBTWxQHoPM=\n=hCou\n-----END PGP SIGNATURE-----", "payload": "tree 0e60df89b3b7d61406ca4d5f0b0e47a7ad7e340f\nparent 34eca5346f93cf4f674705c24928a191aadaf7d6\nparent 7791995ad5200b65cd9c8391703a76a18f492664\nauthor kennytm <kennytm@gmail.com> 1521712294 +0800\ncommitter kennytm <kennytm@gmail.com> 1521729827 +0800\n\nRollup merge of #49211 - varkor:chalk-lowering-Implemented-From-Env, r=nikomatsakis\n\nImplement Chalk lowering rule \"Implemented-From-Env\"\n\nThis extends the Chalk lowering pass with the \"Implemented-From-Env\" rule for generating program clauses from a trait definition as part of #49177.\n\nr? @nikomatsakis\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70ae9174ee3fe05a505c4acc51dd5191e8825866", "html_url": "https://github.com/rust-lang/rust/commit/70ae9174ee3fe05a505c4acc51dd5191e8825866", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70ae9174ee3fe05a505c4acc51dd5191e8825866/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34eca5346f93cf4f674705c24928a191aadaf7d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/34eca5346f93cf4f674705c24928a191aadaf7d6", "html_url": "https://github.com/rust-lang/rust/commit/34eca5346f93cf4f674705c24928a191aadaf7d6"}, {"sha": "7791995ad5200b65cd9c8391703a76a18f492664", "url": "https://api.github.com/repos/rust-lang/rust/commits/7791995ad5200b65cd9c8391703a76a18f492664", "html_url": "https://github.com/rust-lang/rust/commit/7791995ad5200b65cd9c8391703a76a18f492664"}], "stats": {"total": 79, "additions": 75, "deletions": 4}, "files": [{"sha": "1092e826a35f96c643a9c9e25d620d28a08172c1", "filename": "src/librustc_traits/lowering.rs", "status": "modified", "additions": 45, "deletions": 4, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/70ae9174ee3fe05a505c4acc51dd5191e8825866/src%2Flibrustc_traits%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70ae9174ee3fe05a505c4acc51dd5191e8825866/src%2Flibrustc_traits%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Flowering.rs?ref=70ae9174ee3fe05a505c4acc51dd5191e8825866", "patch": "@@ -12,6 +12,7 @@ use rustc::hir::{self, ImplPolarity};\n use rustc::hir::def_id::DefId;\n use rustc::hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc::ty::{self, TyCtxt};\n+use rustc::ty::subst::Substs;\n use rustc::traits::{QuantifierKind, Goal, DomainGoal, Clause, WhereClauseAtom};\n use syntax::ast;\n use rustc_data_structures::sync::Lrc;\n@@ -104,29 +105,69 @@ crate fn program_clauses_for<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_id: DefI\n     let node_id = tcx.hir.as_local_node_id(def_id).unwrap();\n     let item = tcx.hir.expect_item(node_id);\n     match item.node {\n+        hir::ItemTrait(..) => program_clauses_for_trait(tcx, def_id),\n         hir::ItemImpl(..) => program_clauses_for_impl(tcx, def_id),\n \n         // FIXME: other constructions e.g. traits, associated types...\n         _ => Lrc::new(vec![]),\n     }\n }\n \n+fn program_clauses_for_trait<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_id: DefId)\n+    -> Lrc<Vec<Clause<'tcx>>>\n+{\n+    // Rule Implemented-From-Env (see rustc guide)\n+    //\n+    // `trait Trait<P1..Pn> where WC { .. } // P0 == Self`\n+    //\n+    // ```\n+    // forall<Self, P1..Pn> {\n+    //   Implemented(Self: Trait<P1..Pn>) :- FromEnv(Self: Trait<P1..Pn>)\n+    // }\n+    // ```\n+\n+    // `Self: Trait<P1..Pn>`\n+    let trait_pred = ty::TraitPredicate {\n+        trait_ref: ty::TraitRef {\n+            def_id,\n+            substs: Substs::identity_for_item(tcx, def_id)\n+        }\n+    };\n+    // `FromEnv(Self: Trait<P1..Pn>)`\n+    let from_env = Goal::DomainGoal(DomainGoal::FromEnv(trait_pred.lower()));\n+    // `Implemented(Self: Trait<P1..Pn>)`\n+    let impl_trait = DomainGoal::Holds(WhereClauseAtom::Implemented(trait_pred));\n+\n+    // `Implemented(Self: Trait<P1..Pn>) :- FromEnv(Self: Trait<P1..Pn>)`\n+    let clause = Clause::Implies(vec![from_env], impl_trait);\n+    Lrc::new(vec![clause])\n+}\n+\n fn program_clauses_for_impl<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_id: DefId)\n     -> Lrc<Vec<Clause<'tcx>>>\n {\n     if let ImplPolarity::Negative = tcx.impl_polarity(def_id) {\n         return Lrc::new(vec![]);\n     }\n \n-    // Rule Implemented-From-Impl\n+    // Rule Implemented-From-Impl (see rustc guide)\n+    //\n+    // `impl<P0..Pn> Trait<A1..An> for A0 where WC { .. }`\n     //\n-    // (see rustc guide)\n+    // ```\n+    // forall<P0..Pn> {\n+    //   Implemented(A0: Trait<A1..An>) :- WC\n+    // }\n+    // ```\n \n     let trait_ref = tcx.impl_trait_ref(def_id).unwrap();\n-    let trait_ref = ty::TraitPredicate { trait_ref }.lower();\n+    // `Implemented(A0: Trait<A1..An>)`\n+    let trait_pred = ty::TraitPredicate { trait_ref }.lower();\n+     // `WC`\n     let where_clauses = tcx.predicates_of(def_id).predicates.lower();\n \n-    let clause = Clause::Implies(where_clauses, trait_ref);\n+     // `Implemented(A0: Trait<A1..An>) :- WC`\n+    let clause = Clause::Implies(where_clauses, trait_pred);\n     Lrc::new(vec![clause])\n }\n "}, {"sha": "010cb77edc3f10e87c2ad921edde77d4e93042f2", "filename": "src/test/ui/chalkify/lower_trait.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/70ae9174ee3fe05a505c4acc51dd5191e8825866/src%2Ftest%2Fui%2Fchalkify%2Flower_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70ae9174ee3fe05a505c4acc51dd5191e8825866/src%2Ftest%2Fui%2Fchalkify%2Flower_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fchalkify%2Flower_trait.rs?ref=70ae9174ee3fe05a505c4acc51dd5191e8825866", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(rustc_attrs)]\n+\n+#[rustc_dump_program_clauses] //~ ERROR Implemented(Self: Foo<S, T, U>) :-\n+trait Foo<S, T, U> {\n+    fn s(S) -> S;\n+    fn t(T) -> T;\n+    fn u(U) -> U;\n+}\n+\n+fn main() {\n+    println!(\"hello\");\n+}"}, {"sha": "6da1e2fd8edd8f810a1b858fc32c970536286fcd", "filename": "src/test/ui/chalkify/lower_trait.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/70ae9174ee3fe05a505c4acc51dd5191e8825866/src%2Ftest%2Fui%2Fchalkify%2Flower_trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/70ae9174ee3fe05a505c4acc51dd5191e8825866/src%2Ftest%2Fui%2Fchalkify%2Flower_trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fchalkify%2Flower_trait.stderr?ref=70ae9174ee3fe05a505c4acc51dd5191e8825866", "patch": "@@ -0,0 +1,8 @@\n+error: Implemented(Self: Foo<S, T, U>) :- FromEnv(Self: Foo<S, T, U>).\n+  --> $DIR/lower_trait.rs:13:1\n+   |\n+LL | #[rustc_dump_program_clauses] //~ ERROR Implemented(Self: Foo<S, T, U>) :-\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}]}