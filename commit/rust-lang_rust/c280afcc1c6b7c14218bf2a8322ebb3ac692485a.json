{"sha": "c280afcc1c6b7c14218bf2a8322ebb3ac692485a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyODBhZmNjMWM2YjdjMTQyMThiZjJhODMyMmViYjNhYzY5MjQ4NWE=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2017-08-21T09:04:15Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2017-08-21T10:49:18Z"}, "message": "Remove the `rustc_mir::transform` entry point for mir-borrowck.", "tree": {"sha": "2540e22ad1ba49967482c93c3dc06798f4abc1a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2540e22ad1ba49967482c93c3dc06798f4abc1a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c280afcc1c6b7c14218bf2a8322ebb3ac692485a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c280afcc1c6b7c14218bf2a8322ebb3ac692485a", "html_url": "https://github.com/rust-lang/rust/commit/c280afcc1c6b7c14218bf2a8322ebb3ac692485a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c280afcc1c6b7c14218bf2a8322ebb3ac692485a/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4da2a88abc99eebbc5bdbfd8aada728982a262d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/4da2a88abc99eebbc5bdbfd8aada728982a262d7", "html_url": "https://github.com/rust-lang/rust/commit/4da2a88abc99eebbc5bdbfd8aada728982a262d7"}], "stats": {"total": 29, "additions": 1, "deletions": 28}, "files": [{"sha": "246fc7fc5241b9c3a8d31b03abd48162800e128e", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c280afcc1c6b7c14218bf2a8322ebb3ac692485a/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c280afcc1c6b7c14218bf2a8322ebb3ac692485a/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=c280afcc1c6b7c14218bf2a8322ebb3ac692485a", "patch": "@@ -983,10 +983,6 @@ pub fn phase_3_run_analysis_passes<'tcx, F, R>(sess: &'tcx Session,\n \n     // borrowck runs between MIR_VALIDATED and MIR_OPTIMIZED.\n \n-    // FIXME: niko says this should be a query (see rustc::ty::maps)\n-    // instead of a pass.\n-    passes.push_pass(MIR_VALIDATED, mir::transform::borrow_check::BorrowckMir);\n-\n     // These next passes must be executed together\n     passes.push_pass(MIR_OPTIMIZED, mir::transform::no_landing_pads::NoLandingPads);\n     passes.push_pass(MIR_OPTIMIZED, mir::transform::add_call_guards::CriticalCallEdges);"}, {"sha": "c8e3dfedd7621779e37bdb52536e51032f363ab7", "filename": "src/librustc_mir/transform/borrow_check.rs", "status": "modified", "additions": 1, "deletions": 24, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/c280afcc1c6b7c14218bf2a8322ebb3ac692485a/src%2Flibrustc_mir%2Ftransform%2Fborrow_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c280afcc1c6b7c14218bf2a8322ebb3ac692485a/src%2Flibrustc_mir%2Ftransform%2Fborrow_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fborrow_check.rs?ref=c280afcc1c6b7c14218bf2a8322ebb3ac692485a", "patch": "@@ -15,7 +15,7 @@ use rustc::ty::{self, TyCtxt, ParamEnv};\n use rustc::mir::{AssertMessage, BasicBlock, BorrowKind, Location, Lvalue};\n use rustc::mir::{Mir, Mutability, Operand, Projection, ProjectionElem, Rvalue};\n use rustc::mir::{Statement, StatementKind, Terminator, TerminatorKind};\n-use rustc::mir::transform::{MirPass, MirSource};\n+use rustc::mir::transform::{MirSource};\n \n use rustc_data_structures::indexed_set::{self, IdxSetBuf};\n use rustc_data_structures::indexed_vec::{Idx};\n@@ -34,29 +34,6 @@ use util::borrowck_errors::{BorrowckErrors, Origin};\n use self::MutateMode::{JustWrite, WriteAndRead};\n use self::ConsumeKind::{Consume};\n \n-pub struct BorrowckMir;\n-\n-impl MirPass for BorrowckMir {\n-    fn run_pass<'a, 'tcx>(&self, tcx: TyCtxt<'a, 'tcx, 'tcx>, src: MirSource, mir: &mut Mir<'tcx>) {\n-\n-        // let err_count = tcx.sess.err_count();\n-        // if err_count > 0 {\n-        //     // compiling a broken program can obviously result in a\n-        //     // broken MIR, so try not to report duplicate errors.\n-        //     debug!(\"skipping BorrowckMir: {} due to {} previous errors\",\n-        //            tcx.node_path_str(src.item_id()), err_count);\n-        //     return;\n-        // }\n-\n-        debug!(\"run_pass BorrowckMir: {}\", tcx.node_path_str(src.item_id()));\n-\n-        let def_id = tcx.hir.local_def_id(src.item_id());\n-        if tcx.has_attr(def_id, \"rustc_mir_borrowck\") || tcx.sess.opts.debugging_opts.borrowck_mir {\n-            borrowck_mir(tcx, src, mir);\n-        }\n-    }\n-}\n-\n pub(crate) fn borrowck_mir<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, src: MirSource, mir: &Mir<'tcx>)\n {\n     let id = src.item_id();"}]}