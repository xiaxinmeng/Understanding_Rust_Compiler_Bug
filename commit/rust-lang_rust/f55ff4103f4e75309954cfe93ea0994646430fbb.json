{"sha": "f55ff4103f4e75309954cfe93ea0994646430fbb", "node_id": "C_kwDOAAsO6NoAKGY1NWZmNDEwM2Y0ZTc1MzA5OTU0Y2ZlOTNlYTA5OTQ2NDY0MzBmYmI", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2021-10-23T19:05:03Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2021-11-10T14:10:19Z"}, "message": "don't inline `report_overlap_conflict`", "tree": {"sha": "823e5fd54bdad77d82762245e5a10df0503e4357", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/823e5fd54bdad77d82762245e5a10df0503e4357"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f55ff4103f4e75309954cfe93ea0994646430fbb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f55ff4103f4e75309954cfe93ea0994646430fbb", "html_url": "https://github.com/rust-lang/rust/commit/f55ff4103f4e75309954cfe93ea0994646430fbb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f55ff4103f4e75309954cfe93ea0994646430fbb/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1296719c061fb4dd594f5c84e223be30d8611d95", "url": "https://api.github.com/repos/rust-lang/rust/commits/1296719c061fb4dd594f5c84e223be30d8611d95", "html_url": "https://github.com/rust-lang/rust/commit/1296719c061fb4dd594f5c84e223be30d8611d95"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "b64c55592272ed07f63b2813a3a748ff7e2d8778", "filename": "compiler/rustc_trait_selection/src/traits/specialize/mod.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f55ff4103f4e75309954cfe93ea0994646430fbb/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f55ff4103f4e75309954cfe93ea0994646430fbb/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fmod.rs?ref=f55ff4103f4e75309954cfe93ea0994646430fbb", "patch": "@@ -291,6 +291,11 @@ pub(super) fn specialization_graph_provider(\n     sg\n }\n \n+// This function is only used when\n+// encountering errors and inlining\n+// it negatively impacts perf.\n+#[cold]\n+#[inline(never)]\n fn report_overlap_conflict(\n     tcx: TyCtxt<'_>,\n     overlap: OverlapError,"}]}