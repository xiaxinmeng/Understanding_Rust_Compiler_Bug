{"sha": "4060ed7eff2dfb38ee8f9e3d2806f9d82c2cfc65", "node_id": "C_kwDOAAsO6NoAKDQwNjBlZDdlZmYyZGZiMzhlZThmOWUzZDI4MDZmOWQ4MmMyY2ZjNjU", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2021-10-03T15:05:55Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2021-11-07T04:00:34Z"}, "message": "Add a FIXME note about what's missing", "tree": {"sha": "9ab5a17d2781a549e55b50e0725e9f3af6f3b6c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ab5a17d2781a549e55b50e0725e9f3af6f3b6c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4060ed7eff2dfb38ee8f9e3d2806f9d82c2cfc65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4060ed7eff2dfb38ee8f9e3d2806f9d82c2cfc65", "html_url": "https://github.com/rust-lang/rust/commit/4060ed7eff2dfb38ee8f9e3d2806f9d82c2cfc65", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4060ed7eff2dfb38ee8f9e3d2806f9d82c2cfc65/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff055e2135574a0b795c0bc03144a89b54351af7", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff055e2135574a0b795c0bc03144a89b54351af7", "html_url": "https://github.com/rust-lang/rust/commit/ff055e2135574a0b795c0bc03144a89b54351af7"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "bc5aa24894427ea83ca19c0d3c30d8e5660e1c2b", "filename": "src/test/ui/inline-const/const-match-pat-lifetime-err.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/4060ed7eff2dfb38ee8f9e3d2806f9d82c2cfc65/src%2Ftest%2Fui%2Finline-const%2Fconst-match-pat-lifetime-err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4060ed7eff2dfb38ee8f9e3d2806f9d82c2cfc65/src%2Ftest%2Fui%2Finline-const%2Fconst-match-pat-lifetime-err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finline-const%2Fconst-match-pat-lifetime-err.rs?ref=4060ed7eff2dfb38ee8f9e3d2806f9d82c2cfc65", "patch": "@@ -0,0 +1,34 @@\n+// ignore-test\n+\n+#![allow(incomplete_features)]\n+#![feature(const_mut_refs)]\n+#![feature(inline_const)]\n+\n+use std::marker::PhantomData;\n+\n+#[derive(PartialEq, Eq)]\n+pub struct InvariantRef<'a, T: ?Sized>(&'a T, PhantomData<&'a mut &'a T>);\n+\n+impl<'a, T: ?Sized> InvariantRef<'a, T> {\n+    pub const fn new(r: &'a T) -> Self {\n+        InvariantRef(r, PhantomData)\n+    }\n+}\n+\n+impl<'a> InvariantRef<'a, ()> {\n+    pub const NEW: Self = InvariantRef::new(&());\n+}\n+\n+fn match_invariant_ref<'a>() {\n+    let y = ();\n+    match InvariantRef::new(&y) {\n+    //~^ ERROR `y` does not live long enough [E0597]\n+        // FIXME(nbdd0121): This should give the same error as `InvariantRef::<'a>::NEW` (without\n+        // const block)\n+        const { InvariantRef::<'a>::NEW } => (),\n+    }\n+}\n+\n+fn main() {\n+    match_invariant_ref();\n+}"}]}