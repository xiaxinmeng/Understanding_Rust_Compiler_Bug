{"sha": "b3720ea93342e02fe288eee6b5eb232c063eb0b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzNzIwZWE5MzM0MmUwMmZlMjg4ZWVlNmI1ZWIyMzJjMDYzZWIwYjk=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2015-12-05T18:35:00Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2015-12-15T10:25:09Z"}, "message": "Implement translation for ConstVal::{Array,Repeat}", "tree": {"sha": "3b6008c9f65941f3a9b7bca31318e6051bf8368b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b6008c9f65941f3a9b7bca31318e6051bf8368b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3720ea93342e02fe288eee6b5eb232c063eb0b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3720ea93342e02fe288eee6b5eb232c063eb0b9", "html_url": "https://github.com/rust-lang/rust/commit/b3720ea93342e02fe288eee6b5eb232c063eb0b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3720ea93342e02fe288eee6b5eb232c063eb0b9/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5e7a61c490ce619010f585006880b84f3174cd4", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5e7a61c490ce619010f585006880b84f3174cd4", "html_url": "https://github.com/rust-lang/rust/commit/a5e7a61c490ce619010f585006880b84f3174cd4"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "406eaafb3f5e5a9d1d0898192510c6369e041a2f", "filename": "src/librustc_trans/trans/consts.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b3720ea93342e02fe288eee6b5eb232c063eb0b9/src%2Flibrustc_trans%2Ftrans%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3720ea93342e02fe288eee6b5eb232c063eb0b9/src%2Flibrustc_trans%2Ftrans%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fconsts.rs?ref=b3720ea93342e02fe288eee6b5eb232c063eb0b9", "patch": "@@ -108,12 +108,13 @@ pub fn const_lit(cx: &CrateContext, e: &hir::Expr, lit: &ast::Lit)\n     }\n }\n \n-pub fn trans_constval<'a, 'tcx>(ccx: &CrateContext<'a, 'tcx>,\n+pub fn trans_constval<'blk, 'tcx>(bcx: common::Block<'blk, 'tcx>,\n                                 cv: &ConstVal,\n                                 ty: Ty<'tcx>,\n                                 param_substs: &'tcx Substs<'tcx>)\n                                 -> ValueRef\n {\n+    let ccx = bcx.ccx();\n     let llty = type_of::type_of(ccx, ty);\n     match *cv {\n         ConstVal::Float(v) => C_floating_f64(v, llty),\n@@ -123,19 +124,17 @@ pub fn trans_constval<'a, 'tcx>(ccx: &CrateContext<'a, 'tcx>,\n         ConstVal::Str(ref v) => C_str_slice(ccx, v.clone()),\n         ConstVal::ByteStr(ref v) => addr_of(ccx, C_bytes(ccx, v), 1, \"byte_str\"),\n         ConstVal::Struct(id) | ConstVal::Tuple(id) => {\n-            let expr = ccx.tcx().map.expect_expr(id);\n+            let expr = bcx.tcx().map.expect_expr(id);\n             match const_expr(ccx, expr, param_substs, None, TrueConst::Yes) {\n                 Ok((val, _)) => val,\n                 Err(e) => panic!(\"const eval failure: {}\", e.description()),\n             }\n         },\n-        ConstVal::Function(_) => {\n-            unimplemented!()\n-        },\n-        ConstVal::Array(..) => {\n-            unimplemented!()\n+        ConstVal::Array(id, _) | ConstVal::Repeat(id, _) => {\n+            let expr = ccx.tcx().map.expect_expr(id);\n+            expr::trans(bcx, expr).datum.val\n         },\n-        ConstVal::Repeat(..) => {\n+        ConstVal::Function(_) => {\n             unimplemented!()\n         },\n     }"}, {"sha": "38fab1dbf07f9016e02049c0a100af06f03e256a", "filename": "src/librustc_trans/trans/mir/constant.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b3720ea93342e02fe288eee6b5eb232c063eb0b9/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3720ea93342e02fe288eee6b5eb232c063eb0b9/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fconstant.rs?ref=b3720ea93342e02fe288eee6b5eb232c063eb0b9", "patch": "@@ -26,11 +26,11 @@ impl<'bcx, 'tcx> MirContext<'bcx, 'tcx> {\n                           -> OperandRef<'tcx>\n     {\n         let ccx = bcx.ccx();\n-        let val = consts::trans_constval(ccx, cv, ty, bcx.fcx.param_substs);\n+        let val = consts::trans_constval(bcx, cv, ty, bcx.fcx.param_substs);\n         let val = if common::type_is_immediate(ccx, ty) {\n-            Immediate(val)\n+            OperandValue::Immediate(val)\n         } else {\n-            Ref(val)\n+            OperandValue::Ref(val)\n         };\n \n         assert!(!ty.has_erasable_regions());"}, {"sha": "368708d470bef12c94aae6d1565160a9b7b62759", "filename": "src/librustc_trans/trans/mir/did.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b3720ea93342e02fe288eee6b5eb232c063eb0b9/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fdid.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3720ea93342e02fe288eee6b5eb232c063eb0b9/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fdid.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fdid.rs?ref=b3720ea93342e02fe288eee6b5eb232c063eb0b9", "patch": "@@ -50,6 +50,8 @@ impl<'bcx, 'tcx> MirContext<'bcx, 'tcx> {\n                 let did = inline::maybe_instantiate_inline(bcx.ccx(), did);\n                 let expr = const_eval::lookup_const_by_id(bcx.tcx(), did, None)\n                             .expect(\"def was const, but lookup_const_by_id failed\");\n+                // FIXME: this is falling back to translating from HIR. This is not easy to fix,\n+                // because we would have somehow adapt const_eval to work on MIR rather than HIR.\n                 let d = expr::trans(bcx, expr);\n                 OperandRef::from_rvalue_datum(d.datum.to_rvalue_datum(d.bcx, \"\").datum)\n             }"}]}