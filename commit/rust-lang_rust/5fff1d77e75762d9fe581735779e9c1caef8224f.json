{"sha": "5fff1d77e75762d9fe581735779e9c1caef8224f", "node_id": "C_kwDOAAsO6NoAKDVmZmYxZDc3ZTc1NzYyZDlmZTU4MTczNTc3OWU5YzFjYWVmODIyNGY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-11-25T14:05:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-25T14:05:39Z"}, "message": "Rollup merge of #91162 - RalfJung:miri-shift-truncation, r=oli-obk\n\nexplain why CTFE/Miri perform truncation on shift offset\n\nCloses https://github.com/rust-lang/miri/issues/1920", "tree": {"sha": "e1289623eb73d607abe42039982a729221cf949f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1289623eb73d607abe42039982a729221cf949f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5fff1d77e75762d9fe581735779e9c1caef8224f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhn5g0CRBK7hj4Ov3rIwAAo0IIABIeSBa3KoxaEHBgwC23vOqn\nUSKnSzdIVp1rjW5LqTS8S7rFWM2FqretHDR66XFmPZmcHLyrJiDfOgla5nPI6ftE\nmxn0bDOMkzhMW+HIy8bby/ZkNvGEG3UVgXQwp+ehFl7UrItZIEH+4xAH3oIePD5/\n8lCbyVdDMZpM56tJgXM/620Dk/65ys1KKGY77fEHFG0ow+lQlpdTtKNWk4gHQ+6c\nxBRyjSyXRm/FrlXuh8OInn0AQU/dKuD/NSvEXsJxaxROOnQeU11+F/b2qzroNFzY\ndvUEzgyfrvSnb7LwQlY6C0j2fihIuO1JuGm/s20z9sdkHnb4Ds7GcfceXx/Ps2I=\n=hEAs\n-----END PGP SIGNATURE-----\n", "payload": "tree e1289623eb73d607abe42039982a729221cf949f\nparent 5f6cb2c552a723c41ae31794c7f2f3a61704df69\nparent 5f6ccf61218fb98c2aa2cff0af83557d7ccaa5fd\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1637849139 +0100\ncommitter GitHub <noreply@github.com> 1637849139 +0100\n\nRollup merge of #91162 - RalfJung:miri-shift-truncation, r=oli-obk\n\nexplain why CTFE/Miri perform truncation on shift offset\n\nCloses https://github.com/rust-lang/miri/issues/1920\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5fff1d77e75762d9fe581735779e9c1caef8224f", "html_url": "https://github.com/rust-lang/rust/commit/5fff1d77e75762d9fe581735779e9c1caef8224f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5fff1d77e75762d9fe581735779e9c1caef8224f/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f6cb2c552a723c41ae31794c7f2f3a61704df69", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f6cb2c552a723c41ae31794c7f2f3a61704df69", "html_url": "https://github.com/rust-lang/rust/commit/5f6cb2c552a723c41ae31794c7f2f3a61704df69"}, {"sha": "5f6ccf61218fb98c2aa2cff0af83557d7ccaa5fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f6ccf61218fb98c2aa2cff0af83557d7ccaa5fd", "html_url": "https://github.com/rust-lang/rust/commit/5f6ccf61218fb98c2aa2cff0af83557d7ccaa5fd"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "a90582fc33820e00003138b94411082a7e3f862e", "filename": "compiler/rustc_const_eval/src/interpret/operator.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5fff1d77e75762d9fe581735779e9c1caef8224f/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fff1d77e75762d9fe581735779e9c1caef8224f/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperator.rs?ref=5fff1d77e75762d9fe581735779e9c1caef8224f", "patch": "@@ -130,7 +130,12 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n             let signed = left_layout.abi.is_signed();\n             let size = u128::from(left_layout.size.bits());\n             let overflow = r >= size;\n-            let r = r % size; // mask to type size\n+            // The shift offset is implicitly masked to the type size, to make sure this operation\n+            // is always defined. This is the one MIR operator that does *not* directly map to a\n+            // single LLVM operation. See\n+            // <https://github.com/rust-lang/rust/blob/a3b9405ae7bb6ab4e8103b414e75c44598a10fd2/compiler/rustc_codegen_ssa/src/common.rs#L131-L158>\n+            // for the corresponding truncation in our codegen backends.\n+            let r = r % size;\n             let r = u32::try_from(r).unwrap(); // we masked so this will always fit\n             let result = if signed {\n                 let l = self.sign_extend(l, left_layout) as i128;"}, {"sha": "4210e07d2780b5d490b57aa0f67b8e9d46d4bc4d", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5fff1d77e75762d9fe581735779e9c1caef8224f/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fff1d77e75762d9fe581735779e9c1caef8224f/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=5fff1d77e75762d9fe581735779e9c1caef8224f", "patch": "@@ -2246,8 +2246,12 @@ pub enum BinOp {\n     /// The `*` operator (multiplication)\n     Mul,\n     /// The `/` operator (division)\n+    ///\n+    /// Division by zero is UB.\n     Div,\n     /// The `%` operator (modulus)\n+    ///\n+    /// Using zero as the modulus (second operand) is UB.\n     Rem,\n     /// The `^` operator (bitwise xor)\n     BitXor,\n@@ -2256,8 +2260,12 @@ pub enum BinOp {\n     /// The `|` operator (bitwise or)\n     BitOr,\n     /// The `<<` operator (shift left)\n+    ///\n+    /// The offset is truncated to the size of the first operand before shifting.\n     Shl,\n     /// The `>>` operator (shift right)\n+    ///\n+    /// The offset is truncated to the size of the first operand before shifting.\n     Shr,\n     /// The `==` operator (equality)\n     Eq,"}]}