{"sha": "b43c9f76385d379d3f8576473cd7573d06809bfb", "node_id": "C_kwDOAAsO6NoAKGI0M2M5Zjc2Mzg1ZDM3OWQzZjg1NzY0NzNjZDc1NzNkMDY4MDliZmI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-02T04:31:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-02T04:31:55Z"}, "message": "Auto merge of #9982 - Jarcho:issue_9935, r=flip1995\n\nDon't lint `from_over_into` for opaque types\n\nfixes #9935\n\nThis is stalled until the next sync. The impl in question can't be written on the pinned nightly.\n\nchangelog: Don't lint `from_over_into` for opaque types", "tree": {"sha": "44839529618dd98088207439a56c2f8ac0c81744", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44839529618dd98088207439a56c2f8ac0c81744"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b43c9f76385d379d3f8576473cd7573d06809bfb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b43c9f76385d379d3f8576473cd7573d06809bfb", "html_url": "https://github.com/rust-lang/rust/commit/b43c9f76385d379d3f8576473cd7573d06809bfb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b43c9f76385d379d3f8576473cd7573d06809bfb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fec00573a5c1ca233b4aeeaa087168c6cafa3d44", "url": "https://api.github.com/repos/rust-lang/rust/commits/fec00573a5c1ca233b4aeeaa087168c6cafa3d44", "html_url": "https://github.com/rust-lang/rust/commit/fec00573a5c1ca233b4aeeaa087168c6cafa3d44"}, {"sha": "6ecdff07e5c38f3cf53f299219ba575ebd4f9831", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ecdff07e5c38f3cf53f299219ba575ebd4f9831", "html_url": "https://github.com/rust-lang/rust/commit/6ecdff07e5c38f3cf53f299219ba575ebd4f9831"}], "stats": {"total": 27, "additions": 21, "deletions": 6}, "files": [{"sha": "cc3c35f48635c3f7c4ea66922a06a3f97c7cf74a", "filename": "clippy_lints/src/from_over_into.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b43c9f76385d379d3f8576473cd7573d06809bfb/clippy_lints%2Fsrc%2Ffrom_over_into.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43c9f76385d379d3f8576473cd7573d06809bfb/clippy_lints%2Fsrc%2Ffrom_over_into.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffrom_over_into.rs?ref=b43c9f76385d379d3f8576473cd7573d06809bfb", "patch": "@@ -10,7 +10,7 @@ use rustc_hir::{\n     TyKind,\n };\n use rustc_lint::{LateContext, LateLintPass};\n-use rustc_middle::hir::nested_filter::OnlyBodies;\n+use rustc_middle::{hir::nested_filter::OnlyBodies, ty};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::symbol::{kw, sym};\n use rustc_span::{Span, Symbol};\n@@ -78,6 +78,7 @@ impl<'tcx> LateLintPass<'tcx> for FromOverInto {\n             && let Some(GenericArgs { args: [GenericArg::Type(target_ty)], .. }) = into_trait_seg.args\n             && let Some(middle_trait_ref) = cx.tcx.impl_trait_ref(item.owner_id)\n             && cx.tcx.is_diagnostic_item(sym::Into, middle_trait_ref.def_id)\n+            && !matches!(middle_trait_ref.substs.type_at(1).kind(), ty::Opaque(..))\n         {\n             span_lint_and_then(\n                 cx,"}, {"sha": "72d635c2ccd65609ada5efc15d5197457ec4b622", "filename": "tests/ui/from_over_into.fixed", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b43c9f76385d379d3f8576473cd7573d06809bfb/tests%2Fui%2Ffrom_over_into.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/b43c9f76385d379d3f8576473cd7573d06809bfb/tests%2Fui%2Ffrom_over_into.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffrom_over_into.fixed?ref=b43c9f76385d379d3f8576473cd7573d06809bfb", "patch": "@@ -1,5 +1,6 @@\n // run-rustfix\n \n+#![feature(type_alias_impl_trait)]\n #![warn(clippy::from_over_into)]\n #![allow(unused)]\n \n@@ -81,4 +82,10 @@ fn msrv_1_41() {\n     }\n }\n \n+type Opaque = impl Sized;\n+struct IntoOpaque;\n+impl Into<Opaque> for IntoOpaque {\n+    fn into(self) -> Opaque {}\n+}\n+\n fn main() {}"}, {"sha": "965f4d5d7859ee47484ccc12da79112bbc743fad", "filename": "tests/ui/from_over_into.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b43c9f76385d379d3f8576473cd7573d06809bfb/tests%2Fui%2Ffrom_over_into.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43c9f76385d379d3f8576473cd7573d06809bfb/tests%2Fui%2Ffrom_over_into.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffrom_over_into.rs?ref=b43c9f76385d379d3f8576473cd7573d06809bfb", "patch": "@@ -1,5 +1,6 @@\n // run-rustfix\n \n+#![feature(type_alias_impl_trait)]\n #![warn(clippy::from_over_into)]\n #![allow(unused)]\n \n@@ -81,4 +82,10 @@ fn msrv_1_41() {\n     }\n }\n \n+type Opaque = impl Sized;\n+struct IntoOpaque;\n+impl Into<Opaque> for IntoOpaque {\n+    fn into(self) -> Opaque {}\n+}\n+\n fn main() {}"}, {"sha": "3c4d011d6fb468e735fb07c7d49a7064bad3fcc7", "filename": "tests/ui/from_over_into.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b43c9f76385d379d3f8576473cd7573d06809bfb/tests%2Fui%2Ffrom_over_into.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b43c9f76385d379d3f8576473cd7573d06809bfb/tests%2Fui%2Ffrom_over_into.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffrom_over_into.stderr?ref=b43c9f76385d379d3f8576473cd7573d06809bfb", "patch": "@@ -1,5 +1,5 @@\n error: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n-  --> $DIR/from_over_into.rs:9:1\n+  --> $DIR/from_over_into.rs:10:1\n    |\n LL | impl Into<StringWrapper> for String {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -13,7 +13,7 @@ LL ~         StringWrapper(val)\n    |\n \n error: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n-  --> $DIR/from_over_into.rs:17:1\n+  --> $DIR/from_over_into.rs:18:1\n    |\n LL | impl Into<SelfType> for String {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -26,7 +26,7 @@ LL ~         SelfType(String::new())\n    |\n \n error: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n-  --> $DIR/from_over_into.rs:32:1\n+  --> $DIR/from_over_into.rs:33:1\n    |\n LL | impl Into<SelfKeywords> for X {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -41,7 +41,7 @@ LL ~         let _: X = val;\n    |\n \n error: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n-  --> $DIR/from_over_into.rs:44:1\n+  --> $DIR/from_over_into.rs:45:1\n    |\n LL | impl core::convert::Into<bool> for crate::ExplicitPaths {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -59,7 +59,7 @@ LL ~         val.0\n    |\n \n error: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n-  --> $DIR/from_over_into.rs:77:5\n+  --> $DIR/from_over_into.rs:78:5\n    |\n LL |     impl<T> Into<FromOverInto<T>> for Vec<T> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}]}