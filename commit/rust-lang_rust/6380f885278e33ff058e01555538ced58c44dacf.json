{"sha": "6380f885278e33ff058e01555538ced58c44dacf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzODBmODg1Mjc4ZTMzZmYwNThlMDE1NTU1MzhjZWQ1OGM0NGRhY2Y=", "commit": {"author": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2018-10-10T01:50:25Z"}, "committer": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2018-10-15T14:59:08Z"}, "message": "Cleanup", "tree": {"sha": "b2929ed708ac01b70ec685de7f607aa02df2b7cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b2929ed708ac01b70ec685de7f607aa02df2b7cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6380f885278e33ff058e01555538ced58c44dacf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6380f885278e33ff058e01555538ced58c44dacf", "html_url": "https://github.com/rust-lang/rust/commit/6380f885278e33ff058e01555538ced58c44dacf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6380f885278e33ff058e01555538ced58c44dacf/comments", "author": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "751bcf5fa08ee5c5ba156e43c7f8327f7968b02f", "url": "https://api.github.com/repos/rust-lang/rust/commits/751bcf5fa08ee5c5ba156e43c7f8327f7968b02f", "html_url": "https://github.com/rust-lang/rust/commit/751bcf5fa08ee5c5ba156e43c7f8327f7968b02f"}], "stats": {"total": 22, "additions": 4, "deletions": 18}, "files": [{"sha": "b7d73bbf0ba2fc314a0c7ad80ad4a0c72f704a0a", "filename": "src/missed_spans.rs", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6380f885278e33ff058e01555538ced58c44dacf/src%2Fmissed_spans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6380f885278e33ff058e01555538ced58c44dacf/src%2Fmissed_spans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmissed_spans.rs?ref=6380f885278e33ff058e01555538ced58c44dacf", "patch": "@@ -120,7 +120,7 @@ impl<'a> FmtVisitor<'a> {\n     }\n \n     fn push_vertical_spaces(&mut self, mut newline_count: usize) {\n-        let offset = self.count_trailing_newlines();\n+        let offset = self.buffer.chars().rev().take_while(|c| *c == '\\n').count();\n         let newline_upper_bound = self.config.blank_lines_upper_bound() + 1;\n         let newline_lower_bound = self.config.blank_lines_lower_bound() + 1;\n \n@@ -142,16 +142,6 @@ impl<'a> FmtVisitor<'a> {\n         self.push_str(&blank_lines);\n     }\n \n-    fn count_trailing_newlines(&self) -> usize {\n-        let mut buf = &*self.buffer;\n-        let mut result = 0;\n-        while buf.ends_with('\\n') {\n-            buf = &buf[..buf.len() - 1];\n-            result += 1;\n-        }\n-        result\n-    }\n-\n     fn write_snippet<F>(&mut self, span: Span, process_last_snippet: F)\n     where\n         F: Fn(&mut FmtVisitor, &str, &str),\n@@ -271,11 +261,7 @@ impl<'a> FmtVisitor<'a> {\n \n         if let Some('/') = subslice.chars().nth(1) {\n             // check that there are no contained block comments\n-            if !subslice\n-                .split('\\n')\n-                .map(|s| s.trim_left())\n-                .any(|s| s.len() >= 2 && &s[0..2] == \"/*\")\n-            {\n+            if !subslice.lines().any(|s| s.trim_left().starts_with(\"/*\")) {\n                 // Add a newline after line comments\n                 self.push_str(\"\\n\");\n             }"}, {"sha": "b70f9f0f12b0abd8e30130606cb026c93b7a317f", "filename": "src/string.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6380f885278e33ff058e01555538ced58c44dacf/src%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6380f885278e33ff058e01555538ced58c44dacf/src%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstring.rs?ref=6380f885278e33ff058e01555538ced58c44dacf", "patch": "@@ -242,9 +242,9 @@ fn break_string(max_chars: usize, trim_end: bool, line_end: &str, input: &[&str]\n         for (i, grapheme) in input[0..=index].iter().enumerate() {\n             if is_line_feed(grapheme) {\n                 if i <= index_minus_ws {\n-                    let mut line = input[0..i].join(\"\");\n+                    let mut line = &input[0..i].join(\"\")[..];\n                     if trim_end {\n-                        line = line.trim_right().to_string();\n+                        line = line.trim_right();\n                     }\n                     return SnippetState::EndWithLineFeed(format!(\"{}\\n\", line), i + 1);\n                 }"}]}