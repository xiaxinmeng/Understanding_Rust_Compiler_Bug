{"sha": "73deb723ddb5ff39d830e698136f081b47f3a94b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczZGViNzIzZGRiNWZmMzlkODMwZTY5ODEzNmYwODFiNDdmM2E5NGI=", "commit": {"author": {"name": "mlegner", "email": "markus@legner.ch", "date": "2020-03-03T16:05:09Z"}, "committer": {"name": "mlegner", "email": "markus@legner.ch", "date": "2020-03-04T12:21:01Z"}, "message": "Included binary and octal cases.", "tree": {"sha": "201c9452d4ff832dcaa9ef16deebdd2ac66814df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/201c9452d4ff832dcaa9ef16deebdd2ac66814df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73deb723ddb5ff39d830e698136f081b47f3a94b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE8Gd4tklnUGrwqsxng3PtO0zPqEUFAl5fnS0ACgkQg3PtO0zP\nqEUPVQ/+OXQ2XRu5durpNERRt5wsRiXCcmiq6I90zZ4Hjbyfz3OSBZgV7Eibfpvu\nSFcvgUCaT6X7x+UiqKNqi8XlRiKxqJASem0rNbMKX+dDB0aGN5yYOGZ380U708n1\ntVyn10CcJ3biiyHqJpv8L2r8UBwK2YEBwQuKKC+7zu5uidFXmdt9LrsGgBZmYyBr\nvPr4+hqUZ+3GJR1PVDzs5/uyIgg0CshcFimBAe/X/q/9sCvVV+Mdxdi/3jw0JeOJ\nPq/2vVOVKSxc5wctzxKZ0Gub5Dy8MqyCjh7quu4TQgHTfpOQNU+pVfvztMXY2iXL\nkDaa8cIg9YFpUh9W7XWbkh0Lv7isCpmyMK3m3dA9kag5YtqvXYm8xDePDuIh43Uv\ngfbzMfe7CaiISeiTrUuCgnri5qQ7EJ97FKw/dN3XPTwKKZkP5dc3/80W6lgiTKUi\nFKgj+609lYQZafB/mE2aJOyo1woWNo+aSRTxL0JMzP99W1NomcZ/moBQc6UnEoXh\nsfz7B3zYEoblEcj1JpocwIdvSav+l9IH+6wT71BBzrUsb/TUGyqYeQpOvLV5YtVc\nvO1KvVc3W18WJMgqL5zXvaI1bPy8ALcLNBK2bDumcJ+/ZW/5BvSkNlOvZU2A3Gd1\n8FiNqoRefEg8TogabiIkaYu4I2AT4J8VJ8vKpLSTr5Fuom4AW7E=\n=NEuv\n-----END PGP SIGNATURE-----", "payload": "tree 201c9452d4ff832dcaa9ef16deebdd2ac66814df\nparent 6673cc8329a2bc1395cf6c3c1ec194cbd83b567e\nauthor mlegner <markus@legner.ch> 1583251509 +0100\ncommitter mlegner <markus@legner.ch> 1583324461 +0100\n\nIncluded binary and octal cases.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73deb723ddb5ff39d830e698136f081b47f3a94b", "html_url": "https://github.com/rust-lang/rust/commit/73deb723ddb5ff39d830e698136f081b47f3a94b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73deb723ddb5ff39d830e698136f081b47f3a94b/comments", "author": {"login": "mlegner", "id": 5960634, "node_id": "MDQ6VXNlcjU5NjA2MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5960634?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlegner", "html_url": "https://github.com/mlegner", "followers_url": "https://api.github.com/users/mlegner/followers", "following_url": "https://api.github.com/users/mlegner/following{/other_user}", "gists_url": "https://api.github.com/users/mlegner/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlegner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlegner/subscriptions", "organizations_url": "https://api.github.com/users/mlegner/orgs", "repos_url": "https://api.github.com/users/mlegner/repos", "events_url": "https://api.github.com/users/mlegner/events{/privacy}", "received_events_url": "https://api.github.com/users/mlegner/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mlegner", "id": 5960634, "node_id": "MDQ6VXNlcjU5NjA2MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5960634?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlegner", "html_url": "https://github.com/mlegner", "followers_url": "https://api.github.com/users/mlegner/followers", "following_url": "https://api.github.com/users/mlegner/following{/other_user}", "gists_url": "https://api.github.com/users/mlegner/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlegner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlegner/subscriptions", "organizations_url": "https://api.github.com/users/mlegner/orgs", "repos_url": "https://api.github.com/users/mlegner/repos", "events_url": "https://api.github.com/users/mlegner/events{/privacy}", "received_events_url": "https://api.github.com/users/mlegner/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6673cc8329a2bc1395cf6c3c1ec194cbd83b567e", "url": "https://api.github.com/repos/rust-lang/rust/commits/6673cc8329a2bc1395cf6c3c1ec194cbd83b567e", "html_url": "https://github.com/rust-lang/rust/commit/6673cc8329a2bc1395cf6c3c1ec194cbd83b567e"}], "stats": {"total": 33, "additions": 23, "deletions": 10}, "files": [{"sha": "a42d240ba642b76879103b2065f7fe7fbf245c7b", "filename": "clippy_lints/src/literal_representation.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/73deb723ddb5ff39d830e698136f081b47f3a94b/clippy_lints%2Fsrc%2Fliteral_representation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73deb723ddb5ff39d830e698136f081b47f3a94b/clippy_lints%2Fsrc%2Fliteral_representation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fliteral_representation.rs?ref=73deb723ddb5ff39d830e698136f081b47f3a94b", "patch": "@@ -131,7 +131,7 @@ pub fn format_numeric_literal(lit: &str, type_suffix: Option<&str>, float: bool)\n #[derive(Debug)]\n pub(super) struct NumericLiteral<'a> {\n     /// Which radix the literal was represented in.\n-    pub radix: Radix,\n+    radix: Radix,\n     /// The radix prefix, if present.\n     prefix: Option<&'a str>,\n \n@@ -147,6 +147,10 @@ pub(super) struct NumericLiteral<'a> {\n }\n \n impl<'a> NumericLiteral<'a> {\n+    fn from_lit(src: &'a str, lit: &Lit) -> Option<NumericLiteral<'a>> {\n+        NumericLiteral::from_lit_kind(src, &lit.kind)\n+    }\n+\n     pub fn from_lit_kind(src: &'a str, lit_kind: &LitKind) -> Option<NumericLiteral<'a>> {\n         if lit_kind.is_numeric() && src.chars().next().map_or(false, |c| c.is_digit(10)) {\n             let (unsuffixed, suffix) = split_suffix(&src, lit_kind);\n@@ -157,10 +161,6 @@ impl<'a> NumericLiteral<'a> {\n         }\n     }\n \n-    fn from_lit(src: &'a str, lit: &Lit) -> Option<NumericLiteral<'a>> {\n-        NumericLiteral::from_lit_kind(src, &lit.kind)\n-    }\n-\n     #[must_use]\n     fn new(lit: &'a str, suffix: Option<&'a str>, float: bool) -> Self {\n         // Determine delimiter for radix prefix, if present, and radix.\n@@ -199,6 +199,10 @@ impl<'a> NumericLiteral<'a> {\n         }\n     }\n \n+    pub fn is_decimal(&self) -> bool {\n+        self.radix == Radix::Decimal\n+    }\n+\n     fn split_digit_parts(digits: &str, float: bool) -> (&str, Option<&str>, Option<(char, &str)>) {\n         let mut integer = digits;\n         let mut fraction = None;"}, {"sha": "0ecd03605b2a0f51002af5fdf0af68c3464464c2", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/73deb723ddb5ff39d830e698136f081b47f3a94b/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73deb723ddb5ff39d830e698136f081b47f3a94b/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=73deb723ddb5ff39d830e698136f081b47f3a94b", "patch": "@@ -27,7 +27,7 @@ use rustc_target::spec::abi::Abi;\n use rustc_typeck::hir_ty_to_ty;\n \n use crate::consts::{constant, Constant};\n-use crate::literal_representation::{NumericLiteral, Radix};\n+use crate::literal_representation::NumericLiteral;\n use crate::utils::paths;\n use crate::utils::{\n     clip, comparisons, differing_macro_contexts, higher, in_constant, int_bits, last_path_segment, match_def_path,\n@@ -1219,8 +1219,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Casts {\n                         let from_nbits = 128 - n.leading_zeros();\n                         let to_nbits = fp_ty_mantissa_nbits(cast_to);\n                         if let Some(num_lit) = NumericLiteral::from_lit_kind(&src, &lit.node) {\n-                            if from_nbits != 0 && to_nbits != 0 && from_nbits <= to_nbits &&\n-                            num_lit.radix != Radix::Hexadecimal {\n+                            if from_nbits != 0 && to_nbits != 0 && from_nbits <= to_nbits && num_lit.is_decimal() {\n                                 span_lint_and_sugg(\n                                     cx,\n                                     UNNECESSARY_CAST,"}, {"sha": "fb89a9fce3d5bf91a9ced4dbbd7d5014533c26b1", "filename": "tests/ui/unnecessary_cast_fixable.fixed", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/73deb723ddb5ff39d830e698136f081b47f3a94b/tests%2Fui%2Funnecessary_cast_fixable.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/73deb723ddb5ff39d830e698136f081b47f3a94b/tests%2Fui%2Funnecessary_cast_fixable.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_cast_fixable.fixed?ref=73deb723ddb5ff39d830e698136f081b47f3a94b", "patch": "@@ -14,5 +14,10 @@ fn main() {\n     &v as &[i32];\n     1.0 as f64;\n     1 as u64;\n-    0x42 as f32;\n+    0x10 as f32;\n+    0o10 as f32;\n+    0b10 as f32;\n+    0x11 as f64;\n+    0o11 as f64;\n+    0b11 as f64;\n }"}, {"sha": "4a0c8620dc134acfd26c35a535c126653c3ac998", "filename": "tests/ui/unnecessary_cast_fixable.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/73deb723ddb5ff39d830e698136f081b47f3a94b/tests%2Fui%2Funnecessary_cast_fixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73deb723ddb5ff39d830e698136f081b47f3a94b/tests%2Fui%2Funnecessary_cast_fixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_cast_fixable.rs?ref=73deb723ddb5ff39d830e698136f081b47f3a94b", "patch": "@@ -14,5 +14,10 @@ fn main() {\n     &v as &[i32];\n     1.0 as f64;\n     1 as u64;\n-    0x42 as f32;\n+    0x10 as f32;\n+    0o10 as f32;\n+    0b10 as f32;\n+    0x11 as f64;\n+    0o11 as f64;\n+    0b11 as f64;\n }"}]}