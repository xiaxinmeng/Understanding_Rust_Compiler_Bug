{"sha": "5ba0196cb8eef04dced1f8374a57f6d617dfed04", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViYTAxOTZjYjhlZWYwNGRjZWQxZjgzNzRhNTdmNmQ2MTdkZmVkMDQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-09-12T16:09:17Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-09-15T19:28:12Z"}, "message": "misc ppaux changes", "tree": {"sha": "bfada317cd519528672bb9063521912f016a653d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bfada317cd519528672bb9063521912f016a653d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ba0196cb8eef04dced1f8374a57f6d617dfed04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ba0196cb8eef04dced1f8374a57f6d617dfed04", "html_url": "https://github.com/rust-lang/rust/commit/5ba0196cb8eef04dced1f8374a57f6d617dfed04", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ba0196cb8eef04dced1f8374a57f6d617dfed04/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "688ddf79156aa01a2507412c9b766f48ef208b04", "url": "https://api.github.com/repos/rust-lang/rust/commits/688ddf79156aa01a2507412c9b766f48ef208b04", "html_url": "https://github.com/rust-lang/rust/commit/688ddf79156aa01a2507412c9b766f48ef208b04"}], "stats": {"total": 31, "additions": 20, "deletions": 11}, "files": [{"sha": "be4a1c95e55509e1b8430c043fc5936c6fd9fe3b", "filename": "src/librustc/util/ppaux.rs", "status": "modified", "additions": 20, "deletions": 11, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/5ba0196cb8eef04dced1f8374a57f6d617dfed04/src%2Flibrustc%2Futil%2Fppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ba0196cb8eef04dced1f8374a57f6d617dfed04/src%2Flibrustc%2Futil%2Fppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fppaux.rs?ref=5ba0196cb8eef04dced1f8374a57f6d617dfed04", "patch": "@@ -496,7 +496,13 @@ pub fn parameterized(cx: &ctxt,\n \n     if cx.sess.verbose() {\n         for t in substs.types.get_slice(subst::SelfSpace).iter() {\n-            strs.push(format!(\"for {}\", t.repr(cx)));\n+            strs.push(format!(\"self {}\", t.repr(cx)));\n+        }\n+\n+        // generally there shouldn't be any substs in the fn param\n+        // space, but in verbose mode, print them out.\n+        for t in substs.types.get_slice(subst::FnSpace).iter() {\n+            strs.push(format!(\"fn {}\", t.repr(cx)));\n         }\n     }\n \n@@ -539,15 +545,15 @@ impl Repr for () {\n     }\n }\n \n-impl<T:Repr> Repr for Rc<T> {\n+impl<'a,T:Repr> Repr for &'a T {\n     fn repr(&self, tcx: &ctxt) -> String {\n         (&**self).repr(tcx)\n     }\n }\n \n-impl<'a, T:Repr> Repr for &'a T {\n+impl<T:Repr> Repr for Rc<T> {\n     fn repr(&self, tcx: &ctxt) -> String {\n-        (*self).repr(tcx)\n+        (&**self).repr(tcx)\n     }\n }\n \n@@ -690,7 +696,11 @@ impl Repr for ty::ParamBounds {\n \n impl Repr for ty::TraitRef {\n     fn repr(&self, tcx: &ctxt) -> String {\n-        trait_ref_to_string(tcx, self)\n+        let base = ty::item_path_str(tcx, self.def_id);\n+        let trait_def = ty::lookup_trait_def(tcx, self.def_id);\n+        format!(\"<{} as {}>\",\n+                self.substs.self_ty().repr(tcx),\n+                parameterized(tcx, base.as_slice(), &self.substs, &trait_def.generics))\n     }\n }\n \n@@ -962,18 +972,16 @@ impl Repr for typeck::MethodOrigin {\n \n impl Repr for typeck::MethodParam {\n     fn repr(&self, tcx: &ctxt) -> String {\n-        format!(\"MethodParam({},{:?},{:?},{:?})\",\n-                self.trait_id.repr(tcx),\n-                self.method_num,\n-                self.param_num,\n-                self.bound_num)\n+        format!(\"MethodParam({},{})\",\n+                self.trait_ref.repr(tcx),\n+                self.method_num)\n     }\n }\n \n impl Repr for typeck::MethodObject {\n     fn repr(&self, tcx: &ctxt) -> String {\n         format!(\"MethodObject({},{:?},{:?})\",\n-                self.trait_id.repr(tcx),\n+                self.trait_ref.repr(tcx),\n                 self.method_num,\n                 self.real_index)\n     }\n@@ -1231,3 +1239,4 @@ impl<A:Repr,B:Repr> Repr for (A,B) {\n         format!(\"({},{})\", a.repr(tcx), b.repr(tcx))\n     }\n }\n+"}]}