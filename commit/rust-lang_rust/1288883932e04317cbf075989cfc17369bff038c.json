{"sha": "1288883932e04317cbf075989cfc17369bff038c", "node_id": "C_kwDOAAsO6NoAKDEyODg4ODM5MzJlMDQzMTdjYmYwNzU5ODljZmMxNzM2OWJmZjAzOGM", "commit": {"author": {"name": "Elias Holzmann", "email": "9659253+EliasHolzmann@users.noreply.github.com", "date": "2022-04-30T00:38:22Z"}, "committer": {"name": "Elias Holzmann", "email": "9659253+EliasHolzmann@users.noreply.github.com", "date": "2022-05-01T13:26:15Z"}, "message": "std::fmt: Fixed documentation for specifying precision via `.*`\n\nThe documentation stated that in case of the syntax `{<arg>:<spec>.*}`, \"the\n`<arg>` part refers to the value to print, and the precision must come in the\ninput preceding `<arg>`\". This is not correct: the <arg> part does indeed refer\nto the value to print, but the precision does not come in the input preciding\narg, but in the next implicit input (as if specified with {}).\n\nFixes #96413.", "tree": {"sha": "c8f9228c8d796c47dd3d459fb77d819ce51b348e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8f9228c8d796c47dd3d459fb77d819ce51b348e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1288883932e04317cbf075989cfc17369bff038c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1288883932e04317cbf075989cfc17369bff038c", "html_url": "https://github.com/rust-lang/rust/commit/1288883932e04317cbf075989cfc17369bff038c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1288883932e04317cbf075989cfc17369bff038c/comments", "author": {"login": "EliasHolzmann", "id": 9659253, "node_id": "MDQ6VXNlcjk2NTkyNTM=", "avatar_url": "https://avatars.githubusercontent.com/u/9659253?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EliasHolzmann", "html_url": "https://github.com/EliasHolzmann", "followers_url": "https://api.github.com/users/EliasHolzmann/followers", "following_url": "https://api.github.com/users/EliasHolzmann/following{/other_user}", "gists_url": "https://api.github.com/users/EliasHolzmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/EliasHolzmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EliasHolzmann/subscriptions", "organizations_url": "https://api.github.com/users/EliasHolzmann/orgs", "repos_url": "https://api.github.com/users/EliasHolzmann/repos", "events_url": "https://api.github.com/users/EliasHolzmann/events{/privacy}", "received_events_url": "https://api.github.com/users/EliasHolzmann/received_events", "type": "User", "site_admin": false}, "committer": {"login": "EliasHolzmann", "id": 9659253, "node_id": "MDQ6VXNlcjk2NTkyNTM=", "avatar_url": "https://avatars.githubusercontent.com/u/9659253?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EliasHolzmann", "html_url": "https://github.com/EliasHolzmann", "followers_url": "https://api.github.com/users/EliasHolzmann/followers", "following_url": "https://api.github.com/users/EliasHolzmann/following{/other_user}", "gists_url": "https://api.github.com/users/EliasHolzmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/EliasHolzmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EliasHolzmann/subscriptions", "organizations_url": "https://api.github.com/users/EliasHolzmann/orgs", "repos_url": "https://api.github.com/users/EliasHolzmann/repos", "events_url": "https://api.github.com/users/EliasHolzmann/events{/privacy}", "received_events_url": "https://api.github.com/users/EliasHolzmann/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a707f401074bc769bab4efb2bfdde7f6c5a4068d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a707f401074bc769bab4efb2bfdde7f6c5a4068d", "html_url": "https://github.com/rust-lang/rust/commit/a707f401074bc769bab4efb2bfdde7f6c5a4068d"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "5f6849a9b63180ec4e05c6c077d476a72f6f249d", "filename": "library/alloc/src/fmt.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1288883932e04317cbf075989cfc17369bff038c/library%2Falloc%2Fsrc%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1288883932e04317cbf075989cfc17369bff038c/library%2Falloc%2Fsrc%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Ffmt.rs?ref=1288883932e04317cbf075989cfc17369bff038c", "patch": "@@ -221,10 +221,12 @@\n //!\n //! 3. An asterisk `.*`:\n //!\n-//!    `.*` means that this `{...}` is associated with *two* format inputs rather than one: the\n-//!    first input holds the `usize` precision, and the second holds the value to print. Note that\n-//!    in this case, if one uses the format string `{<arg>:<spec>.*}`, then the `<arg>` part refers\n-//!    to the *value* to print, and the `precision` must come in the input preceding `<arg>`.\n+//!    `.*` means that this `{...}` is associated with *two* format inputs rather than one:\n+//!    - If a format string in the fashion of `{:<spec>.*}` is used, then the first input holds\n+//!      the `usize` precision, and the second holds the value to print.\n+//!    - If a format string in the fashion of `{<arg>:<spec>.*}` is used, then the `<arg>` part\n+//!      refers to the value to print, and the `precision` is taken like it was specified with an\n+//!      omitted positional parameter (`{}` instead of `{<arg>:}`).\n //!\n //! For example, the following calls all print the same thing `Hello x is 0.01000`:\n //!\n@@ -242,8 +244,12 @@\n //! //                          specified in first of next two args (5)}\n //! println!(\"Hello {} is {:.*}\",    \"x\", 5, 0.01);\n //!\n+//! // Hello {arg 1 (\"x\")} is {arg 2 (0.01) with precision\n+//! //                          specified in next arg (5)}\n+//! println!(\"Hello {1} is {2:.*}\",  5, \"x\", 0.01);\n+//!\n //! // Hello {next arg (\"x\")} is {arg 2 (0.01) with precision\n-//! //                          specified in its predecessor (5)}\n+//! //                          specified in next arg (5)}\n //! println!(\"Hello {} is {2:.*}\",   \"x\", 5, 0.01);\n //!\n //! // Hello {next arg (\"x\")} is {arg \"number\" (0.01) with precision specified"}]}