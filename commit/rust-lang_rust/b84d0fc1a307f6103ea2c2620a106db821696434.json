{"sha": "b84d0fc1a307f6103ea2c2620a106db821696434", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4NGQwZmMxYTMwN2Y2MTAzZWEyYzI2MjBhMTA2ZGI4MjE2OTY0MzQ=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-04-01T17:11:22Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-04-02T07:03:31Z"}, "message": "Add proper process teminate method", "tree": {"sha": "99d158e992a58a07cbf51676add9784583b401c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/99d158e992a58a07cbf51676add9784583b401c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b84d0fc1a307f6103ea2c2620a106db821696434", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b84d0fc1a307f6103ea2c2620a106db821696434", "html_url": "https://github.com/rust-lang/rust/commit/b84d0fc1a307f6103ea2c2620a106db821696434", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b84d0fc1a307f6103ea2c2620a106db821696434/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c894a3e19b0e658622a03a7d0539a78a433b42ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/c894a3e19b0e658622a03a7d0539a78a433b42ae", "html_url": "https://github.com/rust-lang/rust/commit/c894a3e19b0e658622a03a7d0539a78a433b42ae"}], "stats": {"total": 126, "additions": 116, "deletions": 10}, "files": [{"sha": "008df6f52a796baf3789278c88e24579a598e647", "filename": "editors/code/package-lock.json", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/b84d0fc1a307f6103ea2c2620a106db821696434/editors%2Fcode%2Fpackage-lock.json", "raw_url": "https://github.com/rust-lang/rust/raw/b84d0fc1a307f6103ea2c2620a106db821696434/editors%2Fcode%2Fpackage-lock.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage-lock.json?ref=b84d0fc1a307f6103ea2c2620a106db821696434", "patch": "@@ -607,6 +607,12 @@\n             \"integrity\": \"sha512-f2LZMYl1Fzu7YSBKg+RoROelpOaNrcGmE9AZubeDfrCEia483oW4MI4VyFd5VNHIgQ/7qm1I0wUHK1eJnn2y2w==\",\n             \"dev\": true\n         },\n+        \"es6-object-assign\": {\n+            \"version\": \"1.1.0\",\n+            \"resolved\": \"https://registry.npmjs.org/es6-object-assign/-/es6-object-assign-1.1.0.tgz\",\n+            \"integrity\": \"sha1-wsNYJlYkfDnqEHyx5mUrb58kUjw=\",\n+            \"dev\": true\n+        },\n         \"escape-string-regexp\": {\n             \"version\": \"1.0.5\",\n             \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz\",\n@@ -1121,6 +1127,12 @@\n             \"integrity\": \"sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=\",\n             \"dev\": true\n         },\n+        \"interpret\": {\n+            \"version\": \"1.2.0\",\n+            \"resolved\": \"https://registry.npmjs.org/interpret/-/interpret-1.2.0.tgz\",\n+            \"integrity\": \"sha512-mT34yGKMNceBQUoVn7iCDKDntA7SC6gycMAWzGx1z/CMCTV7b2AAtXlo3nRyHZ1FelRkQbQjprHSYGwzLtkVbw==\",\n+            \"dev\": true\n+        },\n         \"is\": {\n             \"version\": \"3.3.0\",\n             \"resolved\": \"https://registry.npmjs.org/is/-/is-3.3.0.tgz\",\n@@ -1791,6 +1803,15 @@\n                 \"util-deprecate\": \"^1.0.1\"\n             }\n         },\n+        \"rechoir\": {\n+            \"version\": \"0.6.2\",\n+            \"resolved\": \"https://registry.npmjs.org/rechoir/-/rechoir-0.6.2.tgz\",\n+            \"integrity\": \"sha1-hSBLVNuoLVdC4oyWdW70OvUOM4Q=\",\n+            \"dev\": true,\n+            \"requires\": {\n+                \"resolve\": \"^1.1.6\"\n+            }\n+        },\n         \"remove-bom-buffer\": {\n             \"version\": \"3.0.0\",\n             \"resolved\": \"https://registry.npmjs.org/remove-bom-buffer/-/remove-bom-buffer-3.0.0.tgz\",\n@@ -1902,6 +1923,36 @@\n             \"resolved\": \"https://registry.npmjs.org/semver/-/semver-5.6.0.tgz\",\n             \"integrity\": \"sha512-RS9R6R35NYgQn++fkDWaOmqGoj4Ek9gGs+DPxNUZKuwE183xjJroKvyo1IzVFeXvUrvmALy6FWD5xrdJT25gMg==\"\n         },\n+        \"shelljs\": {\n+            \"version\": \"0.8.3\",\n+            \"resolved\": \"https://registry.npmjs.org/shelljs/-/shelljs-0.8.3.tgz\",\n+            \"integrity\": \"sha512-fc0BKlAWiLpwZljmOvAOTE/gXawtCoNrP5oaY7KIaQbbyHeQVg01pSEuEGvGh3HEdBU4baCD7wQBwADmM/7f7A==\",\n+            \"dev\": true,\n+            \"requires\": {\n+                \"glob\": \"^7.0.0\",\n+                \"interpret\": \"^1.0.0\",\n+                \"rechoir\": \"^0.6.2\"\n+            }\n+        },\n+        \"shx\": {\n+            \"version\": \"0.3.2\",\n+            \"resolved\": \"https://registry.npmjs.org/shx/-/shx-0.3.2.tgz\",\n+            \"integrity\": \"sha512-aS0mWtW3T2sHAenrSrip2XGv39O9dXIFUqxAEWHEOS1ePtGIBavdPJY1kE2IHl14V/4iCbUiNDPGdyYTtmhSoA==\",\n+            \"dev\": true,\n+            \"requires\": {\n+                \"es6-object-assign\": \"^1.0.3\",\n+                \"minimist\": \"^1.2.0\",\n+                \"shelljs\": \"^0.8.1\"\n+            },\n+            \"dependencies\": {\n+                \"minimist\": {\n+                    \"version\": \"1.2.0\",\n+                    \"resolved\": \"https://registry.npmjs.org/minimist/-/minimist-1.2.0.tgz\",\n+                    \"integrity\": \"sha1-o1AIsg9BOD7sH7kU9M1d95omQoQ=\",\n+                    \"dev\": true\n+                }\n+            }\n+        },\n         \"source-map\": {\n             \"version\": \"0.6.1\",\n             \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz\","}, {"sha": "ba9c9433abae0a09eddf30abe4f2603f4011ae35", "filename": "editors/code/package.json", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b84d0fc1a307f6103ea2c2620a106db821696434/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/b84d0fc1a307f6103ea2c2620a106db821696434/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=b84d0fc1a307f6103ea2c2620a106db821696434", "patch": "@@ -18,7 +18,7 @@\n     \"scripts\": {\n         \"vscode:prepublish\": \"npm run compile\",\n         \"package\": \"vsce package\",\n-        \"compile\": \"tsc -p ./\",\n+        \"compile\": \"tsc -p ./ && shx cp src/utils/terminateProcess.sh out/utils/terminateProcess.sh\",\n         \"watch\": \"tsc -watch -p ./\",\n         \"postinstall\": \"node ./node_modules/vscode/bin/install\",\n         \"fix\": \"prettier **/*.{json,ts} --write && tslint --project . --fix\",\n@@ -41,7 +41,8 @@\n         \"tslint-config-prettier\": \"^1.18.0\",\n         \"typescript\": \"^3.3.1\",\n         \"vsce\": \"^1.57.0\",\n-        \"vscode\": \"^1.1.29\"\n+        \"vscode\": \"^1.1.29\",\n+        \"shx\": \"^0.3.1\"\n     },\n     \"activationEvents\": [\n         \"onLanguage:rust\","}, {"sha": "e51cac78a7e5042cf901b18867dd623b56942852", "filename": "editors/code/src/commands/cargo_watch.ts", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b84d0fc1a307f6103ea2c2620a106db821696434/editors%2Fcode%2Fsrc%2Fcommands%2Fcargo_watch.ts", "raw_url": "https://github.com/rust-lang/rust/raw/b84d0fc1a307f6103ea2c2620a106db821696434/editors%2Fcode%2Fsrc%2Fcommands%2Fcargo_watch.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fcargo_watch.ts?ref=b84d0fc1a307f6103ea2c2620a106db821696434", "patch": "@@ -1,9 +1,10 @@\n import * as child_process from 'child_process';\n import * as path from 'path';\n-import * as timers from 'timers';\n import * as vscode from 'vscode';\n+import { terminate } from '../utils/processes';\n import { StatusDisplay } from './watch_status';\n \n+\n export class CargoWatchProvider {\n     private diagnosticCollection?: vscode.DiagnosticCollection;\n     private cargoProcess?: child_process.ChildProcess;\n@@ -21,24 +22,25 @@ export class CargoWatchProvider {\n         // Start the cargo watch with json message\n         this.cargoProcess = child_process.spawn(\n             'cargo',\n-            ['watch', '-x', '\"check --message-format json\"'],\n+            ['watch', '-x', '\\\"check --message-format json\\\"'],\n             {\n-                // stdio: ['ignore', 'pipe', 'ignore'],\n-                shell: true,\n-                cwd: vscode.workspace.rootPath\n+                stdio: ['ignore', 'pipe', 'pipe'],\n+                cwd: vscode.workspace.rootPath,\n+                windowsVerbatimArguments: true,\n             }\n         );\n \n         this.cargoProcess.stdout.on('data', (s: string) => {\n             this.processOutput(s);\n+            console.log(s);\n         });\n \n         this.cargoProcess.stderr.on('data', (s: string) => {\n-            // console.error('Error on cargo watch : ' + s);\n+            console.error('Error on cargo watch : ' + s);\n         });\n \n         this.cargoProcess.on('error', (err: Error) => {\n-            // console.error('Error on spawn cargo process : ' + err);\n+            console.error('Error on spawn cargo process : ' + err);\n         });\n     }\n \n@@ -50,6 +52,7 @@ export class CargoWatchProvider {\n \n         if (this.cargoProcess) {\n             this.cargoProcess.kill();\n+            terminate(this.cargoProcess);\n         }\n     }\n "}, {"sha": "f027d7bbc27ba9f7ae2c540d034b0c895dae61c7", "filename": "editors/code/src/commands/watch_status.ts", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b84d0fc1a307f6103ea2c2620a106db821696434/editors%2Fcode%2Fsrc%2Fcommands%2Fwatch_status.ts", "raw_url": "https://github.com/rust-lang/rust/raw/b84d0fc1a307f6103ea2c2620a106db821696434/editors%2Fcode%2Fsrc%2Fcommands%2Fwatch_status.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fwatch_status.ts?ref=b84d0fc1a307f6103ea2c2620a106db821696434", "patch": "@@ -1,4 +1,3 @@\n-import * as timers from 'timers';\n import * as vscode from 'vscode';\n \n const spinnerFrames = ['\u280b', '\u2819', '\u2839', '\u2838', '\u283c', '\u2834', '\u2826', '\u2827', '\u2807', '\u280f'];"}, {"sha": "09fdf6e249a4e30d1ceb62316bfcb16eab9dce14", "filename": "editors/code/src/utils/processes.ts", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/b84d0fc1a307f6103ea2c2620a106db821696434/editors%2Fcode%2Fsrc%2Futils%2Fprocesses.ts", "raw_url": "https://github.com/rust-lang/rust/raw/b84d0fc1a307f6103ea2c2620a106db821696434/editors%2Fcode%2Fsrc%2Futils%2Fprocesses.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Futils%2Fprocesses.ts?ref=b84d0fc1a307f6103ea2c2620a106db821696434", "patch": "@@ -0,0 +1,40 @@\n+'use strict';\n+\n+import * as cp from 'child_process';\n+import ChildProcess = cp.ChildProcess;\n+\n+import { join } from 'path';\n+\n+const isWindows = (process.platform === 'win32');\n+const isMacintosh = (process.platform === 'darwin');\n+const isLinux = (process.platform === 'linux');\n+export function terminate(process: ChildProcess, cwd?: string): boolean {\n+\tif (isWindows) {\n+\t\ttry {\n+\t\t\t// This we run in Atom execFileSync is available.\n+\t\t\t// Ignore stderr since this is otherwise piped to parent.stderr\n+\t\t\t// which might be already closed.\n+\t\t\tconst options: any = {\n+\t\t\t\tstdio: ['pipe', 'pipe', 'ignore']\n+\t\t\t};\n+\t\t\tif (cwd) {\n+\t\t\t\toptions.cwd = cwd\n+\t\t\t}\n+\t\t\t(cp).execFileSync('taskkill', ['/T', '/F', '/PID', process.pid.toString()], options);\n+\t\t\treturn true;\n+\t\t} catch (err) {\n+\t\t\treturn false;\n+\t\t}\n+\t} else if (isLinux || isMacintosh) {\n+\t\ttry {\n+\t\t\tconst cmd = join(__dirname, 'terminateProcess.sh');\n+\t\t\tconst result = cp.spawnSync(cmd, [process.pid.toString()]);\n+\t\t\treturn result.error ? false : true;\n+\t\t} catch (err) {\n+\t\t\treturn false;\n+\t\t}\n+\t} else {\n+\t\tprocess.kill('SIGKILL');\n+\t\treturn true;\n+\t}\n+}\n\\ No newline at end of file"}, {"sha": "2ec9e1c2ec32949ee319e96df948e0eb50084ed9", "filename": "editors/code/src/utils/terminateProcess.sh", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b84d0fc1a307f6103ea2c2620a106db821696434/editors%2Fcode%2Fsrc%2Futils%2FterminateProcess.sh", "raw_url": "https://github.com/rust-lang/rust/raw/b84d0fc1a307f6103ea2c2620a106db821696434/editors%2Fcode%2Fsrc%2Futils%2FterminateProcess.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Futils%2FterminateProcess.sh?ref=b84d0fc1a307f6103ea2c2620a106db821696434", "patch": "@@ -0,0 +1,12 @@\n+#!/bin/bash\n+\n+terminateTree() {\n+    for cpid in $(pgrep -P $1); do\n+        terminateTree $cpid\n+    done\n+    kill -9 $1 > /dev/null 2>&1\n+}\n+\n+for pid in $*; do\n+    terminateTree $pid\n+done\n\\ No newline at end of file"}]}