{"sha": "69abf0a5ffc20854f18a1fd720906c4f94cae7f7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5YWJmMGE1ZmZjMjA4NTRmMThhMWZkNzIwOTA2YzRmOTRjYWU3Zjc=", "commit": {"author": {"name": "Lindsey Kuper", "email": "lkuper@mozilla.com", "date": "2011-07-16T00:22:33Z"}, "committer": {"name": "Lindsey Kuper", "email": "lkuper@mozilla.com", "date": "2011-07-16T00:23:20Z"}, "message": "Revised plan of attack for backwarding functions.", "tree": {"sha": "5cff76ef8d086bfa70a27406dd0c9e9f5201f826", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5cff76ef8d086bfa70a27406dd0c9e9f5201f826"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69abf0a5ffc20854f18a1fd720906c4f94cae7f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69abf0a5ffc20854f18a1fd720906c4f94cae7f7", "html_url": "https://github.com/rust-lang/rust/commit/69abf0a5ffc20854f18a1fd720906c4f94cae7f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69abf0a5ffc20854f18a1fd720906c4f94cae7f7/comments", "author": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bd7b803f697e9ee10f44c80a34a1abccf933555", "url": "https://api.github.com/repos/rust-lang/rust/commits/0bd7b803f697e9ee10f44c80a34a1abccf933555", "html_url": "https://github.com/rust-lang/rust/commit/0bd7b803f697e9ee10f44c80a34a1abccf933555"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "c0b9a3b0ee90e15e80323cd7c41c1de74b99c295", "filename": "src/test/run-pass/anon-obj-backwarding.rs", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/69abf0a5ffc20854f18a1fd720906c4f94cae7f7/src%2Ftest%2Frun-pass%2Fanon-obj-backwarding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69abf0a5ffc20854f18a1fd720906c4f94cae7f7/src%2Ftest%2Frun-pass%2Fanon-obj-backwarding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fanon-obj-backwarding.rs?ref=69abf0a5ffc20854f18a1fd720906c4f94cae7f7", "patch": "@@ -50,15 +50,16 @@ fn main() {\n    expect.  When we call my_outer.z(), we should also get 3, because\n    at no point is z being overridden.\n \n-   To fix this bug, we need to add a second level of forwarding\n-   functions (let's call them \"backwarding functions\") on the inner\n-   object.  Every time an object is extended with another object, we\n-   have to rewrite the inner object's vtable to account for the fact\n-   that future self-calls will get a larger object.  The inner\n-   object's vtable will need to have five slots, too.  The ones for b\n-   and n will point right back at the outer object.  (These are the\n-   \"backwarding\" ones.)  And the ones for a, m, and z will point at\n-   the original, real vtable for inner.\n+   To fix this bug, we need to make the vtable slots on the inner\n+   object match whatever the object being passed in at runtime has.\n+   My first instinct was to change the vtable to match the runtime\n+   object, but vtables are already baked into RO memory.  So, instead,\n+   we're going to tweak the object being passed in at runtime to match\n+   the vtable that inner already has.  That is, it needs to only have\n+   a, m, and z slots in its vtable, and each one of those slots will\n+   forward to the *outer* object's a, m, and z slots, respectively.\n+   From there they will either head right back to inner, or they'll be\n+   overridden.\n \n    Adding support for this is issue #702.\n "}]}