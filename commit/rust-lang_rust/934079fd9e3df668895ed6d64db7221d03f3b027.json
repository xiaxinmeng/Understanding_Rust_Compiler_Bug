{"sha": "934079fd9e3df668895ed6d64db7221d03f3b027", "node_id": "C_kwDOAAsO6NoAKDkzNDA3OWZkOWUzZGY2Njg4OTVlZDZkNjRkYjcyMjFkMDNmM2IwMjc", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-06-29T04:26:05Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-07-08T03:39:08Z"}, "message": "Migrate unstable-in-stable diagnostic", "tree": {"sha": "22608d77e294e1bf150b2f5bc9afb059969bd631", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/22608d77e294e1bf150b2f5bc9afb059969bd631"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/934079fd9e3df668895ed6d64db7221d03f3b027", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/934079fd9e3df668895ed6d64db7221d03f3b027", "html_url": "https://github.com/rust-lang/rust/commit/934079fd9e3df668895ed6d64db7221d03f3b027", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/934079fd9e3df668895ed6d64db7221d03f3b027/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34d6f08f4d320efbefbe121319eed3928874e039", "url": "https://api.github.com/repos/rust-lang/rust/commits/34d6f08f4d320efbefbe121319eed3928874e039", "html_url": "https://github.com/rust-lang/rust/commit/34d6f08f4d320efbefbe121319eed3928874e039"}], "stats": {"total": 50, "additions": 30, "deletions": 20}, "files": [{"sha": "f19e8046d422dc1e106bef883b3b4af7f79123b9", "filename": "compiler/rustc_const_eval/src/errors.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/934079fd9e3df668895ed6d64db7221d03f3b027/compiler%2Frustc_const_eval%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/934079fd9e3df668895ed6d64db7221d03f3b027/compiler%2Frustc_const_eval%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ferrors.rs?ref=934079fd9e3df668895ed6d64db7221d03f3b027", "patch": "@@ -0,0 +1,21 @@\n+use rustc_macros::SessionDiagnostic;\n+use rustc_span::Span;\n+\n+#[derive(SessionDiagnostic)]\n+#[error(const_eval::unstable_in_stable)]\n+pub(crate) struct UnstableInStable {\n+    pub gate: String,\n+    #[primary_span]\n+    pub span: Span,\n+    #[suggestion(\n+        const_eval::unstable_sugg,\n+        code = \"#[rustc_const_unstable(feature = \\\"...\\\", issue = \\\"...\\\")]\\n\",\n+        applicability = \"has-placeholders\"\n+    )]\n+    #[suggestion(\n+        const_eval::bypass_sugg,\n+        code = \"#[rustc_allow_const_fn_unstable({gate})]\\n\",\n+        applicability = \"has-placeholders\"\n+    )]\n+    pub attr_span: Span,\n+}"}, {"sha": "d65d4f7eb720ec4e3cc1981d133759739c792453", "filename": "compiler/rustc_const_eval/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/934079fd9e3df668895ed6d64db7221d03f3b027/compiler%2Frustc_const_eval%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/934079fd9e3df668895ed6d64db7221d03f3b027/compiler%2Frustc_const_eval%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Flib.rs?ref=934079fd9e3df668895ed6d64db7221d03f3b027", "patch": "@@ -31,6 +31,7 @@ extern crate tracing;\n extern crate rustc_middle;\n \n pub mod const_eval;\n+mod errors;\n pub mod interpret;\n pub mod transform;\n pub mod util;"}, {"sha": "3dcd96df33cf50dc92b0ed114597effc2a8d626a", "filename": "compiler/rustc_const_eval/src/transform/check_consts/check.rs", "status": "modified", "additions": 3, "deletions": 20, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/934079fd9e3df668895ed6d64db7221d03f3b027/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/934079fd9e3df668895ed6d64db7221d03f3b027/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fcheck.rs?ref=934079fd9e3df668895ed6d64db7221d03f3b027", "patch": "@@ -1,6 +1,6 @@\n //! The `Visitor` responsible for actually checking a `mir::Body` for invalid operations.\n \n-use rustc_errors::{Applicability, Diagnostic, ErrorGuaranteed};\n+use rustc_errors::{Diagnostic, ErrorGuaranteed};\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_index::bit_set::BitSet;\n@@ -24,6 +24,7 @@ use super::qualifs::{self, CustomEq, HasMutInterior, NeedsDrop, NeedsNonConstDro\n use super::resolver::FlowSensitiveAnalysis;\n use super::{ConstCx, Qualif};\n use crate::const_eval::is_unstable_const_fn;\n+use crate::errors::UnstableInStable;\n \n type QualifResults<'mir, 'tcx, Q> =\n     rustc_mir_dataflow::ResultsCursor<'mir, 'tcx, FlowSensitiveAnalysis<'mir, 'mir, 'tcx, Q>>;\n@@ -1026,23 +1027,5 @@ fn is_int_bool_or_char(ty: Ty<'_>) -> bool {\n fn emit_unstable_in_stable_error(ccx: &ConstCx<'_, '_>, span: Span, gate: Symbol) {\n     let attr_span = ccx.tcx.def_span(ccx.def_id()).shrink_to_lo();\n \n-    ccx.tcx\n-        .sess\n-        .struct_span_err(\n-            span,\n-            &format!(\"const-stable function cannot use `#[feature({})]`\", gate.as_str()),\n-        )\n-        .span_suggestion(\n-            attr_span,\n-            \"if it is not part of the public API, make this function unstably const\",\n-            concat!(r#\"#[rustc_const_unstable(feature = \"...\", issue = \"...\")]\"#, '\\n'),\n-            Applicability::HasPlaceholders,\n-        )\n-        .span_suggestion(\n-            attr_span,\n-            \"otherwise `#[rustc_allow_const_fn_unstable]` can be used to bypass stability checks\",\n-            format!(\"#[rustc_allow_const_fn_unstable({})]\\n\", gate),\n-            Applicability::MaybeIncorrect,\n-        )\n-        .emit();\n+    ccx.tcx.sess.emit_err(UnstableInStable { gate: gate.to_string(), span, attr_span });\n }"}, {"sha": "a022e596efb7b9dfc11007e23a714d86ddd397b3", "filename": "compiler/rustc_error_messages/locales/en-US/const_eval.ftl", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/934079fd9e3df668895ed6d64db7221d03f3b027/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fconst_eval.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/934079fd9e3df668895ed6d64db7221d03f3b027/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fconst_eval.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fconst_eval.ftl?ref=934079fd9e3df668895ed6d64db7221d03f3b027", "patch": "@@ -0,0 +1,4 @@\n+const-eval-unstable-in-stable =\n+    const-stable function cannot use `#[feature({$gate})]`\n+    .unstable-sugg = if it is not part of the public API, make this function unstably const\n+    .bypass-sugg = otherwise `#[rustc_allow_const_fn_unstable]` can be used to bypass stability checks"}, {"sha": "5a482bc5b2c392e311d0a22e093fedb216cf33e3", "filename": "compiler/rustc_error_messages/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/934079fd9e3df668895ed6d64db7221d03f3b027/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/934079fd9e3df668895ed6d64db7221d03f3b027/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs?ref=934079fd9e3df668895ed6d64db7221d03f3b027", "patch": "@@ -37,6 +37,7 @@ fluent_messages! {\n     parser => \"../locales/en-US/parser.ftl\",\n     privacy => \"../locales/en-US/privacy.ftl\",\n     typeck => \"../locales/en-US/typeck.ftl\",\n+    const_eval => \"../locales/en-US/const_eval.ftl\",\n }\n \n pub use fluent_generated::{self as fluent, DEFAULT_LOCALE_RESOURCES};"}]}