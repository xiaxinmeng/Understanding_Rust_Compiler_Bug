{"sha": "87438a163ec153e2322b70e8c5c987c7c89be0b4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3NDM4YTE2M2VjMTUzZTIzMjJiNzBlOGM1Yzk4N2M3Yzg5YmUwYjQ=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2019-06-24T08:17:04Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2019-06-24T08:31:00Z"}, "message": "HirIdification: miscellaneous bits", "tree": {"sha": "3649c4c5cb2052fc5ecaaa6b7bd624d785f4fe77", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3649c4c5cb2052fc5ecaaa6b7bd624d785f4fe77"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87438a163ec153e2322b70e8c5c987c7c89be0b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87438a163ec153e2322b70e8c5c987c7c89be0b4", "html_url": "https://github.com/rust-lang/rust/commit/87438a163ec153e2322b70e8c5c987c7c89be0b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87438a163ec153e2322b70e8c5c987c7c89be0b4/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d82a12f64f05d33f10f0e345e14175c4256703f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/d82a12f64f05d33f10f0e345e14175c4256703f8", "html_url": "https://github.com/rust-lang/rust/commit/d82a12f64f05d33f10f0e345e14175c4256703f8"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "7b69fe394fb2c552bc702ecbd588595ccdc7418d", "filename": "src/librustc/middle/liveness.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/87438a163ec153e2322b70e8c5c987c7c89be0b4/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87438a163ec153e2322b70e8c5c987c7c89be0b4/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fliveness.rs?ref=87438a163ec153e2322b70e8c5c987c7c89be0b4", "patch": "@@ -110,7 +110,7 @@ use std::{fmt, u32};\n use std::io::prelude::*;\n use std::io;\n use std::rc::Rc;\n-use syntax::ast::{self, NodeId};\n+use syntax::ast;\n use syntax::ptr::P;\n use syntax::symbol::{kw, sym};\n use syntax_pos::Span;\n@@ -1327,12 +1327,11 @@ impl<'a, 'tcx> Liveness<'a, 'tcx> {\n         }\n     }\n \n-    fn access_var(&mut self, hir_id: HirId, nid: NodeId, succ: LiveNode, acc: u32, span: Span)\n+    fn access_var(&mut self, hir_id: HirId, var_hid: HirId, succ: LiveNode, acc: u32, span: Span)\n                   -> LiveNode {\n         let ln = self.live_node(hir_id, span);\n         if acc != 0 {\n             self.init_from_succ(ln, succ);\n-            let var_hid = self.ir.tcx.hir().node_to_hir_id(nid);\n             let var = self.variable(var_hid, span);\n             self.acc(ln, var, acc);\n         }\n@@ -1345,8 +1344,7 @@ impl<'a, 'tcx> Liveness<'a, 'tcx> {\n             Res::Local(hid) => {\n                 let upvars = self.ir.tcx.upvars(self.ir.body_owner);\n                 if !upvars.map_or(false, |upvars| upvars.contains_key(&hid)) {\n-                    let nid = self.ir.tcx.hir().hir_to_node_id(hid);\n-                    self.access_var(hir_id, nid, succ, acc, path.span)\n+                    self.access_var(hir_id, hid, succ, acc, path.span)\n                 } else {\n                     succ\n                 }"}, {"sha": "af8dedfc8812e389874fb9bed343766c38520f45", "filename": "src/librustc/ty/inhabitedness/def_id_forest.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/87438a163ec153e2322b70e8c5c987c7c89be0b4/src%2Flibrustc%2Fty%2Finhabitedness%2Fdef_id_forest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87438a163ec153e2322b70e8c5c987c7c89be0b4/src%2Flibrustc%2Fty%2Finhabitedness%2Fdef_id_forest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Finhabitedness%2Fdef_id_forest.rs?ref=87438a163ec153e2322b70e8c5c987c7c89be0b4", "patch": "@@ -1,6 +1,6 @@\n use std::mem;\n use smallvec::SmallVec;\n-use syntax::ast::CRATE_NODE_ID;\n+use rustc::hir::CRATE_HIR_ID;\n use crate::ty::context::TyCtxt;\n use crate::ty::{DefId, DefIdTree};\n \n@@ -33,7 +33,7 @@ impl<'tcx> DefIdForest {\n     /// crate.\n     #[inline]\n     pub fn full(tcx: TyCtxt<'tcx>) -> DefIdForest {\n-        let crate_id = tcx.hir().local_def_id(CRATE_NODE_ID);\n+        let crate_id = tcx.hir().local_def_id_from_hir_id(CRATE_HIR_ID);\n         DefIdForest::from_id(crate_id)\n     }\n "}]}