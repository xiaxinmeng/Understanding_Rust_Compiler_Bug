{"sha": "9b8b3b2b0339bbae4aad139c5dad4b46410cd784", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliOGIzYjJiMDMzOWJiYWU0YWFkMTM5YzVkYWQ0YjQ2NDEwY2Q3ODQ=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2017-03-07T20:20:39Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2017-03-12T11:02:49Z"}, "message": "rustbuild: Add option for enabling partial LLVM rebuilds", "tree": {"sha": "df07c9a0e2357944e9476211123025f7ef372035", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df07c9a0e2357944e9476211123025f7ef372035"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b8b3b2b0339bbae4aad139c5dad4b46410cd784", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b8b3b2b0339bbae4aad139c5dad4b46410cd784", "html_url": "https://github.com/rust-lang/rust/commit/9b8b3b2b0339bbae4aad139c5dad4b46410cd784", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b8b3b2b0339bbae4aad139c5dad4b46410cd784/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f84a5174833e39ca779fa7e49b34190e100e2e49", "url": "https://api.github.com/repos/rust-lang/rust/commits/f84a5174833e39ca779fa7e49b34190e100e2e49", "html_url": "https://github.com/rust-lang/rust/commit/f84a5174833e39ca779fa7e49b34190e100e2e49"}], "stats": {"total": 44, "additions": 26, "deletions": 18}, "files": [{"sha": "744ef2b2b24e443d76bb897212ae786b272de88a", "filename": "appveyor.yml", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9b8b3b2b0339bbae4aad139c5dad4b46410cd784/appveyor.yml", "raw_url": "https://github.com/rust-lang/rust/raw/9b8b3b2b0339bbae4aad139c5dad4b46410cd784/appveyor.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/appveyor.yml?ref=9b8b3b2b0339bbae4aad139c5dad4b46410cd784", "patch": "@@ -144,10 +144,10 @@ on_failure:\n   - cat %CD%/sccache.log\n \n cache:\n-  - \"build/i686-pc-windows-msvc/llvm -> src/rustllvm/llvm-auto-clean-trigger\"\n-  - \"build/x86_64-pc-windows-msvc/llvm -> src/rustllvm/llvm-auto-clean-trigger\"\n-  - \"i686-pc-windows-msvc/llvm -> src/rustllvm/llvm-auto-clean-trigger\"\n-  - \"x86_64-pc-windows-msvc/llvm -> src/rustllvm/llvm-auto-clean-trigger\"\n+  - \"build/i686-pc-windows-msvc/llvm -> src/rustllvm/llvm-rebuild-trigger\"\n+  - \"build/x86_64-pc-windows-msvc/llvm -> src/rustllvm/llvm-rebuild-trigger\"\n+  - \"i686-pc-windows-msvc/llvm -> src/rustllvm/llvm-rebuild-trigger\"\n+  - \"x86_64-pc-windows-msvc/llvm -> src/rustllvm/llvm-rebuild-trigger\"\n \n branches:\n   only:"}, {"sha": "4b79e4beb4b8c671d7a2289d10ffe8199cda75fa", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b8b3b2b0339bbae4aad139c5dad4b46410cd784/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b8b3b2b0339bbae4aad139c5dad4b46410cd784/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=9b8b3b2b0339bbae4aad139c5dad4b46410cd784", "patch": "@@ -60,6 +60,7 @@ pub struct Config {\n     pub llvm_link_shared: bool,\n     pub llvm_targets: Option<String>,\n     pub llvm_link_jobs: Option<u32>,\n+    pub llvm_clean_rebuild: bool,\n \n     // rust codegen options\n     pub rust_optimize: bool,\n@@ -181,6 +182,7 @@ struct Llvm {\n     static_libstdcpp: Option<bool>,\n     targets: Option<String>,\n     link_jobs: Option<u32>,\n+    clean_rebuild: Option<bool>,\n }\n \n #[derive(RustcDecodable, Default, Clone)]\n@@ -241,6 +243,7 @@ impl Config {\n     pub fn parse(build: &str, file: Option<PathBuf>) -> Config {\n         let mut config = Config::default();\n         config.llvm_optimize = true;\n+        config.llvm_clean_rebuild = true;\n         config.use_jemalloc = true;\n         config.backtrace = true;\n         config.rust_optimize = true;\n@@ -334,6 +337,7 @@ impl Config {\n             set(&mut config.llvm_release_debuginfo, llvm.release_debuginfo);\n             set(&mut config.llvm_version_check, llvm.version_check);\n             set(&mut config.llvm_static_stdcpp, llvm.static_libstdcpp);\n+            set(&mut config.llvm_clean_rebuild, llvm.clean_rebuild);\n             config.llvm_targets = llvm.targets.clone();\n             config.llvm_link_jobs = llvm.link_jobs;\n         }"}, {"sha": "4e4b11fdc11a846b836d12442ecaf337fa9a701c", "filename": "src/bootstrap/config.toml.example", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9b8b3b2b0339bbae4aad139c5dad4b46410cd784/src%2Fbootstrap%2Fconfig.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/9b8b3b2b0339bbae4aad139c5dad4b46410cd784/src%2Fbootstrap%2Fconfig.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.toml.example?ref=9b8b3b2b0339bbae4aad139c5dad4b46410cd784", "patch": "@@ -61,6 +61,13 @@\n # controlled by rustbuild's -j parameter.\n #link-jobs = 0\n \n+# Delete LLVM build directory on LLVM rebuild.\n+# This option's default (`true`) is optimized for CI needs, and CI wants to\n+# perform clean full builds only (possibly accelerated by (s)ccache).\n+# You may want to override this option for local builds to enable partial LLVM\n+# rebuilds.\n+#clean-rebuild = true\n+\n # =============================================================================\n # General build configuration options\n # ============================================================================="}, {"sha": "a7754f2669ef07e30b45a1b5fc3e9c8704eec28b", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 10, "deletions": 13, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/9b8b3b2b0339bbae4aad139c5dad4b46410cd784/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b8b3b2b0339bbae4aad139c5dad4b46410cd784/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=9b8b3b2b0339bbae4aad139c5dad4b46410cd784", "patch": "@@ -41,28 +41,25 @@ pub fn llvm(build: &Build, target: &str) {\n         }\n     }\n \n-    let clean_trigger = build.src.join(\"src/rustllvm/llvm-auto-clean-trigger\");\n-    let mut clean_trigger_contents = String::new();\n-    t!(t!(File::open(&clean_trigger)).read_to_string(&mut clean_trigger_contents));\n+    let rebuild_trigger = build.src.join(\"src/rustllvm/llvm-rebuild-trigger\");\n+    let mut rebuild_trigger_contents = String::new();\n+    t!(t!(File::open(&rebuild_trigger)).read_to_string(&mut rebuild_trigger_contents));\n \n     let out_dir = build.llvm_out(target);\n     let done_stamp = out_dir.join(\"llvm-finished-building\");\n     if done_stamp.exists() {\n         let mut done_contents = String::new();\n         t!(t!(File::open(&done_stamp)).read_to_string(&mut done_contents));\n \n-        // LLVM was already built previously.\n-        // We don't track changes in LLVM sources, so we need to choose between reusing\n-        // what was built previously, or cleaning the directory and doing a fresh build.\n-        // The choice depends on contents of the clean-trigger file.\n-        // If the contents are the same as during the previous build, then no action is required.\n-        // If the contents differ from the previous build, then cleaning is triggered.\n-        if done_contents == clean_trigger_contents {\n+        // If LLVM was already built previously and contents of the rebuild-trigger file\n+        // didn't change from the previous build, then no action is required.\n+        if done_contents == rebuild_trigger_contents {\n             return\n-        } else {\n-            t!(fs::remove_dir_all(&out_dir));\n         }\n     }\n+    if build.config.llvm_clean_rebuild {\n+        t!(fs::remove_dir_all(&out_dir));\n+    }\n \n     println!(\"Building LLVM for {}\", target);\n     let _time = util::timeit();\n@@ -154,7 +151,7 @@ pub fn llvm(build: &Build, target: &str) {\n     //        tools and libs on all platforms.\n     cfg.build();\n \n-    t!(t!(File::create(&done_stamp)).write_all(clean_trigger_contents.as_bytes()));\n+    t!(t!(File::create(&done_stamp)).write_all(rebuild_trigger_contents.as_bytes()));\n }\n \n fn check_llvm_version(build: &Build, llvm_config: &Path) {"}, {"sha": "aeabf4a1dd3768284138f5bc434da6f604abc654", "filename": "src/rustllvm/llvm-rebuild-trigger", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9b8b3b2b0339bbae4aad139c5dad4b46410cd784/src%2Frustllvm%2Fllvm-rebuild-trigger", "raw_url": "https://github.com/rust-lang/rust/raw/9b8b3b2b0339bbae4aad139c5dad4b46410cd784/src%2Frustllvm%2Fllvm-rebuild-trigger", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2Fllvm-rebuild-trigger?ref=9b8b3b2b0339bbae4aad139c5dad4b46410cd784", "patch": "@@ -1,4 +1,4 @@\n-# If this file is modified, then llvm will be forcibly cleaned and then rebuilt.\n+# If this file is modified, then llvm will be (optionally) cleaned and then rebuilt.\n # The actual contents of this file do not matter, but to trigger a change on the\n # build bots then the contents should be changed so git updates the mtime.\n 2017-03-04", "previous_filename": "src/rustllvm/llvm-auto-clean-trigger"}]}