{"sha": "921306757baa636af7872b003d33dc1a8bd2b725", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyMTMwNjc1N2JhYTYzNmFmNzg3MmIwMDNkMzNkYzFhOGJkMmI3MjU=", "commit": {"author": {"name": "Jess Balint", "email": "jbalint@gmail.com", "date": "2020-06-03T22:54:23Z"}, "committer": {"name": "Jess Balint", "email": "jbalint@gmail.com", "date": "2020-06-04T22:31:21Z"}, "message": "introduce_named_lifetime assist wasn't applicable when type parameter\nfollowed anonymous lifetime token\n\n(fixes #4684)", "tree": {"sha": "18c88489dd538d36aad4b89f66ccd6f6994a82a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18c88489dd538d36aad4b89f66ccd6f6994a82a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/921306757baa636af7872b003d33dc1a8bd2b725", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/921306757baa636af7872b003d33dc1a8bd2b725", "html_url": "https://github.com/rust-lang/rust/commit/921306757baa636af7872b003d33dc1a8bd2b725", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/921306757baa636af7872b003d33dc1a8bd2b725/comments", "author": {"login": "jbalint", "id": 99260, "node_id": "MDQ6VXNlcjk5MjYw", "avatar_url": "https://avatars.githubusercontent.com/u/99260?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbalint", "html_url": "https://github.com/jbalint", "followers_url": "https://api.github.com/users/jbalint/followers", "following_url": "https://api.github.com/users/jbalint/following{/other_user}", "gists_url": "https://api.github.com/users/jbalint/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbalint/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbalint/subscriptions", "organizations_url": "https://api.github.com/users/jbalint/orgs", "repos_url": "https://api.github.com/users/jbalint/repos", "events_url": "https://api.github.com/users/jbalint/events{/privacy}", "received_events_url": "https://api.github.com/users/jbalint/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbalint", "id": 99260, "node_id": "MDQ6VXNlcjk5MjYw", "avatar_url": "https://avatars.githubusercontent.com/u/99260?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbalint", "html_url": "https://github.com/jbalint", "followers_url": "https://api.github.com/users/jbalint/followers", "following_url": "https://api.github.com/users/jbalint/following{/other_user}", "gists_url": "https://api.github.com/users/jbalint/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbalint/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbalint/subscriptions", "organizations_url": "https://api.github.com/users/jbalint/orgs", "repos_url": "https://api.github.com/users/jbalint/repos", "events_url": "https://api.github.com/users/jbalint/events{/privacy}", "received_events_url": "https://api.github.com/users/jbalint/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65a3cc21edd8acd93b728d094514bafddcb1757a", "url": "https://api.github.com/repos/rust-lang/rust/commits/65a3cc21edd8acd93b728d094514bafddcb1757a", "html_url": "https://github.com/rust-lang/rust/commit/65a3cc21edd8acd93b728d094514bafddcb1757a"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "28fcbc9ba62e55bd9c2b19a9b04d6fd534999040", "filename": "crates/ra_assists/src/handlers/introduce_named_lifetime.rs", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/921306757baa636af7872b003d33dc1a8bd2b725/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fintroduce_named_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/921306757baa636af7872b003d33dc1a8bd2b725/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fintroduce_named_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fintroduce_named_lifetime.rs?ref=921306757baa636af7872b003d33dc1a8bd2b725", "patch": "@@ -41,8 +41,6 @@ pub(crate) fn introduce_named_lifetime(acc: &mut Assists, ctx: &AssistContext) -\n     if let Some(fn_def) = lifetime_token.ancestors().find_map(ast::FnDef::cast) {\n         generate_fn_def_assist(acc, &fn_def, lifetime_token.text_range())\n     } else if let Some(impl_def) = lifetime_token.ancestors().find_map(ast::ImplDef::cast) {\n-        // only allow naming the last anonymous lifetime\n-        lifetime_token.next_token().filter(|tok| tok.kind() == SyntaxKind::R_ANGLE)?;\n         generate_impl_def_assist(acc, &impl_def, lifetime_token.text_range())\n     } else {\n         None\n@@ -190,6 +188,23 @@ mod tests {\n         );\n     }\n \n+    #[test]\n+    fn test_impl_with_other_type_param() {\n+        check_assist(\n+            introduce_named_lifetime,\n+            \"impl<I> fmt::Display for SepByBuilder<'_<|>, I>\n+        where\n+            I: Iterator,\n+            I::Item: fmt::Display,\n+        {\",\n+            \"impl<I, 'a> fmt::Display for SepByBuilder<'a, I>\n+        where\n+            I: Iterator,\n+            I::Item: fmt::Display,\n+        {\",\n+        )\n+    }\n+\n     #[test]\n     fn test_example_case_cursor_before_tick() {\n         check_assist("}]}