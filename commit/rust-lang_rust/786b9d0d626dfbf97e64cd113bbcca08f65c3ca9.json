{"sha": "786b9d0d626dfbf97e64cd113bbcca08f65c3ca9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4NmI5ZDBkNjI2ZGZiZjk3ZTY0Y2QxMTNiYmNjYTA4ZjY1YzNjYTk=", "commit": {"author": {"name": "Jethro Beekman", "email": "jethro@fortanix.com", "date": "2019-12-09T08:46:55Z"}, "committer": {"name": "Jethro Beekman", "email": "jethro@fortanix.com", "date": "2019-12-09T08:46:55Z"}, "message": "Bootstrap: change logic for choosing linker and rpath", "tree": {"sha": "7fbd22507884693a19ab097b5608782401d7132b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7fbd22507884693a19ab097b5608782401d7132b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/786b9d0d626dfbf97e64cd113bbcca08f65c3ca9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/786b9d0d626dfbf97e64cd113bbcca08f65c3ca9", "html_url": "https://github.com/rust-lang/rust/commit/786b9d0d626dfbf97e64cd113bbcca08f65c3ca9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/786b9d0d626dfbf97e64cd113bbcca08f65c3ca9/comments", "author": null, "committer": null, "parents": [{"sha": "2b0e6d2643e60651ef4b8c83beaf86dc4e62f359", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b0e6d2643e60651ef4b8c83beaf86dc4e62f359", "html_url": "https://github.com/rust-lang/rust/commit/2b0e6d2643e60651ef4b8c83beaf86dc4e62f359"}], "stats": {"total": 28, "additions": 17, "deletions": 11}, "files": [{"sha": "025d5e7140139c29b5442fd22889612b10e2bd52", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/786b9d0d626dfbf97e64cd113bbcca08f65c3ca9/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/786b9d0d626dfbf97e64cd113bbcca08f65c3ca9/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=786b9d0d626dfbf97e64cd113bbcca08f65c3ca9", "patch": "@@ -980,7 +980,7 @@ impl<'a> Builder<'a> {\n         // argument manually via `-C link-args=-Wl,-rpath,...`. Plus isn't it\n         // fun to pass a flag to a tool to pass a flag to pass a flag to a tool\n         // to change a flag in a binary?\n-        if self.config.rust_rpath {\n+        if self.config.rust_rpath && util::use_host_linker(&target) {\n             let rpath = if target.contains(\"apple\") {\n \n                 // Note that we need to take one extra step on macOS to also pass\n@@ -990,10 +990,7 @@ impl<'a> Builder<'a> {\n                 // flesh out rpath support more fully in the future.\n                 rustflags.arg(\"-Zosx-rpath-install-name\");\n                 Some(\"-Wl,-rpath,@loader_path/../lib\")\n-            } else if !target.contains(\"windows\") &&\n-                      !target.contains(\"wasm32\") &&\n-                      !target.contains(\"emscripten\") &&\n-                      !target.contains(\"fuchsia\") {\n+            } else if !target.contains(\"windows\") {\n                 Some(\"-Wl,-rpath,$ORIGIN/../lib\")\n             } else {\n                 None"}, {"sha": "09e3bb5e231eecc8a001cf6496fc15891dc2dab2", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/786b9d0d626dfbf97e64cd113bbcca08f65c3ca9/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/786b9d0d626dfbf97e64cd113bbcca08f65c3ca9/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=786b9d0d626dfbf97e64cd113bbcca08f65c3ca9", "patch": "@@ -806,12 +806,8 @@ impl Build {\n                                                        .and_then(|c| c.linker.as_ref()) {\n             Some(linker)\n         } else if target != self.config.build &&\n-                  !target.contains(\"msvc\") &&\n-                  !target.contains(\"emscripten\") &&\n-                  !target.contains(\"wasm32\") &&\n-                  !target.contains(\"nvptx\") &&\n-                  !target.contains(\"fortanix\") &&\n-                  !target.contains(\"fuchsia\") {\n+                  util::use_host_linker(&target) &&\n+                  !target.contains(\"msvc\") {\n             Some(self.cc(target))\n         } else {\n             None"}, {"sha": "6824b7a58c480cdf44ec5192311b311d9ca19221", "filename": "src/bootstrap/util.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/786b9d0d626dfbf97e64cd113bbcca08f65c3ca9/src%2Fbootstrap%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/786b9d0d626dfbf97e64cd113bbcca08f65c3ca9/src%2Fbootstrap%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Futil.rs?ref=786b9d0d626dfbf97e64cd113bbcca08f65c3ca9", "patch": "@@ -15,6 +15,7 @@ use build_helper::t;\n \n use crate::config::Config;\n use crate::builder::Builder;\n+use crate::cache::Interned;\n \n /// Returns the `name` as the filename of a static library for `target`.\n pub fn staticlib(name: &str, target: &str) -> String {\n@@ -306,3 +307,15 @@ pub fn forcing_clang_based_tests() -> bool {\n         false\n     }\n }\n+\n+pub fn use_host_linker(target: &Interned<String>) -> bool {\n+    // FIXME: this information should be gotten by checking the linker flavor\n+    // of the rustc target\n+    !(\n+        target.contains(\"emscripten\") ||\n+        target.contains(\"wasm32\") ||\n+        target.contains(\"nvptx\") ||\n+        target.contains(\"fortanix\") ||\n+        target.contains(\"fuchsia\")\n+    )\n+}"}]}