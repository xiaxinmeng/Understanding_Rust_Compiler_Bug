{"sha": "72e36d47e830a175815aba937d8a669d72d028fd", "node_id": "C_kwDOAAsO6NoAKDcyZTM2ZDQ3ZTgzMGExNzU4MTVhYmE5MzdkOGE2NjlkNzJkMDI4ZmQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-31T22:14:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-31T22:14:45Z"}, "message": "Rollup merge of #91480 - jsha:fewer-colors, r=GuillaumeGomez\n\nrustdoc: use smaller number of colors to distinguish items\n\nThis reduces visual distractions when reading method signatures.\n\nAs discussed in https://github.com/rust-lang/rust/issues/59845#issuecomment-974757191, this categorizes items into one of six colors (down from thirteen):\n\n - method, function (ochre `#AD7C37`)\n - trait, trait alias (dark slate blue `#6E4FC9`)\n - enum, struct, type alias, union, primitive (maroon `#AD378A`)\n - static, module, keyword, associated type, foreign type (steel blue `#3873AD`)\n - macro (green `#068000`)\n - generic params, self, Self (unmarked black `#000000`)\n\nI slightly tweaked the actual color values so they'd have the same lightness (previously the trait color stood out much more than the others). And I made the color for links in general consistently use steel blue (previously there was a slightly different color for \"search-failed\").\n\nThe ayu and dark themes have been updated according to the same logic. I haven't changed any of the color values in those themes, just their assignment to types.\n\nDemo:\n\nhttps://rustdoc.crud.net/jsha/fewer-colors/std/string/struct.String.html\nhttps://rustdoc.crud.net/jsha/fewer-colors/std/vec/struct.Vec.html\nhttps://rustdoc.crud.net/jsha/fewer-colors/std/io/trait.Read.html\nhttps://rustdoc.crud.net/jsha/fewer-colors/std/iter/trait.Iterator.html", "tree": {"sha": "be3e6c93e31e3c0a1db7cc42a3475675bc9cb1bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be3e6c93e31e3c0a1db7cc42a3475675bc9cb1bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72e36d47e830a175815aba937d8a669d72d028fd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhz4DWCRBK7hj4Ov3rIwAAvGIIACwWVtrPBjDbWI7jElBnl/tX\nuELJIr/DbeFzpiFa+8ecH/rOUjxpHoge/BcVDXXUPfSXL8O3SZGdiFtMgEWmBfGT\nHQsxAT9pJMc/AT3js+ef6Mocd+wVvDF9kkfeLJBHdKE8rLf1PKRH6Y/oYYJYXpLA\nn1eVcHLUYK7/TAcypNCzfWvm19waJuh1bMJ8zhb7GaahFuu7crnpahrXqxB2ZNFc\n2a3K64jruGRrU3Ug8fok2/mO0YP30E7053QYdnERuOvl9gW+TUbLgHguP3GOEdWi\naxbvt310NYhuX0XkIVkHl16Za6d6C1+BPMD+K7eH+L3OmJma/GuR35ot+rBn6tg=\n=0B6F\n-----END PGP SIGNATURE-----\n", "payload": "tree be3e6c93e31e3c0a1db7cc42a3475675bc9cb1bc\nparent 198fca8601c953b37001a2d0b712ec29d1bd735f\nparent 3f517fb1ae1af9f10e0e7492f725b729202499cf\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1640988885 +0100\ncommitter GitHub <noreply@github.com> 1640988885 +0100\n\nRollup merge of #91480 - jsha:fewer-colors, r=GuillaumeGomez\n\nrustdoc: use smaller number of colors to distinguish items\n\nThis reduces visual distractions when reading method signatures.\n\nAs discussed in https://github.com/rust-lang/rust/issues/59845#issuecomment-974757191, this categorizes items into one of six colors (down from thirteen):\n\n - method, function (ochre `#AD7C37`)\n - trait, trait alias (dark slate blue `#6E4FC9`)\n - enum, struct, type alias, union, primitive (maroon `#AD378A`)\n - static, module, keyword, associated type, foreign type (steel blue `#3873AD`)\n - macro (green `#068000`)\n - generic params, self, Self (unmarked black `#000000`)\n\nI slightly tweaked the actual color values so they'd have the same lightness (previously the trait color stood out much more than the others). And I made the color for links in general consistently use steel blue (previously there was a slightly different color for \"search-failed\").\n\nThe ayu and dark themes have been updated according to the same logic. I haven't changed any of the color values in those themes, just their assignment to types.\n\nDemo:\n\nhttps://rustdoc.crud.net/jsha/fewer-colors/std/string/struct.String.html\nhttps://rustdoc.crud.net/jsha/fewer-colors/std/vec/struct.Vec.html\nhttps://rustdoc.crud.net/jsha/fewer-colors/std/io/trait.Read.html\nhttps://rustdoc.crud.net/jsha/fewer-colors/std/iter/trait.Iterator.html\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72e36d47e830a175815aba937d8a669d72d028fd", "html_url": "https://github.com/rust-lang/rust/commit/72e36d47e830a175815aba937d8a669d72d028fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72e36d47e830a175815aba937d8a669d72d028fd/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "198fca8601c953b37001a2d0b712ec29d1bd735f", "url": "https://api.github.com/repos/rust-lang/rust/commits/198fca8601c953b37001a2d0b712ec29d1bd735f", "html_url": "https://github.com/rust-lang/rust/commit/198fca8601c953b37001a2d0b712ec29d1bd735f"}, {"sha": "3f517fb1ae1af9f10e0e7492f725b729202499cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f517fb1ae1af9f10e0e7492f725b729202499cf", "html_url": "https://github.com/rust-lang/rust/commit/3f517fb1ae1af9f10e0e7492f725b729202499cf"}], "stats": {"total": 152, "additions": 82, "deletions": 70}, "files": [{"sha": "981eb9589e9f1cb8ac7db8d96bca71911db5d811", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72e36d47e830a175815aba937d8a669d72d028fd/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72e36d47e830a175815aba937d8a669d72d028fd/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=72e36d47e830a175815aba937d8a669d72d028fd", "patch": "@@ -955,7 +955,7 @@ fn fmt_type<'cx>(\n                 Ok((ref url, _, ref path)) if !f.alternate() => {\n                     write!(\n                         f,\n-                        \"<a class=\\\"type\\\" href=\\\"{url}#{shortty}.{name}\\\" \\\n+                        \"<a class=\\\"associatedtype\\\" href=\\\"{url}#{shortty}.{name}\\\" \\\n                                     title=\\\"type {path}::{name}\\\">{name}</a>\",\n                         url = url,\n                         shortty = ItemType::AssocType,"}, {"sha": "16334890da674ed6b6c947988269ce4d14181cfa", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72e36d47e830a175815aba937d8a669d72d028fd/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72e36d47e830a175815aba937d8a669d72d028fd/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=72e36d47e830a175815aba937d8a669d72d028fd", "patch": "@@ -788,7 +788,7 @@ fn assoc_type(\n ) {\n     write!(\n         w,\n-        \"{}type <a href=\\\"{}\\\" class=\\\"type\\\">{}</a>\",\n+        \"{}type <a href=\\\"{}\\\" class=\\\"associatedtype\\\">{}</a>\",\n         extra,\n         naive_assoc_href(it, link, cx),\n         it.name.as_ref().unwrap()"}, {"sha": "38040eeca52d494aef3e88cafe31b6dbdfdbd632", "filename": "src/librustdoc/html/static/css/themes/ayu.css", "status": "modified", "additions": 19, "deletions": 11, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/72e36d47e830a175815aba937d8a669d72d028fd/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css", "raw_url": "https://github.com/rust-lang/rust/raw/72e36d47e830a175815aba937d8a669d72d028fd/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css?ref=72e36d47e830a175815aba937d8a669d72d028fd", "patch": "@@ -167,29 +167,35 @@ pre, .rustdoc.source .example-wrap {\n \n .content .item-info::before { color: #ccc; }\n \n-.content span.foreigntype, .content a.foreigntype { color: #ef57ff; }\n-.content span.union, .content a.union { color: #98a01c; }\n+.content span.foreigntype, .content a.foreigntype { color: #ffa0a5; }\n+.content span.union, .content a.union { color: #ffa0a5; }\n .content span.constant, .content a.constant,\n-.content span.static, .content a.static { color: #6380a0; }\n-.content span.primitive, .content a.primitive { color: #32889b; }\n-.content span.traitalias, .content a.traitalias { color: #57d399; }\n-.content span.keyword, .content a.keyword { color: #de5249; }\n+.content span.static, .content a.static { color: #39AFD7; }\n+.content span.primitive, .content a.primitive { color: #ffa0a5; }\n+.content span.traitalias, .content a.traitalias { color: #39AFD7; }\n+.content span.keyword, .content a.keyword { color: #39AFD7; }\n \n .content span.externcrate, .content span.mod, .content a.mod {\n-\tcolor: #acccf9;\n+\tcolor: #39AFD7;\n }\n .content span.struct, .content a.struct {\n \tcolor: #ffa0a5;\n }\n .content span.enum, .content a.enum {\n-\tcolor: #99e0c9;\n+\tcolor: #ffa0a5;\n }\n .content span.trait, .content a.trait {\n \tcolor: #39AFD7;\n }\n .content span.type, .content a.type {\n-\tcolor: #cfbcf5;\n+\tcolor: #39AFD7;\n }\n+.content span.type,\n+.content a.type,\n+.block a.current.type { color: #39AFD7; }\n+.content span.associatedtype,\n+.content a.associatedtype,\n+.block a.current.associatedtype { color: #39AFD7; }\n .content span.fn, .content a.fn, .content span.method,\n .content a.method, .content span.tymethod,\n .content a.tymethod, .content .fnname {\n@@ -454,11 +460,12 @@ above the `@media (max-width: 700px)` rules due to a bug in the css checker */\n .block a.current.derive,.content span.macro,.content a.macro,.block a.current.macro {}\n .content span.struct,.content a.struct,.block a.current.struct {}\n #titles>button:hover,#titles>button.selected {}\n-.content span.type,.content a.type,.block a.current.type {}\n+.content span.typedef,.content a.typedef,.block a.current.typedef {}\n .content span.union,.content a.union,.block a.current.union {}\n pre.rust .lifetime {}\n .stab.unstable {}\n-h2,h3:not(.impl):not(.method):not(.type):not(.tymethod),h4:not(.method):not(.type):not(.tymethod) {}\n+h2,\n+h3:not(.impl):not(.method):not(.type):not(.tymethod), h4:not(.method):not(.type):not(.tymethod) {}\n .content span.enum,.content a.enum,.block a.current.enum {}\n .content span.constant,.content a.constant,.block a.current.constant,.content span.static,\n .content a.static, .block a.current.static {}\n@@ -495,6 +502,7 @@ a.result-fn:focus,\n a.result-method:focus,\n a.result-tymethod:focus {}\n a.result-type:focus {}\n+a.result-associatedtype:focus {}\n a.result-foreigntype:focus {}\n a.result-attr:focus,\n a.result-derive:focus,"}, {"sha": "f4181e431c896259350f4b082252fb751508503e", "filename": "src/librustdoc/html/static/css/themes/dark.css", "status": "modified", "additions": 20, "deletions": 18, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/72e36d47e830a175815aba937d8a669d72d028fd/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css", "raw_url": "https://github.com/rust-lang/rust/raw/72e36d47e830a175815aba937d8a669d72d028fd/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css?ref=72e36d47e830a175815aba937d8a669d72d028fd", "patch": "@@ -119,47 +119,49 @@ pre, .rustdoc.source .example-wrap {\n a.result-trait:focus { background-color: #013191; }\n a.result-traitalias:focus { background-color: #013191; }\n a.result-mod:focus,\n-a.result-externcrate:focus { background-color: #afc6e4; }\n-a.result-mod:focus { background-color: #803a1b; }\n-a.result-externcrate:focus { background-color: #396bac; }\n-a.result-enum:focus { background-color: #5b4e68; }\n+a.result-externcrate:focus { background-color: #884719; }\n+a.result-enum:focus { background-color: #194e9f; }\n a.result-struct:focus { background-color: #194e9f; }\n-a.result-union:focus { background-color: #b7bd49; }\n+a.result-union:focus { background-color: #194e9f; }\n a.result-fn:focus,\n a.result-method:focus,\n a.result-tymethod:focus { background-color: #4950ed; }\n-a.result-type:focus { background-color: #38902c; }\n-a.result-foreigntype:focus { background-color: #b200d6; }\n+a.result-type:focus { background-color: #194e9f; }\n+a.result-associatedtype:focus { background-color: #884719; }\n+a.result-foreigntype:focus { background-color: #194e9f; }\n a.result-attr:focus,\n a.result-derive:focus,\n a.result-macro:focus { background-color: #217d1c; }\n a.result-constant:focus,\n-a.result-static:focus { background-color: #0063cc; }\n-a.result-primitive:focus { background-color: #00708a; }\n+a.result-static:focus { background-color: #884719; }\n+a.result-primitive:focus { background-color: #194e9f; }\n a.result-keyword:focus { background-color: #884719; }\n \n .content .item-info::before { color: #ccc; }\n \n-.content span.enum, .content a.enum, .block a.current.enum { color: #82b089; }\n+.content span.enum, .content a.enum, .block a.current.enum { color: #2dbfb8; }\n .content span.struct, .content a.struct, .block a.current.struct { color: #2dbfb8; }\n-.content span.type, .content a.type, .block a.current.type { color: #ff7f00; }\n-.content span.foreigntype, .content a.foreigntype, .block a.current.foreigntype { color: #dd7de8; }\n+.content span.type, .content a.type, .block a.current.type { color: #2dbfb8; }\n+.content span.associatedtype,\n+.content a.associatedtype,\n+.block a.current.associatedtype { color: #D2991D; }\n+.content span.foreigntype, .content a.foreigntype, .block a.current.foreigntype { color: #2dbfb8; }\n .content span.attr, .content a.attr, .block a.current.attr,\n .content span.derive, .content a.derive, .block a.current.derive,\n .content span.macro, .content a.macro, .block a.current.macro { color: #09bd00; }\n-.content span.union, .content a.union, .block a.current.union { color: #a6ae37; }\n+.content span.union, .content a.union, .block a.current.union { color: #2dbfb8; }\n .content span.constant, .content a.constant, .block a.current.constant,\n-.content span.static, .content a.static, .block a.current.static { color: #82a5c9; }\n-.content span.primitive, .content a.primitive, .block a.current.primitive { color: #43aec7; }\n+.content span.static, .content a.static, .block a.current.static { color: #D2991D; }\n+.content span.primitive, .content a.primitive, .block a.current.primitive { color: #2dbfb8; }\n .content span.externcrate,\n-.content span.mod, .content a.mod, .block a.current.mod { color: #bda000; }\n+.content span.mod, .content a.mod, .block a.current.mod { color: #D2991D; }\n .content span.trait, .content a.trait, .block a.current.trait { color: #b78cf2; }\n-.content span.traitalias, .content a.traitalias, .block a.current.traitalias { color: #b397da; }\n+.content span.traitalias, .content a.traitalias, .block a.current.traitalias { color: #b78cf2; }\n .content span.fn, .content a.fn, .block a.current.fn,\n .content span.method, .content a.method, .block a.current.method,\n .content span.tymethod, .content a.tymethod, .block a.current.tymethod,\n .content .fnname{ color: #2BAB63; }\n-.content span.keyword, .content a.keyword, .block a.current.keyword { color: #de5249; }\n+.content span.keyword, .content a.keyword, .block a.current.keyword { color: #D2991D; }\n \n pre.rust .comment { color: #8d8d8b; }\n pre.rust .doccomment { color: #8ca375; }"}, {"sha": "176f63098a49f5c8fe22cb7384cdc214b924b4d3", "filename": "src/librustdoc/html/static/css/themes/light.css", "status": "modified", "additions": 34, "deletions": 30, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/72e36d47e830a175815aba937d8a669d72d028fd/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css", "raw_url": "https://github.com/rust-lang/rust/raw/72e36d47e830a175815aba937d8a669d72d028fd/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css?ref=72e36d47e830a175815aba937d8a669d72d028fd", "patch": "@@ -9,7 +9,7 @@ h1, h2, h3, h4 {\n \tcolor: black;\n }\n h1.fqn {\n-\tborder-bottom-color: #D5D5D5;\n+\tborder-bottom-color: #DDDDDD;\n }\n h2, h3, h4 {\n \tborder-bottom-color: #DDDDDD;\n@@ -31,7 +31,7 @@ pre, .rustdoc.source .example-wrap {\n }\n \n .sidebar {\n-\tbackground-color: #F1F1F1;\n+\tbackground-color: #F5F5F5;\n }\n \n /* Improve the scrollbar display on firefox */\n@@ -90,7 +90,7 @@ pre, .rustdoc.source .example-wrap {\n \n .line-numbers span { color: #c67e2d; }\n .line-numbers .line-highlighted {\n-\tbackground-color: #f6fdb0 !important;\n+\tbackground-color: #FDFFD3 !important;\n }\n \n .docblock h1, .docblock h2, .docblock h3, .docblock h4, .docblock h5, .docblock h6 {\n@@ -120,44 +120,48 @@ a.result-trait:focus { background-color: #c7b6ff; }\n a.result-traitalias:focus { background-color: #c7b6ff; }\n a.result-mod:focus,\n a.result-externcrate:focus { background-color: #afc6e4; }\n-a.result-enum:focus { background-color: #b4d1b9; }\n+a.result-enum:focus { background-color: #e7b1a0; }\n a.result-struct:focus { background-color: #e7b1a0; }\n-a.result-union:focus { background-color: #b7bd49; }\n+a.result-union:focus { background-color: #e7b1a0; }\n a.result-fn:focus,\n a.result-method:focus,\n a.result-tymethod:focus { background-color: #c6afb3; }\n-a.result-type:focus { background-color: #ffc891; }\n-a.result-foreigntype:focus { background-color: #f5c4ff; }\n+a.result-type:focus { background-color: #e7b1a0; }\n+a.result-associatedtype:focus { background-color: #afc6e4; }\n+a.result-foreigntype:focus { background-color: #e7b1a0; }\n a.result-attr:focus,\n a.result-derive:focus,\n a.result-macro:focus { background-color: #8ce488; }\n a.result-constant:focus,\n-a.result-static:focus { background-color: #c3e0ff; }\n-a.result-primitive:focus { background-color: #9aecff; }\n-a.result-keyword:focus { background-color: #f99650; }\n+a.result-static:focus { background-color: #afc6e4; }\n+a.result-primitive:focus { background-color: #e7b1a0; }\n+a.result-keyword:focus { background-color: #afc6e4; }\n \n .content .item-info::before { color: #ccc; }\n \n-.content span.enum, .content a.enum, .block a.current.enum { color: #508157; }\n-.content span.struct, .content a.struct, .block a.current.struct { color: #ad448e; }\n-.content span.type, .content a.type, .block a.current.type { color: #ba5d00; }\n-.content span.foreigntype, .content a.foreigntype, .block a.current.foreigntype { color: #cd00e2; }\n+.content span.enum, .content a.enum, .block a.current.enum { color: #AD378A; }\n+.content span.struct, .content a.struct, .block a.current.struct { color: #AD378A; }\n+.content span.type, .content a.type, .block a.current.type { color:  #AD378A; }\n+.content span.foreigntype, .content a.foreigntype, .block a.current.foreigntype { color: #3873AD; }\n+.content span.associatedtype,\n+.content a.associatedtype,\n+.block a.current.associatedtype { color: #3873AD; }\n .content span.attr, .content a.attr, .block a.current.attr,\n .content span.derive, .content a.derive, .block a.current.derive,\n .content span.macro, .content a.macro, .block a.current.macro { color: #068000; }\n-.content span.union, .content a.union, .block a.current.union { color: #767b27; }\n+.content span.union, .content a.union, .block a.current.union { color: #AD378A; }\n .content span.constant, .content a.constant, .block a.current.constant,\n-.content span.static, .content a.static, .block a.current.static { color: #546e8a; }\n-.content span.primitive, .content a.primitive, .block a.current.primitive { color: #2c8093; }\n+.content span.static, .content a.static, .block a.current.static { color: #3873AD; }\n+.content span.primitive, .content a.primitive, .block a.current.primitive { color: #AD378A; }\n .content span.externcrate,\n-.content span.mod, .content a.mod, .block a.current.mod { color: #4d76ae; }\n-.content span.trait, .content a.trait, .block a.current.trait { color: #7c5af3; }\n-.content span.traitalias, .content a.traitalias, .block a.current.traitalias { color: #6841f1; }\n+.content span.mod, .content a.mod, .block a.current.mod { color: #3873AD; }\n+.content span.trait, .content a.trait, .block a.current.trait { color: #6E4FC9; }\n+.content span.traitalias, .content a.traitalias, .block a.current.traitalias { color: #5137AD; }\n .content span.fn, .content a.fn, .block a.current.fn,\n .content span.method, .content a.method, .block a.current.method,\n .content span.tymethod, .content a.tymethod, .block a.current.tymethod,\n-.content .fnname { color: #9a6e31; }\n-.content span.keyword, .content a.keyword, .block a.current.keyword { color: #de5249; }\n+.content .fnname { color: #AD7C37; }\n+.content span.keyword, .content a.keyword, .block a.current.keyword { color: #3873AD; }\n \n nav:not(.sidebar) {\n \tborder-bottom-color: #e0e0e0;\n@@ -268,7 +272,7 @@ pre.rust .question-mark {\n }\n \n a.test-arrow {\n-\tbackground-color: rgba(78, 139, 202, 0.2);\n+\tbackground-color: rgb(78, 139, 202, 0.2);\n }\n \n a.test-arrow:hover{\n@@ -285,7 +289,7 @@ a.test-arrow:hover{\n }\n \n :target {\n-\tborder-right: 3px solid #ffb44c;\n+\tborder-right: 3px solid #AD7C37;\n }\n \n pre.compile_fail {\n@@ -337,7 +341,7 @@ pre.ignore:hover, .information:hover + pre.ignore {\n }\n \n .search-failed a {\n-\tcolor: #0089ff;\n+\tcolor: #3873AD;\n }\n \n .tooltip::after {\n@@ -374,18 +378,18 @@ pre.ignore:hover, .information:hover + pre.ignore {\n \n @media (max-width: 700px) {\n \t.sidebar-menu {\n-\t\tbackground-color: #F1F1F1;\n+\t\tbackground-color: #F5F5F5;\n \t\tborder-bottom-color: #e0e0e0;\n \t\tborder-right-color: #e0e0e0;\n \t}\n \n \t.sidebar-elems {\n-\t\tbackground-color: #F1F1F1;\n+\t\tbackground-color: #F5F5F5;\n \t\tborder-right-color: #000;\n \t}\n \n \t#sidebar-filler {\n-\t\tbackground-color: #F1F1F1;\n+\t\tbackground-color: #F5F5F5;\n \t\tborder-bottom-color: #e0e0e0;\n \t}\n }\n@@ -453,13 +457,13 @@ kbd {\n }\n \n #sidebar-toggle {\n-\tbackground-color: #F1F1F1;\n+\tbackground-color: #F5F5F5;\n }\n #sidebar-toggle:hover {\n \tbackground-color: #E0E0E0;\n }\n #source-sidebar {\n-\tbackground-color: #F1F1F1;\n+\tbackground-color: #F5F5F5;\n }\n #source-sidebar > .title {\n \tborder-bottom-color: #ccc;"}, {"sha": "ca60be72cea468a6626d13b34d03f546deca3cc0", "filename": "src/test/rustdoc-gui/anchors.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/72e36d47e830a175815aba937d8a669d72d028fd/src%2Ftest%2Frustdoc-gui%2Fanchors.goml", "raw_url": "https://github.com/rust-lang/rust/raw/72e36d47e830a175815aba937d8a669d72d028fd/src%2Ftest%2Frustdoc-gui%2Fanchors.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fanchors.goml?ref=72e36d47e830a175815aba937d8a669d72d028fd", "patch": "@@ -12,7 +12,7 @@ reload:\n \n assert-css: (\"#toggle-all-docs\", {\"color\": \"rgb(0, 0, 0)\"})\n assert-css: (\".fqn .in-band a:nth-of-type(1)\", {\"color\": \"rgb(0, 0, 0)\"})\n-assert-css: (\".fqn .in-band a:nth-of-type(2)\", {\"color\": \"rgb(173, 68, 142)\"})\n+assert-css: (\".fqn .in-band a:nth-of-type(2)\", {\"color\": \"rgb(173, 55, 138)\"})\n assert-css: (\".srclink\", {\"color\": \"rgb(0, 0, 0)\"})\n assert-css: (\".srclink\", {\"color\": \"rgb(0, 0, 0)\"})\n "}, {"sha": "a64ac8b422fc0310057f8fbf8ef230681a27c4a4", "filename": "src/test/rustdoc-gui/font-weight.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/72e36d47e830a175815aba937d8a669d72d028fd/src%2Ftest%2Frustdoc-gui%2Ffont-weight.goml", "raw_url": "https://github.com/rust-lang/rust/raw/72e36d47e830a175815aba937d8a669d72d028fd/src%2Ftest%2Frustdoc-gui%2Ffont-weight.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Ffont-weight.goml?ref=72e36d47e830a175815aba937d8a669d72d028fd", "patch": "@@ -37,8 +37,8 @@ assert-css: (\n     {\"font-weight\": \"400\"},\n )\n \n-assert-count: (\".methods .type\", 1)\n-assert-css: (\".methods .type\", {\"font-weight\": \"600\"})\n+assert-count: (\".methods .associatedtype\", 1)\n+assert-css: (\".methods .associatedtype\", {\"font-weight\": \"600\"})\n assert-count: (\".methods .constant\", 1)\n assert-css: (\".methods .constant\", {\"font-weight\": \"600\"})\n assert-css: (\".methods .method\", {\"font-weight\": \"600\"})"}, {"sha": "a409d64131afdfa96de35c418376f41569be6738", "filename": "src/test/rustdoc/assoc-item-cast.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/72e36d47e830a175815aba937d8a669d72d028fd/src%2Ftest%2Frustdoc%2Fassoc-item-cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72e36d47e830a175815aba937d8a669d72d028fd/src%2Ftest%2Frustdoc%2Fassoc-item-cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fassoc-item-cast.rs?ref=72e36d47e830a175815aba937d8a669d72d028fd", "patch": "@@ -1,6 +1,5 @@\n #![crate_name = \"foo\"]\n \n-\n pub trait Expression {\n     type SqlType;\n }\n@@ -11,5 +10,5 @@ pub trait AsExpression<T> {\n }\n \n // @has foo/type.AsExprOf.html\n-// @has - '//*[@class=\"rust typedef\"]' 'type AsExprOf<Item, Type> = <Item as AsExpression<Type>>::Expression;'\n+// @has - '//pre[@class=\"rust typedef\"]' 'type AsExprOf<Item, Type> = <Item as AsExpression<Type>>::Expression;'\n pub type AsExprOf<Item, Type> = <Item as AsExpression<Type>>::Expression;"}, {"sha": "db9adb4838e3e1e1889e6b69f3f6e7104f89f5f5", "filename": "src/test/rustdoc/trait-impl-items-links-and-anchors.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/72e36d47e830a175815aba937d8a669d72d028fd/src%2Ftest%2Frustdoc%2Ftrait-impl-items-links-and-anchors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72e36d47e830a175815aba937d8a669d72d028fd/src%2Ftest%2Frustdoc%2Ftrait-impl-items-links-and-anchors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ftrait-impl-items-links-and-anchors.rs?ref=72e36d47e830a175815aba937d8a669d72d028fd", "patch": "@@ -6,9 +6,8 @@ pub trait MyTrait {\n     fn defaulted_override(&self) {}\n }\n \n-\n impl MyTrait for String {\n-    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"associatedtype.Assoc-1\"]//a[@class=\"type\"]/@href' #associatedtype.Assoc\n+    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"associatedtype.Assoc-1\"]//a[@class=\"associatedtype\"]/@href' #associatedtype.Assoc\n     // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"associatedtype.Assoc-1\"]//a[@class=\"anchor\"]/@href' #associatedtype.Assoc-1\n     type Assoc = ();\n     // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"associatedconstant.VALUE-1\"]//a[@class=\"constant\"]/@href' #associatedconstant.VALUE\n@@ -23,7 +22,7 @@ impl MyTrait for String {\n }\n \n impl MyTrait for Vec<u8> {\n-    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"associatedtype.Assoc-2\"]//a[@class=\"type\"]/@href' #associatedtype.Assoc\n+    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"associatedtype.Assoc-2\"]//a[@class=\"associatedtype\"]/@href' #associatedtype.Assoc\n     // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"associatedtype.Assoc-2\"]//a[@class=\"anchor\"]/@href' #associatedtype.Assoc-2\n     type Assoc = ();\n     // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"associatedconstant.VALUE-2\"]//a[@class=\"constant\"]/@href' #associatedconstant.VALUE\n@@ -39,7 +38,7 @@ impl MyTrait for Vec<u8> {\n \n impl MyTrait for MyStruct {\n     // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"associatedtype.Assoc-3\"]//a[@class=\"anchor\"]/@href' #associatedtype.Assoc-3\n-    // @has trait_impl_items_links_and_anchors/struct.MyStruct.html '//div[@id=\"associatedtype.Assoc\"]//a[@class=\"type\"]/@href' trait.MyTrait.html#associatedtype.Assoc\n+    // @has trait_impl_items_links_and_anchors/struct.MyStruct.html '//div[@id=\"associatedtype.Assoc\"]//a[@class=\"associatedtype\"]/@href' trait.MyTrait.html#associatedtype.Assoc\n     // @has trait_impl_items_links_and_anchors/struct.MyStruct.html '//div[@id=\"associatedtype.Assoc\"]//a[@class=\"anchor\"]/@href' #associatedtype.Assoc\n     type Assoc = bool;\n     // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"associatedconstant.VALUE-3\"]//a[@class=\"anchor\"]/@href' #associatedconstant.VALUE-3"}]}