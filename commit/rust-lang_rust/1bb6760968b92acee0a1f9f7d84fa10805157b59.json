{"sha": "1bb6760968b92acee0a1f9f7d84fa10805157b59", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiYjY3NjA5NjhiOTJhY2VlMGExZjlmN2Q4NGZhMTA4MDUxNTdiNTk=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-02-29T01:16:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-29T01:16:23Z"}, "message": "Rollup merge of #69563 - andre-richter:fix_no_std_match, r=Mark-Simulacrum\n\nFix no_std detection for target triples\n\nThe current check for wether a target is no_std or not is matching for the string `-none-` in a target triple. This doesn't work for triples that end in `-none`, like `aarch64-unknown-none`.\n\nFix this by matching for `-none` instead.\n\nI checked for all the current target triples containing `none`, and this should not generate any false positives.\n\nThis fixes an issue encountered in https://github.com/rust-lang/rust/pull/68334", "tree": {"sha": "3b148d365795aea32af6175d266b5bd2ba3ae3e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b148d365795aea32af6175d266b5bd2ba3ae3e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1bb6760968b92acee0a1f9f7d84fa10805157b59", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeWbtnCRBK7hj4Ov3rIwAAdHIIAB9vCkOlw57yqA+cYhtbjEWU\nTOzZydL3unEL+TKZy1Od8HoB3DTKORKXgEXShLI8Keb2yAj0HxpaHDnytf7iJUNi\nyYCoVASIOWJ/FBbs6hn8iz5uzMFmCC5uY5uPnEI/U/q8a4ZUione4Zv282RyUXdY\nht3NztzCbBzp54pXZyZQDHACAKp4HGd3TkH9BK/QG8NzglflyELxONqglxsDA9wL\nbf74HPuyEKi6sq9uAscksOKfhindyhH/HFW1AiSkc/KLsyJSuV57jLaWIVnrc/oc\npPixbY+XAVSlMRTN6W11rs/9y8tO+dZmhmdeC4PVwrMjHd5QJ9CBurgKhkGwIlo=\n=s+5s\n-----END PGP SIGNATURE-----\n", "payload": "tree 3b148d365795aea32af6175d266b5bd2ba3ae3e9\nparent c8db7dcc1cd91366dda9bea92e38b5d215ede1f1\nparent 7cf2bfb6578281b568735847549305059a3d6a48\nauthor Dylan DPC <dylan.dpc@gmail.com> 1582938983 +0100\ncommitter GitHub <noreply@github.com> 1582938983 +0100\n\nRollup merge of #69563 - andre-richter:fix_no_std_match, r=Mark-Simulacrum\n\nFix no_std detection for target triples\n\nThe current check for wether a target is no_std or not is matching for the string `-none-` in a target triple. This doesn't work for triples that end in `-none`, like `aarch64-unknown-none`.\n\nFix this by matching for `-none` instead.\n\nI checked for all the current target triples containing `none`, and this should not generate any false positives.\n\nThis fixes an issue encountered in https://github.com/rust-lang/rust/pull/68334\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1bb6760968b92acee0a1f9f7d84fa10805157b59", "html_url": "https://github.com/rust-lang/rust/commit/1bb6760968b92acee0a1f9f7d84fa10805157b59", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1bb6760968b92acee0a1f9f7d84fa10805157b59/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8db7dcc1cd91366dda9bea92e38b5d215ede1f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8db7dcc1cd91366dda9bea92e38b5d215ede1f1", "html_url": "https://github.com/rust-lang/rust/commit/c8db7dcc1cd91366dda9bea92e38b5d215ede1f1"}, {"sha": "7cf2bfb6578281b568735847549305059a3d6a48", "url": "https://api.github.com/repos/rust-lang/rust/commits/7cf2bfb6578281b568735847549305059a3d6a48", "html_url": "https://github.com/rust-lang/rust/commit/7cf2bfb6578281b568735847549305059a3d6a48"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "56164b74f3088c9db77d94cd9b8a585595fecefb", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1bb6760968b92acee0a1f9f7d84fa10805157b59/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1bb6760968b92acee0a1f9f7d84fa10805157b59/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=1bb6760968b92acee0a1f9f7d84fa10805157b59", "patch": "@@ -180,7 +180,7 @@ pub struct Target {\n impl Target {\n     pub fn from_triple(triple: &str) -> Self {\n         let mut target: Self = Default::default();\n-        if triple.contains(\"-none-\") || triple.contains(\"nvptx\") {\n+        if triple.contains(\"-none\") || triple.contains(\"nvptx\") {\n             target.no_std = true;\n         }\n         target"}]}