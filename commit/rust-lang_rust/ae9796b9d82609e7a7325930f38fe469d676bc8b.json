{"sha": "ae9796b9d82609e7a7325930f38fe469d676bc8b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlOTc5NmI5ZDgyNjA5ZTdhNzMyNTkzMGYzOGZlNDY5ZDY3NmJjOGI=", "commit": {"author": {"name": "Samrat Man Singh", "email": "samratmansingh@gmail.com", "date": "2020-04-27T04:30:35Z"}, "committer": {"name": "Samrat Man Singh", "email": "samratmansingh@gmail.com", "date": "2020-04-27T04:30:35Z"}, "message": "Fix shim_arg_size test for 32-bit machines", "tree": {"sha": "f33640ed6d5683ab5cf2e7d221d0c2feedd0130a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f33640ed6d5683ab5cf2e7d221d0c2feedd0130a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae9796b9d82609e7a7325930f38fe469d676bc8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae9796b9d82609e7a7325930f38fe469d676bc8b", "html_url": "https://github.com/rust-lang/rust/commit/ae9796b9d82609e7a7325930f38fe469d676bc8b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae9796b9d82609e7a7325930f38fe469d676bc8b/comments", "author": {"login": "samrat", "id": 480806, "node_id": "MDQ6VXNlcjQ4MDgwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/480806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samrat", "html_url": "https://github.com/samrat", "followers_url": "https://api.github.com/users/samrat/followers", "following_url": "https://api.github.com/users/samrat/following{/other_user}", "gists_url": "https://api.github.com/users/samrat/gists{/gist_id}", "starred_url": "https://api.github.com/users/samrat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samrat/subscriptions", "organizations_url": "https://api.github.com/users/samrat/orgs", "repos_url": "https://api.github.com/users/samrat/repos", "events_url": "https://api.github.com/users/samrat/events{/privacy}", "received_events_url": "https://api.github.com/users/samrat/received_events", "type": "User", "site_admin": false}, "committer": {"login": "samrat", "id": 480806, "node_id": "MDQ6VXNlcjQ4MDgwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/480806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samrat", "html_url": "https://github.com/samrat", "followers_url": "https://api.github.com/users/samrat/followers", "following_url": "https://api.github.com/users/samrat/following{/other_user}", "gists_url": "https://api.github.com/users/samrat/gists{/gist_id}", "starred_url": "https://api.github.com/users/samrat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samrat/subscriptions", "organizations_url": "https://api.github.com/users/samrat/orgs", "repos_url": "https://api.github.com/users/samrat/repos", "events_url": "https://api.github.com/users/samrat/events{/privacy}", "received_events_url": "https://api.github.com/users/samrat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da86c81e39ff27925e7052e1cc612414c7eeb244", "url": "https://api.github.com/repos/rust-lang/rust/commits/da86c81e39ff27925e7052e1cc612414c7eeb244", "html_url": "https://github.com/rust-lang/rust/commit/da86c81e39ff27925e7052e1cc612414c7eeb244"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "a31461fdbf48dd9acb6f88f56d6ed3f25b9edb88", "filename": "tests/compile-fail/shim_arg_size.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ae9796b9d82609e7a7325930f38fe469d676bc8b/tests%2Fcompile-fail%2Fshim_arg_size.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae9796b9d82609e7a7325930f38fe469d676bc8b/tests%2Fcompile-fail%2Fshim_arg_size.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fshim_arg_size.rs?ref=ae9796b9d82609e7a7325930f38fe469d676bc8b", "patch": "@@ -5,7 +5,13 @@ extern crate libc;\n // error-pattern: scalar size mismatch\n fn main() {\n     extern \"C\" {\n+        // Use the wrong type(ie. not the pointer width) for the `size`\n+        // argument.\n+        #[cfg(target_pointer_width=\"64\")]\n         fn malloc(size: u32) -> *mut std::ffi::c_void;\n+\n+        #[cfg(target_pointer_width=\"32\")]\n+        fn malloc(size: u16) -> *mut std::ffi::c_void;\n     }\n \n     unsafe {"}]}