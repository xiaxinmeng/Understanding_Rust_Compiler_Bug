{"sha": "f4261772d8d4e2d4fb7e9dd4685b995a7176e506", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0MjYxNzcyZDhkNGUyZDRmYjdlOWRkNDY4NWI5OTVhNzE3NmU1MDY=", "commit": {"author": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2021-01-27T14:46:43Z"}, "committer": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2021-01-27T14:46:43Z"}, "message": "comments", "tree": {"sha": "f38c3b734dc4ee7e7bd971f318111c7bc1ce162f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f38c3b734dc4ee7e7bd971f318111c7bc1ce162f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f4261772d8d4e2d4fb7e9dd4685b995a7176e506", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f4261772d8d4e2d4fb7e9dd4685b995a7176e506", "html_url": "https://github.com/rust-lang/rust/commit/f4261772d8d4e2d4fb7e9dd4685b995a7176e506", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f4261772d8d4e2d4fb7e9dd4685b995a7176e506/comments", "author": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0625eb7127683e301c37e3d7fb8e3c8a6f66456", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0625eb7127683e301c37e3d7fb8e3c8a6f66456", "html_url": "https://github.com/rust-lang/rust/commit/b0625eb7127683e301c37e3d7fb8e3c8a6f66456"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "b587ed6487e3c6929e4ca2349b53c2632d39737a", "filename": "compiler/rustc_trait_selection/src/traits/const_evaluatable.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f4261772d8d4e2d4fb7e9dd4685b995a7176e506/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4261772d8d4e2d4fb7e9dd4685b995a7176e506/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs?ref=f4261772d8d4e2d4fb7e9dd4685b995a7176e506", "patch": "@@ -612,6 +612,9 @@ pub(super) fn try_unify<'tcx>(\n     mut a: AbstractConst<'tcx>,\n     mut b: AbstractConst<'tcx>,\n ) -> bool {\n+    // We substitute generics repeatedly to allow AbstractConsts to unify where a\n+    // ConstKind::Unevalated could be turned into an AbstractConst that would unify e.g.\n+    // Param(N) should unify with Param(T), substs: [Unevaluated(\"T2\", [Unevaluated(\"T3\", [Param(N)])])]\n     while let Node::Leaf(a_ct) = a.root() {\n         let a_ct = a_ct.subst(tcx, a.substs);\n         match AbstractConst::from_const(tcx, a_ct) {\n@@ -620,7 +623,6 @@ pub(super) fn try_unify<'tcx>(\n             Err(_) => return true,\n         }\n     }\n-\n     while let Node::Leaf(b_ct) = b.root() {\n         let b_ct = b_ct.subst(tcx, b.substs);\n         match AbstractConst::from_const(tcx, b_ct) {"}, {"sha": "0fe84c1cd2a7225cdc2f6d601436fadd8ca58033", "filename": "src/test/ui/const-generics/const_evaluatable_checked/nested-abstract-consts-1.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f4261772d8d4e2d4fb7e9dd4685b995a7176e506/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fnested-abstract-consts-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4261772d8d4e2d4fb7e9dd4685b995a7176e506/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fnested-abstract-consts-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fnested-abstract-consts-1.rs?ref=f4261772d8d4e2d4fb7e9dd4685b995a7176e506", "patch": "@@ -20,3 +20,5 @@ where\n fn main() {\n     assert_eq!(caller::<4>(), 5);\n }\n+\n+// Test that the ``(N1 + 1) + 1`` bound on ``caller`` satisfies the ``M2 + 1`` bound on ``callee``"}, {"sha": "fe5c2237a7603d8970c3e4dfe937e64acbfda126", "filename": "src/test/ui/const-generics/const_evaluatable_checked/nested-abstract-consts-2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f4261772d8d4e2d4fb7e9dd4685b995a7176e506/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fnested-abstract-consts-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4261772d8d4e2d4fb7e9dd4685b995a7176e506/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fnested-abstract-consts-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fnested-abstract-consts-2.rs?ref=f4261772d8d4e2d4fb7e9dd4685b995a7176e506", "patch": "@@ -30,3 +30,5 @@ where\n fn main() {\n     assert_eq!((Generic::<10>).bar(), 11);\n }\n+\n+// Test that the ``ConstU64<{ K + 1 - 1}>`` bound on ``bar``'s impl block satisfies the ``ConstU64<{K - 1}>`` bound on ``foo``'s impl block"}, {"sha": "f686bfd1d2b02892ef09986922aba34e903ceab0", "filename": "src/test/ui/const-generics/const_evaluatable_checked/nested_uneval_unification-1.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f4261772d8d4e2d4fb7e9dd4685b995a7176e506/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fnested_uneval_unification-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4261772d8d4e2d4fb7e9dd4685b995a7176e506/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fnested_uneval_unification-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fnested_uneval_unification-1.rs?ref=f4261772d8d4e2d4fb7e9dd4685b995a7176e506", "patch": "@@ -30,3 +30,5 @@ where\n fn main() {\n     assert_eq!(substs3::<2>().0, [0; 3]);\n }\n+\n+// Test that the ``{ (L - 1) * 2 + 1 }`` bound on ``substs3`` satisfies the ``{ N + 1 }`` bound on ``Substs1``"}, {"sha": "4cdfb107417a6aa37f204f81d74513a34c1827f3", "filename": "src/test/ui/const-generics/const_evaluatable_checked/nested_uneval_unification-2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f4261772d8d4e2d4fb7e9dd4685b995a7176e506/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fnested_uneval_unification-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4261772d8d4e2d4fb7e9dd4685b995a7176e506/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fnested_uneval_unification-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fnested_uneval_unification-2.rs?ref=f4261772d8d4e2d4fb7e9dd4685b995a7176e506", "patch": "@@ -24,3 +24,5 @@ fn substs3<const L: usize>() -> Substs1<{ (L) }> {\n fn main() {\n     assert_eq!(substs3::<2>().0, [0; 2]);\n }\n+\n+// Test that the implicit ``{ (L) }`` bound on ``substs3`` satisfies the ``{ (N) }`` bound on ``Substs1``"}]}