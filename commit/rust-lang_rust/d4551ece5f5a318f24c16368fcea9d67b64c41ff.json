{"sha": "d4551ece5f5a318f24c16368fcea9d67b64c41ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0NTUxZWNlNWY1YTMxOGYyNGMxNjM2OGZjZWE5ZDY3YjY0YzQxZmY=", "commit": {"author": {"name": "Scott A Carr", "email": "s.carr1024@gmail.com", "date": "2016-06-02T22:40:03Z"}, "committer": {"name": "Scott A Carr", "email": "s.carr1024@gmail.com", "date": "2016-06-02T22:40:03Z"}, "message": "remove trailing whitespace", "tree": {"sha": "07179fec20a1a14e47cb145a853f37fc255223aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/07179fec20a1a14e47cb145a853f37fc255223aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4551ece5f5a318f24c16368fcea9d67b64c41ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4551ece5f5a318f24c16368fcea9d67b64c41ff", "html_url": "https://github.com/rust-lang/rust/commit/d4551ece5f5a318f24c16368fcea9d67b64c41ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4551ece5f5a318f24c16368fcea9d67b64c41ff/comments", "author": {"login": "scottcarr", "id": 472477, "node_id": "MDQ6VXNlcjQ3MjQ3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/472477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottcarr", "html_url": "https://github.com/scottcarr", "followers_url": "https://api.github.com/users/scottcarr/followers", "following_url": "https://api.github.com/users/scottcarr/following{/other_user}", "gists_url": "https://api.github.com/users/scottcarr/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottcarr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottcarr/subscriptions", "organizations_url": "https://api.github.com/users/scottcarr/orgs", "repos_url": "https://api.github.com/users/scottcarr/repos", "events_url": "https://api.github.com/users/scottcarr/events{/privacy}", "received_events_url": "https://api.github.com/users/scottcarr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottcarr", "id": 472477, "node_id": "MDQ6VXNlcjQ3MjQ3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/472477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottcarr", "html_url": "https://github.com/scottcarr", "followers_url": "https://api.github.com/users/scottcarr/followers", "following_url": "https://api.github.com/users/scottcarr/following{/other_user}", "gists_url": "https://api.github.com/users/scottcarr/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottcarr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottcarr/subscriptions", "organizations_url": "https://api.github.com/users/scottcarr/orgs", "repos_url": "https://api.github.com/users/scottcarr/repos", "events_url": "https://api.github.com/users/scottcarr/events{/privacy}", "received_events_url": "https://api.github.com/users/scottcarr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79bf586d4b12456817578d75b305b3027e96d44e", "url": "https://api.github.com/repos/rust-lang/rust/commits/79bf586d4b12456817578d75b305b3027e96d44e", "html_url": "https://github.com/rust-lang/rust/commit/79bf586d4b12456817578d75b305b3027e96d44e"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "43ec638eeb088a203e1d53ee2e75c4c49bb1b478", "filename": "src/librustc_mir/build/matches/test.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d4551ece5f5a318f24c16368fcea9d67b64c41ff/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4551ece5f5a318f24c16368fcea9d67b64c41ff/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Ftest.rs?ref=d4551ece5f5a318f24c16368fcea9d67b64c41ff", "patch": "@@ -34,8 +34,8 @@ impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {\n             PatternKind::Variant { ref adt_def, variant_index: _, subpatterns: _ } => {\n                 Test {\n                     span: match_pair.pattern.span,\n-                    kind: TestKind::Switch { \n-                        adt_def: adt_def.clone(), \n+                    kind: TestKind::Switch {\n+                        adt_def: adt_def.clone(),\n                         variants: BitVector::new(self.hir.num_variants(adt_def)),\n                     },\n                 }"}]}