{"sha": "f31e076d98e3b6f457f975a0dcba9c4b0f43fc91", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzMWUwNzZkOThlM2I2ZjQ1N2Y5NzVhMGRjYmE5YzRiMGY0M2ZjOTE=", "commit": {"author": {"name": "marmeladema", "email": "xademax@gmail.com", "date": "2020-05-21T16:34:54Z"}, "committer": {"name": "marmeladema", "email": "xademax@gmail.com", "date": "2020-05-21T16:34:54Z"}, "message": "Replace unecessary calls to `.clone()` by argument binding pattern for `Copy` types", "tree": {"sha": "5834113a3562114680a2c094effd132b8eeadf2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5834113a3562114680a2c094effd132b8eeadf2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f31e076d98e3b6f457f975a0dcba9c4b0f43fc91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f31e076d98e3b6f457f975a0dcba9c4b0f43fc91", "html_url": "https://github.com/rust-lang/rust/commit/f31e076d98e3b6f457f975a0dcba9c4b0f43fc91", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f31e076d98e3b6f457f975a0dcba9c4b0f43fc91/comments", "author": {"login": "marmeladema", "id": 1629419, "node_id": "MDQ6VXNlcjE2Mjk0MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1629419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marmeladema", "html_url": "https://github.com/marmeladema", "followers_url": "https://api.github.com/users/marmeladema/followers", "following_url": "https://api.github.com/users/marmeladema/following{/other_user}", "gists_url": "https://api.github.com/users/marmeladema/gists{/gist_id}", "starred_url": "https://api.github.com/users/marmeladema/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marmeladema/subscriptions", "organizations_url": "https://api.github.com/users/marmeladema/orgs", "repos_url": "https://api.github.com/users/marmeladema/repos", "events_url": "https://api.github.com/users/marmeladema/events{/privacy}", "received_events_url": "https://api.github.com/users/marmeladema/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marmeladema", "id": 1629419, "node_id": "MDQ6VXNlcjE2Mjk0MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1629419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marmeladema", "html_url": "https://github.com/marmeladema", "followers_url": "https://api.github.com/users/marmeladema/followers", "following_url": "https://api.github.com/users/marmeladema/following{/other_user}", "gists_url": "https://api.github.com/users/marmeladema/gists{/gist_id}", "starred_url": "https://api.github.com/users/marmeladema/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marmeladema/subscriptions", "organizations_url": "https://api.github.com/users/marmeladema/orgs", "repos_url": "https://api.github.com/users/marmeladema/repos", "events_url": "https://api.github.com/users/marmeladema/events{/privacy}", "received_events_url": "https://api.github.com/users/marmeladema/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c4cb464912b82f08e4144b88dd4a0dc1a671a7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c4cb464912b82f08e4144b88dd4a0dc1a671a7e", "html_url": "https://github.com/rust-lang/rust/commit/4c4cb464912b82f08e4144b88dd4a0dc1a671a7e"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "9699aff69c0133adbb7a123042660acf41cd2940", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f31e076d98e3b6f457f975a0dcba9c4b0f43fc91/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f31e076d98e3b6f457f975a0dcba9c4b0f43fc91/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=f31e076d98e3b6f457f975a0dcba9c4b0f43fc91", "patch": "@@ -1342,30 +1342,30 @@ impl<'a> Resolver<'a> {\n             extern_crate_map: self\n                 .extern_crate_map\n                 .iter()\n-                .map(|(k, v)| (self.definitions.local_def_id(k.clone()).to_def_id(), v.clone()))\n+                .map(|(&k, &v)| (self.definitions.local_def_id(k).to_def_id(), v))\n                 .collect(),\n             export_map: self\n                 .export_map\n                 .iter()\n-                .map(|(k, v)| {\n+                .map(|(&k, v)| {\n                     (\n-                        k.clone(),\n+                        k,\n                         v.iter()\n-                            .map(|e| e.clone().map_id(|id| self.definitions.node_id_to_hir_id(id)))\n+                            .map(|e| e.map_id(|id| self.definitions.node_id_to_hir_id(id)))\n                             .collect(),\n                     )\n                 })\n                 .collect(),\n             trait_map: self\n                 .trait_map\n                 .iter()\n-                .map(|(k, v)| {\n+                .map(|(&k, v)| {\n                     (\n-                        self.definitions.node_id_to_hir_id(k.clone()),\n+                        self.definitions.node_id_to_hir_id(k),\n                         v.iter()\n+                            .cloned()\n                             .map(|tc| {\n-                                tc.clone()\n-                                    .map_import_ids(|id| self.definitions.node_id_to_hir_id(id))\n+                                tc.map_import_ids(|id| self.definitions.node_id_to_hir_id(id))\n                             })\n                             .collect(),\n                     )\n@@ -1374,17 +1374,17 @@ impl<'a> Resolver<'a> {\n             glob_map: self\n                 .glob_map\n                 .iter()\n-                .map(|(id, names)| (self.definitions.local_def_id(id.clone()), names.clone()))\n+                .map(|(&id, names)| (self.definitions.local_def_id(id), names.clone()))\n                 .collect(),\n             maybe_unused_trait_imports: self\n                 .maybe_unused_trait_imports\n                 .iter()\n-                .map(|id| self.definitions.local_def_id(id.clone()))\n+                .map(|&id| self.definitions.local_def_id(id))\n                 .collect(),\n             maybe_unused_extern_crates: self\n                 .maybe_unused_extern_crates\n                 .iter()\n-                .map(|(id, sp)| (self.definitions.local_def_id(id.clone()).to_def_id(), sp.clone()))\n+                .map(|&(id, sp)| (self.definitions.local_def_id(id).to_def_id(), sp))\n                 .collect(),\n             extern_prelude: self\n                 .extern_prelude"}]}