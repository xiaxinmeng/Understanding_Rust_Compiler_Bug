{"sha": "dddeda7f7d14ef410bf938e3197587cc8d5ac7da", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkZGVkYTdmN2QxNGVmNDEwYmY5MzhlMzE5NzU4N2NjOGQ1YWM3ZGE=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-04-07T23:57:14Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-04-07T23:57:14Z"}, "message": "Use getrandom() syscall number from libc", "tree": {"sha": "3d57ef035db92758d44c7fb6fd30de076f7fd9dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d57ef035db92758d44c7fb6fd30de076f7fd9dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dddeda7f7d14ef410bf938e3197587cc8d5ac7da", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAlyqjmQACgkQtAh+UQ6Y\nsWSeVQ/8Crt24sLFmNoQQrRb9gKtbPUNFIWANVRxXB2qSYEFVhQX7BWV4naigsLU\nS0axZuIg/VmCh76amiABDqPjlGBtB7XsY8Jkm1+KVL9Ir/tmwqU0J6byxJFDRk1P\nXaBmvydmVAGP24Suz6z52abcAIptTvBLjmv4br2bK+KdoxyIUYRMvUaWRyyi0iCM\nae+RG/3+cWKIwNrXWH7xDhm890Z3tG7leq7R1yIHMaWY5DdWGhzhijNhImu6U429\ndzlciAs1tpynhVtaPX2R1qUQPilzHRE73xKl3AdQ/Gb5Ql97+NhqF20o+DknTglK\nZmlGGx4Lb4PinMSMar9nd9HxmlhfdJgk5keuyJTbY2SpeD1gOEVD93Hz4Kurr4R/\nlyPmeXggZKfuig/Mj+Sjv4o4I1gu1CxYC6UbGLy2H3lOeGdgbWId431SjR7ySvPd\ncLhayvZ/Ea0bvoFGB9axj/i3iSSDZNaVjG5FuEBwhVxrjyGlBu7mKkHrHfYtWC5D\nPsk1u8VZbQ5GvpQ1uHGvY/H8YoHu2Qvw9y91kfciyHsFwr5XdgWMgEjhtXm9e3bA\nIBPd3tR6CyDLvWdXK+2C3PO0ttvfjTvT8YbFCI0ZYjT9g/M+ulQLV/fZyoOMGRqw\nPtoF2xD1CLhqubdvGNRE4bcEjtitBrTnpQJTmpXJqHxrFFaRAWI=\n=XL+H\n-----END PGP SIGNATURE-----", "payload": "tree 3d57ef035db92758d44c7fb6fd30de076f7fd9dd\nparent 312f938e791178eccca51ee22126d1ef06f50f9b\nauthor Aaron Hill <aa1ronham@gmail.com> 1554681434 -0400\ncommitter Aaron Hill <aa1ronham@gmail.com> 1554681434 -0400\n\nUse getrandom() syscall number from libc\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dddeda7f7d14ef410bf938e3197587cc8d5ac7da", "html_url": "https://github.com/rust-lang/rust/commit/dddeda7f7d14ef410bf938e3197587cc8d5ac7da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dddeda7f7d14ef410bf938e3197587cc8d5ac7da/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "312f938e791178eccca51ee22126d1ef06f50f9b", "url": "https://api.github.com/repos/rust-lang/rust/commits/312f938e791178eccca51ee22126d1ef06f50f9b", "html_url": "https://github.com/rust-lang/rust/commit/312f938e791178eccca51ee22126d1ef06f50f9b"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "b0e278c1b54c00f72e4efe822b3795d100555b45", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dddeda7f7d14ef410bf938e3197587cc8d5ac7da/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/dddeda7f7d14ef410bf938e3197587cc8d5ac7da/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=dddeda7f7d14ef410bf938e3197587cc8d5ac7da", "patch": "@@ -46,6 +46,7 @@ shell-escape = \"0.1.4\"\n rustc-workspace-hack = \"1.0.0\"\n hex = \"0.3.2\"\n rand = \"0.6.5\"\n+libc = \"0.2.51\"\n \n [build-dependencies]\n vergen = \"3\""}, {"sha": "74352302f36e184d13fe0d682b9ad48234bece0d", "filename": "src/fn_call.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dddeda7f7d14ef410bf938e3197587cc8d5ac7da/src%2Ffn_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dddeda7f7d14ef410bf938e3197587cc8d5ac7da/src%2Ffn_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffn_call.rs?ref=dddeda7f7d14ef410bf938e3197587cc8d5ac7da", "patch": "@@ -216,8 +216,8 @@ pub trait EvalContextExt<'a, 'mir, 'tcx: 'a + 'mir>: crate::MiriEvalContextExt<'\n                 //\n                 // `libc::syscall(NR_GETRANDOM, buf.as_mut_ptr(), buf.len(), GRND_NONBLOCK)`\n                 // is called if a `HashMap` is created the regular way.\n-                match this.read_scalar(args[0])?.to_usize(this)? {\n-                    318 | 511 => {\n+                match this.read_scalar(args[0])?.to_usize(this)? as i64 {\n+                    libc::SYS_getrandom => {\n                         match this.machine.rng.as_ref() {\n                             Some(rng) => {\n                                 let ptr = this.read_scalar(args[1])?.to_ptr()?;"}]}