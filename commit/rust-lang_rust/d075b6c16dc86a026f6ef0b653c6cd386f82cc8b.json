{"sha": "d075b6c16dc86a026f6ef0b653c6cd386f82cc8b", "node_id": "C_kwDOAAsO6NoAKGQwNzViNmMxNmRjODZhMDI2ZjZlZjBiNjUzYzZjZDM4NmY4MmNjOGI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-05-12T05:11:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-12T05:11:12Z"}, "message": "Rollup merge of #111393 - klensy:win-0.48, r=oli-obk\n\nbump windows crate 0.46 -> 0.48\n\nThis drops duped version of crate(0.46), reduces `rustc_driver.dll` ~800kb and reduces exported functions number from 26k to 22k.\n\nAlso while here, added `tidy-alphabetical` sorting to lists in tidy allowed lists.", "tree": {"sha": "0fb2bfdc0e649de042ca5af1bb401d80a336db48", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0fb2bfdc0e649de042ca5af1bb401d80a336db48"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d075b6c16dc86a026f6ef0b653c6cd386f82cc8b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkXcpwCRBK7hj4Ov3rIwAAzxMIAI7QA1cF0uA2sLjUKWNCZRil\n7dQWxeaEBFrcDPec/jL5yI2upKSpecfn7+2dTizu4nnNqbUppKpLHVYwwiN29BVB\nQ4sOcpoPSCVc9fKkydegSMTdh/3jMaIpm1l/HYQyFKMGqK/chUi7QpQOJ3aUWwbA\nsBE2Q7Gzh6KaarwJGdC2CmYj7n4mlJAwvoRyhUE1FGvT57TRMhz4Pq6KSV0sMyYr\nKskE6U4erFJivVxYpix4XBzqPx+RPQDoG7xVmwRc80J/I1y6wY/0XiPBAnm8kggB\nwzteh/XW3tXhoUvVhDU7qFyxZNAudHUnEd34KdMTUjhV6xVPARiJrESI6lntdM4=\n=fjfV\n-----END PGP SIGNATURE-----\n", "payload": "tree 0fb2bfdc0e649de042ca5af1bb401d80a336db48\nparent ea332b593780509a114ffe03c4a772f5eb54c5c7\nparent 4f12412a7d6afe81a14a2b49731c09dca25f1e37\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1683868272 +0200\ncommitter GitHub <noreply@github.com> 1683868272 +0200\n\nRollup merge of #111393 - klensy:win-0.48, r=oli-obk\n\nbump windows crate 0.46 -> 0.48\n\nThis drops duped version of crate(0.46), reduces `rustc_driver.dll` ~800kb and reduces exported functions number from 26k to 22k.\n\nAlso while here, added `tidy-alphabetical` sorting to lists in tidy allowed lists.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d075b6c16dc86a026f6ef0b653c6cd386f82cc8b", "html_url": "https://github.com/rust-lang/rust/commit/d075b6c16dc86a026f6ef0b653c6cd386f82cc8b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d075b6c16dc86a026f6ef0b653c6cd386f82cc8b/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea332b593780509a114ffe03c4a772f5eb54c5c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea332b593780509a114ffe03c4a772f5eb54c5c7", "html_url": "https://github.com/rust-lang/rust/commit/ea332b593780509a114ffe03c4a772f5eb54c5c7"}, {"sha": "4f12412a7d6afe81a14a2b49731c09dca25f1e37", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f12412a7d6afe81a14a2b49731c09dca25f1e37", "html_url": "https://github.com/rust-lang/rust/commit/4f12412a7d6afe81a14a2b49731c09dca25f1e37"}], "stats": {"total": 128, "additions": 69, "deletions": 59}, "files": [{"sha": "bb37fee98e4f8222d979294ef67fe94c8f7dfb90", "filename": "Cargo.lock", "status": "modified", "additions": 7, "deletions": 16, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/d075b6c16dc86a026f6ef0b653c6cd386f82cc8b/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/d075b6c16dc86a026f6ef0b653c6cd386f82cc8b/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=d075b6c16dc86a026f6ef0b653c6cd386f82cc8b", "patch": "@@ -741,7 +741,7 @@ dependencies = [\n  \"tracing-subscriber\",\n  \"unified-diff\",\n  \"walkdir\",\n- \"windows 0.46.0\",\n+ \"windows\",\n ]\n \n [[package]]\n@@ -1647,7 +1647,7 @@ dependencies = [\n  \"iana-time-zone-haiku\",\n  \"js-sys\",\n  \"wasm-bindgen\",\n- \"windows 0.48.0\",\n+ \"windows\",\n ]\n \n [[package]]\n@@ -3259,7 +3259,7 @@ dependencies = [\n  \"tempfile\",\n  \"thorin-dwp\",\n  \"tracing\",\n- \"windows 0.46.0\",\n+ \"windows\",\n ]\n \n [[package]]\n@@ -3315,7 +3315,7 @@ dependencies = [\n  \"tempfile\",\n  \"thin-vec\",\n  \"tracing\",\n- \"windows 0.46.0\",\n+ \"windows\",\n ]\n \n [[package]]\n@@ -3376,7 +3376,7 @@ dependencies = [\n  \"rustc_ty_utils\",\n  \"serde_json\",\n  \"tracing\",\n- \"windows 0.46.0\",\n+ \"windows\",\n ]\n \n [[package]]\n@@ -3426,7 +3426,7 @@ dependencies = [\n  \"termize\",\n  \"tracing\",\n  \"unicode-width\",\n- \"windows 0.46.0\",\n+ \"windows\",\n ]\n \n [[package]]\n@@ -4096,7 +4096,7 @@ dependencies = [\n  \"smallvec\",\n  \"termize\",\n  \"tracing\",\n- \"windows 0.46.0\",\n+ \"windows\",\n ]\n \n [[package]]\n@@ -5498,15 +5498,6 @@ version = \"0.4.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\"\n \n-[[package]]\n-name = \"windows\"\n-version = \"0.46.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"cdacb41e6a96a052c6cb63a144f24900236121c6f63f4f8219fef5977ecb0c25\"\n-dependencies = [\n- \"windows-targets 0.42.2\",\n-]\n-\n [[package]]\n name = \"windows\"\n version = \"0.48.0\""}, {"sha": "02be88df103a52405369c32f515dc0c6f9caf7de", "filename": "compiler/rustc_codegen_ssa/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d075b6c16dc86a026f6ef0b653c6cd386f82cc8b/compiler%2Frustc_codegen_ssa%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d075b6c16dc86a026f6ef0b653c6cd386f82cc8b/compiler%2Frustc_codegen_ssa%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2FCargo.toml?ref=d075b6c16dc86a026f6ef0b653c6cd386f82cc8b", "patch": "@@ -51,5 +51,5 @@ default-features = false\n features = [\"read_core\", \"elf\", \"macho\", \"pe\", \"unaligned\", \"archive\", \"write\"]\n \n [target.'cfg(windows)'.dependencies.windows]\n-version = \"0.46.0\"\n+version = \"0.48.0\"\n features = [\"Win32_Globalization\"]"}, {"sha": "c815bb2d1974920dcb4c124c087f57405da07254", "filename": "compiler/rustc_data_structures/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d075b6c16dc86a026f6ef0b653c6cd386f82cc8b/compiler%2Frustc_data_structures%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d075b6c16dc86a026f6ef0b653c6cd386f82cc8b/compiler%2Frustc_data_structures%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2FCargo.toml?ref=d075b6c16dc86a026f6ef0b653c6cd386f82cc8b", "patch": "@@ -37,7 +37,7 @@ itertools = \"0.10.1\"\n version = \"0.11\"\n \n [target.'cfg(windows)'.dependencies.windows]\n-version = \"0.46.0\"\n+version = \"0.48.0\"\n features = [\n     \"Win32_Foundation\",\n     \"Win32_Storage_FileSystem\","}, {"sha": "3c76c2b79911a05dc209a4564179eff0bb4454b4", "filename": "compiler/rustc_data_structures/src/profiling.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d075b6c16dc86a026f6ef0b653c6cd386f82cc8b/compiler%2Frustc_data_structures%2Fsrc%2Fprofiling.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d075b6c16dc86a026f6ef0b653c6cd386f82cc8b/compiler%2Frustc_data_structures%2Fsrc%2Fprofiling.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fprofiling.rs?ref=d075b6c16dc86a026f6ef0b653c6cd386f82cc8b", "patch": "@@ -865,14 +865,16 @@ cfg_if! {\n             use std::mem;\n \n             use windows::{\n-                Win32::System::ProcessStatus::{K32GetProcessMemoryInfo, PROCESS_MEMORY_COUNTERS},\n+                // FIXME: change back to K32GetProcessMemoryInfo when windows crate\n+                // updated to 0.49.0+ to drop dependency on psapi.dll\n+                Win32::System::ProcessStatus::{GetProcessMemoryInfo, PROCESS_MEMORY_COUNTERS},\n                 Win32::System::Threading::GetCurrentProcess,\n             };\n \n             let mut pmc = PROCESS_MEMORY_COUNTERS::default();\n             let pmc_size = mem::size_of_val(&pmc);\n             unsafe {\n-                K32GetProcessMemoryInfo(\n+                GetProcessMemoryInfo(\n                     GetCurrentProcess(),\n                     &mut pmc,\n                     pmc_size as u32,"}, {"sha": "67352c55c9019713723d89508145c7ea8b48469c", "filename": "compiler/rustc_driver_impl/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d075b6c16dc86a026f6ef0b653c6cd386f82cc8b/compiler%2Frustc_driver_impl%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d075b6c16dc86a026f6ef0b653c6cd386f82cc8b/compiler%2Frustc_driver_impl%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver_impl%2FCargo.toml?ref=d075b6c16dc86a026f6ef0b653c6cd386f82cc8b", "patch": "@@ -57,7 +57,7 @@ rustc_mir_transform = { path = \"../rustc_mir_transform\" }\n libc = \"0.2\"\n \n [target.'cfg(windows)'.dependencies.windows]\n-version = \"0.46.0\"\n+version = \"0.48.0\"\n features = [\n     \"Win32_System_Diagnostics_Debug\",\n ]"}, {"sha": "bd3033fcb3e868412c5016a5eef7ede3d134772d", "filename": "compiler/rustc_errors/Cargo.toml", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d075b6c16dc86a026f6ef0b653c6cd386f82cc8b/compiler%2Frustc_errors%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d075b6c16dc86a026f6ef0b653c6cd386f82cc8b/compiler%2Frustc_errors%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2FCargo.toml?ref=d075b6c16dc86a026f6ef0b653c6cd386f82cc8b", "patch": "@@ -27,12 +27,11 @@ serde = { version = \"1.0.125\", features = [ \"derive\" ] }\n serde_json = \"1.0.59\"\n \n [target.'cfg(windows)'.dependencies.windows]\n-version = \"0.46.0\"\n+version = \"0.48.0\"\n features = [\n     \"Win32_Foundation\",\n     \"Win32_Security\",\n     \"Win32_System_Threading\",\n-    \"Win32_System_WindowsProgramming\",\n ]\n \n [features]"}, {"sha": "bd5cf49b56bd7dc0d9f7dba5bbc3dfd1bad2ab69", "filename": "compiler/rustc_errors/src/lock.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d075b6c16dc86a026f6ef0b653c6cd386f82cc8b/compiler%2Frustc_errors%2Fsrc%2Flock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d075b6c16dc86a026f6ef0b653c6cd386f82cc8b/compiler%2Frustc_errors%2Fsrc%2Flock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Flock.rs?ref=d075b6c16dc86a026f6ef0b653c6cd386f82cc8b", "patch": "@@ -19,8 +19,7 @@ pub fn acquire_global_lock(name: &str) -> Box<dyn Any> {\n     use windows::{\n         core::PCSTR,\n         Win32::Foundation::{CloseHandle, HANDLE, WAIT_ABANDONED, WAIT_OBJECT_0},\n-        Win32::System::Threading::{CreateMutexA, ReleaseMutex, WaitForSingleObject},\n-        Win32::System::WindowsProgramming::INFINITE,\n+        Win32::System::Threading::{CreateMutexA, ReleaseMutex, WaitForSingleObject, INFINITE},\n     };\n \n     struct Handle(HANDLE);"}, {"sha": "3af83aaaaa8a22a9947f66d334b9e492fa07c1ed", "filename": "compiler/rustc_session/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d075b6c16dc86a026f6ef0b653c6cd386f82cc8b/compiler%2Frustc_session%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d075b6c16dc86a026f6ef0b653c6cd386f82cc8b/compiler%2Frustc_session%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2FCargo.toml?ref=d075b6c16dc86a026f6ef0b653c6cd386f82cc8b", "patch": "@@ -25,7 +25,7 @@ termize = \"0.1.1\"\n libc = \"0.2\"\n \n [target.'cfg(windows)'.dependencies.windows]\n-version = \"0.46.0\"\n+version = \"0.48.0\"\n features = [\n     \"Win32_Foundation\",\n     \"Win32_System_LibraryLoader\","}, {"sha": "3988416d0c795c24a3bc0ca0445cd68fc9c61459", "filename": "compiler/rustc_session/src/filesearch.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d075b6c16dc86a026f6ef0b653c6cd386f82cc8b/compiler%2Frustc_session%2Fsrc%2Ffilesearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d075b6c16dc86a026f6ef0b653c6cd386f82cc8b/compiler%2Frustc_session%2Fsrc%2Ffilesearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Ffilesearch.rs?ref=d075b6c16dc86a026f6ef0b653c6cd386f82cc8b", "patch": "@@ -135,13 +135,13 @@ fn current_dll_path() -> Result<PathBuf, String> {\n \n     use windows::{\n         core::PCWSTR,\n-        Win32::Foundation::HINSTANCE,\n+        Win32::Foundation::HMODULE,\n         Win32::System::LibraryLoader::{\n             GetModuleFileNameW, GetModuleHandleExW, GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS,\n         },\n     };\n \n-    let mut module = HINSTANCE::default();\n+    let mut module = HMODULE::default();\n     unsafe {\n         GetModuleHandleExW(\n             GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS,"}, {"sha": "0d42504c7f4ca1ccbe79d46ac8916c4deeaf24e7", "filename": "src/tools/compiletest/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d075b6c16dc86a026f6ef0b653c6cd386f82cc8b/src%2Ftools%2Fcompiletest%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d075b6c16dc86a026f6ef0b653c6cd386f82cc8b/src%2Ftools%2Fcompiletest%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2FCargo.toml?ref=d075b6c16dc86a026f6ef0b653c6cd386f82cc8b", "patch": "@@ -28,7 +28,7 @@ libc = \"0.2\"\n miow = \"0.5\"\n \n [target.'cfg(windows)'.dependencies.windows]\n-version = \"0.46.0\"\n+version = \"0.48.0\"\n features = [\n     \"Win32_Foundation\",\n     \"Win32_System_Diagnostics_Debug\","}, {"sha": "afa6bce943f34b249d7abff91439ef0701beaff5", "filename": "src/tools/tidy/src/deps.rs", "status": "modified", "additions": 49, "deletions": 30, "changes": 79, "blob_url": "https://github.com/rust-lang/rust/blob/d075b6c16dc86a026f6ef0b653c6cd386f82cc8b/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d075b6c16dc86a026f6ef0b653c6cd386f82cc8b/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs?ref=d075b6c16dc86a026f6ef0b653c6cd386f82cc8b", "patch": "@@ -6,47 +6,53 @@ use std::path::Path;\n \n /// These are licenses that are allowed for all crates, including the runtime,\n /// rustc, tools, etc.\n+#[rustfmt::skip]\n const LICENSES: &[&str] = &[\n-    \"MIT/Apache-2.0\",\n-    \"MIT / Apache-2.0\",\n-    \"Apache-2.0/MIT\",\n+    // tidy-alphabetical-start\n+    \"(MIT OR Apache-2.0) AND Unicode-DFS-2016\",            // unicode_ident\n+    \"0BSD OR MIT OR Apache-2.0\",                           // adler license\n+    \"0BSD\",\n     \"Apache-2.0 / MIT\",\n-    \"MIT OR Apache-2.0\",\n     \"Apache-2.0 OR MIT\",\n     \"Apache-2.0 WITH LLVM-exception OR Apache-2.0 OR MIT\", // wasi license\n-    \"MIT\",\n+    \"Apache-2.0/MIT\",\n     \"ISC\",\n-    \"Unlicense/MIT\",\n+    \"MIT / Apache-2.0\",\n+    \"MIT OR Apache-2.0 OR Zlib\",                           // tinyvec_macros\n+    \"MIT OR Apache-2.0\",\n+    \"MIT OR Zlib OR Apache-2.0\",                           // miniz_oxide\n+    \"MIT\",\n+    \"MIT/Apache-2.0\",\n+    \"Unicode-DFS-2016\",                                    // tinystr and icu4x\n     \"Unlicense OR MIT\",\n-    \"0BSD\",\n-    \"0BSD OR MIT OR Apache-2.0\",                // adler license\n-    \"Zlib OR Apache-2.0 OR MIT\",                // tinyvec\n-    \"MIT OR Apache-2.0 OR Zlib\",                // tinyvec_macros\n-    \"MIT OR Zlib OR Apache-2.0\",                // miniz_oxide\n-    \"(MIT OR Apache-2.0) AND Unicode-DFS-2016\", // unicode_ident\n-    \"Unicode-DFS-2016\",                         // tinystr and icu4x\n+    \"Unlicense/MIT\",\n+    \"Zlib OR Apache-2.0 OR MIT\",                           // tinyvec\n+    // tidy-alphabetical-end\n ];\n \n /// These are exceptions to Rust's permissive licensing policy, and\n /// should be considered bugs. Exceptions are only allowed in Rust\n /// tooling. It is _crucial_ that no exception crates be dependencies\n /// of the Rust runtime (std/test).\n+#[rustfmt::skip]\n const EXCEPTIONS: &[(&str, &str)] = &[\n+    // tidy-alphabetical-start\n     (\"ar_archive_writer\", \"Apache-2.0 WITH LLVM-exception\"), // rustc\n-    (\"mdbook\", \"MPL-2.0\"),                                   // mdbook\n+    (\"codespan-reporting\", \"Apache-2.0\"),                    // cxx via iana-time-zone-haiku via time, only on haiku\n     (\"colored\", \"MPL-2.0\"),                                  // rustfmt\n+    (\"dissimilar\", \"Apache-2.0\"),                            // rustdoc, rustc_lexer (few tests) via expect-test, (dev deps)\n+    (\"fluent-langneg\", \"Apache-2.0\"),                        // rustc (fluent translations)\n+    (\"fortanix-sgx-abi\", \"MPL-2.0\"),                         // libstd but only for `sgx` target. FIXME: this dependency violates the documentation comment above.\n+    (\"instant\", \"BSD-3-Clause\"),                             // rustc_driver/tracing-subscriber/parking_lot\n+    (\"mdbook\", \"MPL-2.0\"),                                   // mdbook\n     (\"ryu\", \"Apache-2.0 OR BSL-1.0\"),                        // cargo/... (because of serde)\n-    (\"codespan-reporting\", \"Apache-2.0\"), // cxx via iana-time-zone-haiku via time, only on haiku\n-    (\"instant\", \"BSD-3-Clause\"),          // rustc_driver/tracing-subscriber/parking_lot\n-    (\"snap\", \"BSD-3-Clause\"),             // rustc\n-    (\"fluent-langneg\", \"Apache-2.0\"),     // rustc (fluent translations)\n-    (\"self_cell\", \"Apache-2.0\"),          // rustc (fluent translations)\n-    // FIXME: this dependency violates the documentation comment above:\n-    (\"fortanix-sgx-abi\", \"MPL-2.0\"), // libstd but only for `sgx` target\n-    (\"dissimilar\", \"Apache-2.0\"),    // rustdoc, rustc_lexer (few tests) via expect-test, (dev deps)\n+    (\"self_cell\", \"Apache-2.0\"),                             // rustc (fluent translations)\n+    (\"snap\", \"BSD-3-Clause\"),                                // rustc\n+    // tidy-alphabetical-end\n ];\n \n const EXCEPTIONS_CARGO: &[(&str, &str)] = &[\n+    // tidy-alphabetical-start\n     (\"bitmaps\", \"MPL-2.0+\"),\n     (\"bytesize\", \"Apache-2.0\"),\n     (\"dunce\", \"CC0-1.0 OR MIT-0\"),\n@@ -62,9 +68,11 @@ const EXCEPTIONS_CARGO: &[(&str, &str)] = &[\n     (\"sized-chunks\", \"MPL-2.0+\"),\n     (\"subtle\", \"BSD-3-Clause\"),\n     (\"unicode-bom\", \"Apache-2.0\"),\n+    // tidy-alphabetical-end\n ];\n \n const EXCEPTIONS_CRANELIFT: &[(&str, &str)] = &[\n+    // tidy-alphabetical-start\n     (\"cranelift-bforest\", \"Apache-2.0 WITH LLVM-exception\"),\n     (\"cranelift-codegen\", \"Apache-2.0 WITH LLVM-exception\"),\n     (\"cranelift-codegen-meta\", \"Apache-2.0 WITH LLVM-exception\"),\n@@ -80,6 +88,7 @@ const EXCEPTIONS_CRANELIFT: &[(&str, &str)] = &[\n     (\"regalloc2\", \"Apache-2.0 WITH LLVM-exception\"),\n     (\"target-lexicon\", \"Apache-2.0 WITH LLVM-exception\"),\n     (\"wasmtime-jit-icache-coherence\", \"Apache-2.0 WITH LLVM-exception\"),\n+    // tidy-alphabetical-end\n ];\n \n const EXCEPTIONS_BOOTSTRAP: &[(&str, &str)] = &[\n@@ -95,6 +104,7 @@ const RUNTIME_CRATES: &[&str] = &[\"std\", \"core\", \"alloc\", \"test\", \"panic_abort\",\n /// This list is here to provide a speed-bump to adding a new dependency to\n /// rustc. Please check with the compiler team before adding an entry.\n const PERMITTED_RUSTC_DEPENDENCIES: &[&str] = &[\n+    // tidy-alphabetical-start\n     \"addr2line\",\n     \"adler\",\n     \"ahash\",\n@@ -113,8 +123,8 @@ const PERMITTED_RUSTC_DEPENDENCIES: &[&str] = &[\n     \"chalk-engine\",\n     \"chalk-ir\",\n     \"chalk-solve\",\n-    \"convert_case\", // dependency of derive_more\n     \"compiler_builtins\",\n+    \"convert_case\", // dependency of derive_more\n     \"cpufeatures\",\n     \"crc32fast\",\n     \"crossbeam-channel\",\n@@ -187,8 +197,8 @@ const PERMITTED_RUSTC_DEPENDENCIES: &[&str] = &[\n     \"ppv-lite86\",\n     \"proc-macro-hack\",\n     \"proc-macro2\",\n-    \"pulldown-cmark\",\n     \"psm\",\n+    \"pulldown-cmark\",\n     \"punycode\",\n     \"quote\",\n     \"rand\",\n@@ -227,14 +237,14 @@ const PERMITTED_RUSTC_DEPENDENCIES: &[&str] = &[\n     \"tempfile\",\n     \"termcolor\",\n     \"termize\",\n+    \"thin-vec\",\n     \"thiserror\",\n     \"thiserror-impl\",\n     \"thorin-dwp\",\n     \"thread_local\",\n     \"tinystr\",\n     \"tinyvec\",\n     \"tinyvec_macros\",\n-    \"thin-vec\",\n     \"tracing\",\n     \"tracing-attributes\",\n     \"tracing-core\",\n@@ -263,29 +273,37 @@ const PERMITTED_RUSTC_DEPENDENCIES: &[&str] = &[\n     \"valuable\",\n     \"version_check\",\n     \"wasi\",\n-    \"windows\",\n     \"winapi\",\n     \"winapi-i686-pc-windows-gnu\",\n     \"winapi-util\",\n     \"winapi-x86_64-pc-windows-gnu\",\n+    \"windows\",\n+    \"windows-targets\",\n+    \"windows_aarch64_gnullvm\",\n+    \"windows_aarch64_msvc\",\n+    \"windows_i686_gnu\",\n+    \"windows_i686_msvc\",\n+    \"windows_x86_64_gnu\",\n+    \"windows_x86_64_gnullvm\",\n+    \"windows_x86_64_msvc\",\n     \"writeable\",\n-    // this is a false-positive: it's only used by rustfmt, but because it's enabled through a\n-    // feature, tidy thinks it's used by rustc as well.\n-    \"yansi-term\",\n+    \"yansi-term\", // this is a false-positive: it's only used by rustfmt, but because it's enabled through a feature, tidy thinks it's used by rustc as well.\n     \"yoke\",\n     \"yoke-derive\",\n     \"zerofrom\",\n     \"zerofrom-derive\",\n     \"zerovec\",\n     \"zerovec-derive\",\n+    // tidy-alphabetical-end\n ];\n \n const PERMITTED_CRANELIFT_DEPENDENCIES: &[&str] = &[\n+    // tidy-alphabetical-start\n     \"ahash\",\n     \"anyhow\",\n     \"autocfg\",\n-    \"bumpalo\",\n     \"bitflags\",\n+    \"bumpalo\",\n     \"byteorder\",\n     \"cfg-if\",\n     \"cranelift-bforest\",\n@@ -324,6 +342,7 @@ const PERMITTED_CRANELIFT_DEPENDENCIES: &[&str] = &[\n     \"winapi-i686-pc-windows-gnu\",\n     \"winapi-x86_64-pc-windows-gnu\",\n     \"windows-sys\",\n+    // tidy-alphabetical-end\n ];\n \n /// Dependency checks."}]}