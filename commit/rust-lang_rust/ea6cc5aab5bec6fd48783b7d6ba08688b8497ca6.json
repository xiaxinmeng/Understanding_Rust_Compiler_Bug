{"sha": "ea6cc5aab5bec6fd48783b7d6ba08688b8497ca6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhNmNjNWFhYjViZWM2ZmQ0ODc4M2I3ZDZiYTA4Njg4Yjg0OTdjYTY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-12-18T15:22:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-18T15:22:06Z"}, "message": "Rollup merge of #80121 - LeSeulArtichaut:if-let-experimental, r=davidtwco\n\nChange the message for `if_let_guard` feature gate\n\n`if-let` guards are now implemented by #79051 \ud83c\udf89\nThanks ``@camelid`` for pointing this out \ud83d\ude42", "tree": {"sha": "518da2e84d9c3d2d37f907a0c57e9ccff7f490e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/518da2e84d9c3d2d37f907a0c57e9ccff7f490e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea6cc5aab5bec6fd48783b7d6ba08688b8497ca6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf3MkeCRBK7hj4Ov3rIwAAdHIIACqf26JDEdcJPBj5/t519ltK\nbGUHWyz/Hprzcf7UDE6Npsfk7clioRpRuHQy86VK8FFMmcGIGZOpQmELw1JK72GL\n2jcY4zOxcbRvHkDSbKqafZmrgEy8mQrt36OW2/mbyITODGIS7wCJyHglsI7rM32m\ne4cm4OoRu0KHFmdNTq45b3ToS/U+nzTm5hUuDxPQeIXoOsVaCA/USK5oClAca30E\nZhrFrVVwwvLt5ErVAc5wOjiYu2qZIYP3dB/xBZGEQqebHBSmZGLeyjUkXNcDkdFK\nftmBUDZT5CN27IYhWeomsTvgX5QpoU6S1fdONYE2GLDLRNmnxdTkeOg9DYXknQM=\n=xIRd\n-----END PGP SIGNATURE-----\n", "payload": "tree 518da2e84d9c3d2d37f907a0c57e9ccff7f490e8\nparent 6340607acaab10eed3cf11ef7ad3564db58ec981\nparent 46e9212ecb0454d1d5cc9c4d641f4277512111c8\nauthor Ralf Jung <post@ralfj.de> 1608304926 +0100\ncommitter GitHub <noreply@github.com> 1608304926 +0100\n\nRollup merge of #80121 - LeSeulArtichaut:if-let-experimental, r=davidtwco\n\nChange the message for `if_let_guard` feature gate\n\n`if-let` guards are now implemented by #79051 \ud83c\udf89\nThanks ``@camelid`` for pointing this out \ud83d\ude42\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea6cc5aab5bec6fd48783b7d6ba08688b8497ca6", "html_url": "https://github.com/rust-lang/rust/commit/ea6cc5aab5bec6fd48783b7d6ba08688b8497ca6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea6cc5aab5bec6fd48783b7d6ba08688b8497ca6/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6340607acaab10eed3cf11ef7ad3564db58ec981", "url": "https://api.github.com/repos/rust-lang/rust/commits/6340607acaab10eed3cf11ef7ad3564db58ec981", "html_url": "https://github.com/rust-lang/rust/commit/6340607acaab10eed3cf11ef7ad3564db58ec981"}, {"sha": "46e9212ecb0454d1d5cc9c4d641f4277512111c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/46e9212ecb0454d1d5cc9c4d641f4277512111c8", "html_url": "https://github.com/rust-lang/rust/commit/46e9212ecb0454d1d5cc9c4d641f4277512111c8"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "bb222675239aa82c524bdcc8a3410f5287846645", "filename": "compiler/rustc_ast_passes/src/feature_gate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea6cc5aab5bec6fd48783b7d6ba08688b8497ca6/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea6cc5aab5bec6fd48783b7d6ba08688b8497ca6/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs?ref=ea6cc5aab5bec6fd48783b7d6ba08688b8497ca6", "patch": "@@ -620,7 +620,7 @@ pub fn check_crate(krate: &ast::Crate, sess: &Session) {\n             }\n         };\n     }\n-    gate_all!(if_let_guard, \"`if let` guard is not implemented\");\n+    gate_all!(if_let_guard, \"`if let` guards are experimental\");\n     gate_all!(let_chains, \"`let` expressions in this position are experimental\");\n     gate_all!(async_closure, \"async closures are unstable\");\n     gate_all!(generators, \"yield syntax is experimental\");"}, {"sha": "4ba7e1eeefaa6bc00e4f59d119c00e5395bb7bed", "filename": "src/test/ui/rfc-2294-if-let-guard/feature-gate.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ea6cc5aab5bec6fd48783b7d6ba08688b8497ca6/src%2Ftest%2Fui%2Frfc-2294-if-let-guard%2Ffeature-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea6cc5aab5bec6fd48783b7d6ba08688b8497ca6/src%2Ftest%2Fui%2Frfc-2294-if-let-guard%2Ffeature-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2294-if-let-guard%2Ffeature-gate.rs?ref=ea6cc5aab5bec6fd48783b7d6ba08688b8497ca6", "patch": "@@ -5,7 +5,7 @@ use std::ops::Range;\n fn _if_let_guard() {\n     match () {\n         () if let 0 = 1 => {}\n-        //~^ ERROR `if let` guard is not implemented\n+        //~^ ERROR `if let` guards are experimental\n \n         () if (let 0 = 1) => {}\n         //~^ ERROR `let` expressions in this position are experimental\n@@ -74,7 +74,7 @@ fn _macros() {\n     match () {\n         #[cfg(FALSE)]\n         () if let 0 = 1 => {}\n-        //~^ ERROR `if let` guard is not implemented\n+        //~^ ERROR `if let` guards are experimental\n         _ => {}\n     }\n     use_expr!(let 0 = 1);"}, {"sha": "113870c19f5d5a95fbfd79961763eae6e4b0b61b", "filename": "src/test/ui/rfc-2294-if-let-guard/feature-gate.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ea6cc5aab5bec6fd48783b7d6ba08688b8497ca6/src%2Ftest%2Fui%2Frfc-2294-if-let-guard%2Ffeature-gate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ea6cc5aab5bec6fd48783b7d6ba08688b8497ca6/src%2Ftest%2Fui%2Frfc-2294-if-let-guard%2Ffeature-gate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2294-if-let-guard%2Ffeature-gate.stderr?ref=ea6cc5aab5bec6fd48783b7d6ba08688b8497ca6", "patch": "@@ -7,7 +7,7 @@ LL |     macro_rules! use_expr {\n LL |     use_expr!(let 0 = 1);\n    |               ^^^ no rules expected this token in macro call\n \n-error[E0658]: `if let` guard is not implemented\n+error[E0658]: `if let` guards are experimental\n   --> $DIR/feature-gate.rs:7:12\n    |\n LL |         () if let 0 = 1 => {}\n@@ -16,7 +16,7 @@ LL |         () if let 0 = 1 => {}\n    = note: see issue #51114 <https://github.com/rust-lang/rust/issues/51114> for more information\n    = help: add `#![feature(if_let_guard)]` to the crate attributes to enable\n \n-error[E0658]: `if let` guard is not implemented\n+error[E0658]: `if let` guards are experimental\n   --> $DIR/feature-gate.rs:76:12\n    |\n LL |         () if let 0 = 1 => {}"}]}