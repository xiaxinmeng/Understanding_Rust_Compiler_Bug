{"sha": "7714a9a0e347cc34c83bb0971ca918a550988c05", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3MTRhOWEwZTM0N2NjMzRjODNiYjA5NzFjYTkxOGE1NTA5ODhjMDU=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-06-30T20:21:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-30T20:21:02Z"}, "message": "Rollup merge of #86750 - fee1-dead:impl-const-test, r=jonas-schievink\n\nTest cross-crate usage of `feature(const_trait_impl)`\n\nThis PR does two things:\n\n - Fixes metadata not encoded properly for functions in const trait impls.\n - Adds tests for using const trait impls cross-crate with the feature gate on the user crate either enabled or disabled.\n\nAFAIK, this means we can now constify some trait impls in the standard library \ud83c\udf89\n\nSee #67792 for the tracking issue, cc `@oli-obk`", "tree": {"sha": "75664a32907c3b2d54b14769f574b6800ce7b629", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75664a32907c3b2d54b14769f574b6800ce7b629"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7714a9a0e347cc34c83bb0971ca918a550988c05", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg3NIuCRBK7hj4Ov3rIwAAevYIAHIW+BdW2g6YI6qLPdwb9bsN\nj0HDDTGn/vaB0XwLAB4U70cudGuKqD/e8SLZpPm5TF6UnL4sSlNAI1tY07PAel2N\nhywGL90SSs4350/QVjXveilWcLtvS33QfUqqepG6IZZPyaOuY/0SCszHV/l544TF\njYUK0ztkFReGWdFQ9fePDeb99+w3BQBpZ4yz3u6MqP1ageOpq9IvZsjFofa40xCy\nBDKKoLcN53GsO22vk95DAYM84NdJNg6kPQEMKJbbGItzqCCm/wrpCy4KT0SGY34U\nfW6LaAL5g85pKwud5FdPyJxpgubHKWoYLK3vky1K8AJ5I/fH9AQXtOCMluA9Ig4=\n=uyuW\n-----END PGP SIGNATURE-----\n", "payload": "tree 75664a32907c3b2d54b14769f574b6800ce7b629\nparent f458d8f669b9d61e52e289750c6b0773b8ab070b\nparent c424510746c3e890157e3c30ad7fcf2051b9f769\nauthor Yuki Okushi <jtitor@2k36.org> 1625084462 +0900\ncommitter GitHub <noreply@github.com> 1625084462 +0900\n\nRollup merge of #86750 - fee1-dead:impl-const-test, r=jonas-schievink\n\nTest cross-crate usage of `feature(const_trait_impl)`\n\nThis PR does two things:\n\n - Fixes metadata not encoded properly for functions in const trait impls.\n - Adds tests for using const trait impls cross-crate with the feature gate on the user crate either enabled or disabled.\n\nAFAIK, this means we can now constify some trait impls in the standard library \ud83c\udf89\n\nSee #67792 for the tracking issue, cc `@oli-obk`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7714a9a0e347cc34c83bb0971ca918a550988c05", "html_url": "https://github.com/rust-lang/rust/commit/7714a9a0e347cc34c83bb0971ca918a550988c05", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7714a9a0e347cc34c83bb0971ca918a550988c05/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f458d8f669b9d61e52e289750c6b0773b8ab070b", "url": "https://api.github.com/repos/rust-lang/rust/commits/f458d8f669b9d61e52e289750c6b0773b8ab070b", "html_url": "https://github.com/rust-lang/rust/commit/f458d8f669b9d61e52e289750c6b0773b8ab070b"}, {"sha": "c424510746c3e890157e3c30ad7fcf2051b9f769", "url": "https://api.github.com/repos/rust-lang/rust/commits/c424510746c3e890157e3c30ad7fcf2051b9f769", "html_url": "https://github.com/rust-lang/rust/commit/c424510746c3e890157e3c30ad7fcf2051b9f769"}], "stats": {"total": 91, "additions": 90, "deletions": 1}, "files": [{"sha": "4231db620b012df76738bf907a5e8b19fb9d732c", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7714a9a0e347cc34c83bb0971ca918a550988c05/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7714a9a0e347cc34c83bb0971ca918a550988c05/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=7714a9a0e347cc34c83bb0971ca918a550988c05", "patch": "@@ -1223,7 +1223,12 @@ impl EncodeContext<'a, 'tcx> {\n                 let fn_data = if let hir::ImplItemKind::Fn(ref sig, body) = ast_item.kind {\n                     FnData {\n                         asyncness: sig.header.asyncness,\n-                        constness: sig.header.constness,\n+                        // Can be inside `impl const Trait`, so using sig.header.constness is not reliable\n+                        constness: if self.tcx.is_const_fn_raw(def_id) {\n+                            hir::Constness::Const\n+                        } else {\n+                            hir::Constness::NotConst\n+                        },\n                         param_names: self.encode_fn_param_names_for_body(body),\n                     }\n                 } else {"}, {"sha": "4285eaf18aaad4370de3ba1a73c29f599d8779cc", "filename": "src/test/ui/rfc-2632-const-trait-impl/auxiliary/cross-crate.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/7714a9a0e347cc34c83bb0971ca918a550988c05/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fauxiliary%2Fcross-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7714a9a0e347cc34c83bb0971ca918a550988c05/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fauxiliary%2Fcross-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fauxiliary%2Fcross-crate.rs?ref=7714a9a0e347cc34c83bb0971ca918a550988c05", "patch": "@@ -0,0 +1,22 @@\n+#![feature(const_trait_impl)]\n+#![allow(incomplete_features)]\n+\n+pub trait MyTrait {\n+    fn func(self);\n+}\n+\n+pub struct NonConst;\n+\n+impl MyTrait for NonConst {\n+    fn func(self) {\n+\n+    }\n+}\n+\n+pub struct Const;\n+\n+impl const MyTrait for Const {\n+    fn func(self) {\n+\n+    }\n+}"}, {"sha": "abd11d8b0e92338a42bc0ac5bd929125f9d4f38d", "filename": "src/test/ui/rfc-2632-const-trait-impl/cross-crate-feature-disabled.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7714a9a0e347cc34c83bb0971ca918a550988c05/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcross-crate-feature-disabled.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7714a9a0e347cc34c83bb0971ca918a550988c05/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcross-crate-feature-disabled.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcross-crate-feature-disabled.rs?ref=7714a9a0e347cc34c83bb0971ca918a550988c05", "patch": "@@ -0,0 +1,18 @@\n+// aux-build: cross-crate.rs\n+extern crate cross_crate;\n+\n+use cross_crate::*;\n+\n+fn non_const_context() {\n+    NonConst.func();\n+    Const.func();\n+}\n+\n+const fn const_context() {\n+    NonConst.func();\n+    //~^ ERROR: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n+    Const.func();\n+    //~^ ERROR: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n+}\n+\n+fn main() {}"}, {"sha": "b86583b9e079ff271da13edab5449aaa6e52413d", "filename": "src/test/ui/rfc-2632-const-trait-impl/cross-crate-feature-disabled.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7714a9a0e347cc34c83bb0971ca918a550988c05/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcross-crate-feature-disabled.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7714a9a0e347cc34c83bb0971ca918a550988c05/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcross-crate-feature-disabled.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcross-crate-feature-disabled.stderr?ref=7714a9a0e347cc34c83bb0971ca918a550988c05", "patch": "@@ -0,0 +1,15 @@\n+error[E0015]: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n+  --> $DIR/cross-crate-feature-disabled.rs:12:5\n+   |\n+LL |     NonConst.func();\n+   |     ^^^^^^^^^^^^^^^\n+\n+error[E0015]: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n+  --> $DIR/cross-crate-feature-disabled.rs:14:5\n+   |\n+LL |     Const.func();\n+   |     ^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0015`."}, {"sha": "b79ccc7712ff2b084b2816ffc69d2121590b8916", "filename": "src/test/ui/rfc-2632-const-trait-impl/cross-crate-feature-enabled.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7714a9a0e347cc34c83bb0971ca918a550988c05/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcross-crate-feature-enabled.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7714a9a0e347cc34c83bb0971ca918a550988c05/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcross-crate-feature-enabled.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcross-crate-feature-enabled.rs?ref=7714a9a0e347cc34c83bb0971ca918a550988c05", "patch": "@@ -0,0 +1,20 @@\n+#![feature(const_trait_impl)]\n+#![allow(incomplete_features)]\n+\n+// aux-build: cross-crate.rs\n+extern crate cross_crate;\n+\n+use cross_crate::*;\n+\n+fn non_const_context() {\n+    NonConst.func();\n+    Const.func();\n+}\n+\n+const fn const_context() {\n+    NonConst.func();\n+    //~^ ERROR: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n+    Const.func();\n+}\n+\n+fn main() {}"}, {"sha": "a544c0dd285fc3ba9f28c27806974d0d87beda81", "filename": "src/test/ui/rfc-2632-const-trait-impl/cross-crate-feature-enabled.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7714a9a0e347cc34c83bb0971ca918a550988c05/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcross-crate-feature-enabled.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7714a9a0e347cc34c83bb0971ca918a550988c05/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcross-crate-feature-enabled.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcross-crate-feature-enabled.stderr?ref=7714a9a0e347cc34c83bb0971ca918a550988c05", "patch": "@@ -0,0 +1,9 @@\n+error[E0015]: calls in constant functions are limited to constant functions, tuple structs and tuple variants\n+  --> $DIR/cross-crate-feature-enabled.rs:15:5\n+   |\n+LL |     NonConst.func();\n+   |     ^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0015`."}]}