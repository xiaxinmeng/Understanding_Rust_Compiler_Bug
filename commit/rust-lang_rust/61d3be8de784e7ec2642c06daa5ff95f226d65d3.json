{"sha": "61d3be8de784e7ec2642c06daa5ff95f226d65d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxZDNiZThkZTc4NGU3ZWMyNjQyYzA2ZGFhNWZmOTVmMjI2ZDY1ZDM=", "commit": {"author": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2020-03-22T03:08:32Z"}, "committer": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2020-03-22T03:08:32Z"}, "message": "Use Reveal::All in MIR inliner", "tree": {"sha": "f306403fc5a9b452b7c6716de9b5938b9efbb291", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f306403fc5a9b452b7c6716de9b5938b9efbb291"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61d3be8de784e7ec2642c06daa5ff95f226d65d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61d3be8de784e7ec2642c06daa5ff95f226d65d3", "html_url": "https://github.com/rust-lang/rust/commit/61d3be8de784e7ec2642c06daa5ff95f226d65d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61d3be8de784e7ec2642c06daa5ff95f226d65d3/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f405119e8305b26d0ee9e857887d2720b5c5c2a", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f405119e8305b26d0ee9e857887d2720b5c5c2a", "html_url": "https://github.com/rust-lang/rust/commit/4f405119e8305b26d0ee9e857887d2720b5c5c2a"}], "stats": {"total": 13, "additions": 3, "deletions": 10}, "files": [{"sha": "16c32e138fdf04101ac2565e16e81fb2396d4300", "filename": "src/librustc_mir/transform/inline.rs", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/61d3be8de784e7ec2642c06daa5ff95f226d65d3/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61d3be8de784e7ec2642c06daa5ff95f226d65d3/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Finline.rs?ref=61d3be8de784e7ec2642c06daa5ff95f226d65d3", "patch": "@@ -3,8 +3,8 @@\n use rustc::middle::codegen_fn_attrs::CodegenFnAttrFlags;\n use rustc::mir::visit::*;\n use rustc::mir::*;\n-use rustc::ty::subst::{InternalSubsts, Subst, SubstsRef};\n-use rustc::ty::{self, Instance, InstanceDef, ParamEnv, Ty, TyCtxt, TypeFoldable};\n+use rustc::ty::subst::{Subst, SubstsRef};\n+use rustc::ty::{self, Instance, InstanceDef, ParamEnv, Ty, TyCtxt};\n use rustc_attr as attr;\n use rustc_hir::def_id::DefId;\n use rustc_index::bit_set::BitSet;\n@@ -66,14 +66,7 @@ impl Inliner<'tcx> {\n \n         let mut callsites = VecDeque::new();\n \n-        let mut param_env = self.tcx.param_env(self.source.def_id());\n-\n-        let substs = &InternalSubsts::identity_for_item(self.tcx, self.source.def_id());\n-\n-        // For monomorphic functions, we can use `Reveal::All` to resolve specialized instances.\n-        if !substs.needs_subst() {\n-            param_env = param_env.with_reveal_all();\n-        }\n+        let param_env = self.tcx.param_env(self.source.def_id()).with_reveal_all();\n \n         // Only do inlining into fn bodies.\n         let id = self.tcx.hir().as_local_hir_id(self.source.def_id()).unwrap();"}]}