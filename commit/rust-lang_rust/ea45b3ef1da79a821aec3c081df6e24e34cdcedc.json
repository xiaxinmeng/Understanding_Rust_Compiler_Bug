{"sha": "ea45b3ef1da79a821aec3c081df6e24e34cdcedc", "node_id": "C_kwDOAAsO6NoAKGVhNDViM2VmMWRhNzlhODIxYWVjM2MwODFkZjZlMjRlMzRjZGNlZGM", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev+love@gmail.com", "date": "2023-01-12T20:47:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-12T20:47:23Z"}, "message": "Rollup merge of #106741 - GuillaumeGomez:reexport-doc-hidden, r=notriddle\n\nFix reexport of `doc(hidden)` item\n\nPart of #59368.\n\nIt doesn't fix the `doc(inline)` nor the `doc(hidden)` on macro. I'll do it in a follow-up PR.\n\nr? `@notriddle`", "tree": {"sha": "a491254a07de429b81915110a28a0208a469b269", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a491254a07de429b81915110a28a0208a469b269"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea45b3ef1da79a821aec3c081df6e24e34cdcedc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjwHHbCRBK7hj4Ov3rIwAATR8IADmcOmMnlRUdIW+wGqwXcDKi\nGN573915YHJp/AQPL5GUWyTbB1W2zLXps7zr0SHKRdNDyqHUY6+jNic9oNCWGpPM\nKQUFbf6u17b97vtPxy/1Y4NLpknwal2ypVwTV8h8OzktBfzccNcK2SE/fMfPJZ5l\n4xan8uZPp+Ha+apOJqB1dDnwLMMxP3kow1iRfcpQyrN32oTcw87mBrnktLxVBerL\n2vRZcGbNMLMFORM1/8HGON5484bqs16bQ68eQ+GQ1K1RUy5OmNcaqR7vNsSuJDZ3\nDo9r3EzgV1VwwoZ2SdQDfOMRFczJ9JivTB2HysMZUAmsViRwJPJFyg8NG8yB5vM=\n=Pgba\n-----END PGP SIGNATURE-----\n", "payload": "tree a491254a07de429b81915110a28a0208a469b269\nparent 7e5d477ac555d145ad4dcabd78ef8900f377a017\nparent 675640c92a1fb1de99227802851fd2811d1ebd08\nauthor Yuki Okushi <huyuumi.dev+love@gmail.com> 1673556443 +0900\ncommitter GitHub <noreply@github.com> 1673556443 +0900\n\nRollup merge of #106741 - GuillaumeGomez:reexport-doc-hidden, r=notriddle\n\nFix reexport of `doc(hidden)` item\n\nPart of #59368.\n\nIt doesn't fix the `doc(inline)` nor the `doc(hidden)` on macro. I'll do it in a follow-up PR.\n\nr? `@notriddle`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea45b3ef1da79a821aec3c081df6e24e34cdcedc", "html_url": "https://github.com/rust-lang/rust/commit/ea45b3ef1da79a821aec3c081df6e24e34cdcedc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea45b3ef1da79a821aec3c081df6e24e34cdcedc/comments", "author": null, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e5d477ac555d145ad4dcabd78ef8900f377a017", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e5d477ac555d145ad4dcabd78ef8900f377a017", "html_url": "https://github.com/rust-lang/rust/commit/7e5d477ac555d145ad4dcabd78ef8900f377a017"}, {"sha": "675640c92a1fb1de99227802851fd2811d1ebd08", "url": "https://api.github.com/repos/rust-lang/rust/commits/675640c92a1fb1de99227802851fd2811d1ebd08", "html_url": "https://github.com/rust-lang/rust/commit/675640c92a1fb1de99227802851fd2811d1ebd08"}], "stats": {"total": 47, "additions": 44, "deletions": 3}, "files": [{"sha": "4c992e94833d6f4f6a5906bdd24838f5cb61f3fc", "filename": "src/librustdoc/passes/strip_priv_imports.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ea45b3ef1da79a821aec3c081df6e24e34cdcedc/src%2Flibrustdoc%2Fpasses%2Fstrip_priv_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea45b3ef1da79a821aec3c081df6e24e34cdcedc/src%2Flibrustdoc%2Fpasses%2Fstrip_priv_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fstrip_priv_imports.rs?ref=ea45b3ef1da79a821aec3c081df6e24e34cdcedc", "patch": "@@ -12,5 +12,6 @@ pub(crate) const STRIP_PRIV_IMPORTS: Pass = Pass {\n };\n \n pub(crate) fn strip_priv_imports(krate: clean::Crate, cx: &mut DocContext<'_>) -> clean::Crate {\n-    ImportStripper { tcx: cx.tcx }.fold_crate(krate)\n+    let is_json_output = cx.output_format.is_json() && !cx.show_coverage;\n+    ImportStripper { tcx: cx.tcx, is_json_output }.fold_crate(krate)\n }"}, {"sha": "bb6dccb7c949939bf3e36ef98b2264a1807692fe", "filename": "src/librustdoc/passes/strip_private.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ea45b3ef1da79a821aec3c081df6e24e34cdcedc/src%2Flibrustdoc%2Fpasses%2Fstrip_private.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea45b3ef1da79a821aec3c081df6e24e34cdcedc/src%2Flibrustdoc%2Fpasses%2Fstrip_private.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fstrip_private.rs?ref=ea45b3ef1da79a821aec3c081df6e24e34cdcedc", "patch": "@@ -28,7 +28,8 @@ pub(crate) fn strip_private(mut krate: clean::Crate, cx: &mut DocContext<'_>) ->\n             is_json_output,\n             tcx: cx.tcx,\n         };\n-        krate = ImportStripper { tcx: cx.tcx }.fold_crate(stripper.fold_crate(krate));\n+        krate =\n+            ImportStripper { tcx: cx.tcx, is_json_output }.fold_crate(stripper.fold_crate(krate));\n     }\n \n     // strip all impls referencing private items"}, {"sha": "f5501b3d5238b82c1ef80326f4a85061e0ddd0da", "filename": "src/librustdoc/passes/stripper.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ea45b3ef1da79a821aec3c081df6e24e34cdcedc/src%2Flibrustdoc%2Fpasses%2Fstripper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea45b3ef1da79a821aec3c081df6e24e34cdcedc/src%2Flibrustdoc%2Fpasses%2Fstripper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fstripper.rs?ref=ea45b3ef1da79a821aec3c081df6e24e34cdcedc", "patch": "@@ -243,12 +243,25 @@ impl<'a> DocFolder for ImplStripper<'a, '_> {\n /// This stripper discards all private import statements (`use`, `extern crate`)\n pub(crate) struct ImportStripper<'tcx> {\n     pub(crate) tcx: TyCtxt<'tcx>,\n+    pub(crate) is_json_output: bool,\n+}\n+\n+impl<'tcx> ImportStripper<'tcx> {\n+    fn import_should_be_hidden(&self, i: &Item, imp: &clean::Import) -> bool {\n+        if self.is_json_output {\n+            // FIXME: This should be handled the same way as for HTML output.\n+            imp.imported_item_is_doc_hidden(self.tcx)\n+        } else {\n+            i.attrs.lists(sym::doc).has_word(sym::hidden)\n+        }\n+    }\n }\n \n impl<'tcx> DocFolder for ImportStripper<'tcx> {\n     fn fold_item(&mut self, i: Item) -> Option<Item> {\n         match *i.kind {\n-            clean::ImportItem(imp) if imp.imported_item_is_doc_hidden(self.tcx) => None,\n+            clean::ImportItem(imp) if self.import_should_be_hidden(&i, &imp) => None,\n+            clean::ImportItem(_) if i.attrs.lists(sym::doc).has_word(sym::hidden) => None,\n             clean::ExternCrateItem { .. } | clean::ImportItem(..)\n                 if i.visibility(self.tcx) != Some(Visibility::Public) =>\n             {"}, {"sha": "3ea5fde72f7117c47a78d633dfd6a8b4f372c5fc", "filename": "tests/rustdoc/reexport-doc-hidden.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/ea45b3ef1da79a821aec3c081df6e24e34cdcedc/tests%2Frustdoc%2Freexport-doc-hidden.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea45b3ef1da79a821aec3c081df6e24e34cdcedc/tests%2Frustdoc%2Freexport-doc-hidden.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Freexport-doc-hidden.rs?ref=ea45b3ef1da79a821aec3c081df6e24e34cdcedc", "patch": "@@ -0,0 +1,26 @@\n+// Part of <https://github.com/rust-lang/rust/issues/59368>.\n+// This test ensures that reexporting a `doc(hidden)` item will\n+// still show the reexport.\n+\n+#![crate_name = \"foo\"]\n+\n+#[doc(hidden)]\n+pub type Type = u32;\n+\n+// @has 'foo/index.html'\n+// @has - '//*[@id=\"reexport.Type2\"]/code' 'pub use crate::Type as Type2;'\n+pub use crate::Type as Type2;\n+\n+// @count - '//*[@id=\"reexport.Type3\"]' 0\n+#[doc(hidden)]\n+pub use crate::Type as Type3;\n+\n+#[macro_export]\n+#[doc(hidden)]\n+macro_rules! foo {\n+    () => {};\n+}\n+\n+// This is a bug: https://github.com/rust-lang/rust/issues/59368\n+// @!has - '//*[@id=\"reexport.Macro\"]/code' 'pub use crate::foo as Macro;'\n+pub use crate::foo as Macro;"}]}