{"sha": "a3956106d12cebec91be0637759e29ab6908b4cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzOTU2MTA2ZDEyY2ViZWM5MWJlMDYzNzc1OWUyOWFiNjkwOGI0Y2Q=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-31T22:15:26Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-31T22:15:26Z"}, "message": "Auto merge of #88533 - oli-obk:tait_\ud83e\uddca, r=spastorino\n\nConcrete regions can show up in mir borrowck if the originated from there\n\nWe used to not encounter them here, because we took regions from typeck's opaque type resolution by renumbering them. We don't do that anymore. Instead mir borrock does all the logic, and it can handle concrete regions just fine, as long as it created them itself.\n\nfixes #83190 which was introduced by #87287\n\nr? `@spastorino`", "tree": {"sha": "857e77c465d3c213c7074668d72d951d35b8c6b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/857e77c465d3c213c7074668d72d951d35b8c6b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a3956106d12cebec91be0637759e29ab6908b4cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a3956106d12cebec91be0637759e29ab6908b4cd", "html_url": "https://github.com/rust-lang/rust/commit/a3956106d12cebec91be0637759e29ab6908b4cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a3956106d12cebec91be0637759e29ab6908b4cd/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29ef6cf1637aa8317f8911f93f14e18d404c1b0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/29ef6cf1637aa8317f8911f93f14e18d404c1b0e", "html_url": "https://github.com/rust-lang/rust/commit/29ef6cf1637aa8317f8911f93f14e18d404c1b0e"}, {"sha": "43738c678799f1cf41b54de4ce169a5dde39d30f", "url": "https://api.github.com/repos/rust-lang/rust/commits/43738c678799f1cf41b54de4ce169a5dde39d30f", "html_url": "https://github.com/rust-lang/rust/commit/43738c678799f1cf41b54de4ce169a5dde39d30f"}], "stats": {"total": 10, "additions": 1, "deletions": 9}, "files": [{"sha": "12fceeff0884c92a8f4f8ada963004d36b86c8f8", "filename": "compiler/rustc_mir/src/borrow_check/region_infer/opaque_types.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a3956106d12cebec91be0637759e29ab6908b4cd/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fregion_infer%2Fopaque_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3956106d12cebec91be0637759e29ab6908b4cd/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fregion_infer%2Fopaque_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fregion_infer%2Fopaque_types.rs?ref=a3956106d12cebec91be0637759e29ab6908b4cd", "patch": "@@ -82,15 +82,7 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n                             .find(|ur_vid| self.eval_equal(vid, **ur_vid))\n                             .and_then(|ur_vid| self.definitions[*ur_vid].external_name)\n                             .unwrap_or(infcx.tcx.lifetimes.re_root_empty),\n-                        ty::ReLateBound(..) => region,\n-                        ty::ReStatic => region,\n-                        _ => {\n-                            infcx.tcx.sess.delay_span_bug(\n-                                span,\n-                                &format!(\"unexpected concrete region in borrowck: {:?}\", region),\n-                            );\n-                            region\n-                        }\n+                        _ => region,\n                     });\n \n                 debug!(?universal_concrete_type, ?universal_substs);"}]}