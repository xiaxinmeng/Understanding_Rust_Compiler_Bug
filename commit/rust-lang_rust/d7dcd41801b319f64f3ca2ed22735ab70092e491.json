{"sha": "d7dcd41801b319f64f3ca2ed22735ab70092e491", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3ZGNkNDE4MDFiMzE5ZjY0ZjNjYTJlZDIyNzM1YWI3MDA5MmU0OTE=", "commit": {"author": {"name": "Chetan Khilosiya", "email": "chetan.khilosiya@gmail.com", "date": "2021-03-30T19:00:01Z"}, "committer": {"name": "Chetan Khilosiya", "email": "chetan.khilosiya@gmail.com", "date": "2021-03-30T19:01:15Z"}, "message": "8024: Added test case for highlighting trait items.", "tree": {"sha": "7e74b7a6504ce9d55cfe123cdc92f5b1d6532ef2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e74b7a6504ce9d55cfe123cdc92f5b1d6532ef2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7dcd41801b319f64f3ca2ed22735ab70092e491", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7dcd41801b319f64f3ca2ed22735ab70092e491", "html_url": "https://github.com/rust-lang/rust/commit/d7dcd41801b319f64f3ca2ed22735ab70092e491", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7dcd41801b319f64f3ca2ed22735ab70092e491/comments", "author": {"login": "chetankhilosiya", "id": 1639535, "node_id": "MDQ6VXNlcjE2Mzk1MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1639535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chetankhilosiya", "html_url": "https://github.com/chetankhilosiya", "followers_url": "https://api.github.com/users/chetankhilosiya/followers", "following_url": "https://api.github.com/users/chetankhilosiya/following{/other_user}", "gists_url": "https://api.github.com/users/chetankhilosiya/gists{/gist_id}", "starred_url": "https://api.github.com/users/chetankhilosiya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chetankhilosiya/subscriptions", "organizations_url": "https://api.github.com/users/chetankhilosiya/orgs", "repos_url": "https://api.github.com/users/chetankhilosiya/repos", "events_url": "https://api.github.com/users/chetankhilosiya/events{/privacy}", "received_events_url": "https://api.github.com/users/chetankhilosiya/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chetankhilosiya", "id": 1639535, "node_id": "MDQ6VXNlcjE2Mzk1MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1639535?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chetankhilosiya", "html_url": "https://github.com/chetankhilosiya", "followers_url": "https://api.github.com/users/chetankhilosiya/followers", "following_url": "https://api.github.com/users/chetankhilosiya/following{/other_user}", "gists_url": "https://api.github.com/users/chetankhilosiya/gists{/gist_id}", "starred_url": "https://api.github.com/users/chetankhilosiya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chetankhilosiya/subscriptions", "organizations_url": "https://api.github.com/users/chetankhilosiya/orgs", "repos_url": "https://api.github.com/users/chetankhilosiya/repos", "events_url": "https://api.github.com/users/chetankhilosiya/events{/privacy}", "received_events_url": "https://api.github.com/users/chetankhilosiya/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56f624532aec04a3a1cccf48ff62c490f52826a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/56f624532aec04a3a1cccf48ff62c490f52826a0", "html_url": "https://github.com/rust-lang/rust/commit/56f624532aec04a3a1cccf48ff62c490f52826a0"}], "stats": {"total": 104, "additions": 104, "deletions": 0}, "files": [{"sha": "85274a61fad900dd26a8301a5073f984b0730dd6", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_trait_items.html", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/d7dcd41801b319f64f3ca2ed22735ab70092e491/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_trait_items.html", "raw_url": "https://github.com/rust-lang/rust/raw/d7dcd41801b319f64f3ca2ed22735ab70092e491/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_trait_items.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_trait_items.html?ref=d7dcd41801b319f64f3ca2ed22735ab70092e491", "patch": "@@ -0,0 +1,67 @@\n+\n+<style>\n+body                { margin: 0; }\n+pre                 { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padding: 0.4em; }\n+\n+.lifetime           { color: #DFAF8F; font-style: italic; }\n+.label              { color: #DFAF8F; font-style: italic; }\n+.comment            { color: #7F9F7F; }\n+.documentation      { color: #629755; }\n+.intra_doc_link     { font-style: italic; }\n+.injected           { opacity: 0.65 ; }\n+.struct, .enum      { color: #7CB8BB; }\n+.enum_variant       { color: #BDE0F3; }\n+.string_literal     { color: #CC9393; }\n+.field              { color: #94BFF3; }\n+.function           { color: #93E0E3; }\n+.function.unsafe    { color: #BC8383; }\n+.operator.unsafe    { color: #BC8383; }\n+.parameter          { color: #94BFF3; }\n+.text               { color: #DCDCCC; }\n+.type               { color: #7CB8BB; }\n+.builtin_type       { color: #8CD0D3; }\n+.type_param         { color: #DFAF8F; }\n+.attribute          { color: #94BFF3; }\n+.numeric_literal    { color: #BFEBBF; }\n+.bool_literal       { color: #BFE6EB; }\n+.macro              { color: #94BFF3; }\n+.module             { color: #AFD8AF; }\n+.value_param        { color: #DCDCCC; }\n+.variable           { color: #DCDCCC; }\n+.format_specifier   { color: #CC696B; }\n+.mutable            { text-decoration: underline; }\n+.escape_sequence    { color: #94BFF3; }\n+.keyword            { color: #F0DFAF; font-weight: bold; }\n+.keyword.unsafe     { color: #BC8383; font-weight: bold; }\n+.control            { font-style: italic; }\n+\n+.unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n+</style>\n+<pre><code><span class=\"keyword\">struct</span> <span class=\"struct declaration\">Cat</span><span class=\"semicolon\">;</span>\n+\n+<span class=\"keyword\">trait</span> <span class=\"trait declaration\">Animal</span> <span class=\"brace\">{</span>\n+    <span class=\"keyword\">const</span> <span class=\"constant declaration associated trait\">SOUND</span><span class=\"colon\">:</span> <span class=\"operator\">&</span><span class=\"lifetime\">'static</span> <span class=\"builtin_type\">str</span><span class=\"semicolon\">;</span>\n+\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration associated trait\">make_sound</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n+        <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"{}\"</span><span class=\"comma\">,</span> Self<span class=\"colon\">:</span><span class=\"colon\">:</span>SOUND<span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"brace\">}</span>\n+<span class=\"brace\">}</span>\n+\n+<span class=\"keyword\">impl</span> <span class=\"trait\">Animal</span> <span class=\"keyword\">for</span> <span class=\"struct\">Cat</span> <span class=\"brace\">{</span>\n+    <span class=\"keyword\">const</span> <span class=\"constant declaration associated trait\">SOUND</span><span class=\"colon\">:</span> <span class=\"operator\">&</span><span class=\"lifetime\">'static</span> <span class=\"builtin_type\">str</span> <span class=\"operator\">=</span> <span class=\"string_literal\">\"Meow!\"</span><span class=\"semicolon\">;</span>\n+<span class=\"brace\">}</span>\n+\n+<span class=\"keyword\">impl</span> <span class=\"struct\">Cat</span> <span class=\"brace\">{</span>\n+    <span class=\"keyword\">const</span> <span class=\"constant declaration associated\">SPEED</span><span class=\"colon\">:</span> <span class=\"builtin_type\">u32</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">2</span><span class=\"semicolon\">;</span>\n+\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration static associated\">run</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n+<span class=\"brace\">}</span>\n+\n+<span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\">cat</span> <span class=\"operator\">=</span> <span class=\"struct\">Cat</span><span class=\"semicolon\">;</span>\n+    <span class=\"variable\">cat</span><span class=\"operator\">.</span><span class=\"function associated trait\">make_sound</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\">_sound</span> <span class=\"operator\">=</span> <span class=\"struct\">Cat</span><span class=\"operator\">::</span><span class=\"constant associated trait\">SOUND</span><span class=\"semicolon\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\">_speed</span> <span class=\"operator\">=</span> <span class=\"struct\">Cat</span><span class=\"operator\">::</span><span class=\"constant associated\">SPEED</span><span class=\"semicolon\">;</span>\n+    <span class=\"struct\">Cat</span><span class=\"operator\">::</span><span class=\"function static associated\">run</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+<span class=\"brace\">}</span>\n+</code></pre>\n\\ No newline at end of file"}, {"sha": "7b3b5caf93df081dda68623b4180fa9d26bbaacb", "filename": "crates/ide/src/syntax_highlighting/tests.rs", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/d7dcd41801b319f64f3ca2ed22735ab70092e491/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7dcd41801b319f64f3ca2ed22735ab70092e491/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs?ref=d7dcd41801b319f64f3ca2ed22735ab70092e491", "patch": "@@ -659,6 +659,43 @@ fn foo() {\n     );\n }\n \n+#[test]\n+fn test_highlight_trait_items() {\n+    check_highlighting(\n+        r#\"\n+struct Cat;\n+\n+trait Animal {\n+    const SOUND: &'static str;\n+\n+    fn make_sound(&self) {\n+        println!(\"{}\", Self::SOUND);\n+    }\n+}\n+\n+impl Animal for Cat {\n+    const SOUND: &'static str = \"Meow!\";\n+}\n+\n+impl Cat {\n+    const SPEED: u32 = 2;\n+\n+    fn run() {}\n+}\n+\n+fn main() {\n+    let cat = Cat;\n+    cat.make_sound();\n+    let _sound = Cat::SOUND;\n+    let _speed = Cat::SPEED;\n+    Cat::run();\n+}\n+\"#,\n+        expect_file![\"./test_data/highlight_trait_items.html\"],\n+        false,\n+    );\n+}\n+\n /// Highlights the code given by the `ra_fixture` argument, renders the\n /// result as HTML, and compares it with the HTML file given as `snapshot`.\n /// Note that the `snapshot` file is overwritten by the rendered HTML."}]}