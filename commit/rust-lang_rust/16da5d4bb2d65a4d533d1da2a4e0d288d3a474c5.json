{"sha": "16da5d4bb2d65a4d533d1da2a4e0d288d3a474c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2ZGE1ZDRiYjJkNjVhNGQ1MzNkMWRhMmE0ZTBkMjg4ZDNhNDc0YzU=", "commit": {"author": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2018-03-18T16:18:18Z"}, "committer": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2018-03-18T20:14:29Z"}, "message": "Add BufReader::buffer\n\nThis subsumes the need for an explicit is_empty function, and provides\naccess to the buffered data itself which has been requested from time to\ntime.", "tree": {"sha": "888c8bf30b20d0b2dacbd401cacab35b47d6b669", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/888c8bf30b20d0b2dacbd401cacab35b47d6b669"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16da5d4bb2d65a4d533d1da2a4e0d288d3a474c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16da5d4bb2d65a4d533d1da2a4e0d288d3a474c5", "html_url": "https://github.com/rust-lang/rust/commit/16da5d4bb2d65a4d533d1da2a4e0d288d3a474c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16da5d4bb2d65a4d533d1da2a4e0d288d3a474c5/comments", "author": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8aa27ee30972f16320ae4a8887c8f54616fff819", "url": "https://api.github.com/repos/rust-lang/rust/commits/8aa27ee30972f16320ae4a8887c8f54616fff819", "html_url": "https://github.com/rust-lang/rust/commit/8aa27ee30972f16320ae4a8887c8f54616fff819"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "ccaa19acc8379eaaa68424656281cf5cac597409", "filename": "src/libstd/io/buffered.rs", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/16da5d4bb2d65a4d533d1da2a4e0d288d3a474c5/src%2Flibstd%2Fio%2Fbuffered.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16da5d4bb2d65a4d533d1da2a4e0d288d3a474c5/src%2Flibstd%2Fio%2Fbuffered.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fbuffered.rs?ref=16da5d4bb2d65a4d533d1da2a4e0d288d3a474c5", "patch": "@@ -168,8 +168,36 @@ impl<R: Read> BufReader<R> {\n     /// # }\n     /// ```\n     #[unstable(feature = \"bufreader_is_empty\", issue = \"45323\", reason = \"recently added\")]\n+    #[rustc_deprecated(since = \"1.26.0\", reason = \"use .buffer().is_empty() instead\")]\n     pub fn is_empty(&self) -> bool {\n-        self.pos == self.cap\n+        self.buffer().is_empty()\n+    }\n+\n+    /// Returns a reference to the internally buffered data.\n+    ///\n+    /// Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// # #![feature(bufreader_buffer)]\n+    /// use std::io::{BufReader, BufRead};\n+    /// use std::fs::File;\n+    ///\n+    /// # fn foo() -> std::io::Result<()> {\n+    /// let f = File::open(\"log.txt\")?;\n+    /// let mut reader = BufReader::new(f);\n+    /// assert!(reader.buffer().is_empty());\n+    ///\n+    /// if reader.fill_buf()?.len() > 0 {\n+    ///     assert!(!reader.buffer().is_empty());\n+    /// }\n+    /// # Ok(())\n+    /// # }\n+    /// ```\n+    #[unstable(feature = \"bufreader_buffer\", issue = \"45323\")]\n+    pub fn buffer(&self) -> &[u8] {\n+        &self.buf[self.pos..self.cap]\n     }\n \n     /// Unwraps this `BufReader`, returning the underlying reader."}]}