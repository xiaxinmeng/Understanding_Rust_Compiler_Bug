{"sha": "49dfd82fd363a6379af9a6c453e2217e58a0fc6d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5ZGZkODJmZDM2M2E2Mzc5YWY5YTZjNDUzZTIyMTdlNThhMGZjNmQ=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-05-31T14:41:26Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-01T09:47:55Z"}, "message": "fallout because compiletest tried to use rustc's log crate", "tree": {"sha": "10786d96ea9b61f3face8155beb4e934d9163d5b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10786d96ea9b61f3face8155beb4e934d9163d5b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49dfd82fd363a6379af9a6c453e2217e58a0fc6d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXTq9LAAoJEFbW7qD8Z6xGJB8QALUzrA+ml2HSipSRLYmDPLnU\n/W5lvycuncLJdJ9swuIy5ZCpk7dw+JGRd3dwbTqGKAbl4CBLuS9dC9jDhWtEbieE\nqcaK8i1izn+VYINeczBduNhRFNNg0DNCUJj2vMOR62h26x4z3nnTbAOCdnYoXvBk\nPCJODWdGEm3Z0Cq4WxlUbkHeNZjr/5nubMF8qklJF7ep/hG4l3oth10rGTKYWwhA\nuGz6tzWra/MdNKJ4V4kj8SboI2dDwa8DyfD1JsqQPd8QjzEnXbBXiYGBXN1TMCuL\nGPBS8GBredOckD+tR5LiXZ1zZZ4TcVDCCh9GdbgBL/fP7kIK8aUMBghkHu/uAyCN\nlzQZFiDODYQ95cqkgWTJoUulC4W01NItL93cmLUb/QnySRL6Emf8TrzxOZ/r2tSc\nv+nOX65F3zIxDObi0U9L7VgfahXz5vazDggSiwTHRSJGn4UXkZHKwGCq7BIzgemo\nLKiza+pjBUvaLL5mi6rgnuC56YQT0GTBuY2ZyDv53oQQzxcVjjjAfAniLzF8yCBZ\nKkgbDN0oO38c+Ur9mMlEIMhGe1tFzvkKkCeP5bu+DUKUPK6HBlNUQblpbZ8PkiQU\nRoFMhf6MooZktt29P205F7pdBz/UshydFG6YDHwLY1GTo6vvT2r3W+LnftF+7Eeo\nawIon6ZfUhAY/Qnn2k2h\n=QgEz\n-----END PGP SIGNATURE-----", "payload": "tree 10786d96ea9b61f3face8155beb4e934d9163d5b\nparent 4f3f2020edbce8d9bcb618d11f8f7fc5eb8dff76\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1464705686 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1464774475 +0200\n\nfallout because compiletest tried to use rustc's log crate"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49dfd82fd363a6379af9a6c453e2217e58a0fc6d", "html_url": "https://github.com/rust-lang/rust/commit/49dfd82fd363a6379af9a6c453e2217e58a0fc6d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49dfd82fd363a6379af9a6c453e2217e58a0fc6d/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f3f2020edbce8d9bcb618d11f8f7fc5eb8dff76", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f3f2020edbce8d9bcb618d11f8f7fc5eb8dff76", "html_url": "https://github.com/rust-lang/rust/commit/4f3f2020edbce8d9bcb618d11f8f7fc5eb8dff76"}], "stats": {"total": 32, "additions": 25, "deletions": 7}, "files": [{"sha": "f0fb4113f1f76debdd50bb533ec848af17ea4b69", "filename": "tests/run-fail/inception.rs", "status": "modified", "additions": 25, "deletions": 7, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/49dfd82fd363a6379af9a6c453e2217e58a0fc6d/tests%2Frun-fail%2Finception.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49dfd82fd363a6379af9a6c453e2217e58a0fc6d/tests%2Frun-fail%2Finception.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-fail%2Finception.rs?ref=49dfd82fd363a6379af9a6c453e2217e58a0fc6d", "patch": "@@ -9,14 +9,32 @@ fn run_miri(file: &str, sysroot: &str) -> Output {\n     let libpath = libpath.to_str().unwrap();\n     let libpath2 = path.join(\"target\").join(\"debug\").join(\"deps\");\n     let libpath2 = libpath2.to_str().unwrap();\n+    let mut args = vec![\n+        \"run\".to_string(), \"--\".to_string(),\n+        \"--sysroot\".to_string(), sysroot.to_string(),\n+        \"-L\".to_string(), libpath.to_string(),\n+        \"-L\".to_string(), libpath2.to_string(),\n+        file.to_string()\n+    ];\n+    for file in std::fs::read_dir(\"target/debug/deps\").unwrap() {\n+        let file = file.unwrap();\n+        if file.file_type().unwrap().is_file() {\n+            let path = file.path();\n+            if let Some(ext) = path.extension() {\n+                if ext == \"rlib\" {\n+                    let name = path.file_stem().unwrap().to_str().unwrap();\n+                    if let Some(dash) = name.rfind('-') {\n+                        if name.starts_with(\"lib\") {\n+                            args.push(\"--extern\".to_string());\n+                            args.push(format!(\"{}={}\", &name[3..dash], path.to_str().unwrap()));\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+    }\n     Command::new(\"cargo\")\n-        .args(&[\n-            \"run\", \"--\",\n-            \"--sysroot\", sysroot,\n-            \"-L\", libpath,\n-            \"-L\", libpath2,\n-            file\n-        ])\n+        .args(&args)\n         .output()\n         .unwrap_or_else(|e| panic!(\"failed to execute process: {}\", e))\n }"}]}