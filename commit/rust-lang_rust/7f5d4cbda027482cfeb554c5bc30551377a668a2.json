{"sha": "7f5d4cbda027482cfeb554c5bc30551377a668a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmNWQ0Y2JkYTAyNzQ4MmNmZWI1NTRjNWJjMzA1NTEzNzdhNjY4YTI=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-02-27T22:05:39Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-02-27T22:05:39Z"}, "message": "Merge remote-tracking branch 'remotes/origin/incoming' into incoming", "tree": {"sha": "1b697c9c37cdfaed721aa4496a616faf7e48ae7d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b697c9c37cdfaed721aa4496a616faf7e48ae7d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f5d4cbda027482cfeb554c5bc30551377a668a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f5d4cbda027482cfeb554c5bc30551377a668a2", "html_url": "https://github.com/rust-lang/rust/commit/7f5d4cbda027482cfeb554c5bc30551377a668a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f5d4cbda027482cfeb554c5bc30551377a668a2/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d0ec86c4a382f3d937c4bf5f12ab69468d991c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d0ec86c4a382f3d937c4bf5f12ab69468d991c1", "html_url": "https://github.com/rust-lang/rust/commit/7d0ec86c4a382f3d937c4bf5f12ab69468d991c1"}, {"sha": "5fc0eccdfa1c81d9759b0592e5b86b0ff7fd4fa8", "url": "https://api.github.com/repos/rust-lang/rust/commits/5fc0eccdfa1c81d9759b0592e5b86b0ff7fd4fa8", "html_url": "https://github.com/rust-lang/rust/commit/5fc0eccdfa1c81d9759b0592e5b86b0ff7fd4fa8"}], "stats": {"total": 33, "additions": 19, "deletions": 14}, "files": [{"sha": "39b2a2efdd817da634b73fdf9ec87794ac427432", "filename": "src/librustc/middle/typeck/check/_match.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7f5d4cbda027482cfeb554c5bc30551377a668a2/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f5d4cbda027482cfeb554c5bc30551377a668a2/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2F_match.rs?ref=7f5d4cbda027482cfeb554c5bc30551377a668a2", "patch": "@@ -103,7 +103,7 @@ pub fn check_pat_variant(pcx: pat_ctxt, pat: @ast::pat, path: @ast::path,\n             // check that the type of the value being matched is a subtype\n             // of the type of the pattern:\n             let pat_ty = fcx.node_ty(pat.id);\n-            demand::suptype(fcx, pat.span, pat_ty, expected);\n+            demand::subtype(fcx, pat.span, expected, pat_ty);\n \n             // Get the expected types of the arguments.\n             arg_types = {\n@@ -142,7 +142,7 @@ pub fn check_pat_variant(pcx: pat_ctxt, pat: @ast::pat, path: @ast::path,\n             // Check that the type of the value being matched is a subtype of\n             // the type of the pattern.\n             let pat_ty = fcx.node_ty(pat.id);\n-            demand::suptype(fcx, pat.span, pat_ty, expected);\n+            demand::subtype(fcx, pat.span, expected, pat_ty);\n \n             // Get the expected types of the arguments.\n             let class_fields = ty::struct_fields(\n@@ -154,8 +154,8 @@ pub fn check_pat_variant(pcx: pat_ctxt, pat: @ast::pat, path: @ast::path,\n         _ => {\n             tcx.sess.span_fatal(\n                 pat.span,\n-                fmt!(\"mismatched types: expected enum or structure but \\\n-                      found `%s`\",\n+                fmt!(\"mismatched types: expected `%s` but found enum or \\\n+                      structure\",\n                      fcx.infcx().ty_to_str(expected)));\n         }\n     }"}, {"sha": "a3fac8b4e1cdea8a1dd0efbddfd7ed71af4c035a", "filename": "src/librustc/middle/typeck/check/demand.rs", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/7f5d4cbda027482cfeb554c5bc30551377a668a2/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f5d4cbda027482cfeb554c5bc30551377a668a2/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fdemand.rs?ref=7f5d4cbda027482cfeb554c5bc30551377a668a2", "patch": "@@ -21,20 +21,25 @@ use syntax::codemap::span;\n // Requires that the two types unify, and prints an error message if they\n // don't.\n pub fn suptype(fcx: @mut FnCtxt, sp: span, expected: ty::t, actual: ty::t) {\n-    suptype_with_fn(fcx, sp, expected, actual,\n+    suptype_with_fn(fcx, sp, false, expected, actual,\n         |sp, e, a, s| { fcx.report_mismatched_types(sp, e, a, s) })\n }\n \n+pub fn subtype(fcx: @mut FnCtxt, sp: span, expected: ty::t, actual: ty::t) {\n+    suptype_with_fn(fcx, sp, true, actual, expected,\n+        |sp, a, e, s| { fcx.report_mismatched_types(sp, e, a, s) })\n+}\n+\n pub fn suptype_with_fn(fcx: @mut FnCtxt,\n-                       sp: span,\n-                       expected: ty::t, actual: ty::t,\n+                       sp: span, b_is_expected: bool,\n+                       ty_a: ty::t, ty_b: ty::t,\n                        handle_err: fn(span, ty::t, ty::t, &ty::type_err)) {\n     // n.b.: order of actual, expected is reversed\n-    match infer::mk_subty(fcx.infcx(), false, sp,\n-                          actual, expected) {\n+    match infer::mk_subty(fcx.infcx(), b_is_expected, sp,\n+                          ty_b, ty_a) {\n       result::Ok(()) => { /* ok */ }\n       result::Err(ref err) => {\n-          handle_err(sp, expected, actual, err);\n+          handle_err(sp, ty_a, ty_b, err);\n       }\n     }\n }"}, {"sha": "c52670768e4ad57740d39543a19982a177343961", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7f5d4cbda027482cfeb554c5bc30551377a668a2/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f5d4cbda027482cfeb554c5bc30551377a668a2/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=7f5d4cbda027482cfeb554c5bc30551377a668a2", "patch": "@@ -355,7 +355,8 @@ pub fn check_fn(ccx: @mut CrateCtxt,\n         let tail_expr_ty = fcx.expr_ty(tail_expr);\n         // Special case: we print a special error if there appears\n         // to be do-block/for-loop confusion\n-        demand::suptype_with_fn(fcx, tail_expr.span, fcx.ret_ty, tail_expr_ty,\n+        demand::suptype_with_fn(fcx, tail_expr.span, false,\n+            fcx.ret_ty, tail_expr_ty,\n             |sp, e, a, s| {\n                 fcx.report_mismatched_return_types(sp, e, a, s) });\n       }"}, {"sha": "18b5d290f3d6dc8c57204d3c5e1c2c6d3e2ab06d", "filename": "src/test/compile-fail/issue-3680.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f5d4cbda027482cfeb554c5bc30551377a668a2/src%2Ftest%2Fcompile-fail%2Fissue-3680.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f5d4cbda027482cfeb554c5bc30551377a668a2/src%2Ftest%2Fcompile-fail%2Fissue-3680.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3680.rs?ref=7f5d4cbda027482cfeb554c5bc30551377a668a2", "patch": "@@ -10,6 +10,6 @@\n \n fn main() {\n     match None {\n-            Err(_) => () //~ ERROR expected `core::result\n+        Err(_) => () //~ ERROR mismatched types: expected `core::option::Option<<V1>>` but found `core::result::Result<<V2>,<V3>>`\n     }\n }"}, {"sha": "6e9bf603aef9e7e3759caa9a536d08511b198613", "filename": "src/test/compile-fail/match-struct.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7f5d4cbda027482cfeb554c5bc30551377a668a2/src%2Ftest%2Fcompile-fail%2Fmatch-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f5d4cbda027482cfeb554c5bc30551377a668a2/src%2Ftest%2Fcompile-fail%2Fmatch-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmatch-struct.rs?ref=7f5d4cbda027482cfeb554c5bc30551377a668a2", "patch": "@@ -1,11 +1,10 @@\n-// error-pattern: mismatched types\n \n struct S { a: int }\n enum E { C(int) }\n \n fn main() {\n     match S { a: 1 } {\n-        C(_) => (),\n+        C(_) => (), //~ ERROR mismatched types: expected `S` but found `E`\n         _ => ()\n     }\n }"}]}