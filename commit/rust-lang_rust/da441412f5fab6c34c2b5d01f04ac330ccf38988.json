{"sha": "da441412f5fab6c34c2b5d01f04ac330ccf38988", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhNDQxNDEyZjVmYWI2YzM0YzJiNWQwMWYwNGFjMzMwY2NmMzg5ODg=", "commit": {"author": {"name": "Alexander Regueiro", "email": "alexreg@me.com", "date": "2019-07-05T17:22:26Z"}, "committer": {"name": "Alexander Regueiro", "email": "alexreg@me.com", "date": "2019-07-06T02:31:18Z"}, "message": "Fixed ICEs.", "tree": {"sha": "c298254498bc5060bb653e39dbc4649b3982b7ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c298254498bc5060bb653e39dbc4649b3982b7ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da441412f5fab6c34c2b5d01f04ac330ccf38988", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da441412f5fab6c34c2b5d01f04ac330ccf38988", "html_url": "https://github.com/rust-lang/rust/commit/da441412f5fab6c34c2b5d01f04ac330ccf38988", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da441412f5fab6c34c2b5d01f04ac330ccf38988/comments", "author": {"login": "alexreg", "id": 67036, "node_id": "MDQ6VXNlcjY3MDM2", "avatar_url": "https://avatars.githubusercontent.com/u/67036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexreg", "html_url": "https://github.com/alexreg", "followers_url": "https://api.github.com/users/alexreg/followers", "following_url": "https://api.github.com/users/alexreg/following{/other_user}", "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions", "organizations_url": "https://api.github.com/users/alexreg/orgs", "repos_url": "https://api.github.com/users/alexreg/repos", "events_url": "https://api.github.com/users/alexreg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexreg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexreg", "id": 67036, "node_id": "MDQ6VXNlcjY3MDM2", "avatar_url": "https://avatars.githubusercontent.com/u/67036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexreg", "html_url": "https://github.com/alexreg", "followers_url": "https://api.github.com/users/alexreg/followers", "following_url": "https://api.github.com/users/alexreg/following{/other_user}", "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions", "organizations_url": "https://api.github.com/users/alexreg/orgs", "repos_url": "https://api.github.com/users/alexreg/repos", "events_url": "https://api.github.com/users/alexreg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexreg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac9dd1bd0cb6a2c1c86f52f3331db20768704de5", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac9dd1bd0cb6a2c1c86f52f3331db20768704de5", "html_url": "https://github.com/rust-lang/rust/commit/ac9dd1bd0cb6a2c1c86f52f3331db20768704de5"}], "stats": {"total": 12, "additions": 1, "deletions": 11}, "files": [{"sha": "e5dcca4779b4beda3940de3aed2ead6912592e9e", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/da441412f5fab6c34c2b5d01f04ac330ccf38988/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da441412f5fab6c34c2b5d01f04ac330ccf38988/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=da441412f5fab6c34c2b5d01f04ac330ccf38988", "patch": "@@ -2518,17 +2518,7 @@ impl<'a> Resolver<'a> {\n         debug!(\"(resolving item) resolving {} ({:?})\", name, item.node);\n \n         match item.node {\n-            ItemKind::Ty(_, ref generics) => {\n-                self.with_current_self_item(item, |this| {\n-                    this.with_generic_param_rib(HasGenericParams(generics, ItemRibKind), |this| {\n-                        let item_def_id = this.definitions.local_def_id(item.id);\n-                        this.with_self_rib(Res::SelfTy(Some(item_def_id), None), |this| {\n-                            visit::walk_item(this, item)\n-                        })\n-                    })\n-                });\n-            }\n-\n+            ItemKind::Ty(_, ref generics) |\n             ItemKind::Existential(_, ref generics) |\n             ItemKind::Fn(_, _, ref generics, _) => {\n                 self.with_generic_param_rib("}]}