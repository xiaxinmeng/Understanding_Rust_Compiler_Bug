{"sha": "878a4ff90e5987027f8ce3d350faaad02e0c83c9", "node_id": "C_kwDOAAsO6NoAKDg3OGE0ZmY5MGU1OTg3MDI3ZjhjZTNkMzUwZmFhYWQwMmUwYzgzYzk", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-03-03T00:09:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-03T00:09:15Z"}, "message": "Rollup merge of #94529 - GuillaumeGomez:unused-doc-comments-blocks, r=estebank\n\nUnused doc comments blocks\n\nFixes #77030.", "tree": {"sha": "58c9e240fbbb366d99880f74d49ab390c79285fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58c9e240fbbb366d99880f74d49ab390c79285fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/878a4ff90e5987027f8ce3d350faaad02e0c83c9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiIAcrCRBK7hj4Ov3rIwAAjncIAADgZjMYxX2z9pABp3MxxhEF\nP8wnD5aqfZ+70ozArFs+gxokegMBXxNFGAzIcJPVBOgT4q4v+Bm8u5hDOK3aWo/U\nrff+QvZKc4RV6MKXAXlFwzw93rpQ2G9Q/2tDjSj6KTtBFMi8bW34b3A58zPCsoDV\nKfC//L4xfejYoToxai0dHduth7iiWZmS0egwQAxTJQP6UjpmYY4RA9eDrnpN0Vih\nO4IxIDkEL3WBAVhQ5ZDfjNZ0R/VA3RR3v/DSdtyE6i4Tb9Vrbvc2asl822/1D9GH\n1sST/eemjOAE6Q9zJi1dnMQSRVqqCAI5Ba1pAnCXdqC2penmoMWnjQ1rvNw/ggY=\n=77Kn\n-----END PGP SIGNATURE-----\n", "payload": "tree 58c9e240fbbb366d99880f74d49ab390c79285fb\nparent 3e6abf0c35da7e6906033ba6020af45f0dcab28d\nparent 6f0eb2a4e17a952302f4ee8e0a2cc7c43d71d766\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1646266155 +0100\ncommitter GitHub <noreply@github.com> 1646266155 +0100\n\nRollup merge of #94529 - GuillaumeGomez:unused-doc-comments-blocks, r=estebank\n\nUnused doc comments blocks\n\nFixes #77030.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/878a4ff90e5987027f8ce3d350faaad02e0c83c9", "html_url": "https://github.com/rust-lang/rust/commit/878a4ff90e5987027f8ce3d350faaad02e0c83c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/878a4ff90e5987027f8ce3d350faaad02e0c83c9/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e6abf0c35da7e6906033ba6020af45f0dcab28d", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e6abf0c35da7e6906033ba6020af45f0dcab28d", "html_url": "https://github.com/rust-lang/rust/commit/3e6abf0c35da7e6906033ba6020af45f0dcab28d"}, {"sha": "6f0eb2a4e17a952302f4ee8e0a2cc7c43d71d766", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f0eb2a4e17a952302f4ee8e0a2cc7c43d71d766", "html_url": "https://github.com/rust-lang/rust/commit/6f0eb2a4e17a952302f4ee8e0a2cc7c43d71d766"}], "stats": {"total": 65, "additions": 58, "deletions": 7}, "files": [{"sha": "6e9e0332faf604c7ba033cb1a0bf26de8d5ddafb", "filename": "compiler/rustc_codegen_llvm/src/llvm/ffi.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/878a4ff90e5987027f8ce3d350faaad02e0c83c9/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/878a4ff90e5987027f8ce3d350faaad02e0c83c9/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs?ref=878a4ff90e5987027f8ce3d350faaad02e0c83c9", "patch": "@@ -576,12 +576,12 @@ pub enum PassKind {\n     Module,\n }\n \n-/// LLVMRustThinLTOData\n+// LLVMRustThinLTOData\n extern \"C\" {\n     pub type ThinLTOData;\n }\n \n-/// LLVMRustThinLTOBuffer\n+// LLVMRustThinLTOBuffer\n extern \"C\" {\n     pub type ThinLTOBuffer;\n }"}, {"sha": "72b8d8bb297a6b8a486814726ddf34851b73ac31", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/878a4ff90e5987027f8ce3d350faaad02e0c83c9/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/878a4ff90e5987027f8ce3d350faaad02e0c83c9/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=878a4ff90e5987027f8ce3d350faaad02e0c83c9", "patch": "@@ -1086,6 +1086,16 @@ impl EarlyLintPass for UnusedDocComment {\n     fn check_generic_param(&mut self, cx: &EarlyContext<'_>, param: &ast::GenericParam) {\n         warn_if_doc(cx, param.ident.span, \"generic parameters\", &param.attrs);\n     }\n+\n+    fn check_block(&mut self, cx: &EarlyContext<'_>, block: &ast::Block) {\n+        warn_if_doc(cx, block.span, \"block\", &block.attrs());\n+    }\n+\n+    fn check_item(&mut self, cx: &EarlyContext<'_>, item: &ast::Item) {\n+        if let ast::ItemKind::ForeignMod(_) = item.kind {\n+            warn_if_doc(cx, item.span, \"extern block\", &item.attrs);\n+        }\n+    }\n }\n \n declare_lint! {"}, {"sha": "cf2c0a02351ed2fe3d7f332670b3a36057f258cd", "filename": "library/portable-simd/crates/core_simd/src/intrinsics.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/878a4ff90e5987027f8ce3d350faaad02e0c83c9/library%2Fportable-simd%2Fcrates%2Fcore_simd%2Fsrc%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/878a4ff90e5987027f8ce3d350faaad02e0c83c9/library%2Fportable-simd%2Fcrates%2Fcore_simd%2Fsrc%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fportable-simd%2Fcrates%2Fcore_simd%2Fsrc%2Fintrinsics.rs?ref=878a4ff90e5987027f8ce3d350faaad02e0c83c9", "patch": "@@ -18,9 +18,10 @@\n //!\n //! Unless stated otherwise, all intrinsics for binary operations require SIMD vectors of equal types and lengths.\n \n-/// These intrinsics aren't linked directly from LLVM and are mostly undocumented, however they are\n-/// mostly lowered to the matching LLVM instructions by the compiler in a fairly straightforward manner.\n-/// The associated LLVM instruction or intrinsic is documented alongside each Rust intrinsic function.\n+\n+// These intrinsics aren't linked directly from LLVM and are mostly undocumented, however they are\n+// mostly lowered to the matching LLVM instructions by the compiler in a fairly straightforward manner.\n+// The associated LLVM instruction or intrinsic is documented alongside each Rust intrinsic function.\n extern \"platform-intrinsic\" {\n     /// add/fadd\n     pub(crate) fn simd_add<T>(x: T, y: T) -> T;"}, {"sha": "bcbe010614f398ec86f3a9274d22e33e5f2ee60b", "filename": "library/stdarch", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstdarch?ref=878a4ff90e5987027f8ce3d350faaad02e0c83c9", "patch": "@@ -1 +1 @@\n-Subproject commit b4a0e07552cf90ef8f1a5b775bf70e4db94b3d63\n+Subproject commit bcbe010614f398ec86f3a9274d22e33e5f2ee60b"}, {"sha": "54d86c31fb4fbb0e97e3854ae4bebb6be1b779d0", "filename": "src/test/ui/lint/unused/unused-doc-comments-edge-cases.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/878a4ff90e5987027f8ce3d350faaad02e0c83c9/src%2Ftest%2Fui%2Flint%2Funused%2Funused-doc-comments-edge-cases.rs", "raw_url": "https://github.com/rust-lang/rust/raw/878a4ff90e5987027f8ce3d350faaad02e0c83c9/src%2Ftest%2Fui%2Flint%2Funused%2Funused-doc-comments-edge-cases.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused%2Funused-doc-comments-edge-cases.rs?ref=878a4ff90e5987027f8ce3d350faaad02e0c83c9", "patch": "@@ -29,4 +29,18 @@ fn doc_comment_on_expr(num: u8) -> bool {\n fn doc_comment_on_generic<#[doc = \"x\"] T>(val: T) {}\n //~^ ERROR: unused doc comment\n \n+fn doc_comment_on_block() {\n+    /// unused doc comment\n+    //~^ ERROR: unused doc comment\n+    {\n+        let x = 12;\n+    }\n+}\n+\n+/// unused doc comment\n+//~^ ERROR: unused doc comment\n+extern \"C\" {\n+    fn foo();\n+}\n+\n fn main() {}"}, {"sha": "30a96af583af77d3a841b4e5cd2fd91cb1a9c662", "filename": "src/test/ui/lint/unused/unused-doc-comments-edge-cases.stderr", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/878a4ff90e5987027f8ce3d350faaad02e0c83c9/src%2Ftest%2Fui%2Flint%2Funused%2Funused-doc-comments-edge-cases.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/878a4ff90e5987027f8ce3d350faaad02e0c83c9/src%2Ftest%2Fui%2Flint%2Funused%2Funused-doc-comments-edge-cases.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused%2Funused-doc-comments-edge-cases.stderr?ref=878a4ff90e5987027f8ce3d350faaad02e0c83c9", "patch": "@@ -49,6 +49,32 @@ LL | fn doc_comment_on_generic<#[doc = \"x\"] T>(val: T) {}\n    |\n    = help: use `//` for a plain comment\n \n+error: unused doc comment\n+  --> $DIR/unused-doc-comments-edge-cases.rs:33:5\n+   |\n+LL |       /// unused doc comment\n+   |       ^^^^^^^^^^^^^^^^^^^^^^\n+LL |\n+LL | /     {\n+LL | |         let x = 12;\n+LL | |     }\n+   | |_____- rustdoc does not generate documentation for expressions\n+   |\n+   = help: use `//` for a plain comment\n+\n+error: unused doc comment\n+  --> $DIR/unused-doc-comments-edge-cases.rs:40:1\n+   |\n+LL |   /// unused doc comment\n+   |   ^^^^^^^^^^^^^^^^^^^^^^\n+LL |\n+LL | / extern \"C\" {\n+LL | |     fn foo();\n+LL | | }\n+   | |_- rustdoc does not generate documentation for extern block\n+   |\n+   = help: use `//` for a plain comment\n+\n error[E0308]: mismatched types\n   --> $DIR/unused-doc-comments-edge-cases.rs:14:9\n    |\n@@ -63,7 +89,7 @@ help: you might have meant to return this value\n LL |         return true;\n    |         ++++++     +\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 8 previous errors\n \n Some errors have detailed explanations: E0308, E0658.\n For more information about an error, try `rustc --explain E0308`."}]}