{"sha": "842af362685979e011e0360984dc1ec96ba5b7e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0MmFmMzYyNjg1OTc5ZTAxMWUwMzYwOTg0ZGMxZWM5NmJhNWI3ZTk=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2020-03-04T14:21:01Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2020-03-04T14:21:01Z"}, "message": "Make PlaceRef lifetimes of borrow_conflict_place be both 'tcx", "tree": {"sha": "691c272e003acfcafdd4bb296460f50c86dbf5ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/691c272e003acfcafdd4bb296460f50c86dbf5ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/842af362685979e011e0360984dc1ec96ba5b7e9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAl5fuU0ACgkQgTGiTgx5\n769YiRAAjRQbUnQ9f7Lccs9QJy8zYtJcjL6vBmXYkj4YcexNqtrUDjB0WV1MxBwo\nu7u23nRIk3KIwInq2+WbiYymGBZWtnyzIlFPxXGTJRuF+AJ8PZ87+KlNI6mYy99R\nJJAHndC71OEp548pwObyhikSD7sBqUtTX1mY2pZGQM6pNsaOdCQSxRrcdXSo8sWb\nH9TdyrF/9Irhh7BQ9CrxPecK21I6kVTqtcwPGTDczxWMo9FNsdJmhKH3QanChnD8\n4aeuJGL8LnD/OW3pCQ8/AJcAgminyVHPx18c3BPLv0buVCjxIkipThlPO8+VLqjh\nuEtyy7RqkjLwbO0m/kZBWA4BNE6I1LCdBaRbwUJuqJBnzRAFQ/G/y6LPvyobJbDs\nL1wr/sfLFS693QX79hVr8QJ//MjJcDrMqWuJ4iPCBt2qJmqX4GpcoNGvAfyLPIbh\ngcUK71pYMYQxeFASaq7fLIR0ZE9tZNfODd+Dpb0hL3rjeBt9v1UqcUYIFi7n0wuX\nDhkNEsH3bt7VMVWTEPg6ddcvIW4+uhwDyJn9WvHZ2RykwixGSDYmlDLfeRN8UgOX\nS7Hi97OPhlsDQaUdnzbq4h+z3HU2SXmnj9sV2p918j/AsyjA5VmnO6+drZFYM9ZN\ndu/pc1sub6Aj4p+IMy7kyZZMA4tkucUGH82hSf0JktWOhS/b9YM=\n=k9Jg\n-----END PGP SIGNATURE-----", "payload": "tree 691c272e003acfcafdd4bb296460f50c86dbf5ec\nparent a20d54f00cb4b5386e1b307bc1c990eac02184da\nauthor Santiago Pastorino <spastorino@gmail.com> 1583331661 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1583331661 -0300\n\nMake PlaceRef lifetimes of borrow_conflict_place be both 'tcx\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/842af362685979e011e0360984dc1ec96ba5b7e9", "html_url": "https://github.com/rust-lang/rust/commit/842af362685979e011e0360984dc1ec96ba5b7e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/842af362685979e011e0360984dc1ec96ba5b7e9/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a20d54f00cb4b5386e1b307bc1c990eac02184da", "url": "https://api.github.com/repos/rust-lang/rust/commits/a20d54f00cb4b5386e1b307bc1c990eac02184da", "html_url": "https://github.com/rust-lang/rust/commit/a20d54f00cb4b5386e1b307bc1c990eac02184da"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "84c9f733be058273d06ab01876a4a09ae6bd46cf", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/842af362685979e011e0360984dc1ec96ba5b7e9/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/842af362685979e011e0360984dc1ec96ba5b7e9/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=842af362685979e011e0360984dc1ec96ba5b7e9", "patch": "@@ -86,6 +86,8 @@ crate struct Upvar {\n     mutability: Mutability,\n }\n \n+const DEREF_PROJECTION: &[PlaceElem<'_>; 1] = &[ProjectionElem::Deref];\n+\n pub fn provide(providers: &mut Providers<'_>) {\n     *providers = Providers { mir_borrowck, ..*providers };\n }\n@@ -1413,7 +1415,6 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n     ) {\n         debug!(\"check_for_invalidation_at_exit({:?})\", borrow);\n         let place = &borrow.borrowed_place;\n-        let deref = [ProjectionElem::Deref];\n         let mut root_place = PlaceRef { local: place.local, projection: &[] };\n \n         // FIXME(nll-rfc#40): do more precise destructor tracking here. For now\n@@ -1427,7 +1428,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n                 // Thread-locals might be dropped after the function exits\n                 // We have to dereference the outer reference because\n                 // borrows don't conflict behind shared references.\n-                root_place.projection = &deref;\n+                root_place.projection = DEREF_PROJECTION;\n                 (true, true)\n             } else {\n                 (false, self.locals_are_invalidated_at_exit)"}, {"sha": "1f90b94cfcdc3f86c2c2b11feb24cdede30a85bd", "filename": "src/librustc_mir/borrow_check/places_conflict.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/842af362685979e011e0360984dc1ec96ba5b7e9/src%2Flibrustc_mir%2Fborrow_check%2Fplaces_conflict.rs", "raw_url": "https://github.com/rust-lang/rust/raw/842af362685979e011e0360984dc1ec96ba5b7e9/src%2Flibrustc_mir%2Fborrow_check%2Fplaces_conflict.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fplaces_conflict.rs?ref=842af362685979e011e0360984dc1ec96ba5b7e9", "patch": "@@ -48,7 +48,7 @@ pub(super) fn borrow_conflicts_with_place<'tcx>(\n     body: &Body<'tcx>,\n     borrow_place: &Place<'tcx>,\n     borrow_kind: BorrowKind,\n-    access_place: PlaceRef<'_, 'tcx>,\n+    access_place: PlaceRef<'tcx, 'tcx>,\n     access: AccessDepth,\n     bias: PlaceConflictBias,\n ) -> bool {\n@@ -73,7 +73,7 @@ fn place_components_conflict<'tcx>(\n     body: &Body<'tcx>,\n     borrow_place: &Place<'tcx>,\n     borrow_kind: BorrowKind,\n-    access_place: PlaceRef<'_, 'tcx>,\n+    access_place: PlaceRef<'tcx, 'tcx>,\n     access: AccessDepth,\n     bias: PlaceConflictBias,\n ) -> bool {"}]}