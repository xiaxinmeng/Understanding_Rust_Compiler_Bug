{"sha": "9083cb24b2739e04ea1e0a90a14740939f8cfeed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwODNjYjI0YjI3MzllMDRlYTFlMGE5MGExNDc0MDkzOWY4Y2ZlZWQ=", "commit": {"author": {"name": "Kang Seonghoon", "email": "public+git@mearie.org", "date": "2014-02-26T17:09:15Z"}, "committer": {"name": "Kang Seonghoon", "email": "public+git@mearie.org", "date": "2014-02-26T17:14:46Z"}, "message": "rustc: Explicitly mention type params with missing `'static` bounds\n\nAlso renames `check_durable` to `check_static` and removes the outdated\ncomment.", "tree": {"sha": "716f686baf346ef3902b921164d61999ae8906bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/716f686baf346ef3902b921164d61999ae8906bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9083cb24b2739e04ea1e0a90a14740939f8cfeed", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9083cb24b2739e04ea1e0a90a14740939f8cfeed", "html_url": "https://github.com/rust-lang/rust/commit/9083cb24b2739e04ea1e0a90a14740939f8cfeed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9083cb24b2739e04ea1e0a90a14740939f8cfeed/comments", "author": {"login": "lifthrasiir", "id": 323836, "node_id": "MDQ6VXNlcjMyMzgzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/323836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lifthrasiir", "html_url": "https://github.com/lifthrasiir", "followers_url": "https://api.github.com/users/lifthrasiir/followers", "following_url": "https://api.github.com/users/lifthrasiir/following{/other_user}", "gists_url": "https://api.github.com/users/lifthrasiir/gists{/gist_id}", "starred_url": "https://api.github.com/users/lifthrasiir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lifthrasiir/subscriptions", "organizations_url": "https://api.github.com/users/lifthrasiir/orgs", "repos_url": "https://api.github.com/users/lifthrasiir/repos", "events_url": "https://api.github.com/users/lifthrasiir/events{/privacy}", "received_events_url": "https://api.github.com/users/lifthrasiir/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lifthrasiir", "id": 323836, "node_id": "MDQ6VXNlcjMyMzgzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/323836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lifthrasiir", "html_url": "https://github.com/lifthrasiir", "followers_url": "https://api.github.com/users/lifthrasiir/followers", "following_url": "https://api.github.com/users/lifthrasiir/following{/other_user}", "gists_url": "https://api.github.com/users/lifthrasiir/gists{/gist_id}", "starred_url": "https://api.github.com/users/lifthrasiir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lifthrasiir/subscriptions", "organizations_url": "https://api.github.com/users/lifthrasiir/orgs", "repos_url": "https://api.github.com/users/lifthrasiir/repos", "events_url": "https://api.github.com/users/lifthrasiir/events{/privacy}", "received_events_url": "https://api.github.com/users/lifthrasiir/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05a2d32acd7e682854a188697ee404cbd001bf38", "url": "https://api.github.com/repos/rust-lang/rust/commits/05a2d32acd7e682854a188697ee404cbd001bf38", "html_url": "https://github.com/rust-lang/rust/commit/05a2d32acd7e682854a188697ee404cbd001bf38"}], "stats": {"total": 42, "additions": 36, "deletions": 6}, "files": [{"sha": "672a3e44ccba2fc7e2940db3203b93808ba74a77", "filename": "src/librustc/middle/kind.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9083cb24b2739e04ea1e0a90a14740939f8cfeed/src%2Flibrustc%2Fmiddle%2Fkind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9083cb24b2739e04ea1e0a90a14740939f8cfeed/src%2Flibrustc%2Fmiddle%2Fkind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fkind.rs?ref=9083cb24b2739e04ea1e0a90a14740939f8cfeed", "patch": "@@ -315,7 +315,7 @@ pub fn check_expr(cx: &mut Context, e: &Expr) {\n     match e.node {\n         ExprUnary(UnBox, interior) => {\n             let interior_type = ty::expr_ty(cx.tcx, interior);\n-            let _ = check_durable(cx.tcx, interior_type, interior.span);\n+            let _ = check_static(cx.tcx, interior_type, interior.span);\n         }\n         ExprCast(source, _) => {\n             let source_ty = ty::expr_ty(cx.tcx, source);\n@@ -474,13 +474,13 @@ pub fn check_send(cx: &Context, ty: ty::t, sp: Span) -> bool {\n     }\n }\n \n-// note: also used from middle::typeck::regionck!\n-pub fn check_durable(tcx: ty::ctxt, ty: ty::t, sp: Span) -> bool {\n+pub fn check_static(tcx: ty::ctxt, ty: ty::t, sp: Span) -> bool {\n     if !ty::type_is_static(tcx, ty) {\n         match ty::get(ty).sty {\n           ty::ty_param(..) => {\n-            tcx.sess.span_err(sp, \"value may contain references; \\\n-                                   add `'static` bound\");\n+            tcx.sess.span_err(sp,\n+                format!(\"value may contain references; \\\n+                         add `'static` bound to `{}`\", ty_to_str(tcx, ty)));\n           }\n           _ => {\n             tcx.sess.span_err(sp, \"value may contain references\");\n@@ -578,7 +578,7 @@ pub fn check_cast_for_escaping_regions(\n                     if target_params.iter().any(|x| x == &source_param) {\n                         /* case (2) */\n                     } else {\n-                        check_durable(cx.tcx, ty, source_span); /* case (3) */\n+                        check_static(cx.tcx, ty, source_span); /* case (3) */\n                     }\n                 }\n                 _ => {}"}, {"sha": "508633d2941463537678298486ed9304de44f5d5", "filename": "src/test/compile-fail/owned-ptr-static-bound.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/9083cb24b2739e04ea1e0a90a14740939f8cfeed/src%2Ftest%2Fcompile-fail%2Fowned-ptr-static-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9083cb24b2739e04ea1e0a90a14740939f8cfeed/src%2Ftest%2Fcompile-fail%2Fowned-ptr-static-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fowned-ptr-static-bound.rs?ref=9083cb24b2739e04ea1e0a90a14740939f8cfeed", "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait A<T> {}\n+struct B<'a, T>(&'a A<T>);\n+\n+trait X {}\n+impl<'a, T> X for B<'a, T> {}\n+\n+fn f<'a, T, U>(v: ~A<T>) -> ~X: {\n+    ~B(v) as ~X: //~ ERROR value may contain references; add `'static` bound to `T`\n+}\n+\n+fn g<'a, T, U>(v: ~A<U>) -> ~X: {\n+    ~B(v) as ~X: //~ ERROR value may contain references; add `'static` bound to `U`\n+}\n+\n+fn h<'a, T: 'static>(v: ~A<T>) -> ~X: {\n+    ~B(v) as ~X: // ok\n+}\n+\n+fn main() {}\n+"}]}