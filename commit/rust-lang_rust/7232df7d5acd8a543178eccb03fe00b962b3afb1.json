{"sha": "7232df7d5acd8a543178eccb03fe00b962b3afb1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyMzJkZjdkNWFjZDhhNTQzMTc4ZWNjYjAzZmUwMGI5NjJiM2FmYjE=", "commit": {"author": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2018-04-29T22:28:39Z"}, "committer": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2018-04-29T22:28:39Z"}, "message": "rustdoc: Fix links to constants in external crates", "tree": {"sha": "e0788f8a9c11f810a15b00125bf60bf7e2349ed2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0788f8a9c11f810a15b00125bf60bf7e2349ed2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7232df7d5acd8a543178eccb03fe00b962b3afb1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7232df7d5acd8a543178eccb03fe00b962b3afb1", "html_url": "https://github.com/rust-lang/rust/commit/7232df7d5acd8a543178eccb03fe00b962b3afb1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7232df7d5acd8a543178eccb03fe00b962b3afb1/comments", "author": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "207bc403799e4a8a04f873be94834ccc09c1412b", "url": "https://api.github.com/repos/rust-lang/rust/commits/207bc403799e4a8a04f873be94834ccc09c1412b", "html_url": "https://github.com/rust-lang/rust/commit/207bc403799e4a8a04f873be94834ccc09c1412b"}], "stats": {"total": 104, "additions": 104, "deletions": 0}, "files": [{"sha": "bd64ac67ac93eaa789529951a941ef05ad1580ea", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7232df7d5acd8a543178eccb03fe00b962b3afb1/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7232df7d5acd8a543178eccb03fe00b962b3afb1/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=7232df7d5acd8a543178eccb03fe00b962b3afb1", "patch": "@@ -3881,6 +3881,7 @@ fn register_def(cx: &DocContext, def: Def) -> DefId {\n         Def::Union(i) => (i, TypeKind::Union),\n         Def::Mod(i) => (i, TypeKind::Module),\n         Def::TyForeign(i) => (i, TypeKind::Foreign),\n+        Def::Const(i) => (i, TypeKind::Const),\n         Def::Static(i, _) => (i, TypeKind::Static),\n         Def::Variant(i) => (cx.tcx.parent_def_id(i).unwrap(), TypeKind::Enum),\n         Def::Macro(i, _) => (i, TypeKind::Macro),"}, {"sha": "19a0b88ce7d72d571efb18bee557e4967229fda7", "filename": "src/test/rustdoc/auxiliary/all-item-types.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/7232df7d5acd8a543178eccb03fe00b962b3afb1/src%2Ftest%2Frustdoc%2Fauxiliary%2Fall-item-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7232df7d5acd8a543178eccb03fe00b962b3afb1/src%2Ftest%2Frustdoc%2Fauxiliary%2Fall-item-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fauxiliary%2Fall-item-types.rs?ref=7232df7d5acd8a543178eccb03fe00b962b3afb1", "patch": "@@ -0,0 +1,32 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(extern_types)]\n+\n+pub mod foo_mod {}\n+extern \"C\" {\n+    pub fn foo_ffn();\n+    pub static FOO_FSTATIC: FooStruct;\n+    pub type FooFType;\n+}\n+pub fn foo_fn() {}\n+pub trait FooTrait {}\n+pub struct FooStruct;\n+pub enum FooEnum {}\n+pub union FooUnion {\n+    x: (),\n+}\n+pub type FooType = FooStruct;\n+pub static FOO_STATIC: FooStruct = FooStruct;\n+pub const FOO_CONSTANT: FooStruct = FooStruct;\n+#[macro_export]\n+macro_rules! foo_macro {\n+    () => ();\n+}"}, {"sha": "15a774dc9353d57fb905066f3a6f65b73509384f", "filename": "src/test/rustdoc/cross-crate-links.rs", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/rust-lang/rust/blob/7232df7d5acd8a543178eccb03fe00b962b3afb1/src%2Ftest%2Frustdoc%2Fcross-crate-links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7232df7d5acd8a543178eccb03fe00b962b3afb1/src%2Ftest%2Frustdoc%2Fcross-crate-links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fcross-crate-links.rs?ref=7232df7d5acd8a543178eccb03fe00b962b3afb1", "patch": "@@ -0,0 +1,71 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:all-item-types.rs\n+// build-aux-docs\n+\n+#![feature(use_extern_macros)]\n+\n+#![crate_name = \"foo\"]\n+\n+#[macro_use]\n+extern crate all_item_types;\n+\n+// @has 'foo/index.html' '//a[@href=\"../all_item_types/foo_mod/index.html\"]' 'foo_mod'\n+#[doc(no_inline)]\n+pub use all_item_types::foo_mod;\n+\n+// @has 'foo/index.html' '//a[@href=\"../all_item_types/fn.foo_ffn.html\"]' 'foo_ffn'\n+#[doc(no_inline)]\n+pub use all_item_types::foo_ffn;\n+\n+// @has 'foo/index.html' '//a[@href=\"../all_item_types/static.FOO_FSTATIC.html\"]' 'FOO_FSTATIC'\n+#[doc(no_inline)]\n+pub use all_item_types::FOO_FSTATIC;\n+\n+// @has 'foo/index.html' '//a[@href=\"../all_item_types/foreigntype.FooFType.html\"]' 'FooFType'\n+#[doc(no_inline)]\n+pub use all_item_types::FooFType;\n+\n+// @has 'foo/index.html' '//a[@href=\"../all_item_types/fn.foo_fn.html\"]' 'foo_fn'\n+#[doc(no_inline)]\n+pub use all_item_types::foo_fn;\n+\n+// @has 'foo/index.html' '//a[@href=\"../all_item_types/trait.FooTrait.html\"]' 'FooTrait'\n+#[doc(no_inline)]\n+pub use all_item_types::FooTrait;\n+\n+// @has 'foo/index.html' '//a[@href=\"../all_item_types/struct.FooStruct.html\"]' 'FooStruct'\n+#[doc(no_inline)]\n+pub use all_item_types::FooStruct;\n+\n+// @has 'foo/index.html' '//a[@href=\"../all_item_types/enum.FooEnum.html\"]' 'FooEnum'\n+#[doc(no_inline)]\n+pub use all_item_types::FooEnum;\n+\n+// @has 'foo/index.html' '//a[@href=\"../all_item_types/union.FooUnion.html\"]' 'FooUnion'\n+#[doc(no_inline)]\n+pub use all_item_types::FooUnion;\n+\n+// @has 'foo/index.html' '//a[@href=\"../all_item_types/type.FooType.html\"]' 'FooType'\n+#[doc(no_inline)]\n+pub use all_item_types::FooType;\n+\n+// @has 'foo/index.html' '//a[@href=\"../all_item_types/static.FOO_STATIC.html\"]' 'FOO_STATIC'\n+#[doc(no_inline)]\n+pub use all_item_types::FOO_STATIC;\n+\n+// @has 'foo/index.html' '//a[@href=\"../all_item_types/constant.FOO_CONSTANT.html\"]' 'FOO_CONSTANT'\n+#[doc(no_inline)]\n+pub use all_item_types::FOO_CONSTANT;\n+\n+// @has 'foo/index.html' '//a[@href=\"../all_item_types/macro.foo_macro.html\"]' 'foo_macro'\n+#[doc(no_inline)]\n+pub use all_item_types::foo_macro;"}]}