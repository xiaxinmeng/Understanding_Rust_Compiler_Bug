{"sha": "1763aea7ba039235baebd8f116b91a21df39778a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3NjNhZWE3YmEwMzkyMzViYWViZDhmMTE2YjkxYTIxZGYzOTc3OGE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-03T15:33:54Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-03T15:33:54Z"}, "message": "make StringReader methods private", "tree": {"sha": "60524925b92fe0c1d4a5b354e551d25809ee8b3d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60524925b92fe0c1d4a5b354e551d25809ee8b3d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1763aea7ba039235baebd8f116b91a21df39778a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1763aea7ba039235baebd8f116b91a21df39778a", "html_url": "https://github.com/rust-lang/rust/commit/1763aea7ba039235baebd8f116b91a21df39778a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1763aea7ba039235baebd8f116b91a21df39778a/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "555309d9332677b2d73be926a604b17bf33c8c22", "url": "https://api.github.com/repos/rust-lang/rust/commits/555309d9332677b2d73be926a604b17bf33c8c22", "html_url": "https://github.com/rust-lang/rust/commit/555309d9332677b2d73be926a604b17bf33c8c22"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "d0162ef170482a37e922bd3d0fc39e49eb6b7805", "filename": "src/libsyntax/parse/lexer/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1763aea7ba039235baebd8f116b91a21df39778a/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1763aea7ba039235baebd8f116b91a21df39778a/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs?ref=1763aea7ba039235baebd8f116b91a21df39778a", "patch": "@@ -126,7 +126,7 @@ impl<'a> StringReader<'a> {\n     }\n \n     /// Immutably extract string if found at current position with given delimiters\n-    pub fn peek_delimited(&self, from_ch: char, to_ch: char) -> Option<String> {\n+    fn peek_delimited(&self, from_ch: char, to_ch: char) -> Option<String> {\n         let mut pos = self.pos;\n         let mut idx = self.src_index(pos);\n         let mut ch = char_at(&self.src, idx);\n@@ -191,7 +191,7 @@ impl<'a> StringReader<'a> {\n         self.fatal_span(self.peek_span, m)\n     }\n \n-    pub fn emit_fatal_errors(&mut self) {\n+    crate fn emit_fatal_errors(&mut self) {\n         for err in &mut self.fatal_errs {\n             err.emit();\n         }"}]}