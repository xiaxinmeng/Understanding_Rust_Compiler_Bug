{"sha": "cd0ebc43c7f0238d09bdf722409e8d77a41a37db", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkMGViYzQzYzdmMDIzOGQwOWJkZjcyMjQwOWU4ZDc3YTQxYTM3ZGI=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2019-07-01T22:34:53Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2019-07-09T19:39:25Z"}, "message": "Rename partition_mut to partition_in_place", "tree": {"sha": "3c7a30e25e96d052c45c2d918f9f0da3e8015486", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c7a30e25e96d052c45c2d918f9f0da3e8015486"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd0ebc43c7f0238d09bdf722409e8d77a41a37db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd0ebc43c7f0238d09bdf722409e8d77a41a37db", "html_url": "https://github.com/rust-lang/rust/commit/cd0ebc43c7f0238d09bdf722409e8d77a41a37db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd0ebc43c7f0238d09bdf722409e8d77a41a37db/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cdeec0a618248b9321aed338b09c94a53338626e", "url": "https://api.github.com/repos/rust-lang/rust/commits/cdeec0a618248b9321aed338b09c94a53338626e", "html_url": "https://github.com/rust-lang/rust/commit/cdeec0a618248b9321aed338b09c94a53338626e"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "45aafb4bd7fc5536bd4ef1b7d486c0f8a2d0f66f", "filename": "src/libcore/iter/traits/iterator.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/cd0ebc43c7f0238d09bdf722409e8d77a41a37db/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd0ebc43c7f0238d09bdf722409e8d77a41a37db/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Ftraits%2Fiterator.rs?ref=cd0ebc43c7f0238d09bdf722409e8d77a41a37db", "patch": "@@ -1472,10 +1472,10 @@ pub trait Iterator {\n     /// `partition()` returns a pair, all of the elements for which it returned\n     /// `true`, and all of the elements for which it returned `false`.\n     ///\n-    /// See also [`is_partitioned()`] and [`partition_mut()`].\n+    /// See also [`is_partitioned()`] and [`partition_in_place()`].\n     ///\n     /// [`is_partitioned()`]: #method.is_partitioned\n-    /// [`partition_mut()`]: #method.partition_mut\n+    /// [`partition_in_place()`]: #method.partition_in_place\n     ///\n     /// # Examples\n     ///\n@@ -1524,18 +1524,18 @@ pub trait Iterator {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(iter_partition_mut)]\n+    /// #![feature(iter_partition_in_place)]\n     ///\n     /// let mut a = [1, 2, 3, 4, 5, 6, 7];\n     ///\n     /// // Partition in-place between evens and odds\n-    /// a.iter_mut().partition_mut(|&n| n % 2 == 0);\n+    /// a.iter_mut().partition_in_place(|&n| n % 2 == 0);\n     ///\n     /// assert!(a[..3].iter().all(|&n| n % 2 == 0)); // evens\n     /// assert!(a[3..].iter().all(|&n| n % 2 == 1)); // odds\n     /// ```\n-    #[unstable(feature = \"iter_partition_mut\", reason = \"new API\", issue = \"0\")]\n-    fn partition_mut<'a, T: 'a, P>(mut self, mut predicate: P)\n+    #[unstable(feature = \"iter_partition_in_place\", reason = \"new API\", issue = \"0\")]\n+    fn partition_in_place<'a, T: 'a, P>(mut self, mut predicate: P)\n     where\n         Self: Sized + DoubleEndedIterator<Item = &'a mut T>,\n         P: FnMut(&T) -> bool,\n@@ -1553,10 +1553,10 @@ pub trait Iterator {\n     /// Checks if the elements of this iterator are partitioned according to the given predicate,\n     /// such that all those that return `true` precede all those that return `false`.\n     ///\n-    /// See also [`partition()`] and [`partition_mut()`].\n+    /// See also [`partition()`] and [`partition_in_place()`].\n     ///\n     /// [`partition()`]: #method.partition\n-    /// [`partition_mut()`]: #method.partition_mut\n+    /// [`partition_in_place()`]: #method.partition_in_place\n     ///\n     /// # Examples\n     ///"}]}