{"sha": "f88c94d8d2c74402d6f72607a47c4850dcdf3b4d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4OGM5NGQ4ZDJjNzQ0MDJkNmY3MjYwN2E0N2M0ODUwZGNkZjNiNGQ=", "commit": {"author": {"name": "Ms2ger", "email": "ms2ger@gmail.com", "date": "2015-01-24T18:13:36Z"}, "committer": {"name": "Ms2ger", "email": "ms2ger@gmail.com", "date": "2015-01-28T08:39:28Z"}, "message": "Simplify the implementation of segments_name_eq.", "tree": {"sha": "eed649a437caae9d7adfc7eedb0c6927bd52ba42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eed649a437caae9d7adfc7eedb0c6927bd52ba42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f88c94d8d2c74402d6f72607a47c4850dcdf3b4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f88c94d8d2c74402d6f72607a47c4850dcdf3b4d", "html_url": "https://github.com/rust-lang/rust/commit/f88c94d8d2c74402d6f72607a47c4850dcdf3b4d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f88c94d8d2c74402d6f72607a47c4850dcdf3b4d/comments", "author": {"login": "Ms2ger", "id": 111161, "node_id": "MDQ6VXNlcjExMTE2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/111161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ms2ger", "html_url": "https://github.com/Ms2ger", "followers_url": "https://api.github.com/users/Ms2ger/followers", "following_url": "https://api.github.com/users/Ms2ger/following{/other_user}", "gists_url": "https://api.github.com/users/Ms2ger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ms2ger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ms2ger/subscriptions", "organizations_url": "https://api.github.com/users/Ms2ger/orgs", "repos_url": "https://api.github.com/users/Ms2ger/repos", "events_url": "https://api.github.com/users/Ms2ger/events{/privacy}", "received_events_url": "https://api.github.com/users/Ms2ger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ms2ger", "id": 111161, "node_id": "MDQ6VXNlcjExMTE2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/111161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ms2ger", "html_url": "https://github.com/Ms2ger", "followers_url": "https://api.github.com/users/Ms2ger/followers", "following_url": "https://api.github.com/users/Ms2ger/following{/other_user}", "gists_url": "https://api.github.com/users/Ms2ger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ms2ger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ms2ger/subscriptions", "organizations_url": "https://api.github.com/users/Ms2ger/orgs", "repos_url": "https://api.github.com/users/Ms2ger/repos", "events_url": "https://api.github.com/users/Ms2ger/events{/privacy}", "received_events_url": "https://api.github.com/users/Ms2ger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0a9a39b1eb6a5fd152332392b7c4b1cd08a92c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0a9a39b1eb6a5fd152332392b7c4b1cd08a92c6", "html_url": "https://github.com/rust-lang/rust/commit/d0a9a39b1eb6a5fd152332392b7c4b1cd08a92c6"}], "stats": {"total": 21, "additions": 7, "deletions": 14}, "files": [{"sha": "07d3290d410f707451ed98ad7d4ab56cf2fdaa3c", "filename": "src/libsyntax/ast_util.rs", "status": "modified", "additions": 7, "deletions": 14, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/f88c94d8d2c74402d6f72607a47c4850dcdf3b4d/src%2Flibsyntax%2Fast_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f88c94d8d2c74402d6f72607a47c4850dcdf3b4d/src%2Flibsyntax%2Fast_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_util.rs?ref=f88c94d8d2c74402d6f72607a47c4850dcdf3b4d", "patch": "@@ -670,20 +670,13 @@ pub fn path_name_eq(a : &ast::Path, b : &ast::Path) -> bool {\n \n // are two arrays of segments equal when compared unhygienically?\n pub fn segments_name_eq(a : &[ast::PathSegment], b : &[ast::PathSegment]) -> bool {\n-    if a.len() != b.len() {\n-        false\n-    } else {\n-        for (idx,seg) in a.iter().enumerate() {\n-            if seg.identifier.name != b[idx].identifier.name\n-                // FIXME #7743: ident -> name problems in lifetime comparison?\n-                // can types contain idents?\n-                || seg.parameters != b[idx].parameters\n-            {\n-                return false;\n-            }\n-        }\n-        true\n-    }\n+    a.len() == b.len() &&\n+    a.iter().zip(b.iter()).all(|(s, t)| {\n+        s.identifier.name == t.identifier.name &&\n+        // FIXME #7743: ident -> name problems in lifetime comparison?\n+        // can types contain idents?\n+        s.parameters == t.parameters\n+    })\n }\n \n /// Returns true if this literal is a string and false otherwise."}]}