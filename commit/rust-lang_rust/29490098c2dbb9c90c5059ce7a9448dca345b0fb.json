{"sha": "29490098c2dbb9c90c5059ce7a9448dca345b0fb", "node_id": "C_kwDOAAsO6NoAKDI5NDkwMDk4YzJkYmI5YzkwYzUwNTljZTdhOTQ0OGRjYTM0NWIwZmI", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2022-11-02T12:21:21Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2022-11-03T12:18:25Z"}, "message": "Fix artifact version/channel detection for stable\n\nOn stable, our artifacts are uploaded with the raw version number (e.g.,\n1.65.0), not the channel. This adjusts our detection logic to use the\nversion number from src/version when we detect the stable channel.", "tree": {"sha": "2a90517445dd9b30efeec2abfa361ba6e59b5aa2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a90517445dd9b30efeec2abfa361ba6e59b5aa2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29490098c2dbb9c90c5059ce7a9448dca345b0fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29490098c2dbb9c90c5059ce7a9448dca345b0fb", "html_url": "https://github.com/rust-lang/rust/commit/29490098c2dbb9c90c5059ce7a9448dca345b0fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29490098c2dbb9c90c5059ce7a9448dca345b0fb/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c493bae0d8efd75723460ce5c371f726efa93f15", "url": "https://api.github.com/repos/rust-lang/rust/commits/c493bae0d8efd75723460ce5c371f726efa93f15", "html_url": "https://github.com/rust-lang/rust/commit/c493bae0d8efd75723460ce5c371f726efa93f15"}], "stats": {"total": 59, "additions": 42, "deletions": 17}, "files": [{"sha": "21dc11c48081e8f18ac2da327378772b85a5cd8c", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 40, "deletions": 15, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/29490098c2dbb9c90c5059ce7a9448dca345b0fb/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29490098c2dbb9c90c5059ce7a9448dca345b0fb/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=29490098c2dbb9c90c5059ce7a9448dca345b0fb", "patch": "@@ -1380,21 +1380,46 @@ impl Config {\n         git\n     }\n \n-    pub(crate) fn artifact_channel(&self, builder: &Builder<'_>, commit: &str) -> String {\n-        if builder.rust_info.is_managed_git_subrepository() {\n+    /// Bootstrap embeds a version number into the name of shared libraries it uploads in CI.\n+    /// Return the version it would have used for the given commit.\n+    pub(crate) fn artifact_version_part(&self, builder: &Builder<'_>, commit: &str) -> String {\n+        let (channel, version) = if builder.rust_info.is_managed_git_subrepository() {\n             let mut channel = self.git();\n             channel.arg(\"show\").arg(format!(\"{}:src/ci/channel\", commit));\n             let channel = output(&mut channel);\n-            channel.trim().to_owned()\n-        } else if let Ok(channel) = fs::read_to_string(builder.src.join(\"src/ci/channel\")) {\n-            channel.trim().to_owned()\n+            let mut version = self.git();\n+            version.arg(\"show\").arg(format!(\"{}:src/version\", commit));\n+            let version = output(&mut version);\n+            (channel.trim().to_owned(), version.trim().to_owned())\n         } else {\n-            let src = builder.src.display();\n-            eprintln!(\"error: failed to determine artifact channel\");\n-            eprintln!(\n-                \"help: either use git or ensure that {src}/src/ci/channel contains the name of the channel to use\"\n-            );\n-            panic!();\n+            let channel = fs::read_to_string(builder.src.join(\"src/ci/channel\"));\n+            let version = fs::read_to_string(builder.src.join(\"src/version\"));\n+            match (channel, version) {\n+                (Ok(channel), Ok(version)) => {\n+                    (channel.trim().to_owned(), version.trim().to_owned())\n+                }\n+                (channel, version) => {\n+                    let src = builder.src.display();\n+                    eprintln!(\"error: failed to determine artifact channel and/or version\");\n+                    eprintln!(\n+                        \"help: consider using a git checkout or ensure these files are readable\"\n+                    );\n+                    if let Err(channel) = channel {\n+                        eprintln!(\"reading {}/src/ci/channel failed: {:?}\", src, channel);\n+                    }\n+                    if let Err(version) = version {\n+                        eprintln!(\"reading {}/src/version failed: {:?}\", src, version);\n+                    }\n+                    panic!();\n+                }\n+            }\n+        };\n+\n+        match channel.as_str() {\n+            \"stable\" => version,\n+            \"beta\" => channel,\n+            \"nightly\" => channel,\n+            other => unreachable!(\"{:?} is not recognized as a valid channel\", other),\n         }\n     }\n \n@@ -1637,7 +1662,7 @@ fn maybe_download_rustfmt(builder: &Builder<'_>) -> Option<PathBuf> {\n \n fn download_ci_rustc(builder: &Builder<'_>, commit: &str) {\n     builder.verbose(&format!(\"using downloaded stage2 artifacts from CI (commit {commit})\"));\n-    let channel = builder.config.artifact_channel(builder, commit);\n+    let version = builder.config.artifact_version_part(builder, commit);\n     let host = builder.config.build.triple;\n     let bin_root = builder.out.join(host).join(\"ci-rustc\");\n     let rustc_stamp = bin_root.join(\".rustc-stamp\");\n@@ -1646,13 +1671,13 @@ fn download_ci_rustc(builder: &Builder<'_>, commit: &str) {\n         if bin_root.exists() {\n             t!(fs::remove_dir_all(&bin_root));\n         }\n-        let filename = format!(\"rust-std-{channel}-{host}.tar.xz\");\n+        let filename = format!(\"rust-std-{version}-{host}.tar.xz\");\n         let pattern = format!(\"rust-std-{host}\");\n         download_ci_component(builder, filename, &pattern, commit);\n-        let filename = format!(\"rustc-{channel}-{host}.tar.xz\");\n+        let filename = format!(\"rustc-{version}-{host}.tar.xz\");\n         download_ci_component(builder, filename, \"rustc\", commit);\n         // download-rustc doesn't need its own cargo, it can just use beta's.\n-        let filename = format!(\"rustc-dev-{channel}-{host}.tar.xz\");\n+        let filename = format!(\"rustc-dev-{version}-{host}.tar.xz\");\n         download_ci_component(builder, filename, \"rustc-dev\", commit);\n \n         builder.fix_bin_or_dylib(&bin_root.join(\"bin\").join(\"rustc\"));"}, {"sha": "94a61b727a32bccfb2bd33e1b47b1fc68a4d74f5", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29490098c2dbb9c90c5059ce7a9448dca345b0fb/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29490098c2dbb9c90c5059ce7a9448dca345b0fb/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=29490098c2dbb9c90c5059ce7a9448dca345b0fb", "patch": "@@ -269,8 +269,8 @@ fn download_ci_llvm(builder: &Builder<'_>, llvm_sha: &str) {\n     } else {\n         &builder.config.stage0_metadata.config.artifacts_server\n     };\n-    let channel = builder.config.artifact_channel(builder, llvm_sha);\n-    let filename = format!(\"rust-dev-{}-{}.tar.xz\", channel, builder.build.build.triple);\n+    let version = builder.config.artifact_version_part(builder, llvm_sha);\n+    let filename = format!(\"rust-dev-{}-{}.tar.xz\", version, builder.build.build.triple);\n     let tarball = rustc_cache.join(&filename);\n     if !tarball.exists() {\n         let help_on_error = \"error: failed to download llvm from ci"}]}