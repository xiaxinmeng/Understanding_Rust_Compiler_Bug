{"sha": "bf172c532af44628e3c3323a5f8a8c1726ffbd30", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmMTcyYzUzMmFmNDQ2MjhlM2MzMzIzYTVmOGE4YzE3MjZmZmJkMzA=", "commit": {"author": {"name": "Adrian Budau", "email": "budau.adi@gmail.com", "date": "2018-12-21T13:53:37Z"}, "committer": {"name": "Adrian Budau", "email": "budau.adi@gmail.com", "date": "2018-12-21T13:53:37Z"}, "message": "Properly report ENOSYS by modifying errno", "tree": {"sha": "ee41284ce00f1a315d81d16a0b0de57887b20981", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee41284ce00f1a315d81d16a0b0de57887b20981"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf172c532af44628e3c3323a5f8a8c1726ffbd30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf172c532af44628e3c3323a5f8a8c1726ffbd30", "html_url": "https://github.com/rust-lang/rust/commit/bf172c532af44628e3c3323a5f8a8c1726ffbd30", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf172c532af44628e3c3323a5f8a8c1726ffbd30/comments", "author": {"login": "adrian-budau", "id": 1350273, "node_id": "MDQ6VXNlcjEzNTAyNzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1350273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adrian-budau", "html_url": "https://github.com/adrian-budau", "followers_url": "https://api.github.com/users/adrian-budau/followers", "following_url": "https://api.github.com/users/adrian-budau/following{/other_user}", "gists_url": "https://api.github.com/users/adrian-budau/gists{/gist_id}", "starred_url": "https://api.github.com/users/adrian-budau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adrian-budau/subscriptions", "organizations_url": "https://api.github.com/users/adrian-budau/orgs", "repos_url": "https://api.github.com/users/adrian-budau/repos", "events_url": "https://api.github.com/users/adrian-budau/events{/privacy}", "received_events_url": "https://api.github.com/users/adrian-budau/received_events", "type": "User", "site_admin": false}, "committer": {"login": "adrian-budau", "id": 1350273, "node_id": "MDQ6VXNlcjEzNTAyNzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1350273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adrian-budau", "html_url": "https://github.com/adrian-budau", "followers_url": "https://api.github.com/users/adrian-budau/followers", "following_url": "https://api.github.com/users/adrian-budau/following{/other_user}", "gists_url": "https://api.github.com/users/adrian-budau/gists{/gist_id}", "starred_url": "https://api.github.com/users/adrian-budau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adrian-budau/subscriptions", "organizations_url": "https://api.github.com/users/adrian-budau/orgs", "repos_url": "https://api.github.com/users/adrian-budau/repos", "events_url": "https://api.github.com/users/adrian-budau/events{/privacy}", "received_events_url": "https://api.github.com/users/adrian-budau/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da47bd3ae01f9a651b652bb141685b128c5058b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/da47bd3ae01f9a651b652bb141685b128c5058b0", "html_url": "https://github.com/rust-lang/rust/commit/da47bd3ae01f9a651b652bb141685b128c5058b0"}], "stats": {"total": 40, "additions": 18, "deletions": 22}, "files": [{"sha": "6e8ee44599406a991b4869187684ca39bb2ed474", "filename": "src/libstd/sys/unix/os.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/bf172c532af44628e3c3323a5f8a8c1726ffbd30/src%2Flibstd%2Fsys%2Funix%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf172c532af44628e3c3323a5f8a8c1726ffbd30/src%2Flibstd%2Fsys%2Funix%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fos.rs?ref=bf172c532af44628e3c3323a5f8a8c1726ffbd30", "patch": "@@ -67,7 +67,8 @@ pub fn errno() -> i32 {\n }\n \n /// Sets the platform-specific value of errno\n-#[cfg(any(target_os = \"solaris\", target_os = \"fuchsia\"))] // only needed for readdir so far\n+#[cfg(all(not(target_os = \"linux\"),\n+          not(target_os = \"dragonfly\")))] // needed for readdir and syscall!\n pub fn set_errno(e: i32) {\n     unsafe {\n         *errno_location() = e as c_int\n@@ -84,6 +85,18 @@ pub fn errno() -> i32 {\n     unsafe { errno as i32 }\n }\n \n+#[cfg(target_os = \"dragonfly\")]\n+pub fn set_errno(e: i32) {\n+    extern {\n+        #[thread_local]\n+        static mut errno: c_int;\n+    }\n+\n+    unsafe {\n+        errno = e;\n+    }\n+}\n+\n /// Gets a detailed string description for the given error number.\n pub fn error_string(errno: i32) -> String {\n     extern {"}, {"sha": "7d293f1c47a9aa8ed3cf1043afb3d3a2bf211047", "filename": "src/libstd/sys/unix/weak.rs", "status": "modified", "additions": 4, "deletions": 21, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/bf172c532af44628e3c3323a5f8a8c1726ffbd30/src%2Flibstd%2Fsys%2Funix%2Fweak.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf172c532af44628e3c3323a5f8a8c1726ffbd30/src%2Flibstd%2Fsys%2Funix%2Fweak.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fweak.rs?ref=bf172c532af44628e3c3323a5f8a8c1726ffbd30", "patch": "@@ -83,13 +83,15 @@ macro_rules! syscall {\n     (fn $name:ident($($arg_name:ident: $t:ty),*) -> $ret:ty) => (\n         unsafe fn $name($($arg_name: $t),*) -> $ret {\n             use libc;\n+            use super::os;\n \n             weak! { fn $name($($t),*) -> $ret }\n \n             if let Some(fun) = $name.get() {\n                 fun($($arg_name),*)\n             } else {\n-                libc::ENOSYS\n+                os::set_errno(libc::ENOSYS);\n+                -1\n             }\n         }\n     )\n@@ -105,27 +107,8 @@ macro_rules! syscall {\n \n             syscall(\n                 concat_idents!(SYS_, $name),\n-                $(::sys::weak::SyscallParam::to_param($arg_name)),*\n+                $($arg_name as c_long),*\n             ) as $ret\n         }\n     )\n }\n-\n-#[cfg(target_os = \"linux\")]\n-pub trait SyscallParam {\n-    fn to_param(self) -> libc::c_long;\n-}\n-\n-#[cfg(target_os = \"linux\")]\n-impl SyscallParam for libc::c_int {\n-    fn to_param(self) -> libc::c_long {\n-        self as libc::c_long\n-    }\n-}\n-\n-#[cfg(target_os = \"linux\")]\n-impl<T> SyscallParam for *mut T {\n-    fn to_param(self) -> libc::c_long {\n-        unsafe { mem::transmute(self) }\n-    }\n-}"}]}