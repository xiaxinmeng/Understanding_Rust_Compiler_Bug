{"sha": "3cce950743e8aa74a4378dfdefbbc80223a00865", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjY2U5NTA3NDNlOGFhNzRhNDM3OGRmZGVmYmJjODAyMjNhMDA4NjU=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-01-07T04:45:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-07T04:45:59Z"}, "message": "Rollup merge of #67671 - estebank:type-impl-trait, r=davidtwco\n\nAccount for `type X = impl Trait;` in lifetime suggestion\n\nFix #67619.", "tree": {"sha": "c1f4fe57c3d6439d2fe9f29c3007437a6fb807c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1f4fe57c3d6439d2fe9f29c3007437a6fb807c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3cce950743e8aa74a4378dfdefbbc80223a00865", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeFA0HCRBK7hj4Ov3rIwAAdHIIADNNqcUg77soG0fKD0xR6ILj\nEiwlqPmb0qgj0RlxRs41o8bA+5kMe9AyO0CbbBbnroC3CwFuYNiIZX9L6LPnSzfI\nwf945OAjivq4KdPWUyg7RTVL9bgm1KX/O10uXZyn7LTNwc3vXsR9Jzmsy33dlkJU\nJKm55bH/bBAvyObira5E6nRxAPbAIk5syQ33wvo90TSowhYthOag3/qDA9ydnCv5\nKtf+79C2RkuKsGRxAJYCW+Bv0EaWEUd4RB4XWTnyZXSxcodwderVJc2ViBJu1N0M\nWahDuidfDpMgPXfqMKzN3a3ebTpLpyCp39AWK4jTYTDm4D9ldvYrHP4enaQyLuY=\n=892I\n-----END PGP SIGNATURE-----\n", "payload": "tree c1f4fe57c3d6439d2fe9f29c3007437a6fb807c5\nparent c671fc1ca2d9cb01406ac330faa31a4ad2d73fb5\nparent 2905f14b67def26ef003bf224886453cd20bf49a\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1578372359 +0900\ncommitter GitHub <noreply@github.com> 1578372359 +0900\n\nRollup merge of #67671 - estebank:type-impl-trait, r=davidtwco\n\nAccount for `type X = impl Trait;` in lifetime suggestion\n\nFix #67619.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3cce950743e8aa74a4378dfdefbbc80223a00865", "html_url": "https://github.com/rust-lang/rust/commit/3cce950743e8aa74a4378dfdefbbc80223a00865", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3cce950743e8aa74a4378dfdefbbc80223a00865/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c671fc1ca2d9cb01406ac330faa31a4ad2d73fb5", "url": "https://api.github.com/repos/rust-lang/rust/commits/c671fc1ca2d9cb01406ac330faa31a4ad2d73fb5", "html_url": "https://github.com/rust-lang/rust/commit/c671fc1ca2d9cb01406ac330faa31a4ad2d73fb5"}, {"sha": "2905f14b67def26ef003bf224886453cd20bf49a", "url": "https://api.github.com/repos/rust-lang/rust/commits/2905f14b67def26ef003bf224886453cd20bf49a", "html_url": "https://github.com/rust-lang/rust/commit/2905f14b67def26ef003bf224886453cd20bf49a"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "9a301a6ad32a81a36a9d33a28519bbba38a837b3", "filename": "src/librustc_mir/borrow_check/diagnostics/region_errors.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3cce950743e8aa74a4378dfdefbbc80223a00865/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cce950743e8aa74a4378dfdefbbc80223a00865/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs?ref=3cce950743e8aa74a4378dfdefbbc80223a00865", "patch": "@@ -800,7 +800,7 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n                 // If there is a static predicate, then the only sensible suggestion is to replace\n                 // fr with `'static`.\n                 if has_static_predicate {\n-                    diag.help(&format!(\"consider replacing `{}` with `{}`\", fr_name, static_str,));\n+                    diag.help(&format!(\"consider replacing `{}` with `{}`\", fr_name, static_str));\n                 } else {\n                     // Otherwise, we should suggest adding a constraint on the return type.\n                     let span = infcx.tcx.def_span(*did);\n@@ -810,15 +810,20 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n                         } else {\n                             \"'_\".to_string()\n                         };\n-\n+                        let suggestion = if snippet.ends_with(\";\") {\n+                            // `type X = impl Trait;`\n+                            format!(\"{} + {};\", &snippet[..snippet.len() - 1], suggestable_fr_name)\n+                        } else {\n+                            format!(\"{} + {}\", snippet, suggestable_fr_name)\n+                        };\n                         diag.span_suggestion(\n                             span,\n                             &format!(\n                                 \"to allow this `impl Trait` to capture borrowed data with lifetime \\\n                                  `{}`, add `{}` as a bound\",\n                                 fr_name, suggestable_fr_name,\n                             ),\n-                            format!(\"{} + {}\", snippet, suggestable_fr_name),\n+                            suggestion,\n                             Applicability::MachineApplicable,\n                         );\n                     }"}, {"sha": "5957ecbdc5faaaee1284806ca6791209bbf5bc47", "filename": "src/test/ui/impl-trait/multiple-lifetimes/error-handling.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3cce950743e8aa74a4378dfdefbbc80223a00865/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Ferror-handling.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3cce950743e8aa74a4378dfdefbbc80223a00865/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Ferror-handling.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Ferror-handling.stderr?ref=3cce950743e8aa74a4378dfdefbbc80223a00865", "patch": "@@ -7,7 +7,7 @@ LL | fn foo<'a, 'b, 'c>(x: &'static i32, mut y: &'a i32) -> E<'b, 'c> {\n    = help: consider replacing `'a` with `'static`\n help: to allow this `impl Trait` to capture borrowed data with lifetime `'a`, add `'a` as a bound\n    |\n-LL | type E<'a, 'b> = impl Sized; + 'a\n+LL | type E<'a, 'b> = impl Sized + 'a;\n    |\n \n error: aborting due to previous error"}]}