{"sha": "c071083732ee2cc219d20f710f0c1c3470a4c7d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwNzEwODM3MzJlZTJjYzIxOWQyMGY3MTBmMGMxYzM0NzBhNGM3ZDQ=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-10-06T18:41:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-06T18:41:59Z"}, "message": "Rollup merge of #65155 - Avi-D-coder:fix-lints, r=Mark-Simulacrum\n\nUse shorthand initialization in rustdoc\n\nThis just fixes a few lints I rust-analyzer was showing. Is this sort of PR useful? Should the lints be fixed as apart of the otherwise unrelated PR I was working on?", "tree": {"sha": "dd76dd4e491f679c93155753849fa435809af3af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd76dd4e491f679c93155753849fa435809af3af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c071083732ee2cc219d20f710f0c1c3470a4c7d4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdmjV3CRBK7hj4Ov3rIwAAdHIIAHMfMp9vZytd69v4muKZXcDu\nUgnGrpseZUDPhpEK7mt2j3RqWNd0Y0JnxS0tz2x52BhR/ej02/9wouB5D1m3BAHK\nnUHK2CrbZ4dBAQY5Qdih/ETqKE556AjTwqGOxgdwifRfL2yy5SceHxctASn2cjAA\n1lusE4/8dlNVWJYq9Mn+O0z7ebO7Avz416yZ96aCQRzjrYc1UA+bAaNY3iRpeuh4\nFOxs/IYtZ+TZYdKOt3Lh8WCzY+QyX/Kuiapdorg5r2xuDDj6TjxVP9sf3HV6RyoB\nEfX6YvBqkGUWGpc91kRTn1on9VJrqoQc8AIS69Dt5JirRx+Fv7IMCpBk16DYFDg=\n=Ra4S\n-----END PGP SIGNATURE-----\n", "payload": "tree dd76dd4e491f679c93155753849fa435809af3af\nparent c4bbc6dc3f0d800e138616d0f465c0a9f070418d\nparent c08711134508483e9b39beba16e31b057618cbf2\nauthor Tyler Mandry <tmandry@gmail.com> 1570387319 -0700\ncommitter GitHub <noreply@github.com> 1570387319 -0700\n\nRollup merge of #65155 - Avi-D-coder:fix-lints, r=Mark-Simulacrum\n\nUse shorthand initialization in rustdoc\n\nThis just fixes a few lints I rust-analyzer was showing. Is this sort of PR useful? Should the lints be fixed as apart of the otherwise unrelated PR I was working on?\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c071083732ee2cc219d20f710f0c1c3470a4c7d4", "html_url": "https://github.com/rust-lang/rust/commit/c071083732ee2cc219d20f710f0c1c3470a4c7d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c071083732ee2cc219d20f710f0c1c3470a4c7d4/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4bbc6dc3f0d800e138616d0f465c0a9f070418d", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4bbc6dc3f0d800e138616d0f465c0a9f070418d", "html_url": "https://github.com/rust-lang/rust/commit/c4bbc6dc3f0d800e138616d0f465c0a9f070418d"}, {"sha": "c08711134508483e9b39beba16e31b057618cbf2", "url": "https://api.github.com/repos/rust-lang/rust/commits/c08711134508483e9b39beba16e31b057618cbf2", "html_url": "https://github.com/rust-lang/rust/commit/c08711134508483e9b39beba16e31b057618cbf2"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "212a09ee6e6341e643b33bcdac095f69eb165686", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c071083732ee2cc219d20f710f0c1c3470a4c7d4/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c071083732ee2cc219d20f710f0c1c3470a4c7d4/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=c071083732ee2cc219d20f710f0c1c3470a4c7d4", "patch": "@@ -198,7 +198,7 @@ pub fn krate(mut cx: &mut DocContext<'_>) -> Crate {\n             Item {\n                 source: Span::empty(),\n                 name: Some(kw.clone()),\n-                attrs: attrs,\n+                attrs,\n                 visibility: Public,\n                 stability: get_stability(cx, def_id),\n                 deprecation: get_deprecation(cx, def_id),\n@@ -1570,7 +1570,7 @@ impl Clean<GenericParamDef> for hir::GenericParam {\n                     did: cx.tcx.hir().local_def_id(self.hir_id),\n                     bounds: self.bounds.clean(cx),\n                     default: default.clean(cx),\n-                    synthetic: synthetic,\n+                    synthetic,\n                 })\n             }\n             hir::GenericParamKind::Const { ref ty } => {\n@@ -2213,7 +2213,7 @@ impl Clean<Item> for doctree::Trait<'_> {\n         let is_spotlight = attrs.has_doc_flag(sym::spotlight);\n         Item {\n             name: Some(self.name.clean(cx)),\n-            attrs: attrs,\n+            attrs,\n             source: self.whence.clean(cx),\n             def_id: cx.tcx.hir().local_def_id(self.id),\n             visibility: self.vis.clean(cx),\n@@ -2844,7 +2844,7 @@ impl Clean<Type> for hir::Ty {\n                 } else {\n                     Some(l.clean(cx))\n                 };\n-                BorrowedRef {lifetime: lifetime, mutability: m.mutbl.clean(cx),\n+                BorrowedRef {lifetime, mutability: m.mutbl.clean(cx),\n                              type_: box m.ty.clean(cx)}\n             }\n             TyKind::Slice(ref ty) => Slice(box ty.clean(cx)),\n@@ -3102,9 +3102,9 @@ impl<'tcx> Clean<Type> for Ty<'tcx> {\n                 let path = external_path(cx, cx.tcx.item_name(did),\n                                          None, false, vec![], InternalSubsts::empty());\n                 ResolvedPath {\n-                    path: path,\n+                    path,\n                     param_names: None,\n-                    did: did,\n+                    did,\n                     is_generic: false,\n                 }\n             }\n@@ -4274,7 +4274,7 @@ fn resolve_type(cx: &DocContext<'_>,\n         _ => false,\n     };\n     let did = register_res(&*cx, path.res);\n-    ResolvedPath { path: path, param_names: None, did: did, is_generic: is_generic }\n+    ResolvedPath { path, param_names: None, did, is_generic }\n }\n \n pub fn register_res(cx: &DocContext<'_>, res: Res) -> DefId {"}, {"sha": "c23890e2a05ee590074da9b937af2baaee8f939b", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c071083732ee2cc219d20f710f0c1c3470a4c7d4/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c071083732ee2cc219d20f710f0c1c3470a4c7d4/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=c071083732ee2cc219d20f710f0c1c3470a4c7d4", "patch": "@@ -486,8 +486,8 @@ where R: 'static + Send,\n         krate.version = crate_version;\n \n         f(Output {\n-            krate: krate,\n-            renderinfo: renderinfo,\n+            krate,\n+            renderinfo,\n             renderopts,\n         })\n     });"}]}