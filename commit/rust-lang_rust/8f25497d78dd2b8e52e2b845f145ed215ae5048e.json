{"sha": "8f25497d78dd2b8e52e2b845f145ed215ae5048e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmMjU0OTdkNzhkZDJiOGU1MmUyYjg0NWYxNDVlZDIxNWFlNTA0OGU=", "commit": {"author": {"name": "Ximin Luo", "email": "infinity0@pwned.gg", "date": "2017-09-18T19:21:24Z"}, "committer": {"name": "Ximin Luo", "email": "infinity0@pwned.gg", "date": "2017-09-18T19:21:24Z"}, "message": "rustbuild: with --no-fail-fast, report the specific commands that failed", "tree": {"sha": "ff8a3dc150486d3940ad554594ab3d6ed7b3d0ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff8a3dc150486d3940ad554594ab3d6ed7b3d0ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f25497d78dd2b8e52e2b845f145ed215ae5048e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f25497d78dd2b8e52e2b845f145ed215ae5048e", "html_url": "https://github.com/rust-lang/rust/commit/8f25497d78dd2b8e52e2b845f145ed215ae5048e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f25497d78dd2b8e52e2b845f145ed215ae5048e/comments", "author": {"login": "infinity0", "id": 78398, "node_id": "MDQ6VXNlcjc4Mzk4", "avatar_url": "https://avatars.githubusercontent.com/u/78398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/infinity0", "html_url": "https://github.com/infinity0", "followers_url": "https://api.github.com/users/infinity0/followers", "following_url": "https://api.github.com/users/infinity0/following{/other_user}", "gists_url": "https://api.github.com/users/infinity0/gists{/gist_id}", "starred_url": "https://api.github.com/users/infinity0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/infinity0/subscriptions", "organizations_url": "https://api.github.com/users/infinity0/orgs", "repos_url": "https://api.github.com/users/infinity0/repos", "events_url": "https://api.github.com/users/infinity0/events{/privacy}", "received_events_url": "https://api.github.com/users/infinity0/received_events", "type": "User", "site_admin": false}, "committer": {"login": "infinity0", "id": 78398, "node_id": "MDQ6VXNlcjc4Mzk4", "avatar_url": "https://avatars.githubusercontent.com/u/78398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/infinity0", "html_url": "https://github.com/infinity0", "followers_url": "https://api.github.com/users/infinity0/followers", "following_url": "https://api.github.com/users/infinity0/following{/other_user}", "gists_url": "https://api.github.com/users/infinity0/gists{/gist_id}", "starred_url": "https://api.github.com/users/infinity0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/infinity0/subscriptions", "organizations_url": "https://api.github.com/users/infinity0/orgs", "repos_url": "https://api.github.com/users/infinity0/repos", "events_url": "https://api.github.com/users/infinity0/events{/privacy}", "received_events_url": "https://api.github.com/users/infinity0/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a7b960731fd1cf86f1879b1a0d44196a0917c53", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a7b960731fd1cf86f1879b1a0d44196a0917c53", "html_url": "https://github.com/rust-lang/rust/commit/3a7b960731fd1cf86f1879b1a0d44196a0917c53"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "25266fc538f1bd21e887ad65b3db47e8cfc56108", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8f25497d78dd2b8e52e2b845f145ed215ae5048e/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f25497d78dd2b8e52e2b845f145ed215ae5048e/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=8f25497d78dd2b8e52e2b845f145ed215ae5048e", "patch": "@@ -68,8 +68,8 @@ impl fmt::Display for TestKind {\n fn try_run_expecting(build: &Build, cmd: &mut Command, expect: BuildExpectation) {\n     if !build.fail_fast {\n         if !build.try_run(cmd, expect) {\n-            let failures = build.delayed_failures.get();\n-            build.delayed_failures.set(failures + 1);\n+            let mut failures = build.delayed_failures.borrow_mut();\n+            failures.push(format!(\"{:?}\", cmd));\n         }\n     } else {\n         build.run_expecting(cmd, expect);\n@@ -83,8 +83,8 @@ fn try_run(build: &Build, cmd: &mut Command) {\n fn try_run_quiet(build: &Build, cmd: &mut Command) {\n     if !build.fail_fast {\n         if !build.try_run_quiet(cmd) {\n-            let failures = build.delayed_failures.get();\n-            build.delayed_failures.set(failures + 1);\n+            let mut failures = build.delayed_failures.borrow_mut();\n+            failures.push(format!(\"{:?}\", cmd));\n         }\n     } else {\n         build.run_quiet(cmd);"}, {"sha": "06c7c4c2faffc02a9db57089f1b951fc866e71ba", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/8f25497d78dd2b8e52e2b845f145ed215ae5048e/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f25497d78dd2b8e52e2b845f145ed215ae5048e/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=8f25497d78dd2b8e52e2b845f145ed215ae5048e", "patch": "@@ -134,13 +134,13 @@ extern crate toml;\n #[cfg(unix)]\n extern crate libc;\n \n-use std::cell::Cell;\n+use std::cell::RefCell;\n use std::collections::{HashSet, HashMap};\n use std::env;\n use std::fs::{self, File};\n use std::io::Read;\n use std::path::{PathBuf, Path};\n-use std::process::Command;\n+use std::process::{self, Command};\n use std::slice;\n \n use build_helper::{run_silent, run_suppressed, try_run_silent, try_run_suppressed, output, mtime,\n@@ -247,7 +247,7 @@ pub struct Build {\n     crates: HashMap<Interned<String>, Crate>,\n     is_sudo: bool,\n     ci_env: CiEnv,\n-    delayed_failures: Cell<usize>,\n+    delayed_failures: RefCell<Vec<String>>,\n }\n \n #[derive(Debug)]\n@@ -329,7 +329,7 @@ impl Build {\n             lldb_python_dir: None,\n             is_sudo,\n             ci_env: CiEnv::current(),\n-            delayed_failures: Cell::new(0),\n+            delayed_failures: RefCell::new(Vec::new()),\n         }\n     }\n \n@@ -368,6 +368,16 @@ impl Build {\n         metadata::build(self);\n \n         builder::Builder::run(&self);\n+\n+        // Check for postponed failures from `test --no-fail-fast`.\n+        let failures = self.delayed_failures.borrow();\n+        if failures.len() > 0 {\n+            println!(\"\\n{} command(s) did not execute successfully:\\n\", failures.len());\n+            for failure in failures.iter() {\n+                println!(\"  - {}\\n\", failure);\n+            }\n+            process::exit(1);\n+        }\n     }\n \n     /// Clear out `dir` if `input` is newer."}]}