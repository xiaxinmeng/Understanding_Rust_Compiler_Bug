{"sha": "a44f6c18fb8b87c9e8deb1ff878f2fef84912b3f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0NGY2YzE4ZmI4Yjg3YzllOGRlYjFmZjg3OGYyZmVmODQ5MTJiM2Y=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-01-28T13:49:07Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-01-28T13:49:07Z"}, "message": "Use RA_LOG in tests", "tree": {"sha": "6a75d6b115d59deb7e290da8f62c2b03babdb5f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a75d6b115d59deb7e290da8f62c2b03babdb5f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a44f6c18fb8b87c9e8deb1ff878f2fef84912b3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a44f6c18fb8b87c9e8deb1ff878f2fef84912b3f", "html_url": "https://github.com/rust-lang/rust/commit/a44f6c18fb8b87c9e8deb1ff878f2fef84912b3f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a44f6c18fb8b87c9e8deb1ff878f2fef84912b3f/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e4cd6b4e4c67b36ad2091e565aa2a6ee4d9b4f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e4cd6b4e4c67b36ad2091e565aa2a6ee4d9b4f6", "html_url": "https://github.com/rust-lang/rust/commit/7e4cd6b4e4c67b36ad2091e565aa2a6ee4d9b4f6"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "4c4b994fe599f527db60358af99fb5e72d9bbefa", "filename": "crates/rust-analyzer/tests/rust-analyzer/support.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a44f6c18fb8b87c9e8deb1ff878f2fef84912b3f/crates%2Frust-analyzer%2Ftests%2Frust-analyzer%2Fsupport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a44f6c18fb8b87c9e8deb1ff878f2fef84912b3f/crates%2Frust-analyzer%2Ftests%2Frust-analyzer%2Fsupport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Ftests%2Frust-analyzer%2Fsupport.rs?ref=a44f6c18fb8b87c9e8deb1ff878f2fef84912b3f", "patch": "@@ -64,7 +64,7 @@ impl<'a> Project<'a> {\n         let tmp_dir = self.tmp_dir.unwrap_or_else(|| TestDir::new());\n         static INIT: Once = Once::new();\n         INIT.call_once(|| {\n-            env_logger::builder().is_test(true).try_init().unwrap();\n+            env_logger::builder().is_test(true).parse_env(\"RA_LOG\").try_init().unwrap();\n             profile::init_from(crate::PROFILE);\n         });\n "}]}