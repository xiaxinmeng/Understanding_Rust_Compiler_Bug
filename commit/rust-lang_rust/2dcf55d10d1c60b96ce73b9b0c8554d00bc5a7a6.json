{"sha": "2dcf55d10d1c60b96ce73b9b0c8554d00bc5a7a6", "node_id": "C_kwDOAAsO6NoAKDJkY2Y1NWQxMGQxYzYwYjk2Y2U3M2I5YjBjODU1NGQwMGJjNWE3YTY", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-03-23T17:01:04Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-03-23T17:01:04Z"}, "message": "Address rebase fallout", "tree": {"sha": "32c8a6c4a5eb9aa9e10f81e799fc8d871e6902cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/32c8a6c4a5eb9aa9e10f81e799fc8d871e6902cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2dcf55d10d1c60b96ce73b9b0c8554d00bc5a7a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2dcf55d10d1c60b96ce73b9b0c8554d00bc5a7a6", "html_url": "https://github.com/rust-lang/rust/commit/2dcf55d10d1c60b96ce73b9b0c8554d00bc5a7a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2dcf55d10d1c60b96ce73b9b0c8554d00bc5a7a6/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7efad044c0f5f7d1aa25f8f7b9fd205087f8da4", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7efad044c0f5f7d1aa25f8f7b9fd205087f8da4", "html_url": "https://github.com/rust-lang/rust/commit/c7efad044c0f5f7d1aa25f8f7b9fd205087f8da4"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "5be745bc1de38aa0977bd02a8332851828529b64", "filename": "compiler/rustc_mir_transform/src/const_prop_lint.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2dcf55d10d1c60b96ce73b9b0c8554d00bc5a7a6/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop_lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2dcf55d10d1c60b96ce73b9b0c8554d00bc5a7a6/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop_lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop_lint.rs?ref=2dcf55d10d1c60b96ce73b9b0c8554d00bc5a7a6", "patch": "@@ -235,7 +235,7 @@ impl<'mir, 'tcx> interpret::Machine<'mir, 'tcx> for ConstPropMachine<'mir, 'tcx>\n     ) -> InterpResult<'tcx, InterpOperand<Self::PointerTag>> {\n         let l = &frame.locals[local];\n \n-        if l.value == LocalValue::Uninitialized {\n+        if l.value == LocalValue::Unallocated {\n             throw_machine_stop_str!(\"tried to access an uninitialized local\")\n         }\n \n@@ -433,7 +433,7 @@ impl<'mir, 'tcx> ConstPropagator<'mir, 'tcx> {\n     /// but not reading from them anymore.\n     fn remove_const(ecx: &mut InterpCx<'mir, 'tcx, ConstPropMachine<'mir, 'tcx>>, local: Local) {\n         ecx.frame_mut().locals[local] =\n-            LocalState { value: LocalValue::Uninitialized, layout: Cell::new(None) };\n+            LocalState { value: LocalValue::Unallocated, layout: Cell::new(None) };\n     }\n \n     fn lint_root(&self, source_info: SourceInfo) -> Option<HirId> {\n@@ -906,7 +906,7 @@ impl<'tcx> Visitor<'tcx> for ConstPropagator<'_, 'tcx> {\n                     let frame = self.ecx.frame_mut();\n                     frame.locals[local].value =\n                         if let StatementKind::StorageLive(_) = statement.kind {\n-                            LocalValue::Uninitialized\n+                            LocalValue::Unallocated\n                         } else {\n                             LocalValue::Dead\n                         };"}]}