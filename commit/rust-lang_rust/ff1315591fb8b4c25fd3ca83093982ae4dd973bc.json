{"sha": "ff1315591fb8b4c25fd3ca83093982ae4dd973bc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmMTMxNTU5MWZiOGI0YzI1ZmQzY2E4MzA5Mzk4MmFlNGRkOTczYmM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-06-08T09:05:38Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-06-08T09:05:38Z"}, "message": "Auto merge of #34010 - jseyfried:decorate_expanded, r=nrc\n\nRun decorators on expanded AST\n\nFixes #32950.\nr? @nrc", "tree": {"sha": "20487a69f9d750e70d05c733a4a2cf5fa1fed648", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20487a69f9d750e70d05c733a4a2cf5fa1fed648"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff1315591fb8b4c25fd3ca83093982ae4dd973bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff1315591fb8b4c25fd3ca83093982ae4dd973bc", "html_url": "https://github.com/rust-lang/rust/commit/ff1315591fb8b4c25fd3ca83093982ae4dd973bc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff1315591fb8b4c25fd3ca83093982ae4dd973bc/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "368f6ae8cb03c0986d30af704b64c58a2b87dfe4", "url": "https://api.github.com/repos/rust-lang/rust/commits/368f6ae8cb03c0986d30af704b64c58a2b87dfe4", "html_url": "https://github.com/rust-lang/rust/commit/368f6ae8cb03c0986d30af704b64c58a2b87dfe4"}, {"sha": "635a82e74413b07904320f023968d33018635136", "url": "https://api.github.com/repos/rust-lang/rust/commits/635a82e74413b07904320f023968d33018635136", "html_url": "https://github.com/rust-lang/rust/commit/635a82e74413b07904320f023968d33018635136"}], "stats": {"total": 45, "additions": 32, "deletions": 13}, "files": [{"sha": "7fee27c5dd46350d38a61b1f05959aa164eb6680", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/ff1315591fb8b4c25fd3ca83093982ae4dd973bc/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff1315591fb8b4c25fd3ca83093982ae4dd973bc/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=ff1315591fb8b4c25fd3ca83093982ae4dd973bc", "patch": "@@ -723,11 +723,7 @@ fn expand_annotatable(a: Annotatable,\n                       -> SmallVector<Annotatable> {\n     let a = expand_item_multi_modifier(a, fld);\n \n-    let mut decorator_items = SmallVector::zero();\n-    let mut new_attrs = Vec::new();\n-    expand_decorators(a.clone(), fld, &mut decorator_items, &mut new_attrs);\n-\n-    let mut new_items: SmallVector<Annotatable> = match a {\n+    let new_items: SmallVector<Annotatable> = match a {\n         Annotatable::Item(it) => match it.node {\n             ast::ItemKind::Mac(..) => {\n                 let new_items: SmallVector<P<ast::Item>> = it.and_then(|it| match it.node {\n@@ -745,7 +741,7 @@ fn expand_annotatable(a: Annotatable,\n                 if valid_ident {\n                     fld.cx.mod_push(it.ident);\n                 }\n-                let macro_use = contains_macro_use(fld, &new_attrs[..]);\n+                let macro_use = contains_macro_use(fld, &it.attrs);\n                 let result = with_exts_frame!(fld.cx.syntax_env,\n                                               macro_use,\n                                               noop_fold_item(it, fld));\n@@ -754,13 +750,7 @@ fn expand_annotatable(a: Annotatable,\n                 }\n                 result.into_iter().map(|i| Annotatable::Item(i)).collect()\n             },\n-            _ => {\n-                let it = P(ast::Item {\n-                    attrs: new_attrs,\n-                    ..(*it).clone()\n-                });\n-                noop_fold_item(it, fld).into_iter().map(|i| Annotatable::Item(i)).collect()\n-            }\n+            _ => noop_fold_item(it, fld).into_iter().map(|i| Annotatable::Item(i)).collect(),\n         },\n \n         Annotatable::TraitItem(it) => match it.node {\n@@ -789,6 +779,17 @@ fn expand_annotatable(a: Annotatable,\n         }\n     };\n \n+    new_items.into_iter().flat_map(|a| decorate(a, fld)).collect()\n+}\n+\n+fn decorate(a: Annotatable, fld: &mut MacroExpander) -> SmallVector<Annotatable> {\n+    let mut decorator_items = SmallVector::zero();\n+    let mut new_attrs = Vec::new();\n+    expand_decorators(a.clone(), fld, &mut decorator_items, &mut new_attrs);\n+    let decorator_items =\n+        decorator_items.into_iter().flat_map(|a| expand_annotatable(a, fld)).collect();\n+\n+    let mut new_items = SmallVector::one(a.fold_attrs(new_attrs));\n     new_items.push_all(decorator_items);\n     new_items\n }"}, {"sha": "e47ebdd6a6938c2613350e36e0163523c97fc102", "filename": "src/test/compile-fail/issue-32950.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ff1315591fb8b4c25fd3ca83093982ae4dd973bc/src%2Ftest%2Fcompile-fail%2Fissue-32950.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff1315591fb8b4c25fd3ca83093982ae4dd973bc/src%2Ftest%2Fcompile-fail%2Fissue-32950.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-32950.rs?ref=ff1315591fb8b4c25fd3ca83093982ae4dd973bc", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(type_macros, concat_idents, rustc_attrs)]\n+#![allow(unused)]\n+\n+#[derive(Debug)] struct FooBar;\n+#[derive(Debug)] struct Baz<T>(T, concat_idents!(Foo, Bar));\n+\n+#[rustc_error]\n+fn main() {} //~ ERROR compilation successful"}]}