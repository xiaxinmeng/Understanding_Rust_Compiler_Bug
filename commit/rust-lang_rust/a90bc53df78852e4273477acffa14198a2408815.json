{"sha": "a90bc53df78852e4273477acffa14198a2408815", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5MGJjNTNkZjc4ODUyZTQyNzM0NzdhY2ZmYTE0MTk4YTI0MDg4MTU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-12-31T09:14:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-31T09:14:22Z"}, "message": "Merge #7104\n\n7104: Remove some unneeded string allocations r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "6db96b8fceda3e68f63b4302f76b901786809704", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6db96b8fceda3e68f63b4302f76b901786809704"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a90bc53df78852e4273477acffa14198a2408815", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf7ZZuCRBK7hj4Ov3rIwAAdHIIAGx69tE2MiIMcTKMiSbLD+RJ\nW0AbCR07yHvK0dU0vCIVGjRgVgQmlyz5lvOEmO6WjQLoZ1i7Wpb63L6HNlewKmKK\ndLNilrPFYuRGH58a2Vi248kStQ80kJ/h1GTah93HUWn3VS6oBh9O6b1UxfoiEZAR\nVObVwJtq8GqKeghd6GV/Mo3wfZWwNvFX1dSLnDnAU6eXF0YJ7tUCAI/ceWUoWr46\nSQtnk8YwzzFNbehAn2gUA5dw6HQkhHZkGqQSHAQS2A5DiEq232LPllZWktpqXAJ8\nhjgYokYeK+mbu2+U4unR89eAIyTppwUq4nnqSeEzH9ozhov+QZFaa0RtX0oP9VU=\n=OH7q\n-----END PGP SIGNATURE-----\n", "payload": "tree 6db96b8fceda3e68f63b4302f76b901786809704\nparent a9814fa9c037b0fafd30580a6e7682ed032d77e6\nparent 816190c6f6838f163acc4bbe6a06c302c99535b2\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1609406062 +0000\ncommitter GitHub <noreply@github.com> 1609406062 +0000\n\nMerge #7104\n\n7104: Remove some unneeded string allocations r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a90bc53df78852e4273477acffa14198a2408815", "html_url": "https://github.com/rust-lang/rust/commit/a90bc53df78852e4273477acffa14198a2408815", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a90bc53df78852e4273477acffa14198a2408815/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9814fa9c037b0fafd30580a6e7682ed032d77e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9814fa9c037b0fafd30580a6e7682ed032d77e6", "html_url": "https://github.com/rust-lang/rust/commit/a9814fa9c037b0fafd30580a6e7682ed032d77e6"}, {"sha": "816190c6f6838f163acc4bbe6a06c302c99535b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/816190c6f6838f163acc4bbe6a06c302c99535b2", "html_url": "https://github.com/rust-lang/rust/commit/816190c6f6838f163acc4bbe6a06c302c99535b2"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "8695eed3984096068b1be09b6bd0e44df1360df0", "filename": "crates/completion/src/completions/attribute.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a90bc53df78852e4273477acffa14198a2408815/crates%2Fcompletion%2Fsrc%2Fcompletions%2Fattribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a90bc53df78852e4273477acffa14198a2408815/crates%2Fcompletion%2Fsrc%2Fcompletions%2Fattribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Fcompletions%2Fattribute.rs?ref=a90bc53df78852e4273477acffa14198a2408815", "patch": "@@ -234,7 +234,7 @@ fn parse_comma_sep_input(derive_input: ast::TokenTree) -> Result<FxHashSet<Strin\n                         current_derive = String::new();\n                     }\n                 } else {\n-                    current_derive.push_str(token.to_string().trim());\n+                    current_derive.push_str(token.text().trim());\n                 }\n             }\n "}, {"sha": "5682e122dbd7c5d5b8a7e66b1c785c61769fe097", "filename": "crates/hir_def/src/nameres.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a90bc53df78852e4273477acffa14198a2408815/crates%2Fhir_def%2Fsrc%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a90bc53df78852e4273477acffa14198a2408815/crates%2Fhir_def%2Fsrc%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres.rs?ref=a90bc53df78852e4273477acffa14198a2408815", "patch": "@@ -454,7 +454,7 @@ mod diagnostics {\n                                     });\n                                 for token in tokens {\n                                     if token.kind() == SyntaxKind::IDENT\n-                                        && token.to_string() == *name\n+                                        && token.text() == name.as_str()\n                                     {\n                                         precise_location = Some(token.text_range());\n                                         break 'outer;"}, {"sha": "6cf8314317e064131b45319e5aaa32af62abe086", "filename": "crates/ssr/src/matching.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a90bc53df78852e4273477acffa14198a2408815/crates%2Fssr%2Fsrc%2Fmatching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a90bc53df78852e4273477acffa14198a2408815/crates%2Fssr%2Fsrc%2Fmatching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fssr%2Fsrc%2Fmatching.rs?ref=a90bc53df78852e4273477acffa14198a2408815", "patch": "@@ -473,7 +473,9 @@ impl<'db, 'sema> Matcher<'db, 'sema> {\n                         }\n                         SyntaxElement::Node(n) => {\n                             if let Some(first_token) = n.first_token() {\n-                                if Some(first_token.to_string()) == next_pattern_token {\n+                                if Some(first_token.text().as_str())\n+                                    == next_pattern_token.as_deref()\n+                                {\n                                     if let Some(SyntaxElement::Node(p)) = pattern.next() {\n                                         // We have a subtree that starts with the next token in our pattern.\n                                         self.attempt_match_token_tree(phase, &p, &n)?;"}]}