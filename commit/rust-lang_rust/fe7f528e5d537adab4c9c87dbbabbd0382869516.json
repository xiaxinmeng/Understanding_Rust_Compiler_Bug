{"sha": "fe7f528e5d537adab4c9c87dbbabbd0382869516", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlN2Y1MjhlNWQ1MzdhZGFiNGM5Yzg3ZGJiYWJiZDAzODI4Njk1MTY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-05-28T07:44:05Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-05-28T07:44:05Z"}, "message": "auto merge of #6769 : catamorphism/rust/issue-4994, r=thestinger\n\nr? @thestinger As called for in #4994", "tree": {"sha": "979d8a5ca412dc701d2d5504cc1d9dd6b55ad082", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/979d8a5ca412dc701d2d5504cc1d9dd6b55ad082"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe7f528e5d537adab4c9c87dbbabbd0382869516", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe7f528e5d537adab4c9c87dbbabbd0382869516", "html_url": "https://github.com/rust-lang/rust/commit/fe7f528e5d537adab4c9c87dbbabbd0382869516", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe7f528e5d537adab4c9c87dbbabbd0382869516/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7f36a837353551c1a36076247822a9cec0b87e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7f36a837353551c1a36076247822a9cec0b87e3", "html_url": "https://github.com/rust-lang/rust/commit/f7f36a837353551c1a36076247822a9cec0b87e3"}, {"sha": "77de84b4f629b63c784903ed7cc08c024b10496b", "url": "https://api.github.com/repos/rust-lang/rust/commits/77de84b4f629b63c784903ed7cc08c024b10496b", "html_url": "https://github.com/rust-lang/rust/commit/77de84b4f629b63c784903ed7cc08c024b10496b"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "ad3b6ab3df4023b7b564a65c29817ba691f8797e", "filename": "src/libextra/deque.rs", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/fe7f528e5d537adab4c9c87dbbabbd0382869516/src%2Flibextra%2Fdeque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe7f528e5d537adab4c9c87dbbabbd0382869516/src%2Flibextra%2Fdeque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fdeque.rs?ref=fe7f528e5d537adab4c9c87dbbabbd0382869516", "patch": "@@ -125,6 +125,31 @@ pub impl<T> Deque<T> {\n         self.hi = (self.hi + 1u) % self.elts.len();\n         self.nelts += 1u;\n     }\n+\n+    /// Reserve capacity for exactly `n` elements in the given deque,\n+    /// doing nothing if `self`'s capacity is already equal to or greater\n+    /// than the requested capacity\n+    ///\n+    /// # Arguments\n+    ///\n+    /// * n - The number of elements to reserve space for\n+    fn reserve(&mut self, n: uint) {\n+        vec::reserve(&mut self.elts, n);\n+    }\n+\n+    /// Reserve capacity for at least `n` elements in the given deque,\n+    /// over-allocating in case the caller needs to reserve additional\n+    /// space.\n+    ///\n+    /// Do nothing if `self`'s capacity is already equal to or greater\n+    /// than the requested capacity.\n+    ///\n+    /// # Arguments\n+    ///\n+    /// * n - The number of elements to reserve space for\n+    fn reserve_at_least(&mut self, n: uint) {\n+        vec::reserve_at_least(&mut self.elts, n);\n+    }\n }\n \n /// Grow is only called on full elts, so nelts is also len(elts), unlike\n@@ -149,6 +174,7 @@ mod tests {\n     use super::*;\n     use core::cmp::Eq;\n     use core::kinds::Copy;\n+    use core::vec::capacity;\n \n     #[test]\n     fn test_simple() {\n@@ -328,4 +354,29 @@ mod tests {\n         }\n \n     }\n+\n+    #[test]\n+    fn test_reserve() {\n+        let mut d = Deque::new();\n+        d.add_back(0u64);\n+        d.reserve(50);\n+        assert_eq!(capacity(&mut d.elts), 50);\n+        let mut d = Deque::new();\n+        d.add_back(0u32);\n+        d.reserve(50);\n+        assert_eq!(capacity(&mut d.elts), 50);\n+    }\n+\n+    #[test]\n+    fn test_reserve_at_least() {\n+        let mut d = Deque::new();\n+        d.add_back(0u64);\n+        d.reserve_at_least(50);\n+        assert_eq!(capacity(&mut d.elts), 64);\n+        let mut d = Deque::new();\n+        d.add_back(0u32);\n+        d.reserve_at_least(50);\n+        assert_eq!(capacity(&mut d.elts), 64);\n+    }\n+\n }"}]}