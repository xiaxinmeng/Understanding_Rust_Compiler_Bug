{"sha": "5d609370900402db84beb3d7e28487256c6042c2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkNjA5MzcwOTAwNDAyZGI4NGJlYjNkN2UyODQ4NzI1NmM2MDQyYzI=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2018-12-23T11:59:38Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2018-12-23T12:48:04Z"}, "message": "Remove unwraps", "tree": {"sha": "adcb5a083155e8230955f6784fb0929626e32509", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/adcb5a083155e8230955f6784fb0929626e32509"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d609370900402db84beb3d7e28487256c6042c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d609370900402db84beb3d7e28487256c6042c2", "html_url": "https://github.com/rust-lang/rust/commit/5d609370900402db84beb3d7e28487256c6042c2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d609370900402db84beb3d7e28487256c6042c2/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b4139d54fc68240aa8e4e221841298115d8fb00f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4139d54fc68240aa8e4e221841298115d8fb00f", "html_url": "https://github.com/rust-lang/rust/commit/b4139d54fc68240aa8e4e221841298115d8fb00f"}], "stats": {"total": 25, "additions": 19, "deletions": 6}, "files": [{"sha": "eb5fea1532480bf0e2821678ac570c8b9532232c", "filename": "crates/ra_hir/src/ty.rs", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/5d609370900402db84beb3d7e28487256c6042c2/crates%2Fra_hir%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d609370900402db84beb3d7e28487256c6042c2/crates%2Fra_hir%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty.rs?ref=5d609370900402db84beb3d7e28487256c6042c2", "patch": "@@ -479,17 +479,30 @@ impl InferenceContext {\n pub fn infer(_db: &impl HirDatabase, node: ast::FnDef, scopes: Arc<FnScopes>) -> InferenceResult {\n     let mut ctx = InferenceContext::new(scopes);\n \n-    for param in node.param_list().unwrap().params() {\n-        let pat = param.pat().unwrap();\n-        let type_ref = param.type_ref().unwrap();\n-        let ty = Ty::new(type_ref);\n-        ctx.type_for.insert(LocalSyntaxPtr::new(pat.syntax()), ty);\n+    if let Some(param_list) = node.param_list() {\n+        for param in param_list.params() {\n+            let pat = if let Some(pat) = param.pat() {\n+                pat\n+            } else {\n+                continue;\n+            };\n+            if let Some(type_ref) = param.type_ref() {\n+                let ty = Ty::new(type_ref);\n+                ctx.type_for.insert(LocalSyntaxPtr::new(pat.syntax()), ty);\n+            } else {\n+                // TODO self param\n+                ctx.type_for\n+                    .insert(LocalSyntaxPtr::new(pat.syntax()), Ty::Unknown);\n+            };\n+        }\n     }\n \n     // TODO get Ty for node.ret_type() and pass that to infer_block as expectation\n     // (see Expectation in rustc_typeck)\n \n-    ctx.infer_block(node.body().unwrap());\n+    if let Some(block) = node.body() {\n+        ctx.infer_block(block);\n+    }\n \n     // TODO 'resolve' the types: replace inference variables by their inferred results\n "}]}