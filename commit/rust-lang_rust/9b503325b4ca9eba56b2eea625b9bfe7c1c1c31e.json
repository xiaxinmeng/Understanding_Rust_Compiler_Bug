{"sha": "9b503325b4ca9eba56b2eea625b9bfe7c1c1c31e", "node_id": "C_kwDOAAsO6NoAKDliNTAzMzI1YjRjYTllYmE1NmIyZWVhNjI1YjliZmU3YzFjMWMzMWU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-02-12T21:29:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-12T21:29:48Z"}, "message": "Rollup merge of #107934 - notriddle:notriddle/intra-doc-link-meta-description, r=camelid,GuillaumeGomez\n\nrustdoc: account for intra-doc links in `<meta name=\"description\">`\n\nSimilar to #86451, but for the SEO descriptions instead of the search descriptions.", "tree": {"sha": "6728ae65b1161daa2c8e34547ede7d257be4661c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6728ae65b1161daa2c8e34547ede7d257be4661c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b503325b4ca9eba56b2eea625b9bfe7c1c1c31e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj6VpMCRBK7hj4Ov3rIwAALAkIAGXppnuiJGBG/Ac55hhcoiMS\nlmndvMMi97cXY7bzZ5/VgQhrNWgo3DM1Lsx4y0G3gxCQlG27SdaziP45hvs2xSuX\niecAV+F/3Wi5fBy0eQuGwgUlC+4tzb+zLc8MCCNXVdXx4urOWGoxlQ185xEs8VFS\n1LiLFwfGM5QTxvrD2GjcUHjNUdu0eAbk/0mbYaN4v2nXsUQnROs9Q5apKR1/o6oK\nYpTVhpx5DXUt7CpGHdggQ+LIgGDubEr0iPQdPxHeJs3e6MgfhpPcQ/aJDgL8kBPH\nfY53IYVoh1BX9k9jv3W8yeMTJPqHTTHhdbcf52fh7SoGBYYvCULdhCuMYGh5cQU=\n=kYJ+\n-----END PGP SIGNATURE-----\n", "payload": "tree 6728ae65b1161daa2c8e34547ede7d257be4661c\nparent 76c47fb90422e8ecef8af5f7f248978bfbf8963d\nparent 72b3f46b435b7e3c662e34ecefdd1e66e59d3092\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1676237388 +0100\ncommitter GitHub <noreply@github.com> 1676237388 +0100\n\nRollup merge of #107934 - notriddle:notriddle/intra-doc-link-meta-description, r=camelid,GuillaumeGomez\n\nrustdoc: account for intra-doc links in `<meta name=\"description\">`\n\nSimilar to #86451, but for the SEO descriptions instead of the search descriptions.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b503325b4ca9eba56b2eea625b9bfe7c1c1c31e", "html_url": "https://github.com/rust-lang/rust/commit/9b503325b4ca9eba56b2eea625b9bfe7c1c1c31e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b503325b4ca9eba56b2eea625b9bfe7c1c1c31e/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76c47fb90422e8ecef8af5f7f248978bfbf8963d", "url": "https://api.github.com/repos/rust-lang/rust/commits/76c47fb90422e8ecef8af5f7f248978bfbf8963d", "html_url": "https://github.com/rust-lang/rust/commit/76c47fb90422e8ecef8af5f7f248978bfbf8963d"}, {"sha": "72b3f46b435b7e3c662e34ecefdd1e66e59d3092", "url": "https://api.github.com/repos/rust-lang/rust/commits/72b3f46b435b7e3c662e34ecefdd1e66e59d3092", "html_url": "https://github.com/rust-lang/rust/commit/72b3f46b435b7e3c662e34ecefdd1e66e59d3092"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "331804393938f46ca320f23064a8ec57fa63578f", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/9b503325b4ca9eba56b2eea625b9bfe7c1c1c31e/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b503325b4ca9eba56b2eea625b9bfe7c1c1c31e/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=9b503325b4ca9eba56b2eea625b9bfe7c1c1c31e", "patch": "@@ -1176,14 +1176,23 @@ pub(crate) fn short_markdown_summary(markdown: &str, link_names: &[RenderedLink]\n /// - Headings, links, and formatting are stripped.\n /// - Inline code is rendered as-is, surrounded by backticks.\n /// - HTML and code blocks are ignored.\n-pub(crate) fn plain_text_summary(md: &str) -> String {\n+pub(crate) fn plain_text_summary(md: &str, link_names: &[RenderedLink]) -> String {\n     if md.is_empty() {\n         return String::new();\n     }\n \n     let mut s = String::with_capacity(md.len() * 3 / 2);\n \n-    for event in Parser::new_ext(md, summary_opts()) {\n+    let mut replacer = |broken_link: BrokenLink<'_>| {\n+        link_names\n+            .iter()\n+            .find(|link| link.original_text.as_str() == &*broken_link.reference)\n+            .map(|link| (link.href.as_str().into(), link.new_text.as_str().into()))\n+    };\n+\n+    let p = Parser::new_with_broken_link_callback(md, summary_opts(), Some(&mut replacer));\n+\n+    for event in p {\n         match &event {\n             Event::Text(text) => s.push_str(text),\n             Event::Code(code) => {"}, {"sha": "e05635a0207560f1f5d4260471e4bbfc18be348e", "filename": "src/librustdoc/html/markdown/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9b503325b4ca9eba56b2eea625b9bfe7c1c1c31e/src%2Flibrustdoc%2Fhtml%2Fmarkdown%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b503325b4ca9eba56b2eea625b9bfe7c1c1c31e/src%2Flibrustdoc%2Fhtml%2Fmarkdown%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown%2Ftests.rs?ref=9b503325b4ca9eba56b2eea625b9bfe7c1c1c31e", "patch": "@@ -249,7 +249,7 @@ fn test_short_markdown_summary() {\n #[test]\n fn test_plain_text_summary() {\n     fn t(input: &str, expect: &str) {\n-        let output = plain_text_summary(input);\n+        let output = plain_text_summary(input, &[]);\n         assert_eq!(output, expect, \"original: {}\", input);\n     }\n "}, {"sha": "6762fba9275cf2b4199806dad49c813247dc51ae", "filename": "src/librustdoc/html/render/context.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9b503325b4ca9eba56b2eea625b9bfe7c1c1c31e/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b503325b4ca9eba56b2eea625b9bfe7c1c1c31e/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs?ref=9b503325b4ca9eba56b2eea625b9bfe7c1c1c31e", "patch": "@@ -182,7 +182,10 @@ impl<'tcx> Context<'tcx> {\n         };\n         title.push_str(\" - Rust\");\n         let tyname = it.type_();\n-        let desc = it.doc_value().as_ref().map(|doc| plain_text_summary(doc));\n+        let desc = it\n+            .doc_value()\n+            .as_ref()\n+            .map(|doc| plain_text_summary(doc, &it.link_names(&self.cache())));\n         let desc = if let Some(desc) = desc {\n             desc\n         } else if it.is_crate() {"}, {"sha": "43cd59ebd0924e299cf2e591d387983aa56696a0", "filename": "tests/rustdoc/description.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9b503325b4ca9eba56b2eea625b9bfe7c1c1c31e/tests%2Frustdoc%2Fdescription.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b503325b4ca9eba56b2eea625b9bfe7c1c1c31e/tests%2Frustdoc%2Fdescription.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fdescription.rs?ref=9b503325b4ca9eba56b2eea625b9bfe7c1c1c31e", "patch": "@@ -22,3 +22,9 @@ pub mod foo_mod {\n //   'Only paragraph.'\n /// Only paragraph.\n pub fn foo_fn() {}\n+\n+// @has 'foo/fn.bar_fn.html' '//meta[@name=\"description\"]/@content' \\\n+//   'Description with intra-doc link to foo_fn and [nonexistent_item] and foo_fn.'\n+#[allow(rustdoc::broken_intra_doc_links)]\n+/// Description with intra-doc link to [foo_fn] and [nonexistent_item] and [foo_fn](self::foo_fn).\n+pub fn bar_fn() {}"}]}