{"sha": "6fc409ed0938cd2f501642abcaa675977fa5035a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmYzQwOWVkMDkzOGNkMmY1MDE2NDJhYmNhYTY3NTk3N2ZhNTAzNWE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-05-13T03:44:00Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-05-13T03:44:00Z"}, "message": "Auto merge of #50573 - oli-obk:tool_sanity, r=kennytm\n\nDon't require clippy/miri for beta\n\nr? @kennytm\n\ncc @alexcrichton\n\nI'm trying this out locally atm to see if it works as I think it should. Not sure how to test it for real except wait for the next beta.\n\nfixes #50557", "tree": {"sha": "f1f67de03d1ca6a3ffc9b4ed2b944b098ce9dd0c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1f67de03d1ca6a3ffc9b4ed2b944b098ce9dd0c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6fc409ed0938cd2f501642abcaa675977fa5035a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6fc409ed0938cd2f501642abcaa675977fa5035a", "html_url": "https://github.com/rust-lang/rust/commit/6fc409ed0938cd2f501642abcaa675977fa5035a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6fc409ed0938cd2f501642abcaa675977fa5035a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "844bc65333184f90670e950233513e5c7bf0572e", "url": "https://api.github.com/repos/rust-lang/rust/commits/844bc65333184f90670e950233513e5c7bf0572e", "html_url": "https://github.com/rust-lang/rust/commit/844bc65333184f90670e950233513e5c7bf0572e"}, {"sha": "b8174030841d1b3a26add05ba7de6d252c135d8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8174030841d1b3a26add05ba7de6d252c135d8c", "html_url": "https://github.com/rust-lang/rust/commit/b8174030841d1b3a26add05ba7de6d252c135d8c"}], "stats": {"total": 44, "additions": 33, "deletions": 11}, "files": [{"sha": "d71d5daf8113bf4abb59d51101467e85985fc250", "filename": "src/ci/docker/x86_64-gnu-tools/checktools.sh", "status": "modified", "additions": 33, "deletions": 11, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/6fc409ed0938cd2f501642abcaa675977fa5035a/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Fchecktools.sh", "raw_url": "https://github.com/rust-lang/rust/raw/6fc409ed0938cd2f501642abcaa675977fa5035a/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Fchecktools.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Fchecktools.sh?ref=6fc409ed0938cd2f501642abcaa675977fa5035a", "patch": "@@ -23,6 +23,8 @@ SIX_WEEK_CYCLE=\"$(( ($(date +%s) / 604800 - 3) % 6 ))\"\n \n touch \"$TOOLSTATE_FILE\"\n \n+# Try to test all the tools and store the build/test success in the TOOLSTATE_FILE\n+\n set +e\n python2.7 \"$X_PY\" test --no-fail-fast \\\n     src/doc/book \\\n@@ -38,6 +40,7 @@ set -e\n cat \"$TOOLSTATE_FILE\"\n echo\n \n+# This function checks that if a tool's submodule changed, the tool's state must improve\n verify_status() {\n     echo \"Verifying status of $1...\"\n     if echo \"$CHANGED_FILES\" | grep -q \"^M[[:blank:]]$2$\"; then\n@@ -57,17 +60,36 @@ verify_status() {\n     fi\n }\n \n+# deduplicates the submodule check and the assertion that on beta some tools MUST be passing\n+check_dispatch() {\n+    if [ \"$1\" = submodule_changed ]; then\n+        # ignore $2 (branch id)\n+        verify_status $3 $4\n+    elif [ \"$2\" = beta ]; then\n+        echo \"Requiring test passing for $3...\"\n+        if grep -q '\"'\"$3\"'\":\"\\(test\\|build\\)-fail\"' \"$TOOLSTATE_FILE\"; then\n+            exit 4\n+        fi\n+    fi\n+}\n+\n+# list all tools here\n+status_check() {\n+    check_dispatch $1 beta book src/doc/book\n+    check_dispatch $1 beta nomicon src/doc/nomicon\n+    check_dispatch $1 beta reference src/doc/reference\n+    check_dispatch $1 beta rust-by-example src/doc/rust-by-example\n+    check_dispatch $1 beta rls src/tool/rls\n+    check_dispatch $1 beta rustfmt src/tool/rustfmt\n+    # these tools are not required for beta to successfully branch\n+    check_dispatch $1 nightly clippy-driver src/tool/clippy\n+    check_dispatch $1 nightly miri src/tool/miri\n+}\n+\n # If this PR is intended to update one of these tools, do not let the build pass\n # when they do not test-pass.\n \n-verify_status book src/doc/book\n-verify_status nomicon src/doc/nomicon\n-verify_status reference src/doc/reference\n-verify_status rust-by-example src/doc/rust-by-example\n-verify_status rls src/tool/rls\n-verify_status rustfmt src/tool/rustfmt\n-verify_status clippy-driver src/tool/clippy\n-verify_status miri src/tool/miri\n+status_check \"submodule_changed\"\n \n if [ \"$RUST_RELEASE_CHANNEL\" = nightly -a -n \"${TOOLSTATE_REPO_ACCESS_TOKEN+is_set}\" ]; then\n     . \"$(dirname $0)/repo.sh\"\n@@ -86,6 +108,6 @@ $COMMIT\\t$(cat \"$TOOLSTATE_FILE\")\n     exit 0\n fi\n \n-if grep -q fail \"$TOOLSTATE_FILE\"; then\n-    exit 4\n-fi\n+# abort compilation if an important tool doesn't build\n+# (this code is reachable if not on the nightly channel)\n+status_check \"beta_required\""}]}