{"sha": "b7bf467fa3c92fdb520460abbe2568da5cd7afb2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3YmY0NjdmYTNjOTJmZGI1MjA0NjBhYmJlMjU2OGRhNWNkN2FmYjI=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-05-11T10:12:52Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-05-12T11:58:43Z"}, "message": "Use () for proc_macro_decls_static.", "tree": {"sha": "ff2beca6e2fa31dc95895d5e71f81b81899ae9a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff2beca6e2fa31dc95895d5e71f81b81899ae9a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7bf467fa3c92fdb520460abbe2568da5cd7afb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7bf467fa3c92fdb520460abbe2568da5cd7afb2", "html_url": "https://github.com/rust-lang/rust/commit/b7bf467fa3c92fdb520460abbe2568da5cd7afb2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7bf467fa3c92fdb520460abbe2568da5cd7afb2/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9e1900af7eea8ec67fdc763291a085323b6c7af", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9e1900af7eea8ec67fdc763291a085323b6c7af", "html_url": "https://github.com/rust-lang/rust/commit/e9e1900af7eea8ec67fdc763291a085323b6c7af"}], "stats": {"total": 34, "additions": 11, "deletions": 23}, "files": [{"sha": "1a5afefbb2bcde4d93f793c696032a8b849d9ccd", "filename": "compiler/rustc_codegen_ssa/src/back/symbol_export.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b7bf467fa3c92fdb520460abbe2568da5cd7afb2/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fsymbol_export.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7bf467fa3c92fdb520460abbe2568da5cd7afb2/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fsymbol_export.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fsymbol_export.rs?ref=b7bf467fa3c92fdb520460abbe2568da5cd7afb2", "patch": "@@ -133,8 +133,8 @@ fn reachable_non_generics_provider(tcx: TyCtxt<'_>, cnum: CrateNum) -> DefIdMap<\n         })\n         .collect();\n \n-    if let Some(id) = tcx.proc_macro_decls_static(LOCAL_CRATE) {\n-        reachable_non_generics.insert(id, SymbolExportLevel::C);\n+    if let Some(id) = tcx.proc_macro_decls_static(()) {\n+        reachable_non_generics.insert(id.to_def_id(), SymbolExportLevel::C);\n     }\n \n     if let Some(id) = tcx.plugin_registrar_fn(()) {"}, {"sha": "803efb303e470bc0544e7a48e286fceb665a0c0d", "filename": "compiler/rustc_interface/src/passes.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b7bf467fa3c92fdb520460abbe2568da5cd7afb2/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7bf467fa3c92fdb520460abbe2568da5cd7afb2/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs?ref=b7bf467fa3c92fdb520460abbe2568da5cd7afb2", "patch": "@@ -824,7 +824,9 @@ fn analysis(tcx: TyCtxt<'_>, cnum: CrateNum) -> Result<()> {\n \n                 sess.time(\"looking_for_plugin_registrar\", || tcx.ensure().plugin_registrar_fn(()));\n \n-                sess.time(\"looking_for_derive_registrar\", || proc_macro_decls::find(tcx));\n+                sess.time(\"looking_for_derive_registrar\", || {\n+                    tcx.ensure().proc_macro_decls_static(())\n+                });\n \n                 let cstore = tcx\n                     .cstore_as_any()"}, {"sha": "88cf6275ebbd07ff72a4c0b8f42351c456462bed", "filename": "compiler/rustc_interface/src/proc_macro_decls.rs", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b7bf467fa3c92fdb520460abbe2568da5cd7afb2/compiler%2Frustc_interface%2Fsrc%2Fproc_macro_decls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7bf467fa3c92fdb520460abbe2568da5cd7afb2/compiler%2Frustc_interface%2Fsrc%2Fproc_macro_decls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fproc_macro_decls.rs?ref=b7bf467fa3c92fdb520460abbe2568da5cd7afb2", "patch": "@@ -1,21 +1,15 @@\n use rustc_hir as hir;\n-use rustc_hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n+use rustc_hir::def_id::LocalDefId;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::TyCtxt;\n use rustc_span::symbol::sym;\n \n-pub fn find(tcx: TyCtxt<'_>) -> Option<DefId> {\n-    tcx.proc_macro_decls_static(LOCAL_CRATE)\n-}\n-\n-fn proc_macro_decls_static(tcx: TyCtxt<'_>, cnum: CrateNum) -> Option<DefId> {\n-    assert_eq!(cnum, LOCAL_CRATE);\n-\n+fn proc_macro_decls_static(tcx: TyCtxt<'_>, (): ()) -> Option<LocalDefId> {\n     let mut finder = Finder { tcx, decls: None };\n     tcx.hir().krate().visit_all_item_likes(&mut finder);\n \n-    finder.decls.map(|id| tcx.hir().local_def_id(id).to_def_id())\n+    finder.decls.map(|id| tcx.hir().local_def_id(id))\n }\n \n struct Finder<'tcx> {"}, {"sha": "3a28154f72c78208bed33c32701e45662dbf9587", "filename": "compiler/rustc_metadata/src/rmeta/decoder/cstore_impl.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b7bf467fa3c92fdb520460abbe2568da5cd7afb2/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7bf467fa3c92fdb520460abbe2568da5cd7afb2/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs?ref=b7bf467fa3c92fdb520460abbe2568da5cd7afb2", "patch": "@@ -185,14 +185,6 @@ provide! { <'tcx> tcx, def_id, other, cdata,\n     }\n     native_libraries => { Lrc::new(cdata.get_native_libraries(tcx.sess)) }\n     foreign_modules => { cdata.get_foreign_modules(tcx) }\n-    proc_macro_decls_static => {\n-        cdata.root.proc_macro_data.as_ref().map(|data| {\n-            DefId {\n-                krate: def_id.krate,\n-                index: data.proc_macro_decls_static,\n-            }\n-        })\n-    }\n     crate_disambiguator => { cdata.root.disambiguator }\n     crate_hash => { cdata.root.hash }\n     crate_host_hash => { cdata.host_hash }"}, {"sha": "1c2dcdba3c1605e59e33127be036b171e5b9caf1", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b7bf467fa3c92fdb520460abbe2568da5cd7afb2/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7bf467fa3c92fdb520460abbe2568da5cd7afb2/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=b7bf467fa3c92fdb520460abbe2568da5cd7afb2", "patch": "@@ -1575,7 +1575,7 @@ impl EncodeContext<'a, 'tcx> {\n             let tcx = self.tcx;\n             let hir = tcx.hir();\n \n-            let proc_macro_decls_static = tcx.proc_macro_decls_static(LOCAL_CRATE).unwrap().index;\n+            let proc_macro_decls_static = tcx.proc_macro_decls_static(()).unwrap().local_def_index;\n             let stability = tcx.lookup_stability(DefId::local(CRATE_DEF_INDEX)).copied();\n             let macros = self.lazy(hir.krate().proc_macros.iter().map(|p| p.owner.local_def_index));\n             let spans = self.tcx.sess.parse_sess.proc_macro_quoted_spans();"}, {"sha": "28e37c215aa2661e910272fc9c50dd6aa230e9a7", "filename": "compiler/rustc_middle/src/query/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b7bf467fa3c92fdb520460abbe2568da5cd7afb2/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7bf467fa3c92fdb520460abbe2568da5cd7afb2/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs?ref=b7bf467fa3c92fdb520460abbe2568da5cd7afb2", "patch": "@@ -1207,7 +1207,7 @@ rustc_queries! {\n     query plugin_registrar_fn(_: ()) -> Option<LocalDefId> {\n         desc { \"looking up the plugin registrar for a crate\" }\n     }\n-    query proc_macro_decls_static(_: CrateNum) -> Option<DefId> {\n+    query proc_macro_decls_static(_: ()) -> Option<LocalDefId> {\n         desc { \"looking up the derive registrar for a crate\" }\n     }\n     query crate_disambiguator(_: CrateNum) -> CrateDisambiguator {"}, {"sha": "7fb24ad1ed8e3fdf5c068b57e68cb179a8e70151", "filename": "compiler/rustc_symbol_mangling/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b7bf467fa3c92fdb520460abbe2568da5cd7afb2/compiler%2Frustc_symbol_mangling%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7bf467fa3c92fdb520460abbe2568da5cd7afb2/compiler%2Frustc_symbol_mangling%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_symbol_mangling%2Fsrc%2Flib.rs?ref=b7bf467fa3c92fdb520460abbe2568da5cd7afb2", "patch": "@@ -169,7 +169,7 @@ fn compute_symbol_name(\n             let disambiguator = tcx.sess.local_crate_disambiguator();\n             return tcx.sess.generate_plugin_registrar_symbol(disambiguator);\n         }\n-        if tcx.proc_macro_decls_static(LOCAL_CRATE) == Some(def_id.to_def_id()) {\n+        if tcx.proc_macro_decls_static(()) == Some(def_id) {\n             let disambiguator = tcx.sess.local_crate_disambiguator();\n             return tcx.sess.generate_proc_macro_decls_symbol(disambiguator);\n         }"}]}