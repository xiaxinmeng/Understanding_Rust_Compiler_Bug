{"sha": "f2d4c93c6c56d8cfe1d69646ba1f788823e6bc35", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyZDRjOTNjNmM1NmQ4Y2ZlMWQ2OTY0NmJhMWY3ODg4MjNlNmJjMzU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-04-13T16:05:05Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-04-13T16:05:05Z"}, "message": "fmt", "tree": {"sha": "8e117cd89385d00f67f9884a4beaa69787f7948c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e117cd89385d00f67f9884a4beaa69787f7948c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2d4c93c6c56d8cfe1d69646ba1f788823e6bc35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2d4c93c6c56d8cfe1d69646ba1f788823e6bc35", "html_url": "https://github.com/rust-lang/rust/commit/f2d4c93c6c56d8cfe1d69646ba1f788823e6bc35", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2d4c93c6c56d8cfe1d69646ba1f788823e6bc35/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b90ff9ae68cc23fe002c92f30a4aaf2039c5a8f", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b90ff9ae68cc23fe002c92f30a4aaf2039c5a8f", "html_url": "https://github.com/rust-lang/rust/commit/7b90ff9ae68cc23fe002c92f30a4aaf2039c5a8f"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "3f0774767fd7a4ede2666ff6c41cd1c4bc2226bb", "filename": "src/librustc_mir/const_eval/eval_queries.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f2d4c93c6c56d8cfe1d69646ba1f788823e6bc35/src%2Flibrustc_mir%2Fconst_eval%2Feval_queries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2d4c93c6c56d8cfe1d69646ba1f788823e6bc35/src%2Flibrustc_mir%2Fconst_eval%2Feval_queries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval%2Feval_queries.rs?ref=f2d4c93c6c56d8cfe1d69646ba1f788823e6bc35", "patch": "@@ -158,7 +158,8 @@ pub(super) fn op_to_const<'tcx>(\n                         (ecx.tcx.alloc_map.lock().unwrap_memory(ptr.alloc_id), ptr.offset.bytes())\n                     }\n                     Scalar::Raw { .. } => (\n-                        ecx.tcx.intern_const_alloc(Allocation::from_byte_aligned_bytes(b\"\" as &[u8])),\n+                        ecx.tcx\n+                            .intern_const_alloc(Allocation::from_byte_aligned_bytes(b\"\" as &[u8])),\n                         0,\n                     ),\n                 };\n@@ -167,7 +168,7 @@ pub(super) fn op_to_const<'tcx>(\n                 let len: usize = len.try_into().unwrap();\n                 ConstValue::Slice { data, start, end: start + len }\n             }\n-        }\n+        },\n     }\n }\n "}]}