{"sha": "3f9015b22d774dd2af0c3c95dbfb0270d5e0bf7e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmOTAxNWIyMmQ3NzRkZDJhZjBjM2M5NWRiZmIwMjcwZDVlMGJmN2U=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-09-22T09:55:03Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-09-24T07:04:26Z"}, "message": "visit impl self ty + trait", "tree": {"sha": "13fc13260e5448b5fb0d16ddc1919c7e40792402", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13fc13260e5448b5fb0d16ddc1919c7e40792402"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f9015b22d774dd2af0c3c95dbfb0270d5e0bf7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f9015b22d774dd2af0c3c95dbfb0270d5e0bf7e", "html_url": "https://github.com/rust-lang/rust/commit/3f9015b22d774dd2af0c3c95dbfb0270d5e0bf7e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f9015b22d774dd2af0c3c95dbfb0270d5e0bf7e/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8402d6a6e6cadd3d877c952a2c5bbd694afbc2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8402d6a6e6cadd3d877c952a2c5bbd694afbc2d", "html_url": "https://github.com/rust-lang/rust/commit/b8402d6a6e6cadd3d877c952a2c5bbd694afbc2d"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "a571bd58abc34706a3b9908c2b6bc9efb5097abf", "filename": "compiler/rustc_typeck/src/collect.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3f9015b22d774dd2af0c3c95dbfb0270d5e0bf7e/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f9015b22d774dd2af0c3c95dbfb0270d5e0bf7e/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs?ref=3f9015b22d774dd2af0c3c95dbfb0270d5e0bf7e", "patch": "@@ -2098,6 +2098,18 @@ fn const_evaluatable_predicates_of<'tcx>(\n     let node = tcx.hir().get(hir_id);\n \n     let mut collector = ConstCollector { tcx, preds: FxIndexSet::default() };\n+    if let hir::Node::Item(item) = node {\n+        if let hir::ItemKind::Impl { ref of_trait, ref self_ty, .. } = item.kind {\n+            if let Some(of_trait) = of_trait {\n+                warn!(\"const_evaluatable_predicates_of({:?}): visit impl trait_ref\", def_id);\n+                collector.visit_trait_ref(of_trait);\n+            }\n+\n+            warn!(\"const_evaluatable_predicates_of({:?}): visit_self_ty\", def_id);\n+            collector.visit_ty(self_ty);\n+        }\n+    }\n+\n     if let Some(generics) = node.generics() {\n         warn!(\"const_evaluatable_predicates_of({:?}): visit_generics\", def_id);\n         collector.visit_generics(generics);"}, {"sha": "193a365f9b65bbb783a189720dd7993b15e80523", "filename": "src/test/ui/const-generics/const_evaluatable_checked/impl-bounds.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/3f9015b22d774dd2af0c3c95dbfb0270d5e0bf7e/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fimpl-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f9015b22d774dd2af0c3c95dbfb0270d5e0bf7e/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fimpl-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fimpl-bounds.rs?ref=3f9015b22d774dd2af0c3c95dbfb0270d5e0bf7e", "patch": "@@ -0,0 +1,25 @@\n+// check-pass\n+#![feature(const_generics, const_evaluatable_checked)]\n+#![allow(incomplete_features)]\n+\n+use std::mem::size_of;\n+\n+struct Foo<T, const N: usize>(T);\n+\n+impl<T> Foo<T, { size_of::<T>() }> {\n+    fn test() {\n+        let _: [u8; std::mem::size_of::<T>()];\n+    }\n+}\n+\n+trait Bar<const N: usize> {\n+    fn test_me();\n+}\n+\n+impl<T> Bar<{ size_of::<T>() }> for Foo<T, 3> {\n+    fn test_me() {\n+        let _: [u8; std::mem::size_of::<T>()];\n+    }\n+}\n+\n+fn main() {}"}]}