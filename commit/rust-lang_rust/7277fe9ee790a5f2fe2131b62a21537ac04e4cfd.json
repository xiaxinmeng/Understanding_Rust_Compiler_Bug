{"sha": "7277fe9ee790a5f2fe2131b62a21537ac04e4cfd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyNzdmZTllZTc5MGE1ZjJmZTIxMzFiNjJhMjE1MzdhYzA0ZTRjZmQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-09-13T17:25:54Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-09-13T17:25:54Z"}, "message": "auto merge of #17161 : vadimcn/rust/fix-debuginfo, r=alexcrichton\n\nThis PR fixes debuginfo tests on Windows.", "tree": {"sha": "614a324d9161e667b47d99faec26f4bae00189b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/614a324d9161e667b47d99faec26f4bae00189b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7277fe9ee790a5f2fe2131b62a21537ac04e4cfd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7277fe9ee790a5f2fe2131b62a21537ac04e4cfd", "html_url": "https://github.com/rust-lang/rust/commit/7277fe9ee790a5f2fe2131b62a21537ac04e4cfd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7277fe9ee790a5f2fe2131b62a21537ac04e4cfd/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "079951ed2a0d11c9ccfb8023cc1a645a883f890f", "url": "https://api.github.com/repos/rust-lang/rust/commits/079951ed2a0d11c9ccfb8023cc1a645a883f890f", "html_url": "https://github.com/rust-lang/rust/commit/079951ed2a0d11c9ccfb8023cc1a645a883f890f"}, {"sha": "d08441b9d67c791ea233632552ea47c0795498ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/d08441b9d67c791ea233632552ea47c0795498ec", "html_url": "https://github.com/rust-lang/rust/commit/d08441b9d67c791ea233632552ea47c0795498ec"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "d89a29b549760e2adbf988fd90cf78f182c5ad30", "filename": "mk/tests.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7277fe9ee790a5f2fe2131b62a21537ac04e4cfd/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/7277fe9ee790a5f2fe2131b62a21537ac04e4cfd/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=7277fe9ee790a5f2fe2131b62a21537ac04e4cfd", "patch": "@@ -283,7 +283,7 @@ tidy:\n \t\t| xargs -n 10 $(CFG_PYTHON) $(S)src/etc/tidy.py\n \t\t$(Q)echo $(ALL_HS) \\\n \t\t| xargs -n 10 $(CFG_PYTHON) $(S)src/etc/tidy.py\n-\t\t$(Q)find $(S)src -type f -perm +111 \\\n+\t\t$(Q)find $(S)src -type f -perm a+x \\\n \t\t    -not -name '*.rs' -and -not -name '*.py' \\\n \t\t    -and -not -name '*.sh' \\\n \t\t| grep '^$(S)src/jemalloc' -v \\"}, {"sha": "122a241ef0c7471fc24f2d8e43d345d4e9c42875", "filename": "src/compiletest/runtest.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7277fe9ee790a5f2fe2131b62a21537ac04e4cfd/src%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7277fe9ee790a5f2fe2131b62a21537ac04e4cfd/src%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fruntest.rs?ref=7277fe9ee790a5f2fe2131b62a21537ac04e4cfd", "patch": "@@ -482,12 +482,12 @@ fn run_debuginfo_gdb_test(config: &Config, props: &TestProps, testfile: &Path) {\n                         // GDB's script auto loading safe path ...\n                         script_str.push_str(\n                             format!(\"add-auto-load-safe-path {}\\n\",\n-                                    rust_pp_module_abs_path.as_slice())\n+                                    rust_pp_module_abs_path.replace(\"\\\\\", \"\\\\\\\\\").as_slice())\n                                 .as_slice());\n                         // ... and also the test directory\n                         script_str.push_str(\n                             format!(\"add-auto-load-safe-path {}\\n\",\n-                                    config.build_base.as_str().unwrap())\n+                                    config.build_base.as_str().unwrap().replace(\"\\\\\", \"\\\\\\\\\"))\n                                 .as_slice());\n                     }\n                 }\n@@ -499,7 +499,7 @@ fn run_debuginfo_gdb_test(config: &Config, props: &TestProps, testfile: &Path) {\n \n             // Load the target executable\n             script_str.push_str(format!(\"file {}\\n\",\n-                                        exe_file.as_str().unwrap())\n+                                        exe_file.as_str().unwrap().replace(\"\\\\\", \"\\\\\\\\\"))\n                                     .as_slice());\n \n             script_str.push_str(cmds.as_slice());"}, {"sha": "18aa66f0e9398428fc65116dd626e3495d72535c", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7277fe9ee790a5f2fe2131b62a21537ac04e4cfd/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7277fe9ee790a5f2fe2131b62a21537ac04e4cfd/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=7277fe9ee790a5f2fe2131b62a21537ac04e4cfd", "patch": "@@ -1017,7 +1017,8 @@ fn link_args(cmd: &mut Command,\n         cmd.arg(\"-Wl,--nxcompat\");\n \n         // Mark all dynamic libraries and executables as compatible with ASLR\n-        cmd.arg(\"-Wl,--dynamicbase\");\n+        // FIXME #17098: ASLR breaks gdb\n+        // cmd.arg(\"-Wl,--dynamicbase\");\n \n         // Mark all dynamic libraries and executables as compatible with the larger 4GiB address\n         // space available to x86 Windows binaries on x86_64."}, {"sha": "f0b0507afbb13af8e3453c8554019f6f2316eac6", "filename": "src/librustc/middle/trans/debuginfo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7277fe9ee790a5f2fe2131b62a21537ac04e4cfd/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7277fe9ee790a5f2fe2131b62a21537ac04e4cfd/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs?ref=7277fe9ee790a5f2fe2131b62a21537ac04e4cfd", "patch": "@@ -739,7 +739,7 @@ pub fn finalize(cx: &CrateContext) {\n             cx.sess().targ_cfg.os == abi::OsiOS {\n             \"Dwarf Version\".with_c_str(\n                 |s| llvm::LLVMRustAddModuleFlag(cx.llmod(), s, 2));\n-        } else {\n+        } else if cx.sess().targ_cfg.os == abi::OsLinux {\n             // FIXME(#13611) this is a kludge fix because the Linux bots have\n             //               gdb 7.4 which doesn't understand dwarf4, we should\n             //               do something more graceful here."}]}