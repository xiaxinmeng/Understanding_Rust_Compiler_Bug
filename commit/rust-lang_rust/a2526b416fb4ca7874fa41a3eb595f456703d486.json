{"sha": "a2526b416fb4ca7874fa41a3eb595f456703d486", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyNTI2YjQxNmZiNGNhNzg3NGZhNDFhM2ViNTk1ZjQ1NjcwM2Q0ODY=", "commit": {"author": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2020-09-29T07:16:46Z"}, "committer": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2020-09-29T07:16:46Z"}, "message": "Use `rtassert!` instead of `assert!` from the child process after fork() in std::sys::unix::process::Command::spawn()\n\n`assert!` panics on failure, which is not signal-safe.", "tree": {"sha": "bf97cd51174db794e61e53d5c99b5fb8dfb65b66", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf97cd51174db794e61e53d5c99b5fb8dfb65b66"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2526b416fb4ca7874fa41a3eb595f456703d486", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niIsEABYIADMWIQRJ2jPMDdiQ+U4U42Z0+n/VuNoUuAUCX3LfXhUceWQtaHVhbmdA\nb3V0bG9vay5jb20ACgkQdPp/1bjaFLhoOgD/cMxYN7gW8eHHqKmRhM64BAMwQK1g\nFGnKJqHFIZqNDmkA/29Y3WUK4HdLKv99KsYk8spLUdUX6UpuHK8sAi1UfaUJ\n=cfcq\n-----END PGP SIGNATURE-----", "payload": "tree bf97cd51174db794e61e53d5c99b5fb8dfb65b66\nparent 1d5a865b2f671189af8d7af6b2d8f3dfa2a6d425\nauthor hyd-dev <yd-huang@outlook.com> 1601363806 +0800\ncommitter hyd-dev <yd-huang@outlook.com> 1601363806 +0800\n\nUse `rtassert!` instead of `assert!` from the child process after fork() in std::sys::unix::process::Command::spawn()\n\n`assert!` panics on failure, which is not signal-safe.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2526b416fb4ca7874fa41a3eb595f456703d486", "html_url": "https://github.com/rust-lang/rust/commit/a2526b416fb4ca7874fa41a3eb595f456703d486", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2526b416fb4ca7874fa41a3eb595f456703d486/comments", "author": null, "committer": null, "parents": [{"sha": "1d5a865b2f671189af8d7af6b2d8f3dfa2a6d425", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d5a865b2f671189af8d7af6b2d8f3dfa2a6d425", "html_url": "https://github.com/rust-lang/rust/commit/1d5a865b2f671189af8d7af6b2d8f3dfa2a6d425"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "c3625d306ab736a5ac4dcbe18881a43935bfa1a2", "filename": "library/std/src/sys/unix/process/process_unix.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2526b416fb4ca7874fa41a3eb595f456703d486/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2526b416fb4ca7874fa41a3eb595f456703d486/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs?ref=a2526b416fb4ca7874fa41a3eb595f456703d486", "patch": "@@ -67,7 +67,7 @@ impl Command {\n                     // pipe I/O up to PIPE_BUF bytes should be atomic, and then\n                     // we want to be sure we *don't* run at_exit destructors as\n                     // we're being torn down regardless\n-                    assert!(output.write(&bytes).is_ok());\n+                    rtassert!(output.write(&bytes).is_ok());\n                     libc::_exit(1)\n                 }\n                 n => n,"}]}