{"sha": "2860f25ef30af997df7558014e429024ecf4c1a6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4NjBmMjVlZjMwYWY5OTdkZjc1NTgwMTRlNDI5MDI0ZWNmNGMxYTY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-06-22T13:12:01Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-06-22T13:12:01Z"}, "message": "minor: extend source_to_def docs", "tree": {"sha": "c1d3fbd9497e2303720f383ee32c962e5f75f4fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1d3fbd9497e2303720f383ee32c962e5f75f4fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2860f25ef30af997df7558014e429024ecf4c1a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2860f25ef30af997df7558014e429024ecf4c1a6", "html_url": "https://github.com/rust-lang/rust/commit/2860f25ef30af997df7558014e429024ecf4c1a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2860f25ef30af997df7558014e429024ecf4c1a6/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa0d568522de0f806fa078be8e7f09addae97835", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa0d568522de0f806fa078be8e7f09addae97835", "html_url": "https://github.com/rust-lang/rust/commit/fa0d568522de0f806fa078be8e7f09addae97835"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "0c5ba3a8f696a24b69e603888272cfb8478b63de", "filename": "crates/hir/src/semantics/source_to_def.rs", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/2860f25ef30af997df7558014e429024ecf4c1a6/crates%2Fhir%2Fsrc%2Fsemantics%2Fsource_to_def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2860f25ef30af997df7558014e429024ecf4c1a6/crates%2Fhir%2Fsrc%2Fsemantics%2Fsource_to_def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsemantics%2Fsource_to_def.rs?ref=2860f25ef30af997df7558014e429024ecf4c1a6", "patch": "@@ -1,6 +1,6 @@\n //! Maps *syntax* of various definitions to their semantic ids.\n //!\n-//! This is a very interesting module, and, in some sense, can be considered a\n+//! This is a very interesting module, and, in some sense, can be considered the\n //! heart of the IDE parts of rust-analyzer.\n //!\n //! This module solves the following problem:\n@@ -17,7 +17,7 @@\n //! looking at the syntax of the function we can realise that it is a part of an\n //! `impl` block, but we won't be able to tell what trait function the current\n //! function overrides, and whether it does that correctly. For that, we need to\n-//! go from [`ast::Fn`] to [`crate::Function], and that's exactly what this\n+//! go from [`ast::Fn`] to [`crate::Function`], and that's exactly what this\n //! module does.\n //!\n //! As syntax trees are values and don't know their place of origin/identity,\n@@ -68,6 +68,22 @@\n //! current node. Then, `findSourceNonLocalFirDeclaration` gets `Fir` for this\n //! parent. Finally, `findElementIn` function traverses `Fir` children to find\n //! one with the same source we originally started with.\n+//!\n+//! One question is left though -- where does the recursion stops? This happens\n+//! when we get to the file syntax node, which doesn't have a syntactic parent.\n+//! In that case, we loop through all the crates that might contain this file\n+//! and look for a module whose source is the given file.\n+//!\n+//! Note that the logic in this module is somewhat fundamentally imprecise --\n+//! due to conditional compilation and `#[path]` attributes, there's no\n+//! injective mapping from syntax nodes to defs. This is not an edge case --\n+//! more or less every item in a `lib.rs` is a part of two distinct crates: a\n+//! library with `--cfg test` and a library without.\n+//!\n+//! At the moment, we don't really handle this well and return the first answer\n+//! that works. Ideally, we should first let the caller to pick a specific\n+//! active crate for a given position, and then provide an API to resolve all\n+//! syntax nodes against this specific crate.\n \n use base_db::FileId;\n use hir_def::{"}]}