{"sha": "0d8937299e6a08c499c24aa898f6cf5ce3f8645c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkODkzNzI5OWU2YTA4YzQ5OWMyNGFhODk4ZjZjZjVjZTNmODY0NWM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-03-07T07:05:35Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-03-07T07:05:35Z"}, "message": "Auto merge of #3850 - mikerite:rustfmt-tests, r=phansch\n\nMore test improvements", "tree": {"sha": "3af704a45b24efc5e08fc373923ef152b5ed35a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3af704a45b24efc5e08fc373923ef152b5ed35a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d8937299e6a08c499c24aa898f6cf5ce3f8645c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d8937299e6a08c499c24aa898f6cf5ce3f8645c", "html_url": "https://github.com/rust-lang/rust/commit/0d8937299e6a08c499c24aa898f6cf5ce3f8645c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d8937299e6a08c499c24aa898f6cf5ce3f8645c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00baf7a1118f4b8332a47f68e8bebbac963a5dcb", "url": "https://api.github.com/repos/rust-lang/rust/commits/00baf7a1118f4b8332a47f68e8bebbac963a5dcb", "html_url": "https://github.com/rust-lang/rust/commit/00baf7a1118f4b8332a47f68e8bebbac963a5dcb"}, {"sha": "7b948232ba779601e57d54c4edf1c7e15babadd6", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b948232ba779601e57d54c4edf1c7e15babadd6", "html_url": "https://github.com/rust-lang/rust/commit/7b948232ba779601e57d54c4edf1c7e15babadd6"}], "stats": {"total": 133, "additions": 92, "deletions": 41}, "files": [{"sha": "ec860de93582130e66aa8354eae93fc7f695aab9", "filename": "ci/base-tests.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d8937299e6a08c499c24aa898f6cf5ce3f8645c/ci%2Fbase-tests.sh", "raw_url": "https://github.com/rust-lang/rust/raw/0d8937299e6a08c499c24aa898f6cf5ce3f8645c/ci%2Fbase-tests.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ci%2Fbase-tests.sh?ref=0d8937299e6a08c499c24aa898f6cf5ce3f8645c", "patch": "@@ -59,7 +59,7 @@ rustup override set nightly\n # avoid loop spam and allow cmds with exit status != 0\n set +ex\n \n-for file in `find tests -not -path \"tests/ui/doc.rs\" -not -path \"tests/ui/unused_unit.rs\" | grep \"\\.rs$\"` ; do\n+for file in `find tests | grep \"\\.rs$\"` ; do\n   rustfmt ${file} --check\n   if [ $? -ne 0 ]; then\n     echo \"${file} needs reformatting!\""}, {"sha": "be0989347fa628a0cffb3dc0902e0c7a69675d93", "filename": "tests/ui/doc.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d8937299e6a08c499c24aa898f6cf5ce3f8645c/tests%2Fui%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d8937299e6a08c499c24aa898f6cf5ce3f8645c/tests%2Fui%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdoc.rs?ref=0d8937299e6a08c499c24aa898f6cf5ce3f8645c", "patch": "@@ -2,6 +2,8 @@\n \n #![allow(dead_code)]\n #![warn(clippy::doc_markdown)]\n+#![feature(custom_inner_attributes)]\n+#![rustfmt::skip]\n \n /// The foo_bar function does _nothing_. See also foo::bar. (note the dot there)\n /// Markdown is _weird_. I mean _really weird_.  This \\_ is ok. So is `_`. But not Foo::some_fun"}, {"sha": "ca1cac59dad1ea4d04c8704df3bc4ea3f4a1bad9", "filename": "tests/ui/doc.stderr", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/0d8937299e6a08c499c24aa898f6cf5ce3f8645c/tests%2Fui%2Fdoc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d8937299e6a08c499c24aa898f6cf5ce3f8645c/tests%2Fui%2Fdoc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdoc.stderr?ref=0d8937299e6a08c499c24aa898f6cf5ce3f8645c", "patch": "@@ -7,181 +7,181 @@ LL | //! This file tests for the DOC_MARKDOWN lint\n    = note: `-D clippy::doc-markdown` implied by `-D warnings`\n \n error: you should put `foo_bar` between ticks in the documentation\n-  --> $DIR/doc.rs:6:9\n+  --> $DIR/doc.rs:8:9\n    |\n LL | /// The foo_bar function does _nothing_. See also foo::bar. (note the dot there)\n    |         ^^^^^^^\n \n error: you should put `foo::bar` between ticks in the documentation\n-  --> $DIR/doc.rs:6:51\n+  --> $DIR/doc.rs:8:51\n    |\n LL | /// The foo_bar function does _nothing_. See also foo::bar. (note the dot there)\n    |                                                   ^^^^^^^^\n \n error: you should put `Foo::some_fun` between ticks in the documentation\n-  --> $DIR/doc.rs:7:84\n+  --> $DIR/doc.rs:9:84\n    |\n LL | /// Markdown is _weird_. I mean _really weird_.  This /_ is ok. So is `_`. But not Foo::some_fun\n    |                                                                                    ^^^^^^^^^^^^^\n \n error: you should put `a::global:path` between ticks in the documentation\n-  --> $DIR/doc.rs:9:15\n+  --> $DIR/doc.rs:11:15\n    |\n LL | /// Here be ::a::global:path.\n    |               ^^^^^^^^^^^^^^\n \n error: you should put `NotInCodeBlock` between ticks in the documentation\n-  --> $DIR/doc.rs:10:22\n+  --> $DIR/doc.rs:12:22\n    |\n LL | /// That's not code ~NotInCodeBlock~.\n    |                      ^^^^^^^^^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n-  --> $DIR/doc.rs:11:5\n+  --> $DIR/doc.rs:13:5\n    |\n LL | /// be_sure_we_got_to_the_end_of_it\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n-  --> $DIR/doc.rs:25:5\n+  --> $DIR/doc.rs:27:5\n    |\n LL | /// be_sure_we_got_to_the_end_of_it\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n-  --> $DIR/doc.rs:32:5\n+  --> $DIR/doc.rs:34:5\n    |\n LL | /// be_sure_we_got_to_the_end_of_it\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n-  --> $DIR/doc.rs:46:5\n+  --> $DIR/doc.rs:48:5\n    |\n LL | /// be_sure_we_got_to_the_end_of_it\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `link_with_underscores` between ticks in the documentation\n-  --> $DIR/doc.rs:50:22\n+  --> $DIR/doc.rs:52:22\n    |\n LL | /// This test has [a link_with_underscores][chunked-example] inside it. See #823.\n    |                      ^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `inline_link2` between ticks in the documentation\n-  --> $DIR/doc.rs:53:21\n+  --> $DIR/doc.rs:55:21\n    |\n LL | /// It can also be [inline_link2].\n    |                     ^^^^^^^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n-  --> $DIR/doc.rs:63:5\n+  --> $DIR/doc.rs:65:5\n    |\n LL | /// be_sure_we_got_to_the_end_of_it\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `CamelCaseThing` between ticks in the documentation\n-  --> $DIR/doc.rs:71:8\n+  --> $DIR/doc.rs:73:8\n    |\n LL | /// ## CamelCaseThing\n    |        ^^^^^^^^^^^^^^\n \n error: you should put `CamelCaseThing` between ticks in the documentation\n-  --> $DIR/doc.rs:74:7\n+  --> $DIR/doc.rs:76:7\n    |\n LL | /// # CamelCaseThing\n    |       ^^^^^^^^^^^^^^\n \n error: you should put `CamelCaseThing` between ticks in the documentation\n-  --> $DIR/doc.rs:76:22\n+  --> $DIR/doc.rs:78:22\n    |\n LL | /// Not a title #897 CamelCaseThing\n    |                      ^^^^^^^^^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n-  --> $DIR/doc.rs:77:5\n+  --> $DIR/doc.rs:79:5\n    |\n LL | /// be_sure_we_got_to_the_end_of_it\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n-  --> $DIR/doc.rs:84:5\n+  --> $DIR/doc.rs:86:5\n    |\n LL | /// be_sure_we_got_to_the_end_of_it\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n-  --> $DIR/doc.rs:97:5\n+  --> $DIR/doc.rs:99:5\n    |\n LL | /// be_sure_we_got_to_the_end_of_it\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `FooBar` between ticks in the documentation\n-  --> $DIR/doc.rs:108:42\n+  --> $DIR/doc.rs:110:42\n    |\n LL | /** E.g. serialization of an empty list: FooBar\n    |                                          ^^^^^^\n \n error: you should put `BarQuz` between ticks in the documentation\n-  --> $DIR/doc.rs:113:5\n+  --> $DIR/doc.rs:115:5\n    |\n LL | And BarQuz too.\n    |     ^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n-  --> $DIR/doc.rs:114:1\n+  --> $DIR/doc.rs:116:1\n    |\n LL | be_sure_we_got_to_the_end_of_it\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `FooBar` between ticks in the documentation\n-  --> $DIR/doc.rs:119:42\n+  --> $DIR/doc.rs:121:42\n    |\n LL | /** E.g. serialization of an empty list: FooBar\n    |                                          ^^^^^^\n \n error: you should put `BarQuz` between ticks in the documentation\n-  --> $DIR/doc.rs:124:5\n+  --> $DIR/doc.rs:126:5\n    |\n LL | And BarQuz too.\n    |     ^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n-  --> $DIR/doc.rs:125:1\n+  --> $DIR/doc.rs:127:1\n    |\n LL | be_sure_we_got_to_the_end_of_it\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n-  --> $DIR/doc.rs:136:5\n+  --> $DIR/doc.rs:138:5\n    |\n LL | /// be_sure_we_got_to_the_end_of_it\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put bare URLs between `<`/`>` or make a proper Markdown link\n-  --> $DIR/doc.rs:163:13\n+  --> $DIR/doc.rs:165:13\n    |\n LL | /// Not ok: http://www.unicode.org\n    |             ^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put bare URLs between `<`/`>` or make a proper Markdown link\n-  --> $DIR/doc.rs:164:13\n+  --> $DIR/doc.rs:166:13\n    |\n LL | /// Not ok: https://www.unicode.org\n    |             ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put bare URLs between `<`/`>` or make a proper Markdown link\n-  --> $DIR/doc.rs:165:13\n+  --> $DIR/doc.rs:167:13\n    |\n LL | /// Not ok: http://www.unicode.org/\n    |             ^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put bare URLs between `<`/`>` or make a proper Markdown link\n-  --> $DIR/doc.rs:166:13\n+  --> $DIR/doc.rs:168:13\n    |\n LL | /// Not ok: http://www.unicode.org/reports/tr9/#Reordering_Resolved_Levels\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `mycrate::Collection` between ticks in the documentation\n-  --> $DIR/doc.rs:172:22\n+  --> $DIR/doc.rs:174:22\n    |\n LL | /// An iterator over mycrate::Collection's values.\n    |                      ^^^^^^^^^^^^^^^^^^^"}, {"sha": "641245896839daafc5224f8ecb224c69acb72463", "filename": "tests/ui/unused_unit.fixed", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/0d8937299e6a08c499c24aa898f6cf5ce3f8645c/tests%2Fui%2Funused_unit.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/0d8937299e6a08c499c24aa898f6cf5ce3f8645c/tests%2Fui%2Funused_unit.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_unit.fixed?ref=0d8937299e6a08c499c24aa898f6cf5ce3f8645c", "patch": "@@ -0,0 +1,44 @@\n+// run-rustfix\n+\n+// The output for humans should just highlight the whole span without showing\n+// the suggested replacement, but we also want to test that suggested\n+// replacement only removes one set of parentheses, rather than na\u00efvely\n+// stripping away any starting or ending parenthesis characters\u2014hence this\n+// test of the JSON error format.\n+\n+#![feature(custom_inner_attributes)]\n+#![rustfmt::skip]\n+\n+#![deny(clippy::unused_unit)]\n+\n+struct Unitter;\n+impl Unitter {\n+    // try to disorient the lint with multiple unit returns and newlines\n+    #[allow(clippy::no_effect)]\n+    pub fn get_unit<F: Fn() -> (), G>(&self, f: F, _g: G) \n+    where G: Fn() -> () {\n+        let _y: &Fn() -> () = &f;\n+        (); // this should not lint, as it's not in return type position\n+    }\n+}\n+\n+impl Into<()> for Unitter {\n+    #[rustfmt::skip]\n+    fn into(self)  {\n+        \n+    }\n+}\n+\n+fn return_unit()  {  }\n+\n+#[allow(clippy::needless_return)]\n+#[allow(clippy::never_loop)]\n+fn main() {\n+    let u = Unitter;\n+    assert_eq!(u.get_unit(|| {}, return_unit), u.into());\n+    return_unit();\n+    loop {\n+        break;\n+    }\n+    return;\n+}"}, {"sha": "8e31385b70c9318f92c5dc5990704c617dede45e", "filename": "tests/ui/unused_unit.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0d8937299e6a08c499c24aa898f6cf5ce3f8645c/tests%2Fui%2Funused_unit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d8937299e6a08c499c24aa898f6cf5ce3f8645c/tests%2Fui%2Funused_unit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_unit.rs?ref=0d8937299e6a08c499c24aa898f6cf5ce3f8645c", "patch": "@@ -1,17 +1,20 @@\n-// compile-pass\n+// run-rustfix\n \n // The output for humans should just highlight the whole span without showing\n // the suggested replacement, but we also want to test that suggested\n // replacement only removes one set of parentheses, rather than na\u00efvely\n // stripping away any starting or ending parenthesis characters\u2014hence this\n // test of the JSON error format.\n \n+#![feature(custom_inner_attributes)]\n+#![rustfmt::skip]\n+\n #![deny(clippy::unused_unit)]\n-#![allow(clippy::needless_return)]\n \n struct Unitter;\n impl Unitter {\n     // try to disorient the lint with multiple unit returns and newlines\n+    #[allow(clippy::no_effect)]\n     pub fn get_unit<F: Fn() -> (), G>(&self, f: F, _g: G) ->\n         ()\n     where G: Fn() -> () {\n@@ -29,6 +32,8 @@ impl Into<()> for Unitter {\n \n fn return_unit() -> () { () }\n \n+#[allow(clippy::needless_return)]\n+#[allow(clippy::never_loop)]\n fn main() {\n     let u = Unitter;\n     assert_eq!(u.get_unit(|| {}, return_unit), u.into());"}, {"sha": "c33a220b98c0867cb6ecf20bc169d0112dbd3e4d", "filename": "tests/ui/unused_unit.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0d8937299e6a08c499c24aa898f6cf5ce3f8645c/tests%2Fui%2Funused_unit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d8937299e6a08c499c24aa898f6cf5ce3f8645c/tests%2Fui%2Funused_unit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_unit.stderr?ref=0d8937299e6a08c499c24aa898f6cf5ce3f8645c", "patch": "@@ -1,49 +1,49 @@\n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:15:59\n+  --> $DIR/unused_unit.rs:18:59\n    |\n LL |       pub fn get_unit<F: Fn() -> (), G>(&self, f: F, _g: G) ->\n    |  ___________________________________________________________^\n LL | |         ()\n    | |__________^ help: remove the `-> ()`\n    |\n note: lint level defined here\n-  --> $DIR/unused_unit.rs:9:9\n+  --> $DIR/unused_unit.rs:12:9\n    |\n LL | #![deny(clippy::unused_unit)]\n    |         ^^^^^^^^^^^^^^^^^^^\n \n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:25:19\n+  --> $DIR/unused_unit.rs:28:19\n    |\n LL |     fn into(self) -> () {\n    |                   ^^^^^ help: remove the `-> ()`\n \n error: unneeded unit expression\n-  --> $DIR/unused_unit.rs:26:9\n+  --> $DIR/unused_unit.rs:29:9\n    |\n LL |         ()\n    |         ^^ help: remove the final `()`\n \n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:30:18\n+  --> $DIR/unused_unit.rs:33:18\n    |\n LL | fn return_unit() -> () { () }\n    |                  ^^^^^ help: remove the `-> ()`\n \n error: unneeded unit expression\n-  --> $DIR/unused_unit.rs:30:26\n+  --> $DIR/unused_unit.rs:33:26\n    |\n LL | fn return_unit() -> () { () }\n    |                          ^^ help: remove the final `()`\n \n error: unneeded `()`\n-  --> $DIR/unused_unit.rs:37:14\n+  --> $DIR/unused_unit.rs:42:14\n    |\n LL |         break();\n    |              ^^ help: remove the `()`\n \n error: unneeded `()`\n-  --> $DIR/unused_unit.rs:39:11\n+  --> $DIR/unused_unit.rs:44:11\n    |\n LL |     return();\n    |           ^^ help: remove the `()`"}]}