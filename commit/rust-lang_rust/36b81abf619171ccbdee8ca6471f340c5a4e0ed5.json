{"sha": "36b81abf619171ccbdee8ca6471f340c5a4e0ed5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2YjgxYWJmNjE5MTcxY2NiZGVlOGNhNjQ3MWYzNDBjNWE0ZTBlZDU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-10T18:40:44Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-10T20:15:07Z"}, "message": "rustc: Perform a cast in vector initialization due to changing layers of indirection. Keep test/run-pass/size-and-align.rs XFAIL'd due to a leak in rustboot.", "tree": {"sha": "9f6067c24289c4c6402b98586aa71ea9a9b058df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f6067c24289c4c6402b98586aa71ea9a9b058df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36b81abf619171ccbdee8ca6471f340c5a4e0ed5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36b81abf619171ccbdee8ca6471f340c5a4e0ed5", "html_url": "https://github.com/rust-lang/rust/commit/36b81abf619171ccbdee8ca6471f340c5a4e0ed5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36b81abf619171ccbdee8ca6471f340c5a4e0ed5/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7505c1fa2319adbd928847ca27f75f5a95eb7c3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/7505c1fa2319adbd928847ca27f75f5a95eb7c3d", "html_url": "https://github.com/rust-lang/rust/commit/7505c1fa2319adbd928847ca27f75f5a95eb7c3d"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "f69834d375951e6635bb465f735bef99b922780e", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/36b81abf619171ccbdee8ca6471f340c5a4e0ed5/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36b81abf619171ccbdee8ca6471f340c5a4e0ed5/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=36b81abf619171ccbdee8ca6471f340c5a4e0ed5", "patch": "@@ -4050,7 +4050,27 @@ fn trans_vec(@block_ctxt cx, vec[@ast.expr] args,\n         bcx = src_res.bcx;\n         auto dst_res = GEP_tup_like(bcx, pseudo_tup_ty, body, vec(0, i));\n         bcx = dst_res.bcx;\n-        bcx = copy_ty(bcx, INIT, dst_res.val, src_res.val, unit_ty).bcx;\n+\n+        // Cast the destination type to the source type. This is needed to\n+        // make tags work, for a subtle combination of reasons:\n+        //\n+        // (1) \"dst_res\" above is derived from \"body\", which is in turn\n+        //     derived from \"vec_val\".\n+        // (2) \"vec_val\" has the LLVM type \"llty\".\n+        // (3) \"llty\" is the result of calling type_of() on a vector type.\n+        // (4) For tags, type_of() returns a different type depending on\n+        //     on whether the tag is behind a box or not. Vector types are\n+        //     considered boxes.\n+        // (5) \"src_res\" is derived from \"unit_ty\", which is not behind a box.\n+\n+        auto dst_val;\n+        if (!ty.type_has_dynamic_size(unit_ty)) {\n+            dst_val = bcx.build.PointerCast(dst_res.val, T_ptr(llunit_ty));\n+        } else {\n+            dst_val = dst_res.val;\n+        }\n+\n+        bcx = copy_ty(bcx, INIT, dst_val, src_res.val, unit_ty).bcx;\n         i += 1;\n     }\n     auto fill = bcx.build.GEP(vec_val,"}]}