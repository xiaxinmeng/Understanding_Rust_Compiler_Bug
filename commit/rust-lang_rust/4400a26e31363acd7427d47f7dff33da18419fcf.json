{"sha": "4400a26e31363acd7427d47f7dff33da18419fcf", "node_id": "C_kwDOAAsO6NoAKDQ0MDBhMjZlMzEzNjNhY2Q3NDI3ZDQ3ZjdkZmYzM2RhMTg0MTlmY2Y", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-06-19T22:10:42Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-06-19T22:10:42Z"}, "message": "Make missing argument placeholder more obvious that it's a placeholder", "tree": {"sha": "fc2bb4173e81151a9b9665276286365966adbd37", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc2bb4173e81151a9b9665276286365966adbd37"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4400a26e31363acd7427d47f7dff33da18419fcf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4400a26e31363acd7427d47f7dff33da18419fcf", "html_url": "https://github.com/rust-lang/rust/commit/4400a26e31363acd7427d47f7dff33da18419fcf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4400a26e31363acd7427d47f7dff33da18419fcf/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b646bd533e8a20c06a71d0b7837e15eb4c79fa8", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b646bd533e8a20c06a71d0b7837e15eb4c79fa8", "html_url": "https://github.com/rust-lang/rust/commit/2b646bd533e8a20c06a71d0b7837e15eb4c79fa8"}], "stats": {"total": 226, "additions": 114, "deletions": 112}, "files": [{"sha": "2326c4069e483a7e8386abb1eb740d64f1645a28", "filename": "compiler/rustc_typeck/src/check/fn_ctxt/checks.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4400a26e31363acd7427d47f7dff33da18419fcf/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4400a26e31363acd7427d47f7dff33da18419fcf/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fchecks.rs?ref=4400a26e31363acd7427d47f7dff33da18419fcf", "patch": "@@ -955,8 +955,10 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         let input_ty = self.resolve_vars_if_possible(expected_ty);\n                         if input_ty.is_unit() {\n                             \"()\".to_string()\n+                        } else if !input_ty.is_ty_var() {\n+                            format!(\"/* {} */\", input_ty)\n                         } else {\n-                            format!(\"{{{}}}\", input_ty)\n+                            \"/* value */\".to_string()\n                         }\n                     };\n                     suggestion += &suggestion_text;"}, {"sha": "dd4812b5b258985dd603b9eb3c8555a543f5dee5", "filename": "src/test/ui/argument-suggestions/basic.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Fargument-suggestions%2Fbasic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Fargument-suggestions%2Fbasic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fargument-suggestions%2Fbasic.stderr?ref=4400a26e31363acd7427d47f7dff33da18419fcf", "patch": "@@ -41,8 +41,8 @@ LL | fn missing(_i: u32) {}\n    |    ^^^^^^^ -------\n help: provide the argument\n    |\n-LL |     missing({u32});\n-   |     ~~~~~~~~~~~~~~\n+LL |     missing(/* u32 */);\n+   |     ~~~~~~~~~~~~~~~~~~\n \n error[E0308]: arguments to this function are incorrect\n   --> $DIR/basic.rs:23:5\n@@ -94,8 +94,8 @@ LL |     let closure = |x| x;\n    |                   ^^^\n help: provide the argument\n    |\n-LL |     closure({_});\n-   |     ~~~~~~~~~~~~\n+LL |     closure(/* value */);\n+   |     ~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to 6 previous errors\n "}, {"sha": "fa030a8f49d8c46a37a0e64c27cbe5537ab02824", "filename": "src/test/ui/argument-suggestions/complex.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Fargument-suggestions%2Fcomplex.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Fargument-suggestions%2Fcomplex.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fargument-suggestions%2Fcomplex.stderr?ref=4400a26e31363acd7427d47f7dff33da18419fcf", "patch": "@@ -11,8 +11,8 @@ LL | fn complex(_i: u32, _s: &str, _e: E, _f: F, _g: G, _x: X, _y: Y, _z: Z ) {}\n    |    ^^^^^^^ -------  --------  -----  -----  -----  -----  -----  ------\n help: did you mean\n    |\n-LL |   complex({u32}, &\"\", {E}, F::X2, G{}, X {}, Y {}, Z {});\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+LL |   complex(/* u32 */, &\"\", /* E */, F::X2, G{}, X {}, Y {}, Z {});\n+   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "8af31b8b751f3f1312f9ebb4c8b2e8e98ae125ba", "filename": "src/test/ui/argument-suggestions/issue-96638.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Fargument-suggestions%2Fissue-96638.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Fargument-suggestions%2Fissue-96638.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fargument-suggestions%2Fissue-96638.stderr?ref=4400a26e31363acd7427d47f7dff33da18419fcf", "patch": "@@ -11,8 +11,8 @@ LL | fn f(_: usize, _: &usize, _: usize) {}\n    |    ^ --------  ---------  --------\n help: provide the argument\n    |\n-LL |     f({usize}, &x, {usize});\n-   |     ~~~~~~~~~~~~~~~~~~~~~~~\n+LL |     f(/* usize */, &x, /* usize */);\n+   |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "ac54adc5eeb92997f9f3ce007d0c40b4ebc7f90c", "filename": "src/test/ui/argument-suggestions/issue-97197.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Fargument-suggestions%2Fissue-97197.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Fargument-suggestions%2Fissue-97197.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fargument-suggestions%2Fissue-97197.stderr?ref=4400a26e31363acd7427d47f7dff33da18419fcf", "patch": "@@ -11,8 +11,8 @@ LL | pub fn g(a1: (), a2: bool, a3: bool, a4: bool, a5: bool, a6: ()) -> () {}\n    |        ^ ------  --------  --------  --------  --------  ------\n help: provide the arguments\n    |\n-LL |     g((), {bool}, {bool}, {bool}, {bool}, ());\n-   |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+LL |     g((), /* bool */, /* bool */, /* bool */, /* bool */, ());\n+   |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "2af24d521f380e9fa48d9c12646587ef4b1eec58", "filename": "src/test/ui/argument-suggestions/issue-97484.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Fargument-suggestions%2Fissue-97484.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Fargument-suggestions%2Fissue-97484.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fargument-suggestions%2Fissue-97484.stderr?ref=4400a26e31363acd7427d47f7dff33da18419fcf", "patch": "@@ -19,8 +19,8 @@ LL +     foo(&&A, B, C, D, E, F, G);\n    |\n help: remove the extra arguments\n    |\n-LL |     foo(&&A, D, {&E}, G);\n-   |     ~~~~~~~~~~~~~~~~~~~~\n+LL |     foo(&&A, D, /* &E */, G);\n+   |     ~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "2509d22d7ff82e1f736a81466f4c9b63709cefc5", "filename": "src/test/ui/argument-suggestions/missing_arguments.stderr", "status": "modified", "additions": 38, "deletions": 38, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Fargument-suggestions%2Fmissing_arguments.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Fargument-suggestions%2Fmissing_arguments.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fargument-suggestions%2Fmissing_arguments.stderr?ref=4400a26e31363acd7427d47f7dff33da18419fcf", "patch": "@@ -11,8 +11,8 @@ LL | fn one_arg(_a: i32) {}\n    |    ^^^^^^^ -------\n help: provide the argument\n    |\n-LL |   one_arg({i32});\n-   |   ~~~~~~~~~~~~~~\n+LL |   one_arg(/* i32 */);\n+   |   ~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 2 arguments but 0 arguments were supplied\n   --> $DIR/missing_arguments.rs:14:3\n@@ -27,8 +27,8 @@ LL | fn two_same(_a: i32, _b: i32) {}\n    |    ^^^^^^^^ -------  -------\n help: provide the arguments\n    |\n-LL |   two_same({i32}, {i32});\n-   |   ~~~~~~~~~~~~~~~~~~~~~~\n+LL |   two_same(/* i32 */, /* i32 */);\n+   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 2 arguments but 1 argument was supplied\n   --> $DIR/missing_arguments.rs:15:3\n@@ -43,8 +43,8 @@ LL | fn two_same(_a: i32, _b: i32) {}\n    |    ^^^^^^^^ -------  -------\n help: provide the argument\n    |\n-LL |   two_same(1, {i32});\n-   |   ~~~~~~~~~~~~~~~~~~\n+LL |   two_same(1, /* i32 */);\n+   |   ~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 2 arguments but 0 arguments were supplied\n   --> $DIR/missing_arguments.rs:16:3\n@@ -59,8 +59,8 @@ LL | fn two_diff(_a: i32, _b: f32) {}\n    |    ^^^^^^^^ -------  -------\n help: provide the arguments\n    |\n-LL |   two_diff({i32}, {f32});\n-   |   ~~~~~~~~~~~~~~~~~~~~~~\n+LL |   two_diff(/* i32 */, /* f32 */);\n+   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 2 arguments but 1 argument was supplied\n   --> $DIR/missing_arguments.rs:17:3\n@@ -75,8 +75,8 @@ LL | fn two_diff(_a: i32, _b: f32) {}\n    |    ^^^^^^^^ -------  -------\n help: provide the argument\n    |\n-LL |   two_diff(1, {f32});\n-   |   ~~~~~~~~~~~~~~~~~~\n+LL |   two_diff(1, /* f32 */);\n+   |   ~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 2 arguments but 1 argument was supplied\n   --> $DIR/missing_arguments.rs:18:3\n@@ -91,8 +91,8 @@ LL | fn two_diff(_a: i32, _b: f32) {}\n    |    ^^^^^^^^ -------  -------\n help: provide the argument\n    |\n-LL |   two_diff({i32}, 1.0);\n-   |   ~~~~~~~~~~~~~~~~~~~~\n+LL |   two_diff(/* i32 */, 1.0);\n+   |   ~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 3 arguments but 0 arguments were supplied\n   --> $DIR/missing_arguments.rs:21:3\n@@ -107,8 +107,8 @@ LL | fn three_same(_a: i32, _b: i32, _c: i32) {}\n    |    ^^^^^^^^^^ -------  -------  -------\n help: provide the arguments\n    |\n-LL |   three_same({i32}, {i32}, {i32});\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+LL |   three_same(/* i32 */, /* i32 */, /* i32 */);\n+   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 3 arguments but 1 argument was supplied\n   --> $DIR/missing_arguments.rs:22:3\n@@ -123,8 +123,8 @@ LL | fn three_same(_a: i32, _b: i32, _c: i32) {}\n    |    ^^^^^^^^^^ -------  -------  -------\n help: provide the arguments\n    |\n-LL |   three_same(1, {i32}, {i32});\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+LL |   three_same(1, /* i32 */, /* i32 */);\n+   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 3 arguments but 2 arguments were supplied\n   --> $DIR/missing_arguments.rs:23:3\n@@ -139,8 +139,8 @@ LL | fn three_same(_a: i32, _b: i32, _c: i32) {}\n    |    ^^^^^^^^^^ -------  -------  -------\n help: provide the argument\n    |\n-LL |   three_same(1, 1, {i32});\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~\n+LL |   three_same(1, 1, /* i32 */);\n+   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 3 arguments but 2 arguments were supplied\n   --> $DIR/missing_arguments.rs:26:3\n@@ -155,8 +155,8 @@ LL | fn three_diff(_a: i32, _b: f32, _c: &str) {}\n    |    ^^^^^^^^^^ -------  -------  --------\n help: provide the argument\n    |\n-LL |   three_diff({i32}, 1.0, \"\");\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~\n+LL |   three_diff(/* i32 */, 1.0, \"\");\n+   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 3 arguments but 2 arguments were supplied\n   --> $DIR/missing_arguments.rs:27:3\n@@ -171,8 +171,8 @@ LL | fn three_diff(_a: i32, _b: f32, _c: &str) {}\n    |    ^^^^^^^^^^ -------  -------  --------\n help: provide the argument\n    |\n-LL |   three_diff(1, {f32}, \"\");\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~\n+LL |   three_diff(1, /* f32 */, \"\");\n+   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 3 arguments but 2 arguments were supplied\n   --> $DIR/missing_arguments.rs:28:3\n@@ -187,8 +187,8 @@ LL | fn three_diff(_a: i32, _b: f32, _c: &str) {}\n    |    ^^^^^^^^^^ -------  -------  --------\n help: provide the argument\n    |\n-LL |   three_diff(1, 1.0, {&str});\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~\n+LL |   three_diff(1, 1.0, /* &str */);\n+   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 3 arguments but 1 argument was supplied\n   --> $DIR/missing_arguments.rs:29:3\n@@ -203,8 +203,8 @@ LL | fn three_diff(_a: i32, _b: f32, _c: &str) {}\n    |    ^^^^^^^^^^ -------  -------  --------\n help: provide the arguments\n    |\n-LL |   three_diff({i32}, {f32}, \"\");\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+LL |   three_diff(/* i32 */, /* f32 */, \"\");\n+   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 3 arguments but 1 argument was supplied\n   --> $DIR/missing_arguments.rs:30:3\n@@ -222,8 +222,8 @@ LL | fn three_diff(_a: i32, _b: f32, _c: &str) {}\n    |    ^^^^^^^^^^ -------  -------  --------\n help: provide the arguments\n    |\n-LL |   three_diff({i32}, 1.0, {&str});\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+LL |   three_diff(/* i32 */, 1.0, /* &str */);\n+   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 3 arguments but 1 argument was supplied\n   --> $DIR/missing_arguments.rs:31:3\n@@ -238,8 +238,8 @@ LL | fn three_diff(_a: i32, _b: f32, _c: &str) {}\n    |    ^^^^^^^^^^ -------  -------  --------\n help: provide the arguments\n    |\n-LL |   three_diff(1, {f32}, {&str});\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+LL |   three_diff(1, /* f32 */, /* &str */);\n+   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 4 arguments but 0 arguments were supplied\n   --> $DIR/missing_arguments.rs:34:3\n@@ -254,8 +254,8 @@ LL | fn four_repeated(_a: i32, _b: f32, _c: f32, _d: &str) {}\n    |    ^^^^^^^^^^^^^ -------  -------  -------  --------\n help: provide the arguments\n    |\n-LL |   four_repeated({i32}, {f32}, {f32}, {&str});\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+LL |   four_repeated(/* i32 */, /* f32 */, /* f32 */, /* &str */);\n+   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 4 arguments but 2 arguments were supplied\n   --> $DIR/missing_arguments.rs:35:3\n@@ -270,8 +270,8 @@ LL | fn four_repeated(_a: i32, _b: f32, _c: f32, _d: &str) {}\n    |    ^^^^^^^^^^^^^ -------  -------  -------  --------\n help: provide the arguments\n    |\n-LL |   four_repeated(1, {f32}, {f32}, \"\");\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+LL |   four_repeated(1, /* f32 */, /* f32 */, \"\");\n+   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 5 arguments but 0 arguments were supplied\n   --> $DIR/missing_arguments.rs:38:3\n@@ -286,8 +286,8 @@ LL | fn complex(_a: i32, _b: f32, _c: i32, _d: f32, _e: &str) {}\n    |    ^^^^^^^ -------  -------  -------  -------  --------\n help: provide the arguments\n    |\n-LL |   complex({i32}, {f32}, {i32}, {f32}, {&str});\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+LL |   complex(/* i32 */, /* f32 */, /* i32 */, /* f32 */, /* &str */);\n+   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 5 arguments but 2 arguments were supplied\n   --> $DIR/missing_arguments.rs:39:3\n@@ -302,8 +302,8 @@ LL | fn complex(_a: i32, _b: f32, _c: i32, _d: f32, _e: &str) {}\n    |    ^^^^^^^ -------  -------  -------  -------  --------\n help: provide the arguments\n    |\n-LL |   complex(1, {f32}, {i32}, {f32}, \"\");\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+LL |   complex(1, /* f32 */, /* i32 */, /* f32 */, \"\");\n+   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to 19 previous errors\n "}, {"sha": "3fe4473a594e03d7abe25fde8f71596a72376686", "filename": "src/test/ui/argument-suggestions/mixed_cases.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Fargument-suggestions%2Fmixed_cases.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Fargument-suggestions%2Fmixed_cases.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fargument-suggestions%2Fmixed_cases.stderr?ref=4400a26e31363acd7427d47f7dff33da18419fcf", "patch": "@@ -13,8 +13,8 @@ LL | fn two_args(_a: i32, _b: f32) {}\n    |    ^^^^^^^^ -------  -------\n help: remove the extra argument\n    |\n-LL |   two_args(1, {f32});\n-   |   ~~~~~~~~~~~~~~~~~~\n+LL |   two_args(1, /* f32 */);\n+   |   ~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 3 arguments but 4 arguments were supplied\n   --> $DIR/mixed_cases.rs:11:3\n@@ -32,8 +32,8 @@ LL | fn three_args(_a: i32, _b: f32, _c: &str) {}\n    |    ^^^^^^^^^^ -------  -------  --------\n help: did you mean\n    |\n-LL |   three_args(1, {f32}, \"\");\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~\n+LL |   three_args(1, /* f32 */, \"\");\n+   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 3 arguments but 2 arguments were supplied\n   --> $DIR/mixed_cases.rs:14:3\n@@ -51,8 +51,8 @@ LL | fn three_args(_a: i32, _b: f32, _c: &str) {}\n    |    ^^^^^^^^^^ -------  -------  --------\n help: provide the argument\n    |\n-LL |   three_args(1, {f32}, {&str});\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+LL |   three_args(1, /* f32 */, /* &str */);\n+   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0308]: arguments to this function are incorrect\n   --> $DIR/mixed_cases.rs:17:3\n@@ -69,8 +69,8 @@ LL | fn three_args(_a: i32, _b: f32, _c: &str) {}\n    |    ^^^^^^^^^^ -------  -------  --------\n help: did you mean\n    |\n-LL |   three_args(1, {f32}, \"\");\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~\n+LL |   three_args(1, /* f32 */, \"\");\n+   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0308]: arguments to this function are incorrect\n   --> $DIR/mixed_cases.rs:20:3\n@@ -88,8 +88,8 @@ LL | fn three_args(_a: i32, _b: f32, _c: &str) {}\n    |    ^^^^^^^^^^ -------  -------  --------\n help: swap these arguments\n    |\n-LL |   three_args(1, {f32}, \"\");\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~\n+LL |   three_args(1, /* f32 */, \"\");\n+   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 3 arguments but 2 arguments were supplied\n   --> $DIR/mixed_cases.rs:23:3\n@@ -108,8 +108,8 @@ LL | fn three_args(_a: i32, _b: f32, _c: &str) {}\n    |    ^^^^^^^^^^ -------  -------  --------\n help: did you mean\n    |\n-LL |   three_args(1, {f32}, \"\");\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~\n+LL |   three_args(1, /* f32 */, \"\");\n+   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to 6 previous errors\n "}, {"sha": "176bec819d67a115861ed61b1719d9f956b8225b", "filename": "src/test/ui/c-variadic/variadic-ffi-1.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Fc-variadic%2Fvariadic-ffi-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Fc-variadic%2Fvariadic-ffi-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fc-variadic%2Fvariadic-ffi-1.stderr?ref=4400a26e31363acd7427d47f7dff33da18419fcf", "patch": "@@ -17,8 +17,8 @@ LL |     fn foo(f: isize, x: u8, ...);\n    |        ^^^\n help: provide the arguments\n    |\n-LL |         foo({isize}, {u8});\n-   |         ~~~~~~~~~~~~~~~~~~\n+LL |         foo(/* isize */, /* u8 */);\n+   |         ~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0060]: this function takes at least 2 arguments but 1 argument was supplied\n   --> $DIR/variadic-ffi-1.rs:21:9\n@@ -33,8 +33,8 @@ LL |     fn foo(f: isize, x: u8, ...);\n    |        ^^^\n help: provide the argument\n    |\n-LL |         foo(1, {u8});\n-   |         ~~~~~~~~~~~~\n+LL |         foo(1, /* u8 */);\n+   |         ~~~~~~~~~~~~~~~~\n \n error[E0308]: mismatched types\n   --> $DIR/variadic-ffi-1.rs:23:56"}, {"sha": "3697b5fcf154d04ae460efc70bb86f68960e359a", "filename": "src/test/ui/error-codes/E0057.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Ferror-codes%2FE0057.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Ferror-codes%2FE0057.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0057.stderr?ref=4400a26e31363acd7427d47f7dff33da18419fcf", "patch": "@@ -11,8 +11,8 @@ LL |     let f = |x| x * 3;\n    |             ^^^\n help: provide the argument\n    |\n-LL |     let a = f({_});\n-   |             ~~~~~~\n+LL |     let a = f(/* value */);\n+   |             ~~~~~~~~~~~~~~\n \n error[E0057]: this function takes 1 argument but 2 arguments were supplied\n   --> $DIR/E0057.rs:5:13"}, {"sha": "644fd59833878e31c8405010dbac3c1f9ee8b8dc", "filename": "src/test/ui/error-codes/E0060.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Ferror-codes%2FE0060.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Ferror-codes%2FE0060.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0060.stderr?ref=4400a26e31363acd7427d47f7dff33da18419fcf", "patch": "@@ -11,8 +11,8 @@ LL |     fn printf(_: *const u8, ...) -> u32;\n    |        ^^^^^^\n help: provide the argument\n    |\n-LL |     unsafe { printf({*const u8}); }\n-   |              ~~~~~~~~~~~~~~~~~~~\n+LL |     unsafe { printf(/* *const u8 */); }\n+   |              ~~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "fa55db0924d2953112b837eb2ece28edf43ce461", "filename": "src/test/ui/error-codes/E0061.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Ferror-codes%2FE0061.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Ferror-codes%2FE0061.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0061.stderr?ref=4400a26e31363acd7427d47f7dff33da18419fcf", "patch": "@@ -11,8 +11,8 @@ LL | fn f(a: u16, b: &str) {}\n    |    ^ ------  -------\n help: provide the argument\n    |\n-LL |     f(0, {&str});\n-   |     ~~~~~~~~~~~~\n+LL |     f(0, /* &str */);\n+   |     ~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 1 argument but 0 arguments were supplied\n   --> $DIR/E0061.rs:9:5\n@@ -27,8 +27,8 @@ LL | fn f2(a: u16) {}\n    |    ^^ ------\n help: provide the argument\n    |\n-LL |     f2({u16});\n-   |     ~~~~~~~~~\n+LL |     f2(/* u16 */);\n+   |     ~~~~~~~~~~~~~\n \n error: aborting due to 2 previous errors\n "}, {"sha": "22ba63c3e86f0ef812ddbee47080f403af17b524", "filename": "src/test/ui/hrtb/issue-58451.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Fhrtb%2Fissue-58451.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Fhrtb%2Fissue-58451.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhrtb%2Fissue-58451.stderr?ref=4400a26e31363acd7427d47f7dff33da18419fcf", "patch": "@@ -11,8 +11,8 @@ LL | fn f<I>(i: I)\n    |    ^    ----\n help: provide the argument\n    |\n-LL |     f(&[f({_})]);\n-   |         ~~~~~~\n+LL |     f(&[f(/* value */)]);\n+   |         ~~~~~~~~~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "6499dd0d81b1c67c08b09fc1c355ff952d3a2977", "filename": "src/test/ui/issues/issue-18819.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Fissues%2Fissue-18819.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Fissues%2Fissue-18819.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-18819.stderr?ref=4400a26e31363acd7427d47f7dff33da18419fcf", "patch": "@@ -20,8 +20,8 @@ LL |     print_x(&X);\n    |             ~~\n help: provide the argument\n    |\n-LL |     print_x({&dyn Foo<Item = bool>}, {&str});\n-   |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+LL |     print_x(/* &dyn Foo<Item = bool> */, /* &str */);\n+   |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "6dbe6b59391e369cb51c94ffb7c48242d57d3669", "filename": "src/test/ui/issues/issue-3044.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Fissues%2Fissue-3044.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Fissues%2Fissue-3044.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-3044.stderr?ref=4400a26e31363acd7427d47f7dff33da18419fcf", "patch": "@@ -25,7 +25,7 @@ LL |     fn fold<B, F>(mut self, init: B, mut f: F) -> B\n help: provide the argument\n    |\n LL ~     needlesArr.iter().fold(|x, y| {\n-LL ~     }, {_});\n+LL ~     }, /* value */);\n    |\n \n error: aborting due to 2 previous errors"}, {"sha": "95edee6ad23e8ded0f0b4b54f28114b685f845de", "filename": "src/test/ui/methods/method-call-err-msg.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-err-msg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-err-msg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-err-msg.stderr?ref=4400a26e31363acd7427d47f7dff33da18419fcf", "patch": "@@ -27,8 +27,8 @@ LL |     fn one(self, _: isize) -> Foo { self }\n    |        ^^^ ----  --------\n help: provide the argument\n    |\n-LL |      .one({isize})\n-   |       ~~~~~~~~~~~~\n+LL |      .one(/* isize */)\n+   |       ~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 2 arguments but 1 argument was supplied\n   --> $DIR/method-call-err-msg.rs:15:7\n@@ -43,8 +43,8 @@ LL |     fn two(self, _: isize, _: isize) -> Foo { self }\n    |        ^^^ ----  --------  --------\n help: provide the argument\n    |\n-LL |      .two(0, {isize});\n-   |       ~~~~~~~~~~~~~~~\n+LL |      .two(0, /* isize */);\n+   |       ~~~~~~~~~~~~~~~~~~~\n \n error[E0599]: `Foo` is not an iterator\n   --> $DIR/method-call-err-msg.rs:19:7\n@@ -89,8 +89,8 @@ LL |     fn three<T>(self, _: T, _: T, _: T) -> Foo { self }\n    |        ^^^^^    ----  ----  ----  ----\n help: provide the arguments\n    |\n-LL |     y.three::<usize>({usize}, {usize}, {usize});\n-   |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+LL |     y.three::<usize>(/* usize */, /* usize */, /* usize */);\n+   |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to 5 previous errors\n "}, {"sha": "4000b2ba312455c2555613add9698829bfdae58c", "filename": "src/test/ui/mismatched_types/overloaded-calls-bad.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Fmismatched_types%2Foverloaded-calls-bad.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Fmismatched_types%2Foverloaded-calls-bad.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Foverloaded-calls-bad.stderr?ref=4400a26e31363acd7427d47f7dff33da18419fcf", "patch": "@@ -25,8 +25,8 @@ LL |     extern \"rust-call\" fn call_mut(&mut self, args: Args) -> Self::Output;\n    |                           ^^^^^^^^\n help: provide the argument\n    |\n-LL |     let ans = s({isize});\n-   |               ~~~~~~~~~~\n+LL |     let ans = s(/* isize */);\n+   |               ~~~~~~~~~~~~~~\n \n error[E0057]: this function takes 1 argument but 2 arguments were supplied\n   --> $DIR/overloaded-calls-bad.rs:31:15\n@@ -43,8 +43,8 @@ LL |     extern \"rust-call\" fn call_mut(&mut self, args: Args) -> Self::Output;\n    |                           ^^^^^^^^\n help: remove the extra argument\n    |\n-LL |     let ans = s({isize});\n-   |               ~~~~~~~~~~\n+LL |     let ans = s(/* isize */);\n+   |               ~~~~~~~~~~~~~~\n \n error: aborting due to 3 previous errors\n "}, {"sha": "b1df578ea80a98e48644618b3e218c7937493193", "filename": "src/test/ui/not-enough-arguments.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Fnot-enough-arguments.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Fnot-enough-arguments.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnot-enough-arguments.stderr?ref=4400a26e31363acd7427d47f7dff33da18419fcf", "patch": "@@ -11,8 +11,8 @@ LL | fn foo(a: isize, b: isize, c: isize, d:isize) {\n    |    ^^^ --------  --------  --------  -------\n help: provide the argument\n    |\n-LL |   foo(1, 2, 3, {isize});\n-   |   ~~~~~~~~~~~~~~~~~~~~~\n+LL |   foo(1, 2, 3, /* isize */);\n+   |   ~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 6 arguments but 3 arguments were supplied\n   --> $DIR/not-enough-arguments.rs:29:3\n@@ -39,8 +39,8 @@ LL |     f: i32,\n    |     ------\n help: provide the arguments\n    |\n-LL |   bar(1, 2, 3, {i32}, {i32}, {i32});\n-   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+LL |   bar(1, 2, 3, /* i32 */, /* i32 */, /* i32 */);\n+   |   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to 2 previous errors\n "}, {"sha": "3d367eca707f41dc7222bcbbb3b205fd6b10a1ea", "filename": "src/test/ui/suggestions/args-instead-of-tuple-errors.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Fsuggestions%2Fargs-instead-of-tuple-errors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Fsuggestions%2Fargs-instead-of-tuple-errors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fargs-instead-of-tuple-errors.stderr?ref=4400a26e31363acd7427d47f7dff33da18419fcf", "patch": "@@ -15,8 +15,8 @@ LL |     Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),\n    |     ^^^^\n help: remove the extra argument\n    |\n-LL |     let _: Option<(i32, bool)> = Some({(i32, bool)});\n-   |                                  ~~~~~~~~~~~~~~~~~~~\n+LL |     let _: Option<(i32, bool)> = Some(/* (i32, bool) */);\n+   |                                  ~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this function takes 1 argument but 2 arguments were supplied\n   --> $DIR/args-instead-of-tuple-errors.rs:8:5\n@@ -35,8 +35,8 @@ LL | fn int_bool(_: (i32, bool)) {\n    |    ^^^^^^^^ --------------\n help: remove the extra argument\n    |\n-LL |     int_bool({(i32, bool)});\n-   |     ~~~~~~~~~~~~~~~~~~~~~~~\n+LL |     int_bool(/* (i32, bool) */);\n+   |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this enum variant takes 1 argument but 0 arguments were supplied\n   --> $DIR/args-instead-of-tuple-errors.rs:11:28\n@@ -51,8 +51,8 @@ LL |     Some(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),\n    |     ^^^^\n help: provide the argument\n    |\n-LL |     let _: Option<(i8,)> = Some({(i8,)});\n-   |                            ~~~~~~~~~~~~~\n+LL |     let _: Option<(i8,)> = Some(/* (i8,) */);\n+   |                            ~~~~~~~~~~~~~~~~~\n \n error[E0308]: mismatched types\n   --> $DIR/args-instead-of-tuple-errors.rs:14:34"}, {"sha": "667b15776efd300bdc5b3c610a65505b9bf7b2aa", "filename": "src/test/ui/tuple/wrong_argument_ice-3.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Ftuple%2Fwrong_argument_ice-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Ftuple%2Fwrong_argument_ice-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftuple%2Fwrong_argument_ice-3.stderr?ref=4400a26e31363acd7427d47f7dff33da18419fcf", "patch": "@@ -15,8 +15,8 @@ LL |     pub fn push(&mut self, value: T) {\n    |            ^^^^\n help: remove the extra argument\n    |\n-LL |         groups.push({(Vec<String>, Vec<Process>)});\n-   |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+LL |         groups.push(/* (Vec<String>, Vec<Process>) */);\n+   |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "6ae2aa1dc774d22b5717f02bd9d883b2d51686ca", "filename": "src/test/ui/type-alias-enum-variants/enum-variant-priority-higher-than-other-inherent.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Ftype-alias-enum-variants%2Fenum-variant-priority-higher-than-other-inherent.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Ftype-alias-enum-variants%2Fenum-variant-priority-higher-than-other-inherent.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-enum-variants%2Fenum-variant-priority-higher-than-other-inherent.stderr?ref=4400a26e31363acd7427d47f7dff33da18419fcf", "patch": "@@ -11,8 +11,8 @@ LL |     V(u8)\n    |     ^\n help: provide the argument\n    |\n-LL |     <E>::V({u8});\n-   |     ~~~~~~~~~~~~\n+LL |     <E>::V(/* u8 */);\n+   |     ~~~~~~~~~~~~~~~~\n \n error[E0308]: mismatched types\n   --> $DIR/enum-variant-priority-higher-than-other-inherent.rs:22:17"}, {"sha": "2ea822df2750966a6558731043cf2c015e2f0ec8", "filename": "src/test/ui/typeck/struct-enum-wrong-args.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Ftypeck%2Fstruct-enum-wrong-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4400a26e31363acd7427d47f7dff33da18419fcf/src%2Ftest%2Fui%2Ftypeck%2Fstruct-enum-wrong-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fstruct-enum-wrong-args.stderr?ref=4400a26e31363acd7427d47f7dff33da18419fcf", "patch": "@@ -45,8 +45,8 @@ LL |     Ok(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),\n    |     ^^\n help: provide the argument\n    |\n-LL |     let _ = Ok({_});\n-   |             ~~~~~~~\n+LL |     let _ = Ok(/* value */);\n+   |             ~~~~~~~~~~~~~~~\n \n error[E0061]: this struct takes 1 argument but 0 arguments were supplied\n   --> $DIR/struct-enum-wrong-args.rs:9:13\n@@ -61,8 +61,8 @@ LL | struct Wrapper(i32);\n    |        ^^^^^^^\n help: provide the argument\n    |\n-LL |     let _ = Wrapper({i32});\n-   |             ~~~~~~~~~~~~~~\n+LL |     let _ = Wrapper(/* i32 */);\n+   |             ~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this struct takes 1 argument but 2 arguments were supplied\n   --> $DIR/struct-enum-wrong-args.rs:10:13\n@@ -93,8 +93,8 @@ LL | struct DoubleWrapper(i32, i32);\n    |        ^^^^^^^^^^^^^\n help: provide the arguments\n    |\n-LL |     let _ = DoubleWrapper({i32}, {i32});\n-   |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+LL |     let _ = DoubleWrapper(/* i32 */, /* i32 */);\n+   |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this struct takes 2 arguments but 1 argument was supplied\n   --> $DIR/struct-enum-wrong-args.rs:12:13\n@@ -109,8 +109,8 @@ LL | struct DoubleWrapper(i32, i32);\n    |        ^^^^^^^^^^^^^\n help: provide the argument\n    |\n-LL |     let _ = DoubleWrapper(5, {i32});\n-   |             ~~~~~~~~~~~~~~~~~~~~~~~\n+LL |     let _ = DoubleWrapper(5, /* i32 */);\n+   |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0061]: this struct takes 2 arguments but 3 arguments were supplied\n   --> $DIR/struct-enum-wrong-args.rs:13:13"}]}