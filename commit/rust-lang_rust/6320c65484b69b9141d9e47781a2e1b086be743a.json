{"sha": "6320c65484b69b9141d9e47781a2e1b086be743a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzMjBjNjU0ODRiNjliOTE0MWQ5ZTQ3NzgxYTJlMWIwODZiZTc0M2E=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-12-28T15:11:04Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-12-31T14:56:28Z"}, "message": "Fix temporal_order argument order for store to load forwarding", "tree": {"sha": "dce5d7d2389fa9c31af2d100e4a6d8e591f72f6b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dce5d7d2389fa9c31af2d100e4a6d8e591f72f6b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6320c65484b69b9141d9e47781a2e1b086be743a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6320c65484b69b9141d9e47781a2e1b086be743a", "html_url": "https://github.com/rust-lang/rust/commit/6320c65484b69b9141d9e47781a2e1b086be743a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6320c65484b69b9141d9e47781a2e1b086be743a/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7579663199a6f44545b5b5bb448d3b7d5ecfb88c", "url": "https://api.github.com/repos/rust-lang/rust/commits/7579663199a6f44545b5b5bb448d3b7d5ecfb88c", "html_url": "https://github.com/rust-lang/rust/commit/7579663199a6f44545b5b5bb448d3b7d5ecfb88c"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "8f27ad7c5571173546466140266f0fea70c37516", "filename": "src/optimize/stack2reg.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6320c65484b69b9141d9e47781a2e1b086be743a/src%2Foptimize%2Fstack2reg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6320c65484b69b9141d9e47781a2e1b086be743a/src%2Foptimize%2Fstack2reg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Foptimize%2Fstack2reg.rs?ref=6320c65484b69b9141d9e47781a2e1b086be743a", "patch": "@@ -116,9 +116,10 @@ pub(super) fn optimize_function(\n                     temporal_order(&*ctx, store, load),\n                 );\n             }\n+\n             match *potential_stores {\n                 [] => println!(\"[{}] [BUG?] Reading uninitialized memory\", name),\n-                [store] if spatial_overlap(&ctx.func, load, store) == SpatialOverlap::Full && temporal_order(&ctx, load, store) == TemporalOrder::DefinitivelyBefore => {\n+                [store] if spatial_overlap(&ctx.func, store, load) == SpatialOverlap::Full && temporal_order(&ctx, store, load) == TemporalOrder::DefinitivelyBefore => {\n                     let store_ebb = ctx.func.layout.inst_ebb(store).unwrap();\n                     let stored_value = ctx.func.dfg.inst_args(store)[0];\n                     let stored_type = ctx.func.dfg.value_type(stored_value);"}]}