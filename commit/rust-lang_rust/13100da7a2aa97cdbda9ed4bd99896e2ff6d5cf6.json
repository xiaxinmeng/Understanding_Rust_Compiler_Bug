{"sha": "13100da7a2aa97cdbda9ed4bd99896e2ff6d5cf6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzMTAwZGE3YTJhYTk3Y2RiZGE5ZWQ0YmQ5OTg5NmUyZmY2ZDVjZjY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-09T10:13:36Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-09T10:13:36Z"}, "message": "switch threadpool back from rayon to threadpool\n\nrayon does not replenish the pool when the thread panics, but we must\nbe reselient to bugs.", "tree": {"sha": "f633d0ff9cef84fb5b94d68a2ef96707e28f05dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f633d0ff9cef84fb5b94d68a2ef96707e28f05dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/13100da7a2aa97cdbda9ed4bd99896e2ff6d5cf6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/13100da7a2aa97cdbda9ed4bd99896e2ff6d5cf6", "html_url": "https://github.com/rust-lang/rust/commit/13100da7a2aa97cdbda9ed4bd99896e2ff6d5cf6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/13100da7a2aa97cdbda9ed4bd99896e2ff6d5cf6/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "904438e993b4cc3c1d9269a44436c1b112de16c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/904438e993b4cc3c1d9269a44436c1b112de16c0", "html_url": "https://github.com/rust-lang/rust/commit/904438e993b4cc3c1d9269a44436c1b112de16c0"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "1f69a91b24c979b5523a9e270e072cc0a58e90ef", "filename": "Cargo.lock", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/13100da7a2aa97cdbda9ed4bd99896e2ff6d5cf6/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/13100da7a2aa97cdbda9ed4bd99896e2ff6d5cf6/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=13100da7a2aa97cdbda9ed4bd99896e2ff6d5cf6", "patch": "@@ -697,6 +697,7 @@ dependencies = [\n  \"tempdir 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"test_utils 0.1.0\",\n  \"text_unit 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"threadpool 1.7.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"url_serde 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"walkdir 2.2.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -1103,6 +1104,14 @@ dependencies = [\n  \"lazy_static 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"threadpool\"\n+version = \"1.7.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"num_cpus 1.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"time\"\n version = \"0.1.40\"\n@@ -1414,6 +1423,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum text_unit 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8009d7bdbd896a7e09b595f8f9325a19047fc708653e60d0895202b82135048f\"\n \"checksum textwrap 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"307686869c93e71f94da64286f9a9524c0f308a9e1c87a583de8e9c9039ad3f6\"\n \"checksum thread_local 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c6b53e329000edc2b34dbe8545fd20e55a333362d0a321909685a19bd28c3f1b\"\n+\"checksum threadpool 1.7.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e2f0c90a5f3459330ac8bc0d2f879c693bb7a2f59689c1083fc4ef83834da865\"\n \"checksum time 0.1.40 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d825be0eb33fda1a7e68012d51e9c7f451dc1a69391e7fdc197060bb8c56667b\"\n \"checksum typenum 1.10.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"612d636f949607bdf9b123b4a6f6d966dedf3ff669f7f045890d3a4a73948169\"\n \"checksum ucd-trie 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"71a9c5b1fe77426cf144cc30e49e955270f5086e31a6441dfa8b32efc09b9d77\""}, {"sha": "5ee218b6b997622c2ca4a0636748c047dd334b7d", "filename": "crates/ra_lsp_server/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/13100da7a2aa97cdbda9ed4bd99896e2ff6d5cf6/crates%2Fra_lsp_server%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/13100da7a2aa97cdbda9ed4bd99896e2ff6d5cf6/crates%2Fra_lsp_server%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2FCargo.toml?ref=13100da7a2aa97cdbda9ed4bd99896e2ff6d5cf6", "patch": "@@ -6,6 +6,7 @@ authors = [\"Aleksey Kladov <aleksey.kladov@gmail.com>\"]\n \n [dependencies]\n rayon = \"1.0.2\"\n+threadpool = \"1.7.1\"\n relative-path = \"0.4.0\"\n failure = \"0.1.2\"\n failure_derive = \"0.1.2\""}, {"sha": "a01eeff881fb37f46bb9356776d850b2cc899030", "filename": "crates/ra_lsp_server/src/main_loop.rs", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/13100da7a2aa97cdbda9ed4bd99896e2ff6d5cf6/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13100da7a2aa97cdbda9ed4bd99896e2ff6d5cf6/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs?ref=13100da7a2aa97cdbda9ed4bd99896e2ff6d5cf6", "patch": "@@ -9,7 +9,8 @@ use gen_lsp_server::{\n };\n use languageserver_types::NumberOrString;\n use ra_analysis::{Canceled, FileId, LibraryData};\n-use rayon::{self, ThreadPool};\n+use rayon;\n+use threadpool::ThreadPool;\n use rustc_hash::FxHashSet;\n use serde::{de::DeserializeOwned, Serialize};\n use failure::{format_err, bail};\n@@ -54,11 +55,7 @@ pub fn main_loop(\n     msg_receiver: &Receiver<RawMessage>,\n     msg_sender: &Sender<RawMessage>,\n ) -> Result<()> {\n-    let pool = rayon::ThreadPoolBuilder::new()\n-        .num_threads(4)\n-        .panic_handler(|_| log::error!(\"thread panicked :(\"))\n-        .build()\n-        .unwrap();\n+    let pool = ThreadPool::new(8);\n     let (task_sender, task_receiver) = unbounded::<Task>();\n     let (fs_worker, fs_watcher) = vfs::roots_loader();\n     let (ws_worker, ws_watcher) = workspace_loader();\n@@ -155,7 +152,7 @@ fn main_loop_inner(\n                 } else {\n                     let (files, resolver) = state.events_to_files(events);\n                     let sender = libdata_sender.clone();\n-                    pool.spawn(move || {\n+                    pool.execute(move || {\n                         let start = ::std::time::Instant::now();\n                         log::info!(\"indexing {} ... \", root.display());\n                         let data = LibraryData::prepare(files, resolver);\n@@ -402,7 +399,7 @@ impl<'a> PoolDispatcher<'a> {\n             Ok((id, params)) => {\n                 let world = self.world.snapshot();\n                 let sender = self.sender.clone();\n-                self.pool.spawn(move || {\n+                self.pool.execute(move || {\n                     let resp = match f(world, params) {\n                         Ok(resp) => RawResponse::ok::<R>(id, &resp),\n                         Err(e) => match e.downcast::<LspError>() {\n@@ -452,7 +449,7 @@ fn update_file_notifications_on_threadpool(\n     sender: Sender<Task>,\n     subscriptions: Vec<FileId>,\n ) {\n-    pool.spawn(move || {\n+    pool.execute(move || {\n         for file_id in subscriptions {\n             match handlers::publish_diagnostics(&world, file_id) {\n                 Err(e) => {"}]}