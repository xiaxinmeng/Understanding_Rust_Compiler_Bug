{"sha": "9868352b953dc88975324b27e2865d5ee2ea72e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4NjgzNTJiOTUzZGM4ODk3NTMyNGIyN2UyODY1ZDVlZTJlYTcyZTk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-08-11T07:09:44Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-08-11T07:09:44Z"}, "message": "Auto merge of #43745 - kennytm:fix-43162, r=aturon\n\nType-check `break value;` even outside of `loop {}`.\n\nFix #43162, fix #43727.", "tree": {"sha": "899c1f9a30eeee8abf589c6511ee3c61c0d09210", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/899c1f9a30eeee8abf589c6511ee3c61c0d09210"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9868352b953dc88975324b27e2865d5ee2ea72e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9868352b953dc88975324b27e2865d5ee2ea72e9", "html_url": "https://github.com/rust-lang/rust/commit/9868352b953dc88975324b27e2865d5ee2ea72e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9868352b953dc88975324b27e2865d5ee2ea72e9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73c3f55a3e6c370527dd620d116f27accd22d934", "url": "https://api.github.com/repos/rust-lang/rust/commits/73c3f55a3e6c370527dd620d116f27accd22d934", "html_url": "https://github.com/rust-lang/rust/commit/73c3f55a3e6c370527dd620d116f27accd22d934"}, {"sha": "3cb23a714f2b7adbf1eee697fb6471c4dd733f04", "url": "https://api.github.com/repos/rust-lang/rust/commits/3cb23a714f2b7adbf1eee697fb6471c4dd733f04", "html_url": "https://github.com/rust-lang/rust/commit/3cb23a714f2b7adbf1eee697fb6471c4dd733f04"}], "stats": {"total": 54, "additions": 54, "deletions": 0}, "files": [{"sha": "697d9de931a86068973df2c5358193846905d77e", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/9868352b953dc88975324b27e2865d5ee2ea72e9/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9868352b953dc88975324b27e2865d5ee2ea72e9/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=9868352b953dc88975324b27e2865d5ee2ea72e9", "patch": "@@ -3652,6 +3652,20 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                   // inside a loop at all, which is caught by the\n                   // loop-checking pass.\n                   assert!(self.tcx.sess.err_count() > 0);\n+\n+                  // We still need to assign a type to the inner expression to\n+                  // prevent the ICE in #43162.\n+                  if let Some(ref e) = *expr_opt {\n+                      self.check_expr_with_hint(e, tcx.types.err);\n+\n+                      // ... except when we try to 'break rust;'.\n+                      // ICE this expression in particular (see #43162).\n+                      if let hir::ExprPath(hir::QPath::Resolved(_, ref path)) = e.node {\n+                          if path.segments.len() == 1 && path.segments[0].name == \"rust\" {\n+                              fatally_break_rust(self.tcx.sess);\n+                          }\n+                      }\n+                  }\n               }\n \n               // the type of a `break` is always `!`, since it diverges\n@@ -4880,3 +4894,20 @@ pub fn check_bounds_are_used<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n         }\n     }\n }\n+\n+fn fatally_break_rust(sess: &Session) {\n+    let handler = sess.diagnostic();\n+    handler.span_bug_no_panic(\n+        MultiSpan::new(),\n+        \"It looks like you're trying to break rust; would you like some ICE?\",\n+    );\n+    handler.note_without_error(\"the compiler expectedly panicked. this is a feature.\");\n+    handler.note_without_error(\n+        \"we would appreciate a joke overview: \\\n+        https://github.com/rust-lang/rust/issues/43162#issuecomment-320764675\"\n+    );\n+    handler.note_without_error(&format!(\"rustc {} running on {}\",\n+        option_env!(\"CFG_VERSION\").unwrap_or(\"unknown_version\"),\n+        ::session::config::host_triple(),\n+    ));\n+}"}, {"sha": "8f4661299e9d052540bdc90875849e07fa89131b", "filename": "src/test/compile-fail/issue-43162.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/9868352b953dc88975324b27e2865d5ee2ea72e9/src%2Ftest%2Fcompile-fail%2Fissue-43162.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9868352b953dc88975324b27e2865d5ee2ea72e9/src%2Ftest%2Fcompile-fail%2Fissue-43162.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-43162.rs?ref=9868352b953dc88975324b27e2865d5ee2ea72e9", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn foo() -> bool {\n+    break true; //~ ERROR E0268\n+}\n+\n+fn main() {\n+    break {}; //~ ERROR E0268\n+}"}, {"sha": "39053769b24b59d9aff3ffb37128675726c760f0", "filename": "src/test/run-pass/loop-break-value.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9868352b953dc88975324b27e2865d5ee2ea72e9/src%2Ftest%2Frun-pass%2Floop-break-value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9868352b953dc88975324b27e2865d5ee2ea72e9/src%2Ftest%2Frun-pass%2Floop-break-value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Floop-break-value.rs?ref=9868352b953dc88975324b27e2865d5ee2ea72e9", "patch": "@@ -137,4 +137,10 @@ pub fn main() {\n         panic!(\"from outer\");\n     };\n     assert_eq!(break_from_while_to_outer, 567);\n+\n+    let rust = true;\n+    let value = loop {\n+        break rust;\n+    };\n+    assert!(value);\n }"}]}