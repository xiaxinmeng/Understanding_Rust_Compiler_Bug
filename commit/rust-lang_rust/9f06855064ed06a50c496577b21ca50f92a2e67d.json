{"sha": "9f06855064ed06a50c496577b21ca50f92a2e67d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmMDY4NTUwNjRlZDA2YTUwYzQ5NjU3N2IyMWNhNTBmOTJhMmU2N2Q=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-06-15T13:12:13Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-06-15T13:12:13Z"}, "message": "Auto merge of #61143 - estebank:issue-61106, r=eddyb\n\nWhen suggesting borrow, remove useless clones\n\nFix #61106.", "tree": {"sha": "3dd6289174b8eaa528cae5f4a755bab16d4e5bf5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3dd6289174b8eaa528cae5f4a755bab16d4e5bf5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f06855064ed06a50c496577b21ca50f92a2e67d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f06855064ed06a50c496577b21ca50f92a2e67d", "html_url": "https://github.com/rust-lang/rust/commit/9f06855064ed06a50c496577b21ca50f92a2e67d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f06855064ed06a50c496577b21ca50f92a2e67d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dbebcee8d07b77eae3725988879001e6205c6e47", "url": "https://api.github.com/repos/rust-lang/rust/commits/dbebcee8d07b77eae3725988879001e6205c6e47", "html_url": "https://github.com/rust-lang/rust/commit/dbebcee8d07b77eae3725988879001e6205c6e47"}, {"sha": "34c4117f5f28c8eb8dd61600df1611fd29c8b66e", "url": "https://api.github.com/repos/rust-lang/rust/commits/34c4117f5f28c8eb8dd61600df1611fd29c8b66e", "html_url": "https://github.com/rust-lang/rust/commit/34c4117f5f28c8eb8dd61600df1611fd29c8b66e"}], "stats": {"total": 40, "additions": 39, "deletions": 1}, "files": [{"sha": "aff8eba3130d63fb0a7825a96bbc7a14d3fb3e86", "filename": "src/librustc_typeck/check/demand.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/9f06855064ed06a50c496577b21ca50f92a2e67d/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f06855064ed06a50c496577b21ca50f92a2e67d/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs?ref=9f06855064ed06a50c496577b21ca50f92a2e67d", "patch": "@@ -379,7 +379,23 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     }\n                 };\n                 if self.can_coerce(ref_ty, expected) {\n-                    if let Ok(src) = cm.span_to_snippet(sp) {\n+                    let mut sugg_sp = sp;\n+                    if let hir::ExprKind::MethodCall(segment, _sp, args) = &expr.node {\n+                        let clone_trait = self.tcx.lang_items().clone_trait().unwrap();\n+                        if let ([arg], Some(true), \"clone\") = (\n+                            &args[..],\n+                            self.tables.borrow().type_dependent_def_id(expr.hir_id).map(|did| {\n+                                let ai = self.tcx.associated_item(did);\n+                                ai.container == ty::TraitContainer(clone_trait)\n+                            }),\n+                            &segment.ident.as_str()[..],\n+                        ) {\n+                            // If this expression had a clone call when suggesting borrowing\n+                            // we want to suggest removing it because it'd now be unecessary.\n+                            sugg_sp = arg.span;\n+                        }\n+                    }\n+                    if let Ok(src) = cm.span_to_snippet(sugg_sp) {\n                         let needs_parens = match expr.node {\n                             // parenthesize if needed (Issue #46756)\n                             hir::ExprKind::Cast(_, _) |\n@@ -425,6 +441,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                                 }\n                             }\n                         }\n+\n                         return Some(match mutability {\n                             hir::Mutability::MutMutable => (\n                                 sp,"}, {"sha": "308ef1de3ccc37dd4cb1b3171d5aefd38c99018d", "filename": "src/test/ui/issues/issue-61106.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9f06855064ed06a50c496577b21ca50f92a2e67d/src%2Ftest%2Fui%2Fissues%2Fissue-61106.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f06855064ed06a50c496577b21ca50f92a2e67d/src%2Ftest%2Fui%2Fissues%2Fissue-61106.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-61106.rs?ref=9f06855064ed06a50c496577b21ca50f92a2e67d", "patch": "@@ -0,0 +1,6 @@\n+fn main() {\n+    let x = String::new();\n+    foo(x.clone()); //~ ERROR mismatched types\n+}\n+\n+fn foo(_: &str) {}"}, {"sha": "ca67d5149284504733b9000a26e63c01f7afe262", "filename": "src/test/ui/issues/issue-61106.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/9f06855064ed06a50c496577b21ca50f92a2e67d/src%2Ftest%2Fui%2Fissues%2Fissue-61106.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f06855064ed06a50c496577b21ca50f92a2e67d/src%2Ftest%2Fui%2Fissues%2Fissue-61106.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-61106.stderr?ref=9f06855064ed06a50c496577b21ca50f92a2e67d", "patch": "@@ -0,0 +1,15 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-61106.rs:3:9\n+   |\n+LL |     foo(x.clone());\n+   |         ^^^^^^^^^\n+   |         |\n+   |         expected &str, found struct `std::string::String`\n+   |         help: consider borrowing here: `&x`\n+   |\n+   = note: expected type `&str`\n+              found type `std::string::String`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}]}