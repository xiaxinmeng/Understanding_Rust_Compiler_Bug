{"sha": "edeec6a41487e6458a9d96b328c9b784525d8f06", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkZWVjNmE0MTQ4N2U2NDU4YTlkOTZiMzI4YzliNzg0NTI1ZDhmMDY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-21T15:34:20Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-21T15:34:20Z"}, "message": "Complete paths after ::", "tree": {"sha": "50fdd5d9681ff57a5cd15de3c401cd478e6f3ab5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50fdd5d9681ff57a5cd15de3c401cd478e6f3ab5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/edeec6a41487e6458a9d96b328c9b784525d8f06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/edeec6a41487e6458a9d96b328c9b784525d8f06", "html_url": "https://github.com/rust-lang/rust/commit/edeec6a41487e6458a9d96b328c9b784525d8f06", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/edeec6a41487e6458a9d96b328c9b784525d8f06/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ffc7d33082475ffd3b8768be001af5b8988a54b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ffc7d33082475ffd3b8768be001af5b8988a54b", "html_url": "https://github.com/rust-lang/rust/commit/7ffc7d33082475ffd3b8768be001af5b8988a54b"}], "stats": {"total": 14, "additions": 5, "deletions": 9}, "files": [{"sha": "c7717ab615b980af64622280bdd40b2945bcafef", "filename": "crates/ra_analysis/src/completion/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/edeec6a41487e6458a9d96b328c9b784525d8f06/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edeec6a41487e6458a9d96b328c9b784525d8f06/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fmod.rs?ref=edeec6a41487e6458a9d96b328c9b784525d8f06", "patch": "@@ -224,7 +224,7 @@ mod tests {\n     fn test_completion_self_path() {\n         check_scope_completion(\n             r\"\n-            use self::m::B<|>;\n+            use self::m::<|>;\n \n             mod m {\n                 struct Bar;"}, {"sha": "acc6c1c5a1cce7f1bbeee124f8c09b4e449a5347", "filename": "crates/ra_analysis/src/descriptors/module/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/edeec6a41487e6458a9d96b328c9b784525d8f06/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmodule%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edeec6a41487e6458a9d96b328c9b784525d8f06/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmodule%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmodule%2Fmod.rs?ref=edeec6a41487e6458a9d96b328c9b784525d8f06", "patch": "@@ -110,6 +110,7 @@ impl ModuleDescriptor {\n     }\n \n     /// `name` is `None` for the crate's root module\n+    #[allow(unused)]\n     pub fn name(&self) -> Option<SmolStr> {\n         let link = self.module_id.parent_link(&self.tree)?;\n         Some(link.name(&self.tree))"}, {"sha": "c6b1161595e08159455113faf5e2045a0cdd2e4c", "filename": "crates/ra_editor/src/lib.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/edeec6a41487e6458a9d96b328c9b784525d8f06/crates%2Fra_editor%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edeec6a41487e6458a9d96b328c9b784525d8f06/crates%2Fra_editor%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Flib.rs?ref=edeec6a41487e6458a9d96b328c9b784525d8f06", "patch": "@@ -148,12 +148,7 @@ pub fn find_node_at_offset<'a, N: AstNode<'a>>(\n     syntax: SyntaxNodeRef<'a>,\n     offset: TextUnit,\n ) -> Option<N> {\n-    let leaves = find_leaf_at_offset(syntax, offset);\n-    let leaf = leaves\n-        .clone()\n-        .find(|leaf| !leaf.kind().is_trivia())\n-        .or_else(|| leaves.right_biased())?;\n-    leaf.ancestors().filter_map(N::cast).next()\n+    find_leaf_at_offset(syntax, offset).find_map(|leaf| leaf.ancestors().find_map(N::cast))\n }\n \n #[cfg(test)]"}, {"sha": "68226690809194695a97ca3430ffd28fee1bb605", "filename": "crates/ra_syntax/src/grammar/items/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/edeec6a41487e6458a9d96b328c9b784525d8f06/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fitems%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edeec6a41487e6458a9d96b328c9b784525d8f06/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fitems%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fitems%2Fmod.rs?ref=edeec6a41487e6458a9d96b328c9b784525d8f06", "patch": "@@ -29,7 +29,7 @@ pub(super) enum ItemFlavor {\n     Trait,\n }\n \n-const ITEM_RECOVERY_SET: TokenSet = token_set![\n+pub(super) const ITEM_RECOVERY_SET: TokenSet = token_set![\n     FN_KW, STRUCT_KW, ENUM_KW, IMPL_KW, TRAIT_KW, CONST_KW, STATIC_KW, LET_KW, MOD_KW, PUB_KW,\n     CRATE_KW\n ];"}, {"sha": "33a11886cb3085c50c0f5fb7dffcc5052bdb37a5", "filename": "crates/ra_syntax/src/grammar/paths.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/edeec6a41487e6458a9d96b328c9b784525d8f06/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edeec6a41487e6458a9d96b328c9b784525d8f06/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fpaths.rs?ref=edeec6a41487e6458a9d96b328c9b784525d8f06", "patch": "@@ -78,7 +78,7 @@ fn path_segment(p: &mut Parser, mode: Mode, first: bool) {\n             // use crate::foo;\n             SELF_KW | SUPER_KW | CRATE_KW => p.bump(),\n             _ => {\n-                p.err_and_bump(\"expected identifier\");\n+                p.err_recover(\"expected identifier\", items::ITEM_RECOVERY_SET);\n             }\n         };\n     }"}]}