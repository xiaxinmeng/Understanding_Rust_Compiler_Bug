{"sha": "03314912f1361af6b39383958b5aa1b4aed61c26", "node_id": "C_kwDOAAsO6NoAKDAzMzE0OTEyZjEzNjFhZjZiMzkzODM5NThiNWFhMWI0YWVkNjFjMjY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-03-31T12:55:13Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-03-31T12:55:13Z"}, "message": "Auto merge of #95511 - Dylan-DPC:rollup-4n880fd, r=Dylan-DPC\n\nRollup of 5 pull requests\n\nSuccessful merges:\n\n - #95445 (Don't build the full compiler before running unit tests)\n - #95470 (Fix last rustdoc-gui spurious test)\n - #95478 (Add note to the move size diagnostic)\n - #95495 (Remove unneeded `to_string` call)\n - #95505 (Fix library/std compilation on openbsd.)\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "9286924a19661d6d7540682df42465f59539f7e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9286924a19661d6d7540682df42465f59539f7e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03314912f1361af6b39383958b5aa1b4aed61c26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03314912f1361af6b39383958b5aa1b4aed61c26", "html_url": "https://github.com/rust-lang/rust/commit/03314912f1361af6b39383958b5aa1b4aed61c26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03314912f1361af6b39383958b5aa1b4aed61c26/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df20355fa9fa5e9fb89be4e4bfee8a643bb7a23e", "url": "https://api.github.com/repos/rust-lang/rust/commits/df20355fa9fa5e9fb89be4e4bfee8a643bb7a23e", "html_url": "https://github.com/rust-lang/rust/commit/df20355fa9fa5e9fb89be4e4bfee8a643bb7a23e"}, {"sha": "0b71ca84b0e622b370d5e98d307d95052b6245d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b71ca84b0e622b370d5e98d307d95052b6245d9", "html_url": "https://github.com/rust-lang/rust/commit/0b71ca84b0e622b370d5e98d307d95052b6245d9"}], "stats": {"total": 23, "additions": 18, "deletions": 5}, "files": [{"sha": "2a659a97db5f9cbf759d4b2129e0b6721a357ea2", "filename": "compiler/rustc_monomorphize/src/collector.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/03314912f1361af6b39383958b5aa1b4aed61c26/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03314912f1361af6b39383958b5aa1b4aed61c26/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs?ref=03314912f1361af6b39383958b5aa1b4aed61c26", "patch": "@@ -859,6 +859,7 @@ impl<'a, 'tcx> MirVisitor<'tcx> for MirNeighborCollector<'a, 'tcx> {\n                     |lint| {\n                         let mut err = lint.build(&format!(\"moving {} bytes\", layout.size.bytes()));\n                         err.span_label(source_info.span, \"value moved from here\");\n+                        err.note(&format!(r#\"The current maximum size is {}, but it can be customized with the move_size_limit attribute: `#![move_size_limit = \"...\"]`\"#, limit.bytes()));\n                         err.emit();\n                     },\n                 );"}, {"sha": "bb4e4ee9aa75bf72cc6e6ee94eb76344bfb167cc", "filename": "library/std/src/sys/unix/thread.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/03314912f1361af6b39383958b5aa1b4aed61c26/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03314912f1361af6b39383958b5aa1b4aed61c26/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs?ref=03314912f1361af6b39383958b5aa1b4aed61c26", "patch": "@@ -522,7 +522,7 @@ pub mod guard {\n             // new thread\n             stack_ptr.addr() - current_stack.ss_size\n         };\n-        Some(stack_ptr.with_addr(stack_addr))\n+        Some(stack_ptr.with_addr(stackaddr))\n     }\n \n     #[cfg(any("}, {"sha": "339b7a8d1e6fb00a5f506a20a0711ec5c03824fa", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/03314912f1361af6b39383958b5aa1b4aed61c26/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03314912f1361af6b39383958b5aa1b4aed61c26/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=03314912f1361af6b39383958b5aa1b4aed61c26", "patch": "@@ -1998,7 +1998,6 @@ impl Step for Crate {\n                 compile::std_cargo(builder, target, compiler.stage, &mut cargo);\n             }\n             Mode::Rustc => {\n-                builder.ensure(compile::Rustc { compiler, target });\n                 compile::rustc_cargo(builder, &mut cargo, target);\n             }\n             _ => panic!(\"can only test libraries\"),"}, {"sha": "1223b6c8002da0b4ed0ebc002c0f6691e11312f1", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/03314912f1361af6b39383958b5aa1b4aed61c26/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03314912f1361af6b39383958b5aa1b4aed61c26/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=03314912f1361af6b39383958b5aa1b4aed61c26", "patch": "@@ -465,7 +465,7 @@ fn extra_info_tags(item: &clean::Item, parent: &clean::Item, tcx: TyCtxt<'_>) ->\n fn item_function(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, f: &clean::Function) {\n     let header = it.fn_header(cx.tcx()).expect(\"printing a function which isn't a function\");\n     let constness = print_constness_with_space(&header.constness, it.const_stability(cx.tcx()));\n-    let unsafety = header.unsafety.print_with_space().to_string();\n+    let unsafety = header.unsafety.print_with_space();\n     let abi = print_abi_with_space(header.abi).to_string();\n     let asyncness = header.asyncness.print_with_space();\n     let visibility = it.visibility.print_with_space(it.def_id, cx).to_string();"}, {"sha": "ff792eced703af065ec75059ba44d1541e62d020", "filename": "src/test/rustdoc-gui/search-result-display.goml", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/03314912f1361af6b39383958b5aa1b4aed61c26/src%2Ftest%2Frustdoc-gui%2Fsearch-result-display.goml", "raw_url": "https://github.com/rust-lang/rust/raw/03314912f1361af6b39383958b5aa1b4aed61c26/src%2Ftest%2Frustdoc-gui%2Fsearch-result-display.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsearch-result-display.goml?ref=03314912f1361af6b39383958b5aa1b4aed61c26", "patch": "@@ -2,8 +2,7 @@\n goto: file://|DOC_PATH|/test_docs/index.html\n size: (900, 1000)\n write: (\".search-input\", \"test\")\n-// Waiting for the search results to appear...\n-wait-for: \"#titles\"\n+wait-for: \"#search-settings\"\n // The width is returned by \"getComputedStyle\" which returns the exact number instead of the\n // CSS rule which is \"50%\"...\n assert-css: (\".search-results div.desc\", {\"width\": \"295px\"})"}, {"sha": "8d3f0b77f434d47bab595b2519fdcec0d47ab5ae", "filename": "src/test/ui/async-await/large_moves.attribute.stderr", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/03314912f1361af6b39383958b5aa1b4aed61c26/src%2Ftest%2Fui%2Fasync-await%2Flarge_moves.attribute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/03314912f1361af6b39383958b5aa1b4aed61c26/src%2Ftest%2Fui%2Fasync-await%2Flarge_moves.attribute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Flarge_moves.attribute.stderr?ref=03314912f1361af6b39383958b5aa1b4aed61c26", "patch": "@@ -15,24 +15,31 @@ note: the lint level is defined here\n    |\n LL | #![deny(large_assignments)]\n    |         ^^^^^^^^^^^^^^^^^\n+   = note: The current maximum size is 1000, but it can be customized with the move_size_limit attribute: `#![move_size_limit = \"...\"]`\n \n error: moving 10024 bytes\n   --> $DIR/large_moves.rs:18:14\n    |\n LL |     let z = (x, 42);\n    |              ^ value moved from here\n+   |\n+   = note: The current maximum size is 1000, but it can be customized with the move_size_limit attribute: `#![move_size_limit = \"...\"]`\n \n error: moving 10024 bytes\n   --> $DIR/large_moves.rs:18:13\n    |\n LL |     let z = (x, 42);\n    |             ^^^^^^^ value moved from here\n+   |\n+   = note: The current maximum size is 1000, but it can be customized with the move_size_limit attribute: `#![move_size_limit = \"...\"]`\n \n error: moving 10024 bytes\n   --> $DIR/large_moves.rs:20:13\n    |\n LL |     let a = z.0;\n    |             ^^^ value moved from here\n+   |\n+   = note: The current maximum size is 1000, but it can be customized with the move_size_limit attribute: `#![move_size_limit = \"...\"]`\n \n error: aborting due to 4 previous errors\n "}, {"sha": "8d3f0b77f434d47bab595b2519fdcec0d47ab5ae", "filename": "src/test/ui/async-await/large_moves.option.stderr", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/03314912f1361af6b39383958b5aa1b4aed61c26/src%2Ftest%2Fui%2Fasync-await%2Flarge_moves.option.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/03314912f1361af6b39383958b5aa1b4aed61c26/src%2Ftest%2Fui%2Fasync-await%2Flarge_moves.option.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Flarge_moves.option.stderr?ref=03314912f1361af6b39383958b5aa1b4aed61c26", "patch": "@@ -15,24 +15,31 @@ note: the lint level is defined here\n    |\n LL | #![deny(large_assignments)]\n    |         ^^^^^^^^^^^^^^^^^\n+   = note: The current maximum size is 1000, but it can be customized with the move_size_limit attribute: `#![move_size_limit = \"...\"]`\n \n error: moving 10024 bytes\n   --> $DIR/large_moves.rs:18:14\n    |\n LL |     let z = (x, 42);\n    |              ^ value moved from here\n+   |\n+   = note: The current maximum size is 1000, but it can be customized with the move_size_limit attribute: `#![move_size_limit = \"...\"]`\n \n error: moving 10024 bytes\n   --> $DIR/large_moves.rs:18:13\n    |\n LL |     let z = (x, 42);\n    |             ^^^^^^^ value moved from here\n+   |\n+   = note: The current maximum size is 1000, but it can be customized with the move_size_limit attribute: `#![move_size_limit = \"...\"]`\n \n error: moving 10024 bytes\n   --> $DIR/large_moves.rs:20:13\n    |\n LL |     let a = z.0;\n    |             ^^^ value moved from here\n+   |\n+   = note: The current maximum size is 1000, but it can be customized with the move_size_limit attribute: `#![move_size_limit = \"...\"]`\n \n error: aborting due to 4 previous errors\n "}]}