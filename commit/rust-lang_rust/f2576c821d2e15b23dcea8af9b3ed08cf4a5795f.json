{"sha": "f2576c821d2e15b23dcea8af9b3ed08cf4a5795f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyNTc2YzgyMWQyZTE1YjIzZGNlYThhZjliM2VkMDhjZjRhNTc5NWY=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2019-09-04T08:21:23Z"}, "committer": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2019-09-16T14:31:50Z"}, "message": "ci: convert maintainer list in publish_toolstate to a set", "tree": {"sha": "96ff85ef1fb61cfa5fdd4c515f6bd4b41e5050a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96ff85ef1fb61cfa5fdd4c515f6bd4b41e5050a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2576c821d2e15b23dcea8af9b3ed08cf4a5795f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE1JbYPtLJAsc22U9xPgar6Auq8ZwFAl1/nNYACgkQPgar6Auq\n8ZwUCxAAtuqtr7rozkZacTn7X2CqBy0q1coSlVz7/3aL3H7bPSVKVMpysQXS4LAK\nG/llxU1LcF3ILaeJhyVS2VQA83GhzRWsriAWP+xMHg0E5K56CsHFyRyeLjXl+B/F\nPtePV+uc+u3VEndIoJusAIGnioyPvKgzJRrSGecnoTi9UGn+0EVqaR/iwE+GrDpP\npdgfZJOJgTeRC2B7KMI9w/dAvMOCZk/kn+ramqG8jer0R4pFLOPpdTak/svYue03\nMefsbh+sx+TWz61n4M7VthN8mVfpcrZoofAzJMcK8y76NfU9f6BDxHF4cPAgsbtU\nGQ+u4LBeD/7D3GrU+ynrRHwBTGeziY29IhjFOxFaJt1+ka+2+ydQN3KTN/z4N5Uz\nSGIozX9y1aHlvhstiAEkxslFEi7vVNRKQ1uLVY3otNXiU0KQbV8JdUAFDB5pdwni\nPAgHGZ3kdISLJyBqP9cnN2vuw0MBg3aDE5swzvEhCHeybdN1Mi+5TkfCacIduZOh\na3VTIn2ey8HE2XWjr5e5mSdfQJLGQOIMnFNQCemEo06a2CznNQGQscE6wUV5KhST\nO3DtQJgWMGAH/7rqB47ZR2CFlGXGHvlPW5ZxX3RzhcBD9pg6exytLA4Ah6MadbDn\nV2klCIkrE23hkkfrgx/bCb52C0QGNhZVfBepIAu5l85mlXScrh8=\n=g2Za\n-----END PGP SIGNATURE-----", "payload": "tree 96ff85ef1fb61cfa5fdd4c515f6bd4b41e5050a3\nparent f968c1a4f51b1e57f1f613055332b3bf63f5864e\nauthor Pietro Albini <pietro@pietroalbini.org> 1567585283 +0200\ncommitter Pietro Albini <pietro@pietroalbini.org> 1568644310 +0200\n\nci: convert maintainer list in publish_toolstate to a set\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2576c821d2e15b23dcea8af9b3ed08cf4a5795f", "html_url": "https://github.com/rust-lang/rust/commit/f2576c821d2e15b23dcea8af9b3ed08cf4a5795f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2576c821d2e15b23dcea8af9b3ed08cf4a5795f/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f968c1a4f51b1e57f1f613055332b3bf63f5864e", "url": "https://api.github.com/repos/rust-lang/rust/commits/f968c1a4f51b1e57f1f613055332b3bf63f5864e", "html_url": "https://github.com/rust-lang/rust/commit/f968c1a4f51b1e57f1f613055332b3bf63f5864e"}], "stats": {"total": 45, "additions": 23, "deletions": 22}, "files": [{"sha": "217f8a7f6f4c7114159730b90e5f9f6f02cca704", "filename": "src/tools/publish_toolstate.py", "status": "modified", "additions": 23, "deletions": 22, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/f2576c821d2e15b23dcea8af9b3ed08cf4a5795f/src%2Ftools%2Fpublish_toolstate.py", "raw_url": "https://github.com/rust-lang/rust/raw/f2576c821d2e15b23dcea8af9b3ed08cf4a5795f/src%2Ftools%2Fpublish_toolstate.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fpublish_toolstate.py?ref=f2576c821d2e15b23dcea8af9b3ed08cf4a5795f", "patch": "@@ -25,20 +25,23 @@\n # These should be collaborators of the rust-lang/rust repository (with at least\n # read privileges on it). CI will fail otherwise.\n MAINTAINERS = {\n-    'miri': '@oli-obk @RalfJung @eddyb',\n-    'clippy-driver': '@Manishearth @llogiq @mcarton @oli-obk @phansch @flip1995 @yaahc',\n-    'rls': '@Xanewok',\n-    'rustfmt': '@topecongiro',\n-    'book': '@carols10cents @steveklabnik',\n-    'nomicon': '@frewsxcv @Gankra',\n-    'reference': '@steveklabnik @Havvy @matthewjasper @ehuss',\n-    'rust-by-example': '@steveklabnik @marioidival @projektir',\n-    'embedded-book': (\n-        '@adamgreig @andre-richter @jamesmunns @korken89 '\n-        '@ryankurte @thejpster @therealprof'\n-    ),\n-    'edition-guide': '@ehuss @Centril @steveklabnik',\n-    'rustc-guide': '@mark-i-m @spastorino @amanjeev'\n+    'miri': {'oli-obk', 'RalfJung', 'eddyb'},\n+    'clippy-driver': {\n+        'Manishearth', 'llogiq', 'mcarton', 'oli-obk', 'phansch', 'flip1995',\n+        'yaahc',\n+    },\n+    'rls': {'Xanewok'},\n+    'rustfmt': {'topecongiro'},\n+    'book': {'carols10cents', 'steveklabnik'},\n+    'nomicon': {'frewsxcv', 'Gankra'},\n+    'reference': {'steveklabnik', 'Havvy', 'matthewjasper', 'ehuss'},\n+    'rust-by-example': {'steveklabnik', 'marioidival', 'projektir'},\n+    'embedded-book': {\n+        'adamgreig', 'andre-richter', 'jamesmunns', 'korken89',\n+        'ryankurte', 'thejpster', 'therealprof',\n+    },\n+    'edition-guide': {'ehuss', 'Centril', 'steveklabnik'},\n+    'rustc-guide': {'mark-i-m', 'spastorino', 'amanjeev'},\n }\n \n REPOS = {\n@@ -80,9 +83,7 @@ def validate_maintainers(repo, github_token):\n \n     errors = False\n     for tool, maintainers in MAINTAINERS.items():\n-        for maintainer in maintainers.split(' '):\n-            if maintainer.startswith('@'):\n-                maintainer = maintainer[1:]\n+        for maintainer in maintainers:\n             if maintainer not in assignable:\n                 errors = True\n                 print(\n@@ -123,13 +124,12 @@ def maybe_delink(message):\n def issue(\n     tool,\n     status,\n-    maintainers,\n+    assignees,\n     relevant_pr_number,\n     relevant_pr_user,\n     pr_reviewer,\n ):\n     # Open an issue about the toolstate failure.\n-    assignees = [x.strip() for x in maintainers.split('@') if x != '']\n     if status == 'test-fail':\n         status_description = 'has failing tests'\n     else:\n@@ -150,7 +150,7 @@ def issue(\n             REPOS.get(tool), relevant_pr_user, pr_reviewer\n         )),\n         'title': '`{}` no longer builds after {}'.format(tool, relevant_pr_number),\n-        'assignees': assignees,\n+        'assignees': list(assignees),\n         'labels': ['T-compiler', 'I-nominated'],\n     })\n     print(\"Creating issue:\\n{}\".format(request))\n@@ -200,18 +200,19 @@ def update_latest(\n                 old = status[os]\n                 new = s.get(tool, old)\n                 status[os] = new\n+                maintainers = ' '.join('@'+name for name in MAINTAINERS[tool])\n                 if new > old: # comparing the strings, but they are ordered appropriately!\n                     # things got fixed or at least the status quo improved\n                     changed = True\n                     message += '\ud83c\udf89 {} on {}: {} \u2192 {} (cc {}, @rust-lang/infra).\\n' \\\n-                        .format(tool, os, old, new, MAINTAINERS.get(tool))\n+                        .format(tool, os, old, new, maintainers)\n                 elif new < old:\n                     # tests or builds are failing and were not failing before\n                     changed = True\n                     title = '\ud83d\udc94 {} on {}: {} \u2192 {}' \\\n                         .format(tool, os, old, new)\n                     message += '{} (cc {}, @rust-lang/infra).\\n' \\\n-                        .format(title, MAINTAINERS.get(tool))\n+                        .format(title, maintainers)\n                     # Most tools only create issues for build failures.\n                     # Other failures can be spurious.\n                     if new == 'build-fail' or (tool == 'miri' and new == 'test-fail'):"}]}