{"sha": "bc16edeb28e38e5bbed8828fb6314b1cc5151235", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjMTZlZGViMjhlMzhlNWJiZWQ4ODI4ZmI2MzE0YjFjYzUxNTEyMzU=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-12-27T00:07:00Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-12-27T12:51:37Z"}, "message": "Fix rebase and more CI failures", "tree": {"sha": "1bd486b508894dd6e1ef4bb0902cd96c15cca7dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1bd486b508894dd6e1ef4bb0902cd96c15cca7dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc16edeb28e38e5bbed8828fb6314b1cc5151235", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc16edeb28e38e5bbed8828fb6314b1cc5151235", "html_url": "https://github.com/rust-lang/rust/commit/bc16edeb28e38e5bbed8828fb6314b1cc5151235", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc16edeb28e38e5bbed8828fb6314b1cc5151235/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37af04ff8d784969882296c0fb74aa3e68624873", "url": "https://api.github.com/repos/rust-lang/rust/commits/37af04ff8d784969882296c0fb74aa3e68624873", "html_url": "https://github.com/rust-lang/rust/commit/37af04ff8d784969882296c0fb74aa3e68624873"}], "stats": {"total": 266, "additions": 136, "deletions": 130}, "files": [{"sha": "b3aa886cd49264342c389f878aadacfd68fd05dd", "filename": "src/test/ui/derives/derive-on-trait-item-or-impl-item.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fderives%2Fderive-on-trait-item-or-impl-item.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fderives%2Fderive-on-trait-item-or-impl-item.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderive-on-trait-item-or-impl-item.stderr?ref=bc16edeb28e38e5bbed8828fb6314b1cc5151235", "patch": "@@ -5,9 +5,10 @@ LL |     #[derive(Clone)]\n    |     ^^^^^^^^^^^^^^^^\n \n error: `derive` may only be applied to structs, enums and unions\n-  --> $DIR/derive-on-trait-item-or-impl-item.rs:8:5\n+  --> $DIR/derive-on-trait-item-or-impl-item.rs:10:5\n    |\n LL |     #[derive(Clone)]\n    |     ^^^^^^^^^^^^^^^^\n \n error: aborting due to 2 previous errors\n+"}, {"sha": "3f6886bc3f699b96d65ec3aea50a886d35fe1089", "filename": "src/test/ui/did_you_mean/issue-40396.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-40396.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-40396.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-40396.stderr?ref=bc16edeb28e38e5bbed8828fb6314b1cc5151235", "patch": "@@ -1,5 +1,5 @@\n error: chained comparison operators require parentheses\n-  --> $DIR/issue-40396.rs:2:37\n+  --> $DIR/issue-40396.rs:2:20\n    |\n LL |     (0..13).collect<Vec<i32>>();\n    |                    ^^^^^^^^\n@@ -8,7 +8,7 @@ LL |     (0..13).collect<Vec<i32>>();\n    = help: or use `(...)` if you meant to specify fn arguments\n \n error: chained comparison operators require parentheses\n-  --> $DIR/issue-40396.rs:6:25\n+  --> $DIR/issue-40396.rs:10:8\n    |\n LL |     Vec<i32>::new();\n    |        ^^^^^^^\n@@ -17,7 +17,7 @@ LL |     Vec<i32>::new();\n    = help: or use `(...)` if you meant to specify fn arguments\n \n error: chained comparison operators require parentheses\n-  --> $DIR/issue-40396.rs:10:37\n+  --> $DIR/issue-40396.rs:18:20\n    |\n LL |     (0..13).collect<Vec<i32>();\n    |                    ^^^^^^^^\n@@ -26,7 +26,7 @@ LL |     (0..13).collect<Vec<i32>();\n    = help: or use `(...)` if you meant to specify fn arguments\n \n error: chained comparison operators require parentheses\n-  --> $DIR/issue-40396.rs:10:41\n+  --> $DIR/issue-40396.rs:18:24\n    |\n LL |     (0..13).collect<Vec<i32>();\n    |                        ^^^^^^\n@@ -35,65 +35,65 @@ LL |     (0..13).collect<Vec<i32>();\n    = help: or use `(...)` if you meant to specify fn arguments\n \n error[E0423]: expected value, found struct `Vec`\n-  --> $DIR/issue-40396.rs:12:21\n+  --> $DIR/issue-40396.rs:2:21\n    |\n LL |     (0..13).collect<Vec<i32>>();\n    |                     ^^^ did you mean `Vec { /* fields */ }`?\n \n error[E0423]: expected value, found builtin type `i32`\n-  --> $DIR/issue-40396.rs:12:25\n+  --> $DIR/issue-40396.rs:2:25\n    |\n LL |     (0..13).collect<Vec<i32>>();\n    |                         ^^^ not a value\n \n error[E0423]: expected value, found struct `Vec`\n-  --> $DIR/issue-40396.rs:20:5\n+  --> $DIR/issue-40396.rs:10:5\n    |\n LL |     Vec<i32>::new();\n    |     ^^^ did you mean `Vec { /* fields */ }`?\n \n error[E0423]: expected value, found builtin type `i32`\n-  --> $DIR/issue-40396.rs:20:9\n+  --> $DIR/issue-40396.rs:10:9\n    |\n LL |     Vec<i32>::new();\n    |         ^^^ not a value\n \n error[E0425]: cannot find function `new` in the crate root\n-  --> $DIR/issue-40396.rs:20:15\n+  --> $DIR/issue-40396.rs:10:15\n    |\n LL |     Vec<i32>::new();\n    |               ^^^ not found in the crate root\n \n error[E0423]: expected value, found struct `Vec`\n-  --> $DIR/issue-40396.rs:28:21\n+  --> $DIR/issue-40396.rs:18:21\n    |\n LL |     (0..13).collect<Vec<i32>();\n    |                     ^^^ did you mean `Vec { /* fields */ }`?\n \n error[E0423]: expected value, found builtin type `i32`\n-  --> $DIR/issue-40396.rs:28:25\n+  --> $DIR/issue-40396.rs:18:25\n    |\n LL |     (0..13).collect<Vec<i32>();\n    |                         ^^^ not a value\n \n error[E0615]: attempted to take value of method `collect` on type `std::ops::Range<{integer}>`\n-  --> $DIR/issue-40396.rs:12:13\n+  --> $DIR/issue-40396.rs:2:13\n    |\n LL |     (0..13).collect<Vec<i32>>();\n    |             ^^^^^^^\n    |\n    = help: maybe a `()` to call it is missing?\n \n error[E0615]: attempted to take value of method `collect` on type `std::ops::Range<{integer}>`\n-  --> $DIR/issue-40396.rs:28:13\n+  --> $DIR/issue-40396.rs:18:13\n    |\n LL |     (0..13).collect<Vec<i32>();\n    |             ^^^^^^^\n    |\n    = help: maybe a `()` to call it is missing?\n \n error[E0308]: mismatched types\n-  --> $DIR/issue-40396.rs:28:29\n+  --> $DIR/issue-40396.rs:18:29\n    |\n LL |     (0..13).collect<Vec<i32>();\n    |                             ^^ expected bool, found ()"}, {"sha": "f2a9da71ca56b5927857de8d62ee1ec2ade6727a", "filename": "src/test/ui/editions/edition-keywords-2015-2015-parsing.stderr", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2015-2015-parsing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2015-2015-parsing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2015-2015-parsing.stderr?ref=bc16edeb28e38e5bbed8828fb6314b1cc5151235", "patch": "@@ -1,13 +1,14 @@\n error: no rules expected the token `r#async`\n-  --> $DIR/edition-keywords-2015-2015-parsing.rs:12:31\n+  --> $DIR/edition-keywords-2015-2015-parsing.rs:16:31\n    |\n LL |     r#async = consumes_async!(r#async); //~ ERROR no rules expected the token `r#async`\n    |                               ^^^^^^^ no rules expected this token in macro call\n \n error: no rules expected the token `async`\n-  --> $DIR/edition-keywords-2015-2015-parsing.rs:13:35\n+  --> $DIR/edition-keywords-2015-2015-parsing.rs:17:35\n    |\n LL |     r#async = consumes_async_raw!(async); //~ ERROR no rules expected the token `async`\n    |                                   ^^^^^ no rules expected this token in macro call\n \n error: aborting due to 2 previous errors\n+"}, {"sha": "fbb3b8bc75690960feb659bd7d4b19adbbc15e70", "filename": "src/test/ui/editions/edition-keywords-2015-2018-parsing.stderr", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2015-2018-parsing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2015-2018-parsing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2015-2018-parsing.stderr?ref=bc16edeb28e38e5bbed8828fb6314b1cc5151235", "patch": "@@ -1,13 +1,14 @@\n error: no rules expected the token `r#async`\n-  --> $DIR/edition-keywords-2015-2018-parsing.rs:12:31\n+  --> $DIR/edition-keywords-2015-2018-parsing.rs:16:31\n    |\n LL |     r#async = consumes_async!(r#async); //~ ERROR no rules expected the token `r#async`\n    |                               ^^^^^^^ no rules expected this token in macro call\n \n error: no rules expected the token `async`\n-  --> $DIR/edition-keywords-2015-2018-parsing.rs:13:35\n+  --> $DIR/edition-keywords-2015-2018-parsing.rs:17:35\n    |\n LL |     r#async = consumes_async_raw!(async); //~ ERROR no rules expected the token `async`\n    |                                   ^^^^^ no rules expected this token in macro call\n \n error: aborting due to 2 previous errors\n+"}, {"sha": "fc4aa57718ce30906b84732b5f36fb5d96836619", "filename": "src/test/ui/feature-gates/feature-gate-asm2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-asm2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-asm2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-asm2.stderr?ref=bc16edeb28e38e5bbed8828fb6314b1cc5151235", "patch": "@@ -1,5 +1,5 @@\n error[E0658]: inline assembly is not stable enough for use and is subject to change (see issue #29722)\n-  --> $DIR/feature-gate-asm2.rs:5:24\n+  --> $DIR/feature-gate-asm2.rs:5:26\n    |\n LL |         println!(\"{:?}\", asm!(\"\")); //~ ERROR inline assembly is not stable\n    |                          ^^^^^^^^"}, {"sha": "a2d5669bcdcbef8f2eb82749a0e9a3f4a0c14b09", "filename": "src/test/ui/feature-gates/feature-gate-cfg-target-has-atomic.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-cfg-target-has-atomic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-cfg-target-has-atomic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-cfg-target-has-atomic.stderr?ref=bc16edeb28e38e5bbed8828fb6314b1cc5151235", "patch": "@@ -1,141 +1,141 @@\n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change (see issue #32976)\n-  --> $DIR/feature-gate-cfg-target-has-atomic.rs:13:7\n+  --> $DIR/feature-gate-cfg-target-has-atomic.rs:15:7\n    |\n LL | #[cfg(target_has_atomic = \"8\")]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change (see issue #32976)\n-  --> $DIR/feature-gate-cfg-target-has-atomic.rs:19:7\n+  --> $DIR/feature-gate-cfg-target-has-atomic.rs:21:7\n    |\n LL | #[cfg(target_has_atomic = \"8\")]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change (see issue #32976)\n-  --> $DIR/feature-gate-cfg-target-has-atomic.rs:24:7\n+  --> $DIR/feature-gate-cfg-target-has-atomic.rs:26:7\n    |\n LL | #[cfg(target_has_atomic = \"16\")]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change (see issue #32976)\n-  --> $DIR/feature-gate-cfg-target-has-atomic.rs:29:7\n+  --> $DIR/feature-gate-cfg-target-has-atomic.rs:31:7\n    |\n LL | #[cfg(target_has_atomic = \"16\")]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change (see issue #32976)\n-  --> $DIR/feature-gate-cfg-target-has-atomic.rs:34:7\n+  --> $DIR/feature-gate-cfg-target-has-atomic.rs:36:7\n    |\n LL | #[cfg(target_has_atomic = \"32\")]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change (see issue #32976)\n-  --> $DIR/feature-gate-cfg-target-has-atomic.rs:39:7\n+  --> $DIR/feature-gate-cfg-target-has-atomic.rs:41:7\n    |\n LL | #[cfg(target_has_atomic = \"32\")]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change (see issue #32976)\n-  --> $DIR/feature-gate-cfg-target-has-atomic.rs:44:7\n+  --> $DIR/feature-gate-cfg-target-has-atomic.rs:46:7\n    |\n LL | #[cfg(target_has_atomic = \"64\")]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change (see issue #32976)\n-  --> $DIR/feature-gate-cfg-target-has-atomic.rs:49:7\n+  --> $DIR/feature-gate-cfg-target-has-atomic.rs:51:7\n    |\n LL | #[cfg(target_has_atomic = \"64\")]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change (see issue #32976)\n-  --> $DIR/feature-gate-cfg-target-has-atomic.rs:54:7\n+  --> $DIR/feature-gate-cfg-target-has-atomic.rs:56:7\n    |\n LL | #[cfg(target_has_atomic = \"128\")]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change (see issue #32976)\n-  --> $DIR/feature-gate-cfg-target-has-atomic.rs:59:7\n+  --> $DIR/feature-gate-cfg-target-has-atomic.rs:61:7\n    |\n LL | #[cfg(target_has_atomic = \"128\")]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change (see issue #32976)\n-  --> $DIR/feature-gate-cfg-target-has-atomic.rs:64:7\n+  --> $DIR/feature-gate-cfg-target-has-atomic.rs:66:7\n    |\n LL | #[cfg(target_has_atomic = \"ptr\")]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change (see issue #32976)\n-  --> $DIR/feature-gate-cfg-target-has-atomic.rs:69:7\n+  --> $DIR/feature-gate-cfg-target-has-atomic.rs:71:7\n    |\n LL | #[cfg(target_has_atomic = \"ptr\")]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change (see issue #32976)\n-  --> $DIR/feature-gate-cfg-target-has-atomic.rs:76:10\n+  --> $DIR/feature-gate-cfg-target-has-atomic.rs:78:10\n    |\n LL |     cfg!(target_has_atomic = \"8\");\n    |          ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change (see issue #32976)\n-  --> $DIR/feature-gate-cfg-target-has-atomic.rs:78:10\n+  --> $DIR/feature-gate-cfg-target-has-atomic.rs:80:10\n    |\n LL |     cfg!(target_has_atomic = \"16\");\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change (see issue #32976)\n-  --> $DIR/feature-gate-cfg-target-has-atomic.rs:80:10\n+  --> $DIR/feature-gate-cfg-target-has-atomic.rs:82:10\n    |\n LL |     cfg!(target_has_atomic = \"32\");\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change (see issue #32976)\n-  --> $DIR/feature-gate-cfg-target-has-atomic.rs:82:10\n+  --> $DIR/feature-gate-cfg-target-has-atomic.rs:84:10\n    |\n LL |     cfg!(target_has_atomic = \"64\");\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change (see issue #32976)\n-  --> $DIR/feature-gate-cfg-target-has-atomic.rs:84:10\n+  --> $DIR/feature-gate-cfg-target-has-atomic.rs:86:10\n    |\n LL |     cfg!(target_has_atomic = \"128\");\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change (see issue #32976)\n-  --> $DIR/feature-gate-cfg-target-has-atomic.rs:86:10\n+  --> $DIR/feature-gate-cfg-target-has-atomic.rs:88:10\n    |\n LL |     cfg!(target_has_atomic = \"ptr\");\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "cae409019f7a64135bcd92730d4e6a9eea7c47af", "filename": "src/test/ui/feature-gates/feature-gate-concat_idents2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-concat_idents2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-concat_idents2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-concat_idents2.stderr?ref=bc16edeb28e38e5bbed8828fb6314b1cc5151235", "patch": "@@ -7,7 +7,7 @@ LL |     concat_idents!(a, b); //~ ERROR `concat_idents` is not stable enough\n    = help: add #![feature(concat_idents)] to the crate attributes to enable\n \n error[E0425]: cannot find value `ab` in this scope\n-  --> $DIR/feature-gate-concat_idents2.rs:14:5\n+  --> $DIR/feature-gate-concat_idents2.rs:4:5\n    |\n LL |     concat_idents!(a, b); //~ ERROR `concat_idents` is not stable enough\n    |     ^^^^^^^^^^^^^^^^^^^^^ not found in this scope"}, {"sha": "bdcd922c6e1e44c973daa70f34c232dabc19165e", "filename": "src/test/ui/feature-gates/feature-gate-log_syntax2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-log_syntax2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-log_syntax2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-log_syntax2.stderr?ref=bc16edeb28e38e5bbed8828fb6314b1cc5151235", "patch": "@@ -1,5 +1,5 @@\n error[E0658]: `log_syntax!` is not stable enough for use and is subject to change (see issue #29598)\n-  --> $DIR/feature-gate-log_syntax2.rs:4:20\n+  --> $DIR/feature-gate-log_syntax2.rs:4:22\n    |\n LL |     println!(\"{:?}\", log_syntax!()); //~ ERROR `log_syntax!` is not stable\n    |                      ^^^^^^^^^^^^^"}, {"sha": "40e6d6d925679b883d0acf0e87eb52da0619f538", "filename": "src/test/ui/feature-gates/feature-gate-rustc-attrs.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-rustc-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-rustc-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-rustc-attrs.stderr?ref=bc16edeb28e38e5bbed8828fb6314b1cc5151235", "patch": "@@ -1,5 +1,5 @@\n error[E0658]: unless otherwise specified, attributes with the prefix `rustc_` are reserved for internal compiler diagnostics (see issue #29642)\n-  --> $DIR/feature-gate-rustc-attrs.rs:5:3\n+  --> $DIR/feature-gate-rustc-attrs.rs:3:3\n    |\n LL | #[rustc_foo]\n    |   ^^^^^^^^^"}, {"sha": "d5caf777cd45e989996c1fb6fc80b37cb45ffc37", "filename": "src/test/ui/issues/issue-10536.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fissues%2Fissue-10536.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fissues%2Fissue-10536.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-10536.stderr?ref=bc16edeb28e38e5bbed8828fb6314b1cc5151235", "patch": "@@ -1,5 +1,5 @@\n error: macros that expand to items must either be surrounded with braces or followed by a semicolon\n-  --> $DIR/issue-10536.rs:16:22\n+  --> $DIR/issue-10536.rs:14:22\n    |\n LL |     assert!({one! two()});\n    |                      ^^\n@@ -11,13 +11,13 @@ LL |     assert!({one! two});\n    |                      ^ expected `(` or `{`\n \n error: cannot find macro `one!` in this scope\n-  --> $DIR/issue-10536.rs:24:14\n+  --> $DIR/issue-10536.rs:14:14\n    |\n LL |     assert!({one! two()});\n    |              ^^^\n \n error[E0308]: mismatched types\n-  --> $DIR/issue-10536.rs:24:13\n+  --> $DIR/issue-10536.rs:14:13\n    |\n LL |     assert!({one! two()});\n    |             ^^^^^^^^^^^^ expected bool, found ()"}, {"sha": "f4cc825803a3b53b9d6d77256a3ee0bf76460759", "filename": "src/test/ui/issues/issue-11692-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fissues%2Fissue-11692-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fissues%2Fissue-11692-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-11692-1.stderr?ref=bc16edeb28e38e5bbed8828fb6314b1cc5151235", "patch": "@@ -9,7 +9,7 @@ LL |     print!(\"{}\", testo!());\n    |            ^^^^^\n \n error: cannot find macro `testo!` in this scope\n-  --> $DIR/issue-11692-1.rs:12:12\n+  --> $DIR/issue-11692-1.rs:2:12\n    |\n LL |     print!(testo!());\n    |            ^^^^^"}, {"sha": "848415435a78ba0d3feb891f5aaa06f01fe3d7e9", "filename": "src/test/ui/issues/issue-11692-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fissues%2Fissue-11692-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fissues%2Fissue-11692-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-11692-2.stderr?ref=bc16edeb28e38e5bbed8828fb6314b1cc5151235", "patch": "@@ -1,5 +1,5 @@\n error: expected a literal\n-  --> $DIR/issue-11692-2.rs:12:13\n+  --> $DIR/issue-11692-2.rs:2:13\n    |\n LL |     concat!(test!()); //~ ERROR cannot find macro `test!` in this scope\n    |             ^^^^^^^"}, {"sha": "13aed4a1756b31bacfbfc8d088f01852766d4716", "filename": "src/test/ui/issues/issue-32950.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fissues%2Fissue-32950.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fissues%2Fissue-32950.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-32950.stderr?ref=bc16edeb28e38e5bbed8828fb6314b1cc5151235", "patch": "@@ -5,7 +5,7 @@ LL |     concat_idents!(Foo, Bar) //~ ERROR `derive` cannot be used on items wit\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0412]: cannot find type `FooBar` in this scope\n-  --> $DIR/issue-32950.rs:15:5\n+  --> $DIR/issue-32950.rs:5:5\n    |\n LL |     concat_idents!(Foo, Bar) //~ ERROR `derive` cannot be used on items with type macros\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope"}, {"sha": "d4648270f2d308dc3daaa1ca5439bdbc9bd0fed4", "filename": "src/test/ui/issues/issue-49074.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fissues%2Fissue-49074.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fissues%2Fissue-49074.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-49074.stderr?ref=bc16edeb28e38e5bbed8828fb6314b1cc5151235", "patch": "@@ -7,7 +7,7 @@ LL | #[marco_use] // typo\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error: cannot find macro `bar!` in this scope\n-  --> $DIR/issue-49074.rs:22:4\n+  --> $DIR/issue-49074.rs:12:4\n    |\n LL |    bar!(); //~ ERROR cannot find macro `bar!` in this scope\n    |    ^^^"}, {"sha": "1706e98e83b6392c286b2de1055bae8a2d44fd4d", "filename": "src/test/ui/issues/issue-51279.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fissues%2Fissue-51279.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fissues%2Fissue-51279.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-51279.stderr?ref=bc16edeb28e38e5bbed8828fb6314b1cc5151235", "patch": "@@ -47,7 +47,7 @@ LL | type Z<#[ignored] 'a, #[cfg(none)] T> = X<'a, T>;\n    |                       ^^^^^^^^^^^^\n \n error[E0658]: The attribute `ignored` is currently unknown to the compiler and may have meaning added to it in the future (see issue #29642)\n-  --> $DIR/issue-51279.rs:33:8\n+  --> $DIR/issue-51279.rs:23:8\n    |\n LL | type Z<#[ignored] 'a, #[cfg(none)] T> = X<'a, T>;\n    |        ^^^^^^^^^^"}, {"sha": "20fbe0fab0112466d1df871be65f174e5b3629f1", "filename": "src/test/ui/issues/issue-6596-2.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fissues%2Fissue-6596-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fissues%2Fissue-6596-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-6596-2.stderr?ref=bc16edeb28e38e5bbed8828fb6314b1cc5151235", "patch": "@@ -8,3 +8,4 @@ LL |     g!(foo);\n    |     -------- in this macro invocation\n \n error: aborting due to previous error\n+"}, {"sha": "8fcd497f87b788682a329733a78ae459eef42dd6", "filename": "src/test/ui/macro_backtrace/main.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fmacro_backtrace%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fmacro_backtrace%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacro_backtrace%2Fmain.rs?ref=bc16edeb28e38e5bbed8828fb6314b1cc5151235", "patch": "@@ -12,6 +12,7 @@ macro_rules! pong {\n //~| ERROR expected one of\n //~| ERROR expected one of\n \n+#[allow(non_camel_case_types)]\n struct syntax;\n \n fn main() {"}, {"sha": "dd0cac659fd312a1e4ccc8a96b3ceee10d58ab2a", "filename": "src/test/ui/macros/macro-comma-behavior.core.stderr", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fmacros%2Fmacro-comma-behavior.core.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fmacros%2Fmacro-comma-behavior.core.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-comma-behavior.core.stderr?ref=bc16edeb28e38e5bbed8828fb6314b1cc5151235", "patch": "@@ -1,47 +1,44 @@\n error: 1 positional argument in format string, but no arguments were given\n-  --> $DIR/macro-comma-behavior.rs:17:23\n+  --> $DIR/macro-comma-behavior.rs:21:23\n    |\n LL |     assert_eq!(1, 1, \"{}\",);\n    |                       ^^\n \n error: 1 positional argument in format string, but no arguments were given\n-  --> $DIR/macro-comma-behavior.rs:20:23\n+  --> $DIR/macro-comma-behavior.rs:24:23\n    |\n LL |     assert_ne!(1, 2, \"{}\",);\n    |                       ^^\n \n error: 1 positional argument in format string, but no arguments were given\n-  --> $DIR/macro-comma-behavior.rs:26:29\n+  --> $DIR/macro-comma-behavior.rs:30:29\n    |\n LL |     debug_assert_eq!(1, 1, \"{}\",);\n    |                             ^^\n \n error: 1 positional argument in format string, but no arguments were given\n-  --> $DIR/macro-comma-behavior.rs:29:29\n+  --> $DIR/macro-comma-behavior.rs:33:29\n    |\n LL |     debug_assert_ne!(1, 2, \"{}\",);\n    |                             ^^\n \n error: 1 positional argument in format string, but no arguments were given\n-  --> $DIR/macro-comma-behavior.rs:50:19\n+  --> $DIR/macro-comma-behavior.rs:54:19\n    |\n LL |     format_args!(\"{}\",);\n    |                   ^^\n \n error: 1 positional argument in format string, but no arguments were given\n-  --> $DIR/macro-comma-behavior.rs:68:21\n+  --> $DIR/macro-comma-behavior.rs:72:21\n    |\n LL |     unimplemented!(\"{}\",);\n    |                     ^^\n \n error: 1 positional argument in format string, but no arguments were given\n-  --> $DIR/macro-comma-behavior.rs:77:24\n+  --> $DIR/macro-comma-behavior.rs:81:24\n    |\n LL |             write!(f, \"{}\",)?;\n    |                        ^^\n \n-error: `#[panic_handler]` function required, but not found\n+error: aborting due to 7 previous errors\n \n-error: language item required, but not found: `eh_personality`\n-\n-error: aborting due to 9 previous errors"}, {"sha": "006319aa9f5b2ede04fe58004e55a048962dce47", "filename": "src/test/ui/macros/macro-comma-behavior.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fmacros%2Fmacro-comma-behavior.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fmacros%2Fmacro-comma-behavior.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-comma-behavior.rs?ref=bc16edeb28e38e5bbed8828fb6314b1cc5151235", "patch": "@@ -8,7 +8,9 @@\n \n #[cfg(std)] use std::fmt;\n #[cfg(core)] use core::fmt;\n+#[cfg(core)] #[lang = \"eh_personality\"] fn eh_personality() {}\n #[cfg(core)] #[lang = \"eh_unwind_resume\"] fn eh_unwind_resume() {}\n+#[cfg(core)] #[lang = \"panic_impl\"] fn panic_impl(panic: &core::panic::PanicInfo) -> ! { loop {} }\n \n // (see documentation of the similarly-named test in run-pass)\n fn to_format_or_not_to_format() {"}, {"sha": "4372d89fbf5220170906f086313b8fcdf45ab7c6", "filename": "src/test/ui/macros/macro-comma-behavior.std.stderr", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fmacros%2Fmacro-comma-behavior.std.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fmacros%2Fmacro-comma-behavior.std.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-comma-behavior.std.stderr?ref=bc16edeb28e38e5bbed8828fb6314b1cc5151235", "patch": "@@ -1,61 +1,62 @@\n error: 1 positional argument in format string, but no arguments were given\n-  --> $DIR/macro-comma-behavior.rs:17:23\n+  --> $DIR/macro-comma-behavior.rs:21:23\n    |\n LL |     assert_eq!(1, 1, \"{}\",);\n    |                       ^^\n \n error: 1 positional argument in format string, but no arguments were given\n-  --> $DIR/macro-comma-behavior.rs:20:23\n+  --> $DIR/macro-comma-behavior.rs:24:23\n    |\n LL |     assert_ne!(1, 2, \"{}\",);\n    |                       ^^\n \n error: 1 positional argument in format string, but no arguments were given\n-  --> $DIR/macro-comma-behavior.rs:26:29\n+  --> $DIR/macro-comma-behavior.rs:30:29\n    |\n LL |     debug_assert_eq!(1, 1, \"{}\",);\n    |                             ^^\n \n error: 1 positional argument in format string, but no arguments were given\n-  --> $DIR/macro-comma-behavior.rs:29:29\n+  --> $DIR/macro-comma-behavior.rs:33:29\n    |\n LL |     debug_assert_ne!(1, 2, \"{}\",);\n    |                             ^^\n \n error: 1 positional argument in format string, but no arguments were given\n-  --> $DIR/macro-comma-behavior.rs:34:18\n+  --> $DIR/macro-comma-behavior.rs:38:18\n    |\n LL |         eprint!(\"{}\",);\n    |                  ^^\n \n error: 1 positional argument in format string, but no arguments were given\n-  --> $DIR/macro-comma-behavior.rs:46:18\n+  --> $DIR/macro-comma-behavior.rs:50:18\n    |\n LL |         format!(\"{}\",);\n    |                  ^^\n \n error: 1 positional argument in format string, but no arguments were given\n-  --> $DIR/macro-comma-behavior.rs:50:19\n+  --> $DIR/macro-comma-behavior.rs:54:19\n    |\n LL |     format_args!(\"{}\",);\n    |                   ^^\n \n error: 1 positional argument in format string, but no arguments were given\n-  --> $DIR/macro-comma-behavior.rs:57:17\n+  --> $DIR/macro-comma-behavior.rs:61:17\n    |\n LL |         print!(\"{}\",);\n    |                 ^^\n \n error: 1 positional argument in format string, but no arguments were given\n-  --> $DIR/macro-comma-behavior.rs:68:21\n+  --> $DIR/macro-comma-behavior.rs:72:21\n    |\n LL |     unimplemented!(\"{}\",);\n    |                     ^^\n \n error: 1 positional argument in format string, but no arguments were given\n-  --> $DIR/macro-comma-behavior.rs:77:24\n+  --> $DIR/macro-comma-behavior.rs:81:24\n    |\n LL |             write!(f, \"{}\",)?;\n    |                        ^^\n \n error: aborting due to 10 previous errors\n+"}, {"sha": "a624d574c456f212e28632bcb499290c52a0b74b", "filename": "src/test/ui/parser/macro/pub-item-macro.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fpub-item-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fpub-item-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fpub-item-macro.stderr?ref=bc16edeb28e38e5bbed8828fb6314b1cc5151235", "patch": "@@ -10,7 +10,7 @@ LL |     pub_x!();\n    = help: try adjusting the macro to put `pub` inside the invocation\n \n error[E0603]: static `x` is private\n-  --> $DIR/pub-item-macro.rs:27:23\n+  --> $DIR/pub-item-macro.rs:17:23\n    |\n LL |     let y: u32 = foo::x; //~ ERROR static `x` is private\n    |                       ^"}, {"sha": "f75481e4829bfae22644a58090d265c2d5f0d475", "filename": "src/test/ui/proc-macro/issue-41211.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fproc-macro%2Fissue-41211.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fproc-macro%2Fissue-41211.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-41211.stderr?ref=bc16edeb28e38e5bbed8828fb6314b1cc5151235", "patch": "@@ -7,7 +7,7 @@ LL | #![emit_unchanged]\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error: inconsistent resolution for a macro: first custom attribute, then attribute macro\n-  --> $DIR/issue-41211.rs:18:4\n+  --> $DIR/issue-41211.rs:8:4\n    |\n LL | #![emit_unchanged]\n    |    ^^^^^^^^^^^^^^"}, {"sha": "21e75027e487927fa0e0602e2f02b389e0ad7863", "filename": "src/test/ui/proc-macro/more-gates.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fproc-macro%2Fmore-gates.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fproc-macro%2Fmore-gates.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fmore-gates.stderr?ref=bc16edeb28e38e5bbed8828fb6314b1cc5151235", "patch": "@@ -1,37 +1,37 @@\n error[E0658]: procedural macros cannot expand to macro definitions (see issue #54727)\n-  --> $DIR/more-gates.rs:7:1\n+  --> $DIR/more-gates.rs:9:1\n    |\n LL | #[attr2mac1]\n    | ^^^^^^^^^^^^\n    |\n    = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n \n error[E0658]: procedural macros cannot expand to macro definitions (see issue #54727)\n-  --> $DIR/more-gates.rs:10:1\n+  --> $DIR/more-gates.rs:12:1\n    |\n LL | #[attr2mac2]\n    | ^^^^^^^^^^^^\n    |\n    = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n \n error[E0658]: procedural macros cannot expand to macro definitions (see issue #54727)\n-  --> $DIR/more-gates.rs:14:1\n+  --> $DIR/more-gates.rs:16:1\n    |\n LL | mac2mac1!(); //~ ERROR: cannot expand to macro definitions\n    | ^^^^^^^^^^^^\n    |\n    = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n \n error[E0658]: procedural macros cannot expand to macro definitions (see issue #54727)\n-  --> $DIR/more-gates.rs:15:1\n+  --> $DIR/more-gates.rs:17:1\n    |\n LL | mac2mac2!(); //~ ERROR: cannot expand to macro definitions\n    | ^^^^^^^^^^^^\n    |\n    = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n \n error[E0658]: procedural macros cannot expand to macro definitions (see issue #54727)\n-  --> $DIR/more-gates.rs:17:1\n+  --> $DIR/more-gates.rs:19:1\n    |\n LL | tricky!();\n    | ^^^^^^^^^^"}, {"sha": "a8ee325b41de5c0750e1082f59916e50c8ab51e4", "filename": "src/test/ui/proc-macro/parent-source-spans.stderr", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fproc-macro%2Fparent-source-spans.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fproc-macro%2Fparent-source-spans.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fparent-source-spans.stderr?ref=bc16edeb28e38e5bbed8828fb6314b1cc5151235", "patch": "@@ -35,25 +35,25 @@ LL |     one!(\"hello\", \"world\");\n    |     ----------------------- in this macro invocation\n \n error: first grandparent: \"hello\"\n-  --> $DIR/parent-source-spans.rs:34:5\n+  --> $DIR/parent-source-spans.rs:37:5\n    |\n LL |     one!(\"hello\", \"world\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: second grandparent: \"world\"\n-  --> $DIR/parent-source-spans.rs:34:5\n+  --> $DIR/parent-source-spans.rs:37:5\n    |\n LL |     one!(\"hello\", \"world\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: first source: \"hello\"\n-  --> $DIR/parent-source-spans.rs:34:5\n+  --> $DIR/parent-source-spans.rs:37:5\n    |\n LL |     one!(\"hello\", \"world\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: second source: \"world\"\n-  --> $DIR/parent-source-spans.rs:34:5\n+  --> $DIR/parent-source-spans.rs:37:5\n    |\n LL |     one!(\"hello\", \"world\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n@@ -77,55 +77,55 @@ LL |     two!(\"yay\", \"rust\");\n    |     -------------------- in this macro invocation\n \n error: first parent: \"yay\"\n-  --> $DIR/parent-source-spans.rs:40:5\n+  --> $DIR/parent-source-spans.rs:43:5\n    |\n LL |     two!(\"yay\", \"rust\");\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: second parent: \"rust\"\n-  --> $DIR/parent-source-spans.rs:40:5\n+  --> $DIR/parent-source-spans.rs:43:5\n    |\n LL |     two!(\"yay\", \"rust\");\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: first source: \"yay\"\n-  --> $DIR/parent-source-spans.rs:40:5\n+  --> $DIR/parent-source-spans.rs:43:5\n    |\n LL |     two!(\"yay\", \"rust\");\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: second source: \"rust\"\n-  --> $DIR/parent-source-spans.rs:40:5\n+  --> $DIR/parent-source-spans.rs:43:5\n    |\n LL |     two!(\"yay\", \"rust\");\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: first final: \"hip\"\n-  --> $DIR/parent-source-spans.rs:46:12\n+  --> $DIR/parent-source-spans.rs:49:12\n    |\n LL |     three!(\"hip\", \"hop\");\n    |            ^^^^^\n \n error: second final: \"hop\"\n-  --> $DIR/parent-source-spans.rs:46:19\n+  --> $DIR/parent-source-spans.rs:49:19\n    |\n LL |     three!(\"hip\", \"hop\");\n    |                   ^^^^^\n \n error: first source: \"hip\"\n-  --> $DIR/parent-source-spans.rs:46:12\n+  --> $DIR/parent-source-spans.rs:49:12\n    |\n LL |     three!(\"hip\", \"hop\");\n    |            ^^^^^\n \n error: second source: \"hop\"\n-  --> $DIR/parent-source-spans.rs:46:19\n+  --> $DIR/parent-source-spans.rs:49:19\n    |\n LL |     three!(\"hip\", \"hop\");\n    |                   ^^^^^\n \n error[E0425]: cannot find value `ok` in this scope\n-  --> $DIR/parent-source-spans.rs:40:5\n+  --> $DIR/parent-source-spans.rs:30:5\n    |\n LL |     parent_source_spans!($($tokens)*);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ did you mean `Ok`?\n@@ -134,7 +134,7 @@ LL |     one!(\"hello\", \"world\");\n    |     ----------------------- in this macro invocation\n \n error[E0425]: cannot find value `ok` in this scope\n-  --> $DIR/parent-source-spans.rs:40:5\n+  --> $DIR/parent-source-spans.rs:30:5\n    |\n LL |     parent_source_spans!($($tokens)*);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ did you mean `Ok`?\n@@ -143,7 +143,7 @@ LL |     two!(\"yay\", \"rust\");\n    |     -------------------- in this macro invocation\n \n error[E0425]: cannot find value `ok` in this scope\n-  --> $DIR/parent-source-spans.rs:40:5\n+  --> $DIR/parent-source-spans.rs:30:5\n    |\n LL |     parent_source_spans!($($tokens)*);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ did you mean `Ok`?"}, {"sha": "7ac44c9354dd501cedfd8b56b72a75b7e0dec3c0", "filename": "src/test/ui/proc-macro/proc-macro-attributes.stderr", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-attributes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-attributes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-attributes.stderr?ref=bc16edeb28e38e5bbed8828fb6314b1cc5151235", "patch": "@@ -7,75 +7,75 @@ LL | #[C] //~ ERROR attribute `C` is currently unknown to the compiler\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n error[E0659]: `B` is ambiguous (derive helper attribute vs any other name)\n-  --> $DIR/proc-macro-attributes.rs:16:3\n+  --> $DIR/proc-macro-attributes.rs:6:3\n    |\n LL | #[B] //~ ERROR `B` is ambiguous\n    |   ^ ambiguous name\n    |\n note: `B` could refer to the derive helper attribute defined here\n-  --> $DIR/proc-macro-attributes.rs:22:10\n+  --> $DIR/proc-macro-attributes.rs:12:10\n    |\n LL | #[derive(B)]\n    |          ^\n note: `B` could also refer to the derive macro imported here\n-  --> $DIR/proc-macro-attributes.rs:13:1\n+  --> $DIR/proc-macro-attributes.rs:3:1\n    |\n LL | #[macro_use]\n    | ^^^^^^^^^^^^\n \n error[E0659]: `B` is ambiguous (derive helper attribute vs any other name)\n-  --> $DIR/proc-macro-attributes.rs:18:3\n+  --> $DIR/proc-macro-attributes.rs:8:3\n    |\n LL | #[B(D)] //~ ERROR `B` is ambiguous\n    |   ^ ambiguous name\n    |\n note: `B` could refer to the derive helper attribute defined here\n-  --> $DIR/proc-macro-attributes.rs:22:10\n+  --> $DIR/proc-macro-attributes.rs:12:10\n    |\n LL | #[derive(B)]\n    |          ^\n note: `B` could also refer to the derive macro imported here\n-  --> $DIR/proc-macro-attributes.rs:13:1\n+  --> $DIR/proc-macro-attributes.rs:3:1\n    |\n LL | #[macro_use]\n    | ^^^^^^^^^^^^\n \n error[E0659]: `B` is ambiguous (derive helper attribute vs any other name)\n-  --> $DIR/proc-macro-attributes.rs:19:3\n+  --> $DIR/proc-macro-attributes.rs:9:3\n    |\n LL | #[B(E = \"foo\")] //~ ERROR `B` is ambiguous\n    |   ^ ambiguous name\n    |\n note: `B` could refer to the derive helper attribute defined here\n-  --> $DIR/proc-macro-attributes.rs:22:10\n+  --> $DIR/proc-macro-attributes.rs:12:10\n    |\n LL | #[derive(B)]\n    |          ^\n note: `B` could also refer to the derive macro imported here\n-  --> $DIR/proc-macro-attributes.rs:13:1\n+  --> $DIR/proc-macro-attributes.rs:3:1\n    |\n LL | #[macro_use]\n    | ^^^^^^^^^^^^\n \n error[E0659]: `B` is ambiguous (derive helper attribute vs any other name)\n-  --> $DIR/proc-macro-attributes.rs:20:3\n+  --> $DIR/proc-macro-attributes.rs:10:3\n    |\n LL | #[B(arbitrary tokens)] //~ ERROR `B` is ambiguous\n    |   ^ ambiguous name\n    |\n note: `B` could refer to the derive helper attribute defined here\n-  --> $DIR/proc-macro-attributes.rs:22:10\n+  --> $DIR/proc-macro-attributes.rs:12:10\n    |\n LL | #[derive(B)]\n    |          ^\n note: `B` could also refer to the derive macro imported here\n-  --> $DIR/proc-macro-attributes.rs:13:1\n+  --> $DIR/proc-macro-attributes.rs:3:1\n    |\n LL | #[macro_use]\n    | ^^^^^^^^^^^^\n \n error: expected one of `(`, `)`, `,`, `::`, or `=`, found `tokens`\n-  --> $DIR/proc-macro-attributes.rs:20:15\n+  --> $DIR/proc-macro-attributes.rs:10:15\n    |\n LL | #[B(arbitrary tokens)] //~ ERROR `B` is ambiguous\n    |               ^^^^^^ expected one of `(`, `)`, `,`, `::`, or `=` here"}, {"sha": "96feff949bfc936f51653e7d91fda261741240fd", "filename": "src/test/ui/quote-with-interpolated.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fquote-with-interpolated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fquote-with-interpolated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fquote-with-interpolated.stderr?ref=bc16edeb28e38e5bbed8828fb6314b1cc5151235", "patch": "@@ -8,19 +8,19 @@ LL |     foo!(bar);\n    |     ---------- in this macro invocation\n \n error[E0433]: failed to resolve: maybe a missing `extern crate syntax;`?\n-  --> $DIR/quote-with-interpolated.rs:15:13\n+  --> $DIR/quote-with-interpolated.rs:5:13\n    |\n LL |             quote_expr!(cx, $bar)\n    |             ^^^^^^^^^^^^^^^^^^^^^ maybe a missing `extern crate syntax;`?\n \n error[E0433]: failed to resolve: maybe a missing `extern crate syntax;`?\n-  --> $DIR/quote-with-interpolated.rs:15:29\n+  --> $DIR/quote-with-interpolated.rs:5:29\n    |\n LL |             quote_expr!(cx, $bar)\n    |                             ^^^^ maybe a missing `extern crate syntax;`?\n \n error[E0425]: cannot find value `cx` in this scope\n-  --> $DIR/quote-with-interpolated.rs:15:25\n+  --> $DIR/quote-with-interpolated.rs:5:25\n    |\n LL |             quote_expr!(cx, $bar)\n    |                         ^^ not found in this scope\n@@ -29,7 +29,7 @@ LL |     foo!(bar);\n    |     ---------- in this macro invocation\n \n error[E0425]: cannot find function `new_parser_from_tts` in this scope\n-  --> $DIR/quote-with-interpolated.rs:15:13\n+  --> $DIR/quote-with-interpolated.rs:5:13\n    |\n LL |             quote_expr!(cx, $bar)\n    |             ^^^^^^^^^^^^^^^^^^^^^ not found in this scope"}, {"sha": "46d3478b628416c1812ee5db0e1dabd64bfb865e", "filename": "src/test/ui/reserved/reserved-attr-on-macro.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Freserved%2Freserved-attr-on-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Freserved%2Freserved-attr-on-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freserved%2Freserved-attr-on-macro.stderr?ref=bc16edeb28e38e5bbed8828fb6314b1cc5151235", "patch": "@@ -7,7 +7,7 @@ LL | #[rustc_attribute_should_be_reserved]\n    = help: add #![feature(rustc_attrs)] to the crate attributes to enable\n \n error: cannot determine resolution for the macro `foo`\n-  --> $DIR/reserved-attr-on-macro.rs:18:5\n+  --> $DIR/reserved-attr-on-macro.rs:8:5\n    |\n LL |     foo!(); //~ ERROR cannot determine resolution for the macro `foo`\n    |     ^^^"}, {"sha": "f75377a220b49fbe950f5dd3e2da653b7bac66cf", "filename": "src/test/ui/self/self_type_keyword.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fself%2Fself_type_keyword.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fself%2Fself_type_keyword.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Fself_type_keyword.stderr?ref=bc16edeb28e38e5bbed8828fb6314b1cc5151235", "patch": "@@ -5,43 +5,43 @@ LL |   struct Self;\n    |          ^^^^ expected identifier, found keyword\n \n error: expected identifier, found keyword `Self`\n-  --> $DIR/self_type_keyword.rs:15:13\n+  --> $DIR/self_type_keyword.rs:16:13\n    |\n LL |         ref Self => (),\n    |             ^^^^ expected identifier, found keyword\n \n error: expected identifier, found keyword `Self`\n-  --> $DIR/self_type_keyword.rs:17:13\n+  --> $DIR/self_type_keyword.rs:18:13\n    |\n LL |         mut Self => (),\n    |             ^^^^ expected identifier, found keyword\n \n error: expected identifier, found keyword `Self`\n-  --> $DIR/self_type_keyword.rs:19:17\n+  --> $DIR/self_type_keyword.rs:20:17\n    |\n LL |         ref mut Self => (),\n    |                 ^^^^ expected identifier, found keyword\n \n error: expected identifier, found keyword `Self`\n-  --> $DIR/self_type_keyword.rs:23:15\n+  --> $DIR/self_type_keyword.rs:24:15\n    |\n LL |         Foo { Self } => (),\n    |               ^^^^ expected identifier, found keyword\n \n error: expected identifier, found keyword `Self`\n-  --> $DIR/self_type_keyword.rs:29:26\n+  --> $DIR/self_type_keyword.rs:30:26\n    |\n LL |     extern crate core as Self;\n    |                          ^^^^ expected identifier, found keyword\n \n error: expected identifier, found keyword `Self`\n-  --> $DIR/self_type_keyword.rs:34:32\n+  --> $DIR/self_type_keyword.rs:35:32\n    |\n LL |     use std::option::Option as Self;\n    |                                ^^^^ expected identifier, found keyword\n \n error: expected identifier, found keyword `Self`\n-  --> $DIR/self_type_keyword.rs:39:11\n+  --> $DIR/self_type_keyword.rs:40:11\n    |\n LL |     trait Self {}\n    |           ^^^^ expected identifier, found keyword\n@@ -53,13 +53,13 @@ LL | struct Bar<'Self>;\n    |            ^^^^^\n \n error: cannot find macro `Self!` in this scope\n-  --> $DIR/self_type_keyword.rs:21:9\n+  --> $DIR/self_type_keyword.rs:22:9\n    |\n LL |         Self!() => (),\n    |         ^^^^\n \n error[E0392]: parameter `'Self` is never used\n-  --> $DIR/self_type_keyword.rs:18:12\n+  --> $DIR/self_type_keyword.rs:8:12\n    |\n LL | struct Bar<'Self>;\n    |            ^^^^^ unused type parameter"}, {"sha": "23fdde06e8f9dd473a79e25b9c908f8c4edafbf1", "filename": "src/test/ui/span/macro-ty-params.stderr", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fspan%2Fmacro-ty-params.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fspan%2Fmacro-ty-params.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fmacro-ty-params.stderr?ref=bc16edeb28e38e5bbed8828fb6314b1cc5151235", "patch": "@@ -1,25 +1,26 @@\n-error: unexpected generic arguments in path\n+error: generic arguments in macro path\n   --> $DIR/macro-ty-params.rs:10:8\n    |\n LL |     foo::<T>!(); //~ ERROR generic arguments in macro path\n    |        ^^^^^\n \n error: generic arguments in macro path\n-  --> $DIR/macro-ty-params.rs:10:15\n+  --> $DIR/macro-ty-params.rs:11:8\n    |\n LL |     foo::<>!(); //~ ERROR generic arguments in macro path\n    |        ^^^^\n \n-error: generic arguments in macro path\n-  --> $DIR/macro-ty-params.rs:8:8\n+error: unexpected generic arguments in path\n+  --> $DIR/macro-ty-params.rs:12:8\n    |\n LL |     m!(Default<>); //~ ERROR generic arguments in macro path\n    |        ^^^^^^^^^\n \n error: generic arguments in macro path\n-  --> $DIR/macro-ty-params.rs:9:8\n+  --> $DIR/macro-ty-params.rs:12:15\n    |\n LL |     m!(Default<>); //~ ERROR generic arguments in macro path\n    |               ^^\n \n error: aborting due to 4 previous errors\n+"}, {"sha": "1fb54df15704b41575c09f65f7e17360a29c99fc", "filename": "src/test/ui/span/visibility-ty-params.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fspan%2Fvisibility-ty-params.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Fspan%2Fvisibility-ty-params.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fvisibility-ty-params.stderr?ref=bc16edeb28e38e5bbed8828fb6314b1cc5151235", "patch": "@@ -5,13 +5,13 @@ LL | m!{ S<u8> } //~ ERROR unexpected generic arguments in path\n    |     ^^^^^\n \n error: unexpected generic arguments in path\n-  --> $DIR/visibility-ty-params.rs:9:9\n+  --> $DIR/visibility-ty-params.rs:10:9\n    |\n LL |     m!{ m<> } //~ ERROR unexpected generic arguments in path\n    |         ^^^\n \n error[E0577]: expected module, found struct `S`\n-  --> $DIR/visibility-ty-params.rs:16:5\n+  --> $DIR/visibility-ty-params.rs:6:5\n    |\n LL | m!{ S<u8> } //~ ERROR unexpected generic arguments in path\n    |     -^^^^"}, {"sha": "4831aa158dbc8d3901e06374dafff8a5189fe8f1", "filename": "src/test/ui/trace_macros-gate.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Ftrace_macros-gate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Ftrace_macros-gate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrace_macros-gate.stderr?ref=bc16edeb28e38e5bbed8828fb6314b1cc5151235", "patch": "@@ -7,7 +7,7 @@ LL |     trace_macros!(); //~ ERROR `trace_macros` is not stable\n    = help: add #![feature(trace_macros)] to the crate attributes to enable\n \n error: trace_macros! accepts only `true` or `false`\n-  --> $DIR/trace_macros-gate.rs:14:5\n+  --> $DIR/trace_macros-gate.rs:4:5\n    |\n LL |     trace_macros!(); //~ ERROR `trace_macros` is not stable\n    |     ^^^^^^^^^^^^^^^^\n@@ -29,7 +29,7 @@ LL |     trace_macros!(false); //~ ERROR `trace_macros` is not stable\n    = help: add #![feature(trace_macros)] to the crate attributes to enable\n \n error[E0658]: `trace_macros` is not stable enough for use and is subject to change (see issue #29598)\n-  --> $DIR/trace_macros-gate.rs:20:26\n+  --> $DIR/trace_macros-gate.rs:10:26\n    |\n LL |         ($x: ident) => { trace_macros!($x) } //~ ERROR `trace_macros` is not stable\n    |                          ^^^^^^^^^^^^^^^^^"}, {"sha": "80f0ddc0e4fcdfb7a66dc0fcfd4c51ee5e957079", "filename": "src/test/ui/tuple/tuple-struct-fields/test2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Ftuple%2Ftuple-struct-fields%2Ftest2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Ftuple%2Ftuple-struct-fields%2Ftest2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftuple%2Ftuple-struct-fields%2Ftest2.stderr?ref=bc16edeb28e38e5bbed8828fb6314b1cc5151235", "patch": "@@ -8,7 +8,7 @@ LL |     define_struct! { (foo) } //~ ERROR cannot find type `foo` in this scope\n    |     ------------------------ in this macro invocation\n \n error[E0412]: cannot find type `foo` in this scope\n-  --> $DIR/test2.rs:21:23\n+  --> $DIR/test2.rs:11:23\n    |\n LL |     define_struct! { (foo) } //~ ERROR cannot find type `foo` in this scope\n    |                       ^^^ not found in this scope"}, {"sha": "fbc01744fe44587a25f4da348ec445340bddde86", "filename": "src/test/ui/tuple/tuple-struct-fields/test3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Ftuple%2Ftuple-struct-fields%2Ftest3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc16edeb28e38e5bbed8828fb6314b1cc5151235/src%2Ftest%2Fui%2Ftuple%2Ftuple-struct-fields%2Ftest3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftuple%2Ftuple-struct-fields%2Ftest3.stderr?ref=bc16edeb28e38e5bbed8828fb6314b1cc5151235", "patch": "@@ -8,7 +8,7 @@ LL |     define_struct! { foo } //~ ERROR cannot find type `foo` in this scope\n    |     ---------------------- in this macro invocation\n \n error[E0412]: cannot find type `foo` in this scope\n-  --> $DIR/test3.rs:21:22\n+  --> $DIR/test3.rs:11:22\n    |\n LL |     define_struct! { foo } //~ ERROR cannot find type `foo` in this scope\n    |                      ^^^ not found in this scope"}]}