{"sha": "291dbe8d87701f3617ccdd70caa49df1c27af0e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5MWRiZThkODc3MDFmMzYxN2NjZGQ3MGNhYTQ5ZGYxYzI3YWYwZTA=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-11-09T22:16:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-11-09T22:16:09Z"}, "message": "Merge pull request #2134 from mathstuf/configuration-fixes\n\nConfiguration fixes", "tree": {"sha": "1243c59c6a693076997c41289a5908d558e902e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1243c59c6a693076997c41289a5908d558e902e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/291dbe8d87701f3617ccdd70caa49df1c27af0e0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaBNOpCRBK7hj4Ov3rIwAAdHIIAF3bpXNw8LBSrglNIvmXYD2q\nDwQpsMRrtoc8OEnv/gk4dVSWPVSBhXJLZXkcZPBbbvVViyZBNnRHMPfHpB/OKEah\n45SzNRSA8ghaZ8YmbQwRG8N9OfKytTir2NN7X0MX6drpwSLYlZM7XGCTioloh8i9\nf9eo1xfjDvvPWTeO5uwxRQXDxKdjfCu/MZbpvQpF6uCWxkRnQGk4DWL8E7zK8WlX\nkan8R63roUflBE9ZBa8rIZmPgrGFvqHDoMkTAYZZhvJhLvtL7dUCvjiLC4WkQ4lF\nx3501RrYbaubPV3uxA3TY0tnza2eiW84hTZBBhfVsHIwQGrvFda9FaX4whxz3hU=\n=sy9j\n-----END PGP SIGNATURE-----\n", "payload": "tree 1243c59c6a693076997c41289a5908d558e902e6\nparent 560f66cfe30f0faf627ead8f122073e09ab21ede\nparent 523fc086c79e804a1b815056f23c69da687b27b4\nauthor Nick Cameron <nrc@ncameron.org> 1510265769 +1300\ncommitter GitHub <noreply@github.com> 1510265769 +1300\n\nMerge pull request #2134 from mathstuf/configuration-fixes\n\nConfiguration fixes"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/291dbe8d87701f3617ccdd70caa49df1c27af0e0", "html_url": "https://github.com/rust-lang/rust/commit/291dbe8d87701f3617ccdd70caa49df1c27af0e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/291dbe8d87701f3617ccdd70caa49df1c27af0e0/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "560f66cfe30f0faf627ead8f122073e09ab21ede", "url": "https://api.github.com/repos/rust-lang/rust/commits/560f66cfe30f0faf627ead8f122073e09ab21ede", "html_url": "https://github.com/rust-lang/rust/commit/560f66cfe30f0faf627ead8f122073e09ab21ede"}, {"sha": "523fc086c79e804a1b815056f23c69da687b27b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/523fc086c79e804a1b815056f23c69da687b27b4", "html_url": "https://github.com/rust-lang/rust/commit/523fc086c79e804a1b815056f23c69da687b27b4"}], "stats": {"total": 141, "additions": 119, "deletions": 22}, "files": [{"sha": "68ff64cffb9b41ba7be82fd7a403c2a69773047d", "filename": "Configurations.md", "status": "modified", "additions": 119, "deletions": 22, "changes": 141, "blob_url": "https://github.com/rust-lang/rust/blob/291dbe8d87701f3617ccdd70caa49df1c27af0e0/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/291dbe8d87701f3617ccdd70caa49df1c27af0e0/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=291dbe8d87701f3617ccdd70caa49df1c27af0e0", "patch": "@@ -477,13 +477,22 @@ Don't reformat anything\n \n ## `error_on_line_overflow`\n \n-Error if unable to get all lines within max_width\n+Error if unable to get all lines within `max_width`\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n \n See also [`max_width`](#max_width).\n \n+## `error_on_line_overflow_comments`\n+\n+Error if unable to get all comment lines within `comment_width`.\n+\n+- **Default value**: `true`\n+- **Possible values**: `true`, `false`\n+\n+See also [`comment_width`](#comment_width).\n+\n ## `fn_args_density`\n \n Argument density in functions\n@@ -1152,7 +1161,7 @@ use foo::{xxx, yyy, zzz};\n use foo::{aaa, bbb, ccc, ddd, eee, fff};\n ```\n \n-#### `\"HorizontalVertical\"`\n+#### `\"HorizontalVertical\"`:\n \n ```rust\n use foo::{xxx, yyy, zzz};\n@@ -1165,7 +1174,7 @@ use foo::{aaa,\n           fff};\n ```\n \n-#### `\"Vertical\"`\n+#### `\"Vertical\"`:\n \n ```rust\n use foo::{xxx,\n@@ -1543,6 +1552,94 @@ use sit;\n \n See also [`reorder_imports`](#reorder_imports).\n \n+## `reorder_extern_crates`\n+\n+Reorder `extern crate` statements alphabetically\n+\n+- **Default value**: `true`\n+- **Possible values**: `true`, `false`\n+\n+#### `true` (default):\n+\n+```rust\n+extern crate dolor;\n+extern crate ipsum;\n+extern crate lorem;\n+extern crate sit;\n+```\n+\n+#### `false`:\n+\n+```rust\n+extern crate lorem;\n+extern crate ipsum;\n+extern crate dolor;\n+extern crate sit;\n+```\n+\n+See also [`reorder_extern_crates_in_group`](#reorder_extern_crates_in_group).\n+\n+## `reorder_extern_crates_in_group`\n+\n+Reorder `extern crate` statements in group\n+\n+- **Default value**: `true`\n+- **Possible values**: `true`, `false`\n+\n+**Note:** This option takes effect only when [`reorder_imports`](#reorder_imports) is set to `true`.\n+\n+#### `true` (default):\n+\n+```rust\n+extern crate a;\n+extern crate b;\n+\n+extern crate dolor;\n+extern crate ipsum;\n+extern crate lorem;\n+extern crate sit;\n+```\n+\n+#### `false`:\n+\n+```rust\n+extern crate b;\n+extern crate a;\n+\n+extern crate lorem;\n+extern crate ipsum;\n+extern crate dolor;\n+extern crate sit;\n+```\n+\n+See also [`reorder_extern_crates`](#reorder_extern_crates).\n+\n+## `report_todo`\n+\n+Report `TODO` items in comments.\n+\n+- **Default value**: `\"Never\"`\n+- **Possible values**: `\"Always\"`, `\"Unnumbered\"`, `\"Never\"`\n+\n+Warns about any comments containing `TODO` in them when set to `\"Always\"`. If\n+it contains a `#X` (with `X` being a number) in parentheses following the\n+`TODO`, `\"Unnumbered\"` will ignore it.\n+\n+See also [`report_fixme`](#report_fixme).\n+\n+## `report_fixme`\n+\n+Report `FIXME` items in comments.\n+\n+- **Default value**: `\"Never\"`\n+- **Possible values**: `\"Always\"`, `\"Unnumbered\"`, `\"Never\"`\n+\n+Warns about any comments containing `FIXME` in them when set to `\"Always\"`. If\n+it contains a `#X` (with `X` being a number) in parentheses following the\n+`FIXME`, `\"Unnumbered\"` will ignore it.\n+\n+See also [`report_todo`](#report_todo).\n+\n ## `single_line_if_else_max_width`\n \n Maximum line length for single line if-else expressions.\n@@ -2123,74 +2220,74 @@ let lorem = ipsum.map(|dolor| dolor.sit())?;\n \n Density of a where clause.\n \n-- **Default value**: `\"CompressedIfEmpty\"`\n+- **Default value**: `\"Vertical\"`\n - **Possible values**: `\"Compressed\"`, `\"CompressedIfEmpty\"`, `\"Tall\"`, `\"Vertical\"`\n \n-#### `\"CompressedIfEmpty\"` (default):\n+#### `\"Vertical\"` (default):\n \n ```rust\n trait Lorem {\n     fn ipsum<Dolor>(dolor: Dolor) -> Sit\n-    where Dolor: Eq;\n+        where Dolor: Eq;\n \n     fn ipsum<Dolor>(dolor: Dolor) -> Sit\n-    where\n-        Dolor: Eq,\n+        where Dolor: Eq\n     {\n         // body\n     }\n }\n ```\n \n-#### `\"Compressed\"`:\n+**Note:** `where_density = \"Vertical\"` currently produces the same output as `where_density = \"Tall\"`.\n+\n+#### `\"CompressedIfEmpty\"`:\n \n ```rust\n trait Lorem {\n     fn ipsum<Dolor>(dolor: Dolor) -> Sit\n     where Dolor: Eq;\n \n     fn ipsum<Dolor>(dolor: Dolor) -> Sit\n-    where Dolor: Eq {\n+    where\n+        Dolor: Eq,\n+    {\n         // body\n     }\n }\n ```\n \n-#### `\"Tall\"`:\n+#### `\"Compressed\"`:\n \n ```rust\n trait Lorem {\n     fn ipsum<Dolor>(dolor: Dolor) -> Sit\n-    where\n-        Dolor: Eq;\n+    where Dolor: Eq;\n \n     fn ipsum<Dolor>(dolor: Dolor) -> Sit\n-    where\n-        Dolor: Eq,\n-    {\n+    where Dolor: Eq {\n         // body\n     }\n }\n ```\n \n-**Note:** `where_density = \"Tall\"` currently produces the same output as `where_density = \"Vertical\"`.\n-\n-#### `\"Vertical\"`:\n+#### `\"Tall\"`:\n \n ```rust\n trait Lorem {\n     fn ipsum<Dolor>(dolor: Dolor) -> Sit\n-        where Dolor: Eq;\n+    where\n+        Dolor: Eq;\n \n     fn ipsum<Dolor>(dolor: Dolor) -> Sit\n-        where Dolor: Eq\n+    where\n+        Dolor: Eq,\n     {\n         // body\n     }\n }\n ```\n \n-**Note:** `where_density = \"Vertical\"` currently produces the same output as `where_density = \"Tall\"`.\n+**Note:** `where_density = \"Tall\"` currently produces the same output as `where_density = \"Vertical\"`.\n \n See also: [`where_layout`](#where_layout), [`where_pred_indent`](#where_pred_indent), [`where_style`](#where_style).\n "}]}