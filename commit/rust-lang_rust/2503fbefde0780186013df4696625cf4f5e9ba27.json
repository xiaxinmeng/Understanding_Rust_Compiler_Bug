{"sha": "2503fbefde0780186013df4696625cf4f5e9ba27", "node_id": "C_kwDOAAsO6NoAKDI1MDNmYmVmZGUwNzgwMTg2MDEzZGY0Njk2NjI1Y2Y0ZjVlOWJhMjc", "commit": {"author": {"name": "Ddystopia", "email": "alexanderbabak@proton.me", "date": "2023-04-26T12:50:13Z"}, "committer": {"name": "Ddystopia", "email": "alexanderbabak@proton.me", "date": "2023-05-02T15:06:39Z"}, "message": "Small improvements and fixes", "tree": {"sha": "9581a8bac6c30c03f004b86688f5f5f4ecdbca3c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9581a8bac6c30c03f004b86688f5f5f4ecdbca3c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2503fbefde0780186013df4696625cf4f5e9ba27", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE83x4qCmEA5TzaAMiEJh17BFTUhIFAmRRJv8ACgkQEJh17BFT\nUhJ5qw/+IP8dRYwOv2EmAniXJ7ZGyv6q3dBw8P7pUemsu6cOq4s2cndtQpjIRbmw\nGvLiAiI87KyMrH4RHOI+adfChbySfh2kJjpoxNfH9hdsyGoe/6RWFKC8weUOLWRX\n5TKvvpvErglhI+Qvh96szgWLzCpOp7dp+7Y47oSQff7EtUfMLCGHtKDutMsW5s1X\n/UcLbh+5hQnSLQ2VuIZFy0GOmbIKgnOedoWmEYEWNHaOqmtLYAzJIslRBHsTljfb\nc9q12+/448f6ujjMm1QmJmUIBp3q3zEbOVe3zpTnW/VPeIgpe4sAzRK7r9ehMZoh\nKyQkjv+ScEKnUcXRlYf1p4gtkGHBEPXAfMrTyi77WUa7/KmdolhSq+v+C1VB7wDL\nambB1Z9BnFK3hLcZyje2WoESa8cTiqFO4/dFB1/RB+umzMWU2F6e+Evo7quNSRCM\nw8J65E2HIbPV2jG00P8tpPepPvJfsGnc6Hq882oPQ3ZxscjxbRLA86NXfdAtJnGB\njDPZqQqth206iX8q84dpKiaYK4zF/+1yPTRMHTYyWNUoxmBTSb5LbQi8dmNK7SkW\ngdHw4nUA0wv+JWLrEuhrk/PHn6PNjwVF1datNvUtD+5EdrSCpNd2Zdnc5h9fvFC/\nthmBZf8y6cN45r6oHcBltvzXEz3KfJc8GbydWmsF7t1n+OW3xCw=\n=cLI6\n-----END PGP SIGNATURE-----", "payload": "tree 9581a8bac6c30c03f004b86688f5f5f4ecdbca3c\nparent 3fbb48907e775278982fc4522a2f0925de389396\nauthor Ddystopia <alexanderbabak@proton.me> 1682513413 +0200\ncommitter Ddystopia <alexanderbabak@proton.me> 1683039999 +0200\n\nSmall improvements and fixes\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2503fbefde0780186013df4696625cf4f5e9ba27", "html_url": "https://github.com/rust-lang/rust/commit/2503fbefde0780186013df4696625cf4f5e9ba27", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2503fbefde0780186013df4696625cf4f5e9ba27/comments", "author": {"login": "Ddystopia", "id": 63151578, "node_id": "MDQ6VXNlcjYzMTUxNTc4", "avatar_url": "https://avatars.githubusercontent.com/u/63151578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ddystopia", "html_url": "https://github.com/Ddystopia", "followers_url": "https://api.github.com/users/Ddystopia/followers", "following_url": "https://api.github.com/users/Ddystopia/following{/other_user}", "gists_url": "https://api.github.com/users/Ddystopia/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ddystopia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ddystopia/subscriptions", "organizations_url": "https://api.github.com/users/Ddystopia/orgs", "repos_url": "https://api.github.com/users/Ddystopia/repos", "events_url": "https://api.github.com/users/Ddystopia/events{/privacy}", "received_events_url": "https://api.github.com/users/Ddystopia/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ddystopia", "id": 63151578, "node_id": "MDQ6VXNlcjYzMTUxNTc4", "avatar_url": "https://avatars.githubusercontent.com/u/63151578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ddystopia", "html_url": "https://github.com/Ddystopia", "followers_url": "https://api.github.com/users/Ddystopia/followers", "following_url": "https://api.github.com/users/Ddystopia/following{/other_user}", "gists_url": "https://api.github.com/users/Ddystopia/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ddystopia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ddystopia/subscriptions", "organizations_url": "https://api.github.com/users/Ddystopia/orgs", "repos_url": "https://api.github.com/users/Ddystopia/repos", "events_url": "https://api.github.com/users/Ddystopia/events{/privacy}", "received_events_url": "https://api.github.com/users/Ddystopia/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3fbb48907e775278982fc4522a2f0925de389396", "url": "https://api.github.com/repos/rust-lang/rust/commits/3fbb48907e775278982fc4522a2f0925de389396", "html_url": "https://github.com/rust-lang/rust/commit/3fbb48907e775278982fc4522a2f0925de389396"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "ac91354a34a87066035e7f4c7314ab161eea0ae4", "filename": "crates/ide/src/doc_links.rs", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/2503fbefde0780186013df4696625cf4f5e9ba27/crates%2Fide%2Fsrc%2Fdoc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2503fbefde0780186013df4696625cf4f5e9ba27/crates%2Fide%2Fsrc%2Fdoc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdoc_links.rs?ref=2503fbefde0780186013df4696625cf4f5e9ba27", "patch": "@@ -467,18 +467,17 @@ fn get_doc_base_urls(\n     def: Definition,\n     target_dir: Option<&OsStr>,\n ) -> (Option<Url>, Option<Url>) {\n-    let local_doc_path = target_dir\n-        .and_then(|it| Url::from_directory_path(it).ok())\n-        .and_then(|it| it.join(\"doc\").ok());\n+    let local_doc_path =\n+        target_dir.and_then(create_url_from_os_str).and_then(|it| it.join(\"doc/\").ok());\n     // special case base url of `BuiltinType` to core\n     // https://github.com/rust-lang/rust-analyzer/issues/12250\n     if let Definition::BuiltinType(..) = def {\n         let weblink = Url::parse(\"https://doc.rust-lang.org/nightly/core/\").ok();\n         return (weblink, local_doc_path);\n     };\n \n-    let Some(krate) = def.krate(db) else { return (None, local_doc_path) };\n-    let Some(display_name) = krate.display_name(db) else { return (None, local_doc_path) };\n+    let Some(krate) = def.krate(db) else { return Default::default() };\n+    let Some(display_name) = krate.display_name(db) else { return Default::default() };\n     let crate_data = &db.crate_graph()[krate.into()];\n     let channel = crate_data.channel.map_or(\"nightly\", ReleaseChannel::as_str);\n     let (web_base, local_base) = match &crate_data.origin {\n@@ -532,7 +531,18 @@ fn get_doc_base_urls(\n     let web_base = web_base\n         .and_then(|it| Url::parse(&it).ok())\n         .and_then(|it| it.join(&format!(\"{display_name}/\")).ok());\n-    (web_base, local_base)\n+    let local_base = local_base.and_then(|it| it.join(&format!(\"{display_name}/\")).ok());\n+\n+    return (web_base, local_base);\n+\n+    // On Windows, cargo metadata returns paths without leading slashes, but\n+    // Url::from_directory_path requires them.\n+    // In unix adding another \"/\" will not make any difference.\n+    fn create_url_from_os_str(path: &OsStr) -> Option<Url> {\n+        let mut with_leading_slash = OsStr::new(\"/\").to_os_string();\n+        with_leading_slash.push(path);\n+        Url::from_directory_path(with_leading_slash.as_os_str()).ok()\n+    }\n }\n \n /// Get the filename and extension generated for a symbol by rustdoc."}]}