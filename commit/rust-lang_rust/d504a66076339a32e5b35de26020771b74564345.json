{"sha": "d504a66076339a32e5b35de26020771b74564345", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1MDRhNjYwNzYzMzlhMzJlNWIzNWRlMjYwMjA3NzFiNzQ1NjQzNDU=", "commit": {"author": {"name": "Shohei Wada", "email": "pc@wada314.jp", "date": "2018-12-24T08:48:42Z"}, "committer": {"name": "Shohei Wada", "email": "pc@wada314.jp", "date": "2018-12-24T08:48:42Z"}, "message": "Remove a trivial redundant code.\nself.base.peek().is_none() case is already catched by the line above.", "tree": {"sha": "3c43d3adc294e62b572b2836ebdc771d5e5bfc0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c43d3adc294e62b572b2836ebdc771d5e5bfc0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d504a66076339a32e5b35de26020771b74564345", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d504a66076339a32e5b35de26020771b74564345", "html_url": "https://github.com/rust-lang/rust/commit/d504a66076339a32e5b35de26020771b74564345", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d504a66076339a32e5b35de26020771b74564345/comments", "author": {"login": "wada314", "id": 1488411, "node_id": "MDQ6VXNlcjE0ODg0MTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1488411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wada314", "html_url": "https://github.com/wada314", "followers_url": "https://api.github.com/users/wada314/followers", "following_url": "https://api.github.com/users/wada314/following{/other_user}", "gists_url": "https://api.github.com/users/wada314/gists{/gist_id}", "starred_url": "https://api.github.com/users/wada314/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wada314/subscriptions", "organizations_url": "https://api.github.com/users/wada314/orgs", "repos_url": "https://api.github.com/users/wada314/repos", "events_url": "https://api.github.com/users/wada314/events{/privacy}", "received_events_url": "https://api.github.com/users/wada314/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wada314", "id": 1488411, "node_id": "MDQ6VXNlcjE0ODg0MTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1488411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wada314", "html_url": "https://github.com/wada314", "followers_url": "https://api.github.com/users/wada314/followers", "following_url": "https://api.github.com/users/wada314/following{/other_user}", "gists_url": "https://api.github.com/users/wada314/gists{/gist_id}", "starred_url": "https://api.github.com/users/wada314/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wada314/subscriptions", "organizations_url": "https://api.github.com/users/wada314/orgs", "repos_url": "https://api.github.com/users/wada314/repos", "events_url": "https://api.github.com/users/wada314/events{/privacy}", "received_events_url": "https://api.github.com/users/wada314/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1ee7e956565c05b48586bf3379cdb0b2767c3c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1ee7e956565c05b48586bf3379cdb0b2767c3c0", "html_url": "https://github.com/rust-lang/rust/commit/a1ee7e956565c05b48586bf3379cdb0b2767c3c0"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "7d7f56f54a5e049b9b875a8c79d38f70bcd6e88c", "filename": "src/comment.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d504a66076339a32e5b35de26020771b74564345/src%2Fcomment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d504a66076339a32e5b35de26020771b74564345/src%2Fcomment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomment.rs?ref=d504a66076339a32e5b35de26020771b74564345", "patch": "@@ -1301,7 +1301,7 @@ impl<'a> Iterator for LineClasses<'a> {\n \n         let start_class = match self.base.peek() {\n             Some((kind, _)) => *kind,\n-            None => FullCodeCharKind::Normal,\n+            None => unreachable!(),\n         };\n \n         while let Some((kind, c)) = self.base.next() {"}]}