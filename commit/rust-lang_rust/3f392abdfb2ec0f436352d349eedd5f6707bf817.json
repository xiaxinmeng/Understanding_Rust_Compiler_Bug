{"sha": "3f392abdfb2ec0f436352d349eedd5f6707bf817", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmMzkyYWJkZmIyZWMwZjQzNjM1MmQzNDllZWRkNWY2NzA3YmY4MTc=", "commit": {"author": {"name": "Nicolas Koch", "email": "nioko1337@gmail.com", "date": "2018-05-24T12:51:59Z"}, "committer": {"name": "Nicolas Koch", "email": "nioko1337@gmail.com", "date": "2018-05-24T12:51:59Z"}, "message": "Implement suggestions from the PR\n  - Move loading of atomic bool outside the loop\n  - Add comment about TryFrom for future improvement", "tree": {"sha": "ad68babe6962075b833548d82f9eeab2ad528c14", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad68babe6962075b833548d82f9eeab2ad528c14"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f392abdfb2ec0f436352d349eedd5f6707bf817", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f392abdfb2ec0f436352d349eedd5f6707bf817", "html_url": "https://github.com/rust-lang/rust/commit/3f392abdfb2ec0f436352d349eedd5f6707bf817", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f392abdfb2ec0f436352d349eedd5f6707bf817/comments", "author": {"login": "nicokoch", "id": 3924281, "node_id": "MDQ6VXNlcjM5MjQyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/3924281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicokoch", "html_url": "https://github.com/nicokoch", "followers_url": "https://api.github.com/users/nicokoch/followers", "following_url": "https://api.github.com/users/nicokoch/following{/other_user}", "gists_url": "https://api.github.com/users/nicokoch/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicokoch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicokoch/subscriptions", "organizations_url": "https://api.github.com/users/nicokoch/orgs", "repos_url": "https://api.github.com/users/nicokoch/repos", "events_url": "https://api.github.com/users/nicokoch/events{/privacy}", "received_events_url": "https://api.github.com/users/nicokoch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nicokoch", "id": 3924281, "node_id": "MDQ6VXNlcjM5MjQyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/3924281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicokoch", "html_url": "https://github.com/nicokoch", "followers_url": "https://api.github.com/users/nicokoch/followers", "following_url": "https://api.github.com/users/nicokoch/following{/other_user}", "gists_url": "https://api.github.com/users/nicokoch/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicokoch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicokoch/subscriptions", "organizations_url": "https://api.github.com/users/nicokoch/orgs", "repos_url": "https://api.github.com/users/nicokoch/repos", "events_url": "https://api.github.com/users/nicokoch/events{/privacy}", "received_events_url": "https://api.github.com/users/nicokoch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09d03bc245b27728c9cdd4976114506ae20208a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/09d03bc245b27728c9cdd4976114506ae20208a7", "html_url": "https://github.com/rust-lang/rust/commit/09d03bc245b27728c9cdd4976114506ae20208a7"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "6624c48cbe0d8f840156bc49a0a43cb4d36d3a66", "filename": "src/libstd/sys/unix/fs.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3f392abdfb2ec0f436352d349eedd5f6707bf817/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f392abdfb2ec0f436352d349eedd5f6707bf817/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ffs.rs?ref=3f392abdfb2ec0f436352d349eedd5f6707bf817", "patch": "@@ -818,14 +818,16 @@ pub fn copy(from: &Path, to: &Path) -> io::Result<u64> {\n         (metadata.permissions(), metadata.size())\n     };\n \n+    let has_copy_file_range = HAS_COPY_FILE_RANGE.load(Ordering::Relaxed);\n     let mut written = 0u64;\n     while written < len {\n+        // TODO should ideally use TryFrom\n         let bytes_to_copy = if len - written > usize::max_value() as u64 {\n             usize::max_value()\n         } else {\n             (len - written) as usize\n         };\n-        let copy_result = if HAS_COPY_FILE_RANGE.load(Ordering::Relaxed) {\n+        let copy_result = if has_copy_file_range {\n             let copy_result = unsafe {\n                 // We actually don't have to adjust the offsets,\n                 // because copy_file_range adjusts the file offset automatically"}]}