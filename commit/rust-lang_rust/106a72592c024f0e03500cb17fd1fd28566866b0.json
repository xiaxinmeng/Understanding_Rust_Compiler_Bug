{"sha": "106a72592c024f0e03500cb17fd1fd28566866b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwNmE3MjU5MmMwMjRmMGUwMzUwMGNiMTdmZDFmZDI4NTY2ODY2YjA=", "commit": {"author": {"name": "HMPerson1", "email": "hmperson1@gmail.com", "date": "2019-10-16T21:12:41Z"}, "committer": {"name": "HMPerson1", "email": "hmperson1@gmail.com", "date": "2019-10-16T21:12:41Z"}, "message": "Dogfood for `inefficient_to_string`", "tree": {"sha": "48f5e912fb4ac4977b099755c57afbce5eca472c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48f5e912fb4ac4977b099755c57afbce5eca472c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/106a72592c024f0e03500cb17fd1fd28566866b0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQFIBAABCAAyFiEE30PRORiHa0gkBHJnH7R33dJ4Ic4FAl2nh9UUHGhtcGVyc29u\nMUBnbWFpbC5jb20ACgkQH7R33dJ4Ic4WrggAxwuPGXuQ4TAn3XDg5uP+H1r1ZsEj\n5XbenHOgQOIyPIWX3K/3XRred01/JKdVAwNns9X1qqcnvTMrCHm0erwFCkE1OdyJ\nsTAfwHfcEg3rsQsYTibq3RVPoxMwgX3dEwNBWULP73DbD7QAvmGDcaEVQ75071i0\nw05GFEuNAkI7SyJMzoJhnV5IFdqL28srsPD+B/GARcWiCNF6TjryAJPB4FXMEM3B\nZs3i5Qx/ownbw3E01zmhe6HZLjwokTGiyA9+GCaZqXEHFrhmaOiLa2a9RsnrsIgN\nz/QXVygn6sgjDcFf/MYKnIOrWQsvZclmPGvbSUKR8o361lIivECVVJbTog==\n=43K6\n-----END PGP SIGNATURE-----", "payload": "tree 48f5e912fb4ac4977b099755c57afbce5eca472c\nparent 76b44f34b9ecd531b761b9fb10edc90671734d0e\nauthor HMPerson1 <hmperson1@gmail.com> 1571260361 -0400\ncommitter HMPerson1 <hmperson1@gmail.com> 1571260361 -0400\n\nDogfood for `inefficient_to_string`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/106a72592c024f0e03500cb17fd1fd28566866b0", "html_url": "https://github.com/rust-lang/rust/commit/106a72592c024f0e03500cb17fd1fd28566866b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/106a72592c024f0e03500cb17fd1fd28566866b0/comments", "author": {"login": "HMPerson1", "id": 2219904, "node_id": "MDQ6VXNlcjIyMTk5MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2219904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HMPerson1", "html_url": "https://github.com/HMPerson1", "followers_url": "https://api.github.com/users/HMPerson1/followers", "following_url": "https://api.github.com/users/HMPerson1/following{/other_user}", "gists_url": "https://api.github.com/users/HMPerson1/gists{/gist_id}", "starred_url": "https://api.github.com/users/HMPerson1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HMPerson1/subscriptions", "organizations_url": "https://api.github.com/users/HMPerson1/orgs", "repos_url": "https://api.github.com/users/HMPerson1/repos", "events_url": "https://api.github.com/users/HMPerson1/events{/privacy}", "received_events_url": "https://api.github.com/users/HMPerson1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "HMPerson1", "id": 2219904, "node_id": "MDQ6VXNlcjIyMTk5MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2219904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HMPerson1", "html_url": "https://github.com/HMPerson1", "followers_url": "https://api.github.com/users/HMPerson1/followers", "following_url": "https://api.github.com/users/HMPerson1/following{/other_user}", "gists_url": "https://api.github.com/users/HMPerson1/gists{/gist_id}", "starred_url": "https://api.github.com/users/HMPerson1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HMPerson1/subscriptions", "organizations_url": "https://api.github.com/users/HMPerson1/orgs", "repos_url": "https://api.github.com/users/HMPerson1/repos", "events_url": "https://api.github.com/users/HMPerson1/events{/privacy}", "received_events_url": "https://api.github.com/users/HMPerson1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76b44f34b9ecd531b761b9fb10edc90671734d0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/76b44f34b9ecd531b761b9fb10edc90671734d0e", "html_url": "https://github.com/rust-lang/rust/commit/76b44f34b9ecd531b761b9fb10edc90671734d0e"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "6bbccfa09e8920c0d09bc96406f77c6f02bfdeb2", "filename": "clippy_lints/src/replace_consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/106a72592c024f0e03500cb17fd1fd28566866b0/clippy_lints%2Fsrc%2Freplace_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/106a72592c024f0e03500cb17fd1fd28566866b0/clippy_lints%2Fsrc%2Freplace_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freplace_consts.rs?ref=106a72592c024f0e03500cb17fd1fd28566866b0", "patch": "@@ -39,7 +39,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for ReplaceConsts {\n             if let hir::ExprKind::Path(ref qp) = expr.kind;\n             if let Res::Def(DefKind::Const, def_id) = cx.tables.qpath_res(qp, expr.hir_id);\n             then {\n-                for (const_path, repl_snip) in &REPLACEMENTS {\n+                for &(ref const_path, repl_snip) in &REPLACEMENTS {\n                     if match_def_path(cx, def_id, const_path) {\n                         span_lint_and_sugg(\n                             cx,"}, {"sha": "eaad932cb6727b6e69cbb232ae456667947a5e89", "filename": "clippy_lints/src/utils/attrs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/106a72592c024f0e03500cb17fd1fd28566866b0/clippy_lints%2Fsrc%2Futils%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/106a72592c024f0e03500cb17fd1fd28566866b0/clippy_lints%2Fsrc%2Futils%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fattrs.rs?ref=106a72592c024f0e03500cb17fd1fd28566866b0", "patch": "@@ -71,7 +71,7 @@ pub fn get_attr<'a>(\n                     })\n             {\n                 let mut db = sess.struct_span_err(attr_segments[1].ident.span, \"Usage of deprecated attribute\");\n-                match deprecation_status {\n+                match *deprecation_status {\n                     DeprecationStatus::Deprecated => {\n                         db.emit();\n                         false"}]}