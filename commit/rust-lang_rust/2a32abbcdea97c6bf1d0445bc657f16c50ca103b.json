{"sha": "2a32abbcdea97c6bf1d0445bc657f16c50ca103b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhMzJhYmJjZGVhOTdjNmJmMWQwNDQ1YmM2NTdmMTZjNTBjYTEwM2I=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-31T05:47:22Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-31T05:47:22Z"}, "message": "Auto merge of #83681 - jyn514:blanket-impls-tweaks, r=Aaron1011\n\nrustdoc: Only look at blanket impls in `get_blanket_impls`\n\nThe idea here is that all the work in https://github.com/rust-lang/rust/blob/16156fb2787f745e57504197bd7fe38b69c6cbea/compiler/rustc_middle/src/ty/trait_def.rs#L172-L186 doesn't matter for `get_blanket_impls` - Rustdoc will already pick up on those blocks when it documents the item.", "tree": {"sha": "a0f99946f0ff9e927dcedb078aafd484929aa0ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0f99946f0ff9e927dcedb078aafd484929aa0ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a32abbcdea97c6bf1d0445bc657f16c50ca103b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a32abbcdea97c6bf1d0445bc657f16c50ca103b", "html_url": "https://github.com/rust-lang/rust/commit/2a32abbcdea97c6bf1d0445bc657f16c50ca103b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a32abbcdea97c6bf1d0445bc657f16c50ca103b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ff482bde5d22a3a0171edb3245327f43cf9b593", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ff482bde5d22a3a0171edb3245327f43cf9b593", "html_url": "https://github.com/rust-lang/rust/commit/6ff482bde5d22a3a0171edb3245327f43cf9b593"}, {"sha": "6f06b761b991f5c4b714c6935781114dce44637a", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f06b761b991f5c4b714c6935781114dce44637a", "html_url": "https://github.com/rust-lang/rust/commit/6f06b761b991f5c4b714c6935781114dce44637a"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "33065bc3a7bd3f29f18fc37480fb0cd73c4abe9f", "filename": "compiler/rustc_middle/src/ty/trait_def.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2a32abbcdea97c6bf1d0445bc657f16c50ca103b/compiler%2Frustc_middle%2Fsrc%2Fty%2Ftrait_def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a32abbcdea97c6bf1d0445bc657f16c50ca103b/compiler%2Frustc_middle%2Fsrc%2Fty%2Ftrait_def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Ftrait_def.rs?ref=2a32abbcdea97c6bf1d0445bc657f16c50ca103b", "patch": "@@ -69,6 +69,12 @@ pub struct TraitImpls {\n     non_blanket_impls: FxHashMap<fast_reject::SimplifiedType, Vec<DefId>>,\n }\n \n+impl TraitImpls {\n+    pub fn blanket_impls(&self) -> &[DefId] {\n+        self.blanket_impls.as_slice()\n+    }\n+}\n+\n impl<'tcx> TraitDef {\n     pub fn new(\n         def_id: DefId,"}, {"sha": "f7e08d10401888085b8dea0c14840a5e695d69eb", "filename": "src/librustdoc/clean/blanket_impl.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2a32abbcdea97c6bf1d0445bc657f16c50ca103b/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a32abbcdea97c6bf1d0445bc657f16c50ca103b/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs?ref=2a32abbcdea97c6bf1d0445bc657f16c50ca103b", "patch": "@@ -26,7 +26,9 @@ impl<'a, 'tcx> BlanketImplFinder<'a, 'tcx> {\n             {\n                 continue;\n             }\n-            self.cx.tcx.for_each_relevant_impl(trait_def_id, ty, |impl_def_id| {\n+            // NOTE: doesn't use `for_each_relevant_impl` to avoid looking at anything besides blanket impls\n+            let trait_impls = self.cx.tcx.trait_impls_of(trait_def_id);\n+            for &impl_def_id in trait_impls.blanket_impls() {\n                 debug!(\n                     \"get_blanket_impls: Considering impl for trait '{:?}' {:?}\",\n                     trait_def_id, impl_def_id\n@@ -86,7 +88,7 @@ impl<'a, 'tcx> BlanketImplFinder<'a, 'tcx> {\n                     may_apply, trait_ref, ty\n                 );\n                 if !may_apply {\n-                    return;\n+                    continue;\n                 }\n \n                 self.cx.generated_synthetics.insert((ty, trait_def_id));\n@@ -127,7 +129,7 @@ impl<'a, 'tcx> BlanketImplFinder<'a, 'tcx> {\n                         blanket_impl: Some(trait_ref.self_ty().clean(self.cx)),\n                     }),\n                 });\n-            });\n+            }\n         }\n         impls\n     }"}]}