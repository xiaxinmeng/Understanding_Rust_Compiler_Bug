{"sha": "30ae261c42af221173dcec2b5b926b3273eb90eb", "node_id": "C_kwDOAAsO6NoAKDMwYWUyNjFjNDJhZjIyMTE3M2RjZWMyYjViOTI2YjMyNzNlYjkwZWI", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2022-12-13T23:52:16Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2022-12-15T19:13:44Z"}, "message": "Use `with_forced_trimmed_paths` more", "tree": {"sha": "2dfad0e61c34bd132f601f207ada87ddb665a3e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2dfad0e61c34bd132f601f207ada87ddb665a3e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30ae261c42af221173dcec2b5b926b3273eb90eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30ae261c42af221173dcec2b5b926b3273eb90eb", "html_url": "https://github.com/rust-lang/rust/commit/30ae261c42af221173dcec2b5b926b3273eb90eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30ae261c42af221173dcec2b5b926b3273eb90eb/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "294944dfec2c3eaf8f5e9b76e478c14b7247cda2", "url": "https://api.github.com/repos/rust-lang/rust/commits/294944dfec2c3eaf8f5e9b76e478c14b7247cda2", "html_url": "https://github.com/rust-lang/rust/commit/294944dfec2c3eaf8f5e9b76e478c14b7247cda2"}], "stats": {"total": 63, "additions": 34, "deletions": 29}, "files": [{"sha": "181316427609e58aa9cd6dddc96b1c459453a3b2", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs", "status": "modified", "additions": 21, "deletions": 16, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/30ae261c42af221173dcec2b5b926b3273eb90eb/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30ae261c42af221173dcec2b5b926b3273eb90eb/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=30ae261c42af221173dcec2b5b926b3273eb90eb", "patch": "@@ -35,7 +35,7 @@ use rustc_middle::traits::select::OverflowError;\n use rustc_middle::ty::abstract_const::NotConstEvaluatable;\n use rustc_middle::ty::error::ExpectedFound;\n use rustc_middle::ty::fold::{TypeFolder, TypeSuperFoldable};\n-use rustc_middle::ty::print::{FmtPrinter, Print};\n+use rustc_middle::ty::print::{with_forced_trimmed_paths, FmtPrinter, Print};\n use rustc_middle::ty::{\n     self, SubtypePredicate, ToPolyTraitRef, ToPredicate, TraitRef, Ty, TyCtxt, TypeFoldable,\n     TypeVisitable,\n@@ -1757,21 +1757,26 @@ impl<'tcx> InferCtxtPrivExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n         let trait_def_id = pred.projection_ty.trait_def_id(self.tcx);\n         let self_ty = pred.projection_ty.self_ty();\n \n-        if Some(pred.projection_ty.def_id) == self.tcx.lang_items().fn_once_output() {\n-            Some(format!(\n-                \"expected `{self_ty}` to be a {fn_kind} that returns `{expected_ty}`, but it returns `{normalized_ty}`\",\n-                fn_kind = self_ty.prefix_string(self.tcx)\n-            ))\n-        } else if Some(trait_def_id) == self.tcx.lang_items().future_trait() {\n-            Some(format!(\n-                \"expected `{self_ty}` to be a future that resolves to `{expected_ty}`, but it resolves to `{normalized_ty}`\"\n-            ))\n-        } else if Some(trait_def_id) == self.tcx.get_diagnostic_item(sym::Iterator) {\n-            Some(format!(\n-                \"expected `{self_ty}` to be an iterator that yields `{expected_ty}`, but it yields `{normalized_ty}`\"\n-            ))\n-        } else {\n-            None\n+        with_forced_trimmed_paths! {\n+            if Some(pred.projection_ty.def_id) == self.tcx.lang_items().fn_once_output() {\n+                Some(format!(\n+                    \"expected `{self_ty}` to be a {fn_kind} that returns `{expected_ty}`, but it \\\n+                     returns `{normalized_ty}`\",\n+                    fn_kind = self_ty.prefix_string(self.tcx)\n+                ))\n+            } else if Some(trait_def_id) == self.tcx.lang_items().future_trait() {\n+                Some(format!(\n+                    \"expected `{self_ty}` to be a future that resolves to `{expected_ty}`, but it \\\n+                     resolves to `{normalized_ty}`\"\n+                ))\n+            } else if Some(trait_def_id) == self.tcx.get_diagnostic_item(sym::Iterator) {\n+                Some(format!(\n+                    \"expected `{self_ty}` to be an iterator that yields `{expected_ty}`, but it \\\n+                     yields `{normalized_ty}`\"\n+                ))\n+            } else {\n+                None\n+            }\n         }\n     }\n "}, {"sha": "fed60ccf089d05c85288a7ef3774506f7d2dbd96", "filename": "src/test/ui/associated-types/associated-types-overridden-binding-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/30ae261c42af221173dcec2b5b926b3273eb90eb/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-overridden-binding-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30ae261c42af221173dcec2b5b926b3273eb90eb/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-overridden-binding-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-overridden-binding-2.rs?ref=30ae261c42af221173dcec2b5b926b3273eb90eb", "patch": "@@ -4,5 +4,5 @@ trait I32Iterator = Iterator<Item = i32>;\n \n fn main() {\n     let _: &dyn I32Iterator<Item = u32> = &vec![42].into_iter();\n-    //~^ ERROR expected `std::vec::IntoIter<u32>` to be an iterator that yields `i32`, but it yields `u32`\n+    //~^ ERROR expected `IntoIter<u32>` to be an iterator that yields `i32`, but it yields `u32`\n }"}, {"sha": "a28a0b74e4accd98c47bbf6f001d9562560f4ff8", "filename": "src/test/ui/associated-types/associated-types-overridden-binding-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/30ae261c42af221173dcec2b5b926b3273eb90eb/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-overridden-binding-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/30ae261c42af221173dcec2b5b926b3273eb90eb/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-overridden-binding-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-overridden-binding-2.stderr?ref=30ae261c42af221173dcec2b5b926b3273eb90eb", "patch": "@@ -1,4 +1,4 @@\n-error[E0271]: expected `std::vec::IntoIter<u32>` to be an iterator that yields `i32`, but it yields `u32`\n+error[E0271]: expected `IntoIter<u32>` to be an iterator that yields `i32`, but it yields `u32`\n   --> $DIR/associated-types-overridden-binding-2.rs:6:43\n    |\n LL |     let _: &dyn I32Iterator<Item = u32> = &vec![42].into_iter();"}, {"sha": "73989c5182069b76208e7eedc8ab3362123c7652", "filename": "src/test/ui/issues/issue-31173.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/30ae261c42af221173dcec2b5b926b3273eb90eb/src%2Ftest%2Fui%2Fissues%2Fissue-31173.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/30ae261c42af221173dcec2b5b926b3273eb90eb/src%2Ftest%2Fui%2Fissues%2Fissue-31173.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-31173.stderr?ref=30ae261c42af221173dcec2b5b926b3273eb90eb", "patch": "@@ -1,4 +1,4 @@\n-error[E0271]: expected `TakeWhile<&mut std::vec::IntoIter<u8>, [closure@$DIR/issue-31173.rs:7:21: 7:25]>` to be an iterator that yields `&_`, but it yields `u8`\n+error[E0271]: expected `TakeWhile<&mut IntoIter<u8>, [closure@$DIR/issue-31173.rs:7:21: 7:25]>` to be an iterator that yields `&_`, but it yields `u8`\n   --> $DIR/issue-31173.rs:11:10\n    |\n LL |         .cloned()"}, {"sha": "e3b6dcf55a7448296ea39c39de2c428b40e59ff2", "filename": "src/test/ui/issues/issue-33941.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/30ae261c42af221173dcec2b5b926b3273eb90eb/src%2Ftest%2Fui%2Fissues%2Fissue-33941.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30ae261c42af221173dcec2b5b926b3273eb90eb/src%2Ftest%2Fui%2Fissues%2Fissue-33941.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-33941.rs?ref=30ae261c42af221173dcec2b5b926b3273eb90eb", "patch": "@@ -3,7 +3,7 @@\n use std::collections::HashMap;\n \n fn main() {\n-    for _ in HashMap::new().iter().cloned() {} //~ ERROR expected `std::collections::hash_map::Iter<'_, _, _>` to be an iterator that yields `&_`, but it yields `(&_, &_)`\n-    //~^ ERROR expected `std::collections::hash_map::Iter<'_, _, _>` to be an iterator that yields `&_`, but it yields `(&_, &_)`\n-    //~| ERROR expected `std::collections::hash_map::Iter<'_, _, _>` to be an iterator that yields `&_`, but it yields `(&_, &_)`\n+    for _ in HashMap::new().iter().cloned() {} //~ ERROR expected `Iter<'_, _, _>` to be an iterator that yields `&_`, but it yields `(&_, &_)`\n+    //~^ ERROR expected `Iter<'_, _, _>` to be an iterator that yields `&_`, but it yields `(&_, &_)`\n+    //~| ERROR expected `Iter<'_, _, _>` to be an iterator that yields `&_`, but it yields `(&_, &_)`\n }"}, {"sha": "668eaabca4c463d450fbe59ed71e04280dd0c1e4", "filename": "src/test/ui/issues/issue-33941.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/30ae261c42af221173dcec2b5b926b3273eb90eb/src%2Ftest%2Fui%2Fissues%2Fissue-33941.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/30ae261c42af221173dcec2b5b926b3273eb90eb/src%2Ftest%2Fui%2Fissues%2Fissue-33941.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-33941.stderr?ref=30ae261c42af221173dcec2b5b926b3273eb90eb", "patch": "@@ -1,4 +1,4 @@\n-error[E0271]: expected `std::collections::hash_map::Iter<'_, _, _>` to be an iterator that yields `&_`, but it yields `(&_, &_)`\n+error[E0271]: expected `Iter<'_, _, _>` to be an iterator that yields `&_`, but it yields `(&_, &_)`\n   --> $DIR/issue-33941.rs:6:36\n    |\n LL |     for _ in HashMap::new().iter().cloned() {}\n@@ -16,7 +16,7 @@ LL |     for _ in HashMap::new().iter().cloned() {}\n note: required by a bound in `cloned`\n   --> $SRC_DIR/core/src/iter/traits/iterator.rs:LL:COL\n \n-error[E0271]: expected `std::collections::hash_map::Iter<'_, _, _>` to be an iterator that yields `&_`, but it yields `(&_, &_)`\n+error[E0271]: expected `Iter<'_, _, _>` to be an iterator that yields `&_`, but it yields `(&_, &_)`\n   --> $DIR/issue-33941.rs:6:14\n    |\n LL |     for _ in HashMap::new().iter().cloned() {}\n@@ -27,7 +27,7 @@ LL |     for _ in HashMap::new().iter().cloned() {}\n    = note: required for `Cloned<std::collections::hash_map::Iter<'_, _, _>>` to implement `Iterator`\n    = note: required for `Cloned<std::collections::hash_map::Iter<'_, _, _>>` to implement `IntoIterator`\n \n-error[E0271]: expected `std::collections::hash_map::Iter<'_, _, _>` to be an iterator that yields `&_`, but it yields `(&_, &_)`\n+error[E0271]: expected `Iter<'_, _, _>` to be an iterator that yields `&_`, but it yields `(&_, &_)`\n   --> $DIR/issue-33941.rs:6:14\n    |\n LL |     for _ in HashMap::new().iter().cloned() {}"}, {"sha": "65340b2a2092ff5cdf345a4c08703603d70c0ee1", "filename": "src/test/ui/traits/assoc-type-in-superbad.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/30ae261c42af221173dcec2b5b926b3273eb90eb/src%2Ftest%2Fui%2Ftraits%2Fassoc-type-in-superbad.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30ae261c42af221173dcec2b5b926b3273eb90eb/src%2Ftest%2Fui%2Ftraits%2Fassoc-type-in-superbad.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fassoc-type-in-superbad.rs?ref=30ae261c42af221173dcec2b5b926b3273eb90eb", "patch": "@@ -10,7 +10,7 @@ pub trait Foo: Iterator<Item = <Self as Foo>::Key> {\n \n impl Foo for IntoIter<i32> {\n     type Key = u32;\n-    //~^ ERROR expected `std::vec::IntoIter<i32>` to be an iterator that yields `u32`, but it yields `i32`\n+    //~^ ERROR expected `IntoIter<i32>` to be an iterator that yields `u32`, but it yields `i32`\n }\n \n fn main() {}"}, {"sha": "7fa1d2c2eed67c8fd85f48d77f1aa019a3d36fb7", "filename": "src/test/ui/traits/assoc-type-in-superbad.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/30ae261c42af221173dcec2b5b926b3273eb90eb/src%2Ftest%2Fui%2Ftraits%2Fassoc-type-in-superbad.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/30ae261c42af221173dcec2b5b926b3273eb90eb/src%2Ftest%2Fui%2Ftraits%2Fassoc-type-in-superbad.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fassoc-type-in-superbad.stderr?ref=30ae261c42af221173dcec2b5b926b3273eb90eb", "patch": "@@ -1,4 +1,4 @@\n-error[E0271]: expected `std::vec::IntoIter<i32>` to be an iterator that yields `u32`, but it yields `i32`\n+error[E0271]: expected `IntoIter<i32>` to be an iterator that yields `u32`, but it yields `i32`\n   --> $DIR/assoc-type-in-superbad.rs:12:16\n    |\n LL |     type Key = u32;"}, {"sha": "4aa5966ff25d4cedac7d9db5a84b39087a0ef0f9", "filename": "src/test/ui/type-alias-impl-trait/issue-57961.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/30ae261c42af221173dcec2b5b926b3273eb90eb/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57961.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30ae261c42af221173dcec2b5b926b3273eb90eb/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57961.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57961.rs?ref=30ae261c42af221173dcec2b5b926b3273eb90eb", "patch": "@@ -8,7 +8,7 @@ trait Foo {\n \n impl Foo for () {\n     type Bar = std::vec::IntoIter<u32>;\n-    //~^ ERROR expected `std::vec::IntoIter<u32>` to be an iterator that yields `X`, but it yields `u32`\n+    //~^ ERROR expected `IntoIter<u32>` to be an iterator that yields `X`, but it yields `u32`\n }\n \n fn incoherent() {"}, {"sha": "8d11b48888947d91bce4b7039892a34a8cc72b15", "filename": "src/test/ui/type-alias-impl-trait/issue-57961.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/30ae261c42af221173dcec2b5b926b3273eb90eb/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57961.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/30ae261c42af221173dcec2b5b926b3273eb90eb/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57961.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57961.stderr?ref=30ae261c42af221173dcec2b5b926b3273eb90eb", "patch": "@@ -1,4 +1,4 @@\n-error[E0271]: expected `std::vec::IntoIter<u32>` to be an iterator that yields `X`, but it yields `u32`\n+error[E0271]: expected `IntoIter<u32>` to be an iterator that yields `X`, but it yields `u32`\n   --> $DIR/issue-57961.rs:10:16\n    |\n LL | type X = impl Sized;"}]}