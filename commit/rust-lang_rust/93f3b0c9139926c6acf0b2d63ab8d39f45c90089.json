{"sha": "93f3b0c9139926c6acf0b2d63ab8d39f45c90089", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzZjNiMGM5MTM5OTI2YzZhY2YwYjJkNjNhYjhkMzlmNDVjOTAwODk=", "commit": {"author": {"name": "Marc-Antoine Perennou", "email": "Marc-Antoine@Perennou.com", "date": "2017-04-28T08:58:46Z"}, "committer": {"name": "Marc-Antoine Perennou", "email": "Marc-Antoine@Perennou.com", "date": "2017-05-16T06:21:27Z"}, "message": "rustbuild: pass bindir to install_sh\n\nSigned-off-by: Marc-Antoine Perennou <Marc-Antoine@Perennou.com>", "tree": {"sha": "57e626e4f8470d41575fba103f2124a8b8d31128", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57e626e4f8470d41575fba103f2124a8b8d31128"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/93f3b0c9139926c6acf0b2d63ab8d39f45c90089", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/93f3b0c9139926c6acf0b2d63ab8d39f45c90089", "html_url": "https://github.com/rust-lang/rust/commit/93f3b0c9139926c6acf0b2d63ab8d39f45c90089", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/93f3b0c9139926c6acf0b2d63ab8d39f45c90089/comments", "author": {"login": "Keruspe", "id": 222942, "node_id": "MDQ6VXNlcjIyMjk0Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/222942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Keruspe", "html_url": "https://github.com/Keruspe", "followers_url": "https://api.github.com/users/Keruspe/followers", "following_url": "https://api.github.com/users/Keruspe/following{/other_user}", "gists_url": "https://api.github.com/users/Keruspe/gists{/gist_id}", "starred_url": "https://api.github.com/users/Keruspe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Keruspe/subscriptions", "organizations_url": "https://api.github.com/users/Keruspe/orgs", "repos_url": "https://api.github.com/users/Keruspe/repos", "events_url": "https://api.github.com/users/Keruspe/events{/privacy}", "received_events_url": "https://api.github.com/users/Keruspe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Keruspe", "id": 222942, "node_id": "MDQ6VXNlcjIyMjk0Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/222942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Keruspe", "html_url": "https://github.com/Keruspe", "followers_url": "https://api.github.com/users/Keruspe/followers", "following_url": "https://api.github.com/users/Keruspe/following{/other_user}", "gists_url": "https://api.github.com/users/Keruspe/gists{/gist_id}", "starred_url": "https://api.github.com/users/Keruspe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Keruspe/subscriptions", "organizations_url": "https://api.github.com/users/Keruspe/orgs", "repos_url": "https://api.github.com/users/Keruspe/repos", "events_url": "https://api.github.com/users/Keruspe/events{/privacy}", "received_events_url": "https://api.github.com/users/Keruspe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a8b8febb0b456c4df930ee8086a2e447e27f243", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a8b8febb0b456c4df930ee8086a2e447e27f243", "html_url": "https://github.com/rust-lang/rust/commit/0a8b8febb0b456c4df930ee8086a2e447e27f243"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "c16e6c72819d651c3d8e09e976af56f1f3e04300", "filename": "src/bootstrap/install.rs", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/93f3b0c9139926c6acf0b2d63ab8d39f45c90089/src%2Fbootstrap%2Finstall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93f3b0c9139926c6acf0b2d63ab8d39f45c90089/src%2Fbootstrap%2Finstall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Finstall.rs?ref=93f3b0c9139926c6acf0b2d63ab8d39f45c90089", "patch": "@@ -25,51 +25,55 @@ use dist::{sanitize_sh, tmpdir};\n pub fn install(build: &Build, stage: u32, host: &str) {\n     let prefix_default = PathBuf::from(\"/usr/local\");\n     let docdir_default = PathBuf::from(\"share/doc/rust\");\n-    let mandir_default = PathBuf::from(\"share/man\");\n+    let bindir_default = PathBuf::from(\"bin\");\n     let libdir_default = PathBuf::from(\"lib\");\n+    let mandir_default = PathBuf::from(\"share/man\");\n     let prefix = build.config.prefix.as_ref().unwrap_or(&prefix_default);\n     let docdir = build.config.docdir.as_ref().unwrap_or(&docdir_default);\n+    let bindir = build.config.bindir.as_ref().unwrap_or(&bindir_default);\n     let libdir = build.config.libdir.as_ref().unwrap_or(&libdir_default);\n     let mandir = build.config.mandir.as_ref().unwrap_or(&mandir_default);\n \n     let docdir = prefix.join(docdir);\n+    let bindir = prefix.join(bindir);\n     let libdir = prefix.join(libdir);\n     let mandir = prefix.join(mandir);\n \n     let destdir = env::var_os(\"DESTDIR\").map(PathBuf::from);\n \n     let prefix = add_destdir(&prefix, &destdir);\n     let docdir = add_destdir(&docdir, &destdir);\n+    let bindir = add_destdir(&bindir, &destdir);\n     let libdir = add_destdir(&libdir, &destdir);\n     let mandir = add_destdir(&mandir, &destdir);\n \n     let empty_dir = build.out.join(\"tmp/empty_dir\");\n     t!(fs::create_dir_all(&empty_dir));\n     if build.config.docs {\n         install_sh(&build, \"docs\", \"rust-docs\", &build.rust_package_vers(),\n-                   stage, host, &prefix, &docdir, &libdir, &mandir, &empty_dir);\n+                   stage, host, &prefix, &docdir, &bindir, &libdir, &mandir, &empty_dir);\n     }\n \n     for target in build.config.target.iter() {\n         install_sh(&build, \"std\", \"rust-std\", &build.rust_package_vers(),\n-                   stage, target, &prefix, &docdir, &libdir, &mandir, &empty_dir);\n+                   stage, target, &prefix, &docdir, &bindir, &libdir, &mandir, &empty_dir);\n     }\n \n     if build.config.extended {\n         install_sh(&build, \"cargo\", \"cargo\", &build.cargo_package_vers(),\n-                   stage, host, &prefix, &docdir, &libdir, &mandir, &empty_dir);\n+                   stage, host, &prefix, &docdir, &bindir, &libdir, &mandir, &empty_dir);\n         install_sh(&build, \"rls\", \"rls\", &build.rls_package_vers(),\n-                   stage, host, &prefix, &docdir, &libdir, &mandir, &empty_dir);\n+                   stage, host, &prefix, &docdir, &bindir, &libdir, &mandir, &empty_dir);\n     }\n \n     install_sh(&build, \"rustc\", \"rustc\", &build.rust_package_vers(),\n-               stage, host, &prefix, &docdir, &libdir, &mandir, &empty_dir);\n+               stage, host, &prefix, &docdir, &bindir, &libdir, &mandir, &empty_dir);\n \n     t!(fs::remove_dir_all(&empty_dir));\n }\n \n fn install_sh(build: &Build, package: &str, name: &str, version: &str, stage: u32, host: &str,\n-              prefix: &Path, docdir: &Path, libdir: &Path, mandir: &Path, empty_dir: &Path) {\n+              prefix: &Path, docdir: &Path, bindir: &Path, libdir: &Path, mandir: &Path, empty_dir: &Path) {\n     println!(\"Install {} stage{} ({})\", package, stage, host);\n     let package_name = format!(\"{}-{}-{}\", name, version, host);\n \n@@ -78,6 +82,7 @@ fn install_sh(build: &Build, package: &str, name: &str, version: &str, stage: u3\n        .arg(sanitize_sh(&tmpdir(build).join(&package_name).join(\"install.sh\")))\n        .arg(format!(\"--prefix={}\", sanitize_sh(prefix)))\n        .arg(format!(\"--docdir={}\", sanitize_sh(docdir)))\n+       .arg(format!(\"--bindir={}\", sanitize_sh(bindir)))\n        .arg(format!(\"--libdir={}\", sanitize_sh(libdir)))\n        .arg(format!(\"--mandir={}\", sanitize_sh(mandir)))\n        .arg(\"--disable-ldconfig\");"}]}