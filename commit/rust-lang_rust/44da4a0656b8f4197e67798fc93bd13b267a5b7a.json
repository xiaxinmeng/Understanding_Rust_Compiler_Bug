{"sha": "44da4a0656b8f4197e67798fc93bd13b267a5b7a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0ZGE0YTA2NTZiOGY0MTk3ZTY3Nzk4ZmM5M2JkMTNiMjY3YTViN2E=", "commit": {"author": {"name": "Garrett Berg", "email": "googberg@gmail.com", "date": "2017-11-18T23:10:14Z"}, "committer": {"name": "Garrett Berg", "email": "googberg@gmail.com", "date": "2017-11-18T23:45:04Z"}, "message": "Add doc for `Read`ing from `&str` and some related cleanup", "tree": {"sha": "f3f92916c98acc21d85aa8eb73e04667629dde2f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3f92916c98acc21d85aa8eb73e04667629dde2f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44da4a0656b8f4197e67798fc93bd13b267a5b7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44da4a0656b8f4197e67798fc93bd13b267a5b7a", "html_url": "https://github.com/rust-lang/rust/commit/44da4a0656b8f4197e67798fc93bd13b267a5b7a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44da4a0656b8f4197e67798fc93bd13b267a5b7a/comments", "author": {"login": "vitiral", "id": 5587659, "node_id": "MDQ6VXNlcjU1ODc2NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/5587659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vitiral", "html_url": "https://github.com/vitiral", "followers_url": "https://api.github.com/users/vitiral/followers", "following_url": "https://api.github.com/users/vitiral/following{/other_user}", "gists_url": "https://api.github.com/users/vitiral/gists{/gist_id}", "starred_url": "https://api.github.com/users/vitiral/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vitiral/subscriptions", "organizations_url": "https://api.github.com/users/vitiral/orgs", "repos_url": "https://api.github.com/users/vitiral/repos", "events_url": "https://api.github.com/users/vitiral/events{/privacy}", "received_events_url": "https://api.github.com/users/vitiral/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vitiral", "id": 5587659, "node_id": "MDQ6VXNlcjU1ODc2NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/5587659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vitiral", "html_url": "https://github.com/vitiral", "followers_url": "https://api.github.com/users/vitiral/followers", "following_url": "https://api.github.com/users/vitiral/following{/other_user}", "gists_url": "https://api.github.com/users/vitiral/gists{/gist_id}", "starred_url": "https://api.github.com/users/vitiral/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vitiral/subscriptions", "organizations_url": "https://api.github.com/users/vitiral/orgs", "repos_url": "https://api.github.com/users/vitiral/repos", "events_url": "https://api.github.com/users/vitiral/events{/privacy}", "received_events_url": "https://api.github.com/users/vitiral/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1409af73d133f513980ccbf27c941a28d8d5c50", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1409af73d133f513980ccbf27c941a28d8d5c50", "html_url": "https://github.com/rust-lang/rust/commit/b1409af73d133f513980ccbf27c941a28d8d5c50"}], "stats": {"total": 34, "additions": 27, "deletions": 7}, "files": [{"sha": "62313d7d3a6e8bcec09958cc20bead711189b04e", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 27, "deletions": 7, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/44da4a0656b8f4197e67798fc93bd13b267a5b7a/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44da4a0656b8f4197e67798fc93bd13b267a5b7a/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=44da4a0656b8f4197e67798fc93bd13b267a5b7a", "patch": "@@ -419,14 +419,8 @@ fn read_to_end<R: Read + ?Sized>(r: &mut R, buf: &mut Vec<u8>) -> Result<usize>\n ///\n /// [`File`]s implement `Read`:\n ///\n-/// [`read()`]: trait.Read.html#tymethod.read\n-/// [`std::io`]: ../../std/io/index.html\n-/// [`File`]: ../fs/struct.File.html\n-/// [`BufRead`]: trait.BufRead.html\n-/// [`BufReader`]: struct.BufReader.html\n-///\n /// ```\n-/// use std::io;\n+/// # use std::io;\n /// use std::io::prelude::*;\n /// use std::fs::File;\n ///\n@@ -449,6 +443,32 @@ fn read_to_end<R: Read + ?Sized>(r: &mut R, buf: &mut Vec<u8>) -> Result<usize>\n /// # Ok(())\n /// # }\n /// ```\n+///\n+/// Read from `&str` because [`&[u8]`] implements [`Read`]:\n+///\n+/// ```\n+/// # use std::io;\n+/// use std::io::prelude::*;\n+///\n+/// # fn foo() -> io::Result<()> {\n+/// let mut b = \"This string will be read\".as_bytes();\n+/// let mut buffer = [0; 10];\n+///\n+/// // read up to 10 bytes\n+/// b.read(&mut buffer)?;\n+///\n+/// // etc... it works exactly as a File does!\n+/// # Ok(())\n+/// # }\n+/// ```\n+///\n+/// [`read()`]: trait.Read.html#tymethod.read\n+/// [`std::io`]: ../../std/io/index.html\n+/// [`File`]: ../fs/struct.File.html\n+/// [`BufRead`]: trait.BufRead.html\n+/// [`BufReader`]: struct.BufReader.html\n+/// [`&[u8]`]: primitive.slice.html\n+///\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait Read {\n     /// Pull some bytes from this source into the specified buffer, returning"}]}