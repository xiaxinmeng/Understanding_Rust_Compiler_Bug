{"sha": "cbf69296cb217633e1ca4da4eb65437ae4b23759", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiZjY5Mjk2Y2IyMTc2MzNlMWNhNGRhNGViNjU0MzdhZTRiMjM3NTk=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-10-16T04:53:11Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-10-16T05:27:46Z"}, "message": "Use `DefId` to create globally unique basic block labels", "tree": {"sha": "1a91ab8565248fd5c5bb29d157355700a64d5146", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a91ab8565248fd5c5bb29d157355700a64d5146"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cbf69296cb217633e1ca4da4eb65437ae4b23759", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cbf69296cb217633e1ca4da4eb65437ae4b23759", "html_url": "https://github.com/rust-lang/rust/commit/cbf69296cb217633e1ca4da4eb65437ae4b23759", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cbf69296cb217633e1ca4da4eb65437ae4b23759/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cae898781f1baf34cf59ccce05ed768bc7563f84", "url": "https://api.github.com/repos/rust-lang/rust/commits/cae898781f1baf34cf59ccce05ed768bc7563f84", "html_url": "https://github.com/rust-lang/rust/commit/cae898781f1baf34cf59ccce05ed768bc7563f84"}], "stats": {"total": 28, "additions": 20, "deletions": 8}, "files": [{"sha": "4b7ee7ab753492bb50b768b0c1f88bbcf33a3786", "filename": "src/librustc_mir/util/graphviz.rs", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/cbf69296cb217633e1ca4da4eb65437ae4b23759/src%2Flibrustc_mir%2Futil%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbf69296cb217633e1ca4da4eb65437ae4b23759/src%2Flibrustc_mir%2Futil%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fgraphviz.rs?ref=cbf69296cb217633e1ca4da4eb65437ae4b23759", "patch": "@@ -55,12 +55,12 @@ where\n \n     // Nodes\n     for (block, _) in body.basic_blocks().iter_enumerated() {\n-        write_node(block, body, w)?;\n+        write_node(def_id, block, body, w)?;\n     }\n \n     // Edges\n     for (source, _) in body.basic_blocks().iter_enumerated() {\n-        write_edges(source, body, w)?;\n+        write_edges(def_id, source, body, w)?;\n     }\n     writeln!(w, \"}}\")\n }\n@@ -115,21 +115,33 @@ pub fn write_node_label<W: Write, INIT, FINI>(block: BasicBlock,\n }\n \n /// Write a graphviz DOT node for the given basic block.\n-fn write_node<W: Write>(block: BasicBlock, body: &Body<'_>, w: &mut W) -> io::Result<()> {\n+fn write_node<W: Write>(\n+    def_id: DefId,\n+    block: BasicBlock,\n+    body: &Body<'_>,\n+    w: &mut W,\n+) -> io::Result<()> {\n     // Start a new node with the label to follow, in one of DOT's pseudo-HTML tables.\n-    write!(w, r#\"    {} [shape=\"none\", label=<\"#, node(block))?;\n+    write!(w, r#\"    {} [shape=\"none\", label=<\"#, node(def_id, block))?;\n     write_node_label(block, body, w, 1, |_| Ok(()), |_| Ok(()))?;\n     // Close the node label and the node itself.\n     writeln!(w, \">];\")\n }\n \n /// Write graphviz DOT edges with labels between the given basic block and all of its successors.\n-fn write_edges<W: Write>(source: BasicBlock, body: &Body<'_>, w: &mut W) -> io::Result<()> {\n+fn write_edges<W: Write>(\n+    def_id: DefId,\n+    source: BasicBlock,\n+    body: &Body<'_>,\n+    w: &mut W,\n+) -> io::Result<()> {\n     let terminator = body[source].terminator();\n     let labels = terminator.kind.fmt_successor_labels();\n \n     for (&target, label) in terminator.successors().zip(labels) {\n-        writeln!(w, r#\"    {} -> {} [label=\"{}\"];\"#, node(source), node(target), label)?;\n+        let src = node(def_id, source);\n+        let trg = node(def_id, target);\n+        writeln!(w, r#\"    {} -> {} [label=\"{}\"];\"#, src, trg, label)?;\n     }\n \n     Ok(())\n@@ -181,8 +193,8 @@ fn write_graph_label<'tcx, W: Write>(\n     writeln!(w, \">;\")\n }\n \n-fn node(block: BasicBlock) -> String {\n-    format!(\"bb{}\", block.index())\n+fn node(def_id: DefId, block: BasicBlock) -> String {\n+    format!(\"bb{}__{}\", block.index(), graphviz_safe_def_name(def_id))\n }\n \n fn escape<T: Debug>(t: &T) -> String {"}]}