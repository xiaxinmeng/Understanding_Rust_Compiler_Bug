{"sha": "3158a8d476d6f35664502fa50aae9f3e873a263e", "node_id": "C_kwDOAAsO6NoAKDMxNThhOGQ0NzZkNmYzNTY2NDUwMmZhNTBhYWU5ZjNlODczYTI2M2U", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-11-26T14:58:44Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-11-26T15:14:58Z"}, "message": "support no_std on Windows", "tree": {"sha": "161ec2736722678e62088e7aa0d5f73e65085147", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/161ec2736722678e62088e7aa0d5f73e65085147"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3158a8d476d6f35664502fa50aae9f3e873a263e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3158a8d476d6f35664502fa50aae9f3e873a263e", "html_url": "https://github.com/rust-lang/rust/commit/3158a8d476d6f35664502fa50aae9f3e873a263e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3158a8d476d6f35664502fa50aae9f3e873a263e/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "245857beb76094d07f8447c5072d9da386f42b91", "url": "https://api.github.com/repos/rust-lang/rust/commits/245857beb76094d07f8447c5072d9da386f42b91", "html_url": "https://github.com/rust-lang/rust/commit/245857beb76094d07f8447c5072d9da386f42b91"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "4e976ef248ae7d53106b05bacbdb452e40665286", "filename": "src/tools/miri/ci.sh", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3158a8d476d6f35664502fa50aae9f3e873a263e/src%2Ftools%2Fmiri%2Fci.sh", "raw_url": "https://github.com/rust-lang/rust/raw/3158a8d476d6f35664502fa50aae9f3e873a263e/src%2Ftools%2Fmiri%2Fci.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fci.sh?ref=3158a8d476d6f35664502fa50aae9f3e873a263e", "patch": "@@ -75,7 +75,6 @@ function run_tests_minimal {\n   ./miri test -- \"$@\"\n \n   # Ensure that a small smoke test of cargo-miri works.\n-  # Note: This doesn't work on windows because of TLS.\n   cargo miri run --manifest-path test-cargo-miri/no-std-smoke/Cargo.toml\n }\n "}, {"sha": "5fda8bd7b7de9a2c00a891e012914e9cca914f79", "filename": "src/tools/miri/src/shims/tls.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3158a8d476d6f35664502fa50aae9f3e873a263e/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Ftls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3158a8d476d6f35664502fa50aae9f3e873a263e/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Ftls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Ftls.rs?ref=3158a8d476d6f35664502fa50aae9f3e873a263e", "patch": "@@ -261,6 +261,11 @@ trait EvalContextPrivExt<'mir, 'tcx: 'mir>: crate::MiriInterpCxExt<'mir, 'tcx> {\n         // (that would be basically https://github.com/rust-lang/miri/issues/450),\n         // we specifically look up the static in libstd that we know is placed\n         // in that section.\n+        if !this.have_module(&[\"std\"]) {\n+            // Looks like we are running in a `no_std` crate.\n+            // That also means no TLS dtors callback to call.\n+            return Ok(());\n+        }\n         let thread_callback =\n             this.eval_windows(\"thread_local_key\", \"p_thread_callback\")?.to_pointer(this)?;\n         let thread_callback = this.get_ptr_fn(thread_callback)?.as_instance()?;"}, {"sha": "3bece7783f798db012424aa871760904a71a5546", "filename": "src/tools/miri/tests/pass/no_std.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3158a8d476d6f35664502fa50aae9f3e873a263e/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fno_std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3158a8d476d6f35664502fa50aae9f3e873a263e/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fno_std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fno_std.rs?ref=3158a8d476d6f35664502fa50aae9f3e873a263e", "patch": "@@ -1,9 +1,5 @@\n #![feature(lang_items, start)]\n #![no_std]\n-// windows tls dtors go through libstd right now, thus this test\n-// cannot pass. When windows tls dtors go through the special magic\n-// windows linker section, we can run this test on windows again.\n-//@ignore-target-windows: no-std not supported on Windows\n \n // Plumbing to let us use `writeln!` to host stdout:\n "}]}