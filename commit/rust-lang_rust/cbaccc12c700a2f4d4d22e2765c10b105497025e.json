{"sha": "cbaccc12c700a2f4d4d22e2765c10b105497025e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiYWNjYzEyYzcwMGEyZjRkNGQyMmUyNzY1YzEwYjEwNTQ5NzAyNWU=", "commit": {"author": {"name": "Christiaan Dirkx", "email": "christiaan@dirkx.email", "date": "2021-06-18T14:13:05Z"}, "committer": {"name": "Christiaan Dirkx", "email": "christiaan@dirkx.email", "date": "2021-06-18T14:13:05Z"}, "message": "Add `IpAddr::is_benchmarking`", "tree": {"sha": "1d74fc0c6bf623d9544c20f0dcdb5128e996eccf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d74fc0c6bf623d9544c20f0dcdb5128e996eccf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cbaccc12c700a2f4d4d22e2765c10b105497025e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cbaccc12c700a2f4d4d22e2765c10b105497025e", "html_url": "https://github.com/rust-lang/rust/commit/cbaccc12c700a2f4d4d22e2765c10b105497025e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cbaccc12c700a2f4d4d22e2765c10b105497025e/comments", "author": {"login": "CDirkx", "id": 11176562, "node_id": "MDQ6VXNlcjExMTc2NTYy", "avatar_url": "https://avatars.githubusercontent.com/u/11176562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDirkx", "html_url": "https://github.com/CDirkx", "followers_url": "https://api.github.com/users/CDirkx/followers", "following_url": "https://api.github.com/users/CDirkx/following{/other_user}", "gists_url": "https://api.github.com/users/CDirkx/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDirkx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDirkx/subscriptions", "organizations_url": "https://api.github.com/users/CDirkx/orgs", "repos_url": "https://api.github.com/users/CDirkx/repos", "events_url": "https://api.github.com/users/CDirkx/events{/privacy}", "received_events_url": "https://api.github.com/users/CDirkx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CDirkx", "id": 11176562, "node_id": "MDQ6VXNlcjExMTc2NTYy", "avatar_url": "https://avatars.githubusercontent.com/u/11176562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDirkx", "html_url": "https://github.com/CDirkx", "followers_url": "https://api.github.com/users/CDirkx/followers", "following_url": "https://api.github.com/users/CDirkx/following{/other_user}", "gists_url": "https://api.github.com/users/CDirkx/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDirkx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDirkx/subscriptions", "organizations_url": "https://api.github.com/users/CDirkx/orgs", "repos_url": "https://api.github.com/users/CDirkx/repos", "events_url": "https://api.github.com/users/CDirkx/events{/privacy}", "received_events_url": "https://api.github.com/users/CDirkx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2d6334191917c9c78f27aadb19722511cad3f47", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2d6334191917c9c78f27aadb19722511cad3f47", "html_url": "https://github.com/rust-lang/rust/commit/e2d6334191917c9c78f27aadb19722511cad3f47"}], "stats": {"total": 39, "additions": 36, "deletions": 3}, "files": [{"sha": "c57a50f5edede50e2039c9a3348c514340c591cb", "filename": "library/std/src/net/ip.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/cbaccc12c700a2f4d4d22e2765c10b105497025e/library%2Fstd%2Fsrc%2Fnet%2Fip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbaccc12c700a2f4d4d22e2765c10b105497025e/library%2Fstd%2Fsrc%2Fnet%2Fip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fnet%2Fip.rs?ref=cbaccc12c700a2f4d4d22e2765c10b105497025e", "patch": "@@ -252,6 +252,30 @@ impl IpAddr {\n         }\n     }\n \n+    /// Returns [`true`] if this address is in a range designated for benchmarking.\n+    ///\n+    /// See the documentation for [`Ipv4Addr::is_benchmarking()`] and\n+    /// [`Ipv6Addr::is_benchmarking()`] for more details.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(ip)]\n+    ///\n+    /// use std::net::{IpAddr, Ipv4Addr, Ipv6Addr};\n+    ///\n+    /// assert_eq!(IpAddr::V4(Ipv4Addr::new(198, 19, 255, 255)).is_benchmarking(), true);\n+    /// assert_eq!(IpAddr::V6(Ipv6Addr::new(0x2001, 0x2, 0, 0, 0, 0, 0, 0)).is_benchmarking(), true);\n+    /// ```\n+    #[unstable(feature = \"ip\", issue = \"27709\")]\n+    #[inline]\n+    pub const fn is_benchmarking(&self) -> bool {\n+        match self {\n+            IpAddr::V4(ip) => ip.is_benchmarking(),\n+            IpAddr::V6(ip) => ip.is_benchmarking(),\n+        }\n+    }\n+\n     /// Returns [`true`] if this address is an [`IPv4` address], and [`false`]\n     /// otherwise.\n     ///"}, {"sha": "ba387c3c048ce70d88dfe14bd329d5baa966db36", "filename": "library/std/src/net/ip/tests.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/cbaccc12c700a2f4d4d22e2765c10b105497025e/library%2Fstd%2Fsrc%2Fnet%2Fip%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbaccc12c700a2f4d4d22e2765c10b105497025e/library%2Fstd%2Fsrc%2Fnet%2Fip%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fnet%2Fip%2Ftests.rs?ref=cbaccc12c700a2f4d4d22e2765c10b105497025e", "patch": "@@ -224,6 +224,7 @@ fn ip_properties() {\n             let global: u8 = 1 << 2;\n             let multicast: u8 = 1 << 3;\n             let doc: u8 = 1 << 4;\n+            let benchmarking: u8 = 1 << 5;\n \n             if ($mask & unspec) == unspec {\n                 assert!(ip!($s).is_unspecified());\n@@ -254,6 +255,12 @@ fn ip_properties() {\n             } else {\n                 assert!(!ip!($s).is_documentation());\n             }\n+\n+            if ($mask & benchmarking) == benchmarking {\n+                assert!(ip!($s).is_benchmarking());\n+            } else {\n+                assert!(!ip!($s).is_benchmarking());\n+            }\n         }};\n     }\n \n@@ -262,6 +269,7 @@ fn ip_properties() {\n     let global: u8 = 1 << 2;\n     let multicast: u8 = 1 << 3;\n     let doc: u8 = 1 << 4;\n+    let benchmarking: u8 = 1 << 5;\n \n     check!(\"0.0.0.0\", unspec);\n     check!(\"0.0.0.1\");\n@@ -280,9 +288,9 @@ fn ip_properties() {\n     check!(\"239.255.255.255\", global | multicast);\n     check!(\"255.255.255.255\");\n     // make sure benchmarking addresses are not global\n-    check!(\"198.18.0.0\");\n-    check!(\"198.18.54.2\");\n-    check!(\"198.19.255.255\");\n+    check!(\"198.18.0.0\", benchmarking);\n+    check!(\"198.18.54.2\", benchmarking);\n+    check!(\"198.19.255.255\", benchmarking);\n     // make sure addresses reserved for protocol assignment are not global\n     check!(\"192.0.0.0\");\n     check!(\"192.0.0.255\");\n@@ -313,6 +321,7 @@ fn ip_properties() {\n     check!(\"ff08::\", multicast);\n     check!(\"ff0e::\", global | multicast);\n     check!(\"2001:db8:85a3::8a2e:370:7334\", doc);\n+    check!(\"2001:2::ac32:23ff:21\", global | benchmarking);\n     check!(\"102:304:506:708:90a:b0c:d0e:f10\", global);\n }\n "}]}