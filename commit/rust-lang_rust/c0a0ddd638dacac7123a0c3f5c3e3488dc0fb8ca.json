{"sha": "c0a0ddd638dacac7123a0c3f5c3e3488dc0fb8ca", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwYTBkZGQ2MzhkYWNhYzcxMjNhMGMzZjVjM2UzNDg4ZGMwZmI4Y2E=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-05-07T19:01:23Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-05-07T20:11:26Z"}, "message": "Add rustc version check to build script", "tree": {"sha": "b4d3aa8417d547d38f23e936de434ac6b257235c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4d3aa8417d547d38f23e936de434ac6b257235c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0a0ddd638dacac7123a0c3f5c3e3488dc0fb8ca", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCAAGBQJa8LLwAAoJELb6Bqbg4mZbHrwP/2rWNhUYbmZmj11rD8Rkb+GG\nv+jZuVQJZEPqvSYrmqlrW8uCoNptkdBBu4OK+LIdM9vdjcDjw5iRCKesjUqSIdEj\nx0H32FuA2wKXeCZnwSaFOylWagUBDKwCm25UJF02f9PyLXHewOT9WTruxKiM7j2P\n7KUEV3wBN2ew6PC1zImvtrD30/MC7g9gIWR36/7Zy6W7pBRmCWaZn73H59Wk/Clk\ng4PsB3Xs7Hbg89B3+NpqBNy8Rc5okb0IXfz08oEWiXAh7y97OWJHUsyoUchIxLnO\neJZ0ex3vpAkFVHOcftIQEpMzLZOr91TrT7rcq9COd/jMujd0xJ+ChmzLlBLx6w6R\nHxTGE1dUM6Z1PDS81CMqjSVAv7vpR1gNfbhJaBfAlq2/6fVSj4WshkP7026Ib21S\nJ3HNv24msIC0wWIyNnkJHapNYjdgj7uJJSpdW9g5fDCmkPqljHkeMbwjXky0GXDt\ng49qBeT4+wErQGVpl0+GrzHBDGQzrD2ULbATg9JTY6T2YsC0pMtFO3vKKbyS2qMA\nDACR22h20RSnQr0v4KKlDnq5EQGbz3pCfefEO78hj+Np22S27GIaK5UfxigglYpy\nscGCLs/gnOqX3z51k4NiGW09nPQnS/wBfriVlfRTnz5rBRFBUC+MzghgAtdrq003\nWcMD/73DbD6Qqpqc8G24\n=BG8G\n-----END PGP SIGNATURE-----", "payload": "tree b4d3aa8417d547d38f23e936de434ac6b257235c\nparent 92a6f623087a2104279bf5493931c48e4402fe08\nauthor Philipp Hansch <dev@phansch.net> 1525719683 +0200\ncommitter Philipp Hansch <dev@phansch.net> 1525723886 +0200\n\nAdd rustc version check to build script\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0a0ddd638dacac7123a0c3f5c3e3488dc0fb8ca", "html_url": "https://github.com/rust-lang/rust/commit/c0a0ddd638dacac7123a0c3f5c3e3488dc0fb8ca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0a0ddd638dacac7123a0c3f5c3e3488dc0fb8ca/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92a6f623087a2104279bf5493931c48e4402fe08", "url": "https://api.github.com/repos/rust-lang/rust/commits/92a6f623087a2104279bf5493931c48e4402fe08", "html_url": "https://github.com/rust-lang/rust/commit/92a6f623087a2104279bf5493931c48e4402fe08"}], "stats": {"total": 105, "additions": 105, "deletions": 0}, "files": [{"sha": "5c665bebd04cbd2a3fe80de4a65ac6fd3a7001b5", "filename": ".gitignore", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c0a0ddd638dacac7123a0c3f5c3e3488dc0fb8ca/.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/c0a0ddd638dacac7123a0c3f5c3e3488dc0fb8ca/.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitignore?ref=c0a0ddd638dacac7123a0c3f5c3e3488dc0fb8ca", "patch": "@@ -31,3 +31,6 @@ helper.txt\n *.iml\n .vscode\n .idea\n+\n+# Used by the Clippy build script\n+min_version.txt"}, {"sha": "1a924bc7cf107f551c502d8f52cd66f6f62fb430", "filename": "Cargo.toml", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c0a0ddd638dacac7123a0c3f5c3e3488dc0fb8ca/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/c0a0ddd638dacac7123a0c3f5c3e3488dc0fb8ca/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=c0a0ddd638dacac7123a0c3f5c3e3488dc0fb8ca", "patch": "@@ -51,5 +51,9 @@ clippy-mini-macro-test = { version = \"0.2\", path = \"mini-macro\" }\n serde = \"1.0\"\n derive-new = \"0.5\"\n \n+[build-dependencies]\n+rustc_version = \"0.2.2\"\n+ansi_term = \"0.11\"\n+\n [features]\n debugging = []"}, {"sha": "c13eed1f58559176cda4b0e095239873749c289d", "filename": "build.rs", "status": "modified", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/rust-lang/rust/blob/c0a0ddd638dacac7123a0c3f5c3e3488dc0fb8ca/build.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0a0ddd638dacac7123a0c3f5c3e3488dc0fb8ca/build.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build.rs?ref=c0a0ddd638dacac7123a0c3f5c3e3488dc0fb8ca", "patch": "@@ -1,8 +1,99 @@\n+//! This build script ensures that clippy is not compiled with an\n+//! incompatible version of rust. It will panic with a descriptive\n+//! error message instead.\n+//!\n+//! We specifially want to ensure that clippy is only built with a\n+//! rustc version that is newer or equal to the one specified in the\n+//! `min_version.txt` file.\n+//!\n+//! `min_version.txt` is in the repo but also in the `.gitignore` to\n+//! make sure that it is not updated manually by accident. Only CI\n+//! should update that file.\n+//!\n+//! This build script was originally taken from the Rocket web framework:\n+//! https://github.com/SergioBenitez/Rocket\n+\n+extern crate rustc_version;\n+extern crate ansi_term;\n+\n use std::env;\n+use rustc_version::{version_meta, version_meta_for, Channel, Version, VersionMeta};\n+use ansi_term::Colour::Red;\n \n fn main() {\n+    let string = include_str!(\"min_version.txt\");\n+    let min_version_meta = version_meta_for(string)\n+        .expect(\"Could not parse version string in min_version.txt\");\n+    let current_version_meta = version_meta()\n+        .expect(\"Could not retrieve current rustc version information from ENV\");\n+\n+    let min_version = min_version_meta.clone().semver;\n+    let min_date_str = min_version_meta.clone().commit_date\n+        .expect(\"min_version.txt does not contain a rustc commit date\");\n+\n+    let current_version = current_version_meta.clone().semver;\n+    let current_date_str = current_version_meta.clone().commit_date\n+        .expect(\"current rustc version information does not contain a rustc commit date\");\n+\n+    let print_version_err = |version: &Version, date: &str| {\n+        eprintln!(\"> {} {}. {} {}.\\n\",\n+                  \"Installed rustc version is:\",\n+                  format!(\"{} ({})\", version, date),\n+                  \"Minimum required rustc version:\",\n+                  format!(\"{} ({})\", min_version, min_date_str));\n+    };\n+\n+    if !correct_channel(&current_version_meta) {\n+        eprintln!(\"\\n{} {}\",\n+                  Red.bold().paint(\"error:\"),\n+                  \"clippy requires a nightly version of Rust.\");\n+        print_version_err(&current_version, &*current_date_str);\n+        eprintln!(\"{}{}{}\",\n+                  \"See the README (\",\n+                  \"https://github.com/rust-lang-nursery/rust-clippy#usage\",\n+                  \") for more information.\");\n+        panic!(\"Aborting compilation due to incompatible compiler.\")\n+    }\n+\n+    let current_date = str_to_ymd(&current_date_str).unwrap();\n+    let min_date = str_to_ymd(&min_date_str).unwrap();\n+\n+    if current_date < min_date {\n+        eprintln!(\"\\n{} {}\",\n+                  Red.bold().paint(\"error:\"),\n+                  \"clippy does not support this version of rustc nightly.\");\n+        eprintln!(\"> {}{}{}\",\n+                  \"Use `\",\n+                  \"rustup update\",\n+                  \"` or your preferred method to update Rust.\");\n+        print_version_err(&current_version, &*current_date_str);\n+        panic!(\"Aborting compilation due to incompatible compiler.\")\n+    }\n+\n     // Forward the profile to the main compilation\n     println!(\"cargo:rustc-env=PROFILE={}\", env::var(\"PROFILE\").unwrap());\n     // Don't rebuild even if nothing changed\n     println!(\"cargo:rerun-if-changed=build.rs\");\n }\n+\n+fn correct_channel(version_meta: &VersionMeta) -> bool {\n+    match version_meta.channel {\n+        Channel::Stable | Channel::Beta => {\n+            false\n+        },\n+        Channel::Nightly | Channel::Dev => {\n+            true\n+        }\n+    }\n+}\n+\n+/// Convert a string of %Y-%m-%d to a single u32 maintaining ordering.\n+fn str_to_ymd(ymd: &str) -> Option<u32> {\n+    let ymd: Vec<u32> = ymd.split(\"-\").filter_map(|s| s.parse::<u32>().ok()).collect();\n+    if ymd.len() != 3 {\n+        return None\n+    }\n+\n+    let (y, m, d) = (ymd[0], ymd[1], ymd[2]);\n+    Some((y << 9) | (m << 5) | d)\n+}"}, {"sha": "b901c8ec520eb65e6dacd727b4a9a06f0c9ec990", "filename": "min_version.txt", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c0a0ddd638dacac7123a0c3f5c3e3488dc0fb8ca/min_version.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c0a0ddd638dacac7123a0c3f5c3e3488dc0fb8ca/min_version.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/min_version.txt?ref=c0a0ddd638dacac7123a0c3f5c3e3488dc0fb8ca", "patch": "@@ -0,0 +1,7 @@\n+rustc 1.27.0-nightly (e82261dfb 2018-05-03)\n+binary: rustc\n+commit-hash: e82261dfbb5feaa2d28d2b138f4aabb2aa52c94b\n+commit-date: 2018-05-03\n+host: x86_64-unknown-linux-gnu\n+release: 1.27.0-nightly\n+LLVM version: 6.0"}]}