{"sha": "e32328bdc5a749d4b7d35297c85337522a07bddf", "node_id": "C_kwDOAAsO6NoAKGUzMjMyOGJkYzVhNzQ5ZDRiN2QzNTI5N2M4NTMzNzUyMmEwN2JkZGY", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-10-07T14:24:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-07T14:24:53Z"}, "message": "Rollup merge of #89596 - GuillaumeGomez:implicit-doc-cfg, r=jyn514\n\nMake cfg imply doc(cfg)\n\nThis is a reopening of #79341, rebased and modified a bit (we made a lot of refactoring in rustdoc's types so they needed to be reflected in this PR as well):\n\n * `hidden_cfg` is now in the `Cache` instead of `DocContext` because `cfg` information isn't stored anymore on `clean::Attributes` type but instead computed on-demand, so we need this information in later parts of rustdoc.\n * I removed the `bool_to_options` feature (which makes the code a bit simpler to read for `SingleExt` trait implementation.\n * I updated the version for the feature.\n\nThere is only one thing I couldn't figure out: [this comment](https://github.com/rust-lang/rust/pull/79341#discussion_r561855624)\n\n> I think I'll likely scrap the whole `SingleExt` extension trait as the diagnostics for 0 and >1 items should be different.\n\nHow/why should they differ?\n\nEDIT: this part has been solved, the current code was fine, just needed a little simplification.\n\ncc `@Nemo157`\nr? `@jyn514`\n\nOriginal PR description:\n\nThis is only active when the `doc_cfg` feature is active.\n\nThe implicit cfg can be overridden via `#[doc(cfg(...))]`, so e.g. to hide a `#[cfg]` you can use something like:\n\n```rust\n#[cfg(unix)]\n#[doc(cfg(all()))]\npub struct Unix;\n```\n\nBy adding `#![doc(cfg_hide(foobar))]` to the crate attributes the cfg `#[cfg(foobar)]` (and _only_ that _exact_ cfg) will not be implicitly treated as a `doc(cfg)` to render a message in the documentation.", "tree": {"sha": "2df540b61011010c62665cb486e085b4e468bd59", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2df540b61011010c62665cb486e085b4e468bd59"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e32328bdc5a749d4b7d35297c85337522a07bddf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhXwM1CRBK7hj4Ov3rIwAA/JMIALBYPxvIWBFBT5t0PMPHJtb0\nqm+GXUp/VBO2Ef4JuCM09bxlaTOO57/lBJqH6FOtq/dQfraL4Egk5g4asnC2Msla\n56prZknyAUtqIpD8ZcHjm2adgwe6tH0nduUmbVkfMj6DMT7bUaq5WET/FVU4LwYq\nE5d1e9Ht4vQWMhA508RYcRQ6kaokCWJU7bN9mCAojJXM7+lQ+Nq98wFznYXYz0El\nAAUqo8LOTVrKll2Cubs/110mXFlHPuqRyeDe/+UkByxSHBcV/EWlSypG/j/44O6M\nTXDHjsYJD2bu/pt+ImY3qqS98apDB6SZd1n1XFUi+eH0O0k80p/vUFyGli5hMLs=\n=by9X\n-----END PGP SIGNATURE-----\n", "payload": "tree 2df540b61011010c62665cb486e085b4e468bd59\nparent de0b4f9444f870bf500f4b5f5ceae0acedf85e4a\nparent 09c76884bc6ba1957dc6d71d79b797de2cc40b2d\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1633616693 +0200\ncommitter GitHub <noreply@github.com> 1633616693 +0200\n\nRollup merge of #89596 - GuillaumeGomez:implicit-doc-cfg, r=jyn514\n\nMake cfg imply doc(cfg)\n\nThis is a reopening of #79341, rebased and modified a bit (we made a lot of refactoring in rustdoc's types so they needed to be reflected in this PR as well):\n\n * `hidden_cfg` is now in the `Cache` instead of `DocContext` because `cfg` information isn't stored anymore on `clean::Attributes` type but instead computed on-demand, so we need this information in later parts of rustdoc.\n * I removed the `bool_to_options` feature (which makes the code a bit simpler to read for `SingleExt` trait implementation.\n * I updated the version for the feature.\n\nThere is only one thing I couldn't figure out: [this comment](https://github.com/rust-lang/rust/pull/79341#discussion_r561855624)\n\n> I think I'll likely scrap the whole `SingleExt` extension trait as the diagnostics for 0 and >1 items should be different.\n\nHow/why should they differ?\n\nEDIT: this part has been solved, the current code was fine, just needed a little simplification.\n\ncc `@Nemo157`\nr? `@jyn514`\n\nOriginal PR description:\n\nThis is only active when the `doc_cfg` feature is active.\n\nThe implicit cfg can be overridden via `#[doc(cfg(...))]`, so e.g. to hide a `#[cfg]` you can use something like:\n\n```rust\n#[cfg(unix)]\n#[doc(cfg(all()))]\npub struct Unix;\n```\n\nBy adding `#![doc(cfg_hide(foobar))]` to the crate attributes the cfg `#[cfg(foobar)]` (and _only_ that _exact_ cfg) will not be implicitly treated as a `doc(cfg)` to render a message in the documentation.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e32328bdc5a749d4b7d35297c85337522a07bddf", "html_url": "https://github.com/rust-lang/rust/commit/e32328bdc5a749d4b7d35297c85337522a07bddf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e32328bdc5a749d4b7d35297c85337522a07bddf/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de0b4f9444f870bf500f4b5f5ceae0acedf85e4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/de0b4f9444f870bf500f4b5f5ceae0acedf85e4a", "html_url": "https://github.com/rust-lang/rust/commit/de0b4f9444f870bf500f4b5f5ceae0acedf85e4a"}, {"sha": "09c76884bc6ba1957dc6d71d79b797de2cc40b2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/09c76884bc6ba1957dc6d71d79b797de2cc40b2d", "html_url": "https://github.com/rust-lang/rust/commit/09c76884bc6ba1957dc6d71d79b797de2cc40b2d"}], "stats": {"total": 257, "additions": 247, "deletions": 10}, "files": [{"sha": "bce5cd8174d086458980d1d65244b9369896b0c4", "filename": "compiler/rustc_ast_passes/src/feature_gate.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e32328bdc5a749d4b7d35297c85337522a07bddf/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e32328bdc5a749d4b7d35297c85337522a07bddf/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs?ref=e32328bdc5a749d4b7d35297c85337522a07bddf", "patch": "@@ -279,6 +279,7 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n \n                 gate_doc!(\n                     cfg => doc_cfg\n+                    cfg_hide => doc_cfg_hide\n                     masked => doc_masked\n                     notable_trait => doc_notable_trait\n                     keyword => doc_keyword"}, {"sha": "ec2c703ad495d28e6e9c5bccfaa8bb399ae8e94c", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e32328bdc5a749d4b7d35297c85337522a07bddf/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e32328bdc5a749d4b7d35297c85337522a07bddf/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=e32328bdc5a749d4b7d35297c85337522a07bddf", "patch": "@@ -675,6 +675,9 @@ declare_features! (\n     /// Allows `#[track_caller]` on closures and generators.\n     (active, closure_track_caller, \"1.57.0\", Some(87417), None),\n \n+    /// Allows `#[doc(cfg_hide(...))]`.\n+    (active, doc_cfg_hide, \"1.57.0\", Some(43781), None),\n+\n     // -------------------------------------------------------------------------\n     // feature-group-end: actual feature gates\n     // -------------------------------------------------------------------------"}, {"sha": "1815302101f0e0c68af2f5657d76ffbdf8809f10", "filename": "compiler/rustc_passes/src/check_attr.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e32328bdc5a749d4b7d35297c85337522a07bddf/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e32328bdc5a749d4b7d35297c85337522a07bddf/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs?ref=e32328bdc5a749d4b7d35297c85337522a07bddf", "patch": "@@ -938,6 +938,7 @@ impl CheckAttrVisitor<'tcx> {\n                         // plugins: removed, but rustdoc warns about it itself\n                         sym::alias\n                         | sym::cfg\n+                        | sym::cfg_hide\n                         | sym::hidden\n                         | sym::html_favicon_url\n                         | sym::html_logo_url"}, {"sha": "382dbc377d63e8a313514ffc145b2f697fb79a60", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e32328bdc5a749d4b7d35297c85337522a07bddf/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e32328bdc5a749d4b7d35297c85337522a07bddf/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=e32328bdc5a749d4b7d35297c85337522a07bddf", "patch": "@@ -399,6 +399,7 @@ symbols! {\n         cfg_attr_multi,\n         cfg_doctest,\n         cfg_eval,\n+        cfg_hide,\n         cfg_panic,\n         cfg_sanitize,\n         cfg_target_abi,\n@@ -547,6 +548,7 @@ symbols! {\n         doc,\n         doc_alias,\n         doc_cfg,\n+        doc_cfg_hide,\n         doc_keyword,\n         doc_masked,\n         doc_notable_trait,"}, {"sha": "72fe84222deaca860e457eb8e56990397a96dcac", "filename": "library/alloc/src/lib.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e32328bdc5a749d4b7d35297c85337522a07bddf/library%2Falloc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e32328bdc5a749d4b7d35297c85337522a07bddf/library%2Falloc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Flib.rs?ref=e32328bdc5a749d4b7d35297c85337522a07bddf", "patch": "@@ -67,6 +67,10 @@\n     issue_tracker_base_url = \"https://github.com/rust-lang/rust/issues/\",\n     test(no_crate_inject, attr(allow(unused_variables), deny(warnings)))\n )]\n+#![cfg_attr(\n+    not(bootstrap),\n+    doc(cfg_hide(not(test), not(any(test, bootstrap)), target_has_atomic = \"ptr\"))\n+)]\n #![no_std]\n #![needs_allocator]\n #![warn(deprecated_in_future)]\n@@ -146,6 +150,8 @@\n #![feature(associated_type_bounds)]\n #![feature(slice_group_by)]\n #![feature(decl_macro)]\n+#![feature(doc_cfg)]\n+#![cfg_attr(not(bootstrap), feature(doc_cfg_hide))]\n // Allow testing this library\n \n #[cfg(test)]"}, {"sha": "630876445ba825aea359a94b3f06a056e4a2f902", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/e32328bdc5a749d4b7d35297c85337522a07bddf/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e32328bdc5a749d4b7d35297c85337522a07bddf/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=e32328bdc5a749d4b7d35297c85337522a07bddf", "patch": "@@ -60,6 +60,30 @@\n     test(no_crate_inject, attr(deny(warnings))),\n     test(attr(allow(dead_code, deprecated, unused_variables, unused_mut)))\n )]\n+#![cfg_attr(\n+    not(bootstrap),\n+    doc(cfg_hide(\n+        not(test),\n+        target_pointer_width = \"16\",\n+        target_pointer_width = \"32\",\n+        target_pointer_width = \"64\",\n+        target_has_atomic = \"8\",\n+        target_has_atomic = \"16\",\n+        target_has_atomic = \"32\",\n+        target_has_atomic = \"64\",\n+        target_has_atomic = \"ptr\",\n+        target_has_atomic_equal_alignment = \"8\",\n+        target_has_atomic_equal_alignment = \"16\",\n+        target_has_atomic_equal_alignment = \"32\",\n+        target_has_atomic_equal_alignment = \"64\",\n+        target_has_atomic_equal_alignment = \"ptr\",\n+        target_has_atomic_load_store = \"8\",\n+        target_has_atomic_load_store = \"16\",\n+        target_has_atomic_load_store = \"32\",\n+        target_has_atomic_load_store = \"64\",\n+        target_has_atomic_load_store = \"ptr\",\n+    ))\n+)]\n #![no_core]\n //\n // Lints:\n@@ -133,6 +157,7 @@\n #![feature(doc_notable_trait)]\n #![feature(doc_primitive)]\n #![feature(exhaustive_patterns)]\n+#![cfg_attr(not(bootstrap), feature(doc_cfg_hide))]\n #![feature(extern_types)]\n #![feature(fundamental)]\n #![feature(if_let_guard)]"}, {"sha": "b16436a18f0af2ad8f60524a8e125e8033f962a1", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e32328bdc5a749d4b7d35297c85337522a07bddf/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e32328bdc5a749d4b7d35297c85337522a07bddf/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=e32328bdc5a749d4b7d35297c85337522a07bddf", "patch": "@@ -195,6 +195,7 @@\n     test(no_crate_inject, attr(deny(warnings))),\n     test(attr(allow(dead_code, deprecated, unused_variables, unused_mut)))\n )]\n+#![cfg_attr(not(bootstrap), doc(cfg_hide(not(test), not(any(test, bootstrap)))))]\n // Don't link to std. We are std.\n #![no_std]\n #![warn(deprecated_in_future)]\n@@ -263,6 +264,7 @@\n #![feature(custom_test_frameworks)]\n #![feature(decl_macro)]\n #![feature(doc_cfg)]\n+#![cfg_attr(not(bootstrap), feature(doc_cfg_hide))]\n #![feature(doc_keyword)]\n #![feature(doc_masked)]\n #![feature(doc_notable_trait)]"}, {"sha": "30eeac14b43f5dde525fa633c2a4db89023dcf79", "filename": "library/std/src/os/raw/mod.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e32328bdc5a749d4b7d35297c85337522a07bddf/library%2Fstd%2Fsrc%2Fos%2Fraw%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e32328bdc5a749d4b7d35297c85337522a07bddf/library%2Fstd%2Fsrc%2Fos%2Fraw%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fraw%2Fmod.rs?ref=e32328bdc5a749d4b7d35297c85337522a07bddf", "patch": "@@ -46,6 +46,7 @@ macro_rules! type_alias {\n }\n \n type_alias! { \"char.md\", c_char = u8, NonZero_c_char = NonZeroU8;\n+#[doc(cfg(all()))]\n #[cfg(any(\n     all(\n         target_os = \"linux\",\n@@ -88,6 +89,7 @@ type_alias! { \"char.md\", c_char = u8, NonZero_c_char = NonZeroU8;\n     all(target_os = \"fuchsia\", target_arch = \"aarch64\")\n ))]}\n type_alias! { \"char.md\", c_char = i8, NonZero_c_char = NonZeroI8;\n+#[doc(cfg(all()))]\n #[cfg(not(any(\n     all(\n         target_os = \"linux\",\n@@ -136,12 +138,16 @@ type_alias! { \"ushort.md\", c_ushort = u16, NonZero_c_ushort = NonZeroU16; }\n type_alias! { \"int.md\", c_int = i32, NonZero_c_int = NonZeroI32; }\n type_alias! { \"uint.md\", c_uint = u32, NonZero_c_uint = NonZeroU32; }\n type_alias! { \"long.md\", c_long = i32, NonZero_c_long = NonZeroI32;\n+#[doc(cfg(all()))]\n #[cfg(any(target_pointer_width = \"32\", windows))] }\n type_alias! { \"ulong.md\", c_ulong = u32, NonZero_c_ulong = NonZeroU32;\n+#[doc(cfg(all()))]\n #[cfg(any(target_pointer_width = \"32\", windows))] }\n type_alias! { \"long.md\", c_long = i64, NonZero_c_long = NonZeroI64;\n+#[doc(cfg(all()))]\n #[cfg(all(target_pointer_width = \"64\", not(windows)))] }\n type_alias! { \"ulong.md\", c_ulong = u64, NonZero_c_ulong = NonZeroU64;\n+#[doc(cfg(all()))]\n #[cfg(all(target_pointer_width = \"64\", not(windows)))] }\n type_alias! { \"longlong.md\", c_longlong = i64, NonZero_c_longlong = NonZeroI64; }\n type_alias! { \"ulonglong.md\", c_ulonglong = u64, NonZero_c_ulonglong = NonZeroU64; }"}, {"sha": "0ef3adade5c8387a3ac0cebb4fe421ab64efa643", "filename": "library/std/src/os/windows/raw.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e32328bdc5a749d4b7d35297c85337522a07bddf/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e32328bdc5a749d4b7d35297c85337522a07bddf/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fraw.rs?ref=e32328bdc5a749d4b7d35297c85337522a07bddf", "patch": "@@ -7,8 +7,10 @@ use crate::os::raw::c_void;\n #[stable(feature = \"raw_ext\", since = \"1.1.0\")]\n pub type HANDLE = *mut c_void;\n #[cfg(target_pointer_width = \"32\")]\n+#[doc(cfg(all()))]\n #[stable(feature = \"raw_ext\", since = \"1.1.0\")]\n pub type SOCKET = u32;\n #[cfg(target_pointer_width = \"64\")]\n+#[doc(cfg(all()))]\n #[stable(feature = \"raw_ext\", since = \"1.1.0\")]\n pub type SOCKET = u64;"}, {"sha": "b463c1dc7146b6d5f9b6f98f915b6bc0a7d229cb", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e32328bdc5a749d4b7d35297c85337522a07bddf/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e32328bdc5a749d4b7d35297c85337522a07bddf/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=e32328bdc5a749d4b7d35297c85337522a07bddf", "patch": "@@ -318,10 +318,10 @@ fn merge_attrs(\n             } else {\n                 Attributes::from_ast(&both, None)\n             },\n-            both.cfg(cx.sess()),\n+            both.cfg(cx.tcx, &cx.cache.hidden_cfg),\n         )\n     } else {\n-        (old_attrs.clean(cx), old_attrs.cfg(cx.sess()))\n+        (old_attrs.clean(cx), old_attrs.cfg(cx.tcx, &cx.cache.hidden_cfg))\n     }\n }\n "}, {"sha": "969d15dd6a160e10a7a1b521a85eefffc4f37728", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e32328bdc5a749d4b7d35297c85337522a07bddf/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e32328bdc5a749d4b7d35297c85337522a07bddf/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=e32328bdc5a749d4b7d35297c85337522a07bddf", "patch": "@@ -1973,7 +1973,7 @@ fn clean_extern_crate(\n         def_id: crate_def_id.into(),\n         visibility: krate.vis.clean(cx),\n         kind: box ExternCrateItem { src: orig_name },\n-        cfg: attrs.cfg(cx.sess()),\n+        cfg: attrs.cfg(cx.tcx, &cx.cache.hidden_cfg),\n     }]\n }\n "}, {"sha": "5b722175f988cd9928c051c43878d9d176a116ad", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 39, "deletions": 4, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/e32328bdc5a749d4b7d35297c85337522a07bddf/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e32328bdc5a749d4b7d35297c85337522a07bddf/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=e32328bdc5a749d4b7d35297c85337522a07bddf", "patch": "@@ -421,7 +421,7 @@ impl Item {\n             kind,\n             box ast_attrs.clean(cx),\n             cx,\n-            ast_attrs.cfg(cx.sess()),\n+            ast_attrs.cfg(cx.tcx, &cx.cache.hidden_cfg),\n         )\n     }\n \n@@ -747,7 +747,7 @@ crate trait AttributesExt {\n \n     fn other_attrs(&self) -> Vec<ast::Attribute>;\n \n-    fn cfg(&self, sess: &Session) -> Option<Arc<Cfg>>;\n+    fn cfg(&self, tcx: TyCtxt<'_>, hidden_cfg: &FxHashSet<Cfg>) -> Option<Arc<Cfg>>;\n }\n \n impl AttributesExt for [ast::Attribute] {\n@@ -772,8 +772,41 @@ impl AttributesExt for [ast::Attribute] {\n         self.iter().filter(|attr| attr.doc_str().is_none()).cloned().collect()\n     }\n \n-    fn cfg(&self, sess: &Session) -> Option<Arc<Cfg>> {\n-        let mut cfg = Cfg::True;\n+    fn cfg(&self, tcx: TyCtxt<'_>, hidden_cfg: &FxHashSet<Cfg>) -> Option<Arc<Cfg>> {\n+        let sess = tcx.sess;\n+        let doc_cfg_active = tcx.features().doc_cfg;\n+\n+        fn single<T: IntoIterator>(it: T) -> Option<T::Item> {\n+            let mut iter = it.into_iter();\n+            let item = iter.next()?;\n+            if iter.next().is_some() {\n+                return None;\n+            }\n+            Some(item)\n+        }\n+\n+        let mut cfg = if doc_cfg_active {\n+            let mut doc_cfg = self\n+                .iter()\n+                .filter(|attr| attr.has_name(sym::doc))\n+                .flat_map(|attr| attr.meta_item_list().unwrap_or_else(Vec::new))\n+                .filter(|attr| attr.has_name(sym::cfg))\n+                .peekable();\n+            if doc_cfg.peek().is_some() {\n+                doc_cfg\n+                    .filter_map(|attr| Cfg::parse(attr.meta_item()?).ok())\n+                    .fold(Cfg::True, |cfg, new_cfg| cfg & new_cfg)\n+            } else {\n+                self.iter()\n+                    .filter(|attr| attr.has_name(sym::cfg))\n+                    .filter_map(|attr| single(attr.meta_item_list()?))\n+                    .filter_map(|attr| Cfg::parse(attr.meta_item()?).ok())\n+                    .filter(|cfg| !hidden_cfg.contains(cfg))\n+                    .fold(Cfg::True, |cfg, new_cfg| cfg & new_cfg)\n+            }\n+        } else {\n+            Cfg::True\n+        };\n \n         for attr in self.iter() {\n             // #[doc]\n@@ -800,6 +833,8 @@ impl AttributesExt for [ast::Attribute] {\n             }\n         }\n \n+        // treat #[target_feature(enable = \"feat\")] attributes as if they were\n+        // #[doc(cfg(target_feature = \"feat\"))] attributes as well\n         for attr in self.lists(sym::target_feature) {\n             if attr.has_name(sym::enable) {\n                 if let Some(feat) = attr.value_str() {"}, {"sha": "9e64d200b437339abf5d20ba337c43f0e63bea69", "filename": "src/librustdoc/doctest.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e32328bdc5a749d4b7d35297c85337522a07bddf/src%2Flibrustdoc%2Fdoctest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e32328bdc5a749d4b7d35297c85337522a07bddf/src%2Flibrustdoc%2Fdoctest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctest.rs?ref=e32328bdc5a749d4b7d35297c85337522a07bddf", "patch": "@@ -1123,7 +1123,7 @@ impl<'a, 'hir, 'tcx> HirCollector<'a, 'hir, 'tcx> {\n         let ast_attrs = self.tcx.hir().attrs(hir_id);\n         let mut attrs = Attributes::from_ast(ast_attrs, None);\n \n-        if let Some(ref cfg) = ast_attrs.cfg(self.sess) {\n+        if let Some(ref cfg) = ast_attrs.cfg(self.tcx, &FxHashSet::default()) {\n             if !cfg.matches(&self.sess.parse_sess, Some(&self.sess.features_untracked())) {\n                 return;\n             }"}, {"sha": "cc9e081add199baac86fa3d2c85a43eda1d425a7", "filename": "src/librustdoc/formats/cache.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e32328bdc5a749d4b7d35297c85337522a07bddf/src%2Flibrustdoc%2Fformats%2Fcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e32328bdc5a749d4b7d35297c85337522a07bddf/src%2Flibrustdoc%2Fformats%2Fcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fformats%2Fcache.rs?ref=e32328bdc5a749d4b7d35297c85337522a07bddf", "patch": "@@ -119,6 +119,8 @@ crate struct Cache {\n     ///\n     /// Links are indexed by the DefId of the item they document.\n     crate intra_doc_links: FxHashMap<ItemId, Vec<clean::ItemLink>>,\n+    /// Cfg that have been hidden via #![doc(cfg_hide(...))]\n+    crate hidden_cfg: FxHashSet<clean::cfg::Cfg>,\n }\n \n /// This struct is used to wrap the `cache` and `tcx` in order to run `DocFolder`."}, {"sha": "cab3fca708b2e46654a8285cda7ea19ffda82382", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e32328bdc5a749d4b7d35297c85337522a07bddf/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e32328bdc5a749d4b7d35297c85337522a07bddf/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=e32328bdc5a749d4b7d35297c85337522a07bddf", "patch": "@@ -323,7 +323,7 @@ fn item_module(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item, items: &[cl\n                     let import_item = clean::Item {\n                         def_id: import_def_id.into(),\n                         attrs: import_attrs,\n-                        cfg: ast_attrs.cfg(cx.sess()),\n+                        cfg: ast_attrs.cfg(cx.tcx(), &cx.cache().hidden_cfg),\n                         ..myitem.clone()\n                     };\n "}, {"sha": "36b1a14f6c1ea488f0d26af3316584a9373ff7e2", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/e32328bdc5a749d4b7d35297c85337522a07bddf/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e32328bdc5a749d4b7d35297c85337522a07bddf/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=e32328bdc5a749d4b7d35297c85337522a07bddf", "patch": "@@ -6,6 +6,7 @@ use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::DefId;\n use rustc_hir::Node;\n+use rustc_hir::CRATE_HIR_ID;\n use rustc_middle::middle::privacy::AccessLevel;\n use rustc_middle::ty::TyCtxt;\n use rustc_span;\n@@ -15,7 +16,7 @@ use rustc_span::symbol::{kw, sym, Symbol};\n \n use std::mem;\n \n-use crate::clean::{self, AttributesExt, NestedAttributesExt};\n+use crate::clean::{self, cfg::Cfg, AttributesExt, NestedAttributesExt};\n use crate::core;\n use crate::doctree::*;\n \n@@ -97,6 +98,31 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n                 }\n             }\n         }\n+\n+        self.cx.cache.hidden_cfg = self\n+            .cx\n+            .tcx\n+            .hir()\n+            .attrs(CRATE_HIR_ID)\n+            .iter()\n+            .filter(|attr| attr.has_name(sym::doc))\n+            .flat_map(|attr| attr.meta_item_list().into_iter().flatten())\n+            .filter(|attr| attr.has_name(sym::cfg_hide))\n+            .flat_map(|attr| {\n+                attr.meta_item_list()\n+                    .unwrap_or(&[])\n+                    .iter()\n+                    .filter_map(|attr| {\n+                        Some(\n+                            Cfg::parse(attr.meta_item()?)\n+                                .map_err(|e| self.cx.sess().diagnostic().span_err(e.span, e.msg))\n+                                .ok()?,\n+                        )\n+                    })\n+                    .collect::<Vec<_>>()\n+            })\n+            .collect();\n+\n         self.cx.cache.exact_paths = self.exact_paths;\n         top_level_module\n     }"}, {"sha": "354d76bc3c4333d6d6dc2797068c91c16fd44202", "filename": "src/test/rustdoc-ui/doc-cfg.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e32328bdc5a749d4b7d35297c85337522a07bddf/src%2Ftest%2Frustdoc-ui%2Fdoc-cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e32328bdc5a749d4b7d35297c85337522a07bddf/src%2Ftest%2Frustdoc-ui%2Fdoc-cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdoc-cfg.rs?ref=e32328bdc5a749d4b7d35297c85337522a07bddf", "patch": "@@ -0,0 +1,9 @@\n+#![feature(doc_cfg)]\n+\n+#[doc(cfg(), cfg(foo, bar))]\n+//~^ ERROR\n+//~^^ ERROR\n+#[doc(cfg(foo), cfg(bar))] // ok!\n+#[doc(cfg())] //~ ERROR\n+#[doc(cfg(foo, bar))] //~ ERROR\n+pub fn foo() {}"}, {"sha": "b379f6febe29f1c8511aa49bcd902d650e7e37b3", "filename": "src/test/rustdoc-ui/doc-cfg.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/e32328bdc5a749d4b7d35297c85337522a07bddf/src%2Ftest%2Frustdoc-ui%2Fdoc-cfg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e32328bdc5a749d4b7d35297c85337522a07bddf/src%2Ftest%2Frustdoc-ui%2Fdoc-cfg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdoc-cfg.stderr?ref=e32328bdc5a749d4b7d35297c85337522a07bddf", "patch": "@@ -0,0 +1,26 @@\n+error: `cfg` predicate is not specified\n+  --> $DIR/doc-cfg.rs:3:7\n+   |\n+LL | #[doc(cfg(), cfg(foo, bar))]\n+   |       ^^^^^\n+\n+error: multiple `cfg` predicates are specified\n+  --> $DIR/doc-cfg.rs:3:23\n+   |\n+LL | #[doc(cfg(), cfg(foo, bar))]\n+   |                       ^^^\n+\n+error: `cfg` predicate is not specified\n+  --> $DIR/doc-cfg.rs:7:7\n+   |\n+LL | #[doc(cfg())]\n+   |       ^^^^^\n+\n+error: multiple `cfg` predicates are specified\n+  --> $DIR/doc-cfg.rs:8:16\n+   |\n+LL | #[doc(cfg(foo, bar))]\n+   |                ^^^\n+\n+error: aborting due to 4 previous errors\n+"}, {"sha": "17812018b9b7a156c08791ad4ae1e58a9124271f", "filename": "src/test/rustdoc-ui/feature-gate-doc_cfg_hide.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e32328bdc5a749d4b7d35297c85337522a07bddf/src%2Ftest%2Frustdoc-ui%2Ffeature-gate-doc_cfg_hide.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e32328bdc5a749d4b7d35297c85337522a07bddf/src%2Ftest%2Frustdoc-ui%2Ffeature-gate-doc_cfg_hide.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Ffeature-gate-doc_cfg_hide.rs?ref=e32328bdc5a749d4b7d35297c85337522a07bddf", "patch": "@@ -0,0 +1,7 @@\n+#![doc(cfg_hide(test))]\n+//~^ ERROR `#[doc(cfg_hide)]` is experimental\n+\n+#[cfg(not(test))]\n+pub fn public_fn() {}\n+#[cfg(test)]\n+pub fn internal_use_only() {}"}, {"sha": "ba42c7bbb05bcc414531cf59da00d1fc0534fe33", "filename": "src/test/rustdoc-ui/feature-gate-doc_cfg_hide.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e32328bdc5a749d4b7d35297c85337522a07bddf/src%2Ftest%2Frustdoc-ui%2Ffeature-gate-doc_cfg_hide.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e32328bdc5a749d4b7d35297c85337522a07bddf/src%2Ftest%2Frustdoc-ui%2Ffeature-gate-doc_cfg_hide.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Ffeature-gate-doc_cfg_hide.stderr?ref=e32328bdc5a749d4b7d35297c85337522a07bddf", "patch": "@@ -0,0 +1,14 @@\n+error[E0658]: `#[doc(cfg_hide)]` is experimental\n+  --> $DIR/feature-gate-doc_cfg_hide.rs:1:1\n+   |\n+LL | #![doc(cfg_hide(test))]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #43781 <https://github.com/rust-lang/rust/issues/43781> for more information\n+   = help: add `#![feature(doc_cfg_hide)]` to the crate attributes to enable\n+\n+error: Compilation failed, aborting rustdoc\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "b9d0d32313723ddb1128b563e33237881ef7ab11", "filename": "src/test/rustdoc/doc-cfg-hide.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/e32328bdc5a749d4b7d35297c85337522a07bddf/src%2Ftest%2Frustdoc%2Fdoc-cfg-hide.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e32328bdc5a749d4b7d35297c85337522a07bddf/src%2Ftest%2Frustdoc%2Fdoc-cfg-hide.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fdoc-cfg-hide.rs?ref=e32328bdc5a749d4b7d35297c85337522a07bddf", "patch": "@@ -0,0 +1,32 @@\n+#![crate_name = \"oud\"]\n+#![feature(doc_cfg, doc_cfg_hide)]\n+\n+#![doc(cfg_hide(feature = \"solecism\"))]\n+\n+// @has 'oud/struct.Solecism.html'\n+// @count   - '//*[@class=\"stab portability\"]' 0\n+// compile-flags:--cfg feature=\"solecism\"\n+#[cfg(feature = \"solecism\")]\n+pub struct Solecism;\n+\n+// @has 'oud/struct.Scribacious.html'\n+// @count   - '//*[@class=\"stab portability\"]' 1\n+// @matches - '//*[@class=\"stab portability\"]' 'crate feature solecism'\n+#[cfg(feature = \"solecism\")]\n+#[doc(cfg(feature = \"solecism\"))]\n+pub struct Scribacious;\n+\n+// @has 'oud/struct.Hyperdulia.html'\n+// @count   - '//*[@class=\"stab portability\"]' 1\n+// @matches - '//*[@class=\"stab portability\"]' 'crate feature hyperdulia'\n+// compile-flags:--cfg feature=\"hyperdulia\"\n+#[cfg(feature = \"solecism\")]\n+#[cfg(feature = \"hyperdulia\")]\n+pub struct Hyperdulia;\n+\n+// @has 'oud/struct.Oystercatcher.html'\n+// @count   - '//*[@class=\"stab portability\"]' 1\n+// @matches - '//*[@class=\"stab portability\"]' 'crate features solecism and oystercatcher'\n+// compile-flags:--cfg feature=\"oystercatcher\"\n+#[cfg(all(feature = \"solecism\", feature = \"oystercatcher\"))]\n+pub struct Oystercatcher;"}, {"sha": "92804d3729bba171c4558459f86a9a21815d03a3", "filename": "src/test/rustdoc/doc-cfg-implicit-gate.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e32328bdc5a749d4b7d35297c85337522a07bddf/src%2Ftest%2Frustdoc%2Fdoc-cfg-implicit-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e32328bdc5a749d4b7d35297c85337522a07bddf/src%2Ftest%2Frustdoc%2Fdoc-cfg-implicit-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fdoc-cfg-implicit-gate.rs?ref=e32328bdc5a749d4b7d35297c85337522a07bddf", "patch": "@@ -0,0 +1,7 @@\n+// compile-flags:--cfg feature=\"worricow\"\n+#![crate_name = \"xenogenous\"]\n+\n+// @has 'xenogenous/struct.Worricow.html'\n+// @count   - '//*[@class=\"stab portability\"]' 0\n+#[cfg(feature = \"worricow\")]\n+pub struct Worricow;"}, {"sha": "36c2025785d0f87a8e76915fe7fcd3ce897b4fe8", "filename": "src/test/rustdoc/doc-cfg-implicit.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/e32328bdc5a749d4b7d35297c85337522a07bddf/src%2Ftest%2Frustdoc%2Fdoc-cfg-implicit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e32328bdc5a749d4b7d35297c85337522a07bddf/src%2Ftest%2Frustdoc%2Fdoc-cfg-implicit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fdoc-cfg-implicit.rs?ref=e32328bdc5a749d4b7d35297c85337522a07bddf", "patch": "@@ -0,0 +1,31 @@\n+#![crate_name = \"funambulism\"]\n+#![feature(doc_cfg)]\n+\n+// @has 'funambulism/struct.Disorbed.html'\n+// @count   - '//*[@class=\"stab portability\"]' 1\n+// @matches - '//*[@class=\"stab portability\"]' 'crate feature disorbed'\n+// compile-flags:--cfg feature=\"disorbed\"\n+#[cfg(feature = \"disorbed\")]\n+pub struct Disorbed;\n+\n+// @has 'funambulism/struct.Aesthesia.html'\n+// @count   - '//*[@class=\"stab portability\"]' 1\n+// @matches - '//*[@class=\"stab portability\"]' 'crate feature aesthesia'\n+// compile-flags:--cfg feature=\"aesthesia\"\n+#[doc(cfg(feature = \"aesthesia\"))]\n+pub struct Aesthesia;\n+\n+// @has 'funambulism/struct.Pliothermic.html'\n+// @count   - '//*[@class=\"stab portability\"]' 1\n+// @matches - '//*[@class=\"stab portability\"]' 'crate feature pliothermic'\n+// compile-flags:--cfg feature=\"epopoeist\"\n+#[cfg(feature = \"epopoeist\")]\n+#[doc(cfg(feature = \"pliothermic\"))]\n+pub struct Pliothermic;\n+\n+// @has 'funambulism/struct.Simillimum.html'\n+// @count   - '//*[@class=\"stab portability\"]' 0\n+// compile-flags:--cfg feature=\"simillimum\"\n+#[cfg(feature = \"simillimum\")]\n+#[doc(cfg(all()))]\n+pub struct Simillimum;"}]}