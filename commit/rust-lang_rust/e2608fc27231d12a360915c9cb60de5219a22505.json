{"sha": "e2608fc27231d12a360915c9cb60de5219a22505", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyNjA4ZmMyNzIzMWQxMmEzNjA5MTVjOWNiNjBkZTUyMTlhMjI1MDU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-12T05:57:31Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-12T05:57:31Z"}, "message": "Auto merge of #3529 - matthiaskrgr:rustfmt_tests, r=phansch\n\nrustfmt tests\n\nalso fails CI if tests turn out to not be formatted properly.", "tree": {"sha": "a0238a2e7de86e7f35a1ee5fedce22c993a6739d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0238a2e7de86e7f35a1ee5fedce22c993a6739d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e2608fc27231d12a360915c9cb60de5219a22505", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e2608fc27231d12a360915c9cb60de5219a22505", "html_url": "https://github.com/rust-lang/rust/commit/e2608fc27231d12a360915c9cb60de5219a22505", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e2608fc27231d12a360915c9cb60de5219a22505/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82e6dbb07c53ed668a082dba6c0a46ba6f2da1fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/82e6dbb07c53ed668a082dba6c0a46ba6f2da1fa", "html_url": "https://github.com/rust-lang/rust/commit/82e6dbb07c53ed668a082dba6c0a46ba6f2da1fa"}, {"sha": "36266b3e6cd3d58716cd1fcd21f05148d322d204", "url": "https://api.github.com/repos/rust-lang/rust/commits/36266b3e6cd3d58716cd1fcd21f05148d322d204", "html_url": "https://github.com/rust-lang/rust/commit/36266b3e6cd3d58716cd1fcd21f05148d322d204"}], "stats": {"total": 13427, "additions": 6772, "deletions": 6655}, "files": [{"sha": "56db616cf5b87017ce933c8930da510393ddd4e1", "filename": "ci/base-tests.sh", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/ci%2Fbase-tests.sh", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/ci%2Fbase-tests.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ci%2Fbase-tests.sh?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -29,3 +29,21 @@ cd clippy_dev && cargo test && cd ..\n # Perform various checks for lint registration\n ./util/dev update_lints --check\n cargo +nightly fmt --all -- --check\n+\n+\n+#avoid loop spam\n+set +ex\n+# make sure tests are formatted\n+\n+# some lints are sensitive to formatting, exclude some files\n+needs_formatting=false\n+for file in `find tests -not -path \"tests/ui/methods.rs\" -not -path \"tests/ui/format.rs\" -not -path \"tests/ui/formatting.rs\" -not -path \"tests/ui/empty_line_after_outer_attribute.rs\" -not -path \"tests/ui/double_parens.rs\" -not -path \"tests/ui/doc.rs\" -not -path \"tests/ui/unused_unit.rs\" | grep \"\\.rs$\"` ; do\n+rustfmt ${file} --check  || echo \"${file} needs reformatting!\" ; needs_formatting=true\n+done\n+\n+if [ \"${needs_reformatting}\" = true] ; then\n+    echo \"Tests need reformatting!\"\n+    exit 2\n+fi\n+\n+set -ex"}, {"sha": "d5fef5889711c8c2639916237ff85dc23b51f507", "filename": "tests/auxiliary/test_macro.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fauxiliary%2Ftest_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fauxiliary%2Ftest_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fauxiliary%2Ftest_macro.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,7 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n pub trait A {}\n \n macro_rules! __implicit_hasher_test_macro {"}, {"sha": "df84009c88901394e87e69200f1588ba7b8872d2", "filename": "tests/run-pass/associated-constant-ice.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fassociated-constant-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fassociated-constant-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fassociated-constant-ice.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,7 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n pub trait Trait {\n     const CONSTANT: u8;\n }"}, {"sha": "7e1f13d44609381d8cbdea35496710cb60dcf119", "filename": "tests/run-pass/cc_seme.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fcc_seme.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fcc_seme.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fcc_seme.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,7 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n #[allow(dead_code)]\n enum Baz {\n     One,\n@@ -19,18 +18,15 @@ struct Test {\n     b: Baz,\n }\n \n-fn main() { }\n+fn main() {}\n \n pub fn foo() {\n     use Baz::*;\n     let x = Test { t: Some(0), b: One };\n \n     match x {\n         Test { t: Some(_), b: One } => unreachable!(),\n-        Test {\n-            t: Some(42),\n-            b: Two,\n-        } => unreachable!(),\n+        Test { t: Some(42), b: Two } => unreachable!(),\n         Test { t: None, .. } => unreachable!(),\n         Test { .. } => unreachable!(),\n     }"}, {"sha": "6e64f174e4cede607f36e89b1410a11a6855410e", "filename": "tests/run-pass/enum-glob-import-crate.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fenum-glob-import-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fenum-glob-import-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fenum-glob-import-crate.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,12 +7,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![deny(clippy::all)]\n #![allow(unused_imports)]\n \n use std::*;\n \n-fn main() { }\n+fn main() {}"}, {"sha": "87f2afaa60234d5fe06b256f45b895d87372ee44", "filename": "tests/run-pass/ice-1588.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fice-1588.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fice-1588.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fice-1588.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,17 +7,14 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![allow(clippy::all)]\n \n fn main() {\n     match 1 {\n-        1 => {}\n+        1 => {},\n         2 => {\n             [0; 1];\n-        }\n-        _ => {}\n+        },\n+        _ => {},\n     }\n }"}, {"sha": "ddb4367c91400abfb2c738317f1252b302b5b145", "filename": "tests/run-pass/ice-1782.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fice-1782.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fice-1782.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fice-1782.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,20 +7,28 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n #![allow(dead_code, unused_variables)]\n \n /// Should not trigger an ICE in `SpanlessEq` / `consts::constant`\n ///\n /// Issue: https://github.com/rust-lang/rust-clippy/issues/1782\n-\n use std::{mem, ptr};\n \n fn spanless_eq_ice() {\n     let txt = \"something\";\n     match txt {\n-        \"something\" => unsafe { ptr::write(ptr::null_mut() as *mut u32, mem::transmute::<[u8; 4], _>([0, 0, 0, 255])) },\n-        _ => unsafe { ptr::write(ptr::null_mut() as *mut u32, mem::transmute::<[u8; 4], _>([13, 246, 24, 255])) },\n+        \"something\" => unsafe {\n+            ptr::write(\n+                ptr::null_mut() as *mut u32,\n+                mem::transmute::<[u8; 4], _>([0, 0, 0, 255]),\n+            )\n+        },\n+        _ => unsafe {\n+            ptr::write(\n+                ptr::null_mut() as *mut u32,\n+                mem::transmute::<[u8; 4], _>([13, 246, 24, 255]),\n+            )\n+        },\n     }\n }\n "}, {"sha": "2a0cdb19fce33a037d8e0f1d1f1896774a40377e", "filename": "tests/run-pass/ice-1969.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fice-1969.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fice-1969.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fice-1969.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,12 +7,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![allow(clippy::all)]\n \n-fn main() { }\n+fn main() {}\n \n pub trait Convert {\n     type Action: From<*const f64>;"}, {"sha": "804f416800c40fc8e537d2571e36472d2a551b54", "filename": "tests/run-pass/ice-2499.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fice-2499.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fice-2499.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fice-2499.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![allow(dead_code, clippy::char_lit_as_u8, clippy::needless_bool)]\n \n /// Should not trigger an ICE in `SpanlessHash` / `consts::constant`\n@@ -20,15 +17,17 @@ fn f(s: &[u8]) -> bool {\n     let t = s[0] as char;\n \n     match t {\n-        'E' | 'W' => {}\n-        'T' => if s[0..4] != ['0' as u8; 4] {\n-            return false;\n-        } else {\n-            return true;\n+        'E' | 'W' => {},\n+        'T' => {\n+            if s[0..4] != ['0' as u8; 4] {\n+                return false;\n+            } else {\n+                return true;\n+            }\n         },\n         _ => {\n             return false;\n-        }\n+        },\n     }\n     true\n }"}, {"sha": "e91b71b3a1c7b43cff7027abd9088858421a36c2", "filename": "tests/run-pass/ice-2594.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fice-2594.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fice-2594.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fice-2594.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,7 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n #![allow(dead_code, unused_variables)]\n \n /// Should not trigger an ICE in `SpanlessHash` / `consts::constant`\n@@ -21,7 +20,7 @@ fn spanless_hash_ice() {\n     match txt {\n         \"something\" => {\n             let mut headers = [empty_header; 1];\n-        }\n+        },\n         \"\" => (),\n         _ => (),\n     }"}, {"sha": "9d00f2bacd0df27136d72c818a9d47e4926b2c53", "filename": "tests/run-pass/ice-2727.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fice-2727.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fice-2727.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fice-2727.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,7 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n pub fn f(new: fn()) {\n     new();\n }"}, {"sha": "533cc3b952a1da9decc2b56bda6dbc6c97b2dcb6", "filename": "tests/run-pass/ice-2760.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fice-2760.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fice-2760.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fice-2760.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,11 +7,12 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-#![allow(unused_variables, clippy::blacklisted_name,\n-         clippy::needless_pass_by_value, dead_code)]\n+#![allow(\n+    unused_variables,\n+    clippy::blacklisted_name,\n+    clippy::needless_pass_by_value,\n+    dead_code\n+)]\n \n // This should not compile-fail with:\n //"}, {"sha": "ae51f0362079dd3e23cdec6b7b5d10cdbe70afcf", "filename": "tests/run-pass/ice-2774.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fice-2774.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fice-2774.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fice-2774.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n use std::collections::HashSet;\n \n // See https://github.com/rust-lang/rust-clippy/issues/2774\n@@ -26,18 +23,14 @@ pub struct Foo {}\n // This should not cause a 'cannot relate bound region' ICE\n pub fn add_barfoos_to_foos<'a>(bars: &HashSet<&'a Bar>) {\n     let mut foos = HashSet::new();\n-    foos.extend(\n-        bars.iter().map(|b| &b.foo)\n-    );\n+    foos.extend(bars.iter().map(|b| &b.foo));\n }\n \n #[allow(clippy::implicit_hasher)]\n // Also this should not cause a 'cannot relate bound region' ICE\n pub fn add_barfoos_to_foos2(bars: &HashSet<&Bar>) {\n     let mut foos = HashSet::new();\n-    foos.extend(\n-        bars.iter().map(|b| &b.foo)\n-    );\n+    foos.extend(bars.iter().map(|b| &b.foo));\n }\n \n fn main() {}"}, {"sha": "970ac5bd3a814b675fa6024f7768e783896eb80d", "filename": "tests/run-pass/ice-2865.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fice-2865.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fice-2865.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fice-2865.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,10 +7,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n #[allow(dead_code)]\n struct Ice {\n-    size: String\n+    size: String,\n }\n \n impl<'a> From<String> for Ice {"}, {"sha": "7a26f4c3925d16bc19e69e69e0810e3b92d38123", "filename": "tests/run-pass/ice-3151.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fice-3151.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fice-3151.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fice-3151.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,7 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n #[derive(Clone)]\n pub struct HashMap<V, S> {\n     hash_builder: S,\n@@ -17,7 +16,7 @@ pub struct HashMap<V, S> {\n #[derive(Clone)]\n pub struct RawTable<V> {\n     size: usize,\n-    val: V\n+    val: V,\n }\n \n-fn main() {}\n\\ No newline at end of file\n+fn main() {}"}, {"sha": "b839ac2a21403826b7e4d983df0323967b9b7f65", "filename": "tests/run-pass/ice-700.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fice-700.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fice-700.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fice-700.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![deny(clippy::all)]\n \n fn core() {}"}, {"sha": "b2b331bd342cb74eeb6eaa22f79327f37e31fdee", "filename": "tests/run-pass/ice_exacte_size.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fice_exacte_size.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fice_exacte_size.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fice_exacte_size.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![deny(clippy::all)]\n \n #[allow(dead_code)]"}, {"sha": "0241d2adcf72f23edd4c8d14fd038a1423bcdf67", "filename": "tests/run-pass/if_same_then_else.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fif_same_then_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fif_same_then_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fif_same_then_else.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![deny(clippy::if_same_then_else)]\n \n fn main() {}"}, {"sha": "a534249204575ed12db6618f70b62fff36fff1e6", "filename": "tests/run-pass/issue-2862.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fissue-2862.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fissue-2862.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fissue-2862.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,7 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n pub trait FooMap {\n     fn map<B, F: Fn() -> B>(&self, f: F) -> B;\n }"}, {"sha": "9f1195a4ac0b5e4c8dbedab14a873bca2a2b1357", "filename": "tests/run-pass/issue-825.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fissue-825.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fissue-825.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fissue-825.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,14 +7,23 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n #![allow(warnings)]\n \n // this should compile in a reasonable amount of time\n fn rust_type_id(name: &str) {\n-    if \"bool\" == &name[..] || \"uint\" == &name[..] || \"u8\" == &name[..] || \"u16\" == &name[..] || \"u32\" == &name[..]\n-        || \"f32\" == &name[..] || \"f64\" == &name[..] || \"i8\" == &name[..] || \"i16\" == &name[..]\n-        || \"i32\" == &name[..] || \"i64\" == &name[..] || \"Self\" == &name[..] || \"str\" == &name[..]\n+    if \"bool\" == &name[..]\n+        || \"uint\" == &name[..]\n+        || \"u8\" == &name[..]\n+        || \"u16\" == &name[..]\n+        || \"u32\" == &name[..]\n+        || \"f32\" == &name[..]\n+        || \"f64\" == &name[..]\n+        || \"i8\" == &name[..]\n+        || \"i16\" == &name[..]\n+        || \"i32\" == &name[..]\n+        || \"i64\" == &name[..]\n+        || \"Self\" == &name[..]\n+        || \"str\" == &name[..]\n     {\n         unreachable!();\n     }"}, {"sha": "a81f8f55dc8844b6fa440c8e27e5de295050d286", "filename": "tests/run-pass/issues_loop_mut_cond.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fissues_loop_mut_cond.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fissues_loop_mut_cond.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fissues_loop_mut_cond.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,7 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n #![allow(dead_code)]\n \n /// Issue: https://github.com/rust-lang/rust-clippy/issues/2596"}, {"sha": "661f2ac1dc728f027f08d7887ea54477d45cedc8", "filename": "tests/run-pass/match_same_arms_const.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fmatch_same_arms_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fmatch_same_arms_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fmatch_same_arms_const.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![deny(clippy::match_same_arms)]\n \n const PRICE_OF_SWEETS: u32 = 5;\n@@ -21,7 +18,7 @@ pub fn price(thing: &str) -> u32 {\n         \"rolo\" => PRICE_OF_SWEETS,\n         \"advice\" => PRICE_OF_KINDNESS,\n         \"juice\" => PRICE_OF_DRINKS,\n-        _ => panic!()\n+        _ => panic!(),\n     }\n }\n "}, {"sha": "f1a2cad3ae73d03ee9eb74882756eff9c402aaa6", "filename": "tests/run-pass/mut_mut_macro.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fmut_mut_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fmut_mut_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fmut_mut_macro.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![deny(clippy::mut_mut, clippy::zero_ptr, clippy::cmp_nan)]\n #![allow(dead_code)]\n "}, {"sha": "81b7785571195e0ff0c2dc7cfbc9c696776119e0", "filename": "tests/run-pass/needless_borrow_fp.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fneedless_borrow_fp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fneedless_borrow_fp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fneedless_borrow_fp.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,16 +7,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #[deny(clippy::all)]\n-\n #[derive(Debug)]\n pub enum Error {\n-    Type(\n-        &'static str,\n-    ),\n+    Type(&'static str),\n }\n \n fn main() {}"}, {"sha": "9648f530c2a8d20b954cb54eca6b0d929e32efac", "filename": "tests/run-pass/needless_lifetimes_impl_trait.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fneedless_lifetimes_impl_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fneedless_lifetimes_impl_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fneedless_lifetimes_impl_trait.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![deny(clippy::needless_lifetimes)]\n #![allow(dead_code)]\n "}, {"sha": "9ac47599ea065ce89a2b3ea0aaa2e236192feef1", "filename": "tests/run-pass/procedural_macro.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fprocedural_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fprocedural_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fprocedural_macro.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,7 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n #[macro_use]\n extern crate clippy_mini_macro_test;\n \n@@ -17,6 +16,5 @@ fn main() {\n     println!(\"{:?}\", x);\n }\n \n-\n #[derive(ClippyMiniMacroTest, Debug)]\n-struct Foo;\n\\ No newline at end of file\n+struct Foo;"}, {"sha": "b109eecf624e960a105fed0012cf4edad5e98a4c", "filename": "tests/run-pass/regressions.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fregressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fregressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fregressions.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![allow(clippy::blacklisted_name)]\n \n pub fn foo(bar: *const u8) {"}, {"sha": "045cf001eb23271ce2d3508ddc5545ab3c4f451c", "filename": "tests/run-pass/returns.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Freturns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Freturns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Freturns.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,11 +7,12 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n #[deny(warnings)]\n fn cfg_return() -> i32 {\n-    #[cfg(unix)] return 1;\n-    #[cfg(not(unix))] return 2;\n+    #[cfg(unix)]\n+    return 1;\n+    #[cfg(not(unix))]\n+    return 2;\n }\n \n #[deny(warnings)]"}, {"sha": "80fc88f30df55774df206b6286af796670cd2664", "filename": "tests/run-pass/single-match-else.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fsingle-match-else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fsingle-match-else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fsingle-match-else.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![warn(clippy::single_match_else)]\n \n fn main() {"}, {"sha": "8b6c6557b4947e4335ccb641bf1665d5d0401623", "filename": "tests/run-pass/used_underscore_binding_macro.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fused_underscore_binding_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fused_underscore_binding_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fused_underscore_binding_macro.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![allow(clippy::useless_attribute)] //issue #2910\n \n #[macro_use]"}, {"sha": "e7f5ddb561fc956b0cde47caf4956d9c6da36623", "filename": "tests/run-pass/whitelist/conf_whitelisted.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fwhitelist%2Fconf_whitelisted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Frun-pass%2Fwhitelist%2Fconf_whitelisted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fwhitelist%2Fconf_whitelisted.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,5 +7,4 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n fn main() {}"}, {"sha": "31781277ae8b79ad048e660b1f8b7ae7f0a692b4", "filename": "tests/ui-toml/bad_toml/conf_bad_toml.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui-toml%2Fbad_toml%2Fconf_bad_toml.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui-toml%2Fbad_toml%2Fconf_bad_toml.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fbad_toml%2Fconf_bad_toml.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,10 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n // error-pattern: error reading Clippy's configuration file\n \n-\n-\n-\n fn main() {}"}, {"sha": "2307bfff21ca35e6ddecd5be412cad06aeba35fc", "filename": "tests/ui-toml/bad_toml_type/conf_bad_type.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui-toml%2Fbad_toml_type%2Fconf_bad_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui-toml%2Fbad_toml_type%2Fconf_bad_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fbad_toml_type%2Fconf_bad_type.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,10 +7,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-// error-pattern: error reading Clippy's configuration file: `blacklisted-names` is expected to be a `Vec < String >` but is a `integer`\n-\n-\n-\n+// error-pattern: error reading Clippy's configuration file: `blacklisted-names` is expected to be a\n+// `Vec < String >` but is a `integer`\n \n fn main() {}"}, {"sha": "b00a21b3f2f7f0a41cf195b2c45dd18779e30907", "filename": "tests/ui-toml/toml_blacklist/conf_french_blacklisted_name.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui-toml%2Ftoml_blacklist%2Fconf_french_blacklisted_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui-toml%2Ftoml_blacklist%2Fconf_french_blacklisted_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Ftoml_blacklist%2Fconf_french_blacklisted_name.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,10 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #![allow(dead_code)]\n #![allow(clippy::single_match)]\n #![allow(unused_variables)]"}, {"sha": "e67cdd8f9dd567c41e0d8121103bd690d9c0f65f", "filename": "tests/ui-toml/toml_blacklist/conf_french_blacklisted_name.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui-toml%2Ftoml_blacklist%2Fconf_french_blacklisted_name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui-toml%2Ftoml_blacklist%2Fconf_french_blacklisted_name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Ftoml_blacklist%2Fconf_french_blacklisted_name.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,45 +1,45 @@\n error: use of a blacklisted/placeholder name `toto`\n-  --> $DIR/conf_french_blacklisted_name.rs:19:9\n+  --> $DIR/conf_french_blacklisted_name.rs:15:9\n    |\n-19 | fn test(toto: ()) {}\n+15 | fn test(toto: ()) {}\n    |         ^^^^\n    |\n    = note: `-D clippy::blacklisted-name` implied by `-D warnings`\n \n error: use of a blacklisted/placeholder name `toto`\n-  --> $DIR/conf_french_blacklisted_name.rs:22:9\n+  --> $DIR/conf_french_blacklisted_name.rs:18:9\n    |\n-22 |     let toto = 42;\n+18 |     let toto = 42;\n    |         ^^^^\n \n error: use of a blacklisted/placeholder name `tata`\n-  --> $DIR/conf_french_blacklisted_name.rs:23:9\n+  --> $DIR/conf_french_blacklisted_name.rs:19:9\n    |\n-23 |     let tata = 42;\n+19 |     let tata = 42;\n    |         ^^^^\n \n error: use of a blacklisted/placeholder name `titi`\n-  --> $DIR/conf_french_blacklisted_name.rs:24:9\n+  --> $DIR/conf_french_blacklisted_name.rs:20:9\n    |\n-24 |     let titi = 42;\n+20 |     let titi = 42;\n    |         ^^^^\n \n error: use of a blacklisted/placeholder name `toto`\n-  --> $DIR/conf_french_blacklisted_name.rs:30:10\n+  --> $DIR/conf_french_blacklisted_name.rs:26:10\n    |\n-30 |         (toto, Some(tata), titi @ Some(_)) => (),\n+26 |         (toto, Some(tata), titi @ Some(_)) => (),\n    |          ^^^^\n \n error: use of a blacklisted/placeholder name `tata`\n-  --> $DIR/conf_french_blacklisted_name.rs:30:21\n+  --> $DIR/conf_french_blacklisted_name.rs:26:21\n    |\n-30 |         (toto, Some(tata), titi @ Some(_)) => (),\n+26 |         (toto, Some(tata), titi @ Some(_)) => (),\n    |                     ^^^^\n \n error: use of a blacklisted/placeholder name `titi`\n-  --> $DIR/conf_french_blacklisted_name.rs:30:28\n+  --> $DIR/conf_french_blacklisted_name.rs:26:28\n    |\n-30 |         (toto, Some(tata), titi @ Some(_)) => (),\n+26 |         (toto, Some(tata), titi @ Some(_)) => (),\n    |                            ^^^^\n \n error: aborting due to 7 previous errors"}, {"sha": "39de0de0dc726b9b69d625f8d153eb5ecfd848a7", "filename": "tests/ui-toml/toml_trivially_copy/test.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui-toml%2Ftoml_trivially_copy%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui-toml%2Ftoml_trivially_copy%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Ftoml_trivially_copy%2Ftest.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,8 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n #![allow(clippy::many_single_char_names)]\n \n #[derive(Copy, Clone)]\n@@ -17,11 +15,9 @@ struct Foo(u8);\n #[derive(Copy, Clone)]\n struct Bar(u32);\n \n-fn good(a: &mut u32, b: u32, c: &Bar, d: &u32) {\n-}\n+fn good(a: &mut u32, b: u32, c: &Bar, d: &u32) {}\n \n-fn bad(x: &u16, y: &Foo) {\n-}\n+fn bad(x: &u16, y: &Foo) {}\n \n fn main() {\n     let (mut a, b, c, d, x, y) = (0, 0, Bar(0), 0, 0, Foo(0));"}, {"sha": "efa9223bde81b02efd32eb42ef48209a4403b07d", "filename": "tests/ui-toml/toml_trivially_copy/test.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui-toml%2Ftoml_trivially_copy%2Ftest.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui-toml%2Ftoml_trivially_copy%2Ftest.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Ftoml_trivially_copy%2Ftest.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,15 +1,15 @@\n error: this argument is passed by reference, but would be more efficient if passed by value\n-  --> $DIR/test.rs:23:11\n+  --> $DIR/test.rs:20:11\n    |\n-23 | fn bad(x: &u16, y: &Foo) {\n+20 | fn bad(x: &u16, y: &Foo) {}\n    |           ^^^^ help: consider passing by value instead: `u16`\n    |\n    = note: `-D clippy::trivially-copy-pass-by-ref` implied by `-D warnings`\n \n error: this argument is passed by reference, but would be more efficient if passed by value\n-  --> $DIR/test.rs:23:20\n+  --> $DIR/test.rs:20:20\n    |\n-23 | fn bad(x: &u16, y: &Foo) {\n+20 | fn bad(x: &u16, y: &Foo) {}\n    |                    ^^^^ help: consider passing by value instead: `Foo`\n \n error: aborting due to 2 previous errors"}, {"sha": "c8e6268e95dc6b498788db973a2ea83339bbaecf", "filename": "tests/ui-toml/toml_unknown_key/conf_unknown_key.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui-toml%2Ftoml_unknown_key%2Fconf_unknown_key.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui-toml%2Ftoml_unknown_key%2Fconf_unknown_key.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Ftoml_unknown_key%2Fconf_unknown_key.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,10 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n // error-pattern: error reading Clippy's configuration file: unknown key `foobar`\n \n-\n-\n-\n fn main() {}"}, {"sha": "666c4325706351b9f488b02234a252e3728b4bbc", "filename": "tests/ui/absurd-extreme-comparisons.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fabsurd-extreme-comparisons.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fabsurd-extreme-comparisons.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fabsurd-extreme-comparisons.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -8,7 +8,13 @@\n // except according to those terms.\n \n #![warn(clippy::absurd_extreme_comparisons)]\n-#![allow(unused, clippy::eq_op, clippy::no_effect, clippy::unnecessary_operation, clippy::needless_pass_by_value)]\n+#![allow(\n+    unused,\n+    clippy::eq_op,\n+    clippy::no_effect,\n+    clippy::unnecessary_operation,\n+    clippy::needless_pass_by_value\n+)]\n \n #[rustfmt::skip]\n fn main() {"}, {"sha": "00f7086dc5516894507485d8278c3b4ee676ecaf", "filename": "tests/ui/absurd-extreme-comparisons.stderr", "status": "modified", "additions": 36, "deletions": 36, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fabsurd-extreme-comparisons.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fabsurd-extreme-comparisons.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fabsurd-extreme-comparisons.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,144 +1,144 @@\n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:17:5\n+  --> $DIR/absurd-extreme-comparisons.rs:23:5\n    |\n-17 |     u <= 0;\n+23 |     u <= 0;\n    |     ^^^^^^\n    |\n    = note: `-D clippy::absurd-extreme-comparisons` implied by `-D warnings`\n    = help: because 0 is the minimum value for this type, the case where the two sides are not equal never occurs, consider using u == 0 instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:18:5\n+  --> $DIR/absurd-extreme-comparisons.rs:24:5\n    |\n-18 |     u <= Z;\n+24 |     u <= Z;\n    |     ^^^^^^\n    |\n    = help: because Z is the minimum value for this type, the case where the two sides are not equal never occurs, consider using u == Z instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:19:5\n+  --> $DIR/absurd-extreme-comparisons.rs:25:5\n    |\n-19 |     u < Z;\n+25 |     u < Z;\n    |     ^^^^^\n    |\n    = help: because Z is the minimum value for this type, this comparison is always false\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:20:5\n+  --> $DIR/absurd-extreme-comparisons.rs:26:5\n    |\n-20 |     Z >= u;\n+26 |     Z >= u;\n    |     ^^^^^^\n    |\n    = help: because Z is the minimum value for this type, the case where the two sides are not equal never occurs, consider using Z == u instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:21:5\n+  --> $DIR/absurd-extreme-comparisons.rs:27:5\n    |\n-21 |     Z > u;\n+27 |     Z > u;\n    |     ^^^^^\n    |\n    = help: because Z is the minimum value for this type, this comparison is always false\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:22:5\n+  --> $DIR/absurd-extreme-comparisons.rs:28:5\n    |\n-22 |     u > std::u32::MAX;\n+28 |     u > std::u32::MAX;\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = help: because std::u32::MAX is the maximum value for this type, this comparison is always false\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:23:5\n+  --> $DIR/absurd-extreme-comparisons.rs:29:5\n    |\n-23 |     u >= std::u32::MAX;\n+29 |     u >= std::u32::MAX;\n    |     ^^^^^^^^^^^^^^^^^^\n    |\n    = help: because std::u32::MAX is the maximum value for this type, the case where the two sides are not equal never occurs, consider using u == std::u32::MAX instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:24:5\n+  --> $DIR/absurd-extreme-comparisons.rs:30:5\n    |\n-24 |     std::u32::MAX < u;\n+30 |     std::u32::MAX < u;\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = help: because std::u32::MAX is the maximum value for this type, this comparison is always false\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:25:5\n+  --> $DIR/absurd-extreme-comparisons.rs:31:5\n    |\n-25 |     std::u32::MAX <= u;\n+31 |     std::u32::MAX <= u;\n    |     ^^^^^^^^^^^^^^^^^^\n    |\n    = help: because std::u32::MAX is the maximum value for this type, the case where the two sides are not equal never occurs, consider using std::u32::MAX == u instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:26:5\n+  --> $DIR/absurd-extreme-comparisons.rs:32:5\n    |\n-26 |     1-1 > u;\n+32 |     1-1 > u;\n    |     ^^^^^^^\n    |\n    = help: because 1-1 is the minimum value for this type, this comparison is always false\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:27:5\n+  --> $DIR/absurd-extreme-comparisons.rs:33:5\n    |\n-27 |     u >= !0;\n+33 |     u >= !0;\n    |     ^^^^^^^\n    |\n    = help: because !0 is the maximum value for this type, the case where the two sides are not equal never occurs, consider using u == !0 instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:28:5\n+  --> $DIR/absurd-extreme-comparisons.rs:34:5\n    |\n-28 |     u <= 12 - 2*6;\n+34 |     u <= 12 - 2*6;\n    |     ^^^^^^^^^^^^^\n    |\n    = help: because 12 - 2*6 is the minimum value for this type, the case where the two sides are not equal never occurs, consider using u == 12 - 2*6 instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:30:5\n+  --> $DIR/absurd-extreme-comparisons.rs:36:5\n    |\n-30 |     i < -127 - 1;\n+36 |     i < -127 - 1;\n    |     ^^^^^^^^^^^^\n    |\n    = help: because -127 - 1 is the minimum value for this type, this comparison is always false\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:31:5\n+  --> $DIR/absurd-extreme-comparisons.rs:37:5\n    |\n-31 |     std::i8::MAX >= i;\n+37 |     std::i8::MAX >= i;\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = help: because std::i8::MAX is the maximum value for this type, this comparison is always true\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:32:5\n+  --> $DIR/absurd-extreme-comparisons.rs:38:5\n    |\n-32 |     3-7 < std::i32::MIN;\n+38 |     3-7 < std::i32::MIN;\n    |     ^^^^^^^^^^^^^^^^^^^\n    |\n    = help: because std::i32::MIN is the minimum value for this type, this comparison is always false\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:34:5\n+  --> $DIR/absurd-extreme-comparisons.rs:40:5\n    |\n-34 |     b >= true;\n+40 |     b >= true;\n    |     ^^^^^^^^^\n    |\n    = help: because true is the maximum value for this type, the case where the two sides are not equal never occurs, consider using b == true instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:35:5\n+  --> $DIR/absurd-extreme-comparisons.rs:41:5\n    |\n-35 |     false > b;\n+41 |     false > b;\n    |     ^^^^^^^^^\n    |\n    = help: because false is the minimum value for this type, this comparison is always false\n \n error: <-comparison of unit values detected. This will always be false\n-  --> $DIR/absurd-extreme-comparisons.rs:38:5\n+  --> $DIR/absurd-extreme-comparisons.rs:44:5\n    |\n-38 |     () < {};\n+44 |     () < {};\n    |     ^^^^^^^\n    |\n    = note: #[deny(clippy::unit_cmp)] on by default"}, {"sha": "8eefb6af01d87c1718f51fab4cc43c04c2d4d230", "filename": "tests/ui/approx_const.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fapprox_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fapprox_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fapprox_const.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,10 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #[warn(clippy::approx_constant)]\n #[allow(unused, clippy::shadow_unrelated, clippy::similar_names, clippy::unreadable_literal)]\n fn main() {"}, {"sha": "cee7fe6919a3f9a42a52c15f75213bed9cdea8f4", "filename": "tests/ui/approx_const.stderr", "status": "modified", "additions": 38, "deletions": 38, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fapprox_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fapprox_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fapprox_const.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,117 +1,117 @@\n error: approximate value of `f{32, 64}::consts::E` found. Consider using it directly\n-  --> $DIR/approx_const.rs:17:16\n+  --> $DIR/approx_const.rs:13:16\n    |\n-17 |     let my_e = 2.7182;\n+13 |     let my_e = 2.7182;\n    |                ^^^^^^\n    |\n    = note: `-D clippy::approx-constant` implied by `-D warnings`\n \n error: approximate value of `f{32, 64}::consts::E` found. Consider using it directly\n-  --> $DIR/approx_const.rs:18:20\n+  --> $DIR/approx_const.rs:14:20\n    |\n-18 |     let almost_e = 2.718;\n+14 |     let almost_e = 2.718;\n    |                    ^^^^^\n \n error: approximate value of `f{32, 64}::consts::FRAC_1_PI` found. Consider using it directly\n-  --> $DIR/approx_const.rs:21:24\n+  --> $DIR/approx_const.rs:17:24\n    |\n-21 |     let my_1_frac_pi = 0.3183;\n+17 |     let my_1_frac_pi = 0.3183;\n    |                        ^^^^^^\n \n error: approximate value of `f{32, 64}::consts::FRAC_1_SQRT_2` found. Consider using it directly\n-  --> $DIR/approx_const.rs:24:28\n+  --> $DIR/approx_const.rs:20:28\n    |\n-24 |     let my_frac_1_sqrt_2 = 0.70710678;\n+20 |     let my_frac_1_sqrt_2 = 0.70710678;\n    |                            ^^^^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::FRAC_1_SQRT_2` found. Consider using it directly\n-  --> $DIR/approx_const.rs:25:32\n+  --> $DIR/approx_const.rs:21:32\n    |\n-25 |     let almost_frac_1_sqrt_2 = 0.70711;\n+21 |     let almost_frac_1_sqrt_2 = 0.70711;\n    |                                ^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::FRAC_2_PI` found. Consider using it directly\n-  --> $DIR/approx_const.rs:28:24\n+  --> $DIR/approx_const.rs:24:24\n    |\n-28 |     let my_frac_2_pi = 0.63661977;\n+24 |     let my_frac_2_pi = 0.63661977;\n    |                        ^^^^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::FRAC_2_SQRT_PI` found. Consider using it directly\n-  --> $DIR/approx_const.rs:31:27\n+  --> $DIR/approx_const.rs:27:27\n    |\n-31 |     let my_frac_2_sq_pi = 1.128379;\n+27 |     let my_frac_2_sq_pi = 1.128379;\n    |                           ^^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::FRAC_PI_2` found. Consider using it directly\n-  --> $DIR/approx_const.rs:34:24\n+  --> $DIR/approx_const.rs:30:24\n    |\n-34 |     let my_frac_pi_2 = 1.57079632679;\n+30 |     let my_frac_pi_2 = 1.57079632679;\n    |                        ^^^^^^^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::FRAC_PI_3` found. Consider using it directly\n-  --> $DIR/approx_const.rs:37:24\n+  --> $DIR/approx_const.rs:33:24\n    |\n-37 |     let my_frac_pi_3 = 1.04719755119;\n+33 |     let my_frac_pi_3 = 1.04719755119;\n    |                        ^^^^^^^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::FRAC_PI_4` found. Consider using it directly\n-  --> $DIR/approx_const.rs:40:24\n+  --> $DIR/approx_const.rs:36:24\n    |\n-40 |     let my_frac_pi_4 = 0.785398163397;\n+36 |     let my_frac_pi_4 = 0.785398163397;\n    |                        ^^^^^^^^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::FRAC_PI_6` found. Consider using it directly\n-  --> $DIR/approx_const.rs:43:24\n+  --> $DIR/approx_const.rs:39:24\n    |\n-43 |     let my_frac_pi_6 = 0.523598775598;\n+39 |     let my_frac_pi_6 = 0.523598775598;\n    |                        ^^^^^^^^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::FRAC_PI_8` found. Consider using it directly\n-  --> $DIR/approx_const.rs:46:24\n+  --> $DIR/approx_const.rs:42:24\n    |\n-46 |     let my_frac_pi_8 = 0.3926990816987;\n+42 |     let my_frac_pi_8 = 0.3926990816987;\n    |                        ^^^^^^^^^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::LN_10` found. Consider using it directly\n-  --> $DIR/approx_const.rs:49:20\n+  --> $DIR/approx_const.rs:45:20\n    |\n-49 |     let my_ln_10 = 2.302585092994046;\n+45 |     let my_ln_10 = 2.302585092994046;\n    |                    ^^^^^^^^^^^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::LN_2` found. Consider using it directly\n-  --> $DIR/approx_const.rs:52:19\n+  --> $DIR/approx_const.rs:48:19\n    |\n-52 |     let my_ln_2 = 0.6931471805599453;\n+48 |     let my_ln_2 = 0.6931471805599453;\n    |                   ^^^^^^^^^^^^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::LOG10_E` found. Consider using it directly\n-  --> $DIR/approx_const.rs:55:22\n+  --> $DIR/approx_const.rs:51:22\n    |\n-55 |     let my_log10_e = 0.4342944819032518;\n+51 |     let my_log10_e = 0.4342944819032518;\n    |                      ^^^^^^^^^^^^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::LOG2_E` found. Consider using it directly\n-  --> $DIR/approx_const.rs:58:21\n+  --> $DIR/approx_const.rs:54:21\n    |\n-58 |     let my_log2_e = 1.4426950408889634;\n+54 |     let my_log2_e = 1.4426950408889634;\n    |                     ^^^^^^^^^^^^^^^^^^\n \n error: approximate value of `f{32, 64}::consts::PI` found. Consider using it directly\n-  --> $DIR/approx_const.rs:61:17\n+  --> $DIR/approx_const.rs:57:17\n    |\n-61 |     let my_pi = 3.1415;\n+57 |     let my_pi = 3.1415;\n    |                 ^^^^^^\n \n error: approximate value of `f{32, 64}::consts::PI` found. Consider using it directly\n-  --> $DIR/approx_const.rs:62:21\n+  --> $DIR/approx_const.rs:58:21\n    |\n-62 |     let almost_pi = 3.14;\n+58 |     let almost_pi = 3.14;\n    |                     ^^^^\n \n error: approximate value of `f{32, 64}::consts::SQRT_2` found. Consider using it directly\n-  --> $DIR/approx_const.rs:65:18\n+  --> $DIR/approx_const.rs:61:18\n    |\n-65 |     let my_sq2 = 1.4142;\n+61 |     let my_sq2 = 1.4142;\n    |                  ^^^^^^\n \n error: aborting due to 19 previous errors"}, {"sha": "00de38039a731655bdc14e6454a0a800a14e5967", "filename": "tests/ui/arithmetic.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Farithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Farithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Farithmetic.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,14 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n #![warn(clippy::integer_arithmetic, clippy::float_arithmetic)]\n-#![allow(unused, clippy::shadow_reuse, clippy::shadow_unrelated, clippy::no_effect, clippy::unnecessary_operation)]\n+#![allow(\n+    unused,\n+    clippy::shadow_reuse,\n+    clippy::shadow_unrelated,\n+    clippy::no_effect,\n+    clippy::unnecessary_operation\n+)]\n \n #[rustfmt::skip]\n fn main() {"}, {"sha": "1dff9941bb2d0b7d0683528d88d803a3046c51c3", "filename": "tests/ui/arithmetic.stderr", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Farithmetic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Farithmetic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Farithmetic.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,72 +1,72 @@\n error: integer arithmetic detected\n-  --> $DIR/arithmetic.rs:17:5\n+  --> $DIR/arithmetic.rs:22:5\n    |\n-17 |     1 + i;\n+22 |     1 + i;\n    |     ^^^^^\n    |\n    = note: `-D clippy::integer-arithmetic` implied by `-D warnings`\n \n error: integer arithmetic detected\n-  --> $DIR/arithmetic.rs:18:5\n+  --> $DIR/arithmetic.rs:23:5\n    |\n-18 |     i * 2;\n+23 |     i * 2;\n    |     ^^^^^\n \n error: integer arithmetic detected\n-  --> $DIR/arithmetic.rs:19:5\n+  --> $DIR/arithmetic.rs:24:5\n    |\n-19 | /     1 %\n-20 | |     i / 2; // no error, this is part of the expression in the preceding line\n+24 | /     1 %\n+25 | |     i / 2; // no error, this is part of the expression in the preceding line\n    | |_________^\n \n error: integer arithmetic detected\n-  --> $DIR/arithmetic.rs:21:5\n+  --> $DIR/arithmetic.rs:26:5\n    |\n-21 |     i - 2 + 2 - i;\n+26 |     i - 2 + 2 - i;\n    |     ^^^^^^^^^^^^^\n \n error: integer arithmetic detected\n-  --> $DIR/arithmetic.rs:22:5\n+  --> $DIR/arithmetic.rs:27:5\n    |\n-22 |     -i;\n+27 |     -i;\n    |     ^^\n \n error: floating-point arithmetic detected\n-  --> $DIR/arithmetic.rs:32:5\n+  --> $DIR/arithmetic.rs:37:5\n    |\n-32 |     f * 2.0;\n+37 |     f * 2.0;\n    |     ^^^^^^^\n    |\n    = note: `-D clippy::float-arithmetic` implied by `-D warnings`\n \n error: floating-point arithmetic detected\n-  --> $DIR/arithmetic.rs:34:5\n+  --> $DIR/arithmetic.rs:39:5\n    |\n-34 |     1.0 + f;\n+39 |     1.0 + f;\n    |     ^^^^^^^\n \n error: floating-point arithmetic detected\n-  --> $DIR/arithmetic.rs:35:5\n+  --> $DIR/arithmetic.rs:40:5\n    |\n-35 |     f * 2.0;\n+40 |     f * 2.0;\n    |     ^^^^^^^\n \n error: floating-point arithmetic detected\n-  --> $DIR/arithmetic.rs:36:5\n+  --> $DIR/arithmetic.rs:41:5\n    |\n-36 |     f / 2.0;\n+41 |     f / 2.0;\n    |     ^^^^^^^\n \n error: floating-point arithmetic detected\n-  --> $DIR/arithmetic.rs:37:5\n+  --> $DIR/arithmetic.rs:42:5\n    |\n-37 |     f - 2.0 * 4.2;\n+42 |     f - 2.0 * 4.2;\n    |     ^^^^^^^^^^^^^\n \n error: floating-point arithmetic detected\n-  --> $DIR/arithmetic.rs:38:5\n+  --> $DIR/arithmetic.rs:43:5\n    |\n-38 |     -f;\n+43 |     -f;\n    |     ^^\n \n error: aborting due to 11 previous errors"}, {"sha": "75cd75438239c7813755fcfb6a397458225c8b21", "filename": "tests/ui/assign_ops.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fassign_ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fassign_ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassign_ops.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #[allow(dead_code, unused_assignments)]\n #[warn(clippy::assign_op_pattern)]\n fn main() {"}, {"sha": "7acbdc899846b0065d1c1e2c7baa4d3bd2927019", "filename": "tests/ui/assign_ops.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fassign_ops.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fassign_ops.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassign_ops.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,57 +1,57 @@\n error: manual implementation of an assign operation\n-  --> $DIR/assign_ops.rs:17:5\n+  --> $DIR/assign_ops.rs:14:5\n    |\n-17 |     a = a + 1;\n+14 |     a = a + 1;\n    |     ^^^^^^^^^ help: replace it with: `a += 1`\n    |\n    = note: `-D clippy::assign-op-pattern` implied by `-D warnings`\n \n error: manual implementation of an assign operation\n-  --> $DIR/assign_ops.rs:18:5\n+  --> $DIR/assign_ops.rs:15:5\n    |\n-18 |     a = 1 + a;\n+15 |     a = 1 + a;\n    |     ^^^^^^^^^ help: replace it with: `a += 1`\n \n error: manual implementation of an assign operation\n-  --> $DIR/assign_ops.rs:19:5\n+  --> $DIR/assign_ops.rs:16:5\n    |\n-19 |     a = a - 1;\n+16 |     a = a - 1;\n    |     ^^^^^^^^^ help: replace it with: `a -= 1`\n \n error: manual implementation of an assign operation\n-  --> $DIR/assign_ops.rs:20:5\n+  --> $DIR/assign_ops.rs:17:5\n    |\n-20 |     a = a * 99;\n+17 |     a = a * 99;\n    |     ^^^^^^^^^^ help: replace it with: `a *= 99`\n \n error: manual implementation of an assign operation\n-  --> $DIR/assign_ops.rs:21:5\n+  --> $DIR/assign_ops.rs:18:5\n    |\n-21 |     a = 42 * a;\n+18 |     a = 42 * a;\n    |     ^^^^^^^^^^ help: replace it with: `a *= 42`\n \n error: manual implementation of an assign operation\n-  --> $DIR/assign_ops.rs:22:5\n+  --> $DIR/assign_ops.rs:19:5\n    |\n-22 |     a = a / 2;\n+19 |     a = a / 2;\n    |     ^^^^^^^^^ help: replace it with: `a /= 2`\n \n error: manual implementation of an assign operation\n-  --> $DIR/assign_ops.rs:23:5\n+  --> $DIR/assign_ops.rs:20:5\n    |\n-23 |     a = a % 5;\n+20 |     a = a % 5;\n    |     ^^^^^^^^^ help: replace it with: `a %= 5`\n \n error: manual implementation of an assign operation\n-  --> $DIR/assign_ops.rs:24:5\n+  --> $DIR/assign_ops.rs:21:5\n    |\n-24 |     a = a & 1;\n+21 |     a = a & 1;\n    |     ^^^^^^^^^ help: replace it with: `a &= 1`\n \n error: manual implementation of an assign operation\n-  --> $DIR/assign_ops.rs:30:5\n+  --> $DIR/assign_ops.rs:27:5\n    |\n-30 |     s = s + \"bla\";\n+27 |     s = s + \"bla\";\n    |     ^^^^^^^^^^^^^ help: replace it with: `s += \"bla\"`\n \n error: aborting due to 9 previous errors"}, {"sha": "24d0d77a20dacc6f8b39971445ecf53afc5c3acb", "filename": "tests/ui/assign_ops2.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fassign_ops2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fassign_ops2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassign_ops2.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,10 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #[allow(unused_assignments)]\n #[warn(clippy::misrefactored_assign_op, clippy::assign_op_pattern)]\n fn main() {\n@@ -65,6 +61,4 @@ fn cow_add_assign() {\n     // this should not as cow<str> Add is not commutative\n     buf = cows + buf;\n     println!(\"{}\", buf);\n-\n }\n-"}, {"sha": "26ff079ad62ed7dedae55f9c6f7a7178d4361a73", "filename": "tests/ui/assign_ops2.stderr", "status": "modified", "additions": 38, "deletions": 38, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fassign_ops2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fassign_ops2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassign_ops2.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,135 +1,135 @@\n error: variable appears on both sides of an assignment operation\n-  --> $DIR/assign_ops2.rs:18:5\n+  --> $DIR/assign_ops2.rs:14:5\n    |\n-18 |     a += a + 1;\n+14 |     a += a + 1;\n    |     ^^^^^^^^^^\n    |\n    = note: `-D clippy::misrefactored-assign-op` implied by `-D warnings`\n help: Did you mean a = a + 1 or a = a + a + 1? Consider replacing it with\n    |\n-18 |     a += 1;\n+14 |     a += 1;\n    |     ^^^^^^\n help: or\n    |\n-18 |     a = a + a + 1;\n+14 |     a = a + a + 1;\n    |     ^^^^^^^^^^^^^\n \n error: variable appears on both sides of an assignment operation\n-  --> $DIR/assign_ops2.rs:19:5\n+  --> $DIR/assign_ops2.rs:15:5\n    |\n-19 |     a += 1 + a;\n+15 |     a += 1 + a;\n    |     ^^^^^^^^^^\n help: Did you mean a = a + 1 or a = a + 1 + a? Consider replacing it with\n    |\n-19 |     a += 1;\n+15 |     a += 1;\n    |     ^^^^^^\n help: or\n    |\n-19 |     a = a + 1 + a;\n+15 |     a = a + 1 + a;\n    |     ^^^^^^^^^^^^^\n \n error: variable appears on both sides of an assignment operation\n-  --> $DIR/assign_ops2.rs:20:5\n+  --> $DIR/assign_ops2.rs:16:5\n    |\n-20 |     a -= a - 1;\n+16 |     a -= a - 1;\n    |     ^^^^^^^^^^\n help: Did you mean a = a - 1 or a = a - (a - 1)? Consider replacing it with\n    |\n-20 |     a -= 1;\n+16 |     a -= 1;\n    |     ^^^^^^\n help: or\n    |\n-20 |     a = a - (a - 1);\n+16 |     a = a - (a - 1);\n    |     ^^^^^^^^^^^^^^^\n \n error: variable appears on both sides of an assignment operation\n-  --> $DIR/assign_ops2.rs:21:5\n+  --> $DIR/assign_ops2.rs:17:5\n    |\n-21 |     a *= a * 99;\n+17 |     a *= a * 99;\n    |     ^^^^^^^^^^^\n help: Did you mean a = a * 99 or a = a * a * 99? Consider replacing it with\n    |\n-21 |     a *= 99;\n+17 |     a *= 99;\n    |     ^^^^^^^\n help: or\n    |\n-21 |     a = a * a * 99;\n+17 |     a = a * a * 99;\n    |     ^^^^^^^^^^^^^^\n \n error: variable appears on both sides of an assignment operation\n-  --> $DIR/assign_ops2.rs:22:5\n+  --> $DIR/assign_ops2.rs:18:5\n    |\n-22 |     a *= 42 * a;\n+18 |     a *= 42 * a;\n    |     ^^^^^^^^^^^\n help: Did you mean a = a * 42 or a = a * 42 * a? Consider replacing it with\n    |\n-22 |     a *= 42;\n+18 |     a *= 42;\n    |     ^^^^^^^\n help: or\n    |\n-22 |     a = a * 42 * a;\n+18 |     a = a * 42 * a;\n    |     ^^^^^^^^^^^^^^\n \n error: variable appears on both sides of an assignment operation\n-  --> $DIR/assign_ops2.rs:23:5\n+  --> $DIR/assign_ops2.rs:19:5\n    |\n-23 |     a /= a / 2;\n+19 |     a /= a / 2;\n    |     ^^^^^^^^^^\n help: Did you mean a = a / 2 or a = a / (a / 2)? Consider replacing it with\n    |\n-23 |     a /= 2;\n+19 |     a /= 2;\n    |     ^^^^^^\n help: or\n    |\n-23 |     a = a / (a / 2);\n+19 |     a = a / (a / 2);\n    |     ^^^^^^^^^^^^^^^\n \n error: variable appears on both sides of an assignment operation\n-  --> $DIR/assign_ops2.rs:24:5\n+  --> $DIR/assign_ops2.rs:20:5\n    |\n-24 |     a %= a % 5;\n+20 |     a %= a % 5;\n    |     ^^^^^^^^^^\n help: Did you mean a = a % 5 or a = a % (a % 5)? Consider replacing it with\n    |\n-24 |     a %= 5;\n+20 |     a %= 5;\n    |     ^^^^^^\n help: or\n    |\n-24 |     a = a % (a % 5);\n+20 |     a = a % (a % 5);\n    |     ^^^^^^^^^^^^^^^\n \n error: variable appears on both sides of an assignment operation\n-  --> $DIR/assign_ops2.rs:25:5\n+  --> $DIR/assign_ops2.rs:21:5\n    |\n-25 |     a &= a & 1;\n+21 |     a &= a & 1;\n    |     ^^^^^^^^^^\n help: Did you mean a = a & 1 or a = a & a & 1? Consider replacing it with\n    |\n-25 |     a &= 1;\n+21 |     a &= 1;\n    |     ^^^^^^\n help: or\n    |\n-25 |     a = a & a & 1;\n+21 |     a = a & a & 1;\n    |     ^^^^^^^^^^^^^\n \n error: variable appears on both sides of an assignment operation\n-  --> $DIR/assign_ops2.rs:26:5\n+  --> $DIR/assign_ops2.rs:22:5\n    |\n-26 |     a *= a * a;\n+22 |     a *= a * a;\n    |     ^^^^^^^^^^\n help: Did you mean a = a * a or a = a * a * a? Consider replacing it with\n    |\n-26 |     a *= a;\n+22 |     a *= a;\n    |     ^^^^^^\n help: or\n    |\n-26 |     a = a * a * a;\n+22 |     a = a * a * a;\n    |     ^^^^^^^^^^^^^\n \n error: manual implementation of an assign operation\n-  --> $DIR/assign_ops2.rs:63:5\n+  --> $DIR/assign_ops2.rs:59:5\n    |\n-63 |     buf = buf + cows.clone();\n+59 |     buf = buf + cows.clone();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `buf += cows.clone()`\n    |\n    = note: `-D clippy::assign-op-pattern` implied by `-D warnings`"}, {"sha": "413c30a194532d4ba00ebedfd834d0b587e01d8c", "filename": "tests/ui/attrs.rs", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fattrs.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,10 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #![warn(clippy::inline_always, clippy::deprecated_semver)]\n \n #[inline(always)]\n@@ -30,22 +26,27 @@ fn false_positive_stmt() {\n \n #[inline(always)]\n fn empty_and_false_positive_stmt() {\n-    ;\n     unreachable!();\n }\n \n #[deprecated(since = \"forever\")]\n-pub const SOME_CONST : u8 = 42;\n+pub const SOME_CONST: u8 = 42;\n \n #[deprecated(since = \"1\")]\n-pub const ANOTHER_CONST : u8 = 23;\n+pub const ANOTHER_CONST: u8 = 23;\n \n #[deprecated(since = \"0.1.1\")]\n-pub const YET_ANOTHER_CONST : u8 = 0;\n+pub const YET_ANOTHER_CONST: u8 = 0;\n \n fn main() {\n     test_attr_lint();\n-    if false { false_positive_expr() }\n-    if false { false_positive_stmt() }\n-    if false { empty_and_false_positive_stmt() }\n+    if false {\n+        false_positive_expr()\n+    }\n+    if false {\n+        false_positive_stmt()\n+    }\n+    if false {\n+        empty_and_false_positive_stmt()\n+    }\n }"}, {"sha": "1331fa2912c72e3077b4047bd62c243fa9c24171", "filename": "tests/ui/attrs.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fattrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fattrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fattrs.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,23 +1,23 @@\n error: you have declared `#[inline(always)]` on `test_attr_lint`. This is usually a bad idea\n-  --> $DIR/attrs.rs:16:1\n+  --> $DIR/attrs.rs:12:1\n    |\n-16 | #[inline(always)]\n+12 | #[inline(always)]\n    | ^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::inline-always` implied by `-D warnings`\n \n error: the since field must contain a semver-compliant version\n-  --> $DIR/attrs.rs:37:14\n+  --> $DIR/attrs.rs:32:14\n    |\n-37 | #[deprecated(since = \"forever\")]\n+32 | #[deprecated(since = \"forever\")]\n    |              ^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::deprecated-semver` implied by `-D warnings`\n \n error: the since field must contain a semver-compliant version\n-  --> $DIR/attrs.rs:40:14\n+  --> $DIR/attrs.rs:35:14\n    |\n-40 | #[deprecated(since = \"1\")]\n+35 | #[deprecated(since = \"1\")]\n    |              ^^^^^^^^^^^\n \n error: aborting due to 3 previous errors"}, {"sha": "4b7729e23b1f771a23fda87c9434858e23e11f9e", "filename": "tests/ui/author.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fauthor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fauthor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauthor.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,11 +7,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n fn main() {\n-\n     #[clippy::author]\n     let x: char = 0x45 as char;\n }"}, {"sha": "40cc0d7a919470eab5e227acb7f335938b475d67", "filename": "tests/ui/author/call.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fauthor%2Fcall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fauthor%2Fcall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauthor%2Fcall.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n fn main() {\n     #[clippy::author]\n     let _ = ::std::cmp::min(3, 4);"}, {"sha": "4acd0b452bbb295525ea4e4de668a8d41e748d2e", "filename": "tests/ui/author/for_loop.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fauthor%2Ffor_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fauthor%2Ffor_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauthor%2Ffor_loop.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,7 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n #![feature(stmt_expr_attributes)]\n \n fn main() {"}, {"sha": "4c220dded8a4f675b967f919d165df14790107e5", "filename": "tests/ui/author/matches.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fauthor%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fauthor%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauthor%2Fmatches.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,7 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n #![feature(tool_attributes)]\n \n fn main() {"}, {"sha": "4b895b0b8e3ddb189898ac911ebcea93e3d7c5b7", "filename": "tests/ui/author/matches.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fauthor%2Fmatches.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fauthor%2Fmatches.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauthor%2Fmatches.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,14 +1,14 @@\n error: returning the result of a let binding from a block. Consider returning the expression directly.\n-  --> $DIR/matches.rs:19:13\n+  --> $DIR/matches.rs:18:13\n    |\n-19 |             x\n+18 |             x\n    |             ^\n    |\n    = note: `-D clippy::let-and-return` implied by `-D warnings`\n note: this expression can be directly returned\n-  --> $DIR/matches.rs:18:21\n+  --> $DIR/matches.rs:17:21\n    |\n-18 |             let x = 3;\n+17 |             let x = 3;\n    |                     ^\n \n error: aborting due to previous error"}, {"sha": "bda952db723abe2c39e2679648a6fca824f442d6", "filename": "tests/ui/bit_masks.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fbit_masks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fbit_masks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbit_masks.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,15 +7,16 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n-const THREE_BITS : i64 = 7;\n-const EVEN_MORE_REDIRECTION : i64 = THREE_BITS;\n+const THREE_BITS: i64 = 7;\n+const EVEN_MORE_REDIRECTION: i64 = THREE_BITS;\n \n #[warn(clippy::bad_bit_mask)]\n-#[allow(clippy::ineffective_bit_mask, clippy::identity_op, clippy::no_effect, clippy::unnecessary_operation)]\n+#[allow(\n+    clippy::ineffective_bit_mask,\n+    clippy::identity_op,\n+    clippy::no_effect,\n+    clippy::unnecessary_operation\n+)]\n fn main() {\n     let x = 5;\n "}, {"sha": "853f5a992f3b12d003bf8b87a9f2f3c8f04a0359", "filename": "tests/ui/bit_masks.stderr", "status": "modified", "additions": 34, "deletions": 34, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fbit_masks.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fbit_masks.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbit_masks.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,109 +1,109 @@\n error: &-masking with zero\n-  --> $DIR/bit_masks.rs:22:5\n+  --> $DIR/bit_masks.rs:23:5\n    |\n-22 |     x & 0 == 0;\n+23 |     x & 0 == 0;\n    |     ^^^^^^^^^^\n    |\n    = note: `-D clippy::bad-bit-mask` implied by `-D warnings`\n \n error: this operation will always return zero. This is likely not the intended outcome\n-  --> $DIR/bit_masks.rs:22:5\n+  --> $DIR/bit_masks.rs:23:5\n    |\n-22 |     x & 0 == 0;\n+23 |     x & 0 == 0;\n    |     ^^^^^\n    |\n    = note: #[deny(clippy::erasing_op)] on by default\n \n error: incompatible bit mask: `_ & 2` can never be equal to `1`\n-  --> $DIR/bit_masks.rs:25:5\n+  --> $DIR/bit_masks.rs:26:5\n    |\n-25 |     x & 2 == 1;\n+26 |     x & 2 == 1;\n    |     ^^^^^^^^^^\n \n error: incompatible bit mask: `_ | 3` can never be equal to `2`\n-  --> $DIR/bit_masks.rs:29:5\n+  --> $DIR/bit_masks.rs:30:5\n    |\n-29 |     x | 3 == 2;\n+30 |     x | 3 == 2;\n    |     ^^^^^^^^^^\n \n error: incompatible bit mask: `_ & 1` will never be higher than `1`\n-  --> $DIR/bit_masks.rs:31:5\n+  --> $DIR/bit_masks.rs:32:5\n    |\n-31 |     x & 1 > 1;\n+32 |     x & 1 > 1;\n    |     ^^^^^^^^^\n \n error: incompatible bit mask: `_ | 2` will always be higher than `1`\n-  --> $DIR/bit_masks.rs:35:5\n+  --> $DIR/bit_masks.rs:36:5\n    |\n-35 |     x | 2 > 1;\n+36 |     x | 2 > 1;\n    |     ^^^^^^^^^\n \n error: incompatible bit mask: `_ & 7` can never be equal to `8`\n-  --> $DIR/bit_masks.rs:42:5\n+  --> $DIR/bit_masks.rs:43:5\n    |\n-42 |     x & THREE_BITS == 8;\n+43 |     x & THREE_BITS == 8;\n    |     ^^^^^^^^^^^^^^^^^^^\n \n error: incompatible bit mask: `_ | 7` will never be lower than `7`\n-  --> $DIR/bit_masks.rs:43:5\n+  --> $DIR/bit_masks.rs:44:5\n    |\n-43 |     x | EVEN_MORE_REDIRECTION < 7;\n+44 |     x | EVEN_MORE_REDIRECTION < 7;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: &-masking with zero\n-  --> $DIR/bit_masks.rs:45:5\n+  --> $DIR/bit_masks.rs:46:5\n    |\n-45 |     0 & x == 0;\n+46 |     0 & x == 0;\n    |     ^^^^^^^^^^\n \n error: this operation will always return zero. This is likely not the intended outcome\n-  --> $DIR/bit_masks.rs:45:5\n+  --> $DIR/bit_masks.rs:46:5\n    |\n-45 |     0 & x == 0;\n+46 |     0 & x == 0;\n    |     ^^^^^\n \n error: incompatible bit mask: `_ | 2` will always be higher than `1`\n-  --> $DIR/bit_masks.rs:49:5\n+  --> $DIR/bit_masks.rs:50:5\n    |\n-49 |     1 < 2 | x;\n+50 |     1 < 2 | x;\n    |     ^^^^^^^^^\n \n error: incompatible bit mask: `_ | 3` can never be equal to `2`\n-  --> $DIR/bit_masks.rs:50:5\n+  --> $DIR/bit_masks.rs:51:5\n    |\n-50 |     2 == 3 | x;\n+51 |     2 == 3 | x;\n    |     ^^^^^^^^^^\n \n error: incompatible bit mask: `_ & 2` can never be equal to `1`\n-  --> $DIR/bit_masks.rs:51:5\n+  --> $DIR/bit_masks.rs:52:5\n    |\n-51 |     1 == x & 2;\n+52 |     1 == x & 2;\n    |     ^^^^^^^^^^\n \n error: ineffective bit mask: `x | 1` compared to `3`, is the same as x compared directly\n-  --> $DIR/bit_masks.rs:62:5\n+  --> $DIR/bit_masks.rs:63:5\n    |\n-62 |     x | 1 > 3;\n+63 |     x | 1 > 3;\n    |     ^^^^^^^^^\n    |\n    = note: `-D clippy::ineffective-bit-mask` implied by `-D warnings`\n \n error: ineffective bit mask: `x | 1` compared to `4`, is the same as x compared directly\n-  --> $DIR/bit_masks.rs:63:5\n+  --> $DIR/bit_masks.rs:64:5\n    |\n-63 |     x | 1 < 4;\n+64 |     x | 1 < 4;\n    |     ^^^^^^^^^\n \n error: ineffective bit mask: `x | 1` compared to `3`, is the same as x compared directly\n-  --> $DIR/bit_masks.rs:64:5\n+  --> $DIR/bit_masks.rs:65:5\n    |\n-64 |     x | 1 <= 3;\n+65 |     x | 1 <= 3;\n    |     ^^^^^^^^^^\n \n error: ineffective bit mask: `x | 1` compared to `8`, is the same as x compared directly\n-  --> $DIR/bit_masks.rs:65:5\n+  --> $DIR/bit_masks.rs:66:5\n    |\n-65 |     x | 1 >= 8;\n+66 |     x | 1 >= 8;\n    |     ^^^^^^^^^^\n \n error: aborting due to 17 previous errors"}, {"sha": "fef73e9d84fc342b64faf1a4dbe48485fb834bae", "filename": "tests/ui/blacklisted_name.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fblacklisted_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fblacklisted_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fblacklisted_name.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,11 +7,14 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n-#![allow(dead_code, clippy::similar_names, clippy::single_match, clippy::toplevel_ref_arg, unused_mut, unused_variables)]\n+#![allow(\n+    dead_code,\n+    clippy::similar_names,\n+    clippy::single_match,\n+    clippy::toplevel_ref_arg,\n+    unused_mut,\n+    unused_variables\n+)]\n #![warn(clippy::blacklisted_name)]\n \n fn test(foo: ()) {}"}, {"sha": "707d36b24b27f3e84ae675ac6124dfb6bfaaf59a", "filename": "tests/ui/blacklisted_name.stderr", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fblacklisted_name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fblacklisted_name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fblacklisted_name.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,87 +1,87 @@\n error: use of a blacklisted/placeholder name `foo`\n-  --> $DIR/blacklisted_name.rs:17:9\n+  --> $DIR/blacklisted_name.rs:20:9\n    |\n-17 | fn test(foo: ()) {}\n+20 | fn test(foo: ()) {}\n    |         ^^^\n    |\n    = note: `-D clippy::blacklisted-name` implied by `-D warnings`\n \n error: use of a blacklisted/placeholder name `foo`\n-  --> $DIR/blacklisted_name.rs:20:9\n+  --> $DIR/blacklisted_name.rs:23:9\n    |\n-20 |     let foo = 42;\n+23 |     let foo = 42;\n    |         ^^^\n \n error: use of a blacklisted/placeholder name `bar`\n-  --> $DIR/blacklisted_name.rs:21:9\n+  --> $DIR/blacklisted_name.rs:24:9\n    |\n-21 |     let bar = 42;\n+24 |     let bar = 42;\n    |         ^^^\n \n error: use of a blacklisted/placeholder name `baz`\n-  --> $DIR/blacklisted_name.rs:22:9\n+  --> $DIR/blacklisted_name.rs:25:9\n    |\n-22 |     let baz = 42;\n+25 |     let baz = 42;\n    |         ^^^\n \n error: use of a blacklisted/placeholder name `foo`\n-  --> $DIR/blacklisted_name.rs:28:10\n+  --> $DIR/blacklisted_name.rs:31:10\n    |\n-28 |         (foo, Some(bar), baz @ Some(_)) => (),\n+31 |         (foo, Some(bar), baz @ Some(_)) => (),\n    |          ^^^\n \n error: use of a blacklisted/placeholder name `bar`\n-  --> $DIR/blacklisted_name.rs:28:20\n+  --> $DIR/blacklisted_name.rs:31:20\n    |\n-28 |         (foo, Some(bar), baz @ Some(_)) => (),\n+31 |         (foo, Some(bar), baz @ Some(_)) => (),\n    |                    ^^^\n \n error: use of a blacklisted/placeholder name `baz`\n-  --> $DIR/blacklisted_name.rs:28:26\n+  --> $DIR/blacklisted_name.rs:31:26\n    |\n-28 |         (foo, Some(bar), baz @ Some(_)) => (),\n+31 |         (foo, Some(bar), baz @ Some(_)) => (),\n    |                          ^^^\n \n error: use of a blacklisted/placeholder name `foo`\n-  --> $DIR/blacklisted_name.rs:33:19\n+  --> $DIR/blacklisted_name.rs:36:19\n    |\n-33 | fn issue_1647(mut foo: u8) {\n+36 | fn issue_1647(mut foo: u8) {\n    |                   ^^^\n \n error: use of a blacklisted/placeholder name `bar`\n-  --> $DIR/blacklisted_name.rs:34:13\n+  --> $DIR/blacklisted_name.rs:37:13\n    |\n-34 |     let mut bar = 0;\n+37 |     let mut bar = 0;\n    |             ^^^\n \n error: use of a blacklisted/placeholder name `baz`\n-  --> $DIR/blacklisted_name.rs:35:21\n+  --> $DIR/blacklisted_name.rs:38:21\n    |\n-35 |     if let Some(mut baz) = Some(42) {}\n+38 |     if let Some(mut baz) = Some(42) {}\n    |                     ^^^\n \n error: use of a blacklisted/placeholder name `bar`\n-  --> $DIR/blacklisted_name.rs:39:13\n+  --> $DIR/blacklisted_name.rs:42:13\n    |\n-39 |     let ref bar = 0;\n+42 |     let ref bar = 0;\n    |             ^^^\n \n error: use of a blacklisted/placeholder name `baz`\n-  --> $DIR/blacklisted_name.rs:40:21\n+  --> $DIR/blacklisted_name.rs:43:21\n    |\n-40 |     if let Some(ref baz) = Some(42) {}\n+43 |     if let Some(ref baz) = Some(42) {}\n    |                     ^^^\n \n error: use of a blacklisted/placeholder name `bar`\n-  --> $DIR/blacklisted_name.rs:44:17\n+  --> $DIR/blacklisted_name.rs:47:17\n    |\n-44 |     let ref mut bar = 0;\n+47 |     let ref mut bar = 0;\n    |                 ^^^\n \n error: use of a blacklisted/placeholder name `baz`\n-  --> $DIR/blacklisted_name.rs:45:25\n+  --> $DIR/blacklisted_name.rs:48:25\n    |\n-45 |     if let Some(ref mut baz) = Some(42) {}\n+48 |     if let Some(ref mut baz) = Some(42) {}\n    |                         ^^^\n \n error: aborting due to 14 previous errors"}, {"sha": "eaaf5e050bfaf67ea9c402ce24222d9c6ff680c0", "filename": "tests/ui/block_in_if_condition.rs", "status": "modified", "additions": 27, "deletions": 22, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fblock_in_if_condition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fblock_in_if_condition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fblock_in_if_condition.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,33 +7,28 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #![warn(clippy::block_in_if_condition_expr)]\n #![warn(clippy::block_in_if_condition_stmt)]\n #![allow(unused, clippy::let_and_return)]\n #![warn(clippy::nonminimal_bool)]\n \n-\n macro_rules! blocky {\n-    () => {{true}}\n+    () => {{\n+        true\n+    }};\n }\n \n macro_rules! blocky_too {\n     () => {{\n         let r = true;\n         r\n-    }}\n+    }};\n }\n \n fn macro_if() {\n-    if blocky!() {\n-    }\n+    if blocky!() {}\n \n-    if blocky_too!() {\n-    }\n+    if blocky_too!() {}\n }\n \n fn condition_has_block() -> i32 {\n@@ -55,7 +50,7 @@ fn condition_has_block_with_single_expression() -> i32 {\n     }\n }\n \n-fn predicate<F: FnOnce(T) -> bool, T>(pfn: F, val:T) -> bool {\n+fn predicate<F: FnOnce(T) -> bool, T>(pfn: F, val: T) -> bool {\n     pfn(val)\n }\n \n@@ -65,11 +60,24 @@ fn pred_test() {\n     // this is a sneaky case, where the block isn't directly in the condition, but is actually\n     // inside a closure that the condition is using.  same principle applies.  add some extra\n     // expressions to make sure linter isn't confused by them.\n-    if v == 3 && sky == \"blue\" && predicate(|x| { let target = 3; x == target }, v) {\n-    }\n-\n-    if predicate(|x| { let target = 3; x == target }, v) {\n-    }\n+    if v == 3\n+        && sky == \"blue\"\n+        && predicate(\n+            |x| {\n+                let target = 3;\n+                x == target\n+            },\n+            v,\n+        )\n+    {}\n+\n+    if predicate(\n+        |x| {\n+            let target = 3;\n+            x == target\n+        },\n+        v,\n+    ) {}\n }\n \n fn condition_is_normal() -> i32 {\n@@ -82,9 +90,7 @@ fn condition_is_normal() -> i32 {\n }\n \n fn closure_without_block() {\n-    if predicate(|x| x == 3, 6) {\n-\n-    }\n+    if predicate(|x| x == 3, 6) {}\n }\n \n fn condition_is_unsafe_block() {\n@@ -96,8 +102,7 @@ fn condition_is_unsafe_block() {\n     }\n }\n \n-fn main() {\n-}\n+fn main() {}\n \n fn macro_in_closure() {\n     let option = Some(true);"}, {"sha": "d83cef26a8b558d879c0637c5ed559d0b474af96", "filename": "tests/ui/block_in_if_condition.stderr", "status": "modified", "additions": 25, "deletions": 17, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fblock_in_if_condition.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fblock_in_if_condition.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fblock_in_if_condition.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,11 +1,11 @@\n error: in an 'if' condition, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a 'let'\n-  --> $DIR/block_in_if_condition.rs:40:8\n+  --> $DIR/block_in_if_condition.rs:35:8\n    |\n-40 |       if {\n+35 |       if {\n    |  ________^\n-41 | |         let x = 3;\n-42 | |         x == 3\n-43 | |     } {\n+36 | |         let x = 3;\n+37 | |         x == 3\n+38 | |     } {\n    | |_____^\n    |\n    = note: `-D clippy::block-in-if-condition-stmt` implied by `-D warnings`\n@@ -19,9 +19,9 @@ error: in an 'if' condition, avoid complex blocks or closures with blocks; inste\n            } ... \n \n error: omit braces around single expression condition\n-  --> $DIR/block_in_if_condition.rs:51:8\n+  --> $DIR/block_in_if_condition.rs:46:8\n    |\n-51 |     if { true } {\n+46 |     if { true } {\n    |        ^^^^^^^^\n    |\n    = note: `-D clippy::block-in-if-condition-expr` implied by `-D warnings`\n@@ -31,21 +31,29 @@ error: omit braces around single expression condition\n            } ... \n \n error: in an 'if' condition, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a 'let'\n-  --> $DIR/block_in_if_condition.rs:68:49\n-   |\n-68 |     if v == 3 && sky == \"blue\" && predicate(|x| { let target = 3; x == target }, v) {\n-   |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/block_in_if_condition.rs:66:17\n+   |\n+66 |               |x| {\n+   |  _________________^\n+67 | |                 let target = 3;\n+68 | |                 x == target\n+69 | |             },\n+   | |_____________^\n \n error: in an 'if' condition, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a 'let'\n-  --> $DIR/block_in_if_condition.rs:71:22\n-   |\n-71 |     if predicate(|x| { let target = 3; x == target }, v) {\n-   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/block_in_if_condition.rs:75:13\n+   |\n+75 |           |x| {\n+   |  _____________^\n+76 | |             let target = 3;\n+77 | |             x == target\n+78 | |         },\n+   | |_________^\n \n error: this boolean expression can be simplified\n-  --> $DIR/block_in_if_condition.rs:77:8\n+  --> $DIR/block_in_if_condition.rs:85:8\n    |\n-77 |     if true && x == 3 {\n+85 |     if true && x == 3 {\n    |        ^^^^^^^^^^^^^^ help: try: `x == 3`\n    |\n    = note: `-D clippy::nonminimal-bool` implied by `-D warnings`"}, {"sha": "30b5acf2d976546b9f56156b7d41c30555c46813", "filename": "tests/ui/bool_comparison.rs", "status": "modified", "additions": 40, "deletions": 12, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fbool_comparison.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fbool_comparison.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbool_comparison.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,19 +7,47 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #[warn(clippy::bool_comparison)]\n fn main() {\n     let x = true;\n-    if x == true { \"yes\" } else { \"no\" };\n-    if x == false { \"yes\" } else { \"no\" };\n-    if true == x { \"yes\" } else { \"no\" };\n-    if false == x { \"yes\" } else { \"no\" };\n-    if x != true { \"yes\" } else { \"no\" };\n-    if x != false { \"yes\" } else { \"no\" };\n-    if true != x { \"yes\" } else { \"no\" };\n-    if false != x { \"yes\" } else { \"no\" };\n+    if x == true {\n+        \"yes\"\n+    } else {\n+        \"no\"\n+    };\n+    if x == false {\n+        \"yes\"\n+    } else {\n+        \"no\"\n+    };\n+    if true == x {\n+        \"yes\"\n+    } else {\n+        \"no\"\n+    };\n+    if false == x {\n+        \"yes\"\n+    } else {\n+        \"no\"\n+    };\n+    if x != true {\n+        \"yes\"\n+    } else {\n+        \"no\"\n+    };\n+    if x != false {\n+        \"yes\"\n+    } else {\n+        \"no\"\n+    };\n+    if true != x {\n+        \"yes\"\n+    } else {\n+        \"no\"\n+    };\n+    if false != x {\n+        \"yes\"\n+    } else {\n+        \"no\"\n+    };\n }"}, {"sha": "d136bc656b6d62c35978b7f9205f854489f158fb", "filename": "tests/ui/bool_comparison.stderr", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fbool_comparison.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fbool_comparison.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbool_comparison.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,51 +1,51 @@\n error: equality checks against true are unnecessary\n-  --> $DIR/bool_comparison.rs:17:8\n+  --> $DIR/bool_comparison.rs:13:8\n    |\n-17 |     if x == true { \"yes\" } else { \"no\" };\n+13 |     if x == true {\n    |        ^^^^^^^^^ help: try simplifying it as shown: `x`\n    |\n    = note: `-D clippy::bool-comparison` implied by `-D warnings`\n \n error: equality checks against false can be replaced by a negation\n   --> $DIR/bool_comparison.rs:18:8\n    |\n-18 |     if x == false { \"yes\" } else { \"no\" };\n+18 |     if x == false {\n    |        ^^^^^^^^^^ help: try simplifying it as shown: `!x`\n \n error: equality checks against true are unnecessary\n-  --> $DIR/bool_comparison.rs:19:8\n+  --> $DIR/bool_comparison.rs:23:8\n    |\n-19 |     if true == x { \"yes\" } else { \"no\" };\n+23 |     if true == x {\n    |        ^^^^^^^^^ help: try simplifying it as shown: `x`\n \n error: equality checks against false can be replaced by a negation\n-  --> $DIR/bool_comparison.rs:20:8\n+  --> $DIR/bool_comparison.rs:28:8\n    |\n-20 |     if false == x { \"yes\" } else { \"no\" };\n+28 |     if false == x {\n    |        ^^^^^^^^^^ help: try simplifying it as shown: `!x`\n \n error: inequality checks against true can be replaced by a negation\n-  --> $DIR/bool_comparison.rs:21:8\n+  --> $DIR/bool_comparison.rs:33:8\n    |\n-21 |     if x != true { \"yes\" } else { \"no\" };\n+33 |     if x != true {\n    |        ^^^^^^^^^ help: try simplifying it as shown: `!x`\n \n error: inequality checks against false are unnecessary\n-  --> $DIR/bool_comparison.rs:22:8\n+  --> $DIR/bool_comparison.rs:38:8\n    |\n-22 |     if x != false { \"yes\" } else { \"no\" };\n+38 |     if x != false {\n    |        ^^^^^^^^^^ help: try simplifying it as shown: `x`\n \n error: inequality checks against true can be replaced by a negation\n-  --> $DIR/bool_comparison.rs:23:8\n+  --> $DIR/bool_comparison.rs:43:8\n    |\n-23 |     if true != x { \"yes\" } else { \"no\" };\n+43 |     if true != x {\n    |        ^^^^^^^^^ help: try simplifying it as shown: `!x`\n \n error: inequality checks against false are unnecessary\n-  --> $DIR/bool_comparison.rs:24:8\n+  --> $DIR/bool_comparison.rs:48:8\n    |\n-24 |     if false != x { \"yes\" } else { \"no\" };\n+48 |     if false != x {\n    |        ^^^^^^^^^^ help: try simplifying it as shown: `x`\n \n error: aborting due to 8 previous errors"}, {"sha": "8eb1b52577ce12cf41c77081116824c13ece1537", "filename": "tests/ui/booleans.rs", "status": "modified", "additions": 36, "deletions": 19, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fbooleans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fbooleans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbooleans.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![warn(clippy::nonminimal_bool, clippy::logic_bug)]\n \n #[allow(unused, clippy::many_single_char_names)]\n@@ -71,58 +68,78 @@ fn methods_with_negation() {\n // Simplified versions of https://github.com/rust-lang/rust-clippy/issues/2638\n // clippy::nonminimal_bool should only check the built-in Result and Some type, not\n // any other types like the following.\n-enum CustomResultOk<E> { Ok, Err(E) }\n-enum CustomResultErr<E> { Ok, Err(E) }\n-enum CustomSomeSome<T> { Some(T), None }\n-enum CustomSomeNone<T> { Some(T), None }\n+enum CustomResultOk<E> {\n+    Ok,\n+    Err(E),\n+}\n+enum CustomResultErr<E> {\n+    Ok,\n+    Err(E),\n+}\n+enum CustomSomeSome<T> {\n+    Some(T),\n+    None,\n+}\n+enum CustomSomeNone<T> {\n+    Some(T),\n+    None,\n+}\n \n impl<E> CustomResultOk<E> {\n-    pub fn is_ok(&self) -> bool { true }\n+    pub fn is_ok(&self) -> bool {\n+        true\n+    }\n }\n \n impl<E> CustomResultErr<E> {\n-    pub fn is_err(&self) -> bool { true }\n+    pub fn is_err(&self) -> bool {\n+        true\n+    }\n }\n \n impl<T> CustomSomeSome<T> {\n-    pub fn is_some(&self) -> bool { true }\n+    pub fn is_some(&self) -> bool {\n+        true\n+    }\n }\n \n impl<T> CustomSomeNone<T> {\n-    pub fn is_none(&self) -> bool { true }\n+    pub fn is_none(&self) -> bool {\n+        true\n+    }\n }\n \n fn dont_warn_for_custom_methods_with_negation() {\n     let res = CustomResultOk::Err(\"Error\");\n     // Should not warn and suggest 'is_err()' because the type does not\n     // implement is_err().\n-    if !res.is_ok() { }\n+    if !res.is_ok() {}\n \n     let res = CustomResultErr::Err(\"Error\");\n     // Should not warn and suggest 'is_ok()' because the type does not\n     // implement is_ok().\n-    if !res.is_err() { }\n+    if !res.is_err() {}\n \n     let res = CustomSomeSome::Some(\"thing\");\n     // Should not warn and suggest 'is_none()' because the type does not\n     // implement is_none().\n-    if !res.is_some() { }\n+    if !res.is_some() {}\n \n     let res = CustomSomeNone::Some(\"thing\");\n     // Should not warn and suggest 'is_some()' because the type does not\n     // implement is_some().\n-    if !res.is_none() { }\n+    if !res.is_none() {}\n }\n \n // Only Built-in Result and Some types should suggest the negated alternative\n fn warn_for_built_in_methods_with_negation() {\n     let res: Result<usize, usize> = Ok(1);\n-    if !res.is_ok() { }\n-    if !res.is_err() { }\n+    if !res.is_ok() {}\n+    if !res.is_err() {}\n \n     let res = Some(1);\n-    if !res.is_some() { }\n-    if !res.is_none() { }\n+    if !res.is_some() {}\n+    if !res.is_none() {}\n }\n \n #[allow(clippy::neg_cmp_op_on_partial_ord)]"}, {"sha": "45205b978ef65e082ab0da84def4ffebd692f828", "filename": "tests/ui/booleans.stderr", "status": "modified", "additions": 66, "deletions": 66, "changes": 132, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fbooleans.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fbooleans.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbooleans.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,202 +1,202 @@\n error: this boolean expression contains a logic bug\n-  --> $DIR/booleans.rs:22:13\n+  --> $DIR/booleans.rs:19:13\n    |\n-22 |     let _ = a && b || a;\n+19 |     let _ = a && b || a;\n    |             ^^^^^^^^^^^ help: it would look like the following: `a`\n    |\n    = note: `-D clippy::logic-bug` implied by `-D warnings`\n help: this expression can be optimized out by applying boolean operations to the outer expression\n-  --> $DIR/booleans.rs:22:18\n+  --> $DIR/booleans.rs:19:18\n    |\n-22 |     let _ = a && b || a;\n+19 |     let _ = a && b || a;\n    |                  ^\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:24:13\n+  --> $DIR/booleans.rs:21:13\n    |\n-24 |     let _ = !true;\n+21 |     let _ = !true;\n    |             ^^^^^ help: try: `false`\n    |\n    = note: `-D clippy::nonminimal-bool` implied by `-D warnings`\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:25:13\n+  --> $DIR/booleans.rs:22:13\n    |\n-25 |     let _ = !false;\n+22 |     let _ = !false;\n    |             ^^^^^^ help: try: `true`\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:26:13\n+  --> $DIR/booleans.rs:23:13\n    |\n-26 |     let _ = !!a;\n+23 |     let _ = !!a;\n    |             ^^^ help: try: `a`\n \n error: this boolean expression contains a logic bug\n-  --> $DIR/booleans.rs:27:13\n+  --> $DIR/booleans.rs:24:13\n    |\n-27 |     let _ = false && a;\n+24 |     let _ = false && a;\n    |             ^^^^^^^^^^ help: it would look like the following: `false`\n    |\n help: this expression can be optimized out by applying boolean operations to the outer expression\n-  --> $DIR/booleans.rs:27:22\n+  --> $DIR/booleans.rs:24:22\n    |\n-27 |     let _ = false && a;\n+24 |     let _ = false && a;\n    |                      ^\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:28:13\n+  --> $DIR/booleans.rs:25:13\n    |\n-28 |     let _ = false || a;\n+25 |     let _ = false || a;\n    |             ^^^^^^^^^^ help: try: `a`\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:33:13\n+  --> $DIR/booleans.rs:30:13\n    |\n-33 |     let _ = !(!a && b);\n+30 |     let _ = !(!a && b);\n    |             ^^^^^^^^^^ help: try: `!b || a`\n \n error: this boolean expression contains a logic bug\n-  --> $DIR/booleans.rs:43:13\n+  --> $DIR/booleans.rs:40:13\n    |\n-43 |     let _ = a == b && a != b;\n+40 |     let _ = a == b && a != b;\n    |             ^^^^^^^^^^^^^^^^ help: it would look like the following: `false`\n    |\n help: this expression can be optimized out by applying boolean operations to the outer expression\n-  --> $DIR/booleans.rs:43:13\n+  --> $DIR/booleans.rs:40:13\n    |\n-43 |     let _ = a == b && a != b;\n+40 |     let _ = a == b && a != b;\n    |             ^^^^^^\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:44:13\n+  --> $DIR/booleans.rs:41:13\n    |\n-44 |     let _ = a == b && c == 5 && a == b;\n+41 |     let _ = a == b && c == 5 && a == b;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n help: try\n    |\n-44 |     let _ = a == b && c == 5;\n+41 |     let _ = a == b && c == 5;\n    |             ^^^^^^^^^^^^^^^^\n-44 |     let _ = !(c != 5 || a != b);\n+41 |     let _ = !(c != 5 || a != b);\n    |             ^^^^^^^^^^^^^^^^^^^\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:45:13\n+  --> $DIR/booleans.rs:42:13\n    |\n-45 |     let _ = a == b && c == 5 && b == a;\n+42 |     let _ = a == b && c == 5 && b == a;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n help: try\n    |\n-45 |     let _ = a == b && c == 5;\n+42 |     let _ = a == b && c == 5;\n    |             ^^^^^^^^^^^^^^^^\n-45 |     let _ = !(c != 5 || a != b);\n+42 |     let _ = !(c != 5 || a != b);\n    |             ^^^^^^^^^^^^^^^^^^^\n \n error: this boolean expression contains a logic bug\n-  --> $DIR/booleans.rs:46:13\n+  --> $DIR/booleans.rs:43:13\n    |\n-46 |     let _ = a < b && a >= b;\n+43 |     let _ = a < b && a >= b;\n    |             ^^^^^^^^^^^^^^^ help: it would look like the following: `false`\n    |\n help: this expression can be optimized out by applying boolean operations to the outer expression\n-  --> $DIR/booleans.rs:46:13\n+  --> $DIR/booleans.rs:43:13\n    |\n-46 |     let _ = a < b && a >= b;\n+43 |     let _ = a < b && a >= b;\n    |             ^^^^^\n \n error: this boolean expression contains a logic bug\n-  --> $DIR/booleans.rs:47:13\n+  --> $DIR/booleans.rs:44:13\n    |\n-47 |     let _ = a > b && a <= b;\n+44 |     let _ = a > b && a <= b;\n    |             ^^^^^^^^^^^^^^^ help: it would look like the following: `false`\n    |\n help: this expression can be optimized out by applying boolean operations to the outer expression\n-  --> $DIR/booleans.rs:47:13\n+  --> $DIR/booleans.rs:44:13\n    |\n-47 |     let _ = a > b && a <= b;\n+44 |     let _ = a > b && a <= b;\n    |             ^^^^^\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:49:13\n+  --> $DIR/booleans.rs:46:13\n    |\n-49 |     let _ = a != b || !(a != b || c == d);\n+46 |     let _ = a != b || !(a != b || c == d);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n help: try\n    |\n-49 |     let _ = c != d || a != b;\n+46 |     let _ = c != d || a != b;\n    |             ^^^^^^^^^^^^^^^^\n-49 |     let _ = !(a == b && c == d);\n+46 |     let _ = !(a == b && c == d);\n    |             ^^^^^^^^^^^^^^^^^^^\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:57:13\n+  --> $DIR/booleans.rs:54:13\n    |\n-57 |     let _ = !a.is_some();\n+54 |     let _ = !a.is_some();\n    |             ^^^^^^^^^^^^ help: try: `a.is_none()`\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:59:13\n+  --> $DIR/booleans.rs:56:13\n    |\n-59 |     let _ = !a.is_none();\n+56 |     let _ = !a.is_none();\n    |             ^^^^^^^^^^^^ help: try: `a.is_some()`\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:61:13\n+  --> $DIR/booleans.rs:58:13\n    |\n-61 |     let _ = !b.is_err();\n+58 |     let _ = !b.is_err();\n    |             ^^^^^^^^^^^ help: try: `b.is_ok()`\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:63:13\n+  --> $DIR/booleans.rs:60:13\n    |\n-63 |     let _ = !b.is_ok();\n+60 |     let _ = !b.is_ok();\n    |             ^^^^^^^^^^ help: try: `b.is_err()`\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:65:13\n+  --> $DIR/booleans.rs:62:13\n    |\n-65 |     let _ = !(a.is_some() && !c);\n+62 |     let _ = !(a.is_some() && !c);\n    |             ^^^^^^^^^^^^^^^^^^^^ help: try: `c || a.is_none()`\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:66:13\n+  --> $DIR/booleans.rs:63:13\n    |\n-66 |     let _ = !(!c ^ c) || !a.is_some();\n+63 |     let _ = !(!c ^ c) || !a.is_some();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `!(!c ^ c) || a.is_none()`\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:67:13\n+  --> $DIR/booleans.rs:64:13\n    |\n-67 |     let _ = (!c ^ c) || !a.is_some();\n+64 |     let _ = (!c ^ c) || !a.is_some();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(!c ^ c) || a.is_none()`\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:68:13\n+  --> $DIR/booleans.rs:65:13\n    |\n-68 |     let _ = !c ^ c || !a.is_some();\n+65 |     let _ = !c ^ c || !a.is_some();\n    |             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `!c ^ c || a.is_none()`\n \n error: this boolean expression can be simplified\n-   --> $DIR/booleans.rs:120:8\n+   --> $DIR/booleans.rs:137:8\n     |\n-120 |     if !res.is_ok() { }\n+137 |     if !res.is_ok() {}\n     |        ^^^^^^^^^^^^ help: try: `res.is_err()`\n \n error: this boolean expression can be simplified\n-   --> $DIR/booleans.rs:121:8\n+   --> $DIR/booleans.rs:138:8\n     |\n-121 |     if !res.is_err() { }\n+138 |     if !res.is_err() {}\n     |        ^^^^^^^^^^^^^ help: try: `res.is_ok()`\n \n error: this boolean expression can be simplified\n-   --> $DIR/booleans.rs:124:8\n+   --> $DIR/booleans.rs:141:8\n     |\n-124 |     if !res.is_some() { }\n+141 |     if !res.is_some() {}\n     |        ^^^^^^^^^^^^^^ help: try: `res.is_none()`\n \n error: this boolean expression can be simplified\n-   --> $DIR/booleans.rs:125:8\n+   --> $DIR/booleans.rs:142:8\n     |\n-125 |     if !res.is_none() { }\n+142 |     if !res.is_none() {}\n     |        ^^^^^^^^^^^^^^ help: try: `res.is_some()`\n \n error: aborting due to 25 previous errors"}, {"sha": "cf204150f8b1b9a51032c4c2bc61bdf57187b200", "filename": "tests/ui/borrow_box.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fborrow_box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fborrow_box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrow_box.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,10 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #![deny(clippy::borrowed_box)]\n #![allow(clippy::blacklisted_name)]\n #![allow(unused_variables)]\n@@ -25,7 +21,7 @@ pub fn test2() {\n }\n \n struct Test3<'a> {\n-    foo: &'a Box<bool>\n+    foo: &'a Box<bool>,\n }\n \n trait Test4 {\n@@ -49,7 +45,7 @@ pub fn test6() {\n }\n \n struct Test7<'a> {\n-    foo: &'a Box<Any>\n+    foo: &'a Box<Any>,\n }\n \n trait Test8 {\n@@ -71,7 +67,7 @@ pub fn test10() {\n }\n \n struct Test11<'a> {\n-    foo: &'a Box<Any + Send>\n+    foo: &'a Box<Any + Send>,\n }\n \n trait Test12 {\n@@ -84,7 +80,7 @@ impl<'a> Test12 for Test11<'a> {\n     }\n }\n \n-fn main(){\n+fn main() {\n     test1(&mut Box::new(false));\n     test2();\n     test5(&mut (Box::new(false) as Box<Any>));"}, {"sha": "0e42fe177ba970993f440db47bd8fc7b490da4f4", "filename": "tests/ui/borrow_box.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fborrow_box.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fborrow_box.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrow_box.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,31 +1,31 @@\n error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n-  --> $DIR/borrow_box.rs:19:19\n+  --> $DIR/borrow_box.rs:15:19\n    |\n-19 | pub fn test1(foo: &mut Box<bool>) {\n+15 | pub fn test1(foo: &mut Box<bool>) {\n    |                   ^^^^^^^^^^^^^^ help: try: `&mut bool`\n    |\n note: lint level defined here\n-  --> $DIR/borrow_box.rs:14:9\n+  --> $DIR/borrow_box.rs:10:9\n    |\n-14 | #![deny(clippy::borrowed_box)]\n+10 | #![deny(clippy::borrowed_box)]\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n-  --> $DIR/borrow_box.rs:24:14\n+  --> $DIR/borrow_box.rs:20:14\n    |\n-24 |     let foo: &Box<bool>;\n+20 |     let foo: &Box<bool>;\n    |              ^^^^^^^^^^ help: try: `&bool`\n \n error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n-  --> $DIR/borrow_box.rs:28:10\n+  --> $DIR/borrow_box.rs:24:10\n    |\n-28 |     foo: &'a Box<bool>\n+24 |     foo: &'a Box<bool>,\n    |          ^^^^^^^^^^^^^ help: try: `&'a bool`\n \n error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n-  --> $DIR/borrow_box.rs:32:17\n+  --> $DIR/borrow_box.rs:28:17\n    |\n-32 |     fn test4(a: &Box<bool>);\n+28 |     fn test4(a: &Box<bool>);\n    |                 ^^^^^^^^^^ help: try: `&bool`\n \n error: aborting due to 4 previous errors"}, {"sha": "48523054097256fa1f7d026de6e4f9b55c99b529", "filename": "tests/ui/box_vec.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fbox_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fbox_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbox_vec.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,18 +7,14 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #![warn(clippy::all)]\n #![allow(clippy::boxed_local, clippy::needless_pass_by_value)]\n #![allow(clippy::blacklisted_name)]\n \n macro_rules! boxit {\n     ($init:expr, $x:ty) => {\n         let _: Box<$x> = Box::new($init);\n-    }\n+    };\n }\n \n fn test_macro() {\n@@ -28,15 +24,16 @@ pub fn test(foo: Box<Vec<bool>>) {\n     println!(\"{:?}\", foo.get(0))\n }\n \n-pub fn test2(foo: Box<Fn(Vec<u32>)>) { // pass if #31 is fixed\n+pub fn test2(foo: Box<Fn(Vec<u32>)>) {\n+    // pass if #31 is fixed\n     foo(vec![1, 2, 3])\n }\n \n pub fn test_local_not_linted() {\n     let _: Box<Vec<bool>>;\n }\n \n-fn main(){\n+fn main() {\n     test(Box::new(Vec::new()));\n     test2(Box::new(|v| println!(\"{:?}\", v)));\n     test_macro();"}, {"sha": "84c0b6c36e3ce79c104fc7cdc21c0fd35c70792c", "filename": "tests/ui/box_vec.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fbox_vec.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fbox_vec.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbox_vec.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,7 +1,7 @@\n error: you seem to be trying to use `Box<Vec<T>>`. Consider using just `Vec<T>`\n-  --> $DIR/box_vec.rs:27:18\n+  --> $DIR/box_vec.rs:23:18\n    |\n-27 | pub fn test(foo: Box<Vec<bool>>) {\n+23 | pub fn test(foo: Box<Vec<bool>>) {\n    |                  ^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::box-vec` implied by `-D warnings`"}, {"sha": "66a7e318f8af5f6f2ce205d70e49b236ad27946d", "filename": "tests/ui/builtin-type-shadow.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fbuiltin-type-shadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fbuiltin-type-shadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbuiltin-type-shadow.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,15 +7,11 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![warn(clippy::builtin_type_shadow)]\n \n fn foo<u32>(a: u32) -> u32 {\n     42\n     // ^ rustc's type error\n }\n \n-fn main() {\n-}\n+fn main() {}"}, {"sha": "540d9f4f45849546cc598b173b3514736764804f", "filename": "tests/ui/builtin-type-shadow.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fbuiltin-type-shadow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fbuiltin-type-shadow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbuiltin-type-shadow.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,17 +1,17 @@\n error: This generic shadows the built-in type `u32`\n-  --> $DIR/builtin-type-shadow.rs:15:8\n+  --> $DIR/builtin-type-shadow.rs:12:8\n    |\n-15 | fn foo<u32>(a: u32) -> u32 {\n+12 | fn foo<u32>(a: u32) -> u32 {\n    |        ^^^\n    |\n    = note: `-D clippy::builtin-type-shadow` implied by `-D warnings`\n \n error[E0308]: mismatched types\n-  --> $DIR/builtin-type-shadow.rs:16:5\n+  --> $DIR/builtin-type-shadow.rs:13:5\n    |\n-15 | fn foo<u32>(a: u32) -> u32 {\n+12 | fn foo<u32>(a: u32) -> u32 {\n    |                        --- expected `u32` because of return type\n-16 |     42\n+13 |     42\n    |     ^^ expected type parameter, found integral variable\n    |\n    = note: expected type `u32`"}, {"sha": "6bc9b5ddecd03ee6bd2ddb87eccd77d27a5934d2", "filename": "tests/ui/bytecount.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fbytecount.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fbytecount.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbytecount.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,10 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #[deny(clippy::naive_bytecount)]\n fn main() {\n     let x = vec![0_u8; 16];"}, {"sha": "605cf287419dd78cb395625d26420245aeabb52e", "filename": "tests/ui/bytecount.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fbytecount.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fbytecount.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbytecount.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,25 +1,25 @@\n error: You appear to be counting bytes the naive way\n-  --> $DIR/bytecount.rs:18:13\n+  --> $DIR/bytecount.rs:14:13\n    |\n-18 |     let _ = x.iter().filter(|&&a| a == 0).count(); // naive byte count\n+14 |     let _ = x.iter().filter(|&&a| a == 0).count(); // naive byte count\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: Consider using the bytecount crate: `bytecount::count(x, 0)`\n    |\n note: lint level defined here\n-  --> $DIR/bytecount.rs:14:8\n+  --> $DIR/bytecount.rs:10:8\n    |\n-14 | #[deny(clippy::naive_bytecount)]\n+10 | #[deny(clippy::naive_bytecount)]\n    |        ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: You appear to be counting bytes the naive way\n-  --> $DIR/bytecount.rs:20:13\n+  --> $DIR/bytecount.rs:16:13\n    |\n-20 |     let _ = (&x[..]).iter().filter(|&a| *a == 0).count(); // naive byte count\n+16 |     let _ = (&x[..]).iter().filter(|&a| *a == 0).count(); // naive byte count\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: Consider using the bytecount crate: `bytecount::count((&x[..]), 0)`\n \n error: You appear to be counting bytes the naive way\n-  --> $DIR/bytecount.rs:32:13\n+  --> $DIR/bytecount.rs:28:13\n    |\n-32 |     let _ = x.iter().filter(|a| b + 1 == **a).count(); // naive byte count\n+28 |     let _ = x.iter().filter(|a| b + 1 == **a).count(); // naive byte count\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: Consider using the bytecount crate: `bytecount::count(x, b + 1)`\n \n error: aborting due to 3 previous errors"}, {"sha": "51e41b701724089606f97fef06e0831ee0c5f9fc", "filename": "tests/ui/cast.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,11 +7,13 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n-#[warn(clippy::cast_precision_loss, clippy::cast_possible_truncation, clippy::cast_sign_loss, clippy::cast_possible_wrap, clippy::cast_lossless)]\n+#[warn(\n+    clippy::cast_precision_loss,\n+    clippy::cast_possible_truncation,\n+    clippy::cast_sign_loss,\n+    clippy::cast_possible_wrap,\n+    clippy::cast_lossless\n+)]\n #[allow(clippy::no_effect, clippy::unnecessary_operation)]\n fn main() {\n     // Test clippy::cast_precision_loss\n@@ -49,6 +51,7 @@ fn main() {\n     false as bool;\n     &1i32 as &i32;\n     // Should not trigger\n+    #[rustfmt::skip]\n     let v = vec!(1);\n     &v as &[i32];\n     1.0 as f64;"}, {"sha": "1b6b1e6319cd7b75ce388c7f304c0d21af88df92", "filename": "tests/ui/cast.stderr", "status": "modified", "additions": 56, "deletions": 56, "changes": 112, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,181 +1,181 @@\n error: casting i32 to f32 causes a loss of precision (i32 is 32 bits wide, but f32's mantissa is only 23 bits wide)\n-  --> $DIR/cast.rs:18:5\n+  --> $DIR/cast.rs:20:5\n    |\n-18 |     1i32 as f32;\n+20 |     1i32 as f32;\n    |     ^^^^^^^^^^^\n    |\n    = note: `-D clippy::cast-precision-loss` implied by `-D warnings`\n \n error: casting i64 to f32 causes a loss of precision (i64 is 64 bits wide, but f32's mantissa is only 23 bits wide)\n-  --> $DIR/cast.rs:19:5\n+  --> $DIR/cast.rs:21:5\n    |\n-19 |     1i64 as f32;\n+21 |     1i64 as f32;\n    |     ^^^^^^^^^^^\n \n error: casting i64 to f64 causes a loss of precision (i64 is 64 bits wide, but f64's mantissa is only 52 bits wide)\n-  --> $DIR/cast.rs:20:5\n+  --> $DIR/cast.rs:22:5\n    |\n-20 |     1i64 as f64;\n+22 |     1i64 as f64;\n    |     ^^^^^^^^^^^\n \n error: casting u32 to f32 causes a loss of precision (u32 is 32 bits wide, but f32's mantissa is only 23 bits wide)\n-  --> $DIR/cast.rs:21:5\n+  --> $DIR/cast.rs:23:5\n    |\n-21 |     1u32 as f32;\n+23 |     1u32 as f32;\n    |     ^^^^^^^^^^^\n \n error: casting u64 to f32 causes a loss of precision (u64 is 64 bits wide, but f32's mantissa is only 23 bits wide)\n-  --> $DIR/cast.rs:22:5\n+  --> $DIR/cast.rs:24:5\n    |\n-22 |     1u64 as f32;\n+24 |     1u64 as f32;\n    |     ^^^^^^^^^^^\n \n error: casting u64 to f64 causes a loss of precision (u64 is 64 bits wide, but f64's mantissa is only 52 bits wide)\n-  --> $DIR/cast.rs:23:5\n+  --> $DIR/cast.rs:25:5\n    |\n-23 |     1u64 as f64;\n+25 |     1u64 as f64;\n    |     ^^^^^^^^^^^\n \n error: casting f32 to i32 may truncate the value\n-  --> $DIR/cast.rs:25:5\n+  --> $DIR/cast.rs:27:5\n    |\n-25 |     1f32 as i32;\n+27 |     1f32 as i32;\n    |     ^^^^^^^^^^^\n    |\n    = note: `-D clippy::cast-possible-truncation` implied by `-D warnings`\n \n error: casting f32 to u32 may truncate the value\n-  --> $DIR/cast.rs:26:5\n+  --> $DIR/cast.rs:28:5\n    |\n-26 |     1f32 as u32;\n+28 |     1f32 as u32;\n    |     ^^^^^^^^^^^\n \n error: casting f32 to u32 may lose the sign of the value\n-  --> $DIR/cast.rs:26:5\n+  --> $DIR/cast.rs:28:5\n    |\n-26 |     1f32 as u32;\n+28 |     1f32 as u32;\n    |     ^^^^^^^^^^^\n    |\n    = note: `-D clippy::cast-sign-loss` implied by `-D warnings`\n \n error: casting f64 to f32 may truncate the value\n-  --> $DIR/cast.rs:27:5\n+  --> $DIR/cast.rs:29:5\n    |\n-27 |     1f64 as f32;\n+29 |     1f64 as f32;\n    |     ^^^^^^^^^^^\n \n error: casting i32 to i8 may truncate the value\n-  --> $DIR/cast.rs:28:5\n+  --> $DIR/cast.rs:30:5\n    |\n-28 |     1i32 as i8;\n+30 |     1i32 as i8;\n    |     ^^^^^^^^^^\n \n error: casting i32 to u8 may lose the sign of the value\n-  --> $DIR/cast.rs:29:5\n+  --> $DIR/cast.rs:31:5\n    |\n-29 |     1i32 as u8;\n+31 |     1i32 as u8;\n    |     ^^^^^^^^^^\n \n error: casting i32 to u8 may truncate the value\n-  --> $DIR/cast.rs:29:5\n+  --> $DIR/cast.rs:31:5\n    |\n-29 |     1i32 as u8;\n+31 |     1i32 as u8;\n    |     ^^^^^^^^^^\n \n error: casting f64 to isize may truncate the value\n-  --> $DIR/cast.rs:30:5\n+  --> $DIR/cast.rs:32:5\n    |\n-30 |     1f64 as isize;\n+32 |     1f64 as isize;\n    |     ^^^^^^^^^^^^^\n \n error: casting f64 to usize may truncate the value\n-  --> $DIR/cast.rs:31:5\n+  --> $DIR/cast.rs:33:5\n    |\n-31 |     1f64 as usize;\n+33 |     1f64 as usize;\n    |     ^^^^^^^^^^^^^\n \n error: casting f64 to usize may lose the sign of the value\n-  --> $DIR/cast.rs:31:5\n+  --> $DIR/cast.rs:33:5\n    |\n-31 |     1f64 as usize;\n+33 |     1f64 as usize;\n    |     ^^^^^^^^^^^^^\n \n error: casting u8 to i8 may wrap around the value\n-  --> $DIR/cast.rs:33:5\n+  --> $DIR/cast.rs:35:5\n    |\n-33 |     1u8 as i8;\n+35 |     1u8 as i8;\n    |     ^^^^^^^^^\n    |\n    = note: `-D clippy::cast-possible-wrap` implied by `-D warnings`\n \n error: casting u16 to i16 may wrap around the value\n-  --> $DIR/cast.rs:34:5\n+  --> $DIR/cast.rs:36:5\n    |\n-34 |     1u16 as i16;\n+36 |     1u16 as i16;\n    |     ^^^^^^^^^^^\n \n error: casting u32 to i32 may wrap around the value\n-  --> $DIR/cast.rs:35:5\n+  --> $DIR/cast.rs:37:5\n    |\n-35 |     1u32 as i32;\n+37 |     1u32 as i32;\n    |     ^^^^^^^^^^^\n \n error: casting u64 to i64 may wrap around the value\n-  --> $DIR/cast.rs:36:5\n+  --> $DIR/cast.rs:38:5\n    |\n-36 |     1u64 as i64;\n+38 |     1u64 as i64;\n    |     ^^^^^^^^^^^\n \n error: casting usize to isize may wrap around the value\n-  --> $DIR/cast.rs:37:5\n+  --> $DIR/cast.rs:39:5\n    |\n-37 |     1usize as isize;\n+39 |     1usize as isize;\n    |     ^^^^^^^^^^^^^^^\n \n error: casting f32 to f64 may become silently lossy if types change\n-  --> $DIR/cast.rs:39:5\n+  --> $DIR/cast.rs:41:5\n    |\n-39 |     1.0f32 as f64;\n+41 |     1.0f32 as f64;\n    |     ^^^^^^^^^^^^^ help: try: `f64::from(1.0f32)`\n    |\n    = note: `-D clippy::cast-lossless` implied by `-D warnings`\n \n error: casting u8 to u16 may become silently lossy if types change\n-  --> $DIR/cast.rs:41:5\n+  --> $DIR/cast.rs:43:5\n    |\n-41 |     (1u8 + 1u8) as u16;\n+43 |     (1u8 + 1u8) as u16;\n    |     ^^^^^^^^^^^^^^^^^^ help: try: `u16::from(1u8 + 1u8)`\n \n error: casting i32 to u32 may lose the sign of the value\n-  --> $DIR/cast.rs:43:5\n+  --> $DIR/cast.rs:45:5\n    |\n-43 |     1i32 as u32;\n+45 |     1i32 as u32;\n    |     ^^^^^^^^^^^\n \n error: casting isize to usize may lose the sign of the value\n-  --> $DIR/cast.rs:44:5\n+  --> $DIR/cast.rs:46:5\n    |\n-44 |     1isize as usize;\n+46 |     1isize as usize;\n    |     ^^^^^^^^^^^^^^^\n \n error: casting to the same type is unnecessary (`i32` -> `i32`)\n-  --> $DIR/cast.rs:47:5\n+  --> $DIR/cast.rs:49:5\n    |\n-47 |     1i32 as i32;\n+49 |     1i32 as i32;\n    |     ^^^^^^^^^^^\n    |\n    = note: `-D clippy::unnecessary-cast` implied by `-D warnings`\n \n error: casting to the same type is unnecessary (`f32` -> `f32`)\n-  --> $DIR/cast.rs:48:5\n+  --> $DIR/cast.rs:50:5\n    |\n-48 |     1f32 as f32;\n+50 |     1f32 as f32;\n    |     ^^^^^^^^^^^\n \n error: casting to the same type is unnecessary (`bool` -> `bool`)\n-  --> $DIR/cast.rs:49:5\n+  --> $DIR/cast.rs:51:5\n    |\n-49 |     false as bool;\n+51 |     false as bool;\n    |     ^^^^^^^^^^^^^\n \n error: aborting due to 28 previous errors"}, {"sha": "efc56ea2bbc131d9ffda9b59c973ab6a252b14e3", "filename": "tests/ui/cast_alignment.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcast_alignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcast_alignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_alignment.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n //! Test casts for alignment issues\n \n #![feature(libc)]"}, {"sha": "1c7d53c3ce7083bc2825ec1477e9b0ec092d3695", "filename": "tests/ui/cast_alignment.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcast_alignment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcast_alignment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_alignment.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,15 +1,15 @@\n error: casting from `*const u8` to a more-strictly-aligned pointer (`*const u16`)\n-  --> $DIR/cast_alignment.rs:25:5\n+  --> $DIR/cast_alignment.rs:22:5\n    |\n-25 |     (&1u8 as *const u8) as *const u16;\n+22 |     (&1u8 as *const u8) as *const u16;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::cast-ptr-alignment` implied by `-D warnings`\n \n error: casting from `*mut u8` to a more-strictly-aligned pointer (`*mut u16`)\n-  --> $DIR/cast_alignment.rs:26:5\n+  --> $DIR/cast_alignment.rs:23:5\n    |\n-26 |     (&mut 1u8 as *mut u8) as *mut u16;\n+23 |     (&mut 1u8 as *mut u8) as *mut u16;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 2 previous errors"}, {"sha": "e52a756c003d13de3361699ea47a2454f82c631c", "filename": "tests/ui/cast_lossless_float.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcast_lossless_float.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcast_lossless_float.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_lossless_float.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #[warn(clippy::cast_lossless)]\n #[allow(clippy::no_effect, clippy::unnecessary_operation)]\n fn main() {"}, {"sha": "8380c7c84e237ca649478c665886d4239f1cc9be", "filename": "tests/ui/cast_lossless_float.stderr", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcast_lossless_float.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcast_lossless_float.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_lossless_float.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,63 +1,63 @@\n error: casting i8 to f32 may become silently lossy if types change\n-  --> $DIR/cast_lossless_float.rs:17:5\n+  --> $DIR/cast_lossless_float.rs:14:5\n    |\n-17 |     1i8 as f32;\n+14 |     1i8 as f32;\n    |     ^^^^^^^^^^ help: try: `f32::from(1i8)`\n    |\n    = note: `-D clippy::cast-lossless` implied by `-D warnings`\n \n error: casting i8 to f64 may become silently lossy if types change\n-  --> $DIR/cast_lossless_float.rs:18:5\n+  --> $DIR/cast_lossless_float.rs:15:5\n    |\n-18 |     1i8 as f64;\n+15 |     1i8 as f64;\n    |     ^^^^^^^^^^ help: try: `f64::from(1i8)`\n \n error: casting u8 to f32 may become silently lossy if types change\n-  --> $DIR/cast_lossless_float.rs:19:5\n+  --> $DIR/cast_lossless_float.rs:16:5\n    |\n-19 |     1u8 as f32;\n+16 |     1u8 as f32;\n    |     ^^^^^^^^^^ help: try: `f32::from(1u8)`\n \n error: casting u8 to f64 may become silently lossy if types change\n-  --> $DIR/cast_lossless_float.rs:20:5\n+  --> $DIR/cast_lossless_float.rs:17:5\n    |\n-20 |     1u8 as f64;\n+17 |     1u8 as f64;\n    |     ^^^^^^^^^^ help: try: `f64::from(1u8)`\n \n error: casting i16 to f32 may become silently lossy if types change\n-  --> $DIR/cast_lossless_float.rs:21:5\n+  --> $DIR/cast_lossless_float.rs:18:5\n    |\n-21 |     1i16 as f32;\n+18 |     1i16 as f32;\n    |     ^^^^^^^^^^^ help: try: `f32::from(1i16)`\n \n error: casting i16 to f64 may become silently lossy if types change\n-  --> $DIR/cast_lossless_float.rs:22:5\n+  --> $DIR/cast_lossless_float.rs:19:5\n    |\n-22 |     1i16 as f64;\n+19 |     1i16 as f64;\n    |     ^^^^^^^^^^^ help: try: `f64::from(1i16)`\n \n error: casting u16 to f32 may become silently lossy if types change\n-  --> $DIR/cast_lossless_float.rs:23:5\n+  --> $DIR/cast_lossless_float.rs:20:5\n    |\n-23 |     1u16 as f32;\n+20 |     1u16 as f32;\n    |     ^^^^^^^^^^^ help: try: `f32::from(1u16)`\n \n error: casting u16 to f64 may become silently lossy if types change\n-  --> $DIR/cast_lossless_float.rs:24:5\n+  --> $DIR/cast_lossless_float.rs:21:5\n    |\n-24 |     1u16 as f64;\n+21 |     1u16 as f64;\n    |     ^^^^^^^^^^^ help: try: `f64::from(1u16)`\n \n error: casting i32 to f64 may become silently lossy if types change\n-  --> $DIR/cast_lossless_float.rs:25:5\n+  --> $DIR/cast_lossless_float.rs:22:5\n    |\n-25 |     1i32 as f64;\n+22 |     1i32 as f64;\n    |     ^^^^^^^^^^^ help: try: `f64::from(1i32)`\n \n error: casting u32 to f64 may become silently lossy if types change\n-  --> $DIR/cast_lossless_float.rs:26:5\n+  --> $DIR/cast_lossless_float.rs:23:5\n    |\n-26 |     1u32 as f64;\n+23 |     1u32 as f64;\n    |     ^^^^^^^^^^^ help: try: `f64::from(1u32)`\n \n error: aborting due to 10 previous errors"}, {"sha": "593ffdd276634e5ca0b7aae3943f7d25a8ed76d3", "filename": "tests/ui/cast_lossless_integer.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcast_lossless_integer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcast_lossless_integer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_lossless_integer.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,8 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n #[warn(clippy::cast_lossless)]\n #[allow(clippy::no_effect, clippy::unnecessary_operation)]\n fn main() {"}, {"sha": "e5558b66681f5ac77eb289371776e37e0c2c46c5", "filename": "tests/ui/cast_lossless_integer.stderr", "status": "modified", "additions": 36, "deletions": 36, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcast_lossless_integer.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcast_lossless_integer.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_lossless_integer.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,111 +1,111 @@\n error: casting i8 to i16 may become silently lossy if types change\n-  --> $DIR/cast_lossless_integer.rs:16:5\n+  --> $DIR/cast_lossless_integer.rs:14:5\n    |\n-16 |     1i8 as i16;\n+14 |     1i8 as i16;\n    |     ^^^^^^^^^^ help: try: `i16::from(1i8)`\n    |\n    = note: `-D clippy::cast-lossless` implied by `-D warnings`\n \n error: casting i8 to i32 may become silently lossy if types change\n-  --> $DIR/cast_lossless_integer.rs:17:5\n+  --> $DIR/cast_lossless_integer.rs:15:5\n    |\n-17 |     1i8 as i32;\n+15 |     1i8 as i32;\n    |     ^^^^^^^^^^ help: try: `i32::from(1i8)`\n \n error: casting i8 to i64 may become silently lossy if types change\n-  --> $DIR/cast_lossless_integer.rs:18:5\n+  --> $DIR/cast_lossless_integer.rs:16:5\n    |\n-18 |     1i8 as i64;\n+16 |     1i8 as i64;\n    |     ^^^^^^^^^^ help: try: `i64::from(1i8)`\n \n error: casting u8 to i16 may become silently lossy if types change\n-  --> $DIR/cast_lossless_integer.rs:19:5\n+  --> $DIR/cast_lossless_integer.rs:17:5\n    |\n-19 |     1u8 as i16;\n+17 |     1u8 as i16;\n    |     ^^^^^^^^^^ help: try: `i16::from(1u8)`\n \n error: casting u8 to i32 may become silently lossy if types change\n-  --> $DIR/cast_lossless_integer.rs:20:5\n+  --> $DIR/cast_lossless_integer.rs:18:5\n    |\n-20 |     1u8 as i32;\n+18 |     1u8 as i32;\n    |     ^^^^^^^^^^ help: try: `i32::from(1u8)`\n \n error: casting u8 to i64 may become silently lossy if types change\n-  --> $DIR/cast_lossless_integer.rs:21:5\n+  --> $DIR/cast_lossless_integer.rs:19:5\n    |\n-21 |     1u8 as i64;\n+19 |     1u8 as i64;\n    |     ^^^^^^^^^^ help: try: `i64::from(1u8)`\n \n error: casting u8 to u16 may become silently lossy if types change\n-  --> $DIR/cast_lossless_integer.rs:22:5\n+  --> $DIR/cast_lossless_integer.rs:20:5\n    |\n-22 |     1u8 as u16;\n+20 |     1u8 as u16;\n    |     ^^^^^^^^^^ help: try: `u16::from(1u8)`\n \n error: casting u8 to u32 may become silently lossy if types change\n-  --> $DIR/cast_lossless_integer.rs:23:5\n+  --> $DIR/cast_lossless_integer.rs:21:5\n    |\n-23 |     1u8 as u32;\n+21 |     1u8 as u32;\n    |     ^^^^^^^^^^ help: try: `u32::from(1u8)`\n \n error: casting u8 to u64 may become silently lossy if types change\n-  --> $DIR/cast_lossless_integer.rs:24:5\n+  --> $DIR/cast_lossless_integer.rs:22:5\n    |\n-24 |     1u8 as u64;\n+22 |     1u8 as u64;\n    |     ^^^^^^^^^^ help: try: `u64::from(1u8)`\n \n error: casting i16 to i32 may become silently lossy if types change\n-  --> $DIR/cast_lossless_integer.rs:25:5\n+  --> $DIR/cast_lossless_integer.rs:23:5\n    |\n-25 |     1i16 as i32;\n+23 |     1i16 as i32;\n    |     ^^^^^^^^^^^ help: try: `i32::from(1i16)`\n \n error: casting i16 to i64 may become silently lossy if types change\n-  --> $DIR/cast_lossless_integer.rs:26:5\n+  --> $DIR/cast_lossless_integer.rs:24:5\n    |\n-26 |     1i16 as i64;\n+24 |     1i16 as i64;\n    |     ^^^^^^^^^^^ help: try: `i64::from(1i16)`\n \n error: casting u16 to i32 may become silently lossy if types change\n-  --> $DIR/cast_lossless_integer.rs:27:5\n+  --> $DIR/cast_lossless_integer.rs:25:5\n    |\n-27 |     1u16 as i32;\n+25 |     1u16 as i32;\n    |     ^^^^^^^^^^^ help: try: `i32::from(1u16)`\n \n error: casting u16 to i64 may become silently lossy if types change\n-  --> $DIR/cast_lossless_integer.rs:28:5\n+  --> $DIR/cast_lossless_integer.rs:26:5\n    |\n-28 |     1u16 as i64;\n+26 |     1u16 as i64;\n    |     ^^^^^^^^^^^ help: try: `i64::from(1u16)`\n \n error: casting u16 to u32 may become silently lossy if types change\n-  --> $DIR/cast_lossless_integer.rs:29:5\n+  --> $DIR/cast_lossless_integer.rs:27:5\n    |\n-29 |     1u16 as u32;\n+27 |     1u16 as u32;\n    |     ^^^^^^^^^^^ help: try: `u32::from(1u16)`\n \n error: casting u16 to u64 may become silently lossy if types change\n-  --> $DIR/cast_lossless_integer.rs:30:5\n+  --> $DIR/cast_lossless_integer.rs:28:5\n    |\n-30 |     1u16 as u64;\n+28 |     1u16 as u64;\n    |     ^^^^^^^^^^^ help: try: `u64::from(1u16)`\n \n error: casting i32 to i64 may become silently lossy if types change\n-  --> $DIR/cast_lossless_integer.rs:31:5\n+  --> $DIR/cast_lossless_integer.rs:29:5\n    |\n-31 |     1i32 as i64;\n+29 |     1i32 as i64;\n    |     ^^^^^^^^^^^ help: try: `i64::from(1i32)`\n \n error: casting u32 to i64 may become silently lossy if types change\n-  --> $DIR/cast_lossless_integer.rs:32:5\n+  --> $DIR/cast_lossless_integer.rs:30:5\n    |\n-32 |     1u32 as i64;\n+30 |     1u32 as i64;\n    |     ^^^^^^^^^^^ help: try: `i64::from(1u32)`\n \n error: casting u32 to u64 may become silently lossy if types change\n-  --> $DIR/cast_lossless_integer.rs:33:5\n+  --> $DIR/cast_lossless_integer.rs:31:5\n    |\n-33 |     1u32 as u64;\n+31 |     1u32 as u64;\n    |     ^^^^^^^^^^^ help: try: `u64::from(1u32)`\n \n error: aborting due to 18 previous errors"}, {"sha": "8f691104c517e6e8f829ee1452ff7d6b5afbe92c", "filename": "tests/ui/cast_size.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcast_size.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcast_size.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_size.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,10 +7,13 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-#[warn(clippy::cast_precision_loss, clippy::cast_possible_truncation, clippy::cast_sign_loss, clippy::cast_possible_wrap, clippy::cast_lossless)]\n+#[warn(\n+    clippy::cast_precision_loss,\n+    clippy::cast_possible_truncation,\n+    clippy::cast_sign_loss,\n+    clippy::cast_possible_wrap,\n+    clippy::cast_lossless\n+)]\n #[allow(clippy::no_effect, clippy::unnecessary_operation)]\n fn main() {\n     // Casting from *size"}, {"sha": "9f658d40523671eeae46f16be0031c09ae02d7b2", "filename": "tests/ui/cast_size.stderr", "status": "modified", "additions": 38, "deletions": 38, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcast_size.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcast_size.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_size.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,123 +1,123 @@\n error: casting isize to i8 may truncate the value\n-  --> $DIR/cast_size.rs:17:5\n+  --> $DIR/cast_size.rs:20:5\n    |\n-17 |     1isize as i8;\n+20 |     1isize as i8;\n    |     ^^^^^^^^^^^^\n    |\n    = note: `-D clippy::cast-possible-truncation` implied by `-D warnings`\n \n error: casting isize to f64 causes a loss of precision on targets with 64-bit wide pointers (isize is 64 bits wide, but f64's mantissa is only 52 bits wide)\n-  --> $DIR/cast_size.rs:18:5\n+  --> $DIR/cast_size.rs:21:5\n    |\n-18 |     1isize as f64;\n+21 |     1isize as f64;\n    |     ^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::cast-precision-loss` implied by `-D warnings`\n \n error: casting usize to f64 causes a loss of precision on targets with 64-bit wide pointers (usize is 64 bits wide, but f64's mantissa is only 52 bits wide)\n-  --> $DIR/cast_size.rs:19:5\n+  --> $DIR/cast_size.rs:22:5\n    |\n-19 |     1usize as f64;\n+22 |     1usize as f64;\n    |     ^^^^^^^^^^^^^\n \n error: casting isize to f32 causes a loss of precision (isize is 32 or 64 bits wide, but f32's mantissa is only 23 bits wide)\n-  --> $DIR/cast_size.rs:20:5\n+  --> $DIR/cast_size.rs:23:5\n    |\n-20 |     1isize as f32;\n+23 |     1isize as f32;\n    |     ^^^^^^^^^^^^^\n \n error: casting usize to f32 causes a loss of precision (usize is 32 or 64 bits wide, but f32's mantissa is only 23 bits wide)\n-  --> $DIR/cast_size.rs:21:5\n+  --> $DIR/cast_size.rs:24:5\n    |\n-21 |     1usize as f32;\n+24 |     1usize as f32;\n    |     ^^^^^^^^^^^^^\n \n error: casting isize to i32 may truncate the value on targets with 64-bit wide pointers\n-  --> $DIR/cast_size.rs:22:5\n+  --> $DIR/cast_size.rs:25:5\n    |\n-22 |     1isize as i32;\n+25 |     1isize as i32;\n    |     ^^^^^^^^^^^^^\n \n error: casting isize to u32 may lose the sign of the value\n-  --> $DIR/cast_size.rs:23:5\n+  --> $DIR/cast_size.rs:26:5\n    |\n-23 |     1isize as u32;\n+26 |     1isize as u32;\n    |     ^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::cast-sign-loss` implied by `-D warnings`\n \n error: casting isize to u32 may truncate the value on targets with 64-bit wide pointers\n-  --> $DIR/cast_size.rs:23:5\n+  --> $DIR/cast_size.rs:26:5\n    |\n-23 |     1isize as u32;\n+26 |     1isize as u32;\n    |     ^^^^^^^^^^^^^\n \n error: casting usize to u32 may truncate the value on targets with 64-bit wide pointers\n-  --> $DIR/cast_size.rs:24:5\n+  --> $DIR/cast_size.rs:27:5\n    |\n-24 |     1usize as u32;\n+27 |     1usize as u32;\n    |     ^^^^^^^^^^^^^\n \n error: casting usize to i32 may truncate the value on targets with 64-bit wide pointers\n-  --> $DIR/cast_size.rs:25:5\n+  --> $DIR/cast_size.rs:28:5\n    |\n-25 |     1usize as i32;\n+28 |     1usize as i32;\n    |     ^^^^^^^^^^^^^\n \n error: casting usize to i32 may wrap around the value on targets with 32-bit wide pointers\n-  --> $DIR/cast_size.rs:25:5\n+  --> $DIR/cast_size.rs:28:5\n    |\n-25 |     1usize as i32;\n+28 |     1usize as i32;\n    |     ^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::cast-possible-wrap` implied by `-D warnings`\n \n error: casting i64 to isize may truncate the value on targets with 32-bit wide pointers\n-  --> $DIR/cast_size.rs:27:5\n+  --> $DIR/cast_size.rs:30:5\n    |\n-27 |     1i64 as isize;\n+30 |     1i64 as isize;\n    |     ^^^^^^^^^^^^^\n \n error: casting i64 to usize may lose the sign of the value\n-  --> $DIR/cast_size.rs:28:5\n+  --> $DIR/cast_size.rs:31:5\n    |\n-28 |     1i64 as usize;\n+31 |     1i64 as usize;\n    |     ^^^^^^^^^^^^^\n \n error: casting i64 to usize may truncate the value on targets with 32-bit wide pointers\n-  --> $DIR/cast_size.rs:28:5\n+  --> $DIR/cast_size.rs:31:5\n    |\n-28 |     1i64 as usize;\n+31 |     1i64 as usize;\n    |     ^^^^^^^^^^^^^\n \n error: casting u64 to isize may truncate the value on targets with 32-bit wide pointers\n-  --> $DIR/cast_size.rs:29:5\n+  --> $DIR/cast_size.rs:32:5\n    |\n-29 |     1u64 as isize;\n+32 |     1u64 as isize;\n    |     ^^^^^^^^^^^^^\n \n error: casting u64 to isize may wrap around the value on targets with 64-bit wide pointers\n-  --> $DIR/cast_size.rs:29:5\n+  --> $DIR/cast_size.rs:32:5\n    |\n-29 |     1u64 as isize;\n+32 |     1u64 as isize;\n    |     ^^^^^^^^^^^^^\n \n error: casting u64 to usize may truncate the value on targets with 32-bit wide pointers\n-  --> $DIR/cast_size.rs:30:5\n+  --> $DIR/cast_size.rs:33:5\n    |\n-30 |     1u64 as usize;\n+33 |     1u64 as usize;\n    |     ^^^^^^^^^^^^^\n \n error: casting u32 to isize may wrap around the value on targets with 32-bit wide pointers\n-  --> $DIR/cast_size.rs:31:5\n+  --> $DIR/cast_size.rs:34:5\n    |\n-31 |     1u32 as isize;\n+34 |     1u32 as isize;\n    |     ^^^^^^^^^^^^^\n \n error: casting i32 to usize may lose the sign of the value\n-  --> $DIR/cast_size.rs:34:5\n+  --> $DIR/cast_size.rs:37:5\n    |\n-34 |     1i32 as usize;\n+37 |     1i32 as usize;\n    |     ^^^^^^^^^^^^^\n \n error: aborting due to 19 previous errors"}, {"sha": "663962afeaef491a77af6b663be5636a0e2ab29d", "filename": "tests/ui/char_lit_as_u8.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fchar_lit_as_u8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fchar_lit_as_u8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchar_lit_as_u8.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,10 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #![warn(clippy::char_lit_as_u8)]\n #![allow(unused_variables)]\n fn main() {"}, {"sha": "cee27df2a7df20b3e0c9bfd55670e25667075c7e", "filename": "tests/ui/char_lit_as_u8.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fchar_lit_as_u8.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fchar_lit_as_u8.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchar_lit_as_u8.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,7 +1,7 @@\n error: casting character literal to u8. `char`s are 4 bytes wide in rust, so casting to u8 truncates them\n-  --> $DIR/char_lit_as_u8.rs:17:13\n+  --> $DIR/char_lit_as_u8.rs:13:13\n    |\n-17 |     let c = 'a' as u8;\n+13 |     let c = 'a' as u8;\n    |             ^^^^^^^^^\n    |\n    = note: `-D clippy::char-lit-as-u8` implied by `-D warnings`"}, {"sha": "4d250a80e903affc7f948f99fbc827489ed07830", "filename": "tests/ui/checked_unwrap.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fchecked_unwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fchecked_unwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchecked_unwrap.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]\n #![allow(clippy::if_same_then_else)]\n \n@@ -43,11 +40,11 @@ fn main() {\n     if x.is_ok() {\n         x = Err(());\n         x.unwrap(); // not unnecessary because of mutation of x\n-        // it will always panic but the lint is not smart enough to see this (it only checks if conditions).\n+                    // it will always panic but the lint is not smart enough to see this (it only checks if conditions).\n     } else {\n         x = Ok(());\n         x.unwrap_err(); // not unnecessary because of mutation of x\n-        // it will always panic but the lint is not smart enough to see this (it only checks if conditions).\n+                        // it will always panic but the lint is not smart enough to see this (it only checks if conditions).\n     }\n }\n "}, {"sha": "bce37d5022684a786a94cd1394f7391ea897e2de", "filename": "tests/ui/checked_unwrap.stderr", "status": "modified", "additions": 113, "deletions": 113, "changes": 226, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fchecked_unwrap.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fchecked_unwrap.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchecked_unwrap.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,312 +1,312 @@\n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:19:9\n+  --> $DIR/checked_unwrap.rs:16:9\n    |\n-18 |     if x.is_some() {\n+15 |     if x.is_some() {\n    |        ----------- the check is happening here\n-19 |         x.unwrap(); // unnecessary\n+16 |         x.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n    |\n note: lint level defined here\n-  --> $DIR/checked_unwrap.rs:13:35\n+  --> $DIR/checked_unwrap.rs:10:35\n    |\n-13 | #![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]\n+10 | #![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:21:9\n+  --> $DIR/checked_unwrap.rs:18:9\n    |\n-18 |     if x.is_some() {\n+15 |     if x.is_some() {\n    |        ----------- because of this check\n ...\n-21 |         x.unwrap(); // will panic\n+18 |         x.unwrap(); // will panic\n    |         ^^^^^^^^^^\n    |\n note: lint level defined here\n-  --> $DIR/checked_unwrap.rs:13:9\n+  --> $DIR/checked_unwrap.rs:10:9\n    |\n-13 | #![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]\n+10 | #![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:24:9\n+  --> $DIR/checked_unwrap.rs:21:9\n    |\n-23 |     if x.is_none() {\n+20 |     if x.is_none() {\n    |        ----------- because of this check\n-24 |         x.unwrap(); // will panic\n+21 |         x.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:26:9\n+  --> $DIR/checked_unwrap.rs:23:9\n    |\n-23 |     if x.is_none() {\n+20 |     if x.is_none() {\n    |        ----------- the check is happening here\n ...\n-26 |         x.unwrap(); // unnecessary\n+23 |         x.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:30:9\n+  --> $DIR/checked_unwrap.rs:27:9\n    |\n-29 |     if x.is_ok() {\n+26 |     if x.is_ok() {\n    |        --------- the check is happening here\n-30 |         x.unwrap(); // unnecessary\n+27 |         x.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n \n error: This call to `unwrap_err()` will always panic.\n-  --> $DIR/checked_unwrap.rs:31:9\n+  --> $DIR/checked_unwrap.rs:28:9\n    |\n-29 |     if x.is_ok() {\n+26 |     if x.is_ok() {\n    |        --------- because of this check\n-30 |         x.unwrap(); // unnecessary\n-31 |         x.unwrap_err(); // will panic\n+27 |         x.unwrap(); // unnecessary\n+28 |         x.unwrap_err(); // will panic\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:33:9\n+  --> $DIR/checked_unwrap.rs:30:9\n    |\n-29 |     if x.is_ok() {\n+26 |     if x.is_ok() {\n    |        --------- because of this check\n ...\n-33 |         x.unwrap(); // will panic\n+30 |         x.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:34:9\n+  --> $DIR/checked_unwrap.rs:31:9\n    |\n-29 |     if x.is_ok() {\n+26 |     if x.is_ok() {\n    |        --------- the check is happening here\n ...\n-34 |         x.unwrap_err(); // unnecessary\n+31 |         x.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:37:9\n+  --> $DIR/checked_unwrap.rs:34:9\n    |\n-36 |     if x.is_err() {\n+33 |     if x.is_err() {\n    |        ---------- because of this check\n-37 |         x.unwrap(); // will panic\n+34 |         x.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:38:9\n+  --> $DIR/checked_unwrap.rs:35:9\n    |\n-36 |     if x.is_err() {\n+33 |     if x.is_err() {\n    |        ---------- the check is happening here\n-37 |         x.unwrap(); // will panic\n-38 |         x.unwrap_err(); // unnecessary\n+34 |         x.unwrap(); // will panic\n+35 |         x.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:40:9\n+  --> $DIR/checked_unwrap.rs:37:9\n    |\n-36 |     if x.is_err() {\n+33 |     if x.is_err() {\n    |        ---------- the check is happening here\n ...\n-40 |         x.unwrap(); // unnecessary\n+37 |         x.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n \n error: This call to `unwrap_err()` will always panic.\n-  --> $DIR/checked_unwrap.rs:41:9\n+  --> $DIR/checked_unwrap.rs:38:9\n    |\n-36 |     if x.is_err() {\n+33 |     if x.is_err() {\n    |        ---------- because of this check\n ...\n-41 |         x.unwrap_err(); // will panic\n+38 |         x.unwrap_err(); // will panic\n    |         ^^^^^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:58:9\n+  --> $DIR/checked_unwrap.rs:55:9\n    |\n-57 |     if x.is_ok() && y.is_err() {\n+54 |     if x.is_ok() && y.is_err() {\n    |        --------- the check is happening here\n-58 |         x.unwrap(); // unnecessary\n+55 |         x.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n \n error: This call to `unwrap_err()` will always panic.\n-  --> $DIR/checked_unwrap.rs:59:9\n+  --> $DIR/checked_unwrap.rs:56:9\n    |\n-57 |     if x.is_ok() && y.is_err() {\n+54 |     if x.is_ok() && y.is_err() {\n    |        --------- because of this check\n-58 |         x.unwrap(); // unnecessary\n-59 |         x.unwrap_err(); // will panic\n+55 |         x.unwrap(); // unnecessary\n+56 |         x.unwrap_err(); // will panic\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:60:9\n+  --> $DIR/checked_unwrap.rs:57:9\n    |\n-57 |     if x.is_ok() && y.is_err() {\n+54 |     if x.is_ok() && y.is_err() {\n    |                     ---------- because of this check\n ...\n-60 |         y.unwrap(); // will panic\n+57 |         y.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:61:9\n+  --> $DIR/checked_unwrap.rs:58:9\n    |\n-57 |     if x.is_ok() && y.is_err() {\n+54 |     if x.is_ok() && y.is_err() {\n    |                     ---------- the check is happening here\n ...\n-61 |         y.unwrap_err(); // unnecessary\n+58 |         y.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:75:9\n+  --> $DIR/checked_unwrap.rs:72:9\n    |\n-70 |     if x.is_ok() || y.is_ok() {\n+67 |     if x.is_ok() || y.is_ok() {\n    |        --------- because of this check\n ...\n-75 |         x.unwrap(); // will panic\n+72 |         x.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:76:9\n+  --> $DIR/checked_unwrap.rs:73:9\n    |\n-70 |     if x.is_ok() || y.is_ok() {\n+67 |     if x.is_ok() || y.is_ok() {\n    |        --------- the check is happening here\n ...\n-76 |         x.unwrap_err(); // unnecessary\n+73 |         x.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:77:9\n+  --> $DIR/checked_unwrap.rs:74:9\n    |\n-70 |     if x.is_ok() || y.is_ok() {\n+67 |     if x.is_ok() || y.is_ok() {\n    |                     --------- because of this check\n ...\n-77 |         y.unwrap(); // will panic\n+74 |         y.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:78:9\n+  --> $DIR/checked_unwrap.rs:75:9\n    |\n-70 |     if x.is_ok() || y.is_ok() {\n+67 |     if x.is_ok() || y.is_ok() {\n    |                     --------- the check is happening here\n ...\n-78 |         y.unwrap_err(); // unnecessary\n+75 |         y.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:82:9\n+  --> $DIR/checked_unwrap.rs:79:9\n    |\n-81 |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n+78 |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n    |        --------- the check is happening here\n-82 |         x.unwrap(); // unnecessary\n+79 |         x.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n \n error: This call to `unwrap_err()` will always panic.\n-  --> $DIR/checked_unwrap.rs:83:9\n+  --> $DIR/checked_unwrap.rs:80:9\n    |\n-81 |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n+78 |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n    |        --------- because of this check\n-82 |         x.unwrap(); // unnecessary\n-83 |         x.unwrap_err(); // will panic\n+79 |         x.unwrap(); // unnecessary\n+80 |         x.unwrap_err(); // will panic\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:84:9\n+  --> $DIR/checked_unwrap.rs:81:9\n    |\n-81 |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n+78 |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n    |                       --------- because of this check\n ...\n-84 |         y.unwrap(); // will panic\n+81 |         y.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:85:9\n+  --> $DIR/checked_unwrap.rs:82:9\n    |\n-81 |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n+78 |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n    |                       --------- the check is happening here\n ...\n-85 |         y.unwrap_err(); // unnecessary\n+82 |         y.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:86:9\n+  --> $DIR/checked_unwrap.rs:83:9\n    |\n-81 |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n+78 |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n    |                                    ---------- the check is happening here\n ...\n-86 |         z.unwrap(); // unnecessary\n+83 |         z.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n \n error: This call to `unwrap_err()` will always panic.\n-  --> $DIR/checked_unwrap.rs:87:9\n+  --> $DIR/checked_unwrap.rs:84:9\n    |\n-81 |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n+78 |     if x.is_ok() && !(y.is_ok() || z.is_err()) {\n    |                                    ---------- because of this check\n ...\n-87 |         z.unwrap_err(); // will panic\n+84 |         z.unwrap_err(); // will panic\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:95:9\n+  --> $DIR/checked_unwrap.rs:92:9\n    |\n-89 |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n+86 |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n    |        --------- because of this check\n ...\n-95 |         x.unwrap(); // will panic\n+92 |         x.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:96:9\n+  --> $DIR/checked_unwrap.rs:93:9\n    |\n-89 |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n+86 |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n    |        --------- the check is happening here\n ...\n-96 |         x.unwrap_err(); // unnecessary\n+93 |         x.unwrap_err(); // unnecessary\n    |         ^^^^^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-  --> $DIR/checked_unwrap.rs:97:9\n+  --> $DIR/checked_unwrap.rs:94:9\n    |\n-89 |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n+86 |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n    |                       --------- the check is happening here\n ...\n-97 |         y.unwrap(); // unnecessary\n+94 |         y.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n \n error: This call to `unwrap_err()` will always panic.\n-  --> $DIR/checked_unwrap.rs:98:9\n+  --> $DIR/checked_unwrap.rs:95:9\n    |\n-89 |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n+86 |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n    |                       --------- because of this check\n ...\n-98 |         y.unwrap_err(); // will panic\n+95 |         y.unwrap_err(); // will panic\n    |         ^^^^^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-  --> $DIR/checked_unwrap.rs:99:9\n+  --> $DIR/checked_unwrap.rs:96:9\n    |\n-89 |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n+86 |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n    |                                    ---------- because of this check\n ...\n-99 |         z.unwrap(); // will panic\n+96 |         z.unwrap(); // will panic\n    |         ^^^^^^^^^^\n \n error: You checked before that `unwrap_err()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-   --> $DIR/checked_unwrap.rs:100:9\n-    |\n-89  |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n-    |                                    ---------- the check is happening here\n+  --> $DIR/checked_unwrap.rs:97:9\n+   |\n+86 |     if x.is_ok() || !(y.is_ok() && z.is_err()) {\n+   |                                    ---------- the check is happening here\n ...\n-100 |         z.unwrap_err(); // unnecessary\n-    |         ^^^^^^^^^^^^^^\n+97 |         z.unwrap_err(); // unnecessary\n+   |         ^^^^^^^^^^^^^^\n \n error: You checked before that `unwrap()` cannot fail. Instead of checking and unwrapping, it's better to use `if let` or `match`.\n-   --> $DIR/checked_unwrap.rs:108:13\n+   --> $DIR/checked_unwrap.rs:105:13\n     |\n-107 |         if x.is_some() {\n+104 |         if x.is_some() {\n     |            ----------- the check is happening here\n-108 |             x.unwrap(); // unnecessary\n+105 |             x.unwrap(); // unnecessary\n     |             ^^^^^^^^^^\n \n error: This call to `unwrap()` will always panic.\n-   --> $DIR/checked_unwrap.rs:110:13\n+   --> $DIR/checked_unwrap.rs:107:13\n     |\n-107 |         if x.is_some() {\n+104 |         if x.is_some() {\n     |            ----------- because of this check\n ...\n-110 |             x.unwrap(); // will panic\n+107 |             x.unwrap(); // will panic\n     |             ^^^^^^^^^^\n \n error: aborting due to 34 previous errors"}, {"sha": "058cbf7a16cbf0d1ac0bac2b611a3c0374c495fc", "filename": "tests/ui/clone_on_copy_impl.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fclone_on_copy_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fclone_on_copy_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fclone_on_copy_impl.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-use std::marker::PhantomData;\n use std::fmt;\n+use std::marker::PhantomData;\n \n pub struct Key<T> {\n     #[doc(hidden)]"}, {"sha": "82f411d5c9db0bfcbc4129ccb62541543f946d94", "filename": "tests/ui/clone_on_copy_mut.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fclone_on_copy_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fclone_on_copy_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fclone_on_copy_mut.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n pub fn dec_read_dec(i: &mut i32) -> i32 {\n     *i -= 1;\n     let ret = *i;"}, {"sha": "d6bdb5894d50f5a9e46b956064ab1f49e42fefeb", "filename": "tests/ui/cmp_nan.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcmp_nan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcmp_nan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcmp_nan.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,10 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #[warn(clippy::cmp_nan)]\n #[allow(clippy::float_cmp, clippy::no_effect, clippy::unnecessary_operation)]\n fn main() {"}, {"sha": "6838e6ad7aefacc5ed352d706158dfb2f326d6dd", "filename": "tests/ui/cmp_nan.stderr", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcmp_nan.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcmp_nan.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcmp_nan.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,75 +1,75 @@\n error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n-  --> $DIR/cmp_nan.rs:18:5\n+  --> $DIR/cmp_nan.rs:14:5\n    |\n-18 |     x == std::f32::NAN;\n+14 |     x == std::f32::NAN;\n    |     ^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::cmp-nan` implied by `-D warnings`\n \n error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n-  --> $DIR/cmp_nan.rs:19:5\n+  --> $DIR/cmp_nan.rs:15:5\n    |\n-19 |     x != std::f32::NAN;\n+15 |     x != std::f32::NAN;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n-  --> $DIR/cmp_nan.rs:20:5\n+  --> $DIR/cmp_nan.rs:16:5\n    |\n-20 |     x < std::f32::NAN;\n+16 |     x < std::f32::NAN;\n    |     ^^^^^^^^^^^^^^^^^\n \n error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n-  --> $DIR/cmp_nan.rs:21:5\n+  --> $DIR/cmp_nan.rs:17:5\n    |\n-21 |     x > std::f32::NAN;\n+17 |     x > std::f32::NAN;\n    |     ^^^^^^^^^^^^^^^^^\n \n error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n-  --> $DIR/cmp_nan.rs:22:5\n+  --> $DIR/cmp_nan.rs:18:5\n    |\n-22 |     x <= std::f32::NAN;\n+18 |     x <= std::f32::NAN;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n-  --> $DIR/cmp_nan.rs:23:5\n+  --> $DIR/cmp_nan.rs:19:5\n    |\n-23 |     x >= std::f32::NAN;\n+19 |     x >= std::f32::NAN;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n-  --> $DIR/cmp_nan.rs:26:5\n+  --> $DIR/cmp_nan.rs:22:5\n    |\n-26 |     y == std::f64::NAN;\n+22 |     y == std::f64::NAN;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n-  --> $DIR/cmp_nan.rs:27:5\n+  --> $DIR/cmp_nan.rs:23:5\n    |\n-27 |     y != std::f64::NAN;\n+23 |     y != std::f64::NAN;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n-  --> $DIR/cmp_nan.rs:28:5\n+  --> $DIR/cmp_nan.rs:24:5\n    |\n-28 |     y < std::f64::NAN;\n+24 |     y < std::f64::NAN;\n    |     ^^^^^^^^^^^^^^^^^\n \n error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n-  --> $DIR/cmp_nan.rs:29:5\n+  --> $DIR/cmp_nan.rs:25:5\n    |\n-29 |     y > std::f64::NAN;\n+25 |     y > std::f64::NAN;\n    |     ^^^^^^^^^^^^^^^^^\n \n error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n-  --> $DIR/cmp_nan.rs:30:5\n+  --> $DIR/cmp_nan.rs:26:5\n    |\n-30 |     y <= std::f64::NAN;\n+26 |     y <= std::f64::NAN;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: doomed comparison with NAN, use `std::{f32,f64}::is_nan()` instead\n-  --> $DIR/cmp_nan.rs:31:5\n+  --> $DIR/cmp_nan.rs:27:5\n    |\n-31 |     y >= std::f64::NAN;\n+27 |     y >= std::f64::NAN;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 12 previous errors"}, {"sha": "37615c9e1136da7806225210bab5fe92942d5b6e", "filename": "tests/ui/cmp_null.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcmp_null.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcmp_null.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcmp_null.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,22 +7,19 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![warn(clippy::cmp_null)]\n #![allow(unused_mut)]\n \n use std::ptr;\n \n fn main() {\n     let x = 0;\n-    let p : *const usize = &x;\n+    let p: *const usize = &x;\n     if p == ptr::null() {\n         println!(\"This is surprising!\");\n     }\n     let mut y = 0;\n-    let mut m : *mut usize = &mut y;\n+    let mut m: *mut usize = &mut y;\n     if m == ptr::null_mut() {\n         println!(\"This is surprising, too!\");\n     }"}, {"sha": "5038298d9c46c1612b76b52d8c3dd9e46713c846", "filename": "tests/ui/cmp_null.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcmp_null.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcmp_null.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcmp_null.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,15 +1,15 @@\n error: Comparing with null is better expressed by the .is_null() method\n-  --> $DIR/cmp_null.rs:21:8\n+  --> $DIR/cmp_null.rs:18:8\n    |\n-21 |     if p == ptr::null() {\n+18 |     if p == ptr::null() {\n    |        ^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::cmp-null` implied by `-D warnings`\n \n error: Comparing with null is better expressed by the .is_null() method\n-  --> $DIR/cmp_null.rs:26:8\n+  --> $DIR/cmp_null.rs:23:8\n    |\n-26 |     if m == ptr::null_mut() {\n+23 |     if m == ptr::null_mut() {\n    |        ^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 2 previous errors"}, {"sha": "53de5136105c143528409205203537f156bb8ab9", "filename": "tests/ui/cmp_owned.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcmp_owned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcmp_owned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcmp_owned.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,14 +7,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #[warn(clippy::cmp_owned)]\n #[allow(clippy::unnecessary_operation)]\n fn main() {\n-    fn with_to_string(x : &str) {\n+    fn with_to_string(x: &str) {\n         x != \"foo\".to_string();\n \n         \"foo\".to_string() != x;"}, {"sha": "2d06f736967f4470b03b9fd083aa7e3e3dd267b3", "filename": "tests/ui/cmp_owned.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcmp_owned.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcmp_owned.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcmp_owned.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,57 +1,57 @@\n error: this creates an owned instance just for comparison\n-  --> $DIR/cmp_owned.rs:18:14\n+  --> $DIR/cmp_owned.rs:14:14\n    |\n-18 |         x != \"foo\".to_string();\n+14 |         x != \"foo\".to_string();\n    |              ^^^^^^^^^^^^^^^^^ help: try: `\"foo\"`\n    |\n    = note: `-D clippy::cmp-owned` implied by `-D warnings`\n \n error: this creates an owned instance just for comparison\n-  --> $DIR/cmp_owned.rs:20:9\n+  --> $DIR/cmp_owned.rs:16:9\n    |\n-20 |         \"foo\".to_string() != x;\n+16 |         \"foo\".to_string() != x;\n    |         ^^^^^^^^^^^^^^^^^ help: try: `\"foo\"`\n \n error: this creates an owned instance just for comparison\n-  --> $DIR/cmp_owned.rs:27:10\n+  --> $DIR/cmp_owned.rs:23:10\n    |\n-27 |     x != \"foo\".to_owned();\n+23 |     x != \"foo\".to_owned();\n    |          ^^^^^^^^^^^^^^^^ help: try: `\"foo\"`\n \n error: this creates an owned instance just for comparison\n-  --> $DIR/cmp_owned.rs:29:10\n+  --> $DIR/cmp_owned.rs:25:10\n    |\n-29 |     x != String::from(\"foo\");\n+25 |     x != String::from(\"foo\");\n    |          ^^^^^^^^^^^^^^^^^^^ help: try: `\"foo\"`\n \n error: this creates an owned instance just for comparison\n-  --> $DIR/cmp_owned.rs:33:5\n+  --> $DIR/cmp_owned.rs:29:5\n    |\n-33 |     Foo.to_owned() == Foo;\n+29 |     Foo.to_owned() == Foo;\n    |     ^^^^^^^^^^^^^^ help: try: `Foo`\n \n error: this creates an owned instance just for comparison\n-  --> $DIR/cmp_owned.rs:35:30\n+  --> $DIR/cmp_owned.rs:31:30\n    |\n-35 |     \"abc\".chars().filter(|c| c.to_owned() != 'X');\n+31 |     \"abc\".chars().filter(|c| c.to_owned() != 'X');\n    |                              ^^^^^^^^^^^^ help: try: `*c`\n \n error: this creates an owned instance just for comparison\n-  --> $DIR/cmp_owned.rs:42:5\n+  --> $DIR/cmp_owned.rs:38:5\n    |\n-42 |     y.to_owned() == *x;\n+38 |     y.to_owned() == *x;\n    |     ^^^^^^^^^^^^^^^^^^ try implementing the comparison without allocating\n \n error: this creates an owned instance just for comparison\n-  --> $DIR/cmp_owned.rs:47:5\n+  --> $DIR/cmp_owned.rs:43:5\n    |\n-47 |     y.to_owned() == **x;\n+43 |     y.to_owned() == **x;\n    |     ^^^^^^^^^^^^^^^^^^^ try implementing the comparison without allocating\n \n error: this creates an owned instance just for comparison\n-  --> $DIR/cmp_owned.rs:54:9\n+  --> $DIR/cmp_owned.rs:50:9\n    |\n-54 |         self.to_owned() == *other\n+50 |         self.to_owned() == *other\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^ try implementing the comparison without allocating\n \n error: aborting due to 9 previous errors"}, {"sha": "6828743abf37c629065a13cde5ee05665239c951", "filename": "tests/ui/collapsible_if.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcollapsible_if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcollapsible_if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcollapsible_if.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,7 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n #[rustfmt::skip]\n #[warn(clippy::collapsible_if)]\n fn main() {"}, {"sha": "1884045a2db45c0a2d22d6aa6a0ff1511862ef17", "filename": "tests/ui/collapsible_if.stderr", "status": "modified", "additions": 152, "deletions": 152, "changes": 304, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcollapsible_if.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcollapsible_if.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcollapsible_if.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,259 +1,259 @@\n error: this if statement can be collapsed\n-  --> $DIR/collapsible_if.rs:16:5\n+  --> $DIR/collapsible_if.rs:15:5\n    |\n-16 | /     if x == \"hello\" {\n-17 | |         if y == \"world\" {\n-18 | |             println!(\"Hello world!\");\n-19 | |         }\n-20 | |     }\n+15 | /     if x == \"hello\" {\n+16 | |         if y == \"world\" {\n+17 | |             println!(\"Hello world!\");\n+18 | |         }\n+19 | |     }\n    | |_____^\n    |\n    = note: `-D clippy::collapsible-if` implied by `-D warnings`\n help: try\n    |\n-16 |     if x == \"hello\" && y == \"world\" {\n-17 |     println!(\"Hello world!\");\n-18 | }\n+15 |     if x == \"hello\" && y == \"world\" {\n+16 |     println!(\"Hello world!\");\n+17 | }\n    |\n \n error: this if statement can be collapsed\n-  --> $DIR/collapsible_if.rs:22:5\n+  --> $DIR/collapsible_if.rs:21:5\n    |\n-22 | /     if x == \"hello\" || x == \"world\" {\n-23 | |         if y == \"world\" || y == \"hello\" {\n-24 | |             println!(\"Hello world!\");\n-25 | |         }\n-26 | |     }\n+21 | /     if x == \"hello\" || x == \"world\" {\n+22 | |         if y == \"world\" || y == \"hello\" {\n+23 | |             println!(\"Hello world!\");\n+24 | |         }\n+25 | |     }\n    | |_____^\n help: try\n    |\n-22 |     if (x == \"hello\" || x == \"world\") && (y == \"world\" || y == \"hello\") {\n-23 |     println!(\"Hello world!\");\n-24 | }\n+21 |     if (x == \"hello\" || x == \"world\") && (y == \"world\" || y == \"hello\") {\n+22 |     println!(\"Hello world!\");\n+23 | }\n    |\n \n error: this if statement can be collapsed\n-  --> $DIR/collapsible_if.rs:28:5\n+  --> $DIR/collapsible_if.rs:27:5\n    |\n-28 | /     if x == \"hello\" && x == \"world\" {\n-29 | |         if y == \"world\" || y == \"hello\" {\n-30 | |             println!(\"Hello world!\");\n-31 | |         }\n-32 | |     }\n+27 | /     if x == \"hello\" && x == \"world\" {\n+28 | |         if y == \"world\" || y == \"hello\" {\n+29 | |             println!(\"Hello world!\");\n+30 | |         }\n+31 | |     }\n    | |_____^\n help: try\n    |\n-28 |     if x == \"hello\" && x == \"world\" && (y == \"world\" || y == \"hello\") {\n-29 |     println!(\"Hello world!\");\n-30 | }\n+27 |     if x == \"hello\" && x == \"world\" && (y == \"world\" || y == \"hello\") {\n+28 |     println!(\"Hello world!\");\n+29 | }\n    |\n \n error: this if statement can be collapsed\n-  --> $DIR/collapsible_if.rs:34:5\n+  --> $DIR/collapsible_if.rs:33:5\n    |\n-34 | /     if x == \"hello\" || x == \"world\" {\n-35 | |         if y == \"world\" && y == \"hello\" {\n-36 | |             println!(\"Hello world!\");\n-37 | |         }\n-38 | |     }\n+33 | /     if x == \"hello\" || x == \"world\" {\n+34 | |         if y == \"world\" && y == \"hello\" {\n+35 | |             println!(\"Hello world!\");\n+36 | |         }\n+37 | |     }\n    | |_____^\n help: try\n    |\n-34 |     if (x == \"hello\" || x == \"world\") && y == \"world\" && y == \"hello\" {\n-35 |     println!(\"Hello world!\");\n-36 | }\n+33 |     if (x == \"hello\" || x == \"world\") && y == \"world\" && y == \"hello\" {\n+34 |     println!(\"Hello world!\");\n+35 | }\n    |\n \n error: this if statement can be collapsed\n-  --> $DIR/collapsible_if.rs:40:5\n+  --> $DIR/collapsible_if.rs:39:5\n    |\n-40 | /     if x == \"hello\" && x == \"world\" {\n-41 | |         if y == \"world\" && y == \"hello\" {\n-42 | |             println!(\"Hello world!\");\n-43 | |         }\n-44 | |     }\n+39 | /     if x == \"hello\" && x == \"world\" {\n+40 | |         if y == \"world\" && y == \"hello\" {\n+41 | |             println!(\"Hello world!\");\n+42 | |         }\n+43 | |     }\n    | |_____^\n help: try\n    |\n-40 |     if x == \"hello\" && x == \"world\" && y == \"world\" && y == \"hello\" {\n-41 |     println!(\"Hello world!\");\n-42 | }\n+39 |     if x == \"hello\" && x == \"world\" && y == \"world\" && y == \"hello\" {\n+40 |     println!(\"Hello world!\");\n+41 | }\n    |\n \n error: this if statement can be collapsed\n-  --> $DIR/collapsible_if.rs:46:5\n+  --> $DIR/collapsible_if.rs:45:5\n    |\n-46 | /     if 42 == 1337 {\n-47 | |         if 'a' != 'A' {\n-48 | |             println!(\"world!\")\n-49 | |         }\n-50 | |     }\n+45 | /     if 42 == 1337 {\n+46 | |         if 'a' != 'A' {\n+47 | |             println!(\"world!\")\n+48 | |         }\n+49 | |     }\n    | |_____^\n help: try\n    |\n-46 |     if 42 == 1337 && 'a' != 'A' {\n-47 |     println!(\"world!\")\n-48 | }\n+45 |     if 42 == 1337 && 'a' != 'A' {\n+46 |     println!(\"world!\")\n+47 | }\n    |\n \n error: this `else { if .. }` block can be collapsed\n-  --> $DIR/collapsible_if.rs:55:12\n+  --> $DIR/collapsible_if.rs:54:12\n    |\n-55 |       } else {\n+54 |       } else {\n    |  ____________^\n-56 | |         if y == \"world\" {\n-57 | |             println!(\"world!\")\n-58 | |         }\n-59 | |     }\n+55 | |         if y == \"world\" {\n+56 | |             println!(\"world!\")\n+57 | |         }\n+58 | |     }\n    | |_____^\n help: try\n    |\n-55 |     } else if y == \"world\" {\n-56 |     println!(\"world!\")\n-57 | }\n+54 |     } else if y == \"world\" {\n+55 |     println!(\"world!\")\n+56 | }\n    |\n \n error: this `else { if .. }` block can be collapsed\n-  --> $DIR/collapsible_if.rs:63:12\n+  --> $DIR/collapsible_if.rs:62:12\n    |\n-63 |       } else {\n+62 |       } else {\n    |  ____________^\n-64 | |         if let Some(42) = Some(42) {\n-65 | |             println!(\"world!\")\n-66 | |         }\n-67 | |     }\n+63 | |         if let Some(42) = Some(42) {\n+64 | |             println!(\"world!\")\n+65 | |         }\n+66 | |     }\n    | |_____^\n help: try\n    |\n-63 |     } else if let Some(42) = Some(42) {\n-64 |     println!(\"world!\")\n-65 | }\n+62 |     } else if let Some(42) = Some(42) {\n+63 |     println!(\"world!\")\n+64 | }\n    |\n \n error: this `else { if .. }` block can be collapsed\n-  --> $DIR/collapsible_if.rs:71:12\n+  --> $DIR/collapsible_if.rs:70:12\n    |\n-71 |       } else {\n+70 |       } else {\n    |  ____________^\n-72 | |         if y == \"world\" {\n-73 | |             println!(\"world\")\n-74 | |         }\n+71 | |         if y == \"world\" {\n+72 | |             println!(\"world\")\n+73 | |         }\n ...  |\n-77 | |         }\n-78 | |     }\n+76 | |         }\n+77 | |     }\n    | |_____^\n help: try\n    |\n-71 |     } else if y == \"world\" {\n-72 |     println!(\"world\")\n-73 | }\n-74 | else {\n-75 |     println!(\"!\")\n-76 | }\n+70 |     } else if y == \"world\" {\n+71 |     println!(\"world\")\n+72 | }\n+73 | else {\n+74 |     println!(\"!\")\n+75 | }\n    |\n \n error: this `else { if .. }` block can be collapsed\n-  --> $DIR/collapsible_if.rs:82:12\n+  --> $DIR/collapsible_if.rs:81:12\n    |\n-82 |       } else {\n+81 |       } else {\n    |  ____________^\n-83 | |         if let Some(42) = Some(42) {\n-84 | |             println!(\"world\")\n-85 | |         }\n+82 | |         if let Some(42) = Some(42) {\n+83 | |             println!(\"world\")\n+84 | |         }\n ...  |\n-88 | |         }\n-89 | |     }\n+87 | |         }\n+88 | |     }\n    | |_____^\n help: try\n    |\n-82 |     } else if let Some(42) = Some(42) {\n-83 |     println!(\"world\")\n-84 | }\n-85 | else {\n-86 |     println!(\"!\")\n-87 | }\n+81 |     } else if let Some(42) = Some(42) {\n+82 |     println!(\"world\")\n+83 | }\n+84 | else {\n+85 |     println!(\"!\")\n+86 | }\n    |\n \n error: this `else { if .. }` block can be collapsed\n-   --> $DIR/collapsible_if.rs:93:12\n-    |\n-93  |       } else {\n-    |  ____________^\n-94  | |         if let Some(42) = Some(42) {\n-95  | |             println!(\"world\")\n-96  | |         }\n-...   |\n-99  | |         }\n-100 | |     }\n-    | |_____^\n+  --> $DIR/collapsible_if.rs:92:12\n+   |\n+92 |       } else {\n+   |  ____________^\n+93 | |         if let Some(42) = Some(42) {\n+94 | |             println!(\"world\")\n+95 | |         }\n+...  |\n+98 | |         }\n+99 | |     }\n+   | |_____^\n help: try\n-    |\n-93  |     } else if let Some(42) = Some(42) {\n-94  |     println!(\"world\")\n-95  | }\n-96  | else {\n-97  |     println!(\"!\")\n-98  | }\n-    |\n+   |\n+92 |     } else if let Some(42) = Some(42) {\n+93 |     println!(\"world\")\n+94 | }\n+95 | else {\n+96 |     println!(\"!\")\n+97 | }\n+   |\n \n error: this `else { if .. }` block can be collapsed\n-   --> $DIR/collapsible_if.rs:104:12\n+   --> $DIR/collapsible_if.rs:103:12\n     |\n-104 |       } else {\n+103 |       } else {\n     |  ____________^\n-105 | |         if x == \"hello\" {\n-106 | |             println!(\"world\")\n-107 | |         }\n+104 | |         if x == \"hello\" {\n+105 | |             println!(\"world\")\n+106 | |         }\n ...   |\n-110 | |         }\n-111 | |     }\n+109 | |         }\n+110 | |     }\n     | |_____^\n help: try\n     |\n-104 |     } else if x == \"hello\" {\n-105 |     println!(\"world\")\n-106 | }\n-107 | else {\n-108 |     println!(\"!\")\n-109 | }\n+103 |     } else if x == \"hello\" {\n+104 |     println!(\"world\")\n+105 | }\n+106 | else {\n+107 |     println!(\"!\")\n+108 | }\n     |\n \n error: this `else { if .. }` block can be collapsed\n-   --> $DIR/collapsible_if.rs:115:12\n+   --> $DIR/collapsible_if.rs:114:12\n     |\n-115 |       } else {\n+114 |       } else {\n     |  ____________^\n-116 | |         if let Some(42) = Some(42) {\n-117 | |             println!(\"world\")\n-118 | |         }\n+115 | |         if let Some(42) = Some(42) {\n+116 | |             println!(\"world\")\n+117 | |         }\n ...   |\n-121 | |         }\n-122 | |     }\n+120 | |         }\n+121 | |     }\n     | |_____^\n help: try\n     |\n-115 |     } else if let Some(42) = Some(42) {\n-116 |     println!(\"world\")\n-117 | }\n-118 | else {\n-119 |     println!(\"!\")\n-120 | }\n+114 |     } else if let Some(42) = Some(42) {\n+115 |     println!(\"world\")\n+116 | }\n+117 | else {\n+118 |     println!(\"!\")\n+119 | }\n     |\n \n error: this if statement can be collapsed\n-   --> $DIR/collapsible_if.rs:174:5\n+   --> $DIR/collapsible_if.rs:173:5\n     |\n-174 | /     if x == \"hello\" {\n-175 | |         if y == \"world\" { // Collapsible\n-176 | |             println!(\"Hello world!\");\n-177 | |         }\n-178 | |     }\n+173 | /     if x == \"hello\" {\n+174 | |         if y == \"world\" { // Collapsible\n+175 | |             println!(\"Hello world!\");\n+176 | |         }\n+177 | |     }\n     | |_____^\n help: try\n     |\n-174 |     if x == \"hello\" && y == \"world\" { // Collapsible\n-175 |     println!(\"Hello world!\");\n-176 | }\n+173 |     if x == \"hello\" && y == \"world\" { // Collapsible\n+174 |     println!(\"Hello world!\");\n+175 | }\n     |\n \n error: aborting due to 14 previous errors"}, {"sha": "9d75de62d74a3e604b0bee0f3a6f81bdca69faee", "filename": "tests/ui/complex_types.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcomplex_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcomplex_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcomplex_types.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![warn(clippy::all)]\n #![allow(unused, clippy::needless_pass_by_value)]\n #![feature(associated_type_defaults)]\n@@ -32,19 +29,21 @@ enum E {\n \n impl S {\n     const A: (u32, (u32, (u32, (u32, u32)))) = (0, (0, (0, (0, 0))));\n-    fn impl_method(&self, p: Vec<Vec<Box<(u32, u32, u32, u32)>>>) { }\n+    fn impl_method(&self, p: Vec<Vec<Box<(u32, u32, u32, u32)>>>) {}\n }\n \n trait T {\n     const A: Vec<Vec<Box<(u32, u32, u32, u32)>>>;\n     type B = Vec<Vec<Box<(u32, u32, u32, u32)>>>;\n     fn method(&self, p: Vec<Vec<Box<(u32, u32, u32, u32)>>>);\n-    fn def_method(&self, p: Vec<Vec<Box<(u32, u32, u32, u32)>>>) { }\n+    fn def_method(&self, p: Vec<Vec<Box<(u32, u32, u32, u32)>>>) {}\n }\n \n-fn test1() -> Vec<Vec<Box<(u32, u32, u32, u32)>>> { vec![] }\n+fn test1() -> Vec<Vec<Box<(u32, u32, u32, u32)>>> {\n+    vec![]\n+}\n \n-fn test2(_x: Vec<Vec<Box<(u32, u32, u32, u32)>>>) { }\n+fn test2(_x: Vec<Vec<Box<(u32, u32, u32, u32)>>>) {}\n \n fn test3() {\n     let _y: Vec<Vec<Box<(u32, u32, u32, u32)>>> = vec![];\n@@ -67,5 +66,4 @@ struct D {\n     ),\n }\n \n-fn main() {\n-}\n+fn main() {}"}, {"sha": "80f133fd1ce8dbcb63963fecb48392eca5e4017b", "filename": "tests/ui/complex_types.stderr", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcomplex_types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcomplex_types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcomplex_types.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,93 +1,93 @@\n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:19:12\n+  --> $DIR/complex_types.rs:16:12\n    |\n-19 | const CST: (u32, (u32, (u32, (u32, u32)))) = (0, (0, (0, (0, 0))));\n+16 | const CST: (u32, (u32, (u32, (u32, u32)))) = (0, (0, (0, (0, 0))));\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::type-complexity` implied by `-D warnings`\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:20:12\n+  --> $DIR/complex_types.rs:17:12\n    |\n-20 | static ST: (u32, (u32, (u32, (u32, u32)))) = (0, (0, (0, (0, 0))));\n+17 | static ST: (u32, (u32, (u32, (u32, u32)))) = (0, (0, (0, (0, 0))));\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:23:8\n+  --> $DIR/complex_types.rs:20:8\n    |\n-23 |     f: Vec<Vec<Box<(u32, u32, u32, u32)>>>,\n+20 |     f: Vec<Vec<Box<(u32, u32, u32, u32)>>>,\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:26:11\n+  --> $DIR/complex_types.rs:23:11\n    |\n-26 | struct TS(Vec<Vec<Box<(u32, u32, u32, u32)>>>);\n+23 | struct TS(Vec<Vec<Box<(u32, u32, u32, u32)>>>);\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:29:11\n+  --> $DIR/complex_types.rs:26:11\n    |\n-29 |     Tuple(Vec<Vec<Box<(u32, u32, u32, u32)>>>),\n+26 |     Tuple(Vec<Vec<Box<(u32, u32, u32, u32)>>>),\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:30:17\n+  --> $DIR/complex_types.rs:27:17\n    |\n-30 |     Struct { f: Vec<Vec<Box<(u32, u32, u32, u32)>>> },\n+27 |     Struct { f: Vec<Vec<Box<(u32, u32, u32, u32)>>> },\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:34:14\n+  --> $DIR/complex_types.rs:31:14\n    |\n-34 |     const A: (u32, (u32, (u32, (u32, u32)))) = (0, (0, (0, (0, 0))));\n+31 |     const A: (u32, (u32, (u32, (u32, u32)))) = (0, (0, (0, (0, 0))));\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:35:30\n+  --> $DIR/complex_types.rs:32:30\n    |\n-35 |     fn impl_method(&self, p: Vec<Vec<Box<(u32, u32, u32, u32)>>>) { }\n+32 |     fn impl_method(&self, p: Vec<Vec<Box<(u32, u32, u32, u32)>>>) {}\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:39:14\n+  --> $DIR/complex_types.rs:36:14\n    |\n-39 |     const A: Vec<Vec<Box<(u32, u32, u32, u32)>>>;\n+36 |     const A: Vec<Vec<Box<(u32, u32, u32, u32)>>>;\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:40:14\n+  --> $DIR/complex_types.rs:37:14\n    |\n-40 |     type B = Vec<Vec<Box<(u32, u32, u32, u32)>>>;\n+37 |     type B = Vec<Vec<Box<(u32, u32, u32, u32)>>>;\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:41:25\n+  --> $DIR/complex_types.rs:38:25\n    |\n-41 |     fn method(&self, p: Vec<Vec<Box<(u32, u32, u32, u32)>>>);\n+38 |     fn method(&self, p: Vec<Vec<Box<(u32, u32, u32, u32)>>>);\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:42:29\n+  --> $DIR/complex_types.rs:39:29\n    |\n-42 |     fn def_method(&self, p: Vec<Vec<Box<(u32, u32, u32, u32)>>>) { }\n+39 |     fn def_method(&self, p: Vec<Vec<Box<(u32, u32, u32, u32)>>>) {}\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:45:15\n+  --> $DIR/complex_types.rs:42:15\n    |\n-45 | fn test1() -> Vec<Vec<Box<(u32, u32, u32, u32)>>> { vec![] }\n+42 | fn test1() -> Vec<Vec<Box<(u32, u32, u32, u32)>>> {\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:47:14\n+  --> $DIR/complex_types.rs:46:14\n    |\n-47 | fn test2(_x: Vec<Vec<Box<(u32, u32, u32, u32)>>>) { }\n+46 | fn test2(_x: Vec<Vec<Box<(u32, u32, u32, u32)>>>) {}\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: very complex type used. Consider factoring parts into `type` definitions\n-  --> $DIR/complex_types.rs:50:13\n+  --> $DIR/complex_types.rs:49:13\n    |\n-50 |     let _y: Vec<Vec<Box<(u32, u32, u32, u32)>>> = vec![];\n+49 |     let _y: Vec<Vec<Box<(u32, u32, u32, u32)>>> = vec![];\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 15 previous errors"}, {"sha": "3e1aa94f96949617bed83f62ffb0c379e42899a8", "filename": "tests/ui/const_static_lifetime.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fconst_static_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fconst_static_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst_static_lifetime.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,7 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n #[derive(Debug)]\n struct Foo {}\n "}, {"sha": "ba53d0718fcb59d74b0c91b3e42cfd4d908289e0", "filename": "tests/ui/const_static_lifetime.stderr", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fconst_static_lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fconst_static_lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst_static_lifetime.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,81 +1,81 @@\n error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:14:17\n+  --> $DIR/const_static_lifetime.rs:13:17\n    |\n-14 | const VAR_ONE: &'static str = \"Test constant #1\"; // ERROR Consider removing 'static.\n+13 | const VAR_ONE: &'static str = \"Test constant #1\"; // ERROR Consider removing 'static.\n    |                -^^^^^^^---- help: consider removing `'static`: `&str`\n    |\n    = note: `-D clippy::const-static-lifetime` implied by `-D warnings`\n \n error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:18:21\n+  --> $DIR/const_static_lifetime.rs:17:21\n    |\n-18 | const VAR_THREE: &[&'static str] = &[\"one\", \"two\"]; // ERROR Consider removing 'static\n+17 | const VAR_THREE: &[&'static str] = &[\"one\", \"two\"]; // ERROR Consider removing 'static\n    |                    -^^^^^^^---- help: consider removing `'static`: `&str`\n \n error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:20:32\n+  --> $DIR/const_static_lifetime.rs:19:32\n    |\n-20 | const VAR_FOUR: (&str, (&str, &'static str), &'static str) = (\"on\", (\"th\", \"th\"), \"on\"); // ERROR Consider removing 'static\n+19 | const VAR_FOUR: (&str, (&str, &'static str), &'static str) = (\"on\", (\"th\", \"th\"), \"on\"); // ERROR Consider removing 'static\n    |                               -^^^^^^^---- help: consider removing `'static`: `&str`\n \n error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:20:47\n+  --> $DIR/const_static_lifetime.rs:19:47\n    |\n-20 | const VAR_FOUR: (&str, (&str, &'static str), &'static str) = (\"on\", (\"th\", \"th\"), \"on\"); // ERROR Consider removing 'static\n+19 | const VAR_FOUR: (&str, (&str, &'static str), &'static str) = (\"on\", (\"th\", \"th\"), \"on\"); // ERROR Consider removing 'static\n    |                                              -^^^^^^^---- help: consider removing `'static`: `&str`\n \n error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:22:18\n+  --> $DIR/const_static_lifetime.rs:21:18\n    |\n-22 | const VAR_FIVE: &'static [&[&'static str]] = &[&[\"test\"], &[\"other one\"]]; // ERROR Consider removing 'static\n+21 | const VAR_FIVE: &'static [&[&'static str]] = &[&[\"test\"], &[\"other one\"]]; // ERROR Consider removing 'static\n    |                 -^^^^^^^------------------ help: consider removing `'static`: `&[&[&'static str]]`\n \n error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:22:30\n+  --> $DIR/const_static_lifetime.rs:21:30\n    |\n-22 | const VAR_FIVE: &'static [&[&'static str]] = &[&[\"test\"], &[\"other one\"]]; // ERROR Consider removing 'static\n+21 | const VAR_FIVE: &'static [&[&'static str]] = &[&[\"test\"], &[\"other one\"]]; // ERROR Consider removing 'static\n    |                             -^^^^^^^---- help: consider removing `'static`: `&str`\n \n error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:24:17\n+  --> $DIR/const_static_lifetime.rs:23:17\n    |\n-24 | const VAR_SIX: &'static u8 = &5;\n+23 | const VAR_SIX: &'static u8 = &5;\n    |                -^^^^^^^--- help: consider removing `'static`: `&u8`\n \n error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:26:29\n+  --> $DIR/const_static_lifetime.rs:25:29\n    |\n-26 | const VAR_SEVEN: &[&(&str, &'static [&'static str])] = &[&(\"one\", &[\"other one\"])];\n+25 | const VAR_SEVEN: &[&(&str, &'static [&'static str])] = &[&(\"one\", &[\"other one\"])];\n    |                            -^^^^^^^--------------- help: consider removing `'static`: `&[&'static str]`\n \n error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:26:39\n+  --> $DIR/const_static_lifetime.rs:25:39\n    |\n-26 | const VAR_SEVEN: &[&(&str, &'static [&'static str])] = &[&(\"one\", &[\"other one\"])];\n+25 | const VAR_SEVEN: &[&(&str, &'static [&'static str])] = &[&(\"one\", &[\"other one\"])];\n    |                                      -^^^^^^^---- help: consider removing `'static`: `&str`\n \n error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:28:20\n+  --> $DIR/const_static_lifetime.rs:27:20\n    |\n-28 | const VAR_HEIGHT: &'static Foo = &Foo {};\n+27 | const VAR_HEIGHT: &'static Foo = &Foo {};\n    |                   -^^^^^^^---- help: consider removing `'static`: `&Foo`\n \n error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:30:19\n+  --> $DIR/const_static_lifetime.rs:29:19\n    |\n-30 | const VAR_SLICE: &'static [u8] = b\"Test constant #1\"; // ERROR Consider removing 'static.\n+29 | const VAR_SLICE: &'static [u8] = b\"Test constant #1\"; // ERROR Consider removing 'static.\n    |                  -^^^^^^^----- help: consider removing `'static`: `&[u8]`\n \n error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:32:19\n+  --> $DIR/const_static_lifetime.rs:31:19\n    |\n-32 | const VAR_TUPLE: &'static (u8, u8) = &(1, 2); // ERROR Consider removing 'static.\n+31 | const VAR_TUPLE: &'static (u8, u8) = &(1, 2); // ERROR Consider removing 'static.\n    |                  -^^^^^^^--------- help: consider removing `'static`: `&(u8, u8)`\n \n error: Constants have by default a `'static` lifetime\n-  --> $DIR/const_static_lifetime.rs:34:19\n+  --> $DIR/const_static_lifetime.rs:33:19\n    |\n-34 | const VAR_ARRAY: &'static [u8; 1] = b\"T\"; // ERROR Consider removing 'static.\n+33 | const VAR_ARRAY: &'static [u8; 1] = b\"T\"; // ERROR Consider removing 'static.\n    |                  -^^^^^^^-------- help: consider removing `'static`: `&[u8; 1]`\n \n error: aborting due to 13 previous errors"}, {"sha": "00e1d726207ac1344844f504db99cd8e99ae2437", "filename": "tests/ui/copies.rs", "status": "modified", "additions": 82, "deletions": 99, "changes": 181, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcopies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcopies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcopies.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,13 +7,23 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![allow(clippy::blacklisted_name, clippy::collapsible_if, clippy::cyclomatic_complexity, clippy::eq_op, clippy::needless_continue,\n-         clippy::needless_return, clippy::never_loop, clippy::no_effect, clippy::zero_divided_by_zero, clippy::unused_unit)]\n-\n-\n+#![allow(\n+    clippy::blacklisted_name,\n+    clippy::collapsible_if,\n+    clippy::cyclomatic_complexity,\n+    clippy::eq_op,\n+    clippy::needless_continue,\n+    clippy::needless_return,\n+    clippy::never_loop,\n+    clippy::no_effect,\n+    clippy::zero_divided_by_zero,\n+    clippy::unused_unit\n+)]\n \n fn bar<T>(_: T) {}\n-fn foo() -> bool { unimplemented!() }\n+fn foo() -> bool {\n+    unimplemented!()\n+}\n \n struct Foo {\n     bar: u8,\n@@ -37,8 +47,8 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n         ..10;\n         0..=10;\n         foo();\n-    }\n-    else { //~ ERROR same body as `if` block\n+    } else {\n+        //~ ERROR same body as `if` block\n         Foo { bar: 42 };\n         0..10;\n         ..;\n@@ -50,30 +60,26 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n \n     if true {\n         Foo { bar: 42 };\n-    }\n-    else {\n+    } else {\n         Foo { bar: 43 };\n     }\n \n     if true {\n         ();\n-    }\n-    else {\n+    } else {\n         ()\n     }\n \n     if true {\n         0..10;\n-    }\n-    else {\n+    } else {\n         0..=10;\n     }\n \n     if true {\n         foo();\n         foo();\n-    }\n-    else {\n+    } else {\n         foo();\n     }\n \n@@ -84,18 +90,19 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n             if true {\n                 a += 7;\n             }\n-            a = -31-a;\n+            a = -31 - a;\n             a\n-        }\n-        _ => { //~ ERROR match arms have same body\n+        },\n+        _ => {\n+            //~ ERROR match arms have same body\n             foo();\n             let mut a = 42 + [23].len() as i32;\n             if true {\n                 a += 7;\n             }\n-            a = -31-a;\n+            a = -31 - a;\n             a\n-        }\n+        },\n     };\n \n     let _ = match Abc::A {\n@@ -110,8 +117,8 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n \n     let _ = if true {\n         42\n-    }\n-    else { //~ ERROR same body as `if` block\n+    } else {\n+        //~ ERROR same body as `if` block\n         42\n     };\n \n@@ -124,8 +131,8 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n                 continue;\n             }\n         }\n-    }\n-    else { //~ ERROR same body as `if` block\n+    } else {\n+        //~ ERROR same body as `if` block\n         for _ in &[42] {\n             let foo: &Option<_> = &Some::<u8>(42);\n             if true {\n@@ -137,25 +144,19 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n     }\n \n     if true {\n-        let bar = if true {\n-            42\n-        }\n-        else {\n-            43\n-        };\n+        let bar = if true { 42 } else { 43 };\n \n-        while foo() { break; }\n-        bar + 1;\n-    }\n-    else { //~ ERROR same body as `if` block\n-        let bar = if true {\n-            42\n+        while foo() {\n+            break;\n         }\n-        else {\n-            43\n-        };\n+        bar + 1;\n+    } else {\n+        //~ ERROR same body as `if` block\n+        let bar = if true { 42 } else { 43 };\n \n-        while foo() { break; }\n+        while foo() {\n+            break;\n+        }\n         bar + 1;\n     }\n \n@@ -166,11 +167,9 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n             10..=15 => 3,\n             _ => 4,\n         };\n-    }\n-    else if false {\n+    } else if false {\n         foo();\n-    }\n-    else if foo() {\n+    } else if foo() {\n         let _ = match 42 {\n             42 => 1,\n             a if a > 0 => 2,\n@@ -181,64 +180,57 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n \n     if true {\n         if let Some(a) = Some(42) {}\n-    }\n-    else { //~ ERROR same body as `if` block\n+    } else {\n+        //~ ERROR same body as `if` block\n         if let Some(a) = Some(42) {}\n     }\n \n     if true {\n         if let (1, .., 3) = (1, 2, 3) {}\n-    }\n-    else { //~ ERROR same body as `if` block\n+    } else {\n+        //~ ERROR same body as `if` block\n         if let (1, .., 3) = (1, 2, 3) {}\n     }\n \n     if true {\n         if let (1, .., 3) = (1, 2, 3) {}\n-    }\n-    else {\n+    } else {\n         if let (.., 3) = (1, 2, 3) {}\n     }\n \n     if true {\n         if let (1, .., 3) = (1, 2, 3) {}\n-    }\n-    else {\n+    } else {\n         if let (.., 4) = (1, 2, 3) {}\n     }\n \n     if true {\n         if let (1, .., 3) = (1, 2, 3) {}\n-    }\n-    else {\n+    } else {\n         if let (.., 1, 3) = (1, 2, 3) {}\n     }\n \n     if true {\n         if let Some(42) = None {}\n-    }\n-    else {\n+    } else {\n         if let Option::Some(42) = None {}\n     }\n \n     if true {\n         if let Some(42) = None::<u8> {}\n-    }\n-    else {\n+    } else {\n         if let Some(42) = None {}\n     }\n \n     if true {\n         if let Some(42) = None::<u8> {}\n-    }\n-    else {\n+    } else {\n         if let Some(42) = None::<u32> {}\n     }\n \n     if true {\n         if let Some(a) = Some(42) {}\n-    }\n-    else {\n+    } else {\n         if let Some(a) = Some(43) {}\n     }\n \n@@ -290,39 +282,34 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n \n     let _ = if true {\n         0.0\n-    } else { //~ ERROR same body as `if` block\n+    } else {\n+        //~ ERROR same body as `if` block\n         0.0\n     };\n \n     let _ = if true {\n         -0.0\n-    } else { //~ ERROR same body as `if` block\n-        -0.0\n-    };\n-\n-    let _ = if true {\n-        0.0\n     } else {\n+        //~ ERROR same body as `if` block\n         -0.0\n     };\n \n+    let _ = if true { 0.0 } else { -0.0 };\n+\n     // Different NaNs\n-    let _ = if true {\n-        0.0 / 0.0\n-    } else {\n-        std::f32::NAN\n-    };\n+    let _ = if true { 0.0 / 0.0 } else { std::f32::NAN };\n \n     // Same NaNs\n     let _ = if true {\n         std::f32::NAN\n-    } else { //~ ERROR same body as `if` block\n+    } else {\n+        //~ ERROR same body as `if` block\n         std::f32::NAN\n     };\n \n     let _ = match Some(()) {\n         Some(()) => 0.0,\n-        None => -0.0\n+        None => -0.0,\n     };\n \n     match (Some(42), Some(\"\")) {\n@@ -333,20 +320,18 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n \n     if true {\n         try!(Ok(\"foo\"));\n-    }\n-    else { //~ ERROR same body as `if` block\n+    } else {\n+        //~ ERROR same body as `if` block\n         try!(Ok(\"foo\"));\n     }\n \n     if true {\n         let foo = \"\";\n         return Ok(&foo[0..]);\n-    }\n-    else if false {\n+    } else if false {\n         let foo = \"bar\";\n         return Ok(&foo[0..]);\n-    }\n-    else {\n+    } else {\n         let foo = \"\";\n         return Ok(&foo[0..]);\n     }\n@@ -359,22 +344,20 @@ fn ifs_same_cond() {\n     let b = false;\n \n     if b {\n-    }\n-    else if b { //~ ERROR ifs same condition\n+    } else if b {\n+        //~ ERROR ifs same condition\n     }\n \n     if a == 1 {\n-    }\n-    else if a == 1 { //~ ERROR ifs same condition\n+    } else if a == 1 {\n+        //~ ERROR ifs same condition\n     }\n \n-    if 2*a == 1 {\n-    }\n-    else if 2*a == 2 {\n-    }\n-    else if 2*a == 1 { //~ ERROR ifs same condition\n-    }\n-    else if a == 1 {\n+    if 2 * a == 1 {\n+    } else if 2 * a == 2 {\n+    } else if 2 * a == 1 {\n+        //~ ERROR ifs same condition\n+    } else if a == 1 {\n     }\n \n     // See #659\n@@ -387,14 +370,14 @@ fn ifs_same_cond() {\n     };\n \n     let mut v = vec![1];\n-    if v.pop() == None { // ok, functions\n-    }\n-    else if v.pop() == None {\n+    if v.pop() == None {\n+        // ok, functions\n+    } else if v.pop() == None {\n     }\n \n-    if v.len() == 42 { // ok, functions\n-    }\n-    else if v.len() == 42 {\n+    if v.len() == 42 {\n+        // ok, functions\n+    } else if v.len() == 42 {\n     }\n }\n "}, {"sha": "e41fac0f68699fa70f4d0ac0cc75e3c64c6584d5", "filename": "tests/ui/copies.stderr", "status": "modified", "additions": 199, "deletions": 192, "changes": 391, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcopies.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcopies.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcopies.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,385 +1,392 @@\n error: this `if` has identical blocks\n-  --> $DIR/copies.rs:41:10\n+  --> $DIR/copies.rs:50:12\n    |\n-41 |       else { //~ ERROR same body as `if` block\n-   |  __________^\n-42 | |         Foo { bar: 42 };\n-43 | |         0..10;\n-44 | |         ..;\n+50 |       } else {\n+   |  ____________^\n+51 | |         //~ ERROR same body as `if` block\n+52 | |         Foo { bar: 42 };\n+53 | |         0..10;\n ...  |\n-48 | |         foo();\n-49 | |     }\n+58 | |         foo();\n+59 | |     }\n    | |_____^\n    |\n    = note: `-D clippy::if-same-then-else` implied by `-D warnings`\n note: same as this\n-  --> $DIR/copies.rs:32:13\n+  --> $DIR/copies.rs:42:13\n    |\n-32 |       if true {\n+42 |       if true {\n    |  _____________^\n-33 | |         Foo { bar: 42 };\n-34 | |         0..10;\n-35 | |         ..;\n+43 | |         Foo { bar: 42 };\n+44 | |         0..10;\n+45 | |         ..;\n ...  |\n-39 | |         foo();\n-40 | |     }\n+49 | |         foo();\n+50 | |     } else {\n    | |_____^\n \n error: this `match` has identical arm bodies\n-  --> $DIR/copies.rs:90:14\n-   |\n-90 |           _ => { //~ ERROR match arms have same body\n-   |  ______________^\n-91 | |             foo();\n-92 | |             let mut a = 42 + [23].len() as i32;\n-93 | |             if true {\n-...  |\n-97 | |             a\n-98 | |         }\n-   | |_________^\n-   |\n-   = note: `-D clippy::match-same-arms` implied by `-D warnings`\n+   --> $DIR/copies.rs:96:14\n+    |\n+96  |           _ => {\n+    |  ______________^\n+97  | |             //~ ERROR match arms have same body\n+98  | |             foo();\n+99  | |             let mut a = 42 + [23].len() as i32;\n+...   |\n+104 | |             a\n+105 | |         },\n+    | |_________^\n+    |\n+    = note: `-D clippy::match-same-arms` implied by `-D warnings`\n note: same as this\n-  --> $DIR/copies.rs:81:15\n-   |\n-81 |           42 => {\n-   |  _______________^\n-82 | |             foo();\n-83 | |             let mut a = 42 + [23].len() as i32;\n-84 | |             if true {\n-...  |\n-88 | |             a\n-89 | |         }\n-   | |_________^\n+   --> $DIR/copies.rs:87:15\n+    |\n+87  |           42 => {\n+    |  _______________^\n+88  | |             foo();\n+89  | |             let mut a = 42 + [23].len() as i32;\n+90  | |             if true {\n+...   |\n+94  | |             a\n+95  | |         },\n+    | |_________^\n note: `42` has the same arm body as the `_` wildcard, consider removing it`\n-  --> $DIR/copies.rs:81:15\n-   |\n-81 |           42 => {\n-   |  _______________^\n-82 | |             foo();\n-83 | |             let mut a = 42 + [23].len() as i32;\n-84 | |             if true {\n-...  |\n-88 | |             a\n-89 | |         }\n-   | |_________^\n+   --> $DIR/copies.rs:87:15\n+    |\n+87  |           42 => {\n+    |  _______________^\n+88  | |             foo();\n+89  | |             let mut a = 42 + [23].len() as i32;\n+90  | |             if true {\n+...   |\n+94  | |             a\n+95  | |         },\n+    | |_________^\n \n error: this `match` has identical arm bodies\n-   --> $DIR/copies.rs:104:14\n+   --> $DIR/copies.rs:111:14\n     |\n-104 |         _ => 0, //~ ERROR match arms have same body\n+111 |         _ => 0, //~ ERROR match arms have same body\n     |              ^\n     |\n note: same as this\n-   --> $DIR/copies.rs:102:19\n+   --> $DIR/copies.rs:109:19\n     |\n-102 |         Abc::A => 0,\n+109 |         Abc::A => 0,\n     |                   ^\n note: `Abc::A` has the same arm body as the `_` wildcard, consider removing it`\n-   --> $DIR/copies.rs:102:19\n+   --> $DIR/copies.rs:109:19\n     |\n-102 |         Abc::A => 0,\n+109 |         Abc::A => 0,\n     |                   ^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:114:10\n+   --> $DIR/copies.rs:120:12\n     |\n-114 |       else { //~ ERROR same body as `if` block\n-    |  __________^\n-115 | |         42\n-116 | |     };\n+120 |       } else {\n+    |  ____________^\n+121 | |         //~ ERROR same body as `if` block\n+122 | |         42\n+123 | |     };\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:111:21\n+   --> $DIR/copies.rs:118:21\n     |\n-111 |       let _ = if true {\n+118 |       let _ = if true {\n     |  _____________________^\n-112 | |         42\n-113 | |     }\n+119 | |         42\n+120 | |     } else {\n     | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:128:10\n+   --> $DIR/copies.rs:134:12\n     |\n-128 |       else { //~ ERROR same body as `if` block\n-    |  __________^\n-129 | |         for _ in &[42] {\n-130 | |             let foo: &Option<_> = &Some::<u8>(42);\n-131 | |             if true {\n+134 |       } else {\n+    |  ____________^\n+135 | |         //~ ERROR same body as `if` block\n+136 | |         for _ in &[42] {\n+137 | |             let foo: &Option<_> = &Some::<u8>(42);\n ...   |\n-136 | |         }\n-137 | |     }\n+143 | |         }\n+144 | |     }\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:118:13\n+   --> $DIR/copies.rs:125:13\n     |\n-118 |       if true {\n+125 |       if true {\n     |  _____________^\n-119 | |         for _ in &[42] {\n-120 | |             let foo: &Option<_> = &Some::<u8>(42);\n-121 | |             if true {\n+126 | |         for _ in &[42] {\n+127 | |             let foo: &Option<_> = &Some::<u8>(42);\n+128 | |             if true {\n ...   |\n-126 | |         }\n-127 | |     }\n+133 | |         }\n+134 | |     } else {\n     | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:150:10\n+   --> $DIR/copies.rs:153:12\n     |\n-150 |       else { //~ ERROR same body as `if` block\n-    |  __________^\n-151 | |         let bar = if true {\n-152 | |             42\n-153 | |         }\n+153 |       } else {\n+    |  ____________^\n+154 | |         //~ ERROR same body as `if` block\n+155 | |         let bar = if true { 42 } else { 43 };\n+156 | |\n ...   |\n-159 | |         bar + 1;\n-160 | |     }\n+160 | |         bar + 1;\n+161 | |     }\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:139:13\n+   --> $DIR/copies.rs:146:13\n     |\n-139 |       if true {\n+146 |       if true {\n     |  _____________^\n-140 | |         let bar = if true {\n-141 | |             42\n-142 | |         }\n+147 | |         let bar = if true { 42 } else { 43 };\n+148 | |\n+149 | |         while foo() {\n ...   |\n-148 | |         bar + 1;\n-149 | |     }\n+152 | |         bar + 1;\n+153 | |     } else {\n     | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:185:10\n+   --> $DIR/copies.rs:183:12\n     |\n-185 |       else { //~ ERROR same body as `if` block\n-    |  __________^\n-186 | |         if let Some(a) = Some(42) {}\n-187 | |     }\n+183 |       } else {\n+    |  ____________^\n+184 | |         //~ ERROR same body as `if` block\n+185 | |         if let Some(a) = Some(42) {}\n+186 | |     }\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:182:13\n+   --> $DIR/copies.rs:181:13\n     |\n-182 |       if true {\n+181 |       if true {\n     |  _____________^\n-183 | |         if let Some(a) = Some(42) {}\n-184 | |     }\n+182 | |         if let Some(a) = Some(42) {}\n+183 | |     } else {\n     | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:192:10\n+   --> $DIR/copies.rs:190:12\n     |\n-192 |       else { //~ ERROR same body as `if` block\n-    |  __________^\n-193 | |         if let (1, .., 3) = (1, 2, 3) {}\n-194 | |     }\n+190 |       } else {\n+    |  ____________^\n+191 | |         //~ ERROR same body as `if` block\n+192 | |         if let (1, .., 3) = (1, 2, 3) {}\n+193 | |     }\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:189:13\n+   --> $DIR/copies.rs:188:13\n     |\n-189 |       if true {\n+188 |       if true {\n     |  _____________^\n-190 | |         if let (1, .., 3) = (1, 2, 3) {}\n-191 | |     }\n+189 | |         if let (1, .., 3) = (1, 2, 3) {}\n+190 | |     } else {\n     | |_____^\n \n error: this `match` has identical arm bodies\n-   --> $DIR/copies.rs:247:15\n+   --> $DIR/copies.rs:239:15\n     |\n-247 |         51 => foo(), //~ ERROR match arms have same body\n+239 |         51 => foo(), //~ ERROR match arms have same body\n     |               ^^^^^\n     |\n note: same as this\n-   --> $DIR/copies.rs:246:15\n+   --> $DIR/copies.rs:238:15\n     |\n-246 |         42 => foo(),\n+238 |         42 => foo(),\n     |               ^^^^^\n note: consider refactoring into `42 | 51`\n-   --> $DIR/copies.rs:246:15\n+   --> $DIR/copies.rs:238:15\n     |\n-246 |         42 => foo(),\n+238 |         42 => foo(),\n     |               ^^^^^\n \n error: this `match` has identical arm bodies\n-   --> $DIR/copies.rs:253:17\n+   --> $DIR/copies.rs:245:17\n     |\n-253 |         None => 24, //~ ERROR match arms have same body\n+245 |         None => 24, //~ ERROR match arms have same body\n     |                 ^^\n     |\n note: same as this\n-   --> $DIR/copies.rs:252:20\n+   --> $DIR/copies.rs:244:20\n     |\n-252 |         Some(_) => 24,\n+244 |         Some(_) => 24,\n     |                    ^^\n note: consider refactoring into `Some(_) | None`\n-   --> $DIR/copies.rs:252:20\n+   --> $DIR/copies.rs:244:20\n     |\n-252 |         Some(_) => 24,\n+244 |         Some(_) => 24,\n     |                    ^^\n \n error: this `match` has identical arm bodies\n-   --> $DIR/copies.rs:275:28\n+   --> $DIR/copies.rs:267:28\n     |\n-275 |         (None, Some(a)) => bar(a), //~ ERROR match arms have same body\n+267 |         (None, Some(a)) => bar(a), //~ ERROR match arms have same body\n     |                            ^^^^^^\n     |\n note: same as this\n-   --> $DIR/copies.rs:274:28\n+   --> $DIR/copies.rs:266:28\n     |\n-274 |         (Some(a), None) => bar(a),\n+266 |         (Some(a), None) => bar(a),\n     |                            ^^^^^^\n note: consider refactoring into `(Some(a), None) | (None, Some(a))`\n-   --> $DIR/copies.rs:274:28\n+   --> $DIR/copies.rs:266:28\n     |\n-274 |         (Some(a), None) => bar(a),\n+266 |         (Some(a), None) => bar(a),\n     |                            ^^^^^^\n \n error: this `match` has identical arm bodies\n-   --> $DIR/copies.rs:281:26\n+   --> $DIR/copies.rs:273:26\n     |\n-281 |         (.., Some(a)) => bar(a), //~ ERROR match arms have same body\n+273 |         (.., Some(a)) => bar(a), //~ ERROR match arms have same body\n     |                          ^^^^^^\n     |\n note: same as this\n-   --> $DIR/copies.rs:280:26\n+   --> $DIR/copies.rs:272:26\n     |\n-280 |         (Some(a), ..) => bar(a),\n+272 |         (Some(a), ..) => bar(a),\n     |                          ^^^^^^\n note: consider refactoring into `(Some(a), ..) | (.., Some(a))`\n-   --> $DIR/copies.rs:280:26\n+   --> $DIR/copies.rs:272:26\n     |\n-280 |         (Some(a), ..) => bar(a),\n+272 |         (Some(a), ..) => bar(a),\n     |                          ^^^^^^\n \n error: this `match` has identical arm bodies\n-   --> $DIR/copies.rs:287:20\n+   --> $DIR/copies.rs:279:20\n     |\n-287 |         (.., 3) => 42, //~ ERROR match arms have same body\n+279 |         (.., 3) => 42, //~ ERROR match arms have same body\n     |                    ^^\n     |\n note: same as this\n-   --> $DIR/copies.rs:286:23\n+   --> $DIR/copies.rs:278:23\n     |\n-286 |         (1, .., 3) => 42,\n+278 |         (1, .., 3) => 42,\n     |                       ^^\n note: consider refactoring into `(1, .., 3) | (.., 3)`\n-   --> $DIR/copies.rs:286:23\n+   --> $DIR/copies.rs:278:23\n     |\n-286 |         (1, .., 3) => 42,\n+278 |         (1, .., 3) => 42,\n     |                       ^^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:293:12\n+   --> $DIR/copies.rs:285:12\n     |\n-293 |       } else { //~ ERROR same body as `if` block\n+285 |       } else {\n     |  ____________^\n-294 | |         0.0\n-295 | |     };\n+286 | |         //~ ERROR same body as `if` block\n+287 | |         0.0\n+288 | |     };\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:291:21\n+   --> $DIR/copies.rs:283:21\n     |\n-291 |       let _ = if true {\n+283 |       let _ = if true {\n     |  _____________________^\n-292 | |         0.0\n-293 | |     } else { //~ ERROR same body as `if` block\n+284 | |         0.0\n+285 | |     } else {\n     | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:299:12\n+   --> $DIR/copies.rs:292:12\n     |\n-299 |       } else { //~ ERROR same body as `if` block\n+292 |       } else {\n     |  ____________^\n-300 | |         -0.0\n-301 | |     };\n+293 | |         //~ ERROR same body as `if` block\n+294 | |         -0.0\n+295 | |     };\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:297:21\n+   --> $DIR/copies.rs:290:21\n     |\n-297 |       let _ = if true {\n+290 |       let _ = if true {\n     |  _____________________^\n-298 | |         -0.0\n-299 | |     } else { //~ ERROR same body as `if` block\n+291 | |         -0.0\n+292 | |     } else {\n     | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:319:12\n+   --> $DIR/copies.rs:305:12\n     |\n-319 |       } else { //~ ERROR same body as `if` block\n+305 |       } else {\n     |  ____________^\n-320 | |         std::f32::NAN\n-321 | |     };\n+306 | |         //~ ERROR same body as `if` block\n+307 | |         std::f32::NAN\n+308 | |     };\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:317:21\n+   --> $DIR/copies.rs:303:21\n     |\n-317 |       let _ = if true {\n+303 |       let _ = if true {\n     |  _____________________^\n-318 | |         std::f32::NAN\n-319 | |     } else { //~ ERROR same body as `if` block\n+304 | |         std::f32::NAN\n+305 | |     } else {\n     | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:337:10\n+   --> $DIR/copies.rs:323:12\n     |\n-337 |       else { //~ ERROR same body as `if` block\n-    |  __________^\n-338 | |         try!(Ok(\"foo\"));\n-339 | |     }\n+323 |       } else {\n+    |  ____________^\n+324 | |         //~ ERROR same body as `if` block\n+325 | |         try!(Ok(\"foo\"));\n+326 | |     }\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:334:13\n+   --> $DIR/copies.rs:321:13\n     |\n-334 |       if true {\n+321 |       if true {\n     |  _____________^\n-335 | |         try!(Ok(\"foo\"));\n-336 | |     }\n+322 | |         try!(Ok(\"foo\"));\n+323 | |     } else {\n     | |_____^\n \n error: this `if` has the same condition as a previous if\n-   --> $DIR/copies.rs:363:13\n+   --> $DIR/copies.rs:347:15\n     |\n-363 |     else if b { //~ ERROR ifs same condition\n-    |             ^\n+347 |     } else if b {\n+    |               ^\n     |\n     = note: `-D clippy::ifs-same-cond` implied by `-D warnings`\n note: same as this\n-   --> $DIR/copies.rs:361:8\n+   --> $DIR/copies.rs:346:8\n     |\n-361 |     if b {\n+346 |     if b {\n     |        ^\n \n error: this `if` has the same condition as a previous if\n-   --> $DIR/copies.rs:368:13\n+   --> $DIR/copies.rs:352:15\n     |\n-368 |     else if a == 1 { //~ ERROR ifs same condition\n-    |             ^^^^^^\n+352 |     } else if a == 1 {\n+    |               ^^^^^^\n     |\n note: same as this\n-   --> $DIR/copies.rs:366:8\n+   --> $DIR/copies.rs:351:8\n     |\n-366 |     if a == 1 {\n+351 |     if a == 1 {\n     |        ^^^^^^\n \n error: this `if` has the same condition as a previous if\n-   --> $DIR/copies.rs:375:13\n+   --> $DIR/copies.rs:358:15\n     |\n-375 |     else if 2*a == 1 { //~ ERROR ifs same condition\n-    |             ^^^^^^^^\n+358 |     } else if 2 * a == 1 {\n+    |               ^^^^^^^^^^\n     |\n note: same as this\n-   --> $DIR/copies.rs:371:8\n+   --> $DIR/copies.rs:356:8\n     |\n-371 |     if 2*a == 1 {\n-    |        ^^^^^^^^\n+356 |     if 2 * a == 1 {\n+    |        ^^^^^^^^^^\n \n error: aborting due to 20 previous errors\n "}, {"sha": "22d3e138898111c54dd3fd3c255178661229a581", "filename": "tests/ui/copy_iterator.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcopy_iterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcopy_iterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcopy_iterator.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![warn(clippy::copy_iterator)]\n \n #[derive(Copy, Clone)]"}, {"sha": "ced9293d1dc928f31943685ab99dcfb11e645430", "filename": "tests/ui/copy_iterator.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcopy_iterator.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcopy_iterator.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcopy_iterator.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,13 +1,13 @@\n error: you are implementing `Iterator` on a `Copy` type\n-  --> $DIR/copy_iterator.rs:18:1\n+  --> $DIR/copy_iterator.rs:15:1\n    |\n-18 | / impl Iterator for Countdown {\n-19 | |     type Item = u8;\n-20 | |\n-21 | |     fn next(&mut self) -> Option<u8> {\n+15 | / impl Iterator for Countdown {\n+16 | |     type Item = u8;\n+17 | |\n+18 | |     fn next(&mut self) -> Option<u8> {\n ...  |\n-26 | |     }\n-27 | | }\n+23 | |     }\n+24 | | }\n    | |_^\n    |\n    = note: `-D clippy::copy-iterator` implied by `-D warnings`"}, {"sha": "5fe915a836890bb1d42d344fd2b8fbcad86036bb", "filename": "tests/ui/cstring.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcstring.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n fn main() {}\n \n #[allow(clippy::result_unwrap_used)]"}, {"sha": "490a655ca262190eb1d13e2948dc956a8867162b", "filename": "tests/ui/cstring.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcstring.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcstring.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcstring.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,15 +1,15 @@\n error: you are getting the inner pointer of a temporary `CString`\n-  --> $DIR/cstring.rs:19:5\n+  --> $DIR/cstring.rs:16:5\n    |\n-19 |     CString::new(\"foo\").unwrap().as_ptr();\n+16 |     CString::new(\"foo\").unwrap().as_ptr();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: #[deny(clippy::temporary_cstring_as_ptr)] on by default\n    = note: that pointer will be invalid outside this expression\n help: assign the `CString` to a variable to extend its lifetime\n-  --> $DIR/cstring.rs:19:5\n+  --> $DIR/cstring.rs:16:5\n    |\n-19 |     CString::new(\"foo\").unwrap().as_ptr();\n+16 |     CString::new(\"foo\").unwrap().as_ptr();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error"}, {"sha": "fff677629246cf62417ec531cec57b80083582fb", "filename": "tests/ui/cyclomatic_complexity.rs", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcyclomatic_complexity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcyclomatic_complexity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcyclomatic_complexity.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,7 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n #![allow(clippy::all)]\n #![warn(clippy::cyclomatic_complexity)]\n #![allow(unused)]\n@@ -181,8 +180,8 @@ fn bar() {\n \n #[test]\n #[clippy::cyclomatic_complexity = \"0\"]\n-/// Tests are usually complex but simple at the same time. `clippy::cyclomatic_complexity` used to give\n-/// lots of false-positives in tests.\n+/// Tests are usually complex but simple at the same time. `clippy::cyclomatic_complexity` used to\n+/// give lots of false-positives in tests.\n fn dont_warn_on_tests() {\n     match 99 {\n         0 => println!(\"hi\"),\n@@ -278,7 +277,6 @@ fn cake() {\n     println!(\"whee\");\n }\n \n-\n #[clippy::cyclomatic_complexity = \"0\"]\n pub fn read_file(input_path: &str) -> String {\n     use std::fs::File;\n@@ -288,7 +286,7 @@ pub fn read_file(input_path: &str) -> String {\n         Ok(f) => f,\n         Err(err) => {\n             panic!(\"Can't open {}: {}\", input_path, err);\n-        }\n+        },\n     };\n \n     let mut bytes = Vec::new();\n@@ -297,14 +295,14 @@ pub fn read_file(input_path: &str) -> String {\n         Ok(..) => {},\n         Err(_) => {\n             panic!(\"Can't read {}\", input_path);\n-        }\n+        },\n     };\n \n     match String::from_utf8(bytes) {\n         Ok(contents) => contents,\n         Err(_) => {\n             panic!(\"{} is not UTF-8 encoded\", input_path);\n-        }\n+        },\n     }\n }\n \n@@ -313,8 +311,7 @@ enum Void {}\n #[clippy::cyclomatic_complexity = \"0\"]\n fn void(void: Void) {\n     if true {\n-        match void {\n-        }\n+        match void {}\n     }\n }\n "}, {"sha": "de9e5c77f1b2a7204f5fd73eed3f8cb01b260207", "filename": "tests/ui/cyclomatic_complexity.stderr", "status": "modified", "additions": 136, "deletions": 137, "changes": 273, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcyclomatic_complexity.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcyclomatic_complexity.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcyclomatic_complexity.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,270 +1,269 @@\n error: the function has a cyclomatic complexity of 28\n-  --> $DIR/cyclomatic_complexity.rs:16:1\n+  --> $DIR/cyclomatic_complexity.rs:15:1\n    |\n-16 | / fn main() {\n-17 | |     if true {\n-18 | |         println!(\"a\");\n-19 | |     }\n+15 | / fn main() {\n+16 | |     if true {\n+17 | |         println!(\"a\");\n+18 | |     }\n ...  |\n-97 | |     }\n-98 | | }\n+96 | |     }\n+97 | | }\n    | |_^\n    |\n    = note: `-D clippy::cyclomatic-complexity` implied by `-D warnings`\n    = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 7\n-   --> $DIR/cyclomatic_complexity.rs:101:1\n+   --> $DIR/cyclomatic_complexity.rs:100:1\n     |\n-101 | / fn kaboom() {\n-102 | |     let n = 0;\n-103 | |     'a: for i in 0..20 {\n-104 | |         'b: for j in i..20 {\n+100 | / fn kaboom() {\n+101 | |     let n = 0;\n+102 | |     'a: for i in 0..20 {\n+103 | |         'b: for j in i..20 {\n ...   |\n-119 | |     }\n-120 | | }\n+118 | |     }\n+119 | | }\n     | |_^\n     |\n     = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 1\n-   --> $DIR/cyclomatic_complexity.rs:147:1\n+   --> $DIR/cyclomatic_complexity.rs:146:1\n     |\n-147 | / fn lots_of_short_circuits() -> bool {\n-148 | |     true && false && true && false && true && false && true\n-149 | | }\n+146 | / fn lots_of_short_circuits() -> bool {\n+147 | |     true && false && true && false && true && false && true\n+148 | | }\n     | |_^\n     |\n     = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 1\n-   --> $DIR/cyclomatic_complexity.rs:152:1\n+   --> $DIR/cyclomatic_complexity.rs:151:1\n     |\n-152 | / fn lots_of_short_circuits2() -> bool {\n-153 | |     true || false || true || false || true || false || true\n-154 | | }\n+151 | / fn lots_of_short_circuits2() -> bool {\n+152 | |     true || false || true || false || true || false || true\n+153 | | }\n     | |_^\n     |\n     = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 2\n-   --> $DIR/cyclomatic_complexity.rs:157:1\n+   --> $DIR/cyclomatic_complexity.rs:156:1\n     |\n-157 | / fn baa() {\n-158 | |     let x = || match 99 {\n-159 | |         0 => 0,\n-160 | |         1 => 1,\n+156 | / fn baa() {\n+157 | |     let x = || match 99 {\n+158 | |         0 => 0,\n+159 | |         1 => 1,\n ...   |\n-171 | |     }\n-172 | | }\n+170 | |     }\n+171 | | }\n     | |_^\n     |\n     = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 2\n-   --> $DIR/cyclomatic_complexity.rs:158:13\n+   --> $DIR/cyclomatic_complexity.rs:157:13\n     |\n-158 |       let x = || match 99 {\n+157 |       let x = || match 99 {\n     |  _____________^\n-159 | |         0 => 0,\n-160 | |         1 => 1,\n-161 | |         2 => 2,\n+158 | |         0 => 0,\n+159 | |         1 => 1,\n+160 | |         2 => 2,\n ...   |\n-165 | |         _ => 42,\n-166 | |     };\n+164 | |         _ => 42,\n+165 | |     };\n     | |_____^\n     |\n     = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 2\n-   --> $DIR/cyclomatic_complexity.rs:175:1\n-    |\n-175 | / fn bar() {\n-176 | |     match 99 {\n-177 | |         0 => println!(\"hi\"),\n-178 | |         _ => println!(\"bye\"),\n-179 | |     }\n-180 | | }\n+   --> $DIR/cyclomatic_complexity.rs:174:1\n+    |\n+174 | / fn bar() {\n+175 | |     match 99 {\n+176 | |         0 => println!(\"hi\"),\n+177 | |         _ => println!(\"bye\"),\n+178 | |     }\n+179 | | }\n     | |_^\n     |\n     = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 2\n-   --> $DIR/cyclomatic_complexity.rs:194:1\n+   --> $DIR/cyclomatic_complexity.rs:193:1\n     |\n-194 | / fn barr() {\n-195 | |     match 99 {\n-196 | |         0 => println!(\"hi\"),\n-197 | |         1 => println!(\"bla\"),\n+193 | / fn barr() {\n+194 | |     match 99 {\n+195 | |         0 => println!(\"hi\"),\n+196 | |         1 => println!(\"bla\"),\n ...   |\n-200 | |     }\n-201 | | }\n+199 | |     }\n+200 | | }\n     | |_^\n     |\n     = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 3\n-   --> $DIR/cyclomatic_complexity.rs:204:1\n+   --> $DIR/cyclomatic_complexity.rs:203:1\n     |\n-204 | / fn barr2() {\n-205 | |     match 99 {\n-206 | |         0 => println!(\"hi\"),\n-207 | |         1 => println!(\"bla\"),\n+203 | / fn barr2() {\n+204 | |     match 99 {\n+205 | |         0 => println!(\"hi\"),\n+206 | |         1 => println!(\"bla\"),\n ...   |\n-216 | |     }\n-217 | | }\n+215 | |     }\n+216 | | }\n     | |_^\n     |\n     = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 2\n-   --> $DIR/cyclomatic_complexity.rs:220:1\n+   --> $DIR/cyclomatic_complexity.rs:219:1\n     |\n-220 | / fn barrr() {\n-221 | |     match 99 {\n-222 | |         0 => println!(\"hi\"),\n-223 | |         1 => panic!(\"bla\"),\n+219 | / fn barrr() {\n+220 | |     match 99 {\n+221 | |         0 => println!(\"hi\"),\n+222 | |         1 => panic!(\"bla\"),\n ...   |\n-226 | |     }\n-227 | | }\n+225 | |     }\n+226 | | }\n     | |_^\n     |\n     = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 3\n-   --> $DIR/cyclomatic_complexity.rs:230:1\n+   --> $DIR/cyclomatic_complexity.rs:229:1\n     |\n-230 | / fn barrr2() {\n-231 | |     match 99 {\n-232 | |         0 => println!(\"hi\"),\n-233 | |         1 => panic!(\"bla\"),\n+229 | / fn barrr2() {\n+230 | |     match 99 {\n+231 | |         0 => println!(\"hi\"),\n+232 | |         1 => panic!(\"bla\"),\n ...   |\n-242 | |     }\n-243 | | }\n+241 | |     }\n+242 | | }\n     | |_^\n     |\n     = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 2\n-   --> $DIR/cyclomatic_complexity.rs:246:1\n+   --> $DIR/cyclomatic_complexity.rs:245:1\n     |\n-246 | / fn barrrr() {\n-247 | |     match 99 {\n-248 | |         0 => println!(\"hi\"),\n-249 | |         1 => println!(\"bla\"),\n+245 | / fn barrrr() {\n+246 | |     match 99 {\n+247 | |         0 => println!(\"hi\"),\n+248 | |         1 => println!(\"bla\"),\n ...   |\n-252 | |     }\n-253 | | }\n+251 | |     }\n+252 | | }\n     | |_^\n     |\n     = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 3\n-   --> $DIR/cyclomatic_complexity.rs:256:1\n+   --> $DIR/cyclomatic_complexity.rs:255:1\n     |\n-256 | / fn barrrr2() {\n-257 | |     match 99 {\n-258 | |         0 => println!(\"hi\"),\n-259 | |         1 => println!(\"bla\"),\n+255 | / fn barrrr2() {\n+256 | |     match 99 {\n+257 | |         0 => println!(\"hi\"),\n+258 | |         1 => println!(\"bla\"),\n ...   |\n-268 | |     }\n-269 | | }\n+267 | |     }\n+268 | | }\n     | |_^\n     |\n     = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 2\n-   --> $DIR/cyclomatic_complexity.rs:272:1\n+   --> $DIR/cyclomatic_complexity.rs:271:1\n     |\n-272 | / fn cake() {\n-273 | |     if 4 == 5 {\n-274 | |         println!(\"yea\");\n-275 | |     } else {\n+271 | / fn cake() {\n+272 | |     if 4 == 5 {\n+273 | |         println!(\"yea\");\n+274 | |     } else {\n ...   |\n-278 | |     println!(\"whee\");\n-279 | | }\n+277 | |     println!(\"whee\");\n+278 | | }\n     | |_^\n     |\n     = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 4\n-   --> $DIR/cyclomatic_complexity.rs:283:1\n+   --> $DIR/cyclomatic_complexity.rs:281:1\n     |\n-283 | / pub fn read_file(input_path: &str) -> String {\n-284 | |     use std::fs::File;\n-285 | |     use std::io::{Read, Write};\n-286 | |     use std::path::Path;\n+281 | / pub fn read_file(input_path: &str) -> String {\n+282 | |     use std::fs::File;\n+283 | |     use std::io::{Read, Write};\n+284 | |     use std::path::Path;\n ...   |\n-308 | |     }\n-309 | | }\n+306 | |     }\n+307 | | }\n     | |_^\n     |\n     = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 1\n-   --> $DIR/cyclomatic_complexity.rs:314:1\n-    |\n-314 | / fn void(void: Void) {\n-315 | |     if true {\n-316 | |         match void {\n-317 | |         }\n-318 | |     }\n-319 | | }\n+   --> $DIR/cyclomatic_complexity.rs:312:1\n+    |\n+312 | / fn void(void: Void) {\n+313 | |     if true {\n+314 | |         match void {}\n+315 | |     }\n+316 | | }\n     | |_^\n     |\n     = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 1\n-   --> $DIR/cyclomatic_complexity.rs:328:1\n-    |\n-328 | / fn try() -> Result<i32, &'static str> {\n-329 | |     match 5 {\n-330 | |         5 => Ok(5),\n-331 | |         _ => return Err(\"bla\"),\n-332 | |     }\n-333 | | }\n+   --> $DIR/cyclomatic_complexity.rs:325:1\n+    |\n+325 | / fn try() -> Result<i32, &'static str> {\n+326 | |     match 5 {\n+327 | |         5 => Ok(5),\n+328 | |         _ => return Err(\"bla\"),\n+329 | |     }\n+330 | | }\n     | |_^\n     |\n     = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 1\n-   --> $DIR/cyclomatic_complexity.rs:336:1\n+   --> $DIR/cyclomatic_complexity.rs:333:1\n     |\n-336 | / fn try_again() -> Result<i32, &'static str> {\n-337 | |     let _ = try!(Ok(42));\n-338 | |     let _ = try!(Ok(43));\n-339 | |     let _ = try!(Ok(44));\n+333 | / fn try_again() -> Result<i32, &'static str> {\n+334 | |     let _ = try!(Ok(42));\n+335 | |     let _ = try!(Ok(43));\n+336 | |     let _ = try!(Ok(44));\n ...   |\n-348 | |     }\n-349 | | }\n+345 | |     }\n+346 | | }\n     | |_^\n     |\n     = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 1\n-   --> $DIR/cyclomatic_complexity.rs:352:1\n+   --> $DIR/cyclomatic_complexity.rs:349:1\n     |\n-352 | / fn early() -> Result<i32, &'static str> {\n-353 | |     return Ok(5);\n-354 | |     return Ok(5);\n-355 | |     return Ok(5);\n+349 | / fn early() -> Result<i32, &'static str> {\n+350 | |     return Ok(5);\n+351 | |     return Ok(5);\n+352 | |     return Ok(5);\n ...   |\n-361 | |     return Ok(5);\n-362 | | }\n+358 | |     return Ok(5);\n+359 | | }\n     | |_^\n     |\n     = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 8\n-   --> $DIR/cyclomatic_complexity.rs:366:1\n+   --> $DIR/cyclomatic_complexity.rs:363:1\n     |\n-366 | / fn early_ret() -> i32 {\n-367 | |     let a = if true { 42 } else { return 0; };\n-368 | |     let a = if a < 99 { 42 } else { return 0; };\n-369 | |     let a = if a < 99 { 42 } else { return 0; };\n+363 | / fn early_ret() -> i32 {\n+364 | |     let a = if true { 42 } else { return 0; };\n+365 | |     let a = if a < 99 { 42 } else { return 0; };\n+366 | |     let a = if a < 99 { 42 } else { return 0; };\n ...   |\n-382 | |     }\n-383 | | }\n+379 | |     }\n+380 | | }\n     | |_^\n     |\n     = help: you could split it up into multiple smaller functions"}, {"sha": "b1da9649f901cf9b3679eba3f5e840f8a64f03ce", "filename": "tests/ui/cyclomatic_complexity_attr_used.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcyclomatic_complexity_attr_used.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcyclomatic_complexity_attr_used.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcyclomatic_complexity_attr_used.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![warn(clippy::cyclomatic_complexity)]\n #![warn(unused)]\n "}, {"sha": "3493c0d9ea54e49ae11c4ba26acbda300af31940", "filename": "tests/ui/cyclomatic_complexity_attr_used.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcyclomatic_complexity_attr_used.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fcyclomatic_complexity_attr_used.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcyclomatic_complexity_attr_used.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,13 +1,13 @@\n error: the function has a cyclomatic complexity of 3\n-  --> $DIR/cyclomatic_complexity_attr_used.rs:21:1\n+  --> $DIR/cyclomatic_complexity_attr_used.rs:18:1\n    |\n-21 | / fn kaboom() {\n-22 | |     if 42 == 43 {\n-23 | |         panic!();\n-24 | |     } else if \"cake\" == \"lie\" {\n-25 | |         println!(\"what?\");\n-26 | |     }\n-27 | | }\n+18 | / fn kaboom() {\n+19 | |     if 42 == 43 {\n+20 | |         panic!();\n+21 | |     } else if \"cake\" == \"lie\" {\n+22 | |         println!(\"what?\");\n+23 | |     }\n+24 | | }\n    | |_^\n    |\n    = note: `-D clippy::cyclomatic-complexity` implied by `-D warnings`"}, {"sha": "d7823b0b819b46fd172c8f9557beac643f881378", "filename": "tests/ui/decimal_literal_representation.rs", "status": "modified", "additions": 10, "deletions": 13, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fdecimal_literal_representation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fdecimal_literal_representation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdecimal_literal_representation.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,22 +7,19 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #[warn(clippy::decimal_literal_representation)]\n #[allow(unused_variables)]\n+#[rustfmt::skip]\n fn main() {\n-    let good = (        // Hex:\n-        127,            // 0x7F\n-        256,            // 0x100\n-        511,            // 0x1FF\n-        2048,           // 0x800\n-        4090,           // 0xFFA\n-        16_371,         // 0x3FF3\n-        61_683,         // 0xF0F3\n-        2_131_750_925,  // 0x7F0F_F00D\n+    let good = (       // Hex:\n+        127,           // 0x7F\n+        256,           // 0x100\n+        511,           // 0x1FF\n+        2048,          // 0x800\n+        4090,          // 0xFFA\n+        16_371,        // 0x3FF3\n+        61_683,        // 0xF0F3\n+        2_131_750_925, // 0x7F0F_F00D\n     );\n     let bad = (        // Hex:\n         32_773,        // 0x8005"}, {"sha": "c68a25f3dc398f394a0c4b15d989b14bc623f062", "filename": "tests/ui/decimal_literal_representation.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fdecimal_literal_representation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fdecimal_literal_representation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdecimal_literal_representation.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,33 +1,33 @@\n error: integer literal has a better hexadecimal representation\n-  --> $DIR/decimal_literal_representation.rs:28:9\n+  --> $DIR/decimal_literal_representation.rs:25:9\n    |\n-28 |         32_773,        // 0x8005\n+25 |         32_773,        // 0x8005\n    |         ^^^^^^ help: consider: `0x8005`\n    |\n    = note: `-D clippy::decimal-literal-representation` implied by `-D warnings`\n \n error: integer literal has a better hexadecimal representation\n-  --> $DIR/decimal_literal_representation.rs:29:9\n+  --> $DIR/decimal_literal_representation.rs:26:9\n    |\n-29 |         65_280,        // 0xFF00\n+26 |         65_280,        // 0xFF00\n    |         ^^^^^^ help: consider: `0xFF00`\n \n error: integer literal has a better hexadecimal representation\n-  --> $DIR/decimal_literal_representation.rs:30:9\n+  --> $DIR/decimal_literal_representation.rs:27:9\n    |\n-30 |         2_131_750_927, // 0x7F0F_F00F\n+27 |         2_131_750_927, // 0x7F0F_F00F\n    |         ^^^^^^^^^^^^^ help: consider: `0x7F0F_F00F`\n \n error: integer literal has a better hexadecimal representation\n-  --> $DIR/decimal_literal_representation.rs:31:9\n+  --> $DIR/decimal_literal_representation.rs:28:9\n    |\n-31 |         2_147_483_647, // 0x7FFF_FFFF\n+28 |         2_147_483_647, // 0x7FFF_FFFF\n    |         ^^^^^^^^^^^^^ help: consider: `0x7FFF_FFFF`\n \n error: integer literal has a better hexadecimal representation\n-  --> $DIR/decimal_literal_representation.rs:32:9\n+  --> $DIR/decimal_literal_representation.rs:29:9\n    |\n-32 |         4_042_322_160, // 0xF0F0_F0F0\n+29 |         4_042_322_160, // 0xF0F0_F0F0\n    |         ^^^^^^^^^^^^^ help: consider: `0xF0F0_F0F0`\n \n error: aborting due to 5 previous errors"}, {"sha": "eaa367b0cb3d1c6a43ce38c0ee100800f36f5a2f", "filename": "tests/ui/default_trait_access.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fdefault_trait_access.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fdefault_trait_access.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdefault_trait_access.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,14 +7,11 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![warn(clippy::default_trait_access)]\n \n+use std::default;\n use std::default::Default as D2;\n use std::string;\n-use std::default;\n \n fn main() {\n     let s1: String = Default::default();"}, {"sha": "b838f6a3bf4e08181753fcb5f4d993e0debce51d", "filename": "tests/ui/default_trait_access.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fdefault_trait_access.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fdefault_trait_access.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdefault_trait_access.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,51 +1,51 @@\n error: Calling std::string::String::default() is more clear than this expression\n-  --> $DIR/default_trait_access.rs:20:22\n+  --> $DIR/default_trait_access.rs:17:22\n    |\n-20 |     let s1: String = Default::default();\n+17 |     let s1: String = Default::default();\n    |                      ^^^^^^^^^^^^^^^^^^ help: try: `std::string::String::default()`\n    |\n    = note: `-D clippy::default-trait-access` implied by `-D warnings`\n \n error: Calling std::string::String::default() is more clear than this expression\n-  --> $DIR/default_trait_access.rs:24:22\n+  --> $DIR/default_trait_access.rs:21:22\n    |\n-24 |     let s3: String = D2::default();\n+21 |     let s3: String = D2::default();\n    |                      ^^^^^^^^^^^^^ help: try: `std::string::String::default()`\n \n error: Calling std::string::String::default() is more clear than this expression\n-  --> $DIR/default_trait_access.rs:26:22\n+  --> $DIR/default_trait_access.rs:23:22\n    |\n-26 |     let s4: String = std::default::Default::default();\n+23 |     let s4: String = std::default::Default::default();\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::string::String::default()`\n \n error: Calling std::string::String::default() is more clear than this expression\n-  --> $DIR/default_trait_access.rs:30:22\n+  --> $DIR/default_trait_access.rs:27:22\n    |\n-30 |     let s6: String = default::Default::default();\n+27 |     let s6: String = default::Default::default();\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::string::String::default()`\n \n error: Calling GenericDerivedDefault<std::string::String>::default() is more clear than this expression\n-  --> $DIR/default_trait_access.rs:40:46\n+  --> $DIR/default_trait_access.rs:37:46\n    |\n-40 |     let s11: GenericDerivedDefault<String> = Default::default();\n+37 |     let s11: GenericDerivedDefault<String> = Default::default();\n    |                                              ^^^^^^^^^^^^^^^^^^ help: try: `GenericDerivedDefault<std::string::String>::default()`\n \n error: Calling TupleDerivedDefault::default() is more clear than this expression\n-  --> $DIR/default_trait_access.rs:46:36\n+  --> $DIR/default_trait_access.rs:43:36\n    |\n-46 |     let s14: TupleDerivedDefault = Default::default();\n+43 |     let s14: TupleDerivedDefault = Default::default();\n    |                                    ^^^^^^^^^^^^^^^^^^ help: try: `TupleDerivedDefault::default()`\n \n error: Calling ArrayDerivedDefault::default() is more clear than this expression\n-  --> $DIR/default_trait_access.rs:48:36\n+  --> $DIR/default_trait_access.rs:45:36\n    |\n-48 |     let s15: ArrayDerivedDefault = Default::default();\n+45 |     let s15: ArrayDerivedDefault = Default::default();\n    |                                    ^^^^^^^^^^^^^^^^^^ help: try: `ArrayDerivedDefault::default()`\n \n error: Calling TupleStructDerivedDefault::default() is more clear than this expression\n-  --> $DIR/default_trait_access.rs:52:42\n+  --> $DIR/default_trait_access.rs:49:42\n    |\n-52 |     let s17: TupleStructDerivedDefault = Default::default();\n+49 |     let s17: TupleStructDerivedDefault = Default::default();\n    |                                          ^^^^^^^^^^^^^^^^^^ help: try: `TupleStructDerivedDefault::default()`\n \n error: aborting due to 8 previous errors"}, {"sha": "7a1657424ed58f1c3a6907754e16712755539d63", "filename": "tests/ui/deprecated.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fdeprecated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fdeprecated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdeprecated.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,18 +7,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #[warn(str_to_string)]\n-\n #[warn(string_to_string)]\n-\n #[warn(unstable_as_slice)]\n-\n #[warn(unstable_as_mut_slice)]\n-\n #[warn(misaligned_transmute)]\n \n fn main() {}"}, {"sha": "335f6451e592c3deac09b145b4126530e3af5c75", "filename": "tests/ui/deprecated.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fdeprecated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fdeprecated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdeprecated.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,33 +1,33 @@\n error: lint `str_to_string` has been removed: `using `str::to_string` is common even today and specialization will likely happen soon`\n-  --> $DIR/deprecated.rs:14:8\n+  --> $DIR/deprecated.rs:10:8\n    |\n-14 | #[warn(str_to_string)]\n+10 | #[warn(str_to_string)]\n    |        ^^^^^^^^^^^^^\n    |\n    = note: `-D renamed-and-removed-lints` implied by `-D warnings`\n \n error: lint `string_to_string` has been removed: `using `string::to_string` is common even today and specialization will likely happen soon`\n-  --> $DIR/deprecated.rs:16:8\n+  --> $DIR/deprecated.rs:11:8\n    |\n-16 | #[warn(string_to_string)]\n+11 | #[warn(string_to_string)]\n    |        ^^^^^^^^^^^^^^^^\n \n error: lint `unstable_as_slice` has been removed: ``Vec::as_slice` has been stabilized in 1.7`\n-  --> $DIR/deprecated.rs:18:8\n+  --> $DIR/deprecated.rs:12:8\n    |\n-18 | #[warn(unstable_as_slice)]\n+12 | #[warn(unstable_as_slice)]\n    |        ^^^^^^^^^^^^^^^^^\n \n error: lint `unstable_as_mut_slice` has been removed: ``Vec::as_mut_slice` has been stabilized in 1.7`\n-  --> $DIR/deprecated.rs:20:8\n+  --> $DIR/deprecated.rs:13:8\n    |\n-20 | #[warn(unstable_as_mut_slice)]\n+13 | #[warn(unstable_as_mut_slice)]\n    |        ^^^^^^^^^^^^^^^^^^^^^\n \n error: lint `misaligned_transmute` has been removed: `this lint has been split into cast_ptr_alignment and transmute_ptr_to_ptr`\n-  --> $DIR/deprecated.rs:22:8\n+  --> $DIR/deprecated.rs:14:8\n    |\n-22 | #[warn(misaligned_transmute)]\n+14 | #[warn(misaligned_transmute)]\n    |        ^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 5 previous errors"}, {"sha": "a6020b61337ad05928423afbeece9f2587d9b683", "filename": "tests/ui/derive.rs", "status": "modified", "additions": 25, "deletions": 15, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fderive.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,11 +7,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![feature(untagged_unions)]\n-\n #![allow(dead_code)]\n #![warn(clippy::expl_impl_clone_on_copy)]\n \n@@ -21,21 +17,27 @@ use std::hash::{Hash, Hasher};\n struct Foo;\n \n impl PartialEq<u64> for Foo {\n-    fn eq(&self, _: &u64) -> bool { true }\n+    fn eq(&self, _: &u64) -> bool {\n+        true\n+    }\n }\n \n #[derive(Hash)]\n struct Bar;\n \n impl PartialEq for Bar {\n-    fn eq(&self, _: &Bar) -> bool { true }\n+    fn eq(&self, _: &Bar) -> bool {\n+        true\n+    }\n }\n \n #[derive(Hash)]\n struct Baz;\n \n impl PartialEq<Baz> for Baz {\n-    fn eq(&self, _: &Baz) -> bool { true }\n+    fn eq(&self, _: &Baz) -> bool {\n+        true\n+    }\n }\n \n #[derive(PartialEq)]\n@@ -49,7 +51,9 @@ impl Hash for Bah {\n struct Qux;\n \n impl Clone for Qux {\n-    fn clone(&self) -> Self { Qux }\n+    fn clone(&self) -> Self {\n+        Qux\n+    }\n }\n \n // looks like unions don't support deriving Clone for now\n@@ -60,9 +64,7 @@ union Union {\n \n impl Clone for Union {\n     fn clone(&self) -> Self {\n-        Union {\n-            a: 42,\n-        }\n+        Union { a: 42 }\n     }\n }\n \n@@ -73,7 +75,9 @@ struct Lt<'a> {\n }\n \n impl<'a> Clone for Lt<'a> {\n-    fn clone(&self) -> Self { unimplemented!() }\n+    fn clone(&self) -> Self {\n+        unimplemented!()\n+    }\n }\n \n // Ok, `Clone` cannot be derived because of the big array\n@@ -83,7 +87,9 @@ struct BigArray {\n }\n \n impl Clone for BigArray {\n-    fn clone(&self) -> Self { unimplemented!() }\n+    fn clone(&self) -> Self {\n+        unimplemented!()\n+    }\n }\n \n // Ok, function pointers are not always Clone\n@@ -93,7 +99,9 @@ struct FnPtr {\n }\n \n impl Clone for FnPtr {\n-    fn clone(&self) -> Self { unimplemented!() }\n+    fn clone(&self) -> Self {\n+        unimplemented!()\n+    }\n }\n \n // Ok, generics\n@@ -103,7 +111,9 @@ struct Generic<T> {\n }\n \n impl<T> Clone for Generic<T> {\n-    fn clone(&self) -> Self { unimplemented!() }\n+    fn clone(&self) -> Self {\n+        unimplemented!()\n+    }\n }\n \n fn main() {}"}, {"sha": "dd36f773337c28ced82aef78eebc8f89ed4fbbc1", "filename": "tests/ui/derive.stderr", "status": "modified", "additions": 70, "deletions": 50, "changes": 120, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fderive.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fderive.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fderive.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,15 +1,17 @@\n error: you are deriving `Hash` but have implemented `PartialEq` explicitly\n-  --> $DIR/derive.rs:27:10\n+  --> $DIR/derive.rs:25:10\n    |\n-27 | #[derive(Hash)]\n+25 | #[derive(Hash)]\n    |          ^^^^\n    |\n    = note: #[deny(clippy::derive_hash_xor_eq)] on by default\n note: `PartialEq` implemented here\n-  --> $DIR/derive.rs:30:1\n+  --> $DIR/derive.rs:28:1\n    |\n-30 | / impl PartialEq for Bar {\n-31 | |     fn eq(&self, _: &Bar) -> bool { true }\n+28 | / impl PartialEq for Bar {\n+29 | |     fn eq(&self, _: &Bar) -> bool {\n+30 | |         true\n+31 | |     }\n 32 | | }\n    | |_^\n \n@@ -23,88 +25,106 @@ note: `PartialEq` implemented here\n   --> $DIR/derive.rs:37:1\n    |\n 37 | / impl PartialEq<Baz> for Baz {\n-38 | |     fn eq(&self, _: &Baz) -> bool { true }\n-39 | | }\n+38 | |     fn eq(&self, _: &Baz) -> bool {\n+39 | |         true\n+40 | |     }\n+41 | | }\n    | |_^\n \n error: you are implementing `Hash` explicitly but have derived `PartialEq`\n-  --> $DIR/derive.rs:44:1\n+  --> $DIR/derive.rs:46:1\n    |\n-44 | / impl Hash for Bah {\n-45 | |     fn hash<H: Hasher>(&self, _: &mut H) {}\n-46 | | }\n+46 | / impl Hash for Bah {\n+47 | |     fn hash<H: Hasher>(&self, _: &mut H) {}\n+48 | | }\n    | |_^\n    |\n note: `PartialEq` implemented here\n-  --> $DIR/derive.rs:41:10\n+  --> $DIR/derive.rs:43:10\n    |\n-41 | #[derive(PartialEq)]\n+43 | #[derive(PartialEq)]\n    |          ^^^^^^^^^\n \n error: you are implementing `Clone` explicitly on a `Copy` type\n-  --> $DIR/derive.rs:51:1\n+  --> $DIR/derive.rs:53:1\n    |\n-51 | / impl Clone for Qux {\n-52 | |     fn clone(&self) -> Self { Qux }\n-53 | | }\n+53 | / impl Clone for Qux {\n+54 | |     fn clone(&self) -> Self {\n+55 | |         Qux\n+56 | |     }\n+57 | | }\n    | |_^\n    |\n    = note: `-D clippy::expl-impl-clone-on-copy` implied by `-D warnings`\n note: consider deriving `Clone` or removing `Copy`\n-  --> $DIR/derive.rs:51:1\n+  --> $DIR/derive.rs:53:1\n    |\n-51 | / impl Clone for Qux {\n-52 | |     fn clone(&self) -> Self { Qux }\n-53 | | }\n+53 | / impl Clone for Qux {\n+54 | |     fn clone(&self) -> Self {\n+55 | |         Qux\n+56 | |     }\n+57 | | }\n    | |_^\n \n error: you are implementing `Clone` explicitly on a `Copy` type\n-  --> $DIR/derive.rs:75:1\n+  --> $DIR/derive.rs:77:1\n    |\n-75 | / impl<'a> Clone for Lt<'a> {\n-76 | |     fn clone(&self) -> Self { unimplemented!() }\n-77 | | }\n+77 | / impl<'a> Clone for Lt<'a> {\n+78 | |     fn clone(&self) -> Self {\n+79 | |         unimplemented!()\n+80 | |     }\n+81 | | }\n    | |_^\n    |\n note: consider deriving `Clone` or removing `Copy`\n-  --> $DIR/derive.rs:75:1\n+  --> $DIR/derive.rs:77:1\n    |\n-75 | / impl<'a> Clone for Lt<'a> {\n-76 | |     fn clone(&self) -> Self { unimplemented!() }\n-77 | | }\n+77 | / impl<'a> Clone for Lt<'a> {\n+78 | |     fn clone(&self) -> Self {\n+79 | |         unimplemented!()\n+80 | |     }\n+81 | | }\n    | |_^\n \n error: you are implementing `Clone` explicitly on a `Copy` type\n-  --> $DIR/derive.rs:85:1\n+  --> $DIR/derive.rs:89:1\n    |\n-85 | / impl Clone for BigArray {\n-86 | |     fn clone(&self) -> Self { unimplemented!() }\n-87 | | }\n+89 | / impl Clone for BigArray {\n+90 | |     fn clone(&self) -> Self {\n+91 | |         unimplemented!()\n+92 | |     }\n+93 | | }\n    | |_^\n    |\n note: consider deriving `Clone` or removing `Copy`\n-  --> $DIR/derive.rs:85:1\n+  --> $DIR/derive.rs:89:1\n    |\n-85 | / impl Clone for BigArray {\n-86 | |     fn clone(&self) -> Self { unimplemented!() }\n-87 | | }\n+89 | / impl Clone for BigArray {\n+90 | |     fn clone(&self) -> Self {\n+91 | |         unimplemented!()\n+92 | |     }\n+93 | | }\n    | |_^\n \n error: you are implementing `Clone` explicitly on a `Copy` type\n-  --> $DIR/derive.rs:95:1\n-   |\n-95 | / impl Clone for FnPtr {\n-96 | |     fn clone(&self) -> Self { unimplemented!() }\n-97 | | }\n-   | |_^\n-   |\n+   --> $DIR/derive.rs:101:1\n+    |\n+101 | / impl Clone for FnPtr {\n+102 | |     fn clone(&self) -> Self {\n+103 | |         unimplemented!()\n+104 | |     }\n+105 | | }\n+    | |_^\n+    |\n note: consider deriving `Clone` or removing `Copy`\n-  --> $DIR/derive.rs:95:1\n-   |\n-95 | / impl Clone for FnPtr {\n-96 | |     fn clone(&self) -> Self { unimplemented!() }\n-97 | | }\n-   | |_^\n+   --> $DIR/derive.rs:101:1\n+    |\n+101 | / impl Clone for FnPtr {\n+102 | |     fn clone(&self) -> Self {\n+103 | |         unimplemented!()\n+104 | |     }\n+105 | | }\n+    | |_^\n \n error: aborting due to 7 previous errors\n "}, {"sha": "3399dba7189658a5521a8d60ce88cbe66b816ebb", "filename": "tests/ui/diverging_sub_expression.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fdiverging_sub_expression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fdiverging_sub_expression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdiverging_sub_expression.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,21 +7,21 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![feature(never_type)]\n-\n #![warn(clippy::diverging_sub_expression)]\n #![allow(clippy::match_same_arms, clippy::logic_bug)]\n \n #[allow(clippy::empty_loop)]\n-fn diverge() -> ! { loop {} }\n+fn diverge() -> ! {\n+    loop {}\n+}\n \n struct A;\n \n impl A {\n-    fn foo(&self) -> ! { diverge() }\n+    fn foo(&self) -> ! {\n+        diverge()\n+    }\n }\n \n #[allow(unused_variables, clippy::unnecessary_operation, clippy::short_circuit_statement)]"}, {"sha": "dfc8be24a8bdd258b60933c798eac7cd2aa7cc06", "filename": "tests/ui/dlist.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fdlist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fdlist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdlist.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,13 +7,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![feature(alloc)]\n #![feature(associated_type_defaults)]\n-\n-\n #![warn(clippy::linkedlist)]\n #![allow(dead_code, clippy::needless_pass_by_value)]\n \n@@ -23,13 +18,13 @@ use alloc::collections::linked_list::LinkedList;\n trait Foo {\n     type Baz = LinkedList<u8>;\n     fn foo(LinkedList<u8>);\n-    const BAR : Option<LinkedList<u8>>;\n+    const BAR: Option<LinkedList<u8>>;\n }\n \n // ok, we don\u2019t want to warn for implementations, see #605\n impl Foo for LinkedList<u8> {\n     fn foo(_: LinkedList<u8>) {}\n-    const BAR : Option<LinkedList<u8>> = None;\n+    const BAR: Option<LinkedList<u8>> = None;\n }\n \n struct Bar;\n@@ -49,7 +44,7 @@ pub fn test_local_not_linted() {\n     let _: LinkedList<u8>;\n }\n \n-fn main(){\n+fn main() {\n     test(LinkedList::new());\n     test_local_not_linted();\n }"}, {"sha": "f2ca4dab9974030d96e77eae239ccc2ffaeb138d", "filename": "tests/ui/dlist.stderr", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fdlist.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fdlist.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdlist.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,48 +1,48 @@\n error: I see you're using a LinkedList! Perhaps you meant some other data structure?\n-  --> $DIR/dlist.rs:24:16\n+  --> $DIR/dlist.rs:19:16\n    |\n-24 |     type Baz = LinkedList<u8>;\n+19 |     type Baz = LinkedList<u8>;\n    |                ^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::linkedlist` implied by `-D warnings`\n    = help: a VecDeque might work\n \n error: I see you're using a LinkedList! Perhaps you meant some other data structure?\n-  --> $DIR/dlist.rs:25:12\n+  --> $DIR/dlist.rs:20:12\n    |\n-25 |     fn foo(LinkedList<u8>);\n+20 |     fn foo(LinkedList<u8>);\n    |            ^^^^^^^^^^^^^^\n    |\n    = help: a VecDeque might work\n \n error: I see you're using a LinkedList! Perhaps you meant some other data structure?\n-  --> $DIR/dlist.rs:26:24\n+  --> $DIR/dlist.rs:21:23\n    |\n-26 |     const BAR : Option<LinkedList<u8>>;\n-   |                        ^^^^^^^^^^^^^^\n+21 |     const BAR: Option<LinkedList<u8>>;\n+   |                       ^^^^^^^^^^^^^^\n    |\n    = help: a VecDeque might work\n \n error: I see you're using a LinkedList! Perhaps you meant some other data structure?\n-  --> $DIR/dlist.rs:37:15\n+  --> $DIR/dlist.rs:32:15\n    |\n-37 |     fn foo(_: LinkedList<u8>) {}\n+32 |     fn foo(_: LinkedList<u8>) {}\n    |               ^^^^^^^^^^^^^^\n    |\n    = help: a VecDeque might work\n \n error: I see you're using a LinkedList! Perhaps you meant some other data structure?\n-  --> $DIR/dlist.rs:40:39\n+  --> $DIR/dlist.rs:35:39\n    |\n-40 | pub fn test(my_favourite_linked_list: LinkedList<u8>) {\n+35 | pub fn test(my_favourite_linked_list: LinkedList<u8>) {\n    |                                       ^^^^^^^^^^^^^^\n    |\n    = help: a VecDeque might work\n \n error: I see you're using a LinkedList! Perhaps you meant some other data structure?\n-  --> $DIR/dlist.rs:44:29\n+  --> $DIR/dlist.rs:39:29\n    |\n-44 | pub fn test_ret() -> Option<LinkedList<u8>> {\n+39 | pub fn test_ret() -> Option<LinkedList<u8>> {\n    |                             ^^^^^^^^^^^^^^\n    |\n    = help: a VecDeque might work"}, {"sha": "70b837a75b68ad4c8ab44669036ef286100a751b", "filename": "tests/ui/double_comparison.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fdouble_comparison.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fdouble_comparison.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdouble_comparison.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,7 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n fn main() {\n     let x = 1;\n     let y = 2;"}, {"sha": "a06f278efc002306555570074834fb01398f92e5", "filename": "tests/ui/double_comparison.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fdouble_comparison.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fdouble_comparison.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdouble_comparison.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,51 +1,51 @@\n error: This binary expression can be simplified\n-  --> $DIR/double_comparison.rs:14:8\n+  --> $DIR/double_comparison.rs:13:8\n    |\n-14 |     if x == y || x < y {\n+13 |     if x == y || x < y {\n    |        ^^^^^^^^^^^^^^^ help: try: `x <= y`\n    |\n    = note: `-D clippy::double-comparisons` implied by `-D warnings`\n \n error: This binary expression can be simplified\n-  --> $DIR/double_comparison.rs:17:8\n+  --> $DIR/double_comparison.rs:16:8\n    |\n-17 |     if x < y || x == y {\n+16 |     if x < y || x == y {\n    |        ^^^^^^^^^^^^^^^ help: try: `x <= y`\n \n error: This binary expression can be simplified\n-  --> $DIR/double_comparison.rs:20:8\n+  --> $DIR/double_comparison.rs:19:8\n    |\n-20 |     if x == y || x > y {\n+19 |     if x == y || x > y {\n    |        ^^^^^^^^^^^^^^^ help: try: `x >= y`\n \n error: This binary expression can be simplified\n-  --> $DIR/double_comparison.rs:23:8\n+  --> $DIR/double_comparison.rs:22:8\n    |\n-23 |     if x > y || x == y {\n+22 |     if x > y || x == y {\n    |        ^^^^^^^^^^^^^^^ help: try: `x >= y`\n \n error: This binary expression can be simplified\n-  --> $DIR/double_comparison.rs:26:8\n+  --> $DIR/double_comparison.rs:25:8\n    |\n-26 |     if x < y || x > y {\n+25 |     if x < y || x > y {\n    |        ^^^^^^^^^^^^^^ help: try: `x != y`\n \n error: This binary expression can be simplified\n-  --> $DIR/double_comparison.rs:29:8\n+  --> $DIR/double_comparison.rs:28:8\n    |\n-29 |     if x > y || x < y {\n+28 |     if x > y || x < y {\n    |        ^^^^^^^^^^^^^^ help: try: `x != y`\n \n error: This binary expression can be simplified\n-  --> $DIR/double_comparison.rs:32:8\n+  --> $DIR/double_comparison.rs:31:8\n    |\n-32 |     if x <= y && x >= y {\n+31 |     if x <= y && x >= y {\n    |        ^^^^^^^^^^^^^^^^ help: try: `x == y`\n \n error: This binary expression can be simplified\n-  --> $DIR/double_comparison.rs:35:8\n+  --> $DIR/double_comparison.rs:34:8\n    |\n-35 |     if x >= y && x <= y {\n+34 |     if x >= y && x <= y {\n    |        ^^^^^^^^^^^^^^^^ help: try: `x == y`\n \n error: aborting due to 8 previous errors"}, {"sha": "7d65122cb5e6c1901c044dfe7b7784f4387a91d1", "filename": "tests/ui/double_neg.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fdouble_neg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fdouble_neg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdouble_neg.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,10 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #[warn(clippy::double_neg)]\n fn main() {\n     let x = 1;"}, {"sha": "11ad56012862c995e9fd847116f8b6ce5203f835", "filename": "tests/ui/double_neg.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fdouble_neg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fdouble_neg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdouble_neg.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,7 +1,7 @@\n error: `--x` could be misinterpreted as pre-decrement by C programmers, is usually a no-op\n-  --> $DIR/double_neg.rs:19:5\n+  --> $DIR/double_neg.rs:15:5\n    |\n-19 |     --x;\n+15 |     --x;\n    |     ^^^\n    |\n    = note: `-D clippy::double-neg` implied by `-D warnings`"}, {"sha": "2ea8954ff59cc792c77d9cb03013bb269b8b21bd", "filename": "tests/ui/drop_forget_copy.rs", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fdrop_forget_copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fdrop_forget_copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdrop_forget_copy.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,29 +7,28 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #![warn(clippy::drop_copy, clippy::forget_copy)]\n #![allow(clippy::toplevel_ref_arg, clippy::drop_ref, clippy::forget_ref, unused_mut)]\n \n use std::mem::{drop, forget};\n use std::vec::Vec;\n \n #[derive(Copy, Clone)]\n-struct SomeStruct {\n-}\n+struct SomeStruct {}\n \n struct AnotherStruct {\n     x: u8,\n     y: u8,\n-    z: Vec<u8>\n+    z: Vec<u8>,\n }\n \n impl Clone for AnotherStruct {\n-    fn clone(& self) -> AnotherStruct {\n-        AnotherStruct{x: self.x, y: self.y, z: self.z.clone()}\n+    fn clone(&self) -> AnotherStruct {\n+        AnotherStruct {\n+            x: self.x,\n+            y: self.y,\n+            z: self.z.clone(),\n+        }\n     }\n }\n \n@@ -52,7 +51,11 @@ fn main() {\n     forget(s4);\n     forget(s5);\n \n-    let a1 = AnotherStruct {x: 255, y: 0, z: vec![1, 2, 3]};\n+    let a1 = AnotherStruct {\n+        x: 255,\n+        y: 0,\n+        z: vec![1, 2, 3],\n+    };\n     let a2 = &a1;\n     let mut a3 = a1.clone();\n     let ref a4 = a1;"}, {"sha": "3b950eaebe38a598585a4681b7ed0cd4835731ae", "filename": "tests/ui/drop_forget_copy.stderr", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fdrop_forget_copy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fdrop_forget_copy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdrop_forget_copy.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,75 +1,75 @@\n error: calls to `std::mem::drop` with a value that implements Copy. Dropping a copy leaves the original intact.\n-  --> $DIR/drop_forget_copy.rs:43:5\n+  --> $DIR/drop_forget_copy.rs:42:5\n    |\n-43 |     drop(s1);\n+42 |     drop(s1);\n    |     ^^^^^^^^\n    |\n    = note: `-D clippy::drop-copy` implied by `-D warnings`\n note: argument has type SomeStruct\n-  --> $DIR/drop_forget_copy.rs:43:10\n+  --> $DIR/drop_forget_copy.rs:42:10\n    |\n-43 |     drop(s1);\n+42 |     drop(s1);\n    |          ^^\n \n error: calls to `std::mem::drop` with a value that implements Copy. Dropping a copy leaves the original intact.\n-  --> $DIR/drop_forget_copy.rs:44:5\n+  --> $DIR/drop_forget_copy.rs:43:5\n    |\n-44 |     drop(s2);\n+43 |     drop(s2);\n    |     ^^^^^^^^\n    |\n note: argument has type SomeStruct\n-  --> $DIR/drop_forget_copy.rs:44:10\n+  --> $DIR/drop_forget_copy.rs:43:10\n    |\n-44 |     drop(s2);\n+43 |     drop(s2);\n    |          ^^\n \n error: calls to `std::mem::drop` with a value that implements Copy. Dropping a copy leaves the original intact.\n-  --> $DIR/drop_forget_copy.rs:46:5\n+  --> $DIR/drop_forget_copy.rs:45:5\n    |\n-46 |     drop(s4);\n+45 |     drop(s4);\n    |     ^^^^^^^^\n    |\n note: argument has type SomeStruct\n-  --> $DIR/drop_forget_copy.rs:46:10\n+  --> $DIR/drop_forget_copy.rs:45:10\n    |\n-46 |     drop(s4);\n+45 |     drop(s4);\n    |          ^^\n \n error: calls to `std::mem::forget` with a value that implements Copy. Forgetting a copy leaves the original intact.\n-  --> $DIR/drop_forget_copy.rs:49:5\n+  --> $DIR/drop_forget_copy.rs:48:5\n    |\n-49 |     forget(s1);\n+48 |     forget(s1);\n    |     ^^^^^^^^^^\n    |\n    = note: `-D clippy::forget-copy` implied by `-D warnings`\n note: argument has type SomeStruct\n-  --> $DIR/drop_forget_copy.rs:49:12\n+  --> $DIR/drop_forget_copy.rs:48:12\n    |\n-49 |     forget(s1);\n+48 |     forget(s1);\n    |            ^^\n \n error: calls to `std::mem::forget` with a value that implements Copy. Forgetting a copy leaves the original intact.\n-  --> $DIR/drop_forget_copy.rs:50:5\n+  --> $DIR/drop_forget_copy.rs:49:5\n    |\n-50 |     forget(s2);\n+49 |     forget(s2);\n    |     ^^^^^^^^^^\n    |\n note: argument has type SomeStruct\n-  --> $DIR/drop_forget_copy.rs:50:12\n+  --> $DIR/drop_forget_copy.rs:49:12\n    |\n-50 |     forget(s2);\n+49 |     forget(s2);\n    |            ^^\n \n error: calls to `std::mem::forget` with a value that implements Copy. Forgetting a copy leaves the original intact.\n-  --> $DIR/drop_forget_copy.rs:52:5\n+  --> $DIR/drop_forget_copy.rs:51:5\n    |\n-52 |     forget(s4);\n+51 |     forget(s4);\n    |     ^^^^^^^^^^\n    |\n note: argument has type SomeStruct\n-  --> $DIR/drop_forget_copy.rs:52:12\n+  --> $DIR/drop_forget_copy.rs:51:12\n    |\n-52 |     forget(s4);\n+51 |     forget(s4);\n    |            ^^\n \n error: aborting due to 6 previous errors"}, {"sha": "6821d4033227f10ed248ca0d6e5f367cc8f1aa7b", "filename": "tests/ui/drop_forget_ref.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fdrop_forget_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fdrop_forget_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdrop_forget_ref.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,10 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #![warn(clippy::drop_ref, clippy::forget_ref)]\n #![allow(clippy::toplevel_ref_arg, clippy::similar_names, clippy::needless_pass_by_value)]\n "}, {"sha": "972ab298c4cd8a6705a094b6146f80a2262c7b92", "filename": "tests/ui/drop_forget_ref.stderr", "status": "modified", "additions": 72, "deletions": 72, "changes": 144, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fdrop_forget_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fdrop_forget_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdrop_forget_ref.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,219 +1,219 @@\n error: calls to `std::mem::drop` with a reference instead of an owned value. Dropping a reference does nothing.\n-  --> $DIR/drop_forget_ref.rs:22:5\n+  --> $DIR/drop_forget_ref.rs:18:5\n    |\n-22 |     drop(&SomeStruct);\n+18 |     drop(&SomeStruct);\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::drop-ref` implied by `-D warnings`\n note: argument has type &SomeStruct\n-  --> $DIR/drop_forget_ref.rs:22:10\n+  --> $DIR/drop_forget_ref.rs:18:10\n    |\n-22 |     drop(&SomeStruct);\n+18 |     drop(&SomeStruct);\n    |          ^^^^^^^^^^^\n \n error: calls to `std::mem::forget` with a reference instead of an owned value. Forgetting a reference does nothing.\n-  --> $DIR/drop_forget_ref.rs:23:5\n+  --> $DIR/drop_forget_ref.rs:19:5\n    |\n-23 |     forget(&SomeStruct);\n+19 |     forget(&SomeStruct);\n    |     ^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::forget-ref` implied by `-D warnings`\n note: argument has type &SomeStruct\n-  --> $DIR/drop_forget_ref.rs:23:12\n+  --> $DIR/drop_forget_ref.rs:19:12\n    |\n-23 |     forget(&SomeStruct);\n+19 |     forget(&SomeStruct);\n    |            ^^^^^^^^^^^\n \n error: calls to `std::mem::drop` with a reference instead of an owned value. Dropping a reference does nothing.\n-  --> $DIR/drop_forget_ref.rs:26:5\n+  --> $DIR/drop_forget_ref.rs:22:5\n    |\n-26 |     drop(&owned1);\n+22 |     drop(&owned1);\n    |     ^^^^^^^^^^^^^\n    |\n note: argument has type &SomeStruct\n-  --> $DIR/drop_forget_ref.rs:26:10\n+  --> $DIR/drop_forget_ref.rs:22:10\n    |\n-26 |     drop(&owned1);\n+22 |     drop(&owned1);\n    |          ^^^^^^^\n \n error: calls to `std::mem::drop` with a reference instead of an owned value. Dropping a reference does nothing.\n-  --> $DIR/drop_forget_ref.rs:27:5\n+  --> $DIR/drop_forget_ref.rs:23:5\n    |\n-27 |     drop(&&owned1);\n+23 |     drop(&&owned1);\n    |     ^^^^^^^^^^^^^^\n    |\n note: argument has type &&SomeStruct\n-  --> $DIR/drop_forget_ref.rs:27:10\n+  --> $DIR/drop_forget_ref.rs:23:10\n    |\n-27 |     drop(&&owned1);\n+23 |     drop(&&owned1);\n    |          ^^^^^^^^\n \n error: calls to `std::mem::drop` with a reference instead of an owned value. Dropping a reference does nothing.\n-  --> $DIR/drop_forget_ref.rs:28:5\n+  --> $DIR/drop_forget_ref.rs:24:5\n    |\n-28 |     drop(&mut owned1);\n+24 |     drop(&mut owned1);\n    |     ^^^^^^^^^^^^^^^^^\n    |\n note: argument has type &mut SomeStruct\n-  --> $DIR/drop_forget_ref.rs:28:10\n+  --> $DIR/drop_forget_ref.rs:24:10\n    |\n-28 |     drop(&mut owned1);\n+24 |     drop(&mut owned1);\n    |          ^^^^^^^^^^^\n \n error: calls to `std::mem::forget` with a reference instead of an owned value. Forgetting a reference does nothing.\n-  --> $DIR/drop_forget_ref.rs:31:5\n+  --> $DIR/drop_forget_ref.rs:27:5\n    |\n-31 |     forget(&owned2);\n+27 |     forget(&owned2);\n    |     ^^^^^^^^^^^^^^^\n    |\n note: argument has type &SomeStruct\n-  --> $DIR/drop_forget_ref.rs:31:12\n+  --> $DIR/drop_forget_ref.rs:27:12\n    |\n-31 |     forget(&owned2);\n+27 |     forget(&owned2);\n    |            ^^^^^^^\n \n error: calls to `std::mem::forget` with a reference instead of an owned value. Forgetting a reference does nothing.\n-  --> $DIR/drop_forget_ref.rs:32:5\n+  --> $DIR/drop_forget_ref.rs:28:5\n    |\n-32 |     forget(&&owned2);\n+28 |     forget(&&owned2);\n    |     ^^^^^^^^^^^^^^^^\n    |\n note: argument has type &&SomeStruct\n-  --> $DIR/drop_forget_ref.rs:32:12\n+  --> $DIR/drop_forget_ref.rs:28:12\n    |\n-32 |     forget(&&owned2);\n+28 |     forget(&&owned2);\n    |            ^^^^^^^^\n \n error: calls to `std::mem::forget` with a reference instead of an owned value. Forgetting a reference does nothing.\n-  --> $DIR/drop_forget_ref.rs:33:5\n+  --> $DIR/drop_forget_ref.rs:29:5\n    |\n-33 |     forget(&mut owned2);\n+29 |     forget(&mut owned2);\n    |     ^^^^^^^^^^^^^^^^^^^\n    |\n note: argument has type &mut SomeStruct\n-  --> $DIR/drop_forget_ref.rs:33:12\n+  --> $DIR/drop_forget_ref.rs:29:12\n    |\n-33 |     forget(&mut owned2);\n+29 |     forget(&mut owned2);\n    |            ^^^^^^^^^^^\n \n error: calls to `std::mem::drop` with a reference instead of an owned value. Dropping a reference does nothing.\n-  --> $DIR/drop_forget_ref.rs:37:5\n+  --> $DIR/drop_forget_ref.rs:33:5\n    |\n-37 |     drop(reference1);\n+33 |     drop(reference1);\n    |     ^^^^^^^^^^^^^^^^\n    |\n note: argument has type &SomeStruct\n-  --> $DIR/drop_forget_ref.rs:37:10\n+  --> $DIR/drop_forget_ref.rs:33:10\n    |\n-37 |     drop(reference1);\n+33 |     drop(reference1);\n    |          ^^^^^^^^^^\n \n error: calls to `std::mem::forget` with a reference instead of an owned value. Forgetting a reference does nothing.\n-  --> $DIR/drop_forget_ref.rs:38:5\n+  --> $DIR/drop_forget_ref.rs:34:5\n    |\n-38 |     forget(&*reference1);\n+34 |     forget(&*reference1);\n    |     ^^^^^^^^^^^^^^^^^^^^\n    |\n note: argument has type &SomeStruct\n-  --> $DIR/drop_forget_ref.rs:38:12\n+  --> $DIR/drop_forget_ref.rs:34:12\n    |\n-38 |     forget(&*reference1);\n+34 |     forget(&*reference1);\n    |            ^^^^^^^^^^^^\n \n error: calls to `std::mem::drop` with a reference instead of an owned value. Dropping a reference does nothing.\n-  --> $DIR/drop_forget_ref.rs:41:5\n+  --> $DIR/drop_forget_ref.rs:37:5\n    |\n-41 |     drop(reference2);\n+37 |     drop(reference2);\n    |     ^^^^^^^^^^^^^^^^\n    |\n note: argument has type &mut SomeStruct\n-  --> $DIR/drop_forget_ref.rs:41:10\n+  --> $DIR/drop_forget_ref.rs:37:10\n    |\n-41 |     drop(reference2);\n+37 |     drop(reference2);\n    |          ^^^^^^^^^^\n \n error: calls to `std::mem::forget` with a reference instead of an owned value. Forgetting a reference does nothing.\n-  --> $DIR/drop_forget_ref.rs:43:5\n+  --> $DIR/drop_forget_ref.rs:39:5\n    |\n-43 |     forget(reference3);\n+39 |     forget(reference3);\n    |     ^^^^^^^^^^^^^^^^^^\n    |\n note: argument has type &mut SomeStruct\n-  --> $DIR/drop_forget_ref.rs:43:12\n+  --> $DIR/drop_forget_ref.rs:39:12\n    |\n-43 |     forget(reference3);\n+39 |     forget(reference3);\n    |            ^^^^^^^^^^\n \n error: calls to `std::mem::drop` with a reference instead of an owned value. Dropping a reference does nothing.\n-  --> $DIR/drop_forget_ref.rs:46:5\n+  --> $DIR/drop_forget_ref.rs:42:5\n    |\n-46 |     drop(reference4);\n+42 |     drop(reference4);\n    |     ^^^^^^^^^^^^^^^^\n    |\n note: argument has type &SomeStruct\n-  --> $DIR/drop_forget_ref.rs:46:10\n+  --> $DIR/drop_forget_ref.rs:42:10\n    |\n-46 |     drop(reference4);\n+42 |     drop(reference4);\n    |          ^^^^^^^^^^\n \n error: calls to `std::mem::forget` with a reference instead of an owned value. Forgetting a reference does nothing.\n-  --> $DIR/drop_forget_ref.rs:47:5\n+  --> $DIR/drop_forget_ref.rs:43:5\n    |\n-47 |     forget(reference4);\n+43 |     forget(reference4);\n    |     ^^^^^^^^^^^^^^^^^^\n    |\n note: argument has type &SomeStruct\n-  --> $DIR/drop_forget_ref.rs:47:12\n+  --> $DIR/drop_forget_ref.rs:43:12\n    |\n-47 |     forget(reference4);\n+43 |     forget(reference4);\n    |            ^^^^^^^^^^\n \n error: calls to `std::mem::drop` with a reference instead of an owned value. Dropping a reference does nothing.\n-  --> $DIR/drop_forget_ref.rs:52:5\n+  --> $DIR/drop_forget_ref.rs:48:5\n    |\n-52 |     drop(&val);\n+48 |     drop(&val);\n    |     ^^^^^^^^^^\n    |\n note: argument has type &T\n-  --> $DIR/drop_forget_ref.rs:52:10\n+  --> $DIR/drop_forget_ref.rs:48:10\n    |\n-52 |     drop(&val);\n+48 |     drop(&val);\n    |          ^^^^\n \n error: calls to `std::mem::forget` with a reference instead of an owned value. Forgetting a reference does nothing.\n-  --> $DIR/drop_forget_ref.rs:58:5\n+  --> $DIR/drop_forget_ref.rs:54:5\n    |\n-58 |     forget(&val);\n+54 |     forget(&val);\n    |     ^^^^^^^^^^^^\n    |\n note: argument has type &T\n-  --> $DIR/drop_forget_ref.rs:58:12\n+  --> $DIR/drop_forget_ref.rs:54:12\n    |\n-58 |     forget(&val);\n+54 |     forget(&val);\n    |            ^^^^\n \n error: calls to `std::mem::drop` with a reference instead of an owned value. Dropping a reference does nothing.\n-  --> $DIR/drop_forget_ref.rs:66:5\n+  --> $DIR/drop_forget_ref.rs:62:5\n    |\n-66 |     std::mem::drop(&SomeStruct);\n+62 |     std::mem::drop(&SomeStruct);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: argument has type &SomeStruct\n-  --> $DIR/drop_forget_ref.rs:66:20\n+  --> $DIR/drop_forget_ref.rs:62:20\n    |\n-66 |     std::mem::drop(&SomeStruct);\n+62 |     std::mem::drop(&SomeStruct);\n    |                    ^^^^^^^^^^^\n \n error: calls to `std::mem::forget` with a reference instead of an owned value. Forgetting a reference does nothing.\n-  --> $DIR/drop_forget_ref.rs:69:5\n+  --> $DIR/drop_forget_ref.rs:65:5\n    |\n-69 |     std::mem::forget(&SomeStruct);\n+65 |     std::mem::forget(&SomeStruct);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: argument has type &SomeStruct\n-  --> $DIR/drop_forget_ref.rs:69:22\n+  --> $DIR/drop_forget_ref.rs:65:22\n    |\n-69 |     std::mem::forget(&SomeStruct);\n+65 |     std::mem::forget(&SomeStruct);\n    |                      ^^^^^^^^^^^\n \n error: aborting due to 18 previous errors"}, {"sha": "da4e2a6dc8abaec569d6c547ae0dece063d5a890", "filename": "tests/ui/duplicate_underscore_argument.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fduplicate_underscore_argument.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fduplicate_underscore_argument.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fduplicate_underscore_argument.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,10 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #![warn(clippy::duplicate_underscore_argument)]\n #[allow(dead_code, unused)]\n "}, {"sha": "ba1b5b1ded7105bce6a2032039d0592f4b8459b2", "filename": "tests/ui/duplicate_underscore_argument.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fduplicate_underscore_argument.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fduplicate_underscore_argument.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fduplicate_underscore_argument.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,7 +1,7 @@\n error: `darth` already exists, having another argument having almost the same name makes code comprehension and documentation more difficult\n-  --> $DIR/duplicate_underscore_argument.rs:17:23\n+  --> $DIR/duplicate_underscore_argument.rs:13:23\n    |\n-17 | fn join_the_dark_side(darth: i32, _darth: i32) {}\n+13 | fn join_the_dark_side(darth: i32, _darth: i32) {}\n    |                       ^^^^^\n    |\n    = note: `-D clippy::duplicate-underscore-argument` implied by `-D warnings`"}, {"sha": "8c2dade34c0fc346148f9f492e36fef83a28c934", "filename": "tests/ui/duration_subsec.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fduration_subsec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fduration_subsec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fduration_subsec.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![warn(clippy::duration_subsec)]\n \n use std::time::Duration;"}, {"sha": "1310ac123406e57b684227b3c4799d2f0aae64da", "filename": "tests/ui/duration_subsec.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fduration_subsec.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fduration_subsec.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fduration_subsec.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,33 +1,33 @@\n error: Calling `subsec_millis()` is more concise than this calculation\n-  --> $DIR/duration_subsec.rs:20:24\n+  --> $DIR/duration_subsec.rs:17:24\n    |\n-20 |     let bad_millis_1 = dur.subsec_micros() / 1_000;\n+17 |     let bad_millis_1 = dur.subsec_micros() / 1_000;\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `dur.subsec_millis()`\n    |\n    = note: `-D clippy::duration-subsec` implied by `-D warnings`\n \n error: Calling `subsec_millis()` is more concise than this calculation\n-  --> $DIR/duration_subsec.rs:21:24\n+  --> $DIR/duration_subsec.rs:18:24\n    |\n-21 |     let bad_millis_2 = dur.subsec_nanos() / 1_000_000;\n+18 |     let bad_millis_2 = dur.subsec_nanos() / 1_000_000;\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `dur.subsec_millis()`\n \n error: Calling `subsec_micros()` is more concise than this calculation\n-  --> $DIR/duration_subsec.rs:26:22\n+  --> $DIR/duration_subsec.rs:23:22\n    |\n-26 |     let bad_micros = dur.subsec_nanos() / 1_000;\n+23 |     let bad_micros = dur.subsec_nanos() / 1_000;\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `dur.subsec_micros()`\n \n error: Calling `subsec_micros()` is more concise than this calculation\n-  --> $DIR/duration_subsec.rs:31:13\n+  --> $DIR/duration_subsec.rs:28:13\n    |\n-31 |     let _ = (&dur).subsec_nanos() / 1_000;\n+28 |     let _ = (&dur).subsec_nanos() / 1_000;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(&dur).subsec_micros()`\n \n error: Calling `subsec_micros()` is more concise than this calculation\n-  --> $DIR/duration_subsec.rs:35:13\n+  --> $DIR/duration_subsec.rs:32:13\n    |\n-35 |     let _ = dur.subsec_nanos() / NANOS_IN_MICRO;\n+32 |     let _ = dur.subsec_nanos() / NANOS_IN_MICRO;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `dur.subsec_micros()`\n \n error: aborting due to 5 previous errors"}, {"sha": "0776eae310c26b2eb7aa1ec12da33aa894399ec1", "filename": "tests/ui/else_if_without_else.rs", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Felse_if_without_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Felse_if_without_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Felse_if_without_else.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,15 +7,18 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![warn(clippy::all)]\n #![warn(clippy::else_if_without_else)]\n \n-fn bla1() -> bool { unimplemented!() }\n-fn bla2() -> bool { unimplemented!() }\n-fn bla3() -> bool { unimplemented!() }\n+fn bla1() -> bool {\n+    unimplemented!()\n+}\n+fn bla2() -> bool {\n+    unimplemented!()\n+}\n+fn bla3() -> bool {\n+    unimplemented!()\n+}\n \n fn main() {\n     if bla1() {\n@@ -48,15 +51,17 @@ fn main() {\n \n     if bla1() {\n         println!(\"if\");\n-    } else if bla2() { //~ ERROR else if without else\n+    } else if bla2() {\n+        //~ ERROR else if without else\n         println!(\"else if\");\n     }\n \n     if bla1() {\n         println!(\"if\");\n     } else if bla2() {\n         println!(\"else if 1\");\n-    } else if bla3() { //~ ERROR else if without else\n+    } else if bla3() {\n+        //~ ERROR else if without else\n         println!(\"else if 2\");\n     }\n }"}, {"sha": "8771df872971ff68b632cfe76481b1545240fc00", "filename": "tests/ui/else_if_without_else.stderr", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Felse_if_without_else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Felse_if_without_else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Felse_if_without_else.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,22 +1,24 @@\n error: if expression with an `else if`, but without a final `else`\n-  --> $DIR/else_if_without_else.rs:51:12\n+  --> $DIR/else_if_without_else.rs:54:12\n    |\n-51 |       } else if bla2() { //~ ERROR else if without else\n+54 |       } else if bla2() {\n    |  ____________^\n-52 | |         println!(\"else if\");\n-53 | |     }\n+55 | |         //~ ERROR else if without else\n+56 | |         println!(\"else if\");\n+57 | |     }\n    | |_____^\n    |\n    = note: `-D clippy::else-if-without-else` implied by `-D warnings`\n    = help: add an `else` block here\n \n error: if expression with an `else if`, but without a final `else`\n-  --> $DIR/else_if_without_else.rs:59:12\n+  --> $DIR/else_if_without_else.rs:63:12\n    |\n-59 |       } else if bla3() { //~ ERROR else if without else\n+63 |       } else if bla3() {\n    |  ____________^\n-60 | |         println!(\"else if 2\");\n-61 | |     }\n+64 | |         //~ ERROR else if without else\n+65 | |         println!(\"else if 2\");\n+66 | |     }\n    | |_____^\n    |\n    = help: add an `else` block here"}, {"sha": "b47afc822f8cfc24214be738fd552d93334e919b", "filename": "tests/ui/empty_enum.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fempty_enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fempty_enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fempty_enum.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,14 +7,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #![allow(dead_code)]\n #![warn(clippy::empty_enum)]\n \n enum Empty {}\n \n-fn main() {\n-}\n+fn main() {}"}, {"sha": "fd981f2210f0a84788b2ca125686274fb6fff2a6", "filename": "tests/ui/empty_enum.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fempty_enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fempty_enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fempty_enum.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,14 +1,14 @@\n error: enum with no variants\n-  --> $DIR/empty_enum.rs:17:1\n+  --> $DIR/empty_enum.rs:13:1\n    |\n-17 | enum Empty {}\n+13 | enum Empty {}\n    | ^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::empty-enum` implied by `-D warnings`\n help: consider using the uninhabited type `!` or a wrapper around it\n-  --> $DIR/empty_enum.rs:17:1\n+  --> $DIR/empty_enum.rs:13:1\n    |\n-17 | enum Empty {}\n+13 | enum Empty {}\n    | ^^^^^^^^^^^^^\n \n error: aborting due to previous error"}, {"sha": "6c826716650288d25c4b165239c8d015ba2d8d0a", "filename": "tests/ui/entry.rs", "status": "modified", "additions": 39, "deletions": 14, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fentry.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,11 +7,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![allow(unused, clippy::needless_pass_by_value)]\n-\n #![warn(clippy::map_entry)]\n \n use std::collections::{BTreeMap, HashMap};\n@@ -20,36 +16,65 @@ use std::hash::Hash;\n fn foo() {}\n \n fn insert_if_absent0<K: Eq + Hash, V>(m: &mut HashMap<K, V>, k: K, v: V) {\n-    if !m.contains_key(&k) { m.insert(k, v); }\n+    if !m.contains_key(&k) {\n+        m.insert(k, v);\n+    }\n }\n \n fn insert_if_absent1<K: Eq + Hash, V>(m: &mut HashMap<K, V>, k: K, v: V) {\n-    if !m.contains_key(&k) { foo(); m.insert(k, v); }\n+    if !m.contains_key(&k) {\n+        foo();\n+        m.insert(k, v);\n+    }\n }\n \n fn insert_if_absent2<K: Eq + Hash, V>(m: &mut HashMap<K, V>, k: K, v: V) {\n-    if !m.contains_key(&k) { m.insert(k, v) } else { None };\n+    if !m.contains_key(&k) {\n+        m.insert(k, v)\n+    } else {\n+        None\n+    };\n }\n \n fn insert_if_present2<K: Eq + Hash, V>(m: &mut HashMap<K, V>, k: K, v: V) {\n-    if m.contains_key(&k) { None } else { m.insert(k, v) };\n+    if m.contains_key(&k) {\n+        None\n+    } else {\n+        m.insert(k, v)\n+    };\n }\n \n fn insert_if_absent3<K: Eq + Hash, V>(m: &mut HashMap<K, V>, k: K, v: V) {\n-    if !m.contains_key(&k) { foo(); m.insert(k, v) } else { None };\n+    if !m.contains_key(&k) {\n+        foo();\n+        m.insert(k, v)\n+    } else {\n+        None\n+    };\n }\n \n fn insert_if_present3<K: Eq + Hash, V>(m: &mut HashMap<K, V>, k: K, v: V) {\n-    if m.contains_key(&k) { None } else { foo(); m.insert(k, v) };\n+    if m.contains_key(&k) {\n+        None\n+    } else {\n+        foo();\n+        m.insert(k, v)\n+    };\n }\n \n fn insert_in_btreemap<K: Ord, V>(m: &mut BTreeMap<K, V>, k: K, v: V) {\n-    if !m.contains_key(&k) { foo(); m.insert(k, v) } else { None };\n+    if !m.contains_key(&k) {\n+        foo();\n+        m.insert(k, v)\n+    } else {\n+        None\n+    };\n }\n \n fn insert_other_if_absent<K: Eq + Hash, V>(m: &mut HashMap<K, V>, k: K, o: K, v: V) {\n-    if !m.contains_key(&k) { m.insert(o, v); }\n+    if !m.contains_key(&k) {\n+        m.insert(o, v);\n+    }\n }\n \n-fn main() {\n-}\n+fn main() {}"}, {"sha": "9a4e0ba31eeead46ef59286501e6b02bdea9af87", "filename": "tests/ui/entry.stderr", "status": "modified", "additions": 49, "deletions": 21, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fentry.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fentry.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fentry.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,46 +1,74 @@\n error: usage of `contains_key` followed by `insert` on a `HashMap`\n-  --> $DIR/entry.rs:23:5\n+  --> $DIR/entry.rs:19:5\n    |\n-23 |     if !m.contains_key(&k) { m.insert(k, v); }\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `m.entry(k).or_insert(v)`\n+19 | /     if !m.contains_key(&k) {\n+20 | |         m.insert(k, v);\n+21 | |     }\n+   | |_____^ help: consider using: `m.entry(k).or_insert(v)`\n    |\n    = note: `-D clippy::map-entry` implied by `-D warnings`\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n-  --> $DIR/entry.rs:27:5\n+  --> $DIR/entry.rs:25:5\n    |\n-27 |     if !m.contains_key(&k) { foo(); m.insert(k, v); }\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `m.entry(k)`\n+25 | /     if !m.contains_key(&k) {\n+26 | |         foo();\n+27 | |         m.insert(k, v);\n+28 | |     }\n+   | |_____^ help: consider using: `m.entry(k)`\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n-  --> $DIR/entry.rs:31:5\n+  --> $DIR/entry.rs:32:5\n    |\n-31 |     if !m.contains_key(&k) { m.insert(k, v) } else { None };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `m.entry(k)`\n+32 | /     if !m.contains_key(&k) {\n+33 | |         m.insert(k, v)\n+34 | |     } else {\n+35 | |         None\n+36 | |     };\n+   | |_____^ help: consider using: `m.entry(k)`\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n-  --> $DIR/entry.rs:35:5\n+  --> $DIR/entry.rs:40:5\n    |\n-35 |     if m.contains_key(&k) { None } else { m.insert(k, v) };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `m.entry(k)`\n+40 | /     if m.contains_key(&k) {\n+41 | |         None\n+42 | |     } else {\n+43 | |         m.insert(k, v)\n+44 | |     };\n+   | |_____^ help: consider using: `m.entry(k)`\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n-  --> $DIR/entry.rs:39:5\n+  --> $DIR/entry.rs:48:5\n    |\n-39 |     if !m.contains_key(&k) { foo(); m.insert(k, v) } else { None };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `m.entry(k)`\n+48 | /     if !m.contains_key(&k) {\n+49 | |         foo();\n+50 | |         m.insert(k, v)\n+51 | |     } else {\n+52 | |         None\n+53 | |     };\n+   | |_____^ help: consider using: `m.entry(k)`\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n-  --> $DIR/entry.rs:43:5\n+  --> $DIR/entry.rs:57:5\n    |\n-43 |     if m.contains_key(&k) { None } else { foo(); m.insert(k, v) };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `m.entry(k)`\n+57 | /     if m.contains_key(&k) {\n+58 | |         None\n+59 | |     } else {\n+60 | |         foo();\n+61 | |         m.insert(k, v)\n+62 | |     };\n+   | |_____^ help: consider using: `m.entry(k)`\n \n error: usage of `contains_key` followed by `insert` on a `BTreeMap`\n-  --> $DIR/entry.rs:47:5\n+  --> $DIR/entry.rs:66:5\n    |\n-47 |     if !m.contains_key(&k) { foo(); m.insert(k, v) } else { None };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `m.entry(k)`\n+66 | /     if !m.contains_key(&k) {\n+67 | |         foo();\n+68 | |         m.insert(k, v)\n+69 | |     } else {\n+70 | |         None\n+71 | |     };\n+   | |_____^ help: consider using: `m.entry(k)`\n \n error: aborting due to 7 previous errors\n "}, {"sha": "dde2896e415d50203bdae6a14fd6ea79009a597d", "filename": "tests/ui/enum_glob_use.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fenum_glob_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fenum_glob_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fenum_glob_use.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![warn(clippy::all, clippy::pedantic)]\n #![allow(unused_imports, dead_code, clippy::missing_docs_in_private_items)]\n \n@@ -34,8 +31,7 @@ mod tests {\n }\n \n #[allow(non_snake_case)]\n-mod CamelCaseName {\n-}\n+mod CamelCaseName {}\n \n use CamelCaseName::*;\n "}, {"sha": "58c6f4d3301fb3bde277aac68f9f0c6357ec8dc7", "filename": "tests/ui/enum_glob_use.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fenum_glob_use.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fenum_glob_use.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fenum_glob_use.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,15 +1,15 @@\n error: don't use glob imports for enum variants\n-  --> $DIR/enum_glob_use.rs:16:1\n+  --> $DIR/enum_glob_use.rs:13:1\n    |\n-16 | use std::cmp::Ordering::*;\n+13 | use std::cmp::Ordering::*;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::enum-glob-use` implied by `-D warnings`\n \n error: don't use glob imports for enum variants\n-  --> $DIR/enum_glob_use.rs:22:1\n+  --> $DIR/enum_glob_use.rs:19:1\n    |\n-22 | use self::Enum::*;\n+19 | use self::Enum::*;\n    | ^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 2 previous errors"}, {"sha": "0c8f3a36a3d98fd938c9cef81029a3f63794df76", "filename": "tests/ui/enum_variants.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fenum_variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fenum_variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fenum_variants.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,19 +7,17 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![feature(non_ascii_idents)]\n-\n #![warn(clippy::all, clippy::pub_enum_variant_names)]\n \n enum FakeCallType {\n-    CALL, CREATE\n+    CALL,\n+    CREATE,\n }\n \n enum FakeCallType2 {\n-    CALL, CREATELL\n+    CALL,\n+    CREATELL,\n }\n \n enum Foo {\n@@ -49,7 +47,8 @@ enum BadCallType {\n     CallTypeDestroy,\n }\n \n-enum TwoCallType { // no error\n+enum TwoCallType {\n+    // no error\n     CallTypeCall,\n     CallTypeCreate,\n }\n@@ -60,7 +59,8 @@ enum Consts {\n     ConstantLie,\n }\n \n-enum Two { // no error here\n+enum Two {\n+    // no error here\n     ConstantInt,\n     ConstantInfer,\n }"}, {"sha": "ff8f9b82ae6d6ac8347803d894aaf703357a1b84", "filename": "tests/ui/enum_variants.stderr", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fenum_variants.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fenum_variants.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fenum_variants.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,61 +1,61 @@\n error: Variant name ends with the enum's name\n-  --> $DIR/enum_variants.rs:26:5\n+  --> $DIR/enum_variants.rs:24:5\n    |\n-26 |     cFoo,\n+24 |     cFoo,\n    |     ^^^^\n    |\n    = note: `-D clippy::enum-variant-names` implied by `-D warnings`\n \n error: Variant name starts with the enum's name\n-  --> $DIR/enum_variants.rs:37:5\n+  --> $DIR/enum_variants.rs:35:5\n    |\n-37 |     FoodGood,\n+35 |     FoodGood,\n    |     ^^^^^^^^\n \n error: Variant name starts with the enum's name\n-  --> $DIR/enum_variants.rs:38:5\n+  --> $DIR/enum_variants.rs:36:5\n    |\n-38 |     FoodMiddle,\n+36 |     FoodMiddle,\n    |     ^^^^^^^^^^\n \n error: Variant name starts with the enum's name\n-  --> $DIR/enum_variants.rs:39:5\n+  --> $DIR/enum_variants.rs:37:5\n    |\n-39 |     FoodBad,\n+37 |     FoodBad,\n    |     ^^^^^^^\n \n error: All variants have the same prefix: `Food`\n-  --> $DIR/enum_variants.rs:36:1\n+  --> $DIR/enum_variants.rs:34:1\n    |\n-36 | / enum Food {\n-37 | |     FoodGood,\n-38 | |     FoodMiddle,\n-39 | |     FoodBad,\n-40 | | }\n+34 | / enum Food {\n+35 | |     FoodGood,\n+36 | |     FoodMiddle,\n+37 | |     FoodBad,\n+38 | | }\n    | |_^\n    |\n    = help: remove the prefixes and use full paths to the variants instead of glob imports\n \n error: All variants have the same prefix: `CallType`\n-  --> $DIR/enum_variants.rs:46:1\n+  --> $DIR/enum_variants.rs:44:1\n    |\n-46 | / enum BadCallType {\n-47 | |     CallTypeCall,\n-48 | |     CallTypeCreate,\n-49 | |     CallTypeDestroy,\n-50 | | }\n+44 | / enum BadCallType {\n+45 | |     CallTypeCall,\n+46 | |     CallTypeCreate,\n+47 | |     CallTypeDestroy,\n+48 | | }\n    | |_^\n    |\n    = help: remove the prefixes and use full paths to the variants instead of glob imports\n \n error: All variants have the same prefix: `Constant`\n-  --> $DIR/enum_variants.rs:57:1\n+  --> $DIR/enum_variants.rs:56:1\n    |\n-57 | / enum Consts {\n-58 | |     ConstantInt,\n-59 | |     ConstantCake,\n-60 | |     ConstantLie,\n-61 | | }\n+56 | / enum Consts {\n+57 | |     ConstantInt,\n+58 | |     ConstantCake,\n+59 | |     ConstantLie,\n+60 | | }\n    | |_^\n    |\n    = help: remove the prefixes and use full paths to the variants instead of glob imports"}, {"sha": "9c1cf8e8614a50d5005e5b3d630a96b366fba010", "filename": "tests/ui/enums_clike.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fenums_clike.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fenums_clike.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fenums_clike.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,14 +7,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n // ignore-x86\n \n-\n #![warn(clippy::all)]\n-\n #![allow(unused)]\n \n #[repr(usize)]\n@@ -62,5 +57,4 @@ trait Trait {\n }\n */\n \n-fn main() {\n-}\n+fn main() {}"}, {"sha": "0756b9a80d40abc9286eafed9f329397e46c985d", "filename": "tests/ui/enums_clike.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fenums_clike.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fenums_clike.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fenums_clike.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,51 +1,51 @@\n error: Clike enum variant discriminant is not portable to 32-bit targets\n-  --> $DIR/enums_clike.rs:22:5\n+  --> $DIR/enums_clike.rs:17:5\n    |\n-22 |     X = 0x1_0000_0000,\n+17 |     X = 0x1_0000_0000,\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::enum-clike-unportable-variant` implied by `-D warnings`\n \n error: Clike enum variant discriminant is not portable to 32-bit targets\n-  --> $DIR/enums_clike.rs:29:5\n+  --> $DIR/enums_clike.rs:24:5\n    |\n-29 |     X = 0x1_0000_0000,\n+24 |     X = 0x1_0000_0000,\n    |     ^^^^^^^^^^^^^^^^^\n \n error: Clike enum variant discriminant is not portable to 32-bit targets\n-  --> $DIR/enums_clike.rs:32:5\n+  --> $DIR/enums_clike.rs:27:5\n    |\n-32 |     A = 0xFFFF_FFFF,\n+27 |     A = 0xFFFF_FFFF,\n    |     ^^^^^^^^^^^^^^^\n \n error: Clike enum variant discriminant is not portable to 32-bit targets\n-  --> $DIR/enums_clike.rs:39:5\n+  --> $DIR/enums_clike.rs:34:5\n    |\n-39 |     Z = 0xFFFF_FFFF,\n+34 |     Z = 0xFFFF_FFFF,\n    |     ^^^^^^^^^^^^^^^\n \n error: Clike enum variant discriminant is not portable to 32-bit targets\n-  --> $DIR/enums_clike.rs:40:5\n+  --> $DIR/enums_clike.rs:35:5\n    |\n-40 |     A = 0x1_0000_0000,\n+35 |     A = 0x1_0000_0000,\n    |     ^^^^^^^^^^^^^^^^^\n \n error: Clike enum variant discriminant is not portable to 32-bit targets\n-  --> $DIR/enums_clike.rs:42:5\n+  --> $DIR/enums_clike.rs:37:5\n    |\n-42 |     C = (std::i32::MIN as isize) - 1,\n+37 |     C = (std::i32::MIN as isize) - 1,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: Clike enum variant discriminant is not portable to 32-bit targets\n-  --> $DIR/enums_clike.rs:48:5\n+  --> $DIR/enums_clike.rs:43:5\n    |\n-48 |     Z = 0xFFFF_FFFF,\n+43 |     Z = 0xFFFF_FFFF,\n    |     ^^^^^^^^^^^^^^^\n \n error: Clike enum variant discriminant is not portable to 32-bit targets\n-  --> $DIR/enums_clike.rs:49:5\n+  --> $DIR/enums_clike.rs:44:5\n    |\n-49 |     A = 0x1_0000_0000,\n+44 |     A = 0x1_0000_0000,\n    |     ^^^^^^^^^^^^^^^^^\n \n error: aborting due to 8 previous errors"}, {"sha": "d71662131943384ef1cfb19eccc0b707de04e8be", "filename": "tests/ui/erasing_op.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Ferasing_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Ferasing_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ferasing_op.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,10 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #[allow(clippy::no_effect)]\n #[warn(clippy::erasing_op)]\n fn main() {"}, {"sha": "a500a132af7df839deae3ed08968c843a23486f0", "filename": "tests/ui/erasing_op.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Ferasing_op.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Ferasing_op.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ferasing_op.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,21 +1,21 @@\n error: this operation will always return zero. This is likely not the intended outcome\n-  --> $DIR/erasing_op.rs:19:5\n+  --> $DIR/erasing_op.rs:15:5\n    |\n-19 |     x * 0;\n+15 |     x * 0;\n    |     ^^^^^\n    |\n    = note: `-D clippy::erasing-op` implied by `-D warnings`\n \n error: this operation will always return zero. This is likely not the intended outcome\n-  --> $DIR/erasing_op.rs:20:5\n+  --> $DIR/erasing_op.rs:16:5\n    |\n-20 |     0 & x;\n+16 |     0 & x;\n    |     ^^^^^\n \n error: this operation will always return zero. This is likely not the intended outcome\n-  --> $DIR/erasing_op.rs:21:5\n+  --> $DIR/erasing_op.rs:17:5\n    |\n-21 |     0 / x;\n+17 |     0 / x;\n    |     ^^^^^\n \n error: aborting due to 3 previous errors"}, {"sha": "cc65c6e63066de499aa14c5e35251f1b92da9a34", "filename": "tests/ui/escape_analysis.rs", "status": "modified", "additions": 10, "deletions": 14, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fescape_analysis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fescape_analysis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fescape_analysis.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -8,15 +8,14 @@\n // except according to those terms.\n \n #![feature(box_syntax)]\n-\n #![allow(clippy::borrowed_box, clippy::needless_pass_by_value, clippy::unused_unit)]\n #![warn(clippy::boxed_local)]\n \n #[derive(Clone)]\n struct A;\n \n impl A {\n-    fn foo(&self){}\n+    fn foo(&self) {}\n }\n \n trait Z {\n@@ -29,8 +28,7 @@ impl Z for A {\n     }\n }\n \n-fn main() {\n-}\n+fn main() {}\n \n fn ok_box_trait(boxed_trait: &Box<Z>) {\n     let boxed_local = boxed_trait;\n@@ -85,11 +83,9 @@ fn nowarn_pass() {\n     take_box(&bx); // fn needs &Box\n }\n \n-\n fn take_box(x: &Box<A>) {}\n fn take_ref(x: &A) {}\n \n-\n fn nowarn_ref_take() {\n     // false positive, should actually warn\n     let x = box A;\n@@ -100,27 +96,28 @@ fn nowarn_ref_take() {\n fn nowarn_match() {\n     let x = box A; // moved into a match\n     match x {\n-        y => drop(y)\n+        y => drop(y),\n     }\n }\n \n fn warn_match() {\n     let x = box A;\n-    match &x { // not moved\n-        ref y => ()\n+    match &x {\n+        // not moved\n+        ref y => (),\n     }\n }\n \n fn nowarn_large_array() {\n     // should not warn, is large array\n     // and should not be on stack\n     let x = box [1; 10000];\n-    match &x { // not moved\n-        ref y => ()\n+    match &x {\n+        // not moved\n+        ref y => (),\n     }\n }\n \n-\n /// ICE regression test\n pub trait Foo {\n     type Item;\n@@ -134,8 +131,7 @@ pub struct PeekableSeekable<I: Foo> {\n     _peeked: I::Item,\n }\n \n-pub fn new(_needs_name: Box<PeekableSeekable<&()>>) -> () {\n-}\n+pub fn new(_needs_name: Box<PeekableSeekable<&()>>) -> () {}\n \n /// Regression for #916, #1123\n ///"}, {"sha": "ec9b7317eedf98e0757118850fddb2e7f92c62d0", "filename": "tests/ui/escape_analysis.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fescape_analysis.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fescape_analysis.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fescape_analysis.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,15 +1,15 @@\n error: local variable doesn't need to be boxed here\n-  --> $DIR/escape_analysis.rs:45:13\n+  --> $DIR/escape_analysis.rs:43:13\n    |\n-45 | fn warn_arg(x: Box<A>) {\n+43 | fn warn_arg(x: Box<A>) {\n    |             ^\n    |\n    = note: `-D clippy::boxed-local` implied by `-D warnings`\n \n error: local variable doesn't need to be boxed here\n-   --> $DIR/escape_analysis.rs:137:12\n+   --> $DIR/escape_analysis.rs:134:12\n     |\n-137 | pub fn new(_needs_name: Box<PeekableSeekable<&()>>) -> () {\n+134 | pub fn new(_needs_name: Box<PeekableSeekable<&()>>) -> () {}\n     |            ^^^^^^^^^^^\n \n error: aborting due to 2 previous errors"}, {"sha": "7b39d1c4054e24553da042bddd14c86a7ad20d30", "filename": "tests/ui/eta.rs", "status": "modified", "additions": 21, "deletions": 10, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Feta.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Feta.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feta.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,10 +7,15 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-#![allow(unused, clippy::no_effect, clippy::redundant_closure_call, clippy::many_single_char_names, clippy::needless_pass_by_value, clippy::option_map_unit_fn, clippy::trivially_copy_pass_by_ref)]\n+#![allow(\n+    unused,\n+    clippy::no_effect,\n+    clippy::redundant_closure_call,\n+    clippy::many_single_char_names,\n+    clippy::needless_pass_by_value,\n+    clippy::option_map_unit_fn,\n+    clippy::trivially_copy_pass_by_ref\n+)]\n #![warn(clippy::redundant_closure, clippy::needless_borrow)]\n \n fn main() {\n@@ -32,25 +37,31 @@ fn main() {\n         Some(vec![1i32, 2]).map(|v| -> Box<::std::ops::Deref<Target = [i32]>> { Box::new(v) });\n }\n \n-fn meta<F>(f: F) where F: Fn(u8) {\n+fn meta<F>(f: F)\n+where\n+    F: Fn(u8),\n+{\n     f(1u8)\n }\n \n-fn foo(_: u8) {\n-}\n+fn foo(_: u8) {}\n \n fn foo2(_: u8) -> u8 {\n     1u8\n }\n \n fn all<X, F>(x: &[X], y: &X, f: F) -> bool\n-where F: Fn(&X, &X) -> bool {\n+where\n+    F: Fn(&X, &X) -> bool,\n+{\n     x.iter().all(|e| f(e, y))\n }\n \n-fn below(x: &u8, y: &u8) -> bool { x < y }\n+fn below(x: &u8, y: &u8) -> bool {\n+    x < y\n+}\n \n-unsafe fn unsafe_fn(_: u8) { }\n+unsafe fn unsafe_fn(_: u8) {}\n \n fn divergent(_: u8) -> ! {\n     unimplemented!()"}, {"sha": "cd14855c49df491ded2759bedfd1fcafe4d1abd8", "filename": "tests/ui/eta.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Feta.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Feta.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feta.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,35 +1,35 @@\n error: redundant closure found\n-  --> $DIR/eta.rs:17:27\n+  --> $DIR/eta.rs:22:27\n    |\n-17 |     let a = Some(1u8).map(|a| foo(a));\n+22 |     let a = Some(1u8).map(|a| foo(a));\n    |                           ^^^^^^^^^^ help: remove closure as shown: `foo`\n    |\n    = note: `-D clippy::redundant-closure` implied by `-D warnings`\n \n error: redundant closure found\n-  --> $DIR/eta.rs:18:10\n+  --> $DIR/eta.rs:23:10\n    |\n-18 |     meta(|a| foo(a));\n+23 |     meta(|a| foo(a));\n    |          ^^^^^^^^^^ help: remove closure as shown: `foo`\n \n error: redundant closure found\n-  --> $DIR/eta.rs:19:27\n+  --> $DIR/eta.rs:24:27\n    |\n-19 |     let c = Some(1u8).map(|a| {1+2; foo}(a));\n+24 |     let c = Some(1u8).map(|a| {1+2; foo}(a));\n    |                           ^^^^^^^^^^^^^^^^^ help: remove closure as shown: `{1+2; foo}`\n \n error: this expression borrows a reference that is immediately dereferenced by the compiler\n-  --> $DIR/eta.rs:21:21\n+  --> $DIR/eta.rs:26:21\n    |\n-21 |     all(&[1, 2, 3], &&2, |x, y| below(x, y)); //is adjusted\n+26 |     all(&[1, 2, 3], &&2, |x, y| below(x, y)); //is adjusted\n    |                     ^^^ help: change this to: `&2`\n    |\n    = note: `-D clippy::needless-borrow` implied by `-D warnings`\n \n error: redundant closure found\n-  --> $DIR/eta.rs:28:27\n+  --> $DIR/eta.rs:33:27\n    |\n-28 |     let e = Some(1u8).map(|a| generic(a));\n+33 |     let e = Some(1u8).map(|a| generic(a));\n    |                           ^^^^^^^^^^^^^^ help: remove closure as shown: `generic`\n \n error: aborting due to 5 previous errors"}, {"sha": "82110d5e4f39d6d27675932325885093a40d3f7f", "filename": "tests/ui/eval_order_dependence.rs", "status": "modified", "additions": 79, "deletions": 19, "changes": 98, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Feval_order_dependence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Feval_order_dependence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feval_order_dependence.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,52 +7,112 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #[warn(clippy::eval_order_dependence)]\n-#[allow(unused_assignments, unused_variables, clippy::many_single_char_names, clippy::no_effect, dead_code, clippy::blacklisted_name)]\n+#[allow(\n+    unused_assignments,\n+    unused_variables,\n+    clippy::many_single_char_names,\n+    clippy::no_effect,\n+    dead_code,\n+    clippy::blacklisted_name\n+)]\n fn main() {\n     let mut x = 0;\n-    let a = { x = 1; 1 } + x;\n+    let a = {\n+        x = 1;\n+        1\n+    } + x;\n \n     // Example from iss#277\n-    x += { x = 20; 2 };\n+    x += {\n+        x = 20;\n+        2\n+    };\n \n     // Does it work in weird places?\n     // ...in the base for a struct expression?\n-    struct Foo { a: i32, b: i32 };\n+    struct Foo {\n+        a: i32,\n+        b: i32,\n+    };\n     let base = Foo { a: 4, b: 5 };\n-    let foo = Foo { a: x, .. { x = 6; base } };\n+    let foo = Foo {\n+        a: x,\n+        ..{\n+            x = 6;\n+            base\n+        }\n+    };\n     // ...inside a closure?\n     let closure = || {\n         let mut x = 0;\n-        x += { x = 20; 2 };\n+        x += {\n+            x = 20;\n+            2\n+        };\n     };\n     // ...not across a closure?\n     let mut y = 0;\n-    let b = (y, || { y = 1 });\n+    let b = (y, || y = 1);\n \n     // && and || evaluate left-to-right.\n-    let a = { x = 1; true } && (x == 3);\n-    let a = { x = 1; true } || (x == 3);\n+    let a = {\n+        x = 1;\n+        true\n+    } && (x == 3);\n+    let a = {\n+        x = 1;\n+        true\n+    } || (x == 3);\n \n     // Make sure we don't get confused by alpha conversion.\n-    let a = { let mut x = 1; x = 2; 1 } + x;\n+    let a = {\n+        let mut x = 1;\n+        x = 2;\n+        1\n+    } + x;\n \n     // No warning if we don't read the variable...\n-    x = { x = 20; 2 };\n+    x = {\n+        x = 20;\n+        2\n+    };\n     // ...if the assignment is in a closure...\n-    let b = { || { x = 1; }; 1 } + x;\n+    let b = {\n+        || {\n+            x = 1;\n+        };\n+        1\n+    } + x;\n     // ... or the access is under an address.\n-    let b = ({ let p = &x; 1 }, { x = 1; x });\n+    let b = (\n+        {\n+            let p = &x;\n+            1\n+        },\n+        {\n+            x = 1;\n+            x\n+        },\n+    );\n \n     // Limitation: l-values other than simple variables don't trigger\n     // the warning.\n     let mut tup = (0, 0);\n-    let c = { tup.0 = 1; 1 } + tup.0;\n+    let c = {\n+        tup.0 = 1;\n+        1\n+    } + tup.0;\n     // Limitation: you can get away with a read under address-of.\n     let mut z = 0;\n-    let b = (&{ z = x; x }, { x = 3; x });\n+    let b = (\n+        &{\n+            z = x;\n+            x\n+        },\n+        {\n+            x = 3;\n+            x\n+        },\n+    );\n }"}, {"sha": "38317376fc4e3cb8de6b2bc2b54845b70050b66c", "filename": "tests/ui/eval_order_dependence.stderr", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Feval_order_dependence.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Feval_order_dependence.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feval_order_dependence.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,51 +1,51 @@\n error: unsequenced read of a variable\n-  --> $DIR/eval_order_dependence.rs:18:28\n+  --> $DIR/eval_order_dependence.rs:24:9\n    |\n-18 |     let a = { x = 1; 1 } + x;\n-   |                            ^\n+24 |     } + x;\n+   |         ^\n    |\n    = note: `-D clippy::eval-order-dependence` implied by `-D warnings`\n note: whether read occurs before this write depends on evaluation order\n-  --> $DIR/eval_order_dependence.rs:18:15\n+  --> $DIR/eval_order_dependence.rs:22:9\n    |\n-18 |     let a = { x = 1; 1 } + x;\n-   |               ^^^^^\n+22 |         x = 1;\n+   |         ^^^^^\n \n error: unsequenced read of a variable\n-  --> $DIR/eval_order_dependence.rs:21:5\n+  --> $DIR/eval_order_dependence.rs:27:5\n    |\n-21 |     x += { x = 20; 2 };\n+27 |     x += {\n    |     ^\n    |\n note: whether read occurs before this write depends on evaluation order\n-  --> $DIR/eval_order_dependence.rs:21:12\n+  --> $DIR/eval_order_dependence.rs:28:9\n    |\n-21 |     x += { x = 20; 2 };\n-   |            ^^^^^^\n+28 |         x = 20;\n+   |         ^^^^^^\n \n error: unsequenced read of a variable\n-  --> $DIR/eval_order_dependence.rs:27:24\n+  --> $DIR/eval_order_dependence.rs:40:12\n    |\n-27 |     let foo = Foo { a: x, .. { x = 6; base } };\n-   |                        ^\n+40 |         a: x,\n+   |            ^\n    |\n note: whether read occurs before this write depends on evaluation order\n-  --> $DIR/eval_order_dependence.rs:27:32\n+  --> $DIR/eval_order_dependence.rs:42:13\n    |\n-27 |     let foo = Foo { a: x, .. { x = 6; base } };\n-   |                                ^^^^^\n+42 |             x = 6;\n+   |             ^^^^^\n \n error: unsequenced read of a variable\n-  --> $DIR/eval_order_dependence.rs:31:9\n+  --> $DIR/eval_order_dependence.rs:49:9\n    |\n-31 |         x += { x = 20; 2 };\n+49 |         x += {\n    |         ^\n    |\n note: whether read occurs before this write depends on evaluation order\n-  --> $DIR/eval_order_dependence.rs:31:16\n+  --> $DIR/eval_order_dependence.rs:50:13\n    |\n-31 |         x += { x = 20; 2 };\n-   |                ^^^^^^\n+50 |             x = 20;\n+   |             ^^^^^^\n \n error: aborting due to 4 previous errors\n "}, {"sha": "59b252a3a80a9b013d0bb19396fa9adcf4871573", "filename": "tests/ui/excessive_precision.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fexcessive_precision.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fexcessive_precision.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexcessive_precision.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,8 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n #![warn(clippy::excessive_precision)]\n #![allow(clippy::print_literal)]\n "}, {"sha": "a69652373d511bad912ac357271bd98a35dda64d", "filename": "tests/ui/excessive_precision.stderr", "status": "modified", "additions": 36, "deletions": 36, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fexcessive_precision.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fexcessive_precision.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexcessive_precision.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,111 +1,111 @@\n error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:25:26\n+  --> $DIR/excessive_precision.rs:23:26\n    |\n-25 |     const BAD32_1: f32 = 0.123_456_789_f32;\n+23 |     const BAD32_1: f32 = 0.123_456_789_f32;\n    |                          ^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.123_456_79`\n    |\n    = note: `-D clippy::excessive-precision` implied by `-D warnings`\n \n error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:26:26\n+  --> $DIR/excessive_precision.rs:24:26\n    |\n-26 |     const BAD32_2: f32 = 0.123_456_789;\n+24 |     const BAD32_2: f32 = 0.123_456_789;\n    |                          ^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.123_456_79`\n \n error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:27:26\n+  --> $DIR/excessive_precision.rs:25:26\n    |\n-27 |     const BAD32_3: f32 = 0.100_000_000_000_1;\n+25 |     const BAD32_3: f32 = 0.100_000_000_000_1;\n    |                          ^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.1`\n \n error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:28:29\n+  --> $DIR/excessive_precision.rs:26:29\n    |\n-28 |     const BAD32_EDGE: f32 = 1.000_000_9;\n+26 |     const BAD32_EDGE: f32 = 1.000_000_9;\n    |                             ^^^^^^^^^^^ help: consider changing the type or truncating it to: `1.000_001`\n \n error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:30:26\n+  --> $DIR/excessive_precision.rs:28:26\n    |\n-30 |     const BAD64_1: f64 = 0.123_456_789_012_345_67f64;\n+28 |     const BAD64_1: f64 = 0.123_456_789_012_345_67f64;\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.123_456_789_012_345_66`\n \n error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:31:26\n+  --> $DIR/excessive_precision.rs:29:26\n    |\n-31 |     const BAD64_2: f64 = 0.123_456_789_012_345_67;\n+29 |     const BAD64_2: f64 = 0.123_456_789_012_345_67;\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.123_456_789_012_345_66`\n \n error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:32:26\n+  --> $DIR/excessive_precision.rs:30:26\n    |\n-32 |     const BAD64_3: f64 = 0.100_000_000_000_000_000_1;\n+30 |     const BAD64_3: f64 = 0.100_000_000_000_000_000_1;\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.1`\n \n error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:35:22\n+  --> $DIR/excessive_precision.rs:33:22\n    |\n-35 |     println!(\"{:?}\", 8.888_888_888_888_888_888_888);\n+33 |     println!(\"{:?}\", 8.888_888_888_888_888_888_888);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `8.888_888_888_888_89`\n \n error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:46:22\n+  --> $DIR/excessive_precision.rs:44:22\n    |\n-46 |     let bad32: f32 = 1.123_456_789;\n+44 |     let bad32: f32 = 1.123_456_789;\n    |                      ^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `1.123_456_8`\n \n error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:47:26\n+  --> $DIR/excessive_precision.rs:45:26\n    |\n-47 |     let bad32_suf: f32 = 1.123_456_789_f32;\n+45 |     let bad32_suf: f32 = 1.123_456_789_f32;\n    |                          ^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `1.123_456_8`\n \n error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:48:21\n+  --> $DIR/excessive_precision.rs:46:21\n    |\n-48 |     let bad32_inf = 1.123_456_789_f32;\n+46 |     let bad32_inf = 1.123_456_789_f32;\n    |                     ^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `1.123_456_8`\n \n error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:50:22\n+  --> $DIR/excessive_precision.rs:48:22\n    |\n-50 |     let bad64: f64 = 0.123_456_789_012_345_67;\n+48 |     let bad64: f64 = 0.123_456_789_012_345_67;\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.123_456_789_012_345_66`\n \n error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:51:26\n+  --> $DIR/excessive_precision.rs:49:26\n    |\n-51 |     let bad64_suf: f64 = 0.123_456_789_012_345_67f64;\n+49 |     let bad64_suf: f64 = 0.123_456_789_012_345_67f64;\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.123_456_789_012_345_66`\n \n error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:52:21\n+  --> $DIR/excessive_precision.rs:50:21\n    |\n-52 |     let bad64_inf = 0.123_456_789_012_345_67;\n+50 |     let bad64_inf = 0.123_456_789_012_345_67;\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.123_456_789_012_345_66`\n \n error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:58:36\n+  --> $DIR/excessive_precision.rs:56:36\n    |\n-58 |     let bad_vec32: Vec<f32> = vec![0.123_456_789];\n+56 |     let bad_vec32: Vec<f32> = vec![0.123_456_789];\n    |                                    ^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.123_456_79`\n \n error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:59:36\n+  --> $DIR/excessive_precision.rs:57:36\n    |\n-59 |     let bad_vec64: Vec<f64> = vec![0.123_456_789_123_456_789];\n+57 |     let bad_vec64: Vec<f64> = vec![0.123_456_789_123_456_789];\n    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `0.123_456_789_123_456_78`\n \n error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:63:24\n+  --> $DIR/excessive_precision.rs:61:24\n    |\n-63 |     let bad_e32: f32 = 1.123_456_788_888e-10;\n+61 |     let bad_e32: f32 = 1.123_456_788_888e-10;\n    |                        ^^^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `1.123_456_8e-10`\n \n error: float has excessive precision\n-  --> $DIR/excessive_precision.rs:66:27\n+  --> $DIR/excessive_precision.rs:64:27\n    |\n-66 |     let bad_bige32: f32 = 1.123_456_788_888E-10;\n+64 |     let bad_bige32: f32 = 1.123_456_788_888E-10;\n    |                           ^^^^^^^^^^^^^^^^^^^^^ help: consider changing the type or truncating it to: `1.123_456_8E-10`\n \n error: aborting due to 18 previous errors"}, {"sha": "8afffa4d84345b03d247444cb51dbebf93d19a16", "filename": "tests/ui/expect_fun_call.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fexpect_fun_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fexpect_fun_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexpect_fun_call.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -16,7 +16,9 @@ fn expect_fun_call() {\n     struct Foo;\n \n     impl Foo {\n-        fn new() -> Self { Foo }\n+        fn new() -> Self {\n+            Foo\n+        }\n \n         fn expect(&self, msg: &str) {\n             panic!(\"{}\", msg)"}, {"sha": "ad8fe14e9a032f33fc792d2e201bfd417ae9250a", "filename": "tests/ui/expect_fun_call.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fexpect_fun_call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fexpect_fun_call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexpect_fun_call.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,39 +1,39 @@\n error: use of `expect` followed by a function call\n-  --> $DIR/expect_fun_call.rs:34:26\n+  --> $DIR/expect_fun_call.rs:36:26\n    |\n-34 |     with_none_and_format.expect(&format!(\"Error {}: fake error\", error_code));\n+36 |     with_none_and_format.expect(&format!(\"Error {}: fake error\", error_code));\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| panic!(\"Error {}: fake error\", error_code))`\n    |\n    = note: `-D clippy::expect-fun-call` implied by `-D warnings`\n \n error: use of `expect` followed by a function call\n-  --> $DIR/expect_fun_call.rs:37:26\n+  --> $DIR/expect_fun_call.rs:39:26\n    |\n-37 |     with_none_and_as_str.expect(format!(\"Error {}: fake error\", error_code).as_str());\n+39 |     with_none_and_as_str.expect(format!(\"Error {}: fake error\", error_code).as_str());\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| panic!(\"Error {}: fake error\", error_code))`\n \n error: use of `expect` followed by a function call\n-  --> $DIR/expect_fun_call.rs:47:25\n+  --> $DIR/expect_fun_call.rs:49:25\n    |\n-47 |     with_err_and_format.expect(&format!(\"Error {}: fake error\", error_code));\n+49 |     with_err_and_format.expect(&format!(\"Error {}: fake error\", error_code));\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|_| panic!(\"Error {}: fake error\", error_code))`\n \n error: use of `expect` followed by a function call\n-  --> $DIR/expect_fun_call.rs:50:25\n+  --> $DIR/expect_fun_call.rs:52:25\n    |\n-50 |     with_err_and_as_str.expect(format!(\"Error {}: fake error\", error_code).as_str());\n+52 |     with_err_and_as_str.expect(format!(\"Error {}: fake error\", error_code).as_str());\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|_| panic!(\"Error {}: fake error\", error_code))`\n \n error: use of `expect` followed by a function call\n-  --> $DIR/expect_fun_call.rs:65:17\n+  --> $DIR/expect_fun_call.rs:67:17\n    |\n-65 |     Some(\"foo\").expect({ &format!(\"error\") });\n+67 |     Some(\"foo\").expect({ &format!(\"error\") });\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| { let msg = { &format!(\"error\") }; panic!(msg) }))`\n \n error: use of `expect` followed by a function call\n-  --> $DIR/expect_fun_call.rs:66:17\n+  --> $DIR/expect_fun_call.rs:68:17\n    |\n-66 |     Some(\"foo\").expect(format!(\"error\").as_ref());\n+68 |     Some(\"foo\").expect(format!(\"error\").as_ref());\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| panic!(\"error\"))`\n \n error: aborting due to 6 previous errors"}, {"sha": "75d905659d9b1f8e1ed4c635fd11c482de930407", "filename": "tests/ui/explicit_counter_loop.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fexplicit_counter_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fexplicit_counter_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexplicit_counter_loop.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -26,9 +26,11 @@ fn main() {\n mod issue_1219 {\n     pub fn test() {\n         // should not trigger the lint because variable is used after the loop #473\n-        let vec = vec![1,2,3];\n+        let vec = vec![1, 2, 3];\n         let mut index = 0;\n-        for _v in &vec { index += 1 }\n+        for _v in &vec {\n+            index += 1\n+        }\n         println!(\"index: {}\", index);\n \n         // should not trigger the lint because the count is conditional #1219"}, {"sha": "caafd2375f006b500b9a0bdbffcb2ce01e9801fe", "filename": "tests/ui/explicit_counter_loop.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fexplicit_counter_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fexplicit_counter_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexplicit_counter_loop.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -13,15 +13,15 @@ error: the variable `_index` is used as a loop counter. Consider using `for (_in\n    |               ^^^^\n \n error: the variable `count` is used as a loop counter. Consider using `for (count, item) in text.chars().enumerate()` or similar iterators\n-  --> $DIR/explicit_counter_loop.rs:58:19\n+  --> $DIR/explicit_counter_loop.rs:60:19\n    |\n-58 |         for ch in text.chars() {\n+60 |         for ch in text.chars() {\n    |                   ^^^^^^^^^^^^\n \n error: the variable `count` is used as a loop counter. Consider using `for (count, item) in text.chars().enumerate()` or similar iterators\n-  --> $DIR/explicit_counter_loop.rs:69:19\n+  --> $DIR/explicit_counter_loop.rs:71:19\n    |\n-69 |         for ch in text.chars() {\n+71 |         for ch in text.chars() {\n    |                   ^^^^^^^^^^^^\n \n error: aborting due to 4 previous errors"}, {"sha": "10a4bca9f492fcd177e64921b46461816f49d6b8", "filename": "tests/ui/explicit_write.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fexplicit_write.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fexplicit_write.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexplicit_write.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,12 +7,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![warn(clippy::explicit_write)]\n \n-\n fn stdout() -> String {\n     String::new()\n }"}, {"sha": "171bf312a9bdf78daf2c5a10510c7abd4799444f", "filename": "tests/ui/explicit_write.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fexplicit_write.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fexplicit_write.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fexplicit_write.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,39 +1,39 @@\n error: use of `write!(stdout(), ...).unwrap()`. Consider using `print!` instead\n-  --> $DIR/explicit_write.rs:28:9\n+  --> $DIR/explicit_write.rs:24:9\n    |\n-28 |         write!(std::io::stdout(), \"test\").unwrap();\n+24 |         write!(std::io::stdout(), \"test\").unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::explicit-write` implied by `-D warnings`\n \n error: use of `write!(stderr(), ...).unwrap()`. Consider using `eprint!` instead\n-  --> $DIR/explicit_write.rs:29:9\n+  --> $DIR/explicit_write.rs:25:9\n    |\n-29 |         write!(std::io::stderr(), \"test\").unwrap();\n+25 |         write!(std::io::stderr(), \"test\").unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of `writeln!(stdout(), ...).unwrap()`. Consider using `println!` instead\n-  --> $DIR/explicit_write.rs:30:9\n+  --> $DIR/explicit_write.rs:26:9\n    |\n-30 |         writeln!(std::io::stdout(), \"test\").unwrap();\n+26 |         writeln!(std::io::stdout(), \"test\").unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of `writeln!(stderr(), ...).unwrap()`. Consider using `eprintln!` instead\n-  --> $DIR/explicit_write.rs:31:9\n+  --> $DIR/explicit_write.rs:27:9\n    |\n-31 |         writeln!(std::io::stderr(), \"test\").unwrap();\n+27 |         writeln!(std::io::stderr(), \"test\").unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of `stdout().write_fmt(...).unwrap()`. Consider using `print!` instead\n-  --> $DIR/explicit_write.rs:32:9\n+  --> $DIR/explicit_write.rs:28:9\n    |\n-32 |         std::io::stdout().write_fmt(format_args!(\"test\")).unwrap();\n+28 |         std::io::stdout().write_fmt(format_args!(\"test\")).unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of `stderr().write_fmt(...).unwrap()`. Consider using `eprint!` instead\n-  --> $DIR/explicit_write.rs:33:9\n+  --> $DIR/explicit_write.rs:29:9\n    |\n-33 |         std::io::stderr().write_fmt(format_args!(\"test\")).unwrap();\n+29 |         std::io::stderr().write_fmt(format_args!(\"test\")).unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 6 previous errors"}, {"sha": "0d8c369660b8a61d784da40c929ecb581d8998d5", "filename": "tests/ui/fallible_impl_from.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Ffallible_impl_from.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Ffallible_impl_from.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffallible_impl_from.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![deny(clippy::fallible_impl_from)]\n \n // docs example\n@@ -20,7 +17,6 @@ impl From<String> for Foo {\n     }\n }\n \n-\n struct Valid(Vec<u8>);\n \n impl<'a> From<&'a str> for Valid {\n@@ -34,7 +30,6 @@ impl From<usize> for Valid {\n     }\n }\n \n-\n struct Invalid;\n \n impl From<usize> for Invalid {"}, {"sha": "8af5933a9f8406555718246b386ddcc28cd3858f", "filename": "tests/ui/fallible_impl_from.stderr", "status": "modified", "additions": 42, "deletions": 42, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Ffallible_impl_from.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Ffallible_impl_from.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffallible_impl_from.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,91 +1,91 @@\n error: consider implementing `TryFrom` instead\n-  --> $DIR/fallible_impl_from.rs:17:1\n+  --> $DIR/fallible_impl_from.rs:14:1\n    |\n-17 | / impl From<String> for Foo {\n-18 | |     fn from(s: String) -> Self {\n-19 | |         Foo(s.parse().unwrap())\n-20 | |     }\n-21 | | }\n+14 | / impl From<String> for Foo {\n+15 | |     fn from(s: String) -> Self {\n+16 | |         Foo(s.parse().unwrap())\n+17 | |     }\n+18 | | }\n    | |_^\n    |\n note: lint level defined here\n-  --> $DIR/fallible_impl_from.rs:13:9\n+  --> $DIR/fallible_impl_from.rs:10:9\n    |\n-13 | #![deny(clippy::fallible_impl_from)]\n+10 | #![deny(clippy::fallible_impl_from)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: `From` is intended for infallible conversions only. Use `TryFrom` if there's a possibility for the conversion to fail.\n note: potential failure(s)\n-  --> $DIR/fallible_impl_from.rs:19:13\n+  --> $DIR/fallible_impl_from.rs:16:13\n    |\n-19 |         Foo(s.parse().unwrap())\n+16 |         Foo(s.parse().unwrap())\n    |             ^^^^^^^^^^^^^^^^^^\n \n error: consider implementing `TryFrom` instead\n-  --> $DIR/fallible_impl_from.rs:40:1\n+  --> $DIR/fallible_impl_from.rs:35:1\n    |\n-40 | / impl From<usize> for Invalid {\n-41 | |     fn from(i: usize) -> Invalid {\n-42 | |         if i != 42 {\n-43 | |             panic!();\n+35 | / impl From<usize> for Invalid {\n+36 | |     fn from(i: usize) -> Invalid {\n+37 | |         if i != 42 {\n+38 | |             panic!();\n ...  |\n-46 | |     }\n-47 | | }\n+41 | |     }\n+42 | | }\n    | |_^\n    |\n    = help: `From` is intended for infallible conversions only. Use `TryFrom` if there's a possibility for the conversion to fail.\n note: potential failure(s)\n-  --> $DIR/fallible_impl_from.rs:43:13\n+  --> $DIR/fallible_impl_from.rs:38:13\n    |\n-43 |             panic!();\n+38 |             panic!();\n    |             ^^^^^^^^^\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: consider implementing `TryFrom` instead\n-  --> $DIR/fallible_impl_from.rs:49:1\n+  --> $DIR/fallible_impl_from.rs:44:1\n    |\n-49 | / impl From<Option<String>> for Invalid {\n-50 | |     fn from(s: Option<String>) -> Invalid {\n-51 | |         let s = s.unwrap();\n-52 | |         if !s.is_empty() {\n+44 | / impl From<Option<String>> for Invalid {\n+45 | |     fn from(s: Option<String>) -> Invalid {\n+46 | |         let s = s.unwrap();\n+47 | |         if !s.is_empty() {\n ...  |\n-58 | |     }\n-59 | | }\n+53 | |     }\n+54 | | }\n    | |_^\n    |\n    = help: `From` is intended for infallible conversions only. Use `TryFrom` if there's a possibility for the conversion to fail.\n note: potential failure(s)\n-  --> $DIR/fallible_impl_from.rs:51:17\n+  --> $DIR/fallible_impl_from.rs:46:17\n    |\n-51 |         let s = s.unwrap();\n+46 |         let s = s.unwrap();\n    |                 ^^^^^^^^^^\n-52 |         if !s.is_empty() {\n-53 |             panic!(42);\n+47 |         if !s.is_empty() {\n+48 |             panic!(42);\n    |             ^^^^^^^^^^^\n-54 |         } else if s.parse::<u32>().unwrap() != 42 {\n+49 |         } else if s.parse::<u32>().unwrap() != 42 {\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^\n-55 |             panic!(\"{:?}\", s);\n+50 |             panic!(\"{:?}\", s);\n    |             ^^^^^^^^^^^^^^^^^^\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: consider implementing `TryFrom` instead\n-  --> $DIR/fallible_impl_from.rs:67:1\n+  --> $DIR/fallible_impl_from.rs:62:1\n    |\n-67 | / impl<'a> From<&'a mut <Box<u32> as ProjStrTrait>::ProjString> for Invalid {\n-68 | |     fn from(s: &'a mut <Box<u32> as ProjStrTrait>::ProjString) -> Invalid {\n-69 | |         if s.parse::<u32>().ok().unwrap() != 42 {\n-70 | |             panic!(\"{:?}\", s);\n+62 | / impl<'a> From<&'a mut <Box<u32> as ProjStrTrait>::ProjString> for Invalid {\n+63 | |     fn from(s: &'a mut <Box<u32> as ProjStrTrait>::ProjString) -> Invalid {\n+64 | |         if s.parse::<u32>().ok().unwrap() != 42 {\n+65 | |             panic!(\"{:?}\", s);\n ...  |\n-73 | |     }\n-74 | | }\n+68 | |     }\n+69 | | }\n    | |_^\n    |\n    = help: `From` is intended for infallible conversions only. Use `TryFrom` if there's a possibility for the conversion to fail.\n note: potential failure(s)\n-  --> $DIR/fallible_impl_from.rs:69:12\n+  --> $DIR/fallible_impl_from.rs:64:12\n    |\n-69 |         if s.parse::<u32>().ok().unwrap() != 42 {\n+64 |         if s.parse::<u32>().ok().unwrap() != 42 {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-70 |             panic!(\"{:?}\", s);\n+65 |             panic!(\"{:?}\", s);\n    |             ^^^^^^^^^^^^^^^^^^\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n "}, {"sha": "7ca74fd4b99529cd7adb731b5fbf2b7dc6c8bd1b", "filename": "tests/ui/filter_methods.rs", "status": "modified", "additions": 19, "deletions": 23, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Ffilter_methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Ffilter_methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffilter_methods.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,31 +7,27 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #![warn(clippy::all, clippy::pedantic)]\n #![allow(clippy::missing_docs_in_private_items)]\n \n fn main() {\n-    let _: Vec<_> = vec![5; 6].into_iter()\n-                              .filter(|&x| x == 0)\n-                              .map(|x| x * 2)\n-                              .collect();\n-\n-    let _: Vec<_> = vec![5_i8; 6].into_iter()\n-                                .filter(|&x| x == 0)\n-                                .flat_map(|x| x.checked_mul(2))\n-                                .collect();\n-\n-    let _: Vec<_> = vec![5_i8; 6].into_iter()\n-                                .filter_map(|x| x.checked_mul(2))\n-                                .flat_map(|x| x.checked_mul(2))\n-                                .collect();\n-\n-    let _: Vec<_> = vec![5_i8; 6].into_iter()\n-                                .filter_map(|x| x.checked_mul(2))\n-                                .map(|x| x.checked_mul(2))\n-                                .collect();\n+    let _: Vec<_> = vec![5; 6].into_iter().filter(|&x| x == 0).map(|x| x * 2).collect();\n+\n+    let _: Vec<_> = vec![5_i8; 6]\n+        .into_iter()\n+        .filter(|&x| x == 0)\n+        .flat_map(|x| x.checked_mul(2))\n+        .collect();\n+\n+    let _: Vec<_> = vec![5_i8; 6]\n+        .into_iter()\n+        .filter_map(|x| x.checked_mul(2))\n+        .flat_map(|x| x.checked_mul(2))\n+        .collect();\n+\n+    let _: Vec<_> = vec![5_i8; 6]\n+        .into_iter()\n+        .filter_map(|x| x.checked_mul(2))\n+        .map(|x| x.checked_mul(2))\n+        .collect();\n }"}, {"sha": "8fde78ca5a7226eaa3e6ee191fc9bcb62832c9ec", "filename": "tests/ui/filter_methods.stderr", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Ffilter_methods.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Ffilter_methods.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffilter_methods.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,40 +1,40 @@\n error: called `filter(p).map(q)` on an `Iterator`. This is more succinctly expressed by calling `.filter_map(..)` instead.\n-  --> $DIR/filter_methods.rs:18:21\n+  --> $DIR/filter_methods.rs:14:21\n    |\n-18 |       let _: Vec<_> = vec![5; 6].into_iter()\n-   |  _____________________^\n-19 | |                               .filter(|&x| x == 0)\n-20 | |                               .map(|x| x * 2)\n-   | |_____________________________________________^\n+14 |     let _: Vec<_> = vec![5; 6].into_iter().filter(|&x| x == 0).map(|x| x * 2).collect();\n+   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::filter-map` implied by `-D warnings`\n \n error: called `filter(p).flat_map(q)` on an `Iterator`. This is more succinctly expressed by calling `.flat_map(..)` and filtering by returning an empty Iterator.\n-  --> $DIR/filter_methods.rs:23:21\n+  --> $DIR/filter_methods.rs:16:21\n    |\n-23 |       let _: Vec<_> = vec![5_i8; 6].into_iter()\n+16 |       let _: Vec<_> = vec![5_i8; 6]\n    |  _____________________^\n-24 | |                                 .filter(|&x| x == 0)\n-25 | |                                 .flat_map(|x| x.checked_mul(2))\n-   | |_______________________________________________________________^\n+17 | |         .into_iter()\n+18 | |         .filter(|&x| x == 0)\n+19 | |         .flat_map(|x| x.checked_mul(2))\n+   | |_______________________________________^\n \n error: called `filter_map(p).flat_map(q)` on an `Iterator`. This is more succinctly expressed by calling `.flat_map(..)` and filtering by returning an empty Iterator.\n-  --> $DIR/filter_methods.rs:28:21\n+  --> $DIR/filter_methods.rs:22:21\n    |\n-28 |       let _: Vec<_> = vec![5_i8; 6].into_iter()\n+22 |       let _: Vec<_> = vec![5_i8; 6]\n    |  _____________________^\n-29 | |                                 .filter_map(|x| x.checked_mul(2))\n-30 | |                                 .flat_map(|x| x.checked_mul(2))\n-   | |_______________________________________________________________^\n+23 | |         .into_iter()\n+24 | |         .filter_map(|x| x.checked_mul(2))\n+25 | |         .flat_map(|x| x.checked_mul(2))\n+   | |_______________________________________^\n \n error: called `filter_map(p).map(q)` on an `Iterator`. This is more succinctly expressed by only calling `.filter_map(..)` instead.\n-  --> $DIR/filter_methods.rs:33:21\n+  --> $DIR/filter_methods.rs:28:21\n    |\n-33 |       let _: Vec<_> = vec![5_i8; 6].into_iter()\n+28 |       let _: Vec<_> = vec![5_i8; 6]\n    |  _____________________^\n-34 | |                                 .filter_map(|x| x.checked_mul(2))\n-35 | |                                 .map(|x| x.checked_mul(2))\n-   | |__________________________________________________________^\n+29 | |         .into_iter()\n+30 | |         .filter_map(|x| x.checked_mul(2))\n+31 | |         .map(|x| x.checked_mul(2))\n+   | |__________________________________^\n \n error: aborting due to 4 previous errors\n "}, {"sha": "2d55e30a2d3d06319f1cf4fbce3abd14f27979cf", "filename": "tests/ui/float_cmp.rs", "status": "modified", "additions": 22, "deletions": 12, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Ffloat_cmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Ffloat_cmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffloat_cmp.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,31 +7,41 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #![warn(clippy::float_cmp)]\n #![allow(unused, clippy::no_effect, clippy::unnecessary_operation, clippy::cast_lossless)]\n \n use std::ops::Add;\n \n-const ZERO : f32 = 0.0;\n-const ONE : f32 = ZERO + 1.0;\n+const ZERO: f32 = 0.0;\n+const ONE: f32 = ZERO + 1.0;\n \n-fn twice<T>(x : T) -> T where T : Add<T, Output = T>, T : Copy {\n+fn twice<T>(x: T) -> T\n+where\n+    T: Add<T, Output = T>,\n+    T: Copy,\n+{\n     x + x\n }\n \n fn eq_fl(x: f32, y: f32) -> bool {\n-    if x.is_nan() { y.is_nan() } else { x == y } // no error, inside \"eq\" fn\n+    if x.is_nan() {\n+        y.is_nan()\n+    } else {\n+        x == y\n+    } // no error, inside \"eq\" fn\n }\n \n fn fl_eq(x: f32, y: f32) -> bool {\n-    if x.is_nan() { y.is_nan() } else { x == y } // no error, inside \"eq\" fn\n+    if x.is_nan() {\n+        y.is_nan()\n+    } else {\n+        x == y\n+    } // no error, inside \"eq\" fn\n }\n \n-struct X { val: f32 }\n+struct X {\n+    val: f32,\n+}\n \n impl PartialEq for X {\n     fn eq(&self, o: &X) -> bool {\n@@ -59,7 +69,7 @@ fn main() {\n     ONE as f64 != 2.0;\n     ONE as f64 != 0.0; // no error, comparison with zero is ok\n \n-    let x : f64 = 1.0;\n+    let x: f64 = 1.0;\n \n     x == 1.0;\n     x != 0f64; // no error, comparison with zero is ok\n@@ -71,7 +81,7 @@ fn main() {\n     x <= 0.0;\n     x >= 0.0;\n \n-    let xs : [f32; 1] = [0.0];\n+    let xs: [f32; 1] = [0.0];\n     let a: *const f32 = xs.as_ptr();\n     let b: *const f32 = xs.as_ptr();\n "}, {"sha": "3acd71eb99bc3303b5c06085edb98a1bec21f1f2", "filename": "tests/ui/float_cmp.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Ffloat_cmp.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Ffloat_cmp.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffloat_cmp.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,38 +1,38 @@\n error: strict comparison of f32 or f64\n-  --> $DIR/float_cmp.rs:59:5\n+  --> $DIR/float_cmp.rs:69:5\n    |\n-59 |     ONE as f64 != 2.0;\n+69 |     ONE as f64 != 2.0;\n    |     ^^^^^^^^^^^^^^^^^ help: consider comparing them within some error: `(ONE as f64 - 2.0).abs() < error`\n    |\n    = note: `-D clippy::float-cmp` implied by `-D warnings`\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n-  --> $DIR/float_cmp.rs:59:5\n+  --> $DIR/float_cmp.rs:69:5\n    |\n-59 |     ONE as f64 != 2.0;\n+69 |     ONE as f64 != 2.0;\n    |     ^^^^^^^^^^^^^^^^^\n \n error: strict comparison of f32 or f64\n-  --> $DIR/float_cmp.rs:64:5\n+  --> $DIR/float_cmp.rs:74:5\n    |\n-64 |     x == 1.0;\n+74 |     x == 1.0;\n    |     ^^^^^^^^ help: consider comparing them within some error: `(x - 1.0).abs() < error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n-  --> $DIR/float_cmp.rs:64:5\n+  --> $DIR/float_cmp.rs:74:5\n    |\n-64 |     x == 1.0;\n+74 |     x == 1.0;\n    |     ^^^^^^^^\n \n error: strict comparison of f32 or f64\n-  --> $DIR/float_cmp.rs:67:5\n+  --> $DIR/float_cmp.rs:77:5\n    |\n-67 |     twice(x) != twice(ONE as f64);\n+77 |     twice(x) != twice(ONE as f64);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider comparing them within some error: `(twice(x) - twice(ONE as f64)).abs() < error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n-  --> $DIR/float_cmp.rs:67:5\n+  --> $DIR/float_cmp.rs:77:5\n    |\n-67 |     twice(x) != twice(ONE as f64);\n+77 |     twice(x) != twice(ONE as f64);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 3 previous errors"}, {"sha": "e02671e0dcc15d270d106bc5b2c0e29c5902d8d6", "filename": "tests/ui/float_cmp_const.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Ffloat_cmp_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Ffloat_cmp_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffloat_cmp_const.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,10 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #![warn(clippy::float_cmp_const)]\n #![allow(clippy::float_cmp)]\n #![allow(unused, clippy::no_effect, clippy::unnecessary_operation)]\n@@ -19,7 +15,11 @@ const ONE: f32 = 1.0;\n const TWO: f32 = 2.0;\n \n fn eq_one(x: f32) -> bool {\n-    if x.is_nan() { false } else { x == ONE } // no error, inside \"eq\" fn\n+    if x.is_nan() {\n+        false\n+    } else {\n+        x == ONE\n+    } // no error, inside \"eq\" fn\n }\n \n fn main() {"}, {"sha": "9b48a965cb31eaf61200b41e91b47f89dffac4c3", "filename": "tests/ui/fn_to_numeric_cast.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Ffn_to_numeric_cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Ffn_to_numeric_cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffn_to_numeric_cast.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,13 +7,13 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n // only-64bit\n \n-\n #![warn(clippy::fn_to_numeric_cast, clippy::fn_to_numeric_cast_with_truncation)]\n \n-fn foo() -> String { String::new() }\n+fn foo() -> String {\n+    String::new()\n+}\n \n fn test_function_to_numeric_cast() {\n     let _ = foo as i8;"}, {"sha": "4747269bccdd175fed7d28d7a98f5bc1028547dc", "filename": "tests/ui/for_loop.rs", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Ffor_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Ffor_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor_loop.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -25,10 +25,22 @@ impl Unrelated {\n     }\n }\n \n-#[warn(clippy::needless_range_loop, clippy::explicit_iter_loop, clippy::explicit_into_iter_loop, clippy::iter_next_loop, clippy::reverse_range_loop,\n-       clippy::for_kv_map)]\n+#[warn(\n+    clippy::needless_range_loop,\n+    clippy::explicit_iter_loop,\n+    clippy::explicit_into_iter_loop,\n+    clippy::iter_next_loop,\n+    clippy::reverse_range_loop,\n+    clippy::for_kv_map\n+)]\n #[warn(clippy::unused_collect)]\n-#[allow(clippy::linkedlist, clippy::shadow_unrelated, clippy::unnecessary_mut_passed, clippy::cyclomatic_complexity, clippy::similar_names)]\n+#[allow(\n+    clippy::linkedlist,\n+    clippy::shadow_unrelated,\n+    clippy::unnecessary_mut_passed,\n+    clippy::cyclomatic_complexity,\n+    clippy::similar_names\n+)]\n #[allow(clippy::many_single_char_names, unused_variables, clippy::into_iter_on_array)]\n fn main() {\n     const MAX_LEN: usize = 42;"}, {"sha": "640cee1bc2f9b690b82c95ec5d2e1b8c984e33d4", "filename": "tests/ui/for_loop.stderr", "status": "modified", "additions": 139, "deletions": 139, "changes": 278, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Ffor_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Ffor_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor_loop.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,420 +1,420 @@\n error: the loop variable `i` is only used to index `vec`.\n-  --> $DIR/for_loop.rs:38:14\n+  --> $DIR/for_loop.rs:50:14\n    |\n-38 |     for i in 0..vec.len() {\n+50 |     for i in 0..vec.len() {\n    |              ^^^^^^^^^^^^\n    |\n    = note: `-D clippy::needless-range-loop` implied by `-D warnings`\n help: consider using an iterator\n    |\n-38 |     for <item> in &vec {\n+50 |     for <item> in &vec {\n    |         ^^^^^^    ^^^^\n \n error: the loop variable `i` is only used to index `vec`.\n-  --> $DIR/for_loop.rs:47:14\n+  --> $DIR/for_loop.rs:59:14\n    |\n-47 |     for i in 0..vec.len() {\n+59 |     for i in 0..vec.len() {\n    |              ^^^^^^^^^^^^\n help: consider using an iterator\n    |\n-47 |     for <item> in &vec {\n+59 |     for <item> in &vec {\n    |         ^^^^^^    ^^^^\n \n error: the loop variable `j` is only used to index `STATIC`.\n-  --> $DIR/for_loop.rs:52:14\n+  --> $DIR/for_loop.rs:64:14\n    |\n-52 |     for j in 0..4 {\n+64 |     for j in 0..4 {\n    |              ^^^^\n help: consider using an iterator\n    |\n-52 |     for <item> in &STATIC {\n+64 |     for <item> in &STATIC {\n    |         ^^^^^^    ^^^^^^^\n \n error: the loop variable `j` is only used to index `CONST`.\n-  --> $DIR/for_loop.rs:56:14\n+  --> $DIR/for_loop.rs:68:14\n    |\n-56 |     for j in 0..4 {\n+68 |     for j in 0..4 {\n    |              ^^^^\n help: consider using an iterator\n    |\n-56 |     for <item> in &CONST {\n+68 |     for <item> in &CONST {\n    |         ^^^^^^    ^^^^^^\n \n error: the loop variable `i` is used to index `vec`\n-  --> $DIR/for_loop.rs:60:14\n+  --> $DIR/for_loop.rs:72:14\n    |\n-60 |     for i in 0..vec.len() {\n+72 |     for i in 0..vec.len() {\n    |              ^^^^^^^^^^^^\n help: consider using an iterator\n    |\n-60 |     for (i, <item>) in vec.iter().enumerate() {\n+72 |     for (i, <item>) in vec.iter().enumerate() {\n    |         ^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is only used to index `vec2`.\n-  --> $DIR/for_loop.rs:68:14\n+  --> $DIR/for_loop.rs:80:14\n    |\n-68 |     for i in 0..vec.len() {\n+80 |     for i in 0..vec.len() {\n    |              ^^^^^^^^^^^^\n help: consider using an iterator\n    |\n-68 |     for <item> in vec2.iter().take(vec.len()) {\n+80 |     for <item> in vec2.iter().take(vec.len()) {\n    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is only used to index `vec`.\n-  --> $DIR/for_loop.rs:72:14\n+  --> $DIR/for_loop.rs:84:14\n    |\n-72 |     for i in 5..vec.len() {\n+84 |     for i in 5..vec.len() {\n    |              ^^^^^^^^^^^^\n help: consider using an iterator\n    |\n-72 |     for <item> in vec.iter().skip(5) {\n+84 |     for <item> in vec.iter().skip(5) {\n    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is only used to index `vec`.\n-  --> $DIR/for_loop.rs:76:14\n+  --> $DIR/for_loop.rs:88:14\n    |\n-76 |     for i in 0..MAX_LEN {\n+88 |     for i in 0..MAX_LEN {\n    |              ^^^^^^^^^^\n help: consider using an iterator\n    |\n-76 |     for <item> in vec.iter().take(MAX_LEN) {\n+88 |     for <item> in vec.iter().take(MAX_LEN) {\n    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is only used to index `vec`.\n-  --> $DIR/for_loop.rs:80:14\n+  --> $DIR/for_loop.rs:92:14\n    |\n-80 |     for i in 0..=MAX_LEN {\n+92 |     for i in 0..=MAX_LEN {\n    |              ^^^^^^^^^^^\n help: consider using an iterator\n    |\n-80 |     for <item> in vec.iter().take(MAX_LEN + 1) {\n+92 |     for <item> in vec.iter().take(MAX_LEN + 1) {\n    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is only used to index `vec`.\n-  --> $DIR/for_loop.rs:84:14\n+  --> $DIR/for_loop.rs:96:14\n    |\n-84 |     for i in 5..10 {\n+96 |     for i in 5..10 {\n    |              ^^^^^\n help: consider using an iterator\n    |\n-84 |     for <item> in vec.iter().take(10).skip(5) {\n+96 |     for <item> in vec.iter().take(10).skip(5) {\n    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is only used to index `vec`.\n-  --> $DIR/for_loop.rs:88:14\n-   |\n-88 |     for i in 5..=10 {\n-   |              ^^^^^^\n+   --> $DIR/for_loop.rs:100:14\n+    |\n+100 |     for i in 5..=10 {\n+    |              ^^^^^^\n help: consider using an iterator\n-   |\n-88 |     for <item> in vec.iter().take(10 + 1).skip(5) {\n-   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+    |\n+100 |     for <item> in vec.iter().take(10 + 1).skip(5) {\n+    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is used to index `vec`\n-  --> $DIR/for_loop.rs:92:14\n-   |\n-92 |     for i in 5..vec.len() {\n-   |              ^^^^^^^^^^^^\n+   --> $DIR/for_loop.rs:104:14\n+    |\n+104 |     for i in 5..vec.len() {\n+    |              ^^^^^^^^^^^^\n help: consider using an iterator\n-   |\n-92 |     for (i, <item>) in vec.iter().enumerate().skip(5) {\n-   |         ^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+    |\n+104 |     for (i, <item>) in vec.iter().enumerate().skip(5) {\n+    |         ^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is used to index `vec`\n-  --> $DIR/for_loop.rs:96:14\n-   |\n-96 |     for i in 5..10 {\n-   |              ^^^^^\n+   --> $DIR/for_loop.rs:108:14\n+    |\n+108 |     for i in 5..10 {\n+    |              ^^^^^\n help: consider using an iterator\n-   |\n-96 |     for (i, <item>) in vec.iter().enumerate().take(10).skip(5) {\n-   |         ^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+    |\n+108 |     for (i, <item>) in vec.iter().enumerate().take(10).skip(5) {\n+    |         ^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this range is empty so this for loop will never run\n-   --> $DIR/for_loop.rs:100:14\n+   --> $DIR/for_loop.rs:112:14\n     |\n-100 |     for i in 10..0 {\n+112 |     for i in 10..0 {\n     |              ^^^^^\n     |\n     = note: `-D clippy::reverse-range-loop` implied by `-D warnings`\n help: consider using the following if you are attempting to iterate over this range in reverse\n     |\n-100 |     for i in (0..10).rev() {\n+112 |     for i in (0..10).rev() {\n     |              ^^^^^^^^^^^^^\n \n error: this range is empty so this for loop will never run\n-   --> $DIR/for_loop.rs:104:14\n+   --> $DIR/for_loop.rs:116:14\n     |\n-104 |     for i in 10..=0 {\n+116 |     for i in 10..=0 {\n     |              ^^^^^^\n help: consider using the following if you are attempting to iterate over this range in reverse\n     |\n-104 |     for i in (0...10).rev() {\n+116 |     for i in (0...10).rev() {\n     |              ^^^^^^^^^^^^^^\n \n error: this range is empty so this for loop will never run\n-   --> $DIR/for_loop.rs:108:14\n+   --> $DIR/for_loop.rs:120:14\n     |\n-108 |     for i in MAX_LEN..0 {\n+120 |     for i in MAX_LEN..0 {\n     |              ^^^^^^^^^^\n help: consider using the following if you are attempting to iterate over this range in reverse\n     |\n-108 |     for i in (0..MAX_LEN).rev() {\n+120 |     for i in (0..MAX_LEN).rev() {\n     |              ^^^^^^^^^^^^^^^^^^\n \n error: this range is empty so this for loop will never run\n-   --> $DIR/for_loop.rs:112:14\n+   --> $DIR/for_loop.rs:124:14\n     |\n-112 |     for i in 5..5 {\n+124 |     for i in 5..5 {\n     |              ^^^^\n \n error: this range is empty so this for loop will never run\n-   --> $DIR/for_loop.rs:137:14\n+   --> $DIR/for_loop.rs:149:14\n     |\n-137 |     for i in 10..5 + 4 {\n+149 |     for i in 10..5 + 4 {\n     |              ^^^^^^^^^\n help: consider using the following if you are attempting to iterate over this range in reverse\n     |\n-137 |     for i in (5 + 4..10).rev() {\n+149 |     for i in (5 + 4..10).rev() {\n     |              ^^^^^^^^^^^^^^^^^\n \n error: this range is empty so this for loop will never run\n-   --> $DIR/for_loop.rs:141:14\n+   --> $DIR/for_loop.rs:153:14\n     |\n-141 |     for i in (5 + 2)..(3 - 1) {\n+153 |     for i in (5 + 2)..(3 - 1) {\n     |              ^^^^^^^^^^^^^^^^\n help: consider using the following if you are attempting to iterate over this range in reverse\n     |\n-141 |     for i in ((3 - 1)..(5 + 2)).rev() {\n+153 |     for i in ((3 - 1)..(5 + 2)).rev() {\n     |              ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this range is empty so this for loop will never run\n-   --> $DIR/for_loop.rs:145:14\n+   --> $DIR/for_loop.rs:157:14\n     |\n-145 |     for i in (5 + 2)..(8 - 1) {\n+157 |     for i in (5 + 2)..(8 - 1) {\n     |              ^^^^^^^^^^^^^^^^\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:167:15\n+   --> $DIR/for_loop.rs:179:15\n     |\n-167 |     for _v in vec.iter() {}\n+179 |     for _v in vec.iter() {}\n     |               ^^^^^^^^^^ help: to write this more concisely, try: `&vec`\n     |\n     = note: `-D clippy::explicit-iter-loop` implied by `-D warnings`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:169:15\n+   --> $DIR/for_loop.rs:181:15\n     |\n-169 |     for _v in vec.iter_mut() {}\n+181 |     for _v in vec.iter_mut() {}\n     |               ^^^^^^^^^^^^^^ help: to write this more concisely, try: `&mut vec`\n \n error: it is more concise to loop over containers instead of using explicit iteration methods`\n-   --> $DIR/for_loop.rs:172:15\n+   --> $DIR/for_loop.rs:184:15\n     |\n-172 |     for _v in out_vec.into_iter() {}\n+184 |     for _v in out_vec.into_iter() {}\n     |               ^^^^^^^^^^^^^^^^^^^ help: to write this more concisely, try: `out_vec`\n     |\n     = note: `-D clippy::explicit-into-iter-loop` implied by `-D warnings`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:175:15\n+   --> $DIR/for_loop.rs:187:15\n     |\n-175 |     for _v in array.into_iter() {}\n+187 |     for _v in array.into_iter() {}\n     |               ^^^^^^^^^^^^^^^^^ help: to write this more concisely, try: `&array`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:180:15\n+   --> $DIR/for_loop.rs:192:15\n     |\n-180 |     for _v in [1, 2, 3].iter() {}\n+192 |     for _v in [1, 2, 3].iter() {}\n     |               ^^^^^^^^^^^^^^^^ help: to write this more concisely, try: `&[1, 2, 3]`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:184:15\n+   --> $DIR/for_loop.rs:196:15\n     |\n-184 |     for _v in [0; 32].iter() {}\n+196 |     for _v in [0; 32].iter() {}\n     |               ^^^^^^^^^^^^^^ help: to write this more concisely, try: `&[0; 32]`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:189:15\n+   --> $DIR/for_loop.rs:201:15\n     |\n-189 |     for _v in ll.iter() {}\n+201 |     for _v in ll.iter() {}\n     |               ^^^^^^^^^ help: to write this more concisely, try: `&ll`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:192:15\n+   --> $DIR/for_loop.rs:204:15\n     |\n-192 |     for _v in vd.iter() {}\n+204 |     for _v in vd.iter() {}\n     |               ^^^^^^^^^ help: to write this more concisely, try: `&vd`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:195:15\n+   --> $DIR/for_loop.rs:207:15\n     |\n-195 |     for _v in bh.iter() {}\n+207 |     for _v in bh.iter() {}\n     |               ^^^^^^^^^ help: to write this more concisely, try: `&bh`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:198:15\n+   --> $DIR/for_loop.rs:210:15\n     |\n-198 |     for _v in hm.iter() {}\n+210 |     for _v in hm.iter() {}\n     |               ^^^^^^^^^ help: to write this more concisely, try: `&hm`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:201:15\n+   --> $DIR/for_loop.rs:213:15\n     |\n-201 |     for _v in bt.iter() {}\n+213 |     for _v in bt.iter() {}\n     |               ^^^^^^^^^ help: to write this more concisely, try: `&bt`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:204:15\n+   --> $DIR/for_loop.rs:216:15\n     |\n-204 |     for _v in hs.iter() {}\n+216 |     for _v in hs.iter() {}\n     |               ^^^^^^^^^ help: to write this more concisely, try: `&hs`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:207:15\n+   --> $DIR/for_loop.rs:219:15\n     |\n-207 |     for _v in bs.iter() {}\n+219 |     for _v in bs.iter() {}\n     |               ^^^^^^^^^ help: to write this more concisely, try: `&bs`\n \n error: you are iterating over `Iterator::next()` which is an Option; this will compile but is probably not what you want\n-   --> $DIR/for_loop.rs:209:15\n+   --> $DIR/for_loop.rs:221:15\n     |\n-209 |     for _v in vec.iter().next() {}\n+221 |     for _v in vec.iter().next() {}\n     |               ^^^^^^^^^^^^^^^^^\n     |\n     = note: `-D clippy::iter-next-loop` implied by `-D warnings`\n \n error: you are collect()ing an iterator and throwing away the result. Consider using an explicit for loop to exhaust the iterator\n-   --> $DIR/for_loop.rs:216:5\n+   --> $DIR/for_loop.rs:228:5\n     |\n-216 |     vec.iter().cloned().map(|x| out.push(x)).collect::<Vec<_>>();\n+228 |     vec.iter().cloned().map(|x| out.push(x)).collect::<Vec<_>>();\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: `-D clippy::unused-collect` implied by `-D warnings`\n \n error: you seem to want to iterate on a map's values\n-   --> $DIR/for_loop.rs:325:19\n+   --> $DIR/for_loop.rs:337:19\n     |\n-325 |     for (_, v) in &m {\n+337 |     for (_, v) in &m {\n     |                   ^^\n     |\n     = note: `-D clippy::for-kv-map` implied by `-D warnings`\n help: use the corresponding method\n     |\n-325 |     for v in m.values() {\n+337 |     for v in m.values() {\n     |         ^    ^^^^^^^^^^\n \n error: you seem to want to iterate on a map's values\n-   --> $DIR/for_loop.rs:330:19\n+   --> $DIR/for_loop.rs:342:19\n     |\n-330 |     for (_, v) in &*m {\n+342 |     for (_, v) in &*m {\n     |                   ^^^\n help: use the corresponding method\n     |\n-330 |     for v in (*m).values() {\n+342 |     for v in (*m).values() {\n     |         ^    ^^^^^^^^^^^^^\n \n error: you seem to want to iterate on a map's values\n-   --> $DIR/for_loop.rs:338:19\n+   --> $DIR/for_loop.rs:350:19\n     |\n-338 |     for (_, v) in &mut m {\n+350 |     for (_, v) in &mut m {\n     |                   ^^^^^^\n help: use the corresponding method\n     |\n-338 |     for v in m.values_mut() {\n+350 |     for v in m.values_mut() {\n     |         ^    ^^^^^^^^^^^^^^\n \n error: you seem to want to iterate on a map's values\n-   --> $DIR/for_loop.rs:343:19\n+   --> $DIR/for_loop.rs:355:19\n     |\n-343 |     for (_, v) in &mut *m {\n+355 |     for (_, v) in &mut *m {\n     |                   ^^^^^^^\n help: use the corresponding method\n     |\n-343 |     for v in (*m).values_mut() {\n+355 |     for v in (*m).values_mut() {\n     |         ^    ^^^^^^^^^^^^^^^^^\n \n error: you seem to want to iterate on a map's keys\n-   --> $DIR/for_loop.rs:349:24\n+   --> $DIR/for_loop.rs:361:24\n     |\n-349 |     for (k, _value) in rm {\n+361 |     for (k, _value) in rm {\n     |                        ^^\n help: use the corresponding method\n     |\n-349 |     for k in rm.keys() {\n+361 |     for k in rm.keys() {\n     |         ^    ^^^^^^^^^\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:402:14\n+   --> $DIR/for_loop.rs:414:14\n     |\n-402 |     for i in 0..src.len() {\n+414 |     for i in 0..src.len() {\n     |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst[..src.len()].clone_from_slice(&src[..])`\n     |\n     = note: `-D clippy::manual-memcpy` implied by `-D warnings`\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:407:14\n+   --> $DIR/for_loop.rs:419:14\n     |\n-407 |     for i in 0..src.len() {\n+419 |     for i in 0..src.len() {\n     |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst[10..(src.len() + 10)].clone_from_slice(&src[..])`\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:412:14\n+   --> $DIR/for_loop.rs:424:14\n     |\n-412 |     for i in 0..src.len() {\n+424 |     for i in 0..src.len() {\n     |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst[..src.len()].clone_from_slice(&src[10..])`\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:417:14\n+   --> $DIR/for_loop.rs:429:14\n     |\n-417 |     for i in 11..src.len() {\n+429 |     for i in 11..src.len() {\n     |              ^^^^^^^^^^^^^ help: try replacing the loop by: `dst[11..src.len()].clone_from_slice(&src[(11 - 10)..(src.len() - 10)])`\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:422:14\n+   --> $DIR/for_loop.rs:434:14\n     |\n-422 |     for i in 0..dst.len() {\n+434 |     for i in 0..dst.len() {\n     |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst.clone_from_slice(&src[..dst.len()])`\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:435:14\n+   --> $DIR/for_loop.rs:447:14\n     |\n-435 |     for i in 10..256 {\n+447 |     for i in 10..256 {\n     |              ^^^^^^^\n help: try replacing the loop by\n     |\n-435 |     for i in dst[10..256].clone_from_slice(&src[(10 - 5)..(256 - 5)])\n-436 |     dst2[(10 + 500)..(256 + 500)].clone_from_slice(&src[10..256]) {\n+447 |     for i in dst[10..256].clone_from_slice(&src[(10 - 5)..(256 - 5)])\n+448 |     dst2[(10 + 500)..(256 + 500)].clone_from_slice(&src[10..256]) {\n     |\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:447:14\n+   --> $DIR/for_loop.rs:459:14\n     |\n-447 |     for i in 10..LOOP_OFFSET {\n+459 |     for i in 10..LOOP_OFFSET {\n     |              ^^^^^^^^^^^^^^^ help: try replacing the loop by: `dst[(10 + LOOP_OFFSET)..(LOOP_OFFSET + LOOP_OFFSET)].clone_from_slice(&src[(10 - some_var)..(LOOP_OFFSET - some_var)])`\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:460:14\n+   --> $DIR/for_loop.rs:472:14\n     |\n-460 |     for i in 0..src_vec.len() {\n+472 |     for i in 0..src_vec.len() {\n     |              ^^^^^^^^^^^^^^^^ help: try replacing the loop by: `dst_vec[..src_vec.len()].clone_from_slice(&src_vec[..])`\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:489:14\n+   --> $DIR/for_loop.rs:501:14\n     |\n-489 |     for i in from..from + src.len() {\n+501 |     for i in from..from + src.len() {\n     |              ^^^^^^^^^^^^^^^^^^^^^^ help: try replacing the loop by: `dst[from..from + src.len()].clone_from_slice(&src[0..(from + src.len() - from)])`\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:493:14\n+   --> $DIR/for_loop.rs:505:14\n     |\n-493 |     for i in from..from + 3 {\n+505 |     for i in from..from + 3 {\n     |              ^^^^^^^^^^^^^^ help: try replacing the loop by: `dst[from..from + 3].clone_from_slice(&src[0..(from + 3 - from)])`\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:500:14\n+   --> $DIR/for_loop.rs:512:14\n     |\n-500 |     for i in 0..src.len() {\n+512 |     for i in 0..src.len() {\n     |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst[..src.len()].clone_from_slice(&src[..])`\n \n error: aborting due to 51 previous errors"}, {"sha": "3bea98acf2fb2ab78b5bd2ddc986d1de4e0d3dd1", "filename": "tests/ui/formatting.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fformatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fformatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformatting.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,10 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #![warn(clippy::all)]\n #![allow(unused_variables)]\n #![allow(unused_assignments)]"}, {"sha": "7399a0d45491740d796f9a318a642e1993a6b7bc", "filename": "tests/ui/formatting.stderr", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fformatting.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fformatting.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformatting.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,87 +1,87 @@\n error: this looks like an `else if` but the `else` is missing\n-  --> $DIR/formatting.rs:25:6\n+  --> $DIR/formatting.rs:21:6\n    |\n-25 |     } if foo() {\n+21 |     } if foo() {\n    |      ^\n    |\n    = note: `-D clippy::suspicious-else-formatting` implied by `-D warnings`\n    = note: to remove this lint, add the missing `else` or add a new line before the second `if`\n \n error: this looks like an `else if` but the `else` is missing\n-  --> $DIR/formatting.rs:32:10\n+  --> $DIR/formatting.rs:28:10\n    |\n-32 |         } if foo() {\n+28 |         } if foo() {\n    |          ^\n    |\n    = note: to remove this lint, add the missing `else` or add a new line before the second `if`\n \n error: this looks like an `else if` but the `else` is missing\n-  --> $DIR/formatting.rs:40:10\n+  --> $DIR/formatting.rs:36:10\n    |\n-40 |         } if foo() {\n+36 |         } if foo() {\n    |          ^\n    |\n    = note: to remove this lint, add the missing `else` or add a new line before the second `if`\n \n error: this is an `else if` but the formatting might hide it\n-  --> $DIR/formatting.rs:49:6\n+  --> $DIR/formatting.rs:45:6\n    |\n-49 |       } else\n+45 |       } else\n    |  ______^\n-50 | |     if foo() { // the span of the above error should continue here\n+46 | |     if foo() { // the span of the above error should continue here\n    | |____^\n    |\n    = note: to remove this lint, remove the `else` or remove the new line between `else` and `if`\n \n error: this is an `else if` but the formatting might hide it\n-  --> $DIR/formatting.rs:54:6\n+  --> $DIR/formatting.rs:50:6\n    |\n-54 |       }\n+50 |       }\n    |  ______^\n-55 | |     else\n-56 | |     if foo() { // the span of the above error should continue here\n+51 | |     else\n+52 | |     if foo() { // the span of the above error should continue here\n    | |____^\n    |\n    = note: to remove this lint, remove the `else` or remove the new line between `else` and `if`\n \n error: this looks like you are trying to use `.. -= ..`, but you really are doing `.. = (- ..)`\n-  --> $DIR/formatting.rs:81:6\n+  --> $DIR/formatting.rs:77:6\n    |\n-81 |     a =- 35;\n+77 |     a =- 35;\n    |      ^^^^\n    |\n    = note: `-D clippy::suspicious-assignment-formatting` implied by `-D warnings`\n    = note: to remove this lint, use either `-=` or `= -`\n \n error: this looks like you are trying to use `.. *= ..`, but you really are doing `.. = (* ..)`\n-  --> $DIR/formatting.rs:82:6\n+  --> $DIR/formatting.rs:78:6\n    |\n-82 |     a =* &191;\n+78 |     a =* &191;\n    |      ^^^^\n    |\n    = note: to remove this lint, use either `*=` or `= *`\n \n error: this looks like you are trying to use `.. != ..`, but you really are doing `.. = (! ..)`\n-  --> $DIR/formatting.rs:85:6\n+  --> $DIR/formatting.rs:81:6\n    |\n-85 |     b =! false;\n+81 |     b =! false;\n    |      ^^^^\n    |\n    = note: to remove this lint, use either `!=` or `= !`\n \n error: possibly missing a comma here\n-  --> $DIR/formatting.rs:94:19\n+  --> $DIR/formatting.rs:90:19\n    |\n-94 |         -1, -2, -3 // <= no comma here\n+90 |         -1, -2, -3 // <= no comma here\n    |                   ^\n    |\n    = note: `-D clippy::possible-missing-comma` implied by `-D warnings`\n    = note: to remove this lint, add a comma or write the expr in a single line\n \n error: possibly missing a comma here\n-  --> $DIR/formatting.rs:98:19\n+  --> $DIR/formatting.rs:94:19\n    |\n-98 |         -1, -2, -3 // <= no comma here\n+94 |         -1, -2, -3 // <= no comma here\n    |                   ^\n    |\n    = note: to remove this lint, add a comma or write the expr in a single line"}, {"sha": "419632948157f0b43384600d08b6801c0b9e4632", "filename": "tests/ui/functions.rs", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Ffunctions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Ffunctions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffunctions.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,22 +7,27 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #![warn(clippy::all)]\n #![allow(dead_code)]\n #![allow(unused_unsafe)]\n \n // TOO_MANY_ARGUMENTS\n fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool) {}\n \n-fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {\n-}\n+fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}\n \n // don't lint extern fns\n-extern fn extern_fn(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}\n+extern \"C\" fn extern_fn(\n+    _one: u32,\n+    _two: u32,\n+    _three: &str,\n+    _four: bool,\n+    _five: f32,\n+    _six: f32,\n+    _seven: bool,\n+    _eight: (),\n+) {\n+}\n \n pub trait Foo {\n     fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool);"}, {"sha": "206d04d6a395b23b6b048b9bdede5ebc92190cdb", "filename": "tests/ui/functions.stderr", "status": "modified", "additions": 25, "deletions": 26, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Ffunctions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Ffunctions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffunctions.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,78 +1,77 @@\n error: this function has too many arguments (8/7)\n-  --> $DIR/functions.rs:21:1\n+  --> $DIR/functions.rs:17:1\n    |\n-21 | / fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {\n-22 | | }\n-   | |_^\n+17 | fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::too-many-arguments` implied by `-D warnings`\n \n error: this function has too many arguments (8/7)\n-  --> $DIR/functions.rs:29:5\n+  --> $DIR/functions.rs:34:5\n    |\n-29 |     fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ());\n+34 |     fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ());\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this function has too many arguments (8/7)\n-  --> $DIR/functions.rs:38:5\n+  --> $DIR/functions.rs:43:5\n    |\n-38 |     fn bad_method(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}\n+43 |     fn bad_method(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this public function dereferences a raw pointer but is not marked `unsafe`\n-  --> $DIR/functions.rs:47:34\n+  --> $DIR/functions.rs:52:34\n    |\n-47 |         println!(\"{}\", unsafe { *p });\n+52 |         println!(\"{}\", unsafe { *p });\n    |                                  ^\n    |\n    = note: `-D clippy::not-unsafe-ptr-arg-deref` implied by `-D warnings`\n \n error: this public function dereferences a raw pointer but is not marked `unsafe`\n-  --> $DIR/functions.rs:48:35\n+  --> $DIR/functions.rs:53:35\n    |\n-48 |         println!(\"{:?}\", unsafe { p.as_ref() });\n+53 |         println!(\"{:?}\", unsafe { p.as_ref() });\n    |                                   ^\n \n error: this public function dereferences a raw pointer but is not marked `unsafe`\n-  --> $DIR/functions.rs:49:33\n+  --> $DIR/functions.rs:54:33\n    |\n-49 |         unsafe { std::ptr::read(p) };\n+54 |         unsafe { std::ptr::read(p) };\n    |                                 ^\n \n error: this public function dereferences a raw pointer but is not marked `unsafe`\n-  --> $DIR/functions.rs:60:30\n+  --> $DIR/functions.rs:65:30\n    |\n-60 |     println!(\"{}\", unsafe { *p });\n+65 |     println!(\"{}\", unsafe { *p });\n    |                              ^\n \n error: this public function dereferences a raw pointer but is not marked `unsafe`\n-  --> $DIR/functions.rs:61:31\n+  --> $DIR/functions.rs:66:31\n    |\n-61 |     println!(\"{:?}\", unsafe { p.as_ref() });\n+66 |     println!(\"{:?}\", unsafe { p.as_ref() });\n    |                               ^\n \n error: this public function dereferences a raw pointer but is not marked `unsafe`\n-  --> $DIR/functions.rs:62:29\n+  --> $DIR/functions.rs:67:29\n    |\n-62 |     unsafe { std::ptr::read(p) };\n+67 |     unsafe { std::ptr::read(p) };\n    |                             ^\n \n error: this public function dereferences a raw pointer but is not marked `unsafe`\n-  --> $DIR/functions.rs:71:34\n+  --> $DIR/functions.rs:76:34\n    |\n-71 |         println!(\"{}\", unsafe { *p });\n+76 |         println!(\"{}\", unsafe { *p });\n    |                                  ^\n \n error: this public function dereferences a raw pointer but is not marked `unsafe`\n-  --> $DIR/functions.rs:72:35\n+  --> $DIR/functions.rs:77:35\n    |\n-72 |         println!(\"{:?}\", unsafe { p.as_ref() });\n+77 |         println!(\"{:?}\", unsafe { p.as_ref() });\n    |                                   ^\n \n error: this public function dereferences a raw pointer but is not marked `unsafe`\n-  --> $DIR/functions.rs:73:33\n+  --> $DIR/functions.rs:78:33\n    |\n-73 |         unsafe { std::ptr::read(p) };\n+78 |         unsafe { std::ptr::read(p) };\n    |                                 ^\n \n error: aborting due to 12 previous errors"}, {"sha": "2299714132f5fdc068b1d518eaa29e8c6ea129db", "filename": "tests/ui/fxhash.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Ffxhash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Ffxhash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffxhash.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,16 +7,13 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![warn(clippy::default_hash_types)]\n #![feature(rustc_private)]\n \n extern crate rustc_data_structures;\n \n-use std::collections::{HashMap, HashSet};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n+use std::collections::{HashMap, HashSet};\n \n fn main() {\n     let _map: HashMap<String, String> = HashMap::default();"}, {"sha": "a1e50401b46e0247ba18721940d35dbb79c1ff94", "filename": "tests/ui/fxhash.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Ffxhash.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Ffxhash.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffxhash.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,39 +1,39 @@\n error: Prefer FxHashMap over HashMap, it has better performance and we don't need any collision prevention in clippy\n-  --> $DIR/fxhash.rs:18:24\n+  --> $DIR/fxhash.rs:16:24\n    |\n-18 | use std::collections::{HashMap, HashSet};\n+16 | use std::collections::{HashMap, HashSet};\n    |                        ^^^^^^^ help: use: `FxHashMap`\n    |\n    = note: `-D clippy::default-hash-types` implied by `-D warnings`\n \n error: Prefer FxHashSet over HashSet, it has better performance and we don't need any collision prevention in clippy\n-  --> $DIR/fxhash.rs:18:33\n+  --> $DIR/fxhash.rs:16:33\n    |\n-18 | use std::collections::{HashMap, HashSet};\n+16 | use std::collections::{HashMap, HashSet};\n    |                                 ^^^^^^^ help: use: `FxHashSet`\n \n error: Prefer FxHashMap over HashMap, it has better performance and we don't need any collision prevention in clippy\n-  --> $DIR/fxhash.rs:22:15\n+  --> $DIR/fxhash.rs:19:15\n    |\n-22 |     let _map: HashMap<String, String> = HashMap::default();\n+19 |     let _map: HashMap<String, String> = HashMap::default();\n    |               ^^^^^^^ help: use: `FxHashMap`\n \n error: Prefer FxHashMap over HashMap, it has better performance and we don't need any collision prevention in clippy\n-  --> $DIR/fxhash.rs:22:41\n+  --> $DIR/fxhash.rs:19:41\n    |\n-22 |     let _map: HashMap<String, String> = HashMap::default();\n+19 |     let _map: HashMap<String, String> = HashMap::default();\n    |                                         ^^^^^^^ help: use: `FxHashMap`\n \n error: Prefer FxHashSet over HashSet, it has better performance and we don't need any collision prevention in clippy\n-  --> $DIR/fxhash.rs:23:15\n+  --> $DIR/fxhash.rs:20:15\n    |\n-23 |     let _set: HashSet<String> = HashSet::default();\n+20 |     let _set: HashSet<String> = HashSet::default();\n    |               ^^^^^^^ help: use: `FxHashSet`\n \n error: Prefer FxHashSet over HashSet, it has better performance and we don't need any collision prevention in clippy\n-  --> $DIR/fxhash.rs:23:33\n+  --> $DIR/fxhash.rs:20:33\n    |\n-23 |     let _set: HashSet<String> = HashSet::default();\n+20 |     let _set: HashSet<String> = HashSet::default();\n    |                                 ^^^^^^^ help: use: `FxHashSet`\n \n error: aborting due to 6 previous errors"}, {"sha": "e8789db6fc1a91867fb42ebdd715d4388d9ac80e", "filename": "tests/ui/get_unwrap.rs", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fget_unwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fget_unwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fget_unwrap.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,7 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n #![allow(unused_mut)]\n \n use std::collections::BTreeMap;\n@@ -20,8 +19,12 @@ struct GetFalsePositive {\n }\n \n impl GetFalsePositive {\n-    fn get(&self, pos: usize) -> Option<&u32> { self.arr.get(pos) }\n-    fn get_mut(&mut self, pos: usize) -> Option<&mut u32> { self.arr.get_mut(pos) }\n+    fn get(&self, pos: usize) -> Option<&u32> {\n+        self.arr.get(pos)\n+    }\n+    fn get_mut(&mut self, pos: usize) -> Option<&mut u32> {\n+        self.arr.get_mut(pos)\n+    }\n }\n \n fn main() {\n@@ -33,7 +36,8 @@ fn main() {\n     let mut some_btreemap: BTreeMap<u8, char> = BTreeMap::from_iter(vec![(1, 'a'), (2, 'b')]);\n     let mut false_positive = GetFalsePositive { arr: [0, 1, 2] };\n \n-    { // Test `get().unwrap()`\n+    {\n+        // Test `get().unwrap()`\n         let _ = boxed_slice.get(1).unwrap();\n         let _ = some_slice.get(0).unwrap();\n         let _ = some_vec.get(0).unwrap();\n@@ -43,7 +47,8 @@ fn main() {\n         let _ = false_positive.get(0).unwrap();\n     }\n \n-    { // Test `get_mut().unwrap()`\n+    {\n+        // Test `get_mut().unwrap()`\n         *boxed_slice.get_mut(0).unwrap() = 1;\n         *some_slice.get_mut(0).unwrap() = 1;\n         *some_vec.get_mut(0).unwrap() = 1;\n@@ -54,7 +59,8 @@ fn main() {\n         *false_positive.get_mut(0).unwrap() = 1;\n     }\n \n-    { // Test `get().unwrap().foo()` and `get_mut().unwrap().bar()`\n+    {\n+        // Test `get().unwrap().foo()` and `get_mut().unwrap().bar()`\n         let _ = some_vec.get(0..1).unwrap().to_vec();\n         let _ = some_vec.get_mut(0..1).unwrap().to_vec();\n     }"}, {"sha": "8b07e740a9a40c9304bcc838eed457df012dedf7", "filename": "tests/ui/get_unwrap.stderr", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fget_unwrap.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fget_unwrap.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fget_unwrap.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,75 +1,75 @@\n error: called `.get().unwrap()` on a slice. Using `[]` is more clear and more concise\n-  --> $DIR/get_unwrap.rs:37:17\n+  --> $DIR/get_unwrap.rs:41:17\n    |\n-37 |         let _ = boxed_slice.get(1).unwrap();\n+41 |         let _ = boxed_slice.get(1).unwrap();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&boxed_slice[1]`\n    |\n    = note: `-D clippy::get-unwrap` implied by `-D warnings`\n \n error: called `.get().unwrap()` on a slice. Using `[]` is more clear and more concise\n-  --> $DIR/get_unwrap.rs:38:17\n+  --> $DIR/get_unwrap.rs:42:17\n    |\n-38 |         let _ = some_slice.get(0).unwrap();\n+42 |         let _ = some_slice.get(0).unwrap();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&some_slice[0]`\n \n error: called `.get().unwrap()` on a Vec. Using `[]` is more clear and more concise\n-  --> $DIR/get_unwrap.rs:39:17\n+  --> $DIR/get_unwrap.rs:43:17\n    |\n-39 |         let _ = some_vec.get(0).unwrap();\n+43 |         let _ = some_vec.get(0).unwrap();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&some_vec[0]`\n \n error: called `.get().unwrap()` on a VecDeque. Using `[]` is more clear and more concise\n-  --> $DIR/get_unwrap.rs:40:17\n+  --> $DIR/get_unwrap.rs:44:17\n    |\n-40 |         let _ = some_vecdeque.get(0).unwrap();\n+44 |         let _ = some_vecdeque.get(0).unwrap();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&some_vecdeque[0]`\n \n error: called `.get().unwrap()` on a HashMap. Using `[]` is more clear and more concise\n-  --> $DIR/get_unwrap.rs:41:17\n+  --> $DIR/get_unwrap.rs:45:17\n    |\n-41 |         let _ = some_hashmap.get(&1).unwrap();\n+45 |         let _ = some_hashmap.get(&1).unwrap();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&some_hashmap[&1]`\n \n error: called `.get().unwrap()` on a BTreeMap. Using `[]` is more clear and more concise\n-  --> $DIR/get_unwrap.rs:42:17\n+  --> $DIR/get_unwrap.rs:46:17\n    |\n-42 |         let _ = some_btreemap.get(&1).unwrap();\n+46 |         let _ = some_btreemap.get(&1).unwrap();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&some_btreemap[&1]`\n \n error: called `.get_mut().unwrap()` on a slice. Using `[]` is more clear and more concise\n-  --> $DIR/get_unwrap.rs:47:10\n+  --> $DIR/get_unwrap.rs:52:10\n    |\n-47 |         *boxed_slice.get_mut(0).unwrap() = 1;\n+52 |         *boxed_slice.get_mut(0).unwrap() = 1;\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&mut boxed_slice[0]`\n \n error: called `.get_mut().unwrap()` on a slice. Using `[]` is more clear and more concise\n-  --> $DIR/get_unwrap.rs:48:10\n+  --> $DIR/get_unwrap.rs:53:10\n    |\n-48 |         *some_slice.get_mut(0).unwrap() = 1;\n+53 |         *some_slice.get_mut(0).unwrap() = 1;\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&mut some_slice[0]`\n \n error: called `.get_mut().unwrap()` on a Vec. Using `[]` is more clear and more concise\n-  --> $DIR/get_unwrap.rs:49:10\n+  --> $DIR/get_unwrap.rs:54:10\n    |\n-49 |         *some_vec.get_mut(0).unwrap() = 1;\n+54 |         *some_vec.get_mut(0).unwrap() = 1;\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&mut some_vec[0]`\n \n error: called `.get_mut().unwrap()` on a VecDeque. Using `[]` is more clear and more concise\n-  --> $DIR/get_unwrap.rs:50:10\n+  --> $DIR/get_unwrap.rs:55:10\n    |\n-50 |         *some_vecdeque.get_mut(0).unwrap() = 1;\n+55 |         *some_vecdeque.get_mut(0).unwrap() = 1;\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&mut some_vecdeque[0]`\n \n error: called `.get().unwrap()` on a Vec. Using `[]` is more clear and more concise\n-  --> $DIR/get_unwrap.rs:58:17\n+  --> $DIR/get_unwrap.rs:64:17\n    |\n-58 |         let _ = some_vec.get(0..1).unwrap().to_vec();\n+64 |         let _ = some_vec.get(0..1).unwrap().to_vec();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `some_vec[0..1]`\n \n error: called `.get_mut().unwrap()` on a Vec. Using `[]` is more clear and more concise\n-  --> $DIR/get_unwrap.rs:59:17\n+  --> $DIR/get_unwrap.rs:65:17\n    |\n-59 |         let _ = some_vec.get_mut(0..1).unwrap().to_vec();\n+65 |         let _ = some_vec.get_mut(0..1).unwrap().to_vec();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `some_vec[0..1]`\n \n error: aborting due to 12 previous errors"}, {"sha": "caf8c89390dd7cc74556ff7016dd58d9e78cca1f", "filename": "tests/ui/ice-2636.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fice-2636.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fice-2636.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fice-2636.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -29,4 +29,3 @@ fn main() {\n     let a = Foo::A;\n     test_hash!(&a, A => 0, B => 1, C => 2);\n }\n-"}, {"sha": "6ba191b0b843acb6baabaa458c15b1ac3bd7f04a", "filename": "tests/ui/identity_conversion.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fidentity_conversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fidentity_conversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fidentity_conversion.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![deny(clippy::identity_conversion)]\n \n fn test_generic<T: Copy>(val: T) -> T {"}, {"sha": "aab6bf7f218e338fc9d7546f6ecdbec8d4ffae93", "filename": "tests/ui/identity_conversion.stderr", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fidentity_conversion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fidentity_conversion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fidentity_conversion.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,67 +1,67 @@\n error: identical conversion\n-  --> $DIR/identity_conversion.rs:16:13\n+  --> $DIR/identity_conversion.rs:13:13\n    |\n-16 |     let _ = T::from(val);\n+13 |     let _ = T::from(val);\n    |             ^^^^^^^^^^^^ help: consider removing `T::from()`: `val`\n    |\n note: lint level defined here\n-  --> $DIR/identity_conversion.rs:13:9\n+  --> $DIR/identity_conversion.rs:10:9\n    |\n-13 | #![deny(clippy::identity_conversion)]\n+10 | #![deny(clippy::identity_conversion)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: identical conversion\n-  --> $DIR/identity_conversion.rs:17:5\n+  --> $DIR/identity_conversion.rs:14:5\n    |\n-17 |     val.into()\n+14 |     val.into()\n    |     ^^^^^^^^^^ help: consider removing `.into()`: `val`\n \n error: identical conversion\n-  --> $DIR/identity_conversion.rs:29:22\n+  --> $DIR/identity_conversion.rs:26:22\n    |\n-29 |         let _: i32 = 0i32.into();\n+26 |         let _: i32 = 0i32.into();\n    |                      ^^^^^^^^^^^ help: consider removing `.into()`: `0i32`\n \n error: identical conversion\n-  --> $DIR/identity_conversion.rs:50:21\n+  --> $DIR/identity_conversion.rs:47:21\n    |\n-50 |     let _: String = \"foo\".to_string().into();\n+47 |     let _: String = \"foo\".to_string().into();\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into()`: `\"foo\".to_string()`\n \n error: identical conversion\n-  --> $DIR/identity_conversion.rs:51:21\n+  --> $DIR/identity_conversion.rs:48:21\n    |\n-51 |     let _: String = From::from(\"foo\".to_string());\n+48 |     let _: String = From::from(\"foo\".to_string());\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `From::from()`: `\"foo\".to_string()`\n \n error: identical conversion\n-  --> $DIR/identity_conversion.rs:52:13\n+  --> $DIR/identity_conversion.rs:49:13\n    |\n-52 |     let _ = String::from(\"foo\".to_string());\n+49 |     let _ = String::from(\"foo\".to_string());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `String::from()`: `\"foo\".to_string()`\n \n error: identical conversion\n-  --> $DIR/identity_conversion.rs:53:13\n+  --> $DIR/identity_conversion.rs:50:13\n    |\n-53 |     let _ = String::from(format!(\"A: {:04}\", 123));\n+50 |     let _ = String::from(format!(\"A: {:04}\", 123));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `String::from()`: `format!(\"A: {:04}\", 123)`\n \n error: identical conversion\n-  --> $DIR/identity_conversion.rs:54:13\n+  --> $DIR/identity_conversion.rs:51:13\n    |\n-54 |     let _ = \"\".lines().into_iter();\n+51 |     let _ = \"\".lines().into_iter();\n    |             ^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `\"\".lines()`\n \n error: identical conversion\n-  --> $DIR/identity_conversion.rs:55:13\n+  --> $DIR/identity_conversion.rs:52:13\n    |\n-55 |     let _ = vec![1, 2, 3].into_iter().into_iter();\n+52 |     let _ = vec![1, 2, 3].into_iter().into_iter();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `vec![1, 2, 3].into_iter()`\n \n error: identical conversion\n-  --> $DIR/identity_conversion.rs:56:21\n+  --> $DIR/identity_conversion.rs:53:21\n    |\n-56 |     let _: String = format!(\"Hello {}\", \"world\").into();\n+53 |     let _: String = format!(\"Hello {}\", \"world\").into();\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into()`: `format!(\"Hello {}\", \"world\")`\n \n error: aborting due to 10 previous errors"}, {"sha": "299cd2a67863ba58562e65687bf2726a33d9e93a", "filename": "tests/ui/identity_op.rs", "status": "modified", "additions": 16, "deletions": 14, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fidentity_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fidentity_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fidentity_op.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,16 +7,18 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n-const ONE : i64 = 1;\n-const NEG_ONE : i64 = -1;\n-const ZERO : i64 = 0;\n-\n-#[allow(clippy::eq_op, clippy::no_effect, clippy::unnecessary_operation, clippy::double_parens)]\n+const ONE: i64 = 1;\n+const NEG_ONE: i64 = -1;\n+const ZERO: i64 = 0;\n+\n+#[allow(\n+    clippy::eq_op,\n+    clippy::no_effect,\n+    clippy::unnecessary_operation,\n+    clippy::double_parens\n+)]\n #[warn(clippy::identity_op)]\n+#[rustfmt::skip]\n fn main() {\n     let x = 0;\n \n@@ -25,19 +27,19 @@ fn main() {\n     x + 1;\n     0 + x;\n     1 + x;\n-    x - ZERO;     //no error, as we skip lookups (for now)\n+    x - ZERO; //no error, as we skip lookups (for now)\n     x | (0);\n     ((ZERO)) | x; //no error, as we skip lookups (for now)\n \n     x * 1;\n     1 * x;\n-    x / ONE;      //no error, as we skip lookups (for now)\n+    x / ONE; //no error, as we skip lookups (for now)\n \n-    x / 2;        //no false positive\n+    x / 2; //no false positive\n \n-    x & NEG_ONE;  //no error, as we skip lookups (for now)\n+    x & NEG_ONE; //no error, as we skip lookups (for now)\n     -1 & x;\n \n-    let u : u8 = 0;\n+    let u: u8 = 0;\n     u & 255;\n }"}, {"sha": "19846b5ecdfdd9637f32456bfe39e2c44f90f0c5", "filename": "tests/ui/identity_op.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fidentity_op.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fidentity_op.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fidentity_op.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,51 +1,51 @@\n error: the operation is ineffective. Consider reducing it to `x`\n-  --> $DIR/identity_op.rs:23:5\n+  --> $DIR/identity_op.rs:25:5\n    |\n-23 |     x + 0;\n+25 |     x + 0;\n    |     ^^^^^\n    |\n    = note: `-D clippy::identity-op` implied by `-D warnings`\n \n error: the operation is ineffective. Consider reducing it to `x`\n-  --> $DIR/identity_op.rs:24:5\n+  --> $DIR/identity_op.rs:26:5\n    |\n-24 |     x + (1 - 1);\n+26 |     x + (1 - 1);\n    |     ^^^^^^^^^^^\n \n error: the operation is ineffective. Consider reducing it to `x`\n-  --> $DIR/identity_op.rs:26:5\n+  --> $DIR/identity_op.rs:28:5\n    |\n-26 |     0 + x;\n+28 |     0 + x;\n    |     ^^^^^\n \n error: the operation is ineffective. Consider reducing it to `x`\n-  --> $DIR/identity_op.rs:29:5\n+  --> $DIR/identity_op.rs:31:5\n    |\n-29 |     x | (0);\n+31 |     x | (0);\n    |     ^^^^^^^\n \n error: the operation is ineffective. Consider reducing it to `x`\n-  --> $DIR/identity_op.rs:32:5\n+  --> $DIR/identity_op.rs:34:5\n    |\n-32 |     x * 1;\n+34 |     x * 1;\n    |     ^^^^^\n \n error: the operation is ineffective. Consider reducing it to `x`\n-  --> $DIR/identity_op.rs:33:5\n+  --> $DIR/identity_op.rs:35:5\n    |\n-33 |     1 * x;\n+35 |     1 * x;\n    |     ^^^^^\n \n error: the operation is ineffective. Consider reducing it to `x`\n-  --> $DIR/identity_op.rs:39:5\n+  --> $DIR/identity_op.rs:41:5\n    |\n-39 |     -1 & x;\n+41 |     -1 & x;\n    |     ^^^^^^\n \n error: the operation is ineffective. Consider reducing it to `u`\n-  --> $DIR/identity_op.rs:42:5\n+  --> $DIR/identity_op.rs:44:5\n    |\n-42 |     u & 255;\n+44 |     u & 255;\n    |     ^^^^^^^\n \n error: aborting due to 8 previous errors"}, {"sha": "0179381fdc3d8a42e6eaca351e558aac263f268d", "filename": "tests/ui/if_not_else.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fif_not_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fif_not_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_not_else.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,13 +7,12 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![warn(clippy::all)]\n #![warn(clippy::if_not_else)]\n \n-fn bla() -> bool { unimplemented!() }\n+fn bla() -> bool {\n+    unimplemented!()\n+}\n \n fn main() {\n     if !bla() {"}, {"sha": "0393e49a2ee7605b4435900e00941d00f4b6df81", "filename": "tests/ui/if_not_else.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fif_not_else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fif_not_else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_not_else.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,24 +1,24 @@\n error: Unnecessary boolean `not` operation\n-  --> $DIR/if_not_else.rs:19:5\n+  --> $DIR/if_not_else.rs:18:5\n    |\n-19 | /     if !bla() {\n-20 | |         println!(\"Bugs\");\n-21 | |     } else {\n-22 | |         println!(\"Bunny\");\n-23 | |     }\n+18 | /     if !bla() {\n+19 | |         println!(\"Bugs\");\n+20 | |     } else {\n+21 | |         println!(\"Bunny\");\n+22 | |     }\n    | |_____^\n    |\n    = note: `-D clippy::if-not-else` implied by `-D warnings`\n    = help: remove the `!` and swap the blocks of the if/else\n \n error: Unnecessary `!=` operation\n-  --> $DIR/if_not_else.rs:24:5\n+  --> $DIR/if_not_else.rs:23:5\n    |\n-24 | /     if 4 != 5 {\n-25 | |         println!(\"Bugs\");\n-26 | |     } else {\n-27 | |         println!(\"Bunny\");\n-28 | |     }\n+23 | /     if 4 != 5 {\n+24 | |         println!(\"Bugs\");\n+25 | |     } else {\n+26 | |         println!(\"Bunny\");\n+27 | |     }\n    | |_____^\n    |\n    = help: change to `==` and swap the blocks of the if/else"}, {"sha": "398a8ccce44f362b90878aa0da6f1670aeee2fdc", "filename": "tests/ui/impl.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fimpl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fimpl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![allow(dead_code)]\n #![warn(clippy::multiple_inherent_impl)]\n "}, {"sha": "adad754bffee7be91dec6d2d4ccba996702707b3", "filename": "tests/ui/impl.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fimpl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fimpl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,34 +1,34 @@\n error: Multiple implementations of this structure\n-  --> $DIR/impl.rs:22:1\n+  --> $DIR/impl.rs:19:1\n    |\n-22 | / impl MyStruct {\n-23 | |     fn second() {}\n-24 | | }\n+19 | / impl MyStruct {\n+20 | |     fn second() {}\n+21 | | }\n    | |_^\n    |\n    = note: `-D clippy::multiple-inherent-impl` implied by `-D warnings`\n note: First implementation here\n-  --> $DIR/impl.rs:18:1\n+  --> $DIR/impl.rs:15:1\n    |\n-18 | / impl MyStruct {\n-19 | |     fn first() {}\n-20 | | }\n+15 | / impl MyStruct {\n+16 | |     fn first() {}\n+17 | | }\n    | |_^\n \n error: Multiple implementations of this structure\n-  --> $DIR/impl.rs:36:5\n+  --> $DIR/impl.rs:33:5\n    |\n-36 | /     impl super::MyStruct {\n-37 | |         fn third() {}\n-38 | |     }\n+33 | /     impl super::MyStruct {\n+34 | |         fn third() {}\n+35 | |     }\n    | |_____^\n    |\n note: First implementation here\n-  --> $DIR/impl.rs:18:1\n+  --> $DIR/impl.rs:15:1\n    |\n-18 | / impl MyStruct {\n-19 | |     fn first() {}\n-20 | | }\n+15 | / impl MyStruct {\n+16 | |     fn first() {}\n+17 | | }\n    | |_^\n \n error: aborting due to 2 previous errors"}, {"sha": "acd5a52ff386f65934f3ba0da46ee3c63d6e0049", "filename": "tests/ui/implicit_hasher.rs", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fimplicit_hasher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fimplicit_hasher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimplicit_hasher.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,12 +7,11 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n #![allow(unused)]\n \n-use std::collections::{HashMap, HashSet};\n use std::cmp::Eq;\n-use std::hash::{Hash, BuildHasher};\n+use std::collections::{HashMap, HashSet};\n+use std::hash::{BuildHasher, Hash};\n \n pub trait Foo<T>: Sized {\n     fn make() -> (Self, Self);\n@@ -49,7 +48,6 @@ impl<S: BuildHasher + Default> Foo<i64> for HashMap<String, String, S> {\n     }\n }\n \n-\n impl<T: Hash + Eq> Foo<i8> for HashSet<T> {\n     fn make() -> (Self, Self) {\n         (HashSet::new(), HashSet::with_capacity(10))\n@@ -72,8 +70,7 @@ impl<S: BuildHasher + Default> Foo<i64> for HashSet<String, S> {\n     }\n }\n \n-pub fn foo(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32>) {\n-}\n+pub fn foo(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32>) {}\n \n macro_rules! gen {\n     (impl) => {\n@@ -85,19 +82,19 @@ macro_rules! gen {\n     };\n \n     (fn $name:ident) => {\n-        pub fn $name(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32>) {\n-        }\n-    }\n+        pub fn $name(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32>) {}\n+    };\n }\n-\n+#[rustfmt::skip]\n gen!(impl);\n gen!(fn bar);\n \n // When the macro is in a different file, the suggestion spans can't be combined properly\n // and should not cause an ICE\n // See #2707\n #[macro_use]\n-#[path = \"../auxiliary/test_macro.rs\"] pub mod test_macro;\n+#[path = \"../auxiliary/test_macro.rs\"]\n+pub mod test_macro;\n __implicit_hasher_test_macro!(impl<K, V> for HashMap<K, V> where V: test_macro::A);\n \n fn main() {}"}, {"sha": "35306e77aecf078ba0133dd71789a05666853184", "filename": "tests/ui/implicit_hasher.stderr", "status": "modified", "additions": 39, "deletions": 39, "changes": 78, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fimplicit_hasher.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fimplicit_hasher.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimplicit_hasher.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,136 +1,136 @@\n error: impl for `HashMap` should be generalized over different hashers\n-  --> $DIR/implicit_hasher.rs:21:35\n+  --> $DIR/implicit_hasher.rs:20:35\n    |\n-21 | impl<K: Hash + Eq, V> Foo<i8> for HashMap<K, V> {\n+20 | impl<K: Hash + Eq, V> Foo<i8> for HashMap<K, V> {\n    |                                   ^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::implicit-hasher` implied by `-D warnings`\n help: consider adding a type parameter\n    |\n-21 | impl<K: Hash + Eq, V, S: ::std::hash::BuildHasher + Default> Foo<i8> for HashMap<K, V, S> {\n+20 | impl<K: Hash + Eq, V, S: ::std::hash::BuildHasher + Default> Foo<i8> for HashMap<K, V, S> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^             ^^^^^^^^^^^^^^^^\n help: ...and use generic constructor\n    |\n-27 |         (HashMap::default(), HashMap::with_capacity_and_hasher(10, Default::default()))\n+26 |         (HashMap::default(), HashMap::with_capacity_and_hasher(10, Default::default()))\n    |          ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: impl for `HashMap` should be generalized over different hashers\n-  --> $DIR/implicit_hasher.rs:30:36\n+  --> $DIR/implicit_hasher.rs:29:36\n    |\n-30 | impl<K: Hash + Eq, V> Foo<i8> for (HashMap<K, V>,) {\n+29 | impl<K: Hash + Eq, V> Foo<i8> for (HashMap<K, V>,) {\n    |                                    ^^^^^^^^^^^^^\n help: consider adding a type parameter\n    |\n-30 | impl<K: Hash + Eq, V, S: ::std::hash::BuildHasher + Default> Foo<i8> for (HashMap<K, V, S>,) {\n+29 | impl<K: Hash + Eq, V, S: ::std::hash::BuildHasher + Default> Foo<i8> for (HashMap<K, V, S>,) {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^              ^^^^^^^^^^^^^^^^\n help: ...and use generic constructor\n    |\n-32 |         ((HashMap::default(),), (HashMap::with_capacity_and_hasher(10, Default::default()),))\n+31 |         ((HashMap::default(),), (HashMap::with_capacity_and_hasher(10, Default::default()),))\n    |           ^^^^^^^^^^^^^^^^^^     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: impl for `HashMap` should be generalized over different hashers\n-  --> $DIR/implicit_hasher.rs:35:19\n+  --> $DIR/implicit_hasher.rs:34:19\n    |\n-35 | impl Foo<i16> for HashMap<String, String> {\n+34 | impl Foo<i16> for HashMap<String, String> {\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^\n help: consider adding a type parameter\n    |\n-35 | impl<S: ::std::hash::BuildHasher + Default> Foo<i16> for HashMap<String, String, S> {\n+34 | impl<S: ::std::hash::BuildHasher + Default> Foo<i16> for HashMap<String, String, S> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n help: ...and use generic constructor\n    |\n-37 |         (HashMap::default(), HashMap::with_capacity_and_hasher(10, Default::default()))\n+36 |         (HashMap::default(), HashMap::with_capacity_and_hasher(10, Default::default()))\n    |          ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: impl for `HashSet` should be generalized over different hashers\n-  --> $DIR/implicit_hasher.rs:53:32\n+  --> $DIR/implicit_hasher.rs:51:32\n    |\n-53 | impl<T: Hash + Eq> Foo<i8> for HashSet<T> {\n+51 | impl<T: Hash + Eq> Foo<i8> for HashSet<T> {\n    |                                ^^^^^^^^^^\n help: consider adding a type parameter\n    |\n-53 | impl<T: Hash + Eq, S: ::std::hash::BuildHasher + Default> Foo<i8> for HashSet<T, S> {\n+51 | impl<T: Hash + Eq, S: ::std::hash::BuildHasher + Default> Foo<i8> for HashSet<T, S> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^             ^^^^^^^^^^^^^\n help: ...and use generic constructor\n    |\n-55 |         (HashSet::default(), HashSet::with_capacity_and_hasher(10, Default::default()))\n+53 |         (HashSet::default(), HashSet::with_capacity_and_hasher(10, Default::default()))\n    |          ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: impl for `HashSet` should be generalized over different hashers\n-  --> $DIR/implicit_hasher.rs:58:19\n+  --> $DIR/implicit_hasher.rs:56:19\n    |\n-58 | impl Foo<i16> for HashSet<String> {\n+56 | impl Foo<i16> for HashSet<String> {\n    |                   ^^^^^^^^^^^^^^^\n help: consider adding a type parameter\n    |\n-58 | impl<S: ::std::hash::BuildHasher + Default> Foo<i16> for HashSet<String, S> {\n+56 | impl<S: ::std::hash::BuildHasher + Default> Foo<i16> for HashSet<String, S> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^              ^^^^^^^^^^^^^^^^^^\n help: ...and use generic constructor\n    |\n-60 |         (HashSet::default(), HashSet::with_capacity_and_hasher(10, Default::default()))\n+58 |         (HashSet::default(), HashSet::with_capacity_and_hasher(10, Default::default()))\n    |          ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: parameter of type `HashMap` should be generalized over different hashers\n-  --> $DIR/implicit_hasher.rs:75:23\n+  --> $DIR/implicit_hasher.rs:73:23\n    |\n-75 | pub fn foo(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32>) {\n+73 | pub fn foo(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32>) {}\n    |                       ^^^^^^^^^^^^^^^^^\n help: consider adding a type parameter\n    |\n-75 | pub fn foo<S: ::std::hash::BuildHasher>(_map: &mut HashMap<i32, i32, S>, _set: &mut HashSet<i32>) {\n+73 | pub fn foo<S: ::std::hash::BuildHasher>(_map: &mut HashMap<i32, i32, S>, _set: &mut HashSet<i32>) {}\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^            ^^^^^^^^^^^^^^^^^^^^\n \n error: parameter of type `HashSet` should be generalized over different hashers\n-  --> $DIR/implicit_hasher.rs:75:53\n+  --> $DIR/implicit_hasher.rs:73:53\n    |\n-75 | pub fn foo(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32>) {\n+73 | pub fn foo(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32>) {}\n    |                                                     ^^^^^^^^^^^^\n help: consider adding a type parameter\n    |\n-75 | pub fn foo<S: ::std::hash::BuildHasher>(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32, S>) {\n+73 | pub fn foo<S: ::std::hash::BuildHasher>(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32, S>) {}\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                          ^^^^^^^^^^^^^^^\n \n error: impl for `HashMap` should be generalized over different hashers\n-  --> $DIR/implicit_hasher.rs:80:43\n+  --> $DIR/implicit_hasher.rs:77:43\n    |\n-80 |         impl<K: Hash + Eq, V> Foo<u8> for HashMap<K, V> {\n+77 |         impl<K: Hash + Eq, V> Foo<u8> for HashMap<K, V> {\n    |                                           ^^^^^^^^^^^^^\n ...\n-93 | gen!(impl);\n+89 | gen!(impl);\n    | ----------- in this macro invocation\n help: consider adding a type parameter\n    |\n-80 |         impl<K: Hash + Eq, V, S: ::std::hash::BuildHasher + Default> Foo<u8> for HashMap<K, V, S> {\n+77 |         impl<K: Hash + Eq, V, S: ::std::hash::BuildHasher + Default> Foo<u8> for HashMap<K, V, S> {\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^             ^^^^^^^^^^^^^^^^\n help: ...and use generic constructor\n    |\n-82 |                 (HashMap::default(), HashMap::with_capacity_and_hasher(10, Default::default()))\n+79 |                 (HashMap::default(), HashMap::with_capacity_and_hasher(10, Default::default()))\n    |                  ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: parameter of type `HashMap` should be generalized over different hashers\n-  --> $DIR/implicit_hasher.rs:88:33\n+  --> $DIR/implicit_hasher.rs:85:33\n    |\n-88 |         pub fn $name(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32>) {\n+85 |         pub fn $name(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32>) {}\n    |                                 ^^^^^^^^^^^^^^^^^\n ...\n-94 | gen!(fn bar);\n+90 | gen!(fn bar);\n    | ------------- in this macro invocation\n help: consider adding a type parameter\n    |\n-88 |         pub fn $name<S: ::std::hash::BuildHasher>(_map: &mut HashMap<i32, i32, S>, _set: &mut HashSet<i32>) {\n+85 |         pub fn $name<S: ::std::hash::BuildHasher>(_map: &mut HashMap<i32, i32, S>, _set: &mut HashSet<i32>) {}\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^            ^^^^^^^^^^^^^^^^^^^^\n \n error: parameter of type `HashSet` should be generalized over different hashers\n-  --> $DIR/implicit_hasher.rs:88:63\n+  --> $DIR/implicit_hasher.rs:85:63\n    |\n-88 |         pub fn $name(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32>) {\n+85 |         pub fn $name(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32>) {}\n    |                                                               ^^^^^^^^^^^^\n ...\n-94 | gen!(fn bar);\n+90 | gen!(fn bar);\n    | ------------- in this macro invocation\n help: consider adding a type parameter\n    |\n-88 |         pub fn $name<S: ::std::hash::BuildHasher>(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32, S>) {\n+85 |         pub fn $name<S: ::std::hash::BuildHasher>(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32, S>) {}\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                          ^^^^^^^^^^^^^^^\n \n error: aborting due to 10 previous errors"}, {"sha": "6188835e555a07812e3faaaa856cdb7592fd3696", "filename": "tests/ui/implicit_return.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fimplicit_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fimplicit_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimplicit_return.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,10 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #![warn(clippy::implicit_return)]\n \n fn test_end_of_fn() -> bool {\n@@ -31,12 +27,11 @@ fn test_if_block() -> bool {\n }\n \n #[allow(clippy::match_bool)]\n+#[rustfmt::skip]\n fn test_match(x: bool) -> bool {\n     match x {\n         true => false,\n-        false => {\n-            true\n-        }\n+        false => { true },\n     }\n }\n \n@@ -48,9 +43,8 @@ fn test_loop() -> bool {\n }\n \n fn test_closure() {\n-    let _ = || {\n-        true\n-    };\n+    #[rustfmt::skip]\n+    let _ = || { true };\n     let _ = || true;\n }\n "}, {"sha": "b2feec3f57affdfc67d33ec359a08c6cfb148778", "filename": "tests/ui/implicit_return.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fimplicit_return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fimplicit_return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimplicit_return.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,51 +1,51 @@\n error: missing return statement\n-  --> $DIR/implicit_return.rs:21:5\n+  --> $DIR/implicit_return.rs:17:5\n    |\n-21 |     true\n+17 |     true\n    |     ^^^^ help: add `return` as shown: `return true`\n    |\n    = note: `-D clippy::implicit-return` implied by `-D warnings`\n \n error: missing return statement\n-  --> $DIR/implicit_return.rs:27:9\n+  --> $DIR/implicit_return.rs:23:9\n    |\n-27 |         true\n+23 |         true\n    |         ^^^^ help: add `return` as shown: `return true`\n \n error: missing return statement\n-  --> $DIR/implicit_return.rs:29:9\n+  --> $DIR/implicit_return.rs:25:9\n    |\n-29 |         false\n+25 |         false\n    |         ^^^^^ help: add `return` as shown: `return false`\n \n error: missing return statement\n-  --> $DIR/implicit_return.rs:36:17\n+  --> $DIR/implicit_return.rs:33:17\n    |\n-36 |         true => false,\n+33 |         true => false,\n    |                 ^^^^^ help: add `return` as shown: `return false`\n \n error: missing return statement\n-  --> $DIR/implicit_return.rs:38:13\n+  --> $DIR/implicit_return.rs:34:20\n    |\n-38 |             true\n-   |             ^^^^ help: add `return` as shown: `return true`\n+34 |         false => { true },\n+   |                    ^^^^ help: add `return` as shown: `return true`\n \n error: missing return statement\n-  --> $DIR/implicit_return.rs:46:9\n+  --> $DIR/implicit_return.rs:41:9\n    |\n-46 |         break true;\n+41 |         break true;\n    |         ^^^^^^^^^^ help: change `break` to `return` as shown: `return true`\n \n error: missing return statement\n-  --> $DIR/implicit_return.rs:52:9\n+  --> $DIR/implicit_return.rs:47:18\n    |\n-52 |         true\n-   |         ^^^^ help: add `return` as shown: `return true`\n+47 |     let _ = || { true };\n+   |                  ^^^^ help: add `return` as shown: `return true`\n \n error: missing return statement\n-  --> $DIR/implicit_return.rs:54:16\n+  --> $DIR/implicit_return.rs:48:16\n    |\n-54 |     let _ = || true;\n+48 |     let _ = || true;\n    |                ^^^^ help: add `return` as shown: `return true`\n \n error: aborting due to 8 previous errors"}, {"sha": "31e34135bfc9dbc4819287c8194df1b4dc05bd43", "filename": "tests/ui/inconsistent_digit_grouping.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Finconsistent_digit_grouping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Finconsistent_digit_grouping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finconsistent_digit_grouping.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,12 +7,17 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #[warn(clippy::inconsistent_digit_grouping)]\n #[allow(unused_variables)]\n fn main() {\n-    let good = (123, 1_234, 1_2345_6789, 123_f32, 1_234.12_f32, 1_234.123_4_f32, 1.123_456_7_f32);\n+    let good = (\n+        123,\n+        1_234,\n+        1_2345_6789,\n+        123_f32,\n+        1_234.12_f32,\n+        1_234.123_4_f32,\n+        1.123_456_7_f32,\n+    );\n     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n }"}, {"sha": "77e2f3bd41b2596a8694648f23656099f73b4237", "filename": "tests/ui/inconsistent_digit_grouping.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Finconsistent_digit_grouping.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Finconsistent_digit_grouping.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finconsistent_digit_grouping.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,33 +1,33 @@\n error: digits grouped inconsistently by underscores\n-  --> $DIR/inconsistent_digit_grouping.rs:17:16\n+  --> $DIR/inconsistent_digit_grouping.rs:22:16\n    |\n-17 |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n+22 |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n    |                ^^^^^^^^ help: consider: `123_456`\n    |\n    = note: `-D clippy::inconsistent-digit-grouping` implied by `-D warnings`\n \n error: digits grouped inconsistently by underscores\n-  --> $DIR/inconsistent_digit_grouping.rs:17:26\n+  --> $DIR/inconsistent_digit_grouping.rs:22:26\n    |\n-17 |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n+22 |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n    |                          ^^^^^^^^^^ help: consider: `12_345_678`\n \n error: digits grouped inconsistently by underscores\n-  --> $DIR/inconsistent_digit_grouping.rs:17:38\n+  --> $DIR/inconsistent_digit_grouping.rs:22:38\n    |\n-17 |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n+22 |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n    |                                      ^^^^^^^^ help: consider: `1_234_567`\n \n error: digits grouped inconsistently by underscores\n-  --> $DIR/inconsistent_digit_grouping.rs:17:48\n+  --> $DIR/inconsistent_digit_grouping.rs:22:48\n    |\n-17 |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n+22 |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n    |                                                ^^^^^^^^^^^^^^ help: consider: `1_234.567_8_f32`\n \n error: digits grouped inconsistently by underscores\n-  --> $DIR/inconsistent_digit_grouping.rs:17:64\n+  --> $DIR/inconsistent_digit_grouping.rs:22:64\n    |\n-17 |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n+22 |     let bad = (1_23_456, 1_234_5678, 1234_567, 1_234.5678_f32, 1.234_5678_f32);\n    |                                                                ^^^^^^^^^^^^^^ help: consider: `1.234_567_8_f32`\n \n error: aborting due to 5 previous errors"}, {"sha": "a9e697e519f87e65eba863b368f91e78ac399d42", "filename": "tests/ui/indexing_slicing.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Findexing_slicing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Findexing_slicing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Findexing_slicing.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![feature(plugin)]\n #![warn(clippy::indexing_slicing)]\n #![warn(clippy::out_of_bounds_indexing)]"}, {"sha": "c9a45bc4084784cafdf8cdfce2c44a0a396d61c1", "filename": "tests/ui/indexing_slicing.stderr", "status": "modified", "additions": 86, "deletions": 86, "changes": 172, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Findexing_slicing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Findexing_slicing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Findexing_slicing.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,308 +1,308 @@\n error: index out of bounds: the len is 4 but the index is 4\n-  --> $DIR/indexing_slicing.rs:28:5\n+  --> $DIR/indexing_slicing.rs:25:5\n    |\n-28 |     x[4]; // Ok, let rustc's `const_err` lint handle `usize` indexing on arrays.\n+25 |     x[4]; // Ok, let rustc's `const_err` lint handle `usize` indexing on arrays.\n    |     ^^^^\n    |\n    = note: #[deny(const_err)] on by default\n \n error: index out of bounds: the len is 4 but the index is 8\n-  --> $DIR/indexing_slicing.rs:29:5\n+  --> $DIR/indexing_slicing.rs:26:5\n    |\n-29 |     x[1 << 3]; // Ok, let rustc's `const_err` lint handle `usize` indexing on arrays.\n+26 |     x[1 << 3]; // Ok, let rustc's `const_err` lint handle `usize` indexing on arrays.\n    |     ^^^^^^^^^\n \n error: index out of bounds: the len is 0 but the index is 0\n-  --> $DIR/indexing_slicing.rs:59:5\n+  --> $DIR/indexing_slicing.rs:56:5\n    |\n-59 |     empty[0]; // Ok, let rustc's `const_err` lint handle `usize` indexing on arrays.\n+56 |     empty[0]; // Ok, let rustc's `const_err` lint handle `usize` indexing on arrays.\n    |     ^^^^^^^^\n \n error: index out of bounds: the len is 4 but the index is 15\n-  --> $DIR/indexing_slicing.rs:90:5\n+  --> $DIR/indexing_slicing.rs:87:5\n    |\n-90 |     x[N]; // Ok, let rustc's `const_err` lint handle `usize` indexing on arrays.\n+87 |     x[N]; // Ok, let rustc's `const_err` lint handle `usize` indexing on arrays.\n    |     ^^^^\n \n error: indexing may panic.\n-  --> $DIR/indexing_slicing.rs:23:5\n+  --> $DIR/indexing_slicing.rs:20:5\n    |\n-23 |     x[index];\n+20 |     x[index];\n    |     ^^^^^^^^\n    |\n    = note: `-D clippy::indexing-slicing` implied by `-D warnings`\n    = help: Consider using `.get(n)` or `.get_mut(n)` instead\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:24:6\n+  --> $DIR/indexing_slicing.rs:21:6\n    |\n-24 |     &x[index..];\n+21 |     &x[index..];\n    |      ^^^^^^^^^^\n    |\n    = help: Consider using `.get(n..)` or .get_mut(n..)` instead\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:25:6\n+  --> $DIR/indexing_slicing.rs:22:6\n    |\n-25 |     &x[..index];\n+22 |     &x[..index];\n    |      ^^^^^^^^^^\n    |\n    = help: Consider using `.get(..n)`or `.get_mut(..n)` instead\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:26:6\n+  --> $DIR/indexing_slicing.rs:23:6\n    |\n-26 |     &x[index_from..index_to];\n+23 |     &x[index_from..index_to];\n    |      ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: Consider using `.get(n..m)` or `.get_mut(n..m)` instead\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:27:6\n+  --> $DIR/indexing_slicing.rs:24:6\n    |\n-27 |     &x[index_from..][..index_to]; // Two lint reports, one for [index_from..] and another for [..index_to].\n+24 |     &x[index_from..][..index_to]; // Two lint reports, one for [index_from..] and another for [..index_to].\n    |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: Consider using `.get(..n)`or `.get_mut(..n)` instead\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:27:6\n+  --> $DIR/indexing_slicing.rs:24:6\n    |\n-27 |     &x[index_from..][..index_to]; // Two lint reports, one for [index_from..] and another for [..index_to].\n+24 |     &x[index_from..][..index_to]; // Two lint reports, one for [index_from..] and another for [..index_to].\n    |      ^^^^^^^^^^^^^^^\n    |\n    = help: Consider using `.get(n..)` or .get_mut(n..)` instead\n \n error: range is out of bounds\n-  --> $DIR/indexing_slicing.rs:30:11\n+  --> $DIR/indexing_slicing.rs:27:11\n    |\n-30 |     &x[..=4];\n+27 |     &x[..=4];\n    |           ^\n    |\n    = note: `-D clippy::out-of-bounds-indexing` implied by `-D warnings`\n \n error: range is out of bounds\n-  --> $DIR/indexing_slicing.rs:31:11\n+  --> $DIR/indexing_slicing.rs:28:11\n    |\n-31 |     &x[1..5];\n+28 |     &x[1..5];\n    |           ^\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:32:6\n+  --> $DIR/indexing_slicing.rs:29:6\n    |\n-32 |     &x[5..][..10]; // Two lint reports, one for [5..] and another for [..10].\n+29 |     &x[5..][..10]; // Two lint reports, one for [5..] and another for [..10].\n    |      ^^^^^^^^^^^^\n    |\n    = help: Consider using `.get(..n)`or `.get_mut(..n)` instead\n \n error: range is out of bounds\n-  --> $DIR/indexing_slicing.rs:32:8\n+  --> $DIR/indexing_slicing.rs:29:8\n    |\n-32 |     &x[5..][..10]; // Two lint reports, one for [5..] and another for [..10].\n+29 |     &x[5..][..10]; // Two lint reports, one for [5..] and another for [..10].\n    |        ^\n \n error: range is out of bounds\n-  --> $DIR/indexing_slicing.rs:33:8\n+  --> $DIR/indexing_slicing.rs:30:8\n    |\n-33 |     &x[5..];\n+30 |     &x[5..];\n    |        ^\n \n error: range is out of bounds\n-  --> $DIR/indexing_slicing.rs:34:10\n+  --> $DIR/indexing_slicing.rs:31:10\n    |\n-34 |     &x[..5];\n+31 |     &x[..5];\n    |          ^\n \n error: range is out of bounds\n-  --> $DIR/indexing_slicing.rs:35:8\n+  --> $DIR/indexing_slicing.rs:32:8\n    |\n-35 |     &x[5..].iter().map(|x| 2 * x).collect::<Vec<i32>>();\n+32 |     &x[5..].iter().map(|x| 2 * x).collect::<Vec<i32>>();\n    |        ^\n \n error: range is out of bounds\n-  --> $DIR/indexing_slicing.rs:36:12\n+  --> $DIR/indexing_slicing.rs:33:12\n    |\n-36 |     &x[0..=4];\n+33 |     &x[0..=4];\n    |            ^\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:37:6\n+  --> $DIR/indexing_slicing.rs:34:6\n    |\n-37 |     &x[0..][..3];\n+34 |     &x[0..][..3];\n    |      ^^^^^^^^^^^\n    |\n    = help: Consider using `.get(..n)`or `.get_mut(..n)` instead\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:38:6\n+  --> $DIR/indexing_slicing.rs:35:6\n    |\n-38 |     &x[1..][..5];\n+35 |     &x[1..][..5];\n    |      ^^^^^^^^^^^\n    |\n    = help: Consider using `.get(..n)`or `.get_mut(..n)` instead\n \n error: indexing may panic.\n-  --> $DIR/indexing_slicing.rs:51:5\n+  --> $DIR/indexing_slicing.rs:48:5\n    |\n-51 |     y[0];\n+48 |     y[0];\n    |     ^^^^\n    |\n    = help: Consider using `.get(n)` or `.get_mut(n)` instead\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:52:6\n+  --> $DIR/indexing_slicing.rs:49:6\n    |\n-52 |     &y[1..2];\n+49 |     &y[1..2];\n    |      ^^^^^^^\n    |\n    = help: Consider using `.get(n..m)` or `.get_mut(n..m)` instead\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:53:6\n+  --> $DIR/indexing_slicing.rs:50:6\n    |\n-53 |     &y[0..=4];\n+50 |     &y[0..=4];\n    |      ^^^^^^^^\n    |\n    = help: Consider using `.get(n..m)` or `.get_mut(n..m)` instead\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:54:6\n+  --> $DIR/indexing_slicing.rs:51:6\n    |\n-54 |     &y[..=4];\n+51 |     &y[..=4];\n    |      ^^^^^^^\n    |\n    = help: Consider using `.get(..n)`or `.get_mut(..n)` instead\n \n error: range is out of bounds\n-  --> $DIR/indexing_slicing.rs:60:12\n+  --> $DIR/indexing_slicing.rs:57:12\n    |\n-60 |     &empty[1..5];\n+57 |     &empty[1..5];\n    |            ^\n \n error: range is out of bounds\n-  --> $DIR/indexing_slicing.rs:61:16\n+  --> $DIR/indexing_slicing.rs:58:16\n    |\n-61 |     &empty[0..=4];\n+58 |     &empty[0..=4];\n    |                ^\n \n error: range is out of bounds\n-  --> $DIR/indexing_slicing.rs:62:15\n+  --> $DIR/indexing_slicing.rs:59:15\n    |\n-62 |     &empty[..=4];\n+59 |     &empty[..=4];\n    |               ^\n \n error: range is out of bounds\n-  --> $DIR/indexing_slicing.rs:63:12\n+  --> $DIR/indexing_slicing.rs:60:12\n    |\n-63 |     &empty[1..];\n+60 |     &empty[1..];\n    |            ^\n \n error: range is out of bounds\n-  --> $DIR/indexing_slicing.rs:64:14\n+  --> $DIR/indexing_slicing.rs:61:14\n    |\n-64 |     &empty[..4];\n+61 |     &empty[..4];\n    |              ^\n \n error: range is out of bounds\n-  --> $DIR/indexing_slicing.rs:65:16\n+  --> $DIR/indexing_slicing.rs:62:16\n    |\n-65 |     &empty[0..=0];\n+62 |     &empty[0..=0];\n    |                ^\n \n error: range is out of bounds\n-  --> $DIR/indexing_slicing.rs:66:15\n+  --> $DIR/indexing_slicing.rs:63:15\n    |\n-66 |     &empty[..=0];\n+63 |     &empty[..=0];\n    |               ^\n \n error: indexing may panic.\n-  --> $DIR/indexing_slicing.rs:74:5\n+  --> $DIR/indexing_slicing.rs:71:5\n    |\n-74 |     v[0];\n+71 |     v[0];\n    |     ^^^^\n    |\n    = help: Consider using `.get(n)` or `.get_mut(n)` instead\n \n error: indexing may panic.\n-  --> $DIR/indexing_slicing.rs:75:5\n+  --> $DIR/indexing_slicing.rs:72:5\n    |\n-75 |     v[10];\n+72 |     v[10];\n    |     ^^^^^\n    |\n    = help: Consider using `.get(n)` or `.get_mut(n)` instead\n \n error: indexing may panic.\n-  --> $DIR/indexing_slicing.rs:76:5\n+  --> $DIR/indexing_slicing.rs:73:5\n    |\n-76 |     v[1 << 3];\n+73 |     v[1 << 3];\n    |     ^^^^^^^^^\n    |\n    = help: Consider using `.get(n)` or `.get_mut(n)` instead\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:77:6\n+  --> $DIR/indexing_slicing.rs:74:6\n    |\n-77 |     &v[10..100];\n+74 |     &v[10..100];\n    |      ^^^^^^^^^^\n    |\n    = help: Consider using `.get(n..m)` or `.get_mut(n..m)` instead\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:78:6\n+  --> $DIR/indexing_slicing.rs:75:6\n    |\n-78 |     &x[10..][..100]; // Two lint reports, one for [10..] and another for [..100].\n+75 |     &x[10..][..100]; // Two lint reports, one for [10..] and another for [..100].\n    |      ^^^^^^^^^^^^^^\n    |\n    = help: Consider using `.get(..n)`or `.get_mut(..n)` instead\n \n error: range is out of bounds\n-  --> $DIR/indexing_slicing.rs:78:8\n+  --> $DIR/indexing_slicing.rs:75:8\n    |\n-78 |     &x[10..][..100]; // Two lint reports, one for [10..] and another for [..100].\n+75 |     &x[10..][..100]; // Two lint reports, one for [10..] and another for [..100].\n    |        ^^\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:79:6\n+  --> $DIR/indexing_slicing.rs:76:6\n    |\n-79 |     &v[10..];\n+76 |     &v[10..];\n    |      ^^^^^^^\n    |\n    = help: Consider using `.get(n..)` or .get_mut(n..)` instead\n \n error: slicing may panic.\n-  --> $DIR/indexing_slicing.rs:80:6\n+  --> $DIR/indexing_slicing.rs:77:6\n    |\n-80 |     &v[..100];\n+77 |     &v[..100];\n    |      ^^^^^^^^\n    |\n    = help: Consider using `.get(..n)`or `.get_mut(..n)` instead\n \n error: indexing may panic.\n-  --> $DIR/indexing_slicing.rs:92:5\n+  --> $DIR/indexing_slicing.rs:89:5\n    |\n-92 |     v[N];\n+89 |     v[N];\n    |     ^^^^\n    |\n    = help: Consider using `.get(n)` or `.get_mut(n)` instead\n \n error: indexing may panic.\n-  --> $DIR/indexing_slicing.rs:93:5\n+  --> $DIR/indexing_slicing.rs:90:5\n    |\n-93 |     v[M];\n+90 |     v[M];\n    |     ^^^^\n    |\n    = help: Consider using `.get(n)` or `.get_mut(n)` instead\n \n error: range is out of bounds\n-  --> $DIR/indexing_slicing.rs:97:13\n+  --> $DIR/indexing_slicing.rs:94:13\n    |\n-97 |     &x[num..10]; // should trigger out of bounds error\n+94 |     &x[num..10]; // should trigger out of bounds error\n    |             ^^\n \n error: range is out of bounds\n-  --> $DIR/indexing_slicing.rs:98:8\n+  --> $DIR/indexing_slicing.rs:95:8\n    |\n-98 |     &x[10..num]; // should trigger out of bounds error\n+95 |     &x[10..num]; // should trigger out of bounds error\n    |        ^^\n \n error: aborting due to 43 previous errors"}, {"sha": "37ae19497d18cc6577b5bc5396beb6678d238140", "filename": "tests/ui/infallible_destructuring_match.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Finfallible_destructuring_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Finfallible_destructuring_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finfallible_destructuring_match.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![feature(exhaustive_patterns, never_type)]\n #![allow(clippy::let_and_return)]\n "}, {"sha": "62588a2ad7ce2d62fbe2a664a7d0b71dd15268df", "filename": "tests/ui/infallible_destructuring_match.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Finfallible_destructuring_match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Finfallible_destructuring_match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finfallible_destructuring_match.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,27 +1,27 @@\n error: you seem to be trying to use match to destructure a single infallible pattern. Consider using `let`\n-  --> $DIR/infallible_destructuring_match.rs:28:5\n+  --> $DIR/infallible_destructuring_match.rs:25:5\n    |\n-28 | /     let data = match wrapper {\n-29 | |         SingleVariantEnum::Variant(i) => i,\n-30 | |     };\n+25 | /     let data = match wrapper {\n+26 | |         SingleVariantEnum::Variant(i) => i,\n+27 | |     };\n    | |______^ help: try this: `let SingleVariantEnum::Variant(data) = wrapper;`\n    |\n    = note: `-D clippy::infallible-destructuring-match` implied by `-D warnings`\n \n error: you seem to be trying to use match to destructure a single infallible pattern. Consider using `let`\n-  --> $DIR/infallible_destructuring_match.rs:49:5\n+  --> $DIR/infallible_destructuring_match.rs:46:5\n    |\n-49 | /     let data = match wrapper {\n-50 | |         TupleStruct(i) => i,\n-51 | |     };\n+46 | /     let data = match wrapper {\n+47 | |         TupleStruct(i) => i,\n+48 | |     };\n    | |______^ help: try this: `let TupleStruct(data) = wrapper;`\n \n error: you seem to be trying to use match to destructure a single infallible pattern. Consider using `let`\n-  --> $DIR/infallible_destructuring_match.rs:70:5\n+  --> $DIR/infallible_destructuring_match.rs:67:5\n    |\n-70 | /     let data = match wrapper {\n-71 | |         Ok(i) => i,\n-72 | |     };\n+67 | /     let data = match wrapper {\n+68 | |         Ok(i) => i,\n+69 | |     };\n    | |______^ help: try this: `let Ok(data) = wrapper;`\n \n error: aborting due to 3 previous errors"}, {"sha": "8f41e3ae98d9cf67d8012c7dde3ef007594c14cf", "filename": "tests/ui/infinite_iter.rs", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Finfinite_iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Finfinite_iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finfinite_iter.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,23 +7,29 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n use std::iter::repeat;\n #[allow(clippy::trivially_copy_pass_by_ref)]\n-fn square_is_lower_64(x: &u32) -> bool { x * x < 64 }\n+fn square_is_lower_64(x: &u32) -> bool {\n+    x * x < 64\n+}\n \n #[allow(clippy::maybe_infinite_iter)]\n #[deny(clippy::infinite_iter)]\n fn infinite_iters() {\n     repeat(0_u8).collect::<Vec<_>>(); // infinite iter\n     (0..8_u32).take_while(square_is_lower_64).cycle().count(); // infinite iter\n     (0..8_u64).chain(0..).max(); // infinite iter\n-    (0_usize..).chain([0usize, 1, 2].iter().cloned()).skip_while(|x| *x != 42).min(); // infinite iter\n-    (0..8_u32).rev().cycle().map(|x| x + 1_u32).for_each(|x| println!(\"{}\", x)); // infinite iter\n+    (0_usize..)\n+        .chain([0usize, 1, 2].iter().cloned())\n+        .skip_while(|x| *x != 42)\n+        .min(); // infinite iter\n+    (0..8_u32)\n+        .rev()\n+        .cycle()\n+        .map(|x| x + 1_u32)\n+        .for_each(|x| println!(\"{}\", x)); // infinite iter\n     (0..3_u32).flat_map(|x| x..).sum::<u32>(); // infinite iter\n-    (0_usize..).flat_map(|x| 0..x).product::<usize>();  // infinite iter\n+    (0_usize..).flat_map(|x| 0..x).product::<usize>(); // infinite iter\n     (0_u64..).filter(|x| x % 2 == 0).last(); // infinite iter\n     (0..42_u64).by_ref().last(); // not an infinite, because ranges are double-ended\n     (0..).next(); // iterator is not exhausted\n@@ -33,7 +39,12 @@ fn infinite_iters() {\n fn potential_infinite_iters() {\n     (0..).zip((0..).take_while(square_is_lower_64)).count(); // maybe infinite iter\n     repeat(42).take_while(|x| *x == 42).chain(0..42).max(); // maybe infinite iter\n-    (1..).scan(0, |state, x| { *state += x; Some(*state) }).min(); // maybe infinite iter\n+    (1..)\n+        .scan(0, |state, x| {\n+            *state += x;\n+            Some(*state)\n+        })\n+        .min(); // maybe infinite iter\n     (0..).find(|x| *x == 24); // maybe infinite iter\n     (0..).position(|x| x == 24); // maybe infinite iter\n     (0..).any(|x| x == 24); // maybe infinite iter"}, {"sha": "2c3b05aaff32a092f332a9d7ff0a9635047c9e2c", "filename": "tests/ui/infinite_iter.stderr", "status": "modified", "additions": 44, "deletions": 35, "changes": 79, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Finfinite_iter.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Finfinite_iter.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finfinite_iter.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,99 +1,108 @@\n error: you are collect()ing an iterator and throwing away the result. Consider using an explicit for loop to exhaust the iterator\n-  --> $DIR/infinite_iter.rs:20:5\n+  --> $DIR/infinite_iter.rs:19:5\n    |\n-20 |     repeat(0_u8).collect::<Vec<_>>(); // infinite iter\n+19 |     repeat(0_u8).collect::<Vec<_>>(); // infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::unused-collect` implied by `-D warnings`\n \n error: infinite iteration detected\n-  --> $DIR/infinite_iter.rs:20:5\n+  --> $DIR/infinite_iter.rs:19:5\n    |\n-20 |     repeat(0_u8).collect::<Vec<_>>(); // infinite iter\n+19 |     repeat(0_u8).collect::<Vec<_>>(); // infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: lint level defined here\n-  --> $DIR/infinite_iter.rs:18:8\n+  --> $DIR/infinite_iter.rs:17:8\n    |\n-18 | #[deny(clippy::infinite_iter)]\n+17 | #[deny(clippy::infinite_iter)]\n    |        ^^^^^^^^^^^^^^^^^^^^^\n \n error: infinite iteration detected\n-  --> $DIR/infinite_iter.rs:21:5\n+  --> $DIR/infinite_iter.rs:20:5\n    |\n-21 |     (0..8_u32).take_while(square_is_lower_64).cycle().count(); // infinite iter\n+20 |     (0..8_u32).take_while(square_is_lower_64).cycle().count(); // infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: infinite iteration detected\n-  --> $DIR/infinite_iter.rs:22:5\n+  --> $DIR/infinite_iter.rs:21:5\n    |\n-22 |     (0..8_u64).chain(0..).max(); // infinite iter\n+21 |     (0..8_u64).chain(0..).max(); // infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: infinite iteration detected\n-  --> $DIR/infinite_iter.rs:24:5\n+  --> $DIR/infinite_iter.rs:26:5\n    |\n-24 |     (0..8_u32).rev().cycle().map(|x| x + 1_u32).for_each(|x| println!(\"{}\", x)); // infinite iter\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+26 | /     (0..8_u32)\n+27 | |         .rev()\n+28 | |         .cycle()\n+29 | |         .map(|x| x + 1_u32)\n+30 | |         .for_each(|x| println!(\"{}\", x)); // infinite iter\n+   | |________________________________________^\n \n error: infinite iteration detected\n-  --> $DIR/infinite_iter.rs:26:5\n+  --> $DIR/infinite_iter.rs:32:5\n    |\n-26 |     (0_usize..).flat_map(|x| 0..x).product::<usize>();  // infinite iter\n+32 |     (0_usize..).flat_map(|x| 0..x).product::<usize>(); // infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: infinite iteration detected\n-  --> $DIR/infinite_iter.rs:27:5\n+  --> $DIR/infinite_iter.rs:33:5\n    |\n-27 |     (0_u64..).filter(|x| x % 2 == 0).last(); // infinite iter\n+33 |     (0_u64..).filter(|x| x % 2 == 0).last(); // infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: possible infinite iteration detected\n-  --> $DIR/infinite_iter.rs:34:5\n+  --> $DIR/infinite_iter.rs:40:5\n    |\n-34 |     (0..).zip((0..).take_while(square_is_lower_64)).count(); // maybe infinite iter\n+40 |     (0..).zip((0..).take_while(square_is_lower_64)).count(); // maybe infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: lint level defined here\n-  --> $DIR/infinite_iter.rs:32:8\n+  --> $DIR/infinite_iter.rs:38:8\n    |\n-32 | #[deny(clippy::maybe_infinite_iter)]\n+38 | #[deny(clippy::maybe_infinite_iter)]\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: possible infinite iteration detected\n-  --> $DIR/infinite_iter.rs:35:5\n+  --> $DIR/infinite_iter.rs:41:5\n    |\n-35 |     repeat(42).take_while(|x| *x == 42).chain(0..42).max(); // maybe infinite iter\n+41 |     repeat(42).take_while(|x| *x == 42).chain(0..42).max(); // maybe infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: possible infinite iteration detected\n-  --> $DIR/infinite_iter.rs:36:5\n-   |\n-36 |     (1..).scan(0, |state, x| { *state += x; Some(*state) }).min(); // maybe infinite iter\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/infinite_iter.rs:42:5\n+   |\n+42 | /     (1..)\n+43 | |         .scan(0, |state, x| {\n+44 | |             *state += x;\n+45 | |             Some(*state)\n+46 | |         })\n+47 | |         .min(); // maybe infinite iter\n+   | |______________^\n \n error: possible infinite iteration detected\n-  --> $DIR/infinite_iter.rs:37:5\n+  --> $DIR/infinite_iter.rs:48:5\n    |\n-37 |     (0..).find(|x| *x == 24); // maybe infinite iter\n+48 |     (0..).find(|x| *x == 24); // maybe infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: possible infinite iteration detected\n-  --> $DIR/infinite_iter.rs:38:5\n+  --> $DIR/infinite_iter.rs:49:5\n    |\n-38 |     (0..).position(|x| x == 24); // maybe infinite iter\n+49 |     (0..).position(|x| x == 24); // maybe infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: possible infinite iteration detected\n-  --> $DIR/infinite_iter.rs:39:5\n+  --> $DIR/infinite_iter.rs:50:5\n    |\n-39 |     (0..).any(|x| x == 24); // maybe infinite iter\n+50 |     (0..).any(|x| x == 24); // maybe infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n error: possible infinite iteration detected\n-  --> $DIR/infinite_iter.rs:40:5\n+  --> $DIR/infinite_iter.rs:51:5\n    |\n-40 |     (0..).all(|x| x == 24); // maybe infinite iter\n+51 |     (0..).all(|x| x == 24); // maybe infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 14 previous errors"}, {"sha": "f93103215932eaa6b838fa2d5694e1f055a2639e", "filename": "tests/ui/infinite_loop.rs", "status": "modified", "additions": 20, "deletions": 11, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Finfinite_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Finfinite_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finfinite_loop.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,17 +7,23 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![allow(clippy::trivially_copy_pass_by_ref)]\n \n-\n-fn fn_val(i: i32) -> i32 { unimplemented!() }\n-fn fn_constref(i: &i32) -> i32 { unimplemented!() }\n-fn fn_mutref(i: &mut i32) { unimplemented!() }\n-fn fooi() -> i32 { unimplemented!() }\n-fn foob() -> bool { unimplemented!() }\n+fn fn_val(i: i32) -> i32 {\n+    unimplemented!()\n+}\n+fn fn_constref(i: &i32) -> i32 {\n+    unimplemented!()\n+}\n+fn fn_mutref(i: &mut i32) {\n+    unimplemented!()\n+}\n+fn fooi() -> i32 {\n+    unimplemented!()\n+}\n+fn foob() -> bool {\n+    unimplemented!()\n+}\n \n #[allow(clippy::many_single_char_names)]\n fn immutable_condition() {\n@@ -143,12 +149,15 @@ fn consts() {\n \n use std::cell::Cell;\n \n-fn maybe_i_mutate(i: &Cell<bool>) { unimplemented!() }\n+fn maybe_i_mutate(i: &Cell<bool>) {\n+    unimplemented!()\n+}\n \n fn internally_mutable() {\n     let b = Cell::new(true);\n \n-    while b.get() {       // b cannot be silently coerced to `bool`\n+    while b.get() {\n+        // b cannot be silently coerced to `bool`\n         maybe_i_mutate(&b);\n         println!(\"OK - Method call within condition\");\n     }"}, {"sha": "de7851519ec7f967380326ccb6907a6f9fe7d908", "filename": "tests/ui/infinite_loop.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Finfinite_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Finfinite_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finfinite_loop.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,57 +1,57 @@\n error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n-  --> $DIR/infinite_loop.rs:26:11\n+  --> $DIR/infinite_loop.rs:32:11\n    |\n-26 |     while y < 10 {\n+32 |     while y < 10 {\n    |           ^^^^^^\n    |\n    = note: #[deny(clippy::while_immutable_condition)] on by default\n \n error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n-  --> $DIR/infinite_loop.rs:31:11\n+  --> $DIR/infinite_loop.rs:37:11\n    |\n-31 |     while y < 10 && x < 3 {\n+37 |     while y < 10 && x < 3 {\n    |           ^^^^^^^^^^^^^^^\n \n error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n-  --> $DIR/infinite_loop.rs:38:11\n+  --> $DIR/infinite_loop.rs:44:11\n    |\n-38 |     while !cond {\n+44 |     while !cond {\n    |           ^^^^^\n \n error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n-  --> $DIR/infinite_loop.rs:82:11\n+  --> $DIR/infinite_loop.rs:88:11\n    |\n-82 |     while i < 3 {\n+88 |     while i < 3 {\n    |           ^^^^^\n \n error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n-  --> $DIR/infinite_loop.rs:87:11\n+  --> $DIR/infinite_loop.rs:93:11\n    |\n-87 |     while i < 3 && j > 0 {\n+93 |     while i < 3 && j > 0 {\n    |           ^^^^^^^^^^^^^^\n \n error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n-  --> $DIR/infinite_loop.rs:91:11\n+  --> $DIR/infinite_loop.rs:97:11\n    |\n-91 |     while i < 3 {\n+97 |     while i < 3 {\n    |           ^^^^^\n \n error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n-   --> $DIR/infinite_loop.rs:106:11\n+   --> $DIR/infinite_loop.rs:112:11\n     |\n-106 |     while i < 3 {\n+112 |     while i < 3 {\n     |           ^^^^^\n \n error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n-   --> $DIR/infinite_loop.rs:111:11\n+   --> $DIR/infinite_loop.rs:117:11\n     |\n-111 |     while i < 3 {\n+117 |     while i < 3 {\n     |           ^^^^^\n \n error: Variable in the condition are not mutated in the loop body. This either leads to an infinite or to a never running loop.\n-   --> $DIR/infinite_loop.rs:174:15\n+   --> $DIR/infinite_loop.rs:183:15\n     |\n-174 |         while self.count < n {\n+183 |         while self.count < n {\n     |               ^^^^^^^^^^^^^^\n \n error: aborting due to 9 previous errors"}, {"sha": "d97e6d69941f150f963ad74fb8229dca64c46720", "filename": "tests/ui/inline_fn_without_body.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Finline_fn_without_body.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Finline_fn_without_body.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finline_fn_without_body.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,26 +7,21 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #![warn(clippy::inline_fn_without_body)]\n #![allow(clippy::inline_always)]\n \n trait Foo {\n     #[inline]\n     fn default_inline();\n \n-    #[inline(always)]fn always_inline();\n+    #[inline(always)]\n+    fn always_inline();\n \n     #[inline(never)]\n     fn never_inline();\n \n     #[inline]\n-    fn has_body() {\n-    }\n+    fn has_body() {}\n }\n \n-fn main() {\n-}\n+fn main() {}"}, {"sha": "0eaee7c7b257286a1bc3f5c7ca0e9a7454c85d00", "filename": "tests/ui/inline_fn_without_body.stderr", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Finline_fn_without_body.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Finline_fn_without_body.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finline_fn_without_body.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,25 +1,27 @@\n error: use of `#[inline]` on trait method `default_inline` which has no body\n-  --> $DIR/inline_fn_without_body.rs:18:5\n+  --> $DIR/inline_fn_without_body.rs:14:5\n    |\n-18 |       #[inline]\n+14 |       #[inline]\n    |  _____-^^^^^^^^\n-19 | |     fn default_inline();\n+15 | |     fn default_inline();\n    | |____- help: remove\n    |\n    = note: `-D clippy::inline-fn-without-body` implied by `-D warnings`\n \n error: use of `#[inline]` on trait method `always_inline` which has no body\n-  --> $DIR/inline_fn_without_body.rs:21:5\n+  --> $DIR/inline_fn_without_body.rs:17:5\n    |\n-21 |     #[inline(always)]fn always_inline();\n-   |     ^^^^^^^^^^^^^^^^^ help: remove\n+17 |       #[inline(always)]\n+   |  _____-^^^^^^^^^^^^^^^^\n+18 | |     fn always_inline();\n+   | |____- help: remove\n \n error: use of `#[inline]` on trait method `never_inline` which has no body\n-  --> $DIR/inline_fn_without_body.rs:23:5\n+  --> $DIR/inline_fn_without_body.rs:20:5\n    |\n-23 |       #[inline(never)]\n+20 |       #[inline(never)]\n    |  _____-^^^^^^^^^^^^^^^\n-24 | |     fn never_inline();\n+21 | |     fn never_inline();\n    | |____- help: remove\n \n error: aborting due to 3 previous errors"}, {"sha": "ce6cd7888ee83b9c0fa42c148076a50902f56d08", "filename": "tests/ui/int_plus_one.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fint_plus_one.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fint_plus_one.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fint_plus_one.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,10 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #[allow(clippy::no_effect, clippy::unnecessary_operation)]\n #[warn(clippy::int_plus_one)]\n fn main() {"}, {"sha": "4a81e911157b3579ef913e6289477651e44de405", "filename": "tests/ui/int_plus_one.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fint_plus_one.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fint_plus_one.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fint_plus_one.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,43 +1,43 @@\n error: Unnecessary `>= y + 1` or `x - 1 >=`\n-  --> $DIR/int_plus_one.rs:20:5\n+  --> $DIR/int_plus_one.rs:16:5\n    |\n-20 |     x >= y + 1;\n+16 |     x >= y + 1;\n    |     ^^^^^^^^^^\n    |\n    = note: `-D clippy::int-plus-one` implied by `-D warnings`\n help: change `>= y + 1` to `> y` as shown\n    |\n-20 |     x > y;\n+16 |     x > y;\n    |     ^^^^^\n \n error: Unnecessary `>= y + 1` or `x - 1 >=`\n-  --> $DIR/int_plus_one.rs:21:5\n+  --> $DIR/int_plus_one.rs:17:5\n    |\n-21 |     y + 1 <= x;\n+17 |     y + 1 <= x;\n    |     ^^^^^^^^^^\n help: change `>= y + 1` to `> y` as shown\n    |\n-21 |     y < x;\n+17 |     y < x;\n    |     ^^^^^\n \n error: Unnecessary `>= y + 1` or `x - 1 >=`\n-  --> $DIR/int_plus_one.rs:23:5\n+  --> $DIR/int_plus_one.rs:19:5\n    |\n-23 |     x - 1 >= y;\n+19 |     x - 1 >= y;\n    |     ^^^^^^^^^^\n help: change `>= y + 1` to `> y` as shown\n    |\n-23 |     x > y;\n+19 |     x > y;\n    |     ^^^^^\n \n error: Unnecessary `>= y + 1` or `x - 1 >=`\n-  --> $DIR/int_plus_one.rs:24:5\n+  --> $DIR/int_plus_one.rs:20:5\n    |\n-24 |     y <= x - 1;\n+20 |     y <= x - 1;\n    |     ^^^^^^^^^^\n help: change `>= y + 1` to `> y` as shown\n    |\n-24 |     y < x;\n+20 |     y < x;\n    |     ^^^^^\n \n error: aborting due to 4 previous errors"}, {"sha": "212234f034651f8086c373d937ba99bce4e43d1e", "filename": "tests/ui/into_iter_on_ref.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Finto_iter_on_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Finto_iter_on_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finto_iter_on_ref.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -5,21 +5,21 @@ struct X;\n use std::collections::*;\n \n fn main() {\n-    for _ in &[1,2,3] {}\n+    for _ in &[1, 2, 3] {}\n     for _ in vec![X, X] {}\n     for _ in &vec![X, X] {}\n-    for _ in [1,2,3].into_iter() {} //~ ERROR equivalent to .iter()\n+    for _ in [1, 2, 3].into_iter() {} //~ ERROR equivalent to .iter()\n \n-    let _ = [1,2,3].into_iter(); //~ ERROR equivalent to .iter()\n-    let _ = vec![1,2,3].into_iter();\n-    let _ = (&vec![1,2,3]).into_iter(); //~ WARN equivalent to .iter()\n-    let _ = vec![1,2,3].into_boxed_slice().into_iter(); //~ WARN equivalent to .iter()\n+    let _ = [1, 2, 3].into_iter(); //~ ERROR equivalent to .iter()\n+    let _ = vec![1, 2, 3].into_iter();\n+    let _ = (&vec![1, 2, 3]).into_iter(); //~ WARN equivalent to .iter()\n+    let _ = vec![1, 2, 3].into_boxed_slice().into_iter(); //~ WARN equivalent to .iter()\n     let _ = std::rc::Rc::from(&[X][..]).into_iter(); //~ WARN equivalent to .iter()\n     let _ = std::sync::Arc::from(&[X][..]).into_iter(); //~ WARN equivalent to .iter()\n \n-    let _ = (&&&&&&&[1,2,3]).into_iter(); //~ ERROR equivalent to .iter()\n-    let _ = (&&&&mut &&&[1,2,3]).into_iter(); //~ ERROR equivalent to .iter()\n-    let _ = (&mut &mut &mut [1,2,3]).into_iter(); //~ ERROR equivalent to .iter_mut()\n+    let _ = (&&&&&&&[1, 2, 3]).into_iter(); //~ ERROR equivalent to .iter()\n+    let _ = (&&&&mut &&&[1, 2, 3]).into_iter(); //~ ERROR equivalent to .iter()\n+    let _ = (&mut &mut &mut [1, 2, 3]).into_iter(); //~ ERROR equivalent to .iter_mut()\n \n     let _ = (&Some(4)).into_iter(); //~ WARN equivalent to .iter()\n     let _ = (&mut Some(5)).into_iter(); //~ WARN equivalent to .iter_mut()"}, {"sha": "f6d6fe35d7f519b7bef1f93236a9f4d5a2e9e232", "filename": "tests/ui/into_iter_on_ref.stderr", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Finto_iter_on_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Finto_iter_on_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finto_iter_on_ref.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,8 +1,8 @@\n error: this .into_iter() call is equivalent to .iter() and will not move the array\n-  --> $DIR/into_iter_on_ref.rs:11:22\n+  --> $DIR/into_iter_on_ref.rs:11:24\n    |\n-11 |     for _ in [1,2,3].into_iter() {} //~ ERROR equivalent to .iter()\n-   |                      ^^^^^^^^^ help: call directly: `iter`\n+11 |     for _ in [1, 2, 3].into_iter() {} //~ ERROR equivalent to .iter()\n+   |                        ^^^^^^^^^ help: call directly: `iter`\n    |\n note: lint level defined here\n   --> $DIR/into_iter_on_ref.rs:2:9\n@@ -11,24 +11,24 @@ note: lint level defined here\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this .into_iter() call is equivalent to .iter() and will not move the array\n-  --> $DIR/into_iter_on_ref.rs:13:21\n+  --> $DIR/into_iter_on_ref.rs:13:23\n    |\n-13 |     let _ = [1,2,3].into_iter(); //~ ERROR equivalent to .iter()\n-   |                     ^^^^^^^^^ help: call directly: `iter`\n+13 |     let _ = [1, 2, 3].into_iter(); //~ ERROR equivalent to .iter()\n+   |                       ^^^^^^^^^ help: call directly: `iter`\n \n error: this .into_iter() call is equivalent to .iter() and will not move the Vec\n-  --> $DIR/into_iter_on_ref.rs:15:28\n+  --> $DIR/into_iter_on_ref.rs:15:30\n    |\n-15 |     let _ = (&vec![1,2,3]).into_iter(); //~ WARN equivalent to .iter()\n-   |                            ^^^^^^^^^ help: call directly: `iter`\n+15 |     let _ = (&vec![1, 2, 3]).into_iter(); //~ WARN equivalent to .iter()\n+   |                              ^^^^^^^^^ help: call directly: `iter`\n    |\n    = note: `-D clippy::into-iter-on-ref` implied by `-D warnings`\n \n error: this .into_iter() call is equivalent to .iter() and will not move the slice\n-  --> $DIR/into_iter_on_ref.rs:16:44\n+  --> $DIR/into_iter_on_ref.rs:16:46\n    |\n-16 |     let _ = vec![1,2,3].into_boxed_slice().into_iter(); //~ WARN equivalent to .iter()\n-   |                                            ^^^^^^^^^ help: call directly: `iter`\n+16 |     let _ = vec![1, 2, 3].into_boxed_slice().into_iter(); //~ WARN equivalent to .iter()\n+   |                                              ^^^^^^^^^ help: call directly: `iter`\n \n error: this .into_iter() call is equivalent to .iter() and will not move the slice\n   --> $DIR/into_iter_on_ref.rs:17:41\n@@ -43,22 +43,22 @@ error: this .into_iter() call is equivalent to .iter() and will not move the sli\n    |                                            ^^^^^^^^^ help: call directly: `iter`\n \n error: this .into_iter() call is equivalent to .iter() and will not move the array\n-  --> $DIR/into_iter_on_ref.rs:20:30\n+  --> $DIR/into_iter_on_ref.rs:20:32\n    |\n-20 |     let _ = (&&&&&&&[1,2,3]).into_iter(); //~ ERROR equivalent to .iter()\n-   |                              ^^^^^^^^^ help: call directly: `iter`\n+20 |     let _ = (&&&&&&&[1, 2, 3]).into_iter(); //~ ERROR equivalent to .iter()\n+   |                                ^^^^^^^^^ help: call directly: `iter`\n \n error: this .into_iter() call is equivalent to .iter() and will not move the array\n-  --> $DIR/into_iter_on_ref.rs:21:34\n+  --> $DIR/into_iter_on_ref.rs:21:36\n    |\n-21 |     let _ = (&&&&mut &&&[1,2,3]).into_iter(); //~ ERROR equivalent to .iter()\n-   |                                  ^^^^^^^^^ help: call directly: `iter`\n+21 |     let _ = (&&&&mut &&&[1, 2, 3]).into_iter(); //~ ERROR equivalent to .iter()\n+   |                                    ^^^^^^^^^ help: call directly: `iter`\n \n error: this .into_iter() call is equivalent to .iter_mut() and will not move the array\n-  --> $DIR/into_iter_on_ref.rs:22:38\n+  --> $DIR/into_iter_on_ref.rs:22:40\n    |\n-22 |     let _ = (&mut &mut &mut [1,2,3]).into_iter(); //~ ERROR equivalent to .iter_mut()\n-   |                                      ^^^^^^^^^ help: call directly: `iter_mut`\n+22 |     let _ = (&mut &mut &mut [1, 2, 3]).into_iter(); //~ ERROR equivalent to .iter_mut()\n+   |                                        ^^^^^^^^^ help: call directly: `iter_mut`\n \n error: this .into_iter() call is equivalent to .iter() and will not move the Option\n   --> $DIR/into_iter_on_ref.rs:24:24"}, {"sha": "0ec356280b63f036bfd258f2d4a7b06af70dabe1", "filename": "tests/ui/invalid_ref.rs", "status": "modified", "additions": 11, "deletions": 17, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Finvalid_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Finvalid_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finvalid_ref.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,19 +7,15 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #![allow(unused)]\n #![feature(core_intrinsics)]\n \n extern crate core;\n use std::intrinsics::{init, uninit};\n \n fn main() {\n-    let x = 1; \n-    unsafe { \n+    let x = 1;\n+    unsafe {\n         ref_to_zeroed_std(&x);\n         ref_to_zeroed_core(&x);\n         ref_to_zeroed_intr(&x);\n@@ -34,43 +30,41 @@ fn main() {\n }\n \n unsafe fn ref_to_zeroed_std<T: ?Sized>(t: &T) {\n-    let ref_zero: &T = std::mem::zeroed();     // warning\n+    let ref_zero: &T = std::mem::zeroed(); // warning\n }\n \n unsafe fn ref_to_zeroed_core<T: ?Sized>(t: &T) {\n-    let ref_zero: &T = core::mem::zeroed();   // warning\n+    let ref_zero: &T = core::mem::zeroed(); // warning\n }\n \n unsafe fn ref_to_zeroed_intr<T: ?Sized>(t: &T) {\n-    let ref_zero: &T = std::intrinsics::init();   // warning\n+    let ref_zero: &T = std::intrinsics::init(); // warning\n }\n \n unsafe fn ref_to_uninit_std<T: ?Sized>(t: &T) {\n-    let ref_uninit: &T = std::mem::uninitialized();   // warning\n+    let ref_uninit: &T = std::mem::uninitialized(); // warning\n }\n \n unsafe fn ref_to_uninit_core<T: ?Sized>(t: &T) {\n-    let ref_uninit: &T = core::mem::uninitialized();   // warning\n+    let ref_uninit: &T = core::mem::uninitialized(); // warning\n }\n \n unsafe fn ref_to_uninit_intr<T: ?Sized>(t: &T) {\n-    let ref_uninit: &T = std::intrinsics::uninit();   // warning\n+    let ref_uninit: &T = std::intrinsics::uninit(); // warning\n }\n \n fn some_ref() {\n-    let some_ref = &1; \n+    let some_ref = &1;\n }\n \n unsafe fn std_zeroed_no_ref() {\n-    let mem_zero: usize = std::mem::zeroed();  // no warning\n+    let mem_zero: usize = std::mem::zeroed(); // no warning\n }\n \n unsafe fn core_zeroed_no_ref() {\n-    let mem_zero: usize = core::mem::zeroed();  // no warning\n+    let mem_zero: usize = core::mem::zeroed(); // no warning\n }\n \n unsafe fn intr_init_no_ref() {\n     let mem_zero: usize = std::intrinsics::init(); // no warning\n }\n-\n-"}, {"sha": "a5142596aebf977b461b0ae9e76cdd3ba60e326a", "filename": "tests/ui/invalid_ref.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Finvalid_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Finvalid_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finvalid_ref.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,48 +1,48 @@\n error: reference to zeroed memory\n-  --> $DIR/invalid_ref.rs:37:24\n+  --> $DIR/invalid_ref.rs:33:24\n    |\n-37 |     let ref_zero: &T = std::mem::zeroed();     // warning\n+33 |     let ref_zero: &T = std::mem::zeroed(); // warning\n    |                        ^^^^^^^^^^^^^^^^^^\n    |\n    = note: #[deny(clippy::invalid_ref)] on by default\n    = help: Creation of a null reference is undefined behavior; see https://doc.rust-lang.org/reference/behavior-considered-undefined.html\n \n error: reference to zeroed memory\n-  --> $DIR/invalid_ref.rs:41:24\n+  --> $DIR/invalid_ref.rs:37:24\n    |\n-41 |     let ref_zero: &T = core::mem::zeroed();   // warning\n+37 |     let ref_zero: &T = core::mem::zeroed(); // warning\n    |                        ^^^^^^^^^^^^^^^^^^^\n    |\n    = help: Creation of a null reference is undefined behavior; see https://doc.rust-lang.org/reference/behavior-considered-undefined.html\n \n error: reference to zeroed memory\n-  --> $DIR/invalid_ref.rs:45:24\n+  --> $DIR/invalid_ref.rs:41:24\n    |\n-45 |     let ref_zero: &T = std::intrinsics::init();   // warning\n+41 |     let ref_zero: &T = std::intrinsics::init(); // warning\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: Creation of a null reference is undefined behavior; see https://doc.rust-lang.org/reference/behavior-considered-undefined.html\n \n error: reference to uninitialized memory\n-  --> $DIR/invalid_ref.rs:49:26\n+  --> $DIR/invalid_ref.rs:45:26\n    |\n-49 |     let ref_uninit: &T = std::mem::uninitialized();   // warning\n+45 |     let ref_uninit: &T = std::mem::uninitialized(); // warning\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: Creation of a null reference is undefined behavior; see https://doc.rust-lang.org/reference/behavior-considered-undefined.html\n \n error: reference to uninitialized memory\n-  --> $DIR/invalid_ref.rs:53:26\n+  --> $DIR/invalid_ref.rs:49:26\n    |\n-53 |     let ref_uninit: &T = core::mem::uninitialized();   // warning\n+49 |     let ref_uninit: &T = core::mem::uninitialized(); // warning\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: Creation of a null reference is undefined behavior; see https://doc.rust-lang.org/reference/behavior-considered-undefined.html\n \n error: reference to uninitialized memory\n-  --> $DIR/invalid_ref.rs:57:26\n+  --> $DIR/invalid_ref.rs:53:26\n    |\n-57 |     let ref_uninit: &T = std::intrinsics::uninit();   // warning\n+53 |     let ref_uninit: &T = std::intrinsics::uninit(); // warning\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: Creation of a null reference is undefined behavior; see https://doc.rust-lang.org/reference/behavior-considered-undefined.html"}, {"sha": "60f877b1ebe64f21c2f4eeed3f44899e1a865232", "filename": "tests/ui/invalid_upcast_comparisons.rs", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Finvalid_upcast_comparisons.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Finvalid_upcast_comparisons.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finvalid_upcast_comparisons.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,14 +7,18 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #![warn(clippy::invalid_upcast_comparisons)]\n-#![allow(unused, clippy::eq_op, clippy::no_effect, clippy::unnecessary_operation, clippy::cast_lossless)]\n-\n-fn mk_value<T>() -> T { unimplemented!() }\n+#![allow(\n+    unused,\n+    clippy::eq_op,\n+    clippy::no_effect,\n+    clippy::unnecessary_operation,\n+    clippy::cast_lossless\n+)]\n+\n+fn mk_value<T>() -> T {\n+    unimplemented!()\n+}\n \n fn main() {\n     let u32: u32 = mk_value();\n@@ -55,7 +59,6 @@ fn main() {\n     1337 != (u8 as i32);\n     1337 != (u8 as u32);\n \n-\n     // Those are Ok:\n     (u8 as u32) > 20;\n     42 == (u8 as i32);"}, {"sha": "2ac4a48b8623607bdca6d21d240140fe9a340e5b", "filename": "tests/ui/invalid_upcast_comparisons.stderr", "status": "modified", "additions": 54, "deletions": 54, "changes": 108, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Finvalid_upcast_comparisons.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Finvalid_upcast_comparisons.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finvalid_upcast_comparisons.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,165 +1,165 @@\n error: because of the numeric bounds on `u8` prior to casting, this expression is always false\n-  --> $DIR/invalid_upcast_comparisons.rs:26:5\n+  --> $DIR/invalid_upcast_comparisons.rs:30:5\n    |\n-26 |     (u8 as u32) > 300;\n+30 |     (u8 as u32) > 300;\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::invalid-upcast-comparisons` implied by `-D warnings`\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always false\n-  --> $DIR/invalid_upcast_comparisons.rs:27:5\n+  --> $DIR/invalid_upcast_comparisons.rs:31:5\n    |\n-27 |     (u8 as i32) > 300;\n+31 |     (u8 as i32) > 300;\n    |     ^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always false\n-  --> $DIR/invalid_upcast_comparisons.rs:28:5\n+  --> $DIR/invalid_upcast_comparisons.rs:32:5\n    |\n-28 |     (u8 as u32) == 300;\n+32 |     (u8 as u32) == 300;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always false\n-  --> $DIR/invalid_upcast_comparisons.rs:29:5\n+  --> $DIR/invalid_upcast_comparisons.rs:33:5\n    |\n-29 |     (u8 as i32) == 300;\n+33 |     (u8 as i32) == 300;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always false\n-  --> $DIR/invalid_upcast_comparisons.rs:30:5\n+  --> $DIR/invalid_upcast_comparisons.rs:34:5\n    |\n-30 |     300 < (u8 as u32);\n+34 |     300 < (u8 as u32);\n    |     ^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always false\n-  --> $DIR/invalid_upcast_comparisons.rs:31:5\n+  --> $DIR/invalid_upcast_comparisons.rs:35:5\n    |\n-31 |     300 < (u8 as i32);\n+35 |     300 < (u8 as i32);\n    |     ^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always false\n-  --> $DIR/invalid_upcast_comparisons.rs:32:5\n+  --> $DIR/invalid_upcast_comparisons.rs:36:5\n    |\n-32 |     300 == (u8 as u32);\n+36 |     300 == (u8 as u32);\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always false\n-  --> $DIR/invalid_upcast_comparisons.rs:33:5\n+  --> $DIR/invalid_upcast_comparisons.rs:37:5\n    |\n-33 |     300 == (u8 as i32);\n+37 |     300 == (u8 as i32);\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always true\n-  --> $DIR/invalid_upcast_comparisons.rs:35:5\n+  --> $DIR/invalid_upcast_comparisons.rs:39:5\n    |\n-35 |     (u8 as u32) <= 300;\n+39 |     (u8 as u32) <= 300;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always true\n-  --> $DIR/invalid_upcast_comparisons.rs:36:5\n+  --> $DIR/invalid_upcast_comparisons.rs:40:5\n    |\n-36 |     (u8 as i32) <= 300;\n+40 |     (u8 as i32) <= 300;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always true\n-  --> $DIR/invalid_upcast_comparisons.rs:37:5\n+  --> $DIR/invalid_upcast_comparisons.rs:41:5\n    |\n-37 |     (u8 as u32) != 300;\n+41 |     (u8 as u32) != 300;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always true\n-  --> $DIR/invalid_upcast_comparisons.rs:38:5\n+  --> $DIR/invalid_upcast_comparisons.rs:42:5\n    |\n-38 |     (u8 as i32) != 300;\n+42 |     (u8 as i32) != 300;\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always true\n-  --> $DIR/invalid_upcast_comparisons.rs:39:5\n+  --> $DIR/invalid_upcast_comparisons.rs:43:5\n    |\n-39 |     300 >= (u8 as u32);\n+43 |     300 >= (u8 as u32);\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always true\n-  --> $DIR/invalid_upcast_comparisons.rs:40:5\n+  --> $DIR/invalid_upcast_comparisons.rs:44:5\n    |\n-40 |     300 >= (u8 as i32);\n+44 |     300 >= (u8 as i32);\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always true\n-  --> $DIR/invalid_upcast_comparisons.rs:41:5\n+  --> $DIR/invalid_upcast_comparisons.rs:45:5\n    |\n-41 |     300 != (u8 as u32);\n+45 |     300 != (u8 as u32);\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always true\n-  --> $DIR/invalid_upcast_comparisons.rs:42:5\n+  --> $DIR/invalid_upcast_comparisons.rs:46:5\n    |\n-42 |     300 != (u8 as i32);\n+46 |     300 != (u8 as i32);\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always false\n-  --> $DIR/invalid_upcast_comparisons.rs:45:5\n+  --> $DIR/invalid_upcast_comparisons.rs:49:5\n    |\n-45 |     (u8 as i32) < 0;\n+49 |     (u8 as i32) < 0;\n    |     ^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always true\n-  --> $DIR/invalid_upcast_comparisons.rs:46:5\n+  --> $DIR/invalid_upcast_comparisons.rs:50:5\n    |\n-46 |     -5 != (u8 as i32);\n+50 |     -5 != (u8 as i32);\n    |     ^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always true\n-  --> $DIR/invalid_upcast_comparisons.rs:48:5\n+  --> $DIR/invalid_upcast_comparisons.rs:52:5\n    |\n-48 |     (u8 as i32) >= 0;\n+52 |     (u8 as i32) >= 0;\n    |     ^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always false\n-  --> $DIR/invalid_upcast_comparisons.rs:49:5\n+  --> $DIR/invalid_upcast_comparisons.rs:53:5\n    |\n-49 |     -5 == (u8 as i32);\n+53 |     -5 == (u8 as i32);\n    |     ^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always false\n-  --> $DIR/invalid_upcast_comparisons.rs:52:5\n+  --> $DIR/invalid_upcast_comparisons.rs:56:5\n    |\n-52 |     1337 == (u8 as i32);\n+56 |     1337 == (u8 as i32);\n    |     ^^^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always false\n-  --> $DIR/invalid_upcast_comparisons.rs:53:5\n+  --> $DIR/invalid_upcast_comparisons.rs:57:5\n    |\n-53 |     1337 == (u8 as u32);\n+57 |     1337 == (u8 as u32);\n    |     ^^^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always true\n-  --> $DIR/invalid_upcast_comparisons.rs:55:5\n+  --> $DIR/invalid_upcast_comparisons.rs:59:5\n    |\n-55 |     1337 != (u8 as i32);\n+59 |     1337 != (u8 as i32);\n    |     ^^^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always true\n-  --> $DIR/invalid_upcast_comparisons.rs:56:5\n+  --> $DIR/invalid_upcast_comparisons.rs:60:5\n    |\n-56 |     1337 != (u8 as u32);\n+60 |     1337 != (u8 as u32);\n    |     ^^^^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always true\n-  --> $DIR/invalid_upcast_comparisons.rs:71:5\n+  --> $DIR/invalid_upcast_comparisons.rs:74:5\n    |\n-71 |     (u8 as i32) > -1;\n+74 |     (u8 as i32) > -1;\n    |     ^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always false\n-  --> $DIR/invalid_upcast_comparisons.rs:72:5\n+  --> $DIR/invalid_upcast_comparisons.rs:75:5\n    |\n-72 |     (u8 as i32) < -1;\n+75 |     (u8 as i32) < -1;\n    |     ^^^^^^^^^^^^^^^^\n \n error: because of the numeric bounds on `u8` prior to casting, this expression is always false\n-  --> $DIR/invalid_upcast_comparisons.rs:88:5\n+  --> $DIR/invalid_upcast_comparisons.rs:91:5\n    |\n-88 |     -5 >= (u8 as i32);\n+91 |     -5 >= (u8 as i32);\n    |     ^^^^^^^^^^^^^^^^^\n \n error: aborting due to 27 previous errors"}, {"sha": "5c6392811b9c32c642cb545f25398bf5ac13dbbf", "filename": "tests/ui/issue-3145.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fissue-3145.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fissue-3145.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissue-3145.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,7 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n fn main() {\n     println!(\"{}\" a); //~ERROR expected token: `,`\n }"}, {"sha": "6f9f88a8d678978c527cb28f48a74fc7ddceefcb", "filename": "tests/ui/issue-3145.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fissue-3145.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fissue-3145.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissue-3145.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,7 +1,7 @@\n error: expected token: `,`\n-  --> $DIR/issue-3145.rs:12:19\n+  --> $DIR/issue-3145.rs:11:19\n    |\n-12 |     println!(\"{}\" a); //~ERROR expected token: `,`\n+11 |     println!(\"{}\" a); //~ERROR expected token: `,`\n    |                   ^\n \n error: aborting due to previous error"}, {"sha": "a54da0b6a969084a9fb0c2118da4698ad2294756", "filename": "tests/ui/issue_2356.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fissue_2356.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fissue_2356.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissue_2356.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![deny(clippy::while_let_on_iterator)]\n \n use std::iter::Iterator;"}, {"sha": "28b67cbc9fa51bd2d2ed3eb46141d5cd9523a846", "filename": "tests/ui/issue_2356.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fissue_2356.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fissue_2356.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissue_2356.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,13 +1,13 @@\n error: this loop could be written as a `for` loop\n-  --> $DIR/issue_2356.rs:27:29\n+  --> $DIR/issue_2356.rs:24:29\n    |\n-27 |         while let Some(e) = it.next() {\n+24 |         while let Some(e) = it.next() {\n    |                             ^^^^^^^^^ help: try: `for e in it { .. }`\n    |\n note: lint level defined here\n-  --> $DIR/issue_2356.rs:13:9\n+  --> $DIR/issue_2356.rs:10:9\n    |\n-13 | #![deny(clippy::while_let_on_iterator)]\n+10 | #![deny(clippy::while_let_on_iterator)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error"}, {"sha": "fca19350558b4e5a7110bee089485abd6bf294f3", "filename": "tests/ui/item_after_statement.rs", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fitem_after_statement.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fitem_after_statement.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fitem_after_statement.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,24 +7,27 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![warn(clippy::items_after_statements)]\n \n fn ok() {\n-    fn foo() { println!(\"foo\"); }\n+    fn foo() {\n+        println!(\"foo\");\n+    }\n     foo();\n }\n \n fn last() {\n     foo();\n-    fn foo() { println!(\"foo\"); }\n+    fn foo() {\n+        println!(\"foo\");\n+    }\n }\n \n fn main() {\n     foo();\n-    fn foo() { println!(\"foo\"); }\n+    fn foo() {\n+        println!(\"foo\");\n+    }\n     foo();\n }\n \n@@ -33,7 +36,9 @@ fn mac() {\n     println!(\"{}\", a);\n     // do not lint this, because it needs to be after `a`\n     macro_rules! b {\n-        () => {{ a = 6 }}\n+        () => {{\n+            a = 6\n+        }};\n     }\n     b!();\n     println!(\"{}\", a);"}, {"sha": "c988fca3827fe9fef65b41388a3de689ad977171", "filename": "tests/ui/item_after_statement.stderr", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fitem_after_statement.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fitem_after_statement.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fitem_after_statement.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,16 +1,20 @@\n error: adding items after statements is confusing, since items exist from the start of the scope\n-  --> $DIR/item_after_statement.rs:22:5\n+  --> $DIR/item_after_statement.rs:21:5\n    |\n-22 |     fn foo() { println!(\"foo\"); }\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+21 | /     fn foo() {\n+22 | |         println!(\"foo\");\n+23 | |     }\n+   | |_____^\n    |\n    = note: `-D clippy::items-after-statements` implied by `-D warnings`\n \n error: adding items after statements is confusing, since items exist from the start of the scope\n-  --> $DIR/item_after_statement.rs:27:5\n+  --> $DIR/item_after_statement.rs:28:5\n    |\n-27 |     fn foo() { println!(\"foo\"); }\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+28 | /     fn foo() {\n+29 | |         println!(\"foo\");\n+30 | |     }\n+   | |_____^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "80153efcb93b766244b1b525098563cd02296ba7", "filename": "tests/ui/large_digit_groups.rs", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Flarge_digit_groups.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Flarge_digit_groups.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flarge_digit_groups.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,12 +7,25 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #[warn(clippy::large_digit_groups)]\n #[allow(unused_variables)]\n fn main() {\n-    let good = (0b1011_i64, 0o1_234_u32, 0x1_234_567, 1_2345_6789, 1234_f32, 1_234.12_f32, 1_234.123_f32, 1.123_4_f32);\n-    let bad = (0b1_10110_i64, 0x1_23456_78901_usize, 1_23456_f32, 1_23456.12_f32, 1_23456.12345_f32, 1_23456.12345_6_f32);\n+    let good = (\n+        0b1011_i64,\n+        0o1_234_u32,\n+        0x1_234_567,\n+        1_2345_6789,\n+        1234_f32,\n+        1_234.12_f32,\n+        1_234.123_f32,\n+        1.123_4_f32,\n+    );\n+    let bad = (\n+        0b1_10110_i64,\n+        0x1_23456_78901_usize,\n+        1_23456_f32,\n+        1_23456.12_f32,\n+        1_23456.12345_f32,\n+        1_23456.12345_6_f32,\n+    );\n }"}, {"sha": "47587f5423a734ede0ad24455dd034e66163f0e6", "filename": "tests/ui/large_digit_groups.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Flarge_digit_groups.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Flarge_digit_groups.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flarge_digit_groups.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,40 +1,40 @@\n error: digit groups should be smaller\n-  --> $DIR/large_digit_groups.rs:17:16\n+  --> $DIR/large_digit_groups.rs:24:9\n    |\n-17 |     let bad = (0b1_10110_i64, 0x1_23456_78901_usize, 1_23456_f32, 1_23456.12_f32, 1_23456.12345_f32, 1_23456.12345_6_f32);\n-   |                ^^^^^^^^^^^^^ help: consider: `0b11_0110_i64`\n+24 |         0b1_10110_i64,\n+   |         ^^^^^^^^^^^^^ help: consider: `0b11_0110_i64`\n    |\n    = note: `-D clippy::large-digit-groups` implied by `-D warnings`\n \n error: digit groups should be smaller\n-  --> $DIR/large_digit_groups.rs:17:31\n+  --> $DIR/large_digit_groups.rs:25:9\n    |\n-17 |     let bad = (0b1_10110_i64, 0x1_23456_78901_usize, 1_23456_f32, 1_23456.12_f32, 1_23456.12345_f32, 1_23456.12345_6_f32);\n-   |                               ^^^^^^^^^^^^^^^^^^^^^ help: consider: `0x0123_4567_8901_usize`\n+25 |         0x1_23456_78901_usize,\n+   |         ^^^^^^^^^^^^^^^^^^^^^ help: consider: `0x0123_4567_8901_usize`\n \n error: digit groups should be smaller\n-  --> $DIR/large_digit_groups.rs:17:54\n+  --> $DIR/large_digit_groups.rs:26:9\n    |\n-17 |     let bad = (0b1_10110_i64, 0x1_23456_78901_usize, 1_23456_f32, 1_23456.12_f32, 1_23456.12345_f32, 1_23456.12345_6_f32);\n-   |                                                      ^^^^^^^^^^^ help: consider: `123_456_f32`\n+26 |         1_23456_f32,\n+   |         ^^^^^^^^^^^ help: consider: `123_456_f32`\n \n error: digit groups should be smaller\n-  --> $DIR/large_digit_groups.rs:17:67\n+  --> $DIR/large_digit_groups.rs:27:9\n    |\n-17 |     let bad = (0b1_10110_i64, 0x1_23456_78901_usize, 1_23456_f32, 1_23456.12_f32, 1_23456.12345_f32, 1_23456.12345_6_f32);\n-   |                                                                   ^^^^^^^^^^^^^^ help: consider: `123_456.12_f32`\n+27 |         1_23456.12_f32,\n+   |         ^^^^^^^^^^^^^^ help: consider: `123_456.12_f32`\n \n error: digit groups should be smaller\n-  --> $DIR/large_digit_groups.rs:17:83\n+  --> $DIR/large_digit_groups.rs:28:9\n    |\n-17 |     let bad = (0b1_10110_i64, 0x1_23456_78901_usize, 1_23456_f32, 1_23456.12_f32, 1_23456.12345_f32, 1_23456.12345_6_f32);\n-   |                                                                                   ^^^^^^^^^^^^^^^^^ help: consider: `123_456.123_45_f32`\n+28 |         1_23456.12345_f32,\n+   |         ^^^^^^^^^^^^^^^^^ help: consider: `123_456.123_45_f32`\n \n error: digit groups should be smaller\n-  --> $DIR/large_digit_groups.rs:17:102\n+  --> $DIR/large_digit_groups.rs:29:9\n    |\n-17 |     let bad = (0b1_10110_i64, 0x1_23456_78901_usize, 1_23456_f32, 1_23456.12_f32, 1_23456.12345_f32, 1_23456.12345_6_f32);\n-   |                                                                                                      ^^^^^^^^^^^^^^^^^^^ help: consider: `123_456.123_456_f32`\n+29 |         1_23456.12345_6_f32,\n+   |         ^^^^^^^^^^^^^^^^^^^ help: consider: `123_456.123_456_f32`\n \n error: aborting due to 6 previous errors\n "}, {"sha": "29a73e68d43d192a2e7ceaa32d2836c0d574216e", "filename": "tests/ui/large_enum_variant.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Flarge_enum_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Flarge_enum_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flarge_enum_variant.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,10 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #![allow(dead_code)]\n #![allow(unused_variables)]\n #![warn(clippy::large_enum_variant)]"}, {"sha": "c9c46ced5e22ba96ad43c18246a1419c1bb5794d", "filename": "tests/ui/large_enum_variant.stderr", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Flarge_enum_variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Flarge_enum_variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flarge_enum_variant.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,69 +1,69 @@\n error: large size difference between variants\n-  --> $DIR/large_enum_variant.rs:20:5\n+  --> $DIR/large_enum_variant.rs:16:5\n    |\n-20 |     B([i32; 8000]),\n+16 |     B([i32; 8000]),\n    |     ^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::large-enum-variant` implied by `-D warnings`\n help: consider boxing the large fields to reduce the total size of the enum\n    |\n-20 |     B(Box<[i32; 8000]>),\n+16 |     B(Box<[i32; 8000]>),\n    |       ^^^^^^^^^^^^^^^^\n \n error: large size difference between variants\n-  --> $DIR/large_enum_variant.rs:31:5\n+  --> $DIR/large_enum_variant.rs:27:5\n    |\n-31 |     C(T, [i32; 8000]),\n+27 |     C(T, [i32; 8000]),\n    |     ^^^^^^^^^^^^^^^^^\n    |\n help: consider boxing the large fields to reduce the total size of the enum\n-  --> $DIR/large_enum_variant.rs:31:5\n+  --> $DIR/large_enum_variant.rs:27:5\n    |\n-31 |     C(T, [i32; 8000]),\n+27 |     C(T, [i32; 8000]),\n    |     ^^^^^^^^^^^^^^^^^\n \n error: large size difference between variants\n-  --> $DIR/large_enum_variant.rs:44:5\n+  --> $DIR/large_enum_variant.rs:40:5\n    |\n-44 |     ContainingLargeEnum(LargeEnum),\n+40 |     ContainingLargeEnum(LargeEnum),\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n help: consider boxing the large fields to reduce the total size of the enum\n    |\n-44 |     ContainingLargeEnum(Box<LargeEnum>),\n+40 |     ContainingLargeEnum(Box<LargeEnum>),\n    |                         ^^^^^^^^^^^^^^\n \n error: large size difference between variants\n-  --> $DIR/large_enum_variant.rs:47:5\n+  --> $DIR/large_enum_variant.rs:43:5\n    |\n-47 |     ContainingMoreThanOneField(i32, [i32; 8000], [i32; 9500]),\n+43 |     ContainingMoreThanOneField(i32, [i32; 8000], [i32; 9500]),\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n help: consider boxing the large fields to reduce the total size of the enum\n-  --> $DIR/large_enum_variant.rs:47:5\n+  --> $DIR/large_enum_variant.rs:43:5\n    |\n-47 |     ContainingMoreThanOneField(i32, [i32; 8000], [i32; 9500]),\n+43 |     ContainingMoreThanOneField(i32, [i32; 8000], [i32; 9500]),\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: large size difference between variants\n-  --> $DIR/large_enum_variant.rs:54:5\n+  --> $DIR/large_enum_variant.rs:50:5\n    |\n-54 |     StructLikeLarge { x: [i32; 8000], y: i32 },\n+50 |     StructLikeLarge { x: [i32; 8000], y: i32 },\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n help: consider boxing the large fields to reduce the total size of the enum\n-  --> $DIR/large_enum_variant.rs:54:5\n+  --> $DIR/large_enum_variant.rs:50:5\n    |\n-54 |     StructLikeLarge { x: [i32; 8000], y: i32 },\n+50 |     StructLikeLarge { x: [i32; 8000], y: i32 },\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: large size difference between variants\n-  --> $DIR/large_enum_variant.rs:59:5\n+  --> $DIR/large_enum_variant.rs:55:5\n    |\n-59 |     StructLikeLarge2 { x: [i32; 8000] },\n+55 |     StructLikeLarge2 { x: [i32; 8000] },\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n help: consider boxing the large fields to reduce the total size of the enum\n    |\n-59 |     StructLikeLarge2 { x: Box<[i32; 8000]> },\n+55 |     StructLikeLarge2 { x: Box<[i32; 8000]> },\n    |                           ^^^^^^^^^^^^^^^^\n \n error: aborting due to 6 previous errors"}, {"sha": "7f4ba4f15233e462cfbfb743dae4b7a2f6022460", "filename": "tests/ui/len_zero.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Flen_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Flen_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flen_zero.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![warn(clippy::len_without_is_empty, clippy::len_zero)]\n #![allow(dead_code, unused)]\n "}, {"sha": "bc5cd0e595b8f731d9610a2884e54c3e1161cbb5", "filename": "tests/ui/len_zero.stderr", "status": "modified", "additions": 56, "deletions": 56, "changes": 112, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Flen_zero.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Flen_zero.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flen_zero.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,139 +1,139 @@\n error: item `PubOne` has a public `len` method but no corresponding `is_empty` method\n-  --> $DIR/len_zero.rs:18:1\n+  --> $DIR/len_zero.rs:15:1\n    |\n-18 | / impl PubOne {\n-19 | |     pub fn len(self: &Self) -> isize {\n-20 | |         1\n-21 | |     }\n-22 | | }\n+15 | / impl PubOne {\n+16 | |     pub fn len(self: &Self) -> isize {\n+17 | |         1\n+18 | |     }\n+19 | | }\n    | |_^\n    |\n    = note: `-D clippy::len-without-is-empty` implied by `-D warnings`\n \n error: trait `PubTraitsToo` has a `len` method but no (possibly inherited) `is_empty` method\n-  --> $DIR/len_zero.rs:67:1\n+  --> $DIR/len_zero.rs:64:1\n    |\n-67 | / pub trait PubTraitsToo {\n-68 | |     fn len(self: &Self) -> isize;\n-69 | | }\n+64 | / pub trait PubTraitsToo {\n+65 | |     fn len(self: &Self) -> isize;\n+66 | | }\n    | |_^\n \n error: item `HasIsEmpty` has a public `len` method but a private `is_empty` method\n-   --> $DIR/len_zero.rs:101:1\n+   --> $DIR/len_zero.rs:98:1\n     |\n-101 | / impl HasIsEmpty {\n-102 | |     pub fn len(self: &Self) -> isize {\n-103 | |         1\n-104 | |     }\n+98  | / impl HasIsEmpty {\n+99  | |     pub fn len(self: &Self) -> isize {\n+100 | |         1\n+101 | |     }\n ...   |\n-108 | |     }\n-109 | | }\n+105 | |     }\n+106 | | }\n     | |_^\n \n error: item `HasWrongIsEmpty` has a public `len` method but no corresponding `is_empty` method\n-   --> $DIR/len_zero.rs:130:1\n+   --> $DIR/len_zero.rs:127:1\n     |\n-130 | / impl HasWrongIsEmpty {\n-131 | |     pub fn len(self: &Self) -> isize {\n-132 | |         1\n-133 | |     }\n+127 | / impl HasWrongIsEmpty {\n+128 | |     pub fn len(self: &Self) -> isize {\n+129 | |         1\n+130 | |     }\n ...   |\n-137 | |     }\n-138 | | }\n+134 | |     }\n+135 | | }\n     | |_^\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:151:8\n+   --> $DIR/len_zero.rs:148:8\n     |\n-151 |     if x.len() == 0 {\n+148 |     if x.len() == 0 {\n     |        ^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `x.is_empty()`\n     |\n     = note: `-D clippy::len-zero` implied by `-D warnings`\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:155:8\n+   --> $DIR/len_zero.rs:152:8\n     |\n-155 |     if \"\".len() == 0 {}\n+152 |     if \"\".len() == 0 {}\n     |        ^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `\"\".is_empty()`\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:170:8\n+   --> $DIR/len_zero.rs:167:8\n     |\n-170 |     if has_is_empty.len() == 0 {\n+167 |     if has_is_empty.len() == 0 {\n     |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `has_is_empty.is_empty()`\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:173:8\n+   --> $DIR/len_zero.rs:170:8\n     |\n-173 |     if has_is_empty.len() != 0 {\n+170 |     if has_is_empty.len() != 0 {\n     |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `!has_is_empty.is_empty()`\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:176:8\n+   --> $DIR/len_zero.rs:173:8\n     |\n-176 |     if has_is_empty.len() > 0 {\n+173 |     if has_is_empty.len() > 0 {\n     |        ^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `!has_is_empty.is_empty()`\n \n error: length comparison to one\n-   --> $DIR/len_zero.rs:179:8\n+   --> $DIR/len_zero.rs:176:8\n     |\n-179 |     if has_is_empty.len() < 1 {\n+176 |     if has_is_empty.len() < 1 {\n     |        ^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `has_is_empty.is_empty()`\n \n error: length comparison to one\n-   --> $DIR/len_zero.rs:182:8\n+   --> $DIR/len_zero.rs:179:8\n     |\n-182 |     if has_is_empty.len() >= 1 {\n+179 |     if has_is_empty.len() >= 1 {\n     |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `!has_is_empty.is_empty()`\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:193:8\n+   --> $DIR/len_zero.rs:190:8\n     |\n-193 |     if 0 == has_is_empty.len() {\n+190 |     if 0 == has_is_empty.len() {\n     |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `has_is_empty.is_empty()`\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:196:8\n+   --> $DIR/len_zero.rs:193:8\n     |\n-196 |     if 0 != has_is_empty.len() {\n+193 |     if 0 != has_is_empty.len() {\n     |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `!has_is_empty.is_empty()`\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:199:8\n+   --> $DIR/len_zero.rs:196:8\n     |\n-199 |     if 0 < has_is_empty.len() {\n+196 |     if 0 < has_is_empty.len() {\n     |        ^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `!has_is_empty.is_empty()`\n \n error: length comparison to one\n-   --> $DIR/len_zero.rs:202:8\n+   --> $DIR/len_zero.rs:199:8\n     |\n-202 |     if 1 <= has_is_empty.len() {\n+199 |     if 1 <= has_is_empty.len() {\n     |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `!has_is_empty.is_empty()`\n \n error: length comparison to one\n-   --> $DIR/len_zero.rs:205:8\n+   --> $DIR/len_zero.rs:202:8\n     |\n-205 |     if 1 > has_is_empty.len() {\n+202 |     if 1 > has_is_empty.len() {\n     |        ^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `has_is_empty.is_empty()`\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:219:8\n+   --> $DIR/len_zero.rs:216:8\n     |\n-219 |     if with_is_empty.len() == 0 {\n+216 |     if with_is_empty.len() == 0 {\n     |        ^^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `with_is_empty.is_empty()`\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:232:8\n+   --> $DIR/len_zero.rs:229:8\n     |\n-232 |     if b.len() != 0 {}\n+229 |     if b.len() != 0 {}\n     |        ^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `!b.is_empty()`\n \n error: trait `DependsOnFoo` has a `len` method but no (possibly inherited) `is_empty` method\n-   --> $DIR/len_zero.rs:238:1\n+   --> $DIR/len_zero.rs:235:1\n     |\n-238 | / pub trait DependsOnFoo: Foo {\n-239 | |     fn len(&mut self) -> usize;\n-240 | | }\n+235 | / pub trait DependsOnFoo: Foo {\n+236 | |     fn len(&mut self) -> usize;\n+237 | | }\n     | |_^\n \n error: aborting due to 19 previous errors"}, {"sha": "26fdc46ac17bbbb318002b56dc02c9d92825923e", "filename": "tests/ui/let_if_seq.rs", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Flet_if_seq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Flet_if_seq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_if_seq.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,15 +7,20 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n-#![allow(unused_variables, unused_assignments, clippy::similar_names, clippy::blacklisted_name)]\n+#![allow(\n+    unused_variables,\n+    unused_assignments,\n+    clippy::similar_names,\n+    clippy::blacklisted_name\n+)]\n #![warn(clippy::useless_let_if_seq)]\n \n-fn f() -> bool { true }\n-fn g(x: i32) -> i32 { x + 1 }\n+fn f() -> bool {\n+    true\n+}\n+fn g(x: i32) -> i32 {\n+    x + 1\n+}\n \n fn issue985() -> i32 {\n     let mut x = 42;\n@@ -73,8 +78,7 @@ fn main() {\n     if f() {\n         f();\n         bar = 42;\n-    }\n-    else {\n+    } else {\n         f();\n     }\n "}, {"sha": "91acf6dcb3062315d7c73d328ffd30e01cfd3e89", "filename": "tests/ui/let_if_seq.stderr", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Flet_if_seq.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Flet_if_seq.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_if_seq.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,47 +1,47 @@\n error: `if _ { .. } else { .. }` is an expression\n-  --> $DIR/let_if_seq.rs:67:5\n+  --> $DIR/let_if_seq.rs:72:5\n    |\n-67 | /     let mut foo = 0;\n-68 | |     if f() {\n-69 | |         foo = 42;\n-70 | |     }\n+72 | /     let mut foo = 0;\n+73 | |     if f() {\n+74 | |         foo = 42;\n+75 | |     }\n    | |_____^ help: it is more idiomatic to write: `let <mut> foo = if f() { 42 } else { 0 };`\n    |\n    = note: `-D clippy::useless-let-if-seq` implied by `-D warnings`\n    = note: you might not need `mut` at all\n \n error: `if _ { .. } else { .. }` is an expression\n-  --> $DIR/let_if_seq.rs:72:5\n+  --> $DIR/let_if_seq.rs:77:5\n    |\n-72 | /     let mut bar = 0;\n-73 | |     if f() {\n-74 | |         f();\n-75 | |         bar = 42;\n-...  |\n-78 | |         f();\n-79 | |     }\n+77 | /     let mut bar = 0;\n+78 | |     if f() {\n+79 | |         f();\n+80 | |         bar = 42;\n+81 | |     } else {\n+82 | |         f();\n+83 | |     }\n    | |_____^ help: it is more idiomatic to write: `let <mut> bar = if f() { ..; 42 } else { ..; 0 };`\n    |\n    = note: you might not need `mut` at all\n \n error: `if _ { .. } else { .. }` is an expression\n-  --> $DIR/let_if_seq.rs:81:5\n+  --> $DIR/let_if_seq.rs:85:5\n    |\n-81 | /     let quz;\n-82 | |     if f() {\n-83 | |         quz = 42;\n-84 | |     } else {\n-85 | |         quz = 0;\n-86 | |     }\n+85 | /     let quz;\n+86 | |     if f() {\n+87 | |         quz = 42;\n+88 | |     } else {\n+89 | |         quz = 0;\n+90 | |     }\n    | |_____^ help: it is more idiomatic to write: `let quz = if f() { 42 } else { 0 };`\n \n error: `if _ { .. } else { .. }` is an expression\n-   --> $DIR/let_if_seq.rs:110:5\n+   --> $DIR/let_if_seq.rs:114:5\n     |\n-110 | /     let mut baz = 0;\n-111 | |     if f() {\n-112 | |         baz = 42;\n-113 | |     }\n+114 | /     let mut baz = 0;\n+115 | |     if f() {\n+116 | |         baz = 42;\n+117 | |     }\n     | |_____^ help: it is more idiomatic to write: `let <mut> baz = if f() { 42 } else { 0 };`\n     |\n     = note: you might not need `mut` at all"}, {"sha": "eb01213337687026620e992d79296f0b28284e48", "filename": "tests/ui/let_return.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Flet_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Flet_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_return.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,11 +7,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![allow(unused)]\n-\n #![warn(clippy::let_and_return)]\n \n fn test() -> i32 {\n@@ -52,5 +48,4 @@ fn test_nowarn_4() -> i32 {\n     x\n }\n \n-fn main() {\n-}\n+fn main() {}"}, {"sha": "894c15c2d6dbedc4c3149c28936873906cb06141", "filename": "tests/ui/let_return.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Flet_return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Flet_return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_return.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,26 +1,26 @@\n error: returning the result of a let binding from a block. Consider returning the expression directly.\n-  --> $DIR/let_return.rs:20:5\n+  --> $DIR/let_return.rs:16:5\n    |\n-20 |     x\n+16 |     x\n    |     ^\n    |\n    = note: `-D clippy::let-and-return` implied by `-D warnings`\n note: this expression can be directly returned\n-  --> $DIR/let_return.rs:19:13\n+  --> $DIR/let_return.rs:15:13\n    |\n-19 |     let x = 5;\n+15 |     let x = 5;\n    |             ^\n \n error: returning the result of a let binding from a block. Consider returning the expression directly.\n-  --> $DIR/let_return.rs:26:9\n+  --> $DIR/let_return.rs:22:9\n    |\n-26 |         x\n+22 |         x\n    |         ^\n    |\n note: this expression can be directly returned\n-  --> $DIR/let_return.rs:25:17\n+  --> $DIR/let_return.rs:21:17\n    |\n-25 |         let x = 5;\n+21 |         let x = 5;\n    |                 ^\n \n error: aborting due to 2 previous errors"}, {"sha": "89cb190cc96e1f58f7b700954b08c02c73a6dcc6", "filename": "tests/ui/let_unit.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Flet_unit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Flet_unit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_unit.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,23 +7,19 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #![warn(clippy::let_unit_value)]\n #![allow(unused_variables)]\n \n macro_rules! let_and_return {\n     ($n:expr) => {{\n         let ret = $n;\n-    }}\n+    }};\n }\n \n fn main() {\n     let _x = println!(\"x\");\n-    let _y = 1;   // this is fine\n-    let _z = ((), 1);  // this as well\n+    let _y = 1; // this is fine\n+    let _z = ((), 1); // this as well\n     if true {\n         let _a = ();\n     }"}, {"sha": "a8771dd5f470382f3cfbafdb4d13c755648da708", "filename": "tests/ui/let_unit.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Flet_unit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Flet_unit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_unit.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,15 +1,15 @@\n error: this let-binding has unit value. Consider omitting `let _x =`\n-  --> $DIR/let_unit.rs:24:5\n+  --> $DIR/let_unit.rs:20:5\n    |\n-24 |     let _x = println!(\"x\");\n+20 |     let _x = println!(\"x\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::let-unit-value` implied by `-D warnings`\n \n error: this let-binding has unit value. Consider omitting `let _a =`\n-  --> $DIR/let_unit.rs:28:9\n+  --> $DIR/let_unit.rs:24:9\n    |\n-28 |         let _a = ();\n+24 |         let _a = ();\n    |         ^^^^^^^^^^^^\n \n error: aborting due to 2 previous errors"}, {"sha": "110868404bda4d80de1b85c87ad988749451c46e", "filename": "tests/ui/lifetimes.rs", "status": "modified", "additions": 118, "deletions": 53, "changes": 171, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flifetimes.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,63 +7,89 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #![warn(clippy::needless_lifetimes, clippy::extra_unused_lifetimes)]\n #![allow(dead_code, clippy::needless_pass_by_value, clippy::trivially_copy_pass_by_ref)]\n \n-fn distinct_lifetimes<'a, 'b>(_x: &'a u8, _y: &'b u8, _z: u8) { }\n+fn distinct_lifetimes<'a, 'b>(_x: &'a u8, _y: &'b u8, _z: u8) {}\n \n-fn distinct_and_static<'a, 'b>(_x: &'a u8, _y: &'b u8, _z: &'static u8) { }\n+fn distinct_and_static<'a, 'b>(_x: &'a u8, _y: &'b u8, _z: &'static u8) {}\n \n-fn same_lifetime_on_input<'a>(_x: &'a u8, _y: &'a u8) { } // no error, same lifetime on two params\n+fn same_lifetime_on_input<'a>(_x: &'a u8, _y: &'a u8) {} // no error, same lifetime on two params\n \n-fn only_static_on_input(_x: &u8, _y: &u8, _z: &'static u8) { } // no error, static involved\n+fn only_static_on_input(_x: &u8, _y: &u8, _z: &'static u8) {} // no error, static involved\n \n-fn mut_and_static_input(_x: &mut u8, _y: &'static str) { }\n+fn mut_and_static_input(_x: &mut u8, _y: &'static str) {}\n \n-fn in_and_out<'a>(x: &'a u8, _y: u8) -> &'a u8 { x }\n+fn in_and_out<'a>(x: &'a u8, _y: u8) -> &'a u8 {\n+    x\n+}\n \n-fn multiple_in_and_out_1<'a>(x: &'a u8, _y: &'a u8) -> &'a u8 { x } // no error, multiple input refs\n+fn multiple_in_and_out_1<'a>(x: &'a u8, _y: &'a u8) -> &'a u8 {\n+    x\n+} // no error, multiple input refs\n \n-fn multiple_in_and_out_2<'a, 'b>(x: &'a u8, _y: &'b u8) -> &'a u8 { x } // no error, multiple input refs\n+fn multiple_in_and_out_2<'a, 'b>(x: &'a u8, _y: &'b u8) -> &'a u8 {\n+    x\n+} // no error, multiple input refs\n \n-fn in_static_and_out<'a>(x: &'a u8, _y: &'static u8) -> &'a u8 { x } // no error, static involved\n+fn in_static_and_out<'a>(x: &'a u8, _y: &'static u8) -> &'a u8 {\n+    x\n+} // no error, static involved\n \n-fn deep_reference_1<'a, 'b>(x: &'a u8, _y: &'b u8) -> Result<&'a u8, ()> { Ok(x) } // no error\n+fn deep_reference_1<'a, 'b>(x: &'a u8, _y: &'b u8) -> Result<&'a u8, ()> {\n+    Ok(x)\n+} // no error\n \n-fn deep_reference_2<'a>(x: Result<&'a u8, &'a u8>) -> &'a u8 { x.unwrap() } // no error, two input refs\n+fn deep_reference_2<'a>(x: Result<&'a u8, &'a u8>) -> &'a u8 {\n+    x.unwrap()\n+} // no error, two input refs\n \n-fn deep_reference_3<'a>(x: &'a u8, _y: u8) -> Result<&'a u8, ()> { Ok(x) }\n+fn deep_reference_3<'a>(x: &'a u8, _y: u8) -> Result<&'a u8, ()> {\n+    Ok(x)\n+}\n \n // where clause, but without lifetimes\n-fn where_clause_without_lt<'a, T>(x: &'a u8, _y: u8) -> Result<&'a u8, ()> where T: Copy { Ok(x) }\n+fn where_clause_without_lt<'a, T>(x: &'a u8, _y: u8) -> Result<&'a u8, ()>\n+where\n+    T: Copy,\n+{\n+    Ok(x)\n+}\n \n type Ref<'r> = &'r u8;\n \n-fn lifetime_param_1<'a>(_x: Ref<'a>, _y: &'a u8) { } // no error, same lifetime on two params\n+fn lifetime_param_1<'a>(_x: Ref<'a>, _y: &'a u8) {} // no error, same lifetime on two params\n \n-fn lifetime_param_2<'a, 'b>(_x: Ref<'a>, _y: &'b u8) { }\n+fn lifetime_param_2<'a, 'b>(_x: Ref<'a>, _y: &'b u8) {}\n \n-fn lifetime_param_3<'a, 'b: 'a>(_x: Ref<'a>, _y: &'b u8) { } // no error, bounded lifetime\n+fn lifetime_param_3<'a, 'b: 'a>(_x: Ref<'a>, _y: &'b u8) {} // no error, bounded lifetime\n \n-fn lifetime_param_4<'a, 'b>(_x: Ref<'a>, _y: &'b u8) where 'b: 'a { } // no error, bounded lifetime\n+fn lifetime_param_4<'a, 'b>(_x: Ref<'a>, _y: &'b u8)\n+where\n+    'b: 'a,\n+{\n+} // no error, bounded lifetime\n \n struct Lt<'a, I: 'static> {\n-    x: &'a I\n+    x: &'a I,\n }\n \n fn fn_bound<'a, F, I>(_m: Lt<'a, I>, _f: F) -> Lt<'a, I>\n-    where F: Fn(Lt<'a, I>) -> Lt<'a, I>  // no error, fn bound references 'a\n-{ unreachable!() }\n+where\n+    F: Fn(Lt<'a, I>) -> Lt<'a, I>, // no error, fn bound references 'a\n+{\n+    unreachable!()\n+}\n \n fn fn_bound_2<'a, F, I>(_m: Lt<'a, I>, _f: F) -> Lt<'a, I>\n-    where for<'x> F: Fn(Lt<'x, I>) -> Lt<'x, I>\n-{ unreachable!() }\n+where\n+    for<'x> F: Fn(Lt<'x, I>) -> Lt<'x, I>,\n+{\n+    unreachable!()\n+}\n \n-fn fn_bound_3<'a, F: FnOnce(&'a i32)>(x: &'a i32, f: F) { // no error, see below\n+fn fn_bound_3<'a, F: FnOnce(&'a i32)>(x: &'a i32, f: F) {\n+    // no error, see below\n     f(x);\n }\n \n@@ -76,21 +102,29 @@ fn fn_bound_3_cannot_elide() {\n \n // no error, multiple input refs\n fn fn_bound_4<'a, F: FnOnce() -> &'a ()>(cond: bool, x: &'a (), f: F) -> &'a () {\n-    if cond { x } else { f() }\n+    if cond {\n+        x\n+    } else {\n+        f()\n+    }\n }\n \n struct X {\n     x: u8,\n }\n \n impl X {\n-    fn self_and_out<'s>(&'s self) -> &'s u8 { &self.x }\n+    fn self_and_out<'s>(&'s self) -> &'s u8 {\n+        &self.x\n+    }\n \n-    fn self_and_in_out<'s, 't>(&'s self, _x: &'t u8) -> &'s u8 { &self.x } // no error, multiple input refs\n+    fn self_and_in_out<'s, 't>(&'s self, _x: &'t u8) -> &'s u8 {\n+        &self.x\n+    } // no error, multiple input refs\n \n-    fn distinct_self_and_in<'s, 't>(&'s self, _x: &'t u8) { }\n+    fn distinct_self_and_in<'s, 't>(&'s self, _x: &'t u8) {}\n \n-    fn self_and_same_in<'s>(&'s self, _x: &'s u8) { } // no error, same lifetimes on two params\n+    fn self_and_same_in<'s>(&'s self, _x: &'s u8) {} // no error, same lifetimes on two params\n }\n \n struct Foo<'a>(&'a u8);\n@@ -104,50 +138,80 @@ fn already_elided<'a>(_: &u8, _: &'a u8) -> &'a u8 {\n     unimplemented!()\n }\n \n-fn struct_with_lt<'a>(_foo: Foo<'a>) -> &'a str { unimplemented!() }\n+fn struct_with_lt<'a>(_foo: Foo<'a>) -> &'a str {\n+    unimplemented!()\n+}\n \n // no warning, two input lifetimes (named on the reference, anonymous on Foo)\n-fn struct_with_lt2<'a>(_foo: &'a Foo) -> &'a str { unimplemented!() }\n+fn struct_with_lt2<'a>(_foo: &'a Foo) -> &'a str {\n+    unimplemented!()\n+}\n \n // no warning, two input lifetimes (anonymous on the reference, named on Foo)\n-fn struct_with_lt3<'a>(_foo: &Foo<'a> ) -> &'a str { unimplemented!() }\n+fn struct_with_lt3<'a>(_foo: &Foo<'a>) -> &'a str {\n+    unimplemented!()\n+}\n \n // no warning, two input lifetimes\n-fn struct_with_lt4<'a, 'b>(_foo: &'a Foo<'b> ) -> &'a str { unimplemented!() }\n+fn struct_with_lt4<'a, 'b>(_foo: &'a Foo<'b>) -> &'a str {\n+    unimplemented!()\n+}\n \n trait WithLifetime<'a> {}\n \n type WithLifetimeAlias<'a> = WithLifetime<'a>;\n \n // should not warn because it won't build without the lifetime\n-fn trait_obj_elided<'a>(_arg: &'a WithLifetime) -> &'a str { unimplemented!() }\n+fn trait_obj_elided<'a>(_arg: &'a WithLifetime) -> &'a str {\n+    unimplemented!()\n+}\n \n // this should warn because there is no lifetime on Drop, so this would be\n // unambiguous if we elided the lifetime\n-fn trait_obj_elided2<'a>(_arg: &'a Drop) -> &'a str { unimplemented!() }\n+fn trait_obj_elided2<'a>(_arg: &'a Drop) -> &'a str {\n+    unimplemented!()\n+}\n \n type FooAlias<'a> = Foo<'a>;\n \n-fn alias_with_lt<'a>(_foo: FooAlias<'a>) -> &'a str { unimplemented!() }\n+fn alias_with_lt<'a>(_foo: FooAlias<'a>) -> &'a str {\n+    unimplemented!()\n+}\n \n // no warning, two input lifetimes (named on the reference, anonymous on Foo)\n-fn alias_with_lt2<'a>(_foo: &'a FooAlias) -> &'a str { unimplemented!() }\n+fn alias_with_lt2<'a>(_foo: &'a FooAlias) -> &'a str {\n+    unimplemented!()\n+}\n \n // no warning, two input lifetimes (anonymous on the reference, named on Foo)\n-fn alias_with_lt3<'a>(_foo: &FooAlias<'a> ) -> &'a str { unimplemented!() }\n+fn alias_with_lt3<'a>(_foo: &FooAlias<'a>) -> &'a str {\n+    unimplemented!()\n+}\n \n // no warning, two input lifetimes\n-fn alias_with_lt4<'a, 'b>(_foo: &'a FooAlias<'b> ) -> &'a str { unimplemented!() }\n+fn alias_with_lt4<'a, 'b>(_foo: &'a FooAlias<'b>) -> &'a str {\n+    unimplemented!()\n+}\n \n-fn named_input_elided_output<'a>(_arg: &'a str) -> &str { unimplemented!() }\n+fn named_input_elided_output<'a>(_arg: &'a str) -> &str {\n+    unimplemented!()\n+}\n \n-fn elided_input_named_output<'a>(_arg: &str) -> &'a str { unimplemented!() }\n+fn elided_input_named_output<'a>(_arg: &str) -> &'a str {\n+    unimplemented!()\n+}\n \n-fn trait_bound_ok<'a, T: WithLifetime<'static>>(_: &'a u8, _: T) { unimplemented!() }\n-fn trait_bound<'a, T: WithLifetime<'a>>(_: &'a u8, _: T) { unimplemented!() }\n+fn trait_bound_ok<'a, T: WithLifetime<'static>>(_: &'a u8, _: T) {\n+    unimplemented!()\n+}\n+fn trait_bound<'a, T: WithLifetime<'a>>(_: &'a u8, _: T) {\n+    unimplemented!()\n+}\n \n // don't warn on these, see #292\n-fn trait_bound_bug<'a, T: WithLifetime<'a>>() { unimplemented!() }\n+fn trait_bound_bug<'a, T: WithLifetime<'a>>() {\n+    unimplemented!()\n+}\n \n // #740\n struct Test {\n@@ -160,7 +224,6 @@ impl Test {\n     }\n }\n \n-\n trait LintContext<'a> {}\n \n fn f<'a, T: LintContext<'a>>(_: &T) {}\n@@ -172,9 +235,11 @@ fn test<'a>(x: &'a [u8]) -> u8 {\n \n // #3284 - Give a hint regarding lifetime in return type\n \n-struct Cow<'a> { x: &'a str, }\n-fn out_return_type_lts<'a>(e: &'a str) -> Cow<'a> { unimplemented!() }\n-\n-\n-fn main() {\n+struct Cow<'a> {\n+    x: &'a str,\n }\n+fn out_return_type_lts<'a>(e: &'a str) -> Cow<'a> {\n+    unimplemented!()\n+}\n+\n+fn main() {}"}, {"sha": "5bddf5aa7467263e871b9dea0b468f8026146478", "filename": "tests/ui/lifetimes.stderr", "status": "modified", "additions": 75, "deletions": 49, "changes": 124, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Flifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Flifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flifetimes.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,96 +1,122 @@\n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-  --> $DIR/lifetimes.rs:17:1\n+  --> $DIR/lifetimes.rs:13:1\n    |\n-17 | fn distinct_lifetimes<'a, 'b>(_x: &'a u8, _y: &'b u8, _z: u8) { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+13 | fn distinct_lifetimes<'a, 'b>(_x: &'a u8, _y: &'b u8, _z: u8) {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::needless-lifetimes` implied by `-D warnings`\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-  --> $DIR/lifetimes.rs:19:1\n+  --> $DIR/lifetimes.rs:15:1\n    |\n-19 | fn distinct_and_static<'a, 'b>(_x: &'a u8, _y: &'b u8, _z: &'static u8) { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+15 | fn distinct_and_static<'a, 'b>(_x: &'a u8, _y: &'b u8, _z: &'static u8) {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-  --> $DIR/lifetimes.rs:27:1\n+  --> $DIR/lifetimes.rs:23:1\n    |\n-27 | fn in_and_out<'a>(x: &'a u8, _y: u8) -> &'a u8 { x }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+23 | / fn in_and_out<'a>(x: &'a u8, _y: u8) -> &'a u8 {\n+24 | |     x\n+25 | | }\n+   | |_^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-  --> $DIR/lifetimes.rs:39:1\n+  --> $DIR/lifetimes.rs:47:1\n    |\n-39 | fn deep_reference_3<'a>(x: &'a u8, _y: u8) -> Result<&'a u8, ()> { Ok(x) }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+47 | / fn deep_reference_3<'a>(x: &'a u8, _y: u8) -> Result<&'a u8, ()> {\n+48 | |     Ok(x)\n+49 | | }\n+   | |_^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-  --> $DIR/lifetimes.rs:42:1\n+  --> $DIR/lifetimes.rs:52:1\n    |\n-42 | fn where_clause_without_lt<'a, T>(x: &'a u8, _y: u8) -> Result<&'a u8, ()> where T: Copy { Ok(x) }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+52 | / fn where_clause_without_lt<'a, T>(x: &'a u8, _y: u8) -> Result<&'a u8, ()>\n+53 | | where\n+54 | |     T: Copy,\n+55 | | {\n+56 | |     Ok(x)\n+57 | | }\n+   | |_^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-  --> $DIR/lifetimes.rs:48:1\n+  --> $DIR/lifetimes.rs:63:1\n    |\n-48 | fn lifetime_param_2<'a, 'b>(_x: Ref<'a>, _y: &'b u8) { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+63 | fn lifetime_param_2<'a, 'b>(_x: Ref<'a>, _y: &'b u8) {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-  --> $DIR/lifetimes.rs:62:1\n+  --> $DIR/lifetimes.rs:84:1\n    |\n-62 | / fn fn_bound_2<'a, F, I>(_m: Lt<'a, I>, _f: F) -> Lt<'a, I>\n-63 | |     where for<'x> F: Fn(Lt<'x, I>) -> Lt<'x, I>\n-64 | | { unreachable!() }\n-   | |__________________^\n+84 | / fn fn_bound_2<'a, F, I>(_m: Lt<'a, I>, _f: F) -> Lt<'a, I>\n+85 | | where\n+86 | |     for<'x> F: Fn(Lt<'x, I>) -> Lt<'x, I>,\n+87 | | {\n+88 | |     unreachable!()\n+89 | | }\n+   | |_^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-  --> $DIR/lifetimes.rs:87:5\n-   |\n-87 |     fn self_and_out<'s>(&'s self) -> &'s u8 { &self.x }\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   --> $DIR/lifetimes.rs:117:5\n+    |\n+117 | /     fn self_and_out<'s>(&'s self) -> &'s u8 {\n+118 | |         &self.x\n+119 | |     }\n+    | |_____^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-  --> $DIR/lifetimes.rs:91:5\n-   |\n-91 |     fn distinct_self_and_in<'s, 't>(&'s self, _x: &'t u8) { }\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   --> $DIR/lifetimes.rs:125:5\n+    |\n+125 |     fn distinct_self_and_in<'s, 't>(&'s self, _x: &'t u8) {}\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-   --> $DIR/lifetimes.rs:107:1\n+   --> $DIR/lifetimes.rs:141:1\n     |\n-107 | fn struct_with_lt<'a>(_foo: Foo<'a>) -> &'a str { unimplemented!() }\n-    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+141 | / fn struct_with_lt<'a>(_foo: Foo<'a>) -> &'a str {\n+142 | |     unimplemented!()\n+143 | | }\n+    | |_^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-   --> $DIR/lifetimes.rs:127:1\n+   --> $DIR/lifetimes.rs:171:1\n     |\n-127 | fn trait_obj_elided2<'a>(_arg: &'a Drop) -> &'a str { unimplemented!() }\n-    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+171 | / fn trait_obj_elided2<'a>(_arg: &'a Drop) -> &'a str {\n+172 | |     unimplemented!()\n+173 | | }\n+    | |_^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-   --> $DIR/lifetimes.rs:131:1\n+   --> $DIR/lifetimes.rs:177:1\n     |\n-131 | fn alias_with_lt<'a>(_foo: FooAlias<'a>) -> &'a str { unimplemented!() }\n-    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+177 | / fn alias_with_lt<'a>(_foo: FooAlias<'a>) -> &'a str {\n+178 | |     unimplemented!()\n+179 | | }\n+    | |_^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-   --> $DIR/lifetimes.rs:142:1\n+   --> $DIR/lifetimes.rs:196:1\n     |\n-142 | fn named_input_elided_output<'a>(_arg: &'a str) -> &str { unimplemented!() }\n-    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+196 | / fn named_input_elided_output<'a>(_arg: &'a str) -> &str {\n+197 | |     unimplemented!()\n+198 | | }\n+    | |_^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-   --> $DIR/lifetimes.rs:146:1\n+   --> $DIR/lifetimes.rs:204:1\n     |\n-146 | fn trait_bound_ok<'a, T: WithLifetime<'static>>(_: &'a u8, _: T) { unimplemented!() }\n-    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+204 | / fn trait_bound_ok<'a, T: WithLifetime<'static>>(_: &'a u8, _: T) {\n+205 | |     unimplemented!()\n+206 | | }\n+    | |_^\n \n error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n-   --> $DIR/lifetimes.rs:176:1\n+   --> $DIR/lifetimes.rs:241:1\n     |\n-176 | fn out_return_type_lts<'a>(e: &'a str) -> Cow<'a> { unimplemented!() }\n-    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+241 | / fn out_return_type_lts<'a>(e: &'a str) -> Cow<'a> {\n+242 | |     unimplemented!()\n+243 | | }\n+    | |_^\n \n error: aborting due to 15 previous errors\n "}, {"sha": "1f2fcd8faf61518e75e78eec54092f4116abef6b", "filename": "tests/ui/lint_without_lint_pass.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Flint_without_lint_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Flint_without_lint_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint_without_lint_pass.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,5 +1,4 @@\n #![deny(clippy::internal)]\n-\n #![feature(rustc_private)]\n \n #[macro_use]\n@@ -28,5 +27,4 @@ impl lint::LintPass for Pass {\n     }\n }\n \n-fn main() {\n-}\n+fn main() {}"}, {"sha": "d0d65df21f0cff0e2aec0d9156a07b3f01d67af3", "filename": "tests/ui/lint_without_lint_pass.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Flint_without_lint_pass.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Flint_without_lint_pass.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint_without_lint_pass.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,11 +1,11 @@\n error: the lint `TEST_LINT` is not added to any `LintPass`\n-  --> $DIR/lint_without_lint_pass.rs:12:1\n+  --> $DIR/lint_without_lint_pass.rs:11:1\n    |\n-12 | / declare_clippy_lint! {\n-13 | |     pub TEST_LINT,\n-14 | |     correctness,\n-15 | |     \"\"\n-16 | | }\n+11 | / declare_clippy_lint! {\n+12 | |     pub TEST_LINT,\n+13 | |     correctness,\n+14 | |     \"\"\n+15 | | }\n    | |_^\n    |\n note: lint level defined here"}, {"sha": "e6fb37f81205cecc0b92bb8514f13ff8cbcd40b0", "filename": "tests/ui/map_clone.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmap_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmap_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmap_clone.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,8 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n #![warn(clippy::all, clippy::pedantic)]\n #![allow(clippy::missing_docs_in_private_items)]\n "}, {"sha": "603819de16e533113d6b99cd1c488c72a6b2b277", "filename": "tests/ui/map_clone.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmap_clone.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmap_clone.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmap_clone.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,21 +1,21 @@\n error: You are using an explicit closure for cloning elements\n-  --> $DIR/map_clone.rs:16:22\n+  --> $DIR/map_clone.rs:14:22\n    |\n-16 |     let _: Vec<i8> = vec![5_i8; 6].iter().map(|x| *x).collect();\n+14 |     let _: Vec<i8> = vec![5_i8; 6].iter().map(|x| *x).collect();\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: Consider calling the dedicated `cloned` method: `vec![5_i8; 6].iter().cloned()`\n    |\n    = note: `-D clippy::map-clone` implied by `-D warnings`\n \n error: You are using an explicit closure for cloning elements\n-  --> $DIR/map_clone.rs:17:26\n+  --> $DIR/map_clone.rs:15:26\n    |\n-17 |     let _: Vec<String> = vec![String::new()].iter().map(|x| x.clone()).collect();\n+15 |     let _: Vec<String> = vec![String::new()].iter().map(|x| x.clone()).collect();\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: Consider calling the dedicated `cloned` method: `vec![String::new()].iter().cloned()`\n \n error: You are using an explicit closure for cloning elements\n-  --> $DIR/map_clone.rs:18:23\n+  --> $DIR/map_clone.rs:16:23\n    |\n-18 |     let _: Vec<u32> = vec![42, 43].iter().map(|&x| x).collect();\n+16 |     let _: Vec<u32> = vec![42, 43].iter().map(|&x| x).collect();\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: Consider calling the dedicated `cloned` method: `vec![42, 43].iter().cloned()`\n \n error: aborting due to 3 previous errors"}, {"sha": "99b90a0df79610f9168128c4d4ae100c0ab87348", "filename": "tests/ui/map_flatten.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmap_flatten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmap_flatten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmap_flatten.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,8 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n #![warn(clippy::all, clippy::pedantic)]\n #![allow(clippy::missing_docs_in_private_items)]\n "}, {"sha": "488797173f6012b9857a8a59398264346be40a79", "filename": "tests/ui/map_flatten.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmap_flatten.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmap_flatten.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmap_flatten.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,7 +1,7 @@\n error: called `map(..).flatten()` on an `Iterator`. This is more succinctly expressed by calling `.flat_map(..)`\n-  --> $DIR/map_flatten.rs:16:21\n+  --> $DIR/map_flatten.rs:14:21\n    |\n-16 |     let _: Vec<_> = vec![5_i8; 6].into_iter().map(|x| 0..x).flatten().collect();\n+14 |     let _: Vec<_> = vec![5_i8; 6].into_iter().map(|x| 0..x).flatten().collect();\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using flat_map instead: `vec![5_i8; 6].into_iter().flat_map(|x| 0..x)`\n    |\n    = note: `-D clippy::map-flatten` implied by `-D warnings`"}, {"sha": "fe5e94cf45890e3620e25a080be873eee0671667", "filename": "tests/ui/match_bool.rs", "status": "modified", "additions": 18, "deletions": 10, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmatch_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmatch_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_bool.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,7 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n fn match_bool() {\n     let test: bool = true;\n \n@@ -24,31 +23,40 @@ fn match_bool() {\n \n     match test {\n         true => (),\n-        false => { println!(\"Noooo!\"); }\n+        false => {\n+            println!(\"Noooo!\");\n+        },\n     };\n \n     match test {\n-        false => { println!(\"Noooo!\"); }\n+        false => {\n+            println!(\"Noooo!\");\n+        },\n         _ => (),\n     };\n \n     match test && test {\n-        false => { println!(\"Noooo!\"); }\n+        false => {\n+            println!(\"Noooo!\");\n+        },\n         _ => (),\n     };\n \n     match test {\n-        false => { println!(\"Noooo!\"); }\n-        true => { println!(\"Yes!\"); }\n+        false => {\n+            println!(\"Noooo!\");\n+        },\n+        true => {\n+            println!(\"Yes!\");\n+        },\n     };\n \n     // Not linted\n     match option {\n-        1 ... 10 => 1,\n-        11 ... 20 => 2,\n+        1...10 => 1,\n+        11...20 => 2,\n         _ => 3,\n     };\n }\n \n-fn main() {\n-}\n+fn main() {}"}, {"sha": "a073f995498164f327bd95f5ca79cf4c42662289", "filename": "tests/ui/match_bool.stderr", "status": "modified", "additions": 73, "deletions": 38, "changes": 111, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmatch_bool.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmatch_bool.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_bool.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,74 +1,109 @@\n error: this boolean expression can be simplified\n-  --> $DIR/match_bool.rs:35:11\n+  --> $DIR/match_bool.rs:38:11\n    |\n-35 |     match test && test {\n+38 |     match test && test {\n    |           ^^^^^^^^^^^^ help: try: `test`\n    |\n    = note: `-D clippy::nonminimal-bool` implied by `-D warnings`\n \n error: you seem to be trying to match on a boolean expression\n-  --> $DIR/match_bool.rs:14:5\n+  --> $DIR/match_bool.rs:13:5\n    |\n-14 | /     match test {\n-15 | |         true => 0,\n-16 | |         false => 42,\n-17 | |     };\n+13 | /     match test {\n+14 | |         true => 0,\n+15 | |         false => 42,\n+16 | |     };\n    | |_____^ help: consider using an if/else expression: `if test { 0 } else { 42 }`\n    |\n    = note: `-D clippy::match-bool` implied by `-D warnings`\n \n error: you seem to be trying to match on a boolean expression\n-  --> $DIR/match_bool.rs:20:5\n+  --> $DIR/match_bool.rs:19:5\n    |\n-20 | /     match option == 1 {\n-21 | |         true => 1,\n-22 | |         false => 0,\n-23 | |     };\n+19 | /     match option == 1 {\n+20 | |         true => 1,\n+21 | |         false => 0,\n+22 | |     };\n    | |_____^ help: consider using an if/else expression: `if option == 1 { 1 } else { 0 }`\n \n error: you seem to be trying to match on a boolean expression\n-  --> $DIR/match_bool.rs:25:5\n+  --> $DIR/match_bool.rs:24:5\n+   |\n+24 | /     match test {\n+25 | |         true => (),\n+26 | |         false => {\n+27 | |             println!(\"Noooo!\");\n+28 | |         },\n+29 | |     };\n+   | |_____^\n+help: consider using an if/else expression\n+   |\n+24 |     if !test {\n+25 |     println!(\"Noooo!\");\n+26 | };\n    |\n-25 | /     match test {\n-26 | |         true => (),\n-27 | |         false => { println!(\"Noooo!\"); }\n-28 | |     };\n-   | |_____^ help: consider using an if/else expression: `if !test { println!(\"Noooo!\"); }`\n \n error: you seem to be trying to match on a boolean expression\n-  --> $DIR/match_bool.rs:30:5\n+  --> $DIR/match_bool.rs:31:5\n+   |\n+31 | /     match test {\n+32 | |         false => {\n+33 | |             println!(\"Noooo!\");\n+34 | |         },\n+35 | |         _ => (),\n+36 | |     };\n+   | |_____^\n+help: consider using an if/else expression\n+   |\n+31 |     if !test {\n+32 |     println!(\"Noooo!\");\n+33 | };\n    |\n-30 | /     match test {\n-31 | |         false => { println!(\"Noooo!\"); }\n-32 | |         _ => (),\n-33 | |     };\n-   | |_____^ help: consider using an if/else expression: `if !test { println!(\"Noooo!\"); }`\n \n error: you seem to be trying to match on a boolean expression\n-  --> $DIR/match_bool.rs:35:5\n+  --> $DIR/match_bool.rs:38:5\n+   |\n+38 | /     match test && test {\n+39 | |         false => {\n+40 | |             println!(\"Noooo!\");\n+41 | |         },\n+42 | |         _ => (),\n+43 | |     };\n+   | |_____^\n+help: consider using an if/else expression\n+   |\n+38 |     if !(test && test) {\n+39 |     println!(\"Noooo!\");\n+40 | };\n    |\n-35 | /     match test && test {\n-36 | |         false => { println!(\"Noooo!\"); }\n-37 | |         _ => (),\n-38 | |     };\n-   | |_____^ help: consider using an if/else expression: `if !(test && test) { println!(\"Noooo!\"); }`\n \n error: equal expressions as operands to `&&`\n-  --> $DIR/match_bool.rs:35:11\n+  --> $DIR/match_bool.rs:38:11\n    |\n-35 |     match test && test {\n+38 |     match test && test {\n    |           ^^^^^^^^^^^^\n    |\n    = note: #[deny(clippy::eq_op)] on by default\n \n error: you seem to be trying to match on a boolean expression\n-  --> $DIR/match_bool.rs:40:5\n+  --> $DIR/match_bool.rs:45:5\n+   |\n+45 | /     match test {\n+46 | |         false => {\n+47 | |             println!(\"Noooo!\");\n+48 | |         },\n+...  |\n+51 | |         },\n+52 | |     };\n+   | |_____^\n+help: consider using an if/else expression\n+   |\n+45 |     if test {\n+46 |     println!(\"Yes!\");\n+47 | } else {\n+48 |     println!(\"Noooo!\");\n+49 | };\n    |\n-40 | /     match test {\n-41 | |         false => { println!(\"Noooo!\"); }\n-42 | |         true => { println!(\"Yes!\"); }\n-43 | |     };\n-   | |_____^ help: consider using an if/else expression: `if test { println!(\"Yes!\"); } else { println!(\"Noooo!\"); }`\n \n error: aborting due to 8 previous errors\n "}, {"sha": "5350f933ae57ff20fc958fa0f4d896a12b4a57a0", "filename": "tests/ui/match_overlapping_arm.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmatch_overlapping_arm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmatch_overlapping_arm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_overlapping_arm.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -14,54 +14,54 @@\n /// Tests for match_overlapping_arm\n \n fn overlapping() {\n-    const FOO : u64 = 2;\n+    const FOO: u64 = 2;\n \n     match 42 {\n-        0 ... 10 => println!(\"0 ... 10\"),\n-        0 ... 11 => println!(\"0 ... 11\"),\n+        0...10 => println!(\"0 ... 10\"),\n+        0...11 => println!(\"0 ... 11\"),\n         _ => (),\n     }\n \n     match 42 {\n-        0 ... 5 => println!(\"0 ... 5\"),\n-        6 ... 7 => println!(\"6 ... 7\"),\n-        FOO ... 11 => println!(\"0 ... 11\"),\n+        0...5 => println!(\"0 ... 5\"),\n+        6...7 => println!(\"6 ... 7\"),\n+        FOO...11 => println!(\"0 ... 11\"),\n         _ => (),\n     }\n \n     match 42 {\n         2 => println!(\"2\"),\n-        0 ... 5 => println!(\"0 ... 5\"),\n+        0...5 => println!(\"0 ... 5\"),\n         _ => (),\n     }\n \n     match 42 {\n         2 => println!(\"2\"),\n-        0 ... 2 => println!(\"0 ... 2\"),\n+        0...2 => println!(\"0 ... 2\"),\n         _ => (),\n     }\n \n     match 42 {\n-        0 ... 10 => println!(\"0 ... 10\"),\n-        11 ... 50 => println!(\"11 ... 50\"),\n+        0...10 => println!(\"0 ... 10\"),\n+        11...50 => println!(\"11 ... 50\"),\n         _ => (),\n     }\n \n     match 42 {\n         2 => println!(\"2\"),\n-        0 .. 2 => println!(\"0 .. 2\"),\n+        0..2 => println!(\"0 .. 2\"),\n         _ => (),\n     }\n \n     match 42 {\n-        0 .. 10 => println!(\"0 .. 10\"),\n-        10 .. 50 => println!(\"10 .. 50\"),\n+        0..10 => println!(\"0 .. 10\"),\n+        10..50 => println!(\"10 .. 50\"),\n         _ => (),\n     }\n \n     match 42 {\n-        0 .. 11 => println!(\"0 .. 11\"),\n-        0 ... 11 => println!(\"0 ... 11\"),\n+        0..11 => println!(\"0 .. 11\"),\n+        0...11 => println!(\"0 ... 11\"),\n         _ => (),\n     }\n "}, {"sha": "ef8fc08f95b2e044ae1064f53e6d7cf51ef7fa57", "filename": "tests/ui/match_overlapping_arm.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmatch_overlapping_arm.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmatch_overlapping_arm.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_overlapping_arm.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,33 +1,33 @@\n error: some ranges overlap\n   --> $DIR/match_overlapping_arm.rs:20:9\n    |\n-20 |         0 ... 10 => println!(\"0 ... 10\"),\n-   |         ^^^^^^^^\n+20 |         0...10 => println!(\"0 ... 10\"),\n+   |         ^^^^^^\n    |\n    = note: `-D clippy::match-overlapping-arm` implied by `-D warnings`\n note: overlaps with this\n   --> $DIR/match_overlapping_arm.rs:21:9\n    |\n-21 |         0 ... 11 => println!(\"0 ... 11\"),\n-   |         ^^^^^^^^\n+21 |         0...11 => println!(\"0 ... 11\"),\n+   |         ^^^^^^\n \n error: some ranges overlap\n   --> $DIR/match_overlapping_arm.rs:26:9\n    |\n-26 |         0 ... 5 => println!(\"0 ... 5\"),\n-   |         ^^^^^^^\n+26 |         0...5 => println!(\"0 ... 5\"),\n+   |         ^^^^^\n    |\n note: overlaps with this\n   --> $DIR/match_overlapping_arm.rs:28:9\n    |\n-28 |         FOO ... 11 => println!(\"0 ... 11\"),\n-   |         ^^^^^^^^^^\n+28 |         FOO...11 => println!(\"0 ... 11\"),\n+   |         ^^^^^^^^\n \n error: some ranges overlap\n   --> $DIR/match_overlapping_arm.rs:34:9\n    |\n-34 |         0 ... 5 => println!(\"0 ... 5\"),\n-   |         ^^^^^^^\n+34 |         0...5 => println!(\"0 ... 5\"),\n+   |         ^^^^^\n    |\n note: overlaps with this\n   --> $DIR/match_overlapping_arm.rs:33:9\n@@ -38,8 +38,8 @@ note: overlaps with this\n error: some ranges overlap\n   --> $DIR/match_overlapping_arm.rs:40:9\n    |\n-40 |         0 ... 2 => println!(\"0 ... 2\"),\n-   |         ^^^^^^^\n+40 |         0...2 => println!(\"0 ... 2\"),\n+   |         ^^^^^\n    |\n note: overlaps with this\n   --> $DIR/match_overlapping_arm.rs:39:9\n@@ -50,14 +50,14 @@ note: overlaps with this\n error: some ranges overlap\n   --> $DIR/match_overlapping_arm.rs:63:9\n    |\n-63 |         0 .. 11 => println!(\"0 .. 11\"),\n-   |         ^^^^^^^\n+63 |         0..11 => println!(\"0 .. 11\"),\n+   |         ^^^^^\n    |\n note: overlaps with this\n   --> $DIR/match_overlapping_arm.rs:64:9\n    |\n-64 |         0 ... 11 => println!(\"0 ... 11\"),\n-   |         ^^^^^^^^\n+64 |         0...11 => println!(\"0 ... 11\"),\n+   |         ^^^^^^\n \n error: aborting due to 5 previous errors\n "}, {"sha": "8038433c5641d423cb233df22f439efe1a41615e", "filename": "tests/ui/matches.rs", "status": "modified", "additions": 25, "deletions": 26, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatches.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,18 +7,12 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n #![feature(exclusive_range_pattern)]\n-\n-\n #![warn(clippy::all)]\n #![allow(unused, clippy::redundant_pattern_matching)]\n #![warn(clippy::match_same_arms)]\n \n-\n-fn dummy() {\n-}\n+fn dummy() {}\n \n fn ref_pats() {\n     {\n@@ -27,12 +21,13 @@ fn ref_pats() {\n             &Some(v) => println!(\"{:?}\", v),\n             &None => println!(\"none\"),\n         }\n-        match v {  // this doesn't trigger, we have a different pattern\n+        match v {\n+            // this doesn't trigger, we have a different pattern\n             &Some(v) => println!(\"some\"),\n             other => println!(\"other\"),\n         }\n     }\n-    let tup =& (1, 2);\n+    let tup = &(1, 2);\n     match tup {\n         &(v, 1) => println!(\"{}\", v),\n         _ => println!(\"none\"),\n@@ -66,81 +61,87 @@ fn match_wild_err_arm() {\n     match x {\n         Ok(3) => println!(\"ok\"),\n         Ok(_) => println!(\"ok\"),\n-        Err(_) => panic!(\"err\")\n+        Err(_) => panic!(\"err\"),\n     }\n \n     match x {\n         Ok(3) => println!(\"ok\"),\n         Ok(_) => println!(\"ok\"),\n-        Err(_) => {panic!()}\n+        Err(_) => panic!(),\n     }\n \n     match x {\n         Ok(3) => println!(\"ok\"),\n         Ok(_) => println!(\"ok\"),\n-        Err(_) => {panic!();}\n+        Err(_) => {\n+            panic!();\n+        },\n     }\n \n     // allowed when not with `panic!` block\n     match x {\n         Ok(3) => println!(\"ok\"),\n         Ok(_) => println!(\"ok\"),\n-        Err(_) => println!(\"err\")\n+        Err(_) => println!(\"err\"),\n     }\n \n     // allowed when used with `unreachable!`\n     match x {\n         Ok(3) => println!(\"ok\"),\n         Ok(_) => println!(\"ok\"),\n-        Err(_) => {unreachable!()}\n+        Err(_) => unreachable!(),\n     }\n \n     match x {\n         Ok(3) => println!(\"ok\"),\n         Ok(_) => println!(\"ok\"),\n-        Err(_) => unreachable!()\n+        Err(_) => unreachable!(),\n     }\n \n     match x {\n         Ok(3) => println!(\"ok\"),\n         Ok(_) => println!(\"ok\"),\n-        Err(_) => {unreachable!();}\n+        Err(_) => {\n+            unreachable!();\n+        },\n     }\n \n     // no warning because of the guard\n     match x {\n-        Ok(x) if x*x == 64 => println!(\"ok\"),\n+        Ok(x) if x * x == 64 => println!(\"ok\"),\n         Ok(_) => println!(\"ok\"),\n-        Err(_) => println!(\"err\")\n+        Err(_) => println!(\"err\"),\n     }\n \n     // this used to be a false positive, see #1996\n     match x {\n         Ok(3) => println!(\"ok\"),\n-        Ok(x) if x*x == 64 => println!(\"ok 64\"),\n+        Ok(x) if x * x == 64 => println!(\"ok 64\"),\n         Ok(_) => println!(\"ok\"),\n-        Err(_) => println!(\"err\")\n+        Err(_) => println!(\"err\"),\n     }\n \n     match (x, Some(1i32)) {\n         (Ok(x), Some(_)) => println!(\"ok {}\", x),\n         (Ok(_), Some(x)) => println!(\"ok {}\", x),\n-        _ => println!(\"err\")\n+        _ => println!(\"err\"),\n     }\n \n     // no warning because of the different types for x\n     match (x, Some(1.0f64)) {\n         (Ok(x), Some(_)) => println!(\"ok {}\", x),\n         (Ok(_), Some(x)) => println!(\"ok {}\", x),\n-        _ => println!(\"err\")\n+        _ => println!(\"err\"),\n     }\n \n     // because of a bug, no warning was generated for this case before #2251\n     match x {\n         Ok(_tmp) => println!(\"ok\"),\n         Ok(3) => println!(\"ok\"),\n         Ok(_) => println!(\"ok\"),\n-        Err(_) => {unreachable!();}\n+        Err(_) => {\n+            unreachable!();\n+        },\n     }\n }\n \n@@ -156,8 +157,6 @@ fn match_as_ref() {\n         None => None,\n         Some(ref mut v) => Some(v),\n     };\n-\n }\n \n-fn main() {\n-}\n+fn main() {}"}, {"sha": "3ed70168c6eb0a90c249f774e354b7c46b3f22a7", "filename": "tests/ui/matches.stderr", "status": "modified", "additions": 111, "deletions": 111, "changes": 222, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmatches.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmatches.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatches.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,281 +1,281 @@\n error: you don't need to add `&` to all patterns\n-  --> $DIR/matches.rs:26:9\n+  --> $DIR/matches.rs:20:9\n    |\n-26 | /         match v {\n-27 | |             &Some(v) => println!(\"{:?}\", v),\n-28 | |             &None => println!(\"none\"),\n-29 | |         }\n+20 | /         match v {\n+21 | |             &Some(v) => println!(\"{:?}\", v),\n+22 | |             &None => println!(\"none\"),\n+23 | |         }\n    | |_________^\n    |\n    = note: `-D clippy::match-ref-pats` implied by `-D warnings`\n help: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n-26 |         match *v {\n-27 |             Some(v) => println!(\"{:?}\", v),\n-28 |             None => println!(\"none\"),\n+20 |         match *v {\n+21 |             Some(v) => println!(\"{:?}\", v),\n+22 |             None => println!(\"none\"),\n    |\n \n error: you don't need to add `&` to all patterns\n-  --> $DIR/matches.rs:36:5\n+  --> $DIR/matches.rs:31:5\n    |\n-36 | /     match tup {\n-37 | |         &(v, 1) => println!(\"{}\", v),\n-38 | |         _ => println!(\"none\"),\n-39 | |     }\n+31 | /     match tup {\n+32 | |         &(v, 1) => println!(\"{}\", v),\n+33 | |         _ => println!(\"none\"),\n+34 | |     }\n    | |_____^\n help: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n-36 |     match *tup {\n-37 |         (v, 1) => println!(\"{}\", v),\n+31 |     match *tup {\n+32 |         (v, 1) => println!(\"{}\", v),\n    |\n \n error: you don't need to add `&` to both the expression and the patterns\n-  --> $DIR/matches.rs:42:5\n+  --> $DIR/matches.rs:37:5\n    |\n-42 | /     match &w {\n-43 | |         &Some(v) => println!(\"{:?}\", v),\n-44 | |         &None => println!(\"none\"),\n-45 | |     }\n+37 | /     match &w {\n+38 | |         &Some(v) => println!(\"{:?}\", v),\n+39 | |         &None => println!(\"none\"),\n+40 | |     }\n    | |_____^\n help: try\n    |\n-42 |     match w {\n-43 |         Some(v) => println!(\"{:?}\", v),\n-44 |         None => println!(\"none\"),\n+37 |     match w {\n+38 |         Some(v) => println!(\"{:?}\", v),\n+39 |         None => println!(\"none\"),\n    |\n \n error: you don't need to add `&` to all patterns\n-  --> $DIR/matches.rs:53:5\n+  --> $DIR/matches.rs:48:5\n    |\n-53 | /     if let &None = a {\n-54 | |         println!(\"none\");\n-55 | |     }\n+48 | /     if let &None = a {\n+49 | |         println!(\"none\");\n+50 | |     }\n    | |_____^\n help: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n-53 |     if let None = *a {\n+48 |     if let None = *a {\n    |            ^^^^   ^^\n \n error: you don't need to add `&` to both the expression and the patterns\n-  --> $DIR/matches.rs:58:5\n+  --> $DIR/matches.rs:53:5\n    |\n-58 | /     if let &None = &b {\n-59 | |         println!(\"none\");\n-60 | |     }\n+53 | /     if let &None = &b {\n+54 | |         println!(\"none\");\n+55 | |     }\n    | |_____^\n help: try\n    |\n-58 |     if let None = b {\n+53 |     if let None = b {\n    |            ^^^^   ^\n \n error: Err(_) will match all errors, maybe not a good idea\n-  --> $DIR/matches.rs:69:9\n+  --> $DIR/matches.rs:64:9\n    |\n-69 |         Err(_) => panic!(\"err\")\n+64 |         Err(_) => panic!(\"err\"),\n    |         ^^^^^^\n    |\n    = note: `-D clippy::match-wild-err-arm` implied by `-D warnings`\n    = note: to remove this warning, match each error separately or use unreachable macro\n \n error: this `match` has identical arm bodies\n-  --> $DIR/matches.rs:68:18\n+  --> $DIR/matches.rs:63:18\n    |\n-68 |         Ok(_) => println!(\"ok\"),\n+63 |         Ok(_) => println!(\"ok\"),\n    |                  ^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::match-same-arms` implied by `-D warnings`\n note: same as this\n-  --> $DIR/matches.rs:67:18\n+  --> $DIR/matches.rs:62:18\n    |\n-67 |         Ok(3) => println!(\"ok\"),\n+62 |         Ok(3) => println!(\"ok\"),\n    |                  ^^^^^^^^^^^^^^\n note: consider refactoring into `Ok(3) | Ok(_)`\n-  --> $DIR/matches.rs:67:18\n+  --> $DIR/matches.rs:62:18\n    |\n-67 |         Ok(3) => println!(\"ok\"),\n+62 |         Ok(3) => println!(\"ok\"),\n    |                  ^^^^^^^^^^^^^^\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: Err(_) will match all errors, maybe not a good idea\n-  --> $DIR/matches.rs:75:9\n+  --> $DIR/matches.rs:70:9\n    |\n-75 |         Err(_) => {panic!()}\n+70 |         Err(_) => panic!(),\n    |         ^^^^^^\n    |\n    = note: to remove this warning, match each error separately or use unreachable macro\n \n error: this `match` has identical arm bodies\n-  --> $DIR/matches.rs:74:18\n+  --> $DIR/matches.rs:69:18\n    |\n-74 |         Ok(_) => println!(\"ok\"),\n+69 |         Ok(_) => println!(\"ok\"),\n    |                  ^^^^^^^^^^^^^^\n    |\n note: same as this\n-  --> $DIR/matches.rs:73:18\n+  --> $DIR/matches.rs:68:18\n    |\n-73 |         Ok(3) => println!(\"ok\"),\n+68 |         Ok(3) => println!(\"ok\"),\n    |                  ^^^^^^^^^^^^^^\n note: consider refactoring into `Ok(3) | Ok(_)`\n-  --> $DIR/matches.rs:73:18\n+  --> $DIR/matches.rs:68:18\n    |\n-73 |         Ok(3) => println!(\"ok\"),\n+68 |         Ok(3) => println!(\"ok\"),\n    |                  ^^^^^^^^^^^^^^\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: Err(_) will match all errors, maybe not a good idea\n-  --> $DIR/matches.rs:81:9\n+  --> $DIR/matches.rs:76:9\n    |\n-81 |         Err(_) => {panic!();}\n+76 |         Err(_) => {\n    |         ^^^^^^\n    |\n    = note: to remove this warning, match each error separately or use unreachable macro\n \n error: this `match` has identical arm bodies\n-  --> $DIR/matches.rs:80:18\n+  --> $DIR/matches.rs:75:18\n    |\n-80 |         Ok(_) => println!(\"ok\"),\n+75 |         Ok(_) => println!(\"ok\"),\n    |                  ^^^^^^^^^^^^^^\n    |\n note: same as this\n-  --> $DIR/matches.rs:79:18\n+  --> $DIR/matches.rs:74:18\n    |\n-79 |         Ok(3) => println!(\"ok\"),\n+74 |         Ok(3) => println!(\"ok\"),\n    |                  ^^^^^^^^^^^^^^\n note: consider refactoring into `Ok(3) | Ok(_)`\n-  --> $DIR/matches.rs:79:18\n+  --> $DIR/matches.rs:74:18\n    |\n-79 |         Ok(3) => println!(\"ok\"),\n+74 |         Ok(3) => println!(\"ok\"),\n    |                  ^^^^^^^^^^^^^^\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: this `match` has identical arm bodies\n-  --> $DIR/matches.rs:87:18\n+  --> $DIR/matches.rs:84:18\n    |\n-87 |         Ok(_) => println!(\"ok\"),\n+84 |         Ok(_) => println!(\"ok\"),\n    |                  ^^^^^^^^^^^^^^\n    |\n note: same as this\n-  --> $DIR/matches.rs:86:18\n+  --> $DIR/matches.rs:83:18\n    |\n-86 |         Ok(3) => println!(\"ok\"),\n+83 |         Ok(3) => println!(\"ok\"),\n    |                  ^^^^^^^^^^^^^^\n note: consider refactoring into `Ok(3) | Ok(_)`\n-  --> $DIR/matches.rs:86:18\n+  --> $DIR/matches.rs:83:18\n    |\n-86 |         Ok(3) => println!(\"ok\"),\n+83 |         Ok(3) => println!(\"ok\"),\n    |                  ^^^^^^^^^^^^^^\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: this `match` has identical arm bodies\n-  --> $DIR/matches.rs:94:18\n+  --> $DIR/matches.rs:91:18\n    |\n-94 |         Ok(_) => println!(\"ok\"),\n+91 |         Ok(_) => println!(\"ok\"),\n    |                  ^^^^^^^^^^^^^^\n    |\n note: same as this\n-  --> $DIR/matches.rs:93:18\n+  --> $DIR/matches.rs:90:18\n    |\n-93 |         Ok(3) => println!(\"ok\"),\n+90 |         Ok(3) => println!(\"ok\"),\n    |                  ^^^^^^^^^^^^^^\n note: consider refactoring into `Ok(3) | Ok(_)`\n-  --> $DIR/matches.rs:93:18\n+  --> $DIR/matches.rs:90:18\n    |\n-93 |         Ok(3) => println!(\"ok\"),\n+90 |         Ok(3) => println!(\"ok\"),\n    |                  ^^^^^^^^^^^^^^\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: this `match` has identical arm bodies\n-   --> $DIR/matches.rs:100:18\n-    |\n-100 |         Ok(_) => println!(\"ok\"),\n-    |                  ^^^^^^^^^^^^^^\n-    |\n+  --> $DIR/matches.rs:97:18\n+   |\n+97 |         Ok(_) => println!(\"ok\"),\n+   |                  ^^^^^^^^^^^^^^\n+   |\n note: same as this\n-   --> $DIR/matches.rs:99:18\n-    |\n-99  |         Ok(3) => println!(\"ok\"),\n-    |                  ^^^^^^^^^^^^^^\n+  --> $DIR/matches.rs:96:18\n+   |\n+96 |         Ok(3) => println!(\"ok\"),\n+   |                  ^^^^^^^^^^^^^^\n note: consider refactoring into `Ok(3) | Ok(_)`\n-   --> $DIR/matches.rs:99:18\n-    |\n-99  |         Ok(3) => println!(\"ok\"),\n-    |                  ^^^^^^^^^^^^^^\n-    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n+  --> $DIR/matches.rs:96:18\n+   |\n+96 |         Ok(3) => println!(\"ok\"),\n+   |                  ^^^^^^^^^^^^^^\n+   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: this `match` has identical arm bodies\n-   --> $DIR/matches.rs:106:18\n+   --> $DIR/matches.rs:103:18\n     |\n-106 |         Ok(_) => println!(\"ok\"),\n+103 |         Ok(_) => println!(\"ok\"),\n     |                  ^^^^^^^^^^^^^^\n     |\n note: same as this\n-   --> $DIR/matches.rs:105:18\n+   --> $DIR/matches.rs:102:18\n     |\n-105 |         Ok(3) => println!(\"ok\"),\n+102 |         Ok(3) => println!(\"ok\"),\n     |                  ^^^^^^^^^^^^^^\n note: consider refactoring into `Ok(3) | Ok(_)`\n-   --> $DIR/matches.rs:105:18\n+   --> $DIR/matches.rs:102:18\n     |\n-105 |         Ok(3) => println!(\"ok\"),\n+102 |         Ok(3) => println!(\"ok\"),\n     |                  ^^^^^^^^^^^^^^\n     = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: this `match` has identical arm bodies\n-   --> $DIR/matches.rs:127:29\n+   --> $DIR/matches.rs:126:29\n     |\n-127 |         (Ok(_), Some(x)) => println!(\"ok {}\", x),\n+126 |         (Ok(_), Some(x)) => println!(\"ok {}\", x),\n     |                             ^^^^^^^^^^^^^^^^^^^^\n     |\n note: same as this\n-   --> $DIR/matches.rs:126:29\n+   --> $DIR/matches.rs:125:29\n     |\n-126 |         (Ok(x), Some(_)) => println!(\"ok {}\", x),\n+125 |         (Ok(x), Some(_)) => println!(\"ok {}\", x),\n     |                             ^^^^^^^^^^^^^^^^^^^^\n note: consider refactoring into `(Ok(x), Some(_)) | (Ok(_), Some(x))`\n-   --> $DIR/matches.rs:126:29\n+   --> $DIR/matches.rs:125:29\n     |\n-126 |         (Ok(x), Some(_)) => println!(\"ok {}\", x),\n+125 |         (Ok(x), Some(_)) => println!(\"ok {}\", x),\n     |                             ^^^^^^^^^^^^^^^^^^^^\n     = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: this `match` has identical arm bodies\n-   --> $DIR/matches.rs:142:18\n+   --> $DIR/matches.rs:141:18\n     |\n-142 |         Ok(_) => println!(\"ok\"),\n+141 |         Ok(_) => println!(\"ok\"),\n     |                  ^^^^^^^^^^^^^^\n     |\n note: same as this\n-   --> $DIR/matches.rs:141:18\n+   --> $DIR/matches.rs:140:18\n     |\n-141 |         Ok(3) => println!(\"ok\"),\n+140 |         Ok(3) => println!(\"ok\"),\n     |                  ^^^^^^^^^^^^^^\n note: consider refactoring into `Ok(3) | Ok(_)`\n-   --> $DIR/matches.rs:141:18\n+   --> $DIR/matches.rs:140:18\n     |\n-141 |         Ok(3) => println!(\"ok\"),\n+140 |         Ok(3) => println!(\"ok\"),\n     |                  ^^^^^^^^^^^^^^\n     = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: use as_ref() instead\n-   --> $DIR/matches.rs:149:33\n+   --> $DIR/matches.rs:150:33\n     |\n-149 |       let borrowed: Option<&()> = match owned {\n+150 |       let borrowed: Option<&()> = match owned {\n     |  _________________________________^\n-150 | |         None => None,\n-151 | |         Some(ref v) => Some(v),\n-152 | |     };\n+151 | |         None => None,\n+152 | |         Some(ref v) => Some(v),\n+153 | |     };\n     | |_____^ help: try this: `owned.as_ref()`\n     |\n     = note: `-D clippy::match-as-ref` implied by `-D warnings`\n \n error: use as_mut() instead\n-   --> $DIR/matches.rs:155:39\n+   --> $DIR/matches.rs:156:39\n     |\n-155 |       let borrow_mut: Option<&mut ()> = match mut_owned {\n+156 |       let borrow_mut: Option<&mut ()> = match mut_owned {\n     |  _______________________________________^\n-156 | |         None => None,\n-157 | |         Some(ref mut v) => Some(v),\n-158 | |     };\n+157 | |         None => None,\n+158 | |         Some(ref mut v) => Some(v),\n+159 | |     };\n     | |_____^ help: try this: `mut_owned.as_mut()`\n \n error: aborting due to 19 previous errors"}, {"sha": "9d2d6f9503a1c9c35b754011e1261e5c9035475c", "filename": "tests/ui/mem_discriminant.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmem_discriminant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmem_discriminant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmem_discriminant.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,7 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n #![deny(clippy::mem_discriminant_non_enum)]\n \n use std::mem;\n@@ -35,7 +34,9 @@ fn main() {\n     mem::discriminant(&rro);\n \n     macro_rules! mem_discriminant_but_in_a_macro {\n-        ($param:expr) => (mem::discriminant($param))\n+        ($param:expr) => {\n+            mem::discriminant($param)\n+        };\n     }\n \n     mem_discriminant_but_in_a_macro!(&rro);"}, {"sha": "a00f7ab30e18dc7f076c9bcedbf15a5e6c4034a6", "filename": "tests/ui/mem_discriminant.stderr", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmem_discriminant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmem_discriminant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmem_discriminant.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,101 +1,101 @@\n error: calling `mem::discriminant` on non-enum type `&str`\n-  --> $DIR/mem_discriminant.rs:24:5\n+  --> $DIR/mem_discriminant.rs:23:5\n    |\n-24 |     mem::discriminant(&\"hello\");\n+23 |     mem::discriminant(&\"hello\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: lint level defined here\n-  --> $DIR/mem_discriminant.rs:11:9\n+  --> $DIR/mem_discriminant.rs:10:9\n    |\n-11 | #![deny(clippy::mem_discriminant_non_enum)]\n+10 | #![deny(clippy::mem_discriminant_non_enum)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: calling `mem::discriminant` on non-enum type `&std::option::Option<i32>`\n-  --> $DIR/mem_discriminant.rs:25:5\n+  --> $DIR/mem_discriminant.rs:24:5\n    |\n-25 |     mem::discriminant(&&Some(2));\n+24 |     mem::discriminant(&&Some(2));\n    |     ^^^^^^^^^^^^^^^^^^---------^\n    |                       |\n    |                       help: try dereferencing: `&Some(2)`\n \n error: calling `mem::discriminant` on non-enum type `&std::option::Option<u8>`\n-  --> $DIR/mem_discriminant.rs:26:5\n+  --> $DIR/mem_discriminant.rs:25:5\n    |\n-26 |     mem::discriminant(&&None::<u8>);\n+25 |     mem::discriminant(&&None::<u8>);\n    |     ^^^^^^^^^^^^^^^^^^------------^\n    |                       |\n    |                       help: try dereferencing: `&None::<u8>`\n \n error: calling `mem::discriminant` on non-enum type `&Foo`\n-  --> $DIR/mem_discriminant.rs:27:5\n+  --> $DIR/mem_discriminant.rs:26:5\n    |\n-27 |     mem::discriminant(&&Foo::One(5));\n+26 |     mem::discriminant(&&Foo::One(5));\n    |     ^^^^^^^^^^^^^^^^^^-------------^\n    |                       |\n    |                       help: try dereferencing: `&Foo::One(5)`\n \n error: calling `mem::discriminant` on non-enum type `&Foo`\n-  --> $DIR/mem_discriminant.rs:28:5\n+  --> $DIR/mem_discriminant.rs:27:5\n    |\n-28 |     mem::discriminant(&&Foo::Two(5));\n+27 |     mem::discriminant(&&Foo::Two(5));\n    |     ^^^^^^^^^^^^^^^^^^-------------^\n    |                       |\n    |                       help: try dereferencing: `&Foo::Two(5)`\n \n error: calling `mem::discriminant` on non-enum type `A`\n-  --> $DIR/mem_discriminant.rs:29:5\n+  --> $DIR/mem_discriminant.rs:28:5\n    |\n-29 |     mem::discriminant(&A(Foo::One(0)));\n+28 |     mem::discriminant(&A(Foo::One(0)));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: calling `mem::discriminant` on non-enum type `&std::option::Option<i32>`\n-  --> $DIR/mem_discriminant.rs:33:5\n+  --> $DIR/mem_discriminant.rs:32:5\n    |\n-33 |     mem::discriminant(&ro);\n+32 |     mem::discriminant(&ro);\n    |     ^^^^^^^^^^^^^^^^^^---^\n    |                       |\n    |                       help: try dereferencing: `ro`\n \n error: calling `mem::discriminant` on non-enum type `&std::option::Option<i32>`\n-  --> $DIR/mem_discriminant.rs:34:5\n+  --> $DIR/mem_discriminant.rs:33:5\n    |\n-34 |     mem::discriminant(rro);\n+33 |     mem::discriminant(rro);\n    |     ^^^^^^^^^^^^^^^^^^---^\n    |                       |\n    |                       help: try dereferencing: `*rro`\n \n error: calling `mem::discriminant` on non-enum type `&&std::option::Option<i32>`\n-  --> $DIR/mem_discriminant.rs:35:5\n+  --> $DIR/mem_discriminant.rs:34:5\n    |\n-35 |     mem::discriminant(&rro);\n+34 |     mem::discriminant(&rro);\n    |     ^^^^^^^^^^^^^^^^^^----^\n    |                       |\n    |                       help: try dereferencing: `*rro`\n \n error: calling `mem::discriminant` on non-enum type `&&std::option::Option<i32>`\n-  --> $DIR/mem_discriminant.rs:38:27\n+  --> $DIR/mem_discriminant.rs:38:13\n    |\n-38 |         ($param:expr) => (mem::discriminant($param))\n-   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^\n+38 |             mem::discriminant($param)\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n-41 |     mem_discriminant_but_in_a_macro!(&rro);\n+42 |     mem_discriminant_but_in_a_macro!(&rro);\n    |     ---------------------------------------\n    |     |                                |\n    |     |                                help: try dereferencing: `*rro`\n    |     in this macro invocation\n \n error: calling `mem::discriminant` on non-enum type `&&&&&std::option::Option<i32>`\n-  --> $DIR/mem_discriminant.rs:44:5\n+  --> $DIR/mem_discriminant.rs:45:5\n    |\n-44 |     mem::discriminant(&rrrrro);\n+45 |     mem::discriminant(&rrrrro);\n    |     ^^^^^^^^^^^^^^^^^^-------^\n    |                       |\n    |                       help: try dereferencing: `****rrrrro`\n \n error: calling `mem::discriminant` on non-enum type `&&&std::option::Option<i32>`\n-  --> $DIR/mem_discriminant.rs:45:5\n+  --> $DIR/mem_discriminant.rs:46:5\n    |\n-45 |     mem::discriminant(*rrrrro);\n+46 |     mem::discriminant(*rrrrro);\n    |     ^^^^^^^^^^^^^^^^^^-------^\n    |                       |\n    |                       help: try dereferencing: `****rrrrro`"}, {"sha": "b46f7007cd028db47e9818b013882aa906687a50", "filename": "tests/ui/mem_forget.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmem_forget.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmem_forget.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmem_forget.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,16 +7,11 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n-\n-use std::sync::Arc;\n use std::rc::Rc;\n+use std::sync::Arc;\n \n-use std::mem::forget as forgetSomething;\n use std::mem as memstuff;\n+use std::mem::forget as forgetSomething;\n \n #[warn(clippy::mem_forget)]\n #[allow(clippy::forget_copy)]"}, {"sha": "479cd4934ab8eed09a07bfef34f92119d5ce8814", "filename": "tests/ui/mem_forget.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmem_forget.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmem_forget.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmem_forget.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,21 +1,21 @@\n error: usage of mem::forget on Drop type\n-  --> $DIR/mem_forget.rs:28:5\n+  --> $DIR/mem_forget.rs:23:5\n    |\n-28 |     memstuff::forget(six);\n+23 |     memstuff::forget(six);\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::mem-forget` implied by `-D warnings`\n \n error: usage of mem::forget on Drop type\n-  --> $DIR/mem_forget.rs:31:5\n+  --> $DIR/mem_forget.rs:26:5\n    |\n-31 |     std::mem::forget(seven);\n+26 |     std::mem::forget(seven);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: usage of mem::forget on Drop type\n-  --> $DIR/mem_forget.rs:34:5\n+  --> $DIR/mem_forget.rs:29:5\n    |\n-34 |     forgetSomething(eight);\n+29 |     forgetSomething(eight);\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 3 previous errors"}, {"sha": "edd3c03185713f55d7f0147c48296f4d0908faca", "filename": "tests/ui/mem_replace.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmem_replace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmem_replace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmem_replace.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,8 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n #![warn(clippy::all, clippy::style, clippy::mem_replace_option_with_none)]\n \n use std::mem;"}, {"sha": "06d8f5f74c0b0dc0c8f3b0f26486d6cf9a459223", "filename": "tests/ui/mem_replace.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmem_replace.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmem_replace.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmem_replace.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,15 +1,15 @@\n error: replacing an `Option` with `None`\n-  --> $DIR/mem_replace.rs:18:13\n+  --> $DIR/mem_replace.rs:16:13\n    |\n-18 |     let _ = mem::replace(&mut an_option, None);\n+16 |     let _ = mem::replace(&mut an_option, None);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider `Option::take()` instead: `an_option.take()`\n    |\n    = note: `-D clippy::mem-replace-option-with-none` implied by `-D warnings`\n \n error: replacing an `Option` with `None`\n-  --> $DIR/mem_replace.rs:20:13\n+  --> $DIR/mem_replace.rs:18:13\n    |\n-20 |     let _ = mem::replace(an_option, None);\n+18 |     let _ = mem::replace(an_option, None);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider `Option::take()` instead: `an_option.take()`\n \n error: aborting due to 2 previous errors"}, {"sha": "cf68bb611008ad8d7c9efbc93e8d4f057a937376", "filename": "tests/ui/min_max.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmin_max.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmin_max.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmin_max.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,17 +7,13 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #![warn(clippy::all)]\n \n-use std::cmp::{min, max};\n-use std::cmp::min as my_min;\n use std::cmp::max as my_max;\n+use std::cmp::min as my_min;\n+use std::cmp::{max, min};\n \n-const LARGE : usize = 3;\n+const LARGE: usize = 3;\n \n fn main() {\n     let x;"}, {"sha": "74a93e350deee230d7a64e1adcae515d982bda3f", "filename": "tests/ui/min_max.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmin_max.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmin_max.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmin_max.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,45 +1,45 @@\n error: this min/max combination leads to constant result\n-  --> $DIR/min_max.rs:25:5\n+  --> $DIR/min_max.rs:21:5\n    |\n-25 |     min(1, max(3, x));\n+21 |     min(1, max(3, x));\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::min-max` implied by `-D warnings`\n \n error: this min/max combination leads to constant result\n-  --> $DIR/min_max.rs:26:5\n+  --> $DIR/min_max.rs:22:5\n    |\n-26 |     min(max(3, x), 1);\n+22 |     min(max(3, x), 1);\n    |     ^^^^^^^^^^^^^^^^^\n \n error: this min/max combination leads to constant result\n-  --> $DIR/min_max.rs:27:5\n+  --> $DIR/min_max.rs:23:5\n    |\n-27 |     max(min(x, 1), 3);\n+23 |     max(min(x, 1), 3);\n    |     ^^^^^^^^^^^^^^^^^\n \n error: this min/max combination leads to constant result\n-  --> $DIR/min_max.rs:28:5\n+  --> $DIR/min_max.rs:24:5\n    |\n-28 |     max(3, min(x, 1));\n+24 |     max(3, min(x, 1));\n    |     ^^^^^^^^^^^^^^^^^\n \n error: this min/max combination leads to constant result\n-  --> $DIR/min_max.rs:30:5\n+  --> $DIR/min_max.rs:26:5\n    |\n-30 |     my_max(3, my_min(x, 1));\n+26 |     my_max(3, my_min(x, 1));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this min/max combination leads to constant result\n-  --> $DIR/min_max.rs:42:5\n+  --> $DIR/min_max.rs:38:5\n    |\n-42 |     min(\"Apple\", max(\"Zoo\", s));\n+38 |     min(\"Apple\", max(\"Zoo\", s));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this min/max combination leads to constant result\n-  --> $DIR/min_max.rs:43:5\n+  --> $DIR/min_max.rs:39:5\n    |\n-43 |     max(min(s, \"Apple\"), \"Zoo\");\n+39 |     max(min(s, \"Apple\"), \"Zoo\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 7 previous errors"}, {"sha": "5de2ada5a41c7de9caeb3732e0b516a80a8cde3e", "filename": "tests/ui/missing-doc.rs", "status": "modified", "additions": 11, "deletions": 25, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmissing-doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmissing-doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing-doc.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n /* This file incorporates work covered by the following copyright and\n  * permission notice:\n  *   Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n@@ -23,17 +20,14 @@\n  *   except according to those terms.\n  */\n \n-\n-\n #![warn(clippy::missing_docs_in_private_items)]\n-\n // When denying at the crate level, be sure to not get random warnings from the\n // injected intrinsics by the compiler.\n #![allow(dead_code)]\n #![feature(associated_type_defaults)]\n \n //! Some garbage docs for the crate here\n-#![doc=\"More garbage\"]\n+#![doc = \"More garbage\"]\n \n type Typedef = String;\n pub type PubTypedef = String;\n@@ -61,7 +55,8 @@ pub mod pub_module_no_dox {}\n pub fn foo() {}\n pub fn foo2() {}\n fn foo3() {}\n-#[allow(clippy::missing_docs_in_private_items)] pub fn foo4() {}\n+#[allow(clippy::missing_docs_in_private_items)]\n+pub fn foo4() {}\n \n /// dox\n pub trait A {\n@@ -84,7 +79,7 @@ pub trait C {\n \n #[allow(clippy::missing_docs_in_private_items)]\n pub trait D {\n-    fn dummy(&self) { }\n+    fn dummy(&self) {}\n }\n \n /// dox\n@@ -110,7 +105,8 @@ impl PubFoo {\n     /// dox\n     pub fn foo1() {}\n     fn foo2() {}\n-    #[allow(clippy::missing_docs_in_private_items)] pub fn foo3() {}\n+    #[allow(clippy::missing_docs_in_private_items)]\n+    pub fn foo3() {}\n }\n \n #[allow(clippy::missing_docs_in_private_items)]\n@@ -136,17 +132,12 @@ mod a {\n }\n \n enum Baz {\n-    BazA {\n-        a: isize,\n-        b: isize\n-    },\n-    BarB\n+    BazA { a: isize, b: isize },\n+    BarB,\n }\n \n pub enum PubBaz {\n-    PubBazA {\n-        a: isize,\n-    },\n+    PubBazA { a: isize },\n }\n \n /// dox\n@@ -160,15 +151,12 @@ pub enum PubBaz2 {\n \n #[allow(clippy::missing_docs_in_private_items)]\n pub enum PubBaz3 {\n-    PubBaz3A {\n-        b: isize\n-    },\n+    PubBaz3A { b: isize },\n }\n \n #[doc(hidden)]\n pub fn baz() {}\n \n-\n const FOO: u32 = 0;\n /// dox\n pub const FOO1: u32 = 0;\n@@ -178,7 +166,6 @@ pub const FOO2: u32 = 0;\n pub const FOO3: u32 = 0;\n pub const FOO4: u32 = 0;\n \n-\n static BAR: u32 = 0;\n /// dox\n pub static BAR1: u32 = 0;\n@@ -188,7 +175,6 @@ pub static BAR2: u32 = 0;\n pub static BAR3: u32 = 0;\n pub static BAR4: u32 = 0;\n \n-\n mod internal_impl {\n     /// dox\n     pub fn documented() {}\n@@ -206,9 +192,9 @@ mod internal_impl {\n /// dox\n pub mod public_interface {\n     pub use internal_impl::documented as foo;\n+    pub use internal_impl::globbed::*;\n     pub use internal_impl::undocumented1 as bar;\n     pub use internal_impl::{documented, undocumented2};\n-    pub use internal_impl::globbed::*;\n }\n \n fn main() {}"}, {"sha": "b50305ab9eefcbd28f3abd489388bbea1b3e96b4", "filename": "tests/ui/missing-doc.stderr", "status": "modified", "additions": 104, "deletions": 114, "changes": 218, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmissing-doc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmissing-doc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing-doc.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,267 +1,257 @@\n error: missing documentation for a type alias\n-  --> $DIR/missing-doc.rs:38:1\n+  --> $DIR/missing-doc.rs:32:1\n    |\n-38 | type Typedef = String;\n+32 | type Typedef = String;\n    | ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::missing-docs-in-private-items` implied by `-D warnings`\n \n error: missing documentation for a type alias\n-  --> $DIR/missing-doc.rs:39:1\n+  --> $DIR/missing-doc.rs:33:1\n    |\n-39 | pub type PubTypedef = String;\n+33 | pub type PubTypedef = String;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a struct\n-  --> $DIR/missing-doc.rs:41:1\n+  --> $DIR/missing-doc.rs:35:1\n    |\n-41 | / struct Foo {\n-42 | |     a: isize,\n-43 | |     b: isize,\n-44 | | }\n+35 | / struct Foo {\n+36 | |     a: isize,\n+37 | |     b: isize,\n+38 | | }\n    | |_^\n \n error: missing documentation for a struct field\n-  --> $DIR/missing-doc.rs:42:5\n+  --> $DIR/missing-doc.rs:36:5\n    |\n-42 |     a: isize,\n+36 |     a: isize,\n    |     ^^^^^^^^\n \n error: missing documentation for a struct field\n-  --> $DIR/missing-doc.rs:43:5\n+  --> $DIR/missing-doc.rs:37:5\n    |\n-43 |     b: isize,\n+37 |     b: isize,\n    |     ^^^^^^^^\n \n error: missing documentation for a struct\n-  --> $DIR/missing-doc.rs:46:1\n+  --> $DIR/missing-doc.rs:40:1\n    |\n-46 | / pub struct PubFoo {\n-47 | |     pub a: isize,\n-48 | |     b: isize,\n-49 | | }\n+40 | / pub struct PubFoo {\n+41 | |     pub a: isize,\n+42 | |     b: isize,\n+43 | | }\n    | |_^\n \n error: missing documentation for a struct field\n-  --> $DIR/missing-doc.rs:47:5\n+  --> $DIR/missing-doc.rs:41:5\n    |\n-47 |     pub a: isize,\n+41 |     pub a: isize,\n    |     ^^^^^^^^^^^^\n \n error: missing documentation for a struct field\n-  --> $DIR/missing-doc.rs:48:5\n+  --> $DIR/missing-doc.rs:42:5\n    |\n-48 |     b: isize,\n+42 |     b: isize,\n    |     ^^^^^^^^\n \n error: missing documentation for a module\n-  --> $DIR/missing-doc.rs:57:1\n+  --> $DIR/missing-doc.rs:51:1\n    |\n-57 | mod module_no_dox {}\n+51 | mod module_no_dox {}\n    | ^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a module\n-  --> $DIR/missing-doc.rs:58:1\n+  --> $DIR/missing-doc.rs:52:1\n    |\n-58 | pub mod pub_module_no_dox {}\n+52 | pub mod pub_module_no_dox {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-  --> $DIR/missing-doc.rs:62:1\n+  --> $DIR/missing-doc.rs:56:1\n    |\n-62 | pub fn foo2() {}\n+56 | pub fn foo2() {}\n    | ^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-  --> $DIR/missing-doc.rs:63:1\n+  --> $DIR/missing-doc.rs:57:1\n    |\n-63 | fn foo3() {}\n+57 | fn foo3() {}\n    | ^^^^^^^^^^^^\n \n error: missing documentation for a trait\n-  --> $DIR/missing-doc.rs:80:1\n+  --> $DIR/missing-doc.rs:75:1\n    |\n-80 | / pub trait C {\n-81 | |     fn foo(&self);\n-82 | |     fn foo_with_impl(&self) {}\n-83 | | }\n+75 | / pub trait C {\n+76 | |     fn foo(&self);\n+77 | |     fn foo_with_impl(&self) {}\n+78 | | }\n    | |_^\n \n error: missing documentation for a trait method\n-  --> $DIR/missing-doc.rs:81:5\n+  --> $DIR/missing-doc.rs:76:5\n    |\n-81 |     fn foo(&self);\n+76 |     fn foo(&self);\n    |     ^^^^^^^^^^^^^^\n \n error: missing documentation for a trait method\n-  --> $DIR/missing-doc.rs:82:5\n+  --> $DIR/missing-doc.rs:77:5\n    |\n-82 |     fn foo_with_impl(&self) {}\n+77 |     fn foo_with_impl(&self) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for an associated type\n-  --> $DIR/missing-doc.rs:92:5\n+  --> $DIR/missing-doc.rs:87:5\n    |\n-92 |     type AssociatedType;\n+87 |     type AssociatedType;\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for an associated type\n-  --> $DIR/missing-doc.rs:93:5\n+  --> $DIR/missing-doc.rs:88:5\n    |\n-93 |     type AssociatedTypeDef = Self;\n+88 |     type AssociatedTypeDef = Self;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a method\n-   --> $DIR/missing-doc.rs:104:5\n-    |\n-104 |     pub fn foo() {}\n-    |     ^^^^^^^^^^^^^^^\n+  --> $DIR/missing-doc.rs:99:5\n+   |\n+99 |     pub fn foo() {}\n+   |     ^^^^^^^^^^^^^^^\n \n error: missing documentation for a method\n-   --> $DIR/missing-doc.rs:105:5\n+   --> $DIR/missing-doc.rs:100:5\n     |\n-105 |     fn bar() {}\n+100 |     fn bar() {}\n     |     ^^^^^^^^^^^\n \n error: missing documentation for a method\n-   --> $DIR/missing-doc.rs:109:5\n+   --> $DIR/missing-doc.rs:104:5\n     |\n-109 |     pub fn foo() {}\n+104 |     pub fn foo() {}\n     |     ^^^^^^^^^^^^^^^\n \n error: missing documentation for a method\n-   --> $DIR/missing-doc.rs:112:5\n+   --> $DIR/missing-doc.rs:107:5\n     |\n-112 |     fn foo2() {}\n+107 |     fn foo2() {}\n     |     ^^^^^^^^^^^^\n \n error: missing documentation for an enum\n-   --> $DIR/missing-doc.rs:138:1\n+   --> $DIR/missing-doc.rs:134:1\n     |\n-138 | / enum Baz {\n-139 | |     BazA {\n-140 | |         a: isize,\n-141 | |         b: isize\n-142 | |     },\n-143 | |     BarB\n-144 | | }\n+134 | / enum Baz {\n+135 | |     BazA { a: isize, b: isize },\n+136 | |     BarB,\n+137 | | }\n     | |_^\n \n error: missing documentation for a variant\n-   --> $DIR/missing-doc.rs:139:5\n+   --> $DIR/missing-doc.rs:135:5\n     |\n-139 | /     BazA {\n-140 | |         a: isize,\n-141 | |         b: isize\n-142 | |     },\n-    | |_____^\n+135 |     BazA { a: isize, b: isize },\n+    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a struct field\n-   --> $DIR/missing-doc.rs:140:9\n+   --> $DIR/missing-doc.rs:135:12\n     |\n-140 |         a: isize,\n-    |         ^^^^^^^^\n+135 |     BazA { a: isize, b: isize },\n+    |            ^^^^^^^^\n \n error: missing documentation for a struct field\n-   --> $DIR/missing-doc.rs:141:9\n+   --> $DIR/missing-doc.rs:135:22\n     |\n-141 |         b: isize\n-    |         ^^^^^^^^\n+135 |     BazA { a: isize, b: isize },\n+    |                      ^^^^^^^^\n \n error: missing documentation for a variant\n-   --> $DIR/missing-doc.rs:143:5\n+   --> $DIR/missing-doc.rs:136:5\n     |\n-143 |     BarB\n+136 |     BarB,\n     |     ^^^^\n \n error: missing documentation for an enum\n-   --> $DIR/missing-doc.rs:146:1\n+   --> $DIR/missing-doc.rs:139:1\n     |\n-146 | / pub enum PubBaz {\n-147 | |     PubBazA {\n-148 | |         a: isize,\n-149 | |     },\n-150 | | }\n+139 | / pub enum PubBaz {\n+140 | |     PubBazA { a: isize },\n+141 | | }\n     | |_^\n \n error: missing documentation for a variant\n-   --> $DIR/missing-doc.rs:147:5\n+   --> $DIR/missing-doc.rs:140:5\n     |\n-147 | /     PubBazA {\n-148 | |         a: isize,\n-149 | |     },\n-    | |_____^\n+140 |     PubBazA { a: isize },\n+    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a struct field\n-   --> $DIR/missing-doc.rs:148:9\n+   --> $DIR/missing-doc.rs:140:15\n     |\n-148 |         a: isize,\n-    |         ^^^^^^^^\n+140 |     PubBazA { a: isize },\n+    |               ^^^^^^^^\n \n error: missing documentation for a constant\n-   --> $DIR/missing-doc.rs:172:1\n+   --> $DIR/missing-doc.rs:160:1\n     |\n-172 | const FOO: u32 = 0;\n+160 | const FOO: u32 = 0;\n     | ^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a constant\n-   --> $DIR/missing-doc.rs:179:1\n+   --> $DIR/missing-doc.rs:167:1\n     |\n-179 | pub const FOO4: u32 = 0;\n+167 | pub const FOO4: u32 = 0;\n     | ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a static\n-   --> $DIR/missing-doc.rs:182:1\n+   --> $DIR/missing-doc.rs:169:1\n     |\n-182 | static BAR: u32 = 0;\n+169 | static BAR: u32 = 0;\n     | ^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a static\n-   --> $DIR/missing-doc.rs:189:1\n+   --> $DIR/missing-doc.rs:176:1\n     |\n-189 | pub static BAR4: u32 = 0;\n+176 | pub static BAR4: u32 = 0;\n     | ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a module\n-   --> $DIR/missing-doc.rs:192:1\n+   --> $DIR/missing-doc.rs:178:1\n     |\n-192 | / mod internal_impl {\n-193 | |     /// dox\n-194 | |     pub fn documented() {}\n-195 | |     pub fn undocumented1() {}\n+178 | / mod internal_impl {\n+179 | |     /// dox\n+180 | |     pub fn documented() {}\n+181 | |     pub fn undocumented1() {}\n ...   |\n-204 | |     }\n-205 | | }\n+190 | |     }\n+191 | | }\n     | |_^\n \n error: missing documentation for a function\n-   --> $DIR/missing-doc.rs:195:5\n+   --> $DIR/missing-doc.rs:181:5\n     |\n-195 |     pub fn undocumented1() {}\n+181 |     pub fn undocumented1() {}\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-   --> $DIR/missing-doc.rs:196:5\n+   --> $DIR/missing-doc.rs:182:5\n     |\n-196 |     pub fn undocumented2() {}\n+182 |     pub fn undocumented2() {}\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-   --> $DIR/missing-doc.rs:197:5\n+   --> $DIR/missing-doc.rs:183:5\n     |\n-197 |     fn undocumented3() {}\n+183 |     fn undocumented3() {}\n     |     ^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-   --> $DIR/missing-doc.rs:202:9\n+   --> $DIR/missing-doc.rs:188:9\n     |\n-202 |         pub fn also_undocumented1() {}\n+188 |         pub fn also_undocumented1() {}\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: missing documentation for a function\n-   --> $DIR/missing-doc.rs:203:9\n+   --> $DIR/missing-doc.rs:189:9\n     |\n-203 |         fn also_undocumented2() {}\n+189 |         fn also_undocumented2() {}\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 39 previous errors"}, {"sha": "c9e946e14e6564114082da51bdcb1576714d9a00", "filename": "tests/ui/missing_inline.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmissing_inline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmissing_inline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing_inline.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n /* This file incorporates work covered by the following copyright and\n  * permission notice:\n  *   Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n@@ -32,7 +29,7 @@ type Typedef = String;\n pub type PubTypedef = String;\n \n struct Foo {} // ok\n-pub struct PubFoo { } // ok\n+pub struct PubFoo {} // ok\n enum FooE {} // ok\n pub enum PubFooE {} // ok\n \n@@ -41,8 +38,10 @@ pub mod pub_module {} // ok\n \n fn foo() {}\n pub fn pub_foo() {} // missing #[inline]\n-#[inline] pub fn pub_foo_inline() {} // ok\n-#[inline(always)] pub fn pub_foo_inline_always() {} // ok\n+#[inline]\n+pub fn pub_foo_inline() {} // ok\n+#[inline(always)]\n+pub fn pub_foo_inline_always() {} // ok\n \n #[allow(clippy::missing_inline_in_public_items)]\n pub fn pub_foo_no_inline() {}\n@@ -52,11 +51,11 @@ trait Bar {\n     fn Bar_b() {} // ok\n }\n \n-\n pub trait PubBar {\n     fn PubBar_a(); // ok\n     fn PubBar_b() {} // missing #[inline]\n-    #[inline] fn PubBar_c() {} // ok\n+    #[inline]\n+    fn PubBar_c() {} // ok\n }\n \n // none of these need inline because Foo is not exported"}, {"sha": "132285a1eaae7979cab5fef32907f07dc5a0249f", "filename": "tests/ui/missing_inline.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmissing_inline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmissing_inline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing_inline.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,39 +1,39 @@\n error: missing `#[inline]` for a function\n-  --> $DIR/missing_inline.rs:43:1\n+  --> $DIR/missing_inline.rs:40:1\n    |\n-43 | pub fn pub_foo() {} // missing #[inline]\n+40 | pub fn pub_foo() {} // missing #[inline]\n    | ^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::missing-inline-in-public-items` implied by `-D warnings`\n \n error: missing `#[inline]` for a default trait method\n-  --> $DIR/missing_inline.rs:58:5\n+  --> $DIR/missing_inline.rs:56:5\n    |\n-58 |     fn PubBar_b() {} // missing #[inline]\n+56 |     fn PubBar_b() {} // missing #[inline]\n    |     ^^^^^^^^^^^^^^^^\n \n error: missing `#[inline]` for a method\n-  --> $DIR/missing_inline.rs:71:5\n+  --> $DIR/missing_inline.rs:70:5\n    |\n-71 |     fn PubBar_a() {} // missing #[inline]\n+70 |     fn PubBar_a() {} // missing #[inline]\n    |     ^^^^^^^^^^^^^^^^\n \n error: missing `#[inline]` for a method\n-  --> $DIR/missing_inline.rs:72:5\n+  --> $DIR/missing_inline.rs:71:5\n    |\n-72 |     fn PubBar_b() {} // missing #[inline]\n+71 |     fn PubBar_b() {} // missing #[inline]\n    |     ^^^^^^^^^^^^^^^^\n \n error: missing `#[inline]` for a method\n-  --> $DIR/missing_inline.rs:73:5\n+  --> $DIR/missing_inline.rs:72:5\n    |\n-73 |     fn PubBar_c() {} // missing #[inline]\n+72 |     fn PubBar_c() {} // missing #[inline]\n    |     ^^^^^^^^^^^^^^^^\n \n error: missing `#[inline]` for a method\n-  --> $DIR/missing_inline.rs:83:5\n+  --> $DIR/missing_inline.rs:82:5\n    |\n-83 |     pub fn PubFooImpl() {} // missing #[inline]\n+82 |     pub fn PubFooImpl() {} // missing #[inline]\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 6 previous errors"}, {"sha": "730055931c4a618fd37ad716dacdd58eb2e7c79b", "filename": "tests/ui/module_inception.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmodule_inception.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmodule_inception.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmodule_inception.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![warn(clippy::module_inception)]\n \n mod foo {\n@@ -27,8 +24,7 @@ mod foo {\n // No warning. See <https://github.com/rust-lang/rust-clippy/issues/1220>.\n mod bar {\n     #[allow(clippy::module_inception)]\n-    mod bar {\n-    }\n+    mod bar {}\n }\n \n fn main() {}"}, {"sha": "bf891aa4578db51479a22e67266ff2828186a683", "filename": "tests/ui/module_inception.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmodule_inception.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmodule_inception.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmodule_inception.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,19 +1,19 @@\n error: module has the same name as its containing module\n-  --> $DIR/module_inception.rs:17:9\n+  --> $DIR/module_inception.rs:14:9\n    |\n-17 | /         mod bar {\n-18 | |             mod foo {}\n-19 | |         }\n+14 | /         mod bar {\n+15 | |             mod foo {}\n+16 | |         }\n    | |_________^\n    |\n    = note: `-D clippy::module-inception` implied by `-D warnings`\n \n error: module has the same name as its containing module\n-  --> $DIR/module_inception.rs:22:5\n+  --> $DIR/module_inception.rs:19:5\n    |\n-22 | /     mod foo {\n-23 | |         mod bar {}\n-24 | |     }\n+19 | /     mod foo {\n+20 | |         mod bar {}\n+21 | |     }\n    | |_____^\n \n error: aborting due to 2 previous errors"}, {"sha": "f7c0c16abade7bee868d280def3c5a05899b9cea", "filename": "tests/ui/modulo_one.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmodulo_one.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmodulo_one.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmodulo_one.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![warn(clippy::modulo_one)]\n #![allow(clippy::no_effect, clippy::unnecessary_operation)]\n "}, {"sha": "e4d20c5c63ca6f5c71f68dd89f5199dc934f8304", "filename": "tests/ui/modulo_one.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmodulo_one.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmodulo_one.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmodulo_one.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,7 +1,7 @@\n error: any number modulo 1 will be 0\n-  --> $DIR/modulo_one.rs:17:5\n+  --> $DIR/modulo_one.rs:14:5\n    |\n-17 |     10 % 1;\n+14 |     10 % 1;\n    |     ^^^^^^\n    |\n    = note: `-D clippy::modulo-one` implied by `-D warnings`"}, {"sha": "8a9da42083dfa9cf3ad5a9fb727776683b702025", "filename": "tests/ui/mut_from_ref.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmut_from_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmut_from_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmut_from_ref.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![allow(unused, clippy::trivially_copy_pass_by_ref)]\n #![warn(clippy::mut_from_ref)]\n "}, {"sha": "db0f05a7fa709589fe8faec111e86a4e1bf30f8d", "filename": "tests/ui/mut_from_ref.stderr", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmut_from_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmut_from_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmut_from_ref.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,62 +1,62 @@\n error: mutable borrow from immutable input(s)\n-  --> $DIR/mut_from_ref.rs:19:39\n+  --> $DIR/mut_from_ref.rs:16:39\n    |\n-19 |     fn this_wont_hurt_a_bit(&self) -> &mut Foo {\n+16 |     fn this_wont_hurt_a_bit(&self) -> &mut Foo {\n    |                                       ^^^^^^^^\n    |\n    = note: `-D clippy::mut-from-ref` implied by `-D warnings`\n note: immutable borrow here\n-  --> $DIR/mut_from_ref.rs:19:29\n+  --> $DIR/mut_from_ref.rs:16:29\n    |\n-19 |     fn this_wont_hurt_a_bit(&self) -> &mut Foo {\n+16 |     fn this_wont_hurt_a_bit(&self) -> &mut Foo {\n    |                             ^^^^^\n \n error: mutable borrow from immutable input(s)\n-  --> $DIR/mut_from_ref.rs:25:25\n+  --> $DIR/mut_from_ref.rs:22:25\n    |\n-25 |     fn ouch(x: &Foo) -> &mut Foo;\n+22 |     fn ouch(x: &Foo) -> &mut Foo;\n    |                         ^^^^^^^^\n    |\n note: immutable borrow here\n-  --> $DIR/mut_from_ref.rs:25:16\n+  --> $DIR/mut_from_ref.rs:22:16\n    |\n-25 |     fn ouch(x: &Foo) -> &mut Foo;\n+22 |     fn ouch(x: &Foo) -> &mut Foo;\n    |                ^^^^\n \n error: mutable borrow from immutable input(s)\n-  --> $DIR/mut_from_ref.rs:34:21\n+  --> $DIR/mut_from_ref.rs:31:21\n    |\n-34 | fn fail(x: &u32) -> &mut u16 {\n+31 | fn fail(x: &u32) -> &mut u16 {\n    |                     ^^^^^^^^\n    |\n note: immutable borrow here\n-  --> $DIR/mut_from_ref.rs:34:12\n+  --> $DIR/mut_from_ref.rs:31:12\n    |\n-34 | fn fail(x: &u32) -> &mut u16 {\n+31 | fn fail(x: &u32) -> &mut u16 {\n    |            ^^^^\n \n error: mutable borrow from immutable input(s)\n-  --> $DIR/mut_from_ref.rs:38:50\n+  --> $DIR/mut_from_ref.rs:35:50\n    |\n-38 | fn fail_lifetime<'a>(x: &'a u32, y: &mut u32) -> &'a mut u32 {\n+35 | fn fail_lifetime<'a>(x: &'a u32, y: &mut u32) -> &'a mut u32 {\n    |                                                  ^^^^^^^^^^^\n    |\n note: immutable borrow here\n-  --> $DIR/mut_from_ref.rs:38:25\n+  --> $DIR/mut_from_ref.rs:35:25\n    |\n-38 | fn fail_lifetime<'a>(x: &'a u32, y: &mut u32) -> &'a mut u32 {\n+35 | fn fail_lifetime<'a>(x: &'a u32, y: &mut u32) -> &'a mut u32 {\n    |                         ^^^^^^^\n \n error: mutable borrow from immutable input(s)\n-  --> $DIR/mut_from_ref.rs:42:67\n+  --> $DIR/mut_from_ref.rs:39:67\n    |\n-42 | fn fail_double<'a, 'b>(x: &'a u32, y: &'a u32, z: &'b mut u32) -> &'a mut u32 {\n+39 | fn fail_double<'a, 'b>(x: &'a u32, y: &'a u32, z: &'b mut u32) -> &'a mut u32 {\n    |                                                                   ^^^^^^^^^^^\n    |\n note: immutable borrow here\n-  --> $DIR/mut_from_ref.rs:42:27\n+  --> $DIR/mut_from_ref.rs:39:27\n    |\n-42 | fn fail_double<'a, 'b>(x: &'a u32, y: &'a u32, z: &'b mut u32) -> &'a mut u32 {\n+39 | fn fail_double<'a, 'b>(x: &'a u32, y: &'a u32, z: &'b mut u32) -> &'a mut u32 {\n    |                           ^^^^^^^     ^^^^^^^\n \n error: aborting due to 5 previous errors"}, {"sha": "e8239007cb3c41b531fb783effe6d674ba9c8d93", "filename": "tests/ui/mut_mut.rs", "status": "modified", "additions": 8, "deletions": 13, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmut_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmut_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmut_mut.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,26 +7,21 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #![allow(unused, clippy::no_effect, clippy::unnecessary_operation)]\n #![warn(clippy::mut_mut)]\n \n-\n-\n-\n-fn fun(x : &mut &mut u32) -> bool {\n+fn fun(x: &mut &mut u32) -> bool {\n     **x > 0\n }\n \n-fn less_fun(x : *mut *mut u32) {\n-  let y = x;\n+fn less_fun(x: *mut *mut u32) {\n+    let y = x;\n }\n \n macro_rules! mut_ptr {\n-    ($p:expr) => { &mut $p }\n+    ($p:expr) => {\n+        &mut $p\n+    };\n }\n \n #[allow(unused_mut, unused_variables)]\n@@ -37,12 +32,12 @@ fn main() {\n     }\n \n     if fun(x) {\n-        let y : &mut &mut u32 = &mut &mut 2;\n+        let y: &mut &mut u32 = &mut &mut 2;\n         **y + **x;\n     }\n \n     if fun(x) {\n-        let y : &mut &mut &mut u32 = &mut &mut &mut 2;\n+        let y: &mut &mut &mut u32 = &mut &mut &mut 2;\n         ***y + **x;\n     }\n "}, {"sha": "626a309a6a923f95c5e544e42a9b6e0b9881c6af", "filename": "tests/ui/mut_mut.stderr", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmut_mut.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmut_mut.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmut_mut.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,61 +1,61 @@\n error: generally you want to avoid `&mut &mut _` if possible\n-  --> $DIR/mut_mut.rs:20:12\n+  --> $DIR/mut_mut.rs:13:11\n    |\n-20 | fn fun(x : &mut &mut u32) -> bool {\n-   |            ^^^^^^^^^^^^^\n+13 | fn fun(x: &mut &mut u32) -> bool {\n+   |           ^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::mut-mut` implied by `-D warnings`\n \n error: generally you want to avoid `&mut &mut _` if possible\n-  --> $DIR/mut_mut.rs:34:17\n+  --> $DIR/mut_mut.rs:29:17\n    |\n-34 |     let mut x = &mut &mut 1u32;\n+29 |     let mut x = &mut &mut 1u32;\n    |                 ^^^^^^^^^^^^^^\n \n error: generally you want to avoid `&mut &mut _` if possible\n-  --> $DIR/mut_mut.rs:29:20\n+  --> $DIR/mut_mut.rs:23:9\n    |\n-29 |     ($p:expr) => { &mut $p }\n-   |                    ^^^^^^^\n+23 |         &mut $p\n+   |         ^^^^^^^\n ...\n-49 |     let mut z = mut_ptr!(&mut 3u32);\n+44 |     let mut z = mut_ptr!(&mut 3u32);\n    |                 ------------------- in this macro invocation\n \n error: this expression mutably borrows a mutable reference. Consider reborrowing\n-  --> $DIR/mut_mut.rs:36:21\n+  --> $DIR/mut_mut.rs:31:21\n    |\n-36 |         let mut y = &mut x;\n+31 |         let mut y = &mut x;\n    |                     ^^^^^^\n \n error: generally you want to avoid `&mut &mut _` if possible\n-  --> $DIR/mut_mut.rs:40:33\n+  --> $DIR/mut_mut.rs:35:32\n    |\n-40 |         let y : &mut &mut u32 = &mut &mut 2;\n-   |                                 ^^^^^^^^^^^\n+35 |         let y: &mut &mut u32 = &mut &mut 2;\n+   |                                ^^^^^^^^^^^\n \n error: generally you want to avoid `&mut &mut _` if possible\n-  --> $DIR/mut_mut.rs:40:17\n+  --> $DIR/mut_mut.rs:35:16\n    |\n-40 |         let y : &mut &mut u32 = &mut &mut 2;\n-   |                 ^^^^^^^^^^^^^\n+35 |         let y: &mut &mut u32 = &mut &mut 2;\n+   |                ^^^^^^^^^^^^^\n \n error: generally you want to avoid `&mut &mut _` if possible\n-  --> $DIR/mut_mut.rs:45:38\n+  --> $DIR/mut_mut.rs:40:37\n    |\n-45 |         let y : &mut &mut &mut u32 = &mut &mut &mut 2;\n-   |                                      ^^^^^^^^^^^^^^^^\n+40 |         let y: &mut &mut &mut u32 = &mut &mut &mut 2;\n+   |                                     ^^^^^^^^^^^^^^^^\n \n error: generally you want to avoid `&mut &mut _` if possible\n-  --> $DIR/mut_mut.rs:45:17\n+  --> $DIR/mut_mut.rs:40:16\n    |\n-45 |         let y : &mut &mut &mut u32 = &mut &mut &mut 2;\n-   |                 ^^^^^^^^^^^^^^^^^^\n+40 |         let y: &mut &mut &mut u32 = &mut &mut &mut 2;\n+   |                ^^^^^^^^^^^^^^^^^^\n \n error: generally you want to avoid `&mut &mut _` if possible\n-  --> $DIR/mut_mut.rs:45:22\n+  --> $DIR/mut_mut.rs:40:21\n    |\n-45 |         let y : &mut &mut &mut u32 = &mut &mut &mut 2;\n-   |                      ^^^^^^^^^^^^^\n+40 |         let y: &mut &mut &mut u32 = &mut &mut &mut 2;\n+   |                     ^^^^^^^^^^^^^\n \n error: aborting due to 9 previous errors\n "}, {"sha": "23dddcdd158da2595d90e8301e19d15718eabc13", "filename": "tests/ui/mut_range_bound.rs", "status": "modified", "additions": 18, "deletions": 12, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmut_range_bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmut_range_bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmut_range_bound.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,10 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #![allow(unused)]\n \n fn main() {\n@@ -25,42 +21,52 @@ fn main() {\n \n fn mut_range_bound_upper() {\n     let mut m = 4;\n-    for i in 0..m { m = 5; } // warning\n+    for i in 0..m {\n+        m = 5;\n+    } // warning\n }\n \n fn mut_range_bound_lower() {\n     let mut m = 4;\n-    for i in m..10 { m *= 2; } // warning\n+    for i in m..10 {\n+        m *= 2;\n+    } // warning\n }\n \n fn mut_range_bound_both() {\n     let mut m = 4;\n     let mut n = 6;\n-    for i in m..n { m = 5; n = 7; } // warning (1 for each mutated bound)\n+    for i in m..n {\n+        m = 5;\n+        n = 7;\n+    } // warning (1 for each mutated bound)\n }\n \n fn mut_range_bound_no_mutation() {\n     let mut m = 4;\n-    for i in 0..m { continue; } // no warning\n+    for i in 0..m {\n+        continue;\n+    } // no warning\n }\n \n fn mut_borrow_range_bound() {\n     let mut m = 4;\n     for i in 0..m {\n-        let n = &mut m;  // warning\n+        let n = &mut m; // warning\n         *n += 1;\n     }\n }\n \n fn immut_borrow_range_bound() {\n     let mut m = 4;\n     for i in 0..m {\n-        let n = &m;   // should be no warning?\n+        let n = &m; // should be no warning?\n     }\n }\n \n-\n fn immut_range_bound() {\n     let m = 4;\n-    for i in 0..m { continue; } // no warning\n+    for i in 0..m {\n+        continue;\n+    } // no warning\n }"}, {"sha": "87537d77f44413708422ad7fff4f25da9121d68b", "filename": "tests/ui/mut_range_bound.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmut_range_bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmut_range_bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmut_range_bound.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,33 +1,33 @@\n error: attempt to mutate range bound within loop; note that the range of the loop is unchanged\n-  --> $DIR/mut_range_bound.rs:28:21\n+  --> $DIR/mut_range_bound.rs:25:9\n    |\n-28 |     for i in 0..m { m = 5; } // warning\n-   |                     ^^^^^\n+25 |         m = 5;\n+   |         ^^^^^\n    |\n    = note: `-D clippy::mut-range-bound` implied by `-D warnings`\n \n error: attempt to mutate range bound within loop; note that the range of the loop is unchanged\n-  --> $DIR/mut_range_bound.rs:33:22\n+  --> $DIR/mut_range_bound.rs:32:9\n    |\n-33 |     for i in m..10 { m *= 2; } // warning\n-   |                      ^^^^^^\n+32 |         m *= 2;\n+   |         ^^^^^^\n \n error: attempt to mutate range bound within loop; note that the range of the loop is unchanged\n-  --> $DIR/mut_range_bound.rs:39:21\n+  --> $DIR/mut_range_bound.rs:40:9\n    |\n-39 |     for i in m..n { m = 5; n = 7; } // warning (1 for each mutated bound)\n-   |                     ^^^^^\n+40 |         m = 5;\n+   |         ^^^^^\n \n error: attempt to mutate range bound within loop; note that the range of the loop is unchanged\n-  --> $DIR/mut_range_bound.rs:39:28\n+  --> $DIR/mut_range_bound.rs:41:9\n    |\n-39 |     for i in m..n { m = 5; n = 7; } // warning (1 for each mutated bound)\n-   |                            ^^^^^\n+41 |         n = 7;\n+   |         ^^^^^\n \n error: attempt to mutate range bound within loop; note that the range of the loop is unchanged\n-  --> $DIR/mut_range_bound.rs:50:22\n+  --> $DIR/mut_range_bound.rs:55:22\n    |\n-50 |         let n = &mut m;  // warning\n+55 |         let n = &mut m; // warning\n    |                      ^\n \n error: aborting due to 5 previous errors"}, {"sha": "882ed7e1dd326eedf4bb7a0a1d942fa0a5d7fbb1", "filename": "tests/ui/mut_reference.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmut_reference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmut_reference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmut_reference.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,10 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #![allow(unused_variables, clippy::trivially_copy_pass_by_ref)]\n \n fn takes_an_immutable_reference(a: &i32) {}\n@@ -19,11 +15,9 @@ fn takes_a_mutable_reference(a: &mut i32) {}\n struct MyStruct;\n \n impl MyStruct {\n-    fn takes_an_immutable_reference(&self, a: &i32) {\n-    }\n+    fn takes_an_immutable_reference(&self, a: &i32) {}\n \n-    fn takes_a_mutable_reference(&self, a: &mut i32) {\n-    }\n+    fn takes_a_mutable_reference(&self, a: &mut i32) {}\n }\n \n #[warn(clippy::unnecessary_mut_passed)]\n@@ -37,7 +31,6 @@ fn main() {\n     let my_struct = MyStruct;\n     my_struct.takes_an_immutable_reference(&mut 42);\n \n-\n     // No error\n \n     // Functions"}, {"sha": "1664c1dffed6331ed4776ca7d0ccf9b1b5be0d3c", "filename": "tests/ui/mut_reference.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmut_reference.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmut_reference.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmut_reference.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,21 +1,21 @@\n error: The function/method `takes_an_immutable_reference` doesn't need a mutable reference\n-  --> $DIR/mut_reference.rs:32:34\n+  --> $DIR/mut_reference.rs:26:34\n    |\n-32 |     takes_an_immutable_reference(&mut 42);\n+26 |     takes_an_immutable_reference(&mut 42);\n    |                                  ^^^^^^^\n    |\n    = note: `-D clippy::unnecessary-mut-passed` implied by `-D warnings`\n \n error: The function/method `as_ptr` doesn't need a mutable reference\n-  --> $DIR/mut_reference.rs:34:12\n+  --> $DIR/mut_reference.rs:28:12\n    |\n-34 |     as_ptr(&mut 42);\n+28 |     as_ptr(&mut 42);\n    |            ^^^^^^^\n \n error: The function/method `takes_an_immutable_reference` doesn't need a mutable reference\n-  --> $DIR/mut_reference.rs:38:44\n+  --> $DIR/mut_reference.rs:32:44\n    |\n-38 |     my_struct.takes_an_immutable_reference(&mut 42);\n+32 |     my_struct.takes_an_immutable_reference(&mut 42);\n    |                                            ^^^^^^^\n \n error: aborting due to 3 previous errors"}, {"sha": "5c4e180408cfbacd3c0c6a7374ab1ac21e1b8ff7", "filename": "tests/ui/mutex_atomic.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmutex_atomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmutex_atomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmutex_atomic.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,10 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #![warn(clippy::all)]\n #![warn(clippy::mutex_integer)]\n "}, {"sha": "d6f4f03c32308ae2e5dd4d79d427767a4cc9d773", "filename": "tests/ui/mutex_atomic.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmutex_atomic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fmutex_atomic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmutex_atomic.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,47 +1,47 @@\n error: Consider using an AtomicBool instead of a Mutex here. If you just want the locking behaviour and not the internal type, consider using Mutex<()>.\n-  --> $DIR/mutex_atomic.rs:19:5\n+  --> $DIR/mutex_atomic.rs:15:5\n    |\n-19 |     Mutex::new(true);\n+15 |     Mutex::new(true);\n    |     ^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::mutex-atomic` implied by `-D warnings`\n \n error: Consider using an AtomicUsize instead of a Mutex here. If you just want the locking behaviour and not the internal type, consider using Mutex<()>.\n-  --> $DIR/mutex_atomic.rs:20:5\n+  --> $DIR/mutex_atomic.rs:16:5\n    |\n-20 |     Mutex::new(5usize);\n+16 |     Mutex::new(5usize);\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: Consider using an AtomicIsize instead of a Mutex here. If you just want the locking behaviour and not the internal type, consider using Mutex<()>.\n-  --> $DIR/mutex_atomic.rs:21:5\n+  --> $DIR/mutex_atomic.rs:17:5\n    |\n-21 |     Mutex::new(9isize);\n+17 |     Mutex::new(9isize);\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: Consider using an AtomicPtr instead of a Mutex here. If you just want the locking behaviour and not the internal type, consider using Mutex<()>.\n-  --> $DIR/mutex_atomic.rs:23:5\n+  --> $DIR/mutex_atomic.rs:19:5\n    |\n-23 |     Mutex::new(&x as *const u32);\n+19 |     Mutex::new(&x as *const u32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: Consider using an AtomicPtr instead of a Mutex here. If you just want the locking behaviour and not the internal type, consider using Mutex<()>.\n-  --> $DIR/mutex_atomic.rs:24:5\n+  --> $DIR/mutex_atomic.rs:20:5\n    |\n-24 |     Mutex::new(&mut x as *mut u32);\n+20 |     Mutex::new(&mut x as *mut u32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: Consider using an AtomicUsize instead of a Mutex here. If you just want the locking behaviour and not the internal type, consider using Mutex<()>.\n-  --> $DIR/mutex_atomic.rs:25:5\n+  --> $DIR/mutex_atomic.rs:21:5\n    |\n-25 |     Mutex::new(0u32);\n+21 |     Mutex::new(0u32);\n    |     ^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::mutex-integer` implied by `-D warnings`\n \n error: Consider using an AtomicIsize instead of a Mutex here. If you just want the locking behaviour and not the internal type, consider using Mutex<()>.\n-  --> $DIR/mutex_atomic.rs:26:5\n+  --> $DIR/mutex_atomic.rs:22:5\n    |\n-26 |     Mutex::new(0i32);\n+22 |     Mutex::new(0i32);\n    |     ^^^^^^^^^^^^^^^^\n \n error: aborting due to 7 previous errors"}, {"sha": "c82f102c294e45a76513343178fd1885e3d773f8", "filename": "tests/ui/needless_bool.rs", "status": "modified", "additions": 65, "deletions": 19, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneedless_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneedless_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_bool.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,7 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n #![warn(clippy::needless_bool)]\n \n use std::cell::Cell;\n@@ -38,12 +37,36 @@ macro_rules! bool_comparison_trigger {\n fn main() {\n     let x = true;\n     let y = false;\n-    if x { true } else { true };\n-    if x { false } else { false };\n-    if x { true } else { false };\n-    if x { false } else { true };\n-    if x && y { false } else { true };\n-    if x { x } else { false }; // would also be questionable, but we don't catch this yet\n+    if x {\n+        true\n+    } else {\n+        true\n+    };\n+    if x {\n+        false\n+    } else {\n+        false\n+    };\n+    if x {\n+        true\n+    } else {\n+        false\n+    };\n+    if x {\n+        false\n+    } else {\n+        true\n+    };\n+    if x && y {\n+        false\n+    } else {\n+        true\n+    };\n+    if x {\n+        x\n+    } else {\n+        false\n+    }; // would also be questionable, but we don't catch this yet\n     bool_ret(x);\n     bool_ret2(x);\n     bool_ret3(x);\n@@ -57,50 +80,73 @@ fn main() {\n \n #[allow(clippy::if_same_then_else, clippy::needless_return)]\n fn bool_ret(x: bool) -> bool {\n-    if x { return true } else { return true };\n+    if x {\n+        return true;\n+    } else {\n+        return true;\n+    };\n }\n \n #[allow(clippy::if_same_then_else, clippy::needless_return)]\n fn bool_ret2(x: bool) -> bool {\n-    if x { return false } else { return false };\n+    if x {\n+        return false;\n+    } else {\n+        return false;\n+    };\n }\n \n #[allow(clippy::needless_return)]\n fn bool_ret3(x: bool) -> bool {\n-    if x { return true } else { return false };\n+    if x {\n+        return true;\n+    } else {\n+        return false;\n+    };\n }\n \n #[allow(clippy::needless_return)]\n fn bool_ret5(x: bool, y: bool) -> bool {\n-    if x && y { return true } else { return false };\n+    if x && y {\n+        return true;\n+    } else {\n+        return false;\n+    };\n }\n \n #[allow(clippy::needless_return)]\n fn bool_ret4(x: bool) -> bool {\n-    if x { return false } else { return true };\n+    if x {\n+        return false;\n+    } else {\n+        return true;\n+    };\n }\n \n #[allow(clippy::needless_return)]\n fn bool_ret6(x: bool, y: bool) -> bool {\n-    if x && y { return false } else { return true };\n+    if x && y {\n+        return false;\n+    } else {\n+        return true;\n+    };\n }\n \n fn needless_bool(x: bool) {\n-   if x  == true { };\n+    if x == true {};\n }\n \n fn needless_bool2(x: bool) {\n-   if x  == false { };\n+    if x == false {};\n }\n \n fn needless_bool3(x: bool) {\n-    \n     bool_comparison_trigger! {\n         test_one:   false, false;\n         test_three: false, false;\n         test_two:   true, true;\n     }\n-    \n-    if x == true { };\n-    if x == false { };\n+\n+    if x == true {};\n+    if x == false {};\n }"}, {"sha": "df2f80ffd119caa686924d42a3a56b2e0da9de93", "filename": "tests/ui/needless_bool.stderr", "status": "modified", "additions": 95, "deletions": 51, "changes": 146, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneedless_bool.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneedless_bool.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_bool.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,95 +1,139 @@\n error: this if-then-else expression will always return true\n-  --> $DIR/needless_bool.rs:41:5\n+  --> $DIR/needless_bool.rs:40:5\n    |\n-41 |     if x { true } else { true };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+40 | /     if x {\n+41 | |         true\n+42 | |     } else {\n+43 | |         true\n+44 | |     };\n+   | |_____^\n    |\n    = note: `-D clippy::needless-bool` implied by `-D warnings`\n \n error: this if-then-else expression will always return false\n-  --> $DIR/needless_bool.rs:42:5\n+  --> $DIR/needless_bool.rs:45:5\n    |\n-42 |     if x { false } else { false };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+45 | /     if x {\n+46 | |         false\n+47 | |     } else {\n+48 | |         false\n+49 | |     };\n+   | |_____^\n \n error: this if-then-else expression returns a bool literal\n-  --> $DIR/needless_bool.rs:43:5\n+  --> $DIR/needless_bool.rs:50:5\n    |\n-43 |     if x { true } else { false };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to: `x`\n+50 | /     if x {\n+51 | |         true\n+52 | |     } else {\n+53 | |         false\n+54 | |     };\n+   | |_____^ help: you can reduce it to: `x`\n \n error: this if-then-else expression returns a bool literal\n-  --> $DIR/needless_bool.rs:44:5\n+  --> $DIR/needless_bool.rs:55:5\n    |\n-44 |     if x { false } else { true };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to: `!x`\n+55 | /     if x {\n+56 | |         false\n+57 | |     } else {\n+58 | |         true\n+59 | |     };\n+   | |_____^ help: you can reduce it to: `!x`\n \n error: this if-then-else expression returns a bool literal\n-  --> $DIR/needless_bool.rs:45:5\n+  --> $DIR/needless_bool.rs:60:5\n    |\n-45 |     if x && y { false } else { true };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to: `!(x && y)`\n+60 | /     if x && y {\n+61 | |         false\n+62 | |     } else {\n+63 | |         true\n+64 | |     };\n+   | |_____^ help: you can reduce it to: `!(x && y)`\n \n error: this if-then-else expression will always return true\n-  --> $DIR/needless_bool.rs:60:5\n+  --> $DIR/needless_bool.rs:83:5\n    |\n-60 |     if x { return true } else { return true };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+83 | /     if x {\n+84 | |         return true;\n+85 | |     } else {\n+86 | |         return true;\n+87 | |     };\n+   | |_____^\n \n error: this if-then-else expression will always return false\n-  --> $DIR/needless_bool.rs:65:5\n+  --> $DIR/needless_bool.rs:92:5\n    |\n-65 |     if x { return false } else { return false };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+92 | /     if x {\n+93 | |         return false;\n+94 | |     } else {\n+95 | |         return false;\n+96 | |     };\n+   | |_____^\n \n error: this if-then-else expression returns a bool literal\n-  --> $DIR/needless_bool.rs:70:5\n-   |\n-70 |     if x { return true } else { return false };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to: `return x`\n+   --> $DIR/needless_bool.rs:101:5\n+    |\n+101 | /     if x {\n+102 | |         return true;\n+103 | |     } else {\n+104 | |         return false;\n+105 | |     };\n+    | |_____^ help: you can reduce it to: `return x`\n \n error: this if-then-else expression returns a bool literal\n-  --> $DIR/needless_bool.rs:75:5\n-   |\n-75 |     if x && y { return true } else { return false };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to: `return x && y`\n+   --> $DIR/needless_bool.rs:110:5\n+    |\n+110 | /     if x && y {\n+111 | |         return true;\n+112 | |     } else {\n+113 | |         return false;\n+114 | |     };\n+    | |_____^ help: you can reduce it to: `return x && y`\n \n error: this if-then-else expression returns a bool literal\n-  --> $DIR/needless_bool.rs:80:5\n-   |\n-80 |     if x { return false } else { return true };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to: `return !x`\n+   --> $DIR/needless_bool.rs:119:5\n+    |\n+119 | /     if x {\n+120 | |         return false;\n+121 | |     } else {\n+122 | |         return true;\n+123 | |     };\n+    | |_____^ help: you can reduce it to: `return !x`\n \n error: this if-then-else expression returns a bool literal\n-  --> $DIR/needless_bool.rs:85:5\n-   |\n-85 |     if x && y { return false } else { return true };\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to: `return !(x && y)`\n+   --> $DIR/needless_bool.rs:128:5\n+    |\n+128 | /     if x && y {\n+129 | |         return false;\n+130 | |     } else {\n+131 | |         return true;\n+132 | |     };\n+    | |_____^ help: you can reduce it to: `return !(x && y)`\n \n error: equality checks against true are unnecessary\n-  --> $DIR/needless_bool.rs:89:7\n-   |\n-89 |    if x  == true { };\n-   |       ^^^^^^^^^^ help: try simplifying it as shown: `x`\n-   |\n-   = note: `-D clippy::bool-comparison` implied by `-D warnings`\n+   --> $DIR/needless_bool.rs:136:8\n+    |\n+136 |     if x == true {};\n+    |        ^^^^^^^^^ help: try simplifying it as shown: `x`\n+    |\n+    = note: `-D clippy::bool-comparison` implied by `-D warnings`\n \n error: equality checks against false can be replaced by a negation\n-  --> $DIR/needless_bool.rs:93:7\n-   |\n-93 |    if x  == false { };\n-   |       ^^^^^^^^^^^ help: try simplifying it as shown: `!x`\n+   --> $DIR/needless_bool.rs:140:8\n+    |\n+140 |     if x == false {};\n+    |        ^^^^^^^^^^ help: try simplifying it as shown: `!x`\n \n error: equality checks against true are unnecessary\n-   --> $DIR/needless_bool.rs:104:8\n+   --> $DIR/needless_bool.rs:150:8\n     |\n-104 |     if x == true { };\n+150 |     if x == true {};\n     |        ^^^^^^^^^ help: try simplifying it as shown: `x`\n \n error: equality checks against false can be replaced by a negation\n-   --> $DIR/needless_bool.rs:105:8\n+   --> $DIR/needless_bool.rs:151:8\n     |\n-105 |     if x == false { };\n+151 |     if x == false {};\n     |        ^^^^^^^^^^ help: try simplifying it as shown: `!x`\n \n error: aborting due to 15 previous errors"}, {"sha": "bfc6e82cb558544c07e55ef8f8dbe704eb7b9ba3", "filename": "tests/ui/needless_borrow.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneedless_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneedless_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrow.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n use std::borrow::Cow;\n \n #[allow(clippy::trivially_copy_pass_by_ref)]\n@@ -41,7 +38,7 @@ fn main() {\n     };\n }\n \n-fn f<T:Copy>(y: &T) -> T {\n+fn f<T: Copy>(y: &T) -> T {\n     *y\n }\n "}, {"sha": "42deedfa869a548f7335dea3f7edd161edfd76d1", "filename": "tests/ui/needless_borrow.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneedless_borrow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneedless_borrow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrow.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,41 +1,41 @@\n error: this expression borrows a reference that is immediately dereferenced by the compiler\n-  --> $DIR/needless_borrow.rs:25:15\n+  --> $DIR/needless_borrow.rs:22:15\n    |\n-25 |     let c = x(&&a);\n+22 |     let c = x(&&a);\n    |               ^^^ help: change this to: `&a`\n    |\n    = note: `-D clippy::needless-borrow` implied by `-D warnings`\n \n error: this pattern creates a reference to a reference\n-  --> $DIR/needless_borrow.rs:32:17\n+  --> $DIR/needless_borrow.rs:29:17\n    |\n-32 |     if let Some(ref cake) = Some(&5) {}\n+29 |     if let Some(ref cake) = Some(&5) {}\n    |                 ^^^^^^^^ help: change this to: `cake`\n \n error: this expression borrows a reference that is immediately dereferenced by the compiler\n-  --> $DIR/needless_borrow.rs:39:15\n+  --> $DIR/needless_borrow.rs:36:15\n    |\n-39 |         46 => &&a,\n+36 |         46 => &&a,\n    |               ^^^ help: change this to: `&a`\n \n error: this pattern takes a reference on something that is being de-referenced\n-  --> $DIR/needless_borrow.rs:61:34\n+  --> $DIR/needless_borrow.rs:58:34\n    |\n-61 |     let _ = v.iter_mut().filter(|&ref a| a.is_empty());\n+58 |     let _ = v.iter_mut().filter(|&ref a| a.is_empty());\n    |                                  ^^^^^^ help: try removing the `&ref` part and just keep: `a`\n    |\n    = note: `-D clippy::needless-borrowed-reference` implied by `-D warnings`\n \n error: this pattern takes a reference on something that is being de-referenced\n-  --> $DIR/needless_borrow.rs:62:30\n+  --> $DIR/needless_borrow.rs:59:30\n    |\n-62 |     let _ = v.iter().filter(|&ref a| a.is_empty());\n+59 |     let _ = v.iter().filter(|&ref a| a.is_empty());\n    |                              ^^^^^^ help: try removing the `&ref` part and just keep: `a`\n \n error: this pattern creates a reference to a reference\n-  --> $DIR/needless_borrow.rs:62:31\n+  --> $DIR/needless_borrow.rs:59:31\n    |\n-62 |     let _ = v.iter().filter(|&ref a| a.is_empty());\n+59 |     let _ = v.iter().filter(|&ref a| a.is_empty());\n    |                               ^^^^^ help: change this to: `a`\n \n error: aborting due to 6 previous errors"}, {"sha": "3897c86f53a6eb1f18756e0814c9422718ca3895", "filename": "tests/ui/needless_borrowed_ref.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneedless_borrowed_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneedless_borrowed_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrowed_ref.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,10 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #[warn(clippy::needless_borrowed_reference)]\n #[allow(unused_variables)]\n fn main() {\n@@ -51,8 +47,6 @@ fn foo(a: &Animal, b: &Animal) {\n     match (a, b) {\n         (&Animal::Cat(v), &ref k) | (&ref k, &Animal::Cat(v)) => (), // lifetime mismatch error if there is no '&ref'\n         //                  ^    and   ^ should *not* be linted\n-        (&Animal::Dog(ref a), &Animal::Dog(_)) => ()\n-        //              ^ should *not* be linted\n+        (&Animal::Dog(ref a), &Animal::Dog(_)) => (), //              ^ should *not* be linted\n     }\n }\n-"}, {"sha": "5ec7b9e4f3e7980336cd1800e4102c04a56a95cf", "filename": "tests/ui/needless_borrowed_ref.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneedless_borrowed_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneedless_borrowed_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrowed_ref.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,27 +1,27 @@\n error: this pattern takes a reference on something that is being de-referenced\n-  --> $DIR/needless_borrowed_ref.rs:18:34\n+  --> $DIR/needless_borrowed_ref.rs:14:34\n    |\n-18 |     let _ = v.iter_mut().filter(|&ref a| a.is_empty());\n+14 |     let _ = v.iter_mut().filter(|&ref a| a.is_empty());\n    |                                  ^^^^^^ help: try removing the `&ref` part and just keep: `a`\n    |\n    = note: `-D clippy::needless-borrowed-reference` implied by `-D warnings`\n \n error: this pattern takes a reference on something that is being de-referenced\n-  --> $DIR/needless_borrowed_ref.rs:23:17\n+  --> $DIR/needless_borrowed_ref.rs:19:17\n    |\n-23 |     if let Some(&ref v) = thingy {\n+19 |     if let Some(&ref v) = thingy {\n    |                 ^^^^^^ help: try removing the `&ref` part and just keep: `v`\n \n error: this pattern takes a reference on something that is being de-referenced\n-  --> $DIR/needless_borrowed_ref.rs:52:27\n+  --> $DIR/needless_borrowed_ref.rs:48:27\n    |\n-52 |         (&Animal::Cat(v), &ref k) | (&ref k, &Animal::Cat(v)) => (), // lifetime mismatch error if there is no '&ref'\n+48 |         (&Animal::Cat(v), &ref k) | (&ref k, &Animal::Cat(v)) => (), // lifetime mismatch error if there is no '&ref'\n    |                           ^^^^^^ help: try removing the `&ref` part and just keep: `k`\n \n error: this pattern takes a reference on something that is being de-referenced\n-  --> $DIR/needless_borrowed_ref.rs:52:38\n+  --> $DIR/needless_borrowed_ref.rs:48:38\n    |\n-52 |         (&Animal::Cat(v), &ref k) | (&ref k, &Animal::Cat(v)) => (), // lifetime mismatch error if there is no '&ref'\n+48 |         (&Animal::Cat(v), &ref k) | (&ref k, &Animal::Cat(v)) => (), // lifetime mismatch error if there is no '&ref'\n    |                                      ^^^^^^ help: try removing the `&ref` part and just keep: `k`\n \n error: aborting due to 4 previous errors"}, {"sha": "df449e3184fe708302648a9fd20a5c772009b55e", "filename": "tests/ui/needless_collect.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneedless_collect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneedless_collect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_collect.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,10 +7,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-use std::collections::{HashMap, HashSet, BTreeSet};\n+use std::collections::{BTreeSet, HashMap, HashSet};\n \n #[warn(clippy::needless_collect)]\n #[allow(unused_variables, clippy::iter_cloned_collect)]"}, {"sha": "39b3aa5470bc3496228dbfbf2a406680ccc25f59", "filename": "tests/ui/needless_collect.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneedless_collect.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneedless_collect.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_collect.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,27 +1,27 @@\n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect.rs:19:28\n+  --> $DIR/needless_collect.rs:16:28\n    |\n-19 |     let len = sample.iter().collect::<Vec<_>>().len();\n+16 |     let len = sample.iter().collect::<Vec<_>>().len();\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `.count()`\n    |\n    = note: `-D clippy::needless-collect` implied by `-D warnings`\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect.rs:20:21\n+  --> $DIR/needless_collect.rs:17:21\n    |\n-20 |     if sample.iter().collect::<Vec<_>>().is_empty() {\n+17 |     if sample.iter().collect::<Vec<_>>().is_empty() {\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `.next().is_none()`\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect.rs:23:27\n+  --> $DIR/needless_collect.rs:20:27\n    |\n-23 |     sample.iter().cloned().collect::<Vec<_>>().contains(&1);\n+20 |     sample.iter().cloned().collect::<Vec<_>>().contains(&1);\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `.any(|&x| x == 1)`\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect.rs:24:34\n+  --> $DIR/needless_collect.rs:21:34\n    |\n-24 |     sample.iter().map(|x| (x, x)).collect::<HashMap<_, _>>().len();\n+21 |     sample.iter().map(|x| (x, x)).collect::<HashMap<_, _>>().len();\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `.count()`\n \n error: aborting due to 4 previous errors"}, {"sha": "6d9b9499dce310ec5b768af8e17fb60ebd5d1af2", "filename": "tests/ui/needless_continue.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneedless_continue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneedless_continue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_continue.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,16 +7,16 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n macro_rules! zero {\n-    ($x:expr) => ($x == 0);\n+    ($x:expr) => {\n+        $x == 0\n+    };\n }\n \n macro_rules! nonzero {\n-    ($x:expr) => (!zero!($x));\n+    ($x:expr) => {\n+        !zero!($x)\n+    };\n }\n \n #[warn(clippy::needless_continue)]\n@@ -27,9 +27,9 @@ fn main() {\n \n         if i % 2 == 0 && i % 3 == 0 {\n             println!(\"{}\", i);\n-            println!(\"{}\", i+1);\n+            println!(\"{}\", i + 1);\n             if i % 5 == 0 {\n-                println!(\"{}\", i+2);\n+                println!(\"{}\", i + 2);\n             }\n             let i = 0;\n             println!(\"bar {} \", i);"}, {"sha": "06f63ee496ee36246e712c33e7bad755874defab", "filename": "tests/ui/needless_continue.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneedless_continue.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneedless_continue.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_continue.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -12,9 +12,9 @@ error: This else block is redundant.\n    = help: Consider dropping the else clause and merging the code that follows (in the loop) with the if block, like so:\n            if i % 2 == 0 && i % 3 == 0 {\n            println!(\"{}\", i);\n-           println!(\"{}\", i+1);\n+           println!(\"{}\", i + 1);\n            if i % 5 == 0 {\n-               println!(\"{}\", i+2);\n+               println!(\"{}\", i + 2);\n            }\n            let i = 0;\n            println!(\"bar {} \", i);"}, {"sha": "ec9df9fb3d3866b2cc089173e379ec5f8dfecbde", "filename": "tests/ui/needless_pass_by_value.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_pass_by_value.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,11 +7,14 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![warn(clippy::needless_pass_by_value)]\n-#![allow(dead_code, clippy::single_match, clippy::redundant_pattern_matching, clippy::many_single_char_names, clippy::option_option)]\n+#![allow(\n+    dead_code,\n+    clippy::single_match,\n+    clippy::redundant_pattern_matching,\n+    clippy::many_single_char_names,\n+    clippy::option_option\n+)]\n \n use std::borrow::Borrow;\n use std::convert::AsRef;\n@@ -92,24 +95,19 @@ struct S<T, U>(T, U);\n \n impl<T: Serialize, U> S<T, U> {\n     fn foo(\n-        self, // taking `self` by value is always allowed\n+        self,\n+        // taking `self` by value is always allowed\n         s: String,\n         t: String,\n     ) -> usize {\n         s.len() + t.capacity()\n     }\n \n-    fn bar(\n-        _t: T, // Ok, since `&T: Serialize` too\n+    fn bar(_t: T // Ok, since `&T: Serialize` too\n     ) {\n     }\n \n-    fn baz(\n-        &self,\n-        _u: U,\n-        _s: Self,\n-    ) {\n-    }\n+    fn baz(&self, _u: U, _s: Self) {}\n }\n \n trait FalsePositive {\n@@ -120,7 +118,9 @@ trait FalsePositive {\n }\n \n // shouldn't warn on extern funcs\n-extern \"C\" fn ext(x: String) -> usize { x.len() }\n+extern \"C\" fn ext(x: String) -> usize {\n+    x.len()\n+}\n \n // whitelist RangeArgument\n fn range<T: ::std::ops::RangeBounds<usize>>(range: T) {"}, {"sha": "e11aa73db2ab4bd1481c6e1ef6427bcd8d61ea6a", "filename": "tests/ui/needless_pass_by_value.stderr", "status": "modified", "additions": 48, "deletions": 48, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneedless_pass_by_value.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneedless_pass_by_value.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_pass_by_value.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,128 +1,128 @@\n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:21:23\n+  --> $DIR/needless_pass_by_value.rs:24:23\n    |\n-21 | fn foo<T: Default>(v: Vec<T>, w: Vec<T>, mut x: Vec<T>, y: Vec<T>) -> Vec<T> {\n+24 | fn foo<T: Default>(v: Vec<T>, w: Vec<T>, mut x: Vec<T>, y: Vec<T>) -> Vec<T> {\n    |                       ^^^^^^ help: consider changing the type to: `&[T]`\n    |\n    = note: `-D clippy::needless-pass-by-value` implied by `-D warnings`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:35:11\n+  --> $DIR/needless_pass_by_value.rs:38:11\n    |\n-35 | fn bar(x: String, y: Wrapper) {\n+38 | fn bar(x: String, y: Wrapper) {\n    |           ^^^^^^ help: consider changing the type to: `&str`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:35:22\n+  --> $DIR/needless_pass_by_value.rs:38:22\n    |\n-35 | fn bar(x: String, y: Wrapper) {\n+38 | fn bar(x: String, y: Wrapper) {\n    |                      ^^^^^^^ help: consider taking a reference instead: `&Wrapper`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:41:71\n+  --> $DIR/needless_pass_by_value.rs:44:71\n    |\n-41 | fn test_borrow_trait<T: Borrow<str>, U: AsRef<str>, V>(t: T, u: U, v: V) {\n+44 | fn test_borrow_trait<T: Borrow<str>, U: AsRef<str>, V>(t: T, u: U, v: V) {\n    |                                                                       ^ help: consider taking a reference instead: `&V`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:53:18\n+  --> $DIR/needless_pass_by_value.rs:56:18\n    |\n-53 | fn test_match(x: Option<Option<String>>, y: Option<Option<String>>) {\n+56 | fn test_match(x: Option<Option<String>>, y: Option<Option<String>>) {\n    |                  ^^^^^^^^^^^^^^^^^^^^^^\n help: consider taking a reference instead\n    |\n-53 | fn test_match(x: &Option<Option<String>>, y: Option<Option<String>>) {\n-54 |     match *x {\n+56 | fn test_match(x: &Option<Option<String>>, y: Option<Option<String>>) {\n+57 |     match *x {\n    |\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:66:24\n+  --> $DIR/needless_pass_by_value.rs:69:24\n    |\n-66 | fn test_destructure(x: Wrapper, y: Wrapper, z: Wrapper) {\n+69 | fn test_destructure(x: Wrapper, y: Wrapper, z: Wrapper) {\n    |                        ^^^^^^^ help: consider taking a reference instead: `&Wrapper`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:66:36\n+  --> $DIR/needless_pass_by_value.rs:69:36\n    |\n-66 | fn test_destructure(x: Wrapper, y: Wrapper, z: Wrapper) {\n+69 | fn test_destructure(x: Wrapper, y: Wrapper, z: Wrapper) {\n    |                                    ^^^^^^^\n help: consider taking a reference instead\n    |\n-66 | fn test_destructure(x: Wrapper, y: &Wrapper, z: Wrapper) {\n-67 |     let Wrapper(s) = z; // moved\n-68 |     let Wrapper(ref t) = *y; // not moved\n-69 |     let Wrapper(_) = *y; // still not moved\n+69 | fn test_destructure(x: Wrapper, y: &Wrapper, z: Wrapper) {\n+70 |     let Wrapper(s) = z; // moved\n+71 |     let Wrapper(ref t) = *y; // not moved\n+72 |     let Wrapper(_) = *y; // still not moved\n    |\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:82:49\n+  --> $DIR/needless_pass_by_value.rs:85:49\n    |\n-82 | fn test_blanket_ref<T: Foo, S: Serialize>(_foo: T, _serializable: S) {}\n+85 | fn test_blanket_ref<T: Foo, S: Serialize>(_foo: T, _serializable: S) {}\n    |                                                 ^ help: consider taking a reference instead: `&T`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:84:18\n+  --> $DIR/needless_pass_by_value.rs:87:18\n    |\n-84 | fn issue_2114(s: String, t: String, u: Vec<i32>, v: Vec<i32>) {\n+87 | fn issue_2114(s: String, t: String, u: Vec<i32>, v: Vec<i32>) {\n    |                  ^^^^^^ help: consider taking a reference instead: `&String`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:84:29\n+  --> $DIR/needless_pass_by_value.rs:87:29\n    |\n-84 | fn issue_2114(s: String, t: String, u: Vec<i32>, v: Vec<i32>) {\n+87 | fn issue_2114(s: String, t: String, u: Vec<i32>, v: Vec<i32>) {\n    |                             ^^^^^^\n help: consider changing the type to\n    |\n-84 | fn issue_2114(s: String, t: &str, u: Vec<i32>, v: Vec<i32>) {\n+87 | fn issue_2114(s: String, t: &str, u: Vec<i32>, v: Vec<i32>) {\n    |                             ^^^^\n help: change `t.clone()` to\n    |\n-86 |     let _ = t.to_string();\n+89 |     let _ = t.to_string();\n    |             ^^^^^^^^^^^^^\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:84:40\n+  --> $DIR/needless_pass_by_value.rs:87:40\n    |\n-84 | fn issue_2114(s: String, t: String, u: Vec<i32>, v: Vec<i32>) {\n+87 | fn issue_2114(s: String, t: String, u: Vec<i32>, v: Vec<i32>) {\n    |                                        ^^^^^^^^ help: consider taking a reference instead: `&Vec<i32>`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:84:53\n+  --> $DIR/needless_pass_by_value.rs:87:53\n    |\n-84 | fn issue_2114(s: String, t: String, u: Vec<i32>, v: Vec<i32>) {\n+87 | fn issue_2114(s: String, t: String, u: Vec<i32>, v: Vec<i32>) {\n    |                                                     ^^^^^^^^\n help: consider changing the type to\n    |\n-84 | fn issue_2114(s: String, t: String, u: Vec<i32>, v: &[i32]) {\n+87 | fn issue_2114(s: String, t: String, u: Vec<i32>, v: &[i32]) {\n    |                                                     ^^^^^^\n help: change `v.clone()` to\n    |\n-88 |     let _ = v.to_owned();\n+91 |     let _ = v.to_owned();\n    |             ^^^^^^^^^^^^\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:96:12\n-   |\n-96 |         s: String,\n-   |            ^^^^^^ help: consider changing the type to: `&str`\n+   --> $DIR/needless_pass_by_value.rs:100:12\n+    |\n+100 |         s: String,\n+    |            ^^^^^^ help: consider changing the type to: `&str`\n \n error: this argument is passed by value, but not consumed in the function body\n-  --> $DIR/needless_pass_by_value.rs:97:12\n-   |\n-97 |         t: String,\n-   |            ^^^^^^ help: consider taking a reference instead: `&String`\n+   --> $DIR/needless_pass_by_value.rs:101:12\n+    |\n+101 |         t: String,\n+    |            ^^^^^^ help: consider taking a reference instead: `&String`\n \n error: this argument is passed by value, but not consumed in the function body\n-   --> $DIR/needless_pass_by_value.rs:109:13\n+   --> $DIR/needless_pass_by_value.rs:110:23\n     |\n-109 |         _u: U,\n-    |             ^ help: consider taking a reference instead: `&U`\n+110 |     fn baz(&self, _u: U, _s: Self) {}\n+    |                       ^ help: consider taking a reference instead: `&U`\n \n error: this argument is passed by value, but not consumed in the function body\n-   --> $DIR/needless_pass_by_value.rs:110:13\n+   --> $DIR/needless_pass_by_value.rs:110:30\n     |\n-110 |         _s: Self,\n-    |             ^^^^ help: consider taking a reference instead: `&Self`\n+110 |     fn baz(&self, _u: U, _s: Self) {}\n+    |                              ^^^^ help: consider taking a reference instead: `&Self`\n \n error: this argument is passed by value, but not consumed in the function body\n    --> $DIR/needless_pass_by_value.rs:132:24"}, {"sha": "28f71d98fe7fb132013e7fea84cbc9a7a707354e", "filename": "tests/ui/needless_pass_by_value_proc_macro.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneedless_pass_by_value_proc_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneedless_pass_by_value_proc_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_pass_by_value_proc_macro.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![crate_type = \"proc-macro\"]\n #![warn(clippy::needless_pass_by_value)]\n \n@@ -18,4 +15,6 @@ extern crate proc_macro;\n use proc_macro::TokenStream;\n \n #[proc_macro_derive(Foo)]\n-pub fn foo(_input: TokenStream) -> TokenStream { unimplemented!() }\n+pub fn foo(_input: TokenStream) -> TokenStream {\n+    unimplemented!()\n+}"}, {"sha": "f3d47eede48b6c750b38f3fbed792536145935b9", "filename": "tests/ui/needless_range_loop.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneedless_range_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneedless_range_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_range_loop.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,7 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n fn calc_idx(i: usize) -> usize {\n     (i + i + 20) % 4\n }\n@@ -51,15 +50,15 @@ fn main() {\n     let g = vec![1, 2, 3, 4, 5, 6];\n     let glen = g.len();\n     for i in 0..glen {\n-        let x: u32 = g[i+1..].iter().sum();\n+        let x: u32 = g[i + 1..].iter().sum();\n         println!(\"{}\", g[i] + x);\n     }\n     assert_eq!(g, vec![20, 18, 15, 11, 6, 0]);\n \n     let mut g = vec![1, 2, 3, 4, 5, 6];\n     let glen = g.len();\n     for i in 0..glen {\n-        g[i] = g[i+1..].iter().sum();\n+        g[i] = g[i + 1..].iter().sum();\n     }\n     assert_eq!(g, vec![20, 18, 15, 11, 6, 0]);\n \n@@ -77,7 +76,7 @@ fn main() {\n         vec[i] += 1;\n     }\n \n-    let arr = [1,2,3];\n+    let arr = [1, 2, 3];\n \n     for i in 0..3 {\n         println!(\"{}\", arr[i]);"}, {"sha": "03a469dfa722b1a71ff546e3c46f42f1e13f7d94", "filename": "tests/ui/needless_range_loop.stderr", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneedless_range_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneedless_range_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_range_loop.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,83 +1,83 @@\n error: the loop variable `i` is only used to index `ns`.\n-  --> $DIR/needless_range_loop.rs:18:14\n+  --> $DIR/needless_range_loop.rs:17:14\n    |\n-18 |     for i in 3..10 {\n+17 |     for i in 3..10 {\n    |              ^^^^^\n    |\n    = note: `-D clippy::needless-range-loop` implied by `-D warnings`\n help: consider using an iterator\n    |\n-18 |     for <item> in ns.iter().take(10).skip(3) {\n+17 |     for <item> in ns.iter().take(10).skip(3) {\n    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is only used to index `ms`.\n-  --> $DIR/needless_range_loop.rs:39:14\n+  --> $DIR/needless_range_loop.rs:38:14\n    |\n-39 |     for i in 0..ms.len() {\n+38 |     for i in 0..ms.len() {\n    |              ^^^^^^^^^^^\n help: consider using an iterator\n    |\n-39 |     for <item> in &mut ms {\n+38 |     for <item> in &mut ms {\n    |         ^^^^^^    ^^^^^^^\n \n error: the loop variable `i` is only used to index `ms`.\n-  --> $DIR/needless_range_loop.rs:45:14\n+  --> $DIR/needless_range_loop.rs:44:14\n    |\n-45 |     for i in 0..ms.len() {\n+44 |     for i in 0..ms.len() {\n    |              ^^^^^^^^^^^\n help: consider using an iterator\n    |\n-45 |     for <item> in &mut ms {\n+44 |     for <item> in &mut ms {\n    |         ^^^^^^    ^^^^^^^\n \n error: the loop variable `i` is only used to index `vec`.\n-  --> $DIR/needless_range_loop.rs:69:14\n+  --> $DIR/needless_range_loop.rs:68:14\n    |\n-69 |     for i in x..x + 4 {\n+68 |     for i in x..x + 4 {\n    |              ^^^^^^^^\n help: consider using an iterator\n    |\n-69 |     for <item> in vec.iter_mut().skip(x).take(4) {\n+68 |     for <item> in vec.iter_mut().skip(x).take(4) {\n    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is only used to index `vec`.\n-  --> $DIR/needless_range_loop.rs:76:14\n+  --> $DIR/needless_range_loop.rs:75:14\n    |\n-76 |     for i in x..=x + 4 {\n+75 |     for i in x..=x + 4 {\n    |              ^^^^^^^^^\n help: consider using an iterator\n    |\n-76 |     for <item> in vec.iter_mut().skip(x).take(4 + 1) {\n+75 |     for <item> in vec.iter_mut().skip(x).take(4 + 1) {\n    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is only used to index `arr`.\n-  --> $DIR/needless_range_loop.rs:82:14\n+  --> $DIR/needless_range_loop.rs:81:14\n    |\n-82 |     for i in 0..3 {\n+81 |     for i in 0..3 {\n    |              ^^^^\n help: consider using an iterator\n    |\n-82 |     for <item> in &arr {\n+81 |     for <item> in &arr {\n    |         ^^^^^^    ^^^^\n \n error: the loop variable `i` is only used to index `arr`.\n-  --> $DIR/needless_range_loop.rs:86:14\n+  --> $DIR/needless_range_loop.rs:85:14\n    |\n-86 |     for i in 0..2 {\n+85 |     for i in 0..2 {\n    |              ^^^^\n help: consider using an iterator\n    |\n-86 |     for <item> in arr.iter().take(2) {\n+85 |     for <item> in arr.iter().take(2) {\n    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is only used to index `arr`.\n-  --> $DIR/needless_range_loop.rs:90:14\n+  --> $DIR/needless_range_loop.rs:89:14\n    |\n-90 |     for i in 1..3 {\n+89 |     for i in 1..3 {\n    |              ^^^^\n help: consider using an iterator\n    |\n-90 |     for <item> in arr.iter().skip(1) {\n+89 |     for <item> in arr.iter().skip(1) {\n    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 8 previous errors"}, {"sha": "101be5946f4c1ad5eafc3b96e38595add3506b9e", "filename": "tests/ui/needless_return.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneedless_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneedless_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_return.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,10 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #![warn(clippy::needless_return)]\n \n fn test_end_of_fn() -> bool {\n@@ -22,7 +18,7 @@ fn test_end_of_fn() -> bool {\n }\n \n fn test_no_semicolon() -> bool {\n-    return true\n+    return true;\n }\n \n fn test_if_block() -> bool {\n@@ -38,7 +34,7 @@ fn test_match(x: bool) -> bool {\n         true => return false,\n         false => {\n             return true;\n-        }\n+        },\n     }\n }\n "}, {"sha": "07d29c19be32a80b9de67eb0138a9866a2cf9511", "filename": "tests/ui/needless_return.stderr", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneedless_return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneedless_return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_return.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,51 +1,51 @@\n error: unneeded return statement\n-  --> $DIR/needless_return.rs:21:5\n+  --> $DIR/needless_return.rs:17:5\n    |\n-21 |     return true;\n+17 |     return true;\n    |     ^^^^^^^^^^^^ help: remove `return` as shown: `true`\n    |\n    = note: `-D clippy::needless-return` implied by `-D warnings`\n \n error: unneeded return statement\n-  --> $DIR/needless_return.rs:25:5\n+  --> $DIR/needless_return.rs:21:5\n    |\n-25 |     return true\n-   |     ^^^^^^^^^^^ help: remove `return` as shown: `true`\n+21 |     return true;\n+   |     ^^^^^^^^^^^^ help: remove `return` as shown: `true`\n \n error: unneeded return statement\n-  --> $DIR/needless_return.rs:30:9\n+  --> $DIR/needless_return.rs:26:9\n    |\n-30 |         return true;\n+26 |         return true;\n    |         ^^^^^^^^^^^^ help: remove `return` as shown: `true`\n \n error: unneeded return statement\n-  --> $DIR/needless_return.rs:32:9\n+  --> $DIR/needless_return.rs:28:9\n    |\n-32 |         return false;\n+28 |         return false;\n    |         ^^^^^^^^^^^^^ help: remove `return` as shown: `false`\n \n error: unneeded return statement\n-  --> $DIR/needless_return.rs:38:17\n+  --> $DIR/needless_return.rs:34:17\n    |\n-38 |         true => return false,\n+34 |         true => return false,\n    |                 ^^^^^^^^^^^^ help: remove `return` as shown: `false`\n \n error: unneeded return statement\n-  --> $DIR/needless_return.rs:40:13\n+  --> $DIR/needless_return.rs:36:13\n    |\n-40 |             return true;\n+36 |             return true;\n    |             ^^^^^^^^^^^^ help: remove `return` as shown: `true`\n \n error: unneeded return statement\n-  --> $DIR/needless_return.rs:47:9\n+  --> $DIR/needless_return.rs:43:9\n    |\n-47 |         return true;\n+43 |         return true;\n    |         ^^^^^^^^^^^^ help: remove `return` as shown: `true`\n \n error: unneeded return statement\n-  --> $DIR/needless_return.rs:49:16\n+  --> $DIR/needless_return.rs:45:16\n    |\n-49 |     let _ = || return true;\n+45 |     let _ = || return true;\n    |                ^^^^^^^^^^^ help: remove `return` as shown: `true`\n \n error: aborting due to 8 previous errors"}, {"sha": "891c446b0ea30009e00ff59ce4cc8189eacace79", "filename": "tests/ui/needless_update.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneedless_update.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneedless_update.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_update.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,10 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #![warn(clippy::needless_update)]\n #![allow(clippy::no_effect)]\n "}, {"sha": "d5cd0e7889a249e869fa96f9ff5701a9fed00f18", "filename": "tests/ui/needless_update.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneedless_update.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneedless_update.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_update.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,7 +1,7 @@\n error: struct update has no effect, all the fields in the struct have already been specified\n-  --> $DIR/needless_update.rs:26:23\n+  --> $DIR/needless_update.rs:22:23\n    |\n-26 |     S { a: 1, b: 1, ..base };\n+22 |     S { a: 1, b: 1, ..base };\n    |                       ^^^^\n    |\n    = note: `-D clippy::needless-update` implied by `-D warnings`"}, {"sha": "6c132f85f0a262f630398ed30d23a7bef8a29a59", "filename": "tests/ui/neg_cmp_op_on_partial_ord.rs", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneg_cmp_op_on_partial_ord.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneg_cmp_op_on_partial_ord.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneg_cmp_op_on_partial_ord.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,9 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n //! This test case utilizes `f64` an easy example for `PartialOrd` only types\n //! but the lint itself actually validates any expression where the left\n //! operand implements `PartialOrd` but not `Ord`.\n@@ -18,13 +15,11 @@ use std::cmp::Ordering;\n \n #[warn(clippy::neg_cmp_op_on_partial_ord)]\n fn main() {\n-\n     let a_value = 1.0;\n     let another_value = 7.0;\n \n     // --- Bad ---\n \n-\n     // Not Less but potentially Greater, Equal or Uncomparable.\n     let _not_less = !(a_value < another_value);\n \n@@ -37,12 +32,10 @@ fn main() {\n     // Not Greater or Equal but potentially Less or Uncomparable.\n     let _not_greater_or_equal = !(a_value >= another_value);\n \n-\n     // --- Good ---\n \n-\n     let _not_less = match a_value.partial_cmp(&another_value) {\n-        None | Some(Ordering::Greater) | Some(Ordering::Equal)  => true,\n+        None | Some(Ordering::Greater) | Some(Ordering::Equal) => true,\n         _ => false,\n     };\n     let _not_less_or_equal = match a_value.partial_cmp(&another_value) {\n@@ -58,10 +51,8 @@ fn main() {\n         _ => false,\n     };\n \n-\n     // --- Should not trigger ---\n \n-\n     let _ = a_value < another_value;\n     let _ = a_value <= another_value;\n     let _ = a_value > another_value;"}, {"sha": "ee0f9af6f9557270319bbf366895444e27fab613", "filename": "tests/ui/neg_cmp_op_on_partial_ord.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneg_cmp_op_on_partial_ord.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneg_cmp_op_on_partial_ord.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneg_cmp_op_on_partial_ord.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,27 +1,27 @@\n error: The use of negated comparison operators on partially ordered types produces code that is hard to read and refactor. Please consider using the `partial_cmp` method instead, to make it clear that the two values could be incomparable.\n-  --> $DIR/neg_cmp_op_on_partial_ord.rs:29:21\n+  --> $DIR/neg_cmp_op_on_partial_ord.rs:24:21\n    |\n-29 |     let _not_less = !(a_value < another_value);\n+24 |     let _not_less = !(a_value < another_value);\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::neg-cmp-op-on-partial-ord` implied by `-D warnings`\n \n error: The use of negated comparison operators on partially ordered types produces code that is hard to read and refactor. Please consider using the `partial_cmp` method instead, to make it clear that the two values could be incomparable.\n-  --> $DIR/neg_cmp_op_on_partial_ord.rs:32:30\n+  --> $DIR/neg_cmp_op_on_partial_ord.rs:27:30\n    |\n-32 |     let _not_less_or_equal = !(a_value <= another_value);\n+27 |     let _not_less_or_equal = !(a_value <= another_value);\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: The use of negated comparison operators on partially ordered types produces code that is hard to read and refactor. Please consider using the `partial_cmp` method instead, to make it clear that the two values could be incomparable.\n-  --> $DIR/neg_cmp_op_on_partial_ord.rs:35:24\n+  --> $DIR/neg_cmp_op_on_partial_ord.rs:30:24\n    |\n-35 |     let _not_greater = !(a_value > another_value);\n+30 |     let _not_greater = !(a_value > another_value);\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: The use of negated comparison operators on partially ordered types produces code that is hard to read and refactor. Please consider using the `partial_cmp` method instead, to make it clear that the two values could be incomparable.\n-  --> $DIR/neg_cmp_op_on_partial_ord.rs:38:33\n+  --> $DIR/neg_cmp_op_on_partial_ord.rs:33:33\n    |\n-38 |     let _not_greater_or_equal = !(a_value >= another_value);\n+33 |     let _not_greater_or_equal = !(a_value >= another_value);\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 4 previous errors"}, {"sha": "f5f7525922c4da4eaed4454668191c75cc9340d0", "filename": "tests/ui/neg_multiply.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneg_multiply.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneg_multiply.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneg_multiply.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,10 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #![warn(clippy::neg_multiply)]\n #![allow(clippy::no_effect, clippy::unnecessary_operation)]\n "}, {"sha": "5e5d1afaafe710c7684662de219ea95f48ac4a32", "filename": "tests/ui/neg_multiply.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneg_multiply.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fneg_multiply.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneg_multiply.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,15 +1,15 @@\n error: Negation by multiplying with -1\n-  --> $DIR/neg_multiply.rs:40:5\n+  --> $DIR/neg_multiply.rs:36:5\n    |\n-40 |     x * -1;\n+36 |     x * -1;\n    |     ^^^^^^\n    |\n    = note: `-D clippy::neg-multiply` implied by `-D warnings`\n \n error: Negation by multiplying with -1\n-  --> $DIR/neg_multiply.rs:42:5\n+  --> $DIR/neg_multiply.rs:38:5\n    |\n-42 |     -1 * x;\n+38 |     -1 * x;\n    |     ^^^^^^\n \n error: aborting due to 2 previous errors"}, {"sha": "d5a108b0b275a293a3a13ac5f0a31caa9222d8b3", "filename": "tests/ui/never_loop.rs", "status": "modified", "additions": 41, "deletions": 29, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fnever_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fnever_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnever_loop.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,17 +7,20 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-#![allow(clippy::single_match, unused_assignments, unused_variables, clippy::while_immutable_condition)]\n+#![allow(\n+    clippy::single_match,\n+    unused_assignments,\n+    unused_variables,\n+    clippy::while_immutable_condition\n+)]\n \n fn test1() {\n     let mut x = 0;\n-    loop { // clippy::never_loop\n+    loop {\n+        // clippy::never_loop\n         x += 1;\n         if x == 1 {\n-            return\n+            return;\n         }\n         break;\n     }\n@@ -28,16 +31,17 @@ fn test2() {\n     loop {\n         x += 1;\n         if x == 1 {\n-            break\n+            break;\n         }\n     }\n }\n \n fn test3() {\n     let mut x = 0;\n-    loop { // never loops\n+    loop {\n+        // never loops\n         x += 1;\n-        break\n+        break;\n     }\n }\n \n@@ -54,24 +58,29 @@ fn test4() {\n \n fn test5() {\n     let i = 0;\n-\tloop { // never loops\n-        while i == 0 { // never loops\n-            break\n+    loop {\n+        // never loops\n+        while i == 0 {\n+            // never loops\n+            break;\n         }\n-        return\n-\t}\n+        return;\n+    }\n }\n \n fn test6() {\n     let mut x = 0;\n     'outer: loop {\n         x += 1;\n-\t\tloop { // never loops\n-            if x == 5 { break }\n-\t\t\tcontinue 'outer\n-\t\t}\n-\t\treturn\n-\t}\n+        loop {\n+            // never loops\n+            if x == 5 {\n+                break;\n+            }\n+            continue 'outer;\n+        }\n+        return;\n+    }\n }\n \n fn test7() {\n@@ -82,7 +91,7 @@ fn test7() {\n             1 => continue,\n             _ => (),\n         }\n-        return\n+        return;\n     }\n }\n \n@@ -99,13 +108,15 @@ fn test8() {\n \n fn test9() {\n     let x = Some(1);\n-    while let Some(y) = x { // never loops\n-        return\n+    while let Some(y) = x {\n+        // never loops\n+        return;\n     }\n }\n \n fn test10() {\n-    for x in 0..10 { // never loops\n+    for x in 0..10 {\n+        // never loops\n         match x {\n             1 => break,\n             _ => return,\n@@ -118,7 +129,7 @@ fn test11<F: FnMut() -> i32>(mut f: F) {\n         return match f() {\n             1 => continue,\n             _ => (),\n-        }\n+        };\n     }\n }\n \n@@ -138,7 +149,8 @@ pub fn test12(a: bool, b: bool) {\n \n pub fn test13() {\n     let mut a = true;\n-    loop { // infinite loop\n+    loop {\n+        // infinite loop\n         while a {\n             if true {\n                 a = false;\n@@ -151,11 +163,12 @@ pub fn test13() {\n \n pub fn test14() {\n     let mut a = true;\n-    'outer: while a { // never loops\n+    'outer: while a {\n+        // never loops\n         while a {\n             if a {\n                 a = false;\n-                continue\n+                continue;\n             }\n         }\n         break 'outer;\n@@ -187,4 +200,3 @@ fn main() {\n     test13();\n     test14();\n }\n-"}, {"sha": "6ef26234d9d321859eb2ecb3ec3a1b82f7e47099", "filename": "tests/ui/never_loop.stderr", "status": "modified", "additions": 59, "deletions": 53, "changes": 112, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fnever_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fnever_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnever_loop.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,93 +1,99 @@\n error: this loop never actually loops\n-  --> $DIR/never_loop.rs:17:5\n+  --> $DIR/never_loop.rs:19:5\n    |\n-17 | /     loop { // clippy::never_loop\n-18 | |         x += 1;\n-19 | |         if x == 1 {\n-20 | |             return\n-21 | |         }\n-22 | |         break;\n-23 | |     }\n+19 | /     loop {\n+20 | |         // clippy::never_loop\n+21 | |         x += 1;\n+22 | |         if x == 1 {\n+...  |\n+25 | |         break;\n+26 | |     }\n    | |_____^\n    |\n    = note: #[deny(clippy::never_loop)] on by default\n \n error: this loop never actually loops\n-  --> $DIR/never_loop.rs:38:5\n+  --> $DIR/never_loop.rs:41:5\n    |\n-38 | /     loop { // never loops\n-39 | |         x += 1;\n-40 | |         break\n-41 | |     }\n+41 | /     loop {\n+42 | |         // never loops\n+43 | |         x += 1;\n+44 | |         break;\n+45 | |     }\n    | |_____^\n \n error: this loop never actually loops\n-  --> $DIR/never_loop.rs:57:2\n+  --> $DIR/never_loop.rs:61:5\n    |\n-57 |       loop { // never loops\n-   |  _____^\n-58 | |         while i == 0 { // never loops\n-59 | |             break\n-60 | |         }\n-61 | |         return\n-62 | |     }\n+61 | /     loop {\n+62 | |         // never loops\n+63 | |         while i == 0 {\n+64 | |             // never loops\n+...  |\n+67 | |         return;\n+68 | |     }\n    | |_____^\n \n error: this loop never actually loops\n-  --> $DIR/never_loop.rs:58:9\n+  --> $DIR/never_loop.rs:63:9\n    |\n-58 | /         while i == 0 { // never loops\n-59 | |             break\n-60 | |         }\n+63 | /         while i == 0 {\n+64 | |             // never loops\n+65 | |             break;\n+66 | |         }\n    | |_________^\n \n error: this loop never actually loops\n-  --> $DIR/never_loop.rs:69:3\n+  --> $DIR/never_loop.rs:75:9\n    |\n-69 |           loop { // never loops\n-   |  _________^\n-70 | |             if x == 5 { break }\n-71 | |             continue 'outer\n-72 | |         }\n+75 | /         loop {\n+76 | |             // never loops\n+77 | |             if x == 5 {\n+78 | |                 break;\n+79 | |             }\n+80 | |             continue 'outer;\n+81 | |         }\n    | |_________^\n \n error: this loop never actually loops\n-   --> $DIR/never_loop.rs:102:5\n+   --> $DIR/never_loop.rs:111:5\n     |\n-102 | /     while let Some(y) = x { // never loops\n-103 | |         return\n-104 | |     }\n+111 | /     while let Some(y) = x {\n+112 | |         // never loops\n+113 | |         return;\n+114 | |     }\n     | |_____^\n \n error: this loop never actually loops\n-   --> $DIR/never_loop.rs:108:5\n+   --> $DIR/never_loop.rs:118:5\n     |\n-108 | /     for x in 0..10 { // never loops\n-109 | |         match x {\n-110 | |             1 => break,\n-111 | |             _ => return,\n-112 | |         }\n-113 | |     }\n+118 | /     for x in 0..10 {\n+119 | |         // never loops\n+120 | |         match x {\n+121 | |             1 => break,\n+122 | |             _ => return,\n+123 | |         }\n+124 | |     }\n     | |_____^\n \n error: this loop never actually loops\n-   --> $DIR/never_loop.rs:154:5\n+   --> $DIR/never_loop.rs:166:5\n     |\n-154 | /     'outer: while a { // never loops\n-155 | |         while a {\n-156 | |             if a {\n-157 | |                 a = false;\n+166 | /     'outer: while a {\n+167 | |         // never loops\n+168 | |         while a {\n+169 | |             if a {\n ...   |\n-161 | |         break 'outer;\n-162 | |     }\n+174 | |         break 'outer;\n+175 | |     }\n     | |_____^\n \n error: this loop never actually loops\n-   --> $DIR/never_loop.rs:168:9\n+   --> $DIR/never_loop.rs:181:9\n     |\n-168 | /         while false {\n-169 | |             break 'label;\n-170 | |         }\n+181 | /         while false {\n+182 | |             break 'label;\n+183 | |         }\n     | |_________^\n \n error: aborting due to 9 previous errors"}, {"sha": "a31f046c08412625ad161a1d27a1865d7b16b9c0", "filename": "tests/ui/new_ret_no_self.rs", "status": "modified", "additions": 37, "deletions": 13, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fnew_ret_no_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fnew_ret_no_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnew_ret_no_self.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,7 +1,7 @@\n #![warn(clippy::new_ret_no_self)]\n #![allow(dead_code, clippy::trivially_copy_pass_by_ref)]\n \n-fn main(){}\n+fn main() {}\n \n trait R {\n     type Item;\n@@ -96,82 +96,106 @@ struct TupleReturnerOk;\n \n impl TupleReturnerOk {\n     // should not trigger lint\n-    pub fn new() -> (Self, u32) { unimplemented!(); }\n+    pub fn new() -> (Self, u32) {\n+        unimplemented!();\n+    }\n }\n \n struct TupleReturnerOk2;\n \n impl TupleReturnerOk2 {\n     // should not trigger lint (it doesn't matter which element in the tuple is Self)\n-    pub fn new() -> (u32, Self) { unimplemented!(); }\n+    pub fn new() -> (u32, Self) {\n+        unimplemented!();\n+    }\n }\n \n struct TupleReturnerOk3;\n \n impl TupleReturnerOk3 {\n     // should not trigger lint (tuple can contain multiple Self)\n-    pub fn new() -> (Self, Self) { unimplemented!(); }\n+    pub fn new() -> (Self, Self) {\n+        unimplemented!();\n+    }\n }\n \n struct TupleReturnerBad;\n \n impl TupleReturnerBad {\n     // should trigger lint\n-    pub fn new() -> (u32, u32) { unimplemented!(); }\n+    pub fn new() -> (u32, u32) {\n+        unimplemented!();\n+    }\n }\n \n struct MutPointerReturnerOk;\n \n impl MutPointerReturnerOk {\n     // should not trigger lint\n-    pub fn new() -> *mut Self { unimplemented!(); }\n+    pub fn new() -> *mut Self {\n+        unimplemented!();\n+    }\n }\n \n struct MutPointerReturnerOk2;\n \n impl MutPointerReturnerOk2 {\n     // should not trigger lint\n-    pub fn new() -> *const Self { unimplemented!(); }\n+    pub fn new() -> *const Self {\n+        unimplemented!();\n+    }\n }\n \n struct MutPointerReturnerBad;\n \n impl MutPointerReturnerBad {\n     // should trigger lint\n-    pub fn new() -> *mut V { unimplemented!(); }\n+    pub fn new() -> *mut V {\n+        unimplemented!();\n+    }\n }\n \n struct GenericReturnerOk;\n \n impl GenericReturnerOk {\n     // should not trigger lint\n-    pub fn new() -> Option<Self> { unimplemented!(); }\n+    pub fn new() -> Option<Self> {\n+        unimplemented!();\n+    }\n }\n \n struct GenericReturnerBad;\n \n impl GenericReturnerBad {\n     // should trigger lint\n-    pub fn new() -> Option<u32> { unimplemented!(); }\n+    pub fn new() -> Option<u32> {\n+        unimplemented!();\n+    }\n }\n \n struct NestedReturnerOk;\n \n impl NestedReturnerOk {\n     // should not trigger lint\n-    pub fn new() -> (Option<Self>, u32) { unimplemented!(); }\n+    pub fn new() -> (Option<Self>, u32) {\n+        unimplemented!();\n+    }\n }\n \n struct NestedReturnerOk2;\n \n impl NestedReturnerOk2 {\n     // should not trigger lint\n-    pub fn new() -> ((Self, u32), u32) { unimplemented!(); }\n+    pub fn new() -> ((Self, u32), u32) {\n+        unimplemented!();\n+    }\n }\n \n struct NestedReturnerOk3;\n \n impl NestedReturnerOk3 {\n     // should not trigger lint\n-    pub fn new() -> Option<(Self, u32)> { unimplemented!(); }\n+    pub fn new() -> Option<(Self, u32)> {\n+        unimplemented!();\n+    }\n }"}, {"sha": "e5911b3d72e947a075002b81466e95a5c53e3fa7", "filename": "tests/ui/new_ret_no_self.stderr", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fnew_ret_no_self.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fnew_ret_no_self.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnew_ret_no_self.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -25,22 +25,28 @@ error: methods called `new` usually return `Self`\n    | |_____^\n \n error: methods called `new` usually return `Self`\n-   --> $DIR/new_ret_no_self.rs:120:5\n+   --> $DIR/new_ret_no_self.rs:126:5\n     |\n-120 |     pub fn new() -> (u32, u32) { unimplemented!(); }\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+126 | /     pub fn new() -> (u32, u32) {\n+127 | |         unimplemented!();\n+128 | |     }\n+    | |_____^\n \n error: methods called `new` usually return `Self`\n-   --> $DIR/new_ret_no_self.rs:141:5\n+   --> $DIR/new_ret_no_self.rs:153:5\n     |\n-141 |     pub fn new() -> *mut V { unimplemented!(); }\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+153 | /     pub fn new() -> *mut V {\n+154 | |         unimplemented!();\n+155 | |     }\n+    | |_____^\n \n error: methods called `new` usually return `Self`\n-   --> $DIR/new_ret_no_self.rs:155:5\n+   --> $DIR/new_ret_no_self.rs:171:5\n     |\n-155 |     pub fn new() -> Option<u32> { unimplemented!(); }\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+171 | /     pub fn new() -> Option<u32> {\n+172 | |         unimplemented!();\n+173 | |     }\n+    | |_____^\n \n error: aborting due to 6 previous errors\n "}, {"sha": "a1818e037a705d564a91546240f3702093132599", "filename": "tests/ui/new_without_default.rs", "status": "modified", "additions": 42, "deletions": 19, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fnew_without_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fnew_without_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnew_without_default.rs?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -7,92 +7,113 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n #![feature(const_fn)]\n-\n-\n #![allow(dead_code)]\n #![warn(clippy::new_without_default, clippy::new_without_default_derive)]\n \n pub struct Foo;\n \n impl Foo {\n-    pub fn new() -> Foo { Foo }\n+    pub fn new() -> Foo {\n+        Foo\n+    }\n }\n \n pub struct Bar;\n \n impl Bar {\n-    pub fn new() -> Self { Bar }\n+    pub fn new() -> Self {\n+        Bar\n+    }\n }\n \n pub struct Ok;\n \n impl Ok {\n-    pub fn new() -> Self { Ok }\n+    pub fn new() -> Self {\n+        Ok\n+    }\n }\n \n impl Default for Ok {\n-    fn default() -> Self { Ok }\n+    fn default() -> Self {\n+        Ok\n+    }\n }\n \n pub struct Params;\n \n impl Params {\n-    pub fn new(_: u32) -> Self { Params }\n+    pub fn new(_: u32) -> Self {\n+        Params\n+    }\n }\n \n pub struct GenericsOk<T> {\n     bar: T,\n }\n \n impl<U> Default for GenericsOk<U> {\n-    fn default() -> Self { unimplemented!(); }\n+    fn default() -> Self {\n+        unimplemented!();\n+    }\n }\n \n impl<'c, V> GenericsOk<V> {\n-    pub fn new() -> GenericsOk<V> { unimplemented!() }\n+    pub fn new() -> GenericsOk<V> {\n+        unimplemented!()\n+    }\n }\n \n pub struct LtOk<'a> {\n     foo: &'a bool,\n }\n \n impl<'b> Default for LtOk<'b> {\n-    fn default() -> Self { unimplemented!(); }\n+    fn default() -> Self {\n+        unimplemented!();\n+    }\n }\n \n impl<'c> LtOk<'c> {\n-    pub fn new() -> LtOk<'c> { unimplemented!() }\n+    pub fn new() -> LtOk<'c> {\n+        unimplemented!()\n+    }\n }\n \n pub struct LtKo<'a> {\n     foo: &'a bool,\n }\n \n impl<'c> LtKo<'c> {\n-    pub fn new() -> LtKo<'c> { unimplemented!() }\n+    pub fn new() -> LtKo<'c> {\n+        unimplemented!()\n+    }\n     // FIXME: that suggestion is missing lifetimes\n }\n \n struct Private;\n \n impl Private {\n-    fn new() -> Private { unimplemented!() } // We don't lint private items\n+    fn new() -> Private {\n+        unimplemented!()\n+    } // We don't lint private items\n }\n \n struct Const;\n \n impl Const {\n-    pub const fn new() -> Const { Const } // const fns can't be implemented via Default\n+    pub const fn new() -> Const {\n+        Const\n+    } // const fns can't be implemented via Default\n }\n \n pub struct IgnoreGenericNew;\n \n impl IgnoreGenericNew {\n-    pub fn new<T>() -> Self { IgnoreGenericNew } // the derived Default does not make sense here as the result depends on T\n+    pub fn new<T>() -> Self {\n+        IgnoreGenericNew\n+    } // the derived Default does not make sense here as the result depends on T\n }\n \n pub trait TraitWithNew: Sized {\n@@ -104,7 +125,9 @@ pub trait TraitWithNew: Sized {\n pub struct IgnoreUnsafeNew;\n \n impl IgnoreUnsafeNew {\n-    pub unsafe fn new() -> Self { IgnoreUnsafeNew }\n+    pub unsafe fn new() -> Self {\n+        IgnoreUnsafeNew\n+    }\n }\n \n #[derive(Default)]"}, {"sha": "b37c1e1442456a3a90608b9706a9b3057d63159c", "filename": "tests/ui/new_without_default.stderr", "status": "modified", "additions": 22, "deletions": 16, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fnew_without_default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2608fc27231d12a360915c9cb60de5219a22505/tests%2Fui%2Fnew_without_default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnew_without_default.stderr?ref=e2608fc27231d12a360915c9cb60de5219a22505", "patch": "@@ -1,39 +1,45 @@\n error: you should consider deriving a `Default` implementation for `Foo`\n-  --> $DIR/new_without_default.rs:22:5\n+  --> $DIR/new_without_default.rs:17:5\n    |\n-22 |     pub fn new() -> Foo { Foo }\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+17 | /     pub fn new() -> Foo {\n+18 | |         Foo\n+19 | |     }\n+   | |_____^\n    |\n    = note: `-D clippy::new-without-default-derive` implied by `-D warnings`\n help: try this\n    |\n-19 | #[derive(Default)]\n+14 | #[derive(Default)]\n    |\n \n error: you should consider deriving a `Default` implementation for `Bar`\n-  --> $DIR/new_without_default.rs:28:5\n+  --> $DIR/new_without_default.rs:25:5\n    |\n-28 |     pub fn new() -> Self { Bar }\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+25 | /     pub fn new() -> Self {\n+26 | |         Bar\n+27 | |     }\n+   | |_____^\n help: try this\n    |\n-25 | #[derive(Default)]\n+22 | #[derive(Default)]\n    |\n \n error: you should consider adding a `Default` implementation for `LtKo<'c>`\n-  --> $DIR/new_without_default.rs:76:5\n+  --> $DIR/new_without_default.rs:89:5\n    |\n-76 |     pub fn new() -> LtKo<'c> { unimplemented!() }\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+89 | /     pub fn new() -> LtKo<'c> {\n+90 | |         unimplemented!()\n+91 | |     }\n+   | |_____^\n    |\n    = note: `-D clippy::new-without-default` implied by `-D warnings`\n help: try this\n    |\n-75 | impl Default for LtKo<'c> {\n-76 |     fn default() -> Self {\n-77 |         Self::new()\n-78 |     }\n-79 | }\n+88 | impl Default for LtKo<'c> {\n+89 |     fn default() -> Self {\n+90 |         Self::new()\n+91 |     }\n+92 | }\n    |\n \n error: aborting due to 3 previous errors"}]}