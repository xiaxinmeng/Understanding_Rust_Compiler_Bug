{"sha": "63028ac3a1cdad56e4a61b8fcb260456efc2b71e", "node_id": "C_kwDOAAsO6NoAKDYzMDI4YWMzYTFjZGFkNTZlNGE2MWI4ZmNiMjYwNDU2ZWZjMmI3MWU", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-04-29T10:32:31Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-04-29T10:32:31Z"}, "message": "Do not force anonymous lifetimes in consts to be static.", "tree": {"sha": "4bb658bef00fe3aaef4055901026fd687ad9358d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4bb658bef00fe3aaef4055901026fd687ad9358d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63028ac3a1cdad56e4a61b8fcb260456efc2b71e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63028ac3a1cdad56e4a61b8fcb260456efc2b71e", "html_url": "https://github.com/rust-lang/rust/commit/63028ac3a1cdad56e4a61b8fcb260456efc2b71e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63028ac3a1cdad56e4a61b8fcb260456efc2b71e/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ce22733b973355573efd1e6294e585460e90e17", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ce22733b973355573efd1e6294e585460e90e17", "html_url": "https://github.com/rust-lang/rust/commit/6ce22733b973355573efd1e6294e585460e90e17"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "5da67dbc2aa1719288b1ba74e270311ef73fb823", "filename": "compiler/rustc_resolve/src/late.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/63028ac3a1cdad56e4a61b8fcb260456efc2b71e/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63028ac3a1cdad56e4a61b8fcb260456efc2b71e/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate.rs?ref=63028ac3a1cdad56e4a61b8fcb260456efc2b71e", "patch": "@@ -656,7 +656,7 @@ impl<'a: 'ast, 'ast, 'tcx> Visitor<'ast> for LateResolutionVisitor<'a, '_, 'ast,\n     fn visit_anon_const(&mut self, constant: &'ast AnonConst) {\n         // We deal with repeat expressions explicitly in `resolve_expr`.\n         self.with_lifetime_rib(LifetimeRibKind::AnonConst, |this| {\n-            this.with_lifetime_rib(LifetimeRibKind::Elided(LifetimeRes::Static), |this| {\n+            this.with_lifetime_rib(LifetimeRibKind::Elided(LifetimeRes::Infer), |this| {\n                 this.resolve_anon_const(constant, IsRepeatExpr::No);\n             })\n         })\n@@ -4130,7 +4130,7 @@ impl<'a: 'ast, 'b, 'ast, 'tcx> LateResolutionVisitor<'a, 'b, 'ast, 'tcx> {\n             ExprKind::Repeat(ref elem, ref ct) => {\n                 self.visit_expr(elem);\n                 self.with_lifetime_rib(LifetimeRibKind::AnonConst, |this| {\n-                    this.with_lifetime_rib(LifetimeRibKind::Elided(LifetimeRes::Static), |this| {\n+                    this.with_lifetime_rib(LifetimeRibKind::Elided(LifetimeRes::Infer), |this| {\n                         this.resolve_anon_const(ct, IsRepeatExpr::Yes)\n                     })\n                 });"}, {"sha": "69a7b61bab41821856f8751f5e011854976d5740", "filename": "tests/ui/lifetimes/elided-lifetime-in-anon-const.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/63028ac3a1cdad56e4a61b8fcb260456efc2b71e/tests%2Fui%2Flifetimes%2Felided-lifetime-in-anon-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63028ac3a1cdad56e4a61b8fcb260456efc2b71e/tests%2Fui%2Flifetimes%2Felided-lifetime-in-anon-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flifetimes%2Felided-lifetime-in-anon-const.rs?ref=63028ac3a1cdad56e4a61b8fcb260456efc2b71e", "patch": "@@ -0,0 +1,20 @@\n+// Verify that elided lifetimes inside anonymous constants are not forced to be `'static`.\n+// check-pass\n+\n+fn foo() -> [(); {\n+       let a = 10_usize;\n+       let b: &'_ usize = &a;\n+       *b\n+   }] {\n+    [(); 10]\n+}\n+\n+fn bar() -> [(); 10] {\n+    [(); {\n+        let a = 10_usize;\n+        let b: &'_ usize = &a;\n+        *b\n+    }]\n+}\n+\n+fn main() {}"}]}