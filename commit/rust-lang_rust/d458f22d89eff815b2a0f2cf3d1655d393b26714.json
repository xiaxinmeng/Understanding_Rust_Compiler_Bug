{"sha": "d458f22d89eff815b2a0f2cf3d1655d393b26714", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0NThmMjJkODllZmY4MTViMmEwZjJjZjNkMTY1NWQzOTNiMjY3MTQ=", "commit": {"author": {"name": "flip1995", "email": "uwdkn@student.kit.edu", "date": "2018-03-25T15:23:31Z"}, "committer": {"name": "flip1995", "email": "uwdkn@student.kit.edu", "date": "2018-03-26T23:21:25Z"}, "message": "Fix check of immutable condition in closure", "tree": {"sha": "51996fc2fad81eccf4a3f50435495cad208b4bd1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51996fc2fad81eccf4a3f50435495cad208b4bd1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d458f22d89eff815b2a0f2cf3d1655d393b26714", "comment_count": 0, "verification": {"verified": false, "reason": "unverified_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE+Ra9h3J6V0LpwPz3hStyJ5mrWXgFAlq5gHYACgkQhStyJ5mr\nWXj5HQ/9ExPFGDtH0DtzIxNR87Rlz/RcHlY2wsWVlxnFYUgEyh/j5dfdy8Kaig9C\nF8FspSTnk0F9HzqAKFoBjbdRZ6sPaIlwZuVNS7Yf888k5TuD+dRG3F0I96xpvqDs\nAjO28b2oGrVmTE16EetNcsyi/4ffHG1Wina9tfkhpnJBPN5x7PDBly2mj5Nxo4Pe\nHBY+u/0GOSf/tmCutY3dJb7BmsS4q3X8Zrpx3yX6mU2dLHlOV+i6qSHmMBe3TKOU\noL8zqpQ+1o8yqTRHS/mpGryHhU7MwBgc/0Sx9s0wokX1qL0sMyQH5O5eKyUxagdc\nC2OSdxBeCgvtk5Ib9Kh2UjTaHF/l18bbtOeOQHjCsAYJvP3s0EQSimmZMyph0E6a\n9x9y3cmGy7qOW5hQbhzWxU5i+AZyPh9fFOK4I0xf7zBnij/pYPlkNj6+GjkqDd5b\nnDBTnD1lpqu/bNGBvrNRd1IDCAW8q1ZU1BfltagADFZwLN55clELOkzyJ76JOYe/\n8e7EkcHrYklnjLHOmr5VIN/WzNkzGM7OAH4rb7eFDXVNu1+X5mIKz6iNJL4MP4Ad\nr11+LklBAQ35gzRdrSdGDz22HT8Ft331Xt9bKuhSzRsUgd0bmEIhMc0+vPk+gL4V\n2PNzjGHc/SgZF0Ww2dF+m3mmqTxyspA8LDNv7Jxuq1L3OTGbOFo=\n=27Ry\n-----END PGP SIGNATURE-----", "payload": "tree 51996fc2fad81eccf4a3f50435495cad208b4bd1\nparent b01b0083baa758b18a3d0aece01e16c38fde2eb1\nauthor flip1995 <uwdkn@student.kit.edu> 1521991411 +0200\ncommitter flip1995 <uwdkn@student.kit.edu> 1522106485 +0200\n\nFix check of immutable condition in closure\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d458f22d89eff815b2a0f2cf3d1655d393b26714", "html_url": "https://github.com/rust-lang/rust/commit/d458f22d89eff815b2a0f2cf3d1655d393b26714", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d458f22d89eff815b2a0f2cf3d1655d393b26714/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b01b0083baa758b18a3d0aece01e16c38fde2eb1", "url": "https://api.github.com/repos/rust-lang/rust/commits/b01b0083baa758b18a3d0aece01e16c38fde2eb1", "html_url": "https://github.com/rust-lang/rust/commit/b01b0083baa758b18a3d0aece01e16c38fde2eb1"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "94adb4d03a34036aa5e8dce9f3ab302377881b95", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/d458f22d89eff815b2a0f2cf3d1655d393b26714/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d458f22d89eff815b2a0f2cf3d1655d393b26714/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=d458f22d89eff815b2a0f2cf3d1655d393b26714", "patch": "@@ -2150,8 +2150,20 @@ fn check_infinite_loop<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, cond: &'tcx Expr, b\n         return;\n     }\n \n+    if mut_var_visitor.ids.is_empty() {\n+        span_lint(\n+            cx,\n+            WHILE_IMMUTABLE_CONDITION,\n+            cond.span,\n+            \"all variables in condition are immutable. This either leads to an infinite or to a never running loop.\",\n+        );\n+        return;\n+    }\n+\n+\n     let mut delegate = MutVarsDelegate {\n         used_mutably: mut_var_visitor.ids,\n+        skip: false,\n     };\n     let def_id = def_id::DefId::local(block.hir_id.owner);\n     let region_scope_tree = &cx.tcx.region_scope_tree(def_id);\n@@ -2194,7 +2206,10 @@ impl<'a, 'tcx> VarCollectorVisitor<'a, 'tcx> {\n impl<'a, 'tcx> Visitor<'tcx> for VarCollectorVisitor<'a, 'tcx> {\n     fn visit_expr(&mut self, ex: &'tcx Expr) {\n         match ex.node {\n-            ExprPath(_) => self.insert_def_id(ex),\n+            ExprPath(_) => if let Some(node_id) = check_for_mutability(self.cx, ex) {\n+                self.ids.insert(node_id, false);\n+            },\n+\n             // If there is any fuction/method call\u2026 we just stop analysis\n             ExprCall(..) | ExprMethodCall(..) => self.skip = true,\n \n@@ -2211,6 +2226,7 @@ impl<'a, 'tcx> Visitor<'tcx> for VarCollectorVisitor<'a, 'tcx> {\n \n struct MutVarsDelegate {\n     used_mutably: HashMap<NodeId, bool>,\n+    skip: bool,\n }\n \n impl<'tcx> MutVarsDelegate {\n@@ -2220,6 +2236,7 @@ impl<'tcx> MutVarsDelegate {\n                 if let Some(used) = self.used_mutably.get_mut(&id) {\n                     *used = true;\n                 },\n+            Categorization::Upvar(_) => skip = true,\n             Categorization::Deref(ref cmt, _) => self.update(&cmt.cat, sp),\n             _ => {}\n         }"}, {"sha": "4029f9a9b2950b6bb8d1bf5df70ef3b21e7e72f2", "filename": "tests/ui/infinite_loop.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d458f22d89eff815b2a0f2cf3d1655d393b26714/tests%2Fui%2Finfinite_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d458f22d89eff815b2a0f2cf3d1655d393b26714/tests%2Fui%2Finfinite_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finfinite_loop.rs?ref=d458f22d89eff815b2a0f2cf3d1655d393b26714", "patch": "@@ -1,9 +1,13 @@\n+\n+\n+\n fn fn_val(i: i32) -> i32 { unimplemented!() }\n fn fn_constref(i: &i32) -> i32 { unimplemented!() }\n fn fn_mutref(i: &mut i32) { unimplemented!() }\n fn fooi() -> i32 { unimplemented!() }\n fn foob() -> bool { unimplemented!() }\n \n+#[allow(many_single_char_names)]\n fn immutable_condition() {\n     // Should warn when all vars mentionned are immutable\n     let y = 0;\n@@ -43,6 +47,14 @@ fn immutable_condition() {\n         println!(\"OK - Fn call results may vary\");\n     }\n \n+    let mut a = 0;\n+    let mut c = move || {\n+        while a < 5 {\n+            a += 1;\n+            println!(\"OK - a is mutable\");\n+        }\n+    };\n+    c();\n }\n \n fn unused_var() {"}]}