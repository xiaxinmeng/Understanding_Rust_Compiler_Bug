{"sha": "02443552c56c0b5d909ba3ddc653e686dff09d9c", "node_id": "C_kwDOAAsO6NoAKDAyNDQzNTUyYzU2YzBiNWQ5MDliYTNkZGM2NTNlNjg2ZGZmMDlkOWM", "commit": {"author": {"name": "Ding Xiang Fei", "email": "dingxiangfei2009@protonmail.ch", "date": "2022-07-30T16:02:47Z"}, "committer": {"name": "Ding Xiang Fei", "email": "dingxiangfei2009@protonmail.ch", "date": "2022-07-30T16:02:47Z"}, "message": "break out to one scope higher for let-else", "tree": {"sha": "9384a6471b8fa3751632563a552053751ff0e906", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9384a6471b8fa3751632563a552053751ff0e906"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02443552c56c0b5d909ba3ddc653e686dff09d9c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE0u8S3YU336XkLsQOPNdIZH7vY1kFAmLlVicACgkQPNdIZH7v\nY1nu3BAAlLuvpvVGfT00NBQv7rNbsNhBHUFEXxN03tv8jikIsrdCAYQ8Fl2O7xSf\nWWda8phUQzt3xZsvnvgd16q7BVzy8dcBVgXTj5SDkZpf86l1Llvx6Ud17AvU6JP7\nYeA4B1THKf7XOgkHHA/ZnbPRsk9j2CezA62YajSrrBpYceUxfFUPBQxgFMlF+sie\nT1vqvW4ltXCpzfxOCgoKj/E1FtbmGyy64DbHIydW6gOzXYWuBOQTHDzNPbkbh8hu\n177KB5Ra0hsM7qEQ/OrM0uKh9ovQucNmQ+mMwnwqe3/qsMMQw2bjCRnZLDlRSPsl\nGTkrDqkEkIf1HFIOmO+fANUyw5mnmbnkdw1p2K6+ca4bPZQHmJwxAcxOwj474atE\nJMuFFo+WHhGsHRmgjrMSKA8VgJigJ/W6BhAWuk/YIp66V3VXVLzMJvrWR86itu4N\nEhB+V5N8aK017NB+DR8JQNugqwpjWzg59wqw1sf6QGubPOOlnEOaLYra8A77JAUH\nCdAQYqcqj5XUHyJ270ywjBfBIU1iK19TRZrvDoiNA4WjdBD8KiB+BrYV5r9JYcnY\nHGN/rK1TGKdInd4vg4qwjGhRsicOxI6Z2qk0n4LKuZWdu4JrhW2CSH59uYani/pu\nFYZooxGiLVLvB4dhZHodPUbYk+ziMRMBy+YNRDY80VQsjzaRIfM=\n=rFwo\n-----END PGP SIGNATURE-----", "payload": "tree 9384a6471b8fa3751632563a552053751ff0e906\nparent c907b6f7e0f89c3c4146b585961d2ddcf173584b\nauthor Ding Xiang Fei <dingxiangfei2009@protonmail.ch> 1659196967 +0800\ncommitter Ding Xiang Fei <dingxiangfei2009@protonmail.ch> 1659196967 +0800\n\nbreak out to one scope higher for let-else\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02443552c56c0b5d909ba3ddc653e686dff09d9c", "html_url": "https://github.com/rust-lang/rust/commit/02443552c56c0b5d909ba3ddc653e686dff09d9c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02443552c56c0b5d909ba3ddc653e686dff09d9c/comments", "author": {"login": "dingxiangfei2009", "id": 6884440, "node_id": "MDQ6VXNlcjY4ODQ0NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/6884440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dingxiangfei2009", "html_url": "https://github.com/dingxiangfei2009", "followers_url": "https://api.github.com/users/dingxiangfei2009/followers", "following_url": "https://api.github.com/users/dingxiangfei2009/following{/other_user}", "gists_url": "https://api.github.com/users/dingxiangfei2009/gists{/gist_id}", "starred_url": "https://api.github.com/users/dingxiangfei2009/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dingxiangfei2009/subscriptions", "organizations_url": "https://api.github.com/users/dingxiangfei2009/orgs", "repos_url": "https://api.github.com/users/dingxiangfei2009/repos", "events_url": "https://api.github.com/users/dingxiangfei2009/events{/privacy}", "received_events_url": "https://api.github.com/users/dingxiangfei2009/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dingxiangfei2009", "id": 6884440, "node_id": "MDQ6VXNlcjY4ODQ0NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/6884440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dingxiangfei2009", "html_url": "https://github.com/dingxiangfei2009", "followers_url": "https://api.github.com/users/dingxiangfei2009/followers", "following_url": "https://api.github.com/users/dingxiangfei2009/following{/other_user}", "gists_url": "https://api.github.com/users/dingxiangfei2009/gists{/gist_id}", "starred_url": "https://api.github.com/users/dingxiangfei2009/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dingxiangfei2009/subscriptions", "organizations_url": "https://api.github.com/users/dingxiangfei2009/orgs", "repos_url": "https://api.github.com/users/dingxiangfei2009/repos", "events_url": "https://api.github.com/users/dingxiangfei2009/events{/privacy}", "received_events_url": "https://api.github.com/users/dingxiangfei2009/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c907b6f7e0f89c3c4146b585961d2ddcf173584b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c907b6f7e0f89c3c4146b585961d2ddcf173584b", "html_url": "https://github.com/rust-lang/rust/commit/c907b6f7e0f89c3c4146b585961d2ddcf173584b"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "c52a7b187d5190bd88a3e8769bb6618f34c2fdd5", "filename": "compiler/rustc_mir_build/src/build/block.rs", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/02443552c56c0b5d909ba3ddc653e686dff09d9c/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02443552c56c0b5d909ba3ddc653e686dff09d9c/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fblock.rs?ref=02443552c56c0b5d909ba3ddc653e686dff09d9c", "patch": "@@ -1,6 +1,7 @@\n use crate::build::matches::ArmHasGuard;\n use crate::build::ForGuard::OutsideGuard;\n use crate::build::{BlockAnd, BlockAndExtension, BlockFrame, Builder};\n+use rustc_middle::middle::region::Scope;\n use rustc_middle::thir::*;\n use rustc_middle::{mir::*, ty};\n use rustc_span::Span;\n@@ -34,10 +35,19 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n                             &stmts,\n                             expr,\n                             safety_mode,\n+                            region_scope,\n                         ))\n                     })\n                 } else {\n-                    this.ast_block_stmts(destination, block, span, &stmts, expr, safety_mode)\n+                    this.ast_block_stmts(\n+                        destination,\n+                        block,\n+                        span,\n+                        &stmts,\n+                        expr,\n+                        safety_mode,\n+                        region_scope,\n+                    )\n                 }\n             })\n         })\n@@ -51,6 +61,7 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n         stmts: &[StmtId],\n         expr: Option<&Expr<'tcx>>,\n         safety_mode: BlockSafety,\n+        region_scope: Scope,\n     ) -> BlockAnd<()> {\n         let this = self;\n \n@@ -73,6 +84,9 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n         let mut let_scope_stack = Vec::with_capacity(8);\n         let outer_source_scope = this.source_scope;\n         let outer_in_scope_unsafe = this.in_scope_unsafe;\n+        // This scope information is kept for breaking out of the current block in case\n+        // one let-else pattern matching fails.\n+        let mut last_remainder_scope = region_scope;\n         this.update_source_scope_for_safety_mode(span, safety_mode);\n \n         let source_info = this.source_info(span);\n@@ -132,7 +146,7 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n                                                 initializer_span,\n                                                 else_block,\n                                                 visibility_scope,\n-                                                *remainder_scope,\n+                                                last_remainder_scope,\n                                                 remainder_span,\n                                                 pattern,\n                                             )\n@@ -178,6 +192,7 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n                     if let Some(source_scope) = visibility_scope {\n                         this.source_scope = source_scope;\n                     }\n+                    last_remainder_scope = *remainder_scope;\n                 }\n             }\n "}]}