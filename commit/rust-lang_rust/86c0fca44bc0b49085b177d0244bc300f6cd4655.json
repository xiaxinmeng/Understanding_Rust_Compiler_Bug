{"sha": "86c0fca44bc0b49085b177d0244bc300f6cd4655", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2YzBmY2E0NGJjMGI0OTA4NWIxNzdkMDI0NGJjMzAwZjZjZDQ2NTU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-31T19:18:30Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-04-02T11:40:43Z"}, "message": "use direct import for ErrorReported", "tree": {"sha": "9e4e6accb7cda19bfc4cfda30a14a0bcdfb8ecdf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e4e6accb7cda19bfc4cfda30a14a0bcdfb8ecdf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86c0fca44bc0b49085b177d0244bc300f6cd4655", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86c0fca44bc0b49085b177d0244bc300f6cd4655", "html_url": "https://github.com/rust-lang/rust/commit/86c0fca44bc0b49085b177d0244bc300f6cd4655", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86c0fca44bc0b49085b177d0244bc300f6cd4655/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "124144704fa5d3f08563430d5c24abb23da24423", "url": "https://api.github.com/repos/rust-lang/rust/commits/124144704fa5d3f08563430d5c24abb23da24423", "html_url": "https://github.com/rust-lang/rust/commit/124144704fa5d3f08563430d5c24abb23da24423"}], "stats": {"total": 73, "additions": 29, "deletions": 44}, "files": [{"sha": "939f9e9c2a0c778a191bd194da48e7dabf247b0f", "filename": "src/librustc_codegen_llvm/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_codegen_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_codegen_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Flib.rs?ref=86c0fca44bc0b49085b177d0244bc300f6cd4655", "patch": "@@ -23,11 +23,10 @@ use rustc_codegen_ssa::back::write::{CodegenContext, FatLTOInput, ModuleConfig};\n use rustc_codegen_ssa::traits::*;\n use rustc_codegen_ssa::ModuleCodegen;\n use rustc_codegen_ssa::{CodegenResults, CompiledModule};\n-use rustc_errors::{FatalError, Handler};\n+use rustc_errors::{ErrorReported, FatalError, Handler};\n use rustc_middle::dep_graph::{DepGraph, WorkProduct};\n use rustc_middle::middle::cstore::{EncodedMetadata, MetadataLoaderDyn};\n use rustc_middle::ty::{self, TyCtxt};\n-use rustc_middle::util::common::ErrorReported;\n use rustc_serialize::json;\n use rustc_session::config::{self, OptLevel, OutputFilenames, PrintRequest};\n use rustc_session::Session;"}, {"sha": "91be123beb0bcef36c10312eaca002f95800a3d4", "filename": "src/librustc_codegen_ssa/traits/backend.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbackend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbackend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbackend.rs?ref=86c0fca44bc0b49085b177d0244bc300f6cd4655", "patch": "@@ -3,12 +3,12 @@ use super::CodegenObject;\n use crate::ModuleCodegen;\n \n use rustc_ast::expand::allocator::AllocatorKind;\n+use rustc_errors::ErrorReported;\n use rustc_middle::dep_graph::DepGraph;\n use rustc_middle::middle::cstore::{EncodedMetadata, MetadataLoaderDyn};\n use rustc_middle::ty::layout::{HasTyCtxt, TyAndLayout};\n use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::{Ty, TyCtxt};\n-use rustc_middle::util::common::ErrorReported;\n use rustc_session::{\n     config::{self, OutputFilenames, PrintRequest},\n     Session,"}, {"sha": "ccbce01d6c12e61b2e2e8b1ae603b7c975483c6e", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=86c0fca44bc0b49085b177d0244bc300f6cd4655", "patch": "@@ -22,10 +22,8 @@ use rustc_ast::ast;\n use rustc_codegen_ssa::{traits::CodegenBackend, CodegenResults};\n use rustc_data_structures::profiling::print_time_passes_entry;\n use rustc_data_structures::sync::SeqCst;\n-use rustc_errors::{\n-    registry::{InvalidErrorCode, Registry},\n-    PResult,\n-};\n+use rustc_errors::registry::{InvalidErrorCode, Registry};\n+use rustc_errors::{ErrorReported, PResult};\n use rustc_feature::{find_gated_cfg, UnstableFeatures};\n use rustc_hir::def_id::LOCAL_CRATE;\n use rustc_interface::util::{collect_crate_types, get_builtin_codegen_backend};\n@@ -34,7 +32,6 @@ use rustc_lint::LintStore;\n use rustc_metadata::locator;\n use rustc_middle::middle::cstore::MetadataLoader;\n use rustc_middle::ty::TyCtxt;\n-use rustc_middle::util::common::ErrorReported;\n use rustc_save_analysis as save;\n use rustc_save_analysis::DumpHandler;\n use rustc_serialize::json::{self, ToJson};"}, {"sha": "78a271810b2881925e3ae0a8592838b23e9dc316", "filename": "src/librustc_driver/pretty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_driver%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_driver%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fpretty.rs?ref=86c0fca44bc0b49085b177d0244bc300f6cd4655", "patch": "@@ -2,12 +2,12 @@\n \n use rustc_ast::ast;\n use rustc_ast_pretty::pprust;\n+use rustc_errors::ErrorReported;\n use rustc_hir as hir;\n use rustc_hir::def_id::LOCAL_CRATE;\n use rustc_hir_pretty as pprust_hir;\n use rustc_middle::hir::map as hir_map;\n use rustc_middle::ty::{self, TyCtxt};\n-use rustc_middle::util::common::ErrorReported;\n use rustc_mir::util::{write_mir_graphviz, write_mir_pretty};\n use rustc_session::config::{Input, PpMode, PpSourceMode};\n use rustc_session::Session;"}, {"sha": "d206a30d526cb7550d352c636160feabd9f1499b", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/different_lifetimes.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fdifferent_lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fdifferent_lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fdifferent_lifetimes.rs?ref=86c0fca44bc0b49085b177d0244bc300f6cd4655", "patch": "@@ -5,9 +5,8 @@ use crate::infer::error_reporting::nice_region_error::util::AnonymousParamInfo;\n use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n use crate::infer::lexical_region_resolve::RegionResolutionError;\n use crate::infer::SubregionOrigin;\n-use rustc_middle::util::common::ErrorReported;\n \n-use rustc_errors::struct_span_err;\n+use rustc_errors::{struct_span_err, ErrorReported};\n \n impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {\n     /// Print the error message for lifetime errors when both the concerned regions are anonymous."}, {"sha": "2aed3d9a469fb82704b9e120d72c8885e4e2fc79", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fmod.rs?ref=86c0fca44bc0b49085b177d0244bc300f6cd4655", "patch": "@@ -1,9 +1,8 @@\n use crate::infer::lexical_region_resolve::RegionResolutionError;\n use crate::infer::lexical_region_resolve::RegionResolutionError::*;\n use crate::infer::InferCtxt;\n-use rustc_errors::DiagnosticBuilder;\n+use rustc_errors::{DiagnosticBuilder, ErrorReported};\n use rustc_middle::ty::{self, TyCtxt};\n-use rustc_middle::util::common::ErrorReported;\n use rustc_span::source_map::Span;\n \n mod different_lifetimes;"}, {"sha": "70c302710430b607ea413d77e46e88f151ce39f7", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/outlives_closure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Foutlives_closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Foutlives_closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Foutlives_closure.rs?ref=86c0fca44bc0b49085b177d0244bc300f6cd4655", "patch": "@@ -4,9 +4,9 @@\n use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n use crate::infer::lexical_region_resolve::RegionResolutionError::SubSupConflict;\n use crate::infer::SubregionOrigin;\n+use rustc_errors::ErrorReported;\n use rustc_hir::{Expr, ExprKind::Closure, Node};\n use rustc_middle::ty::RegionKind;\n-use rustc_middle::util::common::ErrorReported;\n \n impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {\n     /// Print the error message for lifetime errors when binding escapes a closure."}, {"sha": "7f3ec852e41de53ceb3b9f657e3553351d761116", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/static_impl_trait.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs?ref=86c0fca44bc0b49085b177d0244bc300f6cd4655", "patch": "@@ -3,9 +3,8 @@\n use crate::infer::error_reporting::msg_span_from_free_region;\n use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n use crate::infer::lexical_region_resolve::RegionResolutionError;\n-use rustc_errors::Applicability;\n+use rustc_errors::{Applicability, ErrorReported};\n use rustc_middle::ty::{BoundRegion, FreeRegion, RegionKind};\n-use rustc_middle::util::common::ErrorReported;\n \n impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {\n     /// Print the error message for lifetime errors when the return type is a static impl Trait."}, {"sha": "695f3e47fb5d7b18643b6b2e85bb4c903fc1ccb2", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/trait_impl_difference.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ftrait_impl_difference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ftrait_impl_difference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ftrait_impl_difference.rs?ref=86c0fca44bc0b49085b177d0244bc300f6cd4655", "patch": "@@ -4,8 +4,8 @@ use crate::infer::error_reporting::nice_region_error::NiceRegionError;\n use crate::infer::lexical_region_resolve::RegionResolutionError;\n use crate::infer::{Subtype, ValuePairs};\n use crate::traits::ObligationCauseCode::CompareImplMethodObligation;\n+use rustc_errors::ErrorReported;\n use rustc_middle::ty::Ty;\n-use rustc_middle::util::common::ErrorReported;\n use rustc_span::Span;\n \n impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {"}, {"sha": "8e929b7daa85000d0e0d77c2e782a9ea6718ce6c", "filename": "src/librustc_interface/interface.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_interface%2Finterface.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_interface%2Finterface.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Finterface.rs?ref=86c0fca44bc0b49085b177d0244bc300f6cd4655", "patch": "@@ -8,9 +8,9 @@ use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::sync::Lrc;\n use rustc_data_structures::OnDrop;\n use rustc_errors::registry::Registry;\n+use rustc_errors::ErrorReported;\n use rustc_lint::LintStore;\n use rustc_middle::ty;\n-use rustc_middle::util::common::ErrorReported;\n use rustc_parse::new_parser_from_source_str;\n use rustc_session::config::{self, ErrorOutputType, Input, OutputFilenames};\n use rustc_session::early_error;"}, {"sha": "609c80a2b790584577c73ceed2dcd78b7d69cdd2", "filename": "src/librustc_interface/passes.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_interface%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_interface%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fpasses.rs?ref=86c0fca44bc0b49085b177d0244bc300f6cd4655", "patch": "@@ -9,7 +9,7 @@ use rustc_codegen_ssa::back::link::emit_metadata;\n use rustc_codegen_ssa::traits::CodegenBackend;\n use rustc_data_structures::sync::{par_iter, Lrc, Once, ParallelIterator, WorkerLocal};\n use rustc_data_structures::{box_region_allow_access, declare_box_region_type, parallel};\n-use rustc_errors::PResult;\n+use rustc_errors::{ErrorReported, PResult};\n use rustc_expand::base::ExtCtxt;\n use rustc_hir::def_id::{CrateNum, LOCAL_CRATE};\n use rustc_hir::definitions::Definitions;\n@@ -21,7 +21,6 @@ use rustc_middle::middle;\n use rustc_middle::middle::cstore::{CrateStore, MetadataLoader, MetadataLoaderDyn};\n use rustc_middle::ty::steal::Steal;\n use rustc_middle::ty::{self, GlobalCtxt, ResolverOutputs, TyCtxt};\n-use rustc_middle::util::common::ErrorReported;\n use rustc_mir as mir;\n use rustc_mir_build as mir_build;\n use rustc_parse::{parse_crate_from_file, parse_crate_from_source_str};"}, {"sha": "6a62d754f289169e55d287bb9b94523df0e11bf5", "filename": "src/librustc_interface/queries.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_interface%2Fqueries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_interface%2Fqueries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fqueries.rs?ref=86c0fca44bc0b49085b177d0244bc300f6cd4655", "patch": "@@ -4,6 +4,7 @@ use crate::passes::{self, BoxedResolver, QueryContext};\n use rustc_ast::{self, ast};\n use rustc_codegen_ssa::traits::CodegenBackend;\n use rustc_data_structures::sync::{Lrc, Once, WorkerLocal};\n+use rustc_errors::ErrorReported;\n use rustc_hir::def_id::LOCAL_CRATE;\n use rustc_hir::Crate;\n use rustc_incremental::DepGraphFuture;\n@@ -12,7 +13,6 @@ use rustc_middle::arena::Arena;\n use rustc_middle::dep_graph::DepGraph;\n use rustc_middle::ty::steal::Steal;\n use rustc_middle::ty::{GlobalCtxt, ResolverOutputs, TyCtxt};\n-use rustc_middle::util::common::ErrorReported;\n use rustc_session::config::{OutputFilenames, OutputType};\n use rustc_session::{output::find_crate_name, Session};\n use rustc_span::symbol::sym;"}, {"sha": "cfc9e00b26ea16db305e915e6d5e8dc962ec46dc", "filename": "src/librustc_middle/ty/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fcontext.rs?ref=86c0fca44bc0b49085b177d0244bc300f6cd4655", "patch": "@@ -37,7 +37,6 @@ use crate::ty::{ConstVid, FloatVar, FloatVid, IntVar, IntVid, TyVar, TyVid};\n use crate::ty::{ExistentialPredicate, InferTy, ParamTy, PolyFnSig, Predicate, ProjectionTy};\n use crate::ty::{InferConst, ParamConst};\n use crate::ty::{List, TyKind, TyS};\n-use crate::util::common::ErrorReported;\n use rustc_ast::ast;\n use rustc_ast::expand::allocator::AllocatorKind;\n use rustc_ast::node_id::NodeMap;\n@@ -49,6 +48,7 @@ use rustc_data_structures::stable_hasher::{\n     hash_stable_hashmap, HashStable, StableHasher, StableVec,\n };\n use rustc_data_structures::sync::{self, Lock, Lrc, WorkerLocal};\n+use rustc_errors::ErrorReported;\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::{CrateNum, DefId, DefIdMap, DefIdSet, LocalDefId, LOCAL_CRATE};"}, {"sha": "612abe32b6e44174d4333d020d15fb641db6611e", "filename": "src/librustc_middle/ty/query/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_middle%2Fty%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_middle%2Fty%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fquery%2Fmod.rs?ref=86c0fca44bc0b49085b177d0244bc300f6cd4655", "patch": "@@ -34,13 +34,13 @@ use crate::ty::steal::Steal;\n use crate::ty::subst::{GenericArg, SubstsRef};\n use crate::ty::util::AlwaysRequiresDrop;\n use crate::ty::{self, AdtSizedConstraint, CrateInherentImpls, ParamEnvAnd, Ty, TyCtxt};\n-use crate::util::common::ErrorReported;\n use rustc_data_structures::fingerprint::Fingerprint;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet, FxIndexMap};\n use rustc_data_structures::profiling::ProfileCategory::*;\n use rustc_data_structures::stable_hasher::StableVec;\n use rustc_data_structures::svh::Svh;\n use rustc_data_structures::sync::Lrc;\n+use rustc_errors::ErrorReported;\n use rustc_hir as hir;\n use rustc_hir::def::DefKind;\n use rustc_hir::def_id::{CrateNum, DefId, DefIdMap, DefIdSet, LocalDefId};"}, {"sha": "86575b013335c7f9434c46d21094de05da1fe358", "filename": "src/librustc_middle/ty/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_middle%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_middle%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Futil.rs?ref=86c0fca44bc0b49085b177d0244bc300f6cd4655", "patch": "@@ -7,12 +7,12 @@ use crate::ty::query::TyCtxtAt;\n use crate::ty::subst::{GenericArgKind, InternalSubsts, Subst, SubstsRef};\n use crate::ty::TyKind::*;\n use crate::ty::{self, DefIdTree, GenericParamDefKind, Ty, TyCtxt, TypeFoldable};\n-use crate::util::common::ErrorReported;\n use rustc_apfloat::Float as _;\n use rustc_ast::ast;\n use rustc_attr::{self as attr, SignedInt, UnsignedInt};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n+use rustc_errors::ErrorReported;\n use rustc_hir as hir;\n use rustc_hir::def::DefKind;\n use rustc_hir::def_id::DefId;"}, {"sha": "1e09702bf27caec7923dddba60f53ed0194be406", "filename": "src/librustc_middle/util/common.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_middle%2Futil%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_middle%2Futil%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Futil%2Fcommon.rs?ref=86c0fca44bc0b49085b177d0244bc300f6cd4655", "patch": "@@ -8,8 +8,6 @@ use std::time::{Duration, Instant};\n #[cfg(test)]\n mod tests;\n \n-pub use rustc_errors::ErrorReported;\n-\n pub fn to_readable_str(mut val: usize) -> String {\n     let mut groups = vec![];\n     loop {"}, {"sha": "8c0843124f4f19d0ccd6a8e06a1116912a27ec05", "filename": "src/librustc_mir_build/hair/pattern/_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2F_match.rs?ref=86c0fca44bc0b49085b177d0244bc300f6cd4655", "patch": "@@ -236,13 +236,13 @@ use super::{compare_const_vals, PatternFoldable, PatternFolder};\n use super::{FieldPat, Pat, PatKind, PatRange};\n \n use rustc_attr::{SignedInt, UnsignedInt};\n+use rustc_errors::ErrorReported;\n use rustc_hir::def_id::DefId;\n use rustc_hir::{HirId, RangeEnd};\n use rustc_middle::mir::interpret::{truncate, AllocId, ConstValue, Pointer, Scalar};\n use rustc_middle::mir::Field;\n use rustc_middle::ty::layout::IntegerExt;\n use rustc_middle::ty::{self, Const, Ty, TyCtxt, TypeFoldable, VariantDef};\n-use rustc_middle::util::common::ErrorReported;\n use rustc_session::lint;\n use rustc_span::{Span, DUMMY_SP};\n use rustc_target::abi::{Integer, Size, VariantIdx};"}, {"sha": "9a853c32eaa26aa528b065e4030544399d6e4166", "filename": "src/librustc_trait_selection/traits/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_trait_selection%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_trait_selection%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Fmod.rs?ref=86c0fca44bc0b49085b177d0244bc300f6cd4655", "patch": "@@ -24,13 +24,13 @@ use crate::infer::outlives::env::OutlivesEnvironment;\n use crate::infer::{InferCtxt, RegionckMode, TyCtxtInferExt};\n use crate::traits::error_reporting::InferCtxtExt as _;\n use crate::traits::query::evaluate_obligation::InferCtxtExt as _;\n+use rustc_errors::ErrorReported;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_middle::middle::region;\n use rustc_middle::ty::fold::TypeFoldable;\n use rustc_middle::ty::subst::{InternalSubsts, SubstsRef};\n use rustc_middle::ty::{self, GenericParamDefKind, ToPredicate, Ty, TyCtxt, WithConstness};\n-use rustc_middle::util::common::ErrorReported;\n use rustc_span::{Span, DUMMY_SP};\n \n use std::fmt::Debug;"}, {"sha": "cf29c4249c019e8c2329048b3e6b233f1b915da8", "filename": "src/librustc_trait_selection/traits/on_unimplemented.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_trait_selection%2Ftraits%2Fon_unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_trait_selection%2Ftraits%2Fon_unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Fon_unimplemented.rs?ref=86c0fca44bc0b49085b177d0244bc300f6cd4655", "patch": "@@ -1,13 +1,11 @@\n use fmt_macros::{Parser, Piece, Position};\n \n-use rustc_middle::ty::{self, GenericParamDefKind, TyCtxt};\n-use rustc_middle::util::common::ErrorReported;\n-\n use rustc_ast::ast::{MetaItem, NestedMetaItem};\n use rustc_attr as attr;\n use rustc_data_structures::fx::FxHashMap;\n-use rustc_errors::struct_span_err;\n+use rustc_errors::{struct_span_err, ErrorReported};\n use rustc_hir::def_id::DefId;\n+use rustc_middle::ty::{self, GenericParamDefKind, TyCtxt};\n use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_span::Span;\n "}, {"sha": "9e2a6fb1d835034bce74348caaf9833e789f82ef", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=86c0fca44bc0b49085b177d0244bc300f6cd4655", "patch": "@@ -9,10 +9,10 @@ use crate::collect::PlaceholderHirTyCollector;\n use crate::middle::lang_items::SizedTraitLangItem;\n use crate::middle::resolve_lifetime as rl;\n use crate::require_c_abi_if_c_variadic;\n-use crate::util::common::ErrorReported;\n use rustc_ast::ast;\n use rustc_ast::util::lev_distance::find_best_match_for_name;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n+use rustc_errors::ErrorReported;\n use rustc_errors::{pluralize, struct_span_err, Applicability, DiagnosticId, FatalError};\n use rustc_hir as hir;\n use rustc_hir::def::{CtorOf, DefKind, Namespace, Res};"}, {"sha": "c726ae41ff0a8d27e9798ecfa26726ec6fb2fb8d", "filename": "src/librustc_typeck/check/cast.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs?ref=86c0fca44bc0b49085b177d0244bc300f6cd4655", "patch": "@@ -32,9 +32,8 @@ use super::FnCtxt;\n \n use crate::hir::def_id::DefId;\n use crate::type_error_struct;\n-use crate::util::common::ErrorReported;\n use rustc_ast::ast;\n-use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder};\n+use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder, ErrorReported};\n use rustc_hir as hir;\n use rustc_middle::middle::lang_items;\n use rustc_middle::ty::adjustment::AllowTwoPhase;"}, {"sha": "24db25a1f345618eb3bc5a811ae03e5b594abcf7", "filename": "src/librustc_typeck/check/compare_method.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_typeck%2Fcheck%2Fcompare_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_typeck%2Fcheck%2Fcompare_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcompare_method.rs?ref=86c0fca44bc0b49085b177d0244bc300f6cd4655", "patch": "@@ -1,4 +1,4 @@\n-use rustc_errors::{pluralize, struct_span_err, Applicability, DiagnosticId};\n+use rustc_errors::{pluralize, struct_span_err, Applicability, DiagnosticId, ErrorReported};\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::intravisit;\n@@ -8,7 +8,6 @@ use rustc_middle::ty::error::{ExpectedFound, TypeError};\n use rustc_middle::ty::subst::{InternalSubsts, Subst};\n use rustc_middle::ty::util::ExplicitSelf;\n use rustc_middle::ty::{self, GenericParamDefKind, TyCtxt};\n-use rustc_middle::util::common::ErrorReported;\n use rustc_span::Span;\n use rustc_trait_selection::traits::error_reporting::InferCtxtExt;\n use rustc_trait_selection::traits::{self, ObligationCause, ObligationCauseCode, Reveal};"}, {"sha": "72220d93d929d92a7cb022c703210938106b25de", "filename": "src/librustc_typeck/check/dropck.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_typeck%2Fcheck%2Fdropck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_typeck%2Fcheck%2Fdropck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdropck.rs?ref=86c0fca44bc0b49085b177d0244bc300f6cd4655", "patch": "@@ -1,8 +1,7 @@\n use crate::check::regionck::RegionCtxt;\n use crate::hir;\n use crate::hir::def_id::DefId;\n-use crate::util::common::ErrorReported;\n-use rustc_errors::struct_span_err;\n+use rustc_errors::{struct_span_err, ErrorReported};\n use rustc_infer::infer::outlives::env::OutlivesEnvironment;\n use rustc_infer::infer::{InferOk, RegionckMode, TyCtxtInferExt};\n use rustc_infer::traits::TraitEngineExt as _;"}, {"sha": "2986a952aa9740390eb0ff283d9b74b6891315f0", "filename": "src/librustc_typeck/check/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs?ref=86c0fca44bc0b49085b177d0244bc300f6cd4655", "patch": "@@ -15,11 +15,11 @@ use crate::check::FnCtxt;\n use crate::check::Needs;\n use crate::check::TupleArgumentsFlag::DontTupleArguments;\n use crate::type_error_struct;\n-use crate::util::common::ErrorReported;\n \n use rustc_ast::ast;\n use rustc_ast::util::lev_distance::find_best_match_for_name;\n use rustc_data_structures::fx::FxHashMap;\n+use rustc_errors::ErrorReported;\n use rustc_errors::{pluralize, struct_span_err, Applicability, DiagnosticBuilder, DiagnosticId};\n use rustc_hir as hir;\n use rustc_hir::def::{CtorKind, DefKind, Res};"}, {"sha": "113107a810dba7c02fa5e7a78588f856dc01330b", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=86c0fca44bc0b49085b177d0244bc300f6cd4655", "patch": "@@ -94,6 +94,7 @@ use rustc_ast::util::parser::ExprPrecedence;\n use rustc_attr as attr;\n use rustc_data_structures::captures::Captures;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n+use rustc_errors::ErrorReported;\n use rustc_errors::{pluralize, struct_span_err, Applicability, DiagnosticBuilder, DiagnosticId};\n use rustc_hir as hir;\n use rustc_hir::def::{CtorOf, DefKind, Res};\n@@ -151,7 +152,7 @@ use std::ops::{self, Deref};\n use std::slice;\n \n use crate::require_c_abi_if_c_variadic;\n-use crate::util::common::{indenter, ErrorReported};\n+use crate::util::common::indenter;\n use crate::TypeAndSubsts;\n \n use self::autoderef::Autoderef;"}, {"sha": "7ea6c1c17869a2ad6c7dcbb870b69f3c601da34b", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=86c0fca44bc0b49085b177d0244bc300f6cd4655", "patch": "@@ -89,7 +89,7 @@ mod outlives;\n mod structured_errors;\n mod variance;\n \n-use rustc_errors::struct_span_err;\n+use rustc_errors::{struct_span_err, ErrorReported};\n use rustc_hir as hir;\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n use rustc_hir::Node;\n@@ -100,7 +100,6 @@ use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::subst::SubstsRef;\n use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_middle::util;\n-use rustc_middle::util::common::ErrorReported;\n use rustc_session::config::EntryFnType;\n use rustc_span::{Span, DUMMY_SP};\n use rustc_target::spec::abi::Abi;"}, {"sha": "7841d5eef58a80d2976094f372d4671082b32e36", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86c0fca44bc0b49085b177d0244bc300f6cd4655/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=86c0fca44bc0b49085b177d0244bc300f6cd4655", "patch": "@@ -1,12 +1,12 @@\n use rustc_ast::ast;\n use rustc_ast::with_globals;\n use rustc_data_structures::sync::Lrc;\n+use rustc_errors::ErrorReported;\n use rustc_feature::UnstableFeatures;\n use rustc_hir as hir;\n use rustc_hir::intravisit;\n use rustc_interface::interface;\n use rustc_middle::hir::map::Map;\n-use rustc_middle::util::common::ErrorReported;\n use rustc_session::{self, config, DiagnosticOutput, Session};\n use rustc_span::edition::Edition;\n use rustc_span::source_map::SourceMap;"}]}