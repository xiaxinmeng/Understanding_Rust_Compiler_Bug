{"sha": "3ecaf57b2940d733e92a285d5cff8c766d28f2e1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlY2FmNTdiMjk0MGQ3MzNlOTJhMjg1ZDVjZmY4Yzc2NmQyOGYyZTE=", "commit": {"author": {"name": "Waffle Lapkin", "email": "waffle.lapkin@gmail.com", "date": "2021-04-18T09:32:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-18T09:32:10Z"}, "message": "Slightly change wording and fix typo in vec/mod.rs", "tree": {"sha": "20df2df0611c141f6f4cba0c26076e011532c171", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20df2df0611c141f6f4cba0c26076e011532c171"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ecaf57b2940d733e92a285d5cff8c766d28f2e1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJge/yaCRBK7hj4Ov3rIwAA32kIAAQjw9evKSxYCHQvNWmV/h1E\nYhbREiy5qVOQccaTUSFK8rpBTr9A7FBzGjC1JbALPW1tqGmd4yHuSILTrOBntHO/\nSJ3fb6hO9RV7rlJllGjHqXIVIDpRFA5LiVaXbZGXqcewvUkHPTam+U09i8QB2496\nNKZZK/7RSJXRvpAl25MiC61eMntwn+6+mkzNRHGzKLP6zfgLW7TF355Lkjr3eSQx\nWIN99PRXhDTtxkDN/o15TDxgs83Mz8ReHtHt7SDVUVhrkJwe2+urSzjcCkN6GUJ3\nh1VjYScIdwBqQPDx8yQ7RipJvv+NAKOzgh8iLUNJI+Yg4cLlYjOBKRu8LNwmz9s=\n=GOJC\n-----END PGP SIGNATURE-----\n", "payload": "tree 20df2df0611c141f6f4cba0c26076e011532c171\nparent 67650104959003d1a5828f8d79ad72aa08752055\nauthor Waffle Lapkin <waffle.lapkin@gmail.com> 1618738330 +0300\ncommitter GitHub <noreply@github.com> 1618738330 +0300\n\nSlightly change wording and fix typo in vec/mod.rs"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ecaf57b2940d733e92a285d5cff8c766d28f2e1", "html_url": "https://github.com/rust-lang/rust/commit/3ecaf57b2940d733e92a285d5cff8c766d28f2e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ecaf57b2940d733e92a285d5cff8c766d28f2e1/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67650104959003d1a5828f8d79ad72aa08752055", "url": "https://api.github.com/repos/rust-lang/rust/commits/67650104959003d1a5828f8d79ad72aa08752055", "html_url": "https://github.com/rust-lang/rust/commit/67650104959003d1a5828f8d79ad72aa08752055"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "1b78356fde5bcb8a514a06aa5824551117655372", "filename": "library/alloc/src/vec/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3ecaf57b2940d733e92a285d5cff8c766d28f2e1/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ecaf57b2940d733e92a285d5cff8c766d28f2e1/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs?ref=3ecaf57b2940d733e92a285d5cff8c766d28f2e1", "patch": "@@ -2041,7 +2041,7 @@ impl<T, A: Allocator> Vec<T, A> {\n \n     /// Safety: changing returned .2 (&mut usize) is considered the same as calling `.set_len(_)`.\n     ///\n-    /// This method is used to have unique access to all vec parts at once in `extend_from_within`.\n+    /// This method provides unique access to all vec parts at once in `extend_from_within`.\n     unsafe fn split_at_spare_mut_with_len(\n         &mut self,\n     ) -> (&mut [T], &mut [MaybeUninit<T>], &mut usize) {\n@@ -2279,7 +2279,7 @@ impl<T: Clone, A: Allocator> ExtendFromWithinSpec for Vec<T, A> {\n         iter::zip(to_clone, spare)\n             .map(|(src, dst)| dst.write(src.clone()))\n             // Note:\n-            // - Element was just initialized with `MaybeUninit::write`, so it's ok to increace len\n+            // - Element was just initialized with `MaybeUninit::write`, so it's ok to increase len\n             // - len is increased after each element to prevent leaks (see issue #82533)\n             .for_each(|_| *len += 1);\n     }"}]}