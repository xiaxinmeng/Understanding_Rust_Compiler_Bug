{"sha": "3832a8d25379dd3cc0ac847ad3d95015f7b8c399", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4MzJhOGQyNTM3OWRkM2NjMGFjODQ3YWQzZDk1MDE1ZjdiOGMzOTk=", "commit": {"author": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2019-06-12T17:27:14Z"}, "committer": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2019-06-12T19:49:02Z"}, "message": "Fix wrong lifetime of TyCtxt", "tree": {"sha": "22e19dd5096f6320a080bfcae8db18d7a0a2301a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/22e19dd5096f6320a080bfcae8db18d7a0a2301a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3832a8d25379dd3cc0ac847ad3d95015f7b8c399", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3832a8d25379dd3cc0ac847ad3d95015f7b8c399", "html_url": "https://github.com/rust-lang/rust/commit/3832a8d25379dd3cc0ac847ad3d95015f7b8c399", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3832a8d25379dd3cc0ac847ad3d95015f7b8c399/comments", "author": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d9cd9e120bfa13f21e93205a138a183fa1c5ae1", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d9cd9e120bfa13f21e93205a138a183fa1c5ae1", "html_url": "https://github.com/rust-lang/rust/commit/5d9cd9e120bfa13f21e93205a138a183fa1c5ae1"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "b068f6541fc7ce2754ec83a6ad85c70a90c9fbb7", "filename": "clippy_lints/src/consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3832a8d25379dd3cc0ac847ad3d95015f7b8c399/clippy_lints%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3832a8d25379dd3cc0ac847ad3d95015f7b8c399/clippy_lints%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fconsts.rs?ref=3832a8d25379dd3cc0ac847ad3d95015f7b8c399", "patch": "@@ -121,7 +121,7 @@ impl Hash for Constant {\n }\n \n impl Constant {\n-    pub fn partial_cmp(tcx: TyCtxt<'_, '_, '_>, cmp_type: Ty<'_>, left: &Self, right: &Self) -> Option<Ordering> {\n+    pub fn partial_cmp(tcx: TyCtxt<'_, '_>, cmp_type: Ty<'_>, left: &Self, right: &Self) -> Option<Ordering> {\n         match (left, right) {\n             (&Constant::Str(ref ls), &Constant::Str(ref rs)) => Some(ls.cmp(rs)),\n             (&Constant::Char(ref l), &Constant::Char(ref r)) => Some(l.cmp(r)),"}, {"sha": "c22754084bc5da5e5fcce5434d64ffdcb4a8c8ed", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3832a8d25379dd3cc0ac847ad3d95015f7b8c399/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3832a8d25379dd3cc0ac847ad3d95015f7b8c399/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=3832a8d25379dd3cc0ac847ad3d95015f7b8c399", "patch": "@@ -860,7 +860,7 @@ declare_clippy_lint! {\n \n /// Returns the size in bits of an integral type.\n /// Will return 0 if the type is not an int or uint variant\n-fn int_ty_to_nbits(typ: Ty<'_>, tcx: TyCtxt<'_, '_, '_>) -> u64 {\n+fn int_ty_to_nbits(typ: Ty<'_>, tcx: TyCtxt<'_, '_>) -> u64 {\n     match typ.sty {\n         ty::Int(i) => match i {\n             IntTy::Isize => tcx.data_layout.pointer_size.bits(),"}, {"sha": "184265ab3abc72bda9fb7d361479d06ce39f280e", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3832a8d25379dd3cc0ac847ad3d95015f7b8c399/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3832a8d25379dd3cc0ac847ad3d95015f7b8c399/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=3832a8d25379dd3cc0ac847ad3d95015f7b8c399", "patch": "@@ -911,28 +911,28 @@ pub fn get_arg_name(pat: &Pat) -> Option<ast::Name> {\n     }\n }\n \n-pub fn int_bits(tcx: TyCtxt<'_, '_, '_>, ity: ast::IntTy) -> u64 {\n+pub fn int_bits(tcx: TyCtxt<'_, '_>, ity: ast::IntTy) -> u64 {\n     layout::Integer::from_attr(&tcx, attr::IntType::SignedInt(ity))\n         .size()\n         .bits()\n }\n \n #[allow(clippy::cast_possible_wrap)]\n /// Turn a constant int byte representation into an i128\n-pub fn sext(tcx: TyCtxt<'_, '_, '_>, u: u128, ity: ast::IntTy) -> i128 {\n+pub fn sext(tcx: TyCtxt<'_, '_>, u: u128, ity: ast::IntTy) -> i128 {\n     let amt = 128 - int_bits(tcx, ity);\n     ((u as i128) << amt) >> amt\n }\n \n #[allow(clippy::cast_sign_loss)]\n /// clip unused bytes\n-pub fn unsext(tcx: TyCtxt<'_, '_, '_>, u: i128, ity: ast::IntTy) -> u128 {\n+pub fn unsext(tcx: TyCtxt<'_, '_>, u: i128, ity: ast::IntTy) -> u128 {\n     let amt = 128 - int_bits(tcx, ity);\n     ((u as u128) << amt) >> amt\n }\n \n /// clip unused bytes\n-pub fn clip(tcx: TyCtxt<'_, '_, '_>, u: u128, ity: ast::UintTy) -> u128 {\n+pub fn clip(tcx: TyCtxt<'_, '_>, u: u128, ity: ast::UintTy) -> u128 {\n     let bits = layout::Integer::from_attr(&tcx, attr::IntType::UnsignedInt(ity))\n         .size()\n         .bits();\n@@ -973,7 +973,7 @@ pub fn without_block_comments(lines: Vec<&str>) -> Vec<&str> {\n     without\n }\n \n-pub fn any_parent_is_automatically_derived(tcx: TyCtxt<'_, '_, '_>, node: HirId) -> bool {\n+pub fn any_parent_is_automatically_derived(tcx: TyCtxt<'_, '_>, node: HirId) -> bool {\n     let map = &tcx.hir();\n     let mut prev_enclosing_node = None;\n     let mut enclosing_node = node;"}]}