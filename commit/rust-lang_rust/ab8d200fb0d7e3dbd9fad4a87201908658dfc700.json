{"sha": "ab8d200fb0d7e3dbd9fad4a87201908658dfc700", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiOGQyMDBmYjBkN2UzZGJkOWZhZDRhODcyMDE5MDg2NThkZmM3MDA=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-31T01:28:33Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-31T01:28:33Z"}, "message": "rustc: Read 'y' tags from external crates", "tree": {"sha": "4d0c2d3669f30626ff53871bf18d901d7461f3c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d0c2d3669f30626ff53871bf18d901d7461f3c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab8d200fb0d7e3dbd9fad4a87201908658dfc700", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab8d200fb0d7e3dbd9fad4a87201908658dfc700", "html_url": "https://github.com/rust-lang/rust/commit/ab8d200fb0d7e3dbd9fad4a87201908658dfc700", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab8d200fb0d7e3dbd9fad4a87201908658dfc700/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae5ba62b240a4b3d1dacc062ba2f57d62b89d4f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae5ba62b240a4b3d1dacc062ba2f57d62b89d4f5", "html_url": "https://github.com/rust-lang/rust/commit/ae5ba62b240a4b3d1dacc062ba2f57d62b89d4f5"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "4e7c21936021e79564654d8e91b1d71d688c99a1", "filename": "src/comp/front/creader.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ab8d200fb0d7e3dbd9fad4a87201908658dfc700/src%2Fcomp%2Ffront%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab8d200fb0d7e3dbd9fad4a87201908658dfc700/src%2Fcomp%2Ffront%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fcreader.rs?ref=ab8d200fb0d7e3dbd9fad4a87201908658dfc700", "patch": "@@ -548,6 +548,7 @@ fn kind_has_type_params(u8 kind_ch) -> bool {\n     // FIXME: It'd be great if we had u8 char literals.\n     if (kind_ch == ('c' as u8))      { ret false; }\n     else if (kind_ch == ('f' as u8)) { ret true;  }\n+    else if (kind_ch == ('y' as u8)) { ret true;  }\n     else if (kind_ch == ('o' as u8)) { ret true;  }\n     else if (kind_ch == ('t' as u8)) { ret true;  }\n     else if (kind_ch == ('m' as u8)) { ret false; }\n@@ -582,12 +583,15 @@ fn lookup_def(session.session sess, int cnum, vec[ast.ident] path)\n \n     // FIXME: It'd be great if we had u8 char literals.\n     auto def;\n-    if (kind_ch == ('c' as u8))      { def = ast.def_const(did);        }\n-    else if (kind_ch == ('f' as u8)) { def = ast.def_fn(did);           }\n-    else if (kind_ch == ('o' as u8)) { def = ast.def_obj(did);          }\n-    else if (kind_ch == ('t' as u8)) { def = ast.def_ty(did);           }\n-    else if (kind_ch == ('m' as u8)) { def = ast.def_mod(did);          }\n-    else if (kind_ch == ('n' as u8)) { def = ast.def_native_mod(did);   }\n+    if (kind_ch == ('c' as u8))         { def = ast.def_const(did);      }\n+    else if (kind_ch == ('f' as u8))    { def = ast.def_fn(did);         }\n+    else if (kind_ch == ('y' as u8))    { def = ast.def_ty(did);         }\n+    else if (kind_ch == ('o' as u8))    { def = ast.def_obj(did);        }\n+    else if (kind_ch == ('t' as u8)) {\n+        // We treat references to tags as references to types.\n+        def = ast.def_ty(did);\n+    } else if (kind_ch == ('m' as u8))  { def = ast.def_mod(did);        }\n+    else if (kind_ch == ('n' as u8))    { def = ast.def_native_mod(did); }\n     else if (kind_ch == ('v' as u8)) {\n         auto tid = get_variant_tag_id(ebml_r);\n         tid = tup(cnum, tid._1);"}]}