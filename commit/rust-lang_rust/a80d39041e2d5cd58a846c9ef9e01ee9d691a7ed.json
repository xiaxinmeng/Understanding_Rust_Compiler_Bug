{"sha": "a80d39041e2d5cd58a846c9ef9e01ee9d691a7ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4MGQzOTA0MWUyZDVjZDU4YTg0NmM5ZWY5ZTAxZWU5ZDY5MWE3ZWQ=", "commit": {"author": {"name": "Howard Su", "email": "howard0su@gmail.com", "date": "2020-09-02T22:31:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-02T22:31:21Z"}, "message": "Use inline(never) instead of cold\n\ninline(never) is better way to avoid optimizer to inline the function instead of cold.", "tree": {"sha": "6b2c64fc498c449890d84c21b1268e30067ee7c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b2c64fc498c449890d84c21b1268e30067ee7c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a80d39041e2d5cd58a846c9ef9e01ee9d691a7ed", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfUB05CRBK7hj4Ov3rIwAAdHIIAEW57mOrEsyiTvRvJB/0tkva\nyS+CYLBt+KRJ035PlIGVJv58FWL2/o4JruSPG3HWNHU76PJppNs9ZkTiimQuRXmu\n8pfShyB+90HYYltb8xBAXttFELWL+K8GKYhi77nS/oSWDUZZeM10BSR5vstRlacQ\nUBiSfRBDyN39cUVurpnQa0jG+QAOTvIIqdkapzbhL/fzcdaikEfnh6AyCC5zliEW\nAaUVMpVWPDbNgOWy1wZUzYAV2OTTHAFYG/Xtq7jrURrmPf95S3FQX1xZYoS8o8Vb\nCA0g8H5WYpiuu0BzoQYrE7pZKRWwaJvhFKvXghxpZitmbS3hLomYvLhmX3ty9d8=\n=BxDQ\n-----END PGP SIGNATURE-----\n", "payload": "tree 6b2c64fc498c449890d84c21b1268e30067ee7c5\nparent 80fc9b0ecb29050d45b17c64af004200afd3cfc2\nauthor Howard Su <howard0su@gmail.com> 1599085881 +0800\ncommitter GitHub <noreply@github.com> 1599085881 +0800\n\nUse inline(never) instead of cold\n\ninline(never) is better way to avoid optimizer to inline the function instead of cold."}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a80d39041e2d5cd58a846c9ef9e01ee9d691a7ed", "html_url": "https://github.com/rust-lang/rust/commit/a80d39041e2d5cd58a846c9ef9e01ee9d691a7ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a80d39041e2d5cd58a846c9ef9e01ee9d691a7ed/comments", "author": {"login": "howard0su", "id": 766788, "node_id": "MDQ6VXNlcjc2Njc4OA==", "avatar_url": "https://avatars.githubusercontent.com/u/766788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/howard0su", "html_url": "https://github.com/howard0su", "followers_url": "https://api.github.com/users/howard0su/followers", "following_url": "https://api.github.com/users/howard0su/following{/other_user}", "gists_url": "https://api.github.com/users/howard0su/gists{/gist_id}", "starred_url": "https://api.github.com/users/howard0su/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/howard0su/subscriptions", "organizations_url": "https://api.github.com/users/howard0su/orgs", "repos_url": "https://api.github.com/users/howard0su/repos", "events_url": "https://api.github.com/users/howard0su/events{/privacy}", "received_events_url": "https://api.github.com/users/howard0su/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80fc9b0ecb29050d45b17c64af004200afd3cfc2", "url": "https://api.github.com/repos/rust-lang/rust/commits/80fc9b0ecb29050d45b17c64af004200afd3cfc2", "html_url": "https://github.com/rust-lang/rust/commit/80fc9b0ecb29050d45b17c64af004200afd3cfc2"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "60a05dc5d545b74ea168a0a3c9d2b54251ead303", "filename": "library/std/src/thread/local.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a80d39041e2d5cd58a846c9ef9e01ee9d691a7ed/library%2Fstd%2Fsrc%2Fthread%2Flocal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a80d39041e2d5cd58a846c9ef9e01ee9d691a7ed/library%2Fstd%2Fsrc%2Fthread%2Flocal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fthread%2Flocal.rs?ref=a80d39041e2d5cd58a846c9ef9e01ee9d691a7ed", "patch": "@@ -424,10 +424,9 @@ pub mod fast {\n         // thread_local's, or it is being recursively initialized.\n         //\n         // Macos: Inlining this function can cause two `tlv_get_addr` calls to\n-        // be performed for every call to `Key::get`. The #[cold] hint makes\n-        // that less likely.\n+        // be performed for every call to `Key::get`.\n         // LLVM issue: https://bugs.llvm.org/show_bug.cgi?id=41722\n-        #[cold]\n+        #[inline(never)]\n         unsafe fn try_initialize<F: FnOnce() -> T>(&self, init: F) -> Option<&'static T> {\n             if !mem::needs_drop::<T>() || self.try_register_dtor() {\n                 Some(self.inner.initialize(init))"}]}