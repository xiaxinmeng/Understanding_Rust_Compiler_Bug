{"sha": "ed952ecf6870e540f7e5e06842c57c60a57b4ffd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkOTUyZWNmNjg3MGU1NDBmN2U1ZTA2ODQyYzU3YzYwYTU3YjRmZmQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-02-29T19:35:44Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-02-29T19:54:48Z"}, "message": "report the type of the method as the fty, not the type of the expression\n\nusing the type of the expression causes us to lose information\nabout when the method was declaring with a generic signature, which\nleads to producing incorrect code, particularly in the case of returning\nunit types (which would then get an undefined output ptr)", "tree": {"sha": "1295074edd9bee8794bc512f57bde41f9691c409", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1295074edd9bee8794bc512f57bde41f9691c409"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed952ecf6870e540f7e5e06842c57c60a57b4ffd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed952ecf6870e540f7e5e06842c57c60a57b4ffd", "html_url": "https://github.com/rust-lang/rust/commit/ed952ecf6870e540f7e5e06842c57c60a57b4ffd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed952ecf6870e540f7e5e06842c57c60a57b4ffd/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d0958f70ff16ee40649a943306c9b104a5fc829", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d0958f70ff16ee40649a943306c9b104a5fc829", "html_url": "https://github.com/rust-lang/rust/commit/7d0958f70ff16ee40649a943306c9b104a5fc829"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "abaf00ad0f7531597738573a4312c41a1747deb9", "filename": "src/comp/middle/trans/impl.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ed952ecf6870e540f7e5e06842c57c60a57b4ffd/src%2Fcomp%2Fmiddle%2Ftrans%2Fimpl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed952ecf6870e540f7e5e06842c57c60a57b4ffd/src%2Fcomp%2Fmiddle%2Ftrans%2Fimpl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans%2Fimpl.rs?ref=ed952ecf6870e540f7e5e06842c57c60a57b4ffd", "patch": "@@ -121,9 +121,10 @@ fn trans_vtable_callee(bcx: block, env: callee_env, dict: ValueRef,\n                        n_method: uint) -> lval_maybe_callee {\n     let bcx = bcx, ccx = bcx.ccx(), tcx = ccx.tcx;\n     let method = ty::iface_methods(tcx, iface_id)[n_method];\n+    let method_ty = ty::mk_fn(tcx, method.fty);\n     let {ty: fty, llty: llfty} =\n-        wrapper_fn_ty(ccx, val_ty(dict), node_id_type(bcx, callee_id),\n-                      method.tps);\n+        wrapper_fn_ty(ccx, val_ty(dict), method_ty, method.tps);\n+        // node_id_type(bcx, callee_id),\n     let vtable = PointerCast(bcx, Load(bcx, GEPi(bcx, dict, [0, 0])),\n                              T_ptr(T_array(T_ptr(llfty), n_method + 1u)));\n     let mptr = Load(bcx, GEPi(bcx, vtable, [0, n_method as int]));"}]}