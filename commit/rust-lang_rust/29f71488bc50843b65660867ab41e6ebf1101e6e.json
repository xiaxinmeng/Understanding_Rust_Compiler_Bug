{"sha": "29f71488bc50843b65660867ab41e6ebf1101e6e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5ZjcxNDg4YmM1MDg0M2I2NTY2MDg2N2FiNDFlNmViZjExMDFlNmU=", "commit": {"author": {"name": "Shaun Steenkamp", "email": "theguywholikeslinux@gmail.com", "date": "2018-02-12T14:00:08Z"}, "committer": {"name": "Shaun Steenkamp", "email": "theguywholikeslinux@gmail.com", "date": "2018-02-12T14:00:08Z"}, "message": "38880 remove redundant extra function", "tree": {"sha": "a21e962cc5f3fc850056d5a999f185e6675c64ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a21e962cc5f3fc850056d5a999f185e6675c64ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29f71488bc50843b65660867ab41e6ebf1101e6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29f71488bc50843b65660867ab41e6ebf1101e6e", "html_url": "https://github.com/rust-lang/rust/commit/29f71488bc50843b65660867ab41e6ebf1101e6e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29f71488bc50843b65660867ab41e6ebf1101e6e/comments", "author": {"login": "technicalguy", "id": 5120940, "node_id": "MDQ6VXNlcjUxMjA5NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/5120940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/technicalguy", "html_url": "https://github.com/technicalguy", "followers_url": "https://api.github.com/users/technicalguy/followers", "following_url": "https://api.github.com/users/technicalguy/following{/other_user}", "gists_url": "https://api.github.com/users/technicalguy/gists{/gist_id}", "starred_url": "https://api.github.com/users/technicalguy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/technicalguy/subscriptions", "organizations_url": "https://api.github.com/users/technicalguy/orgs", "repos_url": "https://api.github.com/users/technicalguy/repos", "events_url": "https://api.github.com/users/technicalguy/events{/privacy}", "received_events_url": "https://api.github.com/users/technicalguy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "technicalguy", "id": 5120940, "node_id": "MDQ6VXNlcjUxMjA5NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/5120940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/technicalguy", "html_url": "https://github.com/technicalguy", "followers_url": "https://api.github.com/users/technicalguy/followers", "following_url": "https://api.github.com/users/technicalguy/following{/other_user}", "gists_url": "https://api.github.com/users/technicalguy/gists{/gist_id}", "starred_url": "https://api.github.com/users/technicalguy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/technicalguy/subscriptions", "organizations_url": "https://api.github.com/users/technicalguy/orgs", "repos_url": "https://api.github.com/users/technicalguy/repos", "events_url": "https://api.github.com/users/technicalguy/events{/privacy}", "received_events_url": "https://api.github.com/users/technicalguy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dcdd2c42d3c7f6125583bcdf0c5ed7e1ef7086db", "url": "https://api.github.com/repos/rust-lang/rust/commits/dcdd2c42d3c7f6125583bcdf0c5ed7e1ef7086db", "html_url": "https://github.com/rust-lang/rust/commit/dcdd2c42d3c7f6125583bcdf0c5ed7e1ef7086db"}], "stats": {"total": 20, "additions": 6, "deletions": 14}, "files": [{"sha": "d798854927d32aca825d39c63069188f4e4806e4", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 6, "deletions": 14, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/29f71488bc50843b65660867ab41e6ebf1101e6e/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29f71488bc50843b65660867ab41e6ebf1101e6e/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=29f71488bc50843b65660867ab41e6ebf1101e6e", "patch": "@@ -397,17 +397,6 @@ pub struct HashMap<K, V, S = RandomState> {\n     resize_policy: DefaultResizePolicy,\n }\n \n-/// Search for a pre-hashed key when the hash map is known to be non-empty.\n-#[inline]\n-fn search_hashed_nonempty<K, V, M, F>(table: M, hash: SafeHash, is_match: F)\n-    -> InternalEntry<K, V, M>\n-    where M: Deref<Target = RawTable<K, V>>,\n-          F: FnMut(&K) -> bool\n-{\n-    // Do not check the capacity as an extra branch could slow the lookup.\n-    search_hashed_body(table, hash, is_match)\n-}\n-\n /// Search for a pre-hashed key.\n /// If you don't already know the hash, use search or search_mut instead\n #[inline]\n@@ -422,16 +411,19 @@ fn search_hashed<K, V, M, F>(table: M, hash: SafeHash, is_match: F) -> InternalE\n         return InternalEntry::TableIsEmpty;\n     }\n \n-    search_hashed_body(table, hash, is_match)\n+    search_hashed_nonempty(table, hash, is_match)\n }\n \n-/// The body of the search_hashed[_nonempty] functions\n+\n+/// Search for a pre-hashed key when the hash map is known to be non-empty.\n #[inline]\n-fn search_hashed_body<K, V, M, F>(table: M, hash: SafeHash, mut is_match: F)\n+fn search_hashed_nonempty<K, V, M, F>(table: M, hash: SafeHash, is_match: F)\n     -> InternalEntry<K, V, M>\n     where M: Deref<Target = RawTable<K, V>>,\n           F: FnMut(&K) -> bool\n {\n+    // Do not check the capacity as an extra branch could slow the lookup.\n+\n     let size = table.size();\n     let mut probe = Bucket::new(table, hash);\n     let mut displacement = 0;"}]}