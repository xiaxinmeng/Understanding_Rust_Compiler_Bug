{"sha": "25d46f309130be1671d7e44d48e67b23f510bcdc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1ZDQ2ZjMwOTEzMGJlMTY3MWQ3ZTQ0ZDQ4ZTY3YjIzZjUxMGJjZGM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-17T09:20:28Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-17T09:20:28Z"}, "message": "add comment explaining why what we do is legal", "tree": {"sha": "c2a76524791342940c973d4d98fef891d097e825", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2a76524791342940c973d4d98fef891d097e825"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25d46f309130be1671d7e44d48e67b23f510bcdc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25d46f309130be1671d7e44d48e67b23f510bcdc", "html_url": "https://github.com/rust-lang/rust/commit/25d46f309130be1671d7e44d48e67b23f510bcdc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25d46f309130be1671d7e44d48e67b23f510bcdc/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41434e001be222a7ce70faf3c5a23d97f462dfb8", "url": "https://api.github.com/repos/rust-lang/rust/commits/41434e001be222a7ce70faf3c5a23d97f462dfb8", "html_url": "https://github.com/rust-lang/rust/commit/41434e001be222a7ce70faf3c5a23d97f462dfb8"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "d8d51f53377f724e229f92f7b6ab546fcd16fa46", "filename": "src/libcore/cell.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/25d46f309130be1671d7e44d48e67b23f510bcdc/src%2Flibcore%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25d46f309130be1671d7e44d48e67b23f510bcdc/src%2Flibcore%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcell.rs?ref=25d46f309130be1671d7e44d48e67b23f510bcdc", "patch": "@@ -1509,6 +1509,8 @@ impl<T: ?Sized> UnsafeCell<T> {\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub const fn get(&self) -> *mut T {\n+        // We can just cast the pointer from `UnsafeCell<T>` to `T` because of\n+        // #[repr(transparent)]\n         self as *const UnsafeCell<T> as *const T as *mut T\n     }\n }"}]}