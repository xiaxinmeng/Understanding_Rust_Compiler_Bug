{"sha": "dbdbdb68740dd3be9cea059dd5cb6067c45f38d7", "node_id": "C_kwDOAAsO6NoAKGRiZGJkYjY4NzQwZGQzYmU5Y2VhMDU5ZGQ1Y2I2MDY3YzQ1ZjM4ZDc", "commit": {"author": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-06-28T12:40:59Z"}, "committer": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-06-30T07:59:22Z"}, "message": "lint: port no-mangle diagnostics\n\nSigned-off-by: David Wood <david.wood@huawei.com>", "tree": {"sha": "8da1066b5203950ef9358ed04e3e2e1c4a306148", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8da1066b5203950ef9358ed04e3e2e1c4a306148"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dbdbdb68740dd3be9cea059dd5cb6067c45f38d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dbdbdb68740dd3be9cea059dd5cb6067c45f38d7", "html_url": "https://github.com/rust-lang/rust/commit/dbdbdb68740dd3be9cea059dd5cb6067c45f38d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dbdbdb68740dd3be9cea059dd5cb6067c45f38d7/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a13b70ea83f1f3781cba2dbdc990520bdbb6a740", "url": "https://api.github.com/repos/rust-lang/rust/commits/a13b70ea83f1f3781cba2dbdc990520bdbb6a740", "html_url": "https://github.com/rust-lang/rust/commit/a13b70ea83f1f3781cba2dbdc990520bdbb6a740"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "cbe7e15a723dbc8adee9d603e2bb5b3996de5658", "filename": "compiler/rustc_error_messages/locales/en-US/lint.ftl", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/dbdbdb68740dd3be9cea059dd5cb6067c45f38d7/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/dbdbdb68740dd3be9cea059dd5cb6067c45f38d7/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl?ref=dbdbdb68740dd3be9cea059dd5cb6067c45f38d7", "patch": "@@ -343,3 +343,9 @@ lint-builtin-unused-doc-comment = unused doc comment\n     .label = rustdoc does not generate documentation for {$kind}\n     .plain-help = use `//` for a plain comment\n     .block-help = use `/* */` for a plain comment\n+\n+lint-builtin-no-mangle-generic = functions generic over types or consts must be mangled\n+    .suggestion = remove this attribute\n+\n+lint-builtin-const-no-mangle = const items should never be `#[no_mangle]`\n+    .suggestion = try a static value"}, {"sha": "6dfcc0eec49aeb44beebc4ef683ff3f7285536d4", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/dbdbdb68740dd3be9cea059dd5cb6067c45f38d7/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbdbdb68740dd3be9cea059dd5cb6067c45f38d7/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=dbdbdb68740dd3be9cea059dd5cb6067c45f38d7", "patch": "@@ -1166,10 +1166,10 @@ impl<'tcx> LateLintPass<'tcx> for InvalidNoMangleItems {\n                     GenericParamKind::Lifetime { .. } => {}\n                     GenericParamKind::Type { .. } | GenericParamKind::Const { .. } => {\n                         cx.struct_span_lint(NO_MANGLE_GENERIC_ITEMS, span, |lint| {\n-                            lint.build(\"functions generic over types or consts must be mangled\")\n+                            lint.build(fluent::lint::builtin_no_mangle_generic)\n                                 .span_suggestion_short(\n                                     no_mangle_attr.span,\n-                                    \"remove this attribute\",\n+                                    fluent::lint::suggestion,\n                                     \"\",\n                                     // Use of `#[no_mangle]` suggests FFI intent; correct\n                                     // fix may be to monomorphize source by hand\n@@ -1193,8 +1193,7 @@ impl<'tcx> LateLintPass<'tcx> for InvalidNoMangleItems {\n                     // Const items do not refer to a particular location in memory, and therefore\n                     // don't have anything to attach a symbol to\n                     cx.struct_span_lint(NO_MANGLE_CONST_ITEMS, it.span, |lint| {\n-                        let msg = \"const items should never be `#[no_mangle]`\";\n-                        let mut err = lint.build(msg);\n+                        let mut err = lint.build(fluent::lint::builtin_const_no_mangle);\n \n                         // account for \"pub const\" (#45562)\n                         let start = cx\n@@ -1208,7 +1207,7 @@ impl<'tcx> LateLintPass<'tcx> for InvalidNoMangleItems {\n                         let const_span = it.span.with_hi(BytePos(it.span.lo().0 + start + 5));\n                         err.span_suggestion(\n                             const_span,\n-                            \"try a static value\",\n+                            fluent::lint::suggestion,\n                             \"pub static\",\n                             Applicability::MachineApplicable,\n                         );"}]}