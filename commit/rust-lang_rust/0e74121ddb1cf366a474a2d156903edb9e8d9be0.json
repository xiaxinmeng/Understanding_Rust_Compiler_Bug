{"sha": "0e74121ddb1cf366a474a2d156903edb9e8d9be0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlNzQxMjFkZGIxY2YzNjZhNDc0YTJkMTU2OTAzZWRiOWU4ZDliZTA=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-12-08T12:29:43Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-12-08T12:29:43Z"}, "message": "Error when parsing the empty record type\n\nIssue #1200", "tree": {"sha": "b7d272fb04cffcce03b6cafa1d66f6d2f2919cc7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7d272fb04cffcce03b6cafa1d66f6d2f2919cc7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e74121ddb1cf366a474a2d156903edb9e8d9be0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e74121ddb1cf366a474a2d156903edb9e8d9be0", "html_url": "https://github.com/rust-lang/rust/commit/0e74121ddb1cf366a474a2d156903edb9e8d9be0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e74121ddb1cf366a474a2d156903edb9e8d9be0/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a269a3aa8fe8140ad3f2fc2cfdfd68d6b40ec86", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a269a3aa8fe8140ad3f2fc2cfdfd68d6b40ec86", "html_url": "https://github.com/rust-lang/rust/commit/9a269a3aa8fe8140ad3f2fc2cfdfd68d6b40ec86"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "52e2d92e79940989cbaf0db3a07ce0604cac33b8", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0e74121ddb1cf366a474a2d156903edb9e8d9be0/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e74121ddb1cf366a474a2d156903edb9e8d9be0/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=0e74121ddb1cf366a474a2d156903edb9e8d9be0", "patch": "@@ -517,6 +517,7 @@ fn parse_ty(p: parser, colons_before_params: bool) -> @ast::ty {\n         let elems =\n             parse_seq(token::LBRACE, token::RBRACE, seq_sep_opt(token::COMMA),\n                       parse_ty_field, p);\n+        if vec::len(elems.node) == 0u { unexpected(p, token::RBRACE); }\n         let hi = elems.span.hi;\n         t = ast::ty_rec(elems.node);\n         if p.peek() == token::COLON {"}]}