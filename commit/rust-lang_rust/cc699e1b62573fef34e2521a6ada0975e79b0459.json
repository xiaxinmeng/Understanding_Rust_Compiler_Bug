{"sha": "cc699e1b62573fef34e2521a6ada0975e79b0459", "node_id": "C_kwDOAAsO6NoAKGNjNjk5ZTFiNjI1NzNmZWYzNGUyNTIxYTZhZGEwOTc1ZTc5YjA0NTk", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-01-04T13:52:55Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-01-04T14:15:41Z"}, "message": "Add ScopedJoinHandle::is_running().", "tree": {"sha": "873e99826168a1fd626b981cad4d630b51d58af9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/873e99826168a1fd626b981cad4d630b51d58af9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc699e1b62573fef34e2521a6ada0975e79b0459", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc699e1b62573fef34e2521a6ada0975e79b0459", "html_url": "https://github.com/rust-lang/rust/commit/cc699e1b62573fef34e2521a6ada0975e79b0459", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc699e1b62573fef34e2521a6ada0975e79b0459/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e24ad537be4d47686f3b9e3e6623664bce7cbc2", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e24ad537be4d47686f3b9e3e6623664bce7cbc2", "html_url": "https://github.com/rust-lang/rust/commit/0e24ad537be4d47686f3b9e3e6623664bce7cbc2"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "0b65c682c56b31614e2087db7099d5ccf4d7ed40", "filename": "library/std/src/thread/scoped.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/cc699e1b62573fef34e2521a6ada0975e79b0459/library%2Fstd%2Fsrc%2Fthread%2Fscoped.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc699e1b62573fef34e2521a6ada0975e79b0459/library%2Fstd%2Fsrc%2Fthread%2Fscoped.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fthread%2Fscoped.rs?ref=cc699e1b62573fef34e2521a6ada0975e79b0459", "patch": "@@ -5,7 +5,7 @@ use crate::io;\n use crate::marker::PhantomData;\n use crate::panic::{catch_unwind, resume_unwind, AssertUnwindSafe};\n use crate::sync::atomic::{AtomicUsize, Ordering};\n-use crate::sync::Mutex;\n+use crate::sync::{Arc, Mutex};\n \n /// TODO: documentation\n pub struct Scope<'env> {\n@@ -114,6 +114,15 @@ impl<'scope, T> ScopedJoinHandle<'scope, T> {\n     pub fn thread(&self) -> &Thread {\n         &self.0.thread\n     }\n+\n+    /// Checks if the the associated thread is still running its main function.\n+    ///\n+    /// This might return `false` for a brief moment after the thread's main\n+    /// function has returned, but before the thread itself has stopped running.\n+    #[unstable(feature = \"thread_is_running\", issue = \"90470\")]\n+    pub fn is_running(&self) -> bool {\n+        Arc::strong_count(&self.0.packet) > 1\n+    }\n }\n \n impl<'env> fmt::Debug for Scope<'env> {"}]}