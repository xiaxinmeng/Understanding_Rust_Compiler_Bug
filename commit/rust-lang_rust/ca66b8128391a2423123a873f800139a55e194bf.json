{"sha": "ca66b8128391a2423123a873f800139a55e194bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhNjZiODEyODM5MWEyNDIzMTIzYTg3M2Y4MDAxMzlhNTVlMTk0YmY=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-09-20T20:24:23Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-09-27T05:20:40Z"}, "message": "std: Remove an unnecessary comment from c_str\n\nThe documentation for `.with_c_str()` already says that the pointer\nwill be deallocated before returning from the function.", "tree": {"sha": "36872389a651b7bd04d5fabb92f685b1327566c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36872389a651b7bd04d5fabb92f685b1327566c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca66b8128391a2423123a873f800139a55e194bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca66b8128391a2423123a873f800139a55e194bf", "html_url": "https://github.com/rust-lang/rust/commit/ca66b8128391a2423123a873f800139a55e194bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca66b8128391a2423123a873f800139a55e194bf/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e02d1eb1717fee3c513baa0cb5fc39b8fa630335", "url": "https://api.github.com/repos/rust-lang/rust/commits/e02d1eb1717fee3c513baa0cb5fc39b8fa630335", "html_url": "https://github.com/rust-lang/rust/commit/e02d1eb1717fee3c513baa0cb5fc39b8fa630335"}], "stats": {"total": 3, "additions": 0, "deletions": 3}, "files": [{"sha": "49db9e4f3b0e5c0cb78aa80a014af2ba197cb923", "filename": "src/libstd/c_str.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ca66b8128391a2423123a873f800139a55e194bf/src%2Flibstd%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca66b8128391a2423123a873f800139a55e194bf/src%2Flibstd%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fc_str.rs?ref=ca66b8128391a2423123a873f800139a55e194bf", "patch": "@@ -277,9 +277,6 @@ impl<'self> ToCStr for &'self [u8] {\n         }\n     }\n \n-    /// WARNING: This function uses an optimization to only malloc a temporary\n-    /// CString when the source string is small. Do not save a reference to\n-    /// the `*libc::c_char` as it may be invalid after this function call.\n     fn with_c_str<T>(&self, f: &fn(*libc::c_char) -> T) -> T {\n         if self.len() < BUF_LEN {\n             do self.as_imm_buf |self_buf, self_len| {"}]}