{"sha": "d2577ca1ec1449bd83d05e540c57447574ccaa28", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyNTc3Y2ExZWMxNDQ5YmQ4M2QwNWU1NDBjNTc0NDc1NzRjY2FhMjg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-04-21T16:18:22Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-04-21T16:18:22Z"}, "message": "Auto merge of #50093 - alexcrichton:android-uwtable, r=michaelwoerister\n\nrustc: Always emit `uwtable` on Android\n\nLong ago (#40549) we enabled the `uwtable` attribute on Windows by default\n(even with `-C panic=abort`) to allow unwinding binaries for [stack unwinding\ninformation][winstack]. It looks like this same issue is [plaguing][arm1]\nGecko's Android platforms [as well][arm2]. This commit applies the same fix\nas #40549 except that this time it's applied for all Android targets.\n\nGenerating a `-C panic=abort` binary for `armv7-linux-androideabi` before this\ncommit generated a number of `cantunwind` functions (detected with `readelf -u`)\nbut after this commit they all list appropriate unwind information.\n\nCloses #49867\n\n[winstack]: https://bugzilla.mozilla.org/show_bug.cgi?id=1302078\n[arm1]: https://bugzilla.mozilla.org/show_bug.cgi?id=1453220\n[arm2]: https://bugzilla.mozilla.org/show_bug.cgi?id=1451741", "tree": {"sha": "326adc8536d278efca64310b699ce2e5fc7088b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/326adc8536d278efca64310b699ce2e5fc7088b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d2577ca1ec1449bd83d05e540c57447574ccaa28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d2577ca1ec1449bd83d05e540c57447574ccaa28", "html_url": "https://github.com/rust-lang/rust/commit/d2577ca1ec1449bd83d05e540c57447574ccaa28", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d2577ca1ec1449bd83d05e540c57447574ccaa28/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "222551f3f3a26b9553c97c8e8b9ad15fdb7dc902", "url": "https://api.github.com/repos/rust-lang/rust/commits/222551f3f3a26b9553c97c8e8b9ad15fdb7dc902", "html_url": "https://github.com/rust-lang/rust/commit/222551f3f3a26b9553c97c8e8b9ad15fdb7dc902"}, {"sha": "f7439a5a4565b86b934610aafa9c69b9c53b672b", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7439a5a4565b86b934610aafa9c69b9c53b672b", "html_url": "https://github.com/rust-lang/rust/commit/f7439a5a4565b86b934610aafa9c69b9c53b672b"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "3660bf7bea917fe7cda7b3c90ba5cc9b794fdce1", "filename": "src/librustc_back/target/android_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d2577ca1ec1449bd83d05e540c57447574ccaa28/src%2Flibrustc_back%2Ftarget%2Fandroid_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2577ca1ec1449bd83d05e540c57447574ccaa28/src%2Flibrustc_back%2Ftarget%2Fandroid_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fandroid_base.rs?ref=d2577ca1ec1449bd83d05e540c57447574ccaa28", "patch": "@@ -20,5 +20,6 @@ pub fn opts() -> TargetOptions {\n     base.is_like_android = true;\n     base.position_independent_executables = true;\n     base.has_elf_tls = false;\n+    base.requires_uwtable = true;\n     base\n }"}, {"sha": "e46266b576e244e5a90bf089d9708735a3f063c5", "filename": "src/librustc_back/target/mod.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d2577ca1ec1449bd83d05e540c57447574ccaa28/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2577ca1ec1449bd83d05e540c57447574ccaa28/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmod.rs?ref=d2577ca1ec1449bd83d05e540c57447574ccaa28", "patch": "@@ -481,6 +481,11 @@ pub struct TargetOptions {\n \n     /// Whether a .debug_gdb_scripts section will be added to the output object file\n     pub emit_debug_gdb_scripts: bool,\n+\n+    /// Whether or not to unconditionally `uwtable` attributes on functions,\n+    /// typically because the platform needs to unwind for things like stack\n+    /// unwinders.\n+    pub requires_uwtable: bool,\n }\n \n impl Default for TargetOptions {\n@@ -554,6 +559,7 @@ impl Default for TargetOptions {\n             default_hidden_visibility: false,\n             embed_bitcode: false,\n             emit_debug_gdb_scripts: true,\n+            requires_uwtable: false,\n         }\n     }\n }\n@@ -804,6 +810,7 @@ impl Target {\n         key!(default_hidden_visibility, bool);\n         key!(embed_bitcode, bool);\n         key!(emit_debug_gdb_scripts, bool);\n+        key!(requires_uwtable, bool);\n \n         if let Some(array) = obj.find(\"abi-blacklist\").and_then(Json::as_array) {\n             for name in array.iter().filter_map(|abi| abi.as_string()) {\n@@ -1008,6 +1015,7 @@ impl ToJson for Target {\n         target_option_val!(default_hidden_visibility);\n         target_option_val!(embed_bitcode);\n         target_option_val!(emit_debug_gdb_scripts);\n+        target_option_val!(requires_uwtable);\n \n         if default.abi_blacklist != self.options.abi_blacklist {\n             d.insert(\"abi-blacklist\".to_string(), self.options.abi_blacklist.iter()"}, {"sha": "4b4fb27caa839baa4d498deab92fe561c2f2b5fd", "filename": "src/librustc_back/target/windows_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d2577ca1ec1449bd83d05e540c57447574ccaa28/src%2Flibrustc_back%2Ftarget%2Fwindows_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2577ca1ec1449bd83d05e540c57447574ccaa28/src%2Flibrustc_back%2Ftarget%2Fwindows_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fwindows_base.rs?ref=d2577ca1ec1449bd83d05e540c57447574ccaa28", "patch": "@@ -103,6 +103,7 @@ pub fn opts() -> TargetOptions {\n         custom_unwind_resume: true,\n         abi_return_struct_as_int: true,\n         emit_debug_gdb_scripts: false,\n+        requires_uwtable: true,\n \n         .. Default::default()\n     }"}, {"sha": "fee5a0284c80610993a0f7df8946ff222022b140", "filename": "src/librustc_back/target/windows_msvc_base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d2577ca1ec1449bd83d05e540c57447574ccaa28/src%2Flibrustc_back%2Ftarget%2Fwindows_msvc_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2577ca1ec1449bd83d05e540c57447574ccaa28/src%2Flibrustc_back%2Ftarget%2Fwindows_msvc_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fwindows_msvc_base.rs?ref=d2577ca1ec1449bd83d05e540c57447574ccaa28", "patch": "@@ -35,6 +35,7 @@ pub fn opts() -> TargetOptions {\n         crt_static_respected: true,\n         abi_return_struct_as_int: true,\n         emit_debug_gdb_scripts: false,\n+        requires_uwtable: true,\n \n         .. Default::default()\n     }"}, {"sha": "a4e1b7f2925dca3f802ff23bc9ada907f3a4f8e6", "filename": "src/librustc_trans/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2577ca1ec1449bd83d05e540c57447574ccaa28/src%2Flibrustc_trans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2577ca1ec1449bd83d05e540c57447574ccaa28/src%2Flibrustc_trans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fbase.rs?ref=d2577ca1ec1449bd83d05e540c57447574ccaa28", "patch": "@@ -492,7 +492,7 @@ pub fn trans_instance<'a, 'tcx>(cx: &CodegenCx<'a, 'tcx>, instance: Instance<'tc\n     // You can also find more info on why Windows is whitelisted here in:\n     //      https://bugzilla.mozilla.org/show_bug.cgi?id=1302078\n     if !cx.sess().no_landing_pads() ||\n-       cx.sess().target.target.options.is_like_windows {\n+       cx.sess().target.target.options.requires_uwtable {\n         attributes::emit_uwtable(lldecl, true);\n     }\n "}, {"sha": "6863b1f2792b919b41cf81b76abaed7faf597f86", "filename": "src/test/codegen/nounwind.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d2577ca1ec1449bd83d05e540c57447574ccaa28/src%2Ftest%2Fcodegen%2Fnounwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2577ca1ec1449bd83d05e540c57447574ccaa28/src%2Ftest%2Fcodegen%2Fnounwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fnounwind.rs?ref=d2577ca1ec1449bd83d05e540c57447574ccaa28", "patch": "@@ -11,6 +11,7 @@\n // aux-build:nounwind.rs\n // compile-flags: -C no-prepopulate-passes -C panic=abort -C metadata=a\n // ignore-windows\n+// ignore-android\n \n #![crate_type = \"lib\"]\n "}]}