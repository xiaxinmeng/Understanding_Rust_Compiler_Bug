{"sha": "e1e58fc1d3ba5d3de5b356f14722518f33f05028", "node_id": "C_kwDOAAsO6NoAKGUxZTU4ZmMxZDNiYTVkM2RlNWIzNTZmMTQ3MjI1MThmMzNmMDUwMjg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-02-16T23:19:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-16T23:19:37Z"}, "message": "Rollup merge of #108133 - kylematsuda:earlybinder-cleanups, r=compiler-errors\n\nSmall cleanups around `EarlyBinder`\n\nCleaning up a few things that were brought up by `@lcnr` in reviewing #106696:\n\n- [make `issue33140_self_ty` query return `Option<EarlyBinder<Ty>>`](https://github.com/rust-lang/rust/pull/106696#discussion_r1067821423)\n- [small style improvement](https://github.com/rust-lang/rust/pull/106696#discussion_r1067816772)", "tree": {"sha": "9ba115740e14618ba9357aaa2b43f9f349d41c46", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ba115740e14618ba9357aaa2b43f9f349d41c46"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1e58fc1d3ba5d3de5b356f14722518f33f05028", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj7roJCRBK7hj4Ov3rIwAAr5UIAEv1KkJFQljKvWy8q7NM3CYi\nnHGtYchX1L99HUP5esVv8Ih1FL9QQrORZiVnXwC3u8kzyNO6aANXGEjIGNwc3ojx\nyA6R5N0lWOOjymekIpdTFJi5Mrrex0wlkS1JokZr6I4VXcRFd2dwYlMqFbfkhHd0\nykUvunXL9AZ8PtPg83dZE/uw8fSz8flfP/zj+67whJBu6zb2UB9ef8SYhaWF1uuf\nusG8wqhK42fFJby3UQQHDPIy6EfSkxKYDjmL/x/+4iWiJ2/HYOo8QI8XogtK66l5\nRK85rZdX973EhvDDVVQvq9D4vtTWdG6PLIfqBj46yCAmfOEVv6XwREHByv9cjg8=\n=DPBO\n-----END PGP SIGNATURE-----\n", "payload": "tree 9ba115740e14618ba9357aaa2b43f9f349d41c46\nparent 9b2ee4192e8a0c6f93a0d20b2167285fe1ca7099\nparent 382ade6a6054fa84c581f1e40fe3db79312db369\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1676589577 +0100\ncommitter GitHub <noreply@github.com> 1676589577 +0100\n\nRollup merge of #108133 - kylematsuda:earlybinder-cleanups, r=compiler-errors\n\nSmall cleanups around `EarlyBinder`\n\nCleaning up a few things that were brought up by `@lcnr` in reviewing #106696:\n\n- [make `issue33140_self_ty` query return `Option<EarlyBinder<Ty>>`](https://github.com/rust-lang/rust/pull/106696#discussion_r1067821423)\n- [small style improvement](https://github.com/rust-lang/rust/pull/106696#discussion_r1067816772)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1e58fc1d3ba5d3de5b356f14722518f33f05028", "html_url": "https://github.com/rust-lang/rust/commit/e1e58fc1d3ba5d3de5b356f14722518f33f05028", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1e58fc1d3ba5d3de5b356f14722518f33f05028/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b2ee4192e8a0c6f93a0d20b2167285fe1ca7099", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b2ee4192e8a0c6f93a0d20b2167285fe1ca7099", "html_url": "https://github.com/rust-lang/rust/commit/9b2ee4192e8a0c6f93a0d20b2167285fe1ca7099"}, {"sha": "382ade6a6054fa84c581f1e40fe3db79312db369", "url": "https://api.github.com/repos/rust-lang/rust/commits/382ade6a6054fa84c581f1e40fe3db79312db369", "html_url": "https://github.com/rust-lang/rust/commit/382ade6a6054fa84c581f1e40fe3db79312db369"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "e941dd4568889b7ce7e7dbbe0eefc422707e4966", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e1e58fc1d3ba5d3de5b356f14722518f33f05028/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1e58fc1d3ba5d3de5b356f14722518f33f05028/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=e1e58fc1d3ba5d3de5b356f14722518f33f05028", "patch": "@@ -1541,8 +1541,9 @@ impl<'a, 'tcx> EncodeContext<'a, 'tcx> {\n                 self.tables.impl_defaultness.set_some(def_id.index, *defaultness);\n                 self.tables.constness.set_some(def_id.index, *constness);\n \n-                let trait_ref = self.tcx.impl_trait_ref(def_id).map(ty::EarlyBinder::skip_binder);\n+                let trait_ref = self.tcx.impl_trait_ref(def_id);\n                 if let Some(trait_ref) = trait_ref {\n+                    let trait_ref = trait_ref.skip_binder();\n                     let trait_def = self.tcx.trait_def(trait_ref.def_id);\n                     if let Ok(mut an) = trait_def.ancestors(self.tcx, def_id) {\n                         if let Some(specialization_graph::Node::Impl(parent)) = an.nth(1) {"}, {"sha": "6f878a955fa3ad33cb0771f649db6dae27c3c592", "filename": "compiler/rustc_middle/src/query/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e1e58fc1d3ba5d3de5b356f14722518f33f05028/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1e58fc1d3ba5d3de5b356f14722518f33f05028/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs?ref=e1e58fc1d3ba5d3de5b356f14722518f33f05028", "patch": "@@ -781,7 +781,7 @@ rustc_queries! {\n         separate_provide_extern\n     }\n \n-    query issue33140_self_ty(key: DefId) -> Option<ty::Ty<'tcx>> {\n+    query issue33140_self_ty(key: DefId) -> Option<ty::EarlyBinder<ty::Ty<'tcx>>> {\n         desc { |tcx| \"computing Self type wrt issue #33140 `{}`\", tcx.def_path_str(key) }\n     }\n "}, {"sha": "fc3d9fb067d7cc4395d11ddc6749262866477b7e", "filename": "compiler/rustc_ty_utils/src/ty.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e1e58fc1d3ba5d3de5b356f14722518f33f05028/compiler%2Frustc_ty_utils%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1e58fc1d3ba5d3de5b356f14722518f33f05028/compiler%2Frustc_ty_utils%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ty_utils%2Fsrc%2Fty.rs?ref=e1e58fc1d3ba5d3de5b356f14722518f33f05028", "patch": "@@ -1,7 +1,9 @@\n use rustc_data_structures::fx::FxIndexSet;\n use rustc_hir as hir;\n use rustc_index::bit_set::BitSet;\n-use rustc_middle::ty::{self, Binder, Predicate, PredicateKind, ToPredicate, Ty, TyCtxt};\n+use rustc_middle::ty::{\n+    self, Binder, EarlyBinder, Predicate, PredicateKind, ToPredicate, Ty, TyCtxt,\n+};\n use rustc_session::config::TraitSolver;\n use rustc_span::def_id::{DefId, CRATE_DEF_ID};\n use rustc_trait_selection::traits;\n@@ -355,7 +357,7 @@ fn instance_def_size_estimate<'tcx>(\n /// If `def_id` is an issue 33140 hack impl, returns its self type; otherwise, returns `None`.\n ///\n /// See [`ty::ImplOverlapKind::Issue33140`] for more details.\n-fn issue33140_self_ty(tcx: TyCtxt<'_>, def_id: DefId) -> Option<Ty<'_>> {\n+fn issue33140_self_ty(tcx: TyCtxt<'_>, def_id: DefId) -> Option<EarlyBinder<Ty<'_>>> {\n     debug!(\"issue33140_self_ty({:?})\", def_id);\n \n     let trait_ref = tcx\n@@ -394,7 +396,7 @@ fn issue33140_self_ty(tcx: TyCtxt<'_>, def_id: DefId) -> Option<Ty<'_>> {\n \n     if self_ty_matches {\n         debug!(\"issue33140_self_ty - MATCHES!\");\n-        Some(self_ty)\n+        Some(EarlyBinder(self_ty))\n     } else {\n         debug!(\"issue33140_self_ty - non-matching self type\");\n         None"}]}