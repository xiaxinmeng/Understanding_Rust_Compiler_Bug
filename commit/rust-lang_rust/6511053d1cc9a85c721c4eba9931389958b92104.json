{"sha": "6511053d1cc9a85c721c4eba9931389958b92104", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1MTEwNTNkMWNjOWE4NWM3MjFjNGViYTk5MzEzODk5NThiOTIxMDQ=", "commit": {"author": {"name": "Birunthan Mohanathas", "email": "birunthan@mohanathas.com", "date": "2014-07-23T04:45:08Z"}, "committer": {"name": "Birunthan Mohanathas", "email": "birunthan@mohanathas.com", "date": "2014-07-23T15:44:11Z"}, "message": "mk: Add space before line continuation backslash", "tree": {"sha": "48297ee772e58d8f6c6eb6d2bd14c3c59f0ebcbc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48297ee772e58d8f6c6eb6d2bd14c3c59f0ebcbc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6511053d1cc9a85c721c4eba9931389958b92104", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6511053d1cc9a85c721c4eba9931389958b92104", "html_url": "https://github.com/rust-lang/rust/commit/6511053d1cc9a85c721c4eba9931389958b92104", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6511053d1cc9a85c721c4eba9931389958b92104/comments", "author": {"login": "poiru", "id": 1319028, "node_id": "MDQ6VXNlcjEzMTkwMjg=", "avatar_url": "https://avatars.githubusercontent.com/u/1319028?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poiru", "html_url": "https://github.com/poiru", "followers_url": "https://api.github.com/users/poiru/followers", "following_url": "https://api.github.com/users/poiru/following{/other_user}", "gists_url": "https://api.github.com/users/poiru/gists{/gist_id}", "starred_url": "https://api.github.com/users/poiru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poiru/subscriptions", "organizations_url": "https://api.github.com/users/poiru/orgs", "repos_url": "https://api.github.com/users/poiru/repos", "events_url": "https://api.github.com/users/poiru/events{/privacy}", "received_events_url": "https://api.github.com/users/poiru/received_events", "type": "User", "site_admin": false}, "committer": {"login": "poiru", "id": 1319028, "node_id": "MDQ6VXNlcjEzMTkwMjg=", "avatar_url": "https://avatars.githubusercontent.com/u/1319028?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poiru", "html_url": "https://github.com/poiru", "followers_url": "https://api.github.com/users/poiru/followers", "following_url": "https://api.github.com/users/poiru/following{/other_user}", "gists_url": "https://api.github.com/users/poiru/gists{/gist_id}", "starred_url": "https://api.github.com/users/poiru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poiru/subscriptions", "organizations_url": "https://api.github.com/users/poiru/orgs", "repos_url": "https://api.github.com/users/poiru/repos", "events_url": "https://api.github.com/users/poiru/events{/privacy}", "received_events_url": "https://api.github.com/users/poiru/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5433c3a0f151d0b21ce41dfa623f7352e8bc389", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5433c3a0f151d0b21ce41dfa623f7352e8bc389", "html_url": "https://github.com/rust-lang/rust/commit/c5433c3a0f151d0b21ce41dfa623f7352e8bc389"}], "stats": {"total": 140, "additions": 70, "deletions": 70}, "files": [{"sha": "97c823c9e2de936ac427cd5fa819370064580754", "filename": "mk/clean.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6511053d1cc9a85c721c4eba9931389958b92104/mk%2Fclean.mk", "raw_url": "https://github.com/rust-lang/rust/raw/6511053d1cc9a85c721c4eba9931389958b92104/mk%2Fclean.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fclean.mk?ref=6511053d1cc9a85c721c4eba9931389958b92104", "patch": "@@ -66,7 +66,7 @@ clean-generic-$(2)-$(1):\n          -name '*.bc' \\\n          \\) \\\n          | xargs rm -f\n-\t$(Q)find $(1)\\\n+\t$(Q)find $(1) \\\n          -name '*.dSYM' \\\n          | xargs rm -Rf\n endef"}, {"sha": "bda2731babe0cf2a1595131175c2958c796a070f", "filename": "mk/ctags.mk", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/6511053d1cc9a85c721c4eba9931389958b92104/mk%2Fctags.mk", "raw_url": "https://github.com/rust-lang/rust/raw/6511053d1cc9a85c721c4eba9931389958b92104/mk%2Fctags.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fctags.mk?ref=6511053d1cc9a85c721c4eba9931389958b92104", "patch": "@@ -18,18 +18,18 @@\n # This is using a blacklist approach, probably more durable than a whitelist.\n # We exclude: external dependencies (llvm, libuv, gyp, rt/{msvc,sundown,vg}),\n # tests (compiletest, test) and a couple of other things (rt/arch, etc)\n-CTAGS_LOCATIONS=$(patsubst ${CFG_SRC_DIR}src/llvm,,\\\n-\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/libuv,,\\\n-\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/compiletest,,\\\n-\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/test,,\\\n-\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/gyp,,\\\n-\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/etc,,\\\n-\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/rt,,\\\n-\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/rt/arch,,\\\n-\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/rt/msvc,,\\\n-\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/rt/sundown,,\\\n-\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/rt/vg,,\\\n-\t\t\t\t$(wildcard ${CFG_SRC_DIR}src/*) $(wildcard ${CFG_SRC_DIR}src/rt/*)\\\n+CTAGS_LOCATIONS=$(patsubst ${CFG_SRC_DIR}src/llvm,, \\\n+\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/libuv,, \\\n+\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/compiletest,, \\\n+\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/test,, \\\n+\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/gyp,, \\\n+\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/etc,, \\\n+\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/rt,, \\\n+\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/rt/arch,, \\\n+\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/rt/msvc,, \\\n+\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/rt/sundown,, \\\n+\t\t\t\t$(patsubst ${CFG_SRC_DIR}src/rt/vg,, \\\n+\t\t\t\t$(wildcard ${CFG_SRC_DIR}src/*) $(wildcard ${CFG_SRC_DIR}src/rt/*) \\\n \t\t\t\t)))))))))))\n CTAGS_OPTS=--options=\"${CFG_SRC_DIR}src/etc/ctags.rust\" --languages=-javascript --recurse ${CTAGS_LOCATIONS}\n # We could use `--languages=Rust`, but there is value in producing tags for the"}, {"sha": "718916d99bbbf80cc633e4324e8bd1e3f04303e8", "filename": "mk/docs.mk", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6511053d1cc9a85c721c4eba9931389958b92104/mk%2Fdocs.mk", "raw_url": "https://github.com/rust-lang/rust/raw/6511053d1cc9a85c721c4eba9931389958b92104/mk%2Fdocs.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fdocs.mk?ref=6511053d1cc9a85c721c4eba9931389958b92104", "patch": "@@ -112,8 +112,8 @@ HTML_DEPS += doc/version_info.html\n doc/version_info.html: $(D)/version_info.html.template $(MKFILE_DEPS) \\\n                        $(wildcard $(D)/*.*) | doc/\n \t@$(call E, version-info: $@)\n-\t$(Q)sed -e \"s/VERSION/$(CFG_RELEASE)/; s/SHORT_HASH/$(\\\n-                    CFG_SHORT_VER_HASH)/;\\\n+\t$(Q)sed -e \"s/VERSION/$(CFG_RELEASE)/; s/SHORT_HASH/$( \\\n+                    CFG_SHORT_VER_HASH)/; \\\n                 s/STAMP/$(CFG_VER_HASH)/;\" $< >$@\n \n GENERATED += doc/version.tex doc/version_info.html"}, {"sha": "59a00950b5cfde17634027417cb08d100fff3bcb", "filename": "mk/host.mk", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6511053d1cc9a85c721c4eba9931389958b92104/mk%2Fhost.mk", "raw_url": "https://github.com/rust-lang/rust/raw/6511053d1cc9a85c721c4eba9931389958b92104/mk%2Fhost.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fhost.mk?ref=6511053d1cc9a85c721c4eba9931389958b92104", "patch": "@@ -24,12 +24,12 @@ $$(HLIB$(2)_H_$(4))/stamp.$(5): \\\n \t$$(RUST_DEPS_$(5):%=$$(HLIB$(2)_H_$(4))/stamp.%) \\\n \t| $$(HLIB$(2)_H_$(4))/\n \t@$$(call E, cp: $$(@D)/lib$(5))\n-\t$$(call REMOVE_ALL_OLD_GLOB_MATCHES,\\\n+\t$$(call REMOVE_ALL_OLD_GLOB_MATCHES, \\\n \t    $$(dir $$@)$$(call CFG_LIB_GLOB_$(3),$(5)))\n \t$$(Q)cp $$< $$@\n \t$$(Q)cp -R $$(TLIB$(1)_T_$(3)_H_$(4))/$$(call CFG_LIB_GLOB_$(3),$(5)) \\\n \t        $$(HLIB$(2)_H_$(4))\n-\t$$(call LIST_ALL_OLD_GLOB_MATCHES,\\\n+\t$$(call LIST_ALL_OLD_GLOB_MATCHES, \\\n \t    $$(dir $$@)$$(call CFG_LIB_GLOB_$(3),$(5)))\n else\n $$(HLIB$(2)_H_$(4))/stamp.$(5):"}, {"sha": "ac379642248164f7adf95c227cf3ee82eb052e14", "filename": "mk/install.mk", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6511053d1cc9a85c721c4eba9931389958b92104/mk%2Finstall.mk", "raw_url": "https://github.com/rust-lang/rust/raw/6511053d1cc9a85c721c4eba9931389958b92104/mk%2Finstall.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Finstall.mk?ref=6511053d1cc9a85c721c4eba9931389958b92104", "patch": "@@ -81,15 +81,15 @@ endif\n define INSTALL_RUNTIME_TARGET_N\n install-runtime-target-$(1)-host-$(2): $$(TSREQ$$(ISTAGE)_T_$(1)_H_$(2)) $$(SREQ$$(ISTAGE)_T_$(1)_H_$(2))\n \t$$(Q)$$(call ADB_SHELL,mkdir,$(CFG_RUNTIME_PUSH_DIR))\n-\t$$(Q)$$(foreach crate,$$(TARGET_CRATES),\\\n-\t    $$(call ADB_PUSH,$$(TL$(1)$(2))/$$(call CFG_LIB_GLOB_$(1),$$(crate)),\\\n+\t$$(Q)$$(foreach crate,$$(TARGET_CRATES), \\\n+\t    $$(call ADB_PUSH,$$(TL$(1)$(2))/$$(call CFG_LIB_GLOB_$(1),$$(crate)), \\\n \t\t\t$$(CFG_RUNTIME_PUSH_DIR));)\n endef\n \n define INSTALL_RUNTIME_TARGET_CLEANUP_N\n install-runtime-target-$(1)-cleanup:\n \t$$(Q)$$(call ADB,remount)\n-\t$$(Q)$$(foreach crate,$$(TARGET_CRATES),\\\n+\t$$(Q)$$(foreach crate,$$(TARGET_CRATES), \\\n \t    $$(call ADB_SHELL,rm,$$(CFG_RUNTIME_PUSH_DIR)/$$(call CFG_LIB_GLOB_$(1),$$(crate)));)\n endef\n "}, {"sha": "4d354908b6898d32f6390f2db34c5e19e9c92088", "filename": "mk/main.mk", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6511053d1cc9a85c721c4eba9931389958b92104/mk%2Fmain.mk", "raw_url": "https://github.com/rust-lang/rust/raw/6511053d1cc9a85c721c4eba9931389958b92104/mk%2Fmain.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fmain.mk?ref=6511053d1cc9a85c721c4eba9931389958b92104", "patch": "@@ -167,7 +167,7 @@ endif\n define DEF_X\n X_$(1) := $(CFG_EXE_SUFFIX_$(1))\n endef\n-$(foreach target,$(CFG_TARGET),\\\n+$(foreach target,$(CFG_TARGET), \\\n   $(eval $(call DEF_X,$(target))))\n \n # \"Source\" files we generate in builddir along the way.\n@@ -333,7 +333,7 @@ TSREQ$(1)_T_$(2)_H_$(3) = \\\n # target\n SREQ$(1)_T_$(2)_H_$(3) = \\\n \t$$(TSREQ$(1)_T_$(2)_H_$(3)) \\\n-\t$$(foreach dep,$$(TARGET_CRATES),\\\n+\t$$(foreach dep,$$(TARGET_CRATES), \\\n \t    $$(TLIB$(1)_T_$(2)_H_$(3))/stamp.$$(dep))\n \n # Prerequisites for a working stageN compiler and complete set of target"}, {"sha": "b72574f6fe326bf3d2385e2b0c7034749c1fad60", "filename": "mk/platform.mk", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6511053d1cc9a85c721c4eba9931389958b92104/mk%2Fplatform.mk", "raw_url": "https://github.com/rust-lang/rust/raw/6511053d1cc9a85c721c4eba9931389958b92104/mk%2Fplatform.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fplatform.mk?ref=6511053d1cc9a85c721c4eba9931389958b92104", "patch": "@@ -32,7 +32,7 @@ $(foreach t,$(CFG_TARGET),$(info cfg: os for $(t) is $(OSTYPE_$(t))))\n CFG_DSYMUTIL := true\n \n # Hack: not sure how to test if a file exists in make other than this\n-OS_SUPP = $(patsubst %,--suppressions=%,\\\n+OS_SUPP = $(patsubst %,--suppressions=%, \\\n       $(wildcard $(CFG_SRC_DIR)src/etc/$(CFG_OSTYPE).supp*))\n \n ifdef CFG_DISABLE_OPTIMIZE_CXX\n@@ -67,7 +67,7 @@ ifneq ($(findstring linux,$(CFG_OSTYPE)),)\n     endif\n   else\n     ifdef CFG_VALGRIND\n-      CFG_PERF_TOOL :=\\\n+      CFG_PERF_TOOL := \\\n         $(CFG_VALGRIND) --tool=cachegrind --cache-sim=yes --branch-sim=yes\n     else\n       CFG_PERF_TOOL := /usr/bin/time --verbose\n@@ -94,7 +94,7 @@ define SET_FROM_CFG\n   endif\n endef\n \n-$(foreach cvar,CC CXX CPP CFLAGS CXXFLAGS CPPFLAGS,\\\n+$(foreach cvar,CC CXX CPP CFLAGS CXXFLAGS CPPFLAGS, \\\n   $(eval $(call SET_FROM_CFG,$(cvar))))\n \n CFG_RLIB_GLOB=lib$(1)-*.rlib\n@@ -591,7 +591,7 @@ define FILTER_FLAGS\n   endif\n endef\n \n-$(foreach target,$(CFG_TARGET),\\\n+$(foreach target,$(CFG_TARGET), \\\n   $(eval $(call FILTER_FLAGS,$(target))))\n \n \n@@ -664,5 +664,5 @@ define CFG_MAKE_TOOLCHAIN\n \n endef\n \n-$(foreach target,$(CFG_TARGET),\\\n+$(foreach target,$(CFG_TARGET), \\\n   $(eval $(call CFG_MAKE_TOOLCHAIN,$(target))))"}, {"sha": "7df2489744b6707bfd5ba7c2811bc87593d157fe", "filename": "mk/prepare.mk", "status": "modified", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/6511053d1cc9a85c721c4eba9931389958b92104/mk%2Fprepare.mk", "raw_url": "https://github.com/rust-lang/rust/raw/6511053d1cc9a85c721c4eba9931389958b92104/mk%2Fprepare.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fprepare.mk?ref=6511053d1cc9a85c721c4eba9931389958b92104", "patch": "@@ -52,7 +52,7 @@ define PREPARE_LIB\n \t$(nop)\n \t@$(call E, prepare: $(PREPARE_WORKING_DEST_LIB_DIR)/$(1))\n \t$(Q)LIB_NAME=\"$(notdir $(lastword $(wildcard $(PREPARE_WORKING_SOURCE_LIB_DIR)/$(1))))\"; \\\n-\tMATCHES=\"$(filter-out %$(notdir $(lastword $(wildcard $(PREPARE_WORKING_SOURCE_LIB_DIR)/$(1)))),\\\n+\tMATCHES=\"$(filter-out %$(notdir $(lastword $(wildcard $(PREPARE_WORKING_SOURCE_LIB_DIR)/$(1)))), \\\n                         $(wildcard $(PREPARE_WORKING_DEST_LIB_DIR)/$(1)))\"; \\\n \tif [ -n \"$$MATCHES\" ]; then \\\n \t  echo \"warning: one or libraries matching Rust library '$(1)'\" && \\\n@@ -82,11 +82,11 @@ prepare-host-tool-$(1)-$(2)-$(3)-$(4): prepare-maybe-clean-$(4) \\\n                                   $$(foreach dep,$$(TOOL_DEPS_$(1)),prepare-host-lib-$$(dep)-$(2)-$(3)-$(4)) \\\n                                   $$(HBIN$(2)_H_$(3))/$(1)$$(X_$(3)) \\\n                                   prepare-host-dirs-$(4)\n-\t$$(if $$(findstring $(2), $$(PREPARE_STAGE)),\\\n-      $$(if $$(findstring $(3), $$(PREPARE_HOST)),\\\n+\t$$(if $$(findstring $(2), $$(PREPARE_STAGE)), \\\n+      $$(if $$(findstring $(3), $$(PREPARE_HOST)), \\\n         $$(call PREPARE_BIN,$(1)$$(X_$$(PREPARE_HOST))),),)\n-\t$$(if $$(findstring $(2), $$(PREPARE_STAGE)),\\\n-      $$(if $$(findstring $(3), $$(PREPARE_HOST)),\\\n+\t$$(if $$(findstring $(2), $$(PREPARE_STAGE)), \\\n+      $$(if $$(findstring $(3), $$(PREPARE_HOST)), \\\n         $$(call PREPARE_MAN,$(1).1),),)\n endef\n \n@@ -101,12 +101,12 @@ define DEF_PREPARE_HOST_LIB\n prepare-host-lib-$(1)-$(2)-$(3)-$(4): PREPARE_WORKING_SOURCE_LIB_DIR=$$(PREPARE_SOURCE_LIB_DIR)\n prepare-host-lib-$(1)-$(2)-$(3)-$(4): PREPARE_WORKING_DEST_LIB_DIR=$$(PREPARE_DEST_LIB_DIR)\n prepare-host-lib-$(1)-$(2)-$(3)-$(4): prepare-maybe-clean-$(4) \\\n-                                 $$(foreach dep,$$(RUST_DEPS_$(1)),prepare-host-lib-$$(dep)-$(2)-$(3)-$(4))\\\n+                                 $$(foreach dep,$$(RUST_DEPS_$(1)),prepare-host-lib-$$(dep)-$(2)-$(3)-$(4)) \\\n                                  $$(HLIB$(2)_H_$(3))/stamp.$(1) \\\n                                  prepare-host-dirs-$(4)\n-\t$$(if $$(findstring $(2), $$(PREPARE_STAGE)),\\\n-      $$(if $$(findstring $(3), $$(PREPARE_HOST)),\\\n-        $$(if $$(findstring 1,$$(ONLY_RLIB_$(1))),,\\\n+\t$$(if $$(findstring $(2), $$(PREPARE_STAGE)), \\\n+      $$(if $$(findstring $(3), $$(PREPARE_HOST)), \\\n+        $$(if $$(findstring 1,$$(ONLY_RLIB_$(1))),, \\\n           $$(call PREPARE_LIB,$$(call CFG_LIB_GLOB_$$(PREPARE_HOST),$(1)))),),)\n endef\n \n@@ -129,17 +129,17 @@ prepare-target-$(2)-host-$(3)-$(1)-$(4): prepare-maybe-clean-$(4) \\\n # *not* install the rlibs for host crates because there's no need to statically\n # link against most of them. They just produce a large amount of extra size\n # bloat.\n-\t$$(if $$(findstring $(1), $$(PREPARE_STAGE)),\\\n-      $$(if $$(findstring $(2), $$(PREPARE_TARGETS)),\\\n-        $$(if $$(findstring $(3), $$(PREPARE_HOST)),\\\n-          $$(call PREPARE_DIR,$$(PREPARE_WORKING_DEST_LIB_DIR))\\\n-          $$(foreach crate,$$(TARGET_CRATES),\\\n-\t    $$(if $$(findstring 1, $$(ONLY_RLIB_$$(crate))),,\\\n-              $$(call PREPARE_LIB,$$(call CFG_LIB_GLOB_$(2),$$(crate))))\\\n-            $$(call PREPARE_LIB,$$(call CFG_RLIB_GLOB,$$(crate))))\\\n-          $$(if $$(findstring $(2),$$(CFG_HOST)),\\\n-            $$(foreach crate,$$(HOST_CRATES),\\\n-              $$(call PREPARE_LIB,$$(call CFG_LIB_GLOB_$(2),$$(crate)))),)\\\n+\t$$(if $$(findstring $(1), $$(PREPARE_STAGE)), \\\n+      $$(if $$(findstring $(2), $$(PREPARE_TARGETS)), \\\n+        $$(if $$(findstring $(3), $$(PREPARE_HOST)), \\\n+          $$(call PREPARE_DIR,$$(PREPARE_WORKING_DEST_LIB_DIR)) \\\n+          $$(foreach crate,$$(TARGET_CRATES), \\\n+\t    $$(if $$(findstring 1, $$(ONLY_RLIB_$$(crate))),, \\\n+              $$(call PREPARE_LIB,$$(call CFG_LIB_GLOB_$(2),$$(crate)))) \\\n+            $$(call PREPARE_LIB,$$(call CFG_RLIB_GLOB,$$(crate)))) \\\n+          $$(if $$(findstring $(2),$$(CFG_HOST)), \\\n+            $$(foreach crate,$$(HOST_CRATES), \\\n+              $$(call PREPARE_LIB,$$(call CFG_LIB_GLOB_$(2),$$(crate)))),) \\\n           $$(call PREPARE_LIB,libmorestack.a) \\\n           $$(call PREPARE_LIB,libcompiler-rt.a),),),)\n endef\n@@ -160,36 +160,36 @@ prepare-everything-$(1): prepare-host-$(1) prepare-targets-$(1)\n prepare-host-$(1): prepare-host-tools-$(1)\n \n prepare-host-tools-$(1): \\\n-        $$(foreach tool, $$(PREPARE_TOOLS),\\\n-          $$(foreach host,$$(CFG_HOST),\\\n+        $$(foreach tool, $$(PREPARE_TOOLS), \\\n+          $$(foreach host,$$(CFG_HOST), \\\n             prepare-host-tool-$$(tool)-$$(PREPARE_STAGE)-$$(host)-$(1)))\n \n prepare-host-dirs-$(1): prepare-maybe-clean-$(1)\n \t$$(call PREPARE_DIR,$$(PREPARE_DEST_BIN_DIR))\n \t$$(call PREPARE_DIR,$$(PREPARE_DEST_LIB_DIR))\n \t$$(call PREPARE_DIR,$$(PREPARE_DEST_MAN_DIR))\n \n-$$(foreach tool,$$(PREPARE_TOOLS),\\\n-  $$(foreach host,$$(CFG_HOST),\\\n+$$(foreach tool,$$(PREPARE_TOOLS), \\\n+  $$(foreach host,$$(CFG_HOST), \\\n       $$(eval $$(call DEF_PREPARE_HOST_TOOL,$$(tool),$$(PREPARE_STAGE),$$(host),$(1)))))\n \n-$$(foreach lib,$$(CRATES),\\\n-  $$(foreach host,$$(CFG_HOST),\\\n+$$(foreach lib,$$(CRATES), \\\n+  $$(foreach host,$$(CFG_HOST), \\\n     $$(eval $$(call DEF_PREPARE_HOST_LIB,$$(lib),$$(PREPARE_STAGE),$$(host),$(1)))))\n \n-prepare-targets-$(1):\\\n-        $$(foreach host,$$(CFG_HOST),\\\n-           $$(foreach target,$$(CFG_TARGET),\\\n+prepare-targets-$(1): \\\n+        $$(foreach host,$$(CFG_HOST), \\\n+           $$(foreach target,$$(CFG_TARGET), \\\n              prepare-target-$$(target)-host-$$(host)-$$(PREPARE_STAGE)-$(1)))\n \n-$$(foreach host,$$(CFG_HOST),\\\n+$$(foreach host,$$(CFG_HOST), \\\n   $$(foreach target,$$(CFG_TARGET), \\\n     $$(eval $$(call DEF_PREPARE_TARGET_N,$$(PREPARE_STAGE),$$(target),$$(host),$(1)))))\n \n prepare-maybe-clean-$(1):\n-\t$$(if $$(findstring true,$$(PREPARE_CLEAN)),\\\n+\t$$(if $$(findstring true,$$(PREPARE_CLEAN)), \\\n       @$$(call E, cleaning destination $$(PREPARE_DEST_DIR)),)\n-\t$$(if $$(findstring true,$$(PREPARE_CLEAN)),\\\n+\t$$(if $$(findstring true,$$(PREPARE_CLEAN)), \\\n       $$(Q)rm -rf $$(PREPARE_DEST_DIR),)\n \n "}, {"sha": "10fed6ad98d93375cf7af842f8b410ebee3a453a", "filename": "mk/target.mk", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6511053d1cc9a85c721c4eba9931389958b92104/mk%2Ftarget.mk", "raw_url": "https://github.com/rust-lang/rust/raw/6511053d1cc9a85c721c4eba9931389958b92104/mk%2Ftarget.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftarget.mk?ref=6511053d1cc9a85c721c4eba9931389958b92104", "patch": "@@ -75,9 +75,9 @@ $$(TLIB$(1)_T_$(2)_H_$(3))/stamp.$(4): \\\n \t\t$$(TSREQ$(1)_T_$(2)_H_$(3)) \\\n \t\t| $$(TLIB$(1)_T_$(2)_H_$(3))/\n \t@$$(call E, rustc: $$(@D)/lib$(4))\n-\t$$(call REMOVE_ALL_OLD_GLOB_MATCHES,\\\n+\t$$(call REMOVE_ALL_OLD_GLOB_MATCHES, \\\n \t    $$(dir $$@)$$(call CFG_LIB_GLOB_$(2),$(4)))\n-\t$$(call REMOVE_ALL_OLD_GLOB_MATCHES,\\\n+\t$$(call REMOVE_ALL_OLD_GLOB_MATCHES, \\\n \t    $$(dir $$@)$$(call CFG_RLIB_GLOB,$(4)))\n \t$$(STAGE$(1)_T_$(2)_H_$(3)) \\\n \t\t$$(WFLAGS_ST$(1)) \\\n@@ -89,9 +89,9 @@ $$(TLIB$(1)_T_$(2)_H_$(3))/stamp.$(4): \\\n \t\t-C extra-filename=-$$(CFG_FILENAME_EXTRA) \\\n \t\t$$<\n \t@touch $$@\n-\t$$(call LIST_ALL_OLD_GLOB_MATCHES,\\\n+\t$$(call LIST_ALL_OLD_GLOB_MATCHES, \\\n \t    $$(dir $$@)$$(call CFG_LIB_GLOB_$(2),$(4)))\n-\t$$(call LIST_ALL_OLD_GLOB_MATCHES,\\\n+\t$$(call LIST_ALL_OLD_GLOB_MATCHES, \\\n \t    $$(dir $$@)$$(call CFG_RLIB_GLOB,$(4)))\n \n endef"}, {"sha": "fbbc79f684a73c85ec634061cef897653ecafd65", "filename": "mk/tests.mk", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6511053d1cc9a85c721c4eba9931389958b92104/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/6511053d1cc9a85c721c4eba9931389958b92104/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=6511053d1cc9a85c721c4eba9931389958b92104", "patch": "@@ -75,12 +75,12 @@ TEST_RATCHET_NOISE_PERCENT=10.0\n \n # Whether to ratchet or merely save benchmarks\n ifdef CFG_RATCHET_BENCH\n-CRATE_TEST_EXTRA_ARGS=\\\n+CRATE_TEST_EXTRA_ARGS= \\\n   --test $(TEST_BENCH) \\\n   --ratchet-metrics $(call TEST_RATCHET_FILE,$(1),$(2),$(3),$(4)) \\\n   --ratchet-noise-percent $(TEST_RATCHET_NOISE_PERCENT)\n else\n-CRATE_TEST_EXTRA_ARGS=\\\n+CRATE_TEST_EXTRA_ARGS= \\\n   --test $(TEST_BENCH) \\\n   --save-metrics $(call TEST_RATCHET_FILE,$(1),$(2),$(3),$(4))\n endif\n@@ -158,9 +158,9 @@ $(info check: android device test dir $(CFG_ADB_TEST_DIR) ready \\\n  $(shell $(CFG_ADB) shell mkdir $(CFG_ADB_TEST_DIR)) \\\n  $(shell $(CFG_ADB) shell mkdir $(CFG_ADB_TEST_DIR)/tmp) \\\n  $(shell $(CFG_ADB) push $(S)src/etc/adb_run_wrapper.sh $(CFG_ADB_TEST_DIR) 1>/dev/null) \\\n- $(foreach crate,$(TARGET_CRATES),\\\n+ $(foreach crate,$(TARGET_CRATES), \\\n     $(shell $(CFG_ADB) push $(TLIB2_T_arm-linux-androideabi_H_$(CFG_BUILD))/$(call CFG_LIB_GLOB_arm-linux-androideabi,$(crate)) \\\n-                    $(CFG_ADB_TEST_DIR)))\\\n+                    $(CFG_ADB_TEST_DIR))) \\\n  )\n else\n CFG_ADB_TEST_DIR=\n@@ -359,7 +359,7 @@ define TEST_RUNNER\n # parent crates.\n ifeq ($(NO_REBUILD),)\n TESTDEP_$(1)_$(2)_$(3)_$(4) = $$(SREQ$(1)_T_$(2)_H_$(3)) \\\n-\t\t\t    $$(foreach crate,$$(TARGET_CRATES),\\\n+\t\t\t    $$(foreach crate,$$(TARGET_CRATES), \\\n \t\t\t\t$$(TLIB$(1)_T_$(2)_H_$(3))/stamp.$$(crate)) \\\n \t\t\t\t$$(CRATE_FULLDEPS_$(1)_T_$(2)_H_$(3)_$(4))\n \n@@ -930,9 +930,9 @@ $(foreach stage,$(STAGES), \\\n    $(eval $(call DEF_CHECK_FOR_STAGE_AND_HOSTS_AND_GROUP,$(stage),$(host),$(group))))))\n \n define DEF_CHECK_DOC_FOR_STAGE\n-check-stage$(1)-docs: $$(foreach docname,$$(DOCS),\\\n+check-stage$(1)-docs: $$(foreach docname,$$(DOCS), \\\n                        check-stage$(1)-T-$$(CFG_BUILD)-H-$$(CFG_BUILD)-doc-$$(docname)) \\\n-                     $$(foreach crate,$$(TEST_DOC_CRATES),\\\n+                     $$(foreach crate,$$(TEST_DOC_CRATES), \\\n                        check-stage$(1)-T-$$(CFG_BUILD)-H-$$(CFG_BUILD)-doc-crate-$$(crate))\n endef\n "}]}