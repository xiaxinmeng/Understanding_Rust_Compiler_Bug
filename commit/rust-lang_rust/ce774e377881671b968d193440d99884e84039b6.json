{"sha": "ce774e377881671b968d193440d99884e84039b6", "node_id": "C_kwDOAAsO6NoAKGNlNzc0ZTM3Nzg4MTY3MWI5NjhkMTkzNDQwZDk5ODg0ZTg0MDM5YjY", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-06-08T21:42:05Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-06-09T15:51:08Z"}, "message": "Add a explanation about required panic strategy computation", "tree": {"sha": "8ac17c8ed79f68ccd4933c26519b92f34a4c3db2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ac17c8ed79f68ccd4933c26519b92f34a4c3db2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce774e377881671b968d193440d99884e84039b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce774e377881671b968d193440d99884e84039b6", "html_url": "https://github.com/rust-lang/rust/commit/ce774e377881671b968d193440d99884e84039b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce774e377881671b968d193440d99884e84039b6/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14d155a3dc42b35856e45fd9f4212ac0c432cd10", "url": "https://api.github.com/repos/rust-lang/rust/commits/14d155a3dc42b35856e45fd9f4212ac0c432cd10", "html_url": "https://github.com/rust-lang/rust/commit/14d155a3dc42b35856e45fd9f4212ac0c432cd10"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "7728fdaffb0dcb9307127222cc1744b126306525", "filename": "compiler/rustc_mir_transform/src/ffi_unwind_calls.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ce774e377881671b968d193440d99884e84039b6/compiler%2Frustc_mir_transform%2Fsrc%2Fffi_unwind_calls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce774e377881671b968d193440d99884e84039b6/compiler%2Frustc_mir_transform%2Fsrc%2Fffi_unwind_calls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fffi_unwind_calls.rs?ref=ce774e377881671b968d193440d99884e84039b6", "patch": "@@ -136,6 +136,27 @@ fn required_panic_strategy(tcx: TyCtxt<'_>, cnum: CrateNum) -> Option<PanicStrat\n \n     for def_id in tcx.hir().body_owners() {\n         if tcx.has_ffi_unwind_calls(def_id) {\n+            // Given that this crate is compiled in `-C panic=unwind`, the `AbortUnwindingCalls`\n+            // MIR pass will not be run on FFI-unwind call sites, therefore a foreign exception\n+            // can enter Rust through these sites.\n+            //\n+            // On the other hand, crates compiled with `-C panic=abort` expects that all Rust\n+            // functions cannot unwind (whether it's caused by Rust panic or foreign exception),\n+            // and this expectation mismatch can cause unsoundness (#96926).\n+            //\n+            // To address this issue, we enforce that if FFI-unwind calls are used in a crate\n+            // compiled with `panic=unwind`, then the final panic strategy must be `panic=unwind`.\n+            // This will ensure that no crates will have wrong unwindability assumption.\n+            //\n+            // It should be noted that it is okay to link `panic=unwind` into a `panic=abort`\n+            // program if it contains no FFI-unwind calls. In such case foreign exception can only\n+            // enter Rust in a `panic=abort` crate, which will lead to an abort. There will also\n+            // be no exceptions generated from Rust, so the assumption which `panic=abort` crates\n+            // make, that no Rust function can unwind, indeed holds for crates compiled with\n+            // `panic=unwind` as well. In such case this function returns `None`, indicating that\n+            // the crate does not require a particular final panic strategy, and can be freely\n+            // linked to crates with either strategy (we need such ability for libstd and its\n+            // dependencies).\n             return Some(PanicStrategy::Unwind);\n         }\n     }"}]}