{"sha": "4d56c1563c5ae75acbcb8c163296561a6e17e47a", "node_id": "C_kwDOAAsO6NoAKDRkNTZjMTU2M2M1YWU3NWFjYmNiOGMxNjMyOTY1NjFhNmUxN2U0N2E", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-03-09T09:17:49Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-03-09T14:20:00Z"}, "message": "Add documentation about lifetimes to thread::scope.", "tree": {"sha": "6e28eedd35676f3d55b55400dc5b35afe4cc4178", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e28eedd35676f3d55b55400dc5b35afe4cc4178"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d56c1563c5ae75acbcb8c163296561a6e17e47a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d56c1563c5ae75acbcb8c163296561a6e17e47a", "html_url": "https://github.com/rust-lang/rust/commit/4d56c1563c5ae75acbcb8c163296561a6e17e47a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d56c1563c5ae75acbcb8c163296561a6e17e47a/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6045c34f15d463c7d51104b968c1eabc5275b9c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/6045c34f15d463c7d51104b968c1eabc5275b9c1", "html_url": "https://github.com/rust-lang/rust/commit/6045c34f15d463c7d51104b968c1eabc5275b9c1"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "c4847b529a3613c8c52402a34d1d4787c1112823", "filename": "library/std/src/thread/scoped.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/4d56c1563c5ae75acbcb8c163296561a6e17e47a/library%2Fstd%2Fsrc%2Fthread%2Fscoped.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d56c1563c5ae75acbcb8c163296561a6e17e47a/library%2Fstd%2Fsrc%2Fthread%2Fscoped.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fthread%2Fscoped.rs?ref=4d56c1563c5ae75acbcb8c163296561a6e17e47a", "patch": "@@ -107,6 +107,24 @@ impl ScopeData {\n /// a.push(4);\n /// assert_eq!(x, a.len());\n /// ```\n+///\n+/// # Lifetimes\n+///\n+/// Scoped threads involve two lifetimes: `'scope` and `'env`.\n+///\n+/// The `'scope` lifetime represents the lifetime of the scope itself.\n+/// That is: the time during which new scoped threads may be spawned,\n+/// and also the time during which they might still be running.\n+/// Once this lifetime ends, all scoped threads are joined.\n+/// This lifetime starts within the `scope` function, before `f` (the argument to `scope`) starts.\n+/// It ends after `f` returns and all scoped threads have been joined, but before `scope` returns.\n+///\n+/// The `'env` lifetime represents the lifetime of whatever is borrowed by the scoped threads.\n+/// This lifetime must outlast the call to `scope`, and thus cannot be smaller than `'scope`.\n+/// It can be as small as the call to `scope`, meaning that anything that outlives this call,\n+/// such as local variables defined right before the scope, can be borrowed by the scoped threads.\n+///\n+/// The `'env: 'scope` bound is part of the definition of the `Scope` type.\n #[track_caller]\n pub fn scope<'env, F, T>(f: F) -> T\n where"}]}