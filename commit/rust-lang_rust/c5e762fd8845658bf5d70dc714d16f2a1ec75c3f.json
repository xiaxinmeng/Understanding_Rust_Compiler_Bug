{"sha": "c5e762fd8845658bf5d70dc714d16f2a1ec75c3f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1ZTc2MmZkODg0NTY1OGJmNWQ3MGRjNzE0ZDE2ZjJhMWVjNzVjM2Y=", "commit": {"author": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2019-11-23T01:48:18Z"}, "committer": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2019-11-23T20:11:56Z"}, "message": "Intern allocations during constant propagation", "tree": {"sha": "c99aec79d02a9568babea0061933b5033695fb3e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c99aec79d02a9568babea0061933b5033695fb3e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5e762fd8845658bf5d70dc714d16f2a1ec75c3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5e762fd8845658bf5d70dc714d16f2a1ec75c3f", "html_url": "https://github.com/rust-lang/rust/commit/c5e762fd8845658bf5d70dc714d16f2a1ec75c3f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5e762fd8845658bf5d70dc714d16f2a1ec75c3f/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c406dc29cd49402609700469a313735622ec80c", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c406dc29cd49402609700469a313735622ec80c", "html_url": "https://github.com/rust-lang/rust/commit/8c406dc29cd49402609700469a313735622ec80c"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "4333e5c51427e1a9fff0337284fcf6bbab40aadf", "filename": "src/librustc_mir/transform/const_prop.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c5e762fd8845658bf5d70dc714d16f2a1ec75c3f/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5e762fd8845658bf5d70dc714d16f2a1ec75c3f/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs?ref=c5e762fd8845658bf5d70dc714d16f2a1ec75c3f", "patch": "@@ -30,7 +30,7 @@ use crate::interpret::{\n     self, InterpCx, ScalarMaybeUndef, Immediate, OpTy,\n     StackPopCleanup, LocalValue, LocalState, AllocId, Frame,\n     Allocation, MemoryKind, ImmTy, Pointer, Memory, PlaceTy,\n-    Operand as InterpOperand,\n+    Operand as InterpOperand, intern_const_alloc_recursive,\n };\n use crate::const_eval::error_to_const_error;\n use crate::transform::{MirPass, MirSource};\n@@ -655,14 +655,27 @@ impl<'mir, 'tcx> ConstPropagator<'mir, 'tcx> {\n             return false;\n         }\n \n-        match *op {\n+        let is_scalar = match *op {\n             interpret::Operand::Immediate(Immediate::Scalar(ScalarMaybeUndef::Scalar(s))) =>\n                 s.is_bits(),\n             interpret::Operand::Immediate(Immediate::ScalarPair(ScalarMaybeUndef::Scalar(l),\n                                                                 ScalarMaybeUndef::Scalar(r))) =>\n                 l.is_bits() && r.is_bits(),\n             _ => false\n+        };\n+\n+        if let interpret::Operand::Indirect(_) = *op {\n+            if self.tcx.sess.opts.debugging_opts.mir_opt_level >= 2 {\n+                intern_const_alloc_recursive(\n+                    &mut self.ecx,\n+                    None,\n+                    op.assert_mem_place()\n+                ).expect(\"failed to intern alloc\");\n+                return true;\n+            }\n         }\n+\n+        return is_scalar;\n     }\n }\n "}]}