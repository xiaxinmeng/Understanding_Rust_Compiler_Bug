{"sha": "521218ce88e12ed2960f619545cf22404cee8d1e", "node_id": "C_kwDOAAsO6NoAKDUyMTIxOGNlODhlMTJlZDI5NjBmNjE5NTQ1Y2YyMjQwNGNlZThkMWU", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2020-11-05T17:28:17Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "eddyb@lyken.rs", "date": "2022-06-13T08:00:58Z"}, "message": "rustc_parse: work around instruction-counting non-determinism.", "tree": {"sha": "1b3601c47d27dfd4e108c2fd7e23fccc2d965c83", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b3601c47d27dfd4e108c2fd7e23fccc2d965c83"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/521218ce88e12ed2960f619545cf22404cee8d1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/521218ce88e12ed2960f619545cf22404cee8d1e", "html_url": "https://github.com/rust-lang/rust/commit/521218ce88e12ed2960f619545cf22404cee8d1e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/521218ce88e12ed2960f619545cf22404cee8d1e/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0763c7be93b4cd8f3540077ed430ef8b8e8265c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/0763c7be93b4cd8f3540077ed430ef8b8e8265c3", "html_url": "https://github.com/rust-lang/rust/commit/0763c7be93b4cd8f3540077ed430ef8b8e8265c3"}], "stats": {"total": 20, "additions": 9, "deletions": 11}, "files": [{"sha": "f3b11e9b604bfdc5c8c6cfd81ecbc8c15a9a79a3", "filename": "compiler/rustc_parse/src/lexer/mod.rs", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/521218ce88e12ed2960f619545cf22404cee8d1e/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/521218ce88e12ed2960f619545cf22404cee8d1e/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs?ref=521218ce88e12ed2960f619545cf22404cee8d1e", "patch": "@@ -335,17 +335,15 @@ impl<'a> StringReader<'a> {\n         comment_kind: CommentKind,\n         doc_style: DocStyle,\n     ) -> TokenKind {\n-        if content.contains('\\r') {\n-            for (idx, _) in content.char_indices().filter(|&(_, c)| c == '\\r') {\n-                self.err_span_(\n-                    content_start + BytePos(idx as u32),\n-                    content_start + BytePos(idx as u32 + 1),\n-                    match comment_kind {\n-                        CommentKind::Line => \"bare CR not allowed in doc-comment\",\n-                        CommentKind::Block => \"bare CR not allowed in block doc-comment\",\n-                    },\n-                );\n-            }\n+        for (idx, _) in content.match_indices('\\r') {\n+            self.err_span_(\n+                content_start + BytePos(idx as u32),\n+                content_start + BytePos(idx as u32 + 1),\n+                match comment_kind {\n+                    CommentKind::Line => \"bare CR not allowed in doc-comment\",\n+                    CommentKind::Block => \"bare CR not allowed in block doc-comment\",\n+                },\n+            );\n         }\n \n         let attr_style = match doc_style {"}]}