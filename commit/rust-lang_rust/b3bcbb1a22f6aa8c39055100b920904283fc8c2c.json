{"sha": "b3bcbb1a22f6aa8c39055100b920904283fc8c2c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzYmNiYjFhMjJmNmFhOGMzOTA1NTEwMGI5MjA5MDQyODNmYzhjMmM=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-04-07T12:43:24Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-04-07T12:43:24Z"}, "message": "Rollup merge of #24113 - mbrubeck:doc-edit, r=steveklabnik\n\n * Fix broken \\\"module-level documentation\\\" link on the [`trait Any` docs](http://doc.rust-lang.org/std/any/trait.Any.html) and related broken markup on the [`std::any` docs](http://doc.rust-lang.org/std/any/index.html).\n\n* Remove an outdated or incorrect notice in the `BufRead::lines` docs. There is no such `read_string` function, and `lines` never returns an error.\n\nr? @steveklabnik", "tree": {"sha": "bf98143b0e0eea94d0e750c8b196d4f3759a5dd5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf98143b0e0eea94d0e750c8b196d4f3759a5dd5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3bcbb1a22f6aa8c39055100b920904283fc8c2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3bcbb1a22f6aa8c39055100b920904283fc8c2c", "html_url": "https://github.com/rust-lang/rust/commit/b3bcbb1a22f6aa8c39055100b920904283fc8c2c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3bcbb1a22f6aa8c39055100b920904283fc8c2c/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "322e4a18e3a64745f761a072b311966567488f9d", "url": "https://api.github.com/repos/rust-lang/rust/commits/322e4a18e3a64745f761a072b311966567488f9d", "html_url": "https://github.com/rust-lang/rust/commit/322e4a18e3a64745f761a072b311966567488f9d"}, {"sha": "6e86c636e550cec54f51f1ce56a1f583dd37c90d", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e86c636e550cec54f51f1ce56a1f583dd37c90d", "html_url": "https://github.com/rust-lang/rust/commit/6e86c636e550cec54f51f1ce56a1f583dd37c90d"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "687675f12ef64ff447432ac6302197892f703f0c", "filename": "src/libcore/any.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b3bcbb1a22f6aa8c39055100b920904283fc8c2c/src%2Flibcore%2Fany.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3bcbb1a22f6aa8c39055100b920904283fc8c2c/src%2Flibcore%2Fany.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fany.rs?ref=b3bcbb1a22f6aa8c39055100b920904283fc8c2c", "patch": "@@ -83,11 +83,12 @@ use marker::{Reflect, Sized};\n // Any trait\n ///////////////////////////////////////////////////////////////////////////////\n \n-/// A type to emulate dynamic typing. See the [module-level documentation][mod] for more details.\n+/// A type to emulate dynamic typing.\n ///\n /// Every type with no non-`'static` references implements `Any`.\n+/// See the [module-level documentation][mod] for more details.\n ///\n-/// [mod]: ../index.html\n+/// [mod]: index.html\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait Any: Reflect + 'static {\n     /// Get the `TypeId` of `self`"}, {"sha": "f0f37117ed3bebe582e79f541461c6fb5ee850fd", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b3bcbb1a22f6aa8c39055100b920904283fc8c2c/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3bcbb1a22f6aa8c39055100b920904283fc8c2c/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=b3bcbb1a22f6aa8c39055100b920904283fc8c2c", "patch": "@@ -618,9 +618,6 @@ pub trait BufRead: Read {\n     /// The iterator returned from this function will yield instances of\n     /// `io::Result<String>`. Each string returned will *not* have a newline\n     /// byte (the 0xA byte) at the end.\n-    ///\n-    /// This function will yield errors whenever `read_string` would have also\n-    /// yielded an error.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn lines(self) -> Lines<Self> where Self: Sized {\n         Lines { buf: self }"}]}