{"sha": "e708cbd91c9cae4426d69270248362b423324556", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3MDhjYmQ5MWM5Y2FlNDQyNmQ2OTI3MDI0ODM2MmI0MjMzMjQ1NTY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-02-03T20:53:08Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-02-03T20:53:08Z"}, "message": "Auto merge of #81717 - Aaron1011:fix/closure-diag, r=estebank\n\nFix panic when emitting diagnostic for closure mutable binding error\n\nFixes #81700\n\nThe upvar borrow kind may be `ty::BorrowKind::UniqueImmBorrow`, which is\nstill a mutable borrow for the purposes of this diagnostic code.", "tree": {"sha": "292389d778b37e739023f2df6a70edb2a7b9c83d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/292389d778b37e739023f2df6a70edb2a7b9c83d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e708cbd91c9cae4426d69270248362b423324556", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e708cbd91c9cae4426d69270248362b423324556", "html_url": "https://github.com/rust-lang/rust/commit/e708cbd91c9cae4426d69270248362b423324556", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e708cbd91c9cae4426d69270248362b423324556/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "120b2a704a60d4341286bd82f6e638c65ca169b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/120b2a704a60d4341286bd82f6e638c65ca169b6", "html_url": "https://github.com/rust-lang/rust/commit/120b2a704a60d4341286bd82f6e638c65ca169b6"}, {"sha": "bc84e211075e4c53e6fd122353f3132939e45ff9", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc84e211075e4c53e6fd122353f3132939e45ff9", "html_url": "https://github.com/rust-lang/rust/commit/bc84e211075e4c53e6fd122353f3132939e45ff9"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "333ac0738d45be1fba045d2aba44fef7007abb58", "filename": "compiler/rustc_mir/src/borrow_check/diagnostics/mutability_errors.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e708cbd91c9cae4426d69270248362b423324556/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fmutability_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e708cbd91c9cae4426d69270248362b423324556/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fmutability_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fmutability_errors.rs?ref=e708cbd91c9cae4426d69270248362b423324556", "patch": "@@ -514,15 +514,15 @@ impl<'a, 'tcx> MirBorrowckCtxt<'a, 'tcx> {\n             let upvar = ty::place_to_string_for_capture(tcx, place);\n             match tables.upvar_capture(upvar_id) {\n                 ty::UpvarCapture::ByRef(ty::UpvarBorrow {\n-                    kind: ty::BorrowKind::MutBorrow,\n+                    kind: ty::BorrowKind::MutBorrow | ty::BorrowKind::UniqueImmBorrow,\n                     ..\n                 }) => {\n                     format!(\"mutable borrow of `{}`\", upvar)\n                 }\n                 ty::UpvarCapture::ByValue(_) => {\n                     format!(\"possible mutation of `{}`\", upvar)\n                 }\n-                _ => bug!(\"upvar `{}` borrowed, but not mutably\", upvar),\n+                val => bug!(\"upvar `{}` borrowed, but not mutably: {:?}\", upvar, val),\n             }\n         } else {\n             bug!(\"not an upvar\")"}, {"sha": "a27a6160142adc34f041e8565d3163bcd63d7c4e", "filename": "src/test/ui/closures/issue-81700-mut-borrow.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e708cbd91c9cae4426d69270248362b423324556/src%2Ftest%2Fui%2Fclosures%2Fissue-81700-mut-borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e708cbd91c9cae4426d69270248362b423324556/src%2Ftest%2Fui%2Fclosures%2Fissue-81700-mut-borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fissue-81700-mut-borrow.rs?ref=e708cbd91c9cae4426d69270248362b423324556", "patch": "@@ -0,0 +1,5 @@\n+fn foo(x: &mut u32) {\n+    let bar = || { foo(x); };\n+    bar(); //~ ERROR cannot borrow\n+}\n+fn main() {}"}, {"sha": "3f564afff58e2df73a1424e327fc0bc8551c7ed2", "filename": "src/test/ui/closures/issue-81700-mut-borrow.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e708cbd91c9cae4426d69270248362b423324556/src%2Ftest%2Fui%2Fclosures%2Fissue-81700-mut-borrow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e708cbd91c9cae4426d69270248362b423324556/src%2Ftest%2Fui%2Fclosures%2Fissue-81700-mut-borrow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fissue-81700-mut-borrow.stderr?ref=e708cbd91c9cae4426d69270248362b423324556", "patch": "@@ -0,0 +1,13 @@\n+error[E0596]: cannot borrow `bar` as mutable, as it is not declared as mutable\n+  --> $DIR/issue-81700-mut-borrow.rs:3:5\n+   |\n+LL |     let bar = || { foo(x); };\n+   |         ---            - calling `bar` requires mutable binding due to mutable borrow of `x`\n+   |         |\n+   |         help: consider changing this to be mutable: `mut bar`\n+LL |     bar();\n+   |     ^^^ cannot borrow as mutable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0596`."}]}