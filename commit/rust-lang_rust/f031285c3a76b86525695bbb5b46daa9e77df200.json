{"sha": "f031285c3a76b86525695bbb5b46daa9e77df200", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwMzEyODVjM2E3NmI4NjUyNTY5NWJiYjViNDZkYWE5ZTc3ZGYyMDA=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2015-01-03T03:31:50Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2015-01-03T03:35:56Z"}, "message": "Remove graphviz::LabelText::* public reexport\n\nPart of #19253\n\n[breaking-change]", "tree": {"sha": "024d668b78548c5bccee8de48110cf81224ded90", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/024d668b78548c5bccee8de48110cf81224ded90"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f031285c3a76b86525695bbb5b46daa9e77df200", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f031285c3a76b86525695bbb5b46daa9e77df200", "html_url": "https://github.com/rust-lang/rust/commit/f031285c3a76b86525695bbb5b46daa9e77df200", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f031285c3a76b86525695bbb5b46daa9e77df200/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c89417130f042c58adc60012e7cddc4ef70b70b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/c89417130f042c58adc60012e7cddc4ef70b70b9", "html_url": "https://github.com/rust-lang/rust/commit/c89417130f042c58adc60012e7cddc4ef70b70b9"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "e3316b1251d92fa492353960522106bf11bf0fd2", "filename": "src/libgraphviz/lib.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f031285c3a76b86525695bbb5b46daa9e77df200/src%2Flibgraphviz%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f031285c3a76b86525695bbb5b46daa9e77df200/src%2Flibgraphviz%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibgraphviz%2Flib.rs?ref=f031285c3a76b86525695bbb5b46daa9e77df200", "patch": "@@ -168,10 +168,10 @@\n //!         dot::Id::new(format!(\"N{}\", n)).unwrap()\n //!     }\n //!     fn node_label<'b>(&'b self, n: &Nd) -> dot::LabelText<'b> {\n-//!         dot::LabelStr(self.nodes[*n].as_slice().into_cow())\n+//!         dot::LabelText::LabelStr(self.nodes[*n].as_slice().into_cow())\n //!     }\n //!     fn edge_label<'b>(&'b self, _: &Ed) -> dot::LabelText<'b> {\n-//!         dot::LabelStr(\"&sube;\".into_cow())\n+//!         dot::LabelText::LabelStr(\"&sube;\".into_cow())\n //!     }\n //! }\n //!\n@@ -225,10 +225,10 @@\n //!     }\n //!     fn node_label<'b>(&'b self, n: &Nd<'b>) -> dot::LabelText<'b> {\n //!         let &(i, _) = n;\n-//!         dot::LabelStr(self.nodes[i].as_slice().into_cow())\n+//!         dot::LabelText::LabelStr(self.nodes[i].as_slice().into_cow())\n //!     }\n //!     fn edge_label<'b>(&'b self, _: &Ed<'b>) -> dot::LabelText<'b> {\n-//!         dot::LabelStr(\"&sube;\".into_cow())\n+//!         dot::LabelText::LabelStr(\"&sube;\".into_cow())\n //!     }\n //! }\n //!\n@@ -274,7 +274,7 @@\n #![feature(globs, slicing_syntax)]\n #![feature(unboxed_closures)]\n \n-pub use self::LabelText::*;\n+use self::LabelText::*;\n \n use std::borrow::IntoCow;\n use std::io;\n@@ -586,8 +586,8 @@ pub fn render_opts<'a, N:Clone+'a, E:Clone+'a, G:Labeller<'a,N,E>+GraphWalk<'a,N\n #[cfg(test)]\n mod tests {\n     use self::NodeLabels::*;\n-    use super::{Id, LabelText, LabelStr, EscStr, Labeller};\n-    use super::{Nodes, Edges, GraphWalk, render};\n+    use super::{Id, Labeller, Nodes, Edges, GraphWalk, render};\n+    use super::LabelText::{mod, LabelStr, EscStr};\n     use std::io::IoResult;\n     use std::str;\n     use std::borrow::IntoCow;"}, {"sha": "8a2ecbca20d55beab1226c9fa0284a1f9ad83b08", "filename": "src/librustc/middle/cfg/graphviz.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f031285c3a76b86525695bbb5b46daa9e77df200/src%2Flibrustc%2Fmiddle%2Fcfg%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f031285c3a76b86525695bbb5b46daa9e77df200/src%2Flibrustc%2Fmiddle%2Fcfg%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcfg%2Fgraphviz.rs?ref=f031285c3a76b86525695bbb5b46daa9e77df200", "patch": "@@ -60,16 +60,16 @@ impl<'a, 'ast> dot::Labeller<'a, Node<'a>, Edge<'a>> for LabelledCFG<'a, 'ast> {\n \n     fn node_label(&'a self, &(i, n): &Node<'a>) -> dot::LabelText<'a> {\n         if i == self.cfg.entry {\n-            dot::LabelStr(\"entry\".into_cow())\n+            dot::LabelText::LabelStr(\"entry\".into_cow())\n         } else if i == self.cfg.exit {\n-            dot::LabelStr(\"exit\".into_cow())\n+            dot::LabelText::LabelStr(\"exit\".into_cow())\n         } else if n.data.id == ast::DUMMY_NODE_ID {\n-            dot::LabelStr(\"(dummy_node)\".into_cow())\n+            dot::LabelText::LabelStr(\"(dummy_node)\".into_cow())\n         } else {\n             let s = self.ast_map.node_to_string(n.data.id);\n             // left-aligns the lines\n             let s = replace_newline_with_backslash_l(s);\n-            dot::EscStr(s.into_cow())\n+            dot::LabelText::EscStr(s.into_cow())\n         }\n     }\n \n@@ -87,7 +87,7 @@ impl<'a, 'ast> dot::Labeller<'a, Node<'a>, Edge<'a>> for LabelledCFG<'a, 'ast> {\n             let s = replace_newline_with_backslash_l(s);\n             label.push_str(format!(\"exiting scope_{} {}\", i, s[])[]);\n         }\n-        dot::EscStr(label.into_cow())\n+        dot::LabelText::EscStr(label.into_cow())\n     }\n }\n "}, {"sha": "a54a2eeb5918a94cbe2b8d8b4309849975450ec7", "filename": "src/librustc_borrowck/graphviz.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f031285c3a76b86525695bbb5b46daa9e77df200/src%2Flibrustc_borrowck%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f031285c3a76b86525695bbb5b46daa9e77df200/src%2Flibrustc_borrowck%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fgraphviz.rs?ref=f031285c3a76b86525695bbb5b46daa9e77df200", "patch": "@@ -137,8 +137,8 @@ impl<'a, 'tcx> dot::Labeller<'a, Node<'a>, Edge<'a>> for DataflowLabeller<'a, 't\n         let suffix = self.dataflow_for(dataflow::Exit, n);\n         let inner_label = self.inner.node_label(n);\n         inner_label\n-            .prefix_line(dot::LabelStr(prefix.into_cow()))\n-            .suffix_line(dot::LabelStr(suffix.into_cow()))\n+            .prefix_line(dot::LabelText::LabelStr(prefix.into_cow()))\n+            .suffix_line(dot::LabelText::LabelStr(suffix.into_cow()))\n     }\n     fn edge_label(&'a self, e: &Edge<'a>) -> dot::LabelText<'a> { self.inner.edge_label(e) }\n }"}]}