{"sha": "babe20f018a1a92c3f1ece15cc5193e77d9c7ef9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhYmUyMGYwMThhMWE5MmMzZjFlY2UxNWNjNTE5M2U3N2Q5YzdlZjk=", "commit": {"author": {"name": "Eric Martin", "email": "e.a.martin1337@gmail.com", "date": "2013-08-31T01:53:25Z"}, "committer": {"name": "Eric Martin", "email": "e.a.martin1337@gmail.com", "date": "2013-08-31T01:53:25Z"}, "message": "remove several 'ne' methods", "tree": {"sha": "6f70af77ee686c61207753e284521d891ccb629d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f70af77ee686c61207753e284521d891ccb629d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/babe20f018a1a92c3f1ece15cc5193e77d9c7ef9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/babe20f018a1a92c3f1ece15cc5193e77d9c7ef9", "html_url": "https://github.com/rust-lang/rust/commit/babe20f018a1a92c3f1ece15cc5193e77d9c7ef9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/babe20f018a1a92c3f1ece15cc5193e77d9c7ef9/comments", "author": {"login": "eamartin", "id": 287200, "node_id": "MDQ6VXNlcjI4NzIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/287200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eamartin", "html_url": "https://github.com/eamartin", "followers_url": "https://api.github.com/users/eamartin/followers", "following_url": "https://api.github.com/users/eamartin/following{/other_user}", "gists_url": "https://api.github.com/users/eamartin/gists{/gist_id}", "starred_url": "https://api.github.com/users/eamartin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eamartin/subscriptions", "organizations_url": "https://api.github.com/users/eamartin/orgs", "repos_url": "https://api.github.com/users/eamartin/repos", "events_url": "https://api.github.com/users/eamartin/events{/privacy}", "received_events_url": "https://api.github.com/users/eamartin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eamartin", "id": 287200, "node_id": "MDQ6VXNlcjI4NzIwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/287200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eamartin", "html_url": "https://github.com/eamartin", "followers_url": "https://api.github.com/users/eamartin/followers", "following_url": "https://api.github.com/users/eamartin/following{/other_user}", "gists_url": "https://api.github.com/users/eamartin/gists{/gist_id}", "starred_url": "https://api.github.com/users/eamartin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eamartin/subscriptions", "organizations_url": "https://api.github.com/users/eamartin/orgs", "repos_url": "https://api.github.com/users/eamartin/repos", "events_url": "https://api.github.com/users/eamartin/events{/privacy}", "received_events_url": "https://api.github.com/users/eamartin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8002a09bf915bd186e4e455b25265b4160bfd125", "url": "https://api.github.com/repos/rust-lang/rust/commits/8002a09bf915bd186e4e455b25265b4160bfd125", "html_url": "https://github.com/rust-lang/rust/commit/8002a09bf915bd186e4e455b25265b4160bfd125"}], "stats": {"total": 24, "additions": 0, "deletions": 24}, "files": [{"sha": "dd44a2c2de242af2a5f7a98b207e11abb2db4ab6", "filename": "src/librustpkg/package_id.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/babe20f018a1a92c3f1ece15cc5193e77d9c7ef9/src%2Flibrustpkg%2Fpackage_id.rs", "raw_url": "https://github.com/rust-lang/rust/raw/babe20f018a1a92c3f1ece15cc5193e77d9c7ef9/src%2Flibrustpkg%2Fpackage_id.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Fpackage_id.rs?ref=babe20f018a1a92c3f1ece15cc5193e77d9c7ef9", "patch": "@@ -40,9 +40,6 @@ impl Eq for PkgId {\n     fn eq(&self, p: &PkgId) -> bool {\n         p.path == self.path && p.version == self.version\n     }\n-    fn ne(&self, p: &PkgId) -> bool {\n-        !(self.eq(p))\n-    }\n }\n \n impl PkgId {"}, {"sha": "827bb415d407870be6810dec238edf1480e8dd0f", "filename": "src/librustpkg/version.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/babe20f018a1a92c3f1ece15cc5193e77d9c7ef9/src%2Flibrustpkg%2Fversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/babe20f018a1a92c3f1ece15cc5193e77d9c7ef9/src%2Flibrustpkg%2Fversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Fversion.rs?ref=babe20f018a1a92c3f1ece15cc5193e77d9c7ef9", "patch": "@@ -40,9 +40,6 @@ impl Eq for Version {\n             _ => false\n         }\n     }\n-    fn ne(&self, other: &Version) -> bool {\n-        !self.eq(other)\n-    }\n }\n \n impl Ord for Version {"}, {"sha": "926e6e1f6b6e350212aef66d1bc01c5291da742f", "filename": "src/libstd/bool.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/babe20f018a1a92c3f1ece15cc5193e77d9c7ef9/src%2Flibstd%2Fbool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/babe20f018a1a92c3f1ece15cc5193e77d9c7ef9/src%2Flibstd%2Fbool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fbool.rs?ref=babe20f018a1a92c3f1ece15cc5193e77d9c7ef9", "patch": "@@ -321,8 +321,6 @@ impl TotalOrd for bool {\n impl Eq for bool {\n     #[inline]\n     fn eq(&self, other: &bool) -> bool { (*self) == (*other) }\n-    #[inline]\n-    fn ne(&self, other: &bool) -> bool { (*self) != (*other) }\n }\n \n #[cfg(not(test))]"}, {"sha": "fcfd54e814bb8a29a49788c95113cbf40a7ba38a", "filename": "src/libstd/char.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/babe20f018a1a92c3f1ece15cc5193e77d9c7ef9/src%2Flibstd%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/babe20f018a1a92c3f1ece15cc5193e77d9c7ef9/src%2Flibstd%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fchar.rs?ref=babe20f018a1a92c3f1ece15cc5193e77d9c7ef9", "patch": "@@ -397,8 +397,6 @@ impl Char for char {\n impl Eq for char {\n     #[inline]\n     fn eq(&self, other: &char) -> bool { (*self) == (*other) }\n-    #[inline]\n-    fn ne(&self, other: &char) -> bool { (*self) != (*other) }\n }\n \n #[cfg(not(test))]"}, {"sha": "899d6236aaaaa109dc335c0f339a74c6c3ce4b7a", "filename": "src/libstd/num/f32.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/babe20f018a1a92c3f1ece15cc5193e77d9c7ef9/src%2Flibstd%2Fnum%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/babe20f018a1a92c3f1ece15cc5193e77d9c7ef9/src%2Flibstd%2Fnum%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Ff32.rs?ref=babe20f018a1a92c3f1ece15cc5193e77d9c7ef9", "patch": "@@ -171,8 +171,6 @@ impl Num for f32 {}\n impl Eq for f32 {\n     #[inline]\n     fn eq(&self, other: &f32) -> bool { (*self) == (*other) }\n-    #[inline]\n-    fn ne(&self, other: &f32) -> bool { (*self) != (*other) }\n }\n \n #[cfg(not(test))]"}, {"sha": "6ab8350a11544e9ea2299f3820015372c5571e75", "filename": "src/libstd/num/f64.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/babe20f018a1a92c3f1ece15cc5193e77d9c7ef9/src%2Flibstd%2Fnum%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/babe20f018a1a92c3f1ece15cc5193e77d9c7ef9/src%2Flibstd%2Fnum%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Ff64.rs?ref=babe20f018a1a92c3f1ece15cc5193e77d9c7ef9", "patch": "@@ -194,8 +194,6 @@ impl Num for f64 {}\n impl Eq for f64 {\n     #[inline]\n     fn eq(&self, other: &f64) -> bool { (*self) == (*other) }\n-    #[inline]\n-    fn ne(&self, other: &f64) -> bool { (*self) != (*other) }\n }\n \n #[cfg(not(test))]"}, {"sha": "4dd6fd253333effafc654849e1ae0cb95d80c7bd", "filename": "src/libstd/num/float.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/babe20f018a1a92c3f1ece15cc5193e77d9c7ef9/src%2Flibstd%2Fnum%2Ffloat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/babe20f018a1a92c3f1ece15cc5193e77d9c7ef9/src%2Flibstd%2Fnum%2Ffloat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Ffloat.rs?ref=babe20f018a1a92c3f1ece15cc5193e77d9c7ef9", "patch": "@@ -331,8 +331,6 @@ impl Num for float {}\n impl Eq for float {\n     #[inline]\n     fn eq(&self, other: &float) -> bool { (*self) == (*other) }\n-    #[inline]\n-    fn ne(&self, other: &float) -> bool { (*self) != (*other) }\n }\n \n #[cfg(not(test))]"}, {"sha": "0131feda830628e698acfa36f57449079de9a1ce", "filename": "src/libstd/num/int_macros.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/babe20f018a1a92c3f1ece15cc5193e77d9c7ef9/src%2Flibstd%2Fnum%2Fint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/babe20f018a1a92c3f1ece15cc5193e77d9c7ef9/src%2Flibstd%2Fnum%2Fint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fint_macros.rs?ref=babe20f018a1a92c3f1ece15cc5193e77d9c7ef9", "patch": "@@ -147,8 +147,6 @@ impl Ord for $T {\n impl Eq for $T {\n     #[inline]\n     fn eq(&self, other: &$T) -> bool { return (*self) == (*other); }\n-    #[inline]\n-    fn ne(&self, other: &$T) -> bool { return (*self) != (*other); }\n }\n \n impl Orderable for $T {"}, {"sha": "1426142d46569d4f3542a6c150f9621e315ce9af", "filename": "src/libstd/num/uint_macros.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/babe20f018a1a92c3f1ece15cc5193e77d9c7ef9/src%2Flibstd%2Fnum%2Fuint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/babe20f018a1a92c3f1ece15cc5193e77d9c7ef9/src%2Flibstd%2Fnum%2Fuint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fuint_macros.rs?ref=babe20f018a1a92c3f1ece15cc5193e77d9c7ef9", "patch": "@@ -148,8 +148,6 @@ impl Ord for $T {\n impl Eq for $T {\n     #[inline]\n     fn eq(&self, other: &$T) -> bool { return (*self) == (*other); }\n-    #[inline]\n-    fn ne(&self, other: &$T) -> bool { return (*self) != (*other); }\n }\n \n impl Orderable for $T {"}, {"sha": "4a7ab6d6732ee6dc7df14594f8eee6a6ec4b7bc7", "filename": "src/libstd/str.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/babe20f018a1a92c3f1ece15cc5193e77d9c7ef9/src%2Flibstd%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/babe20f018a1a92c3f1ece15cc5193e77d9c7ef9/src%2Flibstd%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstr.rs?ref=babe20f018a1a92c3f1ece15cc5193e77d9c7ef9", "patch": "@@ -1180,17 +1180,13 @@ pub mod traits {\n         fn eq(&self, other: &~str) -> bool {\n             eq_slice((*self), (*other))\n         }\n-        #[inline]\n-        fn ne(&self, other: &~str) -> bool { !(*self).eq(other) }\n     }\n \n     impl Eq for @str {\n         #[inline]\n         fn eq(&self, other: &@str) -> bool {\n             eq_slice((*self), (*other))\n         }\n-        #[inline]\n-        fn ne(&self, other: &@str) -> bool { !(*self).eq(other) }\n     }\n \n     impl<'self> TotalEq for &'self str {"}]}