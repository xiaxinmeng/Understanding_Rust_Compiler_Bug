{"sha": "e71519572ceae49b174ccec0d7266b114911ce53", "node_id": "C_kwDOAAsO6NoAKGU3MTUxOTU3MmNlYWU0OWIxNzRjY2VjMGQ3MjY2YjExNDkxMWNlNTM", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2022-07-01T14:32:54Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2022-07-01T17:00:07Z"}, "message": "Add tests for #12669", "tree": {"sha": "494a886f3a1e1ace1a88a1ef157a5600ba35d4de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/494a886f3a1e1ace1a88a1ef157a5600ba35d4de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e71519572ceae49b174ccec0d7266b114911ce53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e71519572ceae49b174ccec0d7266b114911ce53", "html_url": "https://github.com/rust-lang/rust/commit/e71519572ceae49b174ccec0d7266b114911ce53", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e71519572ceae49b174ccec0d7266b114911ce53/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "994f3cf74dea8730e473c4ad483bea0baff491c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/994f3cf74dea8730e473c4ad483bea0baff491c9", "html_url": "https://github.com/rust-lang/rust/commit/994f3cf74dea8730e473c4ad483bea0baff491c9"}], "stats": {"total": 81, "additions": 81, "deletions": 0}, "files": [{"sha": "a1ab6060e790c0cdb4a9a02ffcd33e7b66d2aa0e", "filename": "crates/hir-ty/src/tests/macros.rs", "status": "modified", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/e71519572ceae49b174ccec0d7266b114911ce53/crates%2Fhir-ty%2Fsrc%2Ftests%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e71519572ceae49b174ccec0d7266b114911ce53/crates%2Fhir-ty%2Fsrc%2Ftests%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Ftests%2Fmacros.rs?ref=e71519572ceae49b174ccec0d7266b114911ce53", "patch": "@@ -1274,3 +1274,65 @@ impl S {\n         \"#]],\n     );\n }\n+\n+#[test]\n+fn infer_in_unexpandable_attr_proc_macro_1() {\n+    check_types(\n+        r#\"\n+//- /main.rs crate:main deps:mac\n+#[mac::attr_macro]\n+fn foo() {\n+    let xxx = 1;\n+      //^^^ i32\n+}\n+\n+//- /mac.rs crate:mac\n+#![crate_type=\"proc-macro\"]\n+#[proc_macro_attribute]\n+pub fn attr_macro() {}\n+\"#,\n+    );\n+}\n+\n+#[test]\n+fn infer_in_unexpandable_attr_proc_macro_in_impl() {\n+    check_types(\n+        r#\"\n+//- /main.rs crate:main deps:mac\n+struct Foo;\n+impl Foo {\n+    #[mac::attr_macro]\n+    fn foo() {\n+        let xxx = 1;\n+          //^^^ i32\n+    }\n+}\n+\n+//- /mac.rs crate:mac\n+#![crate_type=\"proc-macro\"]\n+#[proc_macro_attribute]\n+pub fn attr_macro() {}\n+\"#,\n+    );\n+}\n+\n+#[test]\n+fn infer_in_unexpandable_attr_proc_macro_in_trait() {\n+    check_types(\n+        r#\"\n+//- /main.rs crate:main deps:mac\n+trait Foo {\n+    #[mac::attr_macro]\n+    fn foo() {\n+        let xxx = 1;\n+          //^^^ i32\n+    }\n+}\n+\n+//- /mac.rs crate:mac\n+#![crate_type=\"proc-macro\"]\n+#[proc_macro_attribute]\n+pub fn attr_macro() {}\n+\"#,\n+    );\n+}"}, {"sha": "97ea5c456a635009b738b151b73faf2ab99113d4", "filename": "crates/ide-diagnostics/src/handlers/inactive_code.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e71519572ceae49b174ccec0d7266b114911ce53/crates%2Fide-diagnostics%2Fsrc%2Fhandlers%2Finactive_code.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e71519572ceae49b174ccec0d7266b114911ce53/crates%2Fide-diagnostics%2Fsrc%2Fhandlers%2Finactive_code.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-diagnostics%2Fsrc%2Fhandlers%2Finactive_code.rs?ref=e71519572ceae49b174ccec0d7266b114911ce53", "patch": "@@ -104,6 +104,25 @@ fn f() {\n         );\n     }\n \n+    #[test]\n+    fn inactive_assoc_item() {\n+        // FIXME these currently don't work, hence the *\n+        check(\n+            r#\"\n+struct Foo;\n+impl Foo {\n+    #[cfg(any())] pub fn f() {}\n+  //*************************** weak: code is inactive due to #[cfg] directives\n+}\n+\n+trait Bar {\n+    #[cfg(any())] pub fn f() {}\n+  //*************************** weak: code is inactive due to #[cfg] directives\n+}\n+\"#,\n+        );\n+    }\n+\n     /// Tests that `cfg` attributes behind `cfg_attr` is handled properly.\n     #[test]\n     fn inactive_via_cfg_attr() {"}]}