{"sha": "804c071d8b9cfe4d40df9565558db8a9d87d7775", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwNGMwNzFkOGI5Y2ZlNGQ0MGRmOTU2NTU1OGRiOGE5ZDg3ZDc3NzU=", "commit": {"author": {"name": "Dave Huseby", "email": "dhuseby@mozilla.com", "date": "2015-02-26T21:03:06Z"}, "committer": {"name": "Dave Huseby", "email": "dhuseby@mozilla.com", "date": "2015-02-26T21:03:06Z"}, "message": "fixing a few bitrig build breakers", "tree": {"sha": "ba2a3fa7ec185e4ec0fb54612bca0af121d50fd9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba2a3fa7ec185e4ec0fb54612bca0af121d50fd9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/804c071d8b9cfe4d40df9565558db8a9d87d7775", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/804c071d8b9cfe4d40df9565558db8a9d87d7775", "html_url": "https://github.com/rust-lang/rust/commit/804c071d8b9cfe4d40df9565558db8a9d87d7775", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/804c071d8b9cfe4d40df9565558db8a9d87d7775/comments", "author": null, "committer": null, "parents": [{"sha": "a5214e4330e8186da7b1117119a7dccfc36a2e6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5214e4330e8186da7b1117119a7dccfc36a2e6b", "html_url": "https://github.com/rust-lang/rust/commit/a5214e4330e8186da7b1117119a7dccfc36a2e6b"}], "stats": {"total": 16, "additions": 1, "deletions": 15}, "files": [{"sha": "71b6214460f4b9550926f95e1488fe2dd73519a1", "filename": "src/libstd/sys/unix/fs.rs", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/804c071d8b9cfe4d40df9565558db8a9d87d7775/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/804c071d8b9cfe4d40df9565558db8a9d87d7775/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ffs.rs?ref=804c071d8b9cfe4d40df9565558db8a9d87d7775", "patch": "@@ -291,29 +291,14 @@ fn mkstat(stat: &libc::stat) -> FileStat {\n     // FileStat times are in milliseconds\n     fn mktime(secs: u64, nsecs: u64) -> u64 { secs * 1000 + nsecs / 1000000 }\n \n-    #[cfg(target_os = \"bitrig\")]\n-    fn ctime(stat: &libc::stat) -> u64 {\n-      mktime(stat.st_ctim.tv_sec as u64, stat.st_ctim.tv_nsec as u64)\n-    }\n-    #[cfg(not(target_os = \"bitrig\"))]\n     fn ctime(stat: &libc::stat) -> u64 {\n       mktime(stat.st_ctime as u64, stat.st_ctime_nsec as u64)\n     }\n \n-    #[cfg(target_os = \"bitrig\")]\n-    fn atime(stat: &libc::stat) -> u64 {\n-      mktime(stat.st_atim.tv_sec as u64, stat.st_atim.tv_nsec as u64)\n-    }\n-    #[cfg(not(target_os = \"bitrig\"))]\n     fn atime(stat: &libc::stat) -> u64 {\n       mktime(stat.st_atime as u64, stat.st_atime_nsec as u64)\n     }\n \n-    #[cfg(target_os = \"bitrig\")]\n-    fn mtime(stat: &libc::stat) -> u64 {\n-      mktime(stat.st_mtim.tv_sec as u64, stat.st_mtim.tv_nsec as u64)\n-    }\n-    #[cfg(not(target_os = \"bitrig\"))]\n     fn mtime(stat: &libc::stat) -> u64 {\n       mktime(stat.st_mtime as u64, stat.st_mtime_nsec as u64)\n     }"}, {"sha": "a7d0a864a08aa0a31e38e3f85601721d432e6e0b", "filename": "src/libstd/sys/unix/process2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/804c071d8b9cfe4d40df9565558db8a9d87d7775/src%2Flibstd%2Fsys%2Funix%2Fprocess2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/804c071d8b9cfe4d40df9565558db8a9d87d7775/src%2Flibstd%2Fsys%2Funix%2Fprocess2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess2.rs?ref=804c071d8b9cfe4d40df9565558db8a9d87d7775", "patch": "@@ -439,6 +439,7 @@ fn translate_status(status: c_int) -> ExitStatus {\n               target_os = \"ios\",\n               target_os = \"freebsd\",\n               target_os = \"dragonfly\",\n+              target_os = \"bitrig\",\n               target_os = \"openbsd\"))]\n     mod imp {\n         pub fn WIFEXITED(status: i32) -> bool { (status & 0x7f) == 0 }"}]}