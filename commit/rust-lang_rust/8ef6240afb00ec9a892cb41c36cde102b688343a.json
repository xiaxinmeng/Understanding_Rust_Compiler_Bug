{"sha": "8ef6240afb00ec9a892cb41c36cde102b688343a", "node_id": "C_kwDOAAsO6NoAKDhlZjYyNDBhZmIwMGVjOWE4OTJjYjQxYzM2Y2RlMTAyYjY4ODM0M2E", "commit": {"author": {"name": "y21", "email": "30553356+y21@users.noreply.github.com", "date": "2023-05-23T15:22:23Z"}, "committer": {"name": "y21", "email": "30553356+y21@users.noreply.github.com", "date": "2023-05-23T15:22:23Z"}, "message": "point to `await` expr in note", "tree": {"sha": "4d87f620b88ff0c9624af5605d9f8ad7b2a5d646", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d87f620b88ff0c9624af5605d9f8ad7b2a5d646"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ef6240afb00ec9a892cb41c36cde102b688343a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ef6240afb00ec9a892cb41c36cde102b688343a", "html_url": "https://github.com/rust-lang/rust/commit/8ef6240afb00ec9a892cb41c36cde102b688343a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ef6240afb00ec9a892cb41c36cde102b688343a/comments", "author": {"login": "y21", "id": 30553356, "node_id": "MDQ6VXNlcjMwNTUzMzU2", "avatar_url": "https://avatars.githubusercontent.com/u/30553356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/y21", "html_url": "https://github.com/y21", "followers_url": "https://api.github.com/users/y21/followers", "following_url": "https://api.github.com/users/y21/following{/other_user}", "gists_url": "https://api.github.com/users/y21/gists{/gist_id}", "starred_url": "https://api.github.com/users/y21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/y21/subscriptions", "organizations_url": "https://api.github.com/users/y21/orgs", "repos_url": "https://api.github.com/users/y21/repos", "events_url": "https://api.github.com/users/y21/events{/privacy}", "received_events_url": "https://api.github.com/users/y21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "y21", "id": 30553356, "node_id": "MDQ6VXNlcjMwNTUzMzU2", "avatar_url": "https://avatars.githubusercontent.com/u/30553356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/y21", "html_url": "https://github.com/y21", "followers_url": "https://api.github.com/users/y21/followers", "following_url": "https://api.github.com/users/y21/following{/other_user}", "gists_url": "https://api.github.com/users/y21/gists{/gist_id}", "starred_url": "https://api.github.com/users/y21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/y21/subscriptions", "organizations_url": "https://api.github.com/users/y21/orgs", "repos_url": "https://api.github.com/users/y21/repos", "events_url": "https://api.github.com/users/y21/events{/privacy}", "received_events_url": "https://api.github.com/users/y21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3eeeaa2bc7bff6b9f11dfe99889a4627904de221", "url": "https://api.github.com/repos/rust-lang/rust/commits/3eeeaa2bc7bff6b9f11dfe99889a4627904de221", "html_url": "https://github.com/rust-lang/rust/commit/3eeeaa2bc7bff6b9f11dfe99889a4627904de221"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "117dda092223ebefb86fa2087aa0e64b28853183", "filename": "clippy_lints/src/unused_async.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8ef6240afb00ec9a892cb41c36cde102b688343a/clippy_lints%2Fsrc%2Funused_async.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ef6240afb00ec9a892cb41c36cde102b688343a/clippy_lints%2Fsrc%2Funused_async.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funused_async.rs?ref=8ef6240afb00ec9a892cb41c36cde102b688343a", "patch": "@@ -44,7 +44,7 @@ struct AsyncFnVisitor<'a, 'tcx> {\n     found_await: bool,\n     /// Also keep track of `await`s in nested async blocks so we can mention\n     /// it in a note\n-    found_await_in_async_block: bool,\n+    await_in_async_block: Option<Span>,\n     async_depth: usize,\n }\n \n@@ -55,8 +55,8 @@ impl<'a, 'tcx> Visitor<'tcx> for AsyncFnVisitor<'a, 'tcx> {\n         if let ExprKind::Yield(_, YieldSource::Await { .. }) = ex.kind {\n             if self.async_depth == 1 {\n                 self.found_await = true;\n-            } else {\n-                self.found_await_in_async_block = true;\n+            } else if self.await_in_async_block.is_none() {\n+                self.await_in_async_block = Some(ex.span);\n             }\n         }\n         walk_expr(self, ex);\n@@ -96,7 +96,7 @@ impl<'tcx> LateLintPass<'tcx> for UnusedAsync {\n                 cx,\n                 found_await: false,\n                 async_depth: 0,\n-                found_await_in_async_block: false,\n+                await_in_async_block: None,\n             };\n             walk_fn(&mut visitor, fn_kind, fn_decl, body.id(), def_id);\n             if !visitor.found_await {\n@@ -108,8 +108,12 @@ impl<'tcx> LateLintPass<'tcx> for UnusedAsync {\n                     |diag| {\n                         diag.help(\"consider removing the `async` from this function\");\n \n-                        if visitor.found_await_in_async_block {\n-                            diag.note(\"`await` used in an async block, which does not require the enclosing function to be `async`\");\n+                        if let Some(span) = visitor.await_in_async_block {\n+                            diag.span_note(\n+                                span,\n+                                \"`await` used in an async block, which does not require \\\n+                                the enclosing function to be `async`\",\n+                            );\n                         }\n                     },\n                 );"}, {"sha": "8ac2066a6b24dd62619491e7ee8ec6547935a005", "filename": "tests/ui/unused_async.stderr", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8ef6240afb00ec9a892cb41c36cde102b688343a/tests%2Fui%2Funused_async.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8ef6240afb00ec9a892cb41c36cde102b688343a/tests%2Fui%2Funused_async.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_async.stderr?ref=8ef6240afb00ec9a892cb41c36cde102b688343a", "patch": "@@ -9,7 +9,11 @@ LL | |     }\n    | |_____^\n    |\n    = help: consider removing the `async` from this function\n-   = note: `await` used in an async block, which does not require the enclosing function to be `async`\n+note: `await` used in an async block, which does not require the enclosing function to be `async`\n+  --> $DIR/unused_async.rs:13:23\n+   |\n+LL |             ready(()).await;\n+   |                       ^^^^^\n    = note: `-D clippy::unused-async` implied by `-D warnings`\n \n error: unused `async` for function with no await statements"}]}