{"sha": "88e5dd2530a48b046d35402807c4b3bb44775688", "node_id": "C_kwDOAAsO6NoAKDg4ZTVkZDI1MzBhNDhiMDQ2ZDM1NDAyODA3YzRiM2JiNDQ3NzU2ODg", "commit": {"author": {"name": "Rejyr", "email": "jerrylwang123@gmail.com", "date": "2022-11-23T20:52:03Z"}, "committer": {"name": "Rejyr", "email": "jerrylwang123@gmail.com", "date": "2023-01-09T23:57:02Z"}, "message": "refactor: cleanup", "tree": {"sha": "d1d51bed9e266a32fc251de45479edca73355be7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1d51bed9e266a32fc251de45479edca73355be7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88e5dd2530a48b046d35402807c4b3bb44775688", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88e5dd2530a48b046d35402807c4b3bb44775688", "html_url": "https://github.com/rust-lang/rust/commit/88e5dd2530a48b046d35402807c4b3bb44775688", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88e5dd2530a48b046d35402807c4b3bb44775688/comments", "author": {"login": "Rejyr", "id": 88239847, "node_id": "MDQ6VXNlcjg4MjM5ODQ3", "avatar_url": "https://avatars.githubusercontent.com/u/88239847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rejyr", "html_url": "https://github.com/Rejyr", "followers_url": "https://api.github.com/users/Rejyr/followers", "following_url": "https://api.github.com/users/Rejyr/following{/other_user}", "gists_url": "https://api.github.com/users/Rejyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rejyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rejyr/subscriptions", "organizations_url": "https://api.github.com/users/Rejyr/orgs", "repos_url": "https://api.github.com/users/Rejyr/repos", "events_url": "https://api.github.com/users/Rejyr/events{/privacy}", "received_events_url": "https://api.github.com/users/Rejyr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Rejyr", "id": 88239847, "node_id": "MDQ6VXNlcjg4MjM5ODQ3", "avatar_url": "https://avatars.githubusercontent.com/u/88239847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rejyr", "html_url": "https://github.com/Rejyr", "followers_url": "https://api.github.com/users/Rejyr/followers", "following_url": "https://api.github.com/users/Rejyr/following{/other_user}", "gists_url": "https://api.github.com/users/Rejyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rejyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rejyr/subscriptions", "organizations_url": "https://api.github.com/users/Rejyr/orgs", "repos_url": "https://api.github.com/users/Rejyr/repos", "events_url": "https://api.github.com/users/Rejyr/events{/privacy}", "received_events_url": "https://api.github.com/users/Rejyr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe09291036ca0d4c97d67f592442d09a1c45abd0", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe09291036ca0d4c97d67f592442d09a1c45abd0", "html_url": "https://github.com/rust-lang/rust/commit/fe09291036ca0d4c97d67f592442d09a1c45abd0"}], "stats": {"total": 52, "additions": 3, "deletions": 49}, "files": [{"sha": "3593f141df61ba783befdccf739ad5a95948a413", "filename": "compiler/rustc_lint/src/array_into_iter.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Farray_into_iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Farray_into_iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Farray_into_iter.rs?ref=88e5dd2530a48b046d35402807c4b3bb44775688", "patch": "@@ -1,5 +1,3 @@\n-#![deny(rustc::untranslatable_diagnostic)]\n-#![deny(rustc::diagnostic_outside_of_impl)]\n use crate::lints::{ArrayIntoIterDiag, ArrayIntoIterDiagSub};\n use crate::{LateContext, LateLintPass, LintContext};\n use rustc_hir as hir;"}, {"sha": "6f445426df70e7218c5b1a744a7ca34fdd73e66f", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=88e5dd2530a48b046d35402807c4b3bb44775688", "patch": "@@ -1,5 +1,3 @@\n-// #![deny(rustc::untranslatable_diagnostic)]\n-// #![deny(rustc::diagnostic_outside_of_impl)]\n //! Lints in the Rust compiler.\n //!\n //! This contains lints which can feasibly be implemented as their own\n@@ -2956,11 +2954,6 @@ impl<'tcx> LateLintPass<'tcx> for ClashingExternDeclarations {\n                         };\n \n                     // Finally, emit the diagnostic.\n-                    let mut expected_str = DiagnosticStyledString::new();\n-                    expected_str.push(existing_decl_ty.fn_sig(tcx).to_string(), false);\n-                    let mut found_str = DiagnosticStyledString::new();\n-                    found_str.push(this_decl_ty.fn_sig(tcx).to_string(), true);\n-\n                     let this = this_fi.ident.name;\n                     let orig = orig.get_name();\n                     let previous_decl_label = get_relevant_span(orig_fi);\n@@ -3119,6 +3112,7 @@ declare_lint! {\n declare_lint_pass!(NamedAsmLabels => [NAMED_ASM_LABELS]);\n \n impl<'tcx> LateLintPass<'tcx> for NamedAsmLabels {\n+    #[allow(rustc::diagnostic_outside_of_impl)]\n     fn check_expr(&mut self, cx: &LateContext<'tcx>, expr: &'tcx hir::Expr<'tcx>) {\n         if let hir::Expr {\n             kind: hir::ExprKind::InlineAsm(hir::InlineAsm { template_strs, .. }),"}, {"sha": "c9b9a62257148c51a8614717ade5d77b03cf30d1", "filename": "compiler/rustc_lint/src/context.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs?ref=88e5dd2530a48b046d35402807c4b3bb44775688", "patch": "@@ -13,8 +13,6 @@\n //! previous lint state is pushed onto a stack and the ast is then recursed\n //! upon. As the ast is traversed, this keeps track of the current lint level\n //! for all lint attributes.\n-#![deny(rustc::untranslatable_diagnostic)]\n-#![deny(rustc::diagnostic_outside_of_impl)]\n \n use self::TargetLint::*;\n "}, {"sha": "769c2f88ff3da94a3e0e485ff003dc74d3415c6e", "filename": "compiler/rustc_lint/src/early.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Fearly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Fearly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fearly.rs?ref=88e5dd2530a48b046d35402807c4b3bb44775688", "patch": "@@ -1,5 +1,3 @@\n-#![deny(rustc::untranslatable_diagnostic)]\n-#![deny(rustc::diagnostic_outside_of_impl)]\n //! Implementation of lint checking.\n //!\n //! The lint checking is mostly consolidated into one pass which runs"}, {"sha": "73bd4173270baf86c56f6aa3548368ab1d15e7a3", "filename": "compiler/rustc_lint/src/enum_intrinsics_non_enums.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Fenum_intrinsics_non_enums.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Fenum_intrinsics_non_enums.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fenum_intrinsics_non_enums.rs?ref=88e5dd2530a48b046d35402807c4b3bb44775688", "patch": "@@ -1,5 +1,3 @@\n-#![deny(rustc::untranslatable_diagnostic)]\n-#![deny(rustc::diagnostic_outside_of_impl)]\n use crate::{\n     context::LintContext,\n     lints::{EnumIntrinsicsMemDiscriminate, EnumIntrinsicsMemVariant},"}, {"sha": "f3ae26091863d964f7c9f827153d9f202f153cc7", "filename": "compiler/rustc_lint/src/errors.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Ferrors.rs?ref=88e5dd2530a48b046d35402807c4b3bb44775688", "patch": "@@ -1,5 +1,3 @@\n-#![deny(rustc::untranslatable_diagnostic)]\n-#![deny(rustc::diagnostic_outside_of_impl)]\n use rustc_errors::{\n     fluent, AddToDiagnostic, Diagnostic, ErrorGuaranteed, Handler, IntoDiagnostic,\n     SubdiagnosticMessage,"}, {"sha": "70c999811a52b297c9363298f75f389e8cff68b8", "filename": "compiler/rustc_lint/src/expect.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Fexpect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Fexpect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fexpect.rs?ref=88e5dd2530a48b046d35402807c4b3bb44775688", "patch": "@@ -1,5 +1,3 @@\n-#![deny(rustc::untranslatable_diagnostic)]\n-#![deny(rustc::diagnostic_outside_of_impl)]\n use crate::lints::{Expectation, ExpectationNote};\n use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::TyCtxt;"}, {"sha": "5219992ee94f0a76e4590bb0bebbe5508c029140", "filename": "compiler/rustc_lint/src/for_loops_over_fallibles.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Ffor_loops_over_fallibles.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Ffor_loops_over_fallibles.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Ffor_loops_over_fallibles.rs?ref=88e5dd2530a48b046d35402807c4b3bb44775688", "patch": "@@ -1,5 +1,3 @@\n-#![deny(rustc::untranslatable_diagnostic)]\n-#![deny(rustc::diagnostic_outside_of_impl)]\n use crate::{\n     lints::{\n         ForLoopsOverFalliblesDiag, ForLoopsOverFalliblesLoopSub, ForLoopsOverFalliblesQuestionMark,"}, {"sha": "5eb54cc0034279392c1eac3a4cdf8ad6b7d78b80", "filename": "compiler/rustc_lint/src/internal.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Finternal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Finternal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Finternal.rs?ref=88e5dd2530a48b046d35402807c4b3bb44775688", "patch": "@@ -1,8 +1,6 @@\n //! Some lints that are only useful in the compiler or crates that use compiler internals, such as\n //! Clippy.\n \n-#![deny(rustc::untranslatable_diagnostic)]\n-#![deny(rustc::diagnostic_outside_of_impl)]\n use crate::lints::{\n     BadOptAccessDiag, DefaultHashTypesDiag, DiagOutOfImpl, LintPassByHand, NonExistantDocKeyword,\n     QueryInstability, TyQualified, TykindDiag, TykindKind, UntranslatableDiag,"}, {"sha": "b83a9665fc0c60ef48e3fd1d0639bad6b9f41eaa", "filename": "compiler/rustc_lint/src/let_underscore.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Flet_underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Flet_underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flet_underscore.rs?ref=88e5dd2530a48b046d35402807c4b3bb44775688", "patch": "@@ -1,5 +1,3 @@\n-#![deny(rustc::untranslatable_diagnostic)]\n-#![deny(rustc::diagnostic_outside_of_impl)]\n use crate::{\n     lints::{NonBindingLet, NonBindingLetSub},\n     LateContext, LateLintPass, LintContext,"}, {"sha": "09dfb1022d857205b5699e6f9b46a2843d5efb29", "filename": "compiler/rustc_lint/src/levels.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Flevels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Flevels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flevels.rs?ref=88e5dd2530a48b046d35402807c4b3bb44775688", "patch": "@@ -1,5 +1,3 @@\n-#![deny(rustc::untranslatable_diagnostic)]\n-#![deny(rustc::diagnostic_outside_of_impl)]\n use crate::context::{CheckLintNameResult, LintStore};\n use crate::late::unerased_lint_store;\n use crate::lints::{"}, {"sha": "3d818154cb94ff48c1a7c33fd2a19d473b089588", "filename": "compiler/rustc_lint/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flib.rs?ref=88e5dd2530a48b046d35402807c4b3bb44775688", "patch": "@@ -38,8 +38,8 @@\n #![feature(never_type)]\n #![feature(rustc_attrs)]\n #![recursion_limit = \"256\"]\n-// #![deny(rustc::untranslatable_diagnostic)]\n-// #![deny(rustc::diagnostic_outside_of_impl)]\n+#![deny(rustc::untranslatable_diagnostic)]\n+#![deny(rustc::diagnostic_outside_of_impl)]\n \n #[macro_use]\n extern crate rustc_middle;"}, {"sha": "3045fc1a4761e47d2a1f2f339242338f9f5fb707", "filename": "compiler/rustc_lint/src/methods.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fmethods.rs?ref=88e5dd2530a48b046d35402807c4b3bb44775688", "patch": "@@ -1,5 +1,3 @@\n-#![deny(rustc::untranslatable_diagnostic)]\n-#![deny(rustc::diagnostic_outside_of_impl)]\n use crate::lints::CStringPtr;\n use crate::LateContext;\n use crate::LateLintPass;"}, {"sha": "f130a98185d611aeb243c676e8b428d1c1068a01", "filename": "compiler/rustc_lint/src/non_ascii_idents.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Fnon_ascii_idents.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Fnon_ascii_idents.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fnon_ascii_idents.rs?ref=88e5dd2530a48b046d35402807c4b3bb44775688", "patch": "@@ -1,5 +1,3 @@\n-#![deny(rustc::untranslatable_diagnostic)]\n-#![deny(rustc::diagnostic_outside_of_impl)]\n use crate::lints::{\n     ConfusableIdentifierPair, IdentifierNonAsciiChar, IdentifierUncommonCodepoints,\n     MixedScriptConfusables,"}, {"sha": "4a02c6cce47ed92de0385735b7e5e896ebac460a", "filename": "compiler/rustc_lint/src/non_fmt_panic.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Fnon_fmt_panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Fnon_fmt_panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fnon_fmt_panic.rs?ref=88e5dd2530a48b046d35402807c4b3bb44775688", "patch": "@@ -1,5 +1,3 @@\n-#![deny(rustc::untranslatable_diagnostic)]\n-#![deny(rustc::diagnostic_outside_of_impl)]\n use crate::lints::{NonFmtPanicBraces, NonFmtPanicUnused};\n use crate::{LateContext, LateLintPass, LintContext};\n use rustc_ast as ast;"}, {"sha": "74d234fabea0872467d98c5828b39e472ddc9e0f", "filename": "compiler/rustc_lint/src/nonstandard_style.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Fnonstandard_style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Fnonstandard_style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fnonstandard_style.rs?ref=88e5dd2530a48b046d35402807c4b3bb44775688", "patch": "@@ -1,5 +1,3 @@\n-#![deny(rustc::untranslatable_diagnostic)]\n-#![deny(rustc::diagnostic_outside_of_impl)]\n use crate::lints::{\n     NonCamelCaseType, NonCamelCaseTypeSub, NonSnakeCaseDiag, NonSnakeCaseDiagSub,\n     NonUpperCaseGlobal, NonUpperCaseGlobalSub,"}, {"sha": "d67a00619dd09eb1a5cb7fb0d3d8e0af542fd018", "filename": "compiler/rustc_lint/src/noop_method_call.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Fnoop_method_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Fnoop_method_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fnoop_method_call.rs?ref=88e5dd2530a48b046d35402807c4b3bb44775688", "patch": "@@ -1,5 +1,3 @@\n-#![deny(rustc::untranslatable_diagnostic)]\n-#![deny(rustc::diagnostic_outside_of_impl)]\n use crate::context::LintContext;\n use crate::lints::NoopMethodCallDiag;\n use crate::LateContext;"}, {"sha": "57482a9edba880761fd97b38a0b4dc567aba419d", "filename": "compiler/rustc_lint/src/pass_by_value.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Fpass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Fpass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fpass_by_value.rs?ref=88e5dd2530a48b046d35402807c4b3bb44775688", "patch": "@@ -1,5 +1,3 @@\n-#![deny(rustc::untranslatable_diagnostic)]\n-#![deny(rustc::diagnostic_outside_of_impl)]\n use crate::lints::PassByValueDiag;\n use crate::{LateContext, LateLintPass, LintContext};\n use rustc_hir as hir;"}, {"sha": "9a8b14b4907eaeeac69f112a5584b8b5b57d1530", "filename": "compiler/rustc_lint/src/redundant_semicolon.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Fredundant_semicolon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Fredundant_semicolon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fredundant_semicolon.rs?ref=88e5dd2530a48b046d35402807c4b3bb44775688", "patch": "@@ -1,5 +1,3 @@\n-#![deny(rustc::untranslatable_diagnostic)]\n-#![deny(rustc::diagnostic_outside_of_impl)]\n use crate::{lints::RedundantSemicolonsDiag, EarlyContext, EarlyLintPass, LintContext};\n use rustc_ast::{Block, StmtKind};\n use rustc_span::Span;"}, {"sha": "7ea1a138b7e60252e771b4ddffa896577a0c48b1", "filename": "compiler/rustc_lint/src/traits.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Ftraits.rs?ref=88e5dd2530a48b046d35402807c4b3bb44775688", "patch": "@@ -1,5 +1,3 @@\n-#![deny(rustc::untranslatable_diagnostic)]\n-#![deny(rustc::diagnostic_outside_of_impl)]\n use crate::lints::{DropGlue, DropTraitConstraintsDiag};\n use crate::LateContext;\n use crate::LateLintPass;"}, {"sha": "625258991a387c71cccb8bfdb5aa64d72008e03b", "filename": "compiler/rustc_lint/src/types.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Ftypes.rs?ref=88e5dd2530a48b046d35402807c4b3bb44775688", "patch": "@@ -1,5 +1,3 @@\n-#![deny(rustc::untranslatable_diagnostic)]\n-#![deny(rustc::diagnostic_outside_of_impl)]\n use crate::lints::{\n     AtomicOrderingFence, AtomicOrderingLoad, AtomicOrderingStore, ImproperCTypes,\n     InvalidAtomicOrderingDiag, OnlyCastu8ToChar, OverflowingBinHex, OverflowingBinHexSign,"}, {"sha": "ac2b32b44e6a1d42e16ab70e7f41872df229b829", "filename": "compiler/rustc_lint/src/unused.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88e5dd2530a48b046d35402807c4b3bb44775688/compiler%2Frustc_lint%2Fsrc%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Funused.rs?ref=88e5dd2530a48b046d35402807c4b3bb44775688", "patch": "@@ -1,5 +1,3 @@\n-#![deny(rustc::untranslatable_diagnostic)]\n-#![deny(rustc::diagnostic_outside_of_impl)]\n use crate::lints::{\n     PathStatementDrop, PathStatementDropSub, PathStatementNoEffect, UnusedAllocationDiag,\n     UnusedAllocationMutDiag, UnusedClosure, UnusedDef, UnusedDelim, UnusedDelimSuggestion,"}]}