{"sha": "1779ffa98f89ba98a9c404f31d559fa7d6214caa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3NzlmZmE5OGY4OWJhOThhOWM0MDRmMzFkNTU5ZmE3ZDYyMTRjYWE=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2017-01-06T01:49:28Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2017-01-06T02:53:55Z"}, "message": "Make members of {std,core}::{i128,u128} unstable\n\nAdding it in a stable form was an accident.\nIt thankfully only leaked to nightly.\n\nFixes #38860", "tree": {"sha": "5bbd602550a1523b63b6cfe7f6558002fbeaf58c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5bbd602550a1523b63b6cfe7f6558002fbeaf58c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1779ffa98f89ba98a9c404f31d559fa7d6214caa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1779ffa98f89ba98a9c404f31d559fa7d6214caa", "html_url": "https://github.com/rust-lang/rust/commit/1779ffa98f89ba98a9c404f31d559fa7d6214caa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1779ffa98f89ba98a9c404f31d559fa7d6214caa/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28f6d4a63786a7e63bc5d3b66b1754a02b1b564d", "url": "https://api.github.com/repos/rust-lang/rust/commits/28f6d4a63786a7e63bc5d3b66b1754a02b1b564d", "html_url": "https://github.com/rust-lang/rust/commit/28f6d4a63786a7e63bc5d3b66b1754a02b1b564d"}], "stats": {"total": 68, "additions": 44, "deletions": 24}, "files": [{"sha": "04354e2e33f960eda46172974b88606ea012fb74", "filename": "src/libcore/num/i128.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1779ffa98f89ba98a9c404f31d559fa7d6214caa/src%2Flibcore%2Fnum%2Fi128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1779ffa98f89ba98a9c404f31d559fa7d6214caa/src%2Flibcore%2Fnum%2Fi128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fi128.rs?ref=1779ffa98f89ba98a9c404f31d559fa7d6214caa", "patch": "@@ -14,4 +14,4 @@\n \n #![unstable(feature = \"i128\", issue=\"35118\")]\n \n-int_module! { i128 }\n+int_module! { i128, #[unstable(feature = \"i128\", issue=\"35118\")] }"}, {"sha": "04311d687ea92ad94e5f1a4bd9dcaa1f977e4fd1", "filename": "src/libcore/num/int_macros.rs", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/1779ffa98f89ba98a9c404f31d559fa7d6214caa/src%2Flibcore%2Fnum%2Fint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1779ffa98f89ba98a9c404f31d559fa7d6214caa/src%2Flibcore%2Fnum%2Fint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fint_macros.rs?ref=1779ffa98f89ba98a9c404f31d559fa7d6214caa", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2012-2017 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -10,13 +10,14 @@\n \n #![doc(hidden)]\n \n-macro_rules! int_module { ($T:ident) => (\n-\n-/// The smallest value that can be represented by this integer type.\n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub const MIN: $T = $T::min_value();\n-/// The largest value that can be represented by this integer type.\n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub const MAX: $T = $T::max_value();\n-\n-) }\n+macro_rules! int_module {\n+    ($T:ident) => (int_module!($T, #[stable(feature = \"rust1\", since = \"1.0.0\")]););\n+    ($T:ident, $($attr: tt)*) => (\n+        /// The smallest value that can be represented by this integer type.\n+        $($attr)*\n+        pub const MIN: $T = $T::min_value();\n+        /// The largest value that can be represented by this integer type.\n+        $($attr)*\n+        pub const MAX: $T = $T::max_value();\n+    )\n+}"}, {"sha": "987ac3e000732827772db9fd76609cea2c12b389", "filename": "src/libcore/num/u128.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1779ffa98f89ba98a9c404f31d559fa7d6214caa/src%2Flibcore%2Fnum%2Fu128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1779ffa98f89ba98a9c404f31d559fa7d6214caa/src%2Flibcore%2Fnum%2Fu128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fu128.rs?ref=1779ffa98f89ba98a9c404f31d559fa7d6214caa", "patch": "@@ -13,4 +13,4 @@\n //! *[See also the `u128` primitive type](../../std/primitive.u128.html).*\n \n #![unstable(feature = \"i128\", issue=\"35118\")]\n-uint_module! { u128 }\n+uint_module! { u128, #[unstable(feature = \"i128\", issue=\"35118\")] }"}, {"sha": "2e59b39278ab6a9716b57b6bb21d3eba105ced19", "filename": "src/libcore/num/uint_macros.rs", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/1779ffa98f89ba98a9c404f31d559fa7d6214caa/src%2Flibcore%2Fnum%2Fuint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1779ffa98f89ba98a9c404f31d559fa7d6214caa/src%2Flibcore%2Fnum%2Fuint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fuint_macros.rs?ref=1779ffa98f89ba98a9c404f31d559fa7d6214caa", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2012-2017 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -10,13 +10,14 @@\n \n #![doc(hidden)]\n \n-macro_rules! uint_module { ($T:ident) => (\n-\n-/// The smallest value that can be represented by this integer type.\n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub const MIN: $T = $T::min_value();\n-/// The largest value that can be represented by this integer type.\n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub const MAX: $T = $T::max_value();\n-\n-) }\n+macro_rules! uint_module {\n+    ($T:ident) => (uint_module!($T, #[stable(feature = \"rust1\", since = \"1.0.0\")]););\n+    ($T:ident, $($attr: tt)*) => (\n+        /// The smallest value that can be represented by this integer type.\n+        $($attr)*\n+        pub const MIN: $T = $T::min_value();\n+        /// The largest value that can be represented by this integer type.\n+        $($attr)*\n+        pub const MAX: $T = $T::max_value();\n+    )\n+}"}, {"sha": "cd933c0059945660771c224e4ee135442984b29f", "filename": "src/librustc_const_math/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1779ffa98f89ba98a9c404f31d559fa7d6214caa/src%2Flibrustc_const_math%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1779ffa98f89ba98a9c404f31d559fa7d6214caa/src%2Flibrustc_const_math%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_math%2Flib.rs?ref=1779ffa98f89ba98a9c404f31d559fa7d6214caa", "patch": "@@ -26,6 +26,7 @@\n #![feature(rustc_private)]\n #![feature(staged_api)]\n #![feature(const_fn)]\n+#![cfg_attr(not(stage0), feature(i128))]\n \n #[macro_use] extern crate log;\n #[macro_use] extern crate syntax;"}, {"sha": "b29ac50fd377f5a3af7765459dda5b03b9988f7d", "filename": "src/test/compile-fail/i128-feature-libs.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/1779ffa98f89ba98a9c404f31d559fa7d6214caa/src%2Ftest%2Fcompile-fail%2Fi128-feature-libs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1779ffa98f89ba98a9c404f31d559fa7d6214caa/src%2Ftest%2Fcompile-fail%2Fi128-feature-libs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fi128-feature-libs.rs?ref=1779ffa98f89ba98a9c404f31d559fa7d6214caa", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn testl() {\n+    ::std::u128::MAX; //~ ERROR use of unstable library feature 'i128'\n+}\n+\n+fn testl2() {\n+    ::std::i128::MAX; //~ ERROR use of unstable library feature 'i128'\n+}"}]}