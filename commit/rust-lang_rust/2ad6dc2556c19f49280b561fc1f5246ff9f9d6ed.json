{"sha": "2ad6dc2556c19f49280b561fc1f5246ff9f9d6ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhZDZkYzI1NTZjMTlmNDkyODBiNTYxZmMxZjUyNDZmZjlmOWQ2ZWQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-02-05T06:51:05Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-02-05T06:51:05Z"}, "message": "Auto merge of #31386 - tbu-:pr_cow_from_vec, r=alexcrichton\n\nFixes #31354.", "tree": {"sha": "784edc64890c58f7874972f0af2dcca4818b44ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/784edc64890c58f7874972f0af2dcca4818b44ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ad6dc2556c19f49280b561fc1f5246ff9f9d6ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ad6dc2556c19f49280b561fc1f5246ff9f9d6ed", "html_url": "https://github.com/rust-lang/rust/commit/2ad6dc2556c19f49280b561fc1f5246ff9f9d6ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ad6dc2556c19f49280b561fc1f5246ff9f9d6ed/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dcf8ef2723d106c3467a2ee17746aa5768c3cdc6", "url": "https://api.github.com/repos/rust-lang/rust/commits/dcf8ef2723d106c3467a2ee17746aa5768c3cdc6", "html_url": "https://github.com/rust-lang/rust/commit/dcf8ef2723d106c3467a2ee17746aa5768c3cdc6"}, {"sha": "b27b8f63bc51d9aba2a1fe88cf428243d4fedfa8", "url": "https://api.github.com/repos/rust-lang/rust/commits/b27b8f63bc51d9aba2a1fe88cf428243d4fedfa8", "html_url": "https://github.com/rust-lang/rust/commit/b27b8f63bc51d9aba2a1fe88cf428243d4fedfa8"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "805d9a9807a33172c7ed3b8c9cccb978598d70c1", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2ad6dc2556c19f49280b561fc1f5246ff9f9d6ed/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ad6dc2556c19f49280b561fc1f5246ff9f9d6ed/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=2ad6dc2556c19f49280b561fc1f5246ff9f9d6ed", "patch": "@@ -1505,6 +1505,20 @@ impl<'a> From<&'a str> for Vec<u8> {\n // Clone-on-write\n ////////////////////////////////////////////////////////////////////////////////\n \n+#[stable(feature = \"cow_from_vec\", since = \"1.7.0\")]\n+impl<'a, T: Clone> From<&'a [T]> for Cow<'a, [T]> {\n+    fn from(s: &'a [T]) -> Cow<'a, [T]> {\n+        Cow::Borrowed(s)\n+    }\n+}\n+\n+#[stable(feature = \"cow_from_vec\", since = \"1.7.0\")]\n+impl<'a, T: Clone> From<Vec<T>> for Cow<'a, [T]> {\n+    fn from(v: Vec<T>) -> Cow<'a, [T]> {\n+        Cow::Owned(v)\n+    }\n+}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a, T> FromIterator<T> for Cow<'a, [T]> where T: Clone {\n     fn from_iter<I: IntoIterator<Item = T>>(it: I) -> Cow<'a, [T]> {"}, {"sha": "25457043a9df45dd5a5274ae83e9c184b351a240", "filename": "src/libcollectionstest/str.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/2ad6dc2556c19f49280b561fc1f5246ff9f9d6ed/src%2Flibcollectionstest%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ad6dc2556c19f49280b561fc1f5246ff9f9d6ed/src%2Flibcollectionstest%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Fstr.rs?ref=2ad6dc2556c19f49280b561fc1f5246ff9f9d6ed", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use std::borrow::Cow;\n use std::cmp::Ordering::{Equal, Greater, Less};\n use std::str::from_utf8;\n \n@@ -1267,6 +1268,16 @@ fn test_box_slice_clone() {\n     assert_eq!(data, data2);\n }\n \n+#[test]\n+fn test_cow_from() {\n+    let borrowed = \"borrowed\";\n+    let owned = String::from(\"owned\");\n+    match (Cow::from(owned.clone()), Cow::from(borrowed)) {\n+        (Cow::Owned(o), Cow::Borrowed(b)) => assert!(o == owned && b == borrowed),\n+        _ => panic!(\"invalid `Cow::from`\"),\n+    }\n+}\n+\n mod pattern {\n     use std::str::pattern::Pattern;\n     use std::str::pattern::{Searcher, ReverseSearcher};"}, {"sha": "6a47f16c5ca7723d20316ba13f1e75287b7166e9", "filename": "src/libcollectionstest/vec.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/2ad6dc2556c19f49280b561fc1f5246ff9f9d6ed/src%2Flibcollectionstest%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ad6dc2556c19f49280b561fc1f5246ff9f9d6ed/src%2Flibcollectionstest%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Fvec.rs?ref=2ad6dc2556c19f49280b561fc1f5246ff9f9d6ed", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use std::borrow::Cow;\n use std::iter::{FromIterator, repeat};\n use std::mem::size_of;\n \n@@ -466,6 +467,16 @@ fn test_into_iter_count() {\n     assert_eq!(vec![1, 2, 3].into_iter().count(), 3);\n }\n \n+#[test]\n+fn test_cow_from() {\n+    let borrowed: &[_] = &[\"borrowed\", \"(slice)\"];\n+    let owned = vec![\"owned\", \"(vec)\"];\n+    match (Cow::from(owned.clone()), Cow::from(borrowed)) {\n+        (Cow::Owned(o), Cow::Borrowed(b)) => assert!(o == owned && b == borrowed),\n+        _ => panic!(\"invalid `Cow::from`\"),\n+    }\n+}\n+\n #[bench]\n fn bench_new(b: &mut Bencher) {\n     b.iter(|| {"}]}