{"sha": "21deb18bfd2d84c8230b906f455007957013766e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxZGViMThiZmQyZDg0YzgyMzBiOTA2ZjQ1NTAwNzk1NzAxMzc2NmU=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2015-11-10T21:22:57Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2015-11-10T22:15:16Z"}, "message": "[MIR trans] Translate statics\n\nFixes #29578", "tree": {"sha": "3764b40ac9d7f762706450612f6eef8eb3dce2bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3764b40ac9d7f762706450612f6eef8eb3dce2bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21deb18bfd2d84c8230b906f455007957013766e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21deb18bfd2d84c8230b906f455007957013766e", "html_url": "https://github.com/rust-lang/rust/commit/21deb18bfd2d84c8230b906f455007957013766e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21deb18bfd2d84c8230b906f455007957013766e/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05b66b8a1c74fe1182e594b330a4f5ab502eacc4", "url": "https://api.github.com/repos/rust-lang/rust/commits/05b66b8a1c74fe1182e594b330a4f5ab502eacc4", "html_url": "https://github.com/rust-lang/rust/commit/05b66b8a1c74fe1182e594b330a4f5ab502eacc4"}], "stats": {"total": 31, "additions": 16, "deletions": 15}, "files": [{"sha": "7dda864d1ed9c5b656ccabb0d7e97756c1273e7d", "filename": "src/librustc_trans/trans/common.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/21deb18bfd2d84c8230b906f455007957013766e/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21deb18bfd2d84c8230b906f455007957013766e/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs?ref=21deb18bfd2d84c8230b906f455007957013766e", "patch": "@@ -1214,3 +1214,13 @@ pub fn shift_mask_val<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n     }\n }\n \n+pub fn get_static_val<'a, 'tcx>(ccx: &CrateContext<'a, 'tcx>,\n+                            did: DefId,\n+                            ty: Ty<'tcx>)\n+                            -> ValueRef {\n+    if let Some(node_id) = ccx.tcx().map.as_local_node_id(did) {\n+        base::get_item_val(ccx, node_id)\n+    } else {\n+        base::trans_external_path(ccx, did, ty)\n+    }\n+}"}, {"sha": "b849888cf7cfbbe7488ef77c0fa58284c78a85aa", "filename": "src/librustc_trans/trans/consts.rs", "status": "modified", "additions": 2, "deletions": 14, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/21deb18bfd2d84c8230b906f455007957013766e/src%2Flibrustc_trans%2Ftrans%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21deb18bfd2d84c8230b906f455007957013766e/src%2Flibrustc_trans%2Ftrans%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fconsts.rs?ref=21deb18bfd2d84c8230b906f455007957013766e", "patch": "@@ -29,8 +29,8 @@ use middle::const_eval::eval_const_expr_partial;\n use middle::def_id::DefId;\n use trans::{adt, closure, debuginfo, expr, inline, machine};\n use trans::base::{self, push_ctxt};\n+use trans::common::{self, type_is_sized, ExprOrMethodCall, node_id_substs, C_nil, const_get_elt};\n use trans::common::{CrateContext, C_integral, C_floating, C_bool, C_str_slice, C_bytes, val_ty};\n-use trans::common::{type_is_sized, ExprOrMethodCall, node_id_substs, C_nil, const_get_elt};\n use trans::common::{C_struct, C_undef, const_to_opt_int, const_to_opt_uint, VariantInfo, C_uint};\n use trans::common::{type_is_fat_ptr, Field, C_vector, C_array, C_null, ExprId, MethodCallKey};\n use trans::declare;\n@@ -795,7 +795,7 @@ fn const_expr_unadjusted<'a, 'tcx>(cx: &CrateContext<'a, 'tcx>,\n             }\n             let opt_def = cx.tcx().def_map.borrow().get(&cur.id).map(|d| d.full_def());\n             if let Some(def::DefStatic(def_id, _)) = opt_def {\n-                get_static_val(cx, def_id, ety)\n+                common::get_static_val(cx, def_id, ety)\n             } else {\n                 // If this isn't the address of a static, then keep going through\n                 // normal constant evaluation.\n@@ -1075,15 +1075,3 @@ pub fn trans_static(ccx: &CrateContext,\n         Ok(g)\n     }\n }\n-\n-\n-fn get_static_val<'a, 'tcx>(ccx: &CrateContext<'a, 'tcx>,\n-                            did: DefId,\n-                            ty: Ty<'tcx>)\n-                            -> ValueRef {\n-    if let Some(node_id) = ccx.tcx().map.as_local_node_id(did) {\n-        base::get_item_val(ccx, node_id)\n-    } else {\n-        base::trans_external_path(ccx, did, ty)\n-    }\n-}"}, {"sha": "98c1566997616e34a36f8f06f7ae50cea352314d", "filename": "src/librustc_trans/trans/mir/lvalue.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/21deb18bfd2d84c8230b906f455007957013766e/src%2Flibrustc_trans%2Ftrans%2Fmir%2Flvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21deb18bfd2d84c8230b906f455007957013766e/src%2Flibrustc_trans%2Ftrans%2Fmir%2Flvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmir%2Flvalue.rs?ref=21deb18bfd2d84c8230b906f455007957013766e", "patch": "@@ -65,7 +65,10 @@ impl<'bcx, 'tcx> MirContext<'bcx, 'tcx> {\n                     tcx.sess.bug(&format!(\"using operand temp {:?} as lvalue\", lvalue)),\n             },\n             mir::Lvalue::Arg(index) => self.args[index as usize],\n-            mir::Lvalue::Static(_def_id) => unimplemented!(),\n+            mir::Lvalue::Static(def_id) => {\n+                let const_ty = self.mir.lvalue_ty(tcx, lvalue);\n+                LvalueRef::new(common::get_static_val(ccx, def_id, const_ty.to_ty(tcx)), const_ty)\n+            },\n             mir::Lvalue::ReturnPointer => {\n                 let return_ty = bcx.monomorphize(&self.mir.return_ty);\n                 let llval = fcx.get_ret_slot(bcx, return_ty, \"return\");"}]}