{"sha": "1f5cb9e50e2ccaa9bed2c8f186f933f7d3f4ad7c", "node_id": "C_kwDOAAsO6NoAKDFmNWNiOWU1MGUyY2NhYTliZWQyYzhmMTg2ZjkzM2Y3ZDNmNGFkN2M", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-12-12T15:57:31Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-12-13T10:08:46Z"}, "message": "Use a label instead of a note for the drop site to create denser diagnostics", "tree": {"sha": "f0fdaaf4aa4be8b4e66feefddf785ad0f999dee8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f0fdaaf4aa4be8b4e66feefddf785ad0f999dee8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f5cb9e50e2ccaa9bed2c8f186f933f7d3f4ad7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f5cb9e50e2ccaa9bed2c8f186f933f7d3f4ad7c", "html_url": "https://github.com/rust-lang/rust/commit/1f5cb9e50e2ccaa9bed2c8f186f933f7d3f4ad7c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f5cb9e50e2ccaa9bed2c8f186f933f7d3f4ad7c/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6984085088d365395690ffd148ee70d0c48b8d72", "url": "https://api.github.com/repos/rust-lang/rust/commits/6984085088d365395690ffd148ee70d0c48b8d72", "html_url": "https://github.com/rust-lang/rust/commit/6984085088d365395690ffd148ee70d0c48b8d72"}], "stats": {"total": 61, "additions": 16, "deletions": 45}, "files": [{"sha": "12f9851196c0f352c8fa24a5926a72d9222c6ad6", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1f5cb9e50e2ccaa9bed2c8f186f933f7d3f4ad7c/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f5cb9e50e2ccaa9bed2c8f186f933f7d3f4ad7c/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=1f5cb9e50e2ccaa9bed2c8f186f933f7d3f4ad7c", "patch": "@@ -2212,17 +2212,11 @@ impl<'tcx> TypeErrCtxtExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n                     interior_span,\n                     format!(\"has type `{}` which {}\", target_ty, trait_explanation),\n                 );\n-                // If available, use the scope span to annotate the drop location.\n-                let mut scope_note = None;\n                 if let Some(scope_span) = scope_span {\n                     let scope_span = source_map.end_point(scope_span);\n \n                     let msg = format!(\"{} is later dropped here\", snippet);\n-                    if source_map.is_multiline(yield_span.between(scope_span)) {\n-                        span.push_span_label(scope_span, msg);\n-                    } else {\n-                        scope_note = Some((scope_span, msg));\n-                    }\n+                    span.push_span_label(scope_span, msg);\n                 }\n                 err.span_note(\n                     span,\n@@ -2231,9 +2225,6 @@ impl<'tcx> TypeErrCtxtExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n                         future_or_generator, trait_explanation, an_await_or_yield\n                     ),\n                 );\n-                if let Some((span, msg)) = scope_note {\n-                    err.span_note(span, &msg);\n-                }\n             };\n         match interior_or_upvar_span {\n             GeneratorInteriorOrUpvar::Interior(interior_span, interior_extra_info) => {"}, {"sha": "f0f5245a3b42ba5d395058ed9bad1037146056b0", "filename": "src/test/ui/async-await/async-await-let-else.drop-tracking.stderr", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1f5cb9e50e2ccaa9bed2c8f186f933f7d3f4ad7c/src%2Ftest%2Fui%2Fasync-await%2Fasync-await-let-else.drop-tracking.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f5cb9e50e2ccaa9bed2c8f186f933f7d3f4ad7c/src%2Ftest%2Fui%2Fasync-await%2Fasync-await-let-else.drop-tracking.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fasync-await-let-else.drop-tracking.stderr?ref=1f5cb9e50e2ccaa9bed2c8f186f933f7d3f4ad7c", "patch": "@@ -68,14 +68,10 @@ note: future is not `Send` as this value is used across an await\n   --> $DIR/async-await-let-else.rs:33:28\n    |\n LL |         (Rc::new(()), bar().await);\n-   |          -----------       ^^^^^^ await occurs here, with `Rc::new(())` maybe used later\n-   |          |\n+   |          -----------       ^^^^^^ - `Rc::new(())` is later dropped here\n+   |          |                 |\n+   |          |                 await occurs here, with `Rc::new(())` maybe used later\n    |          has type `Rc<()>` which is not `Send`\n-note: `Rc::new(())` is later dropped here\n-  --> $DIR/async-await-let-else.rs:33:35\n-   |\n-LL |         (Rc::new(()), bar().await);\n-   |                                   ^\n note: required by a bound in `is_send`\n   --> $DIR/async-await-let-else.rs:19:15\n    |"}, {"sha": "d3c5e80a30df443ee5cf66c942c445ba95cec701", "filename": "src/test/ui/async-await/async-await-let-else.no-drop-tracking.stderr", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1f5cb9e50e2ccaa9bed2c8f186f933f7d3f4ad7c/src%2Ftest%2Fui%2Fasync-await%2Fasync-await-let-else.no-drop-tracking.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f5cb9e50e2ccaa9bed2c8f186f933f7d3f4ad7c/src%2Ftest%2Fui%2Fasync-await%2Fasync-await-let-else.no-drop-tracking.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fasync-await-let-else.no-drop-tracking.stderr?ref=1f5cb9e50e2ccaa9bed2c8f186f933f7d3f4ad7c", "patch": "@@ -53,14 +53,10 @@ note: future is not `Send` as this value is used across an await\n   --> $DIR/async-await-let-else.rs:33:28\n    |\n LL |         (Rc::new(()), bar().await);\n-   |          -----------       ^^^^^^ await occurs here, with `Rc::new(())` maybe used later\n-   |          |\n+   |          -----------       ^^^^^^ - `Rc::new(())` is later dropped here\n+   |          |                 |\n+   |          |                 await occurs here, with `Rc::new(())` maybe used later\n    |          has type `Rc<()>` which is not `Send`\n-note: `Rc::new(())` is later dropped here\n-  --> $DIR/async-await-let-else.rs:33:35\n-   |\n-LL |         (Rc::new(()), bar().await);\n-   |                                   ^\n note: required by a bound in `is_send`\n   --> $DIR/async-await-let-else.rs:19:15\n    |"}, {"sha": "8036d82daa4a33f51f3dff008efa3c58b55c50bb", "filename": "src/test/ui/async-await/issue-70935-complex-spans.no_drop_tracking.stderr", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1f5cb9e50e2ccaa9bed2c8f186f933f7d3f4ad7c/src%2Ftest%2Fui%2Fasync-await%2Fissue-70935-complex-spans.no_drop_tracking.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f5cb9e50e2ccaa9bed2c8f186f933f7d3f4ad7c/src%2Ftest%2Fui%2Fasync-await%2Fissue-70935-complex-spans.no_drop_tracking.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissue-70935-complex-spans.no_drop_tracking.stderr?ref=1f5cb9e50e2ccaa9bed2c8f186f933f7d3f4ad7c", "patch": "@@ -12,14 +12,10 @@ LL |           baz(|| async{\n    |  _____________-\n LL | |             foo(tx.clone());\n LL | |         }).await;\n-   | |         - ^^^^^^ await occurs here, with the value maybe used later\n-   | |_________|\n+   | |         - ^^^^^^- the value is later dropped here\n+   | |         | |\n+   | |_________| await occurs here, with the value maybe used later\n    |           has type `[closure@$DIR/issue-70935-complex-spans.rs:17:13: 17:15]` which is not `Send`\n-note: the value is later dropped here\n-  --> $DIR/issue-70935-complex-spans.rs:19:17\n-   |\n-LL |         }).await;\n-   |                 ^\n \n error: aborting due to previous error\n "}, {"sha": "1033fa6cc8b344c474a9c79b6d74fdaa9eb903e9", "filename": "src/test/ui/async-await/issues/issue-65436-raw-ptr-not-send.no_drop_tracking.stderr", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1f5cb9e50e2ccaa9bed2c8f186f933f7d3f4ad7c/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-65436-raw-ptr-not-send.no_drop_tracking.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f5cb9e50e2ccaa9bed2c8f186f933f7d3f4ad7c/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-65436-raw-ptr-not-send.no_drop_tracking.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-65436-raw-ptr-not-send.no_drop_tracking.stderr?ref=1f5cb9e50e2ccaa9bed2c8f186f933f7d3f4ad7c", "patch": "@@ -13,14 +13,10 @@ note: future is not `Send` as this value is used across an await\n   --> $DIR/issue-65436-raw-ptr-not-send.rs:18:35\n    |\n LL |         bar(Foo(std::ptr::null())).await;\n-   |                 ----------------  ^^^^^^ await occurs here, with `std::ptr::null()` maybe used later\n-   |                 |\n+   |                 ----------------  ^^^^^^- `std::ptr::null()` is later dropped here\n+   |                 |                 |\n+   |                 |                 await occurs here, with `std::ptr::null()` maybe used later\n    |                 has type `*const u8` which is not `Send`\n-note: `std::ptr::null()` is later dropped here\n-  --> $DIR/issue-65436-raw-ptr-not-send.rs:18:41\n-   |\n-LL |         bar(Foo(std::ptr::null())).await;\n-   |                                         ^\n help: consider moving this into a `let` binding to create a shorter lived borrow\n   --> $DIR/issue-65436-raw-ptr-not-send.rs:18:13\n    |"}, {"sha": "2ce68a782918cf064c449afedab10f6815a2f3e2", "filename": "src/test/ui/async-await/issues/issue-67893.stderr", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1f5cb9e50e2ccaa9bed2c8f186f933f7d3f4ad7c/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-67893.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f5cb9e50e2ccaa9bed2c8f186f933f7d3f4ad7c/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-67893.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-67893.stderr?ref=1f5cb9e50e2ccaa9bed2c8f186f933f7d3f4ad7c", "patch": "@@ -9,14 +9,10 @@ note: future is not `Send` as this value is used across an await\n   --> $DIR/auxiliary/issue_67893.rs:9:26\n    |\n LL |     f(*x.lock().unwrap()).await;\n-   |        ----------------- ^^^^^^ await occurs here, with `x.lock().unwrap()` maybe used later\n-   |        |\n+   |        ----------------- ^^^^^^- `x.lock().unwrap()` is later dropped here\n+   |        |                 |\n+   |        |                 await occurs here, with `x.lock().unwrap()` maybe used later\n    |        has type `MutexGuard<'_, ()>` which is not `Send`\n-note: `x.lock().unwrap()` is later dropped here\n-  --> $DIR/auxiliary/issue_67893.rs:9:32\n-   |\n-LL |     f(*x.lock().unwrap()).await;\n-   |                                ^\n note: required by a bound in `g`\n   --> $DIR/issue-67893.rs:6:14\n    |"}]}