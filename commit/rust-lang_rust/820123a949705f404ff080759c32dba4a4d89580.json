{"sha": "820123a949705f404ff080759c32dba4a4d89580", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyMDEyM2E5NDk3MDVmNDA0ZmYwODA3NTljMzJkYmE0YTRkODk1ODA=", "commit": {"author": {"name": "Ian Jackson", "email": "ijackson@chiark.greenend.org.uk", "date": "2021-04-20T19:04:31Z"}, "committer": {"name": "Ian Jackson", "email": "ijackson@chiark.greenend.org.uk", "date": "2021-05-07T10:17:44Z"}, "message": "panic/fork: Command: Do not unwind after fork() in child\n\nUnwinding after fork() in the child is UB on some platforms, because\non those (including musl) malloc can be UB in the child of a\nmultithreaded program, and unwinding must box for the payload.\n\nEven if it's safe, unwinding past fork() in the child causes whatever\ntraps the unwind to return twice.  This is very strange and clearly\nnot desirable.  With the default behaviour of the thread library, this\ncan even result in a panic in the child being transformed into zero\nexit status (ie, success) as seen in the parent!\n\nFixes #79740.\n\nSigned-off-by: Ian Jackson <ijackson@chiark.greenend.org.uk>", "tree": {"sha": "1419277ad2564452e8322b3ffae12fc28f3aefbd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1419277ad2564452e8322b3ffae12fc28f3aefbd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/820123a949705f404ff080759c32dba4a4d89580", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/820123a949705f404ff080759c32dba4a4d89580", "html_url": "https://github.com/rust-lang/rust/commit/820123a949705f404ff080759c32dba4a4d89580", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/820123a949705f404ff080759c32dba4a4d89580/comments", "author": {"login": "ijackson", "id": 2090772, "node_id": "MDQ6VXNlcjIwOTA3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2090772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijackson", "html_url": "https://github.com/ijackson", "followers_url": "https://api.github.com/users/ijackson/followers", "following_url": "https://api.github.com/users/ijackson/following{/other_user}", "gists_url": "https://api.github.com/users/ijackson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijackson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijackson/subscriptions", "organizations_url": "https://api.github.com/users/ijackson/orgs", "repos_url": "https://api.github.com/users/ijackson/repos", "events_url": "https://api.github.com/users/ijackson/events{/privacy}", "received_events_url": "https://api.github.com/users/ijackson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ijackson", "id": 2090772, "node_id": "MDQ6VXNlcjIwOTA3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2090772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijackson", "html_url": "https://github.com/ijackson", "followers_url": "https://api.github.com/users/ijackson/followers", "following_url": "https://api.github.com/users/ijackson/following{/other_user}", "gists_url": "https://api.github.com/users/ijackson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijackson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijackson/subscriptions", "organizations_url": "https://api.github.com/users/ijackson/orgs", "repos_url": "https://api.github.com/users/ijackson/repos", "events_url": "https://api.github.com/users/ijackson/events{/privacy}", "received_events_url": "https://api.github.com/users/ijackson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3cba120ba453b5371e53766ec816f016d004ed91", "url": "https://api.github.com/repos/rust-lang/rust/commits/3cba120ba453b5371e53766ec816f016d004ed91", "html_url": "https://github.com/rust-lang/rust/commit/3cba120ba453b5371e53766ec816f016d004ed91"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "08b500b9c825a32d810c7d708c0ffae59e79130f", "filename": "library/std/src/sys/unix/process/process_unix.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/820123a949705f404ff080759c32dba4a4d89580/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/820123a949705f404ff080759c32dba4a4d89580/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs?ref=820123a949705f404ff080759c32dba4a4d89580", "patch": "@@ -54,6 +54,7 @@ impl Command {\n         let (env_lock, pid) = unsafe { (sys::os::env_read_lock(), cvt(libc::fork())?) };\n \n         if pid == 0 {\n+            crate::panic::always_abort();\n             mem::forget(env_lock);\n             drop(input);\n             let Err(err) = unsafe { self.do_exec(theirs, envp.as_ref()) };"}]}