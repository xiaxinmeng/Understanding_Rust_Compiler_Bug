{"sha": "9d6c0feef237d0e6155d6d38e81cd4fbfe743b65", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkNmMwZmVlZjIzN2QwZTYxNTVkNmQzOGU4MWNkNGZiZmU3NDNiNjU=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-08-30T08:54:24Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-08-30T08:54:41Z"}, "message": "Rustup (fixes #2002)", "tree": {"sha": "37e3a54f8e8375bf8a120d99c8ea3bdebf08dee1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37e3a54f8e8375bf8a120d99c8ea3bdebf08dee1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d6c0feef237d0e6155d6d38e81cd4fbfe743b65", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAlmmfVgACgkQpp+NIls6\n19lz8Q//bjX5UAL5K1ACtwhx08SphawFuXlu/CPmeI+AZvmXmCpUvMXAWt7Q5kWx\nG8/1u4QIyxANAk1MCPL/eZ7bLlBrYHacDs873hmelwoGRaG9s0Qb+JbZ7hYGr8N0\n+ruMxwHNvwrRvHGH6xfchhxsImuMOgR1CYaHqrq4Sgd1Mm/xfhgMajjnVp+fOmgE\n2GX/lqZxnAPb00Oz0H6QpbCTaz1hJogE3v9P/Ik9hcJLxg5plzOUaL4UtIJYvwe7\nQS8ZXZEaz9nlUv0HBBUcLXKtZszMbpAOQ4so504pRCbpmDJVHhs6+ITWlHbYn05S\nuMejPBrr5bLjVDtSh5vsHhT8gNTJHyClskZqA8f83xeC52nRrpv8iR9QMY5nz4u6\nIfbKObcjqpv9SJVhJ/KjVyur9Ey8qmGTRrYbCSX4Hxe9PkpT773wkbf49jqY3F4L\nyWCFx6E9WbDXpAtbPa5YnlUFkcLRVLRH6L05O13D5GpjuIKq0+fWDU8YArfhz6V/\nNQYYAp8CBuAcjDMiNZGRlWforWNQ7Bvf+hF4cNyEp19PxhPMXdPOr2xDa33JelwS\nieCDe6jEkoGBVGlogBhg0bsQB8WmX+qIVXYlM+RT51ETSW/DVARDufriGoWpl0eQ\n8WxxOAHPAhDtkAwiQ4nAv0KQACd11IGpKfuAdHiAVp5BpkybFhE=\n=04Ix\n-----END PGP SIGNATURE-----", "payload": "tree 37e3a54f8e8375bf8a120d99c8ea3bdebf08dee1\nparent c99b67c619c8a4cf02e4afd8561276a09b2a14d1\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1504083264 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1504083281 +0200\n\nRustup (fixes #2002)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d6c0feef237d0e6155d6d38e81cd4fbfe743b65", "html_url": "https://github.com/rust-lang/rust/commit/9d6c0feef237d0e6155d6d38e81cd4fbfe743b65", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d6c0feef237d0e6155d6d38e81cd4fbfe743b65/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c99b67c619c8a4cf02e4afd8561276a09b2a14d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/c99b67c619c8a4cf02e4afd8561276a09b2a14d1", "html_url": "https://github.com/rust-lang/rust/commit/c99b67c619c8a4cf02e4afd8561276a09b2a14d1"}], "stats": {"total": 59, "additions": 40, "deletions": 19}, "files": [{"sha": "0ca049007a64148779c97a6cece59803963ad828", "filename": "CHANGELOG.md", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9d6c0feef237d0e6155d6d38e81cd4fbfe743b65/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/9d6c0feef237d0e6155d6d38e81cd4fbfe743b65/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=9d6c0feef237d0e6155d6d38e81cd4fbfe743b65", "patch": "@@ -1,6 +1,9 @@\n # Change Log\n All notable changes to this project will be documented in this file.\n \n+## 0.0.155\n+* Update to *rustc 1.21.0-nightly (c11f689d2 2017-08-29)*\n+* New lint: [`infinite_iter`], [`maybe_infinite_iter`], [`cast_lossless`]\n \n ## 0.0.154\n * Update to *rustc 1.21.0-nightly (2c0558f63 2017-08-24)*"}, {"sha": "6ecfa3dfe5004bdd5e067a76d38366b12009f1da", "filename": "Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9d6c0feef237d0e6155d6d38e81cd4fbfe743b65/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/9d6c0feef237d0e6155d6d38e81cd4fbfe743b65/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=9d6c0feef237d0e6155d6d38e81cd4fbfe743b65", "patch": "@@ -1,6 +1,6 @@\n [package]\n name = \"clippy\"\n-version = \"0.0.154\"\n+version = \"0.0.155\"\n authors = [\n \t\"Manish Goregaokar <manishsmail@gmail.com>\",\n \t\"Andre Bogus <bogusandre@gmail.com>\",\n@@ -31,7 +31,7 @@ path = \"src/main.rs\"\n \n [dependencies]\n # begin automatic update\n-clippy_lints = { version = \"0.0.154\", path = \"clippy_lints\" }\n+clippy_lints = { version = \"0.0.155\", path = \"clippy_lints\" }\n # end automatic update\n cargo_metadata = \"0.2\"\n "}, {"sha": "7aae50a47456f3b6e7ffd875b608b6b62e94a208", "filename": "clippy_lints/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d6c0feef237d0e6155d6d38e81cd4fbfe743b65/clippy_lints%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/9d6c0feef237d0e6155d6d38e81cd4fbfe743b65/clippy_lints%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2FCargo.toml?ref=9d6c0feef237d0e6155d6d38e81cd4fbfe743b65", "patch": "@@ -1,7 +1,7 @@\n [package]\n name = \"clippy_lints\"\n # begin automatic update\n-version = \"0.0.154\"\n+version = \"0.0.155\"\n # end automatic update\n authors = [\n \t\"Manish Goregaokar <manishsmail@gmail.com>\","}, {"sha": "82a3eb00ab7f8f47a21e4ac40598f4641496cb55", "filename": "clippy_lints/src/block_in_if_condition.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d6c0feef237d0e6155d6d38e81cd4fbfe743b65/clippy_lints%2Fsrc%2Fblock_in_if_condition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d6c0feef237d0e6155d6d38e81cd4fbfe743b65/clippy_lints%2Fsrc%2Fblock_in_if_condition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fblock_in_if_condition.rs?ref=9d6c0feef237d0e6155d6d38e81cd4fbfe743b65", "patch": "@@ -56,7 +56,7 @@ struct ExVisitor<'a, 'tcx: 'a> {\n \n impl<'a, 'tcx: 'a> Visitor<'tcx> for ExVisitor<'a, 'tcx> {\n     fn visit_expr(&mut self, expr: &'tcx Expr) {\n-        if let ExprClosure(_, _, eid, _) = expr.node {\n+        if let ExprClosure(_, _, eid, _, _) = expr.node {\n             let body = self.cx.tcx.hir.body(eid);\n             let ex = &body.value;\n             if matches!(ex.node, ExprBlock(_)) {"}, {"sha": "a3a53b6dd47cdce9b4ac96a62286c51e2ba73a2e", "filename": "clippy_lints/src/bytecount.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d6c0feef237d0e6155d6d38e81cd4fbfe743b65/clippy_lints%2Fsrc%2Fbytecount.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d6c0feef237d0e6155d6d38e81cd4fbfe743b65/clippy_lints%2Fsrc%2Fbytecount.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbytecount.rs?ref=9d6c0feef237d0e6155d6d38e81cd4fbfe743b65", "patch": "@@ -43,7 +43,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for ByteCount {\n             let ExprMethodCall(ref filter, _, ref filter_args) = count_args[0].node,\n             filter.name == \"filter\",\n             filter_args.len() == 2,\n-            let ExprClosure(_, _, body_id, _) = filter_args[1].node,\n+            let ExprClosure(_, _, body_id, _, _) = filter_args[1].node,\n         ], {\n             let body = cx.tcx.hir.body(body_id);\n             if_let_chain!(["}, {"sha": "edfa5e0fb611c33110d843b58d92adf3850c09ea", "filename": "clippy_lints/src/cyclomatic_complexity.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d6c0feef237d0e6155d6d38e81cd4fbfe743b65/clippy_lints%2Fsrc%2Fcyclomatic_complexity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d6c0feef237d0e6155d6d38e81cd4fbfe743b65/clippy_lints%2Fsrc%2Fcyclomatic_complexity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcyclomatic_complexity.rs?ref=9d6c0feef237d0e6155d6d38e81cd4fbfe743b65", "patch": "@@ -171,7 +171,7 @@ impl<'a, 'tcx> Visitor<'tcx> for CCHelper<'a, 'tcx> {\n                     _ => (),\n                 }\n             },\n-            ExprClosure(..) => (),\n+            ExprClosure(.., _) => (),\n             ExprBinary(op, _, _) => {\n                 walk_expr(self, e);\n                 match op.node {"}, {"sha": "42524da7ffc40134763191928d776bf1be6eda50", "filename": "clippy_lints/src/eta_reduction.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d6c0feef237d0e6155d6d38e81cd4fbfe743b65/clippy_lints%2Fsrc%2Feta_reduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d6c0feef237d0e6155d6d38e81cd4fbfe743b65/clippy_lints%2Fsrc%2Feta_reduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feta_reduction.rs?ref=9d6c0feef237d0e6155d6d38e81cd4fbfe743b65", "patch": "@@ -49,7 +49,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for EtaPass {\n }\n \n fn check_closure(cx: &LateContext, expr: &Expr) {\n-    if let ExprClosure(_, ref decl, eid, _) = expr.node {\n+    if let ExprClosure(_, ref decl, eid, _, _) = expr.node {\n         let body = cx.tcx.hir.body(eid);\n         let ex = &body.value;\n         if let ExprCall(ref caller, ref args) = ex.node {"}, {"sha": "db952cd5d988fbd17f4a9d5fe236ae79e6c1c17a", "filename": "clippy_lints/src/eval_order_dependence.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9d6c0feef237d0e6155d6d38e81cd4fbfe743b65/clippy_lints%2Fsrc%2Feval_order_dependence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d6c0feef237d0e6155d6d38e81cd4fbfe743b65/clippy_lints%2Fsrc%2Feval_order_dependence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feval_order_dependence.rs?ref=9d6c0feef237d0e6155d6d38e81cd4fbfe743b65", "patch": "@@ -104,7 +104,7 @@ struct DivergenceVisitor<'a, 'tcx: 'a> {\n impl<'a, 'tcx> DivergenceVisitor<'a, 'tcx> {\n     fn maybe_walk_expr(&mut self, e: &'tcx Expr) {\n         match e.node {\n-            ExprClosure(..) => {},\n+            ExprClosure(.., _) => {},\n             ExprMatch(ref e, ref arms, _) => {\n                 self.visit_expr(e);\n                 for arm in arms {\n@@ -239,7 +239,7 @@ fn check_expr<'a, 'tcx>(vis: &mut ReadVisitor<'a, 'tcx>, expr: &'tcx Expr) -> St\n                 walk_expr(vis, expr);\n             }\n         },\n-        ExprClosure(_, _, _, _) => {\n+        ExprClosure(_, _, _, _, _) => {\n             // Either\n             //\n             // * `var` is defined in the closure body, in which case we've\n@@ -323,7 +323,7 @@ impl<'a, 'tcx> Visitor<'tcx> for ReadVisitor<'a, 'tcx> {\n             // We're about to descend a closure. Since we don't know when (or\n             // if) the closure will be evaluated, any reads in it might not\n             // occur here (or ever). Like above, bail to avoid false positives.\n-            ExprClosure(_, _, _, _) |\n+            ExprClosure(_, _, _, _, _) |\n \n             // We want to avoid a false positive when a variable name occurs\n             // only to have its address taken, so we stop here. Technically,"}, {"sha": "53f74c7afd63a28c44b68eb15fe0b2645e05c7dd", "filename": "clippy_lints/src/infinite_iter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d6c0feef237d0e6155d6d38e81cd4fbfe743b65/clippy_lints%2Fsrc%2Finfinite_iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d6c0feef237d0e6155d6d38e81cd4fbfe743b65/clippy_lints%2Fsrc%2Finfinite_iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finfinite_iter.rs?ref=9d6c0feef237d0e6155d6d38e81cd4fbfe743b65", "patch": "@@ -148,7 +148,7 @@ fn is_infinite(cx: &LateContext, expr: &Expr) -> Finiteness {\n                 }\n             }\n             if method.name == \"flat_map\" && args.len() == 2 {\n-                if let ExprClosure(_, _, body_id, _) = args[1].node {\n+                if let ExprClosure(_, _, body_id, _, _) = args[1].node {\n                     let body = cx.tcx.hir.body(body_id);\n                     return is_infinite(cx, &body.value);\n                 }"}, {"sha": "f0e19a3b5777e967cef8def06f89b4835c084b38", "filename": "clippy_lints/src/map_clone.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d6c0feef237d0e6155d6d38e81cd4fbfe743b65/clippy_lints%2Fsrc%2Fmap_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d6c0feef237d0e6155d6d38e81cd4fbfe743b65/clippy_lints%2Fsrc%2Fmap_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmap_clone.rs?ref=9d6c0feef237d0e6155d6d38e81cd4fbfe743b65", "patch": "@@ -31,7 +31,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n         if let ExprMethodCall(ref method, _, ref args) = expr.node {\n             if method.name == \"map\" && args.len() == 2 {\n                 match args[1].node {\n-                    ExprClosure(_, ref decl, closure_eid, _) => {\n+                    ExprClosure(_, ref decl, closure_eid, _, _) => {\n                         let body = cx.tcx.hir.body(closure_eid);\n                         let closure_expr = remove_blocks(&body.value);\n                         let ty = cx.tables.pat_ty(&body.arguments[0].pat);"}, {"sha": "971309adb33070fdd1d732ecf07a3eef3c2c1760", "filename": "clippy_lints/src/no_effect.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d6c0feef237d0e6155d6d38e81cd4fbfe743b65/clippy_lints%2Fsrc%2Fno_effect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d6c0feef237d0e6155d6d38e81cd4fbfe743b65/clippy_lints%2Fsrc%2Fno_effect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fno_effect.rs?ref=9d6c0feef237d0e6155d6d38e81cd4fbfe743b65", "patch": "@@ -46,7 +46,7 @@ fn has_no_effect(cx: &LateContext, expr: &Expr) -> bool {\n     }\n     match expr.node {\n         Expr_::ExprLit(..) |\n-        Expr_::ExprClosure(..) |\n+        Expr_::ExprClosure(.., _) |\n         Expr_::ExprPath(..) => true,\n         Expr_::ExprIndex(ref a, ref b) |\n         Expr_::ExprBinary(_, ref a, ref b) => has_no_effect(cx, a) && has_no_effect(cx, b),"}, {"sha": "dfac7366553c49ce7fd0e17bb11b05f3541dd4db", "filename": "clippy_lints/src/utils/author.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9d6c0feef237d0e6155d6d38e81cd4fbfe743b65/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d6c0feef237d0e6155d6d38e81cd4fbfe743b65/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fauthor.rs?ref=9d6c0feef237d0e6155d6d38e81cd4fbfe743b65", "patch": "@@ -296,10 +296,16 @@ impl<'tcx> Visitor<'tcx> for PrintVisitor {\n                 println!(\"Match(ref expr, ref arms, ref desugaring) = {},\", current);\n                 println!(\"    // unimplemented: `ExprMatch` is not further destructured at the moment\");\n             },\n-            Expr_::ExprClosure(ref _capture_clause, ref _func, _, _) => {\n-                println!(\"Closure(ref capture_clause, ref func, _, _) = {},\", current);\n+            Expr_::ExprClosure(ref _capture_clause, ref _func, _, _, _) => {\n+                println!(\"Closure(ref capture_clause, ref func, _, _, _) = {},\", current);\n                 println!(\"    // unimplemented: `ExprClosure` is not further destructured at the moment\");\n             },\n+            Expr_::ExprYield(ref sub) => {\n+                let sub_pat = self.next(\"sub\");\n+                println!(\"Yield(ref sub) = {},\", current);\n+                self.current = sub_pat;\n+                self.visit_expr(sub);\n+            },\n             Expr_::ExprBlock(ref block) => {\n                 let block_pat = self.next(\"block\");\n                 println!(\"Block(ref {}) = {},\", block_pat, current);"}, {"sha": "2a4439c4608b32dc62ae2edda0a95ceb5667f7a2", "filename": "clippy_lints/src/utils/hir_utils.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/9d6c0feef237d0e6155d6d38e81cd4fbfe743b65/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d6c0feef237d0e6155d6d38e81cd4fbfe743b65/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs?ref=9d6c0feef237d0e6155d6d38e81cd4fbfe743b65", "patch": "@@ -321,6 +321,11 @@ impl<'a, 'tcx: 'a> SpanlessHash<'a, 'tcx> {\n                     self.hash_name(&i.node.name);\n                 }\n             },\n+            ExprYield(ref e) => {\n+                let c: fn(_) -> _ = ExprYield;\n+                c.hash(&mut self.s);\n+                self.hash_expr(e);\n+            },\n             ExprAssign(ref l, ref r) => {\n                 let c: fn(_, _) -> _ = ExprAssign;\n                 c.hash(&mut self.s);\n@@ -373,8 +378,8 @@ impl<'a, 'tcx: 'a> SpanlessHash<'a, 'tcx> {\n                 self.hash_expr(e);\n                 // TODO: _ty\n             },\n-            ExprClosure(cap, _, eid, _) => {\n-                let c: fn(_, _, _, _) -> _ = ExprClosure;\n+            ExprClosure(cap, _, eid, _, _) => {\n+                let c: fn(_, _, _, _, _) -> _ = ExprClosure;\n                 c.hash(&mut self.s);\n                 cap.hash(&mut self.s);\n                 self.hash_expr(&self.cx.tcx.hir.body(eid).value);"}, {"sha": "081b7ac277a01554f55a0d83ba8ec376475cde53", "filename": "clippy_lints/src/utils/inspector.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9d6c0feef237d0e6155d6d38e81cd4fbfe743b65/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d6c0feef237d0e6155d6d38e81cd4fbfe743b65/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finspector.rs?ref=9d6c0feef237d0e6155d6d38e81cd4fbfe743b65", "patch": "@@ -245,10 +245,14 @@ fn print_expr(cx: &LateContext, expr: &hir::Expr, indent: usize) {\n             print_expr(cx, cond, indent + 1);\n             println!(\"{}source: {:?}\", ind, source);\n         },\n-        hir::ExprClosure(ref clause, _, _, _) => {\n+        hir::ExprClosure(ref clause, _, _, _, _) => {\n             println!(\"{}Closure\", ind);\n             println!(\"{}clause: {:?}\", ind, clause);\n         },\n+        hir::ExprYield(ref sub) => {\n+            println!(\"{}Yield\", ind);\n+            print_expr(cx, sub, indent + 1);\n+        }\n         hir::ExprBlock(_) => {\n             println!(\"{}Block\", ind);\n         },"}, {"sha": "9b14dd125ba8016c5c862a49eec4eb457801ef9a", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9d6c0feef237d0e6155d6d38e81cd4fbfe743b65/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d6c0feef237d0e6155d6d38e81cd4fbfe743b65/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=9d6c0feef237d0e6155d6d38e81cd4fbfe743b65", "patch": "@@ -104,6 +104,7 @@ pub fn differing_macro_contexts(lhs: Span, rhs: Span) -> bool {\n pub fn in_constant(cx: &LateContext, id: NodeId) -> bool {\n     let parent_id = cx.tcx.hir.get_parent(id);\n     match MirSource::from_node(cx.tcx, parent_id) {\n+        MirSource::GeneratorDrop(_) |\n         MirSource::Fn(_) => false,\n         MirSource::Const(_) |\n         MirSource::Static(..) |"}, {"sha": "1c2e07960cbdf072d079c53472c7bbd6c24f4039", "filename": "clippy_lints/src/utils/sugg.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9d6c0feef237d0e6155d6d38e81cd4fbfe743b65/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d6c0feef237d0e6155d6d38e81cd4fbfe743b65/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fsugg.rs?ref=9d6c0feef237d0e6155d6d38e81cd4fbfe743b65", "patch": "@@ -49,11 +49,12 @@ impl<'a> Sugg<'a> {\n             match expr.node {\n                 hir::ExprAddrOf(..) |\n                 hir::ExprBox(..) |\n-                hir::ExprClosure(..) |\n+                hir::ExprClosure(.., _) |\n                 hir::ExprIf(..) |\n                 hir::ExprUnary(..) |\n                 hir::ExprMatch(..) => Sugg::MaybeParen(snippet),\n                 hir::ExprAgain(..) |\n+                hir::ExprYield(..) |\n                 hir::ExprArray(..) |\n                 hir::ExprBlock(..) |\n                 hir::ExprBreak(..) |\n@@ -106,6 +107,7 @@ impl<'a> Sugg<'a> {\n             ast::ExprKind::Call(..) |\n             ast::ExprKind::Catch(..) |\n             ast::ExprKind::Continue(..) |\n+            ast::ExprKind::Yield(..) |\n             ast::ExprKind::Field(..) |\n             ast::ExprKind::ForLoop(..) |\n             ast::ExprKind::Index(..) |"}]}