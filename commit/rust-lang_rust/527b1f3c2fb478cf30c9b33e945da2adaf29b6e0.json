{"sha": "527b1f3c2fb478cf30c9b33e945da2adaf29b6e0", "node_id": "C_kwDOAAsO6NoAKDUyN2IxZjNjMmZiNDc4Y2YzMGM5YjMzZTk0NWRhMmFkYWYyOWI2ZTA", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-03-09T03:59:46Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-03-09T03:59:46Z"}, "message": "initialize unclosed_delims field", "tree": {"sha": "c0da9be2aca822b3c4f5475b1b2c40d0d6300cda", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0da9be2aca822b3c4f5475b1b2c40d0d6300cda"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/527b1f3c2fb478cf30c9b33e945da2adaf29b6e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/527b1f3c2fb478cf30c9b33e945da2adaf29b6e0", "html_url": "https://github.com/rust-lang/rust/commit/527b1f3c2fb478cf30c9b33e945da2adaf29b6e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/527b1f3c2fb478cf30c9b33e945da2adaf29b6e0/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "529fd2da894ff290668d6c1524909ba218d5822b", "url": "https://api.github.com/repos/rust-lang/rust/commits/529fd2da894ff290668d6c1524909ba218d5822b", "html_url": "https://github.com/rust-lang/rust/commit/529fd2da894ff290668d6c1524909ba218d5822b"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "750d7cce0c0e734a65bc21d82e026358f008219a", "filename": "compiler/rustc_parse/src/parser/path.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/527b1f3c2fb478cf30c9b33e945da2adaf29b6e0/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/527b1f3c2fb478cf30c9b33e945da2adaf29b6e0/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpath.rs?ref=527b1f3c2fb478cf30c9b33e945da2adaf29b6e0", "patch": "@@ -626,6 +626,7 @@ impl<'a> Parser<'a> {\n             // Parse type argument.\n             let is_const_fn = self.look_ahead(1, |t| t.kind == token::OpenDelim(token::Paren));\n             let mut snapshot = self.clone();\n+            snapshot.unclosed_delims = vec![];\n             match self.parse_ty() {\n                 Ok(ty) => GenericArg::Type(ty),\n                 Err(err) => {"}]}