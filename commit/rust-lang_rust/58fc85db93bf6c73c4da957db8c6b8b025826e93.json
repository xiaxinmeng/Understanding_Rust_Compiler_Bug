{"sha": "58fc85db93bf6c73c4da957db8c6b8b025826e93", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4ZmM4NWRiOTNiZjZjNzNjNGRhOTU3ZGI4YzZiOGIwMjU4MjZlOTM=", "commit": {"author": {"name": "Keegan McAllister", "email": "kmcallister@mozilla.com", "date": "2014-04-11T20:44:54Z"}, "committer": {"name": "Keegan McAllister", "email": "kmcallister@mozilla.com", "date": "2014-04-11T22:20:18Z"}, "message": "Add tests for Char::encode_utf{8,16}", "tree": {"sha": "3d4dd65f6ac8f09abd3809d08c81f4ea75a42b30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d4dd65f6ac8f09abd3809d08c81f4ea75a42b30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58fc85db93bf6c73c4da957db8c6b8b025826e93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58fc85db93bf6c73c4da957db8c6b8b025826e93", "html_url": "https://github.com/rust-lang/rust/commit/58fc85db93bf6c73c4da957db8c6b8b025826e93", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58fc85db93bf6c73c4da957db8c6b8b025826e93/comments", "author": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e011939b1af554d2a29947feb66f01e27a2a1524", "url": "https://api.github.com/repos/rust-lang/rust/commits/e011939b1af554d2a29947feb66f01e27a2a1524", "html_url": "https://github.com/rust-lang/rust/commit/e011939b1af554d2a29947feb66f01e27a2a1524"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "67c046986d3c17cd5c7ac11ee12b6d5398d2db58", "filename": "src/libstd/char.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/58fc85db93bf6c73c4da957db8c6b8b025826e93/src%2Flibstd%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58fc85db93bf6c73c4da957db8c6b8b025826e93/src%2Flibstd%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fchar.rs?ref=58fc85db93bf6c73c4da957db8c6b8b025826e93", "patch": "@@ -32,6 +32,7 @@ use unicode::{derived_property, property, general_category, decompose, conversio\n \n #[cfg(test)] use str::Str;\n #[cfg(test)] use strbuf::StrBuf;\n+#[cfg(test)] use slice::ImmutableVector;\n \n #[cfg(not(test))] use cmp::{Eq, Ord};\n #[cfg(not(test))] use default::Default;\n@@ -814,3 +815,31 @@ fn test_to_str() {\n     let s = 't'.to_str();\n     assert_eq!(s, ~\"t\");\n }\n+\n+#[test]\n+fn test_encode_utf8() {\n+    fn check(input: char, expect: &[u8]) {\n+        let mut buf = [0u8, ..4];\n+        let n = input.encode_utf8(buf /* as mut slice! */);\n+        assert_eq!(buf.slice_to(n), expect);\n+    }\n+\n+    check('x', [0x78]);\n+    check('\\u00e9', [0xc3, 0xa9]);\n+    check('\\ua66e', [0xea, 0x99, 0xae]);\n+    check('\\U0001f4a9', [0xf0, 0x9f, 0x92, 0xa9]);\n+}\n+\n+#[test]\n+fn test_encode_utf16() {\n+    fn check(input: char, expect: &[u16]) {\n+        let mut buf = [0u16, ..2];\n+        let n = input.encode_utf16(buf /* as mut slice! */);\n+        assert_eq!(buf.slice_to(n), expect);\n+    }\n+\n+    check('x', [0x0078]);\n+    check('\\u00e9', [0x00e9]);\n+    check('\\ua66e', [0xa66e]);\n+    check('\\U0001f4a9', [0xd83d, 0xdca9]);\n+}"}]}