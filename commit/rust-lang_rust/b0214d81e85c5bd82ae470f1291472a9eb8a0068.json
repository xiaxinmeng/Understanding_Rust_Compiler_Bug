{"sha": "b0214d81e85c5bd82ae470f1291472a9eb8a0068", "node_id": "C_kwDOAAsO6NoAKGIwMjE0ZDgxZTg1YzViZDgyYWU0NzBmMTI5MTQ3MmE5ZWI4YTAwNjg", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-09T13:34:51Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-09T13:34:51Z"}, "message": "Auto merge of #13843 - Overpeek:master, r=Veykril\n\nfix: generate async delegate methods\n\nFixes a bug where the generated async method doesn't await the result before returning it.\n\nThis is an example of what the output looked like:\n```rust\nstruct Age<T>(T);\nimpl<T> Age<T> {\n    pub(crate) async fn age<J, 'a>(&'a mut self, ty: T, arg: J) -> T {\n        self.0\n    }\n}\nstruct Person<T> {\n    age: Age<T>,\n}\nimpl<T> Person<T> {\n    pub(crate) async fn age<J, 'a>(&'a mut self, ty: T, arg: J) -> T {\n        self.age.age(ty, arg) // .await is missing\n    }\n}\n```\nThe `.await` is missing, so the return type is `impl Future<Output = T>` instead of `T`", "tree": {"sha": "0dff31da57853a4dd2795f1a7a917fb9551369ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0dff31da57853a4dd2795f1a7a917fb9551369ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b0214d81e85c5bd82ae470f1291472a9eb8a0068", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b0214d81e85c5bd82ae470f1291472a9eb8a0068", "html_url": "https://github.com/rust-lang/rust/commit/b0214d81e85c5bd82ae470f1291472a9eb8a0068", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b0214d81e85c5bd82ae470f1291472a9eb8a0068/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae659125a509967f09665b96d06f6ce6bf1ddd1b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae659125a509967f09665b96d06f6ce6bf1ddd1b", "html_url": "https://github.com/rust-lang/rust/commit/ae659125a509967f09665b96d06f6ce6bf1ddd1b"}, {"sha": "b8f5115b847252c4cbf9b02a83e5c0e788763e1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8f5115b847252c4cbf9b02a83e5c0e788763e1e", "html_url": "https://github.com/rust-lang/rust/commit/b8f5115b847252c4cbf9b02a83e5c0e788763e1e"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "c8d0493d097c589e4fa85ec209841fc32ba388b1", "filename": "crates/ide-assists/src/handlers/generate_delegate_methods.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b0214d81e85c5bd82ae470f1291472a9eb8a0068/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fgenerate_delegate_methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0214d81e85c5bd82ae470f1291472a9eb8a0068/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fgenerate_delegate_methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fgenerate_delegate_methods.rs?ref=b0214d81e85c5bd82ae470f1291472a9eb8a0068", "patch": "@@ -104,9 +104,11 @@ pub(crate) fn generate_delegate_methods(acc: &mut Assists, ctx: &AssistContext<'\n                     make::name_ref(&method_name.to_string()),\n                     arg_list,\n                 );\n-                let body = make::block_expr([], Some(tail_expr));\n                 let ret_type = method_source.ret_type();\n                 let is_async = method_source.async_token().is_some();\n+                let tail_expr_finished =\n+                    if is_async { make::expr_await(tail_expr) } else { tail_expr };\n+                let body = make::block_expr([], Some(tail_expr_finished));\n                 let f = make::fn_(vis, name, type_params, params, body, ret_type, is_async)\n                     .indent(ast::edit::IndentLevel(1))\n                     .clone_for_update();\n@@ -306,7 +308,7 @@ struct Person<T> {\n \n impl<T> Person<T> {\n     $0pub(crate) async fn age<J, 'a>(&'a mut self, ty: T, arg: J) -> T {\n-        self.age.age(ty, arg)\n+        self.age.age(ty, arg).await\n     }\n }\"#,\n         );"}]}