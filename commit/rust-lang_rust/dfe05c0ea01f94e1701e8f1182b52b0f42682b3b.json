{"sha": "dfe05c0ea01f94e1701e8f1182b52b0f42682b3b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmZTA1YzBlYTAxZjk0ZTE3MDFlOGYxMTgyYjUyYjBmNDI2ODJiM2I=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-06-30T20:20:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-30T20:20:58Z"}, "message": "Rollup merge of #86728 - FabianWolff:issue-86721, r=LeSeulArtichaut\n\nCheck node kind to avoid ICE in `check_expr_return()`\n\nThis PR fixes #86721. The ICE described there is apparently due to a misunderstanding:\nhttps://github.com/rust-lang/rust/blob/e98897e5dc9898707bf4331c43b2e76ab7e282fe/compiler/rustc_typeck/src/check/expr.rs#L684-L685\n\nIntuitively, one would think that calling `expect_item()` after `get_parent_item()` should succeed, but as it turns out, `get_parent_item()` can also return foreign, trait, and impl items as well as crates, whereas `expect_item()` specifically expects a `Node::Item`. I have therefore added an extra check to prevent this ICE.", "tree": {"sha": "9889c8379160e791f485c57188bbc72636a945e2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9889c8379160e791f485c57188bbc72636a945e2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dfe05c0ea01f94e1701e8f1182b52b0f42682b3b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg3NIrCRBK7hj4Ov3rIwAAtD4IABMyep57UJOmrc6RsOgUNIxx\nelC98nUwUGxEhLZBtvUCPb//kK9jK8UY9GxrukHd3D5Q9LVNlQ5XuBzjiybE5WhZ\nUTIkBnh9Di5QY92lz3TUwY4aTlUNX+j9sOlEIt2bx9VIrUC2q5OaF/iXM9RAFeFt\nZ0Apl3ntZ70L+IVEfvcE6kg2MeSQZtA74KwkaYisf8EOXx1HnHY8EAmIXLx9y1ZS\nLrl3AesG7q1L3u2yGgUSuH3SUlhVrEb9gggDmfGTMBsYqDbFrwao0XRCOHIg9MCA\nJi75b0eruN0K68FKWdCjIYcRqW1MxtazZkKatKVjcbFEfTOImpYwx3e1HbegSCE=\n=Hlg8\n-----END PGP SIGNATURE-----\n", "payload": "tree 9889c8379160e791f485c57188bbc72636a945e2\nparent 56ddef8ab855ebdd57febde8356e890cdc03f118\nparent 0c267830d5afdeea2058f0b97e69cf1afbb3d3da\nauthor Yuki Okushi <jtitor@2k36.org> 1625084458 +0900\ncommitter GitHub <noreply@github.com> 1625084458 +0900\n\nRollup merge of #86728 - FabianWolff:issue-86721, r=LeSeulArtichaut\n\nCheck node kind to avoid ICE in `check_expr_return()`\n\nThis PR fixes #86721. The ICE described there is apparently due to a misunderstanding:\nhttps://github.com/rust-lang/rust/blob/e98897e5dc9898707bf4331c43b2e76ab7e282fe/compiler/rustc_typeck/src/check/expr.rs#L684-L685\n\nIntuitively, one would think that calling `expect_item()` after `get_parent_item()` should succeed, but as it turns out, `get_parent_item()` can also return foreign, trait, and impl items as well as crates, whereas `expect_item()` specifically expects a `Node::Item`. I have therefore added an extra check to prevent this ICE.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dfe05c0ea01f94e1701e8f1182b52b0f42682b3b", "html_url": "https://github.com/rust-lang/rust/commit/dfe05c0ea01f94e1701e8f1182b52b0f42682b3b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dfe05c0ea01f94e1701e8f1182b52b0f42682b3b/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56ddef8ab855ebdd57febde8356e890cdc03f118", "url": "https://api.github.com/repos/rust-lang/rust/commits/56ddef8ab855ebdd57febde8356e890cdc03f118", "html_url": "https://github.com/rust-lang/rust/commit/56ddef8ab855ebdd57febde8356e890cdc03f118"}, {"sha": "0c267830d5afdeea2058f0b97e69cf1afbb3d3da", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c267830d5afdeea2058f0b97e69cf1afbb3d3da", "html_url": "https://github.com/rust-lang/rust/commit/0c267830d5afdeea2058f0b97e69cf1afbb3d3da"}], "stats": {"total": 102, "additions": 97, "deletions": 5}, "files": [{"sha": "cfe1d1c6871f092ab4a048c829b758f859f034b4", "filename": "compiler/rustc_typeck/src/check/expr.rs", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/dfe05c0ea01f94e1701e8f1182b52b0f42682b3b/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfe05c0ea01f94e1701e8f1182b52b0f42682b3b/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs?ref=dfe05c0ea01f94e1701e8f1182b52b0f42682b3b", "patch": "@@ -682,9 +682,23 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             };\n \n             let encl_item_id = self.tcx.hir().get_parent_item(expr.hir_id);\n-            let encl_item = self.tcx.hir().expect_item(encl_item_id);\n \n-            if let hir::ItemKind::Fn(..) = encl_item.kind {\n+            if let Some(hir::Node::Item(hir::Item {\n+                kind: hir::ItemKind::Fn(..),\n+                span: encl_fn_span,\n+                ..\n+            }))\n+            | Some(hir::Node::TraitItem(hir::TraitItem {\n+                kind: hir::TraitItemKind::Fn(_, hir::TraitFn::Provided(_)),\n+                span: encl_fn_span,\n+                ..\n+            }))\n+            | Some(hir::Node::ImplItem(hir::ImplItem {\n+                kind: hir::ImplItemKind::Fn(..),\n+                span: encl_fn_span,\n+                ..\n+            })) = self.tcx.hir().find(encl_item_id)\n+            {\n                 // We are inside a function body, so reporting \"return statement\n                 // outside of function body\" needs an explanation.\n \n@@ -698,7 +712,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 let encl_body = self.tcx.hir().body(encl_body_id);\n \n                 err.encl_body_span = Some(encl_body.value.span);\n-                err.encl_fn_span = Some(encl_item.span);\n+                err.encl_fn_span = Some(*encl_fn_span);\n             }\n \n             self.tcx.sess.emit_err(err);"}, {"sha": "4f076fa0693839cafcfbd01ecc7285ea9cc26ba0", "filename": "src/test/ui/return/issue-86188-return-not-in-fn-body.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/dfe05c0ea01f94e1701e8f1182b52b0f42682b3b/src%2Ftest%2Fui%2Freturn%2Fissue-86188-return-not-in-fn-body.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfe05c0ea01f94e1701e8f1182b52b0f42682b3b/src%2Ftest%2Fui%2Freturn%2Fissue-86188-return-not-in-fn-body.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freturn%2Fissue-86188-return-not-in-fn-body.rs?ref=dfe05c0ea01f94e1701e8f1182b52b0f42682b3b", "patch": "@@ -12,6 +12,25 @@ const C: [(); 42] = {\n     }]\n };\n \n+struct S {}\n+trait Tr {\n+    fn foo();\n+    fn bar() {\n+    //~^ NOTE: ...not the enclosing function body\n+        [(); return];\n+        //~^ ERROR: return statement outside of function body [E0572]\n+        //~| NOTE: the return is part of this body...\n+    }\n+}\n+impl Tr for S {\n+    fn foo() {\n+    //~^ NOTE: ...not the enclosing function body\n+        [(); return];\n+        //~^ ERROR: return statement outside of function body [E0572]\n+        //~| NOTE: the return is part of this body...\n+    }\n+}\n+\n fn main() {\n //~^ NOTE: ...not the enclosing function body\n     [(); return || {"}, {"sha": "d7eeb3a729099c5ca5d5c6628e93aefd1f4492d2", "filename": "src/test/ui/return/issue-86188-return-not-in-fn-body.stderr", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/dfe05c0ea01f94e1701e8f1182b52b0f42682b3b/src%2Ftest%2Fui%2Freturn%2Fissue-86188-return-not-in-fn-body.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dfe05c0ea01f94e1701e8f1182b52b0f42682b3b/src%2Ftest%2Fui%2Freturn%2Fissue-86188-return-not-in-fn-body.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freturn%2Fissue-86188-return-not-in-fn-body.stderr?ref=dfe05c0ea01f94e1701e8f1182b52b0f42682b3b", "patch": "@@ -9,7 +9,31 @@ LL | |     }]\n    | |_____^\n \n error[E0572]: return statement outside of function body\n-  --> $DIR/issue-86188-return-not-in-fn-body.rs:17:10\n+  --> $DIR/issue-86188-return-not-in-fn-body.rs:20:14\n+   |\n+LL | /     fn bar() {\n+LL | |\n+LL | |         [(); return];\n+   | |              ^^^^^^ the return is part of this body...\n+LL | |\n+LL | |\n+LL | |     }\n+   | |_____- ...not the enclosing function body\n+\n+error[E0572]: return statement outside of function body\n+  --> $DIR/issue-86188-return-not-in-fn-body.rs:28:14\n+   |\n+LL | /     fn foo() {\n+LL | |\n+LL | |         [(); return];\n+   | |              ^^^^^^ the return is part of this body...\n+LL | |\n+LL | |\n+LL | |     }\n+   | |_____- ...not the enclosing function body\n+\n+error[E0572]: return statement outside of function body\n+  --> $DIR/issue-86188-return-not-in-fn-body.rs:36:10\n    |\n LL |  / fn main() {\n LL |  |\n@@ -23,6 +47,6 @@ LL | ||     }];\n LL |  | }\n    |  |_- ...not the enclosing function body\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0572`."}, {"sha": "b1111fcf1484c9ed77ae6bed29a9dae69e008c88", "filename": "src/test/ui/typeck/issue-86721-return-expr-ice.rev1.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/dfe05c0ea01f94e1701e8f1182b52b0f42682b3b/src%2Ftest%2Fui%2Ftypeck%2Fissue-86721-return-expr-ice.rev1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dfe05c0ea01f94e1701e8f1182b52b0f42682b3b/src%2Ftest%2Fui%2Ftypeck%2Fissue-86721-return-expr-ice.rev1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-86721-return-expr-ice.rev1.stderr?ref=dfe05c0ea01f94e1701e8f1182b52b0f42682b3b", "patch": "@@ -0,0 +1,9 @@\n+error[E0572]: return statement outside of function body\n+  --> $DIR/issue-86721-return-expr-ice.rs:9:22\n+   |\n+LL |     const U: usize = return;\n+   |                      ^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0572`."}, {"sha": "f489ae2002a1376fd5d680d5c32971a5c4b5e9da", "filename": "src/test/ui/typeck/issue-86721-return-expr-ice.rev2.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/dfe05c0ea01f94e1701e8f1182b52b0f42682b3b/src%2Ftest%2Fui%2Ftypeck%2Fissue-86721-return-expr-ice.rev2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dfe05c0ea01f94e1701e8f1182b52b0f42682b3b/src%2Ftest%2Fui%2Ftypeck%2Fissue-86721-return-expr-ice.rev2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-86721-return-expr-ice.rev2.stderr?ref=dfe05c0ea01f94e1701e8f1182b52b0f42682b3b", "patch": "@@ -0,0 +1,9 @@\n+error[E0572]: return statement outside of function body\n+  --> $DIR/issue-86721-return-expr-ice.rs:15:20\n+   |\n+LL |     fn foo(a: [(); return]);\n+   |                    ^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0572`."}, {"sha": "cd7135f18b11241c7d9db761c948eee10b25e97f", "filename": "src/test/ui/typeck/issue-86721-return-expr-ice.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/dfe05c0ea01f94e1701e8f1182b52b0f42682b3b/src%2Ftest%2Fui%2Ftypeck%2Fissue-86721-return-expr-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfe05c0ea01f94e1701e8f1182b52b0f42682b3b/src%2Ftest%2Fui%2Ftypeck%2Fissue-86721-return-expr-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-86721-return-expr-ice.rs?ref=dfe05c0ea01f94e1701e8f1182b52b0f42682b3b", "patch": "@@ -0,0 +1,17 @@\n+// Regression test for the ICE described in #86721.\n+\n+// revisions: rev1 rev2\n+#![cfg_attr(any(), rev1, rev2)]\n+#![crate_type=\"lib\"]\n+\n+#[cfg(any(rev1))]\n+trait T {\n+    const U: usize = return;\n+    //[rev1]~^ ERROR: return statement outside of function body [E0572]\n+}\n+\n+#[cfg(any(rev2))]\n+trait T2 {\n+    fn foo(a: [(); return]);\n+    //[rev2]~^ ERROR: return statement outside of function body [E0572]\n+}"}]}