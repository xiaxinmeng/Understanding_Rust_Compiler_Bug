{"sha": "cfbb60bf6d83fbcfcca1f2919131aa39fb997b53", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmYmI2MGJmNmQ4M2ZiY2ZjY2ExZjI5MTkxMzFhYTM5ZmI5OTdiNTM=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-08-12T18:55:42Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-08-15T17:39:27Z"}, "message": "resolve: Do not \"normalize away\" trait/enum modules prematurely\n\nThe previous approach was brittle - what would happen if `ParentScope` wasn't created by `invoc_parent_scope`?\nThat's exactly the case for various uses of `ParentScope` in diagnostics and in built-in attribute validation.", "tree": {"sha": "c7d3183678416be345c6f8ef000b7af68dfcdc0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7d3183678416be345c6f8ef000b7af68dfcdc0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cfbb60bf6d83fbcfcca1f2919131aa39fb997b53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cfbb60bf6d83fbcfcca1f2919131aa39fb997b53", "html_url": "https://github.com/rust-lang/rust/commit/cfbb60bf6d83fbcfcca1f2919131aa39fb997b53", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cfbb60bf6d83fbcfcca1f2919131aa39fb997b53/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23b82c32298002f80724a244c2483fd1e8ec1d54", "url": "https://api.github.com/repos/rust-lang/rust/commits/23b82c32298002f80724a244c2483fd1e8ec1d54", "html_url": "https://github.com/rust-lang/rust/commit/23b82c32298002f80724a244c2483fd1e8ec1d54"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "6bb2cd037708f895b7872ed3e913d2ec9d88cbd9", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cfbb60bf6d83fbcfcca1f2919131aa39fb997b53/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfbb60bf6d83fbcfcca1f2919131aa39fb997b53/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=cfbb60bf6d83fbcfcca1f2919131aa39fb997b53", "patch": "@@ -1321,13 +1321,15 @@ impl<'a> Resolver<'a> {\n             ScopeSet::AbsolutePath(ns) => (ns, true),\n             ScopeSet::Macro(_) => (MacroNS, false),\n         };\n+        // Jump out of trait or enum modules, they do not act as scopes.\n+        let module = parent_scope.module.nearest_item_scope();\n         let mut scope = match ns {\n             _ if is_absolute_path => Scope::CrateRoot,\n-            TypeNS | ValueNS => Scope::Module(parent_scope.module),\n+            TypeNS | ValueNS => Scope::Module(module),\n             MacroNS => Scope::DeriveHelpers,\n         };\n         let mut ident = ident.modern();\n-        let mut use_prelude = !parent_scope.module.no_implicit_prelude;\n+        let mut use_prelude = !module.no_implicit_prelude;\n \n         loop {\n             let visit = match scope {\n@@ -1360,7 +1362,7 @@ impl<'a> Resolver<'a> {\n                     LegacyScope::Invocation(invoc) => Scope::MacroRules(\n                         invoc.output_legacy_scope.get().unwrap_or(invoc.parent_legacy_scope)\n                     ),\n-                    LegacyScope::Empty => Scope::Module(parent_scope.module),\n+                    LegacyScope::Empty => Scope::Module(module),\n                 }\n                 Scope::CrateRoot => match ns {\n                     TypeNS => {"}, {"sha": "6d882a6e194dff3588597b4d0e8d33e52faacf72", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cfbb60bf6d83fbcfcca1f2919131aa39fb997b53/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfbb60bf6d83fbcfcca1f2919131aa39fb997b53/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=cfbb60bf6d83fbcfcca1f2919131aa39fb997b53", "patch": "@@ -258,7 +258,7 @@ impl<'a> Resolver<'a> {\n     fn invoc_parent_scope(&self, invoc_id: ExpnId, derives: Vec<ast::Path>) -> ParentScope<'a> {\n         let invoc = self.invocations[&invoc_id];\n         ParentScope {\n-            module: invoc.module.nearest_item_scope(),\n+            module: invoc.module,\n             expansion: invoc_id.parent(),\n             legacy: invoc.parent_legacy_scope,\n             derives,"}]}