{"sha": "8642306f090f2f91c89d5cb992b3085ec0f39699", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2NDIzMDZmMDkwZjJmOTFjODlkNWNiOTkyYjMwODVlYzBmMzk2OTk=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-01-18T12:36:58Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-01-18T12:36:58Z"}, "message": "Add a test for the OR_FUN_CALL lint", "tree": {"sha": "76e41183f18768fbaa8448f43a287ee181784e84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76e41183f18768fbaa8448f43a287ee181784e84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8642306f090f2f91c89d5cb992b3085ec0f39699", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8642306f090f2f91c89d5cb992b3085ec0f39699", "html_url": "https://github.com/rust-lang/rust/commit/8642306f090f2f91c89d5cb992b3085ec0f39699", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8642306f090f2f91c89d5cb992b3085ec0f39699/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21ba3151025c4438a16ee110d99b9d6a525c695f", "url": "https://api.github.com/repos/rust-lang/rust/commits/21ba3151025c4438a16ee110d99b9d6a525c695f", "html_url": "https://github.com/rust-lang/rust/commit/21ba3151025c4438a16ee110d99b9d6a525c695f"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "f8642cb3ed8c99cc5c2d0475b53506456a8a886e", "filename": "tests/compile-fail/methods.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8642306f090f2f91c89d5cb992b3085ec0f39699/tests%2Fcompile-fail%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8642306f090f2f91c89d5cb992b3085ec0f39699/tests%2Fcompile-fail%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fmethods.rs?ref=8642306f090f2f91c89d5cb992b3085ec0f39699", "patch": "@@ -177,6 +177,12 @@ fn search_is_some() {\n \n /// Checks implementation of the OR_FUN_CALL lint\n fn or_fun_call() {\n+    struct Foo;\n+\n+    impl Foo {\n+        fn new() -> Foo { Foo }\n+    }\n+\n     fn make<T>() -> T { unimplemented!(); }\n \n     let with_constructor = Some(vec![1]);\n@@ -226,6 +232,12 @@ fn or_fun_call() {\n     //~^ERROR use of `unwrap_or`\n     //~|HELP try this\n     //~|SUGGESTION with_vec.unwrap_or_else(|| vec![]);\n+\n+    let without_default = Some(Foo);\n+    without_default.unwrap_or(Foo::new());\n+    //~^ERROR use of `unwrap_or`\n+    //~|HELP try this\n+    //~|SUGGESTION without_default.unwrap_or_else(Foo::new);\n }\n \n fn main() {"}]}