{"sha": "64e1ecb939542d689358ef05963db214e4ea198d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0ZTFlY2I5Mzk1NDJkNjg5MzU4ZWYwNTk2M2RiMjE0ZTRlYTE5OGQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-10-22T19:02:55Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-10-22T19:02:55Z"}, "message": "Long lines", "tree": {"sha": "57c48625ca546b4da18e48c61da9b0459558d11c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57c48625ca546b4da18e48c61da9b0459558d11c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64e1ecb939542d689358ef05963db214e4ea198d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64e1ecb939542d689358ef05963db214e4ea198d", "html_url": "https://github.com/rust-lang/rust/commit/64e1ecb939542d689358ef05963db214e4ea198d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64e1ecb939542d689358ef05963db214e4ea198d/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2eea07be1108a3705af136782370394c48744132", "url": "https://api.github.com/repos/rust-lang/rust/commits/2eea07be1108a3705af136782370394c48744132", "html_url": "https://github.com/rust-lang/rust/commit/2eea07be1108a3705af136782370394c48744132"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "bf66ccbfeb5f88af52d4d456b599733764d718b2", "filename": "src/rustc/middle/trans/base.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/64e1ecb939542d689358ef05963db214e4ea198d/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64e1ecb939542d689358ef05963db214e4ea198d/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=64e1ecb939542d689358ef05963db214e4ea198d", "patch": "@@ -267,7 +267,8 @@ fn malloc_raw_dyn(bcx: block, t: ty::t, heap: heap,\n fn non_gc_box_cast(bcx: block, val: ValueRef) -> ValueRef {\n     debug!(\"non_gc_box_cast\");\n     add_comment(bcx, ~\"non_gc_box_cast\");\n-    assert(llvm::LLVMGetPointerAddressSpace(val_ty(val)) == gc_box_addrspace || bcx.unreachable);\n+    assert(llvm::LLVMGetPointerAddressSpace(val_ty(val)) == gc_box_addrspace\n+           || bcx.unreachable);\n     let non_gc_t = T_ptr(llvm::LLVMGetElementType(val_ty(val)));\n     PointerCast(bcx, val, non_gc_t)\n }"}]}