{"sha": "2dd6bc6887858f91b846ffa7dbd9f0f49b9f3b87", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkZDZiYzY4ODc4NThmOTFiODQ2ZmZhN2RiZDlmMGY0OWI5ZjNiODc=", "commit": {"author": {"name": "P1start", "email": "rewi-github@whanau.org", "date": "2014-08-02T06:54:38Z"}, "committer": {"name": "P1start", "email": "rewi-github@whanau.org", "date": "2014-08-12T03:33:05Z"}, "message": "Implement Index for TreeMap", "tree": {"sha": "7f3001fdc306d593c300876d568091d513e096c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f3001fdc306d593c300876d568091d513e096c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2dd6bc6887858f91b846ffa7dbd9f0f49b9f3b87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2dd6bc6887858f91b846ffa7dbd9f0f49b9f3b87", "html_url": "https://github.com/rust-lang/rust/commit/2dd6bc6887858f91b846ffa7dbd9f0f49b9f3b87", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2dd6bc6887858f91b846ffa7dbd9f0f49b9f3b87/comments", "author": {"login": "ftxqxd", "id": 2055302, "node_id": "MDQ6VXNlcjIwNTUzMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2055302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ftxqxd", "html_url": "https://github.com/ftxqxd", "followers_url": "https://api.github.com/users/ftxqxd/followers", "following_url": "https://api.github.com/users/ftxqxd/following{/other_user}", "gists_url": "https://api.github.com/users/ftxqxd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ftxqxd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ftxqxd/subscriptions", "organizations_url": "https://api.github.com/users/ftxqxd/orgs", "repos_url": "https://api.github.com/users/ftxqxd/repos", "events_url": "https://api.github.com/users/ftxqxd/events{/privacy}", "received_events_url": "https://api.github.com/users/ftxqxd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ftxqxd", "id": 2055302, "node_id": "MDQ6VXNlcjIwNTUzMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2055302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ftxqxd", "html_url": "https://github.com/ftxqxd", "followers_url": "https://api.github.com/users/ftxqxd/followers", "following_url": "https://api.github.com/users/ftxqxd/following{/other_user}", "gists_url": "https://api.github.com/users/ftxqxd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ftxqxd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ftxqxd/subscriptions", "organizations_url": "https://api.github.com/users/ftxqxd/orgs", "repos_url": "https://api.github.com/users/ftxqxd/repos", "events_url": "https://api.github.com/users/ftxqxd/events{/privacy}", "received_events_url": "https://api.github.com/users/ftxqxd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32f5898bea0ebed00b066a211749ce155aa2b8a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/32f5898bea0ebed00b066a211749ce155aa2b8a6", "html_url": "https://github.com/rust-lang/rust/commit/32f5898bea0ebed00b066a211749ce155aa2b8a6"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "23f9ae760dcb2dbf4ef9978d10d67baaa771a3e4", "filename": "src/libcollections/treemap.rs", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/2dd6bc6887858f91b846ffa7dbd9f0f49b9f3b87/src%2Flibcollections%2Ftreemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2dd6bc6887858f91b846ffa7dbd9f0f49b9f3b87/src%2Flibcollections%2Ftreemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Ftreemap.rs?ref=2dd6bc6887858f91b846ffa7dbd9f0f49b9f3b87", "patch": "@@ -237,6 +237,20 @@ impl<K: Ord, V> Default for TreeMap<K,V> {\n     fn default() -> TreeMap<K, V> { TreeMap::new() }\n }\n \n+impl<K: Ord, V> Index<K, V> for TreeMap<K, V> {\n+    #[inline]\n+    fn index<'a>(&'a self, i: &K) -> &'a V {\n+        self.find(i).expect(\"no entry found for key\")\n+    }\n+}\n+\n+/*impl<K: Ord, V> IndexMut<K, V> for TreeMap<K, V> {\n+    #[inline]\n+    fn index_mut<'a>(&'a mut self, i: &K) -> &'a mut V {\n+        self.find_mut(i).expect(\"no entry found for key\")\n+    }\n+}*/\n+\n impl<K: Ord, V> TreeMap<K, V> {\n     /// Create an empty `TreeMap`.\n     ///\n@@ -2131,6 +2145,28 @@ mod test_treemap {\n         }\n     }\n \n+    #[test]\n+    fn test_index() {\n+        let mut map: TreeMap<int, int> = TreeMap::new();\n+\n+        map.insert(1, 2);\n+        map.insert(2, 1);\n+        map.insert(3, 4);\n+\n+        assert_eq!(map[2], 1);\n+    }\n+\n+    #[test]\n+    #[should_fail]\n+    fn test_index_nonexistent() {\n+        let mut map: TreeMap<int, int> = TreeMap::new();\n+\n+        map.insert(1, 2);\n+        map.insert(2, 1);\n+        map.insert(3, 4);\n+\n+        map[4];\n+    }\n }\n \n #[cfg(test)]"}]}