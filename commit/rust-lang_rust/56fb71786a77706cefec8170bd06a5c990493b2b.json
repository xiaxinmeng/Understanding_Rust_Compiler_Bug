{"sha": "56fb71786a77706cefec8170bd06a5c990493b2b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2ZmI3MTc4NmE3NzcwNmNlZmVjODE3MGJkMDZhNWM5OTA0OTNiMmI=", "commit": {"author": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2020-07-07T17:23:15Z"}, "committer": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2020-07-07T17:29:26Z"}, "message": "rustdoc: Rename invalid_codeblock_attribute lint to be plural", "tree": {"sha": "fb8f9d4c87529f4ba2db58bcda6c03bda1250043", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb8f9d4c87529f4ba2db58bcda6c03bda1250043"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56fb71786a77706cefec8170bd06a5c990493b2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56fb71786a77706cefec8170bd06a5c990493b2b", "html_url": "https://github.com/rust-lang/rust/commit/56fb71786a77706cefec8170bd06a5c990493b2b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56fb71786a77706cefec8170bd06a5c990493b2b/comments", "author": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c86039b33343de264d8b3b1a9e3591b10d5615e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/c86039b33343de264d8b3b1a9e3591b10d5615e8", "html_url": "https://github.com/rust-lang/rust/commit/c86039b33343de264d8b3b1a9e3591b10d5615e8"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "4556c3547f7fc4759f2dbad8df3b15332a8d7346", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56fb71786a77706cefec8170bd06a5c990493b2b/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56fb71786a77706cefec8170bd06a5c990493b2b/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=56fb71786a77706cefec8170bd06a5c990493b2b", "patch": "@@ -62,7 +62,7 @@ use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::TyCtxt;\n use rustc_session::lint::builtin::{\n     BARE_TRAIT_OBJECTS, ELIDED_LIFETIMES_IN_PATHS, EXPLICIT_OUTLIVES_REQUIREMENTS,\n-    INTRA_DOC_LINK_RESOLUTION_FAILURE, INVALID_CODEBLOCK_ATTRIBUTE, MISSING_DOC_CODE_EXAMPLES,\n+    INTRA_DOC_LINK_RESOLUTION_FAILURE, INVALID_CODEBLOCK_ATTRIBUTES, MISSING_DOC_CODE_EXAMPLES,\n     PRIVATE_DOC_TESTS,\n };\n use rustc_span::symbol::{Ident, Symbol};\n@@ -304,7 +304,7 @@ fn register_builtins(store: &mut LintStore, no_interleave_lints: bool) {\n     add_lint_group!(\n         \"rustdoc\",\n         INTRA_DOC_LINK_RESOLUTION_FAILURE,\n-        INVALID_CODEBLOCK_ATTRIBUTE,\n+        INVALID_CODEBLOCK_ATTRIBUTES,\n         MISSING_DOC_CODE_EXAMPLES,\n         PRIVATE_DOC_TESTS\n     );"}, {"sha": "aa2a133952f8f430d187940fb85bd27a787218f5", "filename": "src/librustc_session/lint/builtin.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56fb71786a77706cefec8170bd06a5c990493b2b/src%2Flibrustc_session%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56fb71786a77706cefec8170bd06a5c990493b2b/src%2Flibrustc_session%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Flint%2Fbuiltin.rs?ref=56fb71786a77706cefec8170bd06a5c990493b2b", "patch": "@@ -404,7 +404,7 @@ declare_lint! {\n }\n \n declare_lint! {\n-    pub INVALID_CODEBLOCK_ATTRIBUTE,\n+    pub INVALID_CODEBLOCK_ATTRIBUTES,\n     Warn,\n     \"codeblock attribute looks a lot like a known one\"\n }\n@@ -602,7 +602,7 @@ declare_lint_pass! {\n         UNSTABLE_NAME_COLLISIONS,\n         IRREFUTABLE_LET_PATTERNS,\n         INTRA_DOC_LINK_RESOLUTION_FAILURE,\n-        INVALID_CODEBLOCK_ATTRIBUTE,\n+        INVALID_CODEBLOCK_ATTRIBUTES,\n         MISSING_CRATE_LEVEL_DOCS,\n         MISSING_DOC_CODE_EXAMPLES,\n         PRIVATE_DOC_TESTS,"}, {"sha": "db98ec5d0a72ee6d41f3107021ba2deb2fdda36e", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56fb71786a77706cefec8170bd06a5c990493b2b/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56fb71786a77706cefec8170bd06a5c990493b2b/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=56fb71786a77706cefec8170bd06a5c990493b2b", "patch": "@@ -214,7 +214,7 @@ pub fn new_handler(\n \n /// This function is used to setup the lint initialization. By default, in rustdoc, everything\n /// is \"allowed\". Depending if we run in test mode or not, we want some of them to be at their\n-/// default level. For example, the \"INVALID_CODEBLOCK_ATTRIBUTE\" lint is activated in both\n+/// default level. For example, the \"INVALID_CODEBLOCK_ATTRIBUTES\" lint is activated in both\n /// modes.\n ///\n /// A little detail easy to forget is that there is a way to set the lint level for all lints\n@@ -315,7 +315,7 @@ pub fn run_core(options: RustdocOptions) -> (clean::Crate, RenderInfo, RenderOpt\n     let missing_doc_example = rustc_lint::builtin::MISSING_DOC_CODE_EXAMPLES.name;\n     let private_doc_tests = rustc_lint::builtin::PRIVATE_DOC_TESTS.name;\n     let no_crate_level_docs = rustc_lint::builtin::MISSING_CRATE_LEVEL_DOCS.name;\n-    let invalid_codeblock_attribute_name = rustc_lint::builtin::INVALID_CODEBLOCK_ATTRIBUTE.name;\n+    let invalid_codeblock_attribute_name = rustc_lint::builtin::INVALID_CODEBLOCK_ATTRIBUTES.name;\n \n     // In addition to those specific lints, we also need to whitelist those given through\n     // command line, otherwise they'll get ignored and we don't want that."}, {"sha": "a0f8eb04e2efb62206bbbfc3cc387b105480ec04", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56fb71786a77706cefec8170bd06a5c990493b2b/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56fb71786a77706cefec8170bd06a5c990493b2b/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=56fb71786a77706cefec8170bd06a5c990493b2b", "patch": "@@ -665,7 +665,7 @@ impl<'a, 'b> ExtraInfo<'a, 'b> {\n             (None, None) => return,\n         };\n         self.tcx.struct_span_lint_hir(\n-            lint::builtin::INVALID_CODEBLOCK_ATTRIBUTE,\n+            lint::builtin::INVALID_CODEBLOCK_ATTRIBUTES,\n             hir_id,\n             self.sp,\n             |lint| {"}, {"sha": "a89cb130c6b05ce603a549311dc370109f279870", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56fb71786a77706cefec8170bd06a5c990493b2b/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56fb71786a77706cefec8170bd06a5c990493b2b/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=56fb71786a77706cefec8170bd06a5c990493b2b", "patch": "@@ -46,7 +46,7 @@ pub struct TestOptions {\n pub fn run(options: Options) -> Result<(), String> {\n     let input = config::Input::File(options.input.clone());\n \n-    let invalid_codeblock_attribute_name = rustc_lint::builtin::INVALID_CODEBLOCK_ATTRIBUTE.name;\n+    let invalid_codeblock_attribute_name = rustc_lint::builtin::INVALID_CODEBLOCK_ATTRIBUTES.name;\n \n     // In addition to those specific lints, we also need to whitelist those given through\n     // command line, otherwise they'll get ignored and we don't want that."}, {"sha": "665f330e34ea58f482dd4a5bf8e70dea56870851", "filename": "src/test/rustdoc-ui/check-attr-test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56fb71786a77706cefec8170bd06a5c990493b2b/src%2Ftest%2Frustdoc-ui%2Fcheck-attr-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56fb71786a77706cefec8170bd06a5c990493b2b/src%2Ftest%2Frustdoc-ui%2Fcheck-attr-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcheck-attr-test.rs?ref=56fb71786a77706cefec8170bd06a5c990493b2b", "patch": "@@ -1,6 +1,6 @@\n // compile-flags:--test\n \n-#![deny(invalid_codeblock_attribute)]\n+#![deny(invalid_codeblock_attributes)]\n \n /// foo\n ///"}, {"sha": "1e067a5d21c444d314aa64594cf74f692110c612", "filename": "src/test/rustdoc-ui/check-attr-test.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56fb71786a77706cefec8170bd06a5c990493b2b/src%2Ftest%2Frustdoc-ui%2Fcheck-attr-test.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/56fb71786a77706cefec8170bd06a5c990493b2b/src%2Ftest%2Frustdoc-ui%2Fcheck-attr-test.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcheck-attr-test.stderr?ref=56fb71786a77706cefec8170bd06a5c990493b2b", "patch": "@@ -11,8 +11,8 @@ error: unknown attribute `compile-fail`. Did you mean `compile_fail`?\n note: the lint level is defined here\n  --> $DIR/check-attr-test.rs:3:9\n   |\n-3 | #![deny(invalid_codeblock_attribute)]\n-  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+3 | #![deny(invalid_codeblock_attributes)]\n+  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   = help: the code block will either not be tested if not marked as a rust one or won't fail if it compiles successfully\n \n error: unknown attribute `compilefail`. Did you mean `compile_fail`?"}, {"sha": "9e02eab753e26863715a7e7c7cfc6e7c8e45dee5", "filename": "src/test/rustdoc-ui/check-attr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56fb71786a77706cefec8170bd06a5c990493b2b/src%2Ftest%2Frustdoc-ui%2Fcheck-attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56fb71786a77706cefec8170bd06a5c990493b2b/src%2Ftest%2Frustdoc-ui%2Fcheck-attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcheck-attr.rs?ref=56fb71786a77706cefec8170bd06a5c990493b2b", "patch": "@@ -1,4 +1,4 @@\n-#![deny(invalid_codeblock_attribute)]\n+#![deny(invalid_codeblock_attributes)]\n \n /// foo\n //~^ ERROR"}, {"sha": "919eb047eefb53529224e8baafbe4f5b63425412", "filename": "src/test/rustdoc-ui/check-attr.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56fb71786a77706cefec8170bd06a5c990493b2b/src%2Ftest%2Frustdoc-ui%2Fcheck-attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/56fb71786a77706cefec8170bd06a5c990493b2b/src%2Ftest%2Frustdoc-ui%2Fcheck-attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcheck-attr.stderr?ref=56fb71786a77706cefec8170bd06a5c990493b2b", "patch": "@@ -13,8 +13,8 @@ LL | | /// ```\n note: the lint level is defined here\n   --> $DIR/check-attr.rs:1:9\n    |\n-LL | #![deny(invalid_codeblock_attribute)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![deny(invalid_codeblock_attributes)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: the code block will either not be tested if not marked as a rust one or won't fail if it compiles successfully\n \n error: unknown attribute `compilefail`. Did you mean `compile_fail`?"}]}