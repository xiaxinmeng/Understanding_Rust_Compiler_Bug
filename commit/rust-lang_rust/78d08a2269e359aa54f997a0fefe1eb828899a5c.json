{"sha": "78d08a2269e359aa54f997a0fefe1eb828899a5c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4ZDA4YTIyNjllMzU5YWE1NGY5OTdhMGZlZmUxZWI4Mjg4OTlhNWM=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-06-10T09:03:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-10T09:03:38Z"}, "message": "Rollup merge of #72789 - petrochenkov:impcand, r=davidtwco\n\nresolve: Do not suggest imports from the same module in which we are resolving\n\nBased on the idea from https://github.com/rust-lang/rust/pull/72623.", "tree": {"sha": "408368f199db5a2af40e02bbb89a458c16a77d0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/408368f199db5a2af40e02bbb89a458c16a77d0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/78d08a2269e359aa54f997a0fefe1eb828899a5c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe4KHqCRBK7hj4Ov3rIwAAdHIIAIYFTkf3GgTrPRX2qee4Ervb\nR0Xpizgc/AYFXaoK8SqrpdlsEfe2HSRv+Lq42XJQdJ0JiujlvHN7ElislSy/DqPG\n7ktfEIPmCSXgH/4jo32pDmEJZY64JDfxAYBLlAw2LC4L9B5E45swineh6pXJDbTr\nyve4DHPvcmp5noDMWjMyZJ0zHmEttuuZxc9+UZHS49ZlFEvVMgMhdcje+pHlOvSS\nGY4iwgKCGFW++E+mLNO38QsavH5jr59W1nlPjZ3bV5CiEPIzgI47gJfjmr2XYlnM\nTHSbtB/xaEOdFM5mYSY85xXRkWe2Evzl02Jn/Q0aZdzeaw4c7BPIDsZHDh/bRJk=\n=dqyO\n-----END PGP SIGNATURE-----\n", "payload": "tree 408368f199db5a2af40e02bbb89a458c16a77d0b\nparent a70fb70c1f64198263e949f23aee643005f44cea\nparent 21fca7aae7213b651399e95d3d83f85f00734036\nauthor Dylan DPC <dylan.dpc@gmail.com> 1591779818 +0200\ncommitter GitHub <noreply@github.com> 1591779818 +0200\n\nRollup merge of #72789 - petrochenkov:impcand, r=davidtwco\n\nresolve: Do not suggest imports from the same module in which we are resolving\n\nBased on the idea from https://github.com/rust-lang/rust/pull/72623.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/78d08a2269e359aa54f997a0fefe1eb828899a5c", "html_url": "https://github.com/rust-lang/rust/commit/78d08a2269e359aa54f997a0fefe1eb828899a5c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/78d08a2269e359aa54f997a0fefe1eb828899a5c/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a70fb70c1f64198263e949f23aee643005f44cea", "url": "https://api.github.com/repos/rust-lang/rust/commits/a70fb70c1f64198263e949f23aee643005f44cea", "html_url": "https://github.com/rust-lang/rust/commit/a70fb70c1f64198263e949f23aee643005f44cea"}, {"sha": "21fca7aae7213b651399e95d3d83f85f00734036", "url": "https://api.github.com/repos/rust-lang/rust/commits/21fca7aae7213b651399e95d3d83f85f00734036", "html_url": "https://github.com/rust-lang/rust/commit/21fca7aae7213b651399e95d3d83f85f00734036"}], "stats": {"total": 27, "additions": 14, "deletions": 13}, "files": [{"sha": "a5299afb9c23d662a8d93f08ad621294748046df", "filename": "src/librustc_resolve/diagnostics.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/78d08a2269e359aa54f997a0fefe1eb828899a5c/src%2Flibrustc_resolve%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78d08a2269e359aa54f997a0fefe1eb828899a5c/src%2Flibrustc_resolve%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdiagnostics.rs?ref=78d08a2269e359aa54f997a0fefe1eb828899a5c", "patch": "@@ -629,6 +629,7 @@ impl<'a> Resolver<'a> {\n         &mut self,\n         lookup_ident: Ident,\n         namespace: Namespace,\n+        parent_scope: &ParentScope<'a>,\n         start_module: Module<'a>,\n         crate_name: Ident,\n         filter_fn: FilterFn,\n@@ -655,7 +656,11 @@ impl<'a> Resolver<'a> {\n                 }\n \n                 // collect results based on the filter function\n-                if ident.name == lookup_ident.name && ns == namespace {\n+                // avoid suggesting anything from the same module in which we are resolving\n+                if ident.name == lookup_ident.name\n+                    && ns == namespace\n+                    && !ptr::eq(in_module, parent_scope.module)\n+                {\n                     let res = name_binding.res();\n                     if filter_fn(res) {\n                         // create the path\n@@ -722,6 +727,7 @@ impl<'a> Resolver<'a> {\n         &mut self,\n         lookup_ident: Ident,\n         namespace: Namespace,\n+        parent_scope: &ParentScope<'a>,\n         filter_fn: FilterFn,\n     ) -> Vec<ImportSuggestion>\n     where\n@@ -730,6 +736,7 @@ impl<'a> Resolver<'a> {\n         let mut suggestions = self.lookup_import_candidates_from_module(\n             lookup_ident,\n             namespace,\n+            parent_scope,\n             self.graph_root,\n             Ident::with_dummy_span(kw::Crate),\n             &filter_fn,\n@@ -754,6 +761,7 @@ impl<'a> Resolver<'a> {\n                     suggestions.extend(self.lookup_import_candidates_from_module(\n                         lookup_ident,\n                         namespace,\n+                        parent_scope,\n                         crate_root,\n                         ident,\n                         &filter_fn,"}, {"sha": "ed7adefcb8c9e0a56985054fe9f0e92f0a44603e", "filename": "src/librustc_resolve/late/diagnostics.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/78d08a2269e359aa54f997a0fefe1eb828899a5c/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78d08a2269e359aa54f997a0fefe1eb828899a5c/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs?ref=78d08a2269e359aa54f997a0fefe1eb828899a5c", "patch": "@@ -212,7 +212,7 @@ impl<'a> LateResolutionVisitor<'a, '_, '_> {\n         let ident = path.last().unwrap().ident;\n         let candidates = self\n             .r\n-            .lookup_import_candidates(ident, ns, is_expected)\n+            .lookup_import_candidates(ident, ns, &self.parent_scope, is_expected)\n             .drain(..)\n             .filter(|ImportSuggestion { did, .. }| {\n                 match (did, res.and_then(|res| res.opt_def_id())) {\n@@ -223,7 +223,8 @@ impl<'a> LateResolutionVisitor<'a, '_, '_> {\n             .collect::<Vec<_>>();\n         let crate_def_id = DefId::local(CRATE_DEF_INDEX);\n         if candidates.is_empty() && is_expected(Res::Def(DefKind::Enum, crate_def_id)) {\n-            let enum_candidates = self.r.lookup_import_candidates(ident, ns, is_enum_variant);\n+            let enum_candidates =\n+                self.r.lookup_import_candidates(ident, ns, &self.parent_scope, is_enum_variant);\n             let mut enum_candidates = enum_candidates\n                 .iter()\n                 .map(|suggestion| import_candidate_to_enum_paths(&suggestion))"}, {"sha": "61792e039c76ead953f6a911c7ef292b822992a3", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/78d08a2269e359aa54f997a0fefe1eb828899a5c/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78d08a2269e359aa54f997a0fefe1eb828899a5c/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=78d08a2269e359aa54f997a0fefe1eb828899a5c", "patch": "@@ -2235,7 +2235,8 @@ impl<'a> Resolver<'a> {\n                             Res::Def(DefKind::Mod, _) => true,\n                             _ => false,\n                         };\n-                        let mut candidates = self.lookup_import_candidates(ident, TypeNS, is_mod);\n+                        let mut candidates =\n+                            self.lookup_import_candidates(ident, TypeNS, parent_scope, is_mod);\n                         candidates.sort_by_cached_key(|c| {\n                             (c.path.segments.len(), pprust::path_to_string(&c.path))\n                         });"}, {"sha": "1e6a35ed479f690d495865ee92fb0d900eb611e0", "filename": "src/test/ui/lexical-scopes.stderr", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/78d08a2269e359aa54f997a0fefe1eb828899a5c/src%2Ftest%2Fui%2Flexical-scopes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/78d08a2269e359aa54f997a0fefe1eb828899a5c/src%2Ftest%2Fui%2Flexical-scopes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flexical-scopes.stderr?ref=78d08a2269e359aa54f997a0fefe1eb828899a5c", "patch": "@@ -3,11 +3,6 @@ error[E0574]: expected struct, variant or union type, found type parameter `T`\n    |\n LL |     let t = T { i: 0 };\n    |             ^ not a struct, variant or union type\n-   |\n-help: consider importing this struct instead\n-   |\n-LL | use T;\n-   |\n \n error[E0599]: no function or associated item named `f` found for type parameter `Foo` in the current scope\n   --> $DIR/lexical-scopes.rs:10:10"}, {"sha": "6244ffc47a64bf19a306495b92328cd60f3ceabd", "filename": "src/test/ui/proc-macro/mixed-site-span.stderr", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/78d08a2269e359aa54f997a0fefe1eb828899a5c/src%2Ftest%2Fui%2Fproc-macro%2Fmixed-site-span.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/78d08a2269e359aa54f997a0fefe1eb828899a5c/src%2Ftest%2Fui%2Fproc-macro%2Fmixed-site-span.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fmixed-site-span.stderr?ref=78d08a2269e359aa54f997a0fefe1eb828899a5c", "patch": "@@ -27,10 +27,6 @@ LL | pass_dollar_crate!();\n    | ^^^^^^^^^^^^^^^^^^^^^ not found in `$crate`\n    |\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n-help: consider importing this struct\n-   |\n-LL | use ItemUse;\n-   |\n \n error: aborting due to 4 previous errors\n "}]}