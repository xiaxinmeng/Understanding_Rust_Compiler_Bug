{"sha": "28b0ed020a36e94fe233e2a0ef950fd888b16256", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4YjBlZDAyMGEzNmU5NGZlMjMzZTJhMGVmOTUwZmQ4ODhiMTYyNTY=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2020-02-05T10:11:34Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2020-02-05T10:11:34Z"}, "message": "merge item id stable hashing functions", "tree": {"sha": "811e1c8e5283a745a7a9c73dae7b7e23cb450c7d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/811e1c8e5283a745a7a9c73dae7b7e23cb450c7d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28b0ed020a36e94fe233e2a0ef950fd888b16256", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28b0ed020a36e94fe233e2a0ef950fd888b16256", "html_url": "https://github.com/rust-lang/rust/commit/28b0ed020a36e94fe233e2a0ef950fd888b16256", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28b0ed020a36e94fe233e2a0ef950fd888b16256/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ff8fb9cb210a9f06e0eafc364bd12de2b67f087", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ff8fb9cb210a9f06e0eafc364bd12de2b67f087", "html_url": "https://github.com/rust-lang/rust/commit/4ff8fb9cb210a9f06e0eafc364bd12de2b67f087"}], "stats": {"total": 31, "additions": 5, "deletions": 26}, "files": [{"sha": "1e5a722c1011658fdb12afe749f0a4eb6298df86", "filename": "src/librustc/ich/impls_hir.rs", "status": "modified", "additions": 1, "deletions": 20, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/28b0ed020a36e94fe233e2a0ef950fd888b16256/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28b0ed020a36e94fe233e2a0ef950fd888b16256/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_hir.rs?ref=28b0ed020a36e94fe233e2a0ef950fd888b16256", "patch": "@@ -47,33 +47,14 @@ impl<'ctx> rustc_hir::HashStableContext for StableHashingContext<'ctx> {\n     // want to pick up on a reference changing its target, so we hash the NodeIds\n     // in \"DefPath Mode\".\n \n-    fn hash_item_id(&mut self, id: hir::ItemId, hasher: &mut StableHasher) {\n+    fn hash_reference_to_item(&mut self, id: hir::HirId, hasher: &mut StableHasher) {\n         let hcx = self;\n-        let hir::ItemId { id } = id;\n \n         hcx.with_node_id_hashing_mode(NodeIdHashingMode::HashDefPath, |hcx| {\n             id.hash_stable(hcx, hasher);\n         })\n     }\n \n-    fn hash_impl_item_id(&mut self, id: hir::ImplItemId, hasher: &mut StableHasher) {\n-        let hcx = self;\n-        let hir::ImplItemId { hir_id } = id;\n-\n-        hcx.with_node_id_hashing_mode(NodeIdHashingMode::HashDefPath, |hcx| {\n-            hir_id.hash_stable(hcx, hasher);\n-        })\n-    }\n-\n-    fn hash_trait_item_id(&mut self, id: hir::TraitItemId, hasher: &mut StableHasher) {\n-        let hcx = self;\n-        let hir::TraitItemId { hir_id } = id;\n-\n-        hcx.with_node_id_hashing_mode(NodeIdHashingMode::HashDefPath, |hcx| {\n-            hir_id.hash_stable(hcx, hasher);\n-        })\n-    }\n-\n     fn hash_hir_mod(&mut self, module: &hir::Mod<'_>, hasher: &mut StableHasher) {\n         let hcx = self;\n         let hir::Mod { inner: ref inner_span, ref item_ids } = *module;"}, {"sha": "94e02d9cd94fe091e8a40ad5d58167628c2cef17", "filename": "src/librustc_hir/stable_hash_impls.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/28b0ed020a36e94fe233e2a0ef950fd888b16256/src%2Flibrustc_hir%2Fstable_hash_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28b0ed020a36e94fe233e2a0ef950fd888b16256/src%2Flibrustc_hir%2Fstable_hash_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_hir%2Fstable_hash_impls.rs?ref=28b0ed020a36e94fe233e2a0ef950fd888b16256", "patch": "@@ -11,9 +11,7 @@ pub trait HashStableContext: syntax::HashStableContext + rustc_target::HashStabl\n     fn hash_def_id(&mut self, _: DefId, hasher: &mut StableHasher);\n     fn hash_hir_id(&mut self, _: HirId, hasher: &mut StableHasher);\n     fn hash_body_id(&mut self, _: BodyId, hasher: &mut StableHasher);\n-    fn hash_item_id(&mut self, _: ItemId, hasher: &mut StableHasher);\n-    fn hash_impl_item_id(&mut self, _: ImplItemId, hasher: &mut StableHasher);\n-    fn hash_trait_item_id(&mut self, _: TraitItemId, hasher: &mut StableHasher);\n+    fn hash_reference_to_item(&mut self, _: HirId, hasher: &mut StableHasher);\n     fn hash_hir_mod(&mut self, _: &Mod<'_>, hasher: &mut StableHasher);\n     fn hash_hir_expr(&mut self, _: &Expr<'_>, hasher: &mut StableHasher);\n     fn hash_hir_ty(&mut self, _: &Ty<'_>, hasher: &mut StableHasher);\n@@ -40,19 +38,19 @@ impl<HirCtx: crate::HashStableContext> HashStable<HirCtx> for BodyId {\n \n impl<HirCtx: crate::HashStableContext> HashStable<HirCtx> for ItemId {\n     fn hash_stable(&self, hcx: &mut HirCtx, hasher: &mut StableHasher) {\n-        hcx.hash_item_id(*self, hasher)\n+        hcx.hash_reference_to_item(self.id, hasher)\n     }\n }\n \n impl<HirCtx: crate::HashStableContext> HashStable<HirCtx> for ImplItemId {\n     fn hash_stable(&self, hcx: &mut HirCtx, hasher: &mut StableHasher) {\n-        hcx.hash_impl_item_id(*self, hasher)\n+        hcx.hash_reference_to_item(self.hir_id, hasher)\n     }\n }\n \n impl<HirCtx: crate::HashStableContext> HashStable<HirCtx> for TraitItemId {\n     fn hash_stable(&self, hcx: &mut HirCtx, hasher: &mut StableHasher) {\n-        hcx.hash_trait_item_id(*self, hasher)\n+        hcx.hash_reference_to_item(self.hir_id, hasher)\n     }\n }\n "}]}