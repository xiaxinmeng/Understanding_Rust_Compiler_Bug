{"sha": "1dc4d1ce2940b3ccaad488bbc4ddf19d9cf1e768", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkYzRkMWNlMjk0MGIzY2NhYWQ0ODhiYmM0ZGRmMTlkOWNmMWU3Njg=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-09-09T00:23:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-09T00:23:00Z"}, "message": "Merge #10185\n\n10185: minor: include `ImplLoc` in panic context r=jonas-schievink a=jonas-schievink\n\ncc https://github.com/rust-analyzer/rust-analyzer/issues/10084\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "1a4fd13e36623838bcd11d9bfb070dbe9c37e525", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a4fd13e36623838bcd11d9bfb070dbe9c37e525"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1dc4d1ce2940b3ccaad488bbc4ddf19d9cf1e768", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhOVPkCRBK7hj4Ov3rIwAA6AsIAGhcwBEgB0BAb9YP2KNLBu8q\nLYVAjcBFn+ObZvY7bOhxl8Y4dr0DFiei/MwuIz+IZSGgAHXgcbn3VhInCcgK+Ts0\nH1/YTIjpmym515PMH8hVyF9+NG9dQLrmCg5XJw9R6+g/DfzXYGH8G4lJueS3CDYh\nSWKrkABUb9uVCPwNrhKHARU6E9cbIuREamlJyoxQLHlx32VQzFHudTBR/WdaaUoP\nmKuOZ4cftxSJORzTy5r9jWfRPrYqYo3cKeRx8HpyiErPf0OUM4jImgsWjNM6guJg\nLeoAX6VhNayD7Z1Tl10n80qYUfz/JGZLm6QkKG7r4y1cZI8KA9KidJ2H9QH6Lgc=\n=rzTI\n-----END PGP SIGNATURE-----\n", "payload": "tree 1a4fd13e36623838bcd11d9bfb070dbe9c37e525\nparent 22162aa363ff6ef1e06f6bec9867cfa41b5cda01\nparent 85993171e55c57f37385aea0fc33153f2173f9c0\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1631146980 +0000\ncommitter GitHub <noreply@github.com> 1631146980 +0000\n\nMerge #10185\n\n10185: minor: include `ImplLoc` in panic context r=jonas-schievink a=jonas-schievink\n\ncc https://github.com/rust-analyzer/rust-analyzer/issues/10084\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1dc4d1ce2940b3ccaad488bbc4ddf19d9cf1e768", "html_url": "https://github.com/rust-lang/rust/commit/1dc4d1ce2940b3ccaad488bbc4ddf19d9cf1e768", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1dc4d1ce2940b3ccaad488bbc4ddf19d9cf1e768/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22162aa363ff6ef1e06f6bec9867cfa41b5cda01", "url": "https://api.github.com/repos/rust-lang/rust/commits/22162aa363ff6ef1e06f6bec9867cfa41b5cda01", "html_url": "https://github.com/rust-lang/rust/commit/22162aa363ff6ef1e06f6bec9867cfa41b5cda01"}, {"sha": "85993171e55c57f37385aea0fc33153f2173f9c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/85993171e55c57f37385aea0fc33153f2173f9c0", "html_url": "https://github.com/rust-lang/rust/commit/85993171e55c57f37385aea0fc33153f2173f9c0"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "ad45a293468b808a40e2764562a2d419fad187be", "filename": "crates/hir_ty/src/lower.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1dc4d1ce2940b3ccaad488bbc4ddf19d9cf1e768/crates%2Fhir_ty%2Fsrc%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1dc4d1ce2940b3ccaad488bbc4ddf19d9cf1e768/crates%2Fhir_ty%2Fsrc%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Flower.rs?ref=1dc4d1ce2940b3ccaad488bbc4ddf19d9cf1e768", "patch": "@@ -1421,8 +1421,13 @@ pub(crate) fn value_ty_query(db: &dyn HirDatabase, def: ValueTyDefId) -> Binders\n }\n \n pub(crate) fn impl_self_ty_query(db: &dyn HirDatabase, impl_id: ImplId) -> Binders<Ty> {\n+    let impl_loc = impl_id.lookup(db.upcast());\n     let impl_data = db.impl_data(impl_id);\n     let resolver = impl_id.resolver(db.upcast());\n+    let _cx = stdx::panic_context::enter(format!(\n+        \"impl_self_ty_query({:?} -> {:?} -> {:?})\",\n+        impl_id, impl_loc, impl_data\n+    ));\n     let generics = generics(db.upcast(), impl_id.into());\n     let ctx =\n         TyLoweringContext::new(db, &resolver).with_type_param_mode(TypeParamLoweringMode::Variable);\n@@ -1448,10 +1453,13 @@ pub(crate) fn impl_self_ty_recover(\n }\n \n pub(crate) fn impl_trait_query(db: &dyn HirDatabase, impl_id: ImplId) -> Option<Binders<TraitRef>> {\n+    let impl_loc = impl_id.lookup(db.upcast());\n     let impl_data = db.impl_data(impl_id);\n     let resolver = impl_id.resolver(db.upcast());\n-    let _cx =\n-        stdx::panic_context::enter(format!(\"impl_trait_query({:?} -> {:?})\", impl_id, impl_data));\n+    let _cx = stdx::panic_context::enter(format!(\n+        \"impl_trait_query({:?} -> {:?} -> {:?})\",\n+        impl_id, impl_loc, impl_data\n+    ));\n     let ctx =\n         TyLoweringContext::new(db, &resolver).with_type_param_mode(TypeParamLoweringMode::Variable);\n     let (self_ty, binders) = db.impl_self_ty(impl_id).into_value_and_skipped_binders();"}]}