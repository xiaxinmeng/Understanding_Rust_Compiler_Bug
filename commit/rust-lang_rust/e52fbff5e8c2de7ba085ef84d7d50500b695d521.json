{"sha": "e52fbff5e8c2de7ba085ef84d7d50500b695d521", "node_id": "C_kwDOAAsO6NoAKGU1MmZiZmY1ZThjMmRlN2JhMDg1ZWY4NGQ3ZDUwNTAwYjY5NWQ1MjE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-05-15T15:12:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-15T15:12:45Z"}, "message": "Rollup merge of #111525 - scottmcm:slice-position-tweak, r=Mark-Simulacrum\n\nStop checking for the absence of something that doesn't exist\n\nA couple of codegen tests are doing\n```\n// CHECK-NOT: slice_index_len_fail\n```\n\nHowever, that function no longer exists: [the only places](https://github.com/search?q=repo%3Arust-lang%2Frust+slice_index_len_fail&type=code) it occurs in the repo are in those tests.\n\nSo this PR updates the tests to check for the absense of the functions that are actually used today to panic for out-of-bounds indexing.", "tree": {"sha": "1fce2d840917cbf8651f15cf95059387ad538023", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1fce2d840917cbf8651f15cf95059387ad538023"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e52fbff5e8c2de7ba085ef84d7d50500b695d521", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkYkvtCRBK7hj4Ov3rIwAAlR8IABnZP/K4haU/21W5rqLCKUyl\nEdFhZvEcJcesQVbfhNZSTSffANnIXhWxRUHQ47zj4e8BKj+Xgr6XTLWiu05KvbZ0\nR8cKavlyIcEivtEGwmBJ9wdq3vk0//PTeZSXHnwarEeYba+ket9gtCrCyhlrTdr/\n/m+jWb2u+2oo4sGK4gFKBy815KKvEheH0VKSaJ1uGrnwohTkRLuvUOtI5e0NPOvp\nncMQydV0kVJmRP3mXEtziYu0ods6opi3T97Wf9A18jmrZgFbRjgEJaX02ekfXSwu\nbwkgKtxXKA49uGEaX1wg2rY2JDggzC9jAV5ZwJho0rls41/HDDxUPT3taZvFZvA=\n=I3Jo\n-----END PGP SIGNATURE-----\n", "payload": "tree 1fce2d840917cbf8651f15cf95059387ad538023\nparent c93c2985d88dc7fc2c4444096f81e522aa3ea876\nparent a9570a34cde550cecf052d92f077bce1165cb3aa\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1684163565 +0200\ncommitter GitHub <noreply@github.com> 1684163565 +0200\n\nRollup merge of #111525 - scottmcm:slice-position-tweak, r=Mark-Simulacrum\n\nStop checking for the absence of something that doesn't exist\n\nA couple of codegen tests are doing\n```\n// CHECK-NOT: slice_index_len_fail\n```\n\nHowever, that function no longer exists: [the only places](https://github.com/search?q=repo%3Arust-lang%2Frust+slice_index_len_fail&type=code) it occurs in the repo are in those tests.\n\nSo this PR updates the tests to check for the absense of the functions that are actually used today to panic for out-of-bounds indexing.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e52fbff5e8c2de7ba085ef84d7d50500b695d521", "html_url": "https://github.com/rust-lang/rust/commit/e52fbff5e8c2de7ba085ef84d7d50500b695d521", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e52fbff5e8c2de7ba085ef84d7d50500b695d521/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c93c2985d88dc7fc2c4444096f81e522aa3ea876", "url": "https://api.github.com/repos/rust-lang/rust/commits/c93c2985d88dc7fc2c4444096f81e522aa3ea876", "html_url": "https://github.com/rust-lang/rust/commit/c93c2985d88dc7fc2c4444096f81e522aa3ea876"}, {"sha": "a9570a34cde550cecf052d92f077bce1165cb3aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9570a34cde550cecf052d92f077bce1165cb3aa", "html_url": "https://github.com/rust-lang/rust/commit/a9570a34cde550cecf052d92f077bce1165cb3aa"}], "stats": {"total": 34, "additions": 27, "deletions": 7}, "files": [{"sha": "595969a89793babab4793c52779cb660f9b16ff7", "filename": "tests/codegen/binary-search-index-no-bound-check.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e52fbff5e8c2de7ba085ef84d7d50500b695d521/tests%2Fcodegen%2Fbinary-search-index-no-bound-check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e52fbff5e8c2de7ba085ef84d7d50500b695d521/tests%2Fcodegen%2Fbinary-search-index-no-bound-check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fbinary-search-index-no-bound-check.rs?ref=e52fbff5e8c2de7ba085ef84d7d50500b695d521", "patch": "@@ -9,7 +9,9 @@\n #[no_mangle]\n pub fn binary_search_index_no_bounds_check(s: &[u8]) -> u8 {\n     // CHECK-NOT: panic\n-    // CHECK-NOT: slice_index_len_fail\n+    // CHECK-NOT: slice_start_index_len_fail\n+    // CHECK-NOT: slice_end_index_len_fail\n+    // CHECK-NOT: panic_bounds_check\n     if let Ok(idx) = s.binary_search(&b'\\\\') {\n         s[idx]\n     } else {"}, {"sha": "2d7797887912e004a1aad16cd64f74fe6b40786b", "filename": "tests/codegen/issues/issue-73396-bounds-check-after-position.rs", "status": "modified", "additions": 24, "deletions": 6, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/e52fbff5e8c2de7ba085ef84d7d50500b695d521/tests%2Fcodegen%2Fissues%2Fissue-73396-bounds-check-after-position.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e52fbff5e8c2de7ba085ef84d7d50500b695d521/tests%2Fcodegen%2Fissues%2Fissue-73396-bounds-check-after-position.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fissues%2Fissue-73396-bounds-check-after-position.rs?ref=e52fbff5e8c2de7ba085ef84d7d50500b695d521", "patch": "@@ -9,7 +9,10 @@\n #[no_mangle]\n pub fn position_slice_to_no_bounds_check(s: &[u8]) -> &[u8] {\n     // CHECK-NOT: panic\n-    // CHECK-NOT: slice_index_len_fail\n+    // CHECK-NOT: slice_start_index_len_fail\n+    // CHECK-NOT: slice_end_index_len_fail\n+    // CHECK-NOT: panic_bounds_check\n+    // CHECK-NOT: unreachable\n     if let Some(idx) = s.iter().position(|b| *b == b'\\\\') {\n         &s[..idx]\n     } else {\n@@ -21,7 +24,10 @@ pub fn position_slice_to_no_bounds_check(s: &[u8]) -> &[u8] {\n #[no_mangle]\n pub fn position_slice_from_no_bounds_check(s: &[u8]) -> &[u8] {\n     // CHECK-NOT: panic\n-    // CHECK-NOT: slice_index_len_fail\n+    // CHECK-NOT: slice_start_index_len_fail\n+    // CHECK-NOT: slice_end_index_len_fail\n+    // CHECK-NOT: panic_bounds_check\n+    // CHECK-NOT: unreachable\n     if let Some(idx) = s.iter().position(|b| *b == b'\\\\') {\n         &s[idx..]\n     } else {\n@@ -33,7 +39,10 @@ pub fn position_slice_from_no_bounds_check(s: &[u8]) -> &[u8] {\n #[no_mangle]\n pub fn position_index_no_bounds_check(s: &[u8]) -> u8 {\n     // CHECK-NOT: panic\n-    // CHECK-NOT: slice_index_len_fail\n+    // CHECK-NOT: slice_start_index_len_fail\n+    // CHECK-NOT: slice_end_index_len_fail\n+    // CHECK-NOT: panic_bounds_check\n+    // CHECK-NOT: unreachable\n     if let Some(idx) = s.iter().position(|b| *b == b'\\\\') {\n         s[idx]\n     } else {\n@@ -44,7 +53,10 @@ pub fn position_index_no_bounds_check(s: &[u8]) -> u8 {\n #[no_mangle]\n pub fn rposition_slice_to_no_bounds_check(s: &[u8]) -> &[u8] {\n     // CHECK-NOT: panic\n-    // CHECK-NOT: slice_index_len_fail\n+    // CHECK-NOT: slice_start_index_len_fail\n+    // CHECK-NOT: slice_end_index_len_fail\n+    // CHECK-NOT: panic_bounds_check\n+    // CHECK-NOT: unreachable\n     if let Some(idx) = s.iter().rposition(|b| *b == b'\\\\') {\n         &s[..idx]\n     } else {\n@@ -56,7 +68,10 @@ pub fn rposition_slice_to_no_bounds_check(s: &[u8]) -> &[u8] {\n #[no_mangle]\n pub fn rposition_slice_from_no_bounds_check(s: &[u8]) -> &[u8] {\n     // CHECK-NOT: panic\n-    // CHECK-NOT: slice_index_len_fail\n+    // CHECK-NOT: slice_start_index_len_fail\n+    // CHECK-NOT: slice_end_index_len_fail\n+    // CHECK-NOT: panic_bounds_check\n+    // CHECK-NOT: unreachable\n     if let Some(idx) = s.iter().rposition(|b| *b == b'\\\\') {\n         &s[idx..]\n     } else {\n@@ -68,7 +83,10 @@ pub fn rposition_slice_from_no_bounds_check(s: &[u8]) -> &[u8] {\n #[no_mangle]\n pub fn rposition_index_no_bounds_check(s: &[u8]) -> u8 {\n     // CHECK-NOT: panic\n-    // CHECK-NOT: slice_index_len_fail\n+    // CHECK-NOT: slice_start_index_len_fail\n+    // CHECK-NOT: slice_end_index_len_fail\n+    // CHECK-NOT: panic_bounds_check\n+    // CHECK-NOT: unreachable\n     if let Some(idx) = s.iter().rposition(|b| *b == b'\\\\') {\n         s[idx]\n     } else {"}]}