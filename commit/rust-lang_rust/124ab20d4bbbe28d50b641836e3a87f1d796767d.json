{"sha": "124ab20d4bbbe28d50b641836e3a87f1d796767d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyNGFiMjBkNGJiYmUyOGQ1MGI2NDE4MzZlM2E4N2YxZDc5Njc2N2Q=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-03-23T18:35:19Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-03-23T18:35:19Z"}, "message": "Limit `from_anon_const` to `AnonConst`s.", "tree": {"sha": "ebf79a8e35f265a95ea0c73c8444902a53b473c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ebf79a8e35f265a95ea0c73c8444902a53b473c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/124ab20d4bbbe28d50b641836e3a87f1d796767d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/124ab20d4bbbe28d50b641836e3a87f1d796767d", "html_url": "https://github.com/rust-lang/rust/commit/124ab20d4bbbe28d50b641836e3a87f1d796767d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/124ab20d4bbbe28d50b641836e3a87f1d796767d/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9bcd9fe6743aabcf6d96b3fafcd86d1e36114eed", "url": "https://api.github.com/repos/rust-lang/rust/commits/9bcd9fe6743aabcf6d96b3fafcd86d1e36114eed", "html_url": "https://github.com/rust-lang/rust/commit/9bcd9fe6743aabcf6d96b3fafcd86d1e36114eed"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "e49a29f687c2393b45c2ac263c4f88d8a6dca22f", "filename": "src/librustc/ty/sty.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/124ab20d4bbbe28d50b641836e3a87f1d796767d/src%2Flibrustc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/124ab20d4bbbe28d50b641836e3a87f1d796767d/src%2Flibrustc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fsty.rs?ref=124ab20d4bbbe28d50b641836e3a87f1d796767d", "patch": "@@ -2409,7 +2409,10 @@ impl<'tcx> Const<'tcx> {\n \n         let hir_id = tcx.hir().local_def_id_to_hir_id(def_id);\n \n-        let body_id = tcx.hir().body_owned_by(hir_id);\n+        let body_id = match tcx.hir().get(hir_id) {\n+            hir::Node::AnonConst(ac) => ac.body,\n+            _ => span_bug!(tcx.def_span(def_id.to_def_id()), \"from_anon_const can only process anonymous constants\"),\n+        };\n \n         let expr = &tcx.hir().body(body_id).value;\n "}]}