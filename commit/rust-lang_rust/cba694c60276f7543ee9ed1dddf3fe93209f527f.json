{"sha": "cba694c60276f7543ee9ed1dddf3fe93209f527f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiYTY5NGM2MDI3NmY3NTQzZWU5ZWQxZGRkZjNmZTkzMjA5ZjUyN2Y=", "commit": {"author": {"name": "IceSentry", "email": "c.giguere42@gmail.com", "date": "2020-04-08T23:26:47Z"}, "committer": {"name": "IceSentry", "email": "c.giguere42@gmail.com", "date": "2020-04-08T23:26:47Z"}, "message": "better `&mut ` and `&` matching", "tree": {"sha": "bbd8b29272bdc63c9f7ee9e904b7432b8485451b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bbd8b29272bdc63c9f7ee9e904b7432b8485451b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cba694c60276f7543ee9ed1dddf3fe93209f527f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cba694c60276f7543ee9ed1dddf3fe93209f527f", "html_url": "https://github.com/rust-lang/rust/commit/cba694c60276f7543ee9ed1dddf3fe93209f527f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cba694c60276f7543ee9ed1dddf3fe93209f527f/comments", "author": {"login": "IceSentry", "id": 8348954, "node_id": "MDQ6VXNlcjgzNDg5NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8348954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IceSentry", "html_url": "https://github.com/IceSentry", "followers_url": "https://api.github.com/users/IceSentry/followers", "following_url": "https://api.github.com/users/IceSentry/following{/other_user}", "gists_url": "https://api.github.com/users/IceSentry/gists{/gist_id}", "starred_url": "https://api.github.com/users/IceSentry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IceSentry/subscriptions", "organizations_url": "https://api.github.com/users/IceSentry/orgs", "repos_url": "https://api.github.com/users/IceSentry/repos", "events_url": "https://api.github.com/users/IceSentry/events{/privacy}", "received_events_url": "https://api.github.com/users/IceSentry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "IceSentry", "id": 8348954, "node_id": "MDQ6VXNlcjgzNDg5NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8348954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IceSentry", "html_url": "https://github.com/IceSentry", "followers_url": "https://api.github.com/users/IceSentry/followers", "following_url": "https://api.github.com/users/IceSentry/following{/other_user}", "gists_url": "https://api.github.com/users/IceSentry/gists{/gist_id}", "starred_url": "https://api.github.com/users/IceSentry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IceSentry/subscriptions", "organizations_url": "https://api.github.com/users/IceSentry/orgs", "repos_url": "https://api.github.com/users/IceSentry/repos", "events_url": "https://api.github.com/users/IceSentry/events{/privacy}", "received_events_url": "https://api.github.com/users/IceSentry/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de6db0632228ae61f7ec1f87eaf520ccd4e46925", "url": "https://api.github.com/repos/rust-lang/rust/commits/de6db0632228ae61f7ec1f87eaf520ccd4e46925", "html_url": "https://github.com/rust-lang/rust/commit/de6db0632228ae61f7ec1f87eaf520ccd4e46925"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "1da61e4c4831e7486392dd4cf02d977b6e74d90d", "filename": "crates/ra_ide/src/inlay_hints.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/cba694c60276f7543ee9ed1dddf3fe93209f527f/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cba694c60276f7543ee9ed1dddf3fe93209f527f/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs?ref=cba694c60276f7543ee9ed1dddf3fe93209f527f", "patch": "@@ -236,13 +236,13 @@ fn should_show_param_hint(\n     argument: &ast::Expr,\n ) -> bool {\n     let argument_string = {\n-        let arg_string = argument.syntax().to_string();\n-        let arg_split: Vec<char> = arg_string.chars().collect();\n-        match arg_split.as_slice() {\n-            ['&', 'm', 'u', 't', ' ', arg_name @ ..] => arg_name.into_iter().collect::<String>(),\n-            ['&', arg_name @ ..] => arg_name.into_iter().collect::<String>(),\n-            _ => arg_string,\n+        let mut arg_string = argument.syntax().to_string();\n+        if arg_string.get(0..5) == Some(\"&mut \") {\n+            arg_string = arg_string[5..].to_string();\n+        } else if arg_string.get(0..1) == Some(\"&\") {\n+            arg_string = arg_string[1..].to_string();\n         }\n+        arg_string\n     };\n     if param_name.is_empty()\n         || argument_string.ends_with(&param_name)"}]}