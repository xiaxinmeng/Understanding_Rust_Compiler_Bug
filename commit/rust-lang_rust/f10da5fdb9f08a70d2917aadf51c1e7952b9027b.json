{"sha": "f10da5fdb9f08a70d2917aadf51c1e7952b9027b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxMGRhNWZkYjlmMDhhNzBkMjkxN2FhZGY1MWMxZTc5NTJiOTAyN2I=", "commit": {"author": {"name": "Brad Campbell", "email": "bradjc5@gmail.com", "date": "2018-06-23T21:32:25Z"}, "committer": {"name": "Brad Campbell", "email": "bradjc5@gmail.com", "date": "2018-06-23T21:32:25Z"}, "message": "build: llvm-tools: replace compiler.host\n\nUse `target` instead.", "tree": {"sha": "1c2e46696e3eaf7c390e65208fbc22ccb9c55212", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c2e46696e3eaf7c390e65208fbc22ccb9c55212"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f10da5fdb9f08a70d2917aadf51c1e7952b9027b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEnxqH+pQGiDPBs9tsGTuB0y9xMloFAlsuvHkACgkQGTuB0y9x\nMlp+ihAAkPah/kfWUg7dBF2WQeJH7xTPNcL0pQ5SL1lsE7A5vn3EQjf8myDm8Aim\nF8Uq2MwDTYZ4w37tRQ/w2miFiEKAZMA6K0RrQZAD9u1snP5ZWJOr5eDc3p+qh/kV\n45q5J67LmLQHXYGzL4K+GVSb40D6vqKFrdoz05kzne1jo7JKBV6mvy86n+Bq9GJ4\npuA4ShLvLKuymt8T/LiYRxEbFYxM8GZA9GkvnC5oq8sTyMsZe2eA9lgft1CGTREx\nsS1yIcEJsg9xQt2YTYNSrkKxHMD2l87MQRfyqa8ieTqzzYw73PoCSPdHPkhobR40\nf/9sQjWfwahNrlTSiMI0JuxnPEmlWU1tAJoH0Fe2PF15j4Gnq4xjkYRjJ4S6sHkp\npnflYQsXRSFfhShDtqA4VbOQkQ3I0fOIOvkO4N4BIbfF0jGgk+9J/eUyisbv4Oug\nTV2SCbtz0suMMXRY0JXQ6D0Z1fOANLfBv0SA5ZKpHGFC4tizipFbHLb5vgGN1hKa\nODqzSYqs30vM9MS8woCKhXUWJgqsvR/I1W3gWdoBeKV1HtWfaOxbsaSuyXAo9jIH\nGJUr3b9fnfuyRkIpVO9lk7bs67k6OfTQKWnz93VKg7qaztlwXTBucQ3rc5ISLVR1\n3nfclxPPrsYS9DKBodSF/PQqXe1ZQ3OybID0j9DjJDDO2Tfy6K0=\n=qDa1\n-----END PGP SIGNATURE-----", "payload": "tree 1c2e46696e3eaf7c390e65208fbc22ccb9c55212\nparent 5fc87ebbba343646bdf850ce03802bf6826b507e\nauthor Brad Campbell <bradjc5@gmail.com> 1529789545 -0400\ncommitter Brad Campbell <bradjc5@gmail.com> 1529789545 -0400\n\nbuild: llvm-tools: replace compiler.host\n\nUse `target` instead.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f10da5fdb9f08a70d2917aadf51c1e7952b9027b", "html_url": "https://github.com/rust-lang/rust/commit/f10da5fdb9f08a70d2917aadf51c1e7952b9027b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f10da5fdb9f08a70d2917aadf51c1e7952b9027b/comments", "author": {"login": "bradjc", "id": 1467890, "node_id": "MDQ6VXNlcjE0Njc4OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1467890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bradjc", "html_url": "https://github.com/bradjc", "followers_url": "https://api.github.com/users/bradjc/followers", "following_url": "https://api.github.com/users/bradjc/following{/other_user}", "gists_url": "https://api.github.com/users/bradjc/gists{/gist_id}", "starred_url": "https://api.github.com/users/bradjc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bradjc/subscriptions", "organizations_url": "https://api.github.com/users/bradjc/orgs", "repos_url": "https://api.github.com/users/bradjc/repos", "events_url": "https://api.github.com/users/bradjc/events{/privacy}", "received_events_url": "https://api.github.com/users/bradjc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bradjc", "id": 1467890, "node_id": "MDQ6VXNlcjE0Njc4OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1467890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bradjc", "html_url": "https://github.com/bradjc", "followers_url": "https://api.github.com/users/bradjc/followers", "following_url": "https://api.github.com/users/bradjc/following{/other_user}", "gists_url": "https://api.github.com/users/bradjc/gists{/gist_id}", "starred_url": "https://api.github.com/users/bradjc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bradjc/subscriptions", "organizations_url": "https://api.github.com/users/bradjc/orgs", "repos_url": "https://api.github.com/users/bradjc/repos", "events_url": "https://api.github.com/users/bradjc/events{/privacy}", "received_events_url": "https://api.github.com/users/bradjc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5fc87ebbba343646bdf850ce03802bf6826b507e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5fc87ebbba343646bdf850ce03802bf6826b507e", "html_url": "https://github.com/rust-lang/rust/commit/5fc87ebbba343646bdf850ce03802bf6826b507e"}], "stats": {"total": 22, "additions": 7, "deletions": 15}, "files": [{"sha": "4fd6c81e5978682ec19ea71b65387362bfe3cabd", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 7, "deletions": 15, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f10da5fdb9f08a70d2917aadf51c1e7952b9027b/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f10da5fdb9f08a70d2917aadf51c1e7952b9027b/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=f10da5fdb9f08a70d2917aadf51c1e7952b9027b", "patch": "@@ -1303,11 +1303,7 @@ impl Step for Extended {\n         let cargo_installer = builder.ensure(Cargo { stage, target });\n         let rustfmt_installer = builder.ensure(Rustfmt { stage, target });\n         let rls_installer = builder.ensure(Rls { stage, target });\n-        let llvm_tools_installer = builder.ensure(LlvmTools {\n-            stage,\n-            target,\n-            compiler: builder.compiler(stage, target)\n-        });\n+        let llvm_tools_installer = builder.ensure(LlvmTools { stage, target });\n         let mingw_installer = builder.ensure(Mingw { host: target });\n         let analysis_installer = builder.ensure(Analysis {\n             compiler: builder.compiler(stage, self.host),\n@@ -1761,7 +1757,6 @@ impl Step for HashSign {\n #[derive(Clone, Debug, Eq, Hash, PartialEq)]\n pub struct LlvmTools {\n     pub stage: u32,\n-    pub compiler: Compiler,\n     pub target: Interned<String>,\n }\n \n@@ -1776,19 +1771,16 @@ impl Step for LlvmTools {\n     fn make_run(run: RunConfig) {\n         run.builder.ensure(LlvmTools {\n             stage: run.builder.top_stage,\n-            compiler: run.builder.compiler(run.builder.top_stage, run.target),\n             target: run.target,\n         });\n     }\n \n     fn run(self, builder: &Builder) -> Option<PathBuf> {\n-        let compiler = self.compiler;\n-        let host = compiler.host;\n-\n         let stage = self.stage;\n+        let target = self.target;\n         assert!(builder.config.extended);\n \n-        builder.info(&format!(\"Dist LlvmTools stage{} ({})\", stage, host));\n+        builder.info(&format!(\"Dist LlvmTools stage{} ({})\", stage, target));\n         let src = builder.src.join(\"src/llvm\");\n         let name = pkgname(builder, \"llvm-tools\");\n \n@@ -1800,9 +1792,9 @@ impl Step for LlvmTools {\n         // Prepare the image directory\n         for tool in LLVM_TOOLS {\n             let exe = builder\n-                .llvm_out(host)\n+                .llvm_out(target)\n                 .join(\"bin\")\n-                .join(exe(tool, &compiler.host));\n+                .join(exe(tool, &target));\n             builder.install(&exe, &image.join(\"bin\"), 0o755);\n         }\n \n@@ -1824,12 +1816,12 @@ impl Step for LlvmTools {\n             .arg(\"--work-dir\").arg(&tmpdir(builder))\n             .arg(\"--output-dir\").arg(&distdir(builder))\n             .arg(\"--non-installed-overlay\").arg(&overlay)\n-            .arg(format!(\"--package-name={}-{}\", name, host))\n+            .arg(format!(\"--package-name={}-{}\", name, target))\n             .arg(\"--legacy-manifest-dirs=rustlib,cargo\")\n             .arg(\"--component-name=llvm-tools\");\n \n \n         builder.run(&mut cmd);\n-        Some(distdir(builder).join(format!(\"{}-{}.tar.gz\", name, host)))\n+        Some(distdir(builder).join(format!(\"{}-{}.tar.gz\", name, target)))\n     }\n }"}]}