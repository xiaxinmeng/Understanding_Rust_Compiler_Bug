{"sha": "a0d8a324eb2ad2f4660c3ab065aa35de306cd822", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwZDhhMzI0ZWIyYWQyZjQ2NjBjM2FiMDY1YWEzNWRlMzA2Y2Q4MjI=", "commit": {"author": {"name": "Frank Steffahn", "email": "frank.steffahn@stu.uni-kiel.de", "date": "2021-06-01T00:21:26Z"}, "committer": {"name": "Frank Steffahn", "email": "frank.steffahn@stu.uni-kiel.de", "date": "2021-07-28T12:33:28Z"}, "message": "Remove unsound TrustedRandomAccess implementations\n\nRemoves the implementations that depend on the user-definable trait `Copy`.", "tree": {"sha": "f389a0c400feed5ce9535e9264a98ea5e7caf015", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f389a0c400feed5ce9535e9264a98ea5e7caf015"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a0d8a324eb2ad2f4660c3ab065aa35de306cd822", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a0d8a324eb2ad2f4660c3ab065aa35de306cd822", "html_url": "https://github.com/rust-lang/rust/commit/a0d8a324eb2ad2f4660c3ab065aa35de306cd822", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a0d8a324eb2ad2f4660c3ab065aa35de306cd822/comments", "author": {"login": "steffahn", "id": 3986214, "node_id": "MDQ6VXNlcjM5ODYyMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3986214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steffahn", "html_url": "https://github.com/steffahn", "followers_url": "https://api.github.com/users/steffahn/followers", "following_url": "https://api.github.com/users/steffahn/following{/other_user}", "gists_url": "https://api.github.com/users/steffahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/steffahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steffahn/subscriptions", "organizations_url": "https://api.github.com/users/steffahn/orgs", "repos_url": "https://api.github.com/users/steffahn/repos", "events_url": "https://api.github.com/users/steffahn/events{/privacy}", "received_events_url": "https://api.github.com/users/steffahn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steffahn", "id": 3986214, "node_id": "MDQ6VXNlcjM5ODYyMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3986214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steffahn", "html_url": "https://github.com/steffahn", "followers_url": "https://api.github.com/users/steffahn/followers", "following_url": "https://api.github.com/users/steffahn/following{/other_user}", "gists_url": "https://api.github.com/users/steffahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/steffahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steffahn/subscriptions", "organizations_url": "https://api.github.com/users/steffahn/orgs", "repos_url": "https://api.github.com/users/steffahn/repos", "events_url": "https://api.github.com/users/steffahn/events{/privacy}", "received_events_url": "https://api.github.com/users/steffahn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eba3228b2a9875d268ff3990903d04e19f6cdb0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/eba3228b2a9875d268ff3990903d04e19f6cdb0c", "html_url": "https://github.com/rust-lang/rust/commit/eba3228b2a9875d268ff3990903d04e19f6cdb0c"}], "stats": {"total": 31, "additions": 1, "deletions": 30}, "files": [{"sha": "5ea1957200b97ad9fed11f2b588ba573cc06cc8f", "filename": "library/alloc/src/vec/into_iter.rs", "status": "modified", "additions": 1, "deletions": 30, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/a0d8a324eb2ad2f4660c3ab065aa35de306cd822/library%2Falloc%2Fsrc%2Fvec%2Finto_iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0d8a324eb2ad2f4660c3ab065aa35de306cd822/library%2Falloc%2Fsrc%2Fvec%2Finto_iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Finto_iter.rs?ref=a0d8a324eb2ad2f4660c3ab065aa35de306cd822", "patch": "@@ -2,7 +2,7 @@ use crate::alloc::{Allocator, Global};\n use crate::raw_vec::RawVec;\n use core::fmt;\n use core::intrinsics::arith_offset;\n-use core::iter::{FusedIterator, InPlaceIterable, SourceIter, TrustedLen, TrustedRandomAccess};\n+use core::iter::{FusedIterator, InPlaceIterable, SourceIter, TrustedLen};\n use core::marker::PhantomData;\n use core::mem::{self};\n use core::ptr::{self, NonNull};\n@@ -162,24 +162,6 @@ impl<T, A: Allocator> Iterator for IntoIter<T, A> {\n     fn count(self) -> usize {\n         self.len()\n     }\n-\n-    #[doc(hidden)]\n-    unsafe fn __iterator_get_unchecked(&mut self, i: usize) -> Self::Item\n-    where\n-        Self: TrustedRandomAccess,\n-    {\n-        // SAFETY: the caller must guarantee that `i` is in bounds of the\n-        // `Vec<T>`, so `i` cannot overflow an `isize`, and the `self.ptr.add(i)`\n-        // is guaranteed to pointer to an element of the `Vec<T>` and\n-        // thus guaranteed to be valid to dereference.\n-        //\n-        // Also note the implementation of `Self: TrustedRandomAccess` requires\n-        // that `T: Copy` so reading elements from the buffer doesn't invalidate\n-        // them for `Drop`.\n-        unsafe {\n-            if mem::size_of::<T>() == 0 { mem::zeroed() } else { ptr::read(self.ptr.add(i)) }\n-        }\n-    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -215,17 +197,6 @@ impl<T, A: Allocator> FusedIterator for IntoIter<T, A> {}\n #[unstable(feature = \"trusted_len\", issue = \"37572\")]\n unsafe impl<T, A: Allocator> TrustedLen for IntoIter<T, A> {}\n \n-#[doc(hidden)]\n-#[unstable(issue = \"none\", feature = \"std_internals\")]\n-// T: Copy as approximation for !Drop since get_unchecked does not advance self.ptr\n-// and thus we can't implement drop-handling\n-unsafe impl<T, A: Allocator> TrustedRandomAccess for IntoIter<T, A>\n-where\n-    T: Copy,\n-{\n-    const MAY_HAVE_SIDE_EFFECT: bool = false;\n-}\n-\n #[cfg(not(no_global_oom_handling))]\n #[stable(feature = \"vec_into_iter_clone\", since = \"1.8.0\")]\n impl<T: Clone, A: Allocator + Clone> Clone for IntoIter<T, A> {"}]}