{"sha": "35c60ce6693500b2c86bf24de2526b3adcc7237d", "node_id": "C_kwDOAAsO6NoAKDM1YzYwY2U2NjkzNTAwYjJjODZiZjI0ZGUyNTI2YjNhZGNjNzIzN2Q", "commit": {"author": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2022-11-12T00:48:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-12T00:48:46Z"}, "message": "Merge pull request #314 from rust-lang/try-from-slice\n\nimpl TryFrom<&[T]> for Simd", "tree": {"sha": "dcf0f788a43e0439954dd78a79f7ddee96f26f57", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dcf0f788a43e0439954dd78a79f7ddee96f26f57"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35c60ce6693500b2c86bf24de2526b3adcc7237d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjbu1uCRBK7hj4Ov3rIwAAYHkIADWmFonqi5pki4VQ1F6NNYfy\nmN6X1xABdmQK5i7sK3YblQ0ljrMDMDgA5arBlnuMvAVlAvAq29oe6nb/m4oaom+w\nLZZHQEkIGKnFUqf6kHeO+PfSoLtbYg7RVJmoXsk1wl6c9LcTjZFMlj5VKhlkIZ+L\ncoyooXOVeYHZsgx8ajVy80qWYp27dxvWDkSmieLA5nAn15GmaSk84PxFi+bDbKJs\nF27gWH+VShvWLlu6xbdrn0s8iBWpuqaIVidDqNDlNoxjnHxtIKtChYKJ487w9uCu\nMveS1Ly/y99iWzm7GdPEVLzcjo33LWlEjcP23UmjAfSwNmsOcV+9a0oL+Jc0E0I=\n=FjFZ\n-----END PGP SIGNATURE-----\n", "payload": "tree dcf0f788a43e0439954dd78a79f7ddee96f26f57\nparent ecc28752e871af8886a49fdefdf4733a2dae8aac\nparent 9dc690c48265bae58ca6e307d8f35a1f74b921e3\nauthor Caleb Zulawski <caleb.zulawski@gmail.com> 1668214126 -0500\ncommitter GitHub <noreply@github.com> 1668214126 -0500\n\nMerge pull request #314 from rust-lang/try-from-slice\n\nimpl TryFrom<&[T]> for Simd"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35c60ce6693500b2c86bf24de2526b3adcc7237d", "html_url": "https://github.com/rust-lang/rust/commit/35c60ce6693500b2c86bf24de2526b3adcc7237d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35c60ce6693500b2c86bf24de2526b3adcc7237d/comments", "author": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ecc28752e871af8886a49fdefdf4733a2dae8aac", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecc28752e871af8886a49fdefdf4733a2dae8aac", "html_url": "https://github.com/rust-lang/rust/commit/ecc28752e871af8886a49fdefdf4733a2dae8aac"}, {"sha": "9dc690c48265bae58ca6e307d8f35a1f74b921e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/9dc690c48265bae58ca6e307d8f35a1f74b921e3", "html_url": "https://github.com/rust-lang/rust/commit/9dc690c48265bae58ca6e307d8f35a1f74b921e3"}], "stats": {"total": 49, "additions": 49, "deletions": 0}, "files": [{"sha": "0095ed1648f21ce0abcbfe2c3d3a862c7de6994d", "filename": "crates/core_simd/src/vector.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/35c60ce6693500b2c86bf24de2526b3adcc7237d/crates%2Fcore_simd%2Fsrc%2Fvector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35c60ce6693500b2c86bf24de2526b3adcc7237d/crates%2Fcore_simd%2Fsrc%2Fvector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvector.rs?ref=35c60ce6693500b2c86bf24de2526b3adcc7237d", "patch": "@@ -650,6 +650,30 @@ where\n     }\n }\n \n+impl<T, const LANES: usize> TryFrom<&[T]> for Simd<T, LANES>\n+where\n+    LaneCount<LANES>: SupportedLaneCount,\n+    T: SimdElement,\n+{\n+    type Error = core::array::TryFromSliceError;\n+\n+    fn try_from(slice: &[T]) -> Result<Self, Self::Error> {\n+        Ok(Self::from_array(slice.try_into()?))\n+    }\n+}\n+\n+impl<T, const LANES: usize> TryFrom<&mut [T]> for Simd<T, LANES>\n+where\n+    LaneCount<LANES>: SupportedLaneCount,\n+    T: SimdElement,\n+{\n+    type Error = core::array::TryFromSliceError;\n+\n+    fn try_from(slice: &mut [T]) -> Result<Self, Self::Error> {\n+        Ok(Self::from_array(slice.try_into()?))\n+    }\n+}\n+\n mod sealed {\n     pub trait Sealed {}\n }"}, {"sha": "189c18c6039a0c6de6d09defeecf5d7d1a1a644a", "filename": "crates/core_simd/tests/try_from_slice.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/35c60ce6693500b2c86bf24de2526b3adcc7237d/crates%2Fcore_simd%2Ftests%2Ftry_from_slice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35c60ce6693500b2c86bf24de2526b3adcc7237d/crates%2Fcore_simd%2Ftests%2Ftry_from_slice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Ftests%2Ftry_from_slice.rs?ref=35c60ce6693500b2c86bf24de2526b3adcc7237d", "patch": "@@ -0,0 +1,25 @@\n+#![feature(portable_simd)]\n+\n+#[cfg(target_arch = \"wasm32\")]\n+use wasm_bindgen_test::*;\n+\n+#[cfg(target_arch = \"wasm32\")]\n+wasm_bindgen_test_configure!(run_in_browser);\n+\n+use core_simd::i32x4;\n+\n+#[test]\n+#[cfg_attr(target_arch = \"wasm32\", wasm_bindgen_test)]\n+fn try_from_slice() {\n+    // Equal length\n+    assert_eq!(\n+        i32x4::try_from([1, 2, 3, 4].as_slice()).unwrap(),\n+        i32x4::from_array([1, 2, 3, 4])\n+    );\n+\n+    // Slice length > vector length\n+    assert!(i32x4::try_from([1, 2, 3, 4, 5].as_slice()).is_err());\n+\n+    // Slice length < vector length\n+    assert!(i32x4::try_from([1, 2, 3].as_slice()).is_err());\n+}"}]}