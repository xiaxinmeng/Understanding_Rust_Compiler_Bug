{"sha": "724f6a11b3b9ea7c267c8f009f2e6958e6286e5f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyNGY2YTExYjNiOWVhN2MyNjdjOGYwMDlmMmU2OTU4ZTYyODZlNWY=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-04-07T23:15:32Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-04-14T19:45:18Z"}, "message": "Update rustdoc to new ExternEntry format", "tree": {"sha": "2d91a87ef64400a9db06745d8bc44b613962405b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d91a87ef64400a9db06745d8bc44b613962405b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/724f6a11b3b9ea7c267c8f009f2e6958e6286e5f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAlyzjc4ACgkQtAh+UQ6Y\nsWQVLBAAtEZwUUs22ZgydeJPzxl6QCFlTQgUdto6ya+VrFsUlTsHIUFdX0s9apDw\ngMnUaaMPsnNqwlcPN2N+BbKP0T03vElJnxnUwM2vF8PrqmAX0qlp3GQxfLzRR/Nn\n+Y7DNphwAYh6c0/00n8rDiAa+wGuLXEE3IHZ0UWPtC0j+7a4rxsO4D8uX2MSN/WO\n2x4LBu600brQFuR1NBCphLDPXUWPvnj+lJlx271GiL8/Q5z5uUBJFUndcQVNxzMQ\nXA43YCktbqzXiNIMQkZIYIW8S+6/vlszo5+N82enNU5TTua3lN+vK/dUVEbey06v\nqE5y/wLwoFqlgHKRHnj9plrZfuKG5IQewgidsRzGXiXiSeOC9NcnLjTxQ52qIstf\n9kEz73408dGnp0iXSd3OmSihDqeCasI3dYQdpYOaiE8UMMaMY1kZ+EUPJnq42Isa\nyiezeki/HQoU7VzwFFmtRYW/LTVPCNYoo2/StAwvg3GQxZQTDM9OO08Wt1GsrUdq\npkinofBx4OWXtywkRhVFsEdLUOiz9FV9UsshTNW39U43Et1Yw31Evtgf3l75fbwh\nKuC2DpZWwXEICJfobe/M6OzLFDCvMkzl6bJPD6rpuf5LBMiRLMmfPGUC/H8HODQn\nBk7UbGTs8WWKqDFJzYz+0K+apGcoV0SuwAzeU+79RxF0Ryg5ur0=\n=4vkh\n-----END PGP SIGNATURE-----", "payload": "tree 2d91a87ef64400a9db06745d8bc44b613962405b\nparent 482b77a1470681da08748f1461c598eb8e48615b\nauthor Aaron Hill <aa1ronham@gmail.com> 1554678932 -0400\ncommitter Aaron Hill <aa1ronham@gmail.com> 1555271118 -0400\n\nUpdate rustdoc to new ExternEntry format\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/724f6a11b3b9ea7c267c8f009f2e6958e6286e5f", "html_url": "https://github.com/rust-lang/rust/commit/724f6a11b3b9ea7c267c8f009f2e6958e6286e5f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/724f6a11b3b9ea7c267c8f009f2e6958e6286e5f/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "482b77a1470681da08748f1461c598eb8e48615b", "url": "https://api.github.com/repos/rust-lang/rust/commits/482b77a1470681da08748f1461c598eb8e48615b", "html_url": "https://github.com/rust-lang/rust/commit/482b77a1470681da08748f1461c598eb8e48615b"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "8a669cad514b54f51e3cf608be463c664861487a", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/724f6a11b3b9ea7c267c8f009f2e6958e6286e5f/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/724f6a11b3b9ea7c267c8f009f2e6958e6286e5f/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=724f6a11b3b9ea7c267c8f009f2e6958e6286e5f", "patch": "@@ -578,7 +578,7 @@ fn parse_extern_html_roots(\n /// error message.\n // FIXME(eddyb) This shouldn't be duplicated with `rustc::session`.\n fn parse_externs(matches: &getopts::Matches) -> Result<Externs, String> {\n-    let mut externs: BTreeMap<_, BTreeSet<_>> = BTreeMap::new();\n+    let mut externs: BTreeMap<_, ExternEntry> = BTreeMap::new();\n     for arg in &matches.opt_strs(\"extern\") {\n         let mut parts = arg.splitn(2, '=');\n         let name = parts.next().ok_or(\"--extern value must not be empty\".to_string())?;\n@@ -589,7 +589,13 @@ fn parse_externs(matches: &getopts::Matches) -> Result<Externs, String> {\n         }\n         let name = name.to_string();\n         // For Rustdoc purposes, we can treat all externs as public\n-        externs.entry(name).or_default().insert(ExternEntry { location, public: true });\n+        externs.entry(name)\n+            .and_modify(|e| { e.locations.insert(location.clone()); } )\n+            .or_insert_with(|| {\n+                let mut locations = BTreeSet::new();\n+                locations.insert(location);\n+                ExternEntry { locations, is_private_dep: false }\n+            });\n     }\n     Ok(Externs::new(externs))\n }"}]}