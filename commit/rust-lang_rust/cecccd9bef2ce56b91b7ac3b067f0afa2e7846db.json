{"sha": "cecccd9bef2ce56b91b7ac3b067f0afa2e7846db", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlY2NjZDliZWYyY2U1NmI5MWI3YWMzYjA2N2YwYWZhMmU3ODQ2ZGI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-03-17T15:53:02Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-03-30T11:55:29Z"}, "message": "whitespace changes, debug message", "tree": {"sha": "d969b7bc7a6e29ce9b97eb83065210996386c5f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d969b7bc7a6e29ce9b97eb83065210996386c5f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cecccd9bef2ce56b91b7ac3b067f0afa2e7846db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cecccd9bef2ce56b91b7ac3b067f0afa2e7846db", "html_url": "https://github.com/rust-lang/rust/commit/cecccd9bef2ce56b91b7ac3b067f0afa2e7846db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cecccd9bef2ce56b91b7ac3b067f0afa2e7846db/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "140165f22e5614a4f14e9f7175c5607dfaf12363", "url": "https://api.github.com/repos/rust-lang/rust/commits/140165f22e5614a4f14e9f7175c5607dfaf12363", "html_url": "https://github.com/rust-lang/rust/commit/140165f22e5614a4f14e9f7175c5607dfaf12363"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "21eaa0c2120d565200ee157e23dd8716d9270abd", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cecccd9bef2ce56b91b7ac3b067f0afa2e7846db/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cecccd9bef2ce56b91b7ac3b067f0afa2e7846db/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=cecccd9bef2ce56b91b7ac3b067f0afa2e7846db", "patch": "@@ -1526,6 +1526,8 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n         if self.diverges.get() == Diverges::Always {\n             self.diverges.set(Diverges::WarnedAlways);\n \n+            debug!(\"warn_if_unreachable: id={:?} span={:?} kind={}\", id, span, kind);\n+\n             self.tables.borrow_mut().lints.add_lint(\n                 lint::builtin::UNREACHABLE_CODE,\n                 id, span,\n@@ -2545,8 +2547,10 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                     Expectation::rvalue_hint(self, ty)\n                 });\n \n-                let checked_ty = self.check_expr_with_expectation(&arg,\n-                                        expected.unwrap_or(ExpectHasType(formal_ty)));\n+                let checked_ty = self.check_expr_with_expectation(\n+                    &arg,\n+                    expected.unwrap_or(ExpectHasType(formal_ty)));\n+\n                 // 2. Coerce to the most detailed type that could be coerced\n                 //    to, which is `expected_ty` if `rvalue_hint` returns an\n                 //    `ExpectHasType(expected_ty)`, or the `formal_ty` otherwise."}]}