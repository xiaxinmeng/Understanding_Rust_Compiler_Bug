{"sha": "8732bf5db372e3b9297e854ce71851bbc6a90893", "node_id": "C_kwDOAAsO6NoAKDg3MzJiZjVkYjM3MmUzYjkyOTdlODU0Y2U3MTg1MWJiYzZhOTA4OTM", "commit": {"author": {"name": "Jakob Degen", "email": "jakob.e.degen@gmail.com", "date": "2022-04-09T14:00:19Z"}, "committer": {"name": "Jakob Degen", "email": "jakob.e.degen@gmail.com", "date": "2022-04-11T19:56:04Z"}, "message": "Remove rule that place loads may not happen with variant index set", "tree": {"sha": "2bb40ad9fa593e83be209b1ec6aa828415794bdc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2bb40ad9fa593e83be209b1ec6aa828415794bdc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8732bf5db372e3b9297e854ce71851bbc6a90893", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8732bf5db372e3b9297e854ce71851bbc6a90893", "html_url": "https://github.com/rust-lang/rust/commit/8732bf5db372e3b9297e854ce71851bbc6a90893", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8732bf5db372e3b9297e854ce71851bbc6a90893/comments", "author": {"login": "JakobDegen", "id": 51179609, "node_id": "MDQ6VXNlcjUxMTc5NjA5", "avatar_url": "https://avatars.githubusercontent.com/u/51179609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakobDegen", "html_url": "https://github.com/JakobDegen", "followers_url": "https://api.github.com/users/JakobDegen/followers", "following_url": "https://api.github.com/users/JakobDegen/following{/other_user}", "gists_url": "https://api.github.com/users/JakobDegen/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakobDegen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakobDegen/subscriptions", "organizations_url": "https://api.github.com/users/JakobDegen/orgs", "repos_url": "https://api.github.com/users/JakobDegen/repos", "events_url": "https://api.github.com/users/JakobDegen/events{/privacy}", "received_events_url": "https://api.github.com/users/JakobDegen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JakobDegen", "id": 51179609, "node_id": "MDQ6VXNlcjUxMTc5NjA5", "avatar_url": "https://avatars.githubusercontent.com/u/51179609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakobDegen", "html_url": "https://github.com/JakobDegen", "followers_url": "https://api.github.com/users/JakobDegen/followers", "following_url": "https://api.github.com/users/JakobDegen/following{/other_user}", "gists_url": "https://api.github.com/users/JakobDegen/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakobDegen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakobDegen/subscriptions", "organizations_url": "https://api.github.com/users/JakobDegen/orgs", "repos_url": "https://api.github.com/users/JakobDegen/repos", "events_url": "https://api.github.com/users/JakobDegen/events{/privacy}", "received_events_url": "https://api.github.com/users/JakobDegen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4bce639c3b98ceb9e8a8896f9d4a7f7d6db79ba1", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bce639c3b98ceb9e8a8896f9d4a7f7d6db79ba1", "html_url": "https://github.com/rust-lang/rust/commit/4bce639c3b98ceb9e8a8896f9d4a7f7d6db79ba1"}], "stats": {"total": 16, "additions": 6, "deletions": 10}, "files": [{"sha": "01af95851357e481da64e819bfc32bb2e785ca08", "filename": "compiler/rustc_const_eval/src/transform/validate.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8732bf5db372e3b9297e854ce71851bbc6a90893/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8732bf5db372e3b9297e854ce71851bbc6a90893/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs?ref=8732bf5db372e3b9297e854ce71851bbc6a90893", "patch": "@@ -246,12 +246,9 @@ impl<'a, 'tcx> Visitor<'tcx> for TypeChecker<'a, 'tcx> {\n         self.super_projection_elem(local, proj_base, elem, context, location);\n     }\n \n-    fn visit_place(&mut self, place: &Place<'tcx>, _: PlaceContext, location: Location) {\n+    fn visit_place(&mut self, place: &Place<'tcx>, _: PlaceContext, _: Location) {\n         // Set off any `bug!`s in the type computation code\n-        let ty = place.ty(&self.body.local_decls, self.tcx);\n-        if ty.variant_index.is_some() {\n-            self.fail(location, \"Top level places may not have their variant index set!\");\n-        }\n+        let _ = place.ty(&self.body.local_decls, self.tcx);\n     }\n \n     fn visit_rvalue(&mut self, rvalue: &Rvalue<'tcx>, location: Location) {"}, {"sha": "9f7832c8a64a2486e6435aa02238732941a28996", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8732bf5db372e3b9297e854ce71851bbc6a90893/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8732bf5db372e3b9297e854ce71851bbc6a90893/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=8732bf5db372e3b9297e854ce71851bbc6a90893", "patch": "@@ -1931,7 +1931,7 @@ pub struct CopyNonOverlapping<'tcx> {\n ///    pointee type is unsized, the pointer additionally stored the value of the metadata.\n ///\n /// Computing a place may cause UB. One possibility is that the pointer used for a `Deref` may not\n-/// be suitably aligned. Another possibility is that the place is not in bouns, meaning it does not\n+/// be suitably aligned. Another possibility is that the place is not in bounds, meaning it does not\n /// point to an actual allocation.\n ///\n /// However, if this is actually UB and when the UB kicks in is undecided. This is being discussed\n@@ -2325,10 +2325,9 @@ pub struct SourceScopeLocalData {\n /// This is what is implemented in miri today. Are these the semantics we want for MIR? Is this\n /// something we can even decide without knowing more about Rust's memory model?\n ///\n-/// Loading a place that has its variant index set is not well-formed. However, note that this rule\n-/// only applies to places appearing in MIR bodies. Many functions, such as [`Place::ty`], still\n-/// accept such a place. If you write a function for which it might be ambiguous whether such a\n-/// thing is accepted, make sure to document your choice clearly.\n+/// **Needs clarifiation:** Is loading a place that has its variant index set well-formed? Miri\n+/// currently implements it, but it seems like this may be something to check against in the\n+/// validator.\n #[derive(Clone, PartialEq, TyEncodable, TyDecodable, Hash, HashStable)]\n pub enum Operand<'tcx> {\n     /// Creates a value by loading the given place. The type of the place must be `Copy`"}]}