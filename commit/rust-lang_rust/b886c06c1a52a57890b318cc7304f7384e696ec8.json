{"sha": "b886c06c1a52a57890b318cc7304f7384e696ec8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4ODZjMDZjMWE1MmE1Nzg5MGIzMThjYzczMDRmNzM4NGU2OTZlYzg=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2020-06-13T16:22:49Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2020-06-23T12:05:53Z"}, "message": "Fix fallout", "tree": {"sha": "2a58fa09c379fe3b2cf31f5df35bd35889508133", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a58fa09c379fe3b2cf31f5df35bd35889508133"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b886c06c1a52a57890b318cc7304f7384e696ec8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEqv54U47RUUXZfOLnLO/Nsn7QvnkFAl7x8CEACgkQLO/Nsn7Q\nvnnN6g/7BMEHHqJHnCkEW5EzjgoZcwBioI7Eci6FTwa8JE9GL/6l20jkk59QPOAp\ntr0A+bBYTXsFm44+TjrcOkM50zmkBTMmBB5ywHIIbcONvF2XfPFhESianGaAJoFk\n/AyPivhnU9Ylp9Kb1fSWckbKGGC3N0GbsuVKUTkvLXtEdQZMAUHj5RGjcxwUkvoY\nz7o9es+x2Ji1djmPM9lrlDuOquCUQ/YmQvLPeVhb4Jp/cxlBYlOPi8TwEJzGVKZe\nnBrxlHqNIwnYF5H9ZIFFzF5OVzOSw9vdp0u0i/MISY7TIQaJsheYKmZLtxaAloPa\nvrViDfwgPjyqOZGN8tdbeGpqkML7tW5fQq1Uncd+k5kNsbjBhk/wagGurKXkppYw\nmJo2yXNhDX+YtvYfQhkPfs0mAs9xsUbnG0B7bX00Rv0boQNBLmEn27Ho8/zzSBc6\nvxnSbYSXIcPNjm+3Mtdho/luXF/facOH601mdnNAcPd34wRwmLnkz+6DtsCtdvO1\nAM96pKfPMSx4dAR7LeRYj1V5ZaNuwC5rv5ZUMGv5S/XI6AnexP//nwt/wmd3wWom\nA7uy5ck5f48s4gijezIMSGdZWLD4qXxxsprkfnroohMmXxxpjertr6HyRRM7vd3A\nZASO5ZbJdDhz/6yGUe4gCYaLfx2ESEVp6lQJXCknDEaVATmLQaU=\n=daXK\n-----END PGP SIGNATURE-----", "payload": "tree 2a58fa09c379fe3b2cf31f5df35bd35889508133\nparent ed083cc95987ef37b7ed897f632b4a7a1baaff60\nauthor flip1995 <hello@philkrones.com> 1592065369 +0200\ncommitter flip1995 <hello@philkrones.com> 1592913953 +0200\n\nFix fallout\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b886c06c1a52a57890b318cc7304f7384e696ec8", "html_url": "https://github.com/rust-lang/rust/commit/b886c06c1a52a57890b318cc7304f7384e696ec8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b886c06c1a52a57890b318cc7304f7384e696ec8/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed083cc95987ef37b7ed897f632b4a7a1baaff60", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed083cc95987ef37b7ed897f632b4a7a1baaff60", "html_url": "https://github.com/rust-lang/rust/commit/ed083cc95987ef37b7ed897f632b4a7a1baaff60"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "9020b47a146fab6e851be0f800b3a63d456832dd", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b886c06c1a52a57890b318cc7304f7384e696ec8/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b886c06c1a52a57890b318cc7304f7384e696ec8/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=b886c06c1a52a57890b318cc7304f7384e696ec8", "patch": "@@ -1497,7 +1497,7 @@ struct MutatePairDelegate<'a, 'tcx> {\n     span_high: Option<Span>,\n }\n \n-impl<'a, 'tcx> Delegate<'tcx> for MutatePairDelegate<'a, 'tcx> {\n+impl<'tcx> Delegate<'tcx> for MutatePairDelegate<'_, 'tcx> {\n     fn consume(&mut self, _: &PlaceWithHirId<'tcx>, _: ConsumeMode) {}\n \n     fn borrow(&mut self, cmt: &PlaceWithHirId<'tcx>, bk: ty::BorrowKind) {\n@@ -1525,7 +1525,7 @@ impl<'a, 'tcx> Delegate<'tcx> for MutatePairDelegate<'a, 'tcx> {\n     }\n }\n \n-impl<'a, 'tcx> MutatePairDelegate<'a, 'tcx> {\n+impl MutatePairDelegate<'_, '_> {\n     fn mutation_span(&self) -> (Option<Span>, Option<Span>) {\n         (self.span_low, self.span_high)\n     }\n@@ -2292,7 +2292,7 @@ struct HasBreakOrReturnVisitor {\n     has_break_or_return: bool,\n }\n \n-impl<'a, 'tcx> Visitor<'tcx> for HasBreakOrReturnVisitor {\n+impl<'tcx> Visitor<'tcx> for HasBreakOrReturnVisitor {\n     type Map = Map<'tcx>;\n \n     fn visit_expr(&mut self, expr: &'tcx Expr<'_>) {"}, {"sha": "cf71c3144a2ebebac537498f2748d45ca23d1211", "filename": "clippy_lints/src/suspicious_trait_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b886c06c1a52a57890b318cc7304f7384e696ec8/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b886c06c1a52a57890b318cc7304f7384e696ec8/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs?ref=b886c06c1a52a57890b318cc7304f7384e696ec8", "patch": "@@ -184,7 +184,7 @@ struct BinaryExprVisitor {\n     in_binary_expr: bool,\n }\n \n-impl<'a, 'tcx> Visitor<'tcx> for BinaryExprVisitor {\n+impl<'tcx> Visitor<'tcx> for BinaryExprVisitor {\n     type Map = Map<'tcx>;\n \n     fn visit_expr(&mut self, expr: &'tcx hir::Expr<'_>) {"}, {"sha": "146ac4b09d5a4ff503bbf43ea09b52f3e4e5366a", "filename": "clippy_lints/src/trivially_copy_pass_by_ref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b886c06c1a52a57890b318cc7304f7384e696ec8/clippy_lints%2Fsrc%2Ftrivially_copy_pass_by_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b886c06c1a52a57890b318cc7304f7384e696ec8/clippy_lints%2Fsrc%2Ftrivially_copy_pass_by_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftrivially_copy_pass_by_ref.rs?ref=b886c06c1a52a57890b318cc7304f7384e696ec8", "patch": "@@ -58,7 +58,7 @@ pub struct TriviallyCopyPassByRef {\n     limit: u64,\n }\n \n-impl<'a, 'tcx> TriviallyCopyPassByRef {\n+impl<'tcx> TriviallyCopyPassByRef {\n     pub fn new(limit: Option<u64>, target: &SessionConfig) -> Self {\n         let limit = limit.unwrap_or_else(|| {\n             let bit_width = u64::from(target.ptr_width);"}, {"sha": "e919b1522d89a04f12c0140b2e45dfc9a8901a6c", "filename": "clippy_lints/src/utils/sugg.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b886c06c1a52a57890b318cc7304f7384e696ec8/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b886c06c1a52a57890b318cc7304f7384e696ec8/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fsugg.rs?ref=b886c06c1a52a57890b318cc7304f7384e696ec8", "patch": "@@ -509,7 +509,7 @@ fn indentation<T: LintContext>(cx: &T, span: Span) -> Option<String> {\n }\n \n /// Convenience extension trait for `DiagnosticBuilder`.\n-pub trait DiagnosticBuilderExt<'a, T: LintContext> {\n+pub trait DiagnosticBuilderExt<T: LintContext> {\n     /// Suggests to add an attribute to an item.\n     ///\n     /// Correctly handles indentation of the attribute and item.\n@@ -556,7 +556,7 @@ pub trait DiagnosticBuilderExt<'a, T: LintContext> {\n     fn suggest_remove_item(&mut self, cx: &T, item: Span, msg: &str, applicability: Applicability);\n }\n \n-impl<'a, 'b, 'c, T: LintContext> DiagnosticBuilderExt<'c, T> for rustc_errors::DiagnosticBuilder<'b> {\n+impl<T: LintContext> DiagnosticBuilderExt<T> for rustc_errors::DiagnosticBuilder<'_> {\n     fn suggest_item_with_attr<D: Display + ?Sized>(\n         &mut self,\n         cx: &T,"}, {"sha": "3d12436e9af8e81596392430ff5324656b8c51b7", "filename": "src/driver.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b886c06c1a52a57890b318cc7304f7384e696ec8/src%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b886c06c1a52a57890b318cc7304f7384e696ec8/src%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver.rs?ref=b886c06c1a52a57890b318cc7304f7384e696ec8", "patch": "@@ -8,6 +8,8 @@\n // FIXME: switch to something more ergonomic here, once available.\n // (Currently there is no way to opt into sysroot crates without `extern crate`.)\n #[allow(unused_extern_crates)]\n+extern crate rustc_data_structures;\n+#[allow(unused_extern_crates)]\n extern crate rustc_driver;\n #[allow(unused_extern_crates)]\n extern crate rustc_errors;\n@@ -97,7 +99,7 @@ impl rustc_driver::Callbacks for ClippyCallbacks {\n #[allow(clippy::find_map, clippy::filter_map)]\n fn describe_lints() {\n     use lintlist::{Level, Lint, ALL_LINTS, LINT_LEVELS};\n-    use std::collections::HashSet;\n+    use rustc_data_structures::fx::FxHashSet;\n \n     println!(\n         \"\n@@ -141,7 +143,7 @@ Available lint options:\n \n     let scoped = |x: &str| format!(\"clippy::{}\", x);\n \n-    let lint_groups: HashSet<_> = lints.iter().map(|lint| lint.group).collect();\n+    let lint_groups: FxHashSet<_> = lints.iter().map(|lint| lint.group).collect();\n \n     println!(\"Lint checks provided by clippy:\\n\");\n     println!(\"    {}  {:7.7}  meaning\", padded(\"name\"), \"default\");"}]}