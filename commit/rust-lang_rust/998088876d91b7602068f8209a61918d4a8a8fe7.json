{"sha": "998088876d91b7602068f8209a61918d4a8a8fe7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5ODA4ODg3NmQ5MWI3NjAyMDY4ZjgyMDlhNjE5MThkNGE4YThmZTc=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-10-30T19:05:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-30T19:05:09Z"}, "message": "Merge #2133\n\n2133: Document match_ast! and use it in call_info r=matklad a=kjeremy\n\nSuggested by @matklad in https://github.com/rust-analyzer/rust-analyzer/pull/2129#discussion_r340708660\n\nCo-authored-by: kjeremy <kjeremy@gmail.com>", "tree": {"sha": "12837dc698294e3673496130372359ef6e6c3ef8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12837dc698294e3673496130372359ef6e6c3ef8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/998088876d91b7602068f8209a61918d4a8a8fe7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdud7lCRBK7hj4Ov3rIwAAdHIIABz78yh5H1PsujEgGXAick3A\nfgLT6ZyJ03L1bwrPARw39LfV/GJh1Ly7H37iltXxxjT1hq5s1kfMnuyUgg/szx+Z\nm/2y7jEya8e3eNYT4vSfUoJsfngoLU2IVjsZ9ld7RA+vTQuKnIK+qbfcbB95LZ2o\nLLLd/m2YQsfVczj9cwuM78K7USKJP4GYasEinF8Lvn7hMv03CWlJ+096cPCMibKc\n1BpO9c8bc3IHVAsrimfCf0UpgF3moHOXn2MIUELIumV5oWF2VM/AIn4azbqWc69O\npAirU/qR+/Qtc3OnvBF/xPXoA4qi3iSO11Qyr6HBqDnzB9w51Iu+IvV/qPnyL3o=\n=rhTA\n-----END PGP SIGNATURE-----\n", "payload": "tree 12837dc698294e3673496130372359ef6e6c3ef8\nparent ce3173469c9dc9c59de903dfe33a6156168d0325\nparent 4d17658940ec73554dfef799b22e8829ab5ad61a\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1572462309 +0000\ncommitter GitHub <noreply@github.com> 1572462309 +0000\n\nMerge #2133\n\n2133: Document match_ast! and use it in call_info r=matklad a=kjeremy\n\nSuggested by @matklad in https://github.com/rust-analyzer/rust-analyzer/pull/2129#discussion_r340708660\n\nCo-authored-by: kjeremy <kjeremy@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/998088876d91b7602068f8209a61918d4a8a8fe7", "html_url": "https://github.com/rust-lang/rust/commit/998088876d91b7602068f8209a61918d4a8a8fe7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/998088876d91b7602068f8209a61918d4a8a8fe7/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce3173469c9dc9c59de903dfe33a6156168d0325", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce3173469c9dc9c59de903dfe33a6156168d0325", "html_url": "https://github.com/rust-lang/rust/commit/ce3173469c9dc9c59de903dfe33a6156168d0325"}, {"sha": "4d17658940ec73554dfef799b22e8829ab5ad61a", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d17658940ec73554dfef799b22e8829ab5ad61a", "html_url": "https://github.com/rust-lang/rust/commit/4d17658940ec73554dfef799b22e8829ab5ad61a"}], "stats": {"total": 31, "additions": 22, "deletions": 9}, "files": [{"sha": "3572825b57a6890522f7f333f5afe9098b257a52", "filename": "crates/ra_ide_api/src/call_info.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/998088876d91b7602068f8209a61918d4a8a8fe7/crates%2Fra_ide_api%2Fsrc%2Fcall_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/998088876d91b7602068f8209a61918d4a8a8fe7/crates%2Fra_ide_api%2Fsrc%2Fcall_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcall_info.rs?ref=998088876d91b7602068f8209a61918d4a8a8fe7", "patch": "@@ -4,7 +4,7 @@ use ra_db::SourceDatabase;\n use ra_syntax::{\n     algo::ancestors_at_offset,\n     ast::{self, ArgListOwner},\n-    AstNode, SyntaxNode, TextUnit,\n+    match_ast, AstNode, SyntaxNode, TextUnit,\n };\n use test_utils::tested_by;\n \n@@ -91,14 +91,13 @@ enum FnCallNode {\n impl FnCallNode {\n     fn with_node(syntax: &SyntaxNode, offset: TextUnit) -> Option<FnCallNode> {\n         ancestors_at_offset(syntax, offset).find_map(|node| {\n-            if let Some(expr) = ast::CallExpr::cast(node.clone()) {\n-                Some(FnCallNode::CallExpr(expr))\n-            } else if let Some(expr) = ast::MethodCallExpr::cast(node.clone()) {\n-                Some(FnCallNode::MethodCallExpr(expr))\n-            } else if let Some(expr) = ast::MacroCall::cast(node) {\n-                Some(FnCallNode::MacroCallExpr(expr))\n-            } else {\n-                None\n+            match_ast! {\n+                match node {\n+                    ast::CallExpr(it) => { Some(FnCallNode::CallExpr(it)) },\n+                    ast::MethodCallExpr(it) => { Some(FnCallNode::MethodCallExpr(it)) },\n+                    ast::MacroCall(it) => { Some(FnCallNode::MacroCallExpr(it)) },\n+                    _ => { None },\n+                }\n             }\n         })\n     }"}, {"sha": "5dcb6a95a6637d378ef7afaee6365263acb8efd5", "filename": "crates/ra_syntax/src/lib.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/998088876d91b7602068f8209a61918d4a8a8fe7/crates%2Fra_syntax%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/998088876d91b7602068f8209a61918d4a8a8fe7/crates%2Fra_syntax%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Flib.rs?ref=998088876d91b7602068f8209a61918d4a8a8fe7", "patch": "@@ -160,6 +160,20 @@ impl SourceFile {\n     }\n }\n \n+/// Matches a `SyntaxNode` against an `ast` type.\n+///\n+/// # Example:\n+///\n+/// ```ignore\n+/// match_ast! {\n+///     match node {\n+///         ast::CallExpr(it) => { ... },\n+///         ast::MethodCallExpr(it) => { ... },\n+///         ast::MacroCall(it) => { ... },\n+///         _ => None,\n+///     }\n+/// }\n+/// ```\n #[macro_export]\n macro_rules! match_ast {\n     (match $node:ident {"}]}