{"sha": "68c67efa683bd676096c3a28960f806d4d3dc5d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4YzY3ZWZhNjgzYmQ2NzYwOTZjM2EyODk2MGY4MDZkNGQzZGM1ZDc=", "commit": {"author": {"name": "Zac Pullar-Strecker", "email": "zacmps@gmail.com", "date": "2020-10-22T04:31:25Z"}, "committer": {"name": "Zac Pullar-Strecker", "email": "zacmps@gmail.com", "date": "2020-10-22T04:33:52Z"}, "message": "Fix opening module documentation opening parent documentation instead\n\nThe whole path/URL joining code is kind of ugly which is what led to\nthis, but at the same time I don't really want to rewrite it right\nnow...", "tree": {"sha": "916f24bc193841f5e4c1f874ca2a4014b1d6b189", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/916f24bc193841f5e4c1f874ca2a4014b1d6b189"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68c67efa683bd676096c3a28960f806d4d3dc5d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68c67efa683bd676096c3a28960f806d4d3dc5d7", "html_url": "https://github.com/rust-lang/rust/commit/68c67efa683bd676096c3a28960f806d4d3dc5d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68c67efa683bd676096c3a28960f806d4d3dc5d7/comments", "author": {"login": "zacps", "id": 9827696, "node_id": "MDQ6VXNlcjk4Mjc2OTY=", "avatar_url": "https://avatars.githubusercontent.com/u/9827696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zacps", "html_url": "https://github.com/zacps", "followers_url": "https://api.github.com/users/zacps/followers", "following_url": "https://api.github.com/users/zacps/following{/other_user}", "gists_url": "https://api.github.com/users/zacps/gists{/gist_id}", "starred_url": "https://api.github.com/users/zacps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zacps/subscriptions", "organizations_url": "https://api.github.com/users/zacps/orgs", "repos_url": "https://api.github.com/users/zacps/repos", "events_url": "https://api.github.com/users/zacps/events{/privacy}", "received_events_url": "https://api.github.com/users/zacps/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zacps", "id": 9827696, "node_id": "MDQ6VXNlcjk4Mjc2OTY=", "avatar_url": "https://avatars.githubusercontent.com/u/9827696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zacps", "html_url": "https://github.com/zacps", "followers_url": "https://api.github.com/users/zacps/followers", "following_url": "https://api.github.com/users/zacps/following{/other_user}", "gists_url": "https://api.github.com/users/zacps/gists{/gist_id}", "starred_url": "https://api.github.com/users/zacps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zacps/subscriptions", "organizations_url": "https://api.github.com/users/zacps/orgs", "repos_url": "https://api.github.com/users/zacps/repos", "events_url": "https://api.github.com/users/zacps/events{/privacy}", "received_events_url": "https://api.github.com/users/zacps/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9eb6cbb80b7d2ccf196745f8e53fc22ae0f73030", "url": "https://api.github.com/repos/rust-lang/rust/commits/9eb6cbb80b7d2ccf196745f8e53fc22ae0f73030", "html_url": "https://github.com/rust-lang/rust/commit/9eb6cbb80b7d2ccf196745f8e53fc22ae0f73030"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "250f10f9fd6611a6983c5a52980c986e931f82e4", "filename": "crates/ide/src/doc_links.rs", "status": "modified", "additions": 24, "deletions": 4, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/68c67efa683bd676096c3a28960f806d4d3dc5d7/crates%2Fide%2Fsrc%2Fdoc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68c67efa683bd676096c3a28960f806d4d3dc5d7/crates%2Fide%2Fsrc%2Fdoc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdoc_links.rs?ref=68c67efa683bd676096c3a28960f806d4d3dc5d7", "patch": "@@ -132,7 +132,8 @@ fn get_doc_link(db: &RootDatabase, definition: Definition) -> Option<String> {\n     let import_map = db.import_map(krate.into());\n     let base = once(krate.display_name(db)?.to_string())\n         .chain(import_map.path_of(ns)?.segments.iter().map(|name| name.to_string()))\n-        .join(\"/\");\n+        .join(\"/\")\n+        + \"/\";\n \n     let filename = get_symbol_filename(db, &target_def);\n     let fragment = match definition {\n@@ -152,9 +153,16 @@ fn get_doc_link(db: &RootDatabase, definition: Definition) -> Option<String> {\n         _ => None,\n     };\n \n-    get_doc_url(db, &krate)\n-        .and_then(|url| url.join(&base).ok())\n-        .and_then(|url| filename.as_deref().and_then(|f| url.join(f).ok()))\n+    get_doc_url(db, &krate)?\n+        .join(&base)\n+        .ok()\n+        .and_then(|mut url| {\n+            if !matches!(definition, Definition::ModuleDef(ModuleDef::Module(..))) {\n+                url.path_segments_mut().ok()?.pop();\n+            };\n+            Some(url)\n+        })\n+        .and_then(|url| url.join(filename.as_deref()?).ok())\n         .and_then(\n             |url| if let Some(fragment) = fragment { url.join(&fragment).ok() } else { Some(url) },\n         )\n@@ -522,6 +530,18 @@ pub struct Foo {\n         );\n     }\n \n+    #[test]\n+    fn test_module() {\n+        check(\n+            r#\"\n+pub mod foo {\n+    pub mod ba<|>r {}\n+}\n+        \"#,\n+            expect![[r#\"https://docs.rs/test/*/test/foo/bar/index.html\"#]],\n+        )\n+    }\n+\n     // FIXME: ImportMap will return re-export paths instead of public module\n     // paths. The correct path to documentation will never be a re-export.\n     // This problem stops us from resolving stdlib items included in the prelude"}]}