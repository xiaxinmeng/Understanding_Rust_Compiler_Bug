{"sha": "30c5125fbe86f48a547a23917dcafab1b3f3ac7e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwYzUxMjVmYmU4NmY0OGE1NDdhMjM5MTdkY2FmYWIxYjNmM2FjN2U=", "commit": {"author": {"name": "Henry Boisdequin", "email": "65845077+henryboisdequin@users.noreply.github.com", "date": "2021-02-16T01:31:55Z"}, "committer": {"name": "Henry Boisdequin", "email": "65845077+henryboisdequin@users.noreply.github.com", "date": "2021-02-16T01:37:42Z"}, "message": "update formating", "tree": {"sha": "f4524ab1952a3c56072e6d4fdad777a27701782e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4524ab1952a3c56072e6d4fdad777a27701782e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30c5125fbe86f48a547a23917dcafab1b3f3ac7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30c5125fbe86f48a547a23917dcafab1b3f3ac7e", "html_url": "https://github.com/rust-lang/rust/commit/30c5125fbe86f48a547a23917dcafab1b3f3ac7e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30c5125fbe86f48a547a23917dcafab1b3f3ac7e/comments", "author": {"login": "henryboisdequin", "id": 65845077, "node_id": "MDQ6VXNlcjY1ODQ1MDc3", "avatar_url": "https://avatars.githubusercontent.com/u/65845077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/henryboisdequin", "html_url": "https://github.com/henryboisdequin", "followers_url": "https://api.github.com/users/henryboisdequin/followers", "following_url": "https://api.github.com/users/henryboisdequin/following{/other_user}", "gists_url": "https://api.github.com/users/henryboisdequin/gists{/gist_id}", "starred_url": "https://api.github.com/users/henryboisdequin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/henryboisdequin/subscriptions", "organizations_url": "https://api.github.com/users/henryboisdequin/orgs", "repos_url": "https://api.github.com/users/henryboisdequin/repos", "events_url": "https://api.github.com/users/henryboisdequin/events{/privacy}", "received_events_url": "https://api.github.com/users/henryboisdequin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "henryboisdequin", "id": 65845077, "node_id": "MDQ6VXNlcjY1ODQ1MDc3", "avatar_url": "https://avatars.githubusercontent.com/u/65845077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/henryboisdequin", "html_url": "https://github.com/henryboisdequin", "followers_url": "https://api.github.com/users/henryboisdequin/followers", "following_url": "https://api.github.com/users/henryboisdequin/following{/other_user}", "gists_url": "https://api.github.com/users/henryboisdequin/gists{/gist_id}", "starred_url": "https://api.github.com/users/henryboisdequin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/henryboisdequin/subscriptions", "organizations_url": "https://api.github.com/users/henryboisdequin/orgs", "repos_url": "https://api.github.com/users/henryboisdequin/repos", "events_url": "https://api.github.com/users/henryboisdequin/events{/privacy}", "received_events_url": "https://api.github.com/users/henryboisdequin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eace240ebebf46c88959d15bdd634af104de92fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/eace240ebebf46c88959d15bdd634af104de92fe", "html_url": "https://github.com/rust-lang/rust/commit/eace240ebebf46c88959d15bdd634af104de92fe"}], "stats": {"total": 28, "additions": 20, "deletions": 8}, "files": [{"sha": "cd2bea86ea1a73f776948382077c327900b03417", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/30c5125fbe86f48a547a23917dcafab1b3f3ac7e/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30c5125fbe86f48a547a23917dcafab1b3f3ac7e/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=30c5125fbe86f48a547a23917dcafab1b3f3ac7e", "patch": "@@ -962,7 +962,8 @@ impl<'tcx> LocalDecl<'tcx> {\n                     opt_ty_info: _,\n                     opt_match_place: _,\n                     pat_span: _,\n-                }) | BindingForm::ImplicitSelf(ImplicitSelfKind::Imm),\n+                })\n+                | BindingForm::ImplicitSelf(ImplicitSelfKind::Imm),\n             )))\n         )\n     }\n@@ -979,7 +980,8 @@ impl<'tcx> LocalDecl<'tcx> {\n                     opt_ty_info: _,\n                     opt_match_place: _,\n                     pat_span: _,\n-                }) | BindingForm::ImplicitSelf(_),\n+                })\n+                | BindingForm::ImplicitSelf(_),\n             )))\n         )\n     }"}, {"sha": "34db0c9ab162b3306ea51f42d12401b4664f5170", "filename": "compiler/rustc_mir/src/transform/check_consts/validation.rs", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/30c5125fbe86f48a547a23917dcafab1b3f3ac7e/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30c5125fbe86f48a547a23917dcafab1b3f3ac7e/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=30c5125fbe86f48a547a23917dcafab1b3f3ac7e", "patch": "@@ -492,7 +492,7 @@ impl Visitor<'tcx> for Validator<'mir, 'tcx> {\n         // Special-case reborrows to be more like a copy of a reference.\n         match *rvalue {\n             Rvalue::Ref(_, kind, place) => {\n-                if let Some(place_ref) = place_as_reborrow(self.tcx, self.body, place) {\n+                if let Some(reborrowed_place_ref) = place_as_reborrow(self.tcx, self.body, place) {\n                     let ctx = match kind {\n                         BorrowKind::Shared => {\n                             PlaceContext::NonMutatingUse(NonMutatingUseContext::SharedBorrow)\n@@ -507,21 +507,31 @@ impl Visitor<'tcx> for Validator<'mir, 'tcx> {\n                             PlaceContext::MutatingUse(MutatingUseContext::Borrow)\n                         }\n                     };\n-                    self.visit_local(&place.local, ctx, location);\n-                    self.visit_projection(place.local, place_ref.projection, ctx, location);\n+                    self.visit_local(&reborrowed_place_ref.local, ctx, location);\n+                    self.visit_projection(\n+                        reborrowed_place_ref.local,\n+                        reborrowed_place_ref.projection,\n+                        ctx,\n+                        location,\n+                    );\n                     return;\n                 }\n             }\n             Rvalue::AddressOf(mutbl, place) => {\n-                if let Some(place_ref) = place_as_reborrow(self.tcx, self.body, place) {\n+                if let Some(reborrowed_place_ref) = place_as_reborrow(self.tcx, self.body, place) {\n                     let ctx = match mutbl {\n                         Mutability::Not => {\n                             PlaceContext::NonMutatingUse(NonMutatingUseContext::AddressOf)\n                         }\n                         Mutability::Mut => PlaceContext::MutatingUse(MutatingUseContext::AddressOf),\n                     };\n-                    self.visit_local(&place.local, ctx, location);\n-                    self.visit_projection(place.local, place_ref.projection, ctx, location);\n+                    self.visit_local(&reborrowed_place_ref.local, ctx, location);\n+                    self.visit_projection(\n+                        reborrowed_place_ref.local,\n+                        reborrowed_place_ref.projection,\n+                        ctx,\n+                        location,\n+                    );\n                     return;\n                 }\n             }"}]}