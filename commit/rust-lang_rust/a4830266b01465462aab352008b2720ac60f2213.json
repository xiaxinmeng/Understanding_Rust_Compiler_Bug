{"sha": "a4830266b01465462aab352008b2720ac60f2213", "node_id": "C_kwDOAAsO6NoAKGE0ODMwMjY2YjAxNDY1NDYyYWFiMzUyMDA4YjI3MjBhYzYwZjIyMTM", "commit": {"author": {"name": "nx2k3", "email": "nx2k3@duck.com", "date": "2023-02-27T16:54:38Z"}, "committer": {"name": "nx2k3", "email": "nx2k3@duck.com", "date": "2023-02-27T17:31:55Z"}, "message": "handle only postfix decrement", "tree": {"sha": "933cce19290f0de4c8423fefeeecca34fd066380", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/933cce19290f0de4c8423fefeeecca34fd066380"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4830266b01465462aab352008b2720ac60f2213", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4830266b01465462aab352008b2720ac60f2213", "html_url": "https://github.com/rust-lang/rust/commit/a4830266b01465462aab352008b2720ac60f2213", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4830266b01465462aab352008b2720ac60f2213/comments", "author": {"login": "nx2k3", "id": 71603665, "node_id": "MDQ6VXNlcjcxNjAzNjY1", "avatar_url": "https://avatars.githubusercontent.com/u/71603665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nx2k3", "html_url": "https://github.com/nx2k3", "followers_url": "https://api.github.com/users/nx2k3/followers", "following_url": "https://api.github.com/users/nx2k3/following{/other_user}", "gists_url": "https://api.github.com/users/nx2k3/gists{/gist_id}", "starred_url": "https://api.github.com/users/nx2k3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nx2k3/subscriptions", "organizations_url": "https://api.github.com/users/nx2k3/orgs", "repos_url": "https://api.github.com/users/nx2k3/repos", "events_url": "https://api.github.com/users/nx2k3/events{/privacy}", "received_events_url": "https://api.github.com/users/nx2k3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nx2k3", "id": 71603665, "node_id": "MDQ6VXNlcjcxNjAzNjY1", "avatar_url": "https://avatars.githubusercontent.com/u/71603665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nx2k3", "html_url": "https://github.com/nx2k3", "followers_url": "https://api.github.com/users/nx2k3/followers", "following_url": "https://api.github.com/users/nx2k3/following{/other_user}", "gists_url": "https://api.github.com/users/nx2k3/gists{/gist_id}", "starred_url": "https://api.github.com/users/nx2k3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nx2k3/subscriptions", "organizations_url": "https://api.github.com/users/nx2k3/orgs", "repos_url": "https://api.github.com/users/nx2k3/repos", "events_url": "https://api.github.com/users/nx2k3/events{/privacy}", "received_events_url": "https://api.github.com/users/nx2k3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0883973d2a1a0346832e1d8556997f771c87e5d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/0883973d2a1a0346832e1d8556997f771c87e5d7", "html_url": "https://github.com/rust-lang/rust/commit/0883973d2a1a0346832e1d8556997f771c87e5d7"}], "stats": {"total": 86, "additions": 4, "deletions": 82}, "files": [{"sha": "779fd90627bee360da25c4d6c6897a76f3faa153", "filename": "compiler/rustc_parse/src/parser/diagnostics.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a4830266b01465462aab352008b2720ac60f2213/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4830266b01465462aab352008b2720ac60f2213/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs?ref=a4830266b01465462aab352008b2720ac60f2213", "patch": "@@ -1354,16 +1354,6 @@ impl<'a> Parser<'a> {\n         };\n         self.recover_from_inc_dec(operand_expr, kind, op_span)\n     }\n-    pub(super) fn recover_from_prefix_decrement(\n-        &mut self,\n-        operand_expr: P<Expr>,\n-        op_span: Span,\n-        start_stmt: bool,\n-    ) -> PResult<'a, P<Expr>> {\n-        let standalone = if start_stmt { IsStandalone::Standalone } else { IsStandalone::Subexpr };\n-        let kind = IncDecRecovery { standalone, op: IncOrDec::Dec, fixity: UnaryFixity::Pre };\n-        self.recover_from_inc_dec(operand_expr, kind, op_span)\n-    }\n \n     pub(super) fn recover_from_postfix_decrement(\n         &mut self,"}, {"sha": "ec50388cb46f3cb2aac5edd7188cad0dce092a67", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 4, "deletions": 24, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/a4830266b01465462aab352008b2720ac60f2213/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4830266b01465462aab352008b2720ac60f2213/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=a4830266b01465462aab352008b2720ac60f2213", "patch": "@@ -561,10 +561,10 @@ impl<'a> Parser<'a> {\n             token::Not => make_it!(this, attrs, |this, _| this.parse_unary_expr(lo, UnOp::Not)),\n             // `~expr`\n             token::Tilde => make_it!(this, attrs, |this, _| this.recover_tilde_expr(lo)),\n-            // // `-expr`\n-            // token::BinOp(token::Minus) => {\n-            //     make_it!(this, attrs, |this, _| this.parse_unary_expr(lo, UnOp::Neg))\n-            // }\n+            // `-expr`\n+            token::BinOp(token::Minus) => {\n+                make_it!(this, attrs, |this, _| this.parse_unary_expr(lo, UnOp::Neg))\n+            }\n             // `*expr`\n             token::BinOp(token::Star) => {\n                 make_it!(this, attrs, |this, _| this.parse_unary_expr(lo, UnOp::Deref))\n@@ -606,27 +606,7 @@ impl<'a> Parser<'a> {\n                 let operand_expr = this.parse_dot_or_call_expr(Default::default())?;\n                 this.recover_from_prefix_increment(operand_expr, pre_span, starts_stmt)\n             }\n-            // Recover from `--x`:\n-            token::BinOp(token::Minus)\n-                if this.look_ahead(1, |t| *t == token::BinOp(token::Minus))\n-                    && !this.token.can_begin_expr() =>\n-            {\n-                let starts_stmt = this.prev_token == token::Semi\n-                    || this.prev_token == token::CloseDelim(Delimiter::Brace);\n-                let pre_span = this.token.span.to(this.look_ahead(1, |t| t.span));\n-                // if !this.token.can_begin_expr() {\n-                // Eat both `-`s.\n-                this.bump();\n-                this.bump();\n-                let operand_expr = this.parse_dot_or_call_expr(Default::default())?;\n-                this.recover_from_prefix_decrement(operand_expr, pre_span, starts_stmt)\n \n-                // }\n-            }\n-            // `-expr`\n-            token::BinOp(token::Minus) => {\n-                make_it!(this, attrs, |this, _| this.parse_unary_expr(lo, UnOp::Neg))\n-            }\n             token::Ident(..) if this.token.is_keyword(kw::Box) => {\n                 make_it!(this, attrs, |this, _| this.parse_box_expr(lo))\n             }"}, {"sha": "2e17a317b685c4c7fb3ec3fe5aeb72c0550046d1", "filename": "tests/ui/parser/issue-108495-dec-pass.rs", "status": "removed", "additions": 0, "deletions": 48, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/0883973d2a1a0346832e1d8556997f771c87e5d7/tests%2Fui%2Fparser%2Fissue-108495-dec-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0883973d2a1a0346832e1d8556997f771c87e5d7/tests%2Fui%2Fparser%2Fissue-108495-dec-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fparser%2Fissue-108495-dec-pass.rs?ref=0883973d2a1a0346832e1d8556997f771c87e5d7", "patch": "@@ -1,48 +0,0 @@\n-// run-pass\n-fn test1() {\n-    let i = 0;\n-    let c = i + --i;\n-    println!(\"{c}\");\n-}\n-fn test2() {\n-    let i = 9;\n-    let c = -- i + --i;\n-    println!(\"{c}\");\n-}\n-\n-fn test3(){\n-    let i=10;\n-    println!(\"{}\",i--i);\n-}\n-fn test4(){\n-    let i=10;\n-    println!(\"{}\",--i);\n-\n-}\n-struct Foo {\n-    bar: Bar,\n-}\n-\n-struct Bar {\n-    qux: i32,\n-}\n-\n-fn test5() {\n-    let foo = Foo { bar: Bar { qux: 0 } };\n-    let c=--foo.bar.qux;\n-    println!(\"{c}\");\n-}\n-\n-fn test6(){\n-    let x=2;\n-    let y=--x;\n-    println!(\"{y}\");\n-}\n-fn main(){\n-    test1();\n-    test2();\n-    test3();\n-    test4();\n-    test5();\n-    test6();\n-}"}]}