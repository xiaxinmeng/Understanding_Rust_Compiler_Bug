{"sha": "c95ff1d52bd3d8abec2e39b5b76426e22cc6d582", "node_id": "C_kwDOAAsO6NoAKGM5NWZmMWQ1MmJkM2Q4YWJlYzJlMzliNWI3NjQyNmUyMmNjNmQ1ODI", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-07-27T20:22:39Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-08-03T16:44:19Z"}, "message": "Assert index sanity.", "tree": {"sha": "9670d42268e8141be7bd9be17058d1190b0b33b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9670d42268e8141be7bd9be17058d1190b0b33b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c95ff1d52bd3d8abec2e39b5b76426e22cc6d582", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c95ff1d52bd3d8abec2e39b5b76426e22cc6d582", "html_url": "https://github.com/rust-lang/rust/commit/c95ff1d52bd3d8abec2e39b5b76426e22cc6d582", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c95ff1d52bd3d8abec2e39b5b76426e22cc6d582/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4240902529b75ed39995f506331eb532a6a0c51", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4240902529b75ed39995f506331eb532a6a0c51", "html_url": "https://github.com/rust-lang/rust/commit/a4240902529b75ed39995f506331eb532a6a0c51"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "6ea976a59006470517ddf93e68df4014d8605ffd", "filename": "compiler/rustc_resolve/src/late/lifetimes.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c95ff1d52bd3d8abec2e39b5b76426e22cc6d582/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c95ff1d52bd3d8abec2e39b5b76426e22cc6d582/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs?ref=c95ff1d52bd3d8abec2e39b5b76426e22cc6d582", "patch": "@@ -1486,6 +1486,10 @@ impl<'a, 'tcx> LifetimeContext<'a, 'tcx> {\n \n             let map = &self.map;\n             let generics = self.tcx.generics_of(def_id);\n+\n+            // `type_def_id` points to an item, so there is nothing to inherit generics from.\n+            debug_assert_eq!(generics.parent_count, 0);\n+\n             let set_to_region = |set: ObjectLifetimeDefault| match set {\n                 ObjectLifetimeDefault::Empty => {\n                     if in_body {\n@@ -1496,8 +1500,9 @@ impl<'a, 'tcx> LifetimeContext<'a, 'tcx> {\n                 }\n                 ObjectLifetimeDefault::Static => Some(Region::Static),\n                 ObjectLifetimeDefault::Param(param_def_id) => {\n-                    let index = generics.param_def_id_to_index[&param_def_id];\n-                    generic_args.args.get(index as usize).and_then(|arg| match arg {\n+                    // This index can be used with `generic_args` since `parent_count == 0`.\n+                    let index = generics.param_def_id_to_index[&param_def_id] as usize;\n+                    generic_args.args.get(index).and_then(|arg| match arg {\n                         GenericArg::Lifetime(lt) => map.defs.get(&lt.hir_id).copied(),\n                         _ => None,\n                     })"}]}