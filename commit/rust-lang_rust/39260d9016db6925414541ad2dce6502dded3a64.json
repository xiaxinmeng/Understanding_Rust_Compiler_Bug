{"sha": "39260d9016db6925414541ad2dce6502dded3a64", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5MjYwZDkwMTZkYjY5MjU0MTQ1NDFhZDJkY2U2NTAyZGRlZDNhNjQ=", "commit": {"author": {"name": "Trevor Spiteri", "email": "trevor.spiteri@um.edu.mt", "date": "2019-08-21T12:10:40Z"}, "committer": {"name": "Trevor Spiteri", "email": "trevor.spiteri@um.edu.mt", "date": "2019-08-21T12:10:40Z"}, "message": "make abs, wrapping_abs, and overflowing_abs const functions", "tree": {"sha": "1112f22a0c0b7bdf005765e8a4bae7712b6ecc6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1112f22a0c0b7bdf005765e8a4bae7712b6ecc6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39260d9016db6925414541ad2dce6502dded3a64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39260d9016db6925414541ad2dce6502dded3a64", "html_url": "https://github.com/rust-lang/rust/commit/39260d9016db6925414541ad2dce6502dded3a64", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39260d9016db6925414541ad2dce6502dded3a64/comments", "author": {"login": "tspiteri", "id": 18604588, "node_id": "MDQ6VXNlcjE4NjA0NTg4", "avatar_url": "https://avatars.githubusercontent.com/u/18604588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tspiteri", "html_url": "https://github.com/tspiteri", "followers_url": "https://api.github.com/users/tspiteri/followers", "following_url": "https://api.github.com/users/tspiteri/following{/other_user}", "gists_url": "https://api.github.com/users/tspiteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/tspiteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tspiteri/subscriptions", "organizations_url": "https://api.github.com/users/tspiteri/orgs", "repos_url": "https://api.github.com/users/tspiteri/repos", "events_url": "https://api.github.com/users/tspiteri/events{/privacy}", "received_events_url": "https://api.github.com/users/tspiteri/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tspiteri", "id": 18604588, "node_id": "MDQ6VXNlcjE4NjA0NTg4", "avatar_url": "https://avatars.githubusercontent.com/u/18604588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tspiteri", "html_url": "https://github.com/tspiteri", "followers_url": "https://api.github.com/users/tspiteri/followers", "following_url": "https://api.github.com/users/tspiteri/following{/other_user}", "gists_url": "https://api.github.com/users/tspiteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/tspiteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tspiteri/subscriptions", "organizations_url": "https://api.github.com/users/tspiteri/orgs", "repos_url": "https://api.github.com/users/tspiteri/repos", "events_url": "https://api.github.com/users/tspiteri/events{/privacy}", "received_events_url": "https://api.github.com/users/tspiteri/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bea0372a1a7a31b81f28cc4d9a83a2dc9a79d008", "url": "https://api.github.com/repos/rust-lang/rust/commits/bea0372a1a7a31b81f28cc4d9a83a2dc9a79d008", "html_url": "https://github.com/rust-lang/rust/commit/bea0372a1a7a31b81f28cc4d9a83a2dc9a79d008"}], "stats": {"total": 30, "additions": 9, "deletions": 21}, "files": [{"sha": "df1c00ccd184f17e7c4cdf9004b8eff68ad95ef9", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 9, "deletions": 21, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/39260d9016db6925414541ad2dce6502dded3a64/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39260d9016db6925414541ad2dce6502dded3a64/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=39260d9016db6925414541ad2dce6502dded3a64", "patch": "@@ -1401,12 +1401,8 @@ $EndFeature, \"\n ```\"),\n             #[stable(feature = \"no_panic_abs\", since = \"1.13.0\")]\n             #[inline]\n-            pub fn wrapping_abs(self) -> Self {\n-                if self.is_negative() {\n-                    self.wrapping_neg()\n-                } else {\n-                    self\n-                }\n+            pub const fn wrapping_abs(self) -> Self {\n+                (self ^ (self >> ($BITS - 1))).wrapping_sub(self >> ($BITS - 1))\n             }\n         }\n \n@@ -1764,12 +1760,8 @@ $EndFeature, \"\n ```\"),\n             #[stable(feature = \"no_panic_abs\", since = \"1.13.0\")]\n             #[inline]\n-            pub fn overflowing_abs(self) -> (Self, bool) {\n-                if self.is_negative() {\n-                    self.overflowing_neg()\n-                } else {\n-                    (self, false)\n-                }\n+            pub const fn overflowing_abs(self) -> (Self, bool) {\n+                (self ^ (self >> ($BITS - 1))).overflowing_sub(self >> ($BITS - 1))\n             }\n         }\n \n@@ -1973,15 +1965,11 @@ $EndFeature, \"\n             #[stable(feature = \"rust1\", since = \"1.0.0\")]\n             #[inline]\n             #[rustc_inherit_overflow_checks]\n-            pub fn abs(self) -> Self {\n-                if self.is_negative() {\n-                    // Note that the #[inline] above means that the overflow\n-                    // semantics of this negation depend on the crate we're being\n-                    // inlined into.\n-                    -self\n-                } else {\n-                    self\n-                }\n+            pub const fn abs(self) -> Self {\n+                // Note that the #[inline] above means that the overflow\n+                // semantics of the subtraction depend on the crate we're being\n+                // inlined into.\n+                (self ^ (self >> ($BITS - 1))) - (self >> ($BITS - 1))\n             }\n         }\n "}]}