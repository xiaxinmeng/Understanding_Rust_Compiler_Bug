{"sha": "ec20993c4db26c431e700d5f6b59fe26028cab31", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjMjA5OTNjNGRiMjZjNDMxZTcwMGQ1ZjZiNTlmZTI2MDI4Y2FiMzE=", "commit": {"author": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2020-11-19T17:32:35Z"}, "committer": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2021-02-18T16:12:15Z"}, "message": "Stabilize `unsafe_op_in_unsafe_fn` lint", "tree": {"sha": "fe0ce1f68ca0fffa30a1463f2c7b08032535e525", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe0ce1f68ca0fffa30a1463f2c7b08032535e525"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec20993c4db26c431e700d5f6b59fe26028cab31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec20993c4db26c431e700d5f6b59fe26028cab31", "html_url": "https://github.com/rust-lang/rust/commit/ec20993c4db26c431e700d5f6b59fe26028cab31", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec20993c4db26c431e700d5f6b59fe26028cab31/comments", "author": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb2effd44e667d133e31ef334e30d10195218ce6", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb2effd44e667d133e31ef334e30d10195218ce6", "html_url": "https://github.com/rust-lang/rust/commit/cb2effd44e667d133e31ef334e30d10195218ce6"}], "stats": {"total": 100, "additions": 26, "deletions": 74}, "files": [{"sha": "ae2fe79ff165881572734747d8fbf9270a6f4cf7", "filename": "compiler/rustc_feature/src/accepted.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec20993c4db26c431e700d5f6b59fe26028cab31/compiler%2Frustc_feature%2Fsrc%2Faccepted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec20993c4db26c431e700d5f6b59fe26028cab31/compiler%2Frustc_feature%2Fsrc%2Faccepted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Faccepted.rs?ref=ec20993c4db26c431e700d5f6b59fe26028cab31", "patch": "@@ -275,6 +275,8 @@ declare_features! (\n     (accepted, move_ref_pattern, \"1.48.0\", Some(68354), None),\n     /// The smallest useful subset of `const_generics`.\n     (accepted, min_const_generics, \"1.51.0\", Some(74878), None),\n+    /// The `unsafe_op_in_unsafe_fn` lint (allowed by default): no longer treat an unsafe function as an unsafe block.\n+    (accepted, unsafe_block_in_unsafe_fn, \"1.51.0\", Some(71668), None),\n \n     // -------------------------------------------------------------------------\n     // feature-group-end: accepted features"}, {"sha": "e1274ea44cb9e93528644149544fd02420e51ddb", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ec20993c4db26c431e700d5f6b59fe26028cab31/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec20993c4db26c431e700d5f6b59fe26028cab31/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=ec20993c4db26c431e700d5f6b59fe26028cab31", "patch": "@@ -557,9 +557,6 @@ declare_features! (\n     /// Allows the use of `#[ffi_const]` on foreign functions.\n     (active, ffi_const, \"1.45.0\", Some(58328), None),\n \n-    /// No longer treat an unsafe function as an unsafe block.\n-    (active, unsafe_block_in_unsafe_fn, \"1.45.0\", Some(71668), None),\n-\n     /// Allows `extern \"avr-interrupt\" fn()` and `extern \"avr-non-blocking-interrupt\" fn()`.\n     (active, abi_avr_interrupt, \"1.45.0\", Some(69664), None),\n "}, {"sha": "67a49be60711a569839304e43b34c95267d46010", "filename": "compiler/rustc_lint_defs/src/builtin.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ec20993c4db26c431e700d5f6b59fe26028cab31/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec20993c4db26c431e700d5f6b59fe26028cab31/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs?ref=ec20993c4db26c431e700d5f6b59fe26028cab31", "patch": "@@ -8,7 +8,6 @@\n \n use crate::{declare_lint, declare_lint_pass};\n use rustc_span::edition::Edition;\n-use rustc_span::symbol::sym;\n \n declare_lint! {\n     /// The `forbidden_lint_groups` lint detects violations of\n@@ -2577,16 +2576,11 @@ declare_lint! {\n \n declare_lint! {\n     /// The `unsafe_op_in_unsafe_fn` lint detects unsafe operations in unsafe\n-    /// functions without an explicit unsafe block. This lint only works on\n-    /// the [**nightly channel**] with the\n-    /// `#![feature(unsafe_block_in_unsafe_fn)]` feature.\n-    ///\n-    /// [**nightly channel**]: https://doc.rust-lang.org/book/appendix-07-nightly-rust.html\n+    /// functions without an explicit unsafe block.\n     ///\n     /// ### Example\n     ///\n     /// ```rust,compile_fail\n-    /// #![feature(unsafe_block_in_unsafe_fn)]\n     /// #![deny(unsafe_op_in_unsafe_fn)]\n     ///\n     /// unsafe fn foo() {}\n@@ -2624,7 +2618,6 @@ declare_lint! {\n     pub UNSAFE_OP_IN_UNSAFE_FN,\n     Allow,\n     \"unsafe operations in unsafe functions without an explicit unsafe block are deprecated\",\n-    @feature_gate = sym::unsafe_block_in_unsafe_fn;\n }\n \n declare_lint! {"}, {"sha": "855a5980e287b6057acfc0ea2472dc16bdec8373", "filename": "compiler/rustc_middle/src/mir/query.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec20993c4db26c431e700d5f6b59fe26028cab31/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fquery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec20993c4db26c431e700d5f6b59fe26028cab31/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fquery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fquery.rs?ref=ec20993c4db26c431e700d5f6b59fe26028cab31", "patch": "@@ -28,11 +28,9 @@ pub enum UnsafetyViolationKind {\n     BorrowPacked,\n     /// Unsafe operation in an `unsafe fn` but outside an `unsafe` block.\n     /// Has to be handled as a lint for backwards compatibility.\n-    /// Should stay gated under `#![feature(unsafe_block_in_unsafe_fn)]`.\n     UnsafeFn,\n     /// Borrow of packed field in an `unsafe fn` but outside an `unsafe` block.\n     /// Has to be handled as a lint for backwards compatibility.\n-    /// Should stay gated under `#![feature(unsafe_block_in_unsafe_fn)]`.\n     UnsafeFnBorrowPacked,\n }\n "}, {"sha": "6fd3290b7d03c97b973e2cdccc2361bd81999ac9", "filename": "compiler/rustc_mir/src/transform/check_unsafety.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ec20993c4db26c431e700d5f6b59fe26028cab31/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_unsafety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec20993c4db26c431e700d5f6b59fe26028cab31/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_unsafety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_unsafety.rs?ref=ec20993c4db26c431e700d5f6b59fe26028cab31", "patch": "@@ -340,7 +340,7 @@ impl<'a, 'tcx> UnsafetyChecker<'a, 'tcx> {\n                 false\n             }\n             // With the RFC 2585, no longer allow `unsafe` operations in `unsafe fn`s\n-            Safety::FnUnsafe if self.tcx.features().unsafe_block_in_unsafe_fn => {\n+            Safety::FnUnsafe => {\n                 for violation in violations {\n                     let mut violation = *violation;\n \n@@ -355,8 +355,7 @@ impl<'a, 'tcx> UnsafetyChecker<'a, 'tcx> {\n                 }\n                 false\n             }\n-            // `unsafe` function bodies allow unsafe without additional unsafe blocks (before RFC 2585)\n-            Safety::BuiltinUnsafe | Safety::FnUnsafe => true,\n+            Safety::BuiltinUnsafe => true,\n             Safety::ExplicitUnsafe(hir_id) => {\n                 // mark unsafe block as used if there are any unsafe operations inside\n                 if !violations.is_empty() {"}, {"sha": "1488dc15432e539b657fdb6d7e86ea5d7bf2d6b4", "filename": "library/alloc/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec20993c4db26c431e700d5f6b59fe26028cab31/library%2Falloc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec20993c4db26c431e700d5f6b59fe26028cab31/library%2Falloc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Flib.rs?ref=ec20993c4db26c431e700d5f6b59fe26028cab31", "patch": "@@ -128,7 +128,7 @@\n #![feature(trusted_len)]\n #![feature(unboxed_closures)]\n #![feature(unicode_internals)]\n-#![feature(unsafe_block_in_unsafe_fn)]\n+#![cfg_attr(bootstrap, feature(unsafe_block_in_unsafe_fn))]\n #![feature(unsize)]\n #![feature(unsized_fn_params)]\n #![feature(allocator_internals)]"}, {"sha": "fbb7178f7b6dfba5455af95dcf6751c38841713a", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec20993c4db26c431e700d5f6b59fe26028cab31/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec20993c4db26c431e700d5f6b59fe26028cab31/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=ec20993c4db26c431e700d5f6b59fe26028cab31", "patch": "@@ -162,8 +162,8 @@\n #![feature(const_caller_location)]\n #![feature(slice_ptr_get)]\n #![feature(no_niche)] // rust-lang/rust#68303\n-#![feature(unsafe_block_in_unsafe_fn)]\n #![feature(int_error_matching)]\n+#![cfg_attr(bootstrap, feature(unsafe_block_in_unsafe_fn))]\n #![deny(unsafe_op_in_unsafe_fn)]\n \n #[prelude_import]"}, {"sha": "9a9f27e564e22f9c985749997e0347d1bb41b766", "filename": "library/core/tests/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ec20993c4db26c431e700d5f6b59fe26028cab31/library%2Fcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec20993c4db26c431e700d5f6b59fe26028cab31/library%2Fcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Flib.rs?ref=ec20993c4db26c431e700d5f6b59fe26028cab31", "patch": "@@ -71,16 +71,16 @@\n #![feature(peekable_peek_mut)]\n #![cfg_attr(not(bootstrap), feature(ptr_metadata))]\n #![feature(once_cell)]\n-#![feature(unsafe_block_in_unsafe_fn)]\n #![feature(unsized_tuple_coercion)]\n #![feature(int_bits_const)]\n #![feature(nonzero_leading_trailing_zeros)]\n #![feature(const_option)]\n #![feature(integer_atomics)]\n #![feature(slice_group_by)]\n #![feature(trusted_random_access)]\n-#![deny(unsafe_op_in_unsafe_fn)]\n+#![cfg_attr(bootstrap, feature(unsafe_block_in_unsafe_fn))]\n #![cfg_attr(not(bootstrap), feature(unsize))]\n+#![deny(unsafe_op_in_unsafe_fn)]\n \n extern crate test;\n "}, {"sha": "1a5becf2a95cad311a7fa8fdd3b35e275bbff419", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec20993c4db26c431e700d5f6b59fe26028cab31/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec20993c4db26c431e700d5f6b59fe26028cab31/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=ec20993c4db26c431e700d5f6b59fe26028cab31", "patch": "@@ -324,7 +324,7 @@\n #![feature(try_blocks)]\n #![feature(try_reserve)]\n #![feature(unboxed_closures)]\n-#![feature(unsafe_block_in_unsafe_fn)]\n+#![cfg_attr(bootstrap, feature(unsafe_block_in_unsafe_fn))]\n #![feature(unsafe_cell_raw_get)]\n #![feature(unwind_attributes)]\n #![feature(vec_into_raw_parts)]"}, {"sha": "61e512a12a18d117e3a05c326fe3e20acf3a1853", "filename": "src/test/ui/feature-gates/feature-gate-unsafe_block_in_unsafe_fn.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cb2effd44e667d133e31ef334e30d10195218ce6/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unsafe_block_in_unsafe_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb2effd44e667d133e31ef334e30d10195218ce6/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unsafe_block_in_unsafe_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unsafe_block_in_unsafe_fn.rs?ref=cb2effd44e667d133e31ef334e30d10195218ce6", "patch": "@@ -1,6 +0,0 @@\n-#![deny(unsafe_op_in_unsafe_fn)]\n-//~^ ERROR the `unsafe_op_in_unsafe_fn` lint is unstable\n-//~| ERROR the `unsafe_op_in_unsafe_fn` lint is unstable\n-//~| ERROR the `unsafe_op_in_unsafe_fn` lint is unstable\n-\n-fn main() {}"}, {"sha": "c5cad4a98d9ca29172af13b5a6a539831f1e010e", "filename": "src/test/ui/feature-gates/feature-gate-unsafe_block_in_unsafe_fn.stderr", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/cb2effd44e667d133e31ef334e30d10195218ce6/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unsafe_block_in_unsafe_fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cb2effd44e667d133e31ef334e30d10195218ce6/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unsafe_block_in_unsafe_fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unsafe_block_in_unsafe_fn.stderr?ref=cb2effd44e667d133e31ef334e30d10195218ce6", "patch": "@@ -1,30 +0,0 @@\n-error[E0658]: the `unsafe_op_in_unsafe_fn` lint is unstable\n-  --> $DIR/feature-gate-unsafe_block_in_unsafe_fn.rs:1:1\n-   |\n-LL | #![deny(unsafe_op_in_unsafe_fn)]\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: see issue #71668 <https://github.com/rust-lang/rust/issues/71668> for more information\n-   = help: add `#![feature(unsafe_block_in_unsafe_fn)]` to the crate attributes to enable\n-\n-error[E0658]: the `unsafe_op_in_unsafe_fn` lint is unstable\n-  --> $DIR/feature-gate-unsafe_block_in_unsafe_fn.rs:1:1\n-   |\n-LL | #![deny(unsafe_op_in_unsafe_fn)]\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: see issue #71668 <https://github.com/rust-lang/rust/issues/71668> for more information\n-   = help: add `#![feature(unsafe_block_in_unsafe_fn)]` to the crate attributes to enable\n-\n-error[E0658]: the `unsafe_op_in_unsafe_fn` lint is unstable\n-  --> $DIR/feature-gate-unsafe_block_in_unsafe_fn.rs:1:1\n-   |\n-LL | #![deny(unsafe_op_in_unsafe_fn)]\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: see issue #71668 <https://github.com/rust-lang/rust/issues/71668> for more information\n-   = help: add `#![feature(unsafe_block_in_unsafe_fn)]` to the crate attributes to enable\n-\n-error: aborting due to 3 previous errors\n-\n-For more information about this error, try `rustc --explain E0658`."}, {"sha": "c8400a6fc4d0d43269f814521a9549ce2ceeca8f", "filename": "src/test/ui/unsafe/rfc-2585-unsafe_op_in_unsafe_fn.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ec20993c4db26c431e700d5f6b59fe26028cab31/src%2Ftest%2Fui%2Funsafe%2Frfc-2585-unsafe_op_in_unsafe_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec20993c4db26c431e700d5f6b59fe26028cab31/src%2Ftest%2Fui%2Funsafe%2Frfc-2585-unsafe_op_in_unsafe_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Frfc-2585-unsafe_op_in_unsafe_fn.rs?ref=ec20993c4db26c431e700d5f6b59fe26028cab31", "patch": "@@ -1,4 +1,3 @@\n-#![feature(unsafe_block_in_unsafe_fn)]\n #![deny(unsafe_op_in_unsafe_fn)]\n #![deny(unused_unsafe)]\n "}, {"sha": "3157783acb6af08c9f40bfdbb9ad840cadae5082", "filename": "src/test/ui/unsafe/rfc-2585-unsafe_op_in_unsafe_fn.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/ec20993c4db26c431e700d5f6b59fe26028cab31/src%2Ftest%2Fui%2Funsafe%2Frfc-2585-unsafe_op_in_unsafe_fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ec20993c4db26c431e700d5f6b59fe26028cab31/src%2Ftest%2Fui%2Funsafe%2Frfc-2585-unsafe_op_in_unsafe_fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Frfc-2585-unsafe_op_in_unsafe_fn.stderr?ref=ec20993c4db26c431e700d5f6b59fe26028cab31", "patch": "@@ -1,90 +1,90 @@\n error: call to unsafe function is unsafe and requires unsafe block (error E0133)\n-  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:10:5\n+  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:9:5\n    |\n LL |     unsf();\n    |     ^^^^^^ call to unsafe function\n    |\n note: the lint level is defined here\n-  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:2:9\n+  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:1:9\n    |\n LL | #![deny(unsafe_op_in_unsafe_fn)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n    = note: consult the function's documentation for information on how to avoid undefined behavior\n \n error: dereference of raw pointer is unsafe and requires unsafe block (error E0133)\n-  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:12:5\n+  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:11:5\n    |\n LL |     *PTR;\n    |     ^^^^ dereference of raw pointer\n    |\n    = note: raw pointers may be NULL, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior\n \n error: use of mutable static is unsafe and requires unsafe block (error E0133)\n-  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:14:5\n+  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:13:5\n    |\n LL |     VOID = ();\n    |     ^^^^^^^^^ use of mutable static\n    |\n    = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior\n \n error: unnecessary `unsafe` block\n-  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:17:5\n+  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:16:5\n    |\n LL |     unsafe {}\n    |     ^^^^^^ unnecessary `unsafe` block\n    |\n note: the lint level is defined here\n-  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:3:9\n+  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:2:9\n    |\n LL | #![deny(unused_unsafe)]\n    |         ^^^^^^^^^^^^^\n \n error: call to unsafe function is unsafe and requires unsafe block (error E0133)\n-  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:25:5\n+  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:24:5\n    |\n LL |     unsf();\n    |     ^^^^^^ call to unsafe function\n    |\n note: the lint level is defined here\n-  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:23:8\n+  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:22:8\n    |\n LL | #[deny(warnings)]\n    |        ^^^^^^^^\n    = note: `#[deny(unsafe_op_in_unsafe_fn)]` implied by `#[deny(warnings)]`\n    = note: consult the function's documentation for information on how to avoid undefined behavior\n \n error: dereference of raw pointer is unsafe and requires unsafe block (error E0133)\n-  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:27:5\n+  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:26:5\n    |\n LL |     *PTR;\n    |     ^^^^ dereference of raw pointer\n    |\n    = note: raw pointers may be NULL, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior\n \n error: use of mutable static is unsafe and requires unsafe block (error E0133)\n-  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:29:5\n+  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:28:5\n    |\n LL |     VOID = ();\n    |     ^^^^^^^^^ use of mutable static\n    |\n    = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior\n \n error: unnecessary `unsafe` block\n-  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:31:5\n+  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:30:5\n    |\n LL |     unsafe {}\n    |     ^^^^^^ unnecessary `unsafe` block\n \n error: unnecessary `unsafe` block\n-  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:45:14\n+  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:44:14\n    |\n LL |     unsafe { unsafe { unsf() } }\n    |     ------   ^^^^^^ unnecessary `unsafe` block\n    |     |\n    |     because it's nested under this `unsafe` block\n \n error: unnecessary `unsafe` block\n-  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:56:5\n+  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:55:5\n    |\n LL | unsafe fn allow_level() {\n    | ----------------------- because it's nested under this `unsafe` fn\n@@ -93,7 +93,7 @@ LL |     unsafe { unsf() }\n    |     ^^^^^^ unnecessary `unsafe` block\n \n error: unnecessary `unsafe` block\n-  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:68:9\n+  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:67:9\n    |\n LL | unsafe fn nested_allow_level() {\n    | ------------------------------ because it's nested under this `unsafe` fn\n@@ -102,15 +102,15 @@ LL |         unsafe { unsf() }\n    |         ^^^^^^ unnecessary `unsafe` block\n \n error[E0133]: call to unsafe function is unsafe and requires unsafe block\n-  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:74:5\n+  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:73:5\n    |\n LL |     unsf();\n    |     ^^^^^^ call to unsafe function\n    |\n    = note: consult the function's documentation for information on how to avoid undefined behavior\n \n error[E0133]: call to unsafe function is unsafe and requires unsafe function or block\n-  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:78:9\n+  --> $DIR/rfc-2585-unsafe_op_in_unsafe_fn.rs:77:9\n    |\n LL |         unsf();\n    |         ^^^^^^ call to unsafe function"}]}