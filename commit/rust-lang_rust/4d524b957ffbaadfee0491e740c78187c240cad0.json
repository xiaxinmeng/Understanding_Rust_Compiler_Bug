{"sha": "4d524b957ffbaadfee0491e740c78187c240cad0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkNTI0Yjk1N2ZmYmFhZGZlZTA0OTFlNzQwYzc4MTg3YzI0MGNhZDA=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-12-19T09:13:42Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-12-19T09:13:42Z"}, "message": "Complain when multiple methods in the same scope match a call\n\nIssue #1227", "tree": {"sha": "302add3663df95173a7ec64eb17e357a6cd35718", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/302add3663df95173a7ec64eb17e357a6cd35718"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d524b957ffbaadfee0491e740c78187c240cad0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d524b957ffbaadfee0491e740c78187c240cad0", "html_url": "https://github.com/rust-lang/rust/commit/4d524b957ffbaadfee0491e740c78187c240cad0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d524b957ffbaadfee0491e740c78187c240cad0/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7185ea35c33478d4d350d0cb589db53a9b782813", "url": "https://api.github.com/repos/rust-lang/rust/commits/7185ea35c33478d4d350d0cb589db53a9b782813", "html_url": "https://github.com/rust-lang/rust/commit/7185ea35c33478d4d350d0cb589db53a9b782813"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "0dbd052241f054fd7e30a94b6f28040fbb290386", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4d524b957ffbaadfee0491e740c78187c240cad0/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d524b957ffbaadfee0491e740c78187c240cad0/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=4d524b957ffbaadfee0491e740c78187c240cad0", "patch": "@@ -1460,9 +1460,8 @@ fn check_expr_with(fcx: @fn_ctxt, expr: @ast::expr, expected: ty::t) -> bool {\n     ret check_expr_with_unifier(fcx, expr, demand::simple, expected);\n }\n \n-// FIXME[impl] notice/resolve conflicts\n fn lookup_method(fcx: @fn_ctxt, isc: resolve::iscopes,\n-                 name: ast::ident, ty: ty::t)\n+                 name: ast::ident, ty: ty::t, sp: span)\n     -> option::t<{method: @resolve::method_info, ids: [int]}> {\n     let result = none;\n     std::list::iter(isc) {|impls|\n@@ -1488,8 +1487,13 @@ fn lookup_method(fcx: @fn_ctxt, isc: resolve::iscopes,\n                 } else { {ids: [], ty: self_ty} };\n                 alt unify::unify(fcx, ty, self_ty) {\n                   ures_ok(_) {\n-                    result = some({method: m, ids: ids});\n-                    ret;\n+                    if option::is_some(result) {\n+                        // FIXME[impl] score specificity to resolve ambiguity?\n+                        fcx.ccx.tcx.sess.span_err(\n+                            sp, \"multiple applicable methods in scope\");\n+                    } else {\n+                        result = some({method: m, ids: ids});\n+                    }\n                   }\n                   _ {}\n                 }\n@@ -2159,7 +2163,7 @@ fn check_expr_with_unifier(fcx: @fn_ctxt, expr: @ast::expr, unify: unifier,\n         }\n         if !handled {\n             let iscope = fcx.ccx.impl_map.get(expr.id);\n-            alt lookup_method(fcx, iscope, field, expr_t) {\n+            alt lookup_method(fcx, iscope, field, expr_t, expr.span) {\n               some({method, ids}) {\n                 let fty = if method.did.crate == ast::local_crate {\n                     alt tcx.items.get(method.did.node) {"}]}