{"sha": "b0c8a2be7bd0d053eb9dd0e02fe2cf08b093a19a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwYzhhMmJlN2JkMGQwNTNlYjlkZDBlMDJmZTJjZjA4YjA5M2ExOWE=", "commit": {"author": {"name": "Mikhail Rakhmanov", "email": "rakhmanov.m@gmail.com", "date": "2020-06-04T08:03:44Z"}, "committer": {"name": "Mikhail Rakhmanov", "email": "rakhmanov.m@gmail.com", "date": "2020-06-04T08:03:44Z"}, "message": "Remove AsName import", "tree": {"sha": "f80f886e29294e00f50a6e477cf770e71aa143b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f80f886e29294e00f50a6e477cf770e71aa143b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b0c8a2be7bd0d053eb9dd0e02fe2cf08b093a19a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b0c8a2be7bd0d053eb9dd0e02fe2cf08b093a19a", "html_url": "https://github.com/rust-lang/rust/commit/b0c8a2be7bd0d053eb9dd0e02fe2cf08b093a19a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b0c8a2be7bd0d053eb9dd0e02fe2cf08b093a19a/comments", "author": {"login": "mcrakhman", "id": 16068868, "node_id": "MDQ6VXNlcjE2MDY4ODY4", "avatar_url": "https://avatars.githubusercontent.com/u/16068868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcrakhman", "html_url": "https://github.com/mcrakhman", "followers_url": "https://api.github.com/users/mcrakhman/followers", "following_url": "https://api.github.com/users/mcrakhman/following{/other_user}", "gists_url": "https://api.github.com/users/mcrakhman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcrakhman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcrakhman/subscriptions", "organizations_url": "https://api.github.com/users/mcrakhman/orgs", "repos_url": "https://api.github.com/users/mcrakhman/repos", "events_url": "https://api.github.com/users/mcrakhman/events{/privacy}", "received_events_url": "https://api.github.com/users/mcrakhman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcrakhman", "id": 16068868, "node_id": "MDQ6VXNlcjE2MDY4ODY4", "avatar_url": "https://avatars.githubusercontent.com/u/16068868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcrakhman", "html_url": "https://github.com/mcrakhman", "followers_url": "https://api.github.com/users/mcrakhman/followers", "following_url": "https://api.github.com/users/mcrakhman/following{/other_user}", "gists_url": "https://api.github.com/users/mcrakhman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcrakhman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcrakhman/subscriptions", "organizations_url": "https://api.github.com/users/mcrakhman/orgs", "repos_url": "https://api.github.com/users/mcrakhman/repos", "events_url": "https://api.github.com/users/mcrakhman/events{/privacy}", "received_events_url": "https://api.github.com/users/mcrakhman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6d3c77bdd998499941a6aceccde85f7a94b804d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6d3c77bdd998499941a6aceccde85f7a94b804d", "html_url": "https://github.com/rust-lang/rust/commit/a6d3c77bdd998499941a6aceccde85f7a94b804d"}], "stats": {"total": 29, "additions": 21, "deletions": 8}, "files": [{"sha": "72e5dd7356ca8a2a0859127f0b228cee073bbcc2", "filename": "crates/ra_assists/src/handlers/extract_struct_from_enum_variant.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b0c8a2be7bd0d053eb9dd0e02fe2cf08b093a19a/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0c8a2be7bd0d053eb9dd0e02fe2cf08b093a19a/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs?ref=b0c8a2be7bd0d053eb9dd0e02fe2cf08b093a19a", "patch": "@@ -9,11 +9,11 @@ use ra_syntax::{\n \n use crate::{\n     assist_context::{AssistBuilder, AssistDirector},\n-    utils::insert_use_statement,\n+    utils::insert_use::insert_use_statement_with_string_path,\n     AssistContext, AssistId, Assists,\n };\n use ast::{ArgListOwner, VisibilityOwner};\n-use hir::{AsName, EnumVariant, Module, ModuleDef};\n+use hir::{EnumVariant, Module, ModuleDef};\n use ra_db::FileId;\n use ra_fmt::leading_indent;\n use rustc_hash::FxHashSet;\n@@ -109,8 +109,13 @@ fn insert_import(\n     let mod_path = module.find_use_path(db, module_def.clone());\n     if let Some(mut mod_path) = mod_path {\n         mod_path.segments.pop();\n-        mod_path.segments.push(path_segment.as_name());\n-        insert_use_statement(path.syntax(), &mod_path, ctx, builder.text_edit_builder());\n+        let use_path = format!(\"{}::{}\", mod_path.to_string(), path_segment.to_string());\n+        insert_use_statement_with_string_path(\n+            path.syntax(),\n+            &use_path,\n+            ctx,\n+            builder.text_edit_builder(),\n+        );\n     }\n     Some(())\n }"}, {"sha": "114f5949a6aa0fe8f8d6495bd74be54c4e81c494", "filename": "crates/ra_assists/src/utils/insert_use.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b0c8a2be7bd0d053eb9dd0e02fe2cf08b093a19a/crates%2Fra_assists%2Fsrc%2Futils%2Finsert_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0c8a2be7bd0d053eb9dd0e02fe2cf08b093a19a/crates%2Fra_assists%2Fsrc%2Futils%2Finsert_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Futils%2Finsert_use.rs?ref=b0c8a2be7bd0d053eb9dd0e02fe2cf08b093a19a", "patch": "@@ -23,7 +23,16 @@ pub(crate) fn insert_use_statement(\n     ctx: &AssistContext,\n     builder: &mut TextEditBuilder,\n ) {\n-    let target = path_to_import.to_string().split(\"::\").map(SmolStr::new).collect::<Vec<_>>();\n+    insert_use_statement_with_string_path(position, &path_to_import.to_string(), ctx, builder);\n+}\n+\n+pub(crate) fn insert_use_statement_with_string_path(\n+    position: &SyntaxNode,\n+    path_to_import: &str,\n+    ctx: &AssistContext,\n+    builder: &mut TextEditBuilder,\n+) {\n+    let target = path_to_import.split(\"::\").map(SmolStr::new).collect::<Vec<_>>();\n     let container = ctx.sema.ancestors_with_macros(position.clone()).find_map(|n| {\n         if let Some(module) = ast::Module::cast(n.clone()) {\n             return module.item_list().map(|it| it.syntax().clone());"}, {"sha": "3364a822f431cf3067589fe2f3824451802edd87", "filename": "crates/ra_hir/src/lib.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b0c8a2be7bd0d053eb9dd0e02fe2cf08b093a19a/crates%2Fra_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0c8a2be7bd0d053eb9dd0e02fe2cf08b093a19a/crates%2Fra_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Flib.rs?ref=b0c8a2be7bd0d053eb9dd0e02fe2cf08b093a19a", "patch": "@@ -71,8 +71,7 @@ pub use hir_def::{\n     type_ref::Mutability,\n };\n pub use hir_expand::{\n-    hygiene::Hygiene,\n-    name::{AsName, Name},\n-    HirFileId, InFile, MacroCallId, MacroCallLoc, MacroDefId, MacroFile, Origin,\n+    hygiene::Hygiene, name::Name, HirFileId, InFile, MacroCallId, MacroCallLoc, MacroDefId,\n+    MacroFile, Origin,\n };\n pub use hir_ty::{display::HirDisplay, CallableDef};"}]}