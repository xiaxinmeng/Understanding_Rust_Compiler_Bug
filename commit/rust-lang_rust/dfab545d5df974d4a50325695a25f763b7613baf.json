{"sha": "dfab545d5df974d4a50325695a25f763b7613baf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmYWI1NDVkNWRmOTc0ZDRhNTAzMjU2OTVhMjVmNzYzYjc2MTNiYWY=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-04-23T19:00:59Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-04-25T18:03:55Z"}, "message": "Add more information on macro rules fail to parse", "tree": {"sha": "09606318228a971f4035d1b1d17f0576d15165c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09606318228a971f4035d1b1d17f0576d15165c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dfab545d5df974d4a50325695a25f763b7613baf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dfab545d5df974d4a50325695a25f763b7613baf", "html_url": "https://github.com/rust-lang/rust/commit/dfab545d5df974d4a50325695a25f763b7613baf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dfab545d5df974d4a50325695a25f763b7613baf/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4e2338f97d734624fb21b7972c73288ca04e65e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4e2338f97d734624fb21b7972c73288ca04e65e", "html_url": "https://github.com/rust-lang/rust/commit/e4e2338f97d734624fb21b7972c73288ca04e65e"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "b0e9b1f9af789b8e8d8931dd829e611da3436263", "filename": "crates/ra_hir/src/ids.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/dfab545d5df974d4a50325695a25f763b7613baf/crates%2Fra_hir%2Fsrc%2Fids.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfab545d5df974d4a50325695a25f763b7613baf/crates%2Fra_hir%2Fsrc%2Fids.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fids.rs?ref=dfab545d5df974d4a50325695a25f763b7613baf", "patch": "@@ -128,8 +128,14 @@ pub struct MacroDefId(pub(crate) AstId<ast::MacroCall>);\n pub(crate) fn macro_def_query(db: &impl DefDatabase, id: MacroDefId) -> Option<Arc<MacroRules>> {\n     let macro_call = id.0.to_node(db);\n     let arg = macro_call.token_tree()?;\n-    let (tt, _) = mbe::ast_to_token_tree(arg)?;\n-    let rules = MacroRules::parse(&tt).ok()?;\n+    let (tt, _) = mbe::ast_to_token_tree(arg).or_else(|| {\n+        log::warn!(\"fail on macro_def to token tree: {:#?}\", arg);\n+        None\n+    })?;\n+    let rules = MacroRules::parse(&tt).ok().or_else(|| {\n+        log::warn!(\"fail on macro_def parse: {:#?}\", tt);\n+        None\n+    })?;\n     Some(Arc::new(rules))\n }\n "}]}