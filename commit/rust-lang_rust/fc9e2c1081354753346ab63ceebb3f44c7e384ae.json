{"sha": "fc9e2c1081354753346ab63ceebb3f44c7e384ae", "node_id": "C_kwDOAAsO6NoAKGZjOWUyYzEwODEzNTQ3NTMzNDZhYjYzY2VlYmIzZjQ0YzdlMzg0YWU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-01-17T19:21:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-17T19:21:26Z"}, "message": "Rollup merge of #106834 - compiler-errors:new-solver-did-changed, r=lcnr\n\nnew trait solver: only consider goal changed if response is not identity\n\nI think this is the right way of implementing it..\n\nr? `@lcnr`", "tree": {"sha": "cb1872a518fcc7fdb479584ed40b710dcc04dccc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb1872a518fcc7fdb479584ed40b710dcc04dccc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc9e2c1081354753346ab63ceebb3f44c7e384ae", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjxvU2CRBK7hj4Ov3rIwAA7T4IAHR91Sk9gI+pxsxYPI24qdvX\nz3klCGUL6YvzRhpNTwWMoftd7x1VsEKWu3RwRs3UUtRZVdEf10ZtyJPfUz8lZuaK\n70CKAipS7FM5xuDP8wG0c3dCynoCQO5rBpSuLbBj84l0KJ46sixGgHqKPlS/cw7w\n5A/H0n0HIy8tISrw3DFQvTtOa+abfmJ9moHwRz02fco69zFp13eVcHGl1rBCQOem\nNwTEgz3A4talfUlT8bBGSBSRi0eX+3E7uxZDcLFuTnfu4m/JhLi7b7w0OGM/VOlL\nmAeub2lybYWni+LtOy6HT5oH8KkyGzKr+6kgi6uR5tTvMjNqavXu3wxVNvqsGIs=\n=D8aN\n-----END PGP SIGNATURE-----\n", "payload": "tree cb1872a518fcc7fdb479584ed40b710dcc04dccc\nparent 4ee5e09e19eccf6f61799122e63caa126ace3d97\nparent 148e4f73dcc4bab82d0ad1689d2900e908133614\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1673983286 +0100\ncommitter GitHub <noreply@github.com> 1673983286 +0100\n\nRollup merge of #106834 - compiler-errors:new-solver-did-changed, r=lcnr\n\nnew trait solver: only consider goal changed if response is not identity\n\nI think this is the right way of implementing it..\n\nr? `@lcnr`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc9e2c1081354753346ab63ceebb3f44c7e384ae", "html_url": "https://github.com/rust-lang/rust/commit/fc9e2c1081354753346ab63ceebb3f44c7e384ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc9e2c1081354753346ab63ceebb3f44c7e384ae/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ee5e09e19eccf6f61799122e63caa126ace3d97", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ee5e09e19eccf6f61799122e63caa126ace3d97", "html_url": "https://github.com/rust-lang/rust/commit/4ee5e09e19eccf6f61799122e63caa126ace3d97"}, {"sha": "148e4f73dcc4bab82d0ad1689d2900e908133614", "url": "https://api.github.com/repos/rust-lang/rust/commits/148e4f73dcc4bab82d0ad1689d2900e908133614", "html_url": "https://github.com/rust-lang/rust/commit/148e4f73dcc4bab82d0ad1689d2900e908133614"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "7f3567c08be775f5ff35d614fc0a98dfa136b1c2", "filename": "compiler/rustc_middle/src/infer/canonical.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/fc9e2c1081354753346ab63ceebb3f44c7e384ae/compiler%2Frustc_middle%2Fsrc%2Finfer%2Fcanonical.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc9e2c1081354753346ab63ceebb3f44c7e384ae/compiler%2Frustc_middle%2Fsrc%2Finfer%2Fcanonical.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Finfer%2Fcanonical.rs?ref=fc9e2c1081354753346ab63ceebb3f44c7e384ae", "patch": "@@ -68,6 +68,22 @@ pub struct CanonicalVarValues<'tcx> {\n     pub var_values: IndexVec<BoundVar, GenericArg<'tcx>>,\n }\n \n+impl CanonicalVarValues<'_> {\n+    pub fn is_identity(&self) -> bool {\n+        self.var_values.iter_enumerated().all(|(bv, arg)| match arg.unpack() {\n+            ty::GenericArgKind::Lifetime(r) => {\n+                matches!(*r, ty::ReLateBound(ty::INNERMOST, br) if br.var == bv)\n+            }\n+            ty::GenericArgKind::Type(ty) => {\n+                matches!(*ty.kind(), ty::Bound(ty::INNERMOST, bt) if bt.var == bv)\n+            }\n+            ty::GenericArgKind::Const(ct) => {\n+                matches!(ct.kind(), ty::ConstKind::Bound(ty::INNERMOST, bc) if bc == bv)\n+            }\n+        })\n+    }\n+}\n+\n /// When we canonicalize a value to form a query, we wind up replacing\n /// various parts of it with canonical variables. This struct stores\n /// those replaced bits to remember for when we process the query"}, {"sha": "80775b7aaf2c068277d72864e47549a49c10de26", "filename": "compiler/rustc_trait_selection/src/solve/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fc9e2c1081354753346ab63ceebb3f44c7e384ae/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc9e2c1081354753346ab63ceebb3f44c7e384ae/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fmod.rs?ref=fc9e2c1081354753346ab63ceebb3f44c7e384ae", "patch": "@@ -178,7 +178,7 @@ impl<'tcx> EvalCtxt<'tcx> {\n         let canonical_goal = infcx.canonicalize_query(goal, &mut orig_values);\n         let canonical_response = self.evaluate_canonical_goal(canonical_goal)?;\n         Ok((\n-            true, // FIXME: check whether `var_values` are an identity substitution.\n+            !canonical_response.value.var_values.is_identity(),\n             instantiate_canonical_query_response(infcx, &orig_values, canonical_response),\n         ))\n     }"}]}