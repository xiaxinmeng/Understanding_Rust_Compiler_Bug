{"sha": "2f5334dff2cf7be2f1cc33565c55925b58950694", "node_id": "C_kwDOAAsO6NoAKDJmNTMzNGRmZjJjZjdiZTJmMWNjMzM1NjVjNTU5MjViNTg5NTA2OTQ", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-21T05:03:11Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-21T05:03:11Z"}, "message": "forgot a return in drop tracking handle_uninhabited_return", "tree": {"sha": "927b96833b241781f5ac7653981760b61cdbf137", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/927b96833b241781f5ac7653981760b61cdbf137"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f5334dff2cf7be2f1cc33565c55925b58950694", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f5334dff2cf7be2f1cc33565c55925b58950694", "html_url": "https://github.com/rust-lang/rust/commit/2f5334dff2cf7be2f1cc33565c55925b58950694", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f5334dff2cf7be2f1cc33565c55925b58950694/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d12c3cea30b8ba4a09650a9e9c46fe9fbe25f0b", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d12c3cea30b8ba4a09650a9e9c46fe9fbe25f0b", "html_url": "https://github.com/rust-lang/rust/commit/1d12c3cea30b8ba4a09650a9e9c46fe9fbe25f0b"}], "stats": {"total": 103, "additions": 92, "deletions": 11}, "files": [{"sha": "16806fdba4fbc2113c766be2ed489c032b5f1fda", "filename": "compiler/rustc_hir_typeck/src/generator_interior/drop_ranges/cfg_build.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2f5334dff2cf7be2f1cc33565c55925b58950694/compiler%2Frustc_hir_typeck%2Fsrc%2Fgenerator_interior%2Fdrop_ranges%2Fcfg_build.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f5334dff2cf7be2f1cc33565c55925b58950694/compiler%2Frustc_hir_typeck%2Fsrc%2Fgenerator_interior%2Fdrop_ranges%2Fcfg_build.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fgenerator_interior%2Fdrop_ranges%2Fcfg_build.rs?ref=2f5334dff2cf7be2f1cc33565c55925b58950694", "patch": "@@ -233,6 +233,7 @@ impl<'a, 'tcx> DropRangeVisitor<'a, 'tcx> {\n             self.tcx()\n                 .sess\n                 .delay_span_bug(expr.span, format!(\"could not resolve infer vars in `{ty}`\"));\n+            return;\n         }\n         let ty = self.tcx().erase_regions(ty);\n         let m = self.tcx().parent_module(expr.hir_id).to_def_id();"}, {"sha": "a328c43765db28a19cb5e58267702bb9913402fd", "filename": "src/test/ui/generator/unresolved-ct-var.drop_tracking.stderr", "status": "renamed", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/2f5334dff2cf7be2f1cc33565c55925b58950694/src%2Ftest%2Fui%2Fgenerator%2Funresolved-ct-var.drop_tracking.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2f5334dff2cf7be2f1cc33565c55925b58950694/src%2Ftest%2Fui%2Fgenerator%2Funresolved-ct-var.drop_tracking.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Funresolved-ct-var.drop_tracking.stderr?ref=2f5334dff2cf7be2f1cc33565c55925b58950694", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: `[(); _]` is not a future\n-  --> $DIR/unresolved-ct-var.rs:6:44\n+  --> $DIR/unresolved-ct-var.rs:8:44\n    |\n LL |         let s = std::array::from_fn(|_| ()).await;\n    |                 ---------------------------^^^^^^\n@@ -13,61 +13,61 @@ LL |         let s = std::array::from_fn(|_| ()).await;\n    = note: required for `[(); _]` to implement `IntoFuture`\n \n error[E0698]: type inside `async` block must be known in this context\n-  --> $DIR/unresolved-ct-var.rs:6:17\n+  --> $DIR/unresolved-ct-var.rs:8:17\n    |\n LL |         let s = std::array::from_fn(|_| ()).await;\n    |                 ^^^^^^^^^^^^^^^^^^^ cannot infer the value of const parameter `N` declared on the function `from_fn`\n    |\n note: the type is part of the `async` block because of this `await`\n-  --> $DIR/unresolved-ct-var.rs:6:44\n+  --> $DIR/unresolved-ct-var.rs:8:44\n    |\n LL |         let s = std::array::from_fn(|_| ()).await;\n    |                                            ^^^^^^\n \n error[E0698]: type inside `async` block must be known in this context\n-  --> $DIR/unresolved-ct-var.rs:6:17\n+  --> $DIR/unresolved-ct-var.rs:8:17\n    |\n LL |         let s = std::array::from_fn(|_| ()).await;\n    |                 ^^^^^^^^^^^^^^^^^^^ cannot infer the value of const parameter `N` declared on the function `from_fn`\n    |\n note: the type is part of the `async` block because of this `await`\n-  --> $DIR/unresolved-ct-var.rs:6:44\n+  --> $DIR/unresolved-ct-var.rs:8:44\n    |\n LL |         let s = std::array::from_fn(|_| ()).await;\n    |                                            ^^^^^^\n \n error[E0698]: type inside `async` block must be known in this context\n-  --> $DIR/unresolved-ct-var.rs:6:17\n+  --> $DIR/unresolved-ct-var.rs:8:17\n    |\n LL |         let s = std::array::from_fn(|_| ()).await;\n    |                 ^^^^^^^^^^^^^^^^^^^ cannot infer the value of const parameter `N` declared on the function `from_fn`\n    |\n note: the type is part of the `async` block because of this `await`\n-  --> $DIR/unresolved-ct-var.rs:6:44\n+  --> $DIR/unresolved-ct-var.rs:8:44\n    |\n LL |         let s = std::array::from_fn(|_| ()).await;\n    |                                            ^^^^^^\n \n error[E0698]: type inside `async` block must be known in this context\n-  --> $DIR/unresolved-ct-var.rs:6:17\n+  --> $DIR/unresolved-ct-var.rs:8:17\n    |\n LL |         let s = std::array::from_fn(|_| ()).await;\n    |                 ^^^^^^^^^^^^^^^^^^^ cannot infer the value of const parameter `N` declared on the function `from_fn`\n    |\n note: the type is part of the `async` block because of this `await`\n-  --> $DIR/unresolved-ct-var.rs:6:44\n+  --> $DIR/unresolved-ct-var.rs:8:44\n    |\n LL |         let s = std::array::from_fn(|_| ()).await;\n    |                                            ^^^^^^\n \n error[E0698]: type inside `async` block must be known in this context\n-  --> $DIR/unresolved-ct-var.rs:6:17\n+  --> $DIR/unresolved-ct-var.rs:8:17\n    |\n LL |         let s = std::array::from_fn(|_| ()).await;\n    |                 ^^^^^^^^^^^^^^^^^^^ cannot infer the value of const parameter `N` declared on the function `from_fn`\n    |\n note: the type is part of the `async` block because of this `await`\n-  --> $DIR/unresolved-ct-var.rs:6:44\n+  --> $DIR/unresolved-ct-var.rs:8:44\n    |\n LL |         let s = std::array::from_fn(|_| ()).await;\n    |                                            ^^^^^^", "previous_filename": "src/test/ui/generator/unresolved-ct-var.stderr"}, {"sha": "6720f465887233659ad8aff68aaea0d8ef06792c", "filename": "src/test/ui/generator/unresolved-ct-var.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2f5334dff2cf7be2f1cc33565c55925b58950694/src%2Ftest%2Fui%2Fgenerator%2Funresolved-ct-var.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f5334dff2cf7be2f1cc33565c55925b58950694/src%2Ftest%2Fui%2Fgenerator%2Funresolved-ct-var.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Funresolved-ct-var.rs?ref=2f5334dff2cf7be2f1cc33565c55925b58950694", "patch": "@@ -1,5 +1,7 @@\n // incremental\n // edition:2021\n+// revisions: drop_tracking stock\n+//[drop_tracking] compile-flags: -Zdrop-tracking\n \n fn main() {\n     let _ = async {"}, {"sha": "a328c43765db28a19cb5e58267702bb9913402fd", "filename": "src/test/ui/generator/unresolved-ct-var.stock.stderr", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/rust-lang/rust/blob/2f5334dff2cf7be2f1cc33565c55925b58950694/src%2Ftest%2Fui%2Fgenerator%2Funresolved-ct-var.stock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2f5334dff2cf7be2f1cc33565c55925b58950694/src%2Ftest%2Fui%2Fgenerator%2Funresolved-ct-var.stock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Funresolved-ct-var.stock.stderr?ref=2f5334dff2cf7be2f1cc33565c55925b58950694", "patch": "@@ -0,0 +1,78 @@\n+error[E0277]: `[(); _]` is not a future\n+  --> $DIR/unresolved-ct-var.rs:8:44\n+   |\n+LL |         let s = std::array::from_fn(|_| ()).await;\n+   |                 ---------------------------^^^^^^\n+   |                 |                          |\n+   |                 |                          `[(); _]` is not a future\n+   |                 |                          help: remove the `.await`\n+   |                 this call returns `[(); _]`\n+   |\n+   = help: the trait `Future` is not implemented for `[(); _]`\n+   = note: [(); _] must be a future or must implement `IntoFuture` to be awaited\n+   = note: required for `[(); _]` to implement `IntoFuture`\n+\n+error[E0698]: type inside `async` block must be known in this context\n+  --> $DIR/unresolved-ct-var.rs:8:17\n+   |\n+LL |         let s = std::array::from_fn(|_| ()).await;\n+   |                 ^^^^^^^^^^^^^^^^^^^ cannot infer the value of const parameter `N` declared on the function `from_fn`\n+   |\n+note: the type is part of the `async` block because of this `await`\n+  --> $DIR/unresolved-ct-var.rs:8:44\n+   |\n+LL |         let s = std::array::from_fn(|_| ()).await;\n+   |                                            ^^^^^^\n+\n+error[E0698]: type inside `async` block must be known in this context\n+  --> $DIR/unresolved-ct-var.rs:8:17\n+   |\n+LL |         let s = std::array::from_fn(|_| ()).await;\n+   |                 ^^^^^^^^^^^^^^^^^^^ cannot infer the value of const parameter `N` declared on the function `from_fn`\n+   |\n+note: the type is part of the `async` block because of this `await`\n+  --> $DIR/unresolved-ct-var.rs:8:44\n+   |\n+LL |         let s = std::array::from_fn(|_| ()).await;\n+   |                                            ^^^^^^\n+\n+error[E0698]: type inside `async` block must be known in this context\n+  --> $DIR/unresolved-ct-var.rs:8:17\n+   |\n+LL |         let s = std::array::from_fn(|_| ()).await;\n+   |                 ^^^^^^^^^^^^^^^^^^^ cannot infer the value of const parameter `N` declared on the function `from_fn`\n+   |\n+note: the type is part of the `async` block because of this `await`\n+  --> $DIR/unresolved-ct-var.rs:8:44\n+   |\n+LL |         let s = std::array::from_fn(|_| ()).await;\n+   |                                            ^^^^^^\n+\n+error[E0698]: type inside `async` block must be known in this context\n+  --> $DIR/unresolved-ct-var.rs:8:17\n+   |\n+LL |         let s = std::array::from_fn(|_| ()).await;\n+   |                 ^^^^^^^^^^^^^^^^^^^ cannot infer the value of const parameter `N` declared on the function `from_fn`\n+   |\n+note: the type is part of the `async` block because of this `await`\n+  --> $DIR/unresolved-ct-var.rs:8:44\n+   |\n+LL |         let s = std::array::from_fn(|_| ()).await;\n+   |                                            ^^^^^^\n+\n+error[E0698]: type inside `async` block must be known in this context\n+  --> $DIR/unresolved-ct-var.rs:8:17\n+   |\n+LL |         let s = std::array::from_fn(|_| ()).await;\n+   |                 ^^^^^^^^^^^^^^^^^^^ cannot infer the value of const parameter `N` declared on the function `from_fn`\n+   |\n+note: the type is part of the `async` block because of this `await`\n+  --> $DIR/unresolved-ct-var.rs:8:44\n+   |\n+LL |         let s = std::array::from_fn(|_| ()).await;\n+   |                                            ^^^^^^\n+\n+error: aborting due to 6 previous errors\n+\n+Some errors have detailed explanations: E0277, E0698.\n+For more information about an error, try `rustc --explain E0277`."}]}