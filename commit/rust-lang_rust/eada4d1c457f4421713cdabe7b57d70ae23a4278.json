{"sha": "eada4d1c457f4421713cdabe7b57d70ae23a4278", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhZGE0ZDFjNDU3ZjQ0MjE3MTNjZGFiZTdiNTdkNzBhZTIzYTQyNzg=", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-02-27T03:23:42Z"}, "committer": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-03-01T15:04:11Z"}, "message": "Add diagnostic items", "tree": {"sha": "1520ca82a6eaadf66e3bab3356c31c2d8e4b216c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1520ca82a6eaadf66e3bab3356c31c2d8e4b216c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eada4d1c457f4421713cdabe7b57d70ae23a4278", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eada4d1c457f4421713cdabe7b57d70ae23a4278", "html_url": "https://github.com/rust-lang/rust/commit/eada4d1c457f4421713cdabe7b57d70ae23a4278", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eada4d1c457f4421713cdabe7b57d70ae23a4278/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a6e67ead7a29bca80b7f4a315ac666e2c6e2260", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a6e67ead7a29bca80b7f4a315ac666e2c6e2260", "html_url": "https://github.com/rust-lang/rust/commit/4a6e67ead7a29bca80b7f4a315ac666e2c6e2260"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "1cc43fa8eb28cc1cd350b6ccd758f50bafff1ba9", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/eada4d1c457f4421713cdabe7b57d70ae23a4278/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eada4d1c457f4421713cdabe7b57d70ae23a4278/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=eada4d1c457f4421713cdabe7b57d70ae23a4278", "patch": "@@ -126,6 +126,9 @@ symbols! {\n         Argument,\n         ArgumentV1,\n         Arguments,\n+        BTreeMap,\n+        BTreeSet,\n+        BinaryHeap,\n         C,\n         CString,\n         Center,\n@@ -163,6 +166,7 @@ symbols! {\n         Iterator,\n         Layout,\n         Left,\n+        LinkedList,\n         LintPass,\n         None,\n         Ok,\n@@ -1258,6 +1262,7 @@ symbols! {\n         variant_count,\n         vec,\n         vec_type,\n+        vecdeque_type,\n         version,\n         vis,\n         visible_private_types,"}, {"sha": "4377780e15f4590fb58331e02991730e30ddf4ba", "filename": "library/alloc/src/collections/binary_heap.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eada4d1c457f4421713cdabe7b57d70ae23a4278/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eada4d1c457f4421713cdabe7b57d70ae23a4278/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs?ref=eada4d1c457f4421713cdabe7b57d70ae23a4278", "patch": "@@ -247,6 +247,7 @@ use super::SpecExtend;\n /// [peek]: BinaryHeap::peek\n /// [peek\\_mut]: BinaryHeap::peek_mut\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+#[cfg_attr(not(test), rustc_diagnostic_item = \"BinaryHeap\")]\n pub struct BinaryHeap<T> {\n     data: Vec<T>,\n }"}, {"sha": "783f88f026b8fe1346e67111acd80f4da44a8b51", "filename": "library/alloc/src/collections/btree/map.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eada4d1c457f4421713cdabe7b57d70ae23a4278/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eada4d1c457f4421713cdabe7b57d70ae23a4278/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs?ref=eada4d1c457f4421713cdabe7b57d70ae23a4278", "patch": "@@ -138,6 +138,7 @@ pub(super) const MIN_LEN: usize = node::MIN_LEN_AFTER_SPLIT;\n /// *stat += random_stat_buff();\n /// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+#[cfg_attr(not(test), rustc_diagnostic_item = \"BTreeMap\")]\n pub struct BTreeMap<K, V> {\n     root: Option<Root<K, V>>,\n     length: usize,"}, {"sha": "a331b8d8e4bbbe5e87009de2ee5bf539827449f0", "filename": "library/alloc/src/collections/btree/set.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eada4d1c457f4421713cdabe7b57d70ae23a4278/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eada4d1c457f4421713cdabe7b57d70ae23a4278/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset.rs?ref=eada4d1c457f4421713cdabe7b57d70ae23a4278", "patch": "@@ -61,6 +61,7 @@ use super::Recover;\n /// ```\n #[derive(Hash, PartialEq, Eq, Ord, PartialOrd)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+#[cfg_attr(not(test), rustc_diagnostic_item = \"BTreeSet\")]\n pub struct BTreeSet<T> {\n     map: BTreeMap<T, ()>,\n }"}, {"sha": "a5481fd175e307cb5e86deb9c0bc00bd974af6b4", "filename": "library/alloc/src/collections/linked_list.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eada4d1c457f4421713cdabe7b57d70ae23a4278/library%2Falloc%2Fsrc%2Fcollections%2Flinked_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eada4d1c457f4421713cdabe7b57d70ae23a4278/library%2Falloc%2Fsrc%2Fcollections%2Flinked_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Flinked_list.rs?ref=eada4d1c457f4421713cdabe7b57d70ae23a4278", "patch": "@@ -35,6 +35,7 @@ mod tests;\n /// array-based containers are generally faster,\n /// more memory efficient, and make better use of CPU cache.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+#[cfg_attr(not(test), rustc_diagnostic_item = \"LinkedList\")]\n pub struct LinkedList<T> {\n     head: Option<NonNull<Node<T>>>,\n     tail: Option<NonNull<Node<T>>>,"}, {"sha": "b12e7eeb13814e8472113e2ced9a80bb0cad7975", "filename": "library/std/src/sync/mpsc/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eada4d1c457f4421713cdabe7b57d70ae23a4278/library%2Fstd%2Fsrc%2Fsync%2Fmpsc%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eada4d1c457f4421713cdabe7b57d70ae23a4278/library%2Fstd%2Fsrc%2Fsync%2Fmpsc%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Fmpsc%2Fmod.rs?ref=eada4d1c457f4421713cdabe7b57d70ae23a4278", "patch": "@@ -310,6 +310,7 @@ mod cache_aligned;\n /// println!(\"{}\", recv.recv().unwrap()); // Received after 2 seconds\n /// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+#[cfg_attr(not(test), rustc_diagnostic_item = \"Receiver\")]\n pub struct Receiver<T> {\n     inner: UnsafeCell<Flavor<T>>,\n }"}]}