{"sha": "cb4965ef3a826af8150ef863e98709b4ffa83767", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiNDk2NWVmM2E4MjZhZjgxNTBlZjg2M2U5ODcwOWI0ZmZhODM3Njc=", "commit": {"author": {"name": "S\u00e9bastien Marie", "email": "semarie@users.noreply.github.com", "date": "2015-02-05T17:56:10Z"}, "committer": {"name": "S\u00e9bastien Marie", "email": "semarie@users.noreply.github.com", "date": "2015-02-05T18:04:30Z"}, "message": "complete openbsd support for `std::env`\n\n- add `std::env:consts`\n- deprecating `std::os::consts`\n- refactoring errno_location()", "tree": {"sha": "b0d9c7e279dfc3913f42786c5ceb6e00b4f4ffc4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0d9c7e279dfc3913f42786c5ceb6e00b4f4ffc4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb4965ef3a826af8150ef863e98709b4ffa83767", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb4965ef3a826af8150ef863e98709b4ffa83767", "html_url": "https://github.com/rust-lang/rust/commit/cb4965ef3a826af8150ef863e98709b4ffa83767", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb4965ef3a826af8150ef863e98709b4ffa83767/comments", "author": {"login": "semarie", "id": 8948701, "node_id": "MDQ6VXNlcjg5NDg3MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/8948701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semarie", "html_url": "https://github.com/semarie", "followers_url": "https://api.github.com/users/semarie/followers", "following_url": "https://api.github.com/users/semarie/following{/other_user}", "gists_url": "https://api.github.com/users/semarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/semarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semarie/subscriptions", "organizations_url": "https://api.github.com/users/semarie/orgs", "repos_url": "https://api.github.com/users/semarie/repos", "events_url": "https://api.github.com/users/semarie/events{/privacy}", "received_events_url": "https://api.github.com/users/semarie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "semarie", "id": 8948701, "node_id": "MDQ6VXNlcjg5NDg3MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/8948701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semarie", "html_url": "https://github.com/semarie", "followers_url": "https://api.github.com/users/semarie/followers", "following_url": "https://api.github.com/users/semarie/following{/other_user}", "gists_url": "https://api.github.com/users/semarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/semarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semarie/subscriptions", "organizations_url": "https://api.github.com/users/semarie/orgs", "repos_url": "https://api.github.com/users/semarie/repos", "events_url": "https://api.github.com/users/semarie/events{/privacy}", "received_events_url": "https://api.github.com/users/semarie/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ad3488f29bbccfcee074bb0f3971acec97cfc45", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ad3488f29bbccfcee074bb0f3971acec97cfc45", "html_url": "https://github.com/rust-lang/rust/commit/5ad3488f29bbccfcee074bb0f3971acec97cfc45"}], "stats": {"total": 44, "additions": 37, "deletions": 7}, "files": [{"sha": "c3aacf6f6b0c4513ba33639a7d96df8aa8afa609", "filename": "src/libstd/env.rs", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/cb4965ef3a826af8150ef863e98709b4ffa83767/src%2Flibstd%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb4965ef3a826af8150ef863e98709b4ffa83767/src%2Flibstd%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fenv.rs?ref=cb4965ef3a826af8150ef863e98709b4ffa83767", "patch": "@@ -562,6 +562,38 @@ pub mod consts {\n     pub const EXE_EXTENSION: &'static str = \"\";\n }\n \n+/// Constants associated with the current target\n+#[cfg(target_os = \"openbsd\")]\n+pub mod consts {\n+    pub use super::arch_consts::ARCH;\n+\n+    pub const FAMILY: &'static str = \"unix\";\n+\n+    /// A string describing the specific operating system in use: in this\n+    /// case, `dragonfly`.\n+    pub const OS: &'static str = \"openbsd\";\n+\n+    /// Specifies the filename prefix used for shared libraries on this\n+    /// platform: in this case, `lib`.\n+    pub const DLL_PREFIX: &'static str = \"lib\";\n+\n+    /// Specifies the filename suffix used for shared libraries on this\n+    /// platform: in this case, `.so`.\n+    pub const DLL_SUFFIX: &'static str = \".so\";\n+\n+    /// Specifies the file extension used for shared libraries on this\n+    /// platform that goes after the dot: in this case, `so`.\n+    pub const DLL_EXTENSION: &'static str = \"so\";\n+\n+    /// Specifies the filename suffix used for executable binaries on this\n+    /// platform: in this case, the empty string.\n+    pub const EXE_SUFFIX: &'static str = \"\";\n+\n+    /// Specifies the file extension, if any, used for executable binaries\n+    /// on this platform: in this case, the empty string.\n+    pub const EXE_EXTENSION: &'static str = \"\";\n+}\n+\n /// Constants associated with the current target\n #[cfg(target_os = \"android\")]\n pub mod consts {"}, {"sha": "72a8ac049117b9da89eb3ab7fd36da4ccf5d6b50", "filename": "src/libstd/os.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cb4965ef3a826af8150ef863e98709b4ffa83767/src%2Flibstd%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb4965ef3a826af8150ef863e98709b4ffa83767/src%2Flibstd%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos.rs?ref=cb4965ef3a826af8150ef863e98709b4ffa83767", "patch": "@@ -1289,6 +1289,8 @@ pub mod consts {\n }\n \n #[cfg(target_os = \"openbsd\")]\n+#[deprecated(since = \"1.0.0\", reason = \"renamed to env::consts\")]\n+#[unstable(feature = \"os\")]\n pub mod consts {\n     pub use os::arch_consts::ARCH;\n "}, {"sha": "b191eda583c9b82d4a57a3ea6da3f35d7d7b9fb0", "filename": "src/libstd/sys/unix/os.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/cb4965ef3a826af8150ef863e98709b4ffa83767/src%2Flibstd%2Fsys%2Funix%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb4965ef3a826af8150ef863e98709b4ffa83767/src%2Flibstd%2Fsys%2Funix%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fos.rs?ref=cb4965ef3a826af8150ef863e98709b4ffa83767", "patch": "@@ -47,13 +47,9 @@ pub fn errno() -> i32 {\n     }\n \n     #[cfg(target_os = \"openbsd\")]\n-    fn errno_location() -> *const c_int {\n-        extern {\n-            fn __errno() -> *const c_int;\n-        }\n-        unsafe {\n-            __errno()\n-        }\n+    unsafe fn errno_location() -> *const c_int {\n+        extern { fn __errno() -> *const c_int; }\n+        __errno()\n     }\n \n     #[cfg(any(target_os = \"linux\", target_os = \"android\"))]"}]}