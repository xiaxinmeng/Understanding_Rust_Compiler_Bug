{"sha": "ed437cd8fcbb9ee89849a7eafff94ea97252189e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkNDM3Y2Q4ZmNiYjllZTg5ODQ5YTdlYWZmZjk0ZWE5NzI1MjE4OWU=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2015-04-01T17:51:24Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2015-04-16T02:49:25Z"}, "message": "syntax: Clean up the indentation for #[derive(Eq)]", "tree": {"sha": "1460d931436b9d0a4cbae238e6beb99e5ee05de4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1460d931436b9d0a4cbae238e6beb99e5ee05de4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed437cd8fcbb9ee89849a7eafff94ea97252189e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed437cd8fcbb9ee89849a7eafff94ea97252189e", "html_url": "https://github.com/rust-lang/rust/commit/ed437cd8fcbb9ee89849a7eafff94ea97252189e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed437cd8fcbb9ee89849a7eafff94ea97252189e/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01e56942a087d9eb7e4cb6d2f80548852171d658", "url": "https://api.github.com/repos/rust-lang/rust/commits/01e56942a087d9eb7e4cb6d2f80548852171d658", "html_url": "https://github.com/rust-lang/rust/commit/01e56942a087d9eb7e4cb6d2f80548852171d658"}], "stats": {"total": 26, "additions": 14, "deletions": 12}, "files": [{"sha": "ce8f0a7b32b904e6f68361c1f948808219212d3c", "filename": "src/libsyntax/ext/deriving/cmp/eq.rs", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/ed437cd8fcbb9ee89849a7eafff94ea97252189e/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Feq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed437cd8fcbb9ee89849a7eafff94ea97252189e/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Feq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Feq.rs?ref=ed437cd8fcbb9ee89849a7eafff94ea97252189e", "patch": "@@ -24,18 +24,20 @@ pub fn expand_deriving_eq(cx: &mut ExtCtxt,\n                           push: &mut FnMut(P<Item>))\n {\n     fn cs_total_eq_assert(cx: &mut ExtCtxt, span: Span, substr: &Substructure) -> P<Expr> {\n-        cs_same_method(|cx, span, exprs| {\n-            // create `a.<method>(); b.<method>(); c.<method>(); ...`\n-            // (where method is `assert_receiver_is_total_eq`)\n-            let stmts = exprs.into_iter().map(|e| cx.stmt_expr(e)).collect();\n-            let block = cx.block(span, stmts, None);\n-            cx.expr_block(block)\n-        },\n-                       Box::new(|cx, sp, _, _| {\n-                           cx.span_bug(sp, \"non matching enums in derive(Eq)?\") }),\n-                       cx,\n-                       span,\n-                       substr)\n+        cs_same_method(\n+            |cx, span, exprs| {\n+                // create `a.<method>(); b.<method>(); c.<method>(); ...`\n+                // (where method is `assert_receiver_is_total_eq`)\n+                let stmts = exprs.into_iter().map(|e| cx.stmt_expr(e)).collect();\n+                let block = cx.block(span, stmts, None);\n+                cx.expr_block(block)\n+            },\n+            Box::new(|cx, sp, _, _| {\n+                cx.span_bug(sp, \"non matching enums in derive(Eq)?\") }),\n+            cx,\n+            span,\n+            substr\n+        )\n     }\n \n     let inline = cx.meta_word(span, InternedString::new(\"inline\"));"}]}