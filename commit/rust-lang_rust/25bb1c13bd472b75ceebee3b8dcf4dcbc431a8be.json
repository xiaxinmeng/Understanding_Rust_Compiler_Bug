{"sha": "25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be", "node_id": "C_kwDOAAsO6NoAKDI1YmIxYzEzYmQ0NzJiNzVjZWViZWUzYjhkY2Y0ZGNiYzQzMWE4YmU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-01T03:58:52Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-01T03:58:52Z"}, "message": "Auto merge of #99944 - bjorn3:hide_proc_macro_symbols, r=eddyb\n\nLimit symbols exported from proc macros\n\nOnly `__rustc_proc_macro_decls_*__` and `rust_metadata_*` need to be\nexported for proc macros to work. All other symbols only increase binary\nsize and have the potential to conflict with symbols from the host\ncompiler.\n\nFixes https://github.com/rust-lang/rust/issues/99909\nFixes #59998\n\ncc `@eddyb`", "tree": {"sha": "8e92c4599e20bcf41b53f8e21ac333653f348c51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e92c4599e20bcf41b53f8e21ac333653f348c51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be", "html_url": "https://github.com/rust-lang/rust/commit/25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6423ab3a755fed97f75b2361849155d4e996d02f", "url": "https://api.github.com/repos/rust-lang/rust/commits/6423ab3a755fed97f75b2361849155d4e996d02f", "html_url": "https://github.com/rust-lang/rust/commit/6423ab3a755fed97f75b2361849155d4e996d02f"}, {"sha": "b87f8a4d9c5b02be27d763bb76d66298f1c01ffe", "url": "https://api.github.com/repos/rust-lang/rust/commits/b87f8a4d9c5b02be27d763bb76d66298f1c01ffe", "html_url": "https://github.com/rust-lang/rust/commit/b87f8a4d9c5b02be27d763bb76d66298f1c01ffe"}], "stats": {"total": 82, "additions": 41, "deletions": 41}, "files": [{"sha": "ce51b2e9531fcedbe1520bb18736badb692a4de9", "filename": "compiler/rustc_codegen_ssa/src/back/linker.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs?ref=25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be", "patch": "@@ -656,9 +656,7 @@ impl<'a> Linker for GccLinker<'a> {\n             return;\n         }\n \n-        if crate_type == CrateType::ProcMacro {\n-            return;\n-        }\n+        // FIXME(#99978) hide #[no_mangle] symbols for proc-macros\n \n         let is_windows = self.sess.target.is_like_windows;\n         let path = tmpdir.join(if is_windows { \"list.def\" } else { \"list\" });"}, {"sha": "e6b6055759d27c74d1bd615bc410f9744e20fac3", "filename": "compiler/rustc_codegen_ssa/src/back/symbol_export.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fsymbol_export.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fsymbol_export.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fsymbol_export.rs?ref=25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be", "patch": "@@ -257,16 +257,18 @@ fn exported_symbols_provider_local<'tcx>(\n         }));\n     }\n \n-    if tcx.sess.crate_types().contains(&CrateType::Dylib) {\n+    if tcx.sess.crate_types().contains(&CrateType::Dylib)\n+        || tcx.sess.crate_types().contains(&CrateType::ProcMacro)\n+    {\n         let symbol_name = metadata_symbol_name(tcx);\n         let exported_symbol = ExportedSymbol::NoDefId(SymbolName::new(tcx, &symbol_name));\n \n         symbols.push((\n             exported_symbol,\n             SymbolExportInfo {\n-                level: SymbolExportLevel::Rust,\n+                level: SymbolExportLevel::C,\n                 kind: SymbolExportKind::Data,\n-                used: false,\n+                used: true,\n             },\n         ));\n     }"}, {"sha": "17052ef4e634615c35a8f2cad3bdb98f1671fb71", "filename": "src/test/run-make-fulldeps/symbol-visibility/Makefile", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be/src%2Ftest%2Frun-make-fulldeps%2Fsymbol-visibility%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be/src%2Ftest%2Frun-make-fulldeps%2Fsymbol-visibility%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fsymbol-visibility%2FMakefile?ref=25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be", "patch": "@@ -5,13 +5,15 @@ include ../tools.mk\n NM=nm -D\n CDYLIB_NAME=liba_cdylib.so\n RDYLIB_NAME=liba_rust_dylib.so\n+PROC_MACRO_NAME=liba_proc_macro.so\n EXE_NAME=an_executable\n COMBINED_CDYLIB_NAME=libcombined_rlib_dylib.so\n \n ifeq ($(UNAME),Darwin)\n NM=nm -gU\n CDYLIB_NAME=liba_cdylib.dylib\n RDYLIB_NAME=liba_rust_dylib.dylib\n+PROC_MACRO_NAME=liba_proc_macro.dylib\n EXE_NAME=an_executable\n COMBINED_CDYLIB_NAME=libcombined_rlib_dylib.dylib\n endif\n@@ -20,6 +22,7 @@ ifdef IS_WINDOWS\n NM=nm -g\n CDYLIB_NAME=liba_cdylib.dll.a\n RDYLIB_NAME=liba_rust_dylib.dll.a\n+PROC_MACRO_NAME=liba_proc_macro.dll\n EXE_NAME=an_executable.exe\n COMBINED_CDYLIB_NAME=libcombined_rlib_dylib.dll.a\n endif\n@@ -31,6 +34,7 @@ all:\n \t$(RUSTC) -Zshare-generics=no an_rlib.rs\n \t$(RUSTC) -Zshare-generics=no a_cdylib.rs\n \t$(RUSTC) -Zshare-generics=no a_rust_dylib.rs\n+\t$(RUSTC) -Zshare-generics=no a_proc_macro.rs\n \t$(RUSTC) -Zshare-generics=no an_executable.rs\n \t$(RUSTC) -Zshare-generics=no a_cdylib.rs --crate-name combined_rlib_dylib --crate-type=rlib,cdylib\n \n@@ -54,6 +58,14 @@ all:\n \t# Check that a Rust dylib does not export generics if -Zshare-generics=no\n \t[ \"$$($(NM) $(TMPDIR)/$(RDYLIB_NAME) | grep -v __imp_ | grep -c public_generic_function_from_rlib)\" -eq \"0\" ]\n \n+\t# Check that a proc macro exports its public #[no_mangle] functions\n+\t# FIXME(#99978) avoid exporting #[no_mangle] symbols for proc macros\n+\t[ \"$$($(NM) $(TMPDIR)/$(CDYLIB_NAME) | grep -v __imp_ | grep -c public_c_function_from_cdylib)\" -eq \"1\" ]\n+\t# Check that a proc macro exports the public #[no_mangle] functions of dependencies\n+\t[ \"$$($(NM) $(TMPDIR)/$(CDYLIB_NAME) | grep -v __imp_ | grep -c public_c_function_from_rlib)\" -eq \"1\" ]\n+\t# Check that a proc macro DOES NOT export any public Rust functions\n+\t[ \"$$($(NM) $(TMPDIR)/$(CDYLIB_NAME) | grep -v __imp_ | grep -c $(RE_ANY_RUST_SYMBOL))\" -eq \"0\" ]\n+\n # FIXME(nbdd0121): This is broken in MinGW, see https://github.com/rust-lang/rust/pull/95604#issuecomment-1101564032\n ifndef IS_WINDOWS\n \t# Check that an executable does not export any dynamic symbols\n@@ -75,6 +87,7 @@ endif\n \t$(RUSTC) -Zshare-generics=yes an_rlib.rs\n \t$(RUSTC) -Zshare-generics=yes a_cdylib.rs\n \t$(RUSTC) -Zshare-generics=yes a_rust_dylib.rs\n+\t$(RUSTC) -Zshare-generics=yes a_proc_macro.rs\n \t$(RUSTC) -Zshare-generics=yes an_executable.rs\n \n \t# Check that a cdylib exports its public #[no_mangle] functions\n@@ -94,6 +107,14 @@ endif\n \t[ \"$$($(NM) $(TMPDIR)/$(RDYLIB_NAME) | grep -v __imp_ | grep -c public_rust_function_from_rlib)\" -eq \"1\" ]\n \t[ \"$$($(NM) $(TMPDIR)/$(RDYLIB_NAME) | grep -v __imp_ | grep -c public_generic_function_from_rlib)\" -eq \"1\" ]\n \n+\t# Check that a proc macro exports its public #[no_mangle] functions\n+\t# FIXME(#99978) avoid exporting #[no_mangle] symbols for proc macros\n+\t[ \"$$($(NM) $(TMPDIR)/$(CDYLIB_NAME) | grep -v __imp_ | grep -c public_c_function_from_cdylib)\" -eq \"1\" ]\n+\t# Check that a proc macro exports the public #[no_mangle] functions of dependencies\n+\t[ \"$$($(NM) $(TMPDIR)/$(CDYLIB_NAME) | grep -v __imp_ | grep -c public_c_function_from_rlib)\" -eq \"1\" ]\n+\t# Check that a proc macro DOES NOT export any public Rust functions\n+\t[ \"$$($(NM) $(TMPDIR)/$(CDYLIB_NAME) | grep -v __imp_ | grep -c $(RE_ANY_RUST_SYMBOL))\" -eq \"0\" ]\n+\n ifndef IS_WINDOWS\n \t# Check that an executable does not export any dynamic symbols\n \t[ \"$$($(NM) $(TMPDIR)/$(EXE_NAME) | grep -v __imp_ | grep -c public_c_function_from_rlib)\" -eq \"0\" ]"}, {"sha": "9fd1a8a671767f6d649484c4ad1ea0993bab938c", "filename": "src/test/run-make-fulldeps/symbol-visibility/a_proc_macro.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be/src%2Ftest%2Frun-make-fulldeps%2Fsymbol-visibility%2Fa_proc_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be/src%2Ftest%2Frun-make-fulldeps%2Fsymbol-visibility%2Fa_proc_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fsymbol-visibility%2Fa_proc_macro.rs?ref=25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be", "patch": "@@ -0,0 +1,9 @@\n+#![crate_type = \"proc-macro\"]\n+\n+extern crate an_rlib;\n+\n+// This should not be exported\n+#[no_mangle]\n+extern \"C\" fn public_c_function_from_cdylib() {\n+    an_rlib::public_c_function_from_rlib();\n+}"}, {"sha": "fc15bb9c59db3de0323fd2160f1cc4f89ab33a1f", "filename": "src/test/ui/proc-macro/auxiliary/proc-macro-panic.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fproc-macro-panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fproc-macro-panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fproc-macro-panic.rs?ref=25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be", "previous_filename": "src/test/ui-fulldeps/auxiliary/proc-macro-panic.rs"}, {"sha": "814cd77cfe9bcde81a09d615d208ee293554ebae", "filename": "src/test/ui/proc-macro/invalid-punct-ident-1.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-1.rs?ref=25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be", "patch": "@@ -1,9 +1,4 @@\n // aux-build:invalid-punct-ident.rs\n-// ignore-stage1\n-// only-linux\n-//\n-// FIXME: This should be a normal (stage1, all platforms) test in\n-// src/test/ui/proc-macro once issue #59998 is fixed.\n \n #[macro_use]\n extern crate invalid_punct_ident;"}, {"sha": "7babe685bedf5b3740c7ec9dc1615d6539ac9619", "filename": "src/test/ui/proc-macro/invalid-punct-ident-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-1.stderr?ref=25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be", "patch": "@@ -1,5 +1,5 @@\n error: proc macro panicked\n-  --> $DIR/invalid-punct-ident-1.rs:11:1\n+  --> $DIR/invalid-punct-ident-1.rs:6:1\n    |\n LL | invalid_punct!();\n    | ^^^^^^^^^^^^^^^^"}, {"sha": "a04dec707fe44373ecf24324a14646502954d4cc", "filename": "src/test/ui/proc-macro/invalid-punct-ident-2.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-2.rs?ref=25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be", "patch": "@@ -1,9 +1,4 @@\n // aux-build:invalid-punct-ident.rs\n-// ignore-stage1\n-// only-linux\n-//\n-// FIXME: This should be a normal (stage1, all platforms) test in\n-// src/test/ui/proc-macro once issue #59998 is fixed.\n \n #[macro_use]\n extern crate invalid_punct_ident;"}, {"sha": "01b80768c574845b38c381566e48a0e053b8c822", "filename": "src/test/ui/proc-macro/invalid-punct-ident-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-2.stderr?ref=25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be", "patch": "@@ -1,5 +1,5 @@\n error: proc macro panicked\n-  --> $DIR/invalid-punct-ident-2.rs:11:1\n+  --> $DIR/invalid-punct-ident-2.rs:6:1\n    |\n LL | invalid_ident!();\n    | ^^^^^^^^^^^^^^^^"}, {"sha": "f0e953608cb54df50d4ebcda3c07b02d643263ab", "filename": "src/test/ui/proc-macro/invalid-punct-ident-3.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-3.rs?ref=25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be", "patch": "@@ -1,9 +1,4 @@\n // aux-build:invalid-punct-ident.rs\n-// ignore-stage1\n-// only-linux\n-//\n-// FIXME: This should be a normal (stage1, all platforms) test in\n-// src/test/ui/proc-macro once issue #59998 is fixed.\n \n #[macro_use]\n extern crate invalid_punct_ident;"}, {"sha": "899c38158c2d0b6a57b87ef3fd6654a0246533f0", "filename": "src/test/ui/proc-macro/invalid-punct-ident-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-3.stderr?ref=25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be", "patch": "@@ -1,5 +1,5 @@\n error: proc macro panicked\n-  --> $DIR/invalid-punct-ident-3.rs:11:1\n+  --> $DIR/invalid-punct-ident-3.rs:6:1\n    |\n LL | invalid_raw_ident!();\n    | ^^^^^^^^^^^^^^^^^^^^"}, {"sha": "98fa06b6e457463081ad2030641afda22c2bb3f3", "filename": "src/test/ui/proc-macro/issue-76270-panic-in-libproc-macro.rs", "status": "renamed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be/src%2Ftest%2Fui%2Fproc-macro%2Fissue-76270-panic-in-libproc-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be/src%2Ftest%2Fui%2Fproc-macro%2Fissue-76270-panic-in-libproc-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-76270-panic-in-libproc-macro.rs?ref=25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be", "patch": "@@ -1,10 +1,5 @@\n // aux-build:proc-macro-panic.rs\n // edition:2018\n-// ignore-stage1\n-// only-linux\n-//\n-// FIXME: This should be a normal (stage1, all platforms) test in\n-// src/test/ui/proc-macro once issue #59998 is fixed.\n \n // Regression test for issue #76270\n // Tests that we don't print an ICE message when a panic", "previous_filename": "src/test/ui-fulldeps/issue-76270-panic-in-libproc-macro.rs"}, {"sha": "1dc0f16bf6c4093ee245341632f456cdcda2a9a1", "filename": "src/test/ui/proc-macro/issue-76270-panic-in-libproc-macro.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be/src%2Ftest%2Fui%2Fproc-macro%2Fissue-76270-panic-in-libproc-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be/src%2Ftest%2Fui%2Fproc-macro%2Fissue-76270-panic-in-libproc-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-76270-panic-in-libproc-macro.stderr?ref=25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be", "patch": "@@ -1,5 +1,5 @@\n error: proc macro panicked\n-  --> $DIR/issue-76270-panic-in-libproc-macro.rs:15:1\n+  --> $DIR/issue-76270-panic-in-libproc-macro.rs:10:1\n    |\n LL | proc_macro_panic::panic_in_libproc_macro!();\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^", "previous_filename": "src/test/ui-fulldeps/issue-76270-panic-in-libproc-macro.stderr"}, {"sha": "cd6f70a55758c3b1b61d06ab93e27fa57388917a", "filename": "src/test/ui/proc-macro/load-panic-backtrace.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be/src%2Ftest%2Fui%2Fproc-macro%2Fload-panic-backtrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be/src%2Ftest%2Fui%2Fproc-macro%2Fload-panic-backtrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fload-panic-backtrace.rs?ref=25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be", "patch": "@@ -1,18 +1,8 @@\n // aux-build:test-macros.rs\n // compile-flags: -Z proc-macro-backtrace\n // rustc-env:RUST_BACKTRACE=0\n-\n-// FIXME https://github.com/rust-lang/rust/issues/59998\n // normalize-stderr-test \"thread '.*' panicked \" -> \"\"\n // normalize-stderr-test \"note:.*RUST_BACKTRACE=1.*\\n\" -> \"\"\n-// normalize-stderr-test \"\\nerror: internal compiler error.*\\n\\n\" -> \"\"\n-// normalize-stderr-test \"note:.*unexpectedly panicked.*\\n\\n\" -> \"\"\n-// normalize-stderr-test \"note: we would appreciate a bug report.*\\n\\n\" -> \"\"\n-// normalize-stderr-test \"note: compiler flags.*\\n\\n\" -> \"\"\n-// normalize-stderr-test \"note: rustc.*running on.*\\n\\n\" -> \"\"\n-// normalize-stderr-test \"query stack during panic:\\n\" -> \"\"\n-// normalize-stderr-test \"we're just showing a limited slice of the query stack\\n\" -> \"\"\n-// normalize-stderr-test \"end of query stack\\n\" -> \"\"\n \n #[macro_use]\n extern crate test_macros;"}, {"sha": "cef5786d1b8af0234968c5e96bb4b42db1caafa6", "filename": "src/test/ui/proc-macro/load-panic-backtrace.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be/src%2Ftest%2Fui%2Fproc-macro%2Fload-panic-backtrace.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be/src%2Ftest%2Fui%2Fproc-macro%2Fload-panic-backtrace.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fload-panic-backtrace.stderr?ref=25bb1c13bd472b75ceebee3b8dcf4dcbc431a8be", "patch": "@@ -1,6 +1,6 @@\n at 'panic-derive', $DIR/auxiliary/test-macros.rs:43:5\n error: proc-macro derive panicked\n-  --> $DIR/load-panic-backtrace.rs:20:10\n+  --> $DIR/load-panic-backtrace.rs:10:10\n    |\n LL | #[derive(Panic)]\n    |          ^^^^^"}]}