{"sha": "f77311bc2b01a2708e5676a9a3bcb3d07d5040e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3NzMxMWJjMmIwMWEyNzA4ZTU2NzZhOWEzYmNiM2QwN2Q1MDQwZTI=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2021-09-10T15:23:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-10T15:23:27Z"}, "message": "Rollup merge of #88812 - gz:patch-1, r=ehuss\n\nFix typo `option` -> `options`.", "tree": {"sha": "0d787018f0e7ee19f6a397b00552ef2dbc75712e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d787018f0e7ee19f6a397b00552ef2dbc75712e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f77311bc2b01a2708e5676a9a3bcb3d07d5040e2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhO3hvCRBK7hj4Ov3rIwAAc8cIAJhBf8yf5F9pP7zdPXrsscZY\nTCrD7q9+UaFFJ6eAsK3xMMY+fNNKlYUOybHeDhKdvOXbsqEyB44Ogr19Lo3E63NS\n5LwFtMD53kYRbp1I/L4d6W2ehApjFJoN5PeS9HaNCiKOUSCmd/vjexAfPBLsmHsD\nsWsYhIoGlgH72Hp/v9iAUp8pqUZCWS2cypUw3+1+DDD3AJsh7Q8n7x7jtFDhHw3Q\nBH/xFCgCUJ7CY/FzoPTuZ8Pn3sjUTx8koGYJoGwhwF+jYKimF89oYcHG6jlJjBqw\nEhu7r7z+Z9kuaA6LK0TvnZdQijLmGbchEZjHACUOJXUCZT4naG49biwg38w1lX4=\n=yD9s\n-----END PGP SIGNATURE-----\n", "payload": "tree 0d787018f0e7ee19f6a397b00552ef2dbc75712e\nparent 00553034db3847c61c8fc9c9e973997bf437df85\nparent 5d4d3bdc74dd7449421cc5208cffb73c75e40283\nauthor Manish Goregaokar <manishsmail@gmail.com> 1631287407 -0700\ncommitter GitHub <noreply@github.com> 1631287407 -0700\n\nRollup merge of #88812 - gz:patch-1, r=ehuss\n\nFix typo `option` -> `options`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f77311bc2b01a2708e5676a9a3bcb3d07d5040e2", "html_url": "https://github.com/rust-lang/rust/commit/f77311bc2b01a2708e5676a9a3bcb3d07d5040e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f77311bc2b01a2708e5676a9a3bcb3d07d5040e2/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00553034db3847c61c8fc9c9e973997bf437df85", "url": "https://api.github.com/repos/rust-lang/rust/commits/00553034db3847c61c8fc9c9e973997bf437df85", "html_url": "https://github.com/rust-lang/rust/commit/00553034db3847c61c8fc9c9e973997bf437df85"}, {"sha": "5d4d3bdc74dd7449421cc5208cffb73c75e40283", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d4d3bdc74dd7449421cc5208cffb73c75e40283", "html_url": "https://github.com/rust-lang/rust/commit/5d4d3bdc74dd7449421cc5208cffb73c75e40283"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "444b1cbf3cc45535d01a4f66a67c2ee4df84db76", "filename": "src/doc/unstable-book/src/library-features/asm.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f77311bc2b01a2708e5676a9a3bcb3d07d5040e2/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fasm.md", "raw_url": "https://github.com/rust-lang/rust/raw/f77311bc2b01a2708e5676a9a3bcb3d07d5040e2/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fasm.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fasm.md?ref=f77311bc2b01a2708e5676a9a3bcb3d07d5040e2", "patch": "@@ -375,7 +375,7 @@ Any reuse of a named label, local or otherwise, can result in a assembler or lin\n \n As a consequence, you should only use GNU assembler **numeric** [local labels] inside inline assembly code. Defining symbols in assembly code may lead to assembler and/or linker errors due to duplicate symbol definitions.\n \n-Moreover, on x86 when using the default intel syntax, due to [an llvm bug], you shouldn't use labels exclusively made of `0` and `1` digits, e.g. `0`, `11` or `101010`, as they may end up being interpreted as binary values. Using `option(att_syntax)` will avoid any ambiguity, but that affects the syntax of the _entire_ `asm!` block.\n+Moreover, on x86 when using the default intel syntax, due to [an llvm bug], you shouldn't use labels exclusively made of `0` and `1` digits, e.g. `0`, `11` or `101010`, as they may end up being interpreted as binary values. Using `options(att_syntax)` will avoid any ambiguity, but that affects the syntax of the _entire_ `asm!` block.\n \n ```rust,allow_fail\n #![feature(asm)]"}]}