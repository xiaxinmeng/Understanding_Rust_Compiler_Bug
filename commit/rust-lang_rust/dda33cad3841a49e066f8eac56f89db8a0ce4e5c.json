{"sha": "dda33cad3841a49e066f8eac56f89db8a0ce4e5c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkYTMzY2FkMzg0MWE0OWUwNjZmOGVhYzU2Zjg5ZGI4YTBjZTRlNWM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-14T02:18:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-14T02:18:35Z"}, "message": "Rollup merge of #62760 - chansuke:dedupe-error-messages, r=zackmdavis\n\nDeduplicate error messages in `librsctc_mir`\n\nDeduplicated the error messages in `librustc_mir`. #62022", "tree": {"sha": "59ed79117ef45c12c8b3217551e14898b0021c4b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59ed79117ef45c12c8b3217551e14898b0021c4b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dda33cad3841a49e066f8eac56f89db8a0ce4e5c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdU297CRBK7hj4Ov3rIwAAdHIIAK1nBwrgc/qeLTO3cP1S2VTN\nERtXDqPA8gxT8vRZLcjLSS9uQe6RKvC54AZ3XSRHkl4g92JPs27xyT8fdl3AJ0BK\n2kZ9IZDDoHWBnVf4MCmvS4sPfIDihRHwFpYy6m/a8Pt7fT3/d/1klKDASQ46fN+1\n9zlfc0ayHfEwuX2MZSeAfo9S2LtCDx8+HTQIgiJMPTPrKBM7MvJmroVirLnAt8vd\nBdKId3ydGJSbKwyYnm8bfpOgbuKCBv3j1McUFKuEJz/pmMa+jM0qLk79y2XDJwbg\ndsJpgts6NBv6qvx5pnNyjDgCPTyA/RcAo/gu/lStLwRKkWArE57uBau6/0FAEf0=\n=S2yC\n-----END PGP SIGNATURE-----\n", "payload": "tree 59ed79117ef45c12c8b3217551e14898b0021c4b\nparent 60960a260f7b5c695fd0717311d72ce62dd4eb43\nparent a1df1329ced590a287558510878feb17509e09b5\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1565749115 +0200\ncommitter GitHub <noreply@github.com> 1565749115 +0200\n\nRollup merge of #62760 - chansuke:dedupe-error-messages, r=zackmdavis\n\nDeduplicate error messages in `librsctc_mir`\n\nDeduplicated the error messages in `librustc_mir`. #62022\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dda33cad3841a49e066f8eac56f89db8a0ce4e5c", "html_url": "https://github.com/rust-lang/rust/commit/dda33cad3841a49e066f8eac56f89db8a0ce4e5c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dda33cad3841a49e066f8eac56f89db8a0ce4e5c/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60960a260f7b5c695fd0717311d72ce62dd4eb43", "url": "https://api.github.com/repos/rust-lang/rust/commits/60960a260f7b5c695fd0717311d72ce62dd4eb43", "html_url": "https://github.com/rust-lang/rust/commit/60960a260f7b5c695fd0717311d72ce62dd4eb43"}, {"sha": "a1df1329ced590a287558510878feb17509e09b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1df1329ced590a287558510878feb17509e09b5", "html_url": "https://github.com/rust-lang/rust/commit/a1df1329ced590a287558510878feb17509e09b5"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "52225ea8f024f2ac1d8fed47603398a188309a81", "filename": "src/librustc_mir/const_eval.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/dda33cad3841a49e066f8eac56f89db8a0ce4e5c/src%2Flibrustc_mir%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dda33cad3841a49e066f8eac56f89db8a0ce4e5c/src%2Flibrustc_mir%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval.rs?ref=dda33cad3841a49e066f8eac56f89db8a0ce4e5c", "patch": "@@ -540,6 +540,12 @@ pub fn error_to_const_error<'mir, 'tcx>(\n     ConstEvalErr { error: error.kind, stacktrace, span: ecx.tcx.span }\n }\n \n+pub fn note_on_undefined_behavior_error() -> &'static str {\n+    \"The rules on what exactly is undefined behavior aren't clear, \\\n+    so this check might be overzealous. Please open an issue on the rust compiler \\\n+    repository if you believe it should not be considered undefined behavior\"\n+}\n+\n fn validate_and_turn_into_const<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     constant: RawConst<'tcx>,\n@@ -579,10 +585,7 @@ fn validate_and_turn_into_const<'tcx>(\n         let err = error_to_const_error(&ecx, error);\n         match err.struct_error(ecx.tcx, \"it is undefined behavior to use this value\") {\n             Ok(mut diag) => {\n-                diag.note(\"The rules on what exactly is undefined behavior aren't clear, \\\n-                    so this check might be overzealous. Please open an issue on the rust compiler \\\n-                    repository if you believe it should not be considered undefined behavior\",\n-                );\n+                diag.note(note_on_undefined_behavior_error());\n                 diag.emit();\n                 ErrorHandled::Reported\n             }"}, {"sha": "32ba70a81c99792cedd200c305dff2d8623e42ec", "filename": "src/librustc_mir/interpret/intern.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/dda33cad3841a49e066f8eac56f89db8a0ce4e5c/src%2Flibrustc_mir%2Finterpret%2Fintern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dda33cad3841a49e066f8eac56f89db8a0ce4e5c/src%2Flibrustc_mir%2Finterpret%2Fintern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintern.rs?ref=dda33cad3841a49e066f8eac56f89db8a0ce4e5c", "patch": "@@ -296,11 +296,7 @@ pub fn intern_const_alloc_recursive(\n                 let err = crate::const_eval::error_to_const_error(&ecx, error);\n                 match err.struct_error(ecx.tcx, \"it is undefined behavior to use this value\") {\n                     Ok(mut diag) => {\n-                        diag.note(\"The rules on what exactly is undefined behavior aren't clear, \\\n-                            so this check might be overzealous. Please open an issue on the rust \\\n-                            compiler repository if you believe it should not be considered \\\n-                            undefined behavior\",\n-                        );\n+                        diag.note(crate::const_eval::note_on_undefined_behavior_error());\n                         diag.emit();\n                     }\n                     Err(ErrorHandled::TooGeneric) |"}]}