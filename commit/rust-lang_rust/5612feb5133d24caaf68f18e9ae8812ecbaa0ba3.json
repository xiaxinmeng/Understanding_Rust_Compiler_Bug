{"sha": "5612feb5133d24caaf68f18e9ae8812ecbaa0ba3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2MTJmZWI1MTMzZDI0Y2FhZjY4ZjE4ZTlhZTg4MTJlY2JhYTBiYTM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-06-30T13:06:13Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-07-04T08:38:54Z"}, "message": "add machine hook to handle calls to 'extra' function values", "tree": {"sha": "5b1bc76b043a0772b92ac153fc57a85e9d522bdf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b1bc76b043a0772b92ac153fc57a85e9d522bdf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5612feb5133d24caaf68f18e9ae8812ecbaa0ba3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5612feb5133d24caaf68f18e9ae8812ecbaa0ba3", "html_url": "https://github.com/rust-lang/rust/commit/5612feb5133d24caaf68f18e9ae8812ecbaa0ba3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5612feb5133d24caaf68f18e9ae8812ecbaa0ba3/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1297a274a37f6e7c48ad8cc8a402c28d83cb98b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/1297a274a37f6e7c48ad8cc8a402c28d83cb98b5", "html_url": "https://github.com/rust-lang/rust/commit/1297a274a37f6e7c48ad8cc8a402c28d83cb98b5"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "74df2898db4c56ce37a6269819c8c26cee9f66d3", "filename": "src/librustc_mir/const_eval.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5612feb5133d24caaf68f18e9ae8812ecbaa0ba3/src%2Flibrustc_mir%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5612feb5133d24caaf68f18e9ae8812ecbaa0ba3/src%2Flibrustc_mir%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval.rs?ref=5612feb5133d24caaf68f18e9ae8812ecbaa0ba3", "patch": "@@ -371,6 +371,16 @@ impl<'mir, 'tcx> interpret::Machine<'mir, 'tcx> for CompileTimeInterpreter<'mir,\n         }))\n     }\n \n+    fn call_extra_fn(\n+        _ecx: &mut InterpretCx<'mir, 'tcx, Self>,\n+        fn_val: !,\n+        _args: &[OpTy<'tcx>],\n+        _dest: Option<PlaceTy<'tcx>>,\n+        _ret: Option<mir::BasicBlock>,\n+    ) -> InterpResult<'tcx> {\n+        match fn_val {}\n+    }\n+\n     fn call_intrinsic(\n         ecx: &mut InterpCx<'mir, 'tcx, Self>,\n         instance: ty::Instance<'tcx>,"}, {"sha": "b35d468c49a91664dade723539945dabf8bacda0", "filename": "src/librustc_mir/interpret/machine.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5612feb5133d24caaf68f18e9ae8812ecbaa0ba3/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5612feb5133d24caaf68f18e9ae8812ecbaa0ba3/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmachine.rs?ref=5612feb5133d24caaf68f18e9ae8812ecbaa0ba3", "patch": "@@ -124,6 +124,16 @@ pub trait Machine<'mir, 'tcx>: Sized {\n         ret: Option<mir::BasicBlock>,\n     ) -> InterpResult<'tcx, Option<&'mir mir::Body<'tcx>>>;\n \n+    /// Execute `fn_val`.  it is the hook's responsibility to advance the instruction\n+    /// pointer as appropriate.\n+    fn call_extra_fn(\n+        ecx: &mut InterpretCx<'mir, 'tcx, Self>,\n+        fn_val: Self::ExtraFnVal,\n+        args: &[OpTy<'tcx, Self::PointerTag>],\n+        dest: Option<PlaceTy<'tcx, Self::PointerTag>>,\n+        ret: Option<mir::BasicBlock>,\n+    ) -> InterpResult<'tcx>;\n+\n     /// Directly process an intrinsic without pushing a stack frame.\n     /// If this returns successfully, the engine will take care of jumping to the next block.\n     fn call_intrinsic("}, {"sha": "7978e8c36c772b9e0ee89e62b24bbf201a41dfb8", "filename": "src/librustc_mir/interpret/terminator.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5612feb5133d24caaf68f18e9ae8812ecbaa0ba3/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5612feb5133d24caaf68f18e9ae8812ecbaa0ba3/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs?ref=5612feb5133d24caaf68f18e9ae8812ecbaa0ba3", "patch": "@@ -237,7 +237,12 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n     ) -> InterpResult<'tcx> {\n         trace!(\"eval_fn_call: {:#?}\", fn_val);\n \n-        let instance = fn_val.as_instance()?;\n+        let instance = match fn_val {\n+            FnVal::Instance(instance) => instance,\n+            FnVal::Other(extra) => {\n+                return M::call_extra_fn(self, extra, args, dest, ret);\n+            }\n+        };\n \n         match instance.def {\n             ty::InstanceDef::Intrinsic(..) => {"}]}