{"sha": "02869e3041cf7c30d8cb71c967931352dea66b80", "node_id": "C_kwDOAAsO6NoAKDAyODY5ZTMwNDFjZjdjMzBkOGNiNzFjOTY3OTMxMzUyZGVhNjZiODA", "commit": {"author": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2022-09-23T12:53:38Z"}, "committer": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2022-09-23T13:36:23Z"}, "message": "replace --remote with the --bind flag in remote-test-server", "tree": {"sha": "e551866de70559b01bf204cef625b2733bd4103f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e551866de70559b01bf204cef625b2733bd4103f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02869e3041cf7c30d8cb71c967931352dea66b80", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEMycKYjxLY0eb13b7zXazX3c0dp4FAmMttlcACgkQzXazX3c0\ndp7ZGw//RZH48YzU25NwcMnfDQzJdn1gR4hFny3rfOJXwYiBEtCLy4dBvxSRjVBy\njrZRAqYkWo4Hf9ajqOIFh77BSY1wWtZvvrYyqkSEcvS6LiLAMdCa1YW/jAIGvHAM\nD2dOlNSswJ3JKhNf/rk4wKV26uiPTCvU0ARItWert+FezqEckXgQ+h84LkwVcBbe\neNb4LzoKhKpNuwNHf27M8dr1oJGtqOHP3k9GPo6QhujMrzRETto35FdDX9m8+wbs\nw/8/TWxyMee8XplbXzxSgdX9yS8HEDXYpvWNuJ42H7cAinXGglktsyxS1M3I1qsW\nT33AiQwhsSKxHqKM6kYSPlEoQUqdrU5W+x7FBYzMWs/hthHoCjSg4YCc7BlfiJZH\nTD7g/N99wp7YyfxUQsEYKTrXuk9qq7MOHWsp4yd+4Sle8TpOsmrT731bRFYjuOIg\nzrq6kAcuorhfUq31LhGnkZUl+INkWnrWX5YabEL6CsbgZN08q2fn6P7ltzW2INLS\nGgg777cxQOWL25O63XxSI9f1qCIOIQWesJ8yUU5ga9oFd8rifXpyyOBL4r/4YUg4\nIBFtt3kuzAbUSOWPWZSYLqNW0dyfts5KY+ZZEXs629AodmdAuGCdMWJi+ktN61dD\nUcReUaut80W1FE0CkQqWFaNtBk5tPeDcYA6dQZPXIc0rezxUwng=\n=JG4F\n-----END PGP SIGNATURE-----", "payload": "tree e551866de70559b01bf204cef625b2733bd4103f\nparent c057d04b926314803769f7fda31b75fe01e911ec\nauthor Pietro Albini <pietro.albini@ferrous-systems.com> 1663937618 +0200\ncommitter Pietro Albini <pietro.albini@ferrous-systems.com> 1663940183 +0200\n\nreplace --remote with the --bind flag in remote-test-server\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02869e3041cf7c30d8cb71c967931352dea66b80", "html_url": "https://github.com/rust-lang/rust/commit/02869e3041cf7c30d8cb71c967931352dea66b80", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02869e3041cf7c30d8cb71c967931352dea66b80/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c057d04b926314803769f7fda31b75fe01e911ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/c057d04b926314803769f7fda31b75fe01e911ec", "html_url": "https://github.com/rust-lang/rust/commit/c057d04b926314803769f7fda31b75fe01e911ec"}], "stats": {"total": 32, "additions": 21, "deletions": 11}, "files": [{"sha": "058cf9a911a9b6f23ab3b078f00c0768dd42ba70", "filename": "src/tools/remote-test-server/src/main.rs", "status": "modified", "additions": 21, "deletions": 11, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/02869e3041cf7c30d8cb71c967931352dea66b80/src%2Ftools%2Fremote-test-server%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02869e3041cf7c30d8cb71c967931352dea66b80/src%2Ftools%2Fremote-test-server%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fremote-test-server%2Fsrc%2Fmain.rs?ref=02869e3041cf7c30d8cb71c967931352dea66b80", "patch": "@@ -12,6 +12,7 @@\n \n #[cfg(not(windows))]\n use std::fs::Permissions;\n+use std::net::SocketAddr;\n #[cfg(not(windows))]\n use std::os::unix::prelude::*;\n \n@@ -41,26 +42,41 @@ static TEST: AtomicUsize = AtomicUsize::new(0);\n \n #[derive(Copy, Clone)]\n struct Config {\n-    remote: bool,\n     verbose: bool,\n+    bind: SocketAddr,\n }\n \n impl Config {\n     pub fn default() -> Config {\n-        Config { remote: false, verbose: false }\n+        Config {\n+            verbose: false,\n+            bind: if cfg!(target_os = \"android\") || cfg!(windows) {\n+                ([0, 0, 0, 0], 12345).into()\n+            } else {\n+                ([10, 0, 2, 15], 12345).into()\n+            },\n+        }\n     }\n \n     pub fn parse_args() -> Config {\n         let mut config = Config::default();\n \n         let args = env::args().skip(1);\n+        let mut next_is_bind = false;\n         for argument in args {\n             match &argument[..] {\n-                \"--remote\" => config.remote = true,\n+                bind if next_is_bind => {\n+                    config.bind = t!(bind.parse());\n+                    next_is_bind = false;\n+                }\n+                \"--bind\" => next_is_bind = true,\n                 \"--verbose\" | \"-v\" => config.verbose = true,\n                 arg => panic!(\"unknown argument: {}\", arg),\n             }\n         }\n+        if next_is_bind {\n+            panic!(\"missing value for --bind\");\n+        }\n \n         config\n     }\n@@ -77,13 +93,7 @@ fn main() {\n \n     let config = Config::parse_args();\n \n-    let bind_addr = if cfg!(target_os = \"android\") || cfg!(windows) || config.remote {\n-        \"0.0.0.0:12345\"\n-    } else {\n-        \"10.0.2.15:12345\"\n-    };\n-\n-    let listener = t!(TcpListener::bind(bind_addr));\n+    let listener = t!(TcpListener::bind(config.bind));\n     let (work, tmp): (PathBuf, PathBuf) = if cfg!(target_os = \"android\") {\n         (\"/data/tmp/work\".into(), \"/data/tmp/work/tmp\".into())\n     } else {\n@@ -93,7 +103,7 @@ fn main() {\n         tmp_dir.push(\"tmp\");\n         (work_dir, tmp_dir)\n     };\n-    println!(\"listening on {}!\", bind_addr);\n+    println!(\"listening on {}!\", config.bind);\n \n     t!(fs::create_dir_all(&work));\n     t!(fs::create_dir_all(&tmp));"}]}