{"sha": "7e76505e0105e3102ed14d827dd727afc1c9fd92", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlNzY1MDVlMDEwNWUzMTAyZWQxNGQ4MjdkZDcyN2FmYzFjOWZkOTI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-06-24T09:32:20Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-06-24T09:32:20Z"}, "message": "Auto merge of #42854 - razielgn:relaxed-debug-constraints-on-maps-iterators, r=sfackler\n\nRelaxed Debug constraints on {HashMap,BTreeMap}::{Keys,Values}.\n\nI has hit by this yesterday too. \ud83d\ude04\nAnd I've realised that Debug for BTreeMap::{Keys,Values} wasn't formatting just keys and values respectively, but the whole map. \ud83e\udd14\n\nFixed #41924\n\nr? @jonhoo", "tree": {"sha": "01fae6d0aa3e37e561aea864057a917b2976ee5c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01fae6d0aa3e37e561aea864057a917b2976ee5c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e76505e0105e3102ed14d827dd727afc1c9fd92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e76505e0105e3102ed14d827dd727afc1c9fd92", "html_url": "https://github.com/rust-lang/rust/commit/7e76505e0105e3102ed14d827dd727afc1c9fd92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e76505e0105e3102ed14d827dd727afc1c9fd92/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0081b36b457b697d4b87670ca66b6d082c8ebfd", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0081b36b457b697d4b87670ca66b6d082c8ebfd", "html_url": "https://github.com/rust-lang/rust/commit/b0081b36b457b697d4b87670ca66b6d082c8ebfd"}, {"sha": "545bfcd864683a6e774762cf5f872615de7b1b51", "url": "https://api.github.com/repos/rust-lang/rust/commits/545bfcd864683a6e774762cf5f872615de7b1b51", "html_url": "https://github.com/rust-lang/rust/commit/545bfcd864683a6e774762cf5f872615de7b1b51"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "a51c70159db4d788c2a5454e161f22fe92627393", "filename": "src/liballoc/btree/map.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7e76505e0105e3102ed14d827dd727afc1c9fd92/src%2Fliballoc%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e76505e0105e3102ed14d827dd727afc1c9fd92/src%2Fliballoc%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fbtree%2Fmap.rs?ref=7e76505e0105e3102ed14d827dd727afc1c9fd92", "patch": "@@ -334,9 +334,9 @@ pub struct Keys<'a, K: 'a, V: 'a> {\n }\n \n #[stable(feature = \"collection_debug\", since = \"1.17.0\")]\n-impl<'a, K: 'a + fmt::Debug, V: 'a + fmt::Debug> fmt::Debug for Keys<'a, K, V> {\n+impl<'a, K: 'a + fmt::Debug, V: 'a> fmt::Debug for Keys<'a, K, V> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        f.debug_list().entries(self.inner.clone()).finish()\n+        f.debug_list().entries(self.clone()).finish()\n     }\n }\n \n@@ -353,9 +353,9 @@ pub struct Values<'a, K: 'a, V: 'a> {\n }\n \n #[stable(feature = \"collection_debug\", since = \"1.17.0\")]\n-impl<'a, K: 'a + fmt::Debug, V: 'a + fmt::Debug> fmt::Debug for Values<'a, K, V> {\n+impl<'a, K: 'a, V: 'a + fmt::Debug> fmt::Debug for Values<'a, K, V> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        f.debug_list().entries(self.inner.clone()).finish()\n+        f.debug_list().entries(self.clone()).finish()\n     }\n }\n "}, {"sha": "31efae18816c21dcb6265dbd9e8cccfd7d707392", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7e76505e0105e3102ed14d827dd727afc1c9fd92/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e76505e0105e3102ed14d827dd727afc1c9fd92/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=7e76505e0105e3102ed14d827dd727afc1c9fd92", "patch": "@@ -1407,7 +1407,7 @@ impl<'a, K, V> Clone for Keys<'a, K, V> {\n }\n \n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n-impl<'a, K: Debug, V: Debug> fmt::Debug for Keys<'a, K, V> {\n+impl<'a, K: Debug, V> fmt::Debug for Keys<'a, K, V> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.debug_list()\n             .entries(self.clone())\n@@ -1436,7 +1436,7 @@ impl<'a, K, V> Clone for Values<'a, K, V> {\n }\n \n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n-impl<'a, K: Debug, V: Debug> fmt::Debug for Values<'a, K, V> {\n+impl<'a, K, V: Debug> fmt::Debug for Values<'a, K, V> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.debug_list()\n             .entries(self.clone())"}]}