{"sha": "a4f781e47710d8c938130446bf4cd5e9be2231d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0Zjc4MWU0NzcxMGQ4YzkzODEzMDQ0NmJmNGNkNWU5YmUyMjMxZDI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-04-12T17:12:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-04-12T17:12:55Z"}, "message": "Auto merge of #31963 - barosl:rename-doc, r=alexcrichton\n\nDescribe more platform-specific behaviors of `std::fs::rename`\n\nI did some tests myself regarding the situation when both `from` and `to` exist, and the results were:\n\nOn Linux:\n\n`from` | `to` | Result\n---- | ---- | ----\nDirectory | Directory | Ok\nDirectory | File | Error\nFile | Directory | Error\nFile | File | Ok\n\nOn Windows:\n\n`from` | `to` | Result\n---- | ---- | ----\nDirectory | Directory | Error\nDirectory | File | Ok\nFile | Directory | Error\nFile | File | Ok\n\nThis is a bit against the official MSDN documentation, which says \"(`MOVEFILE_REPLACE_EXISTING`) cannot be used if `lpNewFileName` or `lpExistingFileName` names a directory.\" As evidenced above, `lpExistingFileName` *can* be a directory.\n\nI also mentioned the atomicity of the operation.\n\nFixes #31301.", "tree": {"sha": "14c792420a3b1405b59acf413a57b54eef1bf2f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14c792420a3b1405b59acf413a57b54eef1bf2f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4f781e47710d8c938130446bf4cd5e9be2231d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4f781e47710d8c938130446bf4cd5e9be2231d2", "html_url": "https://github.com/rust-lang/rust/commit/a4f781e47710d8c938130446bf4cd5e9be2231d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4f781e47710d8c938130446bf4cd5e9be2231d2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "933000613b7774727dd7f1bfe766e2bee71c5747", "url": "https://api.github.com/repos/rust-lang/rust/commits/933000613b7774727dd7f1bfe766e2bee71c5747", "html_url": "https://github.com/rust-lang/rust/commit/933000613b7774727dd7f1bfe766e2bee71c5747"}, {"sha": "bcbc9e5346941011f36f71f66c808675b263a589", "url": "https://api.github.com/repos/rust-lang/rust/commits/bcbc9e5346941011f36f71f66c808675b263a589", "html_url": "https://github.com/rust-lang/rust/commit/bcbc9e5346941011f36f71f66c808675b263a589"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "03ebaa59ca56287ca76a35ffe2fa7c5161d5a572", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a4f781e47710d8c938130446bf4cd5e9be2231d2/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4f781e47710d8c938130446bf4cd5e9be2231d2/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=a4f781e47710d8c938130446bf4cd5e9be2231d2", "patch": "@@ -965,14 +965,21 @@ pub fn symlink_metadata<P: AsRef<Path>>(path: P) -> io::Result<Metadata> {\n     fs_imp::lstat(path.as_ref()).map(Metadata)\n }\n \n-/// Rename a file or directory to a new name.\n+/// Rename a file or directory to a new name, replacing the original file if\n+/// `to` already exists.\n ///\n /// This will not work if the new name is on a different mount point.\n ///\n /// # Platform-specific behavior\n ///\n /// This function currently corresponds to the `rename` function on Unix\n /// and the `MoveFileEx` function with the `MOVEFILE_REPLACE_EXISTING` flag on Windows.\n+///\n+/// Because of this, the behavior when both `from` and `to` exist differs. On\n+/// Unix, if `from` is a directory, `to` must also be an (empty) directory. If\n+/// `from` is not a directory, `to` must also be not a directory. In contrast,\n+/// on Windows, `from` can be anything, but `to` must *not* be a directory.\n+///\n /// Note that, this [may change in the future][changes].\n /// [changes]: ../io/index.html#platform-specific-behavior\n ///"}]}