{"sha": "20a2716206ca879ad9848cbb4ac9fcc739dd3f77", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwYTI3MTYyMDZjYTg3OWFkOTg0OGNiYjRhYzlmY2M3MzlkZDNmNzc=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-08-17T19:14:35Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-08-17T22:48:39Z"}, "message": "Check for `else` keyword on missing `if` condition", "tree": {"sha": "ffdfeb1cfec33b0253c60f0efab5ef627a0ba49a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ffdfeb1cfec33b0253c60f0efab5ef627a0ba49a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20a2716206ca879ad9848cbb4ac9fcc739dd3f77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20a2716206ca879ad9848cbb4ac9fcc739dd3f77", "html_url": "https://github.com/rust-lang/rust/commit/20a2716206ca879ad9848cbb4ac9fcc739dd3f77", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20a2716206ca879ad9848cbb4ac9fcc739dd3f77/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4672f8e879a0c31fbe26990551693da16f00a98", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4672f8e879a0c31fbe26990551693da16f00a98", "html_url": "https://github.com/rust-lang/rust/commit/c4672f8e879a0c31fbe26990551693da16f00a98"}], "stats": {"total": 41, "additions": 12, "deletions": 29}, "files": [{"sha": "22999afb48ea2461a2e1b2eb40ce52c952e6165e", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 11, "deletions": 16, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/20a2716206ca879ad9848cbb4ac9fcc739dd3f77/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20a2716206ca879ad9848cbb4ac9fcc739dd3f77/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=20a2716206ca879ad9848cbb4ac9fcc739dd3f77", "patch": "@@ -2130,7 +2130,7 @@ impl<'a> Parser<'a> {\n                     return self.parse_lambda_expr(lo, CaptureBy::Value, attrs);\n                 }\n                 if self.eat_keyword(keywords::If) {\n-                    return self.parse_if_expr(attrs, false);\n+                    return self.parse_if_expr(attrs);\n                 }\n                 if self.eat_keyword(keywords::For) {\n                     let lo = self.prev_span;\n@@ -2962,25 +2962,20 @@ impl<'a> Parser<'a> {\n     }\n \n     /// Parse an 'if' or 'if let' expression ('if' token already eaten)\n-    pub fn parse_if_expr(&mut self, attrs: ThinVec<Attribute>,\n-                         in_else: bool) -> PResult<'a, P<Expr>> {\n+    pub fn parse_if_expr(&mut self, attrs: ThinVec<Attribute>) -> PResult<'a, P<Expr>> {\n         if self.check_keyword(keywords::Let) {\n             return self.parse_if_let_expr(attrs);\n         }\n         let lo = self.prev_span;\n         let cond = self.parse_expr_res(RESTRICTION_NO_STRUCT_LITERAL, None)?;\n-        let thn = self.parse_block().map_err(|mut err| {\n-            if in_else {\n-                err.cancel();\n-                let sp = lo.next_point();\n-                let mut err = self.diagnostic()\n-                    .struct_span_err(sp, \"missing condition for `if` statemement\");\n-                err.span_label(sp, \"expected if condition here\");\n-                err\n-            } else {\n-                err\n-            }\n-        })?;\n+        if self.eat_keyword(keywords::Else) {\n+            let sp = lo.next_point();\n+            let mut err = self.diagnostic()\n+                .struct_span_err(sp, \"missing condition for `if` statemement\");\n+            err.span_label(sp, \"expected if condition here\");\n+            return Err(err)\n+        }\n+        let thn = self.parse_block()?;\n         let mut els: Option<P<Expr>> = None;\n         let mut hi = thn.span;\n         if self.eat_keyword(keywords::Else) {\n@@ -3037,7 +3032,7 @@ impl<'a> Parser<'a> {\n     // `else` token already eaten\n     pub fn parse_else_expr(&mut self) -> PResult<'a, P<Expr>> {\n         if self.eat_keyword(keywords::If) {\n-            return self.parse_if_expr(ThinVec::new(), true);\n+            return self.parse_if_expr(ThinVec::new());\n         } else {\n             let blk = self.parse_block()?;\n             return Ok(self.mk_expr(blk.span, ExprKind::Block(blk), ThinVec::new()));"}, {"sha": "e94dc38c5e92404530575edb35e18f1ced0120a6", "filename": "src/test/ui/issue-13483.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/20a2716206ca879ad9848cbb4ac9fcc739dd3f77/src%2Ftest%2Fui%2Fissue-13483.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20a2716206ca879ad9848cbb4ac9fcc739dd3f77/src%2Ftest%2Fui%2Fissue-13483.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-13483.rs?ref=20a2716206ca879ad9848cbb4ac9fcc739dd3f77", "patch": "@@ -14,9 +14,3 @@ fn main() {\n     } else {\n     };\n }\n-\n-fn foo() {\n-    if true {\n-    } else if { //ERROR: MISSING CONDITIONAL\n-    };\n-}"}, {"sha": "e49fdcf6d20a33b8623e101793530741eb8b2bb2", "filename": "src/test/ui/issue-13483.stderr", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/20a2716206ca879ad9848cbb4ac9fcc739dd3f77/src%2Ftest%2Fui%2Fissue-13483.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/20a2716206ca879ad9848cbb4ac9fcc739dd3f77/src%2Ftest%2Fui%2Fissue-13483.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-13483.stderr?ref=20a2716206ca879ad9848cbb4ac9fcc739dd3f77", "patch": "@@ -4,11 +4,5 @@ error: missing condition for `if` statemement\n 13 |     } else if { //ERROR: MISSING CONDITIONAL\n    |              ^ expected if condition here\n \n-error: missing conditional\n-  --> $DIR/issue-13483.rs:20:14\n-   |\n-20 |     } else if { //ERROR: MISSING CONDITIONAL\n-   |              ^ expected if condition here\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n "}]}