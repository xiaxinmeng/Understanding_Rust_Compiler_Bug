{"sha": "4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiYjc3MTYxNWUxOTRlNjRkMGZjOWNkOTdjMWNkY2M0OTcyYTE3NzE=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-10-14T04:48:39Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-10-14T04:48:39Z"}, "message": "Bring attention to suggestions when the only difference is capitalization", "tree": {"sha": "c5f7fcb29adf6e80ebe2fe23a8066b95cdec7757", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5f7fcb29adf6e80ebe2fe23a8066b95cdec7757"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "html_url": "https://github.com/rust-lang/rust/commit/4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "898f36c83cc28d7921a1d7b3605323dc5cfcf533", "url": "https://api.github.com/repos/rust-lang/rust/commits/898f36c83cc28d7921a1d7b3605323dc5cfcf533", "html_url": "https://github.com/rust-lang/rust/commit/898f36c83cc28d7921a1d7b3605323dc5cfcf533"}], "stats": {"total": 192, "additions": 121, "deletions": 71}, "files": [{"sha": "e7542029ac634950bcb40ec710a1657d5cb44f54", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "patch": "@@ -23,7 +23,7 @@ use syntax::feature_gate::UnstableFeatures;\n use syntax::source_map::SourceMap;\n \n use errors::emitter::HumanReadableErrorType;\n-use errors::{ColorConfig, FatalError, Handler};\n+use errors::{ColorConfig, FatalError, Handler, SourceMapperDyn};\n \n use getopts;\n \n@@ -1854,6 +1854,7 @@ struct NullEmitter;\n \n impl errors::emitter::Emitter for NullEmitter {\n     fn emit_diagnostic(&mut self, _: &errors::Diagnostic) {}\n+    fn source_map(&self) -> Option<&Lrc<SourceMapperDyn>> { None }\n }\n \n // Converts strings provided as `--cfg [cfgspec]` into a `crate_cfg`."}, {"sha": "ef3b115890f8b77fb649c9b0aa02d868ab29d10f", "filename": "src/librustc_codegen_ssa/back/write.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Flibrustc_codegen_ssa%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Flibrustc_codegen_ssa%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Fwrite.rs?ref=4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "patch": "@@ -22,7 +22,8 @@ use rustc::util::common::{time_depth, set_time_depth, print_time_passes_entry};\n use rustc::util::profiling::SelfProfilerRef;\n use rustc_fs_util::link_or_copy;\n use rustc_data_structures::svh::Svh;\n-use rustc_errors::{Handler, Level, FatalError, DiagnosticId};\n+use rustc_data_structures::sync::Lrc;\n+use rustc_errors::{Handler, Level, FatalError, DiagnosticId, SourceMapperDyn};\n use rustc_errors::emitter::{Emitter};\n use rustc_target::spec::MergeFunctions;\n use syntax::attr;\n@@ -1681,6 +1682,9 @@ impl Emitter for SharedEmitter {\n         }\n         drop(self.sender.send(SharedEmitterMessage::AbortIfErrors));\n     }\n+    fn source_map(&self) -> Option<&Lrc<SourceMapperDyn>> {\n+        None\n+    }\n }\n \n impl SharedEmitterMain {"}, {"sha": "16a1a28cd3a80c968bdcc20552cfec3620dcad40", "filename": "src/librustc_errors/annotate_snippet_emitter_writer.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Flibrustc_errors%2Fannotate_snippet_emitter_writer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Flibrustc_errors%2Fannotate_snippet_emitter_writer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Fannotate_snippet_emitter_writer.rs?ref=4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "patch": "@@ -49,6 +49,10 @@ impl Emitter for AnnotateSnippetEmitterWriter {\n                                    &suggestions);\n     }\n \n+    fn source_map(&self) -> Option<&Lrc<SourceMapperDyn>> {\n+        self.source_map.as_ref()\n+    }\n+\n     fn should_show_explain(&self) -> bool {\n         !self.short_message\n     }"}, {"sha": "04084453768064fdc34c0f1b599ef0e47f6c3812", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 28, "deletions": 4, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "patch": "@@ -192,6 +192,8 @@ pub trait Emitter {\n         true\n     }\n \n+    fn source_map(&self) -> Option<&Lrc<SourceMapperDyn>>;\n+\n     /// Formats the substitutions of the primary_span\n     ///\n     /// The are a lot of conditions to this method, but in short:\n@@ -204,7 +206,7 @@ pub trait Emitter {\n     ///   we return the original `primary_span` and the original suggestions.\n     fn primary_span_formatted<'a>(\n         &mut self,\n-        db: &'a Diagnostic\n+        db: &'a Diagnostic,\n     ) -> (MultiSpan, &'a [CodeSuggestion]) {\n         let mut primary_span = db.span.clone();\n         if let Some((sugg, rest)) = db.suggestions.split_first() {\n@@ -234,7 +236,20 @@ pub trait Emitter {\n                     format!(\"help: {}\", sugg.msg)\n                 } else {\n                     // Show the default suggestion text with the substitution\n-                    format!(\"help: {}: `{}`\", sugg.msg, substitution)\n+                    format!(\n+                        \"help: {}{}: `{}`\",\n+                        sugg.msg,\n+                        if self.source_map().as_ref().map(|sm| substitution.to_lowercase() == sm\n+                            .span_to_snippet(sugg.substitutions[0].parts[0].span)\n+                            .unwrap()\n+                            .to_lowercase()).unwrap_or(false)\n+                        {\n+                            \" (notice the capitalization)\"\n+                        } else {\n+                            \"\"\n+                        },\n+                        substitution,\n+                    )\n                 };\n                 primary_span.push_span_label(sugg.substitutions[0].parts[0].span, msg);\n \n@@ -382,6 +397,10 @@ pub trait Emitter {\n }\n \n impl Emitter for EmitterWriter {\n+    fn source_map(&self) -> Option<&Lrc<SourceMapperDyn>> {\n+        self.sm.as_ref()\n+    }\n+\n     fn emit_diagnostic(&mut self, db: &Diagnostic) {\n         let mut children = db.children.clone();\n         let (mut primary_span, suggestions) = self.primary_span_formatted(&db);\n@@ -1461,7 +1480,9 @@ impl EmitterWriter {\n         let suggestions = suggestion.splice_lines(&**sm);\n \n         let mut row_num = 2;\n-        for &(ref complete, ref parts) in suggestions.iter().take(MAX_SUGGESTIONS) {\n+        let mut notice_capitalization = false;\n+        for (complete, parts, only_capitalization) in suggestions.iter().take(MAX_SUGGESTIONS) {\n+            notice_capitalization |= only_capitalization;\n             // Only show underline if the suggestion spans a single line and doesn't cover the\n             // entirety of the code output. If you have multiple replacements in the same line\n             // of code, show the underline.\n@@ -1552,7 +1573,10 @@ impl EmitterWriter {\n         }\n         if suggestions.len() > MAX_SUGGESTIONS {\n             let msg = format!(\"and {} other candidates\", suggestions.len() - MAX_SUGGESTIONS);\n-            buffer.puts(row_num, 0, &msg, Style::NoStyle);\n+            buffer.puts(row_num, max_line_num_len + 3, &msg, Style::NoStyle);\n+        } else if notice_capitalization {\n+            let msg = \"notice the capitalization difference\";\n+            buffer.puts(row_num, max_line_num_len + 3, &msg, Style::NoStyle);\n         }\n         emit_to_destination(&buffer.render(), level, &mut self.dst, self.short_message)?;\n         Ok(())"}, {"sha": "babaeb7e532aeba1846e6aeae77e766b4f0655b1", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 21, "deletions": 11, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "patch": "@@ -37,13 +37,16 @@ pub mod registry;\n mod styled_buffer;\n mod lock;\n \n-use syntax_pos::{BytePos,\n-                 Loc,\n-                 FileLinesResult,\n-                 SourceFile,\n-                 FileName,\n-                 MultiSpan,\n-                 Span};\n+use syntax_pos::{\n+    BytePos,\n+    FileLinesResult,\n+    FileName,\n+    Loc,\n+    MultiSpan,\n+    SourceFile,\n+    Span,\n+    SpanSnippetError,\n+};\n \n /// Indicates the confidence in the correctness of a suggestion.\n ///\n@@ -147,6 +150,7 @@ pub trait SourceMapper {\n     fn lookup_char_pos(&self, pos: BytePos) -> Loc;\n     fn span_to_lines(&self, sp: Span) -> FileLinesResult;\n     fn span_to_string(&self, sp: Span) -> String;\n+    fn span_to_snippet(&self, sp: Span) -> Result<String, SpanSnippetError>;\n     fn span_to_filename(&self, sp: Span) -> FileName;\n     fn merge_spans(&self, sp_lhs: Span, sp_rhs: Span) -> Option<Span>;\n     fn call_span_if_macro(&self, sp: Span) -> Span;\n@@ -155,9 +159,12 @@ pub trait SourceMapper {\n }\n \n impl CodeSuggestion {\n-    /// Returns the assembled code suggestions and whether they should be shown with an underline.\n-    pub fn splice_lines(&self, cm: &SourceMapperDyn)\n-                        -> Vec<(String, Vec<SubstitutionPart>)> {\n+    /// Returns the assembled code suggestions, whether they should be shown with an underline\n+    /// and whether the substitution only differs in capitalization.\n+    pub fn splice_lines(\n+        &self,\n+        cm: &SourceMapperDyn,\n+    ) -> Vec<(String, Vec<SubstitutionPart>, bool)> {\n         use syntax_pos::{CharPos, Pos};\n \n         fn push_trailing(buf: &mut String,\n@@ -232,6 +239,8 @@ impl CodeSuggestion {\n                 prev_hi = cm.lookup_char_pos(part.span.hi());\n                 prev_line = fm.get_line(prev_hi.line - 1);\n             }\n+            let only_capitalization = buf.clone().to_lowercase()\n+                == cm.span_to_snippet(bounding_span).unwrap().to_lowercase();\n             // if the replacement already ends with a newline, don't print the next line\n             if !buf.ends_with('\\n') {\n                 push_trailing(&mut buf, prev_line.as_ref(), &prev_hi, None);\n@@ -240,7 +249,8 @@ impl CodeSuggestion {\n             while buf.ends_with('\\n') {\n                 buf.pop();\n             }\n-            (buf, substitution.parts)\n+            (buf, substitution.parts, only_capitalization)\n+            \n         }).collect()\n     }\n }"}, {"sha": "4cf987417b8ed49d0e34507be4a0528ea9c2752e", "filename": "src/libsyntax/json.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Flibsyntax%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Flibsyntax%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fjson.rs?ref=4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "patch": "@@ -12,7 +12,7 @@\n use crate::source_map::{SourceMap, FilePathMapping};\n \n use errors::registry::Registry;\n-use errors::{SubDiagnostic, CodeSuggestion, SourceMapper};\n+use errors::{SubDiagnostic, CodeSuggestion, SourceMapper, SourceMapperDyn};\n use errors::{DiagnosticId, Applicability};\n use errors::emitter::{Emitter, HumanReadableErrorType};\n \n@@ -113,6 +113,10 @@ impl Emitter for JsonEmitter {\n         }\n     }\n \n+    fn source_map(&self) -> Option<&Lrc<SourceMapperDyn>> {\n+        Some(&self.sm)\n+    }\n+\n     fn should_show_explain(&self) -> bool {\n         match self.json_rendered {\n             HumanReadableErrorType::Short(_) => false,"}, {"sha": "f6ba75dd5b532b98790be488847351bdc88a9cd9", "filename": "src/libsyntax/source_map.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Flibsyntax%2Fsource_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Flibsyntax%2Fsource_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fsource_map.rs?ref=4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "patch": "@@ -987,6 +987,9 @@ impl SourceMapper for SourceMap {\n     fn span_to_string(&self, sp: Span) -> String {\n         self.span_to_string(sp)\n     }\n+    fn span_to_snippet(&self, sp: Span) -> Result<String, SpanSnippetError> {\n+        self.span_to_snippet(sp)\n+    }\n     fn span_to_filename(&self, sp: Span) -> FileName {\n         self.span_to_filename(sp)\n     }"}, {"sha": "32cf8d8a01a783bbea196604263e4c24169de95e", "filename": "src/test/ui/const-generics/const-parameter-uppercase-lint.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Fconst-generics%2Fconst-parameter-uppercase-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Fconst-generics%2Fconst-parameter-uppercase-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-parameter-uppercase-lint.stderr?ref=4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "patch": "@@ -10,7 +10,7 @@ error: const parameter `x` should have an upper case name\n   --> $DIR/const-parameter-uppercase-lint.rs:6:15\n    |\n LL | fn noop<const x: u32>() {\n-   |               ^ help: convert the identifier to upper case: `X`\n+   |               ^ help: convert the identifier to upper case (notice the capitalization): `X`\n    |\n note: lint level defined here\n   --> $DIR/const-parameter-uppercase-lint.rs:4:9"}, {"sha": "9a5871905a05f8c91dae339e4ee76cd618979fe2", "filename": "src/test/ui/consts/const-eval/const_fn_ptr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_fn_ptr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_fn_ptr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_fn_ptr.stderr?ref=4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "patch": "@@ -20,7 +20,7 @@ warning: constant `X_const` should have an upper case name\n   --> $DIR/const_fn_ptr.rs:9:7\n    |\n LL | const X_const: fn(usize) -> usize = double_const;\n-   |       ^^^^^^^ help: convert the identifier to upper case: `X_CONST`\n+   |       ^^^^^^^ help: convert the identifier to upper case (notice the capitalization): `X_CONST`\n    |\n    = note: `#[warn(non_upper_case_globals)]` on by default\n "}, {"sha": "ef68bf52cf3bd4c7862994428a5119dd5fff78c8", "filename": "src/test/ui/did_you_mean/issue-43871-enum-instead-of-variant.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-43871-enum-instead-of-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-43871-enum-instead-of-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-43871-enum-instead-of-variant.stderr?ref=4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "patch": "@@ -55,7 +55,7 @@ LL |     let z = ManyVariants::Three();\n    |             ^^^^^^^^^^^^^^^^^^^\n LL |     let z = ManyVariants::Four();\n    |             ^^^^^^^^^^^^^^^^^^\n-and 6 other candidates\n+     and 6 other candidates\n \n error: aborting due to 5 previous errors\n "}, {"sha": "cb350a1faeed2a6af11b41d18e95c0c660ce9d85", "filename": "src/test/ui/did_you_mean/issue-56028-there-is-an-enum-variant.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-56028-there-is-an-enum-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-56028-there-is-an-enum-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-56028-there-is-an-enum-variant.stderr?ref=4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "patch": "@@ -13,7 +13,7 @@ LL | fn setup() -> Determine { Set }\n    |               ^^^^^^^^^\n LL | fn setup() -> PutDown { Set }\n    |               ^^^^^^^\n-and 3 other candidates\n+     and 3 other candidates\n \n error[E0425]: cannot find value `Set` in this scope\n   --> $DIR/issue-56028-there-is-an-enum-variant.rs:9:21\n@@ -30,7 +30,7 @@ LL | use Determine::Set;\n    |\n LL | use PutDown::Set;\n    |\n-and 3 other candidates\n+     and 3 other candidates\n \n error: aborting due to 2 previous errors\n "}, {"sha": "d89f804f15bdda4e111ce0721cf01dd28ad71844", "filename": "src/test/ui/enable-unstable-lib-feature.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Fenable-unstable-lib-feature.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Fenable-unstable-lib-feature.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fenable-unstable-lib-feature.stderr?ref=4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "patch": "@@ -2,7 +2,7 @@ error: function `BOGUS` should have a snake case name\n   --> $DIR/enable-unstable-lib-feature.rs:11:8\n    |\n LL | pub fn BOGUS() { }\n-   |        ^^^^^ help: convert the identifier to snake case: `bogus`\n+   |        ^^^^^ help: convert the identifier to snake case (notice the capitalization): `bogus`\n    |\n note: lint level defined here\n   --> $DIR/enable-unstable-lib-feature.rs:6:9"}, {"sha": "754006bc217ee6f8f659680d817e2b3e5c0e9a87", "filename": "src/test/ui/error-codes/E0423.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Ferror-codes%2FE0423.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Ferror-codes%2FE0423.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0423.stderr?ref=4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "patch": "@@ -34,7 +34,7 @@ LL |     let f = Foo();\n    |             ^^^\n    |             |\n    |             did you mean `Foo { /* fields */ }`?\n-   |             help: a function with a similar name exists: `foo`\n+   |             help: a function with a similar name exists (notice the capitalization): `foo`\n \n error[E0423]: expected value, found struct `T`\n   --> $DIR/E0423.rs:14:8"}, {"sha": "57a9350c089a8e498bc63a3c766c9877cd9df978", "filename": "src/test/ui/expr_attr_paren_order.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Fexpr_attr_paren_order.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Fexpr_attr_paren_order.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexpr_attr_paren_order.stderr?ref=4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "patch": "@@ -2,7 +2,7 @@ error: variable `X` should have a snake case name\n   --> $DIR/expr_attr_paren_order.rs:19:17\n    |\n LL |             let X = 0;\n-   |                 ^ help: convert the identifier to snake case: `x`\n+   |                 ^ help: convert the identifier to snake case (notice the capitalization): `x`\n    |\n note: lint level defined here\n   --> $DIR/expr_attr_paren_order.rs:17:17"}, {"sha": "1f5e46c133dd1f62e6131ea2d2e9914d63c0df56", "filename": "src/test/ui/hygiene/extern-prelude-from-opaque-fail.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Fhygiene%2Fextern-prelude-from-opaque-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Fhygiene%2Fextern-prelude-from-opaque-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fextern-prelude-from-opaque-fail.stderr?ref=4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "patch": "@@ -5,7 +5,7 @@ LL |     use my_core;\n    |         ^^^^^^^\n    |         |\n    |         no `my_core` in the root\n-   |         help: a similar name exists in the module: `my_core`\n+   |         help: a similar name exists in the module (notice the capitalization): `my_core`\n \n error[E0432]: unresolved import `my_core`\n   --> $DIR/extern-prelude-from-opaque-fail.rs:7:13"}, {"sha": "7acb266f49c0b6f22f85ef74fc13c5e699c6b50e", "filename": "src/test/ui/hygiene/globs.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Fhygiene%2Fglobs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Fhygiene%2Fglobs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fglobs.stderr?ref=4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "patch": "@@ -34,7 +34,7 @@ LL | use foo::test2::test::g;\n    |\n LL | use foo::test::g;\n    |\n-and 2 other candidates\n+     and 2 other candidates\n \n error[E0425]: cannot find function `f` in this scope\n   --> $DIR/globs.rs:61:12"}, {"sha": "45a2efebbb8dad8afeef17abdaf941adc6044983", "filename": "src/test/ui/hygiene/rustc-macro-transparency.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Fhygiene%2Frustc-macro-transparency.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Fhygiene%2Frustc-macro-transparency.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Frustc-macro-transparency.stderr?ref=4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "patch": "@@ -2,7 +2,7 @@ error[E0425]: cannot find value `Opaque` in this scope\n   --> $DIR/rustc-macro-transparency.rs:26:5\n    |\n LL |     Opaque;\n-   |     ^^^^^^ help: a local variable with a similar name exists: `opaque`\n+   |     ^^^^^^ help: a local variable with a similar name exists (notice the capitalization): `opaque`\n \n error[E0423]: expected value, found macro `semitransparent`\n   --> $DIR/rustc-macro-transparency.rs:29:5"}, {"sha": "b1057d45869a8ae9394752dbc0d70383401c663b", "filename": "src/test/ui/issues/issue-10200.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Fissues%2Fissue-10200.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Fissues%2Fissue-10200.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-10200.stderr?ref=4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "patch": "@@ -2,7 +2,7 @@ error[E0532]: expected tuple struct/variant, found function `foo`\n   --> $DIR/issue-10200.rs:6:9\n    |\n LL |         foo(x)\n-   |         ^^^ help: a tuple struct with a similar name exists: `Foo`\n+   |         ^^^ help: a tuple struct with a similar name exists (notice the capitalization): `Foo`\n \n error: aborting due to previous error\n "}, {"sha": "1f71e159f182b1224d5fa22e4a5bba584fde8f44", "filename": "src/test/ui/issues/issue-17546.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Fissues%2Fissue-17546.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Fissues%2Fissue-17546.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17546.stderr?ref=4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "patch": "@@ -27,7 +27,7 @@ LL |     use std::prelude::v1::Result;\n    |\n LL |     use std::result::Result;\n    |\n-and 1 other candidates\n+     and 1 other candidates\n \n error[E0573]: expected type, found variant `Result`\n   --> $DIR/issue-17546.rs:28:13\n@@ -44,7 +44,7 @@ LL | use std::prelude::v1::Result;\n    |\n LL | use std::result::Result;\n    |\n-and 1 other candidates\n+     and 1 other candidates\n \n error[E0573]: expected type, found variant `NoResult`\n   --> $DIR/issue-17546.rs:33:15"}, {"sha": "e320c436f5b68595f9a1c73de780a77fc6296f94", "filename": "src/test/ui/issues/issue-17718-const-naming.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Fissues%2Fissue-17718-const-naming.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Fissues%2Fissue-17718-const-naming.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17718-const-naming.stderr?ref=4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "patch": "@@ -15,7 +15,7 @@ error: constant `foo` should have an upper case name\n   --> $DIR/issue-17718-const-naming.rs:4:7\n    |\n LL | const foo: isize = 3;\n-   |       ^^^ help: convert the identifier to upper case: `FOO`\n+   |       ^^^ help: convert the identifier to upper case (notice the capitalization): `FOO`\n    |\n note: lint level defined here\n   --> $DIR/issue-17718-const-naming.rs:2:9"}, {"sha": "c7e9d71700e6da595d6c7ed5e1a58e143a432dff", "filename": "src/test/ui/issues/issue-46332.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Fissues%2Fissue-46332.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Fissues%2Fissue-46332.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-46332.stderr?ref=4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "patch": "@@ -2,7 +2,7 @@ error[E0422]: cannot find struct, variant or union type `TyUInt` in this scope\n   --> $DIR/issue-46332.rs:9:5\n    |\n LL |     TyUInt {};\n-   |     ^^^^^^ help: a struct with a similar name exists: `TyUint`\n+   |     ^^^^^^ help: a struct with a similar name exists (notice the capitalization): `TyUint`\n \n error: aborting due to previous error\n "}, {"sha": "1ecd0f38826af3bac52dec14de3ffeacab6e709d", "filename": "src/test/ui/lint/lint-group-nonstandard-style.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Flint%2Flint-group-nonstandard-style.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Flint%2Flint-group-nonstandard-style.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-group-nonstandard-style.stderr?ref=4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "patch": "@@ -41,7 +41,7 @@ error: static variable `bad` should have an upper case name\n   --> $DIR/lint-group-nonstandard-style.rs:14:16\n    |\n LL |         static bad: isize = 1;\n-   |                ^^^ help: convert the identifier to upper case: `BAD`\n+   |                ^^^ help: convert the identifier to upper case (notice the capitalization): `BAD`\n    |\n note: lint level defined here\n   --> $DIR/lint-group-nonstandard-style.rs:10:14"}, {"sha": "5cac1c3d053555f303fb6425a1763ed3a89fa82f", "filename": "src/test/ui/lint/lint-lowercase-static-const-pattern.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Flint%2Flint-lowercase-static-const-pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Flint%2Flint-lowercase-static-const-pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-lowercase-static-const-pattern.stderr?ref=4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "patch": "@@ -2,7 +2,7 @@ error: constant in pattern `a` should have an upper case name\n   --> $DIR/lint-lowercase-static-const-pattern.rs:11:13\n    |\n LL |         (0, a) => 0,\n-   |             ^ help: convert the identifier to upper case: `A`\n+   |             ^ help: convert the identifier to upper case (notice the capitalization): `A`\n    |\n note: lint level defined here\n   --> $DIR/lint-lowercase-static-const-pattern.rs:4:9\n@@ -14,13 +14,13 @@ error: constant in pattern `aha` should have an upper case name\n   --> $DIR/lint-lowercase-static-const-pattern.rs:26:13\n    |\n LL |         (0, aha) => 0,\n-   |             ^^^ help: convert the identifier to upper case: `AHA`\n+   |             ^^^ help: convert the identifier to upper case (notice the capitalization): `AHA`\n \n error: constant in pattern `not_okay` should have an upper case name\n   --> $DIR/lint-lowercase-static-const-pattern.rs:40:13\n    |\n LL |         (0, not_okay) => 0,\n-   |             ^^^^^^^^ help: convert the identifier to upper case: `NOT_OKAY`\n+   |             ^^^^^^^^ help: convert the identifier to upper case (notice the capitalization): `NOT_OKAY`\n \n error: aborting due to 3 previous errors\n "}, {"sha": "02f7db045e5ccee4504effff7ef8fa19bedb037a", "filename": "src/test/ui/lint/lint-non-camel-case-types.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Flint%2Flint-non-camel-case-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Flint%2Flint-non-camel-case-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-non-camel-case-types.stderr?ref=4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "patch": "@@ -14,43 +14,43 @@ error: type `foo` should have an upper camel case name\n   --> $DIR/lint-non-camel-case-types.rs:7:8\n    |\n LL | struct foo {\n-   |        ^^^ help: convert the identifier to upper camel case: `Foo`\n+   |        ^^^ help: convert the identifier to upper camel case (notice the capitalization): `Foo`\n \n error: type `foo2` should have an upper camel case name\n   --> $DIR/lint-non-camel-case-types.rs:11:6\n    |\n LL | enum foo2 {\n-   |      ^^^^ help: convert the identifier to upper camel case: `Foo2`\n+   |      ^^^^ help: convert the identifier to upper camel case (notice the capitalization): `Foo2`\n \n error: type `foo3` should have an upper camel case name\n   --> $DIR/lint-non-camel-case-types.rs:15:8\n    |\n LL | struct foo3 {\n-   |        ^^^^ help: convert the identifier to upper camel case: `Foo3`\n+   |        ^^^^ help: convert the identifier to upper camel case (notice the capitalization): `Foo3`\n \n error: type `foo4` should have an upper camel case name\n   --> $DIR/lint-non-camel-case-types.rs:19:6\n    |\n LL | type foo4 = isize;\n-   |      ^^^^ help: convert the identifier to upper camel case: `Foo4`\n+   |      ^^^^ help: convert the identifier to upper camel case (notice the capitalization): `Foo4`\n \n error: variant `bar` should have an upper camel case name\n   --> $DIR/lint-non-camel-case-types.rs:22:5\n    |\n LL |     bar\n-   |     ^^^ help: convert the identifier to upper camel case: `Bar`\n+   |     ^^^ help: convert the identifier to upper camel case (notice the capitalization): `Bar`\n \n error: trait `foo6` should have an upper camel case name\n   --> $DIR/lint-non-camel-case-types.rs:25:7\n    |\n LL | trait foo6 {\n-   |       ^^^^ help: convert the identifier to upper camel case: `Foo6`\n+   |       ^^^^ help: convert the identifier to upper camel case (notice the capitalization): `Foo6`\n \n error: type parameter `ty` should have an upper camel case name\n   --> $DIR/lint-non-camel-case-types.rs:29:6\n    |\n LL | fn f<ty>(_: ty) {}\n-   |      ^^ help: convert the identifier to upper camel case: `Ty`\n+   |      ^^ help: convert the identifier to upper camel case (notice the capitalization): `Ty`\n \n error: aborting due to 8 previous errors\n "}, {"sha": "2e7b53b05d16b4a67bf17be2c5ebf781445f663c", "filename": "src/test/ui/lint/lint-non-snake-case-functions.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Flint%2Flint-non-snake-case-functions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Flint%2Flint-non-snake-case-functions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-non-snake-case-functions.stderr?ref=4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "patch": "@@ -2,7 +2,7 @@ error: method `Foo_Method` should have a snake case name\n   --> $DIR/lint-non-snake-case-functions.rs:7:8\n    |\n LL |     fn Foo_Method() {}\n-   |        ^^^^^^^^^^ help: convert the identifier to snake case: `foo_method`\n+   |        ^^^^^^^^^^ help: convert the identifier to snake case (notice the capitalization): `foo_method`\n    |\n note: lint level defined here\n   --> $DIR/lint-non-snake-case-functions.rs:1:9\n@@ -26,19 +26,19 @@ error: method `render_HTML` should have a snake case name\n   --> $DIR/lint-non-snake-case-functions.rs:17:8\n    |\n LL |     fn render_HTML() {}\n-   |        ^^^^^^^^^^^ help: convert the identifier to snake case: `render_html`\n+   |        ^^^^^^^^^^^ help: convert the identifier to snake case (notice the capitalization): `render_html`\n \n error: trait method `ABC` should have a snake case name\n   --> $DIR/lint-non-snake-case-functions.rs:22:8\n    |\n LL |     fn ABC();\n-   |        ^^^ help: convert the identifier to snake case: `abc`\n+   |        ^^^ help: convert the identifier to snake case (notice the capitalization): `abc`\n \n error: trait method `a_b_C` should have a snake case name\n   --> $DIR/lint-non-snake-case-functions.rs:25:8\n    |\n LL |     fn a_b_C(&self) {}\n-   |        ^^^^^ help: convert the identifier to snake case: `a_b_c`\n+   |        ^^^^^ help: convert the identifier to snake case (notice the capitalization): `a_b_c`\n \n error: trait method `something__else` should have a snake case name\n   --> $DIR/lint-non-snake-case-functions.rs:28:8\n@@ -50,13 +50,13 @@ error: function `Cookie` should have a snake case name\n   --> $DIR/lint-non-snake-case-functions.rs:38:4\n    |\n LL | fn Cookie() {}\n-   |    ^^^^^^ help: convert the identifier to snake case: `cookie`\n+   |    ^^^^^^ help: convert the identifier to snake case (notice the capitalization): `cookie`\n \n error: function `bi_S_Cuit` should have a snake case name\n   --> $DIR/lint-non-snake-case-functions.rs:41:8\n    |\n LL | pub fn bi_S_Cuit() {}\n-   |        ^^^^^^^^^ help: convert the identifier to snake case: `bi_s_cuit`\n+   |        ^^^^^^^^^ help: convert the identifier to snake case (notice the capitalization): `bi_s_cuit`\n \n error: aborting due to 9 previous errors\n "}, {"sha": "233048ee1ddb00062537e030beac149d7991974d", "filename": "src/test/ui/lint/lint-non-uppercase-associated-const.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Flint%2Flint-non-uppercase-associated-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Flint%2Flint-non-uppercase-associated-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-non-uppercase-associated-const.stderr?ref=4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "patch": "@@ -2,7 +2,7 @@ error: associated constant `not_upper` should have an upper case name\n   --> $DIR/lint-non-uppercase-associated-const.rs:7:11\n    |\n LL |     const not_upper: bool = true;\n-   |           ^^^^^^^^^ help: convert the identifier to upper case: `NOT_UPPER`\n+   |           ^^^^^^^^^ help: convert the identifier to upper case (notice the capitalization): `NOT_UPPER`\n    |\n note: lint level defined here\n   --> $DIR/lint-non-uppercase-associated-const.rs:1:9"}, {"sha": "a03bdf52a0a6e9e93bd1d933a4cbf804ace4ba9b", "filename": "src/test/ui/lint/lint-non-uppercase-statics.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Flint%2Flint-non-uppercase-statics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Flint%2Flint-non-uppercase-statics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-non-uppercase-statics.stderr?ref=4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "patch": "@@ -2,7 +2,7 @@ error: static variable `foo` should have an upper case name\n   --> $DIR/lint-non-uppercase-statics.rs:4:8\n    |\n LL | static foo: isize = 1;\n-   |        ^^^ help: convert the identifier to upper case: `FOO`\n+   |        ^^^ help: convert the identifier to upper case (notice the capitalization): `FOO`\n    |\n note: lint level defined here\n   --> $DIR/lint-non-uppercase-statics.rs:1:11\n@@ -14,7 +14,7 @@ error: static variable `bar` should have an upper case name\n   --> $DIR/lint-non-uppercase-statics.rs:6:12\n    |\n LL | static mut bar: isize = 1;\n-   |            ^^^ help: convert the identifier to upper case: `BAR`\n+   |            ^^^ help: convert the identifier to upper case (notice the capitalization): `BAR`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "cc2be3d0bd9d5541506ab58da5261e0cb8aa9e62", "filename": "src/test/ui/lint/lint-uppercase-variables.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Flint%2Flint-uppercase-variables.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Flint%2Flint-uppercase-variables.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-uppercase-variables.stderr?ref=4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "patch": "@@ -21,7 +21,7 @@ error: structure field `X` should have a snake case name\n   --> $DIR/lint-uppercase-variables.rs:10:5\n    |\n LL |     X: usize\n-   |     ^ help: convert the identifier to snake case: `x`\n+   |     ^ help: convert the identifier to snake case (notice the capitalization): `x`\n    |\n note: lint level defined here\n   --> $DIR/lint-uppercase-variables.rs:3:9\n@@ -33,19 +33,19 @@ error: variable `Xx` should have a snake case name\n   --> $DIR/lint-uppercase-variables.rs:13:9\n    |\n LL | fn test(Xx: usize) {\n-   |         ^^ help: convert the identifier to snake case: `xx`\n+   |         ^^ help: convert the identifier to snake case (notice the capitalization): `xx`\n \n error: variable `Test` should have a snake case name\n   --> $DIR/lint-uppercase-variables.rs:18:9\n    |\n LL |     let Test: usize = 0;\n-   |         ^^^^ help: convert the identifier to snake case: `test`\n+   |         ^^^^ help: convert the identifier to snake case (notice the capitalization): `test`\n \n error: variable `Foo` should have a snake case name\n   --> $DIR/lint-uppercase-variables.rs:22:9\n    |\n LL |         Foo => {}\n-   |         ^^^ help: convert the identifier to snake case: `foo`\n+   |         ^^^ help: convert the identifier to snake case (notice the capitalization): `foo`\n \n error: aborting due to 4 previous errors\n "}, {"sha": "8614e9f11733e0b1c18293e6a7649df659737d1f", "filename": "src/test/ui/lint/not_found.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Flint%2Fnot_found.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Flint%2Fnot_found.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fnot_found.stderr?ref=4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "patch": "@@ -10,11 +10,11 @@ warning: unknown lint: `DEAD_CODE`\n   --> $DIR/not_found.rs:8:8\n    |\n LL | #[warn(DEAD_CODE)]\n-   |        ^^^^^^^^^ help: did you mean: `dead_code`\n+   |        ^^^^^^^^^ help: did you mean (notice the capitalization): `dead_code`\n \n warning: unknown lint: `Warnings`\n   --> $DIR/not_found.rs:10:8\n    |\n LL | #[deny(Warnings)]\n-   |        ^^^^^^^^ help: did you mean: `warnings`\n+   |        ^^^^^^^^ help: did you mean (notice the capitalization): `warnings`\n "}, {"sha": "139b3f13fd6b2beccdc4e6328426ee0d828eab44", "filename": "src/test/ui/lint/reasons.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Flint%2Freasons.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Flint%2Freasons.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Freasons.stderr?ref=4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "patch": "@@ -15,7 +15,7 @@ warning: variable `Social_exchange_psychology` should have a snake case name\n   --> $DIR/reasons.rs:30:9\n    |\n LL |     let Social_exchange_psychology = CheaterDetectionMechanism {};\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `social_exchange_psychology`\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case (notice the capitalization): `social_exchange_psychology`\n    |\n    = note: people shouldn't have to change their usual style habits\n            to contribute to our project"}, {"sha": "1da5acc966163ed004237388b6492da475369cce", "filename": "src/test/ui/lint/use_suggestion_json.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Flint%2Fuse_suggestion_json.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Flint%2Fuse_suggestion_json.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fuse_suggestion_json.stderr?ref=4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "patch": "@@ -395,7 +395,7 @@ mod foo {\n \\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\n \\u001b[0m\\u001b[1m\\u001b[38;5;12mLL\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m| \\u001b[0m\\u001b[0muse std::collections::hash_map::Iter;\\u001b[0m\n \\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\n-\\u001b[0mand 8 other candidates\\u001b[0m\n+\\u001b[0m     and 8 other candidates\\u001b[0m\n \n \"\n }"}, {"sha": "513e02f74e3b265cf88afc639d6cc7d91c9076ca", "filename": "src/test/ui/resolve/issue-21221-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-21221-1.stderr?ref=4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "patch": "@@ -27,7 +27,7 @@ LL | use mul3::Mul;\n    |\n LL | use mul4::Mul;\n    |\n-and 2 other candidates\n+     and 2 other candidates\n \n error[E0405]: cannot find trait `ThisTraitReallyDoesntExistInAnyModuleReally` in this scope\n   --> $DIR/issue-21221-1.rs:63:6"}, {"sha": "ad596c25551a7046c1062f0e1ef0e9a0c81ba697", "filename": "src/test/ui/resolve/issue-39226.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Fresolve%2Fissue-39226.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Fresolve%2Fissue-39226.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-39226.stderr?ref=4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "patch": "@@ -8,7 +8,7 @@ LL |         handle: Handle\n    |                 ^^^^^^\n    |                 |\n    |                 did you mean `Handle { /* fields */ }`?\n-   |                 help: a local variable with a similar name exists: `handle`\n+   |                 help: a local variable with a similar name exists (notice the capitalization): `handle`\n \n error: aborting due to previous error\n "}, {"sha": "e693a0ef91fc2be9414d376efcfbdaf9e75cd3a6", "filename": "src/test/ui/resolve/levenshtein.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Fresolve%2Flevenshtein.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Fresolve%2Flevenshtein.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Flevenshtein.stderr?ref=4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "patch": "@@ -38,13 +38,13 @@ error[E0412]: cannot find type `first` in module `m`\n   --> $DIR/levenshtein.rs:28:15\n    |\n LL |     let b: m::first = m::second; // Misspelled item in module.\n-   |               ^^^^^ help: a struct with a similar name exists: `First`\n+   |               ^^^^^ help: a struct with a similar name exists (notice the capitalization): `First`\n \n error[E0425]: cannot find value `second` in module `m`\n   --> $DIR/levenshtein.rs:28:26\n    |\n LL |     let b: m::first = m::second; // Misspelled item in module.\n-   |                          ^^^^^^ help: a unit struct with a similar name exists: `Second`\n+   |                          ^^^^^^ help: a unit struct with a similar name exists (notice the capitalization): `Second`\n \n error: aborting due to 8 previous errors\n "}, {"sha": "973c486970e6577b8ea0ae132d1fc9e250d7982a", "filename": "src/test/ui/rust-2018/issue-52202-use-suggestions.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Frust-2018%2Fissue-52202-use-suggestions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Frust-2018%2Fissue-52202-use-suggestions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fissue-52202-use-suggestions.stderr?ref=4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "patch": "@@ -13,7 +13,7 @@ LL | use std::collections::hash_map::Drain;\n    |\n LL | use std::collections::hash_set::Drain;\n    |\n-and 3 other candidates\n+     and 3 other candidates\n \n error: aborting due to previous error\n "}, {"sha": "0b94619f689a71e5ed6a0107ec42da102c2a04e2", "filename": "src/test/ui/test-attrs/inaccessible-test-modules.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Ftest-attrs%2Finaccessible-test-modules.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Ftest-attrs%2Finaccessible-test-modules.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftest-attrs%2Finaccessible-test-modules.stderr?ref=4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "patch": "@@ -5,7 +5,7 @@ LL | use main as x;\n    |     ----^^^^^\n    |     |\n    |     no `main` in the root\n-   |     help: a similar name exists in the module: `main`\n+   |     help: a similar name exists in the module (notice the capitalization): `main`\n \n error[E0432]: unresolved import `test`\n   --> $DIR/inaccessible-test-modules.rs:6:5\n@@ -14,7 +14,7 @@ LL | use test as y;\n    |     ----^^^^^\n    |     |\n    |     no `test` in the root\n-   |     help: a similar name exists in the module: `test`\n+   |     help: a similar name exists in the module (notice the capitalization): `test`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "8b81192aa47015f5b55e9c4d40bee2e73eb1b315", "filename": "src/test/ui/traits/trait-impl-for-module.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Ftraits%2Ftrait-impl-for-module.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Ftraits%2Ftrait-impl-for-module.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-impl-for-module.stderr?ref=4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "patch": "@@ -2,7 +2,7 @@ error[E0573]: expected type, found module `a`\n   --> $DIR/trait-impl-for-module.rs:7:12\n    |\n LL | impl A for a {\n-   |            ^ help: a trait with a similar name exists: `A`\n+   |            ^ help: a trait with a similar name exists (notice the capitalization): `A`\n \n error: aborting due to previous error\n "}, {"sha": "869bed61ea0f1d7f0cd321524c08f49a93328246", "filename": "src/test/ui/utf8_idents.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Futf8_idents.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4bb771615e194e64d0fc9cd97c1cdcc4972a1771/src%2Ftest%2Fui%2Futf8_idents.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Futf8_idents.stderr?ref=4bb771615e194e64d0fc9cd97c1cdcc4972a1771", "patch": "@@ -38,7 +38,7 @@ warning: type parameter `\u03b3` should have an upper camel case name\n   --> $DIR/utf8_idents.rs:3:5\n    |\n LL |     \u03b3\n-   |     ^ help: convert the identifier to upper camel case: `\u0393`\n+   |     ^ help: convert the identifier to upper camel case (notice the capitalization): `\u0393`\n    |\n    = note: `#[warn(non_camel_case_types)]` on by default\n "}]}