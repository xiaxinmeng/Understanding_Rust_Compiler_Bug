{"sha": "d36634315a9e07ca4517b9d04c5bd10f218d61d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzNjYzNDMxNWE5ZTA3Y2E0NTE3YjlkMDRjNWJkMTBmMjE4ZDYxZDg=", "commit": {"author": {"name": "Chris Simpkins", "email": "git.simpkins@gmail.com", "date": "2020-02-08T05:01:32Z"}, "committer": {"name": "Chris Simpkins", "email": "git.simpkins@gmail.com", "date": "2020-02-08T05:01:32Z"}, "message": "PEP8 format spacing", "tree": {"sha": "9e69861b4acc2303515e40bf64f3d1c0e513b9b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e69861b4acc2303515e40bf64f3d1c0e513b9b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d36634315a9e07ca4517b9d04c5bd10f218d61d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d36634315a9e07ca4517b9d04c5bd10f218d61d8", "html_url": "https://github.com/rust-lang/rust/commit/d36634315a9e07ca4517b9d04c5bd10f218d61d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d36634315a9e07ca4517b9d04c5bd10f218d61d8/comments", "author": {"login": "chrissimpkins", "id": 4249591, "node_id": "MDQ6VXNlcjQyNDk1OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4249591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrissimpkins", "html_url": "https://github.com/chrissimpkins", "followers_url": "https://api.github.com/users/chrissimpkins/followers", "following_url": "https://api.github.com/users/chrissimpkins/following{/other_user}", "gists_url": "https://api.github.com/users/chrissimpkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrissimpkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrissimpkins/subscriptions", "organizations_url": "https://api.github.com/users/chrissimpkins/orgs", "repos_url": "https://api.github.com/users/chrissimpkins/repos", "events_url": "https://api.github.com/users/chrissimpkins/events{/privacy}", "received_events_url": "https://api.github.com/users/chrissimpkins/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chrissimpkins", "id": 4249591, "node_id": "MDQ6VXNlcjQyNDk1OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4249591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrissimpkins", "html_url": "https://github.com/chrissimpkins", "followers_url": "https://api.github.com/users/chrissimpkins/followers", "following_url": "https://api.github.com/users/chrissimpkins/following{/other_user}", "gists_url": "https://api.github.com/users/chrissimpkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrissimpkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrissimpkins/subscriptions", "organizations_url": "https://api.github.com/users/chrissimpkins/orgs", "repos_url": "https://api.github.com/users/chrissimpkins/repos", "events_url": "https://api.github.com/users/chrissimpkins/events{/privacy}", "received_events_url": "https://api.github.com/users/chrissimpkins/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f38e2701d862379eca06475d196438038ca72564", "url": "https://api.github.com/repos/rust-lang/rust/commits/f38e2701d862379eca06475d196438038ca72564", "html_url": "https://github.com/rust-lang/rust/commit/f38e2701d862379eca06475d196438038ca72564"}], "stats": {"total": 43, "additions": 23, "deletions": 20}, "files": [{"sha": "0914c22eb13f03d0b9d0c94474ac7e5b57795195", "filename": "src/etc/gdb_rust_pretty_printing.py", "status": "modified", "additions": 23, "deletions": 20, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/d36634315a9e07ca4517b9d04c5bd10f218d61d8/src%2Fetc%2Fgdb_rust_pretty_printing.py", "raw_url": "https://github.com/rust-lang/rust/raw/d36634315a9e07ca4517b9d04c5bd10f218d61d8/src%2Fetc%2Fgdb_rust_pretty_printing.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fgdb_rust_pretty_printing.py?ref=d36634315a9e07ca4517b9d04c5bd10f218d61d8", "patch": "@@ -9,7 +9,7 @@\n if sys.version_info[0] >= 3:\n     xrange = range\n \n-rust_enabled = 'set language rust' in gdb.execute('complete set language ru', to_string = True)\n+rust_enabled = 'set language rust' in gdb.execute('complete set language ru', to_string=True)\n \n # The btree pretty-printers fail in a confusing way unless\n # https://sourceware.org/bugzilla/show_bug.cgi?id=21763 is fixed.\n@@ -21,9 +21,10 @@\n     if int(_match.group(1)) > 8 or (int(_match.group(1)) == 8 and int(_match.group(2)) >= 1):\n         gdb_81 = True\n \n-#===============================================================================\n+# ===============================================================================\n # GDB Pretty Printing Module for Rust\n-#===============================================================================\n+# ===============================================================================\n+\n \n class GdbType(rustpp.Type):\n \n@@ -133,39 +134,39 @@ def rust_pretty_printer_lookup_function(gdb_val):\n \n     if type_kind == rustpp.TYPE_KIND_REGULAR_STRUCT:\n         return RustStructPrinter(val,\n-                                 omit_first_field = False,\n-                                 omit_type_name = False,\n-                                 is_tuple_like = False)\n+                                 omit_first_field=False,\n+                                 omit_type_name=False,\n+                                 is_tuple_like=False)\n \n     if type_kind == rustpp.TYPE_KIND_STRUCT_VARIANT:\n         return RustStructPrinter(val,\n-                                 omit_first_field = True,\n-                                 omit_type_name = False,\n-                                 is_tuple_like = False)\n+                                 omit_first_field=True,\n+                                 omit_type_name=False,\n+                                 is_tuple_like=False)\n \n     if type_kind == rustpp.TYPE_KIND_STR_SLICE:\n         return RustStringSlicePrinter(val)\n \n     if type_kind == rustpp.TYPE_KIND_TUPLE:\n         return RustStructPrinter(val,\n-                                 omit_first_field = False,\n-                                 omit_type_name = True,\n-                                 is_tuple_like = True)\n+                                 omit_first_field=False,\n+                                 omit_type_name=True,\n+                                 is_tuple_like=True)\n \n     if type_kind == rustpp.TYPE_KIND_TUPLE_STRUCT:\n         return RustStructPrinter(val,\n-                                 omit_first_field = False,\n-                                 omit_type_name = False,\n-                                 is_tuple_like = True)\n+                                 omit_first_field=False,\n+                                 omit_type_name=False,\n+                                 is_tuple_like=True)\n \n     if type_kind == rustpp.TYPE_KIND_CSTYLE_VARIANT:\n         return RustCStyleVariantPrinter(val.get_child_at_index(0))\n \n     if type_kind == rustpp.TYPE_KIND_TUPLE_VARIANT:\n         return RustStructPrinter(val,\n-                                 omit_first_field = True,\n-                                 omit_type_name = False,\n-                                 is_tuple_like = True)\n+                                 omit_first_field=True,\n+                                 omit_type_name=False,\n+                                 is_tuple_like=True)\n \n     if type_kind == rustpp.TYPE_KIND_SINGLETON_ENUM:\n         variant = get_field_at_index(gdb_val, 0)\n@@ -189,9 +190,9 @@ def rust_pretty_printer_lookup_function(gdb_val):\n     return None\n \n \n-#=------------------------------------------------------------------------------\n+# =------------------------------------------------------------------------------\n # Pretty Printer Classes\n-#=------------------------------------------------------------------------------\n+# =------------------------------------------------------------------------------\n class RustEmptyPrinter(object):\n     def __init__(self, val):\n         self.__val = val\n@@ -355,6 +356,7 @@ def children_of_node(boxed_node, height, want_values):\n             else:\n                 yield keys[i]['value']['value']\n \n+\n class RustStdBTreeSetPrinter(object):\n     def __init__(self, val):\n         self.__val = val\n@@ -429,6 +431,7 @@ def to_string(self):\n     def display_hint(self):\n         return \"string\"\n \n+\n class RustCStyleVariantPrinter(object):\n     def __init__(self, val):\n         assert val.type.get_dwarf_type_kind() == rustpp.DWARF_TYPE_CODE_ENUM"}]}