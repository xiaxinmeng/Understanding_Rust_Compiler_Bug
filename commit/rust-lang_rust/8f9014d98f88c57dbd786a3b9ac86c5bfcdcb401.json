{"sha": "8f9014d98f88c57dbd786a3b9ac86c5bfcdcb401", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmOTAxNGQ5OGY4OGM1N2RiZDc4NmEzYjlhYzg2YzViZmNkY2I0MDE=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-09-22T20:35:25Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-11-18T15:43:48Z"}, "message": "Rename rustdoc options --themes and --check-themes to --theme and --check-theme", "tree": {"sha": "64cd241d31290cb5c2db2dd78e8ada820312c88b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64cd241d31290cb5c2db2dd78e8ada820312c88b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f9014d98f88c57dbd786a3b9ac86c5bfcdcb401", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f9014d98f88c57dbd786a3b9ac86c5bfcdcb401", "html_url": "https://github.com/rust-lang/rust/commit/8f9014d98f88c57dbd786a3b9ac86c5bfcdcb401", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f9014d98f88c57dbd786a3b9ac86c5bfcdcb401/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "685b63a163e7a976ee3d304829647f4e22ed4071", "url": "https://api.github.com/repos/rust-lang/rust/commits/685b63a163e7a976ee3d304829647f4e22ed4071", "html_url": "https://github.com/rust-lang/rust/commit/685b63a163e7a976ee3d304829647f4e22ed4071"}], "stats": {"total": 39, "additions": 21, "deletions": 18}, "files": [{"sha": "c935699abb0875f035a833674c973a7de94efa6c", "filename": "src/doc/rustdoc/src/command-line-arguments.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8f9014d98f88c57dbd786a3b9ac86c5bfcdcb401/src%2Fdoc%2Frustdoc%2Fsrc%2Fcommand-line-arguments.md", "raw_url": "https://github.com/rust-lang/rust/raw/8f9014d98f88c57dbd786a3b9ac86c5bfcdcb401/src%2Fdoc%2Frustdoc%2Fsrc%2Fcommand-line-arguments.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Fcommand-line-arguments.md?ref=8f9014d98f88c57dbd786a3b9ac86c5bfcdcb401", "patch": "@@ -359,19 +359,19 @@ This flag allows `rustdoc` to treat your rust code as the given edition. It will\n the given edition as well. As with `rustc`, the default edition that `rustdoc` will use is `2015`\n (the first edition).\n \n-## `themes`: add more themes to generated documentation\n+## `theme`: add more themes to generated documentation\n \n By default, `rustdoc` only provides the \"dark\" and \"light\" themes. If you want to add new ones,\n you'll need to use this flag as follows:\n \n ```bash\n-$ rustdoc src/lib.rs --themes /path/to/your/theme/file.css\n+$ rustdoc src/lib.rs --theme /path/to/your/theme/file.css\n ```\n \n Note that the theme's name will be the file name without its extension. So if you pass\n `/path/to/your/theme/file.css` as theme, then the theme's name will be `file`.\n \n-### `check-themes`: check if your themes implement all the required rules\n+### `check-theme`: check if your themes implement all the required rules\n \n This flag allows you to check if your themes implement the necessary CSS rules. To put it more\n simply, when adding a new theme, it needs to implements all the CSS rules present in the \"light\"\n@@ -380,5 +380,5 @@ CSS theme.\n You can use this flag like this:\n \n ```bash\n-$ rustdoc --check-themes /path/to/your/theme/file.css\n+$ rustdoc --check-theme /path/to/your/theme/file.css\n ```"}, {"sha": "d48416d4177b1164312ab0ad00e882824c33404e", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8f9014d98f88c57dbd786a3b9ac86c5bfcdcb401/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f9014d98f88c57dbd786a3b9ac86c5bfcdcb401/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=8f9014d98f88c57dbd786a3b9ac86c5bfcdcb401", "patch": "@@ -282,12 +282,12 @@ impl Options {\n         // check for deprecated options\n         check_deprecated_options(&matches, &diag);\n \n-        let to_check = matches.opt_strs(\"check-themes\");\n+        let to_check = matches.opt_strs(\"check-theme\");\n         if !to_check.is_empty() {\n             let paths = theme::load_css_paths(static_files::themes::LIGHT.as_bytes());\n             let mut errors = 0;\n \n-            println!(\"rustdoc: [check-themes] Starting tests! (Ignoring all other arguments)\");\n+            println!(\"rustdoc: [check-theme] Starting tests! (Ignoring all other arguments)\");\n             for theme_file in to_check.iter() {\n                 print!(\" - Checking \\\"{}\\\"...\", theme_file);\n                 let (success, differences) = theme::test_theme_against(theme_file, &paths, &diag);\n@@ -358,15 +358,15 @@ impl Options {\n         }\n \n         let mut themes = Vec::new();\n-        if matches.opt_present(\"themes\") {\n+        if matches.opt_present(\"theme\") {\n             let paths = theme::load_css_paths(static_files::themes::LIGHT.as_bytes());\n \n-            for (theme_file, theme_s) in matches.opt_strs(\"themes\")\n+            for (theme_file, theme_s) in matches.opt_strs(\"theme\")\n                                                 .iter()\n                                                 .map(|s| (PathBuf::from(&s), s.to_owned())) {\n                 if !theme_file.is_file() {\n                     diag.struct_err(&format!(\"invalid file: \\\"{}\\\"\", theme_s))\n-                        .help(\"option --themes arguments must all be files\")\n+                        .help(\"option --theme arguments must all be files\")\n                         .emit();\n                     return Err(1);\n                 }\n@@ -384,7 +384,7 @@ impl Options {\n                                                default theme\", theme_s))\n                         .warn(\"the theme may appear incorrect when loaded\")\n                         .help(&format!(\"to see what rules are missing, call `rustdoc \\\n-                                        --check-themes \\\"{}\\\"`\", theme_s))\n+                                        --check-theme \\\"{}\\\"`\", theme_s))\n                         .emit();\n                 }\n                 themes.push(theme_file);"}, {"sha": "9fc1d76185fb7bf6aa12c41efe419c648f9bfe0c", "filename": "src/librustdoc/html/static_files.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8f9014d98f88c57dbd786a3b9ac86c5bfcdcb401/src%2Flibrustdoc%2Fhtml%2Fstatic_files.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f9014d98f88c57dbd786a3b9ac86c5bfcdcb401/src%2Flibrustdoc%2Fhtml%2Fstatic_files.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic_files.rs?ref=8f9014d98f88c57dbd786a3b9ac86c5bfcdcb401", "patch": "@@ -59,7 +59,7 @@ pub static RUST_FAVICON: &'static [u8] = include_bytes!(\"static/favicon.ico\");\n /// The built-in themes given to every documentation site.\n pub mod themes {\n     /// The \"light\" theme, selected by default when no setting is available. Used as the basis for\n-    /// the `--check-themes` functionality.\n+    /// the `--check-theme` functionality.\n     pub static LIGHT: &'static str = include_str!(\"static/themes/light.css\");\n \n     /// The \"dark\" theme."}, {"sha": "bdb45f888d254701f77e399be0063bdc899ab0ff", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8f9014d98f88c57dbd786a3b9ac86c5bfcdcb401/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f9014d98f88c57dbd786a3b9ac86c5bfcdcb401/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=8f9014d98f88c57dbd786a3b9ac86c5bfcdcb401", "patch": "@@ -251,13 +251,13 @@ fn opts() -> Vec<RustcOptGroup> {\n             o.optflag(\"\", \"sort-modules-by-appearance\", \"sort modules by where they appear in the \\\n                                                          program, rather than alphabetically\")\n         }),\n-        stable(\"themes\", |o| {\n-            o.optmulti(\"\", \"themes\",\n+        stable(\"theme\", |o| {\n+            o.optmulti(\"\", \"theme\",\n                        \"additional themes which will be added to the generated docs\",\n                        \"FILES\")\n         }),\n-        stable(\"check-themes\", |o| {\n-            o.optmulti(\"\", \"check-themes\",\n+        stable(\"check-theme\", |o| {\n+            o.optmulti(\"\", \"check-theme\",\n                        \"check if given theme is valid\",\n                        \"FILES\")\n         }),"}, {"sha": "f5a471e66e573fc66f14eb08630a2221349f3fa8", "filename": "src/test/run-make-fulldeps/rustdoc-themes/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8f9014d98f88c57dbd786a3b9ac86c5bfcdcb401/src%2Ftest%2Frun-make-fulldeps%2Frustdoc-themes%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/8f9014d98f88c57dbd786a3b9ac86c5bfcdcb401/src%2Ftest%2Frun-make-fulldeps%2Frustdoc-themes%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Frustdoc-themes%2FMakefile?ref=8f9014d98f88c57dbd786a3b9ac86c5bfcdcb401", "patch": "@@ -6,5 +6,5 @@ OUTPUT_DIR := \"$(TMPDIR)/rustdoc-themes\"\n \n all:\n \tcp $(S)/src/librustdoc/html/static/themes/light.css $(TMPDIR)/test.css\n-\t$(RUSTDOC) -o $(OUTPUT_DIR) foo.rs --themes $(TMPDIR)/test.css\n+\t$(RUSTDOC) -o $(OUTPUT_DIR) foo.rs --theme $(TMPDIR)/test.css\n \t$(HTMLDOCCK) $(OUTPUT_DIR) foo.rs"}, {"sha": "87c1de3e715e14e3b21dcd91ca800ef03b46a513", "filename": "src/tools/rustdoc-themes/main.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8f9014d98f88c57dbd786a3b9ac86c5bfcdcb401/src%2Ftools%2Frustdoc-themes%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f9014d98f88c57dbd786a3b9ac86c5bfcdcb401/src%2Ftools%2Frustdoc-themes%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustdoc-themes%2Fmain.rs?ref=8f9014d98f88c57dbd786a3b9ac86c5bfcdcb401", "patch": "@@ -38,9 +38,12 @@ fn main() {\n         eprintln!(\"No theme found in \\\"{}\\\"...\", themes_folder);\n         exit(1);\n     }\n+    let arg_name = \"--check-theme\".to_owned();\n     let status = Command::new(rustdoc_bin)\n-                        .args(&[\"-Z\", \"unstable-options\", \"--check-themes\"])\n-                        .args(&themes)\n+                        .args(&[\"-Z\", \"unstable-options\"])\n+                        .args(&themes.iter()\n+                                     .flat_map(|t| vec![&arg_name, t].into_iter())\n+                                     .collect::<Vec<_>>())\n                         .status()\n                         .expect(\"failed to execute child\");\n     if !status.success() {"}]}