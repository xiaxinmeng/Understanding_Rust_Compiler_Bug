{"sha": "69bc687f20178076c8fb244cb80d78c2f4c45565", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5YmM2ODdmMjAxNzgwNzZjOGZiMjQ0Y2I4MGQ3OGMyZjRjNDU1NjU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-04-02T11:47:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-04-02T11:47:28Z"}, "message": "Rollup merge of #59585 - rust-lang:shallow-borrow-fixes, r=pnkfelix\n\nFixes for shallow borrows\n\n* Don't promote these borrows if we're going to remove them before\n  codegen\n* Correctly mark unreachable code", "tree": {"sha": "2e27901d184805ef405eaae64977549700542ece", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e27901d184805ef405eaae64977549700542ece"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69bc687f20178076c8fb244cb80d78c2f4c45565", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJco0vQCRBK7hj4Ov3rIwAAdHIIAGSrJvz4FOFlmqayf5E0Z5c+\nRcPuNIhq9N4QWg5DBFk1Z0qLstlDwWVHdNqeajxPzlsiI4w5PnZYW7YTD8+PH5Fs\nQUM6dvzA5v/l+KgiO6B9kvO4mT16RsIwmXHDh34nm15oZekMhH4dab9DE+6FZ6JN\nP7qXjMt3AZJAs3mVx0XstQGiSDSTb+bwmdoLcvZqu/4LTnUstk1tH4MKIiT1MvMX\nw1caEb3evqO3qZo6jtM4N10/HTiYZD33cIS6VZRQmIIRLygjwLwlpwTlMOzFwEXv\nuNty8u1LdCzLRrbhvku2JEbs3Jxg6fGslRcEVhMJjLYzFcLi20vNrSOT41glJV4=\n=tU5N\n-----END PGP SIGNATURE-----\n", "payload": "tree 2e27901d184805ef405eaae64977549700542ece\nparent 274f80e4d4c7ed62d724b8d35a620f2ef2100721\nparent 16ee042100d252d1c59c80c797a481be340151b3\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1554205648 +0200\ncommitter GitHub <noreply@github.com> 1554205648 +0200\n\nRollup merge of #59585 - rust-lang:shallow-borrow-fixes, r=pnkfelix\n\nFixes for shallow borrows\n\n* Don't promote these borrows if we're going to remove them before\n  codegen\n* Correctly mark unreachable code\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69bc687f20178076c8fb244cb80d78c2f4c45565", "html_url": "https://github.com/rust-lang/rust/commit/69bc687f20178076c8fb244cb80d78c2f4c45565", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69bc687f20178076c8fb244cb80d78c2f4c45565/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "274f80e4d4c7ed62d724b8d35a620f2ef2100721", "url": "https://api.github.com/repos/rust-lang/rust/commits/274f80e4d4c7ed62d724b8d35a620f2ef2100721", "html_url": "https://github.com/rust-lang/rust/commit/274f80e4d4c7ed62d724b8d35a620f2ef2100721"}, {"sha": "16ee042100d252d1c59c80c797a481be340151b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/16ee042100d252d1c59c80c797a481be340151b3", "html_url": "https://github.com/rust-lang/rust/commit/16ee042100d252d1c59c80c797a481be340151b3"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "a94350f9cde005d1d808b8441862e13514682538", "filename": "src/librustc_mir/borrow_check/error_reporting.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/69bc687f20178076c8fb244cb80d78c2f4c45565/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69bc687f20178076c8fb244cb80d78c2f4c45565/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs?ref=69bc687f20178076c8fb244cb80d78c2f4c45565", "patch": "@@ -511,14 +511,10 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n                 )\n             }\n \n-            (BorrowKind::Shallow, _, _, BorrowKind::Unique, _, _)\n-            | (BorrowKind::Shallow, _, _, BorrowKind::Mut { .. }, _, _) => {\n-                // Shallow borrows are uses from the user's point of view.\n-                self.report_use_while_mutably_borrowed(context, (place, span), issued_borrow);\n-                return;\n-            }\n             (BorrowKind::Shared, _, _, BorrowKind::Shared, _, _)\n             | (BorrowKind::Shared, _, _, BorrowKind::Shallow, _, _)\n+            | (BorrowKind::Shallow, _, _, BorrowKind::Mut { .. }, _, _)\n+            | (BorrowKind::Shallow, _, _, BorrowKind::Unique, _, _)\n             | (BorrowKind::Shallow, _, _, BorrowKind::Shared, _, _)\n             | (BorrowKind::Shallow, _, _, BorrowKind::Shallow, _, _) => unreachable!(),\n         };"}, {"sha": "e533066e6b9e223ececc343af49a4f10fdfb3ce2", "filename": "src/librustc_mir/transform/qualify_consts.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/69bc687f20178076c8fb244cb80d78c2f4c45565/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69bc687f20178076c8fb244cb80d78c2f4c45565/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs?ref=69bc687f20178076c8fb244cb80d78c2f4c45565", "patch": "@@ -728,7 +728,10 @@ impl<'a, 'tcx> Checker<'a, 'tcx> {\n                                    interior mutability, create a static instead\");\n                     }\n                 }\n-            } else {\n+            } else if let BorrowKind::Mut { .. } | BorrowKind::Shared = kind {\n+                // Don't promote BorrowKind::Shallow borrows, as they don't\n+                // reach codegen.\n+\n                 // We might have a candidate for promotion.\n                 let candidate = Candidate::Ref(location);\n                 // We can only promote interior borrows of promotable temps."}, {"sha": "7ac36a22274f33897dfe8e2a827b7c97f373a010", "filename": "src/test/mir-opt/match_false_edges.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/69bc687f20178076c8fb244cb80d78c2f4c45565/src%2Ftest%2Fmir-opt%2Fmatch_false_edges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69bc687f20178076c8fb244cb80d78c2f4c45565/src%2Ftest%2Fmir-opt%2Fmatch_false_edges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatch_false_edges.rs?ref=69bc687f20178076c8fb244cb80d78c2f4c45565", "patch": "@@ -70,8 +70,8 @@ fn main() {\n //  }\n //  bb8: { // binding1 and guard\n //      StorageLive(_6);\n-//      _6 = &(((promoted[1]: std::option::Option<i32>) as Some).0: i32);\n-//      _4 = &shallow (promoted[0]: std::option::Option<i32>);\n+//      _6 = &(((promoted[0]: std::option::Option<i32>) as Some).0: i32);\n+//      _4 = &shallow _2;\n //      StorageLive(_7);\n //      _7 = const guard() -> [return: bb9, unwind: bb1];\n //  }"}]}