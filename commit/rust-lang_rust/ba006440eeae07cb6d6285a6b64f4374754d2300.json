{"sha": "ba006440eeae07cb6d6285a6b64f4374754d2300", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhMDA2NDQwZWVhZTA3Y2I2ZDYyODVhNmI2NGY0Mzc0NzU0ZDIzMDA=", "commit": {"author": {"name": "Irina Popa", "email": "irinagpopa@gmail.com", "date": "2018-07-17T13:43:49Z"}, "committer": {"name": "Irina Popa", "email": "irinagpopa@gmail.com", "date": "2018-07-30T17:34:51Z"}, "message": "rustc_codegen_llvm: use safe references for ThinLTOData.", "tree": {"sha": "11fb3cb5baea3a15393f3a830efe342e311818ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11fb3cb5baea3a15393f3a830efe342e311818ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba006440eeae07cb6d6285a6b64f4374754d2300", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba006440eeae07cb6d6285a6b64f4374754d2300", "html_url": "https://github.com/rust-lang/rust/commit/ba006440eeae07cb6d6285a6b64f4374754d2300", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba006440eeae07cb6d6285a6b64f4374754d2300/comments", "author": {"login": "irinagpopa", "id": 32459019, "node_id": "MDQ6VXNlcjMyNDU5MDE5", "avatar_url": "https://avatars.githubusercontent.com/u/32459019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irinagpopa", "html_url": "https://github.com/irinagpopa", "followers_url": "https://api.github.com/users/irinagpopa/followers", "following_url": "https://api.github.com/users/irinagpopa/following{/other_user}", "gists_url": "https://api.github.com/users/irinagpopa/gists{/gist_id}", "starred_url": "https://api.github.com/users/irinagpopa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irinagpopa/subscriptions", "organizations_url": "https://api.github.com/users/irinagpopa/orgs", "repos_url": "https://api.github.com/users/irinagpopa/repos", "events_url": "https://api.github.com/users/irinagpopa/events{/privacy}", "received_events_url": "https://api.github.com/users/irinagpopa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "irinagpopa", "id": 32459019, "node_id": "MDQ6VXNlcjMyNDU5MDE5", "avatar_url": "https://avatars.githubusercontent.com/u/32459019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irinagpopa", "html_url": "https://github.com/irinagpopa", "followers_url": "https://api.github.com/users/irinagpopa/followers", "following_url": "https://api.github.com/users/irinagpopa/following{/other_user}", "gists_url": "https://api.github.com/users/irinagpopa/gists{/gist_id}", "starred_url": "https://api.github.com/users/irinagpopa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irinagpopa/subscriptions", "organizations_url": "https://api.github.com/users/irinagpopa/orgs", "repos_url": "https://api.github.com/users/irinagpopa/repos", "events_url": "https://api.github.com/users/irinagpopa/events{/privacy}", "received_events_url": "https://api.github.com/users/irinagpopa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e3a6af7faf1841d620baee12993f59cccdd4e4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e3a6af7faf1841d620baee12993f59cccdd4e4c", "html_url": "https://github.com/rust-lang/rust/commit/2e3a6af7faf1841d620baee12993f59cccdd4e4c"}], "stats": {"total": 25, "additions": 12, "deletions": 13}, "files": [{"sha": "daa2fb05280649793a50ac3831c7352cd8b1f5df", "filename": "src/librustc_codegen_llvm/back/lto.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ba006440eeae07cb6d6285a6b64f4374754d2300/src%2Flibrustc_codegen_llvm%2Fback%2Flto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba006440eeae07cb6d6285a6b64f4374754d2300/src%2Flibrustc_codegen_llvm%2Fback%2Flto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Flto.rs?ref=ba006440eeae07cb6d6285a6b64f4374754d2300", "patch": "@@ -423,11 +423,10 @@ fn thin_lto(diag_handler: &Handler,\n             thin_modules.len() as u32,\n             symbol_white_list.as_ptr(),\n             symbol_white_list.len() as u32,\n-        );\n-        if data.is_null() {\n-            let msg = \"failed to prepare thin LTO context\".to_string();\n-            return Err(write::llvm_err(&diag_handler, msg))\n-        }\n+        ).ok_or_else(|| {\n+            write::llvm_err(&diag_handler, \"failed to prepare thin LTO context\".to_string())\n+        })?;\n+\n         let data = ThinData(data);\n         info!(\"thin LTO data created\");\n         timeline.record(\"data\");\n@@ -566,15 +565,15 @@ struct ThinShared {\n     module_names: Vec<CString>,\n }\n \n-struct ThinData(*mut llvm::ThinLTOData);\n+struct ThinData(&'static mut llvm::ThinLTOData);\n \n unsafe impl Send for ThinData {}\n unsafe impl Sync for ThinData {}\n \n impl Drop for ThinData {\n     fn drop(&mut self) {\n         unsafe {\n-            llvm::LLVMRustFreeThinLTOData(self.0);\n+            llvm::LLVMRustFreeThinLTOData(&mut *(self.0 as *mut _));\n         }\n     }\n }"}, {"sha": "ba37eaa4608ba7cbd5104e860d7ce131563888f7", "filename": "src/librustc_codegen_llvm/llvm/ffi.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ba006440eeae07cb6d6285a6b64f4374754d2300/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba006440eeae07cb6d6285a6b64f4374754d2300/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs?ref=ba006440eeae07cb6d6285a6b64f4374754d2300", "patch": "@@ -1580,24 +1580,24 @@ extern \"C\" {\n         NumModules: c_uint,\n         PreservedSymbols: *const *const c_char,\n         PreservedSymbolsLen: c_uint,\n-    ) -> *mut ThinLTOData;\n+    ) -> Option<&'static mut ThinLTOData>;\n     pub fn LLVMRustPrepareThinLTORename(\n-        Data: *const ThinLTOData,\n+        Data: &ThinLTOData,\n         Module: &Module,\n     ) -> bool;\n     pub fn LLVMRustPrepareThinLTOResolveWeak(\n-        Data: *const ThinLTOData,\n+        Data: &ThinLTOData,\n         Module: &Module,\n     ) -> bool;\n     pub fn LLVMRustPrepareThinLTOInternalize(\n-        Data: *const ThinLTOData,\n+        Data: &ThinLTOData,\n         Module: &Module,\n     ) -> bool;\n     pub fn LLVMRustPrepareThinLTOImport(\n-        Data: *const ThinLTOData,\n+        Data: &ThinLTOData,\n         Module: &Module,\n     ) -> bool;\n-    pub fn LLVMRustFreeThinLTOData(Data: *mut ThinLTOData);\n+    pub fn LLVMRustFreeThinLTOData(Data: &'static mut ThinLTOData);\n     pub fn LLVMRustParseBitcodeForThinLTO(\n         Context: &Context,\n         Data: *const u8,"}]}