{"sha": "d84d3f8c6668396b1d2f28d5de55fb14484b493f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4NGQzZjhjNjY2ODM5NmIxZDJmMjhkNWRlNTVmYjE0NDg0YjQ5M2Y=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-04-25T05:33:37Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-04-25T05:33:37Z"}, "message": "Auto merge of #4030 - phansch:rustup190425, r=Manishearth\n\nRustup for https://github.com/rust-lang/rust/pull/59042\n\nchangelog: none", "tree": {"sha": "2bd46f0af2e41278f8bb3723f020f7f538926ccf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2bd46f0af2e41278f8bb3723f020f7f538926ccf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d84d3f8c6668396b1d2f28d5de55fb14484b493f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d84d3f8c6668396b1d2f28d5de55fb14484b493f", "html_url": "https://github.com/rust-lang/rust/commit/d84d3f8c6668396b1d2f28d5de55fb14484b493f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d84d3f8c6668396b1d2f28d5de55fb14484b493f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46af9c84f6486bd8bda57e30f308ce09f97f2733", "url": "https://api.github.com/repos/rust-lang/rust/commits/46af9c84f6486bd8bda57e30f308ce09f97f2733", "html_url": "https://github.com/rust-lang/rust/commit/46af9c84f6486bd8bda57e30f308ce09f97f2733"}, {"sha": "1f5a3c6e5221a4e830106cfc9eae3a3efedec63b", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f5a3c6e5221a4e830106cfc9eae3a3efedec63b", "html_url": "https://github.com/rust-lang/rust/commit/1f5a3c6e5221a4e830106cfc9eae3a3efedec63b"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "5fb1a988d1483a43996678db293288279d0c39ed", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d84d3f8c6668396b1d2f28d5de55fb14484b493f/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d84d3f8c6668396b1d2f28d5de55fb14484b493f/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=d84d3f8c6668396b1d2f28d5de55fb14484b493f", "patch": "@@ -1459,12 +1459,12 @@ fn check_for_loop_explicit_counter<'a, 'tcx>(\n     // For each candidate, check the parent block to see if\n     // it's initialized to zero at the start of the loop.\n     let map = &cx.tcx.hir();\n-    let expr_node_id = map.hir_to_node_id(expr.hir_id);\n+    let expr_node_id = expr.hir_id;\n     let parent_scope = map\n         .get_enclosing_scope(expr_node_id)\n         .and_then(|id| map.get_enclosing_scope(id));\n     if let Some(parent_id) = parent_scope {\n-        if let Node::Block(block) = map.get(parent_id) {\n+        if let Node::Block(block) = map.get_by_hir_id(parent_id) {\n             for (id, _) in visitor.states.iter().filter(|&(_, v)| *v == VarState::IncrOnce) {\n                 let mut visitor2 = InitializeVisitor {\n                     cx,"}, {"sha": "868c8b906ad55299070ced7550450de126ccd194", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d84d3f8c6668396b1d2f28d5de55fb14484b493f/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d84d3f8c6668396b1d2f28d5de55fb14484b493f/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=d84d3f8c6668396b1d2f28d5de55fb14484b493f", "patch": "@@ -591,12 +591,11 @@ pub fn get_parent_expr<'c>(cx: &'c LateContext<'_, '_>, e: &Expr) -> Option<&'c\n     })\n }\n \n-pub fn get_enclosing_block<'a, 'tcx: 'a>(cx: &LateContext<'a, 'tcx>, node: HirId) -> Option<&'tcx Block> {\n+pub fn get_enclosing_block<'a, 'tcx: 'a>(cx: &LateContext<'a, 'tcx>, hir_id: HirId) -> Option<&'tcx Block> {\n     let map = &cx.tcx.hir();\n-    let node_id = map.hir_to_node_id(node);\n     let enclosing_node = map\n-        .get_enclosing_scope(node_id)\n-        .and_then(|enclosing_id| map.find(enclosing_id));\n+        .get_enclosing_scope(hir_id)\n+        .and_then(|enclosing_id| map.find_by_hir_id(enclosing_id));\n     if let Some(node) = enclosing_node {\n         match node {\n             Node::Block(block) => Some(block),"}]}