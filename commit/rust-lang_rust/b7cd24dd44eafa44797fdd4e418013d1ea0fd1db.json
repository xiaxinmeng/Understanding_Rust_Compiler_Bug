{"sha": "b7cd24dd44eafa44797fdd4e418013d1ea0fd1db", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3Y2QyNGRkNDRlYWZhNDQ3OTdmZGQ0ZTQxODAxM2QxZWEwZmQxZGI=", "commit": {"author": {"name": "Igor Matuszewski", "email": "Xanewok@gmail.com", "date": "2019-01-15T16:44:41Z"}, "committer": {"name": "Igor Matuszewski", "email": "Xanewok@gmail.com", "date": "2019-01-15T16:44:41Z"}, "message": "Make the query comment into a doc comment", "tree": {"sha": "1a69e0a35dc5a312669443dbb9f1159093a1587e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a69e0a35dc5a312669443dbb9f1159093a1587e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7cd24dd44eafa44797fdd4e418013d1ea0fd1db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7cd24dd44eafa44797fdd4e418013d1ea0fd1db", "html_url": "https://github.com/rust-lang/rust/commit/b7cd24dd44eafa44797fdd4e418013d1ea0fd1db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7cd24dd44eafa44797fdd4e418013d1ea0fd1db/comments", "author": {"login": "Xanewok", "id": 3093213, "node_id": "MDQ6VXNlcjMwOTMyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3093213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xanewok", "html_url": "https://github.com/Xanewok", "followers_url": "https://api.github.com/users/Xanewok/followers", "following_url": "https://api.github.com/users/Xanewok/following{/other_user}", "gists_url": "https://api.github.com/users/Xanewok/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xanewok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xanewok/subscriptions", "organizations_url": "https://api.github.com/users/Xanewok/orgs", "repos_url": "https://api.github.com/users/Xanewok/repos", "events_url": "https://api.github.com/users/Xanewok/events{/privacy}", "received_events_url": "https://api.github.com/users/Xanewok/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Xanewok", "id": 3093213, "node_id": "MDQ6VXNlcjMwOTMyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3093213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xanewok", "html_url": "https://github.com/Xanewok", "followers_url": "https://api.github.com/users/Xanewok/followers", "following_url": "https://api.github.com/users/Xanewok/following{/other_user}", "gists_url": "https://api.github.com/users/Xanewok/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xanewok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xanewok/subscriptions", "organizations_url": "https://api.github.com/users/Xanewok/orgs", "repos_url": "https://api.github.com/users/Xanewok/repos", "events_url": "https://api.github.com/users/Xanewok/events{/privacy}", "received_events_url": "https://api.github.com/users/Xanewok/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff19a53ef07566aa30860023f6eac6e75ffaf900", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff19a53ef07566aa30860023f6eac6e75ffaf900", "html_url": "https://github.com/rust-lang/rust/commit/ff19a53ef07566aa30860023f6eac6e75ffaf900"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "6bf99a98d4efffdf1cfd4dacb715a5f53de497dc", "filename": "src/librustc/ty/query/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b7cd24dd44eafa44797fdd4e418013d1ea0fd1db/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7cd24dd44eafa44797fdd4e418013d1ea0fd1db/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs?ref=b7cd24dd44eafa44797fdd4e418013d1ea0fd1db", "patch": "@@ -476,7 +476,8 @@ define_queries! { <'tcx>\n \n         [] fn foreign_modules: ForeignModules(CrateNum) -> Lrc<Vec<ForeignModule>>,\n \n-        // For a library crate, this is always none\n+        /// Identifies the entry-point (e.g. the `main` function) for a given\n+        /// crate, returning `None` if there is no entry point (such as for library crates).\n         [] fn entry_fn: EntryFn(CrateNum) -> Option<(DefId, EntryFnType)>,\n         [] fn plugin_registrar_fn: PluginRegistrarFn(CrateNum) -> Option<DefId>,\n         [] fn proc_macro_decls_static: ProcMacroDeclsStatic(CrateNum) -> Option<DefId>,"}]}