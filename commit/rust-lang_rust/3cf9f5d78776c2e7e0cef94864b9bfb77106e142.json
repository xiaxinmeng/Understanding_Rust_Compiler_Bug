{"sha": "3cf9f5d78776c2e7e0cef94864b9bfb77106e142", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjZjlmNWQ3ODc3NmMyZTdlMGNlZjk0ODY0YjliZmI3NzEwNmUxNDI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-06-24T12:18:40Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-06-24T12:18:40Z"}, "message": "Auto merge of #42541 - gilescope:patch-1, r=alexcrichton\n\nassert_eq failure message easier to read\n\nBy having the left and right strings aligned with one another it helps spot the difference between the two far quicker than if they are on the same line.\n\nE.g.\nBefore:\n\n```\nthread 'tests::test_safe_filename' panicked at 'assertion failed: `(left == right)` left:  `\"-aandb--S123.html\"` right: `\"-aandb-S123.html\"`',\n```\n\nAfter:\n\n```\nthread 'tests::test_safe_filename' panicked at 'assertion failed: `(left == right)`\nleft:  `\"-aandb--S123.html\"`\nright: `\"-aandb-S123.html\"`',\n```\n\nWhen the strings are both on the same line it take a lot longer to spot the difference. It is a small change but the small time savings add up with repetition. This would help Rust be an excellent language to write tests in out of the box.\n\nCloses https://github.com/rust-lang/rust/issues/41615", "tree": {"sha": "c2e292d223990f1b9b1f12361c7172d56fb4c833", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2e292d223990f1b9b1f12361c7172d56fb4c833"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3cf9f5d78776c2e7e0cef94864b9bfb77106e142", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3cf9f5d78776c2e7e0cef94864b9bfb77106e142", "html_url": "https://github.com/rust-lang/rust/commit/3cf9f5d78776c2e7e0cef94864b9bfb77106e142", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3cf9f5d78776c2e7e0cef94864b9bfb77106e142/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e76505e0105e3102ed14d827dd727afc1c9fd92", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e76505e0105e3102ed14d827dd727afc1c9fd92", "html_url": "https://github.com/rust-lang/rust/commit/7e76505e0105e3102ed14d827dd727afc1c9fd92"}, {"sha": "940d5ca3d05ff23767a94b764b6b3658a435ac37", "url": "https://api.github.com/repos/rust-lang/rust/commits/940d5ca3d05ff23767a94b764b6b3658a435ac37", "html_url": "https://github.com/rust-lang/rust/commit/940d5ca3d05ff23767a94b764b6b3658a435ac37"}], "stats": {"total": 43, "additions": 33, "deletions": 10}, "files": [{"sha": "5bb6a772aeb6264abb05436fbd74b023f411a580", "filename": "src/libcore/macros.rs", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/3cf9f5d78776c2e7e0cef94864b9bfb77106e142/src%2Flibcore%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cf9f5d78776c2e7e0cef94864b9bfb77106e142/src%2Flibcore%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmacros.rs?ref=3cf9f5d78776c2e7e0cef94864b9bfb77106e142", "patch": "@@ -116,8 +116,9 @@ macro_rules! assert_eq {\n         match (&$left, &$right) {\n             (left_val, right_val) => {\n                 if !(*left_val == *right_val) {\n-                    panic!(\"assertion failed: `(left == right)` \\\n-                           (left: `{:?}`, right: `{:?}`)\", left_val, right_val)\n+                    panic!(r#\"assertion failed: `(left == right)`\n+  left: `{:?}`,\n+ right: `{:?}`\"#, left_val, right_val)\n                 }\n             }\n         }\n@@ -126,8 +127,9 @@ macro_rules! assert_eq {\n         match (&($left), &($right)) {\n             (left_val, right_val) => {\n                 if !(*left_val == *right_val) {\n-                    panic!(\"assertion failed: `(left == right)` \\\n-                           (left: `{:?}`, right: `{:?}`): {}\", left_val, right_val,\n+                    panic!(r#\"assertion failed: `(left == right)`\n+  left: `{:?}`,\n+ right: `{:?}`: {}\"#, left_val, right_val,\n                            format_args!($($arg)+))\n                 }\n             }\n@@ -162,8 +164,9 @@ macro_rules! assert_ne {\n         match (&$left, &$right) {\n             (left_val, right_val) => {\n                 if *left_val == *right_val {\n-                    panic!(\"assertion failed: `(left != right)` \\\n-                           (left: `{:?}`, right: `{:?}`)\", left_val, right_val)\n+                    panic!(r#\"assertion failed: `(left != right)`\n+  left: `{:?}`,\n+ right: `{:?}`\"#, left_val, right_val)\n                 }\n             }\n         }\n@@ -172,8 +175,9 @@ macro_rules! assert_ne {\n         match (&($left), &($right)) {\n             (left_val, right_val) => {\n                 if *left_val == *right_val {\n-                    panic!(\"assertion failed: `(left != right)` \\\n-                           (left: `{:?}`, right: `{:?}`): {}\", left_val, right_val,\n+                    panic!(r#\"assertion failed: `(left != right)`\n+  left: `{:?}`,\n+ right: `{:?}`: {}\"#, left_val, right_val,\n                            format_args!($($arg)+))\n                 }\n             }"}, {"sha": "fed2ee0beab29656f720d9b170c7abdf184aa460", "filename": "src/test/run-fail/assert-eq-macro-panic.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3cf9f5d78776c2e7e0cef94864b9bfb77106e142/src%2Ftest%2Frun-fail%2Fassert-eq-macro-panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cf9f5d78776c2e7e0cef94864b9bfb77106e142/src%2Ftest%2Frun-fail%2Fassert-eq-macro-panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fassert-eq-macro-panic.rs?ref=3cf9f5d78776c2e7e0cef94864b9bfb77106e142", "patch": "@@ -8,7 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:assertion failed: `(left == right)` (left: `14`, right: `15`)\n+// error-pattern:assertion failed: `(left == right)`\n+// error-pattern: left: `14`\n+// error-pattern:right: `15`\n \n fn main() {\n     assert_eq!(14, 15);"}, {"sha": "d57bb0fb67fb0bf1257b094eb39b66dfa010e62f", "filename": "src/test/run-fail/assert-ne-macro-panic.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/3cf9f5d78776c2e7e0cef94864b9bfb77106e142/src%2Ftest%2Frun-fail%2Fassert-ne-macro-panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cf9f5d78776c2e7e0cef94864b9bfb77106e142/src%2Ftest%2Frun-fail%2Fassert-ne-macro-panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fassert-ne-macro-panic.rs?ref=3cf9f5d78776c2e7e0cef94864b9bfb77106e142", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// error-pattern:assertion failed: `(left != right)`\n+// error-pattern: left: `14`\n+// error-pattern:right: `14`\n+\n+fn main() {\n+    assert_ne!(14, 14);\n+}"}, {"sha": "534ce68621ce4feec0b7e8627cfd3b077d4f3900", "filename": "src/tools/cargo", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcargo?ref=3cf9f5d78776c2e7e0cef94864b9bfb77106e142", "patch": "@@ -1 +1 @@\n-Subproject commit 50b1c24d146fa072db71f12005deed319ac5ba9a\n+Subproject commit 534ce68621ce4feec0b7e8627cfd3b077d4f3900"}]}