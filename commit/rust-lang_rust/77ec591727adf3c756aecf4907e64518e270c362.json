{"sha": "77ec591727adf3c756aecf4907e64518e270c362", "node_id": "C_kwDOAAsO6NoAKDc3ZWM1OTE3MjdhZGYzYzc1NmFlY2Y0OTA3ZTY0NTE4ZTI3MGMzNjI", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2022-07-06T18:43:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-06T18:43:27Z"}, "message": "Rollup merge of #98939 - GuillaumeGomez:rustdoc-disamb-impls, r=notriddle\n\nrustdoc: Add more semantic information to impl IDs\n\nTake over of #92745.\n\nI fixed the last remaining issue for the links in the sidebar (mentioned by `@jsha)` and fixed the few links broken in the std/core docs.\n\ncc `@camelid`\nr? `@notriddle`", "tree": {"sha": "2c70d2ec7ac144e71b8f584182d5e6325968d589", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c70d2ec7ac144e71b8f584182d5e6325968d589"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77ec591727adf3c756aecf4907e64518e270c362", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJixdfPCRBK7hj4Ov3rIwAAnXgIACf9TYVMfe9SiBGVIlksqcqi\n6VXPMXJGWcGOAenekVJIA66RE23Rmo+G6YtExWlyGZPz07u7vSS6R1piBAc8joG9\nZ+ytOdP2YlW0kQ94kqcgHGI3/Lt69jwB4mJPMOGGmgLYHOOEXecRQvfMrxv/ckFZ\n0qu2lXIO83r8F1hB4GaFTpYlnD3O/x6w+rwZocCtQ8m2AcG5SGLAAy95p6RCRzZx\nB7JiFY0TcitBOadumzkLhXuSIXpTIaf9hFH5KJvARX8UnBL/DIxCdoF9COn/+n1r\n43yxv08lWDJkWJM/ocDLjLdNF0+EqNqK+5HYPO56QMFvXJdA6ovCjMg24CcSKXo=\n=6v0T\n-----END PGP SIGNATURE-----\n", "payload": "tree 2c70d2ec7ac144e71b8f584182d5e6325968d589\nparent d87bf2492572bc944ef1dd63306b9d388cf99bae\nparent 53db831d62481dd0b1f74e2109c50d31d9f75c62\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1657133007 +0200\ncommitter GitHub <noreply@github.com> 1657133007 +0200\n\nRollup merge of #98939 - GuillaumeGomez:rustdoc-disamb-impls, r=notriddle\n\nrustdoc: Add more semantic information to impl IDs\n\nTake over of #92745.\n\nI fixed the last remaining issue for the links in the sidebar (mentioned by `@jsha)` and fixed the few links broken in the std/core docs.\n\ncc `@camelid`\nr? `@notriddle`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77ec591727adf3c756aecf4907e64518e270c362", "html_url": "https://github.com/rust-lang/rust/commit/77ec591727adf3c756aecf4907e64518e270c362", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77ec591727adf3c756aecf4907e64518e270c362/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d87bf2492572bc944ef1dd63306b9d388cf99bae", "url": "https://api.github.com/repos/rust-lang/rust/commits/d87bf2492572bc944ef1dd63306b9d388cf99bae", "html_url": "https://github.com/rust-lang/rust/commit/d87bf2492572bc944ef1dd63306b9d388cf99bae"}, {"sha": "53db831d62481dd0b1f74e2109c50d31d9f75c62", "url": "https://api.github.com/repos/rust-lang/rust/commits/53db831d62481dd0b1f74e2109c50d31d9f75c62", "html_url": "https://github.com/rust-lang/rust/commit/53db831d62481dd0b1f74e2109c50d31d9f75c62"}], "stats": {"total": 215, "additions": 102, "deletions": 113}, "files": [{"sha": "7c5f82f5ea49df6c1ddba8fbb2c9cc4542e29500", "filename": "library/core/src/char/convert.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/77ec591727adf3c756aecf4907e64518e270c362/library%2Fcore%2Fsrc%2Fchar%2Fconvert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77ec591727adf3c756aecf4907e64518e270c362/library%2Fcore%2Fsrc%2Fchar%2Fconvert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fchar%2Fconvert.rs?ref=77ec591727adf3c756aecf4907e64518e270c362", "patch": "@@ -93,7 +93,7 @@ impl const From<char> for u128 {\n /// Map `char` with code point in U+0000..=U+00FF to byte in 0x00..=0xFF with same value, failing\n /// if the code point is greater than U+00FF.\n ///\n-/// See [`impl From<u8> for char`](char#impl-From<u8>) for details on the encoding.\n+/// See [`impl From<u8> for char`](char#impl-From<u8>-for-char) for details on the encoding.\n #[stable(feature = \"u8_from_char\", since = \"1.59.0\")]\n impl TryFrom<char> for u8 {\n     type Error = TryFromCharError;\n@@ -229,7 +229,7 @@ impl TryFrom<u32> for char {\n \n /// The error type returned when a conversion from [`prim@u32`] to [`prim@char`] fails.\n ///\n-/// This `struct` is created by the [`char::try_from<u32>`](char#impl-TryFrom<u32>) method.\n+/// This `struct` is created by the [`char::try_from<u32>`](char#impl-TryFrom<u32>-for-char) method.\n /// See its documentation for more.\n #[stable(feature = \"try_from\", since = \"1.34.0\")]\n #[derive(Copy, Clone, Debug, PartialEq, Eq)]"}, {"sha": "cf428e0b1cf1d729e5d8b4a1f3d10b3ce23a465a", "filename": "library/core/src/hash/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77ec591727adf3c756aecf4907e64518e270c362/library%2Fcore%2Fsrc%2Fhash%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77ec591727adf3c756aecf4907e64518e270c362/library%2Fcore%2Fsrc%2Fhash%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fhash%2Fmod.rs?ref=77ec591727adf3c756aecf4907e64518e270c362", "patch": "@@ -180,7 +180,7 @@ mod sip;\n /// [`HashMap`]: ../../std/collections/struct.HashMap.html\n /// [`HashSet`]: ../../std/collections/struct.HashSet.html\n /// [`hash`]: Hash::hash\n-/// [impl]: ../../std/primitive.str.html#impl-Hash\n+/// [impl]: ../../std/primitive.str.html#impl-Hash-for-str\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[rustc_diagnostic_item = \"Hash\"]\n pub trait Hash {"}, {"sha": "bca73cb770fbb3bab29968d931af0918124d79ef", "filename": "library/core/src/option.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/77ec591727adf3c756aecf4907e64518e270c362/library%2Fcore%2Fsrc%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77ec591727adf3c756aecf4907e64518e270c362/library%2Fcore%2Fsrc%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Foption.rs?ref=77ec591727adf3c756aecf4907e64518e270c362", "patch": "@@ -389,7 +389,7 @@\n //! [`Option`] of a collection of each contained value of the original\n //! [`Option`] values, or [`None`] if any of the elements was [`None`].\n //!\n-//! [impl-FromIterator]: Option#impl-FromIterator%3COption%3CA%3E%3E\n+//! [impl-FromIterator]: Option#impl-FromIterator%3COption%3CA%3E%3E-for-Option%3CV%3E\n //!\n //! ```\n //! let v = [Some(2), Some(4), None, Some(8)];\n@@ -405,8 +405,8 @@\n //! to provide the [`product`][Iterator::product] and\n //! [`sum`][Iterator::sum] methods.\n //!\n-//! [impl-Product]: Option#impl-Product%3COption%3CU%3E%3E\n-//! [impl-Sum]: Option#impl-Sum%3COption%3CU%3E%3E\n+//! [impl-Product]: Option#impl-Product%3COption%3CU%3E%3E-for-Option%3CT%3E\n+//! [impl-Sum]: Option#impl-Sum%3COption%3CU%3E%3E-for-Option%3CT%3E\n //!\n //! ```\n //! let v = [None, Some(1), Some(2), Some(3)];"}, {"sha": "8a68cdf7d651bb430109f2261673be6d84402d66", "filename": "library/core/src/result.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/77ec591727adf3c756aecf4907e64518e270c362/library%2Fcore%2Fsrc%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77ec591727adf3c756aecf4907e64518e270c362/library%2Fcore%2Fsrc%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fresult.rs?ref=77ec591727adf3c756aecf4907e64518e270c362", "patch": "@@ -459,7 +459,7 @@\n //! [`Result`] of a collection of each contained value of the original\n //! [`Result`] values, or [`Err`] if any of the elements was [`Err`].\n //!\n-//! [impl-FromIterator]: Result#impl-FromIterator%3CResult%3CA%2C%20E%3E%3E\n+//! [impl-FromIterator]: Result#impl-FromIterator%3CResult%3CA%2C%20E%3E%3E-for-Result%3CV%2C%20E%3E\n //!\n //! ```\n //! let v = [Ok(2), Ok(4), Err(\"err!\"), Ok(8)];\n@@ -475,8 +475,8 @@\n //! to provide the [`product`][Iterator::product] and\n //! [`sum`][Iterator::sum] methods.\n //!\n-//! [impl-Product]: Result#impl-Product%3CResult%3CU%2C%20E%3E%3E\n-//! [impl-Sum]: Result#impl-Sum%3CResult%3CU%2C%20E%3E%3E\n+//! [impl-Product]: Result#impl-Product%3CResult%3CU%2C%20E%3E%3E-for-Result%3CT%2C%20E%3E\n+//! [impl-Sum]: Result#impl-Sum%3CResult%3CU%2C%20E%3E%3E-for-Result%3CT%2C%20E%3E\n //!\n //! ```\n //! let v = [Err(\"error!\"), Ok(1), Ok(2), Ok(3), Err(\"foo\")];"}, {"sha": "e62a8bcfba6670e0b2b4a7d837d4bac361630394", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 20, "deletions": 40, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/77ec591727adf3c756aecf4907e64518e270c362/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77ec591727adf3c756aecf4907e64518e270c362/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=77ec591727adf3c756aecf4907e64518e270c362", "patch": "@@ -634,7 +634,6 @@ fn render_impls(\n                 &[],\n                 ImplRenderingParameters {\n                     show_def_docs: true,\n-                    is_on_foreign_type: false,\n                     show_default_items: true,\n                     show_non_assoc_items: true,\n                     toggle_open_by_default,\n@@ -1071,7 +1070,6 @@ fn render_assoc_items_inner(\n                 &[],\n                 ImplRenderingParameters {\n                     show_def_docs: true,\n-                    is_on_foreign_type: false,\n                     show_default_items: true,\n                     show_non_assoc_items: true,\n                     toggle_open_by_default: true,\n@@ -1287,7 +1285,6 @@ fn notable_traits_decl(decl: &clean::FnDecl, cx: &Context<'_>) -> String {\n #[derive(Clone, Copy, Debug)]\n struct ImplRenderingParameters {\n     show_def_docs: bool,\n-    is_on_foreign_type: bool,\n     show_default_items: bool,\n     /// Whether or not to show methods.\n     show_non_assoc_items: bool,\n@@ -1603,7 +1600,6 @@ fn render_impl(\n             parent,\n             rendering_params.show_def_docs,\n             use_absolute,\n-            rendering_params.is_on_foreign_type,\n             aliases,\n         );\n         if toggled {\n@@ -1688,21 +1684,12 @@ pub(crate) fn render_impl_summary(\n     containing_item: &clean::Item,\n     show_def_docs: bool,\n     use_absolute: Option<bool>,\n-    is_on_foreign_type: bool,\n     // This argument is used to reference same type with different paths to avoid duplication\n     // in documentation pages for trait with automatic implementations like \"Send\" and \"Sync\".\n     aliases: &[String],\n ) {\n-    let id = cx.derive_id(match i.inner_impl().trait_ {\n-        Some(ref t) => {\n-            if is_on_foreign_type {\n-                get_id_for_impl_on_foreign_type(&i.inner_impl().for_, t, cx)\n-            } else {\n-                format!(\"impl-{}\", small_url_encode(format!(\"{:#}\", t.print(cx))))\n-            }\n-        }\n-        None => \"impl\".to_string(),\n-    });\n+    let id =\n+        cx.derive_id(get_id_for_impl(&i.inner_impl().for_, i.inner_impl().trait_.as_ref(), cx));\n     let aliases = if aliases.is_empty() {\n         String::new()\n     } else {\n@@ -1986,21 +1973,18 @@ fn sidebar_assoc_items(cx: &Context<'_>, out: &mut Buffer, it: &clean::Item) {\n                 let mut ret = impls\n                     .iter()\n                     .filter_map(|it| {\n-                        if let Some(ref i) = it.inner_impl().trait_ {\n-                            let i_display = format!(\"{:#}\", i.print(cx));\n-                            let out = Escape(&i_display);\n-                            let encoded =\n-                                id_map.derive(small_url_encode(format!(\"impl-{:#}\", i.print(cx))));\n-                            let prefix = match it.inner_impl().polarity {\n-                                ty::ImplPolarity::Positive | ty::ImplPolarity::Reservation => \"\",\n-                                ty::ImplPolarity::Negative => \"!\",\n-                            };\n-                            let generated =\n-                                format!(\"<a href=\\\"#{}\\\">{}{}</a>\", encoded, prefix, out);\n-                            if links.insert(generated.clone()) { Some(generated) } else { None }\n-                        } else {\n-                            None\n-                        }\n+                        let trait_ = it.inner_impl().trait_.as_ref()?;\n+                        let encoded =\n+                            id_map.derive(get_id_for_impl(&it.inner_impl().for_, Some(trait_), cx));\n+\n+                        let i_display = format!(\"{:#}\", trait_.print(cx));\n+                        let out = Escape(&i_display);\n+                        let prefix = match it.inner_impl().polarity {\n+                            ty::ImplPolarity::Positive | ty::ImplPolarity::Reservation => \"\",\n+                            ty::ImplPolarity::Negative => \"!\",\n+                        };\n+                        let generated = format!(\"<a href=\\\"#{}\\\">{}{}</a>\", encoded, prefix, out);\n+                        if links.insert(generated.clone()) { Some(generated) } else { None }\n                     })\n                     .collect::<Vec<String>>();\n                 ret.sort();\n@@ -2147,12 +2131,11 @@ fn sidebar_struct(cx: &Context<'_>, buf: &mut Buffer, it: &clean::Item, s: &clea\n     }\n }\n \n-fn get_id_for_impl_on_foreign_type(\n-    for_: &clean::Type,\n-    trait_: &clean::Path,\n-    cx: &Context<'_>,\n-) -> String {\n-    small_url_encode(format!(\"impl-{:#}-for-{:#}\", trait_.print(cx), for_.print(cx)))\n+fn get_id_for_impl(for_: &clean::Type, trait_: Option<&clean::Path>, cx: &Context<'_>) -> String {\n+    match trait_ {\n+        Some(t) => small_url_encode(format!(\"impl-{:#}-for-{:#}\", t.print(cx), for_.print(cx))),\n+        None => small_url_encode(format!(\"impl-{:#}\", for_.print(cx))),\n+    }\n }\n \n fn extract_for_impl_name(item: &clean::Item, cx: &Context<'_>) -> Option<(String, String)> {\n@@ -2161,10 +2144,7 @@ fn extract_for_impl_name(item: &clean::Item, cx: &Context<'_>) -> Option<(String\n             i.trait_.as_ref().map(|trait_| {\n                 // Alternative format produces no URLs,\n                 // so this parameter does nothing.\n-                (\n-                    format!(\"{:#}\", i.for_.print(cx)),\n-                    get_id_for_impl_on_foreign_type(&i.for_, trait_, cx),\n-                )\n+                (format!(\"{:#}\", i.for_.print(cx)), get_id_for_impl(&i.for_, Some(trait_), cx))\n             })\n         }\n         _ => None,"}, {"sha": "86ee8e7acf6381476592964eef11dd88ccf1af72", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77ec591727adf3c756aecf4907e64518e270c362/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77ec591727adf3c756aecf4907e64518e270c362/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=77ec591727adf3c756aecf4907e64518e270c362", "patch": "@@ -864,7 +864,6 @@ fn item_trait(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &clean:\n                     &[],\n                     ImplRenderingParameters {\n                         show_def_docs: false,\n-                        is_on_foreign_type: true,\n                         show_default_items: false,\n                         show_non_assoc_items: true,\n                         toggle_open_by_default: false,\n@@ -1642,7 +1641,6 @@ fn render_implementor(\n         aliases,\n         ImplRenderingParameters {\n             show_def_docs: false,\n-            is_on_foreign_type: false,\n             show_default_items: false,\n             show_non_assoc_items: false,\n             toggle_open_by_default: false,"}, {"sha": "84b8bbd1b327f1c8431fd104e70ce04727814a5b", "filename": "src/test/rustdoc-gui/anchors.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc-gui%2Fanchors.goml", "raw_url": "https://github.com/rust-lang/rust/raw/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc-gui%2Fanchors.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fanchors.goml?ref=77ec591727adf3c756aecf4907e64518e270c362", "patch": "@@ -28,7 +28,7 @@ move-cursor-to: \"h2#implementations\"\n assert-css: (\"h2#implementations a.anchor\", {\"color\": \"rgb(0, 0, 0)\"})\n \n // Same thing with the impl block title.\n-move-cursor-to: \"#impl\"\n-assert-css: (\"#impl a.anchor\", {\"color\": \"rgb(0, 0, 0)\"})\n+move-cursor-to: \"#impl-HeavilyDocumentedStruct\"\n+assert-css: (\"#impl-HeavilyDocumentedStruct a.anchor\", {\"color\": \"rgb(0, 0, 0)\"})\n \n assert-css: (\"#title-for-struct-impl-item-doc\", {\"margin-left\": \"0px\"})"}, {"sha": "a47a9c8a14c1f07e4505729564490ebe7ea7c14e", "filename": "src/test/rustdoc-gui/headers-color.goml", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc-gui%2Fheaders-color.goml", "raw_url": "https://github.com/rust-lang/rust/raw/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc-gui%2Fheaders-color.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fheaders-color.goml?ref=77ec591727adf3c756aecf4907e64518e270c362", "patch": "@@ -23,9 +23,9 @@ assert-css: (\n     ALL,\n )\n \n-goto: file://|DOC_PATH|/test_docs/struct.Foo.html#impl\n+goto: file://|DOC_PATH|/test_docs/struct.Foo.html#impl-Foo\n assert-css: (\n-    \"#impl\",\n+    \"#impl-Foo\",\n     {\"color\": \"rgb(197, 197, 197)\", \"background-color\": \"rgba(255, 236, 164, 0.06)\"},\n )\n \n@@ -62,9 +62,9 @@ assert-css: (\n     ALL,\n )\n \n-goto: file://|DOC_PATH|/test_docs/struct.Foo.html#impl\n+goto: file://|DOC_PATH|/test_docs/struct.Foo.html#impl-Foo\n assert-css: (\n-    \"#impl\",\n+    \"#impl-Foo\",\n     {\"color\": \"rgb(221, 221, 221)\", \"background-color\": \"rgb(73, 74, 61)\"},\n )\n \n@@ -99,8 +99,8 @@ assert-css: (\n     ALL,\n )\n \n-goto: file://|DOC_PATH|/test_docs/struct.Foo.html#impl\n-assert-css: (\"#impl\", {\"color\": \"rgb(0, 0, 0)\", \"background-color\": \"rgb(253, 255, 211)\"})\n+goto: file://|DOC_PATH|/test_docs/struct.Foo.html#impl-Foo\n+assert-css: (\"#impl-Foo\", {\"color\": \"rgb(0, 0, 0)\", \"background-color\": \"rgb(253, 255, 211)\"})\n \n goto: file://|DOC_PATH|/test_docs/struct.Foo.html#method.must_use\n assert-css: ("}, {"sha": "cc3dd61e99a7a1169809bd22b89e768085429d2a", "filename": "src/test/rustdoc-gui/headings.goml", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc-gui%2Fheadings.goml", "raw_url": "https://github.com/rust-lang/rust/raw/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc-gui%2Fheadings.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fheadings.goml?ref=77ec591727adf3c756aecf4907e64518e270c362", "patch": "@@ -32,8 +32,8 @@ assert-css: (\"h4#sub-heading-for-field\", {\"border-bottom-width\": \"0px\"})\n assert-css: (\"h2#implementations\", {\"font-size\": \"22px\"})\n assert-css: (\"h2#implementations\", {\"border-bottom-width\": \"1px\"})\n \n-assert-css: (\"#impl > h3.code-header\", {\"font-size\": \"18px\"})\n-assert-css: (\"#impl > h3.code-header\", {\"border-bottom-width\": \"0px\"})\n+assert-css: (\"#impl-HeavilyDocumentedStruct > h3.code-header\", {\"font-size\": \"18px\"})\n+assert-css: (\"#impl-HeavilyDocumentedStruct > h3.code-header\", {\"border-bottom-width\": \"0px\"})\n assert-css: (\"#method\\.do_nothing > h4.code-header\", {\"font-size\": \"16px\"})\n assert-css: (\"#method\\.do_nothing > h4.code-header\", {\"border-bottom-width\": \"0px\"})\n \n@@ -87,8 +87,8 @@ assert-css: (\"h6#structy-prose-sub-heading\", {\"border-bottom-width\": \"0px\"})\n assert-css: (\"h2#implementations\", {\"font-size\": \"22px\"})\n assert-css: (\"h2#implementations\", {\"border-bottom-width\": \"1px\"})\n \n-assert-css: (\"#impl > h3.code-header\", {\"font-size\": \"18px\"})\n-assert-css: (\"#impl > h3.code-header\", {\"border-bottom-width\": \"0px\"})\n+assert-css: (\"#impl-HeavilyDocumentedEnum > h3.code-header\", {\"font-size\": \"18px\"})\n+assert-css: (\"#impl-HeavilyDocumentedEnum > h3.code-header\", {\"border-bottom-width\": \"0px\"})\n assert-css: (\"#method\\.do_nothing > h4.code-header\", {\"font-size\": \"16px\"})\n assert-css: (\"#method\\.do_nothing > h4.code-header\", {\"border-bottom-width\": \"0px\"})\n \n@@ -129,8 +129,8 @@ assert-css: (\"h4#sub-heading-for-union-variant\", {\"border-bottom-width\": \"0px\"})\n assert-css: (\"h2#implementations\", {\"font-size\": \"22px\"})\n assert-css: (\"h2#implementations\", {\"border-bottom-width\": \"1px\"})\n \n-assert-css: (\"#impl > h3.code-header\", {\"font-size\": \"18px\"})\n-assert-css: (\"#impl > h3.code-header\", {\"border-bottom-width\": \"0px\"})\n+assert-css: (\"#impl-HeavilyDocumentedUnion > h3.code-header\", {\"font-size\": \"18px\"})\n+assert-css: (\"#impl-HeavilyDocumentedUnion > h3.code-header\", {\"border-bottom-width\": \"0px\"})\n assert-css: (\"h4#title-for-union-impl-doc\", {\"font-size\": \"16px\"})\n assert-css: (\"h4#title-for-union-impl-doc\", {\"border-bottom-width\": \"0px\"})\n assert-css: (\"h5#sub-heading-for-union-impl-doc\", {\"font-size\": \"16px\"})"}, {"sha": "666a6e1253d9dbd64cf6d28ba17972f922d638ef", "filename": "src/test/rustdoc-gui/implementors.goml", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc-gui%2Fimplementors.goml", "raw_url": "https://github.com/rust-lang/rust/raw/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc-gui%2Fimplementors.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fimplementors.goml?ref=77ec591727adf3c756aecf4907e64518e270c362", "patch": "@@ -6,8 +6,8 @@ assert: \"#implementors-list\"\n assert-count: (\"#implementors-list .impl\", 2)\n // Now we check that both implementors have an anchor, an ID and a similar DOM.\n assert: (\"#implementors-list .impl:nth-child(1) > a.anchor\")\n-assert-attribute: (\"#implementors-list .impl:nth-child(1)\", {\"id\": \"impl-Whatever\"})\n-assert-attribute: (\"#implementors-list .impl:nth-child(1) > a.anchor\", {\"href\": \"#impl-Whatever\"})\n+assert-attribute: (\"#implementors-list .impl:nth-child(1)\", {\"id\": \"impl-Whatever-for-Struct\"})\n+assert-attribute: (\"#implementors-list .impl:nth-child(1) > a.anchor\", {\"href\": \"#impl-Whatever-for-Struct\"})\n assert: \"#implementors-list .impl:nth-child(1) > .code-header.in-band\"\n \n assert: (\"#implementors-list .impl:nth-child(2) > a.anchor\")\n@@ -16,8 +16,16 @@ assert-attribute: (\"#implementors-list .impl:nth-child(2) > a.anchor\", {\"href\":\n assert: \"#implementors-list .impl:nth-child(2) > .code-header.in-band\"\n \n goto: file://|DOC_PATH|/test_docs/struct.HasEmptyTraits.html\n-compare-elements-position-near-false: (\"#impl-EmptyTrait1\", \"#impl-EmptyTrait2\", {\"y\": 30})\n-compare-elements-position-near: (\"#impl-EmptyTrait3 h3\", \"#impl-EmptyTrait3 .item-info\", {\"y\": 30})\n+compare-elements-position-near-false: (\n+    \"#impl-EmptyTrait1-for-HasEmptyTraits\",\n+    \"#impl-EmptyTrait2-for-HasEmptyTraits\",\n+    {\"y\": 30},\n+)\n+compare-elements-position-near: (\n+    \"#impl-EmptyTrait3-for-HasEmptyTraits h3\",\n+    \"#impl-EmptyTrait3-for-HasEmptyTraits .item-info\",\n+    {\"y\": 30},\n+)\n \n // Now check that re-exports work correctly.\n // There should be exactly one impl shown on both of these pages."}, {"sha": "b7095a3c5324d5715998dadd4d466626f46047ee", "filename": "src/test/rustdoc-gui/item-info-overflow.goml", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc-gui%2Fitem-info-overflow.goml", "raw_url": "https://github.com/rust-lang/rust/raw/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc-gui%2Fitem-info-overflow.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fitem-info-overflow.goml?ref=77ec591727adf3c756aecf4907e64518e270c362", "patch": "@@ -15,14 +15,17 @@ assert-text: (\n // Checking the \"item-info\" on an impl block as well:\n goto: file://|DOC_PATH|/lib2/struct.LongItemInfo2.html\n compare-elements-property: (\n-    \"#impl-SimpleTrait .item-info\",\n-    \"#impl-SimpleTrait + .docblock\",\n+    \"#impl-SimpleTrait-for-LongItemInfo2 .item-info\",\n+    \"#impl-SimpleTrait-for-LongItemInfo2 + .docblock\",\n     [\"scrollWidth\"],\n )\n-assert-property: (\"#impl-SimpleTrait .item-info\", {\"scrollWidth\": \"866\"})\n+assert-property: (\n+    \"#impl-SimpleTrait-for-LongItemInfo2 .item-info\",\n+    {\"scrollWidth\": \"866\"},\n+)\n // Just to be sure we're comparing the correct \"item-info\":\n assert-text: (\n-    \"#impl-SimpleTrait .item-info\",\n+    \"#impl-SimpleTrait-for-LongItemInfo2 .item-info\",\n     \"Available on Android or Linux or Emscripten or DragonFly BSD\",\n     STARTS_WITH,\n )"}, {"sha": "4a328c9f9e06e09904b49fefa204466de507b4ab", "filename": "src/test/rustdoc-gui/toggle-click-deadspace.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc-gui%2Ftoggle-click-deadspace.goml", "raw_url": "https://github.com/rust-lang/rust/raw/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc-gui%2Ftoggle-click-deadspace.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Ftoggle-click-deadspace.goml?ref=77ec591727adf3c756aecf4907e64518e270c362", "patch": "@@ -8,5 +8,5 @@ click: \".impl-items .rustdoc-toggle summary::before\" // This is the position of\n assert-attribute-false: (\".impl-items .rustdoc-toggle\", {\"open\": \"\"})\n \n // Click the \"Trait\" part of \"impl Trait\" and verify it navigates.\n-click: \"#impl-Trait h3 a:first-of-type\"\n+click: \"#impl-Trait-for-Foo h3 a:first-of-type\"\n assert-text: (\".fqn .in-band\", \"Trait lib2::Trait\")"}, {"sha": "661d905ab639cb81143eca5ea523524193307b0e", "filename": "src/test/rustdoc/auto-trait-not-send.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc%2Fauto-trait-not-send.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc%2Fauto-trait-not-send.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fauto-trait-not-send.rs?ref=77ec591727adf3c756aecf4907e64518e270c362", "patch": "@@ -1,8 +1,8 @@\n #![crate_name = \"foo\"]\n \n // @has 'foo/struct.Foo.html'\n-// @has - '//*[@id=\"impl-Send\"]' 'impl !Send for Foo'\n-// @has - '//*[@id=\"impl-Sync\"]' 'impl !Sync for Foo'\n+// @has - '//*[@id=\"impl-Send-for-Foo\"]' 'impl !Send for Foo'\n+// @has - '//*[@id=\"impl-Sync-for-Foo\"]' 'impl !Sync for Foo'\n pub struct Foo(*const i8);\n pub trait Whatever: Send {}\n impl<T: Send + ?Sized> Whatever for T {}"}, {"sha": "676d656dabf471f172b7d2dca79087a696c4bf42", "filename": "src/test/rustdoc/blanket-reexport-item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc%2Fblanket-reexport-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc%2Fblanket-reexport-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fblanket-reexport-item.rs?ref=77ec591727adf3c756aecf4907e64518e270c362", "patch": "@@ -1,6 +1,6 @@\n #![crate_name = \"foo\"]\n \n-// @has foo/struct.S.html '//*[@id=\"impl-Into%3CU%3E\"]//h3[@class=\"code-header in-band\"]' 'impl<T, U> Into<U> for T'\n+// @has foo/struct.S.html '//*[@id=\"impl-Into%3CU%3E-for-S\"]//h3[@class=\"code-header in-band\"]' 'impl<T, U> Into<U> for T'\n pub struct S2 {}\n mod m {\n     pub struct S {}"}, {"sha": "61af7de4794a6e7fc8801575ddc21af286897743", "filename": "src/test/rustdoc/const-generics/const-generics-docs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc%2Fconst-generics%2Fconst-generics-docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc%2Fconst-generics%2Fconst-generics-docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fconst-generics%2Fconst-generics-docs.rs?ref=77ec591727adf3c756aecf4907e64518e270c362", "patch": "@@ -36,7 +36,7 @@ pub struct Foo<const N: usize> where u8: Trait<N>;\n // @has foo/struct.Bar.html '//pre[@class=\"rust struct\"]' 'pub struct Bar<T, const N: usize>(_)'\n pub struct Bar<T, const N: usize>([T; N]);\n \n-// @has foo/struct.Foo.html '//*[@id=\"impl\"]/h3[@class=\"code-header in-band\"]' 'impl<const M: usize> Foo<M> where u8: Trait<M>'\n+// @has foo/struct.Foo.html '//*[@id=\"impl-Foo%3CM%3E\"]/h3[@class=\"code-header in-band\"]' 'impl<const M: usize> Foo<M> where u8: Trait<M>'\n impl<const M: usize> Foo<M> where u8: Trait<M> {\n     // @has - '//*[@id=\"associatedconstant.FOO_ASSOC\"]' 'pub const FOO_ASSOC: usize'\n     pub const FOO_ASSOC: usize = M + 13;\n@@ -47,7 +47,7 @@ impl<const M: usize> Foo<M> where u8: Trait<M> {\n     }\n }\n \n-// @has foo/struct.Bar.html '//*[@id=\"impl\"]/h3[@class=\"code-header in-band\"]' 'impl<const M: usize> Bar<u8, M>'\n+// @has foo/struct.Bar.html '//*[@id=\"impl-Bar%3Cu8%2C%20M%3E\"]/h3[@class=\"code-header in-band\"]' 'impl<const M: usize> Bar<u8, M>'\n impl<const M: usize> Bar<u8, M> {\n     // @has - '//*[@id=\"method.hey\"]' \\\n     //      'pub fn hey<const N: usize>(&self) -> Foo<N> where u8: Trait<N>'"}, {"sha": "f1181d54ac87fa7a6a0c5ea3c9c3c3ffeda0e6bc", "filename": "src/test/rustdoc/const-generics/const-impl.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc%2Fconst-generics%2Fconst-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc%2Fconst-generics%2Fconst-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fconst-generics%2Fconst-impl.rs?ref=77ec591727adf3c756aecf4907e64518e270c362", "patch": "@@ -9,20 +9,20 @@ pub enum Order {\n }\n \n // @has foo/struct.VSet.html '//pre[@class=\"rust struct\"]' 'pub struct VSet<T, const ORDER: Order>'\n-// @has foo/struct.VSet.html '//*[@id=\"impl-Send\"]/h3[@class=\"code-header in-band\"]' 'impl<T, const ORDER: Order> Send for VSet<T, ORDER>'\n-// @has foo/struct.VSet.html '//*[@id=\"impl-Sync\"]/h3[@class=\"code-header in-band\"]' 'impl<T, const ORDER: Order> Sync for VSet<T, ORDER>'\n+// @has foo/struct.VSet.html '//*[@id=\"impl-Send-for-VSet%3CT%2C%20ORDER%3E\"]/h3[@class=\"code-header in-band\"]' 'impl<T, const ORDER: Order> Send for VSet<T, ORDER>'\n+// @has foo/struct.VSet.html '//*[@id=\"impl-Sync-for-VSet%3CT%2C%20ORDER%3E\"]/h3[@class=\"code-header in-band\"]' 'impl<T, const ORDER: Order> Sync for VSet<T, ORDER>'\n pub struct VSet<T, const ORDER: Order> {\n     inner: Vec<T>,\n }\n \n-// @has foo/struct.VSet.html '//*[@id=\"impl\"]/h3[@class=\"code-header in-band\"]' 'impl<T> VSet<T, { Order::Sorted }>'\n+// @has foo/struct.VSet.html '//*[@id=\"impl-VSet%3CT%2C%20{%20Order%3A%3ASorted%20}%3E\"]/h3[@class=\"code-header in-band\"]' 'impl<T> VSet<T, { Order::Sorted }>'\n impl<T> VSet<T, { Order::Sorted }> {\n     pub fn new() -> Self {\n         Self { inner: Vec::new() }\n     }\n }\n \n-// @has foo/struct.VSet.html '//*[@id=\"impl-1\"]/h3[@class=\"code-header in-band\"]' 'impl<T> VSet<T, { Order::Unsorted }>'\n+// @has foo/struct.VSet.html '//*[@id=\"impl-VSet%3CT%2C%20{%20Order%3A%3AUnsorted%20}%3E\"]/h3[@class=\"code-header in-band\"]' 'impl<T> VSet<T, { Order::Unsorted }>'\n impl<T> VSet<T, { Order::Unsorted }> {\n     pub fn new() -> Self {\n         Self { inner: Vec::new() }\n@@ -31,7 +31,7 @@ impl<T> VSet<T, { Order::Unsorted }> {\n \n pub struct Escape<const S: &'static str>;\n \n-// @has foo/struct.Escape.html '//*[@id=\"impl\"]/h3[@class=\"code-header in-band\"]' 'impl Escape<r#\"<script>alert(\"Escape\");</script>\"#>'\n+// @has foo/struct.Escape.html '//*[@id=\"impl-Escape%3Cr#%22%3Cscript%3Ealert(%22Escape%22)%3B%3C/script%3E%22#%3E\"]/h3[@class=\"code-header in-band\"]' 'impl Escape<r#\"<script>alert(\"Escape\");</script>\"#>'\n impl Escape<r#\"<script>alert(\"Escape\");</script>\"#> {\n     pub fn f() {}\n }"}, {"sha": "350c897417d1f5f9583a52deb6e42594811c5c5a", "filename": "src/test/rustdoc/double-quote-escape.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc%2Fdouble-quote-escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc%2Fdouble-quote-escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fdouble-quote-escape.rs?ref=77ec591727adf3c756aecf4907e64518e270c362", "patch": "@@ -1,12 +1,11 @@\n #![crate_name = \"foo\"]\n \n-\n pub trait Foo<T> {\n     fn foo() {}\n }\n \n pub struct Bar;\n \n // @has foo/struct.Bar.html\n-// @has - '//*[@class=\"sidebar-elems\"]//section//a[@href=\"#impl-Foo%3Cunsafe%20extern%20%22C%22%20fn()%3E\"]' 'Foo<unsafe extern \"C\" fn()>'\n+// @has - '//*[@class=\"sidebar-elems\"]//section//a[@href=\"#impl-Foo%3Cunsafe%20extern%20%22C%22%20fn()%3E-for-Bar\"]' 'Foo<unsafe extern \"C\" fn()>'\n impl Foo<unsafe extern \"C\" fn()> for Bar {}"}, {"sha": "83902d6f7ab137a1af92ff61543ecf5f9896975f", "filename": "src/test/rustdoc/empty-impls.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc%2Fempty-impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc%2Fempty-impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fempty-impls.rs?ref=77ec591727adf3c756aecf4907e64518e270c362", "patch": "@@ -1,19 +1,19 @@\n #![crate_name = \"foo\"]\n \n // @has foo/struct.Foo.html\n-// @has - '//div[@id=\"synthetic-implementations-list\"]/*[@id=\"impl-Send\"]' 'impl Send for Foo'\n+// @has - '//div[@id=\"synthetic-implementations-list\"]/*[@id=\"impl-Send-for-Foo\"]' 'impl Send for Foo'\n pub struct Foo;\n \n pub trait EmptyTrait {}\n \n-// @has - '//div[@id=\"trait-implementations-list\"]/*[@id=\"impl-EmptyTrait\"]' 'impl EmptyTrait for Foo'\n+// @has - '//div[@id=\"trait-implementations-list\"]/*[@id=\"impl-EmptyTrait-for-Foo\"]' 'impl EmptyTrait for Foo'\n impl EmptyTrait for Foo {}\n \n pub trait NotEmpty {\n     fn foo(&self);\n }\n \n-// @has - '//div[@id=\"trait-implementations-list\"]/details/summary/*[@id=\"impl-NotEmpty\"]' 'impl NotEmpty for Foo'\n+// @has - '//div[@id=\"trait-implementations-list\"]/details/summary/*[@id=\"impl-NotEmpty-for-Foo\"]' 'impl NotEmpty for Foo'\n impl NotEmpty for Foo {\n     fn foo(&self) {}\n }"}, {"sha": "c6beed70abeb168e158e0e7e3bcda6ec96ece152", "filename": "src/test/rustdoc/generic-impl.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc%2Fgeneric-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc%2Fgeneric-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fgeneric-impl.rs?ref=77ec591727adf3c756aecf4907e64518e270c362", "patch": "@@ -2,12 +2,12 @@\n \n use std::fmt;\n \n-// @!has foo/struct.Bar.html '//*[@id=\"impl-ToString\"]//h3[@class=\"code-header in-band\"]' 'impl<T> ToString for T'\n+// @!has foo/struct.Bar.html '//*[@id=\"impl-ToString-for-Bar\"]' ''\n pub struct Bar;\n \n-// @has foo/struct.Foo.html '//*[@id=\"impl-ToString\"]//h3[@class=\"code-header in-band\"]' 'impl<T> ToString for T'\n+// @has foo/struct.Foo.html '//*[@id=\"impl-ToString-for-Foo\"]//h3[@class=\"code-header in-band\"]' 'impl<T> ToString for T'\n pub struct Foo;\n-// @has foo/struct.Foo.html '//*[@class=\"sidebar-elems\"]//section//a[@href=\"#impl-ToString\"]' 'ToString'\n+// @has foo/struct.Foo.html '//*[@class=\"sidebar-elems\"]//section//a[@href=\"#impl-ToString-for-Foo\"]' 'ToString'\n \n impl fmt::Display for Foo {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {"}, {"sha": "cc3f6337719c3155de676ee716b7c82717264aeb", "filename": "src/test/rustdoc/hidden-trait-struct-impls.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc%2Fhidden-trait-struct-impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc%2Fhidden-trait-struct-impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fhidden-trait-struct-impls.rs?ref=77ec591727adf3c756aecf4907e64518e270c362", "patch": "@@ -11,11 +11,11 @@ pub struct Bar;\n \n struct Hidden;\n \n-// @!has foo/struct.Bar.html '//*[@id=\"impl-Foo\"]' 'impl Foo for Bar'\n+// @!has foo/struct.Bar.html '//*[@id=\"impl-Foo-for-Bar\"]' 'impl Foo for Bar'\n impl Foo for Bar {}\n-// @!has foo/struct.Bar.html '//*[@id=\"impl-Dark\"]' 'impl Dark for Bar'\n+// @!has foo/struct.Bar.html '//*[@id=\"impl-Dark-for-Bar\"]' 'impl Dark for Bar'\n impl Dark for Bar {}\n-// @has foo/struct.Bar.html '//*[@id=\"impl-Bam\"]' 'impl Bam for Bar'\n+// @has foo/struct.Bar.html '//*[@id=\"impl-Bam-for-Bar\"]' 'impl Bam for Bar'\n // @has foo/trait.Bam.html '//*[@id=\"implementors-list\"]' 'impl Bam for Bar'\n impl Bam for Bar {}\n // @!has foo/trait.Bam.html '//*[@id=\"implementors-list\"]' 'impl Bam for Hidden'"}, {"sha": "592b6c98587addbcf983000de22d154f890e2199", "filename": "src/test/rustdoc/impl-box.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc%2Fimpl-box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc%2Fimpl-box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fimpl-box.rs?ref=77ec591727adf3c756aecf4907e64518e270c362", "patch": "@@ -5,7 +5,7 @@\n pub struct MyType;\n \n // @has 'impl_box/struct.MyType.html'\n-// @has '-' '//*[@id=\"impl-Iterator\"]' 'impl Iterator for Box<MyType>'\n+// @has '-' '//*[@id=\"impl-Iterator-for-Box%3CMyType%3E\"]' 'impl Iterator for Box<MyType>'\n \n impl Iterator for Box<MyType> {\n     type Item = ();"}, {"sha": "635c3175f8138a39e40bc83d04f2bc1a6c0386be", "filename": "src/test/rustdoc/issue-29503.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc%2Fissue-29503.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc%2Fissue-29503.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-29503.rs?ref=77ec591727adf3c756aecf4907e64518e270c362", "patch": "@@ -5,7 +5,7 @@ pub trait MyTrait {\n     fn my_string(&self) -> String;\n }\n \n-// @has - \"//div[@id='implementors-list']//*[@id='impl-MyTrait']//h3[@class='code-header in-band']\" \"impl<T> MyTrait for T where T: Debug\"\n+// @has - \"//div[@id='implementors-list']//*[@id='impl-MyTrait-for-T']//h3[@class='code-header in-band']\" \"impl<T> MyTrait for T where T: Debug\"\n impl<T> MyTrait for T\n where\n     T: fmt::Debug,"}, {"sha": "ac97b94fb351b558258671d7529e8c5825373591", "filename": "src/test/rustdoc/issue-75588.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc%2Fissue-75588.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc%2Fissue-75588.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-75588.rs?ref=77ec591727adf3c756aecf4907e64518e270c362", "patch": "@@ -13,5 +13,5 @@ extern crate real_gimli;\n // @!has foo/trait.Deref.html '//*[@id=\"impl-Deref-for-EndianSlice\"]//h3[@class=\"code-header in-band\"]' 'impl Deref for EndianSlice'\n pub use realcore::Deref;\n \n-// @has foo/trait.Join.html '//*[@id=\"impl-Join\"]//h3[@class=\"code-header in-band\"]' 'impl Join for Foo'\n+// @has foo/trait.Join.html '//*[@id=\"impl-Join-for-Foo\"]//h3[@class=\"code-header in-band\"]' 'impl Join for Foo'\n pub use realcore::Join;"}, {"sha": "e3e46468f38407e2fe231c9e628266dde0343c0a", "filename": "src/test/rustdoc/issue-78701.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc%2Fissue-78701.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc%2Fissue-78701.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-78701.rs?ref=77ec591727adf3c756aecf4907e64518e270c362", "patch": "@@ -5,8 +5,8 @@\n // the ID is correctly derived.\n \n // @has 'foo/struct.AnotherStruct.html'\n-// @count - '//*[@class=\"sidebar\"]//a[@href=\"#impl-AnAmazingTrait\"]' 1\n-// @count - '//*[@class=\"sidebar\"]//a[@href=\"#impl-AnAmazingTrait-1\"]' 1\n+// @count - '//*[@class=\"sidebar\"]//a[@href=\"#impl-AnAmazingTrait-for-AnotherStruct%3C()%3E\"]' 1\n+// @count - '//*[@class=\"sidebar\"]//a[@href=\"#impl-AnAmazingTrait-for-AnotherStruct%3CT%3E\"]' 1\n \n pub trait Something {}\n "}, {"sha": "eebb2cf5a355d5037d7bde41f66460175a785127", "filename": "src/test/rustdoc/primitive/primitive-generic-impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc%2Fprimitive%2Fprimitive-generic-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc%2Fprimitive%2Fprimitive-generic-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fprimitive%2Fprimitive-generic-impl.rs?ref=77ec591727adf3c756aecf4907e64518e270c362", "patch": "@@ -1,7 +1,7 @@\n #![feature(rustdoc_internals)]\n #![crate_name = \"foo\"]\n \n-// @has foo/primitive.i32.html '//*[@id=\"impl-ToString\"]//h3[@class=\"code-header in-band\"]' 'impl<T> ToString for T'\n+// @has foo/primitive.i32.html '//*[@id=\"impl-ToString-for-i32\"]//h3[@class=\"code-header in-band\"]' 'impl<T> ToString for T'\n \n #[doc(primitive = \"i32\")]\n /// Some useless docs, wouhou!"}, {"sha": "f3e211e301742c5609468299a15afd4fc4105b0d", "filename": "src/test/rustdoc/rfc-2632-const-trait-impl.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc%2Frfc-2632-const-trait-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc%2Frfc-2632-const-trait-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Frfc-2632-const-trait-impl.rs?ref=77ec591727adf3c756aecf4907e64518e270c362", "patch": "@@ -29,10 +29,11 @@ pub trait Tr<T> {\n     }\n }\n \n-// @!has - '//section[@id=\"impl-Tr%3CT%3E\"]/h3[@class=\"code-header in-band\"]' '~const'\n-// @has - '//section[@id=\"impl-Tr%3CT%3E\"]/h3[@class=\"code-header in-band\"]/a[@class=\"trait\"]' 'Clone'\n-// @!has - '//section[@id=\"impl-Tr%3CT%3E\"]/h3[@class=\"code-header in-band\"]/span[@class=\"where\"]' '~const'\n-// @has - '//section[@id=\"impl-Tr%3CT%3E\"]/h3[@class=\"code-header in-band\"]/span[@class=\"where fmt-newline\"]' ': Clone'\n+// @has - '//section[@id=\"impl-Tr%3CT%3E-for-T\"]' ''\n+// @!has - '//section[@id=\"impl-Tr%3CT%3E-for-T\"]/h3[@class=\"code-header in-band\"]' '~const'\n+// @has - '//section[@id=\"impl-Tr%3CT%3E-for-T\"]/h3[@class=\"code-header in-band\"]/a[@class=\"trait\"]' 'Clone'\n+// @!has - '//section[@id=\"impl-Tr%3CT%3E-for-T\"]/h3[@class=\"code-header in-band\"]/span[@class=\"where\"]' '~const'\n+// @has - '//section[@id=\"impl-Tr%3CT%3E-for-T\"]/h3[@class=\"code-header in-band\"]/span[@class=\"where fmt-newline\"]' ': Clone'\n impl<T: ~const Clone + ~const Destruct> const Tr<T> for T\n where\n     Option<T>: ~const Clone + ~const Destruct,"}, {"sha": "9d2c1967757f103df4ef07dbb47c0fb40ff02b86", "filename": "src/test/rustdoc/sized_trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc%2Fsized_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc%2Fsized_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsized_trait.rs?ref=77ec591727adf3c756aecf4907e64518e270c362", "patch": "@@ -11,7 +11,7 @@ pub struct Bar {\n pub struct Foo<T: ?Sized>(T);\n \n // @has foo/struct.Unsized.html\n-// @has - '//*[@id=\"impl-Sized\"]//h3[@class=\"code-header in-band\"]' 'impl !Sized for Unsized'\n+// @has - '//*[@id=\"impl-Sized-for-Unsized\"]//h3[@class=\"code-header in-band\"]' 'impl !Sized for Unsized'\n pub struct Unsized {\n     data: [u8],\n }"}, {"sha": "69be9aa8d5f1011213f24589337f844b86647f2b", "filename": "src/test/rustdoc/src-links-auto-impls.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc%2Fsrc-links-auto-impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc%2Fsrc-links-auto-impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsrc-links-auto-impls.rs?ref=77ec591727adf3c756aecf4907e64518e270c362", "patch": "@@ -1,12 +1,12 @@\n #![crate_name = \"foo\"]\n \n // @has foo/struct.Unsized.html\n-// @has - '//*[@id=\"impl-Sized\"]/h3[@class=\"code-header in-band\"]' 'impl !Sized for Unsized'\n-// @!has - '//*[@id=\"impl-Sized\"]//a[@class=\"srclink\"]' 'source'\n-// @has - '//*[@id=\"impl-Sync\"]/h3[@class=\"code-header in-band\"]' 'impl Sync for Unsized'\n-// @!has - '//*[@id=\"impl-Sync\"]//a[@class=\"srclink\"]' 'source'\n-// @has - '//*[@id=\"impl-Any\"]/h3[@class=\"code-header in-band\"]' 'impl<T> Any for T'\n-// @has - '//*[@id=\"impl-Any\"]//a[@class=\"srclink\"]' 'source'\n+// @has - '//*[@id=\"impl-Sized-for-Unsized\"]/h3[@class=\"code-header in-band\"]' 'impl !Sized for Unsized'\n+// @!has - '//*[@id=\"impl-Sized-for-Unsized\"]//a[@class=\"srclink\"]' 'source'\n+// @has - '//*[@id=\"impl-Sync-for-Unsized\"]/h3[@class=\"code-header in-band\"]' 'impl Sync for Unsized'\n+// @!has - '//*[@id=\"impl-Sync-for-Unsized\"]//a[@class=\"srclink\"]' 'source'\n+// @has - '//*[@id=\"impl-Any-for-Unsized\"]/h3[@class=\"code-header in-band\"]' 'impl<T> Any for T'\n+// @has - '//*[@id=\"impl-Any-for-Unsized\"]//a[@class=\"srclink\"]' 'source'\n pub struct Unsized {\n     data: [u8],\n }"}, {"sha": "4f7e2dfe3b9a53310e1d63b20394649461869462", "filename": "src/test/rustdoc/trait-impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc%2Ftrait-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77ec591727adf3c756aecf4907e64518e270c362/src%2Ftest%2Frustdoc%2Ftrait-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ftrait-impl.rs?ref=77ec591727adf3c756aecf4907e64518e270c362", "patch": "@@ -43,5 +43,5 @@ impl Trait for Struct {\n     // @!has - '//*[@id=\"method.d\"]/../../div[@class=\"docblock\"]/p/em'\n     fn d() {}\n \n-    // @has - '//*[@id=\"impl-Trait\"]/h3//a/@href' 'trait.Trait.html'\n+    // @has - '//*[@id=\"impl-Trait-for-Struct\"]/h3//a/@href' 'trait.Trait.html'\n }"}]}