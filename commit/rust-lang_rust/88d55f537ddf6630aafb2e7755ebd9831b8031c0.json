{"sha": "88d55f537ddf6630aafb2e7755ebd9831b8031c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4ZDU1ZjUzN2RkZjY2MzBhYWZiMmU3NzU1ZWJkOTgzMWI4MDMxYzA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-02-22T08:04:10Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-02-22T08:04:10Z"}, "message": "Make std feature list sorted\n\nThis helps to avoid merge conflicts when concurrent PRs append\nfeatures to the end of the list.", "tree": {"sha": "163174b1e139c1f52dc48d0f592ce6b49337a9c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/163174b1e139c1f52dc48d0f592ce6b49337a9c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88d55f537ddf6630aafb2e7755ebd9831b8031c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88d55f537ddf6630aafb2e7755ebd9831b8031c0", "html_url": "https://github.com/rust-lang/rust/commit/88d55f537ddf6630aafb2e7755ebd9831b8031c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88d55f537ddf6630aafb2e7755ebd9831b8031c0/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6fd02772bdfa8934bedd1823b563ae3a76074e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6fd02772bdfa8934bedd1823b563ae3a76074e6", "html_url": "https://github.com/rust-lang/rust/commit/c6fd02772bdfa8934bedd1823b563ae3a76074e6"}], "stats": {"total": 49, "additions": 26, "deletions": 23}, "files": [{"sha": "6dd3a6cc0fdbd45422c3ee8463dad5d099317d06", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 26, "deletions": 23, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/88d55f537ddf6630aafb2e7755ebd9831b8031c0/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88d55f537ddf6630aafb2e7755ebd9831b8031c0/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=88d55f537ddf6630aafb2e7755ebd9831b8031c0", "patch": "@@ -215,16 +215,22 @@\n // std may use features in a platform-specific way\n #![allow(unused_features)]\n \n+#![cfg_attr(test, feature(test, update_panic_count))]\n+#![cfg_attr(all(target_vendor = \"fortanix\", target_env = \"sgx\"),\n+            feature(global_asm, range_contains, slice_index_methods,\n+                    decl_macro, coerce_unsized, sgx_platform, ptr_wrapping_offset_from))]\n+\n // std is implemented with unstable features, many of which are internal\n // compiler details that will never be stable\n-#![cfg_attr(test, feature(test, update_panic_count))]\n-#![feature(alloc)]\n+// NB: the following list is sorted to minimize merge conflicts.\n+#![feature(align_offset)]\n #![feature(alloc_error_handler)]\n+#![feature(alloc_layout_extra)]\n+#![feature(alloc)]\n #![feature(allocator_api)]\n #![feature(allocator_internals)]\n #![feature(allow_internal_unsafe)]\n #![feature(allow_internal_unstable)]\n-#![feature(align_offset)]\n #![feature(arbitrary_self_types)]\n #![feature(array_error_internals)]\n #![feature(asm)]\n@@ -233,72 +239,69 @@\n #![feature(cfg_target_has_atomic)]\n #![feature(cfg_target_thread_local)]\n #![feature(char_error_internals)]\n+#![feature(checked_duration_since)]\n #![feature(compiler_builtins_lib)]\n #![feature(concat_idents)]\n-#![feature(const_raw_ptr_deref)]\n #![feature(const_cstr_unchecked)]\n+#![feature(const_raw_ptr_deref)]\n #![feature(core_intrinsics)]\n+#![feature(doc_alias)]\n+#![feature(doc_cfg)]\n+#![feature(doc_keyword)]\n+#![feature(doc_masked)]\n+#![feature(doc_spotlight)]\n #![feature(dropck_eyepatch)]\n #![feature(duration_constants)]\n #![feature(exact_size_is_empty)]\n+#![feature(exhaustive_patterns)]\n #![feature(external_doc)]\n #![feature(fixed_size_array)]\n #![feature(fn_traits)]\n #![feature(fnbox)]\n #![feature(futures_api)]\n #![feature(generator_trait)]\n+#![feature(hash_raw_entry)]\n #![feature(hashmap_internals)]\n #![feature(int_error_internals)]\n #![feature(integer_atomics)]\n #![feature(lang_items)]\n #![feature(libc)]\n #![feature(link_args)]\n #![feature(linkage)]\n+#![feature(maybe_uninit)]\n #![feature(needs_panic_runtime)]\n #![feature(never_type)]\n #![feature(nll)]\n-#![feature(exhaustive_patterns)]\n+#![feature(non_exhaustive)]\n #![feature(on_unimplemented)]\n #![feature(optin_builtin_traits)]\n+#![feature(panic_info_message)]\n #![feature(panic_internals)]\n #![feature(panic_unwind)]\n #![feature(prelude_import)]\n #![feature(ptr_internals)]\n #![feature(raw)]\n-#![feature(hash_raw_entry)]\n+#![feature(renamed_spin_loop)]\n #![feature(rustc_attrs)]\n #![feature(rustc_const_unstable)]\n-#![feature(std_internals)]\n-#![feature(stdsimd)]\n+#![feature(rustc_private)]\n #![feature(shrink_to)]\n #![feature(slice_concat_ext)]\n #![feature(slice_internals)]\n #![feature(slice_patterns)]\n #![feature(staged_api)]\n+#![feature(std_internals)]\n+#![feature(stdsimd)]\n #![feature(stmt_expr_attributes)]\n #![feature(str_internals)]\n-#![feature(renamed_spin_loop)]\n-#![feature(rustc_private)]\n #![feature(thread_local)]\n #![feature(toowned_clone_into)]\n #![feature(try_from)]\n #![feature(try_reserve)]\n #![feature(unboxed_closures)]\n #![feature(untagged_unions)]\n #![feature(unwind_attributes)]\n-#![feature(doc_cfg)]\n-#![feature(doc_masked)]\n-#![feature(doc_spotlight)]\n-#![feature(doc_alias)]\n-#![feature(doc_keyword)]\n-#![feature(panic_info_message)]\n-#![feature(non_exhaustive)]\n-#![feature(alloc_layout_extra)]\n-#![feature(maybe_uninit)]\n-#![feature(checked_duration_since)]\n-#![cfg_attr(all(target_vendor = \"fortanix\", target_env = \"sgx\"),\n-            feature(global_asm, range_contains, slice_index_methods,\n-                    decl_macro, coerce_unsized, sgx_platform, ptr_wrapping_offset_from))]\n+// NB: the above list is sorted to minimize merge conflicts.\n \n #![default_lib_allocator]\n "}]}