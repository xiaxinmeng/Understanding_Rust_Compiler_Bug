{"sha": "703b7f8a7e64fb2273fb516ecb8c953375d9deed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwM2I3ZjhhN2U2NGZiMjI3M2ZiNTE2ZWNiOGM5NTMzNzVkOWRlZWQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-04-21T19:37:06Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-04-22T09:08:23Z"}, "message": "implement SecRandomCopyBytes for macOS RNG", "tree": {"sha": "67fa6c7fa5abe28b1c20db5750a2db53cd60f399", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/67fa6c7fa5abe28b1c20db5750a2db53cd60f399"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/703b7f8a7e64fb2273fb516ecb8c953375d9deed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/703b7f8a7e64fb2273fb516ecb8c953375d9deed", "html_url": "https://github.com/rust-lang/rust/commit/703b7f8a7e64fb2273fb516ecb8c953375d9deed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/703b7f8a7e64fb2273fb516ecb8c953375d9deed/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "298bd1f9ce22d9a73565904d7fc3e3c1d2c76a97", "url": "https://api.github.com/repos/rust-lang/rust/commits/298bd1f9ce22d9a73565904d7fc3e3c1d2c76a97", "html_url": "https://github.com/rust-lang/rust/commit/298bd1f9ce22d9a73565904d7fc3e3c1d2c76a97"}], "stats": {"total": 28, "additions": 18, "deletions": 10}, "files": [{"sha": "fa0373ec54ec8a170ede230a6b82ac03419779be", "filename": "src/fn_call.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/703b7f8a7e64fb2273fb516ecb8c953375d9deed/src%2Ffn_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/703b7f8a7e64fb2273fb516ecb8c953375d9deed/src%2Ffn_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffn_call.rs?ref=703b7f8a7e64fb2273fb516ecb8c953375d9deed", "patch": "@@ -712,6 +712,18 @@ pub trait EvalContextExt<'a, 'mir, 'tcx: 'a + 'mir>: crate::MiriEvalContextExt<'\n             \"_NSGetArgv\" => {\n                 this.write_scalar(Scalar::Ptr(this.machine.argv.unwrap()), dest)?;\n             },\n+            \"SecRandomCopyBytes\" => {\n+                let len = this.read_scalar(args[1])?.to_usize(this)?;\n+                let ptr = this.read_scalar(args[2])?.to_ptr()?;\n+\n+                if len > 0 {\n+                    let data = gen_random(this, len as usize)?;\n+                    this.memory_mut().get_mut(ptr.alloc_id)?\n+                        .write_bytes(tcx, ptr, &data)?;\n+                }\n+\n+                this.write_null(dest)?;\n+            }\n \n             // Windows API stubs.\n             // HANDLE = isize"}, {"sha": "1f2f792148074ae96c60c9d427d27090326e1945", "filename": "test-cargo-miri/tests/test.rs", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/703b7f8a7e64fb2273fb516ecb8c953375d9deed/test-cargo-miri%2Ftests%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/703b7f8a7e64fb2273fb516ecb8c953375d9deed/test-cargo-miri%2Ftests%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test-cargo-miri%2Ftests%2Ftest.rs?ref=703b7f8a7e64fb2273fb516ecb8c953375d9deed", "patch": "@@ -21,17 +21,13 @@ fn fixed_rng() {\n \n #[test]\n fn entropy_rng() {\n-    #[cfg(not(target_os=\"macos\"))] // FIXME entropy does not work on macOS\n-    // (Not disabling the entire test as that would change the output.)\n-    {\n-        // Use this opportunity to test querying the RNG (needs an external crate, hence tested here and not in the compiletest suite)\n-        let mut rng = SmallRng::from_entropy();\n-        let _val = rng.gen::<i32>();\n+    // Use this opportunity to test querying the RNG (needs an external crate, hence tested here and not in the compiletest suite)\n+    let mut rng = SmallRng::from_entropy();\n+    let _val = rng.gen::<i32>();\n \n-        // Also try per-thread RNG.\n-        let mut rng = rand::thread_rng();\n-        let _val = rng.gen::<i32>();\n-    }\n+    // Also try per-thread RNG.\n+    let mut rng = rand::thread_rng();\n+    let _val = rng.gen::<i32>();\n }\n \n // A test that won't work on miri"}]}