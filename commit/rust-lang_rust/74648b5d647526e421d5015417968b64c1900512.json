{"sha": "74648b5d647526e421d5015417968b64c1900512", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0NjQ4YjVkNjQ3NTI2ZTQyMWQ1MDE1NDE3OTY4YjY0YzE5MDA1MTI=", "commit": {"author": {"name": "Theo Belaire", "email": "theo.belaire@gmail.com", "date": "2015-04-25T18:09:41Z"}, "committer": {"name": "Theo Belaire", "email": "theo.belaire@gmail.com", "date": "2015-04-25T18:09:41Z"}, "message": "First attempt at fixing #20591\n\nThis isn't quite right, but it's interesting.", "tree": {"sha": "f24a58bee6a3cec7d4f8cd6439ebbc6f698178ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f24a58bee6a3cec7d4f8cd6439ebbc6f698178ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74648b5d647526e421d5015417968b64c1900512", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74648b5d647526e421d5015417968b64c1900512", "html_url": "https://github.com/rust-lang/rust/commit/74648b5d647526e421d5015417968b64c1900512", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74648b5d647526e421d5015417968b64c1900512/comments", "author": {"login": "tbelaire", "id": 427239, "node_id": "MDQ6VXNlcjQyNzIzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/427239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbelaire", "html_url": "https://github.com/tbelaire", "followers_url": "https://api.github.com/users/tbelaire/followers", "following_url": "https://api.github.com/users/tbelaire/following{/other_user}", "gists_url": "https://api.github.com/users/tbelaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbelaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbelaire/subscriptions", "organizations_url": "https://api.github.com/users/tbelaire/orgs", "repos_url": "https://api.github.com/users/tbelaire/repos", "events_url": "https://api.github.com/users/tbelaire/events{/privacy}", "received_events_url": "https://api.github.com/users/tbelaire/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tbelaire", "id": 427239, "node_id": "MDQ6VXNlcjQyNzIzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/427239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbelaire", "html_url": "https://github.com/tbelaire", "followers_url": "https://api.github.com/users/tbelaire/followers", "following_url": "https://api.github.com/users/tbelaire/following{/other_user}", "gists_url": "https://api.github.com/users/tbelaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbelaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbelaire/subscriptions", "organizations_url": "https://api.github.com/users/tbelaire/orgs", "repos_url": "https://api.github.com/users/tbelaire/repos", "events_url": "https://api.github.com/users/tbelaire/events{/privacy}", "received_events_url": "https://api.github.com/users/tbelaire/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9e53c7f2c8285f3422ac7ac091349ce572c4baa", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9e53c7f2c8285f3422ac7ac091349ce572c4baa", "html_url": "https://github.com/rust-lang/rust/commit/f9e53c7f2c8285f3422ac7ac091349ce572c4baa"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "c099123ad259b6a37b8c8d84dd88aed04a0603ee", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/74648b5d647526e421d5015417968b64c1900512/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74648b5d647526e421d5015417968b64c1900512/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=74648b5d647526e421d5015417968b64c1900512", "patch": "@@ -903,6 +903,17 @@ impl<'a, 'b:'a, 'tcx:'b> ImportResolver<'a, 'b, 'tcx> {\n                                   },\n                                   &token::get_name(name));\n                 span_err!(self.resolver.session, import_span, E0252, \"{}\", &msg[..]);\n+                if let Some(sp) = target.bindings.span_for_namespace(namespace) {\n+                    span_note!(self.resolver.session, sp,\n+                               \"first import of {} `{}` here\",\n+                               match namespace {\n+                                   TypeNS => \"type\",\n+                                   ValueNS => \"value\",\n+                               },\n+                               token::get_name(name));\n+                } else {\n+                    span_note!(self.resolver.session, import_span, \"I can't find where it was previously imported\");\n+                }\n             }\n             Some(_) | None => {}\n         }"}, {"sha": "3d0158a0830d486dd89b8a20a31f66d8ba5ec8d4", "filename": "src/test/compile-fail/double-import.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/74648b5d647526e421d5015417968b64c1900512/src%2Ftest%2Fcompile-fail%2Fdouble-import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74648b5d647526e421d5015417968b64c1900512/src%2Ftest%2Fcompile-fail%2Fdouble-import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdouble-import.rs?ref=74648b5d647526e421d5015417968b64c1900512", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+#![feature(no_std)]\n+#![no_std]\n+\n+\n+mod sub1 {\n+    fn foo() {} // Implementation 1\n+}\n+\n+mod sub2 {\n+    fn foo() {} // Implementation 2\n+}\n+\n+use sub1::foo; //~ NOTE first imported here\n+use sub2::foo; //~ ERROR a value named `foo` has already been imported in this module [E0252]\n+\n+fn main() {}"}]}