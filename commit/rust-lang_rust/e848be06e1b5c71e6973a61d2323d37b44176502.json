{"sha": "e848be06e1b5c71e6973a61d2323d37b44176502", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4NDhiZTA2ZTFiNWM3MWU2OTczYTYxZDIzMjNkMzdiNDQxNzY1MDI=", "commit": {"author": {"name": "Taylor Yu", "email": "tlyu@mit.edu", "date": "2021-06-03T22:10:29Z"}, "committer": {"name": "Taylor Yu", "email": "tlyu@mit.edu", "date": "2021-06-03T22:19:57Z"}, "message": "don't suggest unsized indirection in where-clauses\n\nSkip where-clauses when suggesting using indirection in combination with\n`?Sized` bounds on type parameters.", "tree": {"sha": "e684038f7b60f89afceaa7e69f5499fcac469251", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e684038f7b60f89afceaa7e69f5499fcac469251"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e848be06e1b5c71e6973a61d2323d37b44176502", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e848be06e1b5c71e6973a61d2323d37b44176502", "html_url": "https://github.com/rust-lang/rust/commit/e848be06e1b5c71e6973a61d2323d37b44176502", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e848be06e1b5c71e6973a61d2323d37b44176502/comments", "author": {"login": "tlyu", "id": 431873, "node_id": "MDQ6VXNlcjQzMTg3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/431873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tlyu", "html_url": "https://github.com/tlyu", "followers_url": "https://api.github.com/users/tlyu/followers", "following_url": "https://api.github.com/users/tlyu/following{/other_user}", "gists_url": "https://api.github.com/users/tlyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/tlyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tlyu/subscriptions", "organizations_url": "https://api.github.com/users/tlyu/orgs", "repos_url": "https://api.github.com/users/tlyu/repos", "events_url": "https://api.github.com/users/tlyu/events{/privacy}", "received_events_url": "https://api.github.com/users/tlyu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tlyu", "id": 431873, "node_id": "MDQ6VXNlcjQzMTg3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/431873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tlyu", "html_url": "https://github.com/tlyu", "followers_url": "https://api.github.com/users/tlyu/followers", "following_url": "https://api.github.com/users/tlyu/following{/other_user}", "gists_url": "https://api.github.com/users/tlyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/tlyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tlyu/subscriptions", "organizations_url": "https://api.github.com/users/tlyu/orgs", "repos_url": "https://api.github.com/users/tlyu/repos", "events_url": "https://api.github.com/users/tlyu/events{/privacy}", "received_events_url": "https://api.github.com/users/tlyu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "257782579915963c9dbe7433102275743837b9a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/257782579915963c9dbe7433102275743837b9a8", "html_url": "https://github.com/rust-lang/rust/commit/257782579915963c9dbe7433102275743837b9a8"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "19c3385dd4cbcbc119df5a9144fc0cf8a7eea2b0", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e848be06e1b5c71e6973a61d2323d37b44176502/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e848be06e1b5c71e6973a61d2323d37b44176502/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=e848be06e1b5c71e6973a61d2323d37b44176502", "patch": "@@ -1878,6 +1878,10 @@ impl<'v> Visitor<'v> for FindTypeParam {\n         hir::intravisit::NestedVisitorMap::None\n     }\n \n+    fn visit_where_predicate(&mut self, _: &'v hir::WherePredicate<'v>) {\n+        // Skip where-clauses, to avoid suggesting indirection for type parameters found there.\n+    }\n+\n     fn visit_ty(&mut self, ty: &hir::Ty<'_>) {\n         // We collect the spans of all uses of the \"bare\" type param, like in `field: T` or\n         // `field: (T, T)` where we could make `T: ?Sized` while skipping cases that are known to be"}, {"sha": "390d8bbdd5326e5124632da5ee4ce19dd40a9aaf", "filename": "src/test/ui/suggestions/issue-85943-no-suggest-unsized-indirection-in-where-clause.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e848be06e1b5c71e6973a61d2323d37b44176502/src%2Ftest%2Fui%2Fsuggestions%2Fissue-85943-no-suggest-unsized-indirection-in-where-clause.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e848be06e1b5c71e6973a61d2323d37b44176502/src%2Ftest%2Fui%2Fsuggestions%2Fissue-85943-no-suggest-unsized-indirection-in-where-clause.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-85943-no-suggest-unsized-indirection-in-where-clause.rs?ref=e848be06e1b5c71e6973a61d2323d37b44176502", "patch": "@@ -0,0 +1,9 @@\n+// Regression test for #85943: should not emit suggestions for adding\n+// indirection to type parameters in where-clauses when suggesting\n+// adding `?Sized`.\n+struct A<T>(T) where T: Send;\n+struct B(A<[u8]>);\n+//~^ ERROR the size for values of type\n+\n+pub fn main() {\n+}"}, {"sha": "735aeb0e0e79995b8b106077ac09ea5db6e4d59c", "filename": "src/test/ui/suggestions/issue-85943-no-suggest-unsized-indirection-in-where-clause.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e848be06e1b5c71e6973a61d2323d37b44176502/src%2Ftest%2Fui%2Fsuggestions%2Fissue-85943-no-suggest-unsized-indirection-in-where-clause.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e848be06e1b5c71e6973a61d2323d37b44176502/src%2Ftest%2Fui%2Fsuggestions%2Fissue-85943-no-suggest-unsized-indirection-in-where-clause.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-85943-no-suggest-unsized-indirection-in-where-clause.stderr?ref=e848be06e1b5c71e6973a61d2323d37b44176502", "patch": "@@ -0,0 +1,20 @@\n+error[E0277]: the size for values of type `[u8]` cannot be known at compilation time\n+  --> $DIR/issue-85943-no-suggest-unsized-indirection-in-where-clause.rs:5:10\n+   |\n+LL | struct A<T>(T) where T: Send;\n+   |          - required by this bound in `A`\n+LL | struct B(A<[u8]>);\n+   |          ^^^^^^^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `Sized` is not implemented for `[u8]`\n+help: you could relax the implicit `Sized` bound on `T` if it were used through indirection like `&T` or `Box<T>`\n+  --> $DIR/issue-85943-no-suggest-unsized-indirection-in-where-clause.rs:4:10\n+   |\n+LL | struct A<T>(T) where T: Send;\n+   |          ^  - ...if indirection were used here: `Box<T>`\n+   |          |\n+   |          this could be changed to `T: ?Sized`...\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}]}