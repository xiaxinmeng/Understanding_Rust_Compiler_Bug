{"sha": "1e988f228d3bef3547fa711aaee3ba89e0340eaf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlOTg4ZjIyOGQzYmVmMzU0N2ZhNzExYWFlZTNiYTg5ZTAzNDBlYWY=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-26T02:08:45Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-26T02:08:45Z"}, "message": "Don't call trans_bind_thunk in an unreachable context\n\nCloses #973", "tree": {"sha": "239082c8d997b4b161e4ddb3f4435ec74dc32915", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/239082c8d997b4b161e4ddb3f4435ec74dc32915"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e988f228d3bef3547fa711aaee3ba89e0340eaf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e988f228d3bef3547fa711aaee3ba89e0340eaf", "html_url": "https://github.com/rust-lang/rust/commit/1e988f228d3bef3547fa711aaee3ba89e0340eaf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e988f228d3bef3547fa711aaee3ba89e0340eaf/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c5e42a1396396dcf36f84fda2f08c5f9fa6b6c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c5e42a1396396dcf36f84fda2f08c5f9fa6b6c4", "html_url": "https://github.com/rust-lang/rust/commit/4c5e42a1396396dcf36f84fda2f08c5f9fa6b6c4"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "df5e2a5e80fa69b99f7b628e85443fa97ed0f374", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1e988f228d3bef3547fa711aaee3ba89e0340eaf/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e988f228d3bef3547fa711aaee3ba89e0340eaf/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=1e988f228d3bef3547fa711aaee3ba89e0340eaf", "patch": "@@ -3596,6 +3596,10 @@ fn trans_bind_1(cx: @block_ctxt, outgoing_fty: ty::t,\n         bound_vals += [lv];\n         bound_tys += [ty::expr_ty(bcx_tcx(cx), e)];\n     }\n+    if bcx.unreachable {\n+        ret rslt(bcx, llvm::LLVMGetUndef(\n+            T_ptr(type_of_or_i8(bcx, outgoing_fty))));\n+    }\n \n     // Actually construct the closure\n     let closure ="}]}