{"sha": "53c540a66600a08375f2162f7e20c527deabe7a6", "node_id": "C_kwDOAAsO6NoAKDUzYzU0MGE2NjYwMGEwODM3NWYyMTYyZjdlMjBjNTI3ZGVhYmU3YTY", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-03-27T23:49:52Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-03-31T12:57:45Z"}, "message": "audit check_mul uses in interpret", "tree": {"sha": "a45d8427064b1c0e3d75cdf94ab78e3dbe04304b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a45d8427064b1c0e3d75cdf94ab78e3dbe04304b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53c540a66600a08375f2162f7e20c527deabe7a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53c540a66600a08375f2162f7e20c527deabe7a6", "html_url": "https://github.com/rust-lang/rust/commit/53c540a66600a08375f2162f7e20c527deabe7a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53c540a66600a08375f2162f7e20c527deabe7a6/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a421cbbead5a9817fdca94a62a119e32684ae068", "url": "https://api.github.com/repos/rust-lang/rust/commits/a421cbbead5a9817fdca94a62a119e32684ae068", "html_url": "https://github.com/rust-lang/rust/commit/a421cbbead5a9817fdca94a62a119e32684ae068"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "c80d7d71787422ced418d9ea410c8c012ecd81cb", "filename": "compiler/rustc_const_eval/src/interpret/intrinsics.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/53c540a66600a08375f2162f7e20c527deabe7a6/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53c540a66600a08375f2162f7e20c527deabe7a6/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fintrinsics.rs?ref=53c540a66600a08375f2162f7e20c527deabe7a6", "patch": "@@ -531,7 +531,9 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n     ) -> InterpResult<'tcx, Pointer<Option<M::PointerTag>>> {\n         // We cannot overflow i64 as a type's size must be <= isize::MAX.\n         let pointee_size = i64::try_from(self.layout_of(pointee_ty)?.size.bytes()).unwrap();\n-        // The computed offset, in bytes, cannot overflow an isize.\n+        // The computed offset, in bytes, must not overflow an isize.\n+        // `checked_mul` enforces a too small bound, but no actual allocation can be big enough for\n+        // the difference to be noticeable.\n         let offset_bytes =\n             offset_count.checked_mul(pointee_size).ok_or(err_ub!(PointerArithOverflow))?;\n         // The offset being in bounds cannot rely on \"wrapping around\" the address space.\n@@ -563,6 +565,8 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         let count = self.read_scalar(&count)?.to_machine_usize(self)?;\n         let layout = self.layout_of(src.layout.ty.builtin_deref(true).unwrap().ty)?;\n         let (size, align) = (layout.size, layout.align.abi);\n+        // `checked_mul` enforces a too small bound (the correct one would probably be machine_isize_max),\n+        // but no actual allocation can be big enough for the difference to be noticeable.\n         let size = size.checked_mul(count, self).ok_or_else(|| {\n             err_ub_format!(\n                 \"overflow computing total size of `{}`\",\n@@ -588,6 +592,8 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         let byte = self.read_scalar(&byte)?.to_u8()?;\n         let count = self.read_scalar(&count)?.to_machine_usize(self)?;\n \n+        // `checked_mul` enforces a too small bound (the correct one would probably be machine_isize_max),\n+        // but no actual allocation can be big enough for the difference to be noticeable.\n         let len = layout\n             .size\n             .checked_mul(count, self)"}]}