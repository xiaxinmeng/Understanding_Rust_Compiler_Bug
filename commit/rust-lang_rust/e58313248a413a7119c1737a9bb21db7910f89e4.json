{"sha": "e58313248a413a7119c1737a9bb21db7910f89e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1ODMxMzI0OGE0MTNhNzExOWMxNzM3YTliYjIxZGI3OTEwZjg5ZTQ=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-03-10T16:55:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-10T16:55:47Z"}, "message": "Rollup merge of #82977 - camsteffen:opt-get-insert-def, r=m-ou-se\n\nRename `Option::get_or_default` to `get_or_insert_default`\n\n...as [suggested](https://github.com/rust-lang/rust/issues/82901#issuecomment-793548515) by `@m-ou-se.` In hindsight this seems rather obvious, at least to me.\n\nr? `@joshtriplett`", "tree": {"sha": "b61b721fb2c630912664e92b6e71c263d82611ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b61b721fb2c630912664e92b6e71c263d82611ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e58313248a413a7119c1737a9bb21db7910f89e4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgSPoUCRBK7hj4Ov3rIwAAdHIIAG14D+M4ITKHCpF7APcIXcje\nqRq9CU61Ok0V/sn0uL1G41A6u0uTVmPUAJaOadSAye3NsT+EuaHAdh1uTh5jbzwr\n4cu8a6iYbJsC9Dtk7ThLl0ViByxQp1BCeU3AeJAnTns8zscgfV6AMEw8BdRXCJWX\nG3yE3WuwhE3zsndAev4tQ4NFG5HjJU1xqLXX3W/8Nn/LnA7eHCc6SLk7sz6liqRF\nJnzEe3swoooBj0wPcmZZJNIQhpMb7bZk3SXjZ+g6Kkh1osSRwO97riGhDVJlgkRk\nFEbRBCFfU0MQW+2FVWHLlmjL7cmi0LXxuupIT7c+9XAKe3YbeLZTsSuWGESp5co=\n=EuL1\n-----END PGP SIGNATURE-----\n", "payload": "tree b61b721fb2c630912664e92b6e71c263d82611ae\nparent f5196aea65b094b06d3275a42ea24050d7e97ac7\nparent b0514a6a0a420f640affed81eae1376bf2809f6e\nauthor Dylan DPC <dylan.dpc@gmail.com> 1615395347 +0100\ncommitter GitHub <noreply@github.com> 1615395347 +0100\n\nRollup merge of #82977 - camsteffen:opt-get-insert-def, r=m-ou-se\n\nRename `Option::get_or_default` to `get_or_insert_default`\n\n...as [suggested](https://github.com/rust-lang/rust/issues/82901#issuecomment-793548515) by `@m-ou-se.` In hindsight this seems rather obvious, at least to me.\n\nr? `@joshtriplett`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e58313248a413a7119c1737a9bb21db7910f89e4", "html_url": "https://github.com/rust-lang/rust/commit/e58313248a413a7119c1737a9bb21db7910f89e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e58313248a413a7119c1737a9bb21db7910f89e4/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5196aea65b094b06d3275a42ea24050d7e97ac7", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5196aea65b094b06d3275a42ea24050d7e97ac7", "html_url": "https://github.com/rust-lang/rust/commit/f5196aea65b094b06d3275a42ea24050d7e97ac7"}, {"sha": "b0514a6a0a420f640affed81eae1376bf2809f6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0514a6a0a420f640affed81eae1376bf2809f6e", "html_url": "https://github.com/rust-lang/rust/commit/b0514a6a0a420f640affed81eae1376bf2809f6e"}], "stats": {"total": 39, "additions": 20, "deletions": 19}, "files": [{"sha": "93c17057590e60274694818f7ca4b516dfae9a91", "filename": "compiler/rustc_mir/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e58313248a413a7119c1737a9bb21db7910f89e4/compiler%2Frustc_mir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e58313248a413a7119c1737a9bb21db7910f89e4/compiler%2Frustc_mir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Flib.rs?ref=e58313248a413a7119c1737a9bb21db7910f89e4", "patch": "@@ -25,7 +25,7 @@ Rust MIR: a lowered representation of Rust.\n #![feature(stmt_expr_attributes)]\n #![feature(trait_alias)]\n #![feature(option_expect_none)]\n-#![feature(option_get_or_default)]\n+#![feature(option_get_or_insert_default)]\n #![feature(or_patterns)]\n #![feature(once_cell)]\n #![feature(control_flow_enum)]"}, {"sha": "6f5fa858e25379bd9ad93a231cf2784da25a2e37", "filename": "compiler/rustc_mir/src/transform/coverage/graph.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e58313248a413a7119c1737a9bb21db7910f89e4/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcoverage%2Fgraph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e58313248a413a7119c1737a9bb21db7910f89e4/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcoverage%2Fgraph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcoverage%2Fgraph.rs?ref=e58313248a413a7119c1737a9bb21db7910f89e4", "patch": "@@ -392,7 +392,8 @@ impl BasicCoverageBlockData {\n             }\n         }\n         let operand = counter_kind.as_operand_id();\n-        if let Some(replaced) = self.edge_from_bcbs.get_or_default().insert(from_bcb, counter_kind)\n+        if let Some(replaced) =\n+            self.edge_from_bcbs.get_or_insert_default().insert(from_bcb, counter_kind)\n         {\n             Error::from_string(format!(\n                 \"attempt to set an edge counter more than once; from_bcb: \\"}, {"sha": "f1a0f455cd0918a8602984a012f00986b75c650b", "filename": "library/core/src/option.rs", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/e58313248a413a7119c1737a9bb21db7910f89e4/library%2Fcore%2Fsrc%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e58313248a413a7119c1737a9bb21db7910f89e4/library%2Fcore%2Fsrc%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Foption.rs?ref=e58313248a413a7119c1737a9bb21db7910f89e4", "patch": "@@ -854,55 +854,55 @@ impl<T> Option<T> {\n     // Entry-like operations to insert if None and return a reference\n     /////////////////////////////////////////////////////////////////////////\n \n-    /// Inserts the default value into the option if it is [`None`], then\n+    /// Inserts `value` into the option if it is [`None`], then\n     /// returns a mutable reference to the contained value.\n     ///\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(option_get_or_default)]\n-    ///\n     /// let mut x = None;\n     ///\n     /// {\n-    ///     let y: &mut u32 = x.get_or_default();\n-    ///     assert_eq!(y, &0);\n+    ///     let y: &mut u32 = x.get_or_insert(5);\n+    ///     assert_eq!(y, &5);\n     ///\n     ///     *y = 7;\n     /// }\n     ///\n     /// assert_eq!(x, Some(7));\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"option_get_or_default\", issue = \"82901\")]\n-    pub fn get_or_default(&mut self) -> &mut T\n-    where\n-        T: Default,\n-    {\n-        self.get_or_insert_with(Default::default)\n+    #[stable(feature = \"option_entry\", since = \"1.20.0\")]\n+    pub fn get_or_insert(&mut self, value: T) -> &mut T {\n+        self.get_or_insert_with(|| value)\n     }\n \n-    /// Inserts `value` into the option if it is [`None`], then\n+    /// Inserts the default value into the option if it is [`None`], then\n     /// returns a mutable reference to the contained value.\n     ///\n     /// # Examples\n     ///\n     /// ```\n+    /// #![feature(option_get_or_insert_default)]\n+    ///\n     /// let mut x = None;\n     ///\n     /// {\n-    ///     let y: &mut u32 = x.get_or_insert(5);\n-    ///     assert_eq!(y, &5);\n+    ///     let y: &mut u32 = x.get_or_insert_default();\n+    ///     assert_eq!(y, &0);\n     ///\n     ///     *y = 7;\n     /// }\n     ///\n     /// assert_eq!(x, Some(7));\n     /// ```\n     #[inline]\n-    #[stable(feature = \"option_entry\", since = \"1.20.0\")]\n-    pub fn get_or_insert(&mut self, value: T) -> &mut T {\n-        self.get_or_insert_with(|| value)\n+    #[unstable(feature = \"option_get_or_insert_default\", issue = \"82901\")]\n+    pub fn get_or_insert_default(&mut self) -> &mut T\n+    where\n+        T: Default,\n+    {\n+        self.get_or_insert_with(Default::default)\n     }\n \n     /// Inserts a value computed from `f` into the option if it is [`None`],"}]}