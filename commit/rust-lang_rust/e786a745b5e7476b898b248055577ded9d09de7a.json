{"sha": "e786a745b5e7476b898b248055577ded9d09de7a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3ODZhNzQ1YjVlNzQ3NmI4OThiMjQ4MDU1NTc3ZGVkOWQwOWRlN2E=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2014-05-13T04:14:03Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2014-05-15T01:29:12Z"}, "message": "libgraphviz: Remove all uses of `~str` from `libgraphviz`.", "tree": {"sha": "01cff8b294a0c3982a8ded5febbde4e9cd00ffa4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01cff8b294a0c3982a8ded5febbde4e9cd00ffa4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e786a745b5e7476b898b248055577ded9d09de7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e786a745b5e7476b898b248055577ded9d09de7a", "html_url": "https://github.com/rust-lang/rust/commit/e786a745b5e7476b898b248055577ded9d09de7a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e786a745b5e7476b898b248055577ded9d09de7a/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec5911b2a62b0d603da7deb18c34c8e853c91d2c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec5911b2a62b0d603da7deb18c34c8e853c91d2c", "html_url": "https://github.com/rust-lang/rust/commit/ec5911b2a62b0d603da7deb18c34c8e853c91d2c"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "a87bb1e6752fd42d985d6868e9a92a6ff6b433d3", "filename": "src/libgraphviz/lib.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e786a745b5e7476b898b248055577ded9d09de7a/src%2Flibgraphviz%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e786a745b5e7476b898b248055577ded9d09de7a/src%2Flibgraphviz%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibgraphviz%2Flib.rs?ref=e786a745b5e7476b898b248055577ded9d09de7a", "patch": "@@ -433,10 +433,10 @@ impl<'a> LabelText<'a> {\n     }\n \n     /// Renders text as string suitable for a label in a .dot file.\n-    pub fn escape(&self) -> ~str {\n+    pub fn escape(&self) -> StrBuf {\n         match self {\n-            &LabelStr(ref s) => s.as_slice().escape_default(),\n-            &EscStr(ref s) => LabelText::escape_str(s.as_slice()).into_owned(),\n+            &LabelStr(ref s) => s.as_slice().escape_default().to_strbuf(),\n+            &EscStr(ref s) => LabelText::escape_str(s.as_slice()).to_strbuf(),\n         }\n     }\n }\n@@ -661,11 +661,14 @@ mod tests {\n         }\n     }\n \n-    fn test_input(g: LabelledGraph) -> IoResult<~str> {\n+    fn test_input(g: LabelledGraph) -> IoResult<StrBuf> {\n         let mut writer = MemWriter::new();\n         render(&g, &mut writer).unwrap();\n         let mut r = BufReader::new(writer.get_ref());\n-        r.read_to_str()\n+        match r.read_to_str() {\n+            Ok(string) => Ok(string.to_strbuf()),\n+            Err(err) => Err(err),\n+        }\n     }\n \n     // All of the tests use raw-strings as the format for the expected outputs,"}]}