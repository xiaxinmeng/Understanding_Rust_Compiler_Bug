{"sha": "1c494046a51e2e75126a12d60a9e0a07153e9fd6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjNDk0MDQ2YTUxZTJlNzUxMjZhMTJkNjBhOWUwYTA3MTUzZTlmZDY=", "commit": {"author": {"name": "Alexis", "email": "a.beingessner@gmail.com", "date": "2015-02-12T22:11:08Z"}, "committer": {"name": "Alexis", "email": "a.beingessner@gmail.com", "date": "2015-02-14T02:20:26Z"}, "message": "allow DList to split_at . fixes #22244", "tree": {"sha": "74dcb3ec6d6f63876cbed6fbfa76cd32a9da7da6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74dcb3ec6d6f63876cbed6fbfa76cd32a9da7da6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c494046a51e2e75126a12d60a9e0a07153e9fd6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c494046a51e2e75126a12d60a9e0a07153e9fd6", "html_url": "https://github.com/rust-lang/rust/commit/1c494046a51e2e75126a12d60a9e0a07153e9fd6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c494046a51e2e75126a12d60a9e0a07153e9fd6/comments", "author": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cca1cf613b8e535ab274d6ce5aecadf4708990bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/cca1cf613b8e535ab274d6ce5aecadf4708990bf", "html_url": "https://github.com/rust-lang/rust/commit/cca1cf613b8e535ab274d6ce5aecadf4708990bf"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "abe206c39143039131b16cad3dd0c06aaab5378d", "filename": "src/libcollections/dlist.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/1c494046a51e2e75126a12d60a9e0a07153e9fd6/src%2Flibcollections%2Fdlist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c494046a51e2e75126a12d60a9e0a07153e9fd6/src%2Flibcollections%2Fdlist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fdlist.rs?ref=1c494046a51e2e75126a12d60a9e0a07153e9fd6", "patch": "@@ -560,7 +560,12 @@ impl<T> DList<T> {\n     /// Splits the list into two at the given index. Returns everything after the given index,\n     /// including the index.\n     ///\n+    /// # Panics\n+    ///\n+    /// Panics if `at > len`.\n+    ///\n     /// This operation should compute in O(n) time.\n+    ///\n     /// # Examples\n     ///\n     /// ```\n@@ -580,9 +585,11 @@ impl<T> DList<T> {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn split_off(&mut self, at: usize) -> DList<T> {\n         let len = self.len();\n-        assert!(at < len, \"Cannot split off at a nonexistent index\");\n+        assert!(at <= len, \"Cannot split off at a nonexistent index\");\n         if at == 0 {\n             return mem::replace(self, DList::new());\n+        } else if at == len {\n+            return DList::new();\n         }\n \n         // Below, we iterate towards the `i-1`th node, either from the start or the end,\n@@ -1116,6 +1123,18 @@ mod tests {\n             }\n         }\n \n+        // no-op on the last index\n+        {\n+            let mut m = DList::new();\n+            m.push_back(1);\n+\n+            let p = m.split_off(1);\n+            assert_eq!(m.len(), 1);\n+            assert_eq!(p.len(), 0);\n+            assert_eq!(m.back(), Some(&1));\n+            assert_eq!(m.front(), Some(&1));\n+        }\n+\n     }\n \n     #[test]"}]}