{"sha": "6ff5b3fcf94e5d0e58a9b2f7432b1f564bae9f46", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmZjViM2ZjZjk0ZTVkMGU1OGE5YjJmNzQzMmIxZjU2NGJhZTlmNDY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-02-16T12:55:51Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-02-16T12:55:51Z"}, "message": "make sure we also trigger debug assertions in libstd", "tree": {"sha": "3999e22229963c1c05d245bca69d96b7ae76b318", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3999e22229963c1c05d245bca69d96b7ae76b318"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ff5b3fcf94e5d0e58a9b2f7432b1f564bae9f46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ff5b3fcf94e5d0e58a9b2f7432b1f564bae9f46", "html_url": "https://github.com/rust-lang/rust/commit/6ff5b3fcf94e5d0e58a9b2f7432b1f564bae9f46", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ff5b3fcf94e5d0e58a9b2f7432b1f564bae9f46/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39a78f0b2490cd2e0b2b2432209d6a230ef97979", "url": "https://api.github.com/repos/rust-lang/rust/commits/39a78f0b2490cd2e0b2b2432209d6a230ef97979", "html_url": "https://github.com/rust-lang/rust/commit/39a78f0b2490cd2e0b2b2432209d6a230ef97979"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "c34b90877d9d169191aba11247164d635d577d0e", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ff5b3fcf94e5d0e58a9b2f7432b1f564bae9f46/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ff5b3fcf94e5d0e58a9b2f7432b1f564bae9f46/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=6ff5b3fcf94e5d0e58a9b2f7432b1f564bae9f46", "patch": "@@ -62,5 +62,5 @@ pub use crate::stacked_borrows::{\n /// Insert rustc arguments at the beginning of the argument list that Miri wants to be\n /// set per default, for maximal validation power.\n pub fn miri_default_args() -> &'static [&'static str] {\n-    &[\"-Zalways-encode-mir\", \"-Zmir-emit-retag\", \"-Zmir-opt-level=0\", \"--cfg=miri\"]\n+    &[\"-Zalways-encode-mir\", \"-Zmir-emit-retag\", \"-Zmir-opt-level=0\", \"--cfg=miri\", \"-Cdebug-assertions=on\"]\n }"}, {"sha": "4d4206923a5ef4d5a311a1387762f4b2c27969e4", "filename": "tests/run-pass/panic/catch_panic.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6ff5b3fcf94e5d0e58a9b2f7432b1f564bae9f46/tests%2Frun-pass%2Fpanic%2Fcatch_panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ff5b3fcf94e5d0e58a9b2f7432b1f564bae9f46/tests%2Frun-pass%2Fpanic%2Fcatch_panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fpanic%2Fcatch_panic.rs?ref=6ff5b3fcf94e5d0e58a9b2f7432b1f564bae9f46", "patch": "@@ -1,4 +1,5 @@\n // ignore-windows: Unwind panicking does not currently work on Windows\n+// normalize-stderr-test \"[^ ]*libcore/macros/mod.rs[0-9:]*\" -> \"$$LOC\"\n #![feature(never_type)]\n #![allow(const_err)]\n use std::panic::{catch_unwind, AssertUnwindSafe};\n@@ -11,7 +12,6 @@ thread_local! {\n }\n \n struct DropTester;\n-\n impl Drop for DropTester {\n     fn drop(&mut self) {\n         DROPPED.with(|c| {\n@@ -64,6 +64,7 @@ fn main() {\n     // Assertion and debug assertion\n     test(|_old_val| { assert!(false); loop {} });\n     test(|_old_val| { debug_assert!(false); loop {} });\n+    test(|_old_val| { unsafe { (1 as *const i32).read() }; loop {} }); // trigger debug-assertion in libstd\n \n     // Cleanup: reset to default hook.\n     drop(std::panic::take_hook());"}, {"sha": "636179beeade818d74b31ade2f3a5a7de705e6ef", "filename": "tests/run-pass/panic/catch_panic.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ff5b3fcf94e5d0e58a9b2f7432b1f564bae9f46/tests%2Frun-pass%2Fpanic%2Fcatch_panic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6ff5b3fcf94e5d0e58a9b2f7432b1f564bae9f46/tests%2Frun-pass%2Fpanic%2Fcatch_panic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fpanic%2Fcatch_panic.stderr?ref=6ff5b3fcf94e5d0e58a9b2f7432b1f564bae9f46", "patch": "@@ -20,4 +20,6 @@ thread 'main' panicked at 'assertion failed: false', $DIR/catch_panic.rs:65:23\n Caught panic message (&str): assertion failed: false\n thread 'main' panicked at 'assertion failed: false', $DIR/catch_panic.rs:66:23\n Caught panic message (&str): assertion failed: false\n+thread 'main' panicked at 'attempt to copy from unaligned or null pointer', $LOC\n+Caught panic message (String): attempt to copy from unaligned or null pointer\n Success!"}]}