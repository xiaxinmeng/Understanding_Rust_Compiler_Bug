{"sha": "5ba61edbd038edebb9e3f61a14cd4777ecc399be", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViYTYxZWRiZDAzOGVkZWJiOWUzZjYxYTE0Y2Q0Nzc3ZWNjMzk5YmU=", "commit": {"author": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2016-12-11T16:01:12Z"}, "committer": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2017-01-03T07:48:29Z"}, "message": "Disable unreachable patterns error entirely", "tree": {"sha": "de2d12c6652a587704f0d3791932f2a4faf8837f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de2d12c6652a587704f0d3791932f2a4faf8837f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ba61edbd038edebb9e3f61a14cd4777ecc399be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ba61edbd038edebb9e3f61a14cd4777ecc399be", "html_url": "https://github.com/rust-lang/rust/commit/5ba61edbd038edebb9e3f61a14cd4777ecc399be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ba61edbd038edebb9e3f61a14cd4777ecc399be/comments", "author": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "committer": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44a70f0221819f3db2c845baf555835d9532f29f", "url": "https://api.github.com/repos/rust-lang/rust/commits/44a70f0221819f3db2c845baf555835d9532f29f", "html_url": "https://github.com/rust-lang/rust/commit/44a70f0221819f3db2c845baf555835d9532f29f"}], "stats": {"total": 37, "additions": 25, "deletions": 12}, "files": [{"sha": "4b79cd7695ed28d101c0e11ca603d972bd26531a", "filename": "src/librustc_const_eval/check_match.rs", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/5ba61edbd038edebb9e3f61a14cd4777ecc399be/src%2Flibrustc_const_eval%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ba61edbd038edebb9e3f61a14cd4777ecc399be/src%2Flibrustc_const_eval%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_eval%2Fcheck_match.rs?ref=5ba61edbd038edebb9e3f61a14cd4777ecc399be", "patch": "@@ -26,7 +26,7 @@ use rustc::session::Session;\n use rustc::traits::Reveal;\n use rustc::ty::{self, Ty, TyCtxt};\n use rustc::lint;\n-use rustc_errors::DiagnosticBuilder;\n+use rustc_errors::{Diagnostic, Level, DiagnosticBuilder};\n \n use rustc::hir::def::*;\n use rustc::hir::intravisit::{self, Visitor, FnKind, NestedVisitorMap};\n@@ -313,19 +313,16 @@ fn check_arms<'a, 'tcx>(cx: &mut MatchCheckCtxt<'a, 'tcx>,\n                         },\n \n                         hir::MatchSource::Normal => {\n-                            // if we had a catchall pattern, raise an error.\n-                            // Otherwise an unreachable pattern raises a warning.\n+                            let mut diagnostic = Diagnostic::new(Level::Warning,\n+                                                                 \"unreachable pattern\");\n+                            diagnostic.set_span(pat.span);\n+                            // if we had a catchall pattern, hint at that\n                             if let Some(catchall) = catchall {\n-                                let mut err = struct_span_err!(cx.tcx.sess, pat.span, E0001,\n-                                                               \"unreachable pattern\");\n-                                err.span_label(pat.span, &\"this is an unreachable pattern\");\n-                                err.span_note(catchall, \"this pattern matches any value\");\n-                                err.emit();\n-                            } else {\n-                                cx.tcx.sess.add_lint(lint::builtin::UNREACHABLE_PATTERNS,\n-                                                     hir_pat.id, pat.span,\n-                                                     String::from(\"unreachable pattern\"));\n+                                diagnostic.span_label(pat.span, &\"this is an unreachable pattern\");\n+                                diagnostic.span_note(catchall, \"this pattern matches any value\");\n                             }\n+                            cx.tcx.sess.add_lint_diagnostic(lint::builtin::UNREACHABLE_PATTERNS,\n+                                                            hir_pat.id, diagnostic);\n                         },\n \n                         hir::MatchSource::TryDesugar => {"}, {"sha": "d11fe99c07f6b738433a029d386904bd2e2fa83b", "filename": "src/test/compile-fail/issue-14221.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5ba61edbd038edebb9e3f61a14cd4777ecc399be/src%2Ftest%2Fcompile-fail%2Fissue-14221.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ba61edbd038edebb9e3f61a14cd4777ecc399be/src%2Ftest%2Fcompile-fail%2Fissue-14221.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-14221.rs?ref=5ba61edbd038edebb9e3f61a14cd4777ecc399be", "patch": "@@ -8,6 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![deny(unreachable_patterns)]\n+#![allow(unused_variables)]\n+#![allow(non_snake_case)]\n+\n pub enum E {\n     A,\n     B,"}, {"sha": "01150ff13740f1446a06b8922507e0578c0af552", "filename": "src/test/compile-fail/issue-30302.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5ba61edbd038edebb9e3f61a14cd4777ecc399be/src%2Ftest%2Fcompile-fail%2Fissue-30302.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ba61edbd038edebb9e3f61a14cd4777ecc399be/src%2Ftest%2Fcompile-fail%2Fissue-30302.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-30302.rs?ref=5ba61edbd038edebb9e3f61a14cd4777ecc399be", "patch": "@@ -8,6 +8,11 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n+#![allow(unused_variables)]\n+#![allow(non_snake_case)]\n+#![deny(unreachable_patterns)]\n+\n enum Stack<T> {\n     Nil,\n     Cons(T, Box<Stack<T>>)"}, {"sha": "e2b80215caf61894fec84d8235657379ae02f297", "filename": "src/test/compile-fail/issue-31221.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5ba61edbd038edebb9e3f61a14cd4777ecc399be/src%2Ftest%2Fcompile-fail%2Fissue-31221.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ba61edbd038edebb9e3f61a14cd4777ecc399be/src%2Ftest%2Fcompile-fail%2Fissue-31221.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-31221.rs?ref=5ba61edbd038edebb9e3f61a14cd4777ecc399be", "patch": "@@ -8,8 +8,15 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n+#![allow(unused_variables)]\n+#![allow(non_snake_case)]\n #![deny(unreachable_patterns)]\n+//~^ NOTE lint level defined here\n+//~^^ NOTE lint level defined here\n+//~^^^ NOTE lint level defined here\n \n+#[derive(Clone, Copy)]\n enum Enum {\n     Var1,\n     Var2,"}]}