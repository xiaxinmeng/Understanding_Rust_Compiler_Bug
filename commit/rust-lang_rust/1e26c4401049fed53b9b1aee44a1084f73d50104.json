{"sha": "1e26c4401049fed53b9b1aee44a1084f73d50104", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlMjZjNDQwMTA0OWZlZDUzYjliMWFlZTQ0YTEwODRmNzNkNTAxMDQ=", "commit": {"author": {"name": "sinkuu", "email": "sinkuupump@gmail.com", "date": "2017-02-22T07:47:18Z"}, "committer": {"name": "sinkuu", "email": "sinkuupump@gmail.com", "date": "2017-02-22T07:47:18Z"}, "message": "Suggest `assert_ne` for `assert!(x != y)`", "tree": {"sha": "1583b54dfe9880e932efc5d2d1b103f4dd0c91af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1583b54dfe9880e932efc5d2d1b103f4dd0c91af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e26c4401049fed53b9b1aee44a1084f73d50104", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e26c4401049fed53b9b1aee44a1084f73d50104", "html_url": "https://github.com/rust-lang/rust/commit/1e26c4401049fed53b9b1aee44a1084f73d50104", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e26c4401049fed53b9b1aee44a1084f73d50104/comments", "author": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7c049df289eb90f8e691c27276cd70f913cb3c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7c049df289eb90f8e691c27276cd70f913cb3c3", "html_url": "https://github.com/rust-lang/rust/commit/a7c049df289eb90f8e691c27276cd70f913cb3c3"}], "stats": {"total": 42, "additions": 34, "deletions": 8}, "files": [{"sha": "372ee210336b0dee04951ed52260d7dd13912038", "filename": "clippy_lints/src/should_assert_eq.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/1e26c4401049fed53b9b1aee44a1084f73d50104/clippy_lints%2Fsrc%2Fshould_assert_eq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e26c4401049fed53b9b1aee44a1084f73d50104/clippy_lints%2Fsrc%2Fshould_assert_eq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fshould_assert_eq.rs?ref=1e26c4401049fed53b9b1aee44a1084f73d50104", "patch": "@@ -2,10 +2,10 @@ use rustc::lint::*;\n use rustc::hir::*;\n use utils::{is_direct_expn_of, implements_trait, span_lint};\n \n-/// **What it does:** Checks for `assert!(x == y)` which can be better written\n-/// as `assert_eq!(x, y)` if `x` and `y` implement `Debug` trait.\n+/// **What it does:** Checks for `assert!(x == y)` or `assert!(x != y)` which can be better written\n+/// using `assert_eq` or `assert_ne` if `x` and `y` implement `Debug` trait.\n ///\n-/// **Why is this bad?** `assert_eq` provides better assertion failure reporting.\n+/// **Why is this bad?** `assert_eq` and `assert_ne` provide better assertion failure reporting.\n ///\n /// **Known problems:** Hopefully none.\n ///\n@@ -36,18 +36,23 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for ShouldAssertEq {\n             let ExprIf(ref cond, ..) = e.node,\n             let ExprUnary(UnOp::UnNot, ref cond) = cond.node,\n             let ExprBinary(ref binop, ref expr1, ref expr2) = cond.node,\n-            binop.node == BinOp_::BiEq,\n             is_direct_expn_of(cx, e.span, \"assert\").is_some(),\n             let Some(debug_trait) = cx.tcx.lang_items.debug_trait(),\n         ], {\n+            let sugg = match binop.node {\n+                BinOp_::BiEq => \"assert_eq\",\n+                BinOp_::BiNe => \"assert_ne\",\n+                _ => return,\n+            };\n+\n             let ty1 = cx.tables.expr_ty(expr1);\n             let ty2 = cx.tables.expr_ty(expr2);\n \n             let parent = cx.tcx.hir.get_parent(e.id);\n \n             if implements_trait(cx, ty1, debug_trait, &[], Some(parent)) &&\n                 implements_trait(cx, ty2, debug_trait, &[], Some(parent)) {\n-                span_lint(cx, SHOULD_ASSERT_EQ, e.span, \"use `assert_eq` for better reporting\");\n+                span_lint(cx, SHOULD_ASSERT_EQ, e.span, &format!(\"use `{}` for better reporting\", sugg));\n             }\n         }}\n     }"}, {"sha": "f00278bfc7efba22d29afa79ef0202ee62966646", "filename": "tests/ui/should_assert_eq.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1e26c4401049fed53b9b1aee44a1084f73d50104/tests%2Fui%2Fshould_assert_eq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e26c4401049fed53b9b1aee44a1084f73d50104/tests%2Fui%2Fshould_assert_eq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fshould_assert_eq.rs?ref=1e26c4401049fed53b9b1aee44a1084f73d50104", "patch": "@@ -14,11 +14,16 @@ fn main() {\n     assert!(1 == 2);\n     assert!(Debug(1) == Debug(2));\n     assert!(NonDebug(1) == NonDebug(1)); // ok\n+    assert!(Debug(1) != Debug(2));\n+    assert!(NonDebug(1) != NonDebug(2)); // ok\n \n     test_generic(1, 2, 3, 4);\n }\n \n fn test_generic<T: std::fmt::Debug + Eq, U: Eq>(x: T, y: T, z: U, w: U) {\n     assert!(x == y);\n     assert!(z == w); // ok\n+\n+    assert!(x != y);\n+    assert!(z != w); // ok\n }"}, {"sha": "8dcf71698df18205ac5c5b03cb17ddbde09ce65d", "filename": "tests/ui/should_assert_eq.stderr", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/1e26c4401049fed53b9b1aee44a1084f73d50104/tests%2Fui%2Fshould_assert_eq.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1e26c4401049fed53b9b1aee44a1084f73d50104/tests%2Fui%2Fshould_assert_eq.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fshould_assert_eq.stderr?ref=1e26c4401049fed53b9b1aee44a1084f73d50104", "patch": "@@ -19,13 +19,29 @@ error: use `assert_eq` for better reporting\n    |\n    = note: this error originates in a macro outside of the current crate\n \n+error: use `assert_ne` for better reporting\n+  --> $DIR/should_assert_eq.rs:17:5\n+   |\n+17 |     assert!(Debug(1) != Debug(2));\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: this error originates in a macro outside of the current crate\n+\n error: use `assert_eq` for better reporting\n-  --> $DIR/should_assert_eq.rs:22:5\n+  --> $DIR/should_assert_eq.rs:24:5\n+   |\n+24 |     assert!(x == y);\n+   |     ^^^^^^^^^^^^^^^^\n+   |\n+   = note: this error originates in a macro outside of the current crate\n+\n+error: use `assert_ne` for better reporting\n+  --> $DIR/should_assert_eq.rs:27:5\n    |\n-22 |     assert!(x == y);\n+27 |     assert!(x != y);\n    |     ^^^^^^^^^^^^^^^^\n    |\n    = note: this error originates in a macro outside of the current crate\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 5 previous errors\n "}]}