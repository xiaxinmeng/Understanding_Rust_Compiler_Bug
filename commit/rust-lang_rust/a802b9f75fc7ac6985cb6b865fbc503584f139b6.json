{"sha": "a802b9f75fc7ac6985cb6b865fbc503584f139b6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4MDJiOWY3NWZjN2FjNjk4NWNiNmI4NjVmYmM1MDM1ODRmMTM5YjY=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2016-12-18T16:46:11Z"}, "committer": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2016-12-21T03:03:31Z"}, "message": "Inline get_funclet", "tree": {"sha": "f312cbb520c29c01541b159c19a75af0c47f55f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f312cbb520c29c01541b159c19a75af0c47f55f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a802b9f75fc7ac6985cb6b865fbc503584f139b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a802b9f75fc7ac6985cb6b865fbc503584f139b6", "html_url": "https://github.com/rust-lang/rust/commit/a802b9f75fc7ac6985cb6b865fbc503584f139b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a802b9f75fc7ac6985cb6b865fbc503584f139b6/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1173db00628882300c2651e6e5d8eb6ddbcb5057", "url": "https://api.github.com/repos/rust-lang/rust/commits/1173db00628882300c2651e6e5d8eb6ddbcb5057", "html_url": "https://github.com/rust-lang/rust/commit/1173db00628882300c2651e6e5d8eb6ddbcb5057"}], "stats": {"total": 16, "additions": 5, "deletions": 11}, "files": [{"sha": "7ba36e457529e8ec27839e3c693a5a2cb71ff71c", "filename": "src/librustc_trans/cleanup.rs", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a802b9f75fc7ac6985cb6b865fbc503584f139b6/src%2Flibrustc_trans%2Fcleanup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a802b9f75fc7ac6985cb6b865fbc503584f139b6/src%2Flibrustc_trans%2Fcleanup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcleanup.rs?ref=a802b9f75fc7ac6985cb6b865fbc503584f139b6", "patch": "@@ -71,16 +71,6 @@ impl UnwindKind {\n             }\n         }\n     }\n-\n-    fn get_funclet(&self, bcx: &BlockAndBuilder) -> Option<Funclet> {\n-        match *self {\n-            UnwindKind::CleanupPad(_) => {\n-                let pad = bcx.cleanup_pad(None, &[]);\n-                Funclet::msvc(pad)\n-            },\n-            UnwindKind::LandingPad => Funclet::gnu(),\n-        }\n-    }\n }\n \n impl PartialEq for UnwindKind {\n@@ -212,7 +202,11 @@ impl<'tcx> CleanupScope<'tcx> {\n         let mut cleanup = fcx.build_new_block(\"clean_custom_\");\n \n         // Insert cleanup instructions into the cleanup block\n-        drop_val.trans(val.get_funclet(&cleanup).as_ref(), &cleanup);\n+        let funclet = match val {\n+            UnwindKind::CleanupPad(_) => Funclet::msvc(cleanup.cleanup_pad(None, &[])),\n+            UnwindKind::LandingPad => Funclet::gnu(),\n+        };\n+        drop_val.trans(funclet.as_ref(), &cleanup);\n \n         // Insert instruction into cleanup block to branch to the exit\n         val.branch(&mut cleanup, resume_bcx.llbb());"}]}