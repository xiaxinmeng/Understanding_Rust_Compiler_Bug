{"sha": "4d81e9dd2ff873df9bb67da5c05d54b18d78b983", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkODFlOWRkMmZmODczZGY5YmI2N2RhNWMwNWQ1NGIxOGQ3OGI5ODM=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-10-25T17:03:17Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-10-25T17:03:17Z"}, "message": "rustc: make DefPathData (and friends) Copy (now that it uses Symbol).", "tree": {"sha": "024ad95c195c26e121708e6364381c6fde43870a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/024ad95c195c26e121708e6364381c6fde43870a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d81e9dd2ff873df9bb67da5c05d54b18d78b983", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d81e9dd2ff873df9bb67da5c05d54b18d78b983", "html_url": "https://github.com/rust-lang/rust/commit/4d81e9dd2ff873df9bb67da5c05d54b18d78b983", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d81e9dd2ff873df9bb67da5c05d54b18d78b983/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23f890f10202a71168c6424da0cdf94135d3c40c", "url": "https://api.github.com/repos/rust-lang/rust/commits/23f890f10202a71168c6424da0cdf94135d3c40c", "html_url": "https://github.com/rust-lang/rust/commit/23f890f10202a71168c6424da0cdf94135d3c40c"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "40a51b92473bbe81149608722bad39705249a8d3", "filename": "src/librustc/hir/map/definitions.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4d81e9dd2ff873df9bb67da5c05d54b18d78b983/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d81e9dd2ff873df9bb67da5c05d54b18d78b983/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs?ref=4d81e9dd2ff873df9bb67da5c05d54b18d78b983", "patch": "@@ -53,7 +53,7 @@ impl DefPathTable {\n \n     #[inline(always)]\n     pub fn def_key(&self, index: DefIndex) -> DefKey {\n-        self.index_to_key[index.index()].clone()\n+        self.index_to_key[index.index()]\n     }\n \n     #[inline(always)]\n@@ -111,7 +111,7 @@ pub struct Definitions {\n /// A unique identifier that we can use to lookup a definition\n /// precisely. It combines the index of the definition's parent (if\n /// any) with a `DisambiguatedDefPathData`.\n-#[derive(Clone, PartialEq, Debug, RustcEncodable, RustcDecodable)]\n+#[derive(Copy, Clone, PartialEq, Debug, RustcEncodable, RustcDecodable)]\n pub struct DefKey {\n     /// The parent path.\n     pub parent: Option<DefIndex>,\n@@ -164,7 +164,7 @@ impl DefKey {\n /// between them. This introduces some artificial ordering dependency\n /// but means that if you have, e.g., two impls for the same type in\n /// the same module, they do get distinct `DefId`s.\n-#[derive(Clone, PartialEq, Debug, RustcEncodable, RustcDecodable)]\n+#[derive(Copy, Clone, PartialEq, Debug, RustcEncodable, RustcDecodable)]\n pub struct DisambiguatedDefPathData {\n     pub data: DefPathData,\n     pub disambiguator: u32\n@@ -277,7 +277,7 @@ impl DefPath {\n     }\n }\n \n-#[derive(Clone, Debug, PartialEq, Eq, Hash, RustcEncodable, RustcDecodable)]\n+#[derive(Copy, Clone, Debug, PartialEq, Eq, Hash, RustcEncodable, RustcDecodable)]\n pub enum DefPathData {\n     // Root: these should only be used for the root nodes, because\n     // they are treated specially by the `def_path` function.\n@@ -472,7 +472,7 @@ impl Definitions {\n \n         // Find the next free disambiguator for this key.\n         let disambiguator = {\n-            let next_disamb = self.next_disambiguator.entry((parent, data.clone())).or_insert(0);\n+            let next_disamb = self.next_disambiguator.entry((parent, data)).or_insert(0);\n             let disambiguator = *next_disamb;\n             *next_disamb = next_disamb.checked_add(1).expect(\"disambiguator overflow\");\n             disambiguator"}]}