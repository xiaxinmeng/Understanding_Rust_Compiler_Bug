{"sha": "eb2953022420517859c67c6e57ef59a14dd2fee8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViMjk1MzAyMjQyMDUxNzg1OWM2N2M2ZTU3ZWY1OWExNGRkMmZlZTg=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-10-26T15:10:38Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-10-26T15:10:38Z"}, "message": "Rollup merge of #55391 - matthiaskrgr:bootstrap_cleanup, r=oli-obk\n\nbootstrap: clean up a few clippy findings\n\nremove useless format!()s\nremove redundant field names in a few struct initializations\npass slice instead of a vector to a function\nuse is_empty() instead of comparisons to .len()\n\nNo functional change intended.", "tree": {"sha": "a273c040b03e8d1eba1bac3c7e333f75165a9a36", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a273c040b03e8d1eba1bac3c7e333f75165a9a36"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb2953022420517859c67c6e57ef59a14dd2fee8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlvTLm4ACgkQ/vbIBR0O\nATzoThAApJXqTIOSNQTP/r6PnBa0Zv13EvCpldqIYcXJ3AsTnP6d/f3LwMpok2Mz\nvOqxsYjrEFnA/deZSbtaHvQpE+yPqOnN3K5cOHqi6Oy2yJWGLG2Tpqjq/6XP2C/5\n/73KSxcLpLkdHpEdoz336Z9GqEW/ilfofB+k54YtFleO7wpcF5HWV1+3bYqC5uMN\nw7AXt1bQeRoqIkj0j43Dovb2fKfgm+Dlc1NqconyoaI70aLwZTw5khExAMDPKeDo\nZshmhCUkjJYyEP21Ib1vaL96GDpg9bSGNmLxCuYzPQAxfHoamSH4UGP/3rUKm3t4\nn04TwL0LM/pkj9Pivz7wxSH+eE3bTipn8v1XXWUN8sXSa63hVE6yGCESiJb+HkqE\n+1o1ppzEMgw2AyiVzvvNM1iBc4G7iTSmyRhR2TPxX+sPasQDbFuwJ9g4wRBk5sjq\nARwnBdRuubIffmDGTdhNyGW3t6aLa03toY+wG6HhklK2LONbXrNXN7osGaswyLuH\nICK4CU3NitM8pCbHa6oofhyJQbBR6iD4dB5B1rs0yLNNrmPtg9hibi6Pvy4aYPWp\n2bI9H2th+AQsTU5khIwX1ffZKDP5ZxlbjH3Y3SGvW0H5mjjvNURY2Vg1bnyFV945\nsEk+T8WNBadjcZy0FBypmMtR0W+hIEOIhudCUMNexz234fbA4YA=\n=Y2Pe\n-----END PGP SIGNATURE-----", "payload": "tree a273c040b03e8d1eba1bac3c7e333f75165a9a36\nparent 5a16579d0851e28ff470af659a476debef1775ef\nparent 54edf321438137e611649c6528aa7d637afe9dc2\nauthor kennytm <kennytm@gmail.com> 1540566638 +0800\ncommitter kennytm <kennytm@gmail.com> 1540566638 +0800\n\nRollup merge of #55391 - matthiaskrgr:bootstrap_cleanup, r=oli-obk\n\nbootstrap: clean up a few clippy findings\n\nremove useless format!()s\nremove redundant field names in a few struct initializations\npass slice instead of a vector to a function\nuse is_empty() instead of comparisons to .len()\n\nNo functional change intended.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb2953022420517859c67c6e57ef59a14dd2fee8", "html_url": "https://github.com/rust-lang/rust/commit/eb2953022420517859c67c6e57ef59a14dd2fee8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb2953022420517859c67c6e57ef59a14dd2fee8/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a16579d0851e28ff470af659a476debef1775ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a16579d0851e28ff470af659a476debef1775ef", "html_url": "https://github.com/rust-lang/rust/commit/5a16579d0851e28ff470af659a476debef1775ef"}, {"sha": "54edf321438137e611649c6528aa7d637afe9dc2", "url": "https://api.github.com/repos/rust-lang/rust/commits/54edf321438137e611649c6528aa7d637afe9dc2", "html_url": "https://github.com/rust-lang/rust/commit/54edf321438137e611649c6528aa7d637afe9dc2"}], "stats": {"total": 67, "additions": 33, "deletions": 34}, "files": [{"sha": "d009d9645c35aa388ebf7f639f533984491b7de5", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/eb2953022420517859c67c6e57ef59a14dd2fee8/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb2953022420517859c67c6e57ef59a14dd2fee8/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=eb2953022420517859c67c6e57ef59a14dd2fee8", "patch": "@@ -69,7 +69,7 @@ impl Step for Std {\n         if builder.config.keep_stage.contains(&compiler.stage) {\n             builder.info(\"Warning: Using a potentially old libstd. This may not behave well.\");\n             builder.ensure(StdLink {\n-                compiler: compiler,\n+                compiler,\n                 target_compiler: compiler,\n                 target,\n             });\n@@ -358,7 +358,7 @@ impl Step for Test {\n         if builder.config.keep_stage.contains(&compiler.stage) {\n             builder.info(\"Warning: Using a potentially old libtest. This may not behave well.\");\n             builder.ensure(TestLink {\n-                compiler: compiler,\n+                compiler,\n                 target_compiler: compiler,\n                 target,\n             });\n@@ -480,7 +480,7 @@ impl Step for Rustc {\n         if builder.config.keep_stage.contains(&compiler.stage) {\n             builder.info(\"Warning: Using a potentially old librustc. This may not behave well.\");\n             builder.ensure(RustcLink {\n-                compiler: compiler,\n+                compiler,\n                 target_compiler: compiler,\n                 target,\n             });\n@@ -816,8 +816,8 @@ fn copy_codegen_backends_to_sysroot(builder: &Builder,\n         let filename = file.file_name().unwrap().to_str().unwrap();\n         // change `librustc_codegen_llvm-xxxxxx.so` to `librustc_codegen_llvm-llvm.so`\n         let target_filename = {\n-            let dash = filename.find(\"-\").unwrap();\n-            let dot = filename.find(\".\").unwrap();\n+            let dash = filename.find('-').unwrap();\n+            let dot = filename.find('.').unwrap();\n             format!(\"{}-{}{}\",\n                     &filename[..dash],\n                     backend,"}, {"sha": "1211d485d1c12cfb24143795508539bf1afc29db", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/eb2953022420517859c67c6e57ef59a14dd2fee8/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb2953022420517859c67c6e57ef59a14dd2fee8/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=eb2953022420517859c67c6e57ef59a14dd2fee8", "patch": "@@ -93,8 +93,7 @@ impl Default for Subcommand {\n impl Flags {\n     pub fn parse(args: &[String]) -> Flags {\n         let mut extra_help = String::new();\n-        let mut subcommand_help = format!(\n-            \"\\\n+        let mut subcommand_help = String::from(\"\\\n Usage: x.py <subcommand> [options] [<paths>...]\n \n Subcommands:\n@@ -365,8 +364,8 @@ Arguments:\n         }\n \n         let cmd = match subcommand.as_str() {\n-            \"build\" => Subcommand::Build { paths: paths },\n-            \"check\" => Subcommand::Check { paths: paths },\n+            \"build\" => Subcommand::Build { paths },\n+            \"check\" => Subcommand::Check { paths },\n             \"test\" => Subcommand::Test {\n                 paths,\n                 bless: matches.opt_present(\"bless\"),\n@@ -386,9 +385,9 @@ Arguments:\n                 paths,\n                 test_args: matches.opt_strs(\"test-args\"),\n             },\n-            \"doc\" => Subcommand::Doc { paths: paths },\n+            \"doc\" => Subcommand::Doc { paths },\n             \"clean\" => {\n-                if paths.len() > 0 {\n+                if !paths.is_empty() {\n                     println!(\"\\nclean does not take a path argument\\n\");\n                     usage(1, &opts, &subcommand_help, &extra_help);\n                 }\n@@ -413,19 +412,19 @@ Arguments:\n             keep_stage: matches.opt_strs(\"keep-stage\")\n                 .into_iter().map(|j| j.parse().unwrap())\n                 .collect(),\n-            host: split(matches.opt_strs(\"host\"))\n+            host: split(&matches.opt_strs(\"host\"))\n                 .into_iter()\n                 .map(|x| INTERNER.intern_string(x))\n                 .collect::<Vec<_>>(),\n-            target: split(matches.opt_strs(\"target\"))\n+            target: split(&matches.opt_strs(\"target\"))\n                 .into_iter()\n                 .map(|x| INTERNER.intern_string(x))\n                 .collect::<Vec<_>>(),\n             config: cfg_file,\n             jobs: matches.opt_str(\"jobs\").map(|j| j.parse().unwrap()),\n             cmd,\n             incremental: matches.opt_present(\"incremental\"),\n-            exclude: split(matches.opt_strs(\"exclude\"))\n+            exclude: split(&matches.opt_strs(\"exclude\"))\n                 .into_iter()\n                 .map(|p| p.into())\n                 .collect::<Vec<_>>(),\n@@ -488,7 +487,7 @@ impl Subcommand {\n     }\n }\n \n-fn split(s: Vec<String>) -> Vec<String> {\n+fn split(s: &[String]) -> Vec<String> {\n     s.iter()\n         .flat_map(|s| s.split(','))\n         .map(|s| s.to_string())"}, {"sha": "ba601249ea895fb7f43afd08322d06270f111288", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/eb2953022420517859c67c6e57ef59a14dd2fee8/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb2953022420517859c67c6e57ef59a14dd2fee8/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=eb2953022420517859c67c6e57ef59a14dd2fee8", "patch": "@@ -768,7 +768,7 @@ impl Build {\n                 let sha = self.rust_sha().unwrap_or(channel::CFG_RELEASE_NUM);\n                 format!(\"/rustc/{}\", sha)\n             }\n-            GitRepo::Llvm => format!(\"/rustc/llvm\"),\n+            GitRepo::Llvm => String::from(\"/rustc/llvm\"),\n         };\n         Some(format!(\"{}={}\", self.src.display(), path))\n     }\n@@ -783,7 +783,7 @@ impl Build {\n     fn cflags(&self, target: Interned<String>, which: GitRepo) -> Vec<String> {\n         // Filter out -O and /O (the optimization flags) that we picked up from\n         // cc-rs because the build scripts will determine that for themselves.\n-        let mut base = self.cc[&target].args().iter()\n+        let mut base: Vec<String> = self.cc[&target].args().iter()\n                            .map(|s| s.to_string_lossy().into_owned())\n                            .filter(|s| !s.starts_with(\"-O\") && !s.starts_with(\"/O\"))\n                            .collect::<Vec<_>>();\n@@ -806,10 +806,10 @@ impl Build {\n         if let Some(map) = self.debuginfo_map(which) {\n         let cc = self.cc(target);\n             if cc.ends_with(\"clang\") || cc.ends_with(\"gcc\") {\n-                base.push(format!(\"-fdebug-prefix-map={}\", map).into());\n+                base.push(format!(\"-fdebug-prefix-map={}\", map));\n             } else if cc.ends_with(\"clang-cl.exe\") {\n                 base.push(\"-Xclang\".into());\n-                base.push(format!(\"-fdebug-prefix-map={}\", map).into());\n+                base.push(format!(\"-fdebug-prefix-map={}\", map));\n             }\n         }\n         base"}, {"sha": "2eb11b06e4e08acaa0e614495643c50b9f2b3fb1", "filename": "src/bootstrap/sanity.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb2953022420517859c67c6e57ef59a14dd2fee8/src%2Fbootstrap%2Fsanity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb2953022420517859c67c6e57ef59a14dd2fee8/src%2Fbootstrap%2Fsanity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fsanity.rs?ref=eb2953022420517859c67c6e57ef59a14dd2fee8", "patch": "@@ -74,7 +74,7 @@ pub fn check(build: &mut Build) {\n     // one is present as part of the PATH then that can lead to the system\n     // being unable to identify the files properly. See\n     // https://github.com/rust-lang/rust/issues/34959 for more details.\n-    if cfg!(windows) && path.to_string_lossy().contains(\"\\\"\") {\n+    if cfg!(windows) && path.to_string_lossy().contains('\\\"') {\n         panic!(\"PATH contains invalid character '\\\"'\");\n     }\n "}, {"sha": "e411e0d17342ef66e092c6aaead0bd95e1510349", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/eb2953022420517859c67c6e57ef59a14dd2fee8/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb2953022420517859c67c6e57ef59a14dd2fee8/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=eb2953022420517859c67c6e57ef59a14dd2fee8", "patch": "@@ -521,7 +521,7 @@ impl Step for RustdocTheme {\n     fn make_run(run: RunConfig) {\n         let compiler = run.builder.compiler(run.builder.top_stage, run.host);\n \n-        run.builder.ensure(RustdocTheme { compiler: compiler });\n+        run.builder.ensure(RustdocTheme { compiler });\n     }\n \n     fn run(self, builder: &Builder) {\n@@ -584,9 +584,9 @@ impl Step for RustdocJS {\n             });\n             builder.run(&mut command);\n         } else {\n-            builder.info(&format!(\n+            builder.info(\n                 \"No nodejs found, skipping \\\"src/test/rustdoc-js\\\" tests\"\n-            ));\n+            );\n         }\n     }\n }\n@@ -653,7 +653,7 @@ impl Step for Tidy {\n         }\n \n         let _folder = builder.fold_output(|| \"tidy\");\n-        builder.info(&format!(\"tidy check\"));\n+        builder.info(\"tidy check\");\n         try_run(builder, &mut cmd);\n     }\n \n@@ -1168,9 +1168,9 @@ impl Step for Compiletest {\n             }\n         }\n         if suite == \"run-make-fulldeps\" && !builder.config.llvm_enabled {\n-            builder.info(&format!(\n+            builder.info(\n                 \"Ignoring run-make test suite as they generally don't work without LLVM\"\n-            ));\n+            );\n             return;\n         }\n \n@@ -1692,10 +1692,10 @@ impl Step for Crate {\n             // The javascript shim implements the syscall interface so that test\n             // output can be correctly reported.\n             if !builder.config.wasm_syscall {\n-                builder.info(&format!(\n+                builder.info(\n                     \"Libstd was built without `wasm_syscall` feature enabled: \\\n                      test output may not be visible.\"\n-                ));\n+                );\n             }\n \n             // On the wasm32-unknown-unknown target we're using LTO which is\n@@ -1891,7 +1891,7 @@ impl Step for Distcheck {\n \n     /// Run \"distcheck\", a 'make check' from a tarball\n     fn run(self, builder: &Builder) {\n-        builder.info(&format!(\"Distcheck\"));\n+        builder.info(\"Distcheck\");\n         let dir = builder.out.join(\"tmp\").join(\"distcheck\");\n         let _ = fs::remove_dir_all(&dir);\n         t!(fs::create_dir_all(&dir));\n@@ -1919,7 +1919,7 @@ impl Step for Distcheck {\n         );\n \n         // Now make sure that rust-src has all of libstd's dependencies\n-        builder.info(&format!(\"Distcheck rust-src\"));\n+        builder.info(\"Distcheck rust-src\");\n         let dir = builder.out.join(\"tmp\").join(\"distcheck-src\");\n         let _ = fs::remove_dir_all(&dir);\n         t!(fs::create_dir_all(&dir));"}, {"sha": "978e3602e7dbc5c132c37507135686ab36c7061f", "filename": "src/bootstrap/tool.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/eb2953022420517859c67c6e57ef59a14dd2fee8/src%2Fbootstrap%2Ftool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb2953022420517859c67c6e57ef59a14dd2fee8/src%2Fbootstrap%2Ftool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftool.rs?ref=eb2953022420517859c67c6e57ef59a14dd2fee8", "patch": "@@ -148,7 +148,7 @@ impl Step for ToolBuild {\n             }\n         });\n \n-        if is_expected && duplicates.len() != 0 {\n+        if is_expected && !duplicates.is_empty() {\n             println!(\"duplicate artfacts found when compiling a tool, this \\\n                       typically means that something was recompiled because \\\n                       a transitive dependency has different features activated \\\n@@ -170,7 +170,7 @@ impl Step for ToolBuild {\n                 println!(\"    `{}` additionally enabled features {:?} at {:?}\",\n                          prev.0, &prev_features - &cur_features, prev.1);\n             }\n-            println!(\"\");\n+            println!();\n             println!(\"to fix this you will probably want to edit the local \\\n                       src/tools/rustc-workspace-hack/Cargo.toml crate, as \\\n                       that will update the dependency graph to ensure that \\\n@@ -188,7 +188,7 @@ impl Step for ToolBuild {\n             if !is_optional_tool {\n                 exit(1);\n             } else {\n-                return None;\n+                None\n             }\n         } else {\n             let cargo_out = builder.cargo_out(compiler, self.mode, target)\n@@ -251,7 +251,7 @@ pub fn prepare_tool_cargo(\n     if let Some(date) = info.commit_date() {\n         cargo.env(\"CFG_COMMIT_DATE\", date);\n     }\n-    if features.len() > 0 {\n+    if !features.is_empty() {\n         cargo.arg(\"--features\").arg(&features.join(\", \"));\n     }\n     cargo"}]}