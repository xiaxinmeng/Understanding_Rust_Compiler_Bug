{"sha": "e6418964b9fe8e3f49cf335adab6615c183ebdb5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2NDE4OTY0YjlmZThlM2Y0OWNmMzM1YWRhYjY2MTVjMTgzZWJkYjU=", "commit": {"author": {"name": "S\u00e9bastien Marie", "email": "semarie@users.noreply.github.com", "date": "2015-12-19T10:42:10Z"}, "committer": {"name": "S\u00e9bastien Marie", "email": "semarie@users.noreply.github.com", "date": "2015-12-20T06:21:36Z"}, "message": "remove specific code for OpenBSD that define STDCPP_LIBDIR_RUSTFLAGS\n\nit isn't the good way to process, as it makes conflicts when building rustc while another version of rustc in installed system-wide.", "tree": {"sha": "f8ff73ff99888a6519d4a4b2411c0b0eaeeb6e08", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8ff73ff99888a6519d4a4b2411c0b0eaeeb6e08"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6418964b9fe8e3f49cf335adab6615c183ebdb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6418964b9fe8e3f49cf335adab6615c183ebdb5", "html_url": "https://github.com/rust-lang/rust/commit/e6418964b9fe8e3f49cf335adab6615c183ebdb5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6418964b9fe8e3f49cf335adab6615c183ebdb5/comments", "author": {"login": "semarie", "id": 8948701, "node_id": "MDQ6VXNlcjg5NDg3MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/8948701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semarie", "html_url": "https://github.com/semarie", "followers_url": "https://api.github.com/users/semarie/followers", "following_url": "https://api.github.com/users/semarie/following{/other_user}", "gists_url": "https://api.github.com/users/semarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/semarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semarie/subscriptions", "organizations_url": "https://api.github.com/users/semarie/orgs", "repos_url": "https://api.github.com/users/semarie/repos", "events_url": "https://api.github.com/users/semarie/events{/privacy}", "received_events_url": "https://api.github.com/users/semarie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "semarie", "id": 8948701, "node_id": "MDQ6VXNlcjg5NDg3MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/8948701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semarie", "html_url": "https://github.com/semarie", "followers_url": "https://api.github.com/users/semarie/followers", "following_url": "https://api.github.com/users/semarie/following{/other_user}", "gists_url": "https://api.github.com/users/semarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/semarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semarie/subscriptions", "organizations_url": "https://api.github.com/users/semarie/orgs", "repos_url": "https://api.github.com/users/semarie/repos", "events_url": "https://api.github.com/users/semarie/events{/privacy}", "received_events_url": "https://api.github.com/users/semarie/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27d551142f9e3cd2fc402555a8f6287dd0fc01ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/27d551142f9e3cd2fc402555a8f6287dd0fc01ac", "html_url": "https://github.com/rust-lang/rust/commit/27d551142f9e3cd2fc402555a8f6287dd0fc01ac"}], "stats": {"total": 24, "additions": 3, "deletions": 21}, "files": [{"sha": "04cab379de3c73e0f56062584b45a76384ced1c1", "filename": "mk/platform.mk", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e6418964b9fe8e3f49cf335adab6615c183ebdb5/mk%2Fplatform.mk", "raw_url": "https://github.com/rust-lang/rust/raw/e6418964b9fe8e3f49cf335adab6615c183ebdb5/mk%2Fplatform.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fplatform.mk?ref=e6418964b9fe8e3f49cf335adab6615c183ebdb5", "patch": "@@ -215,16 +215,6 @@ define CFG_MAKE_TOOLCHAIN\n \n   ifeq ($$(findstring $(HOST_$(1)),arm aarch64 mips mipsel powerpc),)\n \n-  # On OpenBSD, we need to pass the path of libstdc++.so to the linker\n-  # (use path of libstdc++.a which is a known name for the same path)\n-  ifeq ($(OSTYPE_$(1)),unknown-openbsd)\n-    STDCPP_LIBDIR_RUSTFLAGS_$(1)= \\\n-        -L \"$$(dir $$(shell $$(CC_$(1)) $$(CFG_GCCISH_CFLAGS_$(1)) \\\n-        -print-file-name=lib$(CFG_STDCPP_NAME).a))\"\n-  else\n-    STDCPP_LIBDIR_RUSTFLAGS_$(1)=\n-  endif\n-\n   # On Bitrig, we need the relocation model to be PIC for everything\n   ifeq (,$(filter $(OSTYPE_$(1)),bitrig))\n     LLVM_MC_RELOCATION_MODEL=\"pic\""}, {"sha": "f90b09479c9858c338c7264be72f3773a0380285", "filename": "mk/target.mk", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6418964b9fe8e3f49cf335adab6615c183ebdb5/mk%2Ftarget.mk", "raw_url": "https://github.com/rust-lang/rust/raw/e6418964b9fe8e3f49cf335adab6615c183ebdb5/mk%2Ftarget.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftarget.mk?ref=e6418964b9fe8e3f49cf335adab6615c183ebdb5", "patch": "@@ -95,7 +95,6 @@ $$(TLIB$(1)_T_$(2)_H_$(3))/stamp.$(4): \\\n \t\t$$(RUSTFLAGS_$(4)) \\\n \t\t$$(RUSTFLAGS$(1)_$(4)) \\\n \t\t$$(RUSTFLAGS$(1)_$(4)_T_$(2)) \\\n-\t\t$$(STDCPP_LIBDIR_RUSTFLAGS_$(2)) \\\n \t\t--out-dir $$(@D) \\\n \t\t-C extra-filename=-$$(CFG_FILENAME_EXTRA) \\\n \t\t$$<\n@@ -130,7 +129,6 @@ $$(TBIN$(1)_T_$(2)_H_$(3))/$(4)$$(X_$(2)): \\\n \t\t| $$(TBIN$(1)_T_$(2)_H_$(3))/\n \t@$$(call E, rustc: $$@)\n \t$$(STAGE$(1)_T_$(2)_H_$(3)) \\\n-\t\t$$(STDCPP_LIBDIR_RUSTFLAGS_$(2)) \\\n \t\t$$(LLVM_LIBDIR_RUSTFLAGS_$(2)) \\\n \t\t-o $$@ $$< --cfg $(4)\n "}, {"sha": "0f30ff8711e5e26fc8063e8155f69a6727c2bbc8", "filename": "mk/tests.mk", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e6418964b9fe8e3f49cf335adab6615c183ebdb5/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/e6418964b9fe8e3f49cf335adab6615c183ebdb5/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=e6418964b9fe8e3f49cf335adab6615c183ebdb5", "patch": "@@ -393,8 +393,7 @@ $(3)/stage$(1)/test/$(4)test-$(2)$$(X_$(2)): \\\n \t    $$(subst @,,$$(STAGE$(1)_T_$(2)_H_$(3))) -o $$@ $$< --test \\\n \t\t-L \"$$(RT_OUTPUT_DIR_$(2))\" \\\n \t\t$$(LLVM_LIBDIR_RUSTFLAGS_$(2)) \\\n-\t\t$$(RUSTFLAGS_$(4)) \\\n-\t\t$$(STDCPP_LIBDIR_RUSTFLAGS_$(2))\n+\t\t$$(RUSTFLAGS_$(4))\n \n endef\n \n@@ -664,9 +663,9 @@ CTEST_COMMON_ARGS$(1)-T-$(2)-H-$(3) := \\\n         --android-cross-path=$(CFG_ANDROID_CROSS_PATH) \\\n         --adb-path=$(CFG_ADB) \\\n         --adb-test-dir=$(CFG_ADB_TEST_DIR) \\\n-        --host-rustcflags \"$(RUSTC_FLAGS_$(3)) $$(CTEST_RUSTC_FLAGS) -L $$(RT_OUTPUT_DIR_$(3)) $$(STDCPP_LIBDIR_RUSTFLAGS_$(3))\" \\\n+        --host-rustcflags \"$(RUSTC_FLAGS_$(3)) $$(CTEST_RUSTC_FLAGS) -L $$(RT_OUTPUT_DIR_$(3))\" \\\n         --lldb-python-dir=$(CFG_LLDB_PYTHON_DIR) \\\n-        --target-rustcflags \"$(RUSTC_FLAGS_$(2)) $$(CTEST_RUSTC_FLAGS) -L $$(RT_OUTPUT_DIR_$(2)) $$(STDCPP_LIBDIR_RUSTFLAGS_$(2))\" \\\n+        --target-rustcflags \"$(RUSTC_FLAGS_$(2)) $$(CTEST_RUSTC_FLAGS) -L $$(RT_OUTPUT_DIR_$(2))\" \\\n         $$(CTEST_TESTARGS)\n \n ifdef CFG_VALGRIND_RPASS"}, {"sha": "bee7936f158c5c10d45ec6e50fb9f91d41d85da4", "filename": "src/test/run-make/tools.mk", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e6418964b9fe8e3f49cf335adab6615c183ebdb5/src%2Ftest%2Frun-make%2Ftools.mk", "raw_url": "https://github.com/rust-lang/rust/raw/e6418964b9fe8e3f49cf335adab6615c183ebdb5/src%2Ftest%2Frun-make%2Ftools.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Ftools.mk?ref=e6418964b9fe8e3f49cf335adab6615c183ebdb5", "patch": "@@ -85,11 +85,6 @@ ifeq ($(UNAME),Bitrig)\n else\n ifeq ($(UNAME),OpenBSD)\n \tEXTRACFLAGS := -lm -lpthread\n-\t# extend search lib for found estdc++ if build using gcc from\n-\t# ports under OpenBSD. This is needed for:\n-\t#  - run-make/execution-engine\n-\t#  - run-make/issue-19371\n-\tRUSTC := $(RUSTC) -L/usr/local/lib\n else\n \tEXTRACFLAGS := -lm -lrt -ldl -lpthread\n \tEXTRACXXFLAGS := -lstdc++"}]}