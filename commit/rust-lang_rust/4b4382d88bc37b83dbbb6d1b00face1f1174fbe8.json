{"sha": "4b4382d88bc37b83dbbb6d1b00face1f1174fbe8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiNDM4MmQ4OGJjMzdiODNkYmJiNmQxYjAwZmFjZTFmMTE3NGZiZTg=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2021-05-20T14:15:56Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2021-05-21T14:16:53Z"}, "message": "Adjust self-type to require equality", "tree": {"sha": "799b70093ee3017abd1da61ff3f7e9ad3c260873", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/799b70093ee3017abd1da61ff3f7e9ad3c260873"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b4382d88bc37b83dbbb6d1b00face1f1174fbe8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b4382d88bc37b83dbbb6d1b00face1f1174fbe8", "html_url": "https://github.com/rust-lang/rust/commit/4b4382d88bc37b83dbbb6d1b00face1f1174fbe8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b4382d88bc37b83dbbb6d1b00face1f1174fbe8/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35bab923c8e5a1e8291735e7630539002eb80d7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/35bab923c8e5a1e8291735e7630539002eb80d7b", "html_url": "https://github.com/rust-lang/rust/commit/35bab923c8e5a1e8291735e7630539002eb80d7b"}], "stats": {"total": 54, "additions": 34, "deletions": 20}, "files": [{"sha": "96569ae0e772065b3970073611ec091125f99f7b", "filename": "compiler/rustc_typeck/src/check/fn_ctxt/_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4b4382d88bc37b83dbbb6d1b00face1f1174fbe8/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2F_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b4382d88bc37b83dbbb6d1b00face1f1174fbe8/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2F_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2F_impl.rs?ref=4b4382d88bc37b83dbbb6d1b00face1f1174fbe8", "patch": "@@ -1522,7 +1522,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             let ty = tcx.type_of(impl_def_id);\n \n             let impl_ty = self.instantiate_type_scheme(span, &substs, ty);\n-            match self.at(&self.misc(span), self.param_env).sup(impl_ty, self_ty) {\n+            match self.at(&self.misc(span), self.param_env).eq(impl_ty, self_ty) {\n                 Ok(ok) => self.register_infer_ok_obligations(ok),\n                 Err(_) => {\n                     self.tcx.sess.delay_span_bug("}, {"sha": "66e1e77c905e02e4b564f4200fd72fabde0dd8e5", "filename": "src/test/ui/suggestions/mut-borrow-needed-by-trait.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4b4382d88bc37b83dbbb6d1b00face1f1174fbe8/src%2Ftest%2Fui%2Fsuggestions%2Fmut-borrow-needed-by-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b4382d88bc37b83dbbb6d1b00face1f1174fbe8/src%2Ftest%2Fui%2Fsuggestions%2Fmut-borrow-needed-by-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fmut-borrow-needed-by-trait.rs?ref=4b4382d88bc37b83dbbb6d1b00face1f1174fbe8", "patch": "@@ -17,7 +17,6 @@ fn main() {\n     let fp = BufWriter::new(fp);\n     //~^ ERROR the trait bound `&dyn std::io::Write: std::io::Write` is not satisfied\n     //~| ERROR the trait bound `&dyn std::io::Write: std::io::Write` is not satisfied\n-    //~| ERROR the trait bound `&dyn std::io::Write: std::io::Write` is not satisfied\n \n     writeln!(fp, \"hello world\").unwrap(); //~ ERROR the method\n }"}, {"sha": "71b09d43612ea5915574615732dd6bc339c4b2b2", "filename": "src/test/ui/suggestions/mut-borrow-needed-by-trait.stderr", "status": "modified", "additions": 2, "deletions": 15, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/4b4382d88bc37b83dbbb6d1b00face1f1174fbe8/src%2Ftest%2Fui%2Fsuggestions%2Fmut-borrow-needed-by-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4b4382d88bc37b83dbbb6d1b00face1f1174fbe8/src%2Ftest%2Fui%2Fsuggestions%2Fmut-borrow-needed-by-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fmut-borrow-needed-by-trait.stderr?ref=4b4382d88bc37b83dbbb6d1b00face1f1174fbe8", "patch": "@@ -7,19 +7,6 @@ LL |     let fp = BufWriter::new(fp);\n    = note: `std::io::Write` is implemented for `&mut dyn std::io::Write`, but not for `&dyn std::io::Write`\n    = note: required by `BufWriter::<W>::new`\n \n-error[E0277]: the trait bound `&dyn std::io::Write: std::io::Write` is not satisfied\n-  --> $DIR/mut-borrow-needed-by-trait.rs:17:14\n-   |\n-LL |     let fp = BufWriter::new(fp);\n-   |              ^^^^^^^^^ the trait `std::io::Write` is not implemented for `&dyn std::io::Write`\n-   | \n-  ::: $SRC_DIR/std/src/io/buffered/bufwriter.rs:LL:COL\n-   |\n-LL | pub struct BufWriter<W: Write> {\n-   |                         ----- required by this bound in `BufWriter`\n-   |\n-   = note: `std::io::Write` is implemented for `&mut dyn std::io::Write`, but not for `&dyn std::io::Write`\n-\n error[E0277]: the trait bound `&dyn std::io::Write: std::io::Write` is not satisfied\n   --> $DIR/mut-borrow-needed-by-trait.rs:17:14\n    |\n@@ -34,7 +21,7 @@ LL | pub struct BufWriter<W: Write> {\n    = note: `std::io::Write` is implemented for `&mut dyn std::io::Write`, but not for `&dyn std::io::Write`\n \n error[E0599]: the method `write_fmt` exists for struct `BufWriter<&dyn std::io::Write>`, but its trait bounds were not satisfied\n-  --> $DIR/mut-borrow-needed-by-trait.rs:22:5\n+  --> $DIR/mut-borrow-needed-by-trait.rs:21:5\n    |\n LL |     writeln!(fp, \"hello world\").unwrap();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ method cannot be called on `BufWriter<&dyn std::io::Write>` due to unsatisfied trait bounds\n@@ -49,7 +36,7 @@ LL | pub struct BufWriter<W: Write> {\n            which is required by `BufWriter<&dyn std::io::Write>: std::io::Write`\n    = note: this error originates in the macro `writeln` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: aborting due to 4 previous errors\n+error: aborting due to 3 previous errors\n \n Some errors have detailed explanations: E0277, E0599.\n For more information about an error, try `rustc --explain E0277`."}, {"sha": "9c066a7bdb06ce09d79c07a4ac0d572fa0a652ff", "filename": "src/test/ui/wf/wf-static-method.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4b4382d88bc37b83dbbb6d1b00face1f1174fbe8/src%2Ftest%2Fui%2Fwf%2Fwf-static-method.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4b4382d88bc37b83dbbb6d1b00face1f1174fbe8/src%2Ftest%2Fui%2Fwf%2Fwf-static-method.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwf%2Fwf-static-method.nll.stderr?ref=4b4382d88bc37b83dbbb6d1b00face1f1174fbe8", "patch": "@@ -68,7 +68,7 @@ LL | fn inherent_evil<'a, 'b>(b: &'b u32) -> &'a u32 {\n    |                  --  -- lifetime `'b` defined here\n    |                  |\n    |                  lifetime `'a` defined here\n-LL |     <Evil>::inherent_evil(b) // bug? shouldn't this be an error\n+LL |     <Evil>::inherent_evil(b)\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ returning this value requires that `'b` must outlive `'a`\n    |\n    = help: consider adding the following bound: `'b: 'a`"}, {"sha": "6e805d61265ac18c7a92e9e1f236b0fae36a207b", "filename": "src/test/ui/wf/wf-static-method.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4b4382d88bc37b83dbbb6d1b00face1f1174fbe8/src%2Ftest%2Fui%2Fwf%2Fwf-static-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b4382d88bc37b83dbbb6d1b00face1f1174fbe8/src%2Ftest%2Fui%2Fwf%2Fwf-static-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwf%2Fwf-static-method.rs?ref=4b4382d88bc37b83dbbb6d1b00face1f1174fbe8", "patch": "@@ -47,7 +47,8 @@ fn indirect_evil<'a, 'b>(b: &'b u32) -> &'a u32 {\n }\n \n fn inherent_evil<'a, 'b>(b: &'b u32) -> &'a u32 {\n-    <Evil>::inherent_evil(b) // bug? shouldn't this be an error\n+    <Evil>::inherent_evil(b)\n+    //~^ ERROR cannot infer an appropriate lifetime\n }\n \n "}, {"sha": "c02a8fe4aaff62a532c7a3116db3a011b760c86c", "filename": "src/test/ui/wf/wf-static-method.stderr", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/4b4382d88bc37b83dbbb6d1b00face1f1174fbe8/src%2Ftest%2Fui%2Fwf%2Fwf-static-method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4b4382d88bc37b83dbbb6d1b00face1f1174fbe8/src%2Ftest%2Fui%2Fwf%2Fwf-static-method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwf%2Fwf-static-method.stderr?ref=4b4382d88bc37b83dbbb6d1b00face1f1174fbe8", "patch": "@@ -103,7 +103,34 @@ note: ...so that reference does not outlive borrowed content\n LL |     <IndirectEvil>::static_evil(b)\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 5 previous errors\n+error[E0495]: cannot infer an appropriate lifetime for lifetime parameter `'b` due to conflicting requirements\n+  --> $DIR/wf-static-method.rs:50:5\n+   |\n+LL |     <Evil>::inherent_evil(b)\n+   |     ^^^^^^^^^^^^^^^^^^^^^\n+   |\n+note: first, the lifetime cannot outlive the lifetime `'b` as defined on the function body at 49:22...\n+  --> $DIR/wf-static-method.rs:49:22\n+   |\n+LL | fn inherent_evil<'a, 'b>(b: &'b u32) -> &'a u32 {\n+   |                      ^^\n+note: ...so that reference does not outlive borrowed content\n+  --> $DIR/wf-static-method.rs:50:27\n+   |\n+LL |     <Evil>::inherent_evil(b)\n+   |                           ^\n+note: but, the lifetime must be valid for the lifetime `'a` as defined on the function body at 49:18...\n+  --> $DIR/wf-static-method.rs:49:18\n+   |\n+LL | fn inherent_evil<'a, 'b>(b: &'b u32) -> &'a u32 {\n+   |                  ^^\n+note: ...so that reference does not outlive borrowed content\n+  --> $DIR/wf-static-method.rs:50:5\n+   |\n+LL |     <Evil>::inherent_evil(b)\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 6 previous errors\n \n Some errors have detailed explanations: E0312, E0478, E0495.\n For more information about an error, try `rustc --explain E0312`."}]}