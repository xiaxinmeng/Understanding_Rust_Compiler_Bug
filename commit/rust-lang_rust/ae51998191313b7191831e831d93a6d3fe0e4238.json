{"sha": "ae51998191313b7191831e831d93a6d3fe0e4238", "node_id": "C_kwDOAAsO6NoAKGFlNTE5OTgxOTEzMTNiNzE5MTgzMWU4MzFkOTNhNmQzZmUwZTQyMzg", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-02T13:06:17Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-02T13:45:00Z"}, "message": "male libc.rs at least build on FreeBSD", "tree": {"sha": "65a64ff04f7279b74f855917000636d45c7882ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65a64ff04f7279b74f855917000636d45c7882ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae51998191313b7191831e831d93a6d3fe0e4238", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae51998191313b7191831e831d93a6d3fe0e4238", "html_url": "https://github.com/rust-lang/rust/commit/ae51998191313b7191831e831d93a6d3fe0e4238", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae51998191313b7191831e831d93a6d3fe0e4238/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98d20490f4dd104f684f52e33adbdbedc92ab720", "url": "https://api.github.com/repos/rust-lang/rust/commits/98d20490f4dd104f684f52e33adbdbedc92ab720", "html_url": "https://github.com/rust-lang/rust/commit/98d20490f4dd104f684f52e33adbdbedc92ab720"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "d08430a43260ad58eedd8bca747997f6b4af2259", "filename": "tests/pass/libc.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ae51998191313b7191831e831d93a6d3fe0e4238/tests%2Fpass%2Flibc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae51998191313b7191831e831d93a6d3fe0e4238/tests%2Fpass%2Flibc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Flibc.rs?ref=ae51998191313b7191831e831d93a6d3fe0e4238", "patch": "@@ -42,7 +42,7 @@ fn test_posix_fadvise() {\n     assert_eq!(result, 0);\n }\n \n-#[cfg(any(target_os = \"linux\", target_os = \"freebsd\"))]\n+#[cfg(any(target_os = \"linux\"))]\n fn test_sync_file_range() {\n     use std::fs::{remove_file, File};\n     use std::io::Write;\n@@ -208,7 +208,7 @@ fn test_rwlock_libc_static_initializer() {\n /// Test whether the `prctl` shim correctly sets the thread name.\n ///\n /// Note: `prctl` exists only on Linux.\n-#[cfg(any(target_os = \"linux\", target_os = \"freebsd\"))]\n+#[cfg(any(target_os = \"linux\"))]\n fn test_prctl_thread_name() {\n     use libc::c_long;\n     use std::ffi::CString;\n@@ -259,9 +259,9 @@ fn test_prctl_thread_name() {\n \n /// Tests whether each thread has its own `__errno_location`.\n fn test_thread_local_errno() {\n-    #[cfg(not(target_os = \"macos\"))]\n+    #[cfg(target_os = \"linux\")]\n     use libc::__errno_location;\n-    #[cfg(target_os = \"macos\")]\n+    #[cfg(any(target_os = \"macos\", target_os = \"freebsd\"))]\n     use libc::__error as __errno_location;\n \n     unsafe {\n@@ -278,7 +278,7 @@ fn test_thread_local_errno() {\n }\n \n /// Tests whether clock support exists at all\n-#[cfg(any(target_os = \"linux\", target_os = \"freebsd\"))]\n+#[cfg(any(target_os = \"linux\"))]\n fn test_clocks() {\n     let mut tp = std::mem::MaybeUninit::<libc::timespec>::uninit();\n     let is_error = unsafe { libc::clock_gettime(libc::CLOCK_REALTIME, tp.as_mut_ptr()) };\n@@ -317,22 +317,22 @@ fn main() {\n \n     test_posix_gettimeofday();\n \n-    #[cfg(any(target_os = \"linux\", target_os = \"freebsd\"))]\n+    #[cfg(any(target_os = \"linux\"))]\n     test_sync_file_range();\n \n     test_mutex_libc_init_recursive();\n     test_mutex_libc_init_normal();\n     test_mutex_libc_init_errorcheck();\n     test_rwlock_libc_static_initializer();\n \n-    #[cfg(any(target_os = \"linux\", target_os = \"freebsd\"))]\n+    #[cfg(any(target_os = \"linux\"))]\n     test_mutex_libc_static_initializer_recursive();\n \n-    #[cfg(any(target_os = \"linux\", target_os = \"freebsd\"))]\n+    #[cfg(any(target_os = \"linux\"))]\n     test_prctl_thread_name();\n \n     test_thread_local_errno();\n \n-    #[cfg(any(target_os = \"linux\", target_os = \"freebsd\"))]\n+    #[cfg(any(target_os = \"linux\"))]\n     test_clocks();\n }"}]}