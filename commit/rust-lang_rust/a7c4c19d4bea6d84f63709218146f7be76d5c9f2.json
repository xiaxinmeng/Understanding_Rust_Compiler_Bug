{"sha": "a7c4c19d4bea6d84f63709218146f7be76d5c9f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3YzRjMTlkNGJlYTZkODRmNjM3MDkyMTgxNDZmN2JlNzZkNWM5ZjI=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-06-28T20:06:43Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-06-28T20:07:52Z"}, "message": "add a predicate that determines whether a binop is lazy (and and or are lazy)", "tree": {"sha": "297c43cba0454e749f6d239e0117dcc3e0babaf2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/297c43cba0454e749f6d239e0117dcc3e0babaf2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7c4c19d4bea6d84f63709218146f7be76d5c9f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7c4c19d4bea6d84f63709218146f7be76d5c9f2", "html_url": "https://github.com/rust-lang/rust/commit/a7c4c19d4bea6d84f63709218146f7be76d5c9f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7c4c19d4bea6d84f63709218146f7be76d5c9f2/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5fc01caefed33c9633e8d26f4901f3e34a21f48", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5fc01caefed33c9633e8d26f4901f3e34a21f48", "html_url": "https://github.com/rust-lang/rust/commit/d5fc01caefed33c9633e8d26f4901f3e34a21f48"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "e36c033823825be73a61de90f05f1cc1ab734c59", "filename": "src/comp/front/ast.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a7c4c19d4bea6d84f63709218146f7be76d5c9f2/src%2Fcomp%2Ffront%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7c4c19d4bea6d84f63709218146f7be76d5c9f2/src%2Fcomp%2Ffront%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fast.rs?ref=a7c4c19d4bea6d84f63709218146f7be76d5c9f2", "patch": "@@ -173,6 +173,14 @@ fn binop_to_str(binop op) -> str {\n     }\n }\n \n+pred lazy_binop(binop b) -> bool {\n+    alt (b) {\n+        case (and) { true }\n+        case (or)  { true }\n+        case (_)   { false }\n+    }\n+}\n+\n tag unop { box(mutability); deref; not; neg; }\n \n fn unop_to_str(unop op) -> str {"}]}