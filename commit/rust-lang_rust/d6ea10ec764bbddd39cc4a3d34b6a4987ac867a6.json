{"sha": "d6ea10ec764bbddd39cc4a3d34b6a4987ac867a6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2ZWExMGVjNzY0YmJkZGQzOWNjNGEzZDM0YjZhNDk4N2FjODY3YTY=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-09-07T03:09:09Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-09-07T07:38:29Z"}, "message": "Add regression test.", "tree": {"sha": "0251c4130aa504b8b0d00c773729d82e748c66c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0251c4130aa504b8b0d00c773729d82e748c66c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6ea10ec764bbddd39cc4a3d34b6a4987ac867a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6ea10ec764bbddd39cc4a3d34b6a4987ac867a6", "html_url": "https://github.com/rust-lang/rust/commit/d6ea10ec764bbddd39cc4a3d34b6a4987ac867a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6ea10ec764bbddd39cc4a3d34b6a4987ac867a6/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f84d081a7e705da1f3e920801319424b53cfd8b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/f84d081a7e705da1f3e920801319424b53cfd8b0", "html_url": "https://github.com/rust-lang/rust/commit/f84d081a7e705da1f3e920801319424b53cfd8b0"}], "stats": {"total": 103, "additions": 103, "deletions": 0}, "files": [{"sha": "956f789dab839bce46b8c1a020a2571e6fdb40e5", "filename": "src/test/run-pass-fulldeps/auxiliary/custom_derive_partial_eq.rs", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/d6ea10ec764bbddd39cc4a3d34b6a4987ac867a6/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcustom_derive_partial_eq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6ea10ec764bbddd39cc4a3d34b6a4987ac867a6/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcustom_derive_partial_eq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcustom_derive_partial_eq.rs?ref=d6ea10ec764bbddd39cc4a3d34b6a4987ac867a6", "patch": "@@ -0,0 +1,81 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// force-host\n+\n+#![feature(plugin_registrar, rustc_private, item_like_imports)]\n+\n+extern crate syntax;\n+extern crate syntax_ext;\n+extern crate rustc_plugin;\n+\n+use syntax_ext::deriving;\n+use deriving::generic::*;\n+use deriving::generic::ty::*;\n+\n+use rustc_plugin::Registry;\n+use syntax::ast::*;\n+use syntax::codemap::Span;\n+use syntax::ext::base::*;\n+use syntax::ext::build::AstBuilder;\n+use syntax::parse::token::{intern, InternedString};\n+use syntax::ptr::P;\n+\n+#[plugin_registrar]\n+pub fn plugin_registrar(reg: &mut Registry) {\n+    reg.register_syntax_extension(intern(\"derive_CustomPartialEq\"),\n+                                  MultiDecorator(Box::new(expand_deriving_partial_eq)));\n+}\n+\n+fn expand_deriving_partial_eq(cx: &mut ExtCtxt, span: Span, mitem: &MetaItem, item: &Annotatable,\n+                              push: &mut FnMut(Annotatable)) {\n+    // structures are equal if all fields are equal, and non equal, if\n+    // any fields are not equal or if the enum variants are different\n+    fn cs_eq(cx: &mut ExtCtxt, span: Span, substr: &Substructure) -> P<Expr> {\n+        cs_fold(true,\n+                |cx, span, subexpr, self_f, other_fs| {\n+                    let other_f = (other_fs.len(), other_fs.get(0)).1.unwrap();\n+                    let eq = cx.expr_binary(span, BinOpKind::Eq, self_f, other_f.clone());\n+                    cx.expr_binary(span, BinOpKind::And, subexpr, eq)\n+                },\n+                cx.expr_bool(span, true),\n+                Box::new(|cx, span, _, _| cx.expr_bool(span, false)),\n+                cx,\n+                span,\n+                substr)\n+    }\n+\n+    let inline = cx.meta_word(span, InternedString::new(\"inline\"));\n+    let attrs = vec!(cx.attribute(span, inline));\n+    let methods = vec![MethodDef {\n+        name: \"eq\",\n+        generics: LifetimeBounds::empty(),\n+        explicit_self: borrowed_explicit_self(),\n+        args: vec!(borrowed_self()),\n+        ret_ty: Literal(deriving::generic::ty::Path::new_local(\"bool\")),\n+        attributes: attrs,\n+        is_unsafe: false,\n+        unify_fieldless_variants: true,\n+        combine_substructure: combine_substructure(Box::new(cs_eq)),\n+    }];\n+\n+    let trait_def = TraitDef {\n+        span: span,\n+        attributes: Vec::new(),\n+        path: deriving::generic::ty::Path::new(vec![\"std\", \"cmp\", \"PartialEq\"]),\n+        additional_bounds: Vec::new(),\n+        generics: LifetimeBounds::empty(),\n+        is_unsafe: false,\n+        supports_unions: false,\n+        methods: methods,\n+        associated_types: Vec::new(),\n+    };\n+    trait_def.expand(cx, mitem, item, push)\n+}"}, {"sha": "8cc7ab4219dc54a466d089eeb6470491246f3585", "filename": "src/test/run-pass-fulldeps/custom-derive-partial-eq.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/d6ea10ec764bbddd39cc4a3d34b6a4987ac867a6/src%2Ftest%2Frun-pass-fulldeps%2Fcustom-derive-partial-eq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6ea10ec764bbddd39cc4a3d34b6a4987ac867a6/src%2Ftest%2Frun-pass-fulldeps%2Fcustom-derive-partial-eq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fcustom-derive-partial-eq.rs?ref=d6ea10ec764bbddd39cc4a3d34b6a4987ac867a6", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:custom_derive_partial_eq.rs\n+// ignore-stage1\n+// ignore-pretty : (#23623) problems when  ending with // comments\n+\n+#![feature(plugin, custom_derive)]\n+#![plugin(custom_derive_partial_eq)]\n+#![allow(unused)]\n+\n+#[derive(CustomPartialEq)] // Check that this is not a stability error.\n+enum E { V1, V2 }\n+\n+fn main() {}"}]}