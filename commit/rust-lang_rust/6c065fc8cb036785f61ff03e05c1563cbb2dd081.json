{"sha": "6c065fc8cb036785f61ff03e05c1563cbb2dd081", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjMDY1ZmM4Y2IwMzY3ODVmNjFmZjAzZTA1YzE1NjNjYmIyZGQwODE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-02-17T19:35:12Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-02-17T19:35:12Z"}, "message": "Auto merge of #21774 - ejjeong:enable-test-for-android, r=alexcrichton\n\n- Now \"make check-stage2-T-aarch64-linux-android-H-x86_64-unknown-linux-gnu\" works (#21773)\r\n- Fix & enable debuginfo tests for android (#10381)\r\n- Fix & enable more tests for android (both for arm/aarch64)\r\n- Enable many already-pass tests on android (both for arm/aarch64)", "tree": {"sha": "9d5c813da4a4f24c177e10c9a38936fe0d014721", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d5c813da4a4f24c177e10c9a38936fe0d014721"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c065fc8cb036785f61ff03e05c1563cbb2dd081", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c065fc8cb036785f61ff03e05c1563cbb2dd081", "html_url": "https://github.com/rust-lang/rust/commit/6c065fc8cb036785f61ff03e05c1563cbb2dd081", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c065fc8cb036785f61ff03e05c1563cbb2dd081/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9aeea7cb7865a2b82e7102837daabbe549177ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9aeea7cb7865a2b82e7102837daabbe549177ea", "html_url": "https://github.com/rust-lang/rust/commit/f9aeea7cb7865a2b82e7102837daabbe549177ea"}, {"sha": "194d96e5c3b3bf069ff791813641b7d22f4f42e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/194d96e5c3b3bf069ff791813641b7d22f4f42e9", "html_url": "https://github.com/rust-lang/rust/commit/194d96e5c3b3bf069ff791813641b7d22f4f42e9"}], "stats": {"total": 247, "additions": 91, "deletions": 156}, "files": [{"sha": "8850cd778035f745b12b5d0df27eb9aedce045fc", "filename": "mk/install.mk", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/mk%2Finstall.mk", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/mk%2Finstall.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Finstall.mk?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -58,14 +58,13 @@ tmp/empty_dir:\n # Android runtime setup\n # FIXME: This probably belongs somewhere else\n \n-# target platform specific variables\n-# for arm-linux-androidabi\n+# target platform specific variables for android\n define DEF_ADB_DEVICE_STATUS\n CFG_ADB_DEVICE_STATUS=$(1)\n endef\n \n $(foreach target,$(CFG_TARGET), \\\n-  $(if $(findstring $(target),\"arm-linux-androideabi\"), \\\n+  $(if $(findstring android, $(target)), \\\n     $(if $(findstring adb,$(CFG_ADB)), \\\n       $(if $(findstring device,$(shell $(CFG_ADB) devices 2>/dev/null | grep -E '^[_A-Za-z0-9-]+[[:blank:]]+device')), \\\n         $(info install: install-runtime-target for $(target) enabled \\\n@@ -117,8 +116,11 @@ install-runtime-target-$(1)-cleanup:\n \t    $$(call ADB_SHELL,rm,$$(CFG_RUNTIME_PUSH_DIR)/$$(call CFG_LIB_GLOB_$(1),$$(crate)));)\n endef\n \n-$(eval $(call INSTALL_RUNTIME_TARGET_N,arm-linux-androideabi,$(CFG_BUILD)))\n-$(eval $(call INSTALL_RUNTIME_TARGET_CLEANUP_N,arm-linux-androideabi))\n+$(foreach target,$(CFG_TARGET), \\\n+ $(if $(findstring $(CFG_ADB_DEVICE_STATUS),\"true\"), \\\n+  $(eval $(call INSTALL_RUNTIME_TARGET_N,$(taget),$(CFG_BUILD))) \\\n+  $(eval $(call INSTALL_RUNTIME_TARGET_CLEANUP_N,$(target))) \\\n+  ))\n \n install-runtime-target: \\\n \tinstall-runtime-target-arm-linux-androideabi-cleanup \\"}, {"sha": "527485c502936607f41846d4e3e8e7dc118f051c", "filename": "mk/rt.mk", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/mk%2Frt.mk", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/mk%2Frt.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Frt.mk?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -139,9 +139,7 @@ ifeq ($$(CFG_WINDOWSY_$(1)), 1)\n   JEMALLOC_ARGS_$(1) := --enable-lazy-lock\n else ifeq ($(OSTYPE_$(1)), apple-ios)\n   JEMALLOC_ARGS_$(1) := --disable-tls\n-else ifeq ($(OSTYPE_$(1)), linux-androideabi)\n-  JEMALLOC_ARGS_$(1) := --disable-tls\n-else ifeq ($(OSTYPE_$(1)), linux-android)\n+else ifeq ($(findstring android, $(OSTYPE_$(1))), android)\n   JEMALLOC_ARGS_$(1) := --disable-tls\n endif\n "}, {"sha": "d85977243707445737d2b87b2c30747faf8a0d5d", "filename": "mk/tests.mk", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -107,14 +107,13 @@ endef\n $(foreach target,$(CFG_TARGET), \\\n   $(eval $(call DEF_TARGET_COMMANDS,$(target))))\n \n-# Target platform specific variables\n-# for arm-linux-androidabi\n+# Target platform specific variables for android\n define DEF_ADB_DEVICE_STATUS\n CFG_ADB_DEVICE_STATUS=$(1)\n endef\n \n $(foreach target,$(CFG_TARGET), \\\n-  $(if $(findstring $(target),\"arm-linux-androideabi\"), \\\n+  $(if $(findstring android, $(target)), \\\n     $(if $(findstring adb,$(CFG_ADB)), \\\n       $(if $(findstring device,$(shell $(CFG_ADB) devices 2>/dev/null | grep -E '^[:_A-Za-z0-9-]+[[:blank:]]+device')), \\\n         $(info check: android device attached) \\\n@@ -135,12 +134,14 @@ $(info check: android device test dir $(CFG_ADB_TEST_DIR) ready \\\n  $(shell $(CFG_ADB) remount 1>/dev/null) \\\n  $(shell $(CFG_ADB) shell rm -r $(CFG_ADB_TEST_DIR) >/dev/null) \\\n  $(shell $(CFG_ADB) shell mkdir $(CFG_ADB_TEST_DIR)) \\\n- $(shell $(CFG_ADB) shell mkdir $(CFG_ADB_TEST_DIR)/tmp) \\\n  $(shell $(CFG_ADB) push $(S)src/etc/adb_run_wrapper.sh $(CFG_ADB_TEST_DIR) 1>/dev/null) \\\n- $(foreach crate,$(TARGET_CRATES), \\\n-    $(shell $(CFG_ADB) push $(TLIB2_T_arm-linux-androideabi_H_$(CFG_BUILD))/$(call CFG_LIB_GLOB_arm-linux-androideabi,$(crate)) \\\n-                    $(CFG_ADB_TEST_DIR))) \\\n- )\n+ $(foreach target,$(CFG_TARGET), \\\n+  $(if $(findstring android, $(target)), \\\n+   $(shell $(CFG_ADB) shell mkdir $(CFG_ADB_TEST_DIR)/$(target)) \\\n+   $(foreach crate,$(TARGET_CRATES), \\\n+    $(shell $(CFG_ADB) push $(TLIB2_T_$(target)_H_$(CFG_BUILD))/$(call CFG_LIB_GLOB_$(target),$(crate)) \\\n+                    $(CFG_ADB_TEST_DIR)/$(target))), \\\n+ )))\n else\n CFG_ADB_TEST_DIR=\n endif\n@@ -393,14 +394,14 @@ $$(call TEST_OK_FILE,$(1),$(2),$(3),$(4)): \\\n \t    && touch $$@\n endef\n \n-define DEF_TEST_CRATE_RULES_arm-linux-androideabi\n+define DEF_TEST_CRATE_RULES_android\n check-stage$(1)-T-$(2)-H-$(3)-$(4)-exec: $$(call TEST_OK_FILE,$(1),$(2),$(3),$(4))\n \n $$(call TEST_OK_FILE,$(1),$(2),$(3),$(4)): \\\n \t\t$(3)/stage$(1)/test/$(4)test-$(2)$$(X_$(2))\n \t@$$(call E, run: $$< via adb)\n \t$$(Q)$(CFG_ADB) push $$< $(CFG_ADB_TEST_DIR)\n-\t$$(Q)$(CFG_ADB) shell '(cd $(CFG_ADB_TEST_DIR); LD_LIBRARY_PATH=. \\\n+\t$$(Q)$(CFG_ADB) shell '(cd $(CFG_ADB_TEST_DIR); LD_LIBRARY_PATH=./$(2) \\\n \t\t./$$(notdir $$<) \\\n \t\t--logfile $(CFG_ADB_TEST_DIR)/check-stage$(1)-T-$(2)-H-$(3)-$(4).log \\\n \t\t$$(call CRATE_TEST_EXTRA_ARGS,$(1),$(2),$(3),$(4)) $(TESTARGS))' \\\n@@ -434,9 +435,9 @@ $(foreach host,$(CFG_HOST), \\\n    $(foreach crate, $(TEST_CRATES), \\\n     $(if $(findstring $(target),$(CFG_BUILD)), \\\n      $(eval $(call DEF_TEST_CRATE_RULES,$(stage),$(target),$(host),$(crate))), \\\n-     $(if $(findstring $(target),\"arm-linux-androideabi\"), \\\n+     $(if $(findstring android, $(target)), \\\n       $(if $(findstring $(CFG_ADB_DEVICE_STATUS),\"true\"), \\\n-       $(eval $(call DEF_TEST_CRATE_RULES_arm-linux-androideabi,$(stage),$(target),$(host),$(crate))), \\\n+       $(eval $(call DEF_TEST_CRATE_RULES_android,$(stage),$(target),$(host),$(crate))), \\\n        $(eval $(call DEF_TEST_CRATE_RULES_null,$(stage),$(target),$(host),$(crate))) \\\n       ), \\\n       $(eval $(call DEF_TEST_CRATE_RULES,$(stage),$(target),$(host),$(crate))) \\"}, {"sha": "6c1308a01c4a1ca59d698299824bc8372977be71", "filename": "src/compiletest/compiletest.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Fcompiletest%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Fcompiletest%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fcompiletest.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -153,12 +153,12 @@ pub fn parse_config(args: Vec<String> ) -> Config {\n         lldb_version: extract_lldb_version(matches.opt_str(\"lldb-version\")),\n         android_cross_path: opt_path(matches, \"android-cross-path\"),\n         adb_path: opt_str2(matches.opt_str(\"adb-path\")),\n-        adb_test_dir: opt_str2(matches.opt_str(\"adb-test-dir\")),\n+        adb_test_dir: format!(\"{}/{}\",\n+            opt_str2(matches.opt_str(\"adb-test-dir\")),\n+            opt_str2(matches.opt_str(\"target\"))),\n         adb_device_status:\n-            \"arm-linux-androideabi\" ==\n-                opt_str2(matches.opt_str(\"target\")) &&\n-            \"(none)\" !=\n-                opt_str2(matches.opt_str(\"adb-test-dir\")) &&\n+            opt_str2(matches.opt_str(\"target\")).contains(\"android\") &&\n+            \"(none)\" != opt_str2(matches.opt_str(\"adb-test-dir\")) &&\n             !opt_str2(matches.opt_str(\"adb-test-dir\")).is_empty(),\n         lldb_python_dir: matches.opt_str(\"lldb-python-dir\"),\n         verbose: matches.opt_present(\"verbose\"),\n@@ -213,17 +213,17 @@ pub fn opt_str2(maybestr: Option<String>) -> String {\n }\n \n pub fn run_tests(config: &Config) {\n-    if config.target == \"arm-linux-androideabi\" {\n+    if config.target.contains(\"android\") {\n         match config.mode {\n             DebugInfoGdb => {\n-                println!(\"arm-linux-androideabi debug-info \\\n-                         test uses tcp 5039 port. please reserve it\");\n+                println!(\"{} debug-info test uses tcp 5039 port.\\\n+                         please reserve it\", config.target);\n             }\n             _ =>{}\n         }\n \n-        //arm-linux-androideabi debug-info test uses remote debugger\n-        //so, we test 1 task at once.\n+        // android debug-info test uses remote debugger\n+        // so, we test 1 task at once.\n         // also trying to isolate problems with adb_run_wrapper.sh ilooping\n         env::set_var(\"RUST_TEST_TASKS\",\"1\");\n     }"}, {"sha": "54c011832d1dc93d5d5266c7f48b64bd17c5bf7c", "filename": "src/compiletest/runtest.rs", "status": "modified", "additions": 30, "deletions": 17, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fruntest.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -42,7 +42,7 @@ use test::MetricMap;\n pub fn run(config: Config, testfile: String) {\n     match &*config.target {\n \n-        \"arm-linux-androideabi\" => {\n+        \"arm-linux-androideabi\" | \"aarch64-linux-android\" => {\n             if !config.adb_device_status {\n                 panic!(\"android device not available\");\n             }\n@@ -382,17 +382,26 @@ fn run_debuginfo_gdb_test(config: &Config, props: &TestProps, testfile: &Path) {\n \n     let debugger_run_result;\n     match &*config.target {\n-        \"arm-linux-androideabi\" => {\n+        \"arm-linux-androideabi\" | \"aarch64-linux-android\" => {\n \n-            cmds = cmds.replace(\"run\", \"continue\").to_string();\n+            cmds = cmds.replace(\"run\", \"continue\");\n \n             // write debugger script\n-            let script_str = [\"set charset UTF-8\".to_string(),\n-                              format!(\"file {}\", exe_file.as_str().unwrap()\n-                                                         .to_string()),\n-                              \"target remote :5039\".to_string(),\n-                              cmds,\n-                              \"quit\".to_string()].connect(\"\\n\");\n+            let mut script_str = String::with_capacity(2048);\n+            script_str.push_str(\"set charset UTF-8\\n\");\n+            script_str.push_str(&format!(\"file {}\\n\", exe_file.as_str().unwrap()));\n+            script_str.push_str(\"target remote :5039\\n\");\n+            script_str.push_str(&format!(\"set solib-search-path \\\n+                                         ./{}/stage2/lib/rustlib/{}/lib/\\n\",\n+                                         config.host, config.target));\n+            for line in breakpoint_lines.iter() {\n+                script_str.push_str(&format!(\"break {:?}:{}\\n\",\n+                                             testfile.filename_display(),\n+                                             *line)[]);\n+            }\n+            script_str.push_str(&cmds);\n+            script_str.push_str(\"quit\\n\");\n+\n             debug!(\"script_str = {}\", script_str);\n             dump_output_file(config,\n                              testfile,\n@@ -425,8 +434,10 @@ fn run_debuginfo_gdb_test(config: &Config, props: &TestProps, testfile: &Path) {\n                 .expect(&format!(\"failed to exec `{:?}`\", config.adb_path));\n \n             let adb_arg = format!(\"export LD_LIBRARY_PATH={}; \\\n-                                   gdbserver :5039 {}/{}\",\n+                                   gdbserver{} :5039 {}/{}\",\n                                   config.adb_test_dir.clone(),\n+                                  if config.target.contains(\"aarch64\")\n+                                  {\"64\"} else {\"\"},\n                                   config.adb_test_dir.clone(),\n                                   str::from_utf8(\n                                       exe_file.filename()\n@@ -470,7 +481,7 @@ fn run_debuginfo_gdb_test(config: &Config, props: &TestProps, testfile: &Path) {\n                      format!(\"-command={}\", debugger_script.as_str().unwrap()));\n \n             let mut gdb_path = tool_path;\n-            gdb_path.push_str(\"/bin/arm-linux-androideabi-gdb\");\n+            gdb_path.push_str(&format!(\"/bin/{}-gdb\", config.target));\n             let procsrv::Result {\n                 out,\n                 err,\n@@ -484,7 +495,7 @@ fn run_debuginfo_gdb_test(config: &Config, props: &TestProps, testfile: &Path) {\n                 .expect(&format!(\"failed to exec `{:?}`\", gdb_path));\n             let cmdline = {\n                 let cmdline = make_cmdline(\"\",\n-                                           \"arm-linux-androideabi-gdb\",\n+                                           &format!(\"{}-gdb\", config.target),\n                                            &debugger_opts);\n                 logv(config, format!(\"executing {}\", cmdline));\n                 cmdline\n@@ -496,7 +507,9 @@ fn run_debuginfo_gdb_test(config: &Config, props: &TestProps, testfile: &Path) {\n                 stderr: err,\n                 cmdline: cmdline\n             };\n-            process.signal_kill().unwrap();\n+            if process.signal_kill().is_err() {\n+                println!(\"Adb process is already finished.\");\n+            }\n         }\n \n         _=> {\n@@ -1135,7 +1148,7 @@ fn exec_compiled_test(config: &Config, props: &TestProps,\n \n     match &*config.target {\n \n-        \"arm-linux-androideabi\" => {\n+        \"arm-linux-androideabi\" | \"aarch64-linux-android\" => {\n             _arm_exec_compiled_test(config, props, testfile, env)\n         }\n \n@@ -1200,7 +1213,7 @@ fn compose_and_run_compiler(\n         }\n \n         match &*config.target {\n-            \"arm-linux-androideabi\" => {\n+            \"arm-linux-androideabi\"  | \"aarch64-linux-android\" => {\n                 _arm_push_aux_shared_library(config, testfile);\n             }\n             _ => {}\n@@ -1499,7 +1512,7 @@ fn _arm_exec_compiled_test(config: &Config,\n     for (key, val) in env {\n         runargs.push(format!(\"{}={}\", key, val));\n     }\n-    runargs.push(format!(\"{}/adb_run_wrapper.sh\", config.adb_test_dir));\n+    runargs.push(format!(\"{}/../adb_run_wrapper.sh\", config.adb_test_dir));\n     runargs.push(format!(\"{}\", config.adb_test_dir));\n     runargs.push(format!(\"{}\", prog_short));\n \n@@ -1595,7 +1608,7 @@ fn _arm_push_aux_shared_library(config: &Config, testfile: &Path) {\n                                             file.as_str()\n                                                 .unwrap()\n                                                 .to_string(),\n-                                            config.adb_test_dir.to_string()\n+                                            config.adb_test_dir.to_string(),\n                                            ],\n                                            vec!((\"\".to_string(),\n                                                  \"\".to_string())),"}, {"sha": "bd6c483156f8125df69f0f2753b0dbf5eed15487", "filename": "src/etc/adb_run_wrapper.sh", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Fetc%2Fadb_run_wrapper.sh", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Fetc%2Fadb_run_wrapper.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fadb_run_wrapper.sh?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -24,8 +24,9 @@ then\n     then\n         shift\n \n+        # The length of binary path (i.e. ./$RUN) should be shorter than 128 characters.\n         cd $TEST_PATH\n-        TEST_EXEC_ENV=22 LD_LIBRARY_PATH=$TEST_PATH PATH=$BIN_PATH:$TEST_PATH $TEST_PATH/$RUN $@ 1>$TEST_PATH/$RUN.stdout 2>$TEST_PATH/$RUN.stderr\n+        TEST_EXEC_ENV=22 LD_LIBRARY_PATH=$TEST_PATH PATH=$BIN_PATH:$TEST_PATH ./$RUN $@ 1>$TEST_PATH/$RUN.stdout 2>$TEST_PATH/$RUN.stderr\n         L_RET=$?\n \n         echo $L_RET > $TEST_PATH/$RUN.exitcode"}, {"sha": "e42b6c9c356d75296ef9590c60695ce57c271a14", "filename": "src/liblibc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Fliblibc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Fliblibc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblibc%2Flib.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -5473,6 +5473,7 @@ pub mod funcs {\n         use types::os::arch::c95::{c_uchar, c_int, size_t};\n \n         extern {\n+            #[cfg(not(all(target_os = \"android\", target_arch = \"aarch64\")))]\n             pub fn getdtablesize() -> c_int;\n             pub fn ioctl(d: c_int, request: c_int, ...) -> c_int;\n             pub fn madvise(addr: *mut c_void, len: size_t, advice: c_int)"}, {"sha": "64b0e0cfd6baca44462cd6b733329580aaf1c277", "filename": "src/librustc_back/target/aarch64_linux_android.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Flibrustc_back%2Ftarget%2Faarch64_linux_android.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Flibrustc_back%2Ftarget%2Faarch64_linux_android.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Faarch64_linux_android.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -13,6 +13,7 @@ use target::Target;\n pub fn target() -> Target {\n     let mut base = super::linux_base::opts();\n     base.pre_link_args.push(\"-Wl,--allow-multiple-definition\".to_string());\n+    base.is_like_android = true;\n     base.position_independent_executables = true;\n     Target {\n         data_layout: \"e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-\\"}, {"sha": "fad9344143155628ee92b56fdda2ff0819dfd8af", "filename": "src/librustc_back/target/arm_linux_androideabi.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Flibrustc_back%2Ftarget%2Farm_linux_androideabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Flibrustc_back%2Ftarget%2Farm_linux_androideabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Farm_linux_androideabi.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -16,6 +16,7 @@ pub fn target() -> Target {\n     // Many of the symbols defined in compiler-rt are also defined in libgcc.  Android\n     // linker doesn't like that by default.\n     base.pre_link_args.push(\"-Wl,--allow-multiple-definition\".to_string());\n+    base.is_like_android = true;\n     // FIXME #17437 (and #17448): Android doesn't support position dependent executables anymore.\n     base.position_independent_executables = false;\n "}, {"sha": "2a4f5b00e9307f704d0fb217cd962c6248dc0768", "filename": "src/librustc_back/target/mod.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmod.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -158,6 +158,9 @@ pub struct TargetOptions {\n     /// only realy used for figuring out how to find libraries, since Windows uses its own\n     /// library naming convention. Defaults to false.\n     pub is_like_windows: bool,\n+    /// Whether the target toolchain is like Android's. Only useful for compiling against Android.\n+    /// Defaults to false.\n+    pub is_like_android: bool,\n     /// Whether the linker support GNU-like arguments such as -O. Defaults to false.\n     pub linker_is_gnu: bool,\n     /// Whether the linker support rpaths or not. Defaults to false.\n@@ -197,6 +200,7 @@ impl Default for TargetOptions {\n             staticlib_suffix: \".a\".to_string(),\n             is_like_osx: false,\n             is_like_windows: false,\n+            is_like_android: false,\n             linker_is_gnu: false,\n             has_rpath: false,\n             no_compiler_rt: false,\n@@ -345,11 +349,13 @@ impl Target {\n             mips_unknown_linux_gnu,\n             mipsel_unknown_linux_gnu,\n             powerpc_unknown_linux_gnu,\n-            arm_linux_androideabi,\n             arm_unknown_linux_gnueabi,\n             arm_unknown_linux_gnueabihf,\n             aarch64_unknown_linux_gnu,\n \n+            arm_linux_androideabi,\n+            aarch64_linux_android,\n+\n             x86_64_unknown_freebsd,\n \n             i686_unknown_dragonfly,\n@@ -363,7 +369,6 @@ impl Target {\n             i386_apple_ios,\n             x86_64_apple_ios,\n             aarch64_apple_ios,\n-            aarch64_linux_android,\n             armv7_apple_ios,\n             armv7s_apple_ios,\n "}, {"sha": "23498089c5839cc2aad225b5acbb7f99ff5aa853", "filename": "src/librustc_trans/trans/debuginfo.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Flibrustc_trans%2Ftrans%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Flibrustc_trans%2Ftrans%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fdebuginfo.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -736,7 +736,9 @@ pub fn finalize(cx: &CrateContext) {\n         // instruct LLVM to emit an older version of dwarf, however,\n         // for OS X to understand. For more info see #11352\n         // This can be overridden using --llvm-opts -dwarf-version,N.\n-        if cx.sess().target.target.options.is_like_osx {\n+        // Android has the same issue (#22398)\n+        if cx.sess().target.target.options.is_like_osx ||\n+           cx.sess().target.target.options.is_like_android {\n             llvm::LLVMRustAddModuleFlag(cx.llmod(),\n                                         \"Dwarf Version\\0\".as_ptr() as *const _,\n                                         2)"}, {"sha": "f954024b0e9e3450f8461da4a1f7a9e2da918098", "filename": "src/libstd/sys/unix/process.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -70,14 +70,22 @@ impl Process {\n               K: BytesContainer + Eq + Hash<Hasher>, V: BytesContainer\n     {\n         use libc::funcs::posix88::unistd::{fork, dup2, close, chdir, execvp};\n-        use libc::funcs::bsd44::getdtablesize;\n \n         mod rustrt {\n             extern {\n                 pub fn rust_unset_sigprocmask();\n             }\n         }\n \n+        #[cfg(all(target_os = \"android\", target_arch = \"aarch64\"))]\n+        unsafe fn getdtablesize() -> c_int {\n+            libc::sysconf(libc::consts::os::sysconf::_SC_OPEN_MAX) as c_int\n+        }\n+        #[cfg(not(all(target_os = \"android\", target_arch = \"aarch64\")))]\n+        unsafe fn getdtablesize() -> c_int {\n+            libc::funcs::bsd44::getdtablesize()\n+        }\n+\n         unsafe fn set_cloexec(fd: c_int) {\n             let ret = c::ioctl(fd, c::FIOCLEX);\n             assert_eq!(ret, 0);"}, {"sha": "fd1deffb59d4da94a3f81b8253ee63752b1cb0fc", "filename": "src/test/compile-fail-fulldeps/macro-crate-cannot-read-embedded-ident.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fcompile-fail-fulldeps%2Fmacro-crate-cannot-read-embedded-ident.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fcompile-fail-fulldeps%2Fmacro-crate-cannot-read-embedded-ident.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fmacro-crate-cannot-read-embedded-ident.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -10,7 +10,6 @@\n \n // aux-build:macro_crate_test.rs\n // ignore-stage1\n-// ignore-android\n // error-pattern: unknown start of token: \\u{0}\n \n // Issue #15750 and #15962 : this test is checking that the standard"}, {"sha": "361840a1618e7b014e6824bb5f676ec1d4d4376a", "filename": "src/test/compile-fail-fulldeps/macro-crate-doesnt-resolve.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fcompile-fail-fulldeps%2Fmacro-crate-doesnt-resolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fcompile-fail-fulldeps%2Fmacro-crate-doesnt-resolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fmacro-crate-doesnt-resolve.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -10,7 +10,6 @@\n \n // aux-build:macro_crate_test.rs\n // ignore-stage1\n-// ignore-android\n \n #[macro_use] #[no_link]\n extern crate macro_crate_test;"}, {"sha": "ba8e20069c1964db8aa1190646157d87ddfff233", "filename": "src/test/compile-fail-fulldeps/macro-crate-unexported-macro.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fcompile-fail-fulldeps%2Fmacro-crate-unexported-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fcompile-fail-fulldeps%2Fmacro-crate-unexported-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fmacro-crate-unexported-macro.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -10,7 +10,6 @@\n \n // aux-build:macro_crate_test.rs\n // ignore-stage1\n-// ignore-android\n \n #[macro_use] #[no_link]\n extern crate macro_crate_test;"}, {"sha": "e13ddd13f5d993f29eaee1015b82c1509a59d013", "filename": "src/test/compile-fail-fulldeps/plugin-MacroRulesTT.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fcompile-fail-fulldeps%2Fplugin-MacroRulesTT.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fcompile-fail-fulldeps%2Fplugin-MacroRulesTT.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fplugin-MacroRulesTT.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -10,7 +10,6 @@\n \n // aux-build:macro_crate_MacroRulesTT.rs\n // ignore-stage1\n-// ignore-android\n // error-pattern: plugin tried to register a new MacroRulesTT\n \n #![feature(plugin)]"}, {"sha": "26117e7a13b6f2f1666499e755c988011375de16", "filename": "src/test/debuginfo/associated-types.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fassociated-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fassociated-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fassociated-types.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "30a70fe0b374703633a9a4bd9c2cd25701b27a92", "filename": "src/test/debuginfo/basic-types-globals-metadata.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fbasic-types-globals-metadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fbasic-types-globals-metadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fbasic-types-globals-metadata.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "cb89879481bcdc4b5e844581d3aa15ce5148cce8", "filename": "src/test/debuginfo/basic-types-globals.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fbasic-types-globals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fbasic-types-globals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fbasic-types-globals.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -14,7 +14,6 @@\n // about UTF-32 character encoding and will print a rust char as only\n // its numerical value.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "0134a058c992bd717f3cfe80db21801879559bf2", "filename": "src/test/debuginfo/basic-types-metadata.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fbasic-types-metadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fbasic-types-metadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fbasic-types-metadata.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "7f82878e080ce1c6fe4d0faff181596d4f2e0eab", "filename": "src/test/debuginfo/basic-types-mut-globals.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fbasic-types-mut-globals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fbasic-types-mut-globals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fbasic-types-mut-globals.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -14,7 +14,6 @@\n // about UTF-32 character encoding and will print a rust char as only\n // its numerical value.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "95483c16783cc8a97679662d4d98c6ac8d7fd831", "filename": "src/test/debuginfo/basic-types.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fbasic-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fbasic-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fbasic-types.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -14,7 +14,6 @@\n // about UTF-32 character encoding and will print a rust char as only\n // its numerical value.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "52e81b7e046a561723be6f5800eb29b9d2a2ee98", "filename": "src/test/debuginfo/borrowed-basic.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fborrowed-basic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fborrowed-basic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fborrowed-basic.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n \n // Gdb doesn't know about UTF-32 character encoding and will print a rust char as only\n // its numerical value."}, {"sha": "ecc70f4d77e2ff4afdd460869797a354af30dc93", "filename": "src/test/debuginfo/borrowed-c-style-enum.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fborrowed-c-style-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fborrowed-c-style-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fborrowed-c-style-enum.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n // min-lldb-version: 310"}, {"sha": "87e9e7fe2da6fc785834174f9b443de6ef986906", "filename": "src/test/debuginfo/borrowed-enum.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fborrowed-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fborrowed-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fborrowed-enum.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // ignore-tidy-linelength\n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "2cfc6855e5bc6c9e4b4e08d8a38c4250ad261026", "filename": "src/test/debuginfo/borrowed-struct.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fborrowed-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fborrowed-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fborrowed-struct.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // compile-flags:-g\n // min-lldb-version: 310\n "}, {"sha": "768bcc9fc3f8011b497aa63d89057e3355f631cc", "filename": "src/test/debuginfo/borrowed-tuple.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fborrowed-tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fborrowed-tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fborrowed-tuple.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "14a3d008f420db9e090e8a1b5bd07c6d5d7a9139", "filename": "src/test/debuginfo/borrowed-unique-basic.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fborrowed-unique-basic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fborrowed-unique-basic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fborrowed-unique-basic.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // Gdb doesn't know about UTF-32 character encoding and will print a rust char as only"}, {"sha": "0689a6bc45b683cae489f536b21750db594d35f2", "filename": "src/test/debuginfo/box.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fbox.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fbox.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fbox.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "972d6ab12e13fea6c3049e0041a2eaf66f39e9b3", "filename": "src/test/debuginfo/boxed-struct.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fboxed-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fboxed-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fboxed-struct.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "3efda1e2f6aa84f0deb2862595b8074132dfc16d", "filename": "src/test/debuginfo/by-value-non-immediate-argument.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fby-value-non-immediate-argument.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fby-value-non-immediate-argument.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fby-value-non-immediate-argument.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // ignore-tidy-linelength\n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "2b2a9bf83f1428854a775a0e1178913890393a89", "filename": "src/test/debuginfo/by-value-self-argument-in-trait-impl.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fby-value-self-argument-in-trait-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fby-value-self-argument-in-trait-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fby-value-self-argument-in-trait-impl.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "c7a4daa42fa8094b96d7a067d8b2910c8e40b8d7", "filename": "src/test/debuginfo/c-style-enum-in-composite.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fc-style-enum-in-composite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fc-style-enum-in-composite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fc-style-enum-in-composite.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // ignore-tidy-linelength\n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "2305d7bc5c245039cc603c631ca2ddf6107d1807", "filename": "src/test/debuginfo/c-style-enum.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fc-style-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fc-style-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fc-style-enum.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "b92f5de21b5753d0b815d0db6022ae61c04a0f7d", "filename": "src/test/debuginfo/closure-in-generic-function.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fclosure-in-generic-function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fclosure-in-generic-function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fclosure-in-generic-function.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "47365b2b9a0f3eea65898b3829604a682c5b997b", "filename": "src/test/debuginfo/cross-crate-type-uniquing.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fcross-crate-type-uniquing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fcross-crate-type-uniquing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fcross-crate-type-uniquing.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // aux-build:cross_crate_debuginfo_type_uniquing.rs"}, {"sha": "51cced204398f45ef99d996e31dd94cb55ffe014", "filename": "src/test/debuginfo/destructured-fn-argument.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fdestructured-fn-argument.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fdestructured-fn-argument.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fdestructured-fn-argument.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "9f0492f35a344bb4788693d68aceb14d62bc3384", "filename": "src/test/debuginfo/destructured-for-loop-variable.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fdestructured-for-loop-variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fdestructured-for-loop-variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fdestructured-for-loop-variable.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "cf0ca0b67a7b4db57364314f531531bb268a087e", "filename": "src/test/debuginfo/destructured-local.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fdestructured-local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fdestructured-local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fdestructured-local.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "1a9b9f73cba999964d61e3cec3b998a57047219c", "filename": "src/test/debuginfo/evec-in-struct.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fevec-in-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fevec-in-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fevec-in-struct.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "9eadf3cc19b928175253d196ccd6bd57a8fb77f7", "filename": "src/test/debuginfo/function-arg-initialization.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Ffunction-arg-initialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Ffunction-arg-initialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ffunction-arg-initialization.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // This test case checks if function arguments already have the correct value when breaking at the"}, {"sha": "2ab3668abb9dd5ec256024fd1350ac368fdc8cad", "filename": "src/test/debuginfo/function-arguments.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Ffunction-arguments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Ffunction-arguments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ffunction-arguments.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "76b7a3e729d2e0035932e11f17e677e57d081818", "filename": "src/test/debuginfo/generic-function.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fgeneric-function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fgeneric-function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fgeneric-function.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "5f9236038b22eb16aec03d49c10aefdebfa2bceb", "filename": "src/test/debuginfo/generic-functions-nested.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fgeneric-functions-nested.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fgeneric-functions-nested.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fgeneric-functions-nested.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "8c4eeb27c0f6d5b69c2aefd6e1b10d54233168ed", "filename": "src/test/debuginfo/generic-method-on-generic-struct.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fgeneric-method-on-generic-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fgeneric-method-on-generic-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fgeneric-method-on-generic-struct.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n // min-lldb-version: 310"}, {"sha": "eb1083f624faaca834221eb4fbf7b76f8cb1b171", "filename": "src/test/debuginfo/generic-static-method-on-struct-and-enum.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fgeneric-static-method-on-struct-and-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fgeneric-static-method-on-struct-and-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fgeneric-static-method-on-struct-and-enum.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "455861b1ea1eba65626afb29cd4449506677aaea", "filename": "src/test/debuginfo/generic-struct-style-enum.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fgeneric-struct-style-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fgeneric-struct-style-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fgeneric-struct-style-enum.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // ignore-tidy-linelength\n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "15982f309c6bbf9c96e93f93edeac81e4516ad6a", "filename": "src/test/debuginfo/generic-struct.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fgeneric-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fgeneric-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fgeneric-struct.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // ignore-tidy-linelength\n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "da62e335557a20093d0f50ecc4514da6f84916ff", "filename": "src/test/debuginfo/generic-tuple-style-enum.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fgeneric-tuple-style-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fgeneric-tuple-style-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fgeneric-tuple-style-enum.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // ignore-tidy-linelength\n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "1dead6c2734f886e82c502029aa7b8d6a44e2760", "filename": "src/test/debuginfo/include_string.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Finclude_string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Finclude_string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Finclude_string.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "e93704cac34c2ef842ef86987653fa61aa566f2e", "filename": "src/test/debuginfo/issue11600.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fissue11600.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fissue11600.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fissue11600.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -17,7 +17,6 @@ fn main() {\n     ::std::io::println(args[0]);\n }\n \n-// ignore-android: FIXME(#10381)\n // ignore-lldb\n \n // This test case checks whether compile unit names are set correctly, so that the correct default"}, {"sha": "424ba50e3c97836da80f1dbaae9e0a2386de9bdc", "filename": "src/test/debuginfo/issue12886.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fissue12886.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fissue12886.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fissue12886.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,15 +8,14 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // ignore-windows failing on 64-bit bots FIXME #17638\n // ignore-lldb\n \n // compile-flags:-g\n \n // gdb-command:run\n // gdb-command:next\n-// gdb-check:[...]34[...]s\n+// gdb-check:[...]33[...]s\n // gdb-command:continue\n \n #![omit_gdb_pretty_printer_section]"}, {"sha": "a079ddbd0f507e7c1ab1d09340c8644c7a0239e8", "filename": "src/test/debuginfo/issue13213.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fissue13213.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fissue13213.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fissue13213.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // aux-build:issue13213aux.rs"}, {"sha": "3b2d372117d006b11ad6d87327e0aad6231f2386", "filename": "src/test/debuginfo/issue14411.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fissue14411.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fissue14411.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fissue14411.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "dceb436310fa3a3d0aded48d7f3ac49e1b2494bf", "filename": "src/test/debuginfo/lexical-scope-in-for-loop.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-for-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-for-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-for-loop.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "08a762fc4e5d8bd4af196ee2557affc0dbfad190", "filename": "src/test/debuginfo/lexical-scope-in-if.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-if.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "c2cddd25768598f67910ee7883feba7a70c6b1f3", "filename": "src/test/debuginfo/lexical-scope-in-match.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-match.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "374df2f094ab6fefeb0af2f22a659613783b17a1", "filename": "src/test/debuginfo/lexical-scope-in-parameterless-closure.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-parameterless-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-parameterless-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-parameterless-closure.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-C debuginfo=1"}, {"sha": "6a909ced818ef53cb4be353c8d827eb11782d126", "filename": "src/test/debuginfo/lexical-scope-in-stack-closure.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-stack-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-stack-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-stack-closure.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "868cea29a7bc3d4ebb7ca3b6f7d41dc36d97db61", "filename": "src/test/debuginfo/lexical-scope-in-unconditional-loop.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-unconditional-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-unconditional-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-unconditional-loop.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "c0a5a31c9ce38e1237ff0b57c3e1bc329ae6d466", "filename": "src/test/debuginfo/lexical-scope-in-unique-closure.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-unique-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-unique-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-unique-closure.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "b5f43e7d21f1a1f6b928ac75ba9523c95ec2f730", "filename": "src/test/debuginfo/lexical-scope-in-while.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-while.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-while.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Flexical-scope-in-while.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "1dd738c6d512e8b410738c4c69f04b5c74d9f2d0", "filename": "src/test/debuginfo/lexical-scope-with-macro.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Flexical-scope-with-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Flexical-scope-with-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Flexical-scope-with-macro.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "c1ec837a4b8188383ee8d17189fcb77750abbbc8", "filename": "src/test/debuginfo/lexical-scopes-in-block-expression.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Flexical-scopes-in-block-expression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Flexical-scopes-in-block-expression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Flexical-scopes-in-block-expression.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "e51842992ccd36cd3fc15268709a9426586c2956", "filename": "src/test/debuginfo/limited-debuginfo.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Flimited-debuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Flimited-debuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Flimited-debuginfo.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n \n // ignore-lldb\n "}, {"sha": "7ad668791d3b899b1ff6f4756c7f2c5fdfdbb5f4", "filename": "src/test/debuginfo/method-on-enum.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fmethod-on-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fmethod-on-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fmethod-on-enum.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // ignore-tidy-linelength\n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "6b56a7998c919880a2ba618b9bcd9859a735c361", "filename": "src/test/debuginfo/method-on-generic-struct.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fmethod-on-generic-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fmethod-on-generic-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fmethod-on-generic-struct.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "e32288a8e7d0362df7765afe467ea62dd3370bd1", "filename": "src/test/debuginfo/method-on-struct.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fmethod-on-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fmethod-on-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fmethod-on-struct.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "6e9a695720a141b68d0288b26c8c9d4074cfc96b", "filename": "src/test/debuginfo/method-on-trait.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fmethod-on-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fmethod-on-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fmethod-on-trait.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "cee04e92c2d24e4de671dbb7a5225a1b17a491c2", "filename": "src/test/debuginfo/method-on-tuple-struct.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fmethod-on-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fmethod-on-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fmethod-on-tuple-struct.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "f02e3f2a22bed86f97be0524a58b296114d3c2dc", "filename": "src/test/debuginfo/multi-byte-chars.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fmulti-byte-chars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fmulti-byte-chars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fmulti-byte-chars.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "5fe0c13e5e4a5a198c35394e2ba9d9967ba16cc5", "filename": "src/test/debuginfo/multiple-functions-equal-var-names.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fmultiple-functions-equal-var-names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fmultiple-functions-equal-var-names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fmultiple-functions-equal-var-names.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "3179a8050d35d1cee49c129eaa775c1fadb2511e", "filename": "src/test/debuginfo/multiple-functions.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fmultiple-functions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fmultiple-functions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fmultiple-functions.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "5553d7e496b57eefa705f23c3519dd8905b53bf0", "filename": "src/test/debuginfo/name-shadowing-and-scope-nesting.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fname-shadowing-and-scope-nesting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fname-shadowing-and-scope-nesting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fname-shadowing-and-scope-nesting.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "44d7c2b1ad23e00076b5c958980b22af681676b4", "filename": "src/test/debuginfo/nil-enum.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fnil-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fnil-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fnil-enum.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -11,7 +11,6 @@\n // LLDB can't handle zero-sized values\n // ignore-lldb\n \n-// ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n // gdb-command:run"}, {"sha": "d2b21a648a0b8a95df4d98d49496b3ad87bff178", "filename": "src/test/debuginfo/no-debug-attribute.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fno-debug-attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fno-debug-attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fno-debug-attribute.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // ignore-lldb\n \n // compile-flags:-g"}, {"sha": "0aef13746593320d0f2fc84fcadc7f352212c5bc", "filename": "src/test/debuginfo/option-like-enum.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Foption-like-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Foption-like-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Foption-like-enum.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // ignore-tidy-linelength\n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "8b2f34a99099c5d088b321125858ff4c5a96785e", "filename": "src/test/debuginfo/packed-struct-with-destructor.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fpacked-struct-with-destructor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fpacked-struct-with-destructor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fpacked-struct-with-destructor.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // ignore-tidy-linelength\n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "9f3b7baf83db2c7c37c5b3e86d42cfa019b2dd5c", "filename": "src/test/debuginfo/packed-struct.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fpacked-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fpacked-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fpacked-struct.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // ignore-tidy-linelength\n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "ef1092efa11455a565c4c3a0f93e4c86daf4d3a7", "filename": "src/test/debuginfo/recursive-enum.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Frecursive-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Frecursive-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Frecursive-enum.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // ignore-lldb\n \n // compile-flags:-g"}, {"sha": "3b1979337d525fa5d9e1bba910b3fa7a621c19ff", "filename": "src/test/debuginfo/recursive-struct.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Frecursive-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Frecursive-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Frecursive-struct.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // ignore-tidy-linelength\n-// ignore-android: FIXME(#10381)\n // ignore-lldb\n \n // compile-flags:-g"}, {"sha": "cb2b04f4d8695df3f9a116ab144278d3646c8b3c", "filename": "src/test/debuginfo/self-in-default-method.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fself-in-default-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fself-in-default-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fself-in-default-method.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "b96ec3b7b889cc18f815403a47798b3d6fd3b092", "filename": "src/test/debuginfo/self-in-generic-default-method.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fself-in-generic-default-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fself-in-generic-default-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fself-in-generic-default-method.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "4d74e6f1084e5a7a012e79c09f387d45a9f2adeb", "filename": "src/test/debuginfo/shadowed-argument.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fshadowed-argument.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fshadowed-argument.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fshadowed-argument.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "630999677ab1b3a3c1f628a5febbdfdb07b82beb", "filename": "src/test/debuginfo/shadowed-variable.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fshadowed-variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fshadowed-variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fshadowed-variable.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "161392c94c8f01e61435478bc307a83c399a6eea", "filename": "src/test/debuginfo/simd.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fsimd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fsimd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fsimd.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -11,7 +11,6 @@\n // Need a fix for LLDB first...\n // ignore-lldb\n \n-// ignore-android: FIXME(#10381)\n \n // compile-flags:-g\n // gdb-command:run"}, {"sha": "c1dae7a6d677c3f89b5fa794af1caefa2ec2ae7d", "filename": "src/test/debuginfo/simple-lexical-scope.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fsimple-lexical-scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fsimple-lexical-scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fsimple-lexical-scope.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "eee3cf55052a346a7e8b455bb21447e6503954e8", "filename": "src/test/debuginfo/simple-struct.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fsimple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fsimple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fsimple-struct.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "75db47af2463fefca9a652929ab33f0fe61f06be", "filename": "src/test/debuginfo/simple-tuple.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fsimple-tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fsimple-tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fsimple-tuple.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "48db69289c073678a438bf6f6b8be4f69fe85397", "filename": "src/test/debuginfo/static-method-on-struct-and-enum.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fstatic-method-on-struct-and-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fstatic-method-on-struct-and-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fstatic-method-on-struct-and-enum.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "b2971329cc8fb50bfbbb45e2ad661446d89c9b3f", "filename": "src/test/debuginfo/struct-in-enum.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fstruct-in-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fstruct-in-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fstruct-in-enum.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // ignore-tidy-linelength\n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "8bccb041c9a90d2b9648e6d14eb4195b76e4c761", "filename": "src/test/debuginfo/struct-in-struct.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fstruct-in-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fstruct-in-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fstruct-in-struct.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // ignore-tidy-linelength\n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "d522e9f89105689892a21ddd2f1f0b2e2d2da951", "filename": "src/test/debuginfo/struct-style-enum.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fstruct-style-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fstruct-style-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fstruct-style-enum.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // ignore-tidy-linelength\n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "4c2c9d06ae91caac150ba37849aa7687e5a33340", "filename": "src/test/debuginfo/struct-with-destructor.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fstruct-with-destructor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fstruct-with-destructor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fstruct-with-destructor.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "f74c9953f7d6cfc83c98908833d9c49f7d7396e6", "filename": "src/test/debuginfo/trait-pointers.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Ftrait-pointers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Ftrait-pointers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ftrait-pointers.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "7da1ef2e1189be840e1a62573725fb7c78926a15", "filename": "src/test/debuginfo/tuple-in-struct.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Ftuple-in-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Ftuple-in-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ftuple-in-struct.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "9b4c759ab025f36fd39442be29f04d9ba200b253", "filename": "src/test/debuginfo/tuple-in-tuple.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Ftuple-in-tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Ftuple-in-tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ftuple-in-tuple.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "e679dac9546606f1cc5318042ac140a8720dd945", "filename": "src/test/debuginfo/tuple-struct.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Ftuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Ftuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ftuple-struct.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "7c9760c3a5353c1205aa32ac5bc2b19e36c62886", "filename": "src/test/debuginfo/tuple-style-enum.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Ftuple-style-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Ftuple-style-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ftuple-style-enum.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // ignore-tidy-linelength\n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "69b5797007bdb8b689708aa6315a5d9a536fc8be", "filename": "src/test/debuginfo/unique-enum.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Funique-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Funique-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Funique-enum.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // ignore-tidy-linelength\n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "309848d6cedc9b400e00b9ba55b43cfc543a27c8", "filename": "src/test/debuginfo/unreachable-locals.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Funreachable-locals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Funreachable-locals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Funreachable-locals.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "9c9d82249ee317d70764a9f17fdd8067f6a9806e", "filename": "src/test/debuginfo/var-captured-in-nested-closure.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fvar-captured-in-nested-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fvar-captured-in-nested-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fvar-captured-in-nested-closure.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "6b96556dc2ffff0d4377a44d05e2740ab478a28d", "filename": "src/test/debuginfo/var-captured-in-sendable-closure.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fvar-captured-in-sendable-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fvar-captured-in-sendable-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fvar-captured-in-sendable-closure.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "e3bd1eade7538d9d3c08b429c1962e2e3e90ac99", "filename": "src/test/debuginfo/var-captured-in-stack-closure.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fvar-captured-in-stack-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fvar-captured-in-stack-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fvar-captured-in-stack-closure.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "f7bdf1bd3faafa33ec6c03923ce7e71183b987f1", "filename": "src/test/debuginfo/vec.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Fdebuginfo%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fvec.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android: FIXME(#10381)\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "c1ffeb7c8e2e96d9262e90d5a84f572545d9f685", "filename": "src/test/run-pass-fulldeps/issue_16723_multiple_items_syntax_ext.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Frun-pass-fulldeps%2Fissue_16723_multiple_items_syntax_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Frun-pass-fulldeps%2Fissue_16723_multiple_items_syntax_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fissue_16723_multiple_items_syntax_ext.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // ignore-stage1\n-// ignore-android\n // aux-build:issue_16723_multiple_items_syntax_ext.rs\n #![feature(plugin)]\n #![plugin(issue_16723_multiple_items_syntax_ext)]"}, {"sha": "70cc0463a6e11bd927f153491775d0f9b1d070e3", "filename": "src/test/run-pass/capturing-logging.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Frun-pass%2Fcapturing-logging.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Frun-pass%2Fcapturing-logging.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcapturing-logging.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android (FIXME #11419)\n // exec-env:RUST_LOG=info\n \n #![allow(unknown_features)]"}, {"sha": "bd2f73440cae6db8953d5814a315bb7d49283aab", "filename": "src/test/run-pass/intrinsic-alignment.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Frun-pass%2Fintrinsic-alignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Frun-pass%2Fintrinsic-alignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fintrinsic-alignment.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -66,7 +66,7 @@ mod m {\n #[cfg(target_os = \"android\")]\n mod m {\n     #[main]\n-    #[cfg(target_arch = \"arm\")]\n+    #[cfg(any(target_arch = \"arm\", target_arch = \"aarch64\"))]\n     pub fn main() {\n         unsafe {\n             assert_eq!(::rusti::pref_align_of::<u64>(), 8u);"}, {"sha": "707aa48259ac9821ecba2add8d2cbe7fd1e8f275", "filename": "src/test/run-pass/issue-16671.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Frun-pass%2Fissue-16671.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Frun-pass%2Fissue-16671.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-16671.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android seems to block forever\n \n #![forbid(warnings)]\n "}, {"sha": "5cd741350d57195cd267e0b74a7c7d184c41cf9d", "filename": "src/test/run-pass/linkage1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Frun-pass%2Flinkage1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Frun-pass%2Flinkage1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flinkage1.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // ignore-windows\n-// ignore-android\n // ignore-macos\n // aux-build:linkage1.rs\n "}, {"sha": "e1141d4ab37fd848a28e3aa88aad32ba88be49d2", "filename": "src/test/run-pass/logging-separate-lines.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Frun-pass%2Flogging-separate-lines.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Frun-pass%2Flogging-separate-lines.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flogging-separate-lines.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android\n // ignore-windows\n // exec-env:RUST_LOG=debug\n "}, {"sha": "0be6e22f60980ac06166b20692752a7103a7fad2", "filename": "src/test/run-pass/rec-align-u64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Frun-pass%2Frec-align-u64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Frun-pass%2Frec-align-u64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frec-align-u64.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -72,7 +72,7 @@ mod m {\n \n #[cfg(target_os = \"android\")]\n mod m {\n-    #[cfg(target_arch = \"arm\")]\n+    #[cfg(any(target_arch = \"arm\", target_arch = \"aarch64\"))]\n     pub mod m {\n         pub fn align() -> uint { 8u }\n         pub fn size() -> uint { 16u }"}, {"sha": "f0b6a505929c66e9a67bcb6ec08034c3fbdcd4a9", "filename": "src/test/run-pass/sepcomp-lib-lto.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Frun-pass%2Fsepcomp-lib-lto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Frun-pass%2Fsepcomp-lib-lto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsepcomp-lib-lto.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -11,7 +11,6 @@\n // Check that we can use `-C lto` when linking against libraries that were\n // separately compiled.\n \n-// ignore-android linker weridness (see #18800)\n // aux-build:sepcomp_lib.rs\n // compile-flags: -C lto\n // no-prefer-dynamic"}, {"sha": "61b2fc8b50f5b6ac13fc49dd14a4aa0368164f52", "filename": "src/test/run-pass/smallest-hello-world.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Frun-pass%2Fsmallest-hello-world.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c065fc8cb036785f61ff03e05c1563cbb2dd081/src%2Ftest%2Frun-pass%2Fsmallest-hello-world.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsmallest-hello-world.rs?ref=6c065fc8cb036785f61ff03e05c1563cbb2dd081", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-android\n-\n // Smallest \"hello world\" with a libc runtime\n \n #![feature(intrinsics, lang_items, start, no_std)]\n@@ -34,3 +32,6 @@ fn main(_: int, _: *const *const u8) -> int {\n     return 0;\n }\n \n+#[cfg(target_os = \"android\")]\n+#[link(name=\"gcc\")]\n+extern { }"}]}