{"sha": "4b77e730b5c9e5126abf12ccca5e36f2a2c66868", "node_id": "C_kwDOAAsO6NoAKDRiNzdlNzMwYjVjOWU1MTI2YWJmMTJjY2NhNWUzNmYyYTJjNjY4Njg", "commit": {"author": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2022-10-13T22:52:23Z"}, "committer": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2022-11-04T11:32:32Z"}, "message": "fake a base to suppress later extra error message", "tree": {"sha": "c6ba20116cf2f207af73d2e528c7ab11966a0289", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6ba20116cf2f207af73d2e528c7ab11966a0289"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b77e730b5c9e5126abf12ccca5e36f2a2c66868", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b77e730b5c9e5126abf12ccca5e36f2a2c66868", "html_url": "https://github.com/rust-lang/rust/commit/4b77e730b5c9e5126abf12ccca5e36f2a2c66868", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b77e730b5c9e5126abf12ccca5e36f2a2c66868/comments", "author": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e25882944aabcf0c871182b887cd4ffe9c7b330", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e25882944aabcf0c871182b887cd4ffe9c7b330", "html_url": "https://github.com/rust-lang/rust/commit/1e25882944aabcf0c871182b887cd4ffe9c7b330"}], "stats": {"total": 76, "additions": 35, "deletions": 41}, "files": [{"sha": "0924c8537159c50322c6004836c271ee738dfea0", "filename": "compiler/rustc_parse/src/errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4b77e730b5c9e5126abf12ccca5e36f2a2c66868/compiler%2Frustc_parse%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b77e730b5c9e5126abf12ccca5e36f2a2c66868/compiler%2Frustc_parse%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Ferrors.rs?ref=4b77e730b5c9e5126abf12ccca5e36f2a2c66868", "patch": "@@ -373,7 +373,7 @@ pub(crate) struct MissingSemicolonBeforeArray {\n pub(crate) struct MissingDotDot {\n     #[primary_span]\n     pub token_span: Span,\n-    #[suggestion_verbose(applicability = \"maybe-incorrect\", code = \"..\")]\n+    #[suggestion(applicability = \"maybe-incorrect\", code = \"..\", style = \"verbose\")]\n     pub sugg_span: Span,\n }\n "}, {"sha": "338e6a8e28955cbe986451bab0fb61383e846fbb", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 13, "deletions": 16, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/4b77e730b5c9e5126abf12ccca5e36f2a2c66868/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b77e730b5c9e5126abf12ccca5e36f2a2c66868/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=4b77e730b5c9e5126abf12ccca5e36f2a2c66868", "patch": "@@ -2880,7 +2880,7 @@ impl<'a> Parser<'a> {\n         };\n \n         while self.token != token::CloseDelim(close_delim) {\n-            if self.eat(&token::DotDot) {\n+            if self.eat(&token::DotDot) || self.recover_struct_fileds_dots(close_delim) {\n                 let exp_span = self.prev_token.span;\n                 // We permit `.. }` on the left-hand side of a destructuring assignment.\n                 if self.check(&token::CloseDelim(close_delim)) {\n@@ -2897,21 +2897,6 @@ impl<'a> Parser<'a> {\n                 }\n                 self.recover_struct_comma_after_dotdot(exp_span);\n                 break;\n-            } else if self.token == token::DotDotDot {\n-                // suggest `..v` instead of `...v`\n-                let snapshot = self.create_snapshot_for_diagnostic();\n-                let span = self.token.span;\n-                self.bump();\n-                match self.parse_expr() {\n-                    Ok(_p) => {\n-                        self.sess.emit_err(MissingDotDot { token_span: span, sugg_span: span });\n-                        break;\n-                    }\n-                    Err(inner_err) => {\n-                        inner_err.cancel();\n-                        self.restore_snapshot(snapshot);\n-                    }\n-                }\n             }\n \n             let recovery_field = self.find_struct_error_after_field_looking_code();\n@@ -3042,6 +3027,18 @@ impl<'a> Parser<'a> {\n         self.recover_stmt();\n     }\n \n+    fn recover_struct_fileds_dots(&mut self, close_delim: Delimiter) -> bool {\n+        if !self.look_ahead(1, |t| *t == token::CloseDelim(close_delim))\n+            && self.eat(&token::DotDotDot)\n+        {\n+            // recover from typo of `...`, suggest `..`\n+            let span = self.prev_token.span;\n+            self.sess.emit_err(MissingDotDot { token_span: span, sugg_span: span });\n+            return true;\n+        }\n+        false\n+    }\n+\n     /// Parses `ident (COLON expr)?`.\n     fn parse_expr_field(&mut self) -> PResult<'a, ExprField> {\n         let attrs = self.parse_outer_attributes()?;"}, {"sha": "ba297bdc9677b974ba82e250284b4ffc78e0c34e", "filename": "src/test/ui/parser/issue-102806.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4b77e730b5c9e5126abf12ccca5e36f2a2c66868/src%2Ftest%2Fui%2Fparser%2Fissue-102806.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b77e730b5c9e5126abf12ccca5e36f2a2c66868/src%2Ftest%2Fui%2Fparser%2Fissue-102806.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-102806.rs?ref=4b77e730b5c9e5126abf12ccca5e36f2a2c66868", "patch": "@@ -1,5 +1,6 @@\n #![allow(dead_code)]\n \n+#[derive(Default)]\n struct V3 {\n     x: f32,\n     y: f32,\n@@ -9,14 +10,16 @@ struct V3 {\n fn pz(v: V3) {\n     let _ = V3 { z: 0.0, ...v};\n     //~^ ERROR expected `..`\n-    //~| ERROR missing fields `x` and `y` in initializer of `V3`\n-    let _ = V3 { z: 0.0, ... };\n-    //~^ expected identifier\n-    //~| ERROR missing fields `x` and `y` in initializer of `V3`\n \n     let _ = V3 { z: 0.0, ...Default::default() };\n     //~^ ERROR expected `..`\n+\n+    let _ = V3 { z: 0.0, ... };\n+    //~^ expected identifier\n     //~| ERROR missing fields `x` and `y` in initializer of `V3`\n+\n+    let V3 { z: val, ... } = v;\n+    //~^ ERROR expected field pattern\n }\n \n fn main() {}"}, {"sha": "6872b8bc0afec880c9f4e66f23ca63381d8fa5bf", "filename": "src/test/ui/parser/issue-102806.stderr", "status": "modified", "additions": 14, "deletions": 20, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/4b77e730b5c9e5126abf12ccca5e36f2a2c66868/src%2Ftest%2Fui%2Fparser%2Fissue-102806.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4b77e730b5c9e5126abf12ccca5e36f2a2c66868/src%2Ftest%2Fui%2Fparser%2Fissue-102806.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-102806.stderr?ref=4b77e730b5c9e5126abf12ccca5e36f2a2c66868", "patch": "@@ -1,5 +1,5 @@\n error: expected `..`, found `...`\n-  --> $DIR/issue-102806.rs:10:26\n+  --> $DIR/issue-102806.rs:11:26\n    |\n LL |     let _ = V3 { z: 0.0, ...v};\n    |                          ^^^\n@@ -9,16 +9,8 @@ help: use `..` to fill in the rest of the fields\n LL |     let _ = V3 { z: 0.0, ..v};\n    |                          ~~\n \n-error: expected identifier, found `...`\n-  --> $DIR/issue-102806.rs:13:26\n-   |\n-LL |     let _ = V3 { z: 0.0, ... };\n-   |             --           ^^^ expected identifier\n-   |             |\n-   |             while parsing this struct\n-\n error: expected `..`, found `...`\n-  --> $DIR/issue-102806.rs:17:26\n+  --> $DIR/issue-102806.rs:14:26\n    |\n LL |     let _ = V3 { z: 0.0, ...Default::default() };\n    |                          ^^^\n@@ -28,24 +20,26 @@ help: use `..` to fill in the rest of the fields\n LL |     let _ = V3 { z: 0.0, ..Default::default() };\n    |                          ~~\n \n-error[E0063]: missing fields `x` and `y` in initializer of `V3`\n-  --> $DIR/issue-102806.rs:10:13\n+error: expected identifier, found `...`\n+  --> $DIR/issue-102806.rs:17:26\n    |\n-LL |     let _ = V3 { z: 0.0, ...v};\n-   |             ^^ missing `x` and `y`\n+LL |     let _ = V3 { z: 0.0, ... };\n+   |             --           ^^^ expected identifier\n+   |             |\n+   |             while parsing this struct\n \n-error[E0063]: missing fields `x` and `y` in initializer of `V3`\n-  --> $DIR/issue-102806.rs:13:13\n+error: expected field pattern, found `...`\n+  --> $DIR/issue-102806.rs:21:22\n    |\n-LL |     let _ = V3 { z: 0.0, ... };\n-   |             ^^ missing `x` and `y`\n+LL |     let V3 { z: val, ... } = v;\n+   |                      ^^^ help: to omit remaining fields, use one fewer `.`: `..`\n \n error[E0063]: missing fields `x` and `y` in initializer of `V3`\n   --> $DIR/issue-102806.rs:17:13\n    |\n-LL |     let _ = V3 { z: 0.0, ...Default::default() };\n+LL |     let _ = V3 { z: 0.0, ... };\n    |             ^^ missing `x` and `y`\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 5 previous errors\n \n For more information about this error, try `rustc --explain E0063`."}]}