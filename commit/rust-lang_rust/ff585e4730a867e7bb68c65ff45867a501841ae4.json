{"sha": "ff585e4730a867e7bb68c65ff45867a501841ae4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmNTg1ZTQ3MzBhODY3ZTdiYjY4YzY1ZmY0NTg2N2E1MDE4NDFhZTQ=", "commit": {"author": {"name": "Jade", "email": "software@lfcode.ca", "date": "2021-05-25T11:06:54Z"}, "committer": {"name": "Jade", "email": "software@lfcode.ca", "date": "2021-05-25T11:06:54Z"}, "message": "Add go to type definition for struct fields within struct\n\nExample:\n\n```rust\nstruct A;\n\nstruct B {\n    a/*<- cursor*/: A,\n}\n```\n\nGo to type definition used to not work on this position. It now goes to\n`A` as expected.", "tree": {"sha": "013c694524016de25944edd4209c4a5b3b5bdaa1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/013c694524016de25944edd4209c4a5b3b5bdaa1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff585e4730a867e7bb68c65ff45867a501841ae4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff585e4730a867e7bb68c65ff45867a501841ae4", "html_url": "https://github.com/rust-lang/rust/commit/ff585e4730a867e7bb68c65ff45867a501841ae4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff585e4730a867e7bb68c65ff45867a501841ae4/comments", "author": {"login": "lf-", "id": 6652840, "node_id": "MDQ6VXNlcjY2NTI4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/6652840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lf-", "html_url": "https://github.com/lf-", "followers_url": "https://api.github.com/users/lf-/followers", "following_url": "https://api.github.com/users/lf-/following{/other_user}", "gists_url": "https://api.github.com/users/lf-/gists{/gist_id}", "starred_url": "https://api.github.com/users/lf-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lf-/subscriptions", "organizations_url": "https://api.github.com/users/lf-/orgs", "repos_url": "https://api.github.com/users/lf-/repos", "events_url": "https://api.github.com/users/lf-/events{/privacy}", "received_events_url": "https://api.github.com/users/lf-/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lf-", "id": 6652840, "node_id": "MDQ6VXNlcjY2NTI4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/6652840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lf-", "html_url": "https://github.com/lf-", "followers_url": "https://api.github.com/users/lf-/followers", "following_url": "https://api.github.com/users/lf-/following{/other_user}", "gists_url": "https://api.github.com/users/lf-/gists{/gist_id}", "starred_url": "https://api.github.com/users/lf-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lf-/subscriptions", "organizations_url": "https://api.github.com/users/lf-/orgs", "repos_url": "https://api.github.com/users/lf-/repos", "events_url": "https://api.github.com/users/lf-/events{/privacy}", "received_events_url": "https://api.github.com/users/lf-/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b049ec393230e4b9fea3022a3ebf34e2af5395d", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b049ec393230e4b9fea3022a3ebf34e2af5395d", "html_url": "https://github.com/rust-lang/rust/commit/8b049ec393230e4b9fea3022a3ebf34e2af5395d"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "004d9cb688e04806a909272ccb8585c7ffa8cb4d", "filename": "crates/ide/src/goto_type_definition.rs", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/ff585e4730a867e7bb68c65ff45867a501841ae4/crates%2Fide%2Fsrc%2Fgoto_type_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff585e4730a867e7bb68c65ff45867a501841ae4/crates%2Fide%2Fsrc%2Fgoto_type_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fgoto_type_definition.rs?ref=ff585e4730a867e7bb68c65ff45867a501841ae4", "patch": "@@ -1,3 +1,4 @@\n+use ide_db::base_db::Upcast;\n use ide_db::RootDatabase;\n use syntax::{ast, match_ast, AstNode, SyntaxKind::*, SyntaxToken, TokenAtOffset, T};\n \n@@ -31,6 +32,7 @@ pub(crate) fn goto_type_definition(\n                 ast::Pat(it) => sema.type_of_pat(&it)?,\n                 ast::SelfParam(it) => sema.type_of_self(&it)?,\n                 ast::Type(it) => sema.resolve_type(&it)?,\n+                ast::RecordField(it) => sema.to_def(&it).map(|d| d.ty(db.upcast()))?,\n                 _ => return None,\n             }\n         };\n@@ -161,4 +163,34 @@ impl Foo$0 {}\n \"#,\n         )\n     }\n+\n+    #[test]\n+    fn goto_def_for_struct_field() {\n+        check(\n+            r#\"\n+struct Bar;\n+     //^^^\n+\n+struct Foo {\n+    bar$0: Bar,\n+}\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn goto_def_for_enum_struct_field() {\n+        check(\n+            r#\"\n+struct Bar;\n+     //^^^\n+\n+enum Foo {\n+    Bar {\n+        bar$0: Bar\n+    },\n+}\n+\"#,\n+        );\n+    }\n }"}]}