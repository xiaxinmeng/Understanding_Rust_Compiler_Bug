{"sha": "38167a806cd14dd744d4770c7e13ab2c5e44e69c", "node_id": "C_kwDOAAsO6NoAKDM4MTY3YTgwNmNkMTRkZDc0NGQ0NzcwYzdlMTNhYjJjNWU0NGU2OWM", "commit": {"author": {"name": "vacuus", "email": "rocyu@protonmail.com", "date": "2021-12-19T02:54:59Z"}, "committer": {"name": "Roc Yu", "email": "rocyu@protonmail.com", "date": "2021-12-19T22:30:37Z"}, "message": "Omit check of a successive line in loop\n\nI think that s == \"\" is the only edge case (as it makes iter.next() return None the first time). The early return is necessary so that the last character of 'out' isn't popped if s == \"\" && !frag.need_backline", "tree": {"sha": "bedb97f19562484d369d33e18e4a34371bad5b15", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bedb97f19562484d369d33e18e4a34371bad5b15"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38167a806cd14dd744d4770c7e13ab2c5e44e69c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyzuvo1e1RYSrfuC8UGjOUUp50n8FAmG/so0ACgkQUGjOUUp5\n0n/b2g//R4bJSbemWXFH5kA/8prBwuKgqusWq3Y4zmdhyi9jsBP2z2fNb6eD+Na4\nWeJTPAXU5NSvJ0JTaYnvsuRIL4ML0HGL6ulJw2XXMC134SemE6yl3HRjZ2VU2AMI\nOHwOaZ3wK3glXVE3LwTASfEZV56Exv5tHW935KmULSBFBrCUv/NQ+Japw0Q89KYH\nQzLm0NxuuIo9LOyqpEz1NqCFse0FBOIWDzYbxMXSeA7eUq3OiQHrMQyTng0HfBp+\nyYwiKh4YN2WcJIsngR2I2fdhrkV3kXxoaHIXC+zsO/XCSolmHMRTmZQn72mYhtyb\n0SeWP6KnWq7aFVyCbzWVDsV6iqighNKZy2S48czoV2CoD5xWHXLZ6WAE2HGDFpY1\n5H4ZYu8Xn0vo2jz4HR1qRUkgEFVx8Tb0vc14x02gOhygMfulFqREgSACR1ctqnQI\njUfYV3sd8fjYhgqsxfjwpk4PBwhDGP1/kVbLAo5hXiFFNfsP+GHiLB8OEt6rQb9L\nag6YmjmnZxp9mYCaCpgw+PYUnLYGjGDNXBRTDTy6/w9gVxK0MGgdhzZAe+BSATFH\nNna+8gK1sFHQtuGYSoiMwq86Tl97oeX4hkbo3tlwGGHySwi6tXNTwGl8iinhq1WG\n4Th7qwzt4KAbyPM6KlMdlRmzJlTTFjjsjr8kp2RA7czLzoaLTXE=\n=gZCi\n-----END PGP SIGNATURE-----", "payload": "tree bedb97f19562484d369d33e18e4a34371bad5b15\nparent 41c3017c82bbc16842cc3bc1afa904e6910e293c\nauthor vacuus <rocyu@protonmail.com> 1639882499 -0500\ncommitter Roc Yu <rocyu@protonmail.com> 1639953037 -0500\n\nOmit check of a successive line in loop\n\nI think that s == \"\" is the only edge case (as it makes iter.next() return None the first time). The early return is necessary so that the last character of 'out' isn't popped if s == \"\" && !frag.need_backline"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38167a806cd14dd744d4770c7e13ab2c5e44e69c", "html_url": "https://github.com/rust-lang/rust/commit/38167a806cd14dd744d4770c7e13ab2c5e44e69c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38167a806cd14dd744d4770c7e13ab2c5e44e69c/comments", "author": {"login": "vacuus", "id": 61440569, "node_id": "MDQ6VXNlcjYxNDQwNTY5", "avatar_url": "https://avatars.githubusercontent.com/u/61440569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vacuus", "html_url": "https://github.com/vacuus", "followers_url": "https://api.github.com/users/vacuus/followers", "following_url": "https://api.github.com/users/vacuus/following{/other_user}", "gists_url": "https://api.github.com/users/vacuus/gists{/gist_id}", "starred_url": "https://api.github.com/users/vacuus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vacuus/subscriptions", "organizations_url": "https://api.github.com/users/vacuus/orgs", "repos_url": "https://api.github.com/users/vacuus/repos", "events_url": "https://api.github.com/users/vacuus/events{/privacy}", "received_events_url": "https://api.github.com/users/vacuus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vacuus", "id": 61440569, "node_id": "MDQ6VXNlcjYxNDQwNTY5", "avatar_url": "https://avatars.githubusercontent.com/u/61440569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vacuus", "html_url": "https://github.com/vacuus", "followers_url": "https://api.github.com/users/vacuus/followers", "following_url": "https://api.github.com/users/vacuus/following{/other_user}", "gists_url": "https://api.github.com/users/vacuus/gists{/gist_id}", "starred_url": "https://api.github.com/users/vacuus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vacuus/subscriptions", "organizations_url": "https://api.github.com/users/vacuus/orgs", "repos_url": "https://api.github.com/users/vacuus/repos", "events_url": "https://api.github.com/users/vacuus/events{/privacy}", "received_events_url": "https://api.github.com/users/vacuus/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41c3017c82bbc16842cc3bc1afa904e6910e293c", "url": "https://api.github.com/repos/rust-lang/rust/commits/41c3017c82bbc16842cc3bc1afa904e6910e293c", "html_url": "https://github.com/rust-lang/rust/commit/41c3017c82bbc16842cc3bc1afa904e6910e293c"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "0c60952f4500a536a2335c820a2277160d73b762", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/38167a806cd14dd744d4770c7e13ab2c5e44e69c/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38167a806cd14dd744d4770c7e13ab2c5e44e69c/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=38167a806cd14dd744d4770c7e13ab2c5e44e69c", "patch": "@@ -939,21 +939,25 @@ crate enum DocFragmentKind {\n //   `need_backline` field).\n fn add_doc_fragment(out: &mut String, frag: &DocFragment) {\n     let s = frag.doc.as_str();\n-    let mut iter = s.lines().peekable();\n+    let mut iter = s.lines();\n+    if s == \"\" {\n+        if frag.need_backline {\n+            out.push('\\n');\n+        }\n+        return;\n+    }\n     while let Some(line) = iter.next() {\n         if line.chars().any(|c| !c.is_whitespace()) {\n             assert!(line.len() >= frag.indent);\n             out.push_str(&line[frag.indent..]);\n         } else {\n             out.push_str(line);\n         }\n-        if iter.peek().is_some() {\n-            out.push('\\n');\n-        }\n-    }\n-    if frag.need_backline {\n         out.push('\\n');\n     }\n+    if !frag.need_backline {\n+        out.pop();\n+    }\n }\n \n /// Collapse a collection of [`DocFragment`]s into one string,"}]}