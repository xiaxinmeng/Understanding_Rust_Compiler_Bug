{"sha": "a159dcda6292c03faf3adb37f0a176ca7a35f0dc", "node_id": "C_kwDOAAsO6NoAKGExNTlkY2RhNjI5MmMwM2ZhZjNhZGIzN2YwYTE3NmNhN2EzNWYwZGM", "commit": {"author": {"name": "Ezra Shaw", "email": "ezrasure@outlook.com", "date": "2023-04-12T02:01:59Z"}, "committer": {"name": "Ezra Shaw", "email": "ezrasure@outlook.com", "date": "2023-04-12T02:01:59Z"}, "message": "fix: disable `x suggest` when using `build-metrics`", "tree": {"sha": "2a1e1dc7a541e1fe73936a61652094d01a26b88c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a1e1dc7a541e1fe73936a61652094d01a26b88c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a159dcda6292c03faf3adb37f0a176ca7a35f0dc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEINUdoc4Vb1yVx04IZ6vxb7Ds2HAFAmQ2ESYACgkQZ6vxb7Ds\n2HD7IQ//ZvjVC52dFVjdf2aoSV8NabySleQgP3yyoE/tavSH6xwtseaUtA6XdIDL\nuumoysE7H7B+NPYgH02fr7HERTeXGNsNjtH5UgUDp3iCZcV3r6Fsp6J+7ewbTRog\nD10IUZbsE3OwiowOfQycYq+XJoy+LqWgHMfmJYuGmGSqUYChAZL6Hxkkz+Evfsco\nA9g8Qqao0JMWtwghovCTgxz2ruDTzTKVDkAIRzjUAxefwh2dgovPjOfZHuBDc6hQ\n+T0t8S2rNt8tmUpQZJEuXQ1GuoLrDuSDcGCV379/W8PORix4pHSiEYWeLBFgXHum\ndzjU+7YG1WWoi9rukakrthlujm/elXAd2Usn3wM0u5Oo7PpBBsnoJazNMlGG1uxH\nLhB278iaN7K1EMukOKGT5K4t9lWtwRHgdajIFaXbFjT5pnb6FPOfS72Vmxtf6eBC\nnb1t9TC8CKP6R+V0leq/lbTbj+RzcF0fHw1ClFxnXny4iVv18KV8PbDh/OekfFzh\nihpONqM3gv5s6dRV6tSuZlB0f8ccyihp1yw8byMf1n8O8pxAt/as6fSl2awRFcKl\nxCixjzg0cVSUsL0INQePP4yqTBdYJQbC5yNt9u8C3eR0oJfVPoDV7YDWav0z8tt9\nwjXL513/xyJ0MqXCAm8BXcq/KgaaZte+T/sZPluUTKZkHnl2qbM=\n=S+TY\n-----END PGP SIGNATURE-----", "payload": "tree 2a1e1dc7a541e1fe73936a61652094d01a26b88c\nparent 1e95cddc74f88c1bb86f80103d0d7128f779f544\nauthor Ezra Shaw <ezrasure@outlook.com> 1681264919 +1200\ncommitter Ezra Shaw <ezrasure@outlook.com> 1681264919 +1200\n\nfix: disable `x suggest` when using `build-metrics`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a159dcda6292c03faf3adb37f0a176ca7a35f0dc", "html_url": "https://github.com/rust-lang/rust/commit/a159dcda6292c03faf3adb37f0a176ca7a35f0dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a159dcda6292c03faf3adb37f0a176ca7a35f0dc/comments", "author": {"login": "Ezrashaw", "id": 38062690, "node_id": "MDQ6VXNlcjM4MDYyNjkw", "avatar_url": "https://avatars.githubusercontent.com/u/38062690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ezrashaw", "html_url": "https://github.com/Ezrashaw", "followers_url": "https://api.github.com/users/Ezrashaw/followers", "following_url": "https://api.github.com/users/Ezrashaw/following{/other_user}", "gists_url": "https://api.github.com/users/Ezrashaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ezrashaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ezrashaw/subscriptions", "organizations_url": "https://api.github.com/users/Ezrashaw/orgs", "repos_url": "https://api.github.com/users/Ezrashaw/repos", "events_url": "https://api.github.com/users/Ezrashaw/events{/privacy}", "received_events_url": "https://api.github.com/users/Ezrashaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ezrashaw", "id": 38062690, "node_id": "MDQ6VXNlcjM4MDYyNjkw", "avatar_url": "https://avatars.githubusercontent.com/u/38062690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ezrashaw", "html_url": "https://github.com/Ezrashaw", "followers_url": "https://api.github.com/users/Ezrashaw/followers", "following_url": "https://api.github.com/users/Ezrashaw/following{/other_user}", "gists_url": "https://api.github.com/users/Ezrashaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ezrashaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ezrashaw/subscriptions", "organizations_url": "https://api.github.com/users/Ezrashaw/orgs", "repos_url": "https://api.github.com/users/Ezrashaw/repos", "events_url": "https://api.github.com/users/Ezrashaw/events{/privacy}", "received_events_url": "https://api.github.com/users/Ezrashaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e95cddc74f88c1bb86f80103d0d7128f779f544", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e95cddc74f88c1bb86f80103d0d7128f779f544", "html_url": "https://github.com/rust-lang/rust/commit/1e95cddc74f88c1bb86f80103d0d7128f779f544"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "1f2fa3df98e1eaecd986e8c55137df27053b8ac5", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a159dcda6292c03faf3adb37f0a176ca7a35f0dc/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a159dcda6292c03faf3adb37f0a176ca7a35f0dc/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=a159dcda6292c03faf3adb37f0a176ca7a35f0dc", "patch": "@@ -190,7 +190,7 @@ pub enum GitRepo {\n /// although most functions are implemented as free functions rather than\n /// methods specifically on this structure itself (to make it easier to\n /// organize).\n-#[derive(Clone)]\n+#[cfg_attr(not(feature = \"build-metrics\"), derive(Clone))]\n pub struct Build {\n     /// User-specified configuration from `config.toml`.\n     config: Config,"}, {"sha": "ff20ebec267720cf1ae1479c2a0009dae193c233", "filename": "src/bootstrap/suggest.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a159dcda6292c03faf3adb37f0a176ca7a35f0dc/src%2Fbootstrap%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a159dcda6292c03faf3adb37f0a176ca7a35f0dc/src%2Fbootstrap%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fsuggest.rs?ref=a159dcda6292c03faf3adb37f0a176ca7a35f0dc", "patch": "@@ -1,3 +1,5 @@\n+#![cfg_attr(feature = \"build-metrics\", allow(unused))]\n+\n use std::str::FromStr;\n \n use std::path::PathBuf;\n@@ -7,7 +9,13 @@ use crate::{\n     tool::Tool,\n };\n \n+#[cfg(feature = \"build-metrics\")]\n+pub fn suggest(builder: &Builder<'_>, run: bool) {\n+    panic!(\"`x suggest` is not supported with `build-metrics`\")\n+}\n+\n /// Suggests a list of possible `x.py` commands to run based on modified files in branch.\n+#[cfg(not(feature = \"build-metrics\"))]\n pub fn suggest(builder: &Builder<'_>, run: bool) {\n     let suggestions =\n         builder.tool_cmd(Tool::SuggestTests).output().expect(\"failed to run `suggest-tests` tool\");"}]}