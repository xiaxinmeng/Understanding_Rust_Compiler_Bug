{"sha": "c905fd285a4bbec0c1fdbb823c1825ca0493ab66", "node_id": "C_kwDOAAsO6NoAKGM5MDVmZDI4NWE0YmJlYzBjMWZkYmI4MjNjMTgyNWNhMDQ5M2FiNjY", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-10-30T09:28:46Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-10-30T09:28:46Z"}, "message": "skip bootstrap target sanity checks when testing Miri", "tree": {"sha": "c74dd65257f869dae856c8511e332135b0dc556b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c74dd65257f869dae856c8511e332135b0dc556b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c905fd285a4bbec0c1fdbb823c1825ca0493ab66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c905fd285a4bbec0c1fdbb823c1825ca0493ab66", "html_url": "https://github.com/rust-lang/rust/commit/c905fd285a4bbec0c1fdbb823c1825ca0493ab66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c905fd285a4bbec0c1fdbb823c1825ca0493ab66/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b03502b35d111bef0399a66ab3cc765f0802e8ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/b03502b35d111bef0399a66ab3cc765f0802e8ba", "html_url": "https://github.com/rust-lang/rust/commit/b03502b35d111bef0399a66ab3cc765f0802e8ba"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "9890480709bd73ae1e6709ab4214ed12ce242208", "filename": "src/bootstrap/sanity.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c905fd285a4bbec0c1fdbb823c1825ca0493ab66/src%2Fbootstrap%2Fsanity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c905fd285a4bbec0c1fdbb823c1825ca0493ab66/src%2Fbootstrap%2Fsanity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fsanity.rs?ref=c905fd285a4bbec0c1fdbb823c1825ca0493ab66", "patch": "@@ -155,6 +155,11 @@ than building it.\n             continue;\n         }\n \n+        // Some environments don't want or need these tools, such as when testing Miri.\n+        if env::var_os(\"BOOTSTRAP_SKIP_TARGET_SANITY\").is_some() {\n+            continue;\n+        }\n+\n         if !build.config.dry_run {\n             cmd_finder.must_have(build.cc(*target));\n             if let Some(ar) = build.ar(*target) {\n@@ -212,6 +217,11 @@ than building it.\n             }\n         }\n \n+        // Some environments don't want or need these tools, such as when testing Miri.\n+        if env::var_os(\"BOOTSTRAP_SKIP_TARGET_SANITY\").is_some() {\n+            continue;\n+        }\n+\n         if need_cmake && target.contains(\"msvc\") {\n             // There are three builds of cmake on windows: MSVC, MinGW, and\n             // Cygwin. The Cygwin build does not have generators for Visual"}, {"sha": "7dde6370904bb91f4613ae12b33eea6885c4fffa", "filename": "src/ci/docker/host-x86_64/x86_64-gnu-tools/checktools.sh", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c905fd285a4bbec0c1fdbb823c1825ca0493ab66/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2Fchecktools.sh", "raw_url": "https://github.com/rust-lang/rust/raw/c905fd285a4bbec0c1fdbb823c1825ca0493ab66/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2Fchecktools.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2Fchecktools.sh?ref=c905fd285a4bbec0c1fdbb823c1825ca0493ab66", "patch": "@@ -27,10 +27,7 @@ python3 \"$X_PY\" test --stage 2 src/tools/rustfmt\n python3 \"$X_PY\" test --stage 2 src/tools/miri\n # We natively run this script on x86_64-unknown-linux-gnu and x86_64-pc-windows-msvc.\n # Also cover some other targets (on both of these hosts) via cross-testing.\n-#\n-# Currently disabled -- we end up pulling in a cross-compile of LLVM (maybe\n-# just overly eager sanity checks), but in any case this won't work when\n-# building LLVM as of this comment.\n-#python3 \"$X_PY\" test --stage 2 src/tools/miri --target i686-pc-windows-msvc\n-#FIXME(https://github.com/rust-lang/rust/issues/103519): macOS testing is currently disabled\n-# python3 \"$X_PY\" test --stage 2 src/tools/miri --target aarch64-apple-darwin\n+export BOOTSTRAP_SKIP_TARGET_SANITY=1 # we don't need `cc` for these targets\n+python3 \"$X_PY\" test --stage 2 src/tools/miri --target i686-pc-windows-msvc\n+python3 \"$X_PY\" test --stage 2 src/tools/miri --target aarch64-apple-darwin\n+unset BOOTSTRAP_SKIP_TARGET_SANITY"}]}