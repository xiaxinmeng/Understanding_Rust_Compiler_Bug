{"sha": "cb3999cd83a3fbfbd79aaeef3a295aff46c9ea14", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiMzk5OWNkODNhM2ZiZmJkNzlhYWVlZjNhMjk1YWZmNDZjOWVhMTQ=", "commit": {"author": {"name": "S\u00e9bastien Marie", "email": "semarie@users.noreply.github.com", "date": "2015-12-23T10:24:11Z"}, "committer": {"name": "S\u00e9bastien Marie", "email": "semarie@users.noreply.github.com", "date": "2016-01-12T07:43:51Z"}, "message": "switch from syscall(2) to getentropy(2)\n\nuse the `getentropy()` function instead of `syscall()` and\nsyscall-numbers.", "tree": {"sha": "f29fd0b7ebe9013f010f918a6898b5c287f0db9d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f29fd0b7ebe9013f010f918a6898b5c287f0db9d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb3999cd83a3fbfbd79aaeef3a295aff46c9ea14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb3999cd83a3fbfbd79aaeef3a295aff46c9ea14", "html_url": "https://github.com/rust-lang/rust/commit/cb3999cd83a3fbfbd79aaeef3a295aff46c9ea14", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb3999cd83a3fbfbd79aaeef3a295aff46c9ea14/comments", "author": {"login": "semarie", "id": 8948701, "node_id": "MDQ6VXNlcjg5NDg3MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/8948701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semarie", "html_url": "https://github.com/semarie", "followers_url": "https://api.github.com/users/semarie/followers", "following_url": "https://api.github.com/users/semarie/following{/other_user}", "gists_url": "https://api.github.com/users/semarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/semarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semarie/subscriptions", "organizations_url": "https://api.github.com/users/semarie/orgs", "repos_url": "https://api.github.com/users/semarie/repos", "events_url": "https://api.github.com/users/semarie/events{/privacy}", "received_events_url": "https://api.github.com/users/semarie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "semarie", "id": 8948701, "node_id": "MDQ6VXNlcjg5NDg3MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/8948701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semarie", "html_url": "https://github.com/semarie", "followers_url": "https://api.github.com/users/semarie/followers", "following_url": "https://api.github.com/users/semarie/following{/other_user}", "gists_url": "https://api.github.com/users/semarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/semarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semarie/subscriptions", "organizations_url": "https://api.github.com/users/semarie/orgs", "repos_url": "https://api.github.com/users/semarie/repos", "events_url": "https://api.github.com/users/semarie/events{/privacy}", "received_events_url": "https://api.github.com/users/semarie/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dedaebd5a16a053a8f2926d8b48de1a53ab08c4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/dedaebd5a16a053a8f2926d8b48de1a53ab08c4c", "html_url": "https://github.com/rust-lang/rust/commit/dedaebd5a16a053a8f2926d8b48de1a53ab08c4c"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "23a368a30a52bc4cfb67f4d8bfd81cbfb8406289", "filename": "src/libstd/rand/os.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cb3999cd83a3fbfbd79aaeef3a295aff46c9ea14/src%2Flibstd%2Frand%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb3999cd83a3fbfbd79aaeef3a295aff46c9ea14/src%2Flibstd%2Frand%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frand%2Fos.rs?ref=cb3999cd83a3fbfbd79aaeef3a295aff46c9ea14", "patch": "@@ -222,7 +222,7 @@ mod imp {\n             // getentropy(2) permits a maximum buffer size of 256 bytes\n             for s in v.chunks_mut(256) {\n                 let ret = unsafe {\n-                    libc::syscall(libc::NR_GETENTROPY, s.as_mut_ptr(), s.len())\n+                    libc::getentropy(s.as_mut_ptr() as *mut libc::c_void, s.len())\n                 };\n                 if ret == -1 {\n                     panic!(\"unexpected getentropy error: {}\", errno());"}]}