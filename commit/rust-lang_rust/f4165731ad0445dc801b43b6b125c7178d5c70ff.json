{"sha": "f4165731ad0445dc801b43b6b125c7178d5c70ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0MTY1NzMxYWQwNDQ1ZGM4MDFiNDNiNmIxMjVjNzE3OGQ1YzcwZmY=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-02-06T22:50:08Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-02-08T13:37:03Z"}, "message": "Use `associated_items` query in impl overlap check\n\nThis reduces the number of `associated_item` queries done here.", "tree": {"sha": "c998e9ca2a822aec884ddc3464b4aba47093150b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c998e9ca2a822aec884ddc3464b4aba47093150b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f4165731ad0445dc801b43b6b125c7178d5c70ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f4165731ad0445dc801b43b6b125c7178d5c70ff", "html_url": "https://github.com/rust-lang/rust/commit/f4165731ad0445dc801b43b6b125c7178d5c70ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f4165731ad0445dc801b43b6b125c7178d5c70ff/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66fd4e6ed8fbc00feeccfe0fe9d25e1c1346807d", "url": "https://api.github.com/repos/rust-lang/rust/commits/66fd4e6ed8fbc00feeccfe0fe9d25e1c1346807d", "html_url": "https://github.com/rust-lang/rust/commit/66fd4e6ed8fbc00feeccfe0fe9d25e1c1346807d"}], "stats": {"total": 20, "additions": 9, "deletions": 11}, "files": [{"sha": "8234801ff8077f17164ca622ecfa6153d63bc229", "filename": "src/librustc_typeck/coherence/inherent_impls_overlap.rs", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f4165731ad0445dc801b43b6b125c7178d5c70ff/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls_overlap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4165731ad0445dc801b43b6b125c7178d5c70ff/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls_overlap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls_overlap.rs?ref=f4165731ad0445dc801b43b6b125c7178d5c70ff", "patch": "@@ -23,32 +23,30 @@ impl InherentOverlapChecker<'tcx> {\n         impl2: DefId,\n         overlap: traits::OverlapResult<'_>,\n     ) {\n-        let name_and_namespace = |def_id| {\n-            let item = self.tcx.associated_item(def_id);\n-            (item.ident.modern(), Namespace::from(item.kind))\n-        };\n+        let name_and_namespace =\n+            |assoc: &AssocItem| (assoc.ident.modern(), Namespace::from(assoc.kind));\n \n-        let impl_items1 = self.tcx.associated_item_def_ids(impl1);\n-        let impl_items2 = self.tcx.associated_item_def_ids(impl2);\n+        let impl_items1 = self.tcx.associated_items(impl1);\n+        let impl_items2 = self.tcx.associated_items(impl2);\n \n-        for &item1 in &impl_items1[..] {\n+        for item1 in &impl_items1[..] {\n             let (name, namespace) = name_and_namespace(item1);\n \n-            for &item2 in &impl_items2[..] {\n+            for item2 in &impl_items2[..] {\n                 if (name, namespace) == name_and_namespace(item2) {\n                     let mut err = struct_span_err!(\n                         self.tcx.sess,\n-                        self.tcx.span_of_impl(item1).unwrap(),\n+                        self.tcx.span_of_impl(item1.def_id).unwrap(),\n                         E0592,\n                         \"duplicate definitions with name `{}`\",\n                         name\n                     );\n                     err.span_label(\n-                        self.tcx.span_of_impl(item1).unwrap(),\n+                        self.tcx.span_of_impl(item1.def_id).unwrap(),\n                         format!(\"duplicate definitions for `{}`\", name),\n                     );\n                     err.span_label(\n-                        self.tcx.span_of_impl(item2).unwrap(),\n+                        self.tcx.span_of_impl(item2.def_id).unwrap(),\n                         format!(\"other definition for `{}`\", name),\n                     );\n "}]}