{"sha": "c1d3164700e76323e30cdf5c84af50c2ca46ff75", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxZDMxNjQ3MDBlNzYzMjNlMzBjZGY1Yzg0YWY1MGMyY2E0NmZmNzU=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2015-12-07T17:19:36Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2015-12-07T17:19:36Z"}, "message": "Add comments for Ident::from_name and identifiers in path segments", "tree": {"sha": "355320f2a8897d99811b59dfecf6d28eb60eb99a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/355320f2a8897d99811b59dfecf6d28eb60eb99a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1d3164700e76323e30cdf5c84af50c2ca46ff75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1d3164700e76323e30cdf5c84af50c2ca46ff75", "html_url": "https://github.com/rust-lang/rust/commit/c1d3164700e76323e30cdf5c84af50c2ca46ff75", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1d3164700e76323e30cdf5c84af50c2ca46ff75/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb789de80379aacc987daceb937b2a80c94803ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb789de80379aacc987daceb937b2a80c94803ce", "html_url": "https://github.com/rust-lang/rust/commit/eb789de80379aacc987daceb937b2a80c94803ce"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "3f2bb87724dae79a9fc6a21e54677e06356e29d7", "filename": "src/librustc_front/hir.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c1d3164700e76323e30cdf5c84af50c2ca46ff75/src%2Flibrustc_front%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1d3164700e76323e30cdf5c84af50c2ca46ff75/src%2Flibrustc_front%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_front%2Fhir.rs?ref=c1d3164700e76323e30cdf5c84af50c2ca46ff75", "patch": "@@ -63,6 +63,12 @@ pub struct Ident {\n }\n \n impl Ident {\n+    /// Creates a HIR identifier with both `name` and `unhygienic_name` initialized with\n+    /// the argument. Hygiene properties of the created identifier depend entirely on this\n+    /// argument. If the argument is a plain interned string `intern(\"iter\")`, then the result\n+    /// is unhygienic and can interfere with other entities named \"iter\". If the argument is\n+    /// a \"fresh\" name created with `gensym(\"iter\")`, then the result is hygienic and can't\n+    /// interfere with other entities having the same string as a name.\n     pub fn from_name(name: Name) -> Ident {\n         Ident { name: name, unhygienic_name: name }\n     }\n@@ -157,6 +163,14 @@ impl fmt::Display for Path {\n #[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug)]\n pub struct PathSegment {\n     /// The identifier portion of this path segment.\n+    ///\n+    /// Hygiene properties of this identifier are worth noting.\n+    /// Most path segments are not hygienic and they are not renamed during\n+    /// lowering from AST to HIR (see comments to `fn lower_path`). However segments from\n+    /// unqualified paths with one segment originating from `ExprPath` (local-variable-like paths)\n+    /// can be hygienic, so they are renamed. You should not normally care about this peculiarity\n+    /// and just use `identifier.name` unless you modify identifier resolution code\n+    /// (`fn resolve_identifier` and other functions called by it in `rustc_resolve`).\n     pub identifier: Ident,\n \n     /// Type/lifetime parameters attached to this path. They come in"}]}