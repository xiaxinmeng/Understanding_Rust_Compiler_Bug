{"sha": "c6d53ad2c082f6e76f51e1b352d6b7ae3d50bda8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2ZDUzYWQyYzA4MmY2ZTc2ZjUxZTFiMzUyZDZiN2FlM2Q1MGJkYTg=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-06-03T10:53:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-06-03T10:53:45Z"}, "message": "Merge pull request #2813 from terry90/master\n\nunreadable_literal: Fills hexadecimal values with 0 to allow better grouping", "tree": {"sha": "493609ce276ab63c624d5150459da5bc2d66ab76", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/493609ce276ab63c624d5150459da5bc2d66ab76"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c6d53ad2c082f6e76f51e1b352d6b7ae3d50bda8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbE8i5CRBK7hj4Ov3rIwAAdHIIADUFbO1Gw3lsoTtQcOsS3dSL\nYpUGNAPGq1TdM8IEuNMW1c4Uu5w+Oif1KsshDXb6/ma9yqOuuo5zVwLPWDp2isjH\nfX4T3wx4VSpXaBzsKXqh4C2jvM6qbdyvYf5C+InF9TPVH4lqPL+H18pMmKQKMejc\ncDEttPlNYY0na70+1xZT22r24h8Y+OXJ+KuYsVhjcgGW2bsZcP8mtkyl7CfBbWck\nkQdPXI8SA7/X31YEmrHEjm62fGr6a8qBRQQlX88eRPIU2RHrxNKJf8i79QFznVp0\npUY29pFAjGr2g07sWiPZPSxc/atZ0A0Z7v0U2YrxOrpEfJCoOpLsm41o4wJVlEw=\n=DPn0\n-----END PGP SIGNATURE-----\n", "payload": "tree 493609ce276ab63c624d5150459da5bc2d66ab76\nparent 1c6c79f92cad0c0e062ba1ef1d291f140e326cb3\nparent 2c1451817cf2db427c4947c6a122917e35e05a8a\nauthor Oliver Schneider <github35764891676564198441@oli-obk.de> 1528023225 +0200\ncommitter GitHub <noreply@github.com> 1528023225 +0200\n\nMerge pull request #2813 from terry90/master\n\nunreadable_literal: Fills hexadecimal values with 0 to allow better grouping"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c6d53ad2c082f6e76f51e1b352d6b7ae3d50bda8", "html_url": "https://github.com/rust-lang/rust/commit/c6d53ad2c082f6e76f51e1b352d6b7ae3d50bda8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c6d53ad2c082f6e76f51e1b352d6b7ae3d50bda8/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c6c79f92cad0c0e062ba1ef1d291f140e326cb3", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c6c79f92cad0c0e062ba1ef1d291f140e326cb3", "html_url": "https://github.com/rust-lang/rust/commit/1c6c79f92cad0c0e062ba1ef1d291f140e326cb3"}, {"sha": "2c1451817cf2db427c4947c6a122917e35e05a8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c1451817cf2db427c4947c6a122917e35e05a8a", "html_url": "https://github.com/rust-lang/rust/commit/2c1451817cf2db427c4947c6a122917e35e05a8a"}], "stats": {"total": 118, "additions": 84, "deletions": 34}, "files": [{"sha": "51ca236026c61049c8c78fd2a8d5cb90c158ae77", "filename": "clippy_lints/src/literal_representation.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c6d53ad2c082f6e76f51e1b352d6b7ae3d50bda8/clippy_lints%2Fsrc%2Fliteral_representation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6d53ad2c082f6e76f51e1b352d6b7ae3d50bda8/clippy_lints%2Fsrc%2Fliteral_representation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fliteral_representation.rs?ref=c6d53ad2c082f6e76f51e1b352d6b7ae3d50bda8", "patch": "@@ -193,16 +193,22 @@ impl<'a> DigitInfo<'a> {\n                 self.suffix.unwrap_or(\"\")\n             )\n         } else {\n-            let hint = self.digits\n+            let filtered_digits_vec = self.digits\n                 .chars()\n-                .rev()\n                 .filter(|&c| c != '_')\n-                .collect::<Vec<_>>()\n+                .rev()\n+                .collect::<Vec<_>>();\n+            let mut hint = filtered_digits_vec\n                 .chunks(group_size)\n                 .map(|chunk| chunk.into_iter().rev().collect())\n                 .rev()\n                 .collect::<Vec<String>>()\n                 .join(\"_\");\n+            // Forces hexadecimal values to be grouped by 4 being filled with zeroes (e.g 0x00ab_cdef)\n+            let nb_digits_to_fill = filtered_digits_vec.len() % 4;\n+            if self.radix == Radix::Hexadecimal && nb_digits_to_fill != 0 {\n+                hint = format!(\"{:0>4}{}\", &hint[..nb_digits_to_fill], &hint[nb_digits_to_fill..]);\n+            }\n             format!(\n                 \"{}{}{}\",\n                 self.prefix.unwrap_or(\"\"),"}, {"sha": "f2e6a62d13cceca2b37692c32468b762a3b5a261", "filename": "tests/ui/large_digit_groups.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c6d53ad2c082f6e76f51e1b352d6b7ae3d50bda8/tests%2Fui%2Flarge_digit_groups.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c6d53ad2c082f6e76f51e1b352d6b7ae3d50bda8/tests%2Fui%2Flarge_digit_groups.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flarge_digit_groups.stderr?ref=c6d53ad2c082f6e76f51e1b352d6b7ae3d50bda8", "patch": "@@ -10,7 +10,7 @@ error: digit groups should be smaller\n  --> $DIR/large_digit_groups.rs:7:31\n   |\n 7 |     let bad = (0b1_10110_i64, 0x1_23456_78901_usize, 1_23456_f32, 1_23456.12_f32, 1_23456.12345_f32, 1_23456.12345_6_f32);\n-  |                               ^^^^^^^^^^^^^^^^^^^^^ help: consider: `0x123_4567_8901_usize`\n+  |                               ^^^^^^^^^^^^^^^^^^^^^ help: consider: `0x0123_4567_8901_usize`\n \n error: digit groups should be smaller\n  --> $DIR/large_digit_groups.rs:7:54"}, {"sha": "581fbbb70c992e9952edd4f5374706787f0071e8", "filename": "tests/ui/literals.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c6d53ad2c082f6e76f51e1b352d6b7ae3d50bda8/tests%2Fui%2Fliterals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6d53ad2c082f6e76f51e1b352d6b7ae3d50bda8/tests%2Fui%2Fliterals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fliterals.rs?ref=c6d53ad2c082f6e76f51e1b352d6b7ae3d50bda8", "patch": "@@ -1,5 +1,3 @@\n-\n-\n #![warn(mixed_case_hex_literals)]\n #![warn(unseparated_literal_suffix)]\n #![warn(zero_prefixed_literal)]\n@@ -31,4 +29,16 @@ fn main() {\n \n     let ok11 = 0o123;\n     let ok12 = 0b10_1010;\n+\n+    let ok13 = 0xab_abcd;\n+    let ok14 = 0xBAFE_BAFE;\n+    let ok15 = 0xab_cabc_abca_bcab_cabc;\n+    let ok16 = 0xFE_BAFE_ABAB_ABCD;\n+    let ok17 = 0x123_4567_8901_usize;\n+\n+    let fail9 = 0xabcdef;\n+    let fail10 = 0xBAFEBAFE;\n+    let fail11 = 0xabcdeff;\n+    let fail12 = 0xabcabcabcabcabcabc;\n+    let fail13 = 0x1_23456_78901_usize;\n }"}, {"sha": "6f6ea75df10ebf6380b53663174e2192171f0278", "filename": "tests/ui/literals.stderr", "status": "modified", "additions": 61, "deletions": 27, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/c6d53ad2c082f6e76f51e1b352d6b7ae3d50bda8/tests%2Fui%2Fliterals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c6d53ad2c082f6e76f51e1b352d6b7ae3d50bda8/tests%2Fui%2Fliterals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fliterals.stderr?ref=c6d53ad2c082f6e76f51e1b352d6b7ae3d50bda8", "patch": "@@ -1,90 +1,124 @@\n error: inconsistent casing in hexadecimal literal\n-  --> $DIR/literals.rs:14:17\n+  --> $DIR/literals.rs:12:17\n    |\n-14 |     let fail1 = 0xabCD;\n+12 |     let fail1 = 0xabCD;\n    |                 ^^^^^^\n    |\n    = note: `-D mixed-case-hex-literals` implied by `-D warnings`\n \n error: inconsistent casing in hexadecimal literal\n-  --> $DIR/literals.rs:15:17\n+  --> $DIR/literals.rs:13:17\n    |\n-15 |     let fail2 = 0xabCD_u32;\n+13 |     let fail2 = 0xabCD_u32;\n    |                 ^^^^^^^^^^\n \n error: inconsistent casing in hexadecimal literal\n-  --> $DIR/literals.rs:16:17\n+  --> $DIR/literals.rs:14:17\n    |\n-16 |     let fail2 = 0xabCD_isize;\n+14 |     let fail2 = 0xabCD_isize;\n    |                 ^^^^^^^^^^^^\n \n error: integer type suffix should be separated by an underscore\n-  --> $DIR/literals.rs:17:27\n+  --> $DIR/literals.rs:15:27\n    |\n-17 |     let fail_multi_zero = 000_123usize;\n+15 |     let fail_multi_zero = 000_123usize;\n    |                           ^^^^^^^^^^^^\n    |\n    = note: `-D unseparated-literal-suffix` implied by `-D warnings`\n \n error: this is a decimal constant\n-  --> $DIR/literals.rs:17:27\n+  --> $DIR/literals.rs:15:27\n    |\n-17 |     let fail_multi_zero = 000_123usize;\n+15 |     let fail_multi_zero = 000_123usize;\n    |                           ^^^^^^^^^^^^\n    |\n    = note: `-D zero-prefixed-literal` implied by `-D warnings`\n help: if you mean to use a decimal constant, remove the `0` to remove confusion\n    |\n-17 |     let fail_multi_zero = 123usize;\n+15 |     let fail_multi_zero = 123usize;\n    |                           ^^^^^^^^\n help: if you mean to use an octal constant, use `0o`\n    |\n-17 |     let fail_multi_zero = 0o123usize;\n+15 |     let fail_multi_zero = 0o123usize;\n    |                           ^^^^^^^^^^\n \n error: integer type suffix should be separated by an underscore\n-  --> $DIR/literals.rs:22:17\n+  --> $DIR/literals.rs:20:17\n    |\n-22 |     let fail3 = 1234i32;\n+20 |     let fail3 = 1234i32;\n    |                 ^^^^^^^\n \n error: integer type suffix should be separated by an underscore\n-  --> $DIR/literals.rs:23:17\n+  --> $DIR/literals.rs:21:17\n    |\n-23 |     let fail4 = 1234u32;\n+21 |     let fail4 = 1234u32;\n    |                 ^^^^^^^\n \n error: integer type suffix should be separated by an underscore\n-  --> $DIR/literals.rs:24:17\n+  --> $DIR/literals.rs:22:17\n    |\n-24 |     let fail5 = 1234isize;\n+22 |     let fail5 = 1234isize;\n    |                 ^^^^^^^^^\n \n error: integer type suffix should be separated by an underscore\n-  --> $DIR/literals.rs:25:17\n+  --> $DIR/literals.rs:23:17\n    |\n-25 |     let fail6 = 1234usize;\n+23 |     let fail6 = 1234usize;\n    |                 ^^^^^^^^^\n \n error: float type suffix should be separated by an underscore\n-  --> $DIR/literals.rs:26:17\n+  --> $DIR/literals.rs:24:17\n    |\n-26 |     let fail7 = 1.5f32;\n+24 |     let fail7 = 1.5f32;\n    |                 ^^^^^^\n \n error: this is a decimal constant\n-  --> $DIR/literals.rs:30:17\n+  --> $DIR/literals.rs:28:17\n    |\n-30 |     let fail8 = 0123;\n+28 |     let fail8 = 0123;\n    |                 ^^^^\n help: if you mean to use a decimal constant, remove the `0` to remove confusion\n    |\n-30 |     let fail8 = 123;\n+28 |     let fail8 = 123;\n    |                 ^^^\n help: if you mean to use an octal constant, use `0o`\n    |\n-30 |     let fail8 = 0o123;\n+28 |     let fail8 = 0o123;\n    |                 ^^^^^\n \n-error: aborting due to 11 previous errors\n+error: long literal lacking separators\n+  --> $DIR/literals.rs:39:17\n+   |\n+39 |     let fail9 = 0xabcdef;\n+   |                 ^^^^^^^^ help: consider: `0x00ab_cdef`\n+   |\n+   = note: `-D unreadable-literal` implied by `-D warnings`\n+\n+error: long literal lacking separators\n+  --> $DIR/literals.rs:40:18\n+   |\n+40 |     let fail10 = 0xBAFEBAFE;\n+   |                  ^^^^^^^^^^ help: consider: `0xBAFE_BAFE`\n+\n+error: long literal lacking separators\n+  --> $DIR/literals.rs:41:18\n+   |\n+41 |     let fail11 = 0xabcdeff;\n+   |                  ^^^^^^^^^ help: consider: `0x0abc_deff`\n+\n+error: long literal lacking separators\n+  --> $DIR/literals.rs:42:18\n+   |\n+42 |     let fail12 = 0xabcabcabcabcabcabc;\n+   |                  ^^^^^^^^^^^^^^^^^^^^ help: consider: `0x00ab_cabc_abca_bcab_cabc`\n+\n+error: digit groups should be smaller\n+  --> $DIR/literals.rs:43:18\n+   |\n+43 |     let fail13 = 0x1_23456_78901_usize;\n+   |                  ^^^^^^^^^^^^^^^^^^^^^ help: consider: `0x0123_4567_8901_usize`\n+   |\n+   = note: `-D large-digit-groups` implied by `-D warnings`\n+\n+error: aborting due to 16 previous errors\n "}, {"sha": "cffcad1eef7b2b92b050f2de02d8bf9957b703f8", "filename": "tests/ui/unreadable_literal.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c6d53ad2c082f6e76f51e1b352d6b7ae3d50bda8/tests%2Fui%2Funreadable_literal.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c6d53ad2c082f6e76f51e1b352d6b7ae3d50bda8/tests%2Fui%2Funreadable_literal.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funreadable_literal.stderr?ref=c6d53ad2c082f6e76f51e1b352d6b7ae3d50bda8", "patch": "@@ -10,7 +10,7 @@ error: long literal lacking separators\n  --> $DIR/unreadable_literal.rs:7:30\n   |\n 7 |     let bad = (0b110110_i64, 0x12345678901_usize, 123456_f32, 1.234567_f32);\n-  |                              ^^^^^^^^^^^^^^^^^^^ help: consider: `0x123_4567_8901_usize`\n+  |                              ^^^^^^^^^^^^^^^^^^^ help: consider: `0x0123_4567_8901_usize`\n \n error: long literal lacking separators\n  --> $DIR/unreadable_literal.rs:7:51"}]}