{"sha": "93b55365b59767f87ac2a2e42876ad46210a0e55", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzYjU1MzY1YjU5NzY3Zjg3YWMyYTJlNDI4NzZhZDQ2MjEwYTBlNTU=", "commit": {"author": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2019-01-15T16:27:58Z"}, "committer": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2019-01-15T16:27:58Z"}, "message": "use structured macro and path resolve suggestions", "tree": {"sha": "da276383818441e6dd6f2213bf390f548dc50ad4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da276383818441e6dd6f2213bf390f548dc50ad4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/93b55365b59767f87ac2a2e42876ad46210a0e55", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQFKBAABCAA0FiEELriChyEaiMu0yCg7viIhAz7bw3QFAlw+CksWHGFydXNzZWxs\nMTIzQGdtYWlsLmNvbQAKCRC+IiEDPtvDdEFoB/9AGyMVMBA328NwJ1Dbu3mHEN7O\nTti3cqhhTT3puR0YsxEjIBFRKRtw28kv2BwI27u5abJcOqnfRAX12DN3XdndAWGJ\nb3wIJhyXa//OG1cnf3Lg54DRdYU1X/s7hRRgeQrYD8rj41zhgvexDRg0GZEfYA13\nLYKRqzOt2I3mmxLdHobUZIg6oObSetcSiMgSMyZe3Sr0DxGkqE2e15grUbIJU6xh\nMISbXrmNs4Hr7QON+kqXxbcj8+OX8ya97NvyOOGf1eYB85cvjX/rEEeaLbe+ZcrV\nlA7Ra/OxzPwZ1FKl8zdBbFON2CehyW83hYdRHzwqgTaNKTZCsZvoMPIb/VMT\n=Xq9V\n-----END PGP SIGNATURE-----", "payload": "tree da276383818441e6dd6f2213bf390f548dc50ad4\nparent 920192490f3eea0cf3b2e58e28912eb68423fdde\nauthor Andy Russell <arussell123@gmail.com> 1547569678 -0500\ncommitter Andy Russell <arussell123@gmail.com> 1547569678 -0500\n\nuse structured macro and path resolve suggestions\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/93b55365b59767f87ac2a2e42876ad46210a0e55", "html_url": "https://github.com/rust-lang/rust/commit/93b55365b59767f87ac2a2e42876ad46210a0e55", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/93b55365b59767f87ac2a2e42876ad46210a0e55/comments", "author": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "920192490f3eea0cf3b2e58e28912eb68423fdde", "url": "https://api.github.com/repos/rust-lang/rust/commits/920192490f3eea0cf3b2e58e28912eb68423fdde", "html_url": "https://github.com/rust-lang/rust/commit/920192490f3eea0cf3b2e58e28912eb68423fdde"}], "stats": {"total": 64, "additions": 44, "deletions": 20}, "files": [{"sha": "439d149227203fd227895d4038416249c61bdf4e", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/93b55365b59767f87ac2a2e42876ad46210a0e55/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93b55365b59767f87ac2a2e42876ad46210a0e55/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=93b55365b59767f87ac2a2e42876ad46210a0e55", "patch": "@@ -3321,7 +3321,12 @@ impl<'a> Resolver<'a> {\n             if let Some(def) = def {\n                 match (def, source) {\n                     (Def::Macro(..), _) => {\n-                        err.span_label(span, format!(\"did you mean `{}!(...)`?\", path_str));\n+                        err.span_suggestion_with_applicability(\n+                            span,\n+                            \"use `!` to invoke the macro\",\n+                            format!(\"{}!\", path_str),\n+                            Applicability::MaybeIncorrect,\n+                        );\n                         return (err, candidates);\n                     }\n                     (Def::TyAlias(..), PathSource::Trait(_)) => {\n@@ -3333,13 +3338,22 @@ impl<'a> Resolver<'a> {\n                     }\n                     (Def::Mod(..), PathSource::Expr(Some(parent))) => match parent.node {\n                         ExprKind::Field(_, ident) => {\n-                            err.span_label(parent.span, format!(\"did you mean `{}::{}`?\",\n-                                                                 path_str, ident));\n+                            err.span_suggestion_with_applicability(\n+                                parent.span,\n+                                \"use the path separator to refer to an item\",\n+                                format!(\"{}::{}\", path_str, ident),\n+                                Applicability::MaybeIncorrect,\n+                            );\n                             return (err, candidates);\n                         }\n                         ExprKind::MethodCall(ref segment, ..) => {\n-                            err.span_label(parent.span, format!(\"did you mean `{}::{}(...)`?\",\n-                                                                 path_str, segment.ident));\n+                            let span = parent.span.with_hi(segment.ident.span.hi());\n+                            err.span_suggestion_with_applicability(\n+                                span,\n+                                \"use the path separator to refer to an item\",\n+                                format!(\"{}::{}\", path_str, segment.ident),\n+                                Applicability::MaybeIncorrect,\n+                            );\n                             return (err, candidates);\n                         }\n                         _ => {}"}, {"sha": "ebe3c36f21eb1f83d81e824157e98ab42df99b32", "filename": "src/test/ui/resolve/resolve-hint-macro.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93b55365b59767f87ac2a2e42876ad46210a0e55/src%2Ftest%2Fui%2Fresolve%2Fresolve-hint-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/93b55365b59767f87ac2a2e42876ad46210a0e55/src%2Ftest%2Fui%2Fresolve%2Fresolve-hint-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-hint-macro.stderr?ref=93b55365b59767f87ac2a2e42876ad46210a0e55", "patch": "@@ -2,7 +2,7 @@ error[E0423]: expected function, found macro `assert`\n   --> $DIR/resolve-hint-macro.rs:2:5\n    |\n LL |     assert(true);\n-   |     ^^^^^^ did you mean `assert!(...)`?\n+   |     ^^^^^^ help: use `!` to invoke the macro: `assert!`\n \n error: aborting due to previous error\n "}, {"sha": "b7b158ce7efa6e4e5778021fbaabc11a8e6265a4", "filename": "src/test/ui/resolve/suggest-path-instead-of-mod-dot-item.stderr", "status": "modified", "additions": 23, "deletions": 13, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/93b55365b59767f87ac2a2e42876ad46210a0e55/src%2Ftest%2Fui%2Fresolve%2Fsuggest-path-instead-of-mod-dot-item.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/93b55365b59767f87ac2a2e42876ad46210a0e55/src%2Ftest%2Fui%2Fresolve%2Fsuggest-path-instead-of-mod-dot-item.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fsuggest-path-instead-of-mod-dot-item.stderr?ref=93b55365b59767f87ac2a2e42876ad46210a0e55", "patch": "@@ -4,40 +4,45 @@ error[E0423]: expected value, found module `a`\n LL |     a.I\n    |     ^--\n    |     |\n-   |     did you mean `a::I`?\n+   |     help: use the path separator to refer to an item: `a::I`\n \n error[E0423]: expected value, found module `a`\n   --> $DIR/suggest-path-instead-of-mod-dot-item.rs:22:5\n    |\n LL |     a.g()\n-   |     ^----\n+   |     ^--\n    |     |\n-   |     did you mean `a::g(...)`?\n+   |     help: use the path separator to refer to an item: `a::g`\n \n error[E0423]: expected value, found module `a`\n   --> $DIR/suggest-path-instead-of-mod-dot-item.rs:27:5\n    |\n LL |     a.b.J\n    |     ^--\n    |     |\n-   |     did you mean `a::b`?\n+   |     help: use the path separator to refer to an item: `a::b`\n \n error[E0423]: expected value, found module `a::b`\n   --> $DIR/suggest-path-instead-of-mod-dot-item.rs:32:5\n    |\n LL |     a::b.J\n-   |     ^^^---\n-   |     |  |\n-   |     |  help: a constant with a similar name exists: `I`\n-   |     did you mean `a::b::J`?\n+   |     ^^^^\n+help: a constant with a similar name exists\n+   |\n+LL |     a::I.J\n+   |        ^\n+help: use the path separator to refer to an item\n+   |\n+LL |     a::b::J\n+   |\n \n error[E0423]: expected value, found module `a`\n   --> $DIR/suggest-path-instead-of-mod-dot-item.rs:37:5\n    |\n LL |     a.b.f();\n    |     ^--\n    |     |\n-   |     did you mean `a::b`?\n+   |     help: use the path separator to refer to an item: `a::b`\n \n error[E0423]: expected value, found module `a::b`\n   --> $DIR/suggest-path-instead-of-mod-dot-item.rs:40:12\n@@ -51,10 +56,15 @@ error[E0423]: expected value, found module `a::b`\n   --> $DIR/suggest-path-instead-of-mod-dot-item.rs:45:5\n    |\n LL |     a::b.f()\n-   |     ^^^-----\n-   |     |  |\n-   |     |  help: a constant with a similar name exists: `I`\n-   |     did you mean `a::b::f(...)`?\n+   |     ^^^^\n+help: a constant with a similar name exists\n+   |\n+LL |     a::I.f()\n+   |        ^\n+help: use the path separator to refer to an item\n+   |\n+LL |     a::b::f()\n+   |     ^^^^^^^\n \n error[E0423]: expected value, found module `a::b`\n   --> $DIR/suggest-path-instead-of-mod-dot-item.rs:50:5"}, {"sha": "a7b81060d3dc6a3e1b4746f56bf7396f846f2718", "filename": "src/test/ui/try-block/try-block-in-edition2015.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93b55365b59767f87ac2a2e42876ad46210a0e55/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-edition2015.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/93b55365b59767f87ac2a2e42876ad46210a0e55/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-edition2015.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-in-edition2015.stderr?ref=93b55365b59767f87ac2a2e42876ad46210a0e55", "patch": "@@ -15,7 +15,7 @@ error[E0574]: expected struct, variant or union type, found macro `try`\n   --> $DIR/try-block-in-edition2015.rs:4:33\n    |\n LL |     let try_result: Option<_> = try {\n-   |                                 ^^^ did you mean `try!(...)`?\n+   |                                 ^^^ help: use `!` to invoke the macro: `try!`\n \n error: aborting due to 2 previous errors\n "}]}