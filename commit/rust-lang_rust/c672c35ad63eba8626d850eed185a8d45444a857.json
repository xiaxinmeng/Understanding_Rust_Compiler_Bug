{"sha": "c672c35ad63eba8626d850eed185a8d45444a857", "node_id": "C_kwDOAAsO6NoAKGM2NzJjMzVhZDYzZWJhODYyNmQ4NTBlZWQxODVhOGQ0NTQ0NGE4NTc", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-09-21T13:25:30Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-09-21T13:25:30Z"}, "message": "format > to_string", "tree": {"sha": "c4332cfe34d949c0c279a19c5c7ccc52e71a73fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4332cfe34d949c0c279a19c5c7ccc52e71a73fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c672c35ad63eba8626d850eed185a8d45444a857", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c672c35ad63eba8626d850eed185a8d45444a857", "html_url": "https://github.com/rust-lang/rust/commit/c672c35ad63eba8626d850eed185a8d45444a857", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c672c35ad63eba8626d850eed185a8d45444a857/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33284ec099299a4c9b587a196ade88773cb1c430", "url": "https://api.github.com/repos/rust-lang/rust/commits/33284ec099299a4c9b587a196ade88773cb1c430", "html_url": "https://github.com/rust-lang/rust/commit/33284ec099299a4c9b587a196ade88773cb1c430"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e0985ace5be7da3d8c2f0c3c3f0933013845cc76", "filename": "src/shims/intrinsics/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c672c35ad63eba8626d850eed185a8d45444a857/src%2Fshims%2Fintrinsics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c672c35ad63eba8626d850eed185a8d45444a857/src%2Fshims%2Fintrinsics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fintrinsics%2Fmod.rs?ref=c672c35ad63eba8626d850eed185a8d45444a857", "patch": "@@ -365,7 +365,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriInterpCxExt<'mir, 'tcx> {\n             \"breakpoint\" => {\n                 let [] = check_arg_count(args)?;\n                 // normally this would raise a SIGTRAP, which aborts if no debugger is connected\n-                throw_machine_stop!(TerminationInfo::Abort(\"Trace/breakpoint trap\".to_string()))\n+                throw_machine_stop!(TerminationInfo::Abort(format!(\"Trace/breakpoint trap\")))\n             }\n \n             name => throw_unsup_format!(\"unimplemented intrinsic: `{name}`\"),"}]}