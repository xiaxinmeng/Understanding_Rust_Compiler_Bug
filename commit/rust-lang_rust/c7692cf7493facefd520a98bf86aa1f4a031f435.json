{"sha": "c7692cf7493facefd520a98bf86aa1f4a031f435", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3NjkyY2Y3NDkzZmFjZWZkNTIwYTk4YmY4NmFhMWY0YTAzMWY0MzU=", "commit": {"author": {"name": "Hirochika Matsumoto", "email": "matsujika@gmail.com", "date": "2020-10-18T08:27:08Z"}, "committer": {"name": "Hirochika Matsumoto", "email": "matsujika@gmail.com", "date": "2020-11-17T16:28:37Z"}, "message": "Skip function with no exprs contained", "tree": {"sha": "9e6f996382455b00909189db68fbbfbabc317c59", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e6f996382455b00909189db68fbbfbabc317c59"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c7692cf7493facefd520a98bf86aa1f4a031f435", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c7692cf7493facefd520a98bf86aa1f4a031f435", "html_url": "https://github.com/rust-lang/rust/commit/c7692cf7493facefd520a98bf86aa1f4a031f435", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c7692cf7493facefd520a98bf86aa1f4a031f435/comments", "author": {"login": "hkmatsumoto", "id": 57856193, "node_id": "MDQ6VXNlcjU3ODU2MTkz", "avatar_url": "https://avatars.githubusercontent.com/u/57856193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hkmatsumoto", "html_url": "https://github.com/hkmatsumoto", "followers_url": "https://api.github.com/users/hkmatsumoto/followers", "following_url": "https://api.github.com/users/hkmatsumoto/following{/other_user}", "gists_url": "https://api.github.com/users/hkmatsumoto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hkmatsumoto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hkmatsumoto/subscriptions", "organizations_url": "https://api.github.com/users/hkmatsumoto/orgs", "repos_url": "https://api.github.com/users/hkmatsumoto/repos", "events_url": "https://api.github.com/users/hkmatsumoto/events{/privacy}", "received_events_url": "https://api.github.com/users/hkmatsumoto/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hkmatsumoto", "id": 57856193, "node_id": "MDQ6VXNlcjU3ODU2MTkz", "avatar_url": "https://avatars.githubusercontent.com/u/57856193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hkmatsumoto", "html_url": "https://github.com/hkmatsumoto", "followers_url": "https://api.github.com/users/hkmatsumoto/followers", "following_url": "https://api.github.com/users/hkmatsumoto/following{/other_user}", "gists_url": "https://api.github.com/users/hkmatsumoto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hkmatsumoto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hkmatsumoto/subscriptions", "organizations_url": "https://api.github.com/users/hkmatsumoto/orgs", "repos_url": "https://api.github.com/users/hkmatsumoto/repos", "events_url": "https://api.github.com/users/hkmatsumoto/events{/privacy}", "received_events_url": "https://api.github.com/users/hkmatsumoto/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5447eb3c167025fcc1b842fabd7bb43a2eb1e9e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5447eb3c167025fcc1b842fabd7bb43a2eb1e9e", "html_url": "https://github.com/rust-lang/rust/commit/c5447eb3c167025fcc1b842fabd7bb43a2eb1e9e"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "28cc20f000759ec2b7bad39b974247a01e05ab96", "filename": "clippy_lints/src/unnecessary_wrap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c7692cf7493facefd520a98bf86aa1f4a031f435/clippy_lints%2Fsrc%2Funnecessary_wrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7692cf7493facefd520a98bf86aa1f4a031f435/clippy_lints%2Fsrc%2Funnecessary_wrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funnecessary_wrap.rs?ref=c7692cf7493facefd520a98bf86aa1f4a031f435", "patch": "@@ -98,7 +98,7 @@ impl<'tcx> LateLintPass<'tcx> for UnnecessaryWrap {\n             }\n         });\n \n-        if can_sugg {\n+        if can_sugg && !suggs.is_empty() {\n             span_lint_and_then(\n                 cx,\n                 UNNECESSARY_WRAP,"}]}