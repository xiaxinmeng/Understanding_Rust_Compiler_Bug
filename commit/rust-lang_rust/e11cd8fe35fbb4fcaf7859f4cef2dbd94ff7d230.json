{"sha": "e11cd8fe35fbb4fcaf7859f4cef2dbd94ff7d230", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxMWNkOGZlMzVmYmI0ZmNhZjc4NTlmNGNlZjJkYmQ5NGZmN2QyMzA=", "commit": {"author": {"name": "adamrk", "email": "ark.email@gmail.com", "date": "2020-09-02T20:33:54Z"}, "committer": {"name": "adamrk", "email": "ark.email@gmail.com", "date": "2020-09-02T20:33:54Z"}, "message": "Remove exposing unification", "tree": {"sha": "151d1188da4ce2a5a41d730bcc64ffd42e5447aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/151d1188da4ce2a5a41d730bcc64ffd42e5447aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e11cd8fe35fbb4fcaf7859f4cef2dbd94ff7d230", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e11cd8fe35fbb4fcaf7859f4cef2dbd94ff7d230", "html_url": "https://github.com/rust-lang/rust/commit/e11cd8fe35fbb4fcaf7859f4cef2dbd94ff7d230", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e11cd8fe35fbb4fcaf7859f4cef2dbd94ff7d230/comments", "author": {"login": "adamrk", "id": 16367467, "node_id": "MDQ6VXNlcjE2MzY3NDY3", "avatar_url": "https://avatars.githubusercontent.com/u/16367467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamrk", "html_url": "https://github.com/adamrk", "followers_url": "https://api.github.com/users/adamrk/followers", "following_url": "https://api.github.com/users/adamrk/following{/other_user}", "gists_url": "https://api.github.com/users/adamrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamrk/subscriptions", "organizations_url": "https://api.github.com/users/adamrk/orgs", "repos_url": "https://api.github.com/users/adamrk/repos", "events_url": "https://api.github.com/users/adamrk/events{/privacy}", "received_events_url": "https://api.github.com/users/adamrk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "adamrk", "id": 16367467, "node_id": "MDQ6VXNlcjE2MzY3NDY3", "avatar_url": "https://avatars.githubusercontent.com/u/16367467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamrk", "html_url": "https://github.com/adamrk", "followers_url": "https://api.github.com/users/adamrk/followers", "following_url": "https://api.github.com/users/adamrk/following{/other_user}", "gists_url": "https://api.github.com/users/adamrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamrk/subscriptions", "organizations_url": "https://api.github.com/users/adamrk/orgs", "repos_url": "https://api.github.com/users/adamrk/repos", "events_url": "https://api.github.com/users/adamrk/events{/privacy}", "received_events_url": "https://api.github.com/users/adamrk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9bb86ad7dfd17543e6e1c9ef184337f828b1027", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9bb86ad7dfd17543e6e1c9ef184337f828b1027", "html_url": "https://github.com/rust-lang/rust/commit/d9bb86ad7dfd17543e6e1c9ef184337f828b1027"}], "stats": {"total": 24, "additions": 1, "deletions": 23}, "files": [{"sha": "dc3a1699f1d72062b2c0957ec6b9a3514d1f489e", "filename": "crates/hir/src/code_model.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e11cd8fe35fbb4fcaf7859f4cef2dbd94ff7d230/crates%2Fhir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e11cd8fe35fbb4fcaf7859f4cef2dbd94ff7d230/crates%2Fhir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fcode_model.rs?ref=e11cd8fe35fbb4fcaf7859f4cef2dbd94ff7d230", "patch": "@@ -1118,12 +1118,6 @@ impl Local {\n             ast.map_left(|it| it.cast().unwrap().to_node(&root)).map_right(|it| it.to_node(&root))\n         })\n     }\n-\n-    pub fn can_unify(self, other: Type, db: &dyn HirDatabase) -> bool {\n-        let def = DefWithBodyId::from(self.parent);\n-        let infer = db.infer(def);\n-        db.can_unify(def, infer[self.pat_id].clone(), other.ty.value)\n-    }\n }\n \n #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]"}, {"sha": "25cf9eb7f1279099a2e7de51ad08e8b7e5a7add0", "filename": "crates/hir_ty/src/db.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e11cd8fe35fbb4fcaf7859f4cef2dbd94ff7d230/crates%2Fhir_ty%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e11cd8fe35fbb4fcaf7859f4cef2dbd94ff7d230/crates%2Fhir_ty%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdb.rs?ref=e11cd8fe35fbb4fcaf7859f4cef2dbd94ff7d230", "patch": "@@ -26,9 +26,6 @@ pub trait HirDatabase: DefDatabase + Upcast<dyn DefDatabase> {\n     #[salsa::invoke(crate::infer::infer_query)]\n     fn infer_query(&self, def: DefWithBodyId) -> Arc<InferenceResult>;\n \n-    #[salsa::invoke(crate::infer::can_unify)]\n-    fn can_unify(&self, def: DefWithBodyId, ty1: Ty, ty2: Ty) -> bool;\n-\n     #[salsa::invoke(crate::lower::ty_query)]\n     #[salsa::cycle(crate::lower::ty_recover)]\n     fn ty(&self, def: TyDefId) -> Binders<Ty>;"}, {"sha": "2db05ae78d8eb3532f67125d6098a42ca7f1727a", "filename": "crates/hir_ty/src/infer.rs", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e11cd8fe35fbb4fcaf7859f4cef2dbd94ff7d230/crates%2Fhir_ty%2Fsrc%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e11cd8fe35fbb4fcaf7859f4cef2dbd94ff7d230/crates%2Fhir_ty%2Fsrc%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer.rs?ref=e11cd8fe35fbb4fcaf7859f4cef2dbd94ff7d230", "patch": "@@ -78,19 +78,6 @@ pub(crate) fn infer_query(db: &dyn HirDatabase, def: DefWithBodyId) -> Arc<Infer\n     Arc::new(ctx.resolve_all())\n }\n \n-pub(crate) fn can_unify(db: &dyn HirDatabase, def: DefWithBodyId, ty1: Ty, ty2: Ty) -> bool {\n-    let resolver = def.resolver(db.upcast());\n-    let mut ctx = InferenceContext::new(db, def, resolver);\n-\n-    let ty1 = ctx.canonicalizer().canonicalize_ty(ty1).value;\n-    let ty2 = ctx.canonicalizer().canonicalize_ty(ty2).value;\n-    let mut kinds = Vec::from(ty1.kinds.to_vec());\n-    kinds.extend_from_slice(ty2.kinds.as_ref());\n-    let tys = crate::Canonical::new((ty1.value, ty2.value), kinds);\n-\n-    unify(&tys).is_some()\n-}\n-\n #[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]\n enum ExprOrPatId {\n     ExprId(ExprId),"}, {"sha": "c7d460465c21abc7ce58ccba91681a638155ba7e", "filename": "crates/ide/src/completion/presentation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e11cd8fe35fbb4fcaf7859f4cef2dbd94ff7d230/crates%2Fide%2Fsrc%2Fcompletion%2Fpresentation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e11cd8fe35fbb4fcaf7859f4cef2dbd94ff7d230/crates%2Fide%2Fsrc%2Fcompletion%2Fpresentation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fcompletion%2Fpresentation.rs?ref=e11cd8fe35fbb4fcaf7859f4cef2dbd94ff7d230", "patch": "@@ -194,7 +194,7 @@ impl Completions {\n         fn add_arg(arg: &str, ty: &Type, ctx: &CompletionContext) -> String {\n             if let Some(derefed_ty) = ty.remove_ref() {\n                 for (name, local) in ctx.locals.iter() {\n-                    if name == arg && local.can_unify(derefed_ty.clone(), ctx.db) {\n+                    if name == arg && local.ty(ctx.db) == derefed_ty {\n                         return (if ty.is_mutable_reference() { \"&mut \" } else { \"&\" }).to_string()\n                             + &arg.to_string();\n                     }"}]}