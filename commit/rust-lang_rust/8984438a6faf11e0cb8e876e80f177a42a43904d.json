{"sha": "8984438a6faf11e0cb8e876e80f177a42a43904d", "node_id": "C_kwDOAAsO6NoAKDg5ODQ0MzhhNmZhZjExZTBjYjhlODc2ZTgwZjE3N2E0MmE0MzkwNGQ", "commit": {"author": {"name": "Yacin Tmimi", "email": "yacintmimi@gmail.com", "date": "2022-03-18T13:48:45Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2022-03-21T21:56:34Z"}, "message": "Honor `#[rustfmt::skip::attributes(derive)]` attribute\n\nFixes 5270\n\nPreviously, rustfmt only checked the `merge_derives` configuration value\nto determine if it should merge_derives. This lead to derives being\nmerged even when annotated with the `rustfmt::skip` attribute.\n\nNow, rustfmt also checks if derives are explicitly being skipped in the\ncurrent context via the `rustfmt::skip` attribute.", "tree": {"sha": "1e43705d311c43a98f4bfe7b7c1e1561d02ef14d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e43705d311c43a98f4bfe7b7c1e1561d02ef14d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8984438a6faf11e0cb8e876e80f177a42a43904d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8984438a6faf11e0cb8e876e80f177a42a43904d", "html_url": "https://github.com/rust-lang/rust/commit/8984438a6faf11e0cb8e876e80f177a42a43904d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8984438a6faf11e0cb8e876e80f177a42a43904d/comments", "author": {"login": "ytmimi", "id": 29028348, "node_id": "MDQ6VXNlcjI5MDI4MzQ4", "avatar_url": "https://avatars.githubusercontent.com/u/29028348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ytmimi", "html_url": "https://github.com/ytmimi", "followers_url": "https://api.github.com/users/ytmimi/followers", "following_url": "https://api.github.com/users/ytmimi/following{/other_user}", "gists_url": "https://api.github.com/users/ytmimi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ytmimi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ytmimi/subscriptions", "organizations_url": "https://api.github.com/users/ytmimi/orgs", "repos_url": "https://api.github.com/users/ytmimi/repos", "events_url": "https://api.github.com/users/ytmimi/events{/privacy}", "received_events_url": "https://api.github.com/users/ytmimi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0dba01aee15a45b8417c06df69e38af6956e03a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/0dba01aee15a45b8417c06df69e38af6956e03a8", "html_url": "https://github.com/rust-lang/rust/commit/0dba01aee15a45b8417c06df69e38af6956e03a8"}], "stats": {"total": 190, "additions": 189, "deletions": 1}, "files": [{"sha": "befe12ae2c4cd7f6d80fb207cc3856464d6ef463", "filename": "src/attr.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8984438a6faf11e0cb8e876e80f177a42a43904d/src%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8984438a6faf11e0cb8e876e80f177a42a43904d/src%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fattr.rs?ref=8984438a6faf11e0cb8e876e80f177a42a43904d", "patch": "@@ -389,6 +389,10 @@ impl Rewrite for [ast::Attribute] {\n         let mut attrs = self;\n         let mut result = String::new();\n \n+        // Determine if the source text is annotated with `#[rustfmt::skip::attributes(derive)]`\n+        // or `#![rustfmt::skip::attributes(derive)]`\n+        let skip_derives = context.skip_context.skip_attribute(\"derive\");\n+\n         // This is not just a simple map because we need to handle doc comments\n         // (where we take as many doc comment attributes as possible) and possibly\n         // merging derives into a single attribute.\n@@ -431,7 +435,7 @@ impl Rewrite for [ast::Attribute] {\n             }\n \n             // Handle derives if we will merge them.\n-            if context.config.merge_derives() && is_derive(&attrs[0]) {\n+            if !skip_derives && context.config.merge_derives() && is_derive(&attrs[0]) {\n                 let derives = take_while_with_pred(context, attrs, is_derive);\n                 let derive_str = format_derive(derives, shape, context)?;\n                 result.push_str(&derive_str);"}, {"sha": "b31bbf095e73074b6ad6c9757bd3597114ff06fb", "filename": "tests/source/issue-5270/merge_derives_true.rs", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/8984438a6faf11e0cb8e876e80f177a42a43904d/tests%2Fsource%2Fissue-5270%2Fmerge_derives_true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8984438a6faf11e0cb8e876e80f177a42a43904d/tests%2Fsource%2Fissue-5270%2Fmerge_derives_true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-5270%2Fmerge_derives_true.rs?ref=8984438a6faf11e0cb8e876e80f177a42a43904d", "patch": "@@ -0,0 +1,62 @@\n+// rustfmt-merge_derives:true\n+\n+#[rustfmt::skip::attributes(derive)]\n+#[allow(dead_code)]\n+#[derive(StructField)]\n+#[derive(Clone)]\n+struct DoNotMergeDerives {\n+    field: String,\n+}\n+\n+#[allow(dead_code)]\n+#[derive(StructField)]\n+#[rustfmt::skip::attributes(derive)]\n+#[derive(Clone)]\n+struct DoNotMergeDerivesSkipInMiddle {\n+    field: String,\n+}\n+\n+#[allow(dead_code)]\n+#[derive(StructField)]\n+#[derive(Clone)]\n+#[rustfmt::skip::attributes(derive)]\n+struct DoNotMergeDerivesSkipAtEnd {\n+    field: String,\n+}\n+\n+#[allow(dead_code)]\n+#[derive(StructField)]\n+#[derive(Clone)]\n+struct MergeDerives {\n+    field: String,\n+}\n+\n+mod inner_attribute_derive_skip {\n+    #![rustfmt::skip::attributes(derive)]\n+\n+    #[allow(dead_code)]\n+    #[derive(StructField)]\n+    #[derive(Clone)]\n+    struct DoNotMergeDerives {\n+        field: String,\n+    }\n+}\n+\n+#[rustfmt::skip::attributes(derive)]\n+mod outer_attribute_derive_skip {\n+    #[allow(dead_code)]\n+    #[derive(StructField)]\n+    #[derive(Clone)]\n+    struct DoNotMergeDerives {\n+        field: String,\n+    }\n+}\n+\n+mod no_derive_skip {\n+    #[allow(dead_code)]\n+    #[derive(StructField)]\n+    #[derive(Clone)]\n+    struct MergeDerives {\n+        field: String,\n+    }\n+}"}, {"sha": "3b6f7e66993c0023678d6ef00d71efd7226a8cdc", "filename": "tests/target/issue-5270/merge_derives_false.rs", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/8984438a6faf11e0cb8e876e80f177a42a43904d/tests%2Ftarget%2Fissue-5270%2Fmerge_derives_false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8984438a6faf11e0cb8e876e80f177a42a43904d/tests%2Ftarget%2Fissue-5270%2Fmerge_derives_false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-5270%2Fmerge_derives_false.rs?ref=8984438a6faf11e0cb8e876e80f177a42a43904d", "patch": "@@ -0,0 +1,62 @@\n+// rustfmt-merge_derives:false\n+\n+#[rustfmt::skip::attributes(derive)]\n+#[allow(dead_code)]\n+#[derive(StructField)]\n+#[derive(Clone)]\n+struct DoNotMergeDerives {\n+    field: String,\n+}\n+\n+#[allow(dead_code)]\n+#[derive(StructField)]\n+#[rustfmt::skip::attributes(derive)]\n+#[derive(Clone)]\n+struct DoNotMergeDerivesSkipInMiddle {\n+    field: String,\n+}\n+\n+#[allow(dead_code)]\n+#[derive(StructField)]\n+#[derive(Clone)]\n+#[rustfmt::skip::attributes(derive)]\n+struct DoNotMergeDerivesSkipAtEnd {\n+    field: String,\n+}\n+\n+#[allow(dead_code)]\n+#[derive(StructField)]\n+#[derive(Clone)]\n+struct MergeDerives {\n+    field: String,\n+}\n+\n+mod inner_attribute_derive_skip {\n+    #![rustfmt::skip::attributes(derive)]\n+\n+    #[allow(dead_code)]\n+    #[derive(StructField)]\n+    #[derive(Clone)]\n+    struct DoNotMergeDerives {\n+        field: String,\n+    }\n+}\n+\n+#[rustfmt::skip::attributes(derive)]\n+mod outer_attribute_derive_skip {\n+    #[allow(dead_code)]\n+    #[derive(StructField)]\n+    #[derive(Clone)]\n+    struct DoNotMergeDerives {\n+        field: String,\n+    }\n+}\n+\n+mod no_derive_skip {\n+    #[allow(dead_code)]\n+    #[derive(StructField)]\n+    #[derive(Clone)]\n+    struct MergeDerives {\n+        field: String,\n+    }\n+}"}, {"sha": "5f488b4542d0b60877cac5850fc1935e93acbeb8", "filename": "tests/target/issue-5270/merge_derives_true.rs", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/8984438a6faf11e0cb8e876e80f177a42a43904d/tests%2Ftarget%2Fissue-5270%2Fmerge_derives_true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8984438a6faf11e0cb8e876e80f177a42a43904d/tests%2Ftarget%2Fissue-5270%2Fmerge_derives_true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-5270%2Fmerge_derives_true.rs?ref=8984438a6faf11e0cb8e876e80f177a42a43904d", "patch": "@@ -0,0 +1,60 @@\n+// rustfmt-merge_derives:true\n+\n+#[rustfmt::skip::attributes(derive)]\n+#[allow(dead_code)]\n+#[derive(StructField)]\n+#[derive(Clone)]\n+struct DoNotMergeDerives {\n+    field: String,\n+}\n+\n+#[allow(dead_code)]\n+#[derive(StructField)]\n+#[rustfmt::skip::attributes(derive)]\n+#[derive(Clone)]\n+struct DoNotMergeDerivesSkipInMiddle {\n+    field: String,\n+}\n+\n+#[allow(dead_code)]\n+#[derive(StructField)]\n+#[derive(Clone)]\n+#[rustfmt::skip::attributes(derive)]\n+struct DoNotMergeDerivesSkipAtEnd {\n+    field: String,\n+}\n+\n+#[allow(dead_code)]\n+#[derive(StructField, Clone)]\n+struct MergeDerives {\n+    field: String,\n+}\n+\n+mod inner_attribute_derive_skip {\n+    #![rustfmt::skip::attributes(derive)]\n+\n+    #[allow(dead_code)]\n+    #[derive(StructField)]\n+    #[derive(Clone)]\n+    struct DoNotMergeDerives {\n+        field: String,\n+    }\n+}\n+\n+#[rustfmt::skip::attributes(derive)]\n+mod outer_attribute_derive_skip {\n+    #[allow(dead_code)]\n+    #[derive(StructField)]\n+    #[derive(Clone)]\n+    struct DoNotMergeDerives {\n+        field: String,\n+    }\n+}\n+\n+mod no_derive_skip {\n+    #[allow(dead_code)]\n+    #[derive(StructField, Clone)]\n+    struct MergeDerives {\n+        field: String,\n+    }\n+}"}]}