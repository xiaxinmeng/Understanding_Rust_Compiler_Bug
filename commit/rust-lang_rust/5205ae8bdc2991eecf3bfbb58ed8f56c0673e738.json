{"sha": "5205ae8bdc2991eecf3bfbb58ed8f56c0673e738", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyMDVhZThiZGMyOTkxZWVjZjNiZmJiNThlZDhmNTZjMDY3M2U3Mzg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-06-13T23:29:51Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-06-13T23:29:51Z"}, "message": "Auto merge of #51542 - ccesare:remove_update-reference, r=oli-obk\n\nRemoved various update-reference and update-all-references scripts\n\nA PR that addresses #50853 changes that made `update-reference` and `update-all-references` scripts obsolete.", "tree": {"sha": "0e167fa91316e97ddcc02b78746c4ed7b1942c99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e167fa91316e97ddcc02b78746c4ed7b1942c99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5205ae8bdc2991eecf3bfbb58ed8f56c0673e738", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5205ae8bdc2991eecf3bfbb58ed8f56c0673e738", "html_url": "https://github.com/rust-lang/rust/commit/5205ae8bdc2991eecf3bfbb58ed8f56c0673e738", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5205ae8bdc2991eecf3bfbb58ed8f56c0673e738/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b907d966528a6859ec847a2a4d32f092a5be6584", "url": "https://api.github.com/repos/rust-lang/rust/commits/b907d966528a6859ec847a2a4d32f092a5be6584", "html_url": "https://github.com/rust-lang/rust/commit/b907d966528a6859ec847a2a4d32f092a5be6584"}, {"sha": "28872499bc9922a276955fbd1fc1325ccb9eabbb", "url": "https://api.github.com/repos/rust-lang/rust/commits/28872499bc9922a276955fbd1fc1325ccb9eabbb", "html_url": "https://github.com/rust-lang/rust/commit/28872499bc9922a276955fbd1fc1325ccb9eabbb"}], "stats": {"total": 234, "additions": 0, "deletions": 234}, "files": [{"sha": "c3f615066bbbd9d4c3a977791db4e8bae6f30f3d", "filename": "src/test/rustfix/update-all-references.sh", "status": "removed", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/b907d966528a6859ec847a2a4d32f092a5be6584/src%2Ftest%2Frustfix%2Fupdate-all-references.sh", "raw_url": "https://github.com/rust-lang/rust/raw/b907d966528a6859ec847a2a4d32f092a5be6584/src%2Ftest%2Frustfix%2Fupdate-all-references.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustfix%2Fupdate-all-references.sh?ref=b907d966528a6859ec847a2a4d32f092a5be6584", "patch": "@@ -1,31 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n-# A script to update the references for all tests. The idea is that\n-# you do a run, which will generate files in the build directory\n-# containing the (normalized) actual output of the compiler. You then\n-# run this script, which will copy those files over. If you find\n-# yourself manually editing a foo.stderr file, you're doing it wrong.\n-#\n-# See all `update-references.sh`, if you just want to update a single test.\n-\n-if [[ \"$1\" == \"--help\" || \"$1\" == \"-h\" || \"$1\" == \"\" || \"$2\" != \"\" ]]; then\n-    echo \"usage: $0 <build-directory>\"\n-    echo \"\"\n-    echo \"For example:\"\n-    echo \"   $0 ../../../build/x86_64-apple-darwin/test/rustfix\"\n-fi\n-\n-BUILD_DIR=$PWD/$1\n-MY_DIR=$(dirname $0)\n-cd $MY_DIR\n-find . -name '*.rs' | xargs ./update-references.sh $BUILD_DIR"}, {"sha": "bcca2fec10d33c830b306b87d0a763f2164cd14c", "filename": "src/test/rustfix/update-references.sh", "status": "removed", "additions": 0, "deletions": 45, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/b907d966528a6859ec847a2a4d32f092a5be6584/src%2Ftest%2Frustfix%2Fupdate-references.sh", "raw_url": "https://github.com/rust-lang/rust/raw/b907d966528a6859ec847a2a4d32f092a5be6584/src%2Ftest%2Frustfix%2Fupdate-references.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustfix%2Fupdate-references.sh?ref=b907d966528a6859ec847a2a4d32f092a5be6584", "patch": "@@ -1,45 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n-# A script to update the references for particular tests. The idea is\n-# that you do a run, which will generate files in the build directory\n-# containing the (normalized) actual output of the compiler. This\n-# script will then copy that output and replace the \"expected output\"\n-# files. You can then commit the changes.\n-#\n-# If you find yourself manually editing a foo.stderr file, you're\n-# doing it wrong.\n-\n-if [[ \"$1\" == \"--help\" || \"$1\" == \"-h\" || \"$1\" == \"\" || \"$2\" == \"\" ]]; then\n-    echo \"usage: $0 <build-directory> <relative-path-to-rs-files>\"\n-    echo \"\"\n-    echo \"For example:\"\n-    echo \"   $0 ../../../build/x86_64-apple-darwin/test/rustfix *.rs */*.rs\"\n-fi\n-\n-MYDIR=$(dirname $0)\n-\n-BUILD_DIR=\"$1\"\n-shift\n-\n-shopt -s nullglob\n-\n-while [[ \"$1\" != \"\" ]]; do\n-    for OUT_NAME in $BUILD_DIR/${1%.rs}.*fixed; do\n-        OUT_BASE=`basename \"$OUT_NAME\"`\n-        if ! (diff $OUT_NAME $MYDIR/$OUT_BASE >& /dev/null); then\n-            echo updating $MYDIR/$OUT_BASE\n-            cp $OUT_NAME $MYDIR\n-        fi\n-    done\n-    shift\n-done"}, {"sha": "bfc6f923f9d2eb0b196ebd6d8c8b52fee321dfa1", "filename": "src/test/ui-fulldeps/update-all-references.sh", "status": "removed", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/b907d966528a6859ec847a2a4d32f092a5be6584/src%2Ftest%2Fui-fulldeps%2Fupdate-all-references.sh", "raw_url": "https://github.com/rust-lang/rust/raw/b907d966528a6859ec847a2a4d32f092a5be6584/src%2Ftest%2Fui-fulldeps%2Fupdate-all-references.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fupdate-all-references.sh?ref=b907d966528a6859ec847a2a4d32f092a5be6584", "patch": "@@ -1,31 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n-# A script to update the references for all tests. The idea is that\n-# you do a run, which will generate files in the build directory\n-# containing the (normalized) actual output of the compiler. You then\n-# run this script, which will copy those files over. If you find\n-# yourself manually editing a foo.stderr file, you're doing it wrong.\n-#\n-# See all `update-references.sh`, if you just want to update a single test.\n-\n-if [[ \"$1\" == \"--help\" || \"$1\" == \"-h\" || \"$1\" == \"\" || \"$2\" != \"\" ]]; then\n-    echo \"usage: $0 <build-directory>\"\n-    echo \"\"\n-    echo \"For example:\"\n-    echo \"   $0 ../../../build/x86_64-apple-darwin/test/ui\"\n-fi\n-\n-BUILD_DIR=$PWD/$1\n-MY_DIR=$(dirname $0)\n-cd $MY_DIR\n-find . -name '*.rs' | xargs ./update-references.sh $BUILD_DIR"}, {"sha": "48e7ec8c25a22d01b2e8ed4744dd30162c07501e", "filename": "src/test/ui-fulldeps/update-references.sh", "status": "removed", "additions": 0, "deletions": 48, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/b907d966528a6859ec847a2a4d32f092a5be6584/src%2Ftest%2Fui-fulldeps%2Fupdate-references.sh", "raw_url": "https://github.com/rust-lang/rust/raw/b907d966528a6859ec847a2a4d32f092a5be6584/src%2Ftest%2Fui-fulldeps%2Fupdate-references.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fupdate-references.sh?ref=b907d966528a6859ec847a2a4d32f092a5be6584", "patch": "@@ -1,48 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n-# A script to update the references for particular tests. The idea is\n-# that you do a run, which will generate files in the build directory\n-# containing the (normalized) actual output of the compiler. This\n-# script will then copy that output and replace the \"expected output\"\n-# files. You can then commit the changes.\n-#\n-# If you find yourself manually editing a foo.stderr file, you're\n-# doing it wrong.\n-\n-if [[ \"$1\" == \"--help\" || \"$1\" == \"-h\" || \"$1\" == \"\" || \"$2\" == \"\" ]]; then\n-    echo \"usage: $0 <build-directory> <relative-path-to-rs-files>\"\n-    echo \"\"\n-    echo \"For example:\"\n-    echo \"   $0 ../../../build/x86_64-apple-darwin/test/ui *.rs */*.rs\"\n-fi\n-\n-MYDIR=$(dirname $0)\n-\n-BUILD_DIR=\"$1\"\n-shift\n-\n-shopt -s nullglob\n-\n-while [[ \"$1\" != \"\" ]]; do\n-    for EXT in \"stderr\" \"stdout\"; do\n-        for OUT_NAME in $BUILD_DIR/${1%.rs}*/*$EXT; do\n-            OUT_DIR=`dirname \"$1\"`\n-            OUT_BASE=`basename \"$OUT_NAME\"`\n-            if ! (diff $OUT_NAME $MYDIR/$OUT_DIR/$OUT_BASE >& /dev/null); then\n-                echo updating $MYDIR/$OUT_DIR/$OUT_BASE\n-                cp $OUT_NAME $MYDIR/$OUT_DIR\n-            fi\n-        done\n-    done\n-    shift\n-done"}, {"sha": "bfc6f923f9d2eb0b196ebd6d8c8b52fee321dfa1", "filename": "src/test/ui/update-all-references.sh", "status": "removed", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/b907d966528a6859ec847a2a4d32f092a5be6584/src%2Ftest%2Fui%2Fupdate-all-references.sh", "raw_url": "https://github.com/rust-lang/rust/raw/b907d966528a6859ec847a2a4d32f092a5be6584/src%2Ftest%2Fui%2Fupdate-all-references.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fupdate-all-references.sh?ref=b907d966528a6859ec847a2a4d32f092a5be6584", "patch": "@@ -1,31 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n-# A script to update the references for all tests. The idea is that\n-# you do a run, which will generate files in the build directory\n-# containing the (normalized) actual output of the compiler. You then\n-# run this script, which will copy those files over. If you find\n-# yourself manually editing a foo.stderr file, you're doing it wrong.\n-#\n-# See all `update-references.sh`, if you just want to update a single test.\n-\n-if [[ \"$1\" == \"--help\" || \"$1\" == \"-h\" || \"$1\" == \"\" || \"$2\" != \"\" ]]; then\n-    echo \"usage: $0 <build-directory>\"\n-    echo \"\"\n-    echo \"For example:\"\n-    echo \"   $0 ../../../build/x86_64-apple-darwin/test/ui\"\n-fi\n-\n-BUILD_DIR=$PWD/$1\n-MY_DIR=$(dirname $0)\n-cd $MY_DIR\n-find . -name '*.rs' | xargs ./update-references.sh $BUILD_DIR"}, {"sha": "f3c5997fc3f5309dfb4cffc753b3f2cdee73f6fd", "filename": "src/test/ui/update-references.sh", "status": "removed", "additions": 0, "deletions": 48, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/b907d966528a6859ec847a2a4d32f092a5be6584/src%2Ftest%2Fui%2Fupdate-references.sh", "raw_url": "https://github.com/rust-lang/rust/raw/b907d966528a6859ec847a2a4d32f092a5be6584/src%2Ftest%2Fui%2Fupdate-references.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fupdate-references.sh?ref=b907d966528a6859ec847a2a4d32f092a5be6584", "patch": "@@ -1,48 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n-# A script to update the references for particular tests. The idea is\n-# that you do a run, which will generate files in the build directory\n-# containing the (normalized) actual output of the compiler. This\n-# script will then copy that output and replace the \"expected output\"\n-# files. You can then commit the changes.\n-#\n-# If you find yourself manually editing a foo.stderr file, you're\n-# doing it wrong.\n-\n-if [[ \"$1\" == \"--help\" || \"$1\" == \"-h\" || \"$1\" == \"\" || \"$2\" == \"\" ]]; then\n-    echo \"usage: $0 <build-directory> <relative-path-to-rs-files>\"\n-    echo \"\"\n-    echo \"For example:\"\n-    echo \"   $0 ../../../build/x86_64-apple-darwin/test/ui *.rs */*.rs\"\n-fi\n-\n-MYDIR=$(dirname $0)\n-\n-BUILD_DIR=\"$1\"\n-shift\n-\n-shopt -s nullglob\n-\n-while [[ \"$1\" != \"\" ]]; do\n-    for EXT in \"stderr\" \"stdout\" \"fixed\"; do\n-        for OUT_NAME in $BUILD_DIR/${1%.rs}*/*$EXT; do\n-            OUT_DIR=`dirname \"$1\"`\n-            OUT_BASE=`basename \"$OUT_NAME\"`\n-            if ! (diff $OUT_NAME $MYDIR/$OUT_DIR/$OUT_BASE >& /dev/null); then\n-                echo updating $MYDIR/$OUT_DIR/$OUT_BASE\n-                cp $OUT_NAME $MYDIR/$OUT_DIR\n-            fi\n-        done\n-    done\n-    shift\n-done"}]}