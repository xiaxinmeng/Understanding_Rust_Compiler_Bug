{"sha": "d7864697854fc07192d537949f7712776d652156", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3ODY0Njk3ODU0ZmMwNzE5MmQ1Mzc5NDlmNzcxMjc3NmQ2NTIxNTY=", "commit": {"author": {"name": "Michael Bebenita", "email": "mbebenita@mozilla.com", "date": "2010-07-28T06:13:33Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-29T03:30:28Z"}, "message": "Add a warning interface to rust_srv.", "tree": {"sha": "50d963ca92d6b1d707d52f187e99025a06094321", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50d963ca92d6b1d707d52f187e99025a06094321"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7864697854fc07192d537949f7712776d652156", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7864697854fc07192d537949f7712776d652156", "html_url": "https://github.com/rust-lang/rust/commit/d7864697854fc07192d537949f7712776d652156", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7864697854fc07192d537949f7712776d652156/comments", "author": {"login": "mbebenita", "id": 311082, "node_id": "MDQ6VXNlcjMxMTA4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/311082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbebenita", "html_url": "https://github.com/mbebenita", "followers_url": "https://api.github.com/users/mbebenita/followers", "following_url": "https://api.github.com/users/mbebenita/following{/other_user}", "gists_url": "https://api.github.com/users/mbebenita/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbebenita/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbebenita/subscriptions", "organizations_url": "https://api.github.com/users/mbebenita/orgs", "repos_url": "https://api.github.com/users/mbebenita/repos", "events_url": "https://api.github.com/users/mbebenita/events{/privacy}", "received_events_url": "https://api.github.com/users/mbebenita/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6afb6c767ed3274359bcac5af5a11851922e3668", "url": "https://api.github.com/repos/rust-lang/rust/commits/6afb6c767ed3274359bcac5af5a11851922e3668", "html_url": "https://github.com/rust-lang/rust/commit/6afb6c767ed3274359bcac5af5a11851922e3668"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "2200df110670a8781aabe26ef6d1a2184e6aab92", "filename": "src/rt/rust.cpp", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d7864697854fc07192d537949f7712776d652156/src%2Frt%2Frust.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/d7864697854fc07192d537949f7712776d652156/src%2Frt%2Frust.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust.cpp?ref=d7864697854fc07192d537949f7712776d652156", "patch": "@@ -94,6 +94,16 @@ rust_srv::fatal(char const *expr, char const *file, size_t line)\n     exit(1);\n }\n \n+void\n+rust_srv::warning(char const *expr, char const *file, size_t line)\n+{\n+    char buf[1024];\n+    snprintf(buf, sizeof(buf),\n+             \"warning: '%s', at: %s:%d\",\n+             expr, file, (int)line);\n+    log(buf);\n+}\n+\n rust_srv *\n rust_srv::clone()\n {"}, {"sha": "9a61dca71feb7074cf03081a705a157dcfec2e38", "filename": "src/rt/rust.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d7864697854fc07192d537949f7712776d652156/src%2Frt%2Frust.h", "raw_url": "https://github.com/rust-lang/rust/raw/d7864697854fc07192d537949f7712776d652156/src%2Frt%2Frust.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust.h?ref=d7864697854fc07192d537949f7712776d652156", "patch": "@@ -25,6 +25,7 @@ struct rust_srv {\n \n     virtual void log(char const *);\n     virtual void fatal(char const *, char const *, size_t);\n+    virtual void warning(char const *, char const *, size_t);\n     virtual void *malloc(size_t);\n     virtual void *realloc(void *, size_t);\n     virtual void free(void *);"}, {"sha": "bd9be504244f35dac6bcdf7ea88c7a58a2b6a311", "filename": "src/rt/rust_internal.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d7864697854fc07192d537949f7712776d652156/src%2Frt%2Frust_internal.h", "raw_url": "https://github.com/rust-lang/rust/raw/d7864697854fc07192d537949f7712776d652156/src%2Frt%2Frust_internal.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_internal.h?ref=d7864697854fc07192d537949f7712776d652156", "patch": "@@ -44,10 +44,12 @@ extern \"C\" {\n #error \"Target CPU not supported.\"\n #endif\n \n-#define I(dom, e) ((e) ? (void)0 :                           \\\n+#define I(dom, e) ((e) ? (void)0 :                             \\\n                    (dom)->srv->fatal(#e, __FILE__, __LINE__))\n+#define W(dom, e, s) ((e) ? (void)0 :                             \\\n+                   (dom)->srv->warning(#e \" : \" #s, __FILE__, __LINE__))\n \n-#define A(dom, e, s) ((e) ? (void)0 :                                    \\\n+#define A(dom, e, s) ((e) ? (void)0 :                          \\\n                       (dom)->srv->fatal(#e \" : \" #s, __FILE__, __LINE__))\n \n struct rust_task;"}]}