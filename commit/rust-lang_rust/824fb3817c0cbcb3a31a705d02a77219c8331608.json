{"sha": "824fb3817c0cbcb3a31a705d02a77219c8331608", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyNGZiMzgxN2MwY2JjYjNhMzFhNzA1ZDAyYTc3MjE5YzgzMzE2MDg=", "commit": {"author": {"name": "Matt Ickstadt", "email": "mattico8@gmail.com", "date": "2017-09-08T01:07:16Z"}, "committer": {"name": "Matt Ickstadt", "email": "mattico8@gmail.com", "date": "2017-09-15T05:32:59Z"}, "message": "Add 'native' to -C target-cpu=help", "tree": {"sha": "668e463f5f1f05f769a59e6e25473f3cc8f4d2ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/668e463f5f1f05f769a59e6e25473f3cc8f4d2ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/824fb3817c0cbcb3a31a705d02a77219c8331608", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/824fb3817c0cbcb3a31a705d02a77219c8331608", "html_url": "https://github.com/rust-lang/rust/commit/824fb3817c0cbcb3a31a705d02a77219c8331608", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/824fb3817c0cbcb3a31a705d02a77219c8331608/comments", "author": {"login": "mattico", "id": 853158, "node_id": "MDQ6VXNlcjg1MzE1OA==", "avatar_url": "https://avatars.githubusercontent.com/u/853158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattico", "html_url": "https://github.com/mattico", "followers_url": "https://api.github.com/users/mattico/followers", "following_url": "https://api.github.com/users/mattico/following{/other_user}", "gists_url": "https://api.github.com/users/mattico/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattico/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattico/subscriptions", "organizations_url": "https://api.github.com/users/mattico/orgs", "repos_url": "https://api.github.com/users/mattico/repos", "events_url": "https://api.github.com/users/mattico/events{/privacy}", "received_events_url": "https://api.github.com/users/mattico/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mattico", "id": 853158, "node_id": "MDQ6VXNlcjg1MzE1OA==", "avatar_url": "https://avatars.githubusercontent.com/u/853158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattico", "html_url": "https://github.com/mattico", "followers_url": "https://api.github.com/users/mattico/followers", "following_url": "https://api.github.com/users/mattico/following{/other_user}", "gists_url": "https://api.github.com/users/mattico/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattico/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattico/subscriptions", "organizations_url": "https://api.github.com/users/mattico/orgs", "repos_url": "https://api.github.com/users/mattico/repos", "events_url": "https://api.github.com/users/mattico/events{/privacy}", "received_events_url": "https://api.github.com/users/mattico/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f1ef9ef1181298d46e79d5dde6bafeb6483926f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f1ef9ef1181298d46e79d5dde6bafeb6483926f", "html_url": "https://github.com/rust-lang/rust/commit/2f1ef9ef1181298d46e79d5dde6bafeb6483926f"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "2f966e5a1c5e2c6acc11a0da17f90057a6cef1c1", "filename": "src/rustllvm/PassWrapper.cpp", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/824fb3817c0cbcb3a31a705d02a77219c8331608/src%2Frustllvm%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/824fb3817c0cbcb3a31a705d02a77219c8331608/src%2Frustllvm%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FPassWrapper.cpp?ref=824fb3817c0cbcb3a31a705d02a77219c8331608", "patch": "@@ -299,10 +299,17 @@ static size_t getLongestEntryLength(ArrayRef<SubtargetFeatureKV> Table) {\n extern \"C\" void LLVMRustPrintTargetCPUs(LLVMTargetMachineRef TM) {\n   const TargetMachine *Target = unwrap(TM);\n   const MCSubtargetInfo *MCInfo = Target->getMCSubtargetInfo();\n+  const Triple::ArchType HostArch = Triple(sys::getProcessTriple()).getArch();\n+  const Triple::ArchType TargetArch = Target->getTargetTriple().getArch();\n   const ArrayRef<SubtargetFeatureKV> CPUTable = MCInfo->getCPUTable();\n   unsigned MaxCPULen = getLongestEntryLength(CPUTable);\n \n   printf(\"Available CPUs for this target:\\n\");\n+  if (HostArch == TargetArch) {\n+    const StringRef HostCPU = sys::getHostCPUName();\n+    printf(\"    %-*s - Select the CPU of the current host (currently %.*s).\\n\",\n+      MaxCPULen, \"native\", (int)HostCPU.size(), HostCPU.data());\n+  }\n   for (auto &CPU : CPUTable)\n     printf(\"    %-*s - %s.\\n\", MaxCPULen, CPU.Key, CPU.Desc);\n   printf(\"\\n\");"}]}