{"sha": "6da1a3fcd6b8996a8fde2dd80a93a3a3008a9659", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkYTFhM2ZjZDZiODk5NmE4ZmRlMmRkODBhOTNhM2EzMDA4YTk2NTk=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-12-01T23:26:42Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-12-01T23:26:42Z"}, "message": "rt: Refactor record_sp into task::record_stack_limit", "tree": {"sha": "1c56984b1720f190fe01d9cb2d1dd89051c61cc8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c56984b1720f190fe01d9cb2d1dd89051c61cc8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6da1a3fcd6b8996a8fde2dd80a93a3a3008a9659", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6da1a3fcd6b8996a8fde2dd80a93a3a3008a9659", "html_url": "https://github.com/rust-lang/rust/commit/6da1a3fcd6b8996a8fde2dd80a93a3a3008a9659", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6da1a3fcd6b8996a8fde2dd80a93a3a3008a9659/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1fd7d49a773d5b5921a659d9c1222b662b991d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1fd7d49a773d5b5921a659d9c1222b662b991d5", "html_url": "https://github.com/rust-lang/rust/commit/d1fd7d49a773d5b5921a659d9c1222b662b991d5"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "42b2e490404a738ad532f5e5574794f1691ee8aa", "filename": "src/rt/rust_scheduler.cpp", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6da1a3fcd6b8996a8fde2dd80a93a3a3008a9659/src%2Frt%2Frust_scheduler.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/6da1a3fcd6b8996a8fde2dd80a93a3a3008a9659/src%2Frt%2Frust_scheduler.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_scheduler.cpp?ref=6da1a3fcd6b8996a8fde2dd80a93a3a3008a9659", "patch": "@@ -367,14 +367,11 @@ rust_scheduler::init_tls() {\n     tls_initialized = true;\n }\n \n-extern \"C\" CDECL void\n-record_sp(void *limit);\n-\n void\n rust_scheduler::place_task_in_tls(rust_task *task) {\n     int result = pthread_setspecific(task_key, task);\n     assert(!result && \"Couldn't place the task in TLS!\");\n-    record_sp(task->stk->data + RED_ZONE_SIZE);\n+    task->record_stack_limit();\n }\n \n rust_task *"}, {"sha": "97e2261874113daababf9671615dd8623cbf6941", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6da1a3fcd6b8996a8fde2dd80a93a3a3008a9659/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/6da1a3fcd6b8996a8fde2dd80a93a3a3008a9659/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=6da1a3fcd6b8996a8fde2dd80a93a3a3008a9659", "patch": "@@ -576,16 +576,20 @@ rust_task::new_stack(size_t stk_sz, void *args_addr, size_t args_sz) {\n     new_sp = align_down(new_sp - (args_sz + sizeof_retaddr));\n     new_sp += sizeof_retaddr;\n     memcpy(new_sp, args_addr, args_sz);\n-    record_sp(stk_seg->data + RED_ZONE_SIZE);\n+    record_stack_limit();\n     return new_sp;\n }\n \n void\n rust_task::del_stack() {\n     del_stk(this, stk);\n-    record_sp(stk->data + RED_ZONE_SIZE);\n+    record_stack_limit();\n }\n \n+void\n+rust_task::record_stack_limit() {\n+    record_sp(stk->data + RED_ZONE_SIZE);\n+}\n //\n // Local Variables:\n // mode: C++"}, {"sha": "00a9fc277dc7b043161083aa3a322d02cc3bca5e", "filename": "src/rt/rust_task.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6da1a3fcd6b8996a8fde2dd80a93a3a3008a9659/src%2Frt%2Frust_task.h", "raw_url": "https://github.com/rust-lang/rust/raw/6da1a3fcd6b8996a8fde2dd80a93a3a3008a9659/src%2Frt%2Frust_task.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.h?ref=6da1a3fcd6b8996a8fde2dd80a93a3a3008a9659", "patch": "@@ -199,6 +199,7 @@ rust_task : public kernel_owned<rust_task>, rust_cond\n \n     void *new_stack(size_t stk_sz, void *args_addr, size_t args_sz);\n     void del_stack();\n+    void record_stack_limit();\n };\n \n //"}]}