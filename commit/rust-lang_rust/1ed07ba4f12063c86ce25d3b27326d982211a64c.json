{"sha": "1ed07ba4f12063c86ce25d3b27326d982211a64c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlZDA3YmE0ZjEyMDYzYzg2Y2UyNWQzYjI3MzI2ZDk4MjIxMWE2NGM=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2017-05-02T17:58:47Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2017-05-02T17:58:47Z"}, "message": "rustbuild: Sanity-check cmake for sanitizers too\n\nIt's possible to build the sanitizers when using an external LLVM, but\nwe still need cmake for this.  Extend the sanity check to look for cmake\nwhenever sanitizers are enabled too.", "tree": {"sha": "d9d4b6bba961d9c3fc9bd810b81f3ccda2c1d041", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d9d4b6bba961d9c3fc9bd810b81f3ccda2c1d041"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ed07ba4f12063c86ce25d3b27326d982211a64c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ed07ba4f12063c86ce25d3b27326d982211a64c", "html_url": "https://github.com/rust-lang/rust/commit/1ed07ba4f12063c86ce25d3b27326d982211a64c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ed07ba4f12063c86ce25d3b27326d982211a64c/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96e2c34286099eea4f51daaadbb82a8fbe99e0f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/96e2c34286099eea4f51daaadbb82a8fbe99e0f6", "html_url": "https://github.com/rust-lang/rust/commit/96e2c34286099eea4f51daaadbb82a8fbe99e0f6"}], "stats": {"total": 27, "additions": 13, "deletions": 14}, "files": [{"sha": "df6378a970bd4363a0a0065713ab1987adfdadd2", "filename": "src/bootstrap/sanity.rs", "status": "modified", "additions": 13, "deletions": 14, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/1ed07ba4f12063c86ce25d3b27326d982211a64c/src%2Fbootstrap%2Fsanity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ed07ba4f12063c86ce25d3b27326d982211a64c/src%2Fbootstrap%2Fsanity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fsanity.rs?ref=1ed07ba4f12063c86ce25d3b27326d982211a64c", "patch": "@@ -69,22 +69,21 @@ pub fn check(build: &mut Build) {\n         need_cmd(\"git\".as_ref());\n     }\n \n-    // We need cmake, but only if we're actually building LLVM\n-    for host in build.config.host.iter() {\n-        if let Some(config) = build.config.target_config.get(host) {\n-            if config.llvm_config.is_some() {\n-                continue\n-            }\n-        }\n+    // We need cmake, but only if we're actually building LLVM or sanitizers.\n+    let building_llvm = build.config.host.iter()\n+        .filter_map(|host| build.config.target_config.get(host))\n+        .any(|config| config.llvm_config.is_none());\n+    if building_llvm || build.config.sanitizers {\n         need_cmd(\"cmake\".as_ref());\n-        if build.config.ninja {\n-            // Some Linux distros rename `ninja` to `ninja-build`.\n-            // CMake can work with either binary name.\n-            if have_cmd(\"ninja-build\".as_ref()).is_none() {\n-                need_cmd(\"ninja\".as_ref());\n-            }\n+    }\n+\n+    // Ninja is currently only used for LLVM itself.\n+    if building_llvm && build.config.ninja {\n+        // Some Linux distros rename `ninja` to `ninja-build`.\n+        // CMake can work with either binary name.\n+        if have_cmd(\"ninja-build\".as_ref()).is_none() {\n+            need_cmd(\"ninja\".as_ref());\n         }\n-        break\n     }\n \n     if build.config.python.is_none() {"}]}