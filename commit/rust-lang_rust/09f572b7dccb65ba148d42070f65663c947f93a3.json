{"sha": "09f572b7dccb65ba148d42070f65663c947f93a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5ZjU3MmI3ZGNjYjY1YmExNDhkNDIwNzBmNjU2NjNjOTQ3ZjkzYTM=", "commit": {"author": {"name": "John Colanduoni", "email": "john@colanduoni.com", "date": "2017-08-10T05:09:59Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-09-01T19:24:17Z"}, "message": "Use env::current_exe for libbacktrace on macOS", "tree": {"sha": "83b92a998b4a01117eb0ff02f90784b5f4466014", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83b92a998b4a01117eb0ff02f90784b5f4466014"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09f572b7dccb65ba148d42070f65663c947f93a3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCAAGBQJZqbPhAAoJEP72yAUdDgE8eREQAMPgiTLH1k3nmQjO1WQBj7md\nB8RohdiID35UcDnEz8GSgJx4rcXzN6EaZ8zt7KiIYcMjoF8ciHkDjx+B/0AOiP/6\nqxLp+Ws+xh+JtO6adOUhWNitsbx7sxNwe+8o7XR/e5Sc/mTzIXFbUImmpSNA/5jC\nAi6jSFRHo4+aHCPBT3InyYpm3QyU/NJMQKq5VN63CuF1PVBUfIeVmVCnQx5AFJQw\n5qrPlaEyin+/yR1S6TQe6Hbu4hDmlRHpuq7CDpYp3WEZ2lNBWFKDKGVk6i6CL0SH\nw33U1wffytuhY3TwUUEI4UNYq9DfqErpxS9VBFqaXvI1LOHjB0KswpNTDyJvkCmn\nZEm55LOeDaAT1oqpbsXQMhh3Z35qJUwS6fHTRJ8aDiW2VZf0WXerbPZTZn5Xfp8u\norazveOJ4KQLLtf4Oe7k7YXq7REGEC2P86Z+qHZF4FvOeX3Hf/OcNuW/FGXxyAF6\nJ491Egj7hn4+QL9PYYhOi8vqWmaknwUfhysQETlEqAuwJSycyFQFMqSEGdda1uDq\nznsyHkUx+0h+c1EwjKkc/ZbaTEUDMTYiihIRY9agfE1TsPTLkb2+UaCwiP2v0+w+\n/r5Fwj5bu86Pxxt6LM86DwuRHhYZ4cUAfJHS+DxprS2uT9BnBHwydCpG8z/mMTWg\nWHVQrWpqGulsN+lrN1c7\n=0JYK\n-----END PGP SIGNATURE-----", "payload": "tree 83b92a998b4a01117eb0ff02f90784b5f4466014\nparent e3de40e72f0f6b2dba54388d05e94e2c145cec6d\nauthor John Colanduoni <john@colanduoni.com> 1502341799 -0700\ncommitter kennytm <kennytm@gmail.com> 1504293857 +0800\n\nUse env::current_exe for libbacktrace on macOS\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09f572b7dccb65ba148d42070f65663c947f93a3", "html_url": "https://github.com/rust-lang/rust/commit/09f572b7dccb65ba148d42070f65663c947f93a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09f572b7dccb65ba148d42070f65663c947f93a3/comments", "author": {"login": "JohnColanduoni", "id": 54400, "node_id": "MDQ6VXNlcjU0NDAw", "avatar_url": "https://avatars.githubusercontent.com/u/54400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnColanduoni", "html_url": "https://github.com/JohnColanduoni", "followers_url": "https://api.github.com/users/JohnColanduoni/followers", "following_url": "https://api.github.com/users/JohnColanduoni/following{/other_user}", "gists_url": "https://api.github.com/users/JohnColanduoni/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnColanduoni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnColanduoni/subscriptions", "organizations_url": "https://api.github.com/users/JohnColanduoni/orgs", "repos_url": "https://api.github.com/users/JohnColanduoni/repos", "events_url": "https://api.github.com/users/JohnColanduoni/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnColanduoni/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3de40e72f0f6b2dba54388d05e94e2c145cec6d", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3de40e72f0f6b2dba54388d05e94e2c145cec6d", "html_url": "https://github.com/rust-lang/rust/commit/e3de40e72f0f6b2dba54388d05e94e2c145cec6d"}], "stats": {"total": 27, "additions": 7, "deletions": 20}, "files": [{"sha": "b5bf20c747be6e8ad6933ca31fc0e2a0c2096570", "filename": "src/libstd/sys/unix/backtrace/mod.rs", "status": "modified", "additions": 7, "deletions": 20, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/09f572b7dccb65ba148d42070f65663c947f93a3/src%2Flibstd%2Fsys%2Funix%2Fbacktrace%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09f572b7dccb65ba148d42070f65663c947f93a3/src%2Flibstd%2Fsys%2Funix%2Fbacktrace%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fbacktrace%2Fmod.rs?ref=09f572b7dccb65ba148d42070f65663c947f93a3", "patch": "@@ -104,28 +104,15 @@ pub mod gnu {\n \n     #[cfg(any(target_os = \"macos\", target_os = \"ios\"))]\n     pub fn get_executable_filename() -> io::Result<(Vec<c_char>, fs::File)> {\n-        use ptr;\n-        use slice;\n-        use ffi::OsStr;\n+        use env;\n         use os::unix::ffi::OsStrExt;\n-        use libc::c_int;\n \n-        extern {\n-            fn _NSGetExecutablePath(buf: *mut c_char,\n-                                    bufsize: *mut u32) -> c_int;\n-        }\n-        unsafe {\n-            let mut bufsize: u32 = 0;\n-            _NSGetExecutablePath(ptr::null_mut(), &mut bufsize);\n-            if bufsize == 0 { return Err(io::Error::last_os_error()); }\n-            let mut buffer: Vec<c_char> = Vec::with_capacity(bufsize as usize);\n-            let ret = _NSGetExecutablePath(buffer.as_mut_ptr(), &mut bufsize);\n-            if ret != 0 { return Err(io::Error::last_os_error()); }\n-            buffer.set_len(bufsize as usize);\n-            let file = fs::File::open(OsStr::from_bytes(\n-                    slice::from_raw_parts(buffer.as_ptr() as *const u8, buffer.len()-1)))?;\n-            Ok((buffer, file))\n-        }\n+        let filename = env::current_exe()?;\n+        let file = fs::File::open(&filename)?;\n+        let mut filename_cstr: Vec<_> = filename.as_os_str().as_bytes().iter()\n+            .map(|&x| x as c_char).collect();\n+        filename_cstr.push(0); // Null terminate\n+        Ok((filename_cstr, file))\n     }\n }\n "}]}