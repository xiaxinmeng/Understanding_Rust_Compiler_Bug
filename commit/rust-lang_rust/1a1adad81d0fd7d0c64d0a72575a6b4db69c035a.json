{"sha": "1a1adad81d0fd7d0c64d0a72575a6b4db69c035a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhMWFkYWQ4MWQwZmQ3ZDBjNjRkMGE3MjU3NWE2YjRkYjY5YzAzNWE=", "commit": {"author": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2021-03-26T09:56:05Z"}, "committer": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2021-03-26T13:36:09Z"}, "message": "Add MSRV option to unnested_or_patterns lint", "tree": {"sha": "1aaa50388874dccaa3d5209b69b1e2fcca46d275", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1aaa50388874dccaa3d5209b69b1e2fcca46d275"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a1adad81d0fd7d0c64d0a72575a6b4db69c035a", "comment_count": 0, "verification": {"verified": false, "reason": "bad_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEij1UXJ/PQTcb99vTHKDfKvWdaKUFAmBd40kACgkQHKDfKvWd\naKVdnxAAlk6OE1Xb8NmpA5v49Zsf3k5bZbEcpeD4sDtC2Gl8ApmGkZJDk0fhHuYh\nMt0j24yDbZg+LR3ZFtGiQ3rbtBDLA3xwi25CLAktIxFZeFEoZwOzWYUbeHCYJ2Id\nYe4xl+k0FkZZVPt67pNEe0pyBO4zayxj+bQWCgw71lrZmDhgeGO0LJVQO034zg/Q\n9xd/3G5zSo4ltTDaMBiu19oTevBx6JoBMQANWY7hrdTrkMgt4MKdOVPniNT2ifoV\n4JcAbBLK8jrl9+NIr8JEjQWu/Dqiy1dLg8Dg4aKuLwRwaZXh92SDEJELDO1o2PXU\nR5TSJZHJb1moqXjQwelE6v4YIXlCICV/L9oIlBc3jV9hFPzExMnnk7VsOMqQkc1a\nnPElOPmiZKi31EGiwD1esUhkJzxbZZDoP5SVTkMpckXFW9MLEIJrq4ZQcQDt0PSg\nC9xFUY7z7zYm3hZb1Yu0DO9gCFGrbLO1IU0xGRQ0JOVVArkIFi72vp40dvb86cCa\ns2C9ssqBl1jLZITDR5xxPE07kVQjIJRnP3mLdMFJQed84qtYIrrwoeyObrKbhomi\nya2UvsESowuesaTeSExDZahQHjKu7C2Wj5ikxSEw3PV+jtDdH328V/xUSvPESNHb\nqlleF+YFntgQovdXF+QptT5lxRYnSuDx3p027oK5yBLC30j/md4=\n=teAr\n-----END PGP SIGNATURE-----", "payload": "tree 1aaa50388874dccaa3d5209b69b1e2fcca46d275\nparent f41d68faa6ecaf8756ee72d329e4ba50aaac525d\nauthor flip1995 <philipp.krones@embecosm.com> 1616752565 +0100\ncommitter flip1995 <philipp.krones@embecosm.com> 1616765769 +0100\n\nAdd MSRV option to unnested_or_patterns lint\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a1adad81d0fd7d0c64d0a72575a6b4db69c035a", "html_url": "https://github.com/rust-lang/rust/commit/1a1adad81d0fd7d0c64d0a72575a6b4db69c035a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a1adad81d0fd7d0c64d0a72575a6b4db69c035a/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f41d68faa6ecaf8756ee72d329e4ba50aaac525d", "url": "https://api.github.com/repos/rust-lang/rust/commits/f41d68faa6ecaf8756ee72d329e4ba50aaac525d", "html_url": "https://github.com/rust-lang/rust/commit/f41d68faa6ecaf8756ee72d329e4ba50aaac525d"}], "stats": {"total": 62, "additions": 48, "deletions": 14}, "files": [{"sha": "f013613119cf198e48a21f9fbe4722ea0df81861", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1a1adad81d0fd7d0c64d0a72575a6b4db69c035a/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a1adad81d0fd7d0c64d0a72575a6b4db69c035a/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=1a1adad81d0fd7d0c64d0a72575a6b4db69c035a", "patch": "@@ -1079,6 +1079,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(move || box missing_const_for_fn::MissingConstForFn::new(msrv));\n     store.register_late_pass(move || box needless_question_mark::NeedlessQuestionMark::new(msrv));\n     store.register_late_pass(move || box casts::Casts::new(msrv));\n+    store.register_early_pass(move || box unnested_or_patterns::UnnestedOrPatterns::new(msrv));\n \n     store.register_late_pass(|| box size_of_in_element_count::SizeOfInElementCount);\n     store.register_late_pass(|| box map_clone::MapClone);\n@@ -1254,7 +1255,6 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_early_pass(move || box non_expressive_names::NonExpressiveNames {\n         single_char_binding_names_threshold,\n     });\n-    store.register_early_pass(|| box unnested_or_patterns::UnnestedOrPatterns);\n     store.register_late_pass(|| box macro_use::MacroUseImports::default());\n     store.register_late_pass(|| box map_identity::MapIdentity);\n     store.register_late_pass(|| box pattern_type_mismatch::PatternTypeMismatch);"}, {"sha": "9376a2cf66a90b1bd497498906e2e7111ccf2671", "filename": "clippy_lints/src/unnested_or_patterns.rs", "status": "modified", "additions": 36, "deletions": 8, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/1a1adad81d0fd7d0c64d0a72575a6b4db69c035a/clippy_lints%2Fsrc%2Funnested_or_patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a1adad81d0fd7d0c64d0a72575a6b4db69c035a/clippy_lints%2Fsrc%2Funnested_or_patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funnested_or_patterns.rs?ref=1a1adad81d0fd7d0c64d0a72575a6b4db69c035a", "patch": "@@ -1,15 +1,19 @@\n #![allow(clippy::wildcard_imports, clippy::enum_glob_use)]\n \n-use clippy_utils::ast_utils::{eq_field_pat, eq_id, eq_pat, eq_path};\n use clippy_utils::diagnostics::span_lint_and_then;\n use clippy_utils::over;\n+use clippy_utils::{\n+    ast_utils::{eq_field_pat, eq_id, eq_pat, eq_path},\n+    meets_msrv,\n+};\n use rustc_ast::mut_visit::*;\n use rustc_ast::ptr::P;\n use rustc_ast::{self as ast, Pat, PatKind, PatKind::*, DUMMY_NODE_ID};\n use rustc_ast_pretty::pprust;\n use rustc_errors::Applicability;\n use rustc_lint::{EarlyContext, EarlyLintPass};\n-use rustc_session::{declare_lint_pass, declare_tool_lint};\n+use rustc_semver::RustcVersion;\n+use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::DUMMY_SP;\n \n use std::cell::Cell;\n@@ -50,26 +54,50 @@ declare_clippy_lint! {\n     \"unnested or-patterns, e.g., `Foo(Bar) | Foo(Baz) instead of `Foo(Bar | Baz)`\"\n }\n \n-declare_lint_pass!(UnnestedOrPatterns => [UNNESTED_OR_PATTERNS]);\n+const UNNESTED_OR_PATTERNS_MSRV: RustcVersion = RustcVersion::new(1, 53, 0);\n+\n+#[derive(Clone, Copy)]\n+pub struct UnnestedOrPatterns {\n+    msrv: Option<RustcVersion>,\n+}\n+\n+impl UnnestedOrPatterns {\n+    #[must_use]\n+    pub fn new(msrv: Option<RustcVersion>) -> Self {\n+        Self { msrv }\n+    }\n+}\n+\n+impl_lint_pass!(UnnestedOrPatterns => [UNNESTED_OR_PATTERNS]);\n \n impl EarlyLintPass for UnnestedOrPatterns {\n     fn check_arm(&mut self, cx: &EarlyContext<'_>, a: &ast::Arm) {\n-        lint_unnested_or_patterns(cx, &a.pat);\n+        if meets_msrv(self.msrv.as_ref(), &UNNESTED_OR_PATTERNS_MSRV) {\n+            lint_unnested_or_patterns(cx, &a.pat);\n+        }\n     }\n \n     fn check_expr(&mut self, cx: &EarlyContext<'_>, e: &ast::Expr) {\n-        if let ast::ExprKind::Let(pat, _) = &e.kind {\n-            lint_unnested_or_patterns(cx, pat);\n+        if meets_msrv(self.msrv.as_ref(), &UNNESTED_OR_PATTERNS_MSRV) {\n+            if let ast::ExprKind::Let(pat, _) = &e.kind {\n+                lint_unnested_or_patterns(cx, pat);\n+            }\n         }\n     }\n \n     fn check_param(&mut self, cx: &EarlyContext<'_>, p: &ast::Param) {\n-        lint_unnested_or_patterns(cx, &p.pat);\n+        if meets_msrv(self.msrv.as_ref(), &UNNESTED_OR_PATTERNS_MSRV) {\n+            lint_unnested_or_patterns(cx, &p.pat);\n+        }\n     }\n \n     fn check_local(&mut self, cx: &EarlyContext<'_>, l: &ast::Local) {\n-        lint_unnested_or_patterns(cx, &l.pat);\n+        if meets_msrv(self.msrv.as_ref(), &UNNESTED_OR_PATTERNS_MSRV) {\n+            lint_unnested_or_patterns(cx, &l.pat);\n+        }\n     }\n+\n+    extract_msrv_attr!(EarlyContext);\n }\n \n fn lint_unnested_or_patterns(cx: &EarlyContext<'_>, pat: &Pat) {"}, {"sha": "b372f5b0e72357fffa1cfbc798c2f765d4e90d56", "filename": "clippy_lints/src/utils/conf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1a1adad81d0fd7d0c64d0a72575a6b4db69c035a/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a1adad81d0fd7d0c64d0a72575a6b4db69c035a/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fconf.rs?ref=1a1adad81d0fd7d0c64d0a72575a6b4db69c035a", "patch": "@@ -106,7 +106,7 @@ macro_rules! define_Conf {\n \n pub use self::helpers::Conf;\n define_Conf! {\n-    /// Lint: REDUNDANT_FIELD_NAMES, REDUNDANT_STATIC_LIFETIMES, FILTER_MAP_NEXT, CHECKED_CONVERSIONS, MANUAL_RANGE_CONTAINS, USE_SELF, MEM_REPLACE_WITH_DEFAULT, MANUAL_NON_EXHAUSTIVE, OPTION_AS_REF_DEREF, MAP_UNWRAP_OR, MATCH_LIKE_MATCHES_MACRO, MANUAL_STRIP, MISSING_CONST_FOR_FN. The minimum rust version that the project supports\n+    /// Lint: REDUNDANT_FIELD_NAMES, REDUNDANT_STATIC_LIFETIMES, FILTER_MAP_NEXT, CHECKED_CONVERSIONS, MANUAL_RANGE_CONTAINS, USE_SELF, MEM_REPLACE_WITH_DEFAULT, MANUAL_NON_EXHAUSTIVE, OPTION_AS_REF_DEREF, MAP_UNWRAP_OR, MATCH_LIKE_MATCHES_MACRO, MANUAL_STRIP, MISSING_CONST_FOR_FN, UNNESTED_OR_PATTERNS. The minimum rust version that the project supports\n     (msrv, \"msrv\": Option<String>, None),\n     /// Lint: BLACKLISTED_NAME. The list of blacklisted names to lint about. NB: `bar` is not here since it has legitimate uses\n     (blacklisted_names, \"blacklisted_names\": Vec<String>, [\"foo\", \"baz\", \"quux\"].iter().map(ToString::to_string).collect()),"}, {"sha": "49ace1ca128c121c25e9f02664f63c29f5128ea9", "filename": "tests/ui/min_rust_version_attr.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1a1adad81d0fd7d0c64d0a72575a6b4db69c035a/tests%2Fui%2Fmin_rust_version_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a1adad81d0fd7d0c64d0a72575a6b4db69c035a/tests%2Fui%2Fmin_rust_version_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmin_rust_version_attr.rs?ref=1a1adad81d0fd7d0c64d0a72575a6b4db69c035a", "patch": "@@ -123,6 +123,11 @@ fn missing_const_for_fn() -> i32 {\n     1\n }\n \n+fn unnest_or_patterns() {\n+    struct TS(u8, u8);\n+    if let TS(0, x) | TS(1, x) = TS(0, 0) {}\n+}\n+\n fn main() {\n     filter_map_next();\n     checked_conversion();\n@@ -138,6 +143,7 @@ fn main() {\n     replace_with_default();\n     map_unwrap_or();\n     missing_const_for_fn();\n+    unnest_or_patterns();\n }\n \n mod meets_msrv {"}, {"sha": "8d3575c2da83b4e322029080e8fb694ded856b93", "filename": "tests/ui/min_rust_version_attr.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1a1adad81d0fd7d0c64d0a72575a6b4db69c035a/tests%2Fui%2Fmin_rust_version_attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1a1adad81d0fd7d0c64d0a72575a6b4db69c035a/tests%2Fui%2Fmin_rust_version_attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmin_rust_version_attr.stderr?ref=1a1adad81d0fd7d0c64d0a72575a6b4db69c035a", "patch": "@@ -1,12 +1,12 @@\n error: stripping a prefix manually\n-  --> $DIR/min_rust_version_attr.rs:150:24\n+  --> $DIR/min_rust_version_attr.rs:156:24\n    |\n LL |             assert_eq!(s[\"hello, \".len()..].to_uppercase(), \"WORLD!\");\n    |                        ^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::manual-strip` implied by `-D warnings`\n note: the prefix was tested here\n-  --> $DIR/min_rust_version_attr.rs:149:9\n+  --> $DIR/min_rust_version_attr.rs:155:9\n    |\n LL |         if s.starts_with(\"hello, \") {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -17,13 +17,13 @@ LL |             assert_eq!(<stripped>.to_uppercase(), \"WORLD!\");\n    |\n \n error: stripping a prefix manually\n-  --> $DIR/min_rust_version_attr.rs:162:24\n+  --> $DIR/min_rust_version_attr.rs:168:24\n    |\n LL |             assert_eq!(s[\"hello, \".len()..].to_uppercase(), \"WORLD!\");\n    |                        ^^^^^^^^^^^^^^^^^^^^\n    |\n note: the prefix was tested here\n-  --> $DIR/min_rust_version_attr.rs:161:9\n+  --> $DIR/min_rust_version_attr.rs:167:9\n    |\n LL |         if s.starts_with(\"hello, \") {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}]}