{"sha": "dd4d4e29c3295ed8e371f1dc5d1d463f56999ecb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkNGQ0ZTI5YzMyOTVlZDhlMzcxZjFkYzVkMWQ0NjNmNTY5OTllY2I=", "commit": {"author": {"name": "Ayrton", "email": "a.munoz3327@gmail.com", "date": "2020-08-19T04:30:49Z"}, "committer": {"name": "Ayrton", "email": "a.munoz3327@gmail.com", "date": "2020-10-27T15:04:03Z"}, "message": "added a lint against function references\n\nthis lint suggests casting function references to `*const ()`", "tree": {"sha": "375d4c78841b08417f2e2993460cf91e60db8fe4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/375d4c78841b08417f2e2993460cf91e60db8fe4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd4d4e29c3295ed8e371f1dc5d1d463f56999ecb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd4d4e29c3295ed8e371f1dc5d1d463f56999ecb", "html_url": "https://github.com/rust-lang/rust/commit/dd4d4e29c3295ed8e371f1dc5d1d463f56999ecb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd4d4e29c3295ed8e371f1dc5d1d463f56999ecb/comments", "author": {"login": "ayrtonm", "id": 4975834, "node_id": "MDQ6VXNlcjQ5NzU4MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4975834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ayrtonm", "html_url": "https://github.com/ayrtonm", "followers_url": "https://api.github.com/users/ayrtonm/followers", "following_url": "https://api.github.com/users/ayrtonm/following{/other_user}", "gists_url": "https://api.github.com/users/ayrtonm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ayrtonm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ayrtonm/subscriptions", "organizations_url": "https://api.github.com/users/ayrtonm/orgs", "repos_url": "https://api.github.com/users/ayrtonm/repos", "events_url": "https://api.github.com/users/ayrtonm/events{/privacy}", "received_events_url": "https://api.github.com/users/ayrtonm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ayrtonm", "id": 4975834, "node_id": "MDQ6VXNlcjQ5NzU4MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4975834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ayrtonm", "html_url": "https://github.com/ayrtonm", "followers_url": "https://api.github.com/users/ayrtonm/followers", "following_url": "https://api.github.com/users/ayrtonm/following{/other_user}", "gists_url": "https://api.github.com/users/ayrtonm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ayrtonm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ayrtonm/subscriptions", "organizations_url": "https://api.github.com/users/ayrtonm/orgs", "repos_url": "https://api.github.com/users/ayrtonm/repos", "events_url": "https://api.github.com/users/ayrtonm/events{/privacy}", "received_events_url": "https://api.github.com/users/ayrtonm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56d288fa46e04cd5faf53d369a1a640a97e2bb08", "url": "https://api.github.com/repos/rust-lang/rust/commits/56d288fa46e04cd5faf53d369a1a640a97e2bb08", "html_url": "https://github.com/rust-lang/rust/commit/56d288fa46e04cd5faf53d369a1a640a97e2bb08"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "b089d4dcfba4e3edbbf53c74594cb83581ca871e", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/dd4d4e29c3295ed8e371f1dc5d1d463f56999ecb/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd4d4e29c3295ed8e371f1dc5d1d463f56999ecb/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=dd4d4e29c3295ed8e371f1dc5d1d463f56999ecb", "patch": "@@ -2942,3 +2942,35 @@ impl<'tcx> LateLintPass<'tcx> for ClashingExternDeclarations {\n         }\n     }\n }\n+\n+declare_lint! {\n+    FUNCTION_REFERENCES,\n+    Warn,\n+    \"suggest casting functions to pointers when attempting to take references\"\n+}\n+\n+declare_lint_pass!(FunctionReferences => [FUNCTION_REFERENCES]);\n+\n+impl<'tcx> LateLintPass<'tcx> for FunctionReferences {\n+    fn check_expr(&mut self, cx: &LateContext<'_>, e: &hir::Expr<'_>) {\n+        if let hir::ExprKind::AddrOf(hir::BorrowKind::Ref, _, referent) = e.kind {\n+            if let hir::ExprKind::Path(qpath) = &referent.kind {\n+                if let Some(def_id) = cx.qpath_res(qpath, referent.hir_id).opt_def_id() {\n+                    cx.tcx.hir().get_if_local(def_id).map(|node| {\n+                        if node.fn_decl().is_some() {\n+                            if let Some(ident) = node.ident() {\n+                                cx.struct_span_lint(FUNCTION_REFERENCES, referent.span, |lint| {\n+                                    lint.build(&format!(\n+                                        \"cast {} with `as *const ()` to use it as a pointer\",\n+                                        ident.to_string()\n+                                    ))\n+                                    .emit()\n+                                });\n+                            }\n+                        }\n+                    });\n+                }\n+            }\n+        }\n+    }\n+}"}, {"sha": "b574a7da0aa46f45837c381481a80bb410c1a8d5", "filename": "compiler/rustc_lint/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dd4d4e29c3295ed8e371f1dc5d1d463f56999ecb/compiler%2Frustc_lint%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd4d4e29c3295ed8e371f1dc5d1d463f56999ecb/compiler%2Frustc_lint%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flib.rs?ref=dd4d4e29c3295ed8e371f1dc5d1d463f56999ecb", "patch": "@@ -194,6 +194,7 @@ macro_rules! late_lint_mod_passes {\n                 UnreachablePub: UnreachablePub,\n                 ExplicitOutlivesRequirements: ExplicitOutlivesRequirements,\n                 InvalidValue: InvalidValue,\n+                FunctionReferences: FunctionReferences,\n             ]\n         );\n     };"}]}