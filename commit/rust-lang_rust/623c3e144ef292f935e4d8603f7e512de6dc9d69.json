{"sha": "623c3e144ef292f935e4d8603f7e512de6dc9d69", "node_id": "C_kwDOAAsO6NoAKDYyM2MzZTE0NGVmMjkyZjkzNWU0ZDg2MDNmN2U1MTJkZTZkYzlkNjk", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-10-27T16:25:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-27T16:25:47Z"}, "message": "Rollup merge of #90344 - xfix:tracking-issue-const_cstr_unchecked, r=Mark-Simulacrum\n\nAdd tracking issue number to const_cstr_unchecked\n\nAlso created a tracking issue, see #90343.\n\nI think it makes sense to stabilize this somewhat soon considering abuse of `transmute` to have this feature in constants, see https://crates.io/crates/cstr for an example. Code can be rewritten to use `mem::transmute` to work on stable.", "tree": {"sha": "772f867b2ef99c1761728a46eab18d2f9fe88baf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/772f867b2ef99c1761728a46eab18d2f9fe88baf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/623c3e144ef292f935e4d8603f7e512de6dc9d69", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJheX2MCRBK7hj4Ov3rIwAADC4IAGkGmbLkpNWihp0pK1oYt2wO\n3up9WASXVONVUWxQ/TVb1zSRbbHQOQbnf4vvvRFrK0SbwN+JhquzZ8bXAik+W+aa\nqrLF1mG0QKbRGjIIJDKYcG2TKqHNViPax3ndcABY6K6H5RG5gzG9MssnDLHYegCT\n/pKybCiydFSoSwEpFcH6nw4So7kCB3wjhASUYHK8k0sycHAZIbvCvKO3g5j7TNLc\nPuo0T3BnllZecRc7rXU5RmqDOFnh4tpaNbPKwpXhTMErMSGFQLkiduAwm8Y/BVeq\nxpY6xoVxaa+VBmoihJBo3zI+V10S6JZ4ekJHw7mHXcsi337zYx+LRhtHjEMpeEs=\n=JS85\n-----END PGP SIGNATURE-----\n", "payload": "tree 772f867b2ef99c1761728a46eab18d2f9fe88baf\nparent f32c09b82a05bcb8c262403ff7d8a18fb2db2267\nparent 50ca08c5f5be2e2b018f535aa758803364bae33b\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1635351947 +0200\ncommitter GitHub <noreply@github.com> 1635351947 +0200\n\nRollup merge of #90344 - xfix:tracking-issue-const_cstr_unchecked, r=Mark-Simulacrum\n\nAdd tracking issue number to const_cstr_unchecked\n\nAlso created a tracking issue, see #90343.\n\nI think it makes sense to stabilize this somewhat soon considering abuse of `transmute` to have this feature in constants, see https://crates.io/crates/cstr for an example. Code can be rewritten to use `mem::transmute` to work on stable.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/623c3e144ef292f935e4d8603f7e512de6dc9d69", "html_url": "https://github.com/rust-lang/rust/commit/623c3e144ef292f935e4d8603f7e512de6dc9d69", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/623c3e144ef292f935e4d8603f7e512de6dc9d69/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f32c09b82a05bcb8c262403ff7d8a18fb2db2267", "url": "https://api.github.com/repos/rust-lang/rust/commits/f32c09b82a05bcb8c262403ff7d8a18fb2db2267", "html_url": "https://github.com/rust-lang/rust/commit/f32c09b82a05bcb8c262403ff7d8a18fb2db2267"}, {"sha": "50ca08c5f5be2e2b018f535aa758803364bae33b", "url": "https://api.github.com/repos/rust-lang/rust/commits/50ca08c5f5be2e2b018f535aa758803364bae33b", "html_url": "https://github.com/rust-lang/rust/commit/50ca08c5f5be2e2b018f535aa758803364bae33b"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "b7822b40a7ccf69a97165b9a46b9625638fed7fd", "filename": "library/std/src/ffi/c_str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/623c3e144ef292f935e4d8603f7e512de6dc9d69/library%2Fstd%2Fsrc%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/623c3e144ef292f935e4d8603f7e512de6dc9d69/library%2Fstd%2Fsrc%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fffi%2Fc_str.rs?ref=623c3e144ef292f935e4d8603f7e512de6dc9d69", "patch": "@@ -1257,7 +1257,7 @@ impl CStr {\n     #[inline]\n     #[must_use]\n     #[stable(feature = \"cstr_from_bytes\", since = \"1.10.0\")]\n-    #[rustc_const_unstable(feature = \"const_cstr_unchecked\", issue = \"none\")]\n+    #[rustc_const_unstable(feature = \"const_cstr_unchecked\", issue = \"90343\")]\n     pub const unsafe fn from_bytes_with_nul_unchecked(bytes: &[u8]) -> &CStr {\n         // SAFETY: Casting to CStr is safe because its internal representation\n         // is a [u8] too (safe only inside std)."}]}