{"sha": "6046595e34737d7bec851bfd1352a01e58fe99e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwNDY1OTVlMzQ3MzdkN2JlYzg1MWJmZDEzNTJhMDFlNThmZTk5ZTk=", "commit": {"author": {"name": "Mark-Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2016-11-11T23:37:08Z"}, "committer": {"name": "Mark-Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2016-11-12T13:45:06Z"}, "message": "Use SmallVector for eof and bb eis.", "tree": {"sha": "b237e8888366b91aef294f69d4b645ec5804a366", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b237e8888366b91aef294f69d4b645ec5804a366"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6046595e34737d7bec851bfd1352a01e58fe99e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6046595e34737d7bec851bfd1352a01e58fe99e9", "html_url": "https://github.com/rust-lang/rust/commit/6046595e34737d7bec851bfd1352a01e58fe99e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6046595e34737d7bec851bfd1352a01e58fe99e9/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8d6686ef3c2998d29c7ef531895ee05305cfef1", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8d6686ef3c2998d29c7ef531895ee05305cfef1", "html_url": "https://github.com/rust-lang/rust/commit/b8d6686ef3c2998d29c7ef531895ee05305cfef1"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "a072f2ba948c768da861355978c53e8c8df42113", "filename": "src/libsyntax/ext/tt/macro_parser.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6046595e34737d7bec851bfd1352a01e58fe99e9/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6046595e34737d7bec851bfd1352a01e58fe99e9/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs?ref=6046595e34737d7bec851bfd1352a01e58fe99e9", "patch": "@@ -279,8 +279,8 @@ fn create_matches(len: usize) -> Vec<Vec<Rc<NamedMatch>>> {\n \n fn inner_parse_loop(cur_eis: &mut SmallVector<Box<MatcherPos>>,\n                     next_eis: &mut Vec<Box<MatcherPos>>,\n-                    eof_eis: &mut Vec<Box<MatcherPos>>,\n-                    bb_eis: &mut Vec<Box<MatcherPos>>,\n+                    eof_eis: &mut SmallVector<Box<MatcherPos>>,\n+                    bb_eis: &mut SmallVector<Box<MatcherPos>>,\n                     token: &Token, span: &syntax_pos::Span) -> ParseResult<()> {\n     while let Some(mut ei) = cur_eis.pop() {\n         // When unzipped trees end, remove them\n@@ -412,12 +412,10 @@ pub fn parse(sess: &ParseSess, rdr: TtReader, ms: &[TokenTree]) -> NamedParseRes\n     let mut cur_eis = SmallVector::one(initial_matcher_pos(ms.to_owned(), parser.span.lo));\n \n     loop {\n-        let mut bb_eis = Vec::new(); // black-box parsed by parser.rs\n+        let mut bb_eis = SmallVector::new(); // black-box parsed by parser.rs\n+        let mut eof_eis = SmallVector::new();\n         let mut next_eis = Vec::new(); // or proceed normally\n \n-        // FIXME: Use SmallVector since in the successful case we will only have one\n-        let mut eof_eis = Vec::new();\n-\n         match inner_parse_loop(&mut cur_eis, &mut next_eis, &mut eof_eis, &mut bb_eis,\n                                &parser.token, &parser.span) {\n             Success(_) => {},"}]}