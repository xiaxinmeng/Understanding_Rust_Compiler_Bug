{"sha": "6a165e5a9296ab4166db733d2675039830716598", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhMTY1ZTVhOTI5NmFiNDE2NmRiNzMzZDI2NzUwMzk4MzA3MTY1OTg=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-10-31T21:08:34Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-10-31T21:08:34Z"}, "message": "Merge #3392\n\n3392: UI test cleanup: Extract for_loop_over_x tests r=matthiaskrgr a=phansch\n\ncc #2038\n\nCo-authored-by: Philipp Hansch <dev@phansch.net>", "tree": {"sha": "606828c3c4df29ccce7fe66c369f326029fdda76", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/606828c3c4df29ccce7fe66c369f326029fdda76"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a165e5a9296ab4166db733d2675039830716598", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a165e5a9296ab4166db733d2675039830716598", "html_url": "https://github.com/rust-lang/rust/commit/6a165e5a9296ab4166db733d2675039830716598", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a165e5a9296ab4166db733d2675039830716598/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "73458aebe381b48618b871ed8479a28e7bbfc9eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/73458aebe381b48618b871ed8479a28e7bbfc9eb", "html_url": "https://github.com/rust-lang/rust/commit/73458aebe381b48618b871ed8479a28e7bbfc9eb"}, {"sha": "b421f5ad4833e93025b9180bf8e296d1eb0a81d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/b421f5ad4833e93025b9180bf8e296d1eb0a81d2", "html_url": "https://github.com/rust-lang/rust/commit/b421f5ad4833e93025b9180bf8e296d1eb0a81d2"}], "stats": {"total": 624, "additions": 318, "deletions": 306}, "files": [{"sha": "2a70149f24604ea3aea5e49740538a6144816f78", "filename": "tests/ui/for_loop.rs", "status": "modified", "additions": 0, "deletions": 60, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/6a165e5a9296ab4166db733d2675039830716598/tests%2Fui%2Ffor_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a165e5a9296ab4166db733d2675039830716598/tests%2Fui%2Ffor_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor_loop.rs?ref=6a165e5a9296ab4166db733d2675039830716598", "patch": "@@ -7,71 +7,13 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n use std::collections::*;\n use std::rc::Rc;\n \n static STATIC: [usize; 4] = [0, 1, 8, 16];\n const CONST: [usize; 4] = [0, 1, 8, 16];\n \n #[warn(clippy::all)]\n-fn for_loop_over_option_and_result() {\n-    let option = Some(1);\n-    let result = option.ok_or(\"x not found\");\n-    let v = vec![0, 1, 2];\n-\n-    // check FOR_LOOP_OVER_OPTION lint\n-    for x in option {\n-        println!(\"{}\", x);\n-    }\n-\n-    // check FOR_LOOP_OVER_RESULT lint\n-    for x in result {\n-        println!(\"{}\", x);\n-    }\n-\n-    for x in option.ok_or(\"x not found\") {\n-        println!(\"{}\", x);\n-    }\n-\n-    // make sure LOOP_OVER_NEXT lint takes clippy::precedence when next() is the last call\n-    // in the chain\n-    for x in v.iter().next() {\n-        println!(\"{}\", x);\n-    }\n-\n-    // make sure we lint when next() is not the last call in the chain\n-    for x in v.iter().next().and(Some(0)) {\n-        println!(\"{}\", x);\n-    }\n-\n-    for x in v.iter().next().ok_or(\"x not found\") {\n-        println!(\"{}\", x);\n-    }\n-\n-    // check for false positives\n-\n-    // for loop false positive\n-    for x in v {\n-        println!(\"{}\", x);\n-    }\n-\n-    // while let false positive for Option\n-    while let Some(x) = option {\n-        println!(\"{}\", x);\n-        break;\n-    }\n-\n-    // while let false positive for Result\n-    while let Ok(x) = result {\n-        println!(\"{}\", x);\n-        break;\n-    }\n-}\n-\n struct Unrelated(Vec<u8>);\n impl Unrelated {\n     fn next(&self) -> std::slice::Iter<u8> {\n@@ -379,8 +321,6 @@ fn main() {\n     }\n     println!(\"index: {}\", index);\n \n-    for_loop_over_option_and_result();\n-\n     let m: HashMap<u64, u64> = HashMap::new();\n     for (_, v) in &m {\n         let _v = v;"}, {"sha": "f70a6d3b32f2b9377e9464aea5b9b55ac0dbc660", "filename": "tests/ui/for_loop.stderr", "status": "modified", "additions": 178, "deletions": 246, "changes": 424, "blob_url": "https://github.com/rust-lang/rust/blob/6a165e5a9296ab4166db733d2675039830716598/tests%2Fui%2Ffor_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a165e5a9296ab4166db733d2675039830716598/tests%2Fui%2Ffor_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor_loop.stderr?ref=6a165e5a9296ab4166db733d2675039830716598", "patch": "@@ -1,489 +1,421 @@\n-error: for loop over `option`, which is an `Option`. This is more readably written as an `if let` statement.\n-  --> $DIR/for_loop.rs:27:14\n-   |\n-27 |     for x in option {\n-   |              ^^^^^^\n-   |\n-   = note: `-D clippy::for-loop-over-option` implied by `-D warnings`\n-   = help: consider replacing `for x in option` with `if let Some(x) = option`\n-\n-error: for loop over `result`, which is a `Result`. This is more readably written as an `if let` statement.\n-  --> $DIR/for_loop.rs:32:14\n-   |\n-32 |     for x in result {\n-   |              ^^^^^^\n-   |\n-   = note: `-D clippy::for-loop-over-result` implied by `-D warnings`\n-   = help: consider replacing `for x in result` with `if let Ok(x) = result`\n-\n-error: for loop over `option.ok_or(\"x not found\")`, which is a `Result`. This is more readably written as an `if let` statement.\n-  --> $DIR/for_loop.rs:36:14\n-   |\n-36 |     for x in option.ok_or(\"x not found\") {\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider replacing `for x in option.ok_or(\"x not found\")` with `if let Ok(x) = option.ok_or(\"x not found\")`\n-\n-error: you are iterating over `Iterator::next()` which is an Option; this will compile but is probably not what you want\n-  --> $DIR/for_loop.rs:42:14\n-   |\n-42 |     for x in v.iter().next() {\n-   |              ^^^^^^^^^^^^^^^\n-   |\n-   = note: `-D clippy::iter-next-loop` implied by `-D warnings`\n-\n-error: for loop over `v.iter().next().and(Some(0))`, which is an `Option`. This is more readably written as an `if let` statement.\n-  --> $DIR/for_loop.rs:47:14\n-   |\n-47 |     for x in v.iter().next().and(Some(0)) {\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider replacing `for x in v.iter().next().and(Some(0))` with `if let Some(x) = v.iter().next().and(Some(0))`\n-\n-error: for loop over `v.iter().next().ok_or(\"x not found\")`, which is a `Result`. This is more readably written as an `if let` statement.\n-  --> $DIR/for_loop.rs:51:14\n-   |\n-51 |     for x in v.iter().next().ok_or(\"x not found\") {\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: consider replacing `for x in v.iter().next().ok_or(\"x not found\")` with `if let Ok(x) = v.iter().next().ok_or(\"x not found\")`\n-\n-error: this loop never actually loops\n-  --> $DIR/for_loop.rs:63:5\n-   |\n-63 | /     while let Some(x) = option {\n-64 | |         println!(\"{}\", x);\n-65 | |         break;\n-66 | |     }\n-   | |_____^\n-   |\n-   = note: `-D clippy::never-loop` implied by `-D warnings`\n-\n-error: this loop never actually loops\n-  --> $DIR/for_loop.rs:69:5\n-   |\n-69 | /     while let Ok(x) = result {\n-70 | |         println!(\"{}\", x);\n-71 | |         break;\n-72 | |     }\n-   | |_____^\n-\n error: the loop variable `i` is only used to index `vec`.\n-  --> $DIR/for_loop.rs:96:14\n+  --> $DIR/for_loop.rs:38:14\n    |\n-96 |     for i in 0..vec.len() {\n+38 |     for i in 0..vec.len() {\n    |              ^^^^^^^^^^^^\n    |\n    = note: `-D clippy::needless-range-loop` implied by `-D warnings`\n help: consider using an iterator\n    |\n-96 |     for <item> in &vec {\n+38 |     for <item> in &vec {\n    |         ^^^^^^    ^^^^\n \n error: the loop variable `i` is only used to index `vec`.\n-   --> $DIR/for_loop.rs:105:14\n-    |\n-105 |     for i in 0..vec.len() {\n-    |              ^^^^^^^^^^^^\n+  --> $DIR/for_loop.rs:47:14\n+   |\n+47 |     for i in 0..vec.len() {\n+   |              ^^^^^^^^^^^^\n help: consider using an iterator\n-    |\n-105 |     for <item> in &vec {\n-    |         ^^^^^^    ^^^^\n+   |\n+47 |     for <item> in &vec {\n+   |         ^^^^^^    ^^^^\n \n error: the loop variable `j` is only used to index `STATIC`.\n-   --> $DIR/for_loop.rs:110:14\n-    |\n-110 |     for j in 0..4 {\n-    |              ^^^^\n+  --> $DIR/for_loop.rs:52:14\n+   |\n+52 |     for j in 0..4 {\n+   |              ^^^^\n help: consider using an iterator\n-    |\n-110 |     for <item> in &STATIC {\n-    |         ^^^^^^    ^^^^^^^\n+   |\n+52 |     for <item> in &STATIC {\n+   |         ^^^^^^    ^^^^^^^\n \n error: the loop variable `j` is only used to index `CONST`.\n-   --> $DIR/for_loop.rs:114:14\n-    |\n-114 |     for j in 0..4 {\n-    |              ^^^^\n+  --> $DIR/for_loop.rs:56:14\n+   |\n+56 |     for j in 0..4 {\n+   |              ^^^^\n help: consider using an iterator\n-    |\n-114 |     for <item> in &CONST {\n-    |         ^^^^^^    ^^^^^^\n+   |\n+56 |     for <item> in &CONST {\n+   |         ^^^^^^    ^^^^^^\n \n error: the loop variable `i` is used to index `vec`\n-   --> $DIR/for_loop.rs:118:14\n-    |\n-118 |     for i in 0..vec.len() {\n-    |              ^^^^^^^^^^^^\n+  --> $DIR/for_loop.rs:60:14\n+   |\n+60 |     for i in 0..vec.len() {\n+   |              ^^^^^^^^^^^^\n help: consider using an iterator\n-    |\n-118 |     for (i, <item>) in vec.iter().enumerate() {\n-    |         ^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+60 |     for (i, <item>) in vec.iter().enumerate() {\n+   |         ^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is only used to index `vec2`.\n-   --> $DIR/for_loop.rs:126:14\n-    |\n-126 |     for i in 0..vec.len() {\n-    |              ^^^^^^^^^^^^\n+  --> $DIR/for_loop.rs:68:14\n+   |\n+68 |     for i in 0..vec.len() {\n+   |              ^^^^^^^^^^^^\n help: consider using an iterator\n-    |\n-126 |     for <item> in vec2.iter().take(vec.len()) {\n-    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+68 |     for <item> in vec2.iter().take(vec.len()) {\n+   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is only used to index `vec`.\n-   --> $DIR/for_loop.rs:130:14\n-    |\n-130 |     for i in 5..vec.len() {\n-    |              ^^^^^^^^^^^^\n+  --> $DIR/for_loop.rs:72:14\n+   |\n+72 |     for i in 5..vec.len() {\n+   |              ^^^^^^^^^^^^\n help: consider using an iterator\n-    |\n-130 |     for <item> in vec.iter().skip(5) {\n-    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^\n+   |\n+72 |     for <item> in vec.iter().skip(5) {\n+   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is only used to index `vec`.\n-   --> $DIR/for_loop.rs:134:14\n-    |\n-134 |     for i in 0..MAX_LEN {\n-    |              ^^^^^^^^^^\n+  --> $DIR/for_loop.rs:76:14\n+   |\n+76 |     for i in 0..MAX_LEN {\n+   |              ^^^^^^^^^^\n help: consider using an iterator\n-    |\n-134 |     for <item> in vec.iter().take(MAX_LEN) {\n-    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+76 |     for <item> in vec.iter().take(MAX_LEN) {\n+   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is only used to index `vec`.\n-   --> $DIR/for_loop.rs:138:14\n-    |\n-138 |     for i in 0..=MAX_LEN {\n-    |              ^^^^^^^^^^^\n+  --> $DIR/for_loop.rs:80:14\n+   |\n+80 |     for i in 0..=MAX_LEN {\n+   |              ^^^^^^^^^^^\n help: consider using an iterator\n-    |\n-138 |     for <item> in vec.iter().take(MAX_LEN + 1) {\n-    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+80 |     for <item> in vec.iter().take(MAX_LEN + 1) {\n+   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is only used to index `vec`.\n-   --> $DIR/for_loop.rs:142:14\n-    |\n-142 |     for i in 5..10 {\n-    |              ^^^^^\n+  --> $DIR/for_loop.rs:84:14\n+   |\n+84 |     for i in 5..10 {\n+   |              ^^^^^\n help: consider using an iterator\n-    |\n-142 |     for <item> in vec.iter().take(10).skip(5) {\n-    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+84 |     for <item> in vec.iter().take(10).skip(5) {\n+   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is only used to index `vec`.\n-   --> $DIR/for_loop.rs:146:14\n-    |\n-146 |     for i in 5..=10 {\n-    |              ^^^^^^\n+  --> $DIR/for_loop.rs:88:14\n+   |\n+88 |     for i in 5..=10 {\n+   |              ^^^^^^\n help: consider using an iterator\n-    |\n-146 |     for <item> in vec.iter().take(10 + 1).skip(5) {\n-    |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+88 |     for <item> in vec.iter().take(10 + 1).skip(5) {\n+   |         ^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is used to index `vec`\n-   --> $DIR/for_loop.rs:150:14\n-    |\n-150 |     for i in 5..vec.len() {\n-    |              ^^^^^^^^^^^^\n+  --> $DIR/for_loop.rs:92:14\n+   |\n+92 |     for i in 5..vec.len() {\n+   |              ^^^^^^^^^^^^\n help: consider using an iterator\n-    |\n-150 |     for (i, <item>) in vec.iter().enumerate().skip(5) {\n-    |         ^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+92 |     for (i, <item>) in vec.iter().enumerate().skip(5) {\n+   |         ^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the loop variable `i` is used to index `vec`\n-   --> $DIR/for_loop.rs:154:14\n-    |\n-154 |     for i in 5..10 {\n-    |              ^^^^^\n+  --> $DIR/for_loop.rs:96:14\n+   |\n+96 |     for i in 5..10 {\n+   |              ^^^^^\n help: consider using an iterator\n-    |\n-154 |     for (i, <item>) in vec.iter().enumerate().take(10).skip(5) {\n-    |         ^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+96 |     for (i, <item>) in vec.iter().enumerate().take(10).skip(5) {\n+   |         ^^^^^^^^^^^    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this range is empty so this for loop will never run\n-   --> $DIR/for_loop.rs:158:14\n+   --> $DIR/for_loop.rs:100:14\n     |\n-158 |     for i in 10..0 {\n+100 |     for i in 10..0 {\n     |              ^^^^^\n     |\n     = note: `-D clippy::reverse-range-loop` implied by `-D warnings`\n help: consider using the following if you are attempting to iterate over this range in reverse\n     |\n-158 |     for i in (0..10).rev() {\n+100 |     for i in (0..10).rev() {\n     |              ^^^^^^^^^^^^^\n \n error: this range is empty so this for loop will never run\n-   --> $DIR/for_loop.rs:162:14\n+   --> $DIR/for_loop.rs:104:14\n     |\n-162 |     for i in 10..=0 {\n+104 |     for i in 10..=0 {\n     |              ^^^^^^\n help: consider using the following if you are attempting to iterate over this range in reverse\n     |\n-162 |     for i in (0...10).rev() {\n+104 |     for i in (0...10).rev() {\n     |              ^^^^^^^^^^^^^^\n \n error: this range is empty so this for loop will never run\n-   --> $DIR/for_loop.rs:166:14\n+   --> $DIR/for_loop.rs:108:14\n     |\n-166 |     for i in MAX_LEN..0 {\n+108 |     for i in MAX_LEN..0 {\n     |              ^^^^^^^^^^\n help: consider using the following if you are attempting to iterate over this range in reverse\n     |\n-166 |     for i in (0..MAX_LEN).rev() {\n+108 |     for i in (0..MAX_LEN).rev() {\n     |              ^^^^^^^^^^^^^^^^^^\n \n error: this range is empty so this for loop will never run\n-   --> $DIR/for_loop.rs:170:14\n+   --> $DIR/for_loop.rs:112:14\n     |\n-170 |     for i in 5..5 {\n+112 |     for i in 5..5 {\n     |              ^^^^\n \n error: this range is empty so this for loop will never run\n-   --> $DIR/for_loop.rs:195:14\n+   --> $DIR/for_loop.rs:137:14\n     |\n-195 |     for i in 10..5 + 4 {\n+137 |     for i in 10..5 + 4 {\n     |              ^^^^^^^^^\n help: consider using the following if you are attempting to iterate over this range in reverse\n     |\n-195 |     for i in (5 + 4..10).rev() {\n+137 |     for i in (5 + 4..10).rev() {\n     |              ^^^^^^^^^^^^^^^^^\n \n error: this range is empty so this for loop will never run\n-   --> $DIR/for_loop.rs:199:14\n+   --> $DIR/for_loop.rs:141:14\n     |\n-199 |     for i in (5 + 2)..(3 - 1) {\n+141 |     for i in (5 + 2)..(3 - 1) {\n     |              ^^^^^^^^^^^^^^^^\n help: consider using the following if you are attempting to iterate over this range in reverse\n     |\n-199 |     for i in ((3 - 1)..(5 + 2)).rev() {\n+141 |     for i in ((3 - 1)..(5 + 2)).rev() {\n     |              ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this range is empty so this for loop will never run\n-   --> $DIR/for_loop.rs:203:14\n+   --> $DIR/for_loop.rs:145:14\n     |\n-203 |     for i in (5 + 2)..(8 - 1) {\n+145 |     for i in (5 + 2)..(8 - 1) {\n     |              ^^^^^^^^^^^^^^^^\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:225:15\n+   --> $DIR/for_loop.rs:167:15\n     |\n-225 |     for _v in vec.iter() {}\n+167 |     for _v in vec.iter() {}\n     |               ^^^^^^^^^^ help: to write this more concisely, try: `&vec`\n     |\n     = note: `-D clippy::explicit-iter-loop` implied by `-D warnings`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:227:15\n+   --> $DIR/for_loop.rs:169:15\n     |\n-227 |     for _v in vec.iter_mut() {}\n+169 |     for _v in vec.iter_mut() {}\n     |               ^^^^^^^^^^^^^^ help: to write this more concisely, try: `&mut vec`\n \n error: it is more concise to loop over containers instead of using explicit iteration methods`\n-   --> $DIR/for_loop.rs:230:15\n+   --> $DIR/for_loop.rs:172:15\n     |\n-230 |     for _v in out_vec.into_iter() {}\n+172 |     for _v in out_vec.into_iter() {}\n     |               ^^^^^^^^^^^^^^^^^^^ help: to write this more concisely, try: `out_vec`\n     |\n     = note: `-D clippy::explicit-into-iter-loop` implied by `-D warnings`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:233:15\n+   --> $DIR/for_loop.rs:175:15\n     |\n-233 |     for _v in array.into_iter() {}\n+175 |     for _v in array.into_iter() {}\n     |               ^^^^^^^^^^^^^^^^^ help: to write this more concisely, try: `&array`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:238:15\n+   --> $DIR/for_loop.rs:180:15\n     |\n-238 |     for _v in [1, 2, 3].iter() {}\n+180 |     for _v in [1, 2, 3].iter() {}\n     |               ^^^^^^^^^^^^^^^^ help: to write this more concisely, try: `&[1, 2, 3]`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:242:15\n+   --> $DIR/for_loop.rs:184:15\n     |\n-242 |     for _v in [0; 32].iter() {}\n+184 |     for _v in [0; 32].iter() {}\n     |               ^^^^^^^^^^^^^^ help: to write this more concisely, try: `&[0; 32]`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:247:15\n+   --> $DIR/for_loop.rs:189:15\n     |\n-247 |     for _v in ll.iter() {}\n+189 |     for _v in ll.iter() {}\n     |               ^^^^^^^^^ help: to write this more concisely, try: `&ll`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:250:15\n+   --> $DIR/for_loop.rs:192:15\n     |\n-250 |     for _v in vd.iter() {}\n+192 |     for _v in vd.iter() {}\n     |               ^^^^^^^^^ help: to write this more concisely, try: `&vd`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:253:15\n+   --> $DIR/for_loop.rs:195:15\n     |\n-253 |     for _v in bh.iter() {}\n+195 |     for _v in bh.iter() {}\n     |               ^^^^^^^^^ help: to write this more concisely, try: `&bh`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:256:15\n+   --> $DIR/for_loop.rs:198:15\n     |\n-256 |     for _v in hm.iter() {}\n+198 |     for _v in hm.iter() {}\n     |               ^^^^^^^^^ help: to write this more concisely, try: `&hm`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:259:15\n+   --> $DIR/for_loop.rs:201:15\n     |\n-259 |     for _v in bt.iter() {}\n+201 |     for _v in bt.iter() {}\n     |               ^^^^^^^^^ help: to write this more concisely, try: `&bt`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:262:15\n+   --> $DIR/for_loop.rs:204:15\n     |\n-262 |     for _v in hs.iter() {}\n+204 |     for _v in hs.iter() {}\n     |               ^^^^^^^^^ help: to write this more concisely, try: `&hs`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:265:15\n+   --> $DIR/for_loop.rs:207:15\n     |\n-265 |     for _v in bs.iter() {}\n+207 |     for _v in bs.iter() {}\n     |               ^^^^^^^^^ help: to write this more concisely, try: `&bs`\n \n error: you are iterating over `Iterator::next()` which is an Option; this will compile but is probably not what you want\n-   --> $DIR/for_loop.rs:267:15\n+   --> $DIR/for_loop.rs:209:15\n     |\n-267 |     for _v in vec.iter().next() {}\n+209 |     for _v in vec.iter().next() {}\n     |               ^^^^^^^^^^^^^^^^^\n+    |\n+    = note: `-D clippy::iter-next-loop` implied by `-D warnings`\n \n error: you are collect()ing an iterator and throwing away the result. Consider using an explicit for loop to exhaust the iterator\n-   --> $DIR/for_loop.rs:274:5\n+   --> $DIR/for_loop.rs:216:5\n     |\n-274 |     vec.iter().cloned().map(|x| out.push(x)).collect::<Vec<_>>();\n+216 |     vec.iter().cloned().map(|x| out.push(x)).collect::<Vec<_>>();\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: `-D clippy::unused-collect` implied by `-D warnings`\n \n error: you seem to want to iterate on a map's values\n-   --> $DIR/for_loop.rs:385:19\n+   --> $DIR/for_loop.rs:325:19\n     |\n-385 |     for (_, v) in &m {\n+325 |     for (_, v) in &m {\n     |                   ^^\n     |\n     = note: `-D clippy::for-kv-map` implied by `-D warnings`\n help: use the corresponding method\n     |\n-385 |     for v in m.values() {\n+325 |     for v in m.values() {\n     |         ^    ^^^^^^^^^^\n \n error: you seem to want to iterate on a map's values\n-   --> $DIR/for_loop.rs:390:19\n+   --> $DIR/for_loop.rs:330:19\n     |\n-390 |     for (_, v) in &*m {\n+330 |     for (_, v) in &*m {\n     |                   ^^^\n help: use the corresponding method\n     |\n-390 |     for v in (*m).values() {\n+330 |     for v in (*m).values() {\n     |         ^    ^^^^^^^^^^^^^\n \n error: you seem to want to iterate on a map's values\n-   --> $DIR/for_loop.rs:398:19\n+   --> $DIR/for_loop.rs:338:19\n     |\n-398 |     for (_, v) in &mut m {\n+338 |     for (_, v) in &mut m {\n     |                   ^^^^^^\n help: use the corresponding method\n     |\n-398 |     for v in m.values_mut() {\n+338 |     for v in m.values_mut() {\n     |         ^    ^^^^^^^^^^^^^^\n \n error: you seem to want to iterate on a map's values\n-   --> $DIR/for_loop.rs:403:19\n+   --> $DIR/for_loop.rs:343:19\n     |\n-403 |     for (_, v) in &mut *m {\n+343 |     for (_, v) in &mut *m {\n     |                   ^^^^^^^\n help: use the corresponding method\n     |\n-403 |     for v in (*m).values_mut() {\n+343 |     for v in (*m).values_mut() {\n     |         ^    ^^^^^^^^^^^^^^^^^\n \n error: you seem to want to iterate on a map's keys\n-   --> $DIR/for_loop.rs:409:24\n+   --> $DIR/for_loop.rs:349:24\n     |\n-409 |     for (k, _value) in rm {\n+349 |     for (k, _value) in rm {\n     |                        ^^\n help: use the corresponding method\n     |\n-409 |     for k in rm.keys() {\n+349 |     for k in rm.keys() {\n     |         ^    ^^^^^^^^^\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:462:14\n+   --> $DIR/for_loop.rs:402:14\n     |\n-462 |     for i in 0..src.len() {\n+402 |     for i in 0..src.len() {\n     |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst[..src.len()].clone_from_slice(&src[..])`\n     |\n     = note: `-D clippy::manual-memcpy` implied by `-D warnings`\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:467:14\n+   --> $DIR/for_loop.rs:407:14\n     |\n-467 |     for i in 0..src.len() {\n+407 |     for i in 0..src.len() {\n     |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst[10..(src.len() + 10)].clone_from_slice(&src[..])`\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:472:14\n+   --> $DIR/for_loop.rs:412:14\n     |\n-472 |     for i in 0..src.len() {\n+412 |     for i in 0..src.len() {\n     |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst[..src.len()].clone_from_slice(&src[10..])`\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:477:14\n+   --> $DIR/for_loop.rs:417:14\n     |\n-477 |     for i in 11..src.len() {\n+417 |     for i in 11..src.len() {\n     |              ^^^^^^^^^^^^^ help: try replacing the loop by: `dst[11..src.len()].clone_from_slice(&src[(11 - 10)..(src.len() - 10)])`\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:482:14\n+   --> $DIR/for_loop.rs:422:14\n     |\n-482 |     for i in 0..dst.len() {\n+422 |     for i in 0..dst.len() {\n     |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst.clone_from_slice(&src[..dst.len()])`\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:495:14\n+   --> $DIR/for_loop.rs:435:14\n     |\n-495 |     for i in 10..256 {\n+435 |     for i in 10..256 {\n     |              ^^^^^^^\n help: try replacing the loop by\n     |\n-495 |     for i in dst[10..256].clone_from_slice(&src[(10 - 5)..(256 - 5)])\n-496 |     dst2[(10 + 500)..(256 + 500)].clone_from_slice(&src[10..256]) {\n+435 |     for i in dst[10..256].clone_from_slice(&src[(10 - 5)..(256 - 5)])\n+436 |     dst2[(10 + 500)..(256 + 500)].clone_from_slice(&src[10..256]) {\n     |\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:507:14\n+   --> $DIR/for_loop.rs:447:14\n     |\n-507 |     for i in 10..LOOP_OFFSET {\n+447 |     for i in 10..LOOP_OFFSET {\n     |              ^^^^^^^^^^^^^^^ help: try replacing the loop by: `dst[(10 + LOOP_OFFSET)..(LOOP_OFFSET + LOOP_OFFSET)].clone_from_slice(&src[(10 - some_var)..(LOOP_OFFSET - some_var)])`\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:520:14\n+   --> $DIR/for_loop.rs:460:14\n     |\n-520 |     for i in 0..src_vec.len() {\n+460 |     for i in 0..src_vec.len() {\n     |              ^^^^^^^^^^^^^^^^ help: try replacing the loop by: `dst_vec[..src_vec.len()].clone_from_slice(&src_vec[..])`\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:549:14\n+   --> $DIR/for_loop.rs:489:14\n     |\n-549 |     for i in from..from + src.len() {\n+489 |     for i in from..from + src.len() {\n     |              ^^^^^^^^^^^^^^^^^^^^^^ help: try replacing the loop by: `dst[from..from + src.len()].clone_from_slice(&src[0..(from + src.len() - from)])`\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:553:14\n+   --> $DIR/for_loop.rs:493:14\n     |\n-553 |     for i in from..from + 3 {\n+493 |     for i in from..from + 3 {\n     |              ^^^^^^^^^^^^^^ help: try replacing the loop by: `dst[from..from + 3].clone_from_slice(&src[0..(from + 3 - from)])`\n \n error: it looks like you're manually copying between slices\n-   --> $DIR/for_loop.rs:560:14\n+   --> $DIR/for_loop.rs:500:14\n     |\n-560 |     for i in 0..src.len() {\n+500 |     for i in 0..src.len() {\n     |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst[..src.len()].clone_from_slice(&src[..])`\n \n-error: aborting due to 59 previous errors\n+error: aborting due to 51 previous errors\n "}, {"sha": "37fd4e6d03851288a475073b4f9518d2c694dbe1", "filename": "tests/ui/for_loop_over_option_result.rs", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/6a165e5a9296ab4166db733d2675039830716598/tests%2Fui%2Ffor_loop_over_option_result.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a165e5a9296ab4166db733d2675039830716598/tests%2Fui%2Ffor_loop_over_option_result.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor_loop_over_option_result.rs?ref=6a165e5a9296ab4166db733d2675039830716598", "patch": "@@ -0,0 +1,68 @@\n+// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![warn(clippy::for_loop_over_option, clippy::for_loop_over_result)]\n+\n+/// Tests for_loop_over_result and for_loop_over_option\n+\n+fn for_loop_over_option_and_result() {\n+    let option = Some(1);\n+    let result = option.ok_or(\"x not found\");\n+    let v = vec![0, 1, 2];\n+\n+    // check FOR_LOOP_OVER_OPTION lint\n+    for x in option {\n+        println!(\"{}\", x);\n+    }\n+\n+    // check FOR_LOOP_OVER_RESULT lint\n+    for x in result {\n+        println!(\"{}\", x);\n+    }\n+\n+    for x in option.ok_or(\"x not found\") {\n+        println!(\"{}\", x);\n+    }\n+\n+    // make sure LOOP_OVER_NEXT lint takes clippy::precedence when next() is the last call\n+    // in the chain\n+    for x in v.iter().next() {\n+        println!(\"{}\", x);\n+    }\n+\n+    // make sure we lint when next() is not the last call in the chain\n+    for x in v.iter().next().and(Some(0)) {\n+        println!(\"{}\", x);\n+    }\n+\n+    for x in v.iter().next().ok_or(\"x not found\") {\n+        println!(\"{}\", x);\n+    }\n+\n+    // check for false positives\n+\n+    // for loop false positive\n+    for x in v {\n+        println!(\"{}\", x);\n+    }\n+\n+    // while let false positive for Option\n+    while let Some(x) = option {\n+        println!(\"{}\", x);\n+        break;\n+    }\n+\n+    // while let false positive for Result\n+    while let Ok(x) = result {\n+        println!(\"{}\", x);\n+        break;\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "13ad5fff846dadbbdc4459e03cb3abccd2314726", "filename": "tests/ui/for_loop_over_option_result.stderr", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/6a165e5a9296ab4166db733d2675039830716598/tests%2Fui%2Ffor_loop_over_option_result.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a165e5a9296ab4166db733d2675039830716598/tests%2Fui%2Ffor_loop_over_option_result.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor_loop_over_option_result.stderr?ref=6a165e5a9296ab4166db733d2675039830716598", "patch": "@@ -0,0 +1,72 @@\n+error: for loop over `option`, which is an `Option`. This is more readably written as an `if let` statement.\n+  --> $DIR/for_loop_over_option_result.rs:20:14\n+   |\n+20 |     for x in option {\n+   |              ^^^^^^\n+   |\n+   = note: `-D clippy::for-loop-over-option` implied by `-D warnings`\n+   = help: consider replacing `for x in option` with `if let Some(x) = option`\n+\n+error: for loop over `result`, which is a `Result`. This is more readably written as an `if let` statement.\n+  --> $DIR/for_loop_over_option_result.rs:25:14\n+   |\n+25 |     for x in result {\n+   |              ^^^^^^\n+   |\n+   = note: `-D clippy::for-loop-over-result` implied by `-D warnings`\n+   = help: consider replacing `for x in result` with `if let Ok(x) = result`\n+\n+error: for loop over `option.ok_or(\"x not found\")`, which is a `Result`. This is more readably written as an `if let` statement.\n+  --> $DIR/for_loop_over_option_result.rs:29:14\n+   |\n+29 |     for x in option.ok_or(\"x not found\") {\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider replacing `for x in option.ok_or(\"x not found\")` with `if let Ok(x) = option.ok_or(\"x not found\")`\n+\n+error: you are iterating over `Iterator::next()` which is an Option; this will compile but is probably not what you want\n+  --> $DIR/for_loop_over_option_result.rs:35:14\n+   |\n+35 |     for x in v.iter().next() {\n+   |              ^^^^^^^^^^^^^^^\n+   |\n+   = note: #[deny(clippy::iter_next_loop)] on by default\n+\n+error: for loop over `v.iter().next().and(Some(0))`, which is an `Option`. This is more readably written as an `if let` statement.\n+  --> $DIR/for_loop_over_option_result.rs:40:14\n+   |\n+40 |     for x in v.iter().next().and(Some(0)) {\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider replacing `for x in v.iter().next().and(Some(0))` with `if let Some(x) = v.iter().next().and(Some(0))`\n+\n+error: for loop over `v.iter().next().ok_or(\"x not found\")`, which is a `Result`. This is more readably written as an `if let` statement.\n+  --> $DIR/for_loop_over_option_result.rs:44:14\n+   |\n+44 |     for x in v.iter().next().ok_or(\"x not found\") {\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider replacing `for x in v.iter().next().ok_or(\"x not found\")` with `if let Ok(x) = v.iter().next().ok_or(\"x not found\")`\n+\n+error: this loop never actually loops\n+  --> $DIR/for_loop_over_option_result.rs:56:5\n+   |\n+56 | /     while let Some(x) = option {\n+57 | |         println!(\"{}\", x);\n+58 | |         break;\n+59 | |     }\n+   | |_____^\n+   |\n+   = note: #[deny(clippy::never_loop)] on by default\n+\n+error: this loop never actually loops\n+  --> $DIR/for_loop_over_option_result.rs:62:5\n+   |\n+62 | /     while let Ok(x) = result {\n+63 | |         println!(\"{}\", x);\n+64 | |         break;\n+65 | |     }\n+   | |_____^\n+\n+error: aborting due to 8 previous errors\n+"}]}