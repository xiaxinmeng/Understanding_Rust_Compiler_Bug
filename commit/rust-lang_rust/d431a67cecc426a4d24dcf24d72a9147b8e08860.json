{"sha": "d431a67cecc426a4d24dcf24d72a9147b8e08860", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0MzFhNjdjZWNjNDI2YTRkMjRkY2YyNGQ3MmE5MTQ3YjhlMDg4NjA=", "commit": {"author": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2014-11-09T06:46:33Z"}, "committer": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2014-11-12T15:02:44Z"}, "message": "Move saturating operator methods into Int", "tree": {"sha": "55ed6997324f89d1b29afb8a987fef8d57389e3b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55ed6997324f89d1b29afb8a987fef8d57389e3b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d431a67cecc426a4d24dcf24d72a9147b8e08860", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d431a67cecc426a4d24dcf24d72a9147b8e08860", "html_url": "https://github.com/rust-lang/rust/commit/d431a67cecc426a4d24dcf24d72a9147b8e08860", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d431a67cecc426a4d24dcf24d72a9147b8e08860/comments", "author": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1eb68e8d7d2883c70304021d5443c96bca18abb", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1eb68e8d7d2883c70304021d5443c96bca18abb", "html_url": "https://github.com/rust-lang/rust/commit/d1eb68e8d7d2883c70304021d5443c96bca18abb"}], "stats": {"total": 68, "additions": 26, "deletions": 42}, "files": [{"sha": "73d3aef5ee05600aaeb0b75033c3abebc1c80a67", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d431a67cecc426a4d24dcf24d72a9147b8e08860/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d431a67cecc426a4d24dcf24d72a9147b8e08860/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=d431a67cecc426a4d24dcf24d72a9147b8e08860", "patch": "@@ -62,7 +62,7 @@ use clone::Clone;\n use cmp;\n use cmp::{PartialEq, PartialOrd, Ord};\n use mem;\n-use num::{Zero, One, CheckedAdd, CheckedSub, Saturating, ToPrimitive, Int};\n+use num::{Zero, One, CheckedAdd, CheckedSub, ToPrimitive, Int};\n use ops::{Add, Mul, Sub};\n use option::{Option, Some, None};\n use uint;"}, {"sha": "457aa57d93d7842d14545f272390eee7692cbb8b", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 22, "deletions": 37, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/d431a67cecc426a4d24dcf24d72a9147b8e08860/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d431a67cecc426a4d24dcf24d72a9147b8e08860/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=d431a67cecc426a4d24dcf24d72a9147b8e08860", "patch": "@@ -525,6 +525,28 @@ pub trait Int: Primitive\n     fn to_le(self) -> Self {\n         if cfg!(target_endian = \"little\") { self } else { self.swap_bytes() }\n     }\n+\n+    /// Saturating addition. Returns `self + other`, saturating at the\n+    /// numeric bounds instead of overflowing.\n+    #[inline]\n+    fn saturating_add(self, other: Self) -> Self {\n+        match self.checked_add(&other) {\n+            Some(x)                       => x,\n+            None if other >= Zero::zero() => Bounded::max_value(),\n+            None                          => Bounded::min_value(),\n+        }\n+    }\n+\n+    /// Saturating subtraction. Returns `self - other`, saturating at the\n+    /// numeric bounds instead of overflowing.\n+    #[inline]\n+    fn saturating_sub(self, other: Self) -> Self {\n+        match self.checked_sub(&other) {\n+            Some(x)                       => x,\n+            None if other >= Zero::zero() => Bounded::min_value(),\n+            None                          => Bounded::max_value(),\n+        }\n+    }\n }\n \n macro_rules! int_impl {\n@@ -1150,43 +1172,6 @@ impl_num_cast!(int,   to_int)\n impl_num_cast!(f32,   to_f32)\n impl_num_cast!(f64,   to_f64)\n \n-/// Saturating math operations\n-pub trait Saturating {\n-    /// Saturating addition operator.\n-    /// Returns a+b, saturating at the numeric bounds instead of overflowing.\n-    fn saturating_add(self, v: Self) -> Self;\n-\n-    /// Saturating subtraction operator.\n-    /// Returns a-b, saturating at the numeric bounds instead of overflowing.\n-    fn saturating_sub(self, v: Self) -> Self;\n-}\n-\n-impl<T: CheckedAdd + CheckedSub + Zero + PartialOrd + Bounded> Saturating for T {\n-    #[inline]\n-    fn saturating_add(self, v: T) -> T {\n-        match self.checked_add(&v) {\n-            Some(x) => x,\n-            None => if v >= Zero::zero() {\n-                Bounded::max_value()\n-            } else {\n-                Bounded::min_value()\n-            }\n-        }\n-    }\n-\n-    #[inline]\n-    fn saturating_sub(self, v: T) -> T {\n-        match self.checked_sub(&v) {\n-            Some(x) => x,\n-            None => if v >= Zero::zero() {\n-                Bounded::min_value()\n-            } else {\n-                Bounded::max_value()\n-            }\n-        }\n-    }\n-}\n-\n /// Performs addition that returns `None` instead of wrapping around on overflow.\n pub trait CheckedAdd: Add<Self, Self> {\n     /// Adds two numbers, checking for overflow. If overflow happens, `None` is returned."}, {"sha": "fd01ed69f818b66fe0a4e854d719a698ae38c5f2", "filename": "src/libcore/slice.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d431a67cecc426a4d24dcf24d72a9147b8e08860/src%2Flibcore%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d431a67cecc426a4d24dcf24d72a9147b8e08860/src%2Flibcore%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice.rs?ref=d431a67cecc426a4d24dcf24d72a9147b8e08860", "patch": "@@ -40,7 +40,7 @@ use cmp::{PartialEq, PartialOrd, Eq, Ord, Ordering, Less, Equal, Greater, Equiv}\n use cmp;\n use default::Default;\n use iter::*;\n-use num::{CheckedAdd, Saturating, div_rem};\n+use num::{CheckedAdd, Int, div_rem};\n use ops;\n use option::{None, Option, Some};\n use ptr;"}, {"sha": "3aee6867fd510750e984d4192d9f594b796a4751", "filename": "src/libcore/str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d431a67cecc426a4d24dcf24d72a9147b8e08860/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d431a67cecc426a4d24dcf24d72a9147b8e08860/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=d431a67cecc426a4d24dcf24d72a9147b8e08860", "patch": "@@ -25,7 +25,7 @@ use iter::{Map, Iterator};\n use iter::{DoubleEndedIterator, ExactSize};\n use iter::range;\n use kinds::Sized;\n-use num::{CheckedMul, Saturating};\n+use num::{CheckedMul, Int};\n use option::{Option, None, Some};\n use raw::Repr;\n use slice::{mod, SlicePrelude};"}, {"sha": "fefde35ea213f4ba7f8b58db7e087fd4441c0934", "filename": "src/libstd/num/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d431a67cecc426a4d24dcf24d72a9147b8e08860/src%2Flibstd%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d431a67cecc426a4d24dcf24d72a9147b8e08860/src%2Flibstd%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fmod.rs?ref=d431a67cecc426a4d24dcf24d72a9147b8e08860", "patch": "@@ -23,7 +23,7 @@ use option::Option;\n pub use core::num::{Num, div_rem, Zero, zero, One, one};\n pub use core::num::{Signed, abs, signum};\n pub use core::num::{Unsigned, pow, Bounded};\n-pub use core::num::{Primitive, Int, UnsignedInt, Saturating};\n+pub use core::num::{Primitive, Int, UnsignedInt};\n pub use core::num::{CheckedAdd, CheckedSub, CheckedMul, CheckedDiv};\n pub use core::num::{cast, FromPrimitive, NumCast, ToPrimitive};\n pub use core::num::{next_power_of_two, is_power_of_two};"}, {"sha": "ee6786414297dc5300e74176bbf39e2e7490c1b5", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d431a67cecc426a4d24dcf24d72a9147b8e08860/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d431a67cecc426a4d24dcf24d72a9147b8e08860/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=d431a67cecc426a4d24dcf24d72a9147b8e08860", "patch": "@@ -106,7 +106,6 @@ enum NamePadding { PadNone, PadOnLeft, PadOnRight }\n \n impl TestDesc {\n     fn padded_name(&self, column_count: uint, align: NamePadding) -> String {\n-        use std::num::Saturating;\n         let mut name = String::from_str(self.name.as_slice());\n         let fill = column_count.saturating_sub(name.len());\n         let mut pad = \" \".repeat(fill);"}]}