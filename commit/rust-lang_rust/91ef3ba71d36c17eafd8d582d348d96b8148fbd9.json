{"sha": "91ef3ba71d36c17eafd8d582d348d96b8148fbd9", "node_id": "C_kwDOAAsO6NoAKDkxZWYzYmE3MWQzNmMxN2VhZmQ4ZDU4MmQzNDhkOTZiODE0OGZiZDk", "commit": {"author": {"name": "Miguel Guarniz", "email": "mi9uel9@gmail.com", "date": "2022-04-29T20:45:48Z"}, "committer": {"name": "Miguel Guarniz", "email": "mi9uel9@gmail.com", "date": "2022-05-06T16:11:05Z"}, "message": "remove all usages of hir().def_kind\n\nSigned-off-by: Miguel Guarniz <mi9uel9@gmail.com>", "tree": {"sha": "fed7c4160c387907aa2d4952fe6d999f84c078e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fed7c4160c387907aa2d4952fe6d999f84c078e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91ef3ba71d36c17eafd8d582d348d96b8148fbd9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91ef3ba71d36c17eafd8d582d348d96b8148fbd9", "html_url": "https://github.com/rust-lang/rust/commit/91ef3ba71d36c17eafd8d582d348d96b8148fbd9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91ef3ba71d36c17eafd8d582d348d96b8148fbd9/comments", "author": {"login": "kckeiks", "id": 24687641, "node_id": "MDQ6VXNlcjI0Njg3NjQx", "avatar_url": "https://avatars.githubusercontent.com/u/24687641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kckeiks", "html_url": "https://github.com/kckeiks", "followers_url": "https://api.github.com/users/kckeiks/followers", "following_url": "https://api.github.com/users/kckeiks/following{/other_user}", "gists_url": "https://api.github.com/users/kckeiks/gists{/gist_id}", "starred_url": "https://api.github.com/users/kckeiks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kckeiks/subscriptions", "organizations_url": "https://api.github.com/users/kckeiks/orgs", "repos_url": "https://api.github.com/users/kckeiks/repos", "events_url": "https://api.github.com/users/kckeiks/events{/privacy}", "received_events_url": "https://api.github.com/users/kckeiks/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kckeiks", "id": 24687641, "node_id": "MDQ6VXNlcjI0Njg3NjQx", "avatar_url": "https://avatars.githubusercontent.com/u/24687641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kckeiks", "html_url": "https://github.com/kckeiks", "followers_url": "https://api.github.com/users/kckeiks/followers", "following_url": "https://api.github.com/users/kckeiks/following{/other_user}", "gists_url": "https://api.github.com/users/kckeiks/gists{/gist_id}", "starred_url": "https://api.github.com/users/kckeiks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kckeiks/subscriptions", "organizations_url": "https://api.github.com/users/kckeiks/orgs", "repos_url": "https://api.github.com/users/kckeiks/repos", "events_url": "https://api.github.com/users/kckeiks/events{/privacy}", "received_events_url": "https://api.github.com/users/kckeiks/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3afc5ea2010342f38fa771e9b81438249416f252", "url": "https://api.github.com/repos/rust-lang/rust/commits/3afc5ea2010342f38fa771e9b81438249416f252", "html_url": "https://github.com/rust-lang/rust/commit/3afc5ea2010342f38fa771e9b81438249416f252"}], "stats": {"total": 9, "additions": 2, "deletions": 7}, "files": [{"sha": "895cd4f0eac6e367ad86dc0eece6efbbc73c4dfc", "filename": "compiler/rustc_middle/src/hir/map/mod.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/91ef3ba71d36c17eafd8d582d348d96b8148fbd9/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91ef3ba71d36c17eafd8d582d348d96b8148fbd9/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs?ref=91ef3ba71d36c17eafd8d582d348d96b8148fbd9", "patch": "@@ -308,11 +308,6 @@ impl<'hir> Map<'hir> {\n         Some(def_kind)\n     }\n \n-    pub fn def_kind(self, local_def_id: LocalDefId) -> DefKind {\n-        self.opt_def_kind(local_def_id)\n-            .unwrap_or_else(|| bug!(\"def_kind: unsupported node: {:?}\", local_def_id))\n-    }\n-\n     pub fn find_parent_node(self, id: HirId) -> Option<HirId> {\n         if id.local_id == ItemLocalId::from_u32(0) {\n             Some(self.tcx.hir_owner_parent(id.owner))"}, {"sha": "eed90337c0a5057aac25794491bc6ebbc54fe594", "filename": "compiler/rustc_middle/src/ty/print/pretty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/91ef3ba71d36c17eafd8d582d348d96b8148fbd9/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91ef3ba71d36c17eafd8d582d348d96b8148fbd9/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs?ref=91ef3ba71d36c17eafd8d582d348d96b8148fbd9", "patch": "@@ -2676,7 +2676,7 @@ fn for_each_def(tcx: TyCtxt<'_>, mut collect_fn: impl for<'b> FnMut(&'b Ident, N\n     // Iterate all local crate items no matter where they are defined.\n     let hir = tcx.hir();\n     for id in hir.items() {\n-        if matches!(hir.def_kind(id.def_id), DefKind::Use) {\n+        if matches!(tcx.def_kind(id.def_id), DefKind::Use) {\n             continue;\n         }\n "}, {"sha": "ceb862b474a5a6ee63b7062484ade1ae194cc303", "filename": "compiler/rustc_typeck/src/check/fn_ctxt/suggestions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/91ef3ba71d36c17eafd8d582d348d96b8148fbd9/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91ef3ba71d36c17eafd8d582d348d96b8148fbd9/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fsuggestions.rs?ref=91ef3ba71d36c17eafd8d582d348d96b8148fbd9", "patch": "@@ -151,7 +151,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 }\n                 Some(Node::Ctor(hir::VariantData::Tuple(fields, _))) => {\n                     sugg_call = fields.iter().map(|_| \"_\").collect::<Vec<_>>().join(\", \");\n-                    match def_id.as_local().map(|def_id| hir.def_kind(def_id)) {\n+                    match def_id.as_local().map(|def_id| self.tcx.def_kind(def_id)) {\n                         Some(DefKind::Ctor(hir::def::CtorOf::Variant, _)) => {\n                             msg = \"instantiate this tuple variant\";\n                         }"}]}