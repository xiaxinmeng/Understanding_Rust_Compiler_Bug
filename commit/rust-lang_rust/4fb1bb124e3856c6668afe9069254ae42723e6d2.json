{"sha": "4fb1bb124e3856c6668afe9069254ae42723e6d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmYjFiYjEyNGUzODU2YzY2NjhhZmU5MDY5MjU0YWU0MjcyM2U2ZDI=", "commit": {"author": {"name": "laurent", "email": "laurent.mazare@gmail.com", "date": "2017-11-05T15:17:28Z"}, "committer": {"name": "laurent", "email": "laurent.mazare@gmail.com", "date": "2017-11-05T15:17:28Z"}, "message": "Make the dogfood test happy.", "tree": {"sha": "09e131552424fffcf429665244ea17d3d3759229", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09e131552424fffcf429665244ea17d3d3759229"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4fb1bb124e3856c6668afe9069254ae42723e6d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4fb1bb124e3856c6668afe9069254ae42723e6d2", "html_url": "https://github.com/rust-lang/rust/commit/4fb1bb124e3856c6668afe9069254ae42723e6d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4fb1bb124e3856c6668afe9069254ae42723e6d2/comments", "author": {"login": "LaurentMazare", "id": 1041292, "node_id": "MDQ6VXNlcjEwNDEyOTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1041292?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LaurentMazare", "html_url": "https://github.com/LaurentMazare", "followers_url": "https://api.github.com/users/LaurentMazare/followers", "following_url": "https://api.github.com/users/LaurentMazare/following{/other_user}", "gists_url": "https://api.github.com/users/LaurentMazare/gists{/gist_id}", "starred_url": "https://api.github.com/users/LaurentMazare/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LaurentMazare/subscriptions", "organizations_url": "https://api.github.com/users/LaurentMazare/orgs", "repos_url": "https://api.github.com/users/LaurentMazare/repos", "events_url": "https://api.github.com/users/LaurentMazare/events{/privacy}", "received_events_url": "https://api.github.com/users/LaurentMazare/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LaurentMazare", "id": 1041292, "node_id": "MDQ6VXNlcjEwNDEyOTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1041292?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LaurentMazare", "html_url": "https://github.com/LaurentMazare", "followers_url": "https://api.github.com/users/LaurentMazare/followers", "following_url": "https://api.github.com/users/LaurentMazare/following{/other_user}", "gists_url": "https://api.github.com/users/LaurentMazare/gists{/gist_id}", "starred_url": "https://api.github.com/users/LaurentMazare/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LaurentMazare/subscriptions", "organizations_url": "https://api.github.com/users/LaurentMazare/orgs", "repos_url": "https://api.github.com/users/LaurentMazare/repos", "events_url": "https://api.github.com/users/LaurentMazare/events{/privacy}", "received_events_url": "https://api.github.com/users/LaurentMazare/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42f44d5c78b05f846584249704ebdd026e208fec", "url": "https://api.github.com/repos/rust-lang/rust/commits/42f44d5c78b05f846584249704ebdd026e208fec", "html_url": "https://github.com/rust-lang/rust/commit/42f44d5c78b05f846584249704ebdd026e208fec"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "705487dc67d7a93f6ed71a21760c8f671c5a7d35", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4fb1bb124e3856c6668afe9069254ae42723e6d2/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fb1bb124e3856c6668afe9069254ae42723e6d2/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=4fb1bb124e3856c6668afe9069254ae42723e6d2", "patch": "@@ -496,8 +496,8 @@ enum NeverLoopResult {\n     Otherwise,\n }\n \n-fn absorb_break(arg: NeverLoopResult) -> NeverLoopResult {\n-    match arg {\n+fn absorb_break(arg: &NeverLoopResult) -> NeverLoopResult {\n+    match *arg {\n         NeverLoopResult::AlwaysBreak |\n         NeverLoopResult::Otherwise => NeverLoopResult::Otherwise,\n         NeverLoopResult::MayContinueMainLoop => NeverLoopResult::MayContinueMainLoop,\n@@ -580,18 +580,22 @@ fn never_loop_expr(expr: &Expr, main_loop_id: &NodeId) -> NeverLoopResult {\n         ExprIf(ref e, ref e2, ref e3) => {\n             let e1 = never_loop_expr(e, main_loop_id);\n             let e2 = never_loop_expr(e2, main_loop_id);\n-            let e3 = e3.as_ref().map(|ref e| never_loop_expr(e, main_loop_id)).unwrap_or(NeverLoopResult::Otherwise);\n+            let e3 =\n+                match *e3 {\n+                    Some(ref e3) => never_loop_expr(e3, main_loop_id),\n+                    None => NeverLoopResult::Otherwise,\n+                };\n             combine_seq(e1, combine_branches(e2, e3))\n         },\n         ExprLoop(ref b, _, _) => {\n             // Break can come from the inner loop so remove them.\n-            absorb_break(never_loop_block(b, main_loop_id))\n+            absorb_break(&never_loop_block(b, main_loop_id))\n         },\n         ExprWhile(ref e, ref b, _) => {\n             let e = never_loop_expr(e, main_loop_id);\n             let result = never_loop_block(b, main_loop_id);\n             // Break can come from the inner loop so remove them.\n-            combine_seq(e, absorb_break(result))\n+            combine_seq(e, absorb_break(&result))\n         },\n         ExprMatch(ref e, ref arms, _) => {\n             let e = never_loop_expr(e, main_loop_id);"}]}