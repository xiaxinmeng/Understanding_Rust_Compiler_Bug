{"sha": "0f49e8968d5544ac0b4af62a677f47d3968ccd08", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmNDllODk2OGQ1NTQ0YWMwYjRhZjYyYTY3N2Y0N2QzOTY4Y2NkMDg=", "commit": {"author": {"name": "Philipp Krones", "email": "9744647+flip1995@users.noreply.github.com", "date": "2018-07-19T12:57:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-07-19T12:57:28Z"}, "message": "Merge pull request #2936 from flip1995/useless_lint_attr\n\nFix useless_attribute lint for extern crate items with macro_use", "tree": {"sha": "34c0a0931b8160bb33b4da6fb1099ba222aa7835", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34c0a0931b8160bb33b4da6fb1099ba222aa7835"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f49e8968d5544ac0b4af62a677f47d3968ccd08", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbUIq4CRBK7hj4Ov3rIwAAdHIIAAnaSAZNnDhCooAvKwc62q13\niQRoxBSOM/qwUiY5Es61vz5KU6COuEjbUBBIkMwyA2xURSF7zF9p+MQMqdo8o4kq\nEXrvJF0zTqXWdkBNJH6UeZIbMJDinBBFg9m5mcl0AcG7G5zY4FBC923xM3g+yCZG\nFSEZVej50IAgaywQXJ9mYkH8NSX54+zmVXoV070nqgXznyjmFoDofAvBtwIdrztP\nNfm1O7UPN6ReeUTnsFGhRBPyfIjeugpVkpVZPuZIB2UCTzU06N64SEdAl4lxhiv5\nf72KMmbj7eWAoWQ8a7z3vkrYRWhbvzqZskNzBq8Z6LkRpAXDITZDNK71SIIezd4=\n=vkif\n-----END PGP SIGNATURE-----\n", "payload": "tree 34c0a0931b8160bb33b4da6fb1099ba222aa7835\nparent 7877730115de102c80469bc0c8829598e8a65f61\nparent ac77a26b8a03582d072989b6af7889902bd7428a\nauthor Philipp Krones <9744647+flip1995@users.noreply.github.com> 1532005048 +0200\ncommitter GitHub <noreply@github.com> 1532005048 +0200\n\nMerge pull request #2936 from flip1995/useless_lint_attr\n\nFix useless_attribute lint for extern crate items with macro_use"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f49e8968d5544ac0b4af62a677f47d3968ccd08", "html_url": "https://github.com/rust-lang/rust/commit/0f49e8968d5544ac0b4af62a677f47d3968ccd08", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f49e8968d5544ac0b4af62a677f47d3968ccd08/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7877730115de102c80469bc0c8829598e8a65f61", "url": "https://api.github.com/repos/rust-lang/rust/commits/7877730115de102c80469bc0c8829598e8a65f61", "html_url": "https://github.com/rust-lang/rust/commit/7877730115de102c80469bc0c8829598e8a65f61"}, {"sha": "ac77a26b8a03582d072989b6af7889902bd7428a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac77a26b8a03582d072989b6af7889902bd7428a", "html_url": "https://github.com/rust-lang/rust/commit/ac77a26b8a03582d072989b6af7889902bd7428a"}], "stats": {"total": 46, "additions": 33, "deletions": 13}, "files": [{"sha": "367968cfe656f68c98fee55c11ed03b3fc95f8ea", "filename": "clippy_lints/src/attrs.rs", "status": "modified", "additions": 31, "deletions": 13, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/0f49e8968d5544ac0b4af62a677f47d3968ccd08/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f49e8968d5544ac0b4af62a677f47d3968ccd08/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=0f49e8968d5544ac0b4af62a677f47d3968ccd08", "patch": "@@ -39,22 +39,31 @@ declare_clippy_lint! {\n }\n \n /// **What it does:** Checks for `extern crate` and `use` items annotated with\n-/// lint attributes\n+/// lint attributes.\n+///\n+/// This lint whitelists `#[allow(unused_imports)]` and `#[allow(deprecated)]` on\n+/// `use` items and `#[allow(unused_imports)]` on `extern crate` items with a\n+/// `#[macro_use]` attribute.\n ///\n /// **Why is this bad?** Lint attributes have no effect on crate imports. Most\n-/// likely a `!` was\n-/// forgotten\n+/// likely a `!` was forgotten.\n ///\n-/// **Known problems:** Technically one might allow `unused_import` on a `use`\n-/// item,\n-/// but it's easier to remove the unused item.\n+/// **Known problems:** None.\n ///\n /// **Example:**\n /// ```rust\n+/// // Bad\n /// #[deny(dead_code)]\n /// extern crate foo;\n-/// #[allow(unused_import)]\n+/// #[forbid(dead_code)]\n /// use foo::bar;\n+///\n+/// // Ok\n+/// #[allow(unused_imports)]\n+/// use foo::baz;\n+/// #[allow(unused_imports)]\n+/// #[macro_use]\n+/// extern crate baz;\n /// ```\n declare_clippy_lint! {\n     pub USELESS_ATTRIBUTE,\n@@ -154,17 +163,26 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for AttrPass {\n             check_attrs(cx, item.span, item.name, &item.attrs)\n         }\n         match item.node {\n-            ItemKind::ExternCrate(_) | ItemKind::Use(_, _) => {\n+            ItemKind::ExternCrate(..) | ItemKind::Use(..) => {\n+                let skip_unused_imports = item.attrs.iter().any(|attr| attr.name() == \"macro_use\");\n+\n                 for attr in &item.attrs {\n                     if let Some(ref lint_list) = attr.meta_item_list() {\n                         match &*attr.name().as_str() {\n                             \"allow\" | \"warn\" | \"deny\" | \"forbid\" => {\n-                                // whitelist `unused_imports` and `deprecated`\n+                                // whitelist `unused_imports` and `deprecated` for `use` items\n+                                // and `unused_imports` for `extern crate` items with `macro_use`\n                                 for lint in lint_list {\n-                                    if is_word(lint, \"unused_imports\") || is_word(lint, \"deprecated\") {\n-                                        if let ItemKind::Use(_, _) = item.node {\n-                                            return;\n-                                        }\n+                                    match item.node {\n+                                        ItemKind::Use(..) => if is_word(lint, \"unused_imports\")\n+                                                                || is_word(lint, \"deprecated\") {\n+                                                return\n+                                        },\n+                                        ItemKind::ExternCrate(..) => if is_word(lint, \"unused_imports\")\n+                                                                        && skip_unused_imports {\n+                                                return\n+                                        },\n+                                        _ => {},\n                                     }\n                                 }\n                                 let line_span = last_line_of_span(cx, attr.span);"}, {"sha": "68c7d2007a6b65bf258cf716a1e693ef365937d2", "filename": "tests/ui/useless_attribute.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f49e8968d5544ac0b4af62a677f47d3968ccd08/tests%2Fui%2Fuseless_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f49e8968d5544ac0b4af62a677f47d3968ccd08/tests%2Fui%2Fuseless_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuseless_attribute.rs?ref=0f49e8968d5544ac0b4af62a677f47d3968ccd08", "patch": "@@ -6,6 +6,8 @@\n #[cfg_attr(feature = \"cargo-clippy\", allow(dead_code, unused_extern_crates))]\n #[cfg_attr(feature = \"cargo-clippy\",\n            allow(dead_code, unused_extern_crates))]\n+#[allow(unused_imports)]\n+#[macro_use]\n extern crate clippy_lints;\n \n // don't lint on unused_import for `use` items"}]}