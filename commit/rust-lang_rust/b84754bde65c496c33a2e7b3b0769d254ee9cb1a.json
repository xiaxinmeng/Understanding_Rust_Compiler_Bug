{"sha": "b84754bde65c496c33a2e7b3b0769d254ee9cb1a", "node_id": "C_kwDOAAsO6NoAKGI4NDc1NGJkZTY1YzQ5NmMzM2EyZTdiM2IwNzY5ZDI1NGVlOWNiMWE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-23T18:53:37Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-23T18:53:37Z"}, "message": "Auto merge of #2261 - RalfJung:fmt, r=oli-obk\n\nmake rustfmt mandatory and used pinned toolchain\n\nLooks like this is what most people prefer/expect, and using a pinned toolchain for formatting avoids some (rare and so far mostly hypothetical) formatting inconsistency issues.", "tree": {"sha": "857065c340f95152c145c99e6b8f9221aa27874e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/857065c340f95152c145c99e6b8f9221aa27874e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b84754bde65c496c33a2e7b3b0769d254ee9cb1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b84754bde65c496c33a2e7b3b0769d254ee9cb1a", "html_url": "https://github.com/rust-lang/rust/commit/b84754bde65c496c33a2e7b3b0769d254ee9cb1a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b84754bde65c496c33a2e7b3b0769d254ee9cb1a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c38e1e9d62b4f34eff4737086eefc7c93e38bd67", "url": "https://api.github.com/repos/rust-lang/rust/commits/c38e1e9d62b4f34eff4737086eefc7c93e38bd67", "html_url": "https://github.com/rust-lang/rust/commit/c38e1e9d62b4f34eff4737086eefc7c93e38bd67"}, {"sha": "e286090d7a66f0213aafdc90d5fbd856dd5c05b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/e286090d7a66f0213aafdc90d5fbd856dd5c05b5", "html_url": "https://github.com/rust-lang/rust/commit/e286090d7a66f0213aafdc90d5fbd856dd5c05b5"}], "stats": {"total": 43, "additions": 17, "deletions": 26}, "files": [{"sha": "85937a8e444587a1f9968cb219621e093560ab50", "filename": ".github/workflows/ci.yml", "status": "modified", "additions": 17, "deletions": 26, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/b84754bde65c496c33a2e7b3b0769d254ee9cb1a/.github%2Fworkflows%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/b84754bde65c496c33a2e7b3b0769d254ee9cb1a/.github%2Fworkflows%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yml?ref=b84754bde65c496c33a2e7b3b0769d254ee9cb1a", "patch": "@@ -86,42 +86,33 @@ jobs:\n       - name: Test\n         run: bash ./ci.sh\n \n-  clippy:\n-    name: clippy + rustdoc\n+  style:\n+    name: style checks\n     runs-on: ubuntu-latest\n     steps:\n       - uses: actions/checkout@v3\n       - name: Install required toolchain\n         # We need a toolchain that can actually build Miri, just a nightly won't do.\n         run: |\n           cargo install rustup-toolchain-install-master # TODO: cache this?\n-          ./rustup-toolchain \"\" -c clippy\n-      - name: Clippy (miri)\n+          ./rustup-toolchain \"\" -c clippy -c rustfmt\n+      - name: rustfmt (miri, ui_test)\n+        run: cargo fmt --all --check\n+      - name: rustfmt (everything else)\n+        # TODO: Add `tests` (work in progress).\n+        # Maybe change to `find . -name '*.rs'`, superseding the previous step.\n+        run: |\n+          find bench-cargo-miri benches cargo-miri test-cargo-miri -name '*.rs' \\\n+            | xargs rustfmt --edition=2021 --config-path ./rustfmt.toml --check\n+      - name: clippy (miri)\n         run: cargo clippy --all-targets -- -D warnings\n       #- name: Clippy (ui_test)\n       #  run: cargo clippy --manifest-path ui_test/Cargo.toml --all-targets -- -D warnings\n-      - name: Clippy (cargo-miri)\n+      - name: clippy (cargo-miri)\n         run: cargo clippy --manifest-path cargo-miri/Cargo.toml --all-targets -- -D warnings\n-      - name: Rustdoc\n+      - name: rustdoc\n         run: RUSTDOCFLAGS=\"-Dwarnings\" cargo doc --document-private-items\n \n-  fmt:\n-    name: formatting (ignored by bors)\n-    runs-on: ubuntu-latest\n-    steps:\n-      - uses: actions/checkout@v3\n-      - name: Install latest nightly\n-        run: |\n-          rustup toolchain install nightly --component rustfmt\n-          rustup override set nightly\n-      - name: Formatting (miri, ui_test)\n-        run: cargo fmt --all --check\n-      - name: Formatting (everything else)\n-        # TODO: Add `tests` (work in progress).\n-        # Maybe change to `find . -name '*.rs'`, superseding the previous step.\n-        run: find bench-cargo-miri benches cargo-miri test-cargo-miri -name '*.rs'\n-          | xargs rustfmt --edition=2021 --config-path ./rustfmt.toml --check\n-\n   # These jobs doesn't actually test anything, but they're only used to tell\n   # bors the build completed, as there is no practical way to detect when a\n   # workflow is successful listening to webhooks only.\n@@ -131,15 +122,15 @@ jobs:\n   end-success:\n     name: bors build finished\n     runs-on: ubuntu-latest\n-    needs: [build, clippy]\n+    needs: [build, style]\n     if: github.event.pusher.name == 'bors' && success()\n     steps:\n       - name: mark the job as a success\n         run: exit 0\n   end-failure:\n     name: bors build finished\n     runs-on: ubuntu-latest\n-    needs: [build, clippy]\n+    needs: [build, style]\n     if: github.event.pusher.name == 'bors' && (failure() || cancelled())\n     steps:\n       - name: mark the job as a failure\n@@ -149,7 +140,7 @@ jobs:\n   cron-fail-notify:\n     name: cronjob failure notification\n     runs-on: ubuntu-latest\n-    needs: [build, clippy]\n+    needs: [build, style]\n     if: github.event_name == 'schedule' && (failure() || cancelled())\n     steps:\n       - name: Install zulip-send"}]}