{"sha": "6b5ca8b1aa325e416a5818b40091e96fe00abbde", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiNWNhOGIxYWEzMjVlNDE2YTU4MThiNDAwOTFlOTZmZTAwYWJiZGU=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2014-03-25T17:37:18Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2014-03-26T16:54:49Z"}, "message": "Fix #13140: Early/Late Bound related ICEs.\n\nThe problem was that we need to apply the substitution, so that the\nformal lifetime parameters get replaced with (unifiable)\nfree-lifetimes that can actually be fed into the constraint solver.\n\nAlso, refactor code os that substitution for `check_item` and\n`check_method`, moving both down the control flow into `check_bare_fn`.\n\n----\n\nFinally, there was another (similar) spot where we needed to\nsubstitute early-bound lifetimes when invoking an object method of a\ntrait.", "tree": {"sha": "2b0bed3181429d4b50dd37ac7674b7889945c9ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b0bed3181429d4b50dd37ac7674b7889945c9ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b5ca8b1aa325e416a5818b40091e96fe00abbde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b5ca8b1aa325e416a5818b40091e96fe00abbde", "html_url": "https://github.com/rust-lang/rust/commit/6b5ca8b1aa325e416a5818b40091e96fe00abbde", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b5ca8b1aa325e416a5818b40091e96fe00abbde/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0908ffa660667f90186f79e70fd13d68e99836bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/0908ffa660667f90186f79e70fd13d68e99836bf", "html_url": "https://github.com/rust-lang/rust/commit/0908ffa660667f90186f79e70fd13d68e99836bf"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "73cecf776027fb80ca77d42eb37016d7fb4f8d95", "filename": "src/librustc/middle/typeck/check/method.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6b5ca8b1aa325e416a5818b40091e96fe00abbde/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b5ca8b1aa325e416a5818b40091e96fe00abbde/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs?ref=6b5ca8b1aa325e416a5818b40091e96fe00abbde", "patch": "@@ -263,6 +263,7 @@ fn construct_transformed_self_ty_for_object(\n             let transformed_self_ty = *method_ty.fty.sig.inputs.get(0);\n             match ty::get(transformed_self_ty).sty {\n                 ty::ty_rptr(r, mt) => { // must be SelfRegion\n+                    let r = r.subst(tcx, &substs); // handle Early-Bound lifetime\n                     ty::mk_trait(tcx, trait_def_id, substs,\n                                  RegionTraitStore(r), mt.mutbl,\n                                  ty::EmptyBuiltinBounds())"}, {"sha": "3f1d3e29c54f95a1d5830eaa2c69a3f8da6a2f74", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6b5ca8b1aa325e416a5818b40091e96fe00abbde/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b5ca8b1aa325e416a5818b40091e96fe00abbde/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=6b5ca8b1aa325e416a5818b40091e96fe00abbde", "patch": "@@ -329,6 +329,10 @@ fn check_bare_fn(ccx: &CrateCtxt,\n                  id: ast::NodeId,\n                  fty: ty::t,\n                  param_env: ty::ParameterEnvironment) {\n+    // Compute the fty from point of view of inside fn\n+    // (replace any type-scheme with a type)\n+    let fty = fty.subst(ccx.tcx, &param_env.free_substs);\n+\n     match ty::get(fty).sty {\n         ty::ty_bare_fn(ref fn_ty) => {\n             let inh = Inherited::new(ccx.tcx, param_env);\n@@ -678,9 +682,7 @@ fn check_method_body(ccx: &CrateCtxt,\n             method_generics.region_param_defs(),\n             method.body.id);\n \n-    // Compute the fty from point of view of inside fn\n     let fty = ty::node_id_to_type(ccx.tcx, method.id);\n-    let fty = fty.subst(ccx.tcx, &param_env.free_substs);\n \n     check_bare_fn(ccx, method.decl, method.body, method.id, fty, param_env);\n }"}]}