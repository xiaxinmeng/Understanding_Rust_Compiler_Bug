{"sha": "944ccf60758305a1b15224defe622cfca6939aaa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0NGNjZjYwNzU4MzA1YTFiMTUyMjRkZWZlNjIyY2ZjYTY5MzlhYWE=", "commit": {"author": {"name": "Igor Aleksanov", "email": "popzxc@yandex.ru", "date": "2020-11-01T09:59:43Z"}, "committer": {"name": "Igor Aleksanov", "email": "popzxc@yandex.ru", "date": "2020-11-03T07:16:35Z"}, "message": "Add ConstRender", "tree": {"sha": "d300280524b06d66d96d04df6bc882293c788707", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d300280524b06d66d96d04df6bc882293c788707"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/944ccf60758305a1b15224defe622cfca6939aaa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/944ccf60758305a1b15224defe622cfca6939aaa", "html_url": "https://github.com/rust-lang/rust/commit/944ccf60758305a1b15224defe622cfca6939aaa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/944ccf60758305a1b15224defe622cfca6939aaa/comments", "author": {"login": "popzxc", "id": 12111581, "node_id": "MDQ6VXNlcjEyMTExNTgx", "avatar_url": "https://avatars.githubusercontent.com/u/12111581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popzxc", "html_url": "https://github.com/popzxc", "followers_url": "https://api.github.com/users/popzxc/followers", "following_url": "https://api.github.com/users/popzxc/following{/other_user}", "gists_url": "https://api.github.com/users/popzxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/popzxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popzxc/subscriptions", "organizations_url": "https://api.github.com/users/popzxc/orgs", "repos_url": "https://api.github.com/users/popzxc/repos", "events_url": "https://api.github.com/users/popzxc/events{/privacy}", "received_events_url": "https://api.github.com/users/popzxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "popzxc", "id": 12111581, "node_id": "MDQ6VXNlcjEyMTExNTgx", "avatar_url": "https://avatars.githubusercontent.com/u/12111581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popzxc", "html_url": "https://github.com/popzxc", "followers_url": "https://api.github.com/users/popzxc/followers", "following_url": "https://api.github.com/users/popzxc/following{/other_user}", "gists_url": "https://api.github.com/users/popzxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/popzxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popzxc/subscriptions", "organizations_url": "https://api.github.com/users/popzxc/orgs", "repos_url": "https://api.github.com/users/popzxc/repos", "events_url": "https://api.github.com/users/popzxc/events{/privacy}", "received_events_url": "https://api.github.com/users/popzxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc8a1cd8006b021541ff673ec7f37a0f4b7bef57", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc8a1cd8006b021541ff673ec7f37a0f4b7bef57", "html_url": "https://github.com/rust-lang/rust/commit/fc8a1cd8006b021541ff673ec7f37a0f4b7bef57"}], "stats": {"total": 93, "additions": 65, "deletions": 28}, "files": [{"sha": "d8dc1b1c36139bf8b5041f5cbe56b4dedd21a3c6", "filename": "crates/completion/src/completions.rs", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/944ccf60758305a1b15224defe622cfca6939aaa/crates%2Fcompletion%2Fsrc%2Fcompletions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/944ccf60758305a1b15224defe622cfca6939aaa/crates%2Fcompletion%2Fsrc%2Fcompletions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Fcompletions.rs?ref=944ccf60758305a1b15224defe622cfca6939aaa", "patch": "@@ -20,7 +20,7 @@ use test_utils::mark;\n \n use crate::{\n     item::Builder,\n-    render::{EnumVariantRender, FunctionRender, MacroRender},\n+    render::{ConstRender, EnumVariantRender, FunctionRender, MacroRender},\n     CompletionContext, CompletionItem, CompletionItemKind, CompletionKind, CompletionScore,\n     RootDatabase,\n };\n@@ -194,7 +194,6 @@ impl Completions {\n             Some(it) => it,\n             None => return,\n         };\n-\n         if let Some(item) = MacroRender::new(ctx.into(), name, macro_).render() {\n             self.add(item);\n         }\n@@ -207,24 +206,13 @@ impl Completions {\n         local_name: Option<String>,\n     ) {\n         let item = FunctionRender::new(ctx.into(), local_name, func).render();\n-\n         self.add(item)\n     }\n \n     pub(crate) fn add_const(&mut self, ctx: &CompletionContext, constant: hir::Const) {\n-        let ast_node = constant.source(ctx.db).value;\n-        let name = match ast_node.name() {\n-            Some(name) => name,\n-            _ => return,\n-        };\n-        let detail = const_label(&ast_node);\n-\n-        CompletionItem::new(CompletionKind::Reference, ctx.source_range(), name.text().to_string())\n-            .kind(CompletionItemKind::Const)\n-            .set_documentation(constant.docs(ctx.db))\n-            .set_deprecated(is_deprecated(constant, ctx.db))\n-            .detail(detail)\n-            .add_to(self);\n+        if let Some(item) = ConstRender::new(ctx.into(), constant).render() {\n+            self.add(item);\n+        }\n     }\n \n     pub(crate) fn add_type_alias(&mut self, ctx: &CompletionContext, type_alias: hir::TypeAlias) {"}, {"sha": "c614a7172617bf5a18c86e17b5e1e7c694526f87", "filename": "crates/completion/src/render.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/944ccf60758305a1b15224defe622cfca6939aaa/crates%2Fcompletion%2Fsrc%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/944ccf60758305a1b15224defe622cfca6939aaa/crates%2Fcompletion%2Fsrc%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Frender.rs?ref=944ccf60758305a1b15224defe622cfca6939aaa", "patch": "@@ -5,15 +5,17 @@ mod macro_;\n mod function;\n mod builder_ext;\n mod enum_variant;\n+mod const_;\n \n-use hir::HasAttrs;\n+use hir::{Documentation, HasAttrs};\n use ide_db::RootDatabase;\n use syntax::TextRange;\n \n use crate::{config::SnippetCap, CompletionContext};\n \n pub(crate) use crate::render::{\n-    enum_variant::EnumVariantRender, function::FunctionRender, macro_::MacroRender,\n+    const_::ConstRender, enum_variant::EnumVariantRender, function::FunctionRender,\n+    macro_::MacroRender,\n };\n \n #[derive(Debug)]\n@@ -41,6 +43,10 @@ impl<'a> RenderContext<'a> {\n     pub fn is_deprecated(&self, node: impl HasAttrs) -> bool {\n         node.attrs(self.db()).by_key(\"deprecated\").exists()\n     }\n+\n+    pub fn docs(&self, node: impl HasAttrs) -> Option<Documentation> {\n+        node.docs(self.db())\n+    }\n }\n \n impl<'a> From<&'a CompletionContext<'a>> for RenderContext<'a> {"}, {"sha": "d88bfa07f6175a439477fbc9bb4efcb169b649dd", "filename": "crates/completion/src/render/const_.rs", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/944ccf60758305a1b15224defe622cfca6939aaa/crates%2Fcompletion%2Fsrc%2Frender%2Fconst_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/944ccf60758305a1b15224defe622cfca6939aaa/crates%2Fcompletion%2Fsrc%2Frender%2Fconst_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Frender%2Fconst_.rs?ref=944ccf60758305a1b15224defe622cfca6939aaa", "patch": "@@ -0,0 +1,47 @@\n+use hir::HasSource;\n+use syntax::{\n+    ast::{Const, NameOwner},\n+    display::const_label,\n+};\n+\n+use crate::{\n+    item::{CompletionItem, CompletionItemKind, CompletionKind},\n+    render::RenderContext,\n+};\n+\n+#[derive(Debug)]\n+pub(crate) struct ConstRender<'a> {\n+    ctx: RenderContext<'a>,\n+    const_: hir::Const,\n+    ast_node: Const,\n+}\n+\n+impl<'a> ConstRender<'a> {\n+    pub(crate) fn new(ctx: RenderContext<'a>, const_: hir::Const) -> ConstRender<'a> {\n+        let ast_node = const_.source(ctx.db()).value;\n+        ConstRender { ctx, const_, ast_node }\n+    }\n+\n+    pub(crate) fn render(self) -> Option<CompletionItem> {\n+        let name = self.name()?;\n+        let detail = self.detail();\n+\n+        let item = CompletionItem::new(CompletionKind::Reference, self.ctx.source_range(), name)\n+            .kind(CompletionItemKind::Const)\n+            .set_documentation(self.ctx.docs(self.const_))\n+            .set_deprecated(self.ctx.is_deprecated(self.const_))\n+            .detail(detail)\n+            .build();\n+\n+        Some(item)\n+    }\n+\n+    fn name(&self) -> Option<String> {\n+        let ast_node = self.const_.source(self.ctx.db()).value;\n+        ast_node.name().map(|name| name.text().to_string())\n+    }\n+\n+    fn detail(&self) -> String {\n+        const_label(&self.ast_node)\n+    }\n+}"}, {"sha": "d220812361d0272e5491895fdc114d67f80be86a", "filename": "crates/completion/src/render/function.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/944ccf60758305a1b15224defe622cfca6939aaa/crates%2Fcompletion%2Fsrc%2Frender%2Ffunction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/944ccf60758305a1b15224defe622cfca6939aaa/crates%2Fcompletion%2Fsrc%2Frender%2Ffunction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Frender%2Ffunction.rs?ref=944ccf60758305a1b15224defe622cfca6939aaa", "patch": "@@ -1,4 +1,4 @@\n-use hir::{Documentation, HasAttrs, HasSource, Type};\n+use hir::{HasSource, Type};\n use syntax::{ast::Fn, display::function_declaration};\n \n use crate::{\n@@ -30,7 +30,7 @@ impl<'a> FunctionRender<'a> {\n         let params = self.params();\n         CompletionItem::new(CompletionKind::Reference, self.ctx.source_range(), self.name.clone())\n             .kind(self.kind())\n-            .set_documentation(self.docs())\n+            .set_documentation(self.ctx.docs(self.fn_))\n             .set_deprecated(self.ctx.is_deprecated(self.fn_))\n             .detail(self.detail())\n             .add_call_parens(self.ctx.completion, self.name, params)\n@@ -45,8 +45,8 @@ impl<'a> FunctionRender<'a> {\n         if let Some(derefed_ty) = ty.remove_ref() {\n             for (name, local) in self.ctx.completion.locals.iter() {\n                 if name == arg && local.ty(self.ctx.db()) == derefed_ty {\n-                    return (if ty.is_mutable_reference() { \"&mut \" } else { \"&\" }).to_string()\n-                        + &arg.to_string();\n+                    let mutability = if ty.is_mutable_reference() { \"&mut \" } else { \"&\" };\n+                    return format!(\"{}{}\", mutability, arg);\n                 }\n             }\n         }\n@@ -80,8 +80,4 @@ impl<'a> FunctionRender<'a> {\n             CompletionItemKind::Function\n         }\n     }\n-\n-    fn docs(&self) -> Option<Documentation> {\n-        self.fn_.docs(self.ctx.db())\n-    }\n }"}, {"sha": "0ad8c03b342a54b82573ed9d9475890434508ece", "filename": "crates/completion/src/render/macro_.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/944ccf60758305a1b15224defe622cfca6939aaa/crates%2Fcompletion%2Fsrc%2Frender%2Fmacro_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/944ccf60758305a1b15224defe622cfca6939aaa/crates%2Fcompletion%2Fsrc%2Frender%2Fmacro_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Frender%2Fmacro_.rs?ref=944ccf60758305a1b15224defe622cfca6939aaa", "patch": "@@ -1,4 +1,4 @@\n-use hir::{Documentation, HasAttrs, HasSource};\n+use hir::{Documentation, HasSource};\n use syntax::display::macro_label;\n use test_utils::mark;\n \n@@ -23,7 +23,7 @@ impl<'a> MacroRender<'a> {\n         name: String,\n         macro_: hir::MacroDef,\n     ) -> MacroRender<'a> {\n-        let docs = macro_.docs(ctx.db());\n+        let docs = ctx.docs(macro_);\n         let docs_str = docs.as_ref().map_or(\"\", |s| s.as_str());\n         let (bra, ket) = guess_macro_braces(&name, docs_str);\n "}]}