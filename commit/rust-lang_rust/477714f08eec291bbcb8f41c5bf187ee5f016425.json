{"sha": "477714f08eec291bbcb8f41c5bf187ee5f016425", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3NzcxNGYwOGVlYzI5MWJiY2I4ZjQxYzViZjE4N2VlNWYwMTY0MjU=", "commit": {"author": {"name": "Kevin Atkinson", "email": "kevina@cs.utah.edu", "date": "2012-01-27T01:10:33Z"}, "committer": {"name": "Kevin Atkinson", "email": "kevina@cs.utah.edu", "date": "2012-02-04T03:28:12Z"}, "message": "Implement \"replace\" function.", "tree": {"sha": "91c1ba8fd0c51a2e186257f61d509edadbd7982e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91c1ba8fd0c51a2e186257f61d509edadbd7982e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/477714f08eec291bbcb8f41c5bf187ee5f016425", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/477714f08eec291bbcb8f41c5bf187ee5f016425", "html_url": "https://github.com/rust-lang/rust/commit/477714f08eec291bbcb8f41c5bf187ee5f016425", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/477714f08eec291bbcb8f41c5bf187ee5f016425/comments", "author": {"login": "kevina", "id": 1271492, "node_id": "MDQ6VXNlcjEyNzE0OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1271492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevina", "html_url": "https://github.com/kevina", "followers_url": "https://api.github.com/users/kevina/followers", "following_url": "https://api.github.com/users/kevina/following{/other_user}", "gists_url": "https://api.github.com/users/kevina/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevina/subscriptions", "organizations_url": "https://api.github.com/users/kevina/orgs", "repos_url": "https://api.github.com/users/kevina/repos", "events_url": "https://api.github.com/users/kevina/events{/privacy}", "received_events_url": "https://api.github.com/users/kevina/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kevina", "id": 1271492, "node_id": "MDQ6VXNlcjEyNzE0OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1271492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevina", "html_url": "https://github.com/kevina", "followers_url": "https://api.github.com/users/kevina/followers", "following_url": "https://api.github.com/users/kevina/following{/other_user}", "gists_url": "https://api.github.com/users/kevina/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevina/subscriptions", "organizations_url": "https://api.github.com/users/kevina/orgs", "repos_url": "https://api.github.com/users/kevina/repos", "events_url": "https://api.github.com/users/kevina/events{/privacy}", "received_events_url": "https://api.github.com/users/kevina/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "485e489ba2cb025bb84606396b1cea3023c8c99c", "url": "https://api.github.com/repos/rust-lang/rust/commits/485e489ba2cb025bb84606396b1cea3023c8c99c", "html_url": "https://github.com/rust-lang/rust/commit/485e489ba2cb025bb84606396b1cea3023c8c99c"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "90501870e731f9d5ede2e155e4bbb52eec50c698", "filename": "src/comp/syntax/ext/qquote.rs", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/477714f08eec291bbcb8f41c5bf187ee5f016425/src%2Fcomp%2Fsyntax%2Fext%2Fqquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/477714f08eec291bbcb8f41c5bf187ee5f016425/src%2Fcomp%2Fsyntax%2Fext%2Fqquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fext%2Fqquote.rs?ref=477714f08eec291bbcb8f41c5bf187ee5f016425", "patch": "@@ -2,7 +2,7 @@ import driver::session;\n \n import option::{none, some};\n \n-import syntax::ast::{crate, expr_, expr_mac, mac_invoc, mac_qq};\n+import syntax::ast::{crate, expr_, expr_mac, mac_invoc, mac_qq, mac_var};\n import syntax::fold::*;\n import syntax::ext::base::*;\n import syntax::ext::build::*;\n@@ -29,6 +29,28 @@ fn expand_qquote(cx: ext_ctxt, sp: span, _e: @ast::expr) -> ast::expr_ {\n     ret call.node;\n }\n \n+fn replace(e: @ast::expr, repls: [@ast::expr]) -> @ast::expr {\n+    let aft = default_ast_fold();\n+    let f_pre = {fold_expr: bind replace_expr(repls, _, _, _,\n+                                              aft.fold_expr)\n+                 with *aft};\n+    let f = make_fold(f_pre);\n+    ret f.fold_expr(e);\n+}\n+\n+fn replace_expr(repls: [@ast::expr],\n+                e: ast::expr_, s: span, fld: ast_fold,\n+                orig: fn@(ast::expr_, span, ast_fold)->(ast::expr_, span))\n+    -> (ast::expr_, span)\n+{\n+    // note: nested enum matching will be really nice here so I can jusy say\n+    //       expr_mac(mac_var(i))\n+    alt e {\n+      expr_mac({node: mac_var(i), _}) {let r = repls[i]; (r.node, r.span)}\n+      _ {orig(e,s,fld)}\n+    }\n+}\n+\n // Local Variables:\n // mode: rust\n // fill-column: 78;"}]}