{"sha": "b6826e924616ca60dceb29a6f491b8905d5f95b4", "node_id": "C_kwDOAAsO6NoAKGI2ODI2ZTkyNDYxNmNhNjBkY2ViMjlhNmY0OTFiODkwNWQ1Zjk1YjQ", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-01-08T10:34:58Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-01-08T10:34:58Z"}, "message": "Only add generics with the correct file id to DynMap", "tree": {"sha": "05ac884bda5b37da2da642ec9a831d0700276640", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05ac884bda5b37da2da642ec9a831d0700276640"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6826e924616ca60dceb29a6f491b8905d5f95b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6826e924616ca60dceb29a6f491b8905d5f95b4", "html_url": "https://github.com/rust-lang/rust/commit/b6826e924616ca60dceb29a6f491b8905d5f95b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6826e924616ca60dceb29a6f491b8905d5f95b4/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d4f40e8815970d549ba31a47c3c5660e624d37f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d4f40e8815970d549ba31a47c3c5660e624d37f", "html_url": "https://github.com/rust-lang/rust/commit/8d4f40e8815970d549ba31a47c3c5660e624d37f"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "6261295e788bc78af64a2cf96a7d40b4e951852d", "filename": "crates/hir_def/src/generics.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b6826e924616ca60dceb29a6f491b8905d5f95b4/crates%2Fhir_def%2Fsrc%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6826e924616ca60dceb29a6f491b8905d5f95b4/crates%2Fhir_def%2Fsrc%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fgenerics.rs?ref=b6826e924616ca60dceb29a6f491b8905d5f95b4", "patch": "@@ -454,14 +454,17 @@ impl HasChildSource<LocalConstParamId> for GenericDefId {\n }\n \n impl ChildBySource for GenericDefId {\n-    fn child_by_source_to(&self, db: &dyn DefDatabase, res: &mut DynMap, _: HirFileId) {\n+    fn child_by_source_to(&self, db: &dyn DefDatabase, res: &mut DynMap, file_id: HirFileId) {\n+        let (gfile_id, generic_params_list) = file_id_and_params_of(*self, db);\n+        if gfile_id != file_id {\n+            return;\n+        }\n+\n         let generic_params = db.generic_params(*self);\n         let mut types_idx_iter = generic_params.types.iter().map(|(idx, _)| idx);\n         let lts_idx_iter = generic_params.lifetimes.iter().map(|(idx, _)| idx);\n         let consts_idx_iter = generic_params.consts.iter().map(|(idx, _)| idx);\n \n-        let (file_id, generic_params_list) = file_id_and_params_of(*self, db);\n-\n         // For traits the first type index is `Self`, skip it.\n         if let GenericDefId::TraitId(_) = *self {\n             types_idx_iter.next().unwrap(); // advance_by(1);\n@@ -470,15 +473,15 @@ impl ChildBySource for GenericDefId {\n         if let Some(generic_params_list) = generic_params_list {\n             for (local_id, ast_param) in types_idx_iter.zip(generic_params_list.type_params()) {\n                 let id = TypeParamId { parent: *self, local_id };\n-                res[keys::TYPE_PARAM].insert(InFile::new(file_id, ast_param), id);\n+                res[keys::TYPE_PARAM].insert(InFile::new(gfile_id, ast_param), id);\n             }\n             for (local_id, ast_param) in lts_idx_iter.zip(generic_params_list.lifetime_params()) {\n                 let id = LifetimeParamId { parent: *self, local_id };\n-                res[keys::LIFETIME_PARAM].insert(InFile::new(file_id, ast_param), id);\n+                res[keys::LIFETIME_PARAM].insert(InFile::new(gfile_id, ast_param), id);\n             }\n             for (local_id, ast_param) in consts_idx_iter.zip(generic_params_list.const_params()) {\n                 let id = ConstParamId { parent: *self, local_id };\n-                res[keys::CONST_PARAM].insert(InFile::new(file_id, ast_param), id);\n+                res[keys::CONST_PARAM].insert(InFile::new(gfile_id, ast_param), id);\n             }\n         }\n     }"}]}