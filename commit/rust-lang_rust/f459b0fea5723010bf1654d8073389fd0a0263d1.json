{"sha": "f459b0fea5723010bf1654d8073389fd0a0263d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0NTliMGZlYTU3MjMwMTBiZjE2NTRkODA3MzM4OWZkMGEwMjYzZDE=", "commit": {"author": {"name": "Yenlin Chen", "email": "3822365+hencrice@users.noreply.github.com", "date": "2020-12-23T18:55:37Z"}, "committer": {"name": "Yenlin Chen", "email": "3822365+hencrice@users.noreply.github.com", "date": "2020-12-23T18:55:37Z"}, "message": "Addressed feedbacks\n\nAlso updated the mir-opt test output files.", "tree": {"sha": "477397b5424e4a2840f9704c8a443f137f9d494c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/477397b5424e4a2840f9704c8a443f137f9d494c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f459b0fea5723010bf1654d8073389fd0a0263d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f459b0fea5723010bf1654d8073389fd0a0263d1", "html_url": "https://github.com/rust-lang/rust/commit/f459b0fea5723010bf1654d8073389fd0a0263d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f459b0fea5723010bf1654d8073389fd0a0263d1/comments", "author": {"login": "hencrice", "id": 3822365, "node_id": "MDQ6VXNlcjM4MjIzNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/3822365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hencrice", "html_url": "https://github.com/hencrice", "followers_url": "https://api.github.com/users/hencrice/followers", "following_url": "https://api.github.com/users/hencrice/following{/other_user}", "gists_url": "https://api.github.com/users/hencrice/gists{/gist_id}", "starred_url": "https://api.github.com/users/hencrice/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hencrice/subscriptions", "organizations_url": "https://api.github.com/users/hencrice/orgs", "repos_url": "https://api.github.com/users/hencrice/repos", "events_url": "https://api.github.com/users/hencrice/events{/privacy}", "received_events_url": "https://api.github.com/users/hencrice/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hencrice", "id": 3822365, "node_id": "MDQ6VXNlcjM4MjIzNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/3822365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hencrice", "html_url": "https://github.com/hencrice", "followers_url": "https://api.github.com/users/hencrice/followers", "following_url": "https://api.github.com/users/hencrice/following{/other_user}", "gists_url": "https://api.github.com/users/hencrice/gists{/gist_id}", "starred_url": "https://api.github.com/users/hencrice/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hencrice/subscriptions", "organizations_url": "https://api.github.com/users/hencrice/orgs", "repos_url": "https://api.github.com/users/hencrice/repos", "events_url": "https://api.github.com/users/hencrice/events{/privacy}", "received_events_url": "https://api.github.com/users/hencrice/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b66eb696af9ef1952f2582b2b8ec07156868b2f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/b66eb696af9ef1952f2582b2b8ec07156868b2f6", "html_url": "https://github.com/rust-lang/rust/commit/b66eb696af9ef1952f2582b2b8ec07156868b2f6"}], "stats": {"total": 47, "additions": 3, "deletions": 44}, "files": [{"sha": "394eb8334223c3be2b06a3784b667c6ba2471bc7", "filename": "compiler/rustc_mir/src/util/pretty.rs", "status": "modified", "additions": 3, "deletions": 17, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f459b0fea5723010bf1654d8073389fd0a0263d1/compiler%2Frustc_mir%2Fsrc%2Futil%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f459b0fea5723010bf1654d8073389fd0a0263d1/compiler%2Frustc_mir%2Fsrc%2Futil%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Futil%2Fpretty.rs?ref=f459b0fea5723010bf1654d8073389fd0a0263d1", "patch": "@@ -17,7 +17,6 @@ use rustc_middle::mir::interpret::{\n };\n use rustc_middle::mir::visit::Visitor;\n use rustc_middle::mir::*;\n-use rustc_middle::ty::subst::GenericArgKind;\n use rustc_middle::ty::{self, TyCtxt, TyS, TypeFoldable, TypeVisitor};\n use rustc_target::abi::Size;\n use std::ops::ControlFlow;\n@@ -414,22 +413,9 @@ fn use_verbose(ty: &&TyS<'tcx>) -> bool {\n         ty::Int(_) | ty::Uint(_) | ty::Bool | ty::Char | ty::Float(_) => false,\n         // Unit type\n         ty::Tuple(g_args) if g_args.is_empty() => false,\n-        ty::Tuple(g_args) => {\n-            // could have used `try_fold` here but it seems a bit silly that\n-            // the accumulator is useless\n-            let mut should_be_verbose = false;\n-            for g_arg in g_args.iter() {\n-                if match g_arg.unpack() {\n-                    GenericArgKind::Type(ty) => use_verbose(&ty),\n-                    GenericArgKind::Const(ty::Const { ty, val: _ }) => use_verbose(ty),\n-                    _ => false,\n-                } {\n-                    should_be_verbose = true;\n-                    break;\n-                }\n-            }\n-            should_be_verbose\n-        }\n+        ty::Tuple(g_args) => g_args.iter().any(|g_arg| {\n+            use_verbose(&g_arg.expect_ty())\n+        }),\n         ty::Array(ty, _) => use_verbose(ty),\n         ty::FnDef(..) => false,\n         _ => true,"}, {"sha": "3397ef95856a5a0ad4fa47d41d120d2aec7d2274", "filename": "src/test/mir-opt/const_prop/checked_add.main.ConstProp.diff", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f459b0fea5723010bf1654d8073389fd0a0263d1/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fchecked_add.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/f459b0fea5723010bf1654d8073389fd0a0263d1/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fchecked_add.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fchecked_add.main.ConstProp.diff?ref=f459b0fea5723010bf1654d8073389fd0a0263d1", "patch": "@@ -14,9 +14,6 @@\n -         _2 = CheckedAdd(const 1_u32, const 1_u32); // scope 0 at $DIR/checked_add.rs:5:18: 5:23\n -         assert(!move (_2.1: bool), \"attempt to compute `{} + {}`, which would overflow\", const 1_u32, const 1_u32) -> bb1; // scope 0 at $DIR/checked_add.rs:5:18: 5:23\n +         _2 = const (2_u32, false);       // scope 0 at $DIR/checked_add.rs:5:18: 5:23\n-+                                          // ty::Const\n-+                                          // + ty: (u32, bool)\n-+                                          // + val: Value(ByRef { alloc: Allocation { bytes: [2, 0, 0, 0, 0, 0, 0, 0], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [31], len: Size { raw: 8 } }, size: Size { raw: 8 }, align: Align { pow2: 2 }, mutability: Not, extra: () }, offset: Size { raw: 0 } })\n +                                          // mir::Constant\n +                                          // + span: $DIR/checked_add.rs:5:18: 5:23\n +                                          // + literal: Const { ty: (u32, bool), val: Value(ByRef { alloc: Allocation { bytes: [2, 0, 0, 0, 0, 0, 0, 0], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [31], len: Size { raw: 8 } }, size: Size { raw: 8 }, align: Align { pow2: 2 }, mutability: Not, extra: () }, offset: Size { raw: 0 } }) }"}, {"sha": "9ddb34e58e5a685f58153146c348e64ba9975bf3", "filename": "src/test/mir-opt/const_prop/indirect.main.ConstProp.diff", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f459b0fea5723010bf1654d8073389fd0a0263d1/src%2Ftest%2Fmir-opt%2Fconst_prop%2Findirect.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/f459b0fea5723010bf1654d8073389fd0a0263d1/src%2Ftest%2Fmir-opt%2Fconst_prop%2Findirect.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Findirect.main.ConstProp.diff?ref=f459b0fea5723010bf1654d8073389fd0a0263d1", "patch": "@@ -18,9 +18,6 @@\n -         assert(!move (_3.1: bool), \"attempt to compute `{} + {}`, which would overflow\", move _2, const 1_u8) -> bb1; // scope 0 at $DIR/indirect.rs:5:13: 5:29\n +         _2 = const 2_u8;                 // scope 0 at $DIR/indirect.rs:5:13: 5:25\n +         _3 = const (3_u8, false);        // scope 0 at $DIR/indirect.rs:5:13: 5:29\n-+                                          // ty::Const\n-+                                          // + ty: (u8, bool)\n-+                                          // + val: Value(ByRef { alloc: Allocation { bytes: [3, 0], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [3], len: Size { raw: 2 } }, size: Size { raw: 2 }, align: Align { pow2: 0 }, mutability: Not, extra: () }, offset: Size { raw: 0 } })\n +                                          // mir::Constant\n +                                          // + span: $DIR/indirect.rs:5:13: 5:29\n +                                          // + literal: Const { ty: (u8, bool), val: Value(ByRef { alloc: Allocation { bytes: [3, 0], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [3], len: Size { raw: 2 } }, size: Size { raw: 2 }, align: Align { pow2: 0 }, mutability: Not, extra: () }, offset: Size { raw: 0 } }) }"}, {"sha": "da35bf18c7116e48974ab7d26cf1bacaa9f09375", "filename": "src/test/mir-opt/const_prop/issue_67019.main.ConstProp.diff", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f459b0fea5723010bf1654d8073389fd0a0263d1/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fissue_67019.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/f459b0fea5723010bf1654d8073389fd0a0263d1/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fissue_67019.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fissue_67019.main.ConstProp.diff?ref=f459b0fea5723010bf1654d8073389fd0a0263d1", "patch": "@@ -15,9 +15,6 @@\n           (_3.1: u8) = const 2_u8;         // scope 0 at $DIR/issue-67019.rs:11:11: 11:17\n -         (_2.0: (u8, u8)) = move _3;      // scope 0 at $DIR/issue-67019.rs:11:10: 11:19\n +         (_2.0: (u8, u8)) = const (1_u8, 2_u8); // scope 0 at $DIR/issue-67019.rs:11:10: 11:19\n-+                                          // ty::Const\n-+                                          // + ty: (u8, u8)\n-+                                          // + val: Value(ByRef { alloc: Allocation { bytes: [1, 2], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [3], len: Size { raw: 2 } }, size: Size { raw: 2 }, align: Align { pow2: 0 }, mutability: Not, extra: () }, offset: Size { raw: 0 } })\n +                                          // mir::Constant\n +                                          // + span: $DIR/issue-67019.rs:11:10: 11:19\n +                                          // + literal: Const { ty: (u8, u8), val: Value(ByRef { alloc: Allocation { bytes: [1, 2], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [3], len: Size { raw: 2 } }, size: Size { raw: 2 }, align: Align { pow2: 0 }, mutability: Not, extra: () }, offset: Size { raw: 0 } }) }"}, {"sha": "12b02e90345d9ff0266b24fd7c9320198988b6ed", "filename": "src/test/mir-opt/const_prop/mutable_variable_aggregate.main.ConstProp.diff", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f459b0fea5723010bf1654d8073389fd0a0263d1/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_aggregate.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/f459b0fea5723010bf1654d8073389fd0a0263d1/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_aggregate.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmutable_variable_aggregate.main.ConstProp.diff?ref=f459b0fea5723010bf1654d8073389fd0a0263d1", "patch": "@@ -20,9 +20,6 @@\n           StorageLive(_2);                 // scope 1 at $DIR/mutable_variable_aggregate.rs:7:9: 7:10\n -         _2 = _1;                         // scope 1 at $DIR/mutable_variable_aggregate.rs:7:13: 7:14\n +         _2 = const (42_i32, 99_i32);     // scope 1 at $DIR/mutable_variable_aggregate.rs:7:13: 7:14\n-+                                          // ty::Const\n-+                                          // + ty: (i32, i32)\n-+                                          // + val: Value(ByRef { alloc: Allocation { bytes: [42, 0, 0, 0, 99, 0, 0, 0], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [255], len: Size { raw: 8 } }, size: Size { raw: 8 }, align: Align { pow2: 2 }, mutability: Not, extra: () }, offset: Size { raw: 0 } })\n +                                          // mir::Constant\n +                                          // + span: $DIR/mutable_variable_aggregate.rs:7:13: 7:14\n +                                          // + literal: Const { ty: (i32, i32), val: Value(ByRef { alloc: Allocation { bytes: [42, 0, 0, 0, 99, 0, 0, 0], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [255], len: Size { raw: 8 } }, size: Size { raw: 8 }, align: Align { pow2: 2 }, mutability: Not, extra: () }, offset: Size { raw: 0 } }) }"}, {"sha": "a10bac4f3ea3b04bcb0e8ac2bf553f8a8d0a04ca", "filename": "src/test/mir-opt/const_prop/optimizes_into_variable.main.ConstProp.32bit.diff", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f459b0fea5723010bf1654d8073389fd0a0263d1/src%2Ftest%2Fmir-opt%2Fconst_prop%2Foptimizes_into_variable.main.ConstProp.32bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/f459b0fea5723010bf1654d8073389fd0a0263d1/src%2Ftest%2Fmir-opt%2Fconst_prop%2Foptimizes_into_variable.main.ConstProp.32bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Foptimizes_into_variable.main.ConstProp.32bit.diff?ref=f459b0fea5723010bf1654d8073389fd0a0263d1", "patch": "@@ -27,9 +27,6 @@\n -         _2 = CheckedAdd(const 2_i32, const 2_i32); // scope 0 at $DIR/optimizes_into_variable.rs:12:13: 12:18\n -         assert(!move (_2.1: bool), \"attempt to compute `{} + {}`, which would overflow\", const 2_i32, const 2_i32) -> bb1; // scope 0 at $DIR/optimizes_into_variable.rs:12:13: 12:18\n +         _2 = const (4_i32, false);       // scope 0 at $DIR/optimizes_into_variable.rs:12:13: 12:18\n-+                                          // ty::Const\n-+                                          // + ty: (i32, bool)\n-+                                          // + val: Value(ByRef { alloc: Allocation { bytes: [4, 0, 0, 0, 0, 0, 0, 0], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [31], len: Size { raw: 8 } }, size: Size { raw: 8 }, align: Align { pow2: 2 }, mutability: Not, extra: () }, offset: Size { raw: 0 } })\n +                                          // mir::Constant\n +                                          // + span: $DIR/optimizes_into_variable.rs:12:13: 12:18\n +                                          // + literal: Const { ty: (i32, bool), val: Value(ByRef { alloc: Allocation { bytes: [4, 0, 0, 0, 0, 0, 0, 0], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [31], len: Size { raw: 8 } }, size: Size { raw: 8 }, align: Align { pow2: 2 }, mutability: Not, extra: () }, offset: Size { raw: 0 } }) }"}, {"sha": "a10bac4f3ea3b04bcb0e8ac2bf553f8a8d0a04ca", "filename": "src/test/mir-opt/const_prop/optimizes_into_variable.main.ConstProp.64bit.diff", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f459b0fea5723010bf1654d8073389fd0a0263d1/src%2Ftest%2Fmir-opt%2Fconst_prop%2Foptimizes_into_variable.main.ConstProp.64bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/f459b0fea5723010bf1654d8073389fd0a0263d1/src%2Ftest%2Fmir-opt%2Fconst_prop%2Foptimizes_into_variable.main.ConstProp.64bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Foptimizes_into_variable.main.ConstProp.64bit.diff?ref=f459b0fea5723010bf1654d8073389fd0a0263d1", "patch": "@@ -27,9 +27,6 @@\n -         _2 = CheckedAdd(const 2_i32, const 2_i32); // scope 0 at $DIR/optimizes_into_variable.rs:12:13: 12:18\n -         assert(!move (_2.1: bool), \"attempt to compute `{} + {}`, which would overflow\", const 2_i32, const 2_i32) -> bb1; // scope 0 at $DIR/optimizes_into_variable.rs:12:13: 12:18\n +         _2 = const (4_i32, false);       // scope 0 at $DIR/optimizes_into_variable.rs:12:13: 12:18\n-+                                          // ty::Const\n-+                                          // + ty: (i32, bool)\n-+                                          // + val: Value(ByRef { alloc: Allocation { bytes: [4, 0, 0, 0, 0, 0, 0, 0], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [31], len: Size { raw: 8 } }, size: Size { raw: 8 }, align: Align { pow2: 2 }, mutability: Not, extra: () }, offset: Size { raw: 0 } })\n +                                          // mir::Constant\n +                                          // + span: $DIR/optimizes_into_variable.rs:12:13: 12:18\n +                                          // + literal: Const { ty: (i32, bool), val: Value(ByRef { alloc: Allocation { bytes: [4, 0, 0, 0, 0, 0, 0, 0], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [31], len: Size { raw: 8 } }, size: Size { raw: 8 }, align: Align { pow2: 2 }, mutability: Not, extra: () }, offset: Size { raw: 0 } }) }"}, {"sha": "f0e9916e6300e3c6834cc9938b20cc9a7b54e032", "filename": "src/test/mir-opt/const_prop/return_place.add.ConstProp.diff", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f459b0fea5723010bf1654d8073389fd0a0263d1/src%2Ftest%2Fmir-opt%2Fconst_prop%2Freturn_place.add.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/f459b0fea5723010bf1654d8073389fd0a0263d1/src%2Ftest%2Fmir-opt%2Fconst_prop%2Freturn_place.add.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Freturn_place.add.ConstProp.diff?ref=f459b0fea5723010bf1654d8073389fd0a0263d1", "patch": "@@ -9,9 +9,6 @@\n -         _1 = CheckedAdd(const 2_u32, const 2_u32); // scope 0 at $DIR/return_place.rs:6:5: 6:10\n -         assert(!move (_1.1: bool), \"attempt to compute `{} + {}`, which would overflow\", const 2_u32, const 2_u32) -> bb1; // scope 0 at $DIR/return_place.rs:6:5: 6:10\n +         _1 = const (4_u32, false);       // scope 0 at $DIR/return_place.rs:6:5: 6:10\n-+                                          // ty::Const\n-+                                          // + ty: (u32, bool)\n-+                                          // + val: Value(ByRef { alloc: Allocation { bytes: [4, 0, 0, 0, 0, 0, 0, 0], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [31], len: Size { raw: 8 } }, size: Size { raw: 8 }, align: Align { pow2: 2 }, mutability: Not, extra: () }, offset: Size { raw: 0 } })\n +                                          // mir::Constant\n +                                          // + span: $DIR/return_place.rs:6:5: 6:10\n +                                          // + literal: Const { ty: (u32, bool), val: Value(ByRef { alloc: Allocation { bytes: [4, 0, 0, 0, 0, 0, 0, 0], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [31], len: Size { raw: 8 } }, size: Size { raw: 8 }, align: Align { pow2: 2 }, mutability: Not, extra: () }, offset: Size { raw: 0 } }) }"}, {"sha": "da4b135d4c6d6ab2df6a6e77a1501251afdb18bc", "filename": "src/test/mir-opt/const_prop/tuple_literal_propagation.main.ConstProp.diff", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f459b0fea5723010bf1654d8073389fd0a0263d1/src%2Ftest%2Fmir-opt%2Fconst_prop%2Ftuple_literal_propagation.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/f459b0fea5723010bf1654d8073389fd0a0263d1/src%2Ftest%2Fmir-opt%2Fconst_prop%2Ftuple_literal_propagation.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Ftuple_literal_propagation.main.ConstProp.diff?ref=f459b0fea5723010bf1654d8073389fd0a0263d1", "patch": "@@ -18,9 +18,6 @@\n           StorageLive(_3);                 // scope 1 at $DIR/tuple_literal_propagation.rs:5:13: 5:14\n -         _3 = _1;                         // scope 1 at $DIR/tuple_literal_propagation.rs:5:13: 5:14\n +         _3 = const (1_u32, 2_u32);       // scope 1 at $DIR/tuple_literal_propagation.rs:5:13: 5:14\n-+                                          // ty::Const\n-+                                          // + ty: (u32, u32)\n-+                                          // + val: Value(ByRef { alloc: Allocation { bytes: [1, 0, 0, 0, 2, 0, 0, 0], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [255], len: Size { raw: 8 } }, size: Size { raw: 8 }, align: Align { pow2: 2 }, mutability: Not, extra: () }, offset: Size { raw: 0 } })\n +                                          // mir::Constant\n +                                          // + span: $DIR/tuple_literal_propagation.rs:5:13: 5:14\n +                                          // + literal: Const { ty: (u32, u32), val: Value(ByRef { alloc: Allocation { bytes: [1, 0, 0, 0, 2, 0, 0, 0], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [255], len: Size { raw: 8 } }, size: Size { raw: 8 }, align: Align { pow2: 2 }, mutability: Not, extra: () }, offset: Size { raw: 0 } }) }"}, {"sha": "34f8ca870cd230eb20eb6341b2ed533133babfb1", "filename": "src/test/mir-opt/simplify_locals_removes_unused_consts.main.SimplifyLocals.diff", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f459b0fea5723010bf1654d8073389fd0a0263d1/src%2Ftest%2Fmir-opt%2Fsimplify_locals_removes_unused_consts.main.SimplifyLocals.diff", "raw_url": "https://github.com/rust-lang/rust/raw/f459b0fea5723010bf1654d8073389fd0a0263d1/src%2Ftest%2Fmir-opt%2Fsimplify_locals_removes_unused_consts.main.SimplifyLocals.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_locals_removes_unused_consts.main.SimplifyLocals.diff?ref=f459b0fea5723010bf1654d8073389fd0a0263d1", "patch": "@@ -42,9 +42,6 @@\n                                            // mir::Constant\n                                            // + span: $DIR/simplify-locals-removes-unused-consts.rs:14:5: 14:12\n                                            // + literal: Const { ty: fn(((), ())) {use_zst}, val: Value(Scalar(<ZST>)) }\n-                                           // ty::Const\n-                                           // + ty: ((), ())\n-                                           // + val: Value(Scalar(<ZST>))\n                                            // mir::Constant\n                                            // + span: $DIR/simplify-locals-removes-unused-consts.rs:14:5: 14:22\n                                            // + literal: Const { ty: ((), ()), val: Value(Scalar(<ZST>)) }"}]}