{"sha": "08759c691e2e9799a3c6780ffdf910240ebd4a6b", "node_id": "C_kwDOAAsO6NoAKDA4NzU5YzY5MWUyZTk3OTlhM2M2NzgwZmZkZjkxMDI0MGViZDRhNmI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-10-03T16:22:37Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-10-03T16:22:37Z"}, "message": "Auto merge of #88086 - ssomers:btree_clone_testing, r=dtolnay\n\nBTree: toughen panicky test of clone()\n\nTest did not cover the second half of `clone_subtree` and why this clones key & value first.", "tree": {"sha": "74d76de0eb552336c9259d1d866689e7043a7aa7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74d76de0eb552336c9259d1d866689e7043a7aa7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/08759c691e2e9799a3c6780ffdf910240ebd4a6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/08759c691e2e9799a3c6780ffdf910240ebd4a6b", "html_url": "https://github.com/rust-lang/rust/commit/08759c691e2e9799a3c6780ffdf910240ebd4a6b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/08759c691e2e9799a3c6780ffdf910240ebd4a6b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5051904d66b14d7b8dd2750bd30610c8c81cb01d", "url": "https://api.github.com/repos/rust-lang/rust/commits/5051904d66b14d7b8dd2750bd30610c8c81cb01d", "html_url": "https://github.com/rust-lang/rust/commit/5051904d66b14d7b8dd2750bd30610c8c81cb01d"}, {"sha": "923212e3e8fd39a7ef68db12bc4196c8ea41390e", "url": "https://api.github.com/repos/rust-lang/rust/commits/923212e3e8fd39a7ef68db12bc4196c8ea41390e", "html_url": "https://github.com/rust-lang/rust/commit/923212e3e8fd39a7ef68db12bc4196c8ea41390e"}], "stats": {"total": 57, "additions": 32, "deletions": 25}, "files": [{"sha": "b8e11e109c831bb220fe350824975d573998f252", "filename": "library/alloc/src/collections/btree/map/tests.rs", "status": "modified", "additions": 31, "deletions": 24, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/08759c691e2e9799a3c6780ffdf910240ebd4a6b/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08759c691e2e9799a3c6780ffdf910240ebd4a6b/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap%2Ftests.rs?ref=08759c691e2e9799a3c6780ffdf910240ebd4a6b", "patch": "@@ -1494,33 +1494,40 @@ fn test_clone() {\n     map.check();\n }\n \n-#[test]\n-fn test_clone_panic_leak() {\n-    let a = CrashTestDummy::new(0);\n-    let b = CrashTestDummy::new(1);\n-    let c = CrashTestDummy::new(2);\n+fn test_clone_panic_leak(size: usize) {\n+    for i in 0..size {\n+        let dummies: Vec<CrashTestDummy> = (0..size).map(|id| CrashTestDummy::new(id)).collect();\n+        let map: BTreeMap<_, ()> = dummies\n+            .iter()\n+            .map(|dummy| {\n+                let panic = if dummy.id == i { Panic::InClone } else { Panic::Never };\n+                (dummy.spawn(panic), ())\n+            })\n+            .collect();\n \n-    let mut map = BTreeMap::new();\n-    map.insert(a.spawn(Panic::Never), ());\n-    map.insert(b.spawn(Panic::InClone), ());\n-    map.insert(c.spawn(Panic::Never), ());\n+        catch_unwind(|| map.clone()).unwrap_err();\n+        for d in &dummies {\n+            assert_eq!(d.cloned(), if d.id <= i { 1 } else { 0 }, \"id={}/{}\", d.id, i);\n+            assert_eq!(d.dropped(), if d.id < i { 1 } else { 0 }, \"id={}/{}\", d.id, i);\n+        }\n+        assert_eq!(map.len(), size);\n \n-    catch_unwind(|| map.clone()).unwrap_err();\n-    assert_eq!(a.cloned(), 1);\n-    assert_eq!(b.cloned(), 1);\n-    assert_eq!(c.cloned(), 0);\n-    assert_eq!(a.dropped(), 1);\n-    assert_eq!(b.dropped(), 0);\n-    assert_eq!(c.dropped(), 0);\n-    assert_eq!(map.len(), 3);\n+        drop(map);\n+        for d in &dummies {\n+            assert_eq!(d.cloned(), if d.id <= i { 1 } else { 0 }, \"id={}/{}\", d.id, i);\n+            assert_eq!(d.dropped(), if d.id < i { 2 } else { 1 }, \"id={}/{}\", d.id, i);\n+        }\n+    }\n+}\n \n-    drop(map);\n-    assert_eq!(a.cloned(), 1);\n-    assert_eq!(b.cloned(), 1);\n-    assert_eq!(c.cloned(), 0);\n-    assert_eq!(a.dropped(), 2);\n-    assert_eq!(b.dropped(), 1);\n-    assert_eq!(c.dropped(), 1);\n+#[test]\n+fn test_clone_panic_leak_height_0() {\n+    test_clone_panic_leak(3)\n+}\n+\n+#[test]\n+fn test_clone_panic_leak_height_1() {\n+    test_clone_panic_leak(MIN_INSERTS_HEIGHT_1)\n }\n \n #[test]"}, {"sha": "488eaa07a95b433c7d2916dab7cf7cd48ecc0fd2", "filename": "library/alloc/src/collections/btree/testing/crash_test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/08759c691e2e9799a3c6780ffdf910240ebd4a6b/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Ftesting%2Fcrash_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08759c691e2e9799a3c6780ffdf910240ebd4a6b/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Ftesting%2Fcrash_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Ftesting%2Fcrash_test.rs?ref=08759c691e2e9799a3c6780ffdf910240ebd4a6b", "patch": "@@ -11,7 +11,7 @@ use std::sync::atomic::{AtomicUsize, Ordering::SeqCst};\n /// on anything defined in the crate, apart from the `Debug` trait.\n #[derive(Debug)]\n pub struct CrashTestDummy {\n-    id: usize,\n+    pub id: usize,\n     cloned: AtomicUsize,\n     dropped: AtomicUsize,\n     queried: AtomicUsize,"}]}