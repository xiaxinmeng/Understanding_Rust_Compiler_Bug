{"sha": "5f24798b9e228438973a8abeee1a2d5ea016f335", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmMjQ3OThiOWUyMjg0Mzg5NzNhOGFiZWVlMWEyZDVlYTAxNmYzMzU=", "commit": {"author": {"name": "Nixon Enraght-Moony", "email": "nixon.emoony@gmail.com", "date": "2021-02-26T22:55:28Z"}, "committer": {"name": "Nixon Enraght-Moony", "email": "nixon.emoony@gmail.com", "date": "2021-03-10T22:06:05Z"}, "message": "Improve some jsondocck errors", "tree": {"sha": "d6dc7d77e8e3035dd9940c4899d3716acce3e981", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6dc7d77e8e3035dd9940c4899d3716acce3e981"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5f24798b9e228438973a8abeee1a2d5ea016f335", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5f24798b9e228438973a8abeee1a2d5ea016f335", "html_url": "https://github.com/rust-lang/rust/commit/5f24798b9e228438973a8abeee1a2d5ea016f335", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5f24798b9e228438973a8abeee1a2d5ea016f335/comments", "author": {"login": "aDotInTheVoid", "id": 28781354, "node_id": "MDQ6VXNlcjI4NzgxMzU0", "avatar_url": "https://avatars.githubusercontent.com/u/28781354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aDotInTheVoid", "html_url": "https://github.com/aDotInTheVoid", "followers_url": "https://api.github.com/users/aDotInTheVoid/followers", "following_url": "https://api.github.com/users/aDotInTheVoid/following{/other_user}", "gists_url": "https://api.github.com/users/aDotInTheVoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/aDotInTheVoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aDotInTheVoid/subscriptions", "organizations_url": "https://api.github.com/users/aDotInTheVoid/orgs", "repos_url": "https://api.github.com/users/aDotInTheVoid/repos", "events_url": "https://api.github.com/users/aDotInTheVoid/events{/privacy}", "received_events_url": "https://api.github.com/users/aDotInTheVoid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aDotInTheVoid", "id": 28781354, "node_id": "MDQ6VXNlcjI4NzgxMzU0", "avatar_url": "https://avatars.githubusercontent.com/u/28781354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aDotInTheVoid", "html_url": "https://github.com/aDotInTheVoid", "followers_url": "https://api.github.com/users/aDotInTheVoid/followers", "following_url": "https://api.github.com/users/aDotInTheVoid/following{/other_user}", "gists_url": "https://api.github.com/users/aDotInTheVoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/aDotInTheVoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aDotInTheVoid/subscriptions", "organizations_url": "https://api.github.com/users/aDotInTheVoid/orgs", "repos_url": "https://api.github.com/users/aDotInTheVoid/repos", "events_url": "https://api.github.com/users/aDotInTheVoid/events{/privacy}", "received_events_url": "https://api.github.com/users/aDotInTheVoid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9925ecb3928417b4401e81a2a7cde6de114aa26f", "url": "https://api.github.com/repos/rust-lang/rust/commits/9925ecb3928417b4401e81a2a7cde6de114aa26f", "html_url": "https://github.com/rust-lang/rust/commit/9925ecb3928417b4401e81a2a7cde6de114aa26f"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "bcb3f6922efaabe02ca480b930a439e8b0a75cb3", "filename": "src/tools/jsondocck/src/main.rs", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/5f24798b9e228438973a8abeee1a2d5ea016f335/src%2Ftools%2Fjsondocck%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f24798b9e228438973a8abeee1a2d5ea016f335/src%2Ftools%2Fjsondocck%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fjsondocck%2Fsrc%2Fmain.rs?ref=5f24798b9e228438973a8abeee1a2d5ea016f335", "patch": "@@ -205,7 +205,21 @@ fn check_command(command: Command, cache: &mut Cache) -> Result<(), CkError> {\n                     let val = cache.get_value(&command.args[0])?;\n                     let results = select(&val, &command.args[1]).unwrap();\n                     let pat = string_to_value(&command.args[2], cache);\n-                    results.contains(&pat.as_ref())\n+                    let has = results.contains(&pat.as_ref());\n+                    // Give better error for when @has check fails\n+                    if !command.negated && !has {\n+                        return Err(CkError::FailedCheck(\n+                            format!(\n+                                \"{} matched to {:?} but didn't have {:?}\",\n+                                &command.args[1],\n+                                results,\n+                                pat.as_ref()\n+                            ),\n+                            command,\n+                        ));\n+                    } else {\n+                        has\n+                    }\n                 }\n                 _ => unreachable!(),\n             }\n@@ -233,7 +247,13 @@ fn check_command(command: Command, cache: &mut Cache) -> Result<(), CkError> {\n             assert_eq!(command.args[1], \"=\", \"Expected an `=`\");\n             let val = cache.get_value(&command.args[2])?;\n             let results = select(&val, &command.args[3]).unwrap();\n-            assert_eq!(results.len(), 1);\n+            assert_eq!(\n+                results.len(),\n+                1,\n+                \"Didn't get 1 result for `{}`: got {:?}\",\n+                command.args[3],\n+                results\n+            );\n             match results.len() {\n                 0 => false,\n                 1 => {"}]}