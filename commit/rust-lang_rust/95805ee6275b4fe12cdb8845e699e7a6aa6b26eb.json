{"sha": "95805ee6275b4fe12cdb8845e699e7a6aa6b26eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1ODA1ZWU2Mjc1YjRmZTEyY2RiODg0NWU2OTllN2E2YWE2YjI2ZWI=", "commit": {"author": {"name": "Zack M. Davis", "email": "code@zackmdavis.net", "date": "2016-10-27T03:16:58Z"}, "committer": {"name": "Zack M. Davis", "email": "code@zackmdavis.net", "date": "2016-10-27T03:52:54Z"}, "message": "save a borrow by using return value of HashSet::insert\n\nThanks to Niko Matsakis's review for the suggestion.", "tree": {"sha": "5071857d11b9be3c749657cdc9a2440ebad97da0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5071857d11b9be3c749657cdc9a2440ebad97da0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95805ee6275b4fe12cdb8845e699e7a6aa6b26eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95805ee6275b4fe12cdb8845e699e7a6aa6b26eb", "html_url": "https://github.com/rust-lang/rust/commit/95805ee6275b4fe12cdb8845e699e7a6aa6b26eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95805ee6275b4fe12cdb8845e699e7a6aa6b26eb/comments", "author": {"login": "zackmdavis", "id": 1076988, "node_id": "MDQ6VXNlcjEwNzY5ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1076988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackmdavis", "html_url": "https://github.com/zackmdavis", "followers_url": "https://api.github.com/users/zackmdavis/followers", "following_url": "https://api.github.com/users/zackmdavis/following{/other_user}", "gists_url": "https://api.github.com/users/zackmdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackmdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackmdavis/subscriptions", "organizations_url": "https://api.github.com/users/zackmdavis/orgs", "repos_url": "https://api.github.com/users/zackmdavis/repos", "events_url": "https://api.github.com/users/zackmdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/zackmdavis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zackmdavis", "id": 1076988, "node_id": "MDQ6VXNlcjEwNzY5ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1076988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackmdavis", "html_url": "https://github.com/zackmdavis", "followers_url": "https://api.github.com/users/zackmdavis/followers", "following_url": "https://api.github.com/users/zackmdavis/following{/other_user}", "gists_url": "https://api.github.com/users/zackmdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackmdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackmdavis/subscriptions", "organizations_url": "https://api.github.com/users/zackmdavis/orgs", "repos_url": "https://api.github.com/users/zackmdavis/repos", "events_url": "https://api.github.com/users/zackmdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/zackmdavis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1bfa1d51fd220ee5281176f565581cd9dfeaa380", "url": "https://api.github.com/repos/rust-lang/rust/commits/1bfa1d51fd220ee5281176f565581cd9dfeaa380", "html_url": "https://github.com/rust-lang/rust/commit/1bfa1d51fd220ee5281176f565581cd9dfeaa380"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "f4029fde471b94fe77909c63ab450e642b01a37a", "filename": "src/librustc/session/mod.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/95805ee6275b4fe12cdb8845e699e7a6aa6b26eb/src%2Flibrustc%2Fsession%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95805ee6275b4fe12cdb8845e699e7a6aa6b26eb/src%2Flibrustc%2Fsession%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fmod.rs?ref=95805ee6275b4fe12cdb8845e699e7a6aa6b26eb", "patch": "@@ -297,18 +297,16 @@ impl Session {\n     /// deduplicates on span and message for this `Session`.\n     //\n     // FIXME: if the need arises for one-time diagnostics other than\n-    // `span_note`, we almost certainly want to generalize this \"check the\n-    // one-time diagnostics map, then set message if it's not already there\"\n-    // code to accomodate all of them\n+    // `span_note`, we almost certainly want to generalize this\n+    // \"check/insert-into the one-time diagnostics map, then set message if\n+    // it's not already there\" code to accomodate all of them\n     pub fn diag_span_note_once<'a, 'b>(&'a self,\n                                        diag_builder: &'b mut DiagnosticBuilder<'a>,\n                                        span: Span, message: &str) {\n         let span_message = (span, message.to_owned());\n-        let already_noted: bool = self.one_time_diagnostics.borrow()\n-            .contains(&span_message);\n-        if !already_noted {\n+        let fresh = self.one_time_diagnostics.borrow_mut().insert(span_message);\n+        if fresh {\n             diag_builder.span_note(span, &message);\n-            self.one_time_diagnostics.borrow_mut().insert(span_message);\n         }\n     }\n "}]}