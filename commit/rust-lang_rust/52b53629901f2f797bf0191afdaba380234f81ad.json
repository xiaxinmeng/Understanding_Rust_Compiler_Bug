{"sha": "52b53629901f2f797bf0191afdaba380234f81ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyYjUzNjI5OTAxZjJmNzk3YmYwMTkxYWZkYWJhMzgwMjM0ZjgxYWQ=", "commit": {"author": {"name": "Remy Rakic", "email": "remy.rakic@gmail.com", "date": "2018-09-14T16:07:17Z"}, "committer": {"name": "Remy Rakic", "email": "remy.rakic@gmail.com", "date": "2018-09-18T12:34:51Z"}, "message": "Explain the fake read injection better", "tree": {"sha": "a5253a2b8bb72d17c9461df531d3526dc61d98d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5253a2b8bb72d17c9461df531d3526dc61d98d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52b53629901f2f797bf0191afdaba380234f81ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52b53629901f2f797bf0191afdaba380234f81ad", "html_url": "https://github.com/rust-lang/rust/commit/52b53629901f2f797bf0191afdaba380234f81ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52b53629901f2f797bf0191afdaba380234f81ad/comments", "author": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3c7a5bafe26d566242e000bb6136e3e9ee8d611", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3c7a5bafe26d566242e000bb6136e3e9ee8d611", "html_url": "https://github.com/rust-lang/rust/commit/c3c7a5bafe26d566242e000bb6136e3e9ee8d611"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "5c72679800c4428c9e179a4679d7d6939938831f", "filename": "src/librustc_mir/build/matches/mod.rs", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/52b53629901f2f797bf0191afdaba380234f81ad/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52b53629901f2f797bf0191afdaba380234f81ad/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs?ref=52b53629901f2f797bf0191afdaba380234f81ad", "patch": "@@ -265,9 +265,20 @@ impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {\n                     self.storage_live_binding(block, var, irrefutable_pat.span, OutsideGuard);\n                 unpack!(block = self.into(&place, block, initializer));\n \n-                // Inject a fake read of the newly created binding\n-                // to test the fallout of fixing issue #53695 where NLL\n-                // allows creating unused variables that are effectively unusable.\n+\n+                // Officially, the semantics of\n+                //\n+                // `let pattern = <expr>;`\n+                //\n+                // is that `<expr>` is evaluated into a temporary and then this temporary is\n+                // into the pattern.\n+                //\n+                // However, if we see the simple pattern `let var = <expr>`, we optimize this to\n+                // evaluate `<expr>` directly into the variable `var`. This is mostly unobservable,\n+                // but in some cases it can affect the borrow checker, as in #53695.\n+                // Therefore, we insert a \"fake read\" here to ensure that we get\n+                // appropriate errors.\n+                //\n                 let source_info = self.source_info(irrefutable_pat.span);\n                 self.cfg.push(\n                     block,\n@@ -318,9 +329,9 @@ impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {\n                     },\n                 );\n \n-                // Inject a fake read of the newly created binding\n-                // to test the fallout of fixing issue #53695 where NLL\n-                // allows creating unused variables that are effectively unusable.\n+                // Similarly to the `let var = <expr>` case, we insert a \"fake read\" here to\n+                // ensure that we get appropriate errors when this usually unobservable\n+                // optimization affects the borrow checker.\n                 self.cfg.push(\n                     block,\n                     Statement {"}]}