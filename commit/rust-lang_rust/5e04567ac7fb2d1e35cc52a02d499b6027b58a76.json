{"sha": "5e04567ac7fb2d1e35cc52a02d499b6027b58a76", "node_id": "C_kwDOAAsO6NoAKDVlMDQ1NjdhYzdmYjJkMWUzNWNjNTJhMDJkNDk5YjYwMjdiNThhNzY", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-10-12T05:41:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-12T05:41:24Z"}, "message": "Rollup merge of #102187 - b-naber:inline-const-source-info, r=eholk\n\nUse correct location for type tests in promoted constants\n\nPreviously we forgot to remap the location in a type test collected when visiting the body of a promoted constant back to the usage location, causing an ICE when trying to get span information for that type test.\n\nFixes https://github.com/rust-lang/rust/issues/102117", "tree": {"sha": "92c50a653ad02ba77df3ddc8592250dddbeaf5de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92c50a653ad02ba77df3ddc8592250dddbeaf5de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e04567ac7fb2d1e35cc52a02d499b6027b58a76", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjRlOECRBK7hj4Ov3rIwAA68MIAFL2sdel2vsxJU64iQUpbuOD\nzTMCCXVUqCoFWNrCsw3bX89l+7+MpgBwCkBBDlX9ku+CH/V+IeQPtJfV5TRmOmse\nvogBeyVvGN3DQIaCESoTlS7e9FV51ZRV6h8kYQP2dF20jQ+4hscKRPO5OAff8EZx\nuOeseXJ9tWm25WYfsBAt2CHf/v7pP/j538iqpRAg5yw0C6TwLUKf/SfAEKdIRwBB\nOn2DxnOZ8wCtBYjWg/3LLWhlSGDHWC4ERJGojm+IMvrAUyzyZR7lmfDDa/S8DNvs\nkrL4n20XDQuUj51br93g4sux9yKIapLgBWYYVso/ba+AiNbtOkLdHfV5FnPcEGU=\n=oj/I\n-----END PGP SIGNATURE-----\n", "payload": "tree 92c50a653ad02ba77df3ddc8592250dddbeaf5de\nparent 32471a7035b4d8ba2b1fb3caae5f8203f47e4391\nparent 29cc36f84cc68b71f6bc8f8fee786c605a8c5027\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1665553284 +0530\ncommitter GitHub <noreply@github.com> 1665553284 +0530\n\nRollup merge of #102187 - b-naber:inline-const-source-info, r=eholk\n\nUse correct location for type tests in promoted constants\n\nPreviously we forgot to remap the location in a type test collected when visiting the body of a promoted constant back to the usage location, causing an ICE when trying to get span information for that type test.\n\nFixes https://github.com/rust-lang/rust/issues/102117\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e04567ac7fb2d1e35cc52a02d499b6027b58a76", "html_url": "https://github.com/rust-lang/rust/commit/5e04567ac7fb2d1e35cc52a02d499b6027b58a76", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e04567ac7fb2d1e35cc52a02d499b6027b58a76/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32471a7035b4d8ba2b1fb3caae5f8203f47e4391", "url": "https://api.github.com/repos/rust-lang/rust/commits/32471a7035b4d8ba2b1fb3caae5f8203f47e4391", "html_url": "https://github.com/rust-lang/rust/commit/32471a7035b4d8ba2b1fb3caae5f8203f47e4391"}, {"sha": "29cc36f84cc68b71f6bc8f8fee786c605a8c5027", "url": "https://api.github.com/repos/rust-lang/rust/commits/29cc36f84cc68b71f6bc8f8fee786c605a8c5027", "html_url": "https://github.com/rust-lang/rust/commit/29cc36f84cc68b71f6bc8f8fee786c605a8c5027"}], "stats": {"total": 76, "additions": 76, "deletions": 0}, "files": [{"sha": "dc0f0e7cd3c4c1e46a9adb36c02083a3d31037b9", "filename": "compiler/rustc_borrowck/src/type_check/mod.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5e04567ac7fb2d1e35cc52a02d499b6027b58a76/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e04567ac7fb2d1e35cc52a02d499b6027b58a76/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs?ref=5e04567ac7fb2d1e35cc52a02d499b6027b58a76", "patch": "@@ -584,6 +584,7 @@ impl<'a, 'b, 'tcx> TypeVerifier<'a, 'b, 'tcx> {\n         // modify their locations.\n         let all_facts = &mut None;\n         let mut constraints = Default::default();\n+        let mut type_tests = Default::default();\n         let mut closure_bounds = Default::default();\n         let mut liveness_constraints =\n             LivenessValues::new(Rc::new(RegionValueElements::new(&promoted_body)));\n@@ -595,6 +596,7 @@ impl<'a, 'b, 'tcx> TypeVerifier<'a, 'b, 'tcx> {\n                 &mut this.cx.borrowck_context.constraints.outlives_constraints,\n                 &mut constraints,\n             );\n+            mem::swap(&mut this.cx.borrowck_context.constraints.type_tests, &mut type_tests);\n             mem::swap(\n                 &mut this.cx.borrowck_context.constraints.closure_bounds_mapping,\n                 &mut closure_bounds,\n@@ -619,6 +621,13 @@ impl<'a, 'b, 'tcx> TypeVerifier<'a, 'b, 'tcx> {\n         swap_constraints(self);\n \n         let locations = location.to_locations();\n+\n+        // Use location of promoted const in collected constraints\n+        for type_test in type_tests.iter() {\n+            let mut type_test = type_test.clone();\n+            type_test.locations = locations;\n+            self.cx.borrowck_context.constraints.type_tests.push(type_test)\n+        }\n         for constraint in constraints.outlives().iter() {\n             let mut constraint = constraint.clone();\n             constraint.locations = locations;"}, {"sha": "b77342c4135e1b896fa31f164eb02291a6c564ef", "filename": "src/test/ui/consts/issue-102117.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/5e04567ac7fb2d1e35cc52a02d499b6027b58a76/src%2Ftest%2Fui%2Fconsts%2Fissue-102117.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e04567ac7fb2d1e35cc52a02d499b6027b58a76/src%2Ftest%2Fui%2Fconsts%2Fissue-102117.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-102117.rs?ref=5e04567ac7fb2d1e35cc52a02d499b6027b58a76", "patch": "@@ -0,0 +1,30 @@\n+#![feature(inline_const, const_type_id)]\n+\n+use std::alloc::Layout;\n+use std::any::TypeId;\n+use std::mem::transmute;\n+use std::ptr::drop_in_place;\n+\n+pub struct VTable {\n+    layout: Layout,\n+    type_id: TypeId,\n+    drop_in_place: unsafe fn(*mut ()),\n+}\n+\n+impl VTable {\n+    pub fn new<T>() -> &'static Self {\n+        const {\n+          //~^ ERROR the parameter type `T` may not live long enough\n+          //~| ERROR the parameter type `T` may not live long enough\n+            &VTable {\n+                layout: Layout::new::<T>(),\n+                type_id: TypeId::of::<T>(),\n+                drop_in_place: unsafe {\n+                    transmute::<unsafe fn(*mut T), unsafe fn(*mut ())>(drop_in_place::<T>)\n+                },\n+            }\n+        }\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "eb4b329bd8134d06855a7ef5afdc22a6819e66b4", "filename": "src/test/ui/consts/issue-102117.stderr", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/5e04567ac7fb2d1e35cc52a02d499b6027b58a76/src%2Ftest%2Fui%2Fconsts%2Fissue-102117.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5e04567ac7fb2d1e35cc52a02d499b6027b58a76/src%2Ftest%2Fui%2Fconsts%2Fissue-102117.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-102117.stderr?ref=5e04567ac7fb2d1e35cc52a02d499b6027b58a76", "patch": "@@ -0,0 +1,37 @@\n+error[E0310]: the parameter type `T` may not live long enough\n+  --> $DIR/issue-102117.rs:16:9\n+   |\n+LL | /         const {\n+LL | |\n+LL | |\n+LL | |             &VTable {\n+...  |\n+LL | |             }\n+LL | |         }\n+   | |_________^ ...so that the type `T` will meet its required lifetime bounds\n+   |\n+help: consider adding an explicit lifetime bound...\n+   |\n+LL |     pub fn new<T: 'static>() -> &'static Self {\n+   |                 +++++++++\n+\n+error[E0310]: the parameter type `T` may not live long enough\n+  --> $DIR/issue-102117.rs:16:9\n+   |\n+LL | /         const {\n+LL | |\n+LL | |\n+LL | |             &VTable {\n+...  |\n+LL | |             }\n+LL | |         }\n+   | |_________^ ...so that the type `T` will meet its required lifetime bounds\n+   |\n+help: consider adding an explicit lifetime bound...\n+   |\n+LL |     pub fn new<T: 'static>() -> &'static Self {\n+   |                 +++++++++\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0310`."}]}