{"sha": "532e3a50ebf5ed0b2c6b097bab5fc34ee576216f", "node_id": "C_kwDOAAsO6NoAKDUzMmUzYTUwZWJmNWVkMGIyYzZiMDk3YmFiNWZjMzRlZTU3NjIxNmY", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-09-15T21:27:47Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-09-15T21:27:47Z"}, "message": "Allow building `rust-analyzer-proc-macro-srv` as a standalone tool", "tree": {"sha": "0660ea2b14e8e3c1d02defa04efb289da14f47d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0660ea2b14e8e3c1d02defa04efb289da14f47d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/532e3a50ebf5ed0b2c6b097bab5fc34ee576216f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/532e3a50ebf5ed0b2c6b097bab5fc34ee576216f", "html_url": "https://github.com/rust-lang/rust/commit/532e3a50ebf5ed0b2c6b097bab5fc34ee576216f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/532e3a50ebf5ed0b2c6b097bab5fc34ee576216f/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35a0407814a6b5a04f0929105631e9c69e293e9d", "url": "https://api.github.com/repos/rust-lang/rust/commits/35a0407814a6b5a04f0929105631e9c69e293e9d", "html_url": "https://github.com/rust-lang/rust/commit/35a0407814a6b5a04f0929105631e9c69e293e9d"}], "stats": {"total": 36, "additions": 26, "deletions": 10}, "files": [{"sha": "77109659ca7e616c0d5582ac89fa1d6a03a5b405", "filename": "src/bootstrap/tool.rs", "status": "modified", "additions": 26, "deletions": 10, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/532e3a50ebf5ed0b2c6b097bab5fc34ee576216f/src%2Fbootstrap%2Ftool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/532e3a50ebf5ed0b2c6b097bab5fc34ee576216f/src%2Fbootstrap%2Ftool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftool.rs?ref=532e3a50ebf5ed0b2c6b097bab5fc34ee576216f", "patch": "@@ -745,14 +745,18 @@ impl Step for RustAnalyzerProcMacroSrv {\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n         let builder = run.builder;\n-        run.path(\"src/tools/rust-analyzer\").default_condition(\n-            builder.config.extended\n-                && builder\n-                    .config\n-                    .tools\n-                    .as_ref()\n-                    .map_or(true, |tools| tools.iter().any(|tool| tool == \"rust-analyzer\")),\n-        )\n+\n+        // Allow building `rust-analyzer-proc-macro-srv` both as part of the `rust-analyzer` and as a stand-alone tool.\n+        run.path(\"src/tools/rust-analyzer\")\n+            .path(\"src/tools/rust-analyzer/crates/proc-macro-srv-cli\")\n+            .default_condition(\n+                builder.config.extended\n+                    && builder.config.tools.as_ref().map_or(true, |tools| {\n+                        tools.iter().any(|tool| {\n+                            tool == \"rust-analyzer\" || tool == \"rust-analyzer-proc-macro-srv\"\n+                        })\n+                    }),\n+            )\n     }\n \n     fn make_run(run: RunConfig<'_>) {\n@@ -763,7 +767,7 @@ impl Step for RustAnalyzerProcMacroSrv {\n     }\n \n     fn run(self, builder: &Builder<'_>) -> Option<PathBuf> {\n-        builder.ensure(ToolBuild {\n+        let path = builder.ensure(ToolBuild {\n             compiler: self.compiler,\n             target: self.target,\n             tool: \"rust-analyzer-proc-macro-srv\",\n@@ -772,7 +776,19 @@ impl Step for RustAnalyzerProcMacroSrv {\n             extra_features: vec![\"proc-macro-srv/sysroot-abi\".to_owned()],\n             is_optional_tool: false,\n             source_type: SourceType::InTree,\n-        })\n+        })?;\n+\n+        // Copy `rust-analyzer-proc-macro-srv` to `build/triple/stageN/libexec/`\n+        // so that r-a can use it.\n+        let libexec_path = builder\n+            .out\n+            .join(&*builder.config.build.triple)\n+            .join(format!(\"stage{}\", self.compiler.stage))\n+            .join(\"libexec\");\n+        t!(fs::create_dir_all(&libexec_path));\n+        builder.copy(&path, &libexec_path.join(\"rust-analyzer-proc-macro-srv\"));\n+\n+        Some(path)\n     }\n }\n "}]}