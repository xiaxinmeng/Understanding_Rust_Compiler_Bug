{"sha": "4b45f39f92ce9f525e96564d8e587c62b18c709c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiNDVmMzlmOTJjZTlmNTI1ZTk2NTY0ZDhlNTg3YzYyYjE4YzcwOWM=", "commit": {"author": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2015-10-25T12:03:21Z"}, "committer": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2015-10-25T12:03:21Z"}, "message": "Remove key duplication from `BTreeMap` example in `collections`", "tree": {"sha": "0ababb3a14f3e39ef9aaa5649c0f98679adc95bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ababb3a14f3e39ef9aaa5649c0f98679adc95bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b45f39f92ce9f525e96564d8e587c62b18c709c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b45f39f92ce9f525e96564d8e587c62b18c709c", "html_url": "https://github.com/rust-lang/rust/commit/4b45f39f92ce9f525e96564d8e587c62b18c709c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b45f39f92ce9f525e96564d8e587c62b18c709c/comments", "author": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92dd81ab51bc3db89d1b4d8ec21768b3353b49e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/92dd81ab51bc3db89d1b4d8ec21768b3353b49e3", "html_url": "https://github.com/rust-lang/rust/commit/92dd81ab51bc3db89d1b4d8ec21768b3353b49e3"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "71d9fbfaa3e801506d875048e9773f7bdff27015", "filename": "src/libstd/collections/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4b45f39f92ce9f525e96564d8e587c62b18c709c/src%2Flibstd%2Fcollections%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b45f39f92ce9f525e96564d8e587c62b18c709c/src%2Flibstd%2Fcollections%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fmod.rs?ref=4b45f39f92ce9f525e96564d8e587c62b18c709c", "patch": "@@ -332,8 +332,8 @@\n //! ```\n //! use std::collections::btree_map::BTreeMap;\n //!\n-//! // A client of the bar. They have an id and a blood alcohol level.\n-//! struct Person { id: u32, blood_alcohol: f32 }\n+//! // A client of the bar. They have a blood alcohol level.\n+//! struct Person { blood_alcohol: f32 }\n //!\n //! // All the orders made to the bar, by client id.\n //! let orders = vec![1,2,1,2,3,4,1,2,2,3,4,1,1,1];\n@@ -344,15 +344,15 @@\n //! for id in orders {\n //!     // If this is the first time we've seen this customer, initialize them\n //!     // with no blood alcohol. Otherwise, just retrieve them.\n-//!     let person = blood_alcohol.entry(id).or_insert(Person{id: id, blood_alcohol: 0.0});\n+//!     let person = blood_alcohol.entry(id).or_insert(Person { blood_alcohol: 0.0 });\n //!\n //!     // Reduce their blood alcohol level. It takes time to order and drink a beer!\n //!     person.blood_alcohol *= 0.9;\n //!\n //!     // Check if they're sober enough to have another beer.\n //!     if person.blood_alcohol > 0.3 {\n //!         // Too drunk... for now.\n-//!         println!(\"Sorry {}, I have to cut you off\", person.id);\n+//!         println!(\"Sorry {}, I have to cut you off\", id);\n //!     } else {\n //!         // Have another!\n //!         person.blood_alcohol += 0.1;"}]}