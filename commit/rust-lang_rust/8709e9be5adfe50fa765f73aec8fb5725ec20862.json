{"sha": "8709e9be5adfe50fa765f73aec8fb5725ec20862", "node_id": "C_kwDOAAsO6NoAKDg3MDllOWJlNWFkZmU1MGZhNzY1ZjczYWVjOGZiNTcyNWVjMjA4NjI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-02-07T16:57:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-07T16:57:15Z"}, "message": "Rollup merge of #107740 - oli-obk:lock_tcx, r=petrochenkov\n\nAvoid locking the global context across the `after_expansion` callback\n\nr? `@petrochenkov`\n\nThis was noticed in https://github.com/model-checking/kani/pull/2184#issuecomment-1416566982\n\nThis didn't have a perf impact, as it's just an additional 2 or 3 RefCell locks being created.", "tree": {"sha": "9cfd0da47d01c1a8e22cf371f068d51e21f66b00", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cfd0da47d01c1a8e22cf371f068d51e21f66b00"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8709e9be5adfe50fa765f73aec8fb5725ec20862", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj4oLrCRBK7hj4Ov3rIwAAU3UIAKUrwF+ISSt62eVRg+N3Cx0G\nxdLdl1XkB4vPqY3gm5hGQcpUHyuEglJHzurz4i4om4N24G7ogR3Qr+SwPdikp6RG\nHEaGb2jRK1X/3WoDEbnXiB2TVKa91dGXQeYqp472qW1ndCBbBE6o9WTW4LmNEgtZ\nVrP1GaqkkqXpUYhxeID5kto9HBm6MSuDVkPFk/kwV3qJnPfGqDW4PsuQ9LB2elnm\nEKHRoIbpG99C3QhbocSIWFMWwHlOalmAXavSA2QCRae/MfHp8Gkr44bZHyhCShhU\nyI8vVuqcuZnkrlD8J7GyBpUFaYQ55B8qA07v8S4poTbeukOBhP4iKeTcS/0Bpkc=\n=aQq3\n-----END PGP SIGNATURE-----\n", "payload": "tree 9cfd0da47d01c1a8e22cf371f068d51e21f66b00\nparent 401fe5c000d785fdc428ea753c9246dfe6bce935\nparent 0ddf249532f188cdd947a333dfd8a009cc517ccc\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1675789035 +0100\ncommitter GitHub <noreply@github.com> 1675789035 +0100\n\nRollup merge of #107740 - oli-obk:lock_tcx, r=petrochenkov\n\nAvoid locking the global context across the `after_expansion` callback\n\nr? `@petrochenkov`\n\nThis was noticed in https://github.com/model-checking/kani/pull/2184#issuecomment-1416566982\n\nThis didn't have a perf impact, as it's just an additional 2 or 3 RefCell locks being created.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8709e9be5adfe50fa765f73aec8fb5725ec20862", "html_url": "https://github.com/rust-lang/rust/commit/8709e9be5adfe50fa765f73aec8fb5725ec20862", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8709e9be5adfe50fa765f73aec8fb5725ec20862/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "401fe5c000d785fdc428ea753c9246dfe6bce935", "url": "https://api.github.com/repos/rust-lang/rust/commits/401fe5c000d785fdc428ea753c9246dfe6bce935", "html_url": "https://github.com/rust-lang/rust/commit/401fe5c000d785fdc428ea753c9246dfe6bce935"}, {"sha": "0ddf249532f188cdd947a333dfd8a009cc517ccc", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ddf249532f188cdd947a333dfd8a009cc517ccc", "html_url": "https://github.com/rust-lang/rust/commit/0ddf249532f188cdd947a333dfd8a009cc517ccc"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "1da13afecfa935b9adf8d0568064a0aa675423b3", "filename": "compiler/rustc_driver_impl/src/lib.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8709e9be5adfe50fa765f73aec8fb5725ec20862/compiler%2Frustc_driver_impl%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8709e9be5adfe50fa765f73aec8fb5725ec20862/compiler%2Frustc_driver_impl%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver_impl%2Fsrc%2Flib.rs?ref=8709e9be5adfe50fa765f73aec8fb5725ec20862", "patch": "@@ -326,14 +326,16 @@ fn run_compiler(\n                 }\n             }\n \n-            let mut gctxt = queries.global_ctxt()?;\n+            // Make sure name resolution and macro expansion is run.\n+            queries.global_ctxt()?;\n+\n             if callbacks.after_expansion(compiler, queries) == Compilation::Stop {\n                 return early_exit();\n             }\n \n             // Make sure the `output_filenames` query is run for its side\n             // effects of writing the dep-info and reporting errors.\n-            gctxt.enter(|tcx| tcx.output_filenames(()));\n+            queries.global_ctxt()?.enter(|tcx| tcx.output_filenames(()));\n \n             if sess.opts.output_types.contains_key(&OutputType::DepInfo)\n                 && sess.opts.output_types.len() == 1\n@@ -345,7 +347,7 @@ fn run_compiler(\n                 return early_exit();\n             }\n \n-            gctxt.enter(|tcx| {\n+            queries.global_ctxt()?.enter(|tcx| {\n                 let result = tcx.analysis(());\n                 if sess.opts.unstable_opts.save_analysis {\n                     let crate_name = tcx.crate_name(LOCAL_CRATE);\n@@ -362,8 +364,6 @@ fn run_compiler(\n                 result\n             })?;\n \n-            drop(gctxt);\n-\n             if callbacks.after_analysis(compiler, queries) == Compilation::Stop {\n                 return early_exit();\n             }"}]}