{"sha": "e1afd26c524dbc8b90e7f1cdb00891f0b63b244d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxYWZkMjZjNTI0ZGJjOGI5MGU3ZjFjZGIwMDg5MWYwYjYzYjI0NGQ=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-03-31T14:50:06Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-03-31T14:50:06Z"}, "message": "fix docs", "tree": {"sha": "14be2e0c4d5ad2134bcda1a86aca1239ef463687", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14be2e0c4d5ad2134bcda1a86aca1239ef463687"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1afd26c524dbc8b90e7f1cdb00891f0b63b244d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1afd26c524dbc8b90e7f1cdb00891f0b63b244d", "html_url": "https://github.com/rust-lang/rust/commit/e1afd26c524dbc8b90e7f1cdb00891f0b63b244d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1afd26c524dbc8b90e7f1cdb00891f0b63b244d/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5223d272599b93624c51bfa0c4232cf54823053", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5223d272599b93624c51bfa0c4232cf54823053", "html_url": "https://github.com/rust-lang/rust/commit/b5223d272599b93624c51bfa0c4232cf54823053"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "78b3ad3b83873111f0516fdccd6e82d656245049", "filename": "src/liballoc/collections/vec_deque.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e1afd26c524dbc8b90e7f1cdb00891f0b63b244d/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1afd26c524dbc8b90e7f1cdb00891f0b63b244d/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fvec_deque.rs?ref=e1afd26c524dbc8b90e7f1cdb00891f0b63b244d", "patch": "@@ -2055,7 +2055,7 @@ impl<T> VecDeque<T> {\n     /// As it returns a mutable slice, this can be used to sort or binary search a deque.\n     ///\n     /// Once the internal storage is contiguous, the [`as_slices`](#method.as_slices) and\n-    /// [`as_slices_mut`](#method.as_slices_mut) methods will return the entire contents of the\n+    /// [`as_mut_slices`](#method.as_mut_slices) methods will return the entire contents of the\n     /// `VecDeque` in a single slice.\n     ///\n     /// # Examples"}]}