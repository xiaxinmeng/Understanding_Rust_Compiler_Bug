{"sha": "a77c1d836aa669c7faed616d6b53e81cbe65f055", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3N2MxZDgzNmFhNjY5YzdmYWVkNjE2ZDZiNTNlODFjYmU2NWYwNTU=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-01-21T11:04:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-21T11:04:45Z"}, "message": "Rollup merge of #81046 - rylev:unknown-external-crate, r=estebank\n\nImprove unknown external crate error\n\nThis improves error messages when unknown items in the crate root are encountered.\n\nFixes #63799\n\nr? ```@estebank```", "tree": {"sha": "bc6d5699e93ccb9c310d8db7f52847880a750e14", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc6d5699e93ccb9c310d8db7f52847880a750e14"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a77c1d836aa669c7faed616d6b53e81cbe65f055", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgCV/OCRBK7hj4Ov3rIwAAdHIIAHNCJn6n1XNfORQX67/OjbwU\nonN+WphVNDjtyzA5WmNZCvpvE0Kwc6l3MHvUPQA9fosyySD15DOKrKzGt6rcoFfd\nz7KpVnBx/6BxUazuHokxgQCb6wlZrTEkmjI3hUOPDb6ifeGawM82h9lTOhSbhM09\nj7pOsAnNiPs8zroyASxYZhmDDbx7MFCq4yyDFub7Fk0foz+Y+2pJYoSnUT+l6yDx\ndOcEcsbQ1X7aCSgGqeSKLGcBUkmHO44cdhGZ0VbKAUOPOo89HCyxUTErjxUE/l3i\n+Eg3RjRbQTde0+8rnTcxMVAx63gGq6ZItta6IA+3jX7WMk3MENK8gfy1ahXGV4A=\n=FaUg\n-----END PGP SIGNATURE-----\n", "payload": "tree bc6d5699e93ccb9c310d8db7f52847880a750e14\nparent 8be36b1b3ac4cfe538ef8d32faeb1021407f55b2\nparent 38b77420e9e2b08edf739a36027139688d2c9283\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1611227085 +0900\ncommitter GitHub <noreply@github.com> 1611227085 +0900\n\nRollup merge of #81046 - rylev:unknown-external-crate, r=estebank\n\nImprove unknown external crate error\n\nThis improves error messages when unknown items in the crate root are encountered.\n\nFixes #63799\n\nr? ```@estebank```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a77c1d836aa669c7faed616d6b53e81cbe65f055", "html_url": "https://github.com/rust-lang/rust/commit/a77c1d836aa669c7faed616d6b53e81cbe65f055", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a77c1d836aa669c7faed616d6b53e81cbe65f055/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8be36b1b3ac4cfe538ef8d32faeb1021407f55b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/8be36b1b3ac4cfe538ef8d32faeb1021407f55b2", "html_url": "https://github.com/rust-lang/rust/commit/8be36b1b3ac4cfe538ef8d32faeb1021407f55b2"}, {"sha": "38b77420e9e2b08edf739a36027139688d2c9283", "url": "https://api.github.com/repos/rust-lang/rust/commits/38b77420e9e2b08edf739a36027139688d2c9283", "html_url": "https://github.com/rust-lang/rust/commit/38b77420e9e2b08edf739a36027139688d2c9283"}], "stats": {"total": 59, "additions": 51, "deletions": 8}, "files": [{"sha": "fff14747e57293d69c887ba4fb8b04f3cf069715", "filename": "compiler/rustc_resolve/src/late.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a77c1d836aa669c7faed616d6b53e81cbe65f055/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a77c1d836aa669c7faed616d6b53e81cbe65f055/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate.rs?ref=a77c1d836aa669c7faed616d6b53e81cbe65f055", "patch": "@@ -243,6 +243,13 @@ impl<'a> PathSource<'a> {\n                 // \"function\" here means \"anything callable\" rather than `DefKind::Fn`,\n                 // this is not precise but usually more helpful than just \"value\".\n                 Some(ExprKind::Call(call_expr, _)) => match &call_expr.kind {\n+                    // the case of `::some_crate()`\n+                    ExprKind::Path(_, path)\n+                        if path.segments.len() == 2\n+                            && path.segments[0].ident.name == kw::PathRoot =>\n+                    {\n+                        \"external crate\"\n+                    }\n                     ExprKind::Path(_, path) => {\n                         let mut msg = \"function\";\n                         if let Some(segment) = path.segments.iter().last() {"}, {"sha": "d293899dc0c6f731e54496c0da155a670e02d4a7", "filename": "compiler/rustc_resolve/src/lib.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a77c1d836aa669c7faed616d6b53e81cbe65f055/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a77c1d836aa669c7faed616d6b53e81cbe65f055/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flib.rs?ref=a77c1d836aa669c7faed616d6b53e81cbe65f055", "patch": "@@ -2485,20 +2485,26 @@ impl<'a> Resolver<'a> {\n                             (format!(\"use of undeclared crate or module `{}`\", ident), None)\n                         }\n                     } else {\n-                        let mut msg =\n-                            format!(\"could not find `{}` in `{}`\", ident, path[i - 1].ident);\n+                        let parent = path[i - 1].ident.name;\n+                        let parent = if parent == kw::PathRoot {\n+                            \"crate root\".to_owned()\n+                        } else {\n+                            format!(\"`{}`\", parent)\n+                        };\n+\n+                        let mut msg = format!(\"could not find `{}` in {}\", ident, parent);\n                         if ns == TypeNS || ns == ValueNS {\n                             let ns_to_try = if ns == TypeNS { ValueNS } else { TypeNS };\n                             if let FindBindingResult::Binding(Ok(binding)) =\n                                 find_binding_in_ns(self, ns_to_try)\n                             {\n                                 let mut found = |what| {\n                                     msg = format!(\n-                                        \"expected {}, found {} `{}` in `{}`\",\n+                                        \"expected {}, found {} `{}` in {}\",\n                                         ns.descr(),\n                                         what,\n                                         ident,\n-                                        path[i - 1].ident\n+                                        parent\n                                     )\n                                 };\n                                 if binding.module().is_some() {"}, {"sha": "06605c6f2082e4964552a8530cbec1184ecaed62", "filename": "src/test/ui/editions/edition-imports-virtual-2015-gated.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a77c1d836aa669c7faed616d6b53e81cbe65f055/src%2Ftest%2Fui%2Feditions%2Fedition-imports-virtual-2015-gated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a77c1d836aa669c7faed616d6b53e81cbe65f055/src%2Ftest%2Fui%2Feditions%2Fedition-imports-virtual-2015-gated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-imports-virtual-2015-gated.stderr?ref=a77c1d836aa669c7faed616d6b53e81cbe65f055", "patch": "@@ -2,7 +2,7 @@ error[E0432]: unresolved import `E`\n   --> $DIR/edition-imports-virtual-2015-gated.rs:8:5\n    |\n LL |     gen_gated!();\n-   |     ^^^^^^^^^^^^^ could not find `E` in `{{root}}`\n+   |     ^^^^^^^^^^^^^ could not find `E` in crate root\n    |\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "e8f52c0c029aaf5fcf0d772e4198a05ecee9d00f", "filename": "src/test/ui/resolve/crate-called-as-function.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a77c1d836aa669c7faed616d6b53e81cbe65f055/src%2Ftest%2Fui%2Fresolve%2Fcrate-called-as-function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a77c1d836aa669c7faed616d6b53e81cbe65f055/src%2Ftest%2Fui%2Fresolve%2Fcrate-called-as-function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fcrate-called-as-function.rs?ref=a77c1d836aa669c7faed616d6b53e81cbe65f055", "patch": "@@ -0,0 +1,3 @@\n+fn main() {\n+    ::foo() //~ cannot find external crate `foo` in the crate root\n+}"}, {"sha": "eb42349aff1b61363610b885c4f2f5d35b0ef02d", "filename": "src/test/ui/resolve/crate-called-as-function.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a77c1d836aa669c7faed616d6b53e81cbe65f055/src%2Ftest%2Fui%2Fresolve%2Fcrate-called-as-function.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a77c1d836aa669c7faed616d6b53e81cbe65f055/src%2Ftest%2Fui%2Fresolve%2Fcrate-called-as-function.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fcrate-called-as-function.stderr?ref=a77c1d836aa669c7faed616d6b53e81cbe65f055", "patch": "@@ -0,0 +1,9 @@\n+error[E0425]: cannot find external crate `foo` in the crate root\n+  --> $DIR/crate-called-as-function.rs:2:7\n+   |\n+LL |     ::foo()\n+   |       ^^^ not found in the crate root\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0425`."}, {"sha": "e1dedb072b77b78c7ce44d927da6cdb0e429a6ff", "filename": "src/test/ui/resolve/missing-in-namespace.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a77c1d836aa669c7faed616d6b53e81cbe65f055/src%2Ftest%2Fui%2Fresolve%2Fmissing-in-namespace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a77c1d836aa669c7faed616d6b53e81cbe65f055/src%2Ftest%2Fui%2Fresolve%2Fmissing-in-namespace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fmissing-in-namespace.rs?ref=a77c1d836aa669c7faed616d6b53e81cbe65f055", "patch": "@@ -0,0 +1,4 @@\n+fn main() {\n+    let _map = std::hahmap::HashMap::new();\n+    //~^ ERROR failed to resolve: could not find `hahmap` in `std\n+}"}, {"sha": "8b292aeda50745fa45553d744c64feb3e103027c", "filename": "src/test/ui/resolve/missing-in-namespace.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a77c1d836aa669c7faed616d6b53e81cbe65f055/src%2Ftest%2Fui%2Fresolve%2Fmissing-in-namespace.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a77c1d836aa669c7faed616d6b53e81cbe65f055/src%2Ftest%2Fui%2Fresolve%2Fmissing-in-namespace.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fmissing-in-namespace.stderr?ref=a77c1d836aa669c7faed616d6b53e81cbe65f055", "patch": "@@ -0,0 +1,14 @@\n+error[E0433]: failed to resolve: could not find `hahmap` in `std`\n+  --> $DIR/missing-in-namespace.rs:2:29\n+   |\n+LL |     let _map = std::hahmap::HashMap::new();\n+   |                             ^^^^^^^ not found in `std::hahmap`\n+   |\n+help: consider importing this struct\n+   |\n+LL | use std::collections::HashMap;\n+   |\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0433`."}, {"sha": "61212f299bec791ca0d81e79ae6d72ea2f36bf35", "filename": "src/test/ui/rfc-2126-extern-absolute-paths/non-existent-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a77c1d836aa669c7faed616d6b53e81cbe65f055/src%2Ftest%2Fui%2Frfc-2126-extern-absolute-paths%2Fnon-existent-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a77c1d836aa669c7faed616d6b53e81cbe65f055/src%2Ftest%2Fui%2Frfc-2126-extern-absolute-paths%2Fnon-existent-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2126-extern-absolute-paths%2Fnon-existent-2.rs?ref=a77c1d836aa669c7faed616d6b53e81cbe65f055", "patch": "@@ -2,5 +2,5 @@\n \n fn main() {\n     let s = ::xcrate::S;\n-    //~^ ERROR failed to resolve: could not find `xcrate` in `{{root}}`\n+    //~^ ERROR failed to resolve: could not find `xcrate` in crate root\n }"}, {"sha": "8b2a6933f37bf6528f5497c7eef2d53c9e2ac935", "filename": "src/test/ui/rfc-2126-extern-absolute-paths/non-existent-2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a77c1d836aa669c7faed616d6b53e81cbe65f055/src%2Ftest%2Fui%2Frfc-2126-extern-absolute-paths%2Fnon-existent-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a77c1d836aa669c7faed616d6b53e81cbe65f055/src%2Ftest%2Fui%2Frfc-2126-extern-absolute-paths%2Fnon-existent-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2126-extern-absolute-paths%2Fnon-existent-2.stderr?ref=a77c1d836aa669c7faed616d6b53e81cbe65f055", "patch": "@@ -1,8 +1,8 @@\n-error[E0433]: failed to resolve: could not find `xcrate` in `{{root}}`\n+error[E0433]: failed to resolve: could not find `xcrate` in crate root\n   --> $DIR/non-existent-2.rs:4:15\n    |\n LL |     let s = ::xcrate::S;\n-   |               ^^^^^^ could not find `xcrate` in `{{root}}`\n+   |               ^^^^^^ could not find `xcrate` in crate root\n \n error: aborting due to previous error\n "}]}