{"sha": "a54e3cc9e7aa938ef6e4aa3ba00864bcefc717df", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1NGUzY2M5ZTdhYTkzOGVmNmU0YWEzYmEwMDg2NGJjZWZjNzE3ZGY=", "commit": {"author": {"name": "LooMaclin", "email": "loo.maclin@protonmail.com", "date": "2019-04-18T23:26:57Z"}, "committer": {"name": "LooMaclin", "email": "loo.maclin@protonmail.com", "date": "2019-04-18T23:26:57Z"}, "message": "Improve miri's error reporting in check_in_alloc", "tree": {"sha": "e1d2c8372f1e09cd20c9f2a018f2f241eda79803", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1d2c8372f1e09cd20c9f2a018f2f241eda79803"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a54e3cc9e7aa938ef6e4aa3ba00864bcefc717df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a54e3cc9e7aa938ef6e4aa3ba00864bcefc717df", "html_url": "https://github.com/rust-lang/rust/commit/a54e3cc9e7aa938ef6e4aa3ba00864bcefc717df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a54e3cc9e7aa938ef6e4aa3ba00864bcefc717df/comments", "author": {"login": "LooMaclin", "id": 10957765, "node_id": "MDQ6VXNlcjEwOTU3NzY1", "avatar_url": "https://avatars.githubusercontent.com/u/10957765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LooMaclin", "html_url": "https://github.com/LooMaclin", "followers_url": "https://api.github.com/users/LooMaclin/followers", "following_url": "https://api.github.com/users/LooMaclin/following{/other_user}", "gists_url": "https://api.github.com/users/LooMaclin/gists{/gist_id}", "starred_url": "https://api.github.com/users/LooMaclin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LooMaclin/subscriptions", "organizations_url": "https://api.github.com/users/LooMaclin/orgs", "repos_url": "https://api.github.com/users/LooMaclin/repos", "events_url": "https://api.github.com/users/LooMaclin/events{/privacy}", "received_events_url": "https://api.github.com/users/LooMaclin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LooMaclin", "id": 10957765, "node_id": "MDQ6VXNlcjEwOTU3NzY1", "avatar_url": "https://avatars.githubusercontent.com/u/10957765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LooMaclin", "html_url": "https://github.com/LooMaclin", "followers_url": "https://api.github.com/users/LooMaclin/followers", "following_url": "https://api.github.com/users/LooMaclin/following{/other_user}", "gists_url": "https://api.github.com/users/LooMaclin/gists{/gist_id}", "starred_url": "https://api.github.com/users/LooMaclin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LooMaclin/subscriptions", "organizations_url": "https://api.github.com/users/LooMaclin/orgs", "repos_url": "https://api.github.com/users/LooMaclin/repos", "events_url": "https://api.github.com/users/LooMaclin/events{/privacy}", "received_events_url": "https://api.github.com/users/LooMaclin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15d50deeb457d5761802dd1066f7bfbeaf71c2cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/15d50deeb457d5761802dd1066f7bfbeaf71c2cb", "html_url": "https://github.com/rust-lang/rust/commit/15d50deeb457d5761802dd1066f7bfbeaf71c2cb"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "84733f9af6d58303fcd95a223635df94fdf65198", "filename": "src/librustc/mir/interpret/allocation.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a54e3cc9e7aa938ef6e4aa3ba00864bcefc717df/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a54e3cc9e7aa938ef6e4aa3ba00864bcefc717df/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs?ref=a54e3cc9e7aa938ef6e4aa3ba00864bcefc717df", "patch": "@@ -228,7 +228,7 @@ impl<'tcx, Tag: Copy, Extra> Allocation<Tag, Extra> {\n         // FIXME: Working around https://github.com/rust-lang/rust/issues/56209\n         where Extra: AllocationExtra<Tag, MemoryExtra>\n     {\n-        self.get_bytes_internal(cx, ptr, size, true, CheckInAllocMsg::MemoryAccess)\n+        self.get_bytes_internal(cx, ptr, size, true, CheckInAllocMsg::MemoryAccessTest)\n     }\n \n     /// It is the caller's responsibility to handle undefined and pointer bytes.\n@@ -243,7 +243,7 @@ impl<'tcx, Tag: Copy, Extra> Allocation<Tag, Extra> {\n         // FIXME: Working around https://github.com/rust-lang/rust/issues/56209\n         where Extra: AllocationExtra<Tag, MemoryExtra>\n     {\n-        self.get_bytes_internal(cx, ptr, size, false, CheckInAllocMsg::MemoryAccess)\n+        self.get_bytes_internal(cx, ptr, size, false, CheckInAllocMsg::MemoryAccessTest)\n     }\n \n     /// Just calling this already marks everything as defined and removes relocations,\n@@ -258,7 +258,7 @@ impl<'tcx, Tag: Copy, Extra> Allocation<Tag, Extra> {\n         where Extra: AllocationExtra<Tag, MemoryExtra>\n     {\n         assert_ne!(size.bytes(), 0, \"0-sized accesses should never even get a `Pointer`\");\n-        self.check_bounds(cx, ptr, size, CheckInAllocMsg::MemoryAccess)?;\n+        self.check_bounds(cx, ptr, size, CheckInAllocMsg::MemoryAccessTest)?;\n \n         self.mark_definedness(ptr, size, true)?;\n         self.clear_relocations(cx, ptr, size)?;"}, {"sha": "cf2d12b59359bc1e21580672c481bd7b07ff39ae", "filename": "src/librustc/mir/interpret/error.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a54e3cc9e7aa938ef6e4aa3ba00864bcefc717df/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a54e3cc9e7aa938ef6e4aa3ba00864bcefc717df/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs?ref=a54e3cc9e7aa938ef6e4aa3ba00864bcefc717df", "patch": "@@ -461,9 +461,9 @@ impl<'tcx, O: fmt::Debug> fmt::Debug for InterpError<'tcx, O> {\n         use self::InterpError::*;\n         match *self {\n             PointerOutOfBounds { ptr, msg, allocation_size } => {\n-                write!(f, \"{} test failed: pointer must be in-bounds at offset {}, but is outside bounds of \\\n-                           allocation {} which has size {}\", msg,\n-                       ptr.offset.bytes(), ptr.alloc_id, allocation_size.bytes())\n+                write!(f, \"{} test failed: pointer must be in-bounds at offset {}, \\\n+                          but is outside bounds of allocation {} which has size {}\",\n+                    msg, ptr.offset.bytes(), ptr.alloc_id, allocation_size.bytes())\n             },\n             ValidationFailure(ref err) => {\n                 write!(f, \"type validation failed: {}\", err)"}]}