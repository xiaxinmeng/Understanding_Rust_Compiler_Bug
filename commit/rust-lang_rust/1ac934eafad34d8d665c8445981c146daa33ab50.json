{"sha": "1ac934eafad34d8d665c8445981c146daa33ab50", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhYzkzNGVhZmFkMzRkOGQ2NjVjODQ0NTk4MWMxNDZkYWEzM2FiNTA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-30T09:29:55Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-30T09:49:07Z"}, "message": "add paramthesis when completing functions", "tree": {"sha": "12940b433651da9cd28fb9243f084084fb991a3c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12940b433651da9cd28fb9243f084084fb991a3c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ac934eafad34d8d665c8445981c146daa33ab50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ac934eafad34d8d665c8445981c146daa33ab50", "html_url": "https://github.com/rust-lang/rust/commit/1ac934eafad34d8d665c8445981c146daa33ab50", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ac934eafad34d8d665c8445981c146daa33ab50/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2bc57e3c89e469eee772aa8e42df1d453fea922", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2bc57e3c89e469eee772aa8e42df1d453fea922", "html_url": "https://github.com/rust-lang/rust/commit/e2bc57e3c89e469eee772aa8e42df1d453fea922"}], "stats": {"total": 49, "additions": 39, "deletions": 10}, "files": [{"sha": "cd98efe956d9d6234ed1c36b5035aed59e5131be", "filename": "crates/ra_analysis/src/completion/complete_scope.rs", "status": "modified", "additions": 28, "deletions": 8, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/1ac934eafad34d8d665c8445981c146daa33ab50/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ac934eafad34d8d665c8445981c146daa33ab50/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_scope.rs?ref=1ac934eafad34d8d665c8445981c146daa33ab50", "patch": "@@ -74,7 +74,7 @@ mod tests {\n                 let z = ();\n             }\n             \",\n-            \"y;x;quux\",\n+            r#\"y;x;quux \"quux($0)\"\"#,\n         );\n     }\n \n@@ -92,7 +92,7 @@ mod tests {\n                 }\n             }\n             \",\n-            \"b;a;quux\",\n+            r#\"b;a;quux \"quux()$0\"\"#,\n         );\n     }\n \n@@ -106,7 +106,7 @@ mod tests {\n                 }\n             }\n             \",\n-            \"x;quux\",\n+            r#\"x;quux \"quux()$0\"\"#,\n         );\n     }\n \n@@ -120,7 +120,7 @@ mod tests {\n                 <|>\n             }\n             \",\n-            \"quux;Foo;Baz\",\n+            r#\"quux \"quux()$0\";Foo;Baz\"#,\n         );\n     }\n \n@@ -134,7 +134,7 @@ mod tests {\n                 fn quux() { <|> }\n             }\n             \",\n-            \"quux;Bar\",\n+            r#\"quux \"quux()$0\";Bar\"#,\n         );\n     }\n \n@@ -145,12 +145,12 @@ mod tests {\n             struct Foo;\n             fn x() -> <|>\n             \",\n-            \"Foo;x\",\n+            r#\"Foo;x \"x()$0\"\"#,\n         )\n     }\n \n     #[test]\n-    fn dont_show_to_completions_for_shadowing() {\n+    fn dont_show_both_completions_for_shadowing() {\n         check_reference_completion(\n             r\"\n             fn foo() -> {\n@@ -161,12 +161,32 @@ mod tests {\n                 }\n             }\n             \",\n-            \"bar;foo\",\n+            r#\"bar;foo \"foo()$0\"\"#,\n         )\n     }\n \n     #[test]\n     fn completes_self_in_methods() {\n         check_reference_completion(r\"impl S { fn foo(&self) { <|> } }\", \"self\")\n     }\n+\n+    #[test]\n+    fn inserts_parens_for_function_calls() {\n+        check_reference_completion(\n+            r\"\n+            fn no_args() {}\n+            fn main() { no_<|> }\n+            \",\n+            r#\"no_args \"no_args()$0\"\n+               main \"main()$0\"\"#,\n+        );\n+        check_reference_completion(\n+            r\"\n+            fn with_args(x: i32, y: String) {}\n+            fn main() { with_<|> }\n+            \",\n+            r#\"main \"main()$0\"\n+               with_args \"with_args($0)\"\"#,\n+        );\n+    }\n }"}, {"sha": "b8fa39ae3dd2983eb124720264eced67c4b7d9c9", "filename": "crates/ra_analysis/src/completion/completion_item.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1ac934eafad34d8d665c8445981c146daa33ab50/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ac934eafad34d8d665c8445981c146daa33ab50/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcompletion_item.rs?ref=1ac934eafad34d8d665c8445981c146daa33ab50", "patch": "@@ -138,9 +138,18 @@ impl Builder {\n                 ..\n             } => CompletionItemKind::Enum,\n             PerNs {\n-                values: Some(hir::Def::Function(..)),\n+                values: Some(hir::Def::Function(function)),\n                 ..\n-            } => CompletionItemKind::Function,\n+            } => {\n+                if let Some(sig_info) = function.signature_info(db) {\n+                    if sig_info.params.is_empty() {\n+                        self.snippet = Some(format!(\"{}()$0\", self.label));\n+                    } else {\n+                        self.snippet = Some(format!(\"{}($0)\", self.label));\n+                    }\n+                }\n+                CompletionItemKind::Function\n+            }\n             _ => return self,\n         };\n         self.kind = Some(kind);"}]}