{"sha": "3de30f4ef2f535b4cec24bba6166b8275d8400af", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkZTMwZjRlZjJmNTM1YjRjZWMyNGJiYTYxNjZiODI3NWQ4NDAwYWY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-13T01:03:10Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-13T01:03:48Z"}, "message": "rt: Change alignof to rust_alignof. Remove -Wno-c++11-compat. Closes #1644", "tree": {"sha": "498db7d55cf3edb752ecb5ba6e3953384320786b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/498db7d55cf3edb752ecb5ba6e3953384320786b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3de30f4ef2f535b4cec24bba6166b8275d8400af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3de30f4ef2f535b4cec24bba6166b8275d8400af", "html_url": "https://github.com/rust-lang/rust/commit/3de30f4ef2f535b4cec24bba6166b8275d8400af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3de30f4ef2f535b4cec24bba6166b8275d8400af/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd610a151bfde75e496d5bbaef95b63bd52bb822", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd610a151bfde75e496d5bbaef95b63bd52bb822", "html_url": "https://github.com/rust-lang/rust/commit/dd610a151bfde75e496d5bbaef95b63bd52bb822"}], "stats": {"total": 27, "additions": 13, "deletions": 14}, "files": [{"sha": "ee09a4811a6aa344459379dd61a28aef13d88f9c", "filename": "mk/platform.mk", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3de30f4ef2f535b4cec24bba6166b8275d8400af/mk%2Fplatform.mk", "raw_url": "https://github.com/rust-lang/rust/raw/3de30f4ef2f535b4cec24bba6166b8275d8400af/mk%2Fplatform.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fplatform.mk?ref=3de30f4ef2f535b4cec24bba6166b8275d8400af", "patch": "@@ -210,8 +210,7 @@ ifeq ($(CFG_C_COMPILER),clang)\n   CC=clang\n   CXX=clang++\n   CPP=cpp\n-  # -Wno-c++11-compat allows us to use 'alignof' as an identifier in the runtime\n-  CFG_GCCISH_CFLAGS += -Wall -Werror -Wno-c++11-compat -fno-rtti -g\n+  CFG_GCCISH_CFLAGS += -Wall -Werror -fno-rtti -g\n   CFG_GCCISH_LINK_FLAGS += -g\n   CFG_DEPEND_C = $(CFG_GCCISH_CROSS)$(CXX) $(CFG_GCCISH_CFLAGS) -MT \"$(1)\" \\\n     -MM $(2)"}, {"sha": "9883400d1731d5a544bc7325e9448e66871a0143", "filename": "src/rt/rust_shape.cpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3de30f4ef2f535b4cec24bba6166b8275d8400af/src%2Frt%2Frust_shape.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/3de30f4ef2f535b4cec24bba6166b8275d8400af/src%2Frt%2Frust_shape.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_shape.cpp?ref=3de30f4ef2f535b4cec24bba6166b8275d8400af", "patch": "@@ -212,7 +212,7 @@ size_of::compute_tag_size(tag_info &tinfo) {\n             tinfo.tag_sa.set(1, 1);\n     } else {\n         // Add in space for the tag.\n-        tinfo.tag_sa.add(sizeof(tag_variant_t), alignof<tag_align_t>());\n+        tinfo.tag_sa.add(sizeof(tag_variant_t), rust_alignof<tag_align_t>());\n     }\n }\n \n@@ -277,7 +277,7 @@ class cmp : public data<cmp,ptr_pair> {\n     }\n \n     inline void cmp_two_pointers() {\n-        ALIGN_TO(alignof<void *>());\n+        ALIGN_TO(rust_alignof<void *>());\n         data_pair<uint8_t *> fst = bump_dp<uint8_t *>(dp);\n         data_pair<uint8_t *> snd = bump_dp<uint8_t *>(dp);\n         cmp_number(fst);\n@@ -286,7 +286,7 @@ class cmp : public data<cmp,ptr_pair> {\n     }\n \n     inline void cmp_pointer() {\n-        ALIGN_TO(alignof<void *>());\n+        ALIGN_TO(rust_alignof<void *>());\n         cmp_number(bump_dp<uint8_t *>(dp));\n     }\n "}, {"sha": "64de224464e566a7512a609e5ce8d479627f29ed", "filename": "src/rt/rust_shape.h", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3de30f4ef2f535b4cec24bba6166b8275d8400af/src%2Frt%2Frust_shape.h", "raw_url": "https://github.com/rust-lang/rust/raw/3de30f4ef2f535b4cec24bba6166b8275d8400af/src%2Frt%2Frust_shape.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_shape.h?ref=3de30f4ef2f535b4cec24bba6166b8275d8400af", "patch": "@@ -108,7 +108,7 @@ class arena {\n \n template<typename T>\n inline size_t\n-alignof() {\n+rust_alignof() {\n #ifdef _MSC_VER\n     return __alignof(T);\n #else\n@@ -118,7 +118,7 @@ alignof() {\n \n template<>\n inline size_t\n-alignof<double>() {\n+rust_alignof<double>() {\n     return 4;\n }\n \n@@ -649,7 +649,7 @@ class size_of : public ctxt<size_of> {\n     }\n \n     template<typename T>\n-    void walk_number1()  { sa.set(sizeof(T), alignof<T>()); }\n+    void walk_number1()  { sa.set(sizeof(T), rust_alignof<T>()); }\n \n     void compute_tag_size(tag_info &tinfo);\n \n@@ -851,7 +851,7 @@ namespace shape {\n     }\n \n #define DATA_SIMPLE(ty, call) \\\n-    ALIGN_TO(alignof<ty>()); \\\n+    ALIGN_TO(rust_alignof<ty>()); \\\n     U end_dp = dp + sizeof(ty); \\\n     static_cast<T *>(this)->call; \\\n     dp = end_dp;\n@@ -899,21 +899,21 @@ class data : public ctxt< data<T,U> > {\n     void walk_uniq1() { DATA_SIMPLE(void *, walk_uniq2()); }\n \n     void walk_fn1(char code) {\n-        ALIGN_TO(alignof<void *>());\n+        ALIGN_TO(rust_alignof<void *>());\n         U next_dp = dp + sizeof(void *) * 2;\n         static_cast<T *>(this)->walk_fn2(code);\n         dp = next_dp;\n     }\n \n     void walk_iface1() {\n-        ALIGN_TO(alignof<void *>());\n+        ALIGN_TO(rust_alignof<void *>());\n         U next_dp = dp + sizeof(void *);\n         static_cast<T *>(this)->walk_iface2();\n         dp = next_dp;\n     }\n \n     void walk_tydesc1(char kind) {\n-        ALIGN_TO(alignof<void *>());\n+        ALIGN_TO(rust_alignof<void *>());\n         U next_dp = dp + sizeof(void *);\n         static_cast<T *>(this)->walk_tydesc2(kind);\n         dp = next_dp;\n@@ -938,7 +938,7 @@ class data : public ctxt< data<T,U> > {\n     template<typename WN>\n     void walk_number1() { \n         //DATA_SIMPLE(W, walk_number2<W>());\n-        ALIGN_TO(alignof<WN>());\n+        ALIGN_TO(rust_alignof<WN>());\n         U end_dp = dp + sizeof(WN);\n         T* t = static_cast<T *>(this);\n         t->template walk_number2<WN>();\n@@ -1003,7 +1003,7 @@ data<T,U>::walk_tag1(tag_info &tinfo) {\n     size_of::compute_tag_size(*this, tinfo);\n \n     if (tinfo.variant_count > 1)\n-        ALIGN_TO(alignof<tag_align_t>());\n+        ALIGN_TO(rust_alignof<tag_align_t>());\n \n     U end_dp = dp + tinfo.tag_sa.size;\n "}]}