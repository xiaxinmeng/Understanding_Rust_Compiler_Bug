{"sha": "0466a1256f46fac36cbdfcabe08153c8d0763cbd", "node_id": "C_kwDOAAsO6NoAKDA0NjZhMTI1NmY0NmZhYzM2Y2JkZmNhYmUwODE1M2M4ZDA3NjNjYmQ", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2021-11-25T10:48:31Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2021-11-25T12:28:31Z"}, "message": "Implement VecDeque::retain_mut", "tree": {"sha": "cd5b54a74f41bb5d723eee4415fa2c871e881a06", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd5b54a74f41bb5d723eee4415fa2c871e881a06"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0466a1256f46fac36cbdfcabe08153c8d0763cbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0466a1256f46fac36cbdfcabe08153c8d0763cbd", "html_url": "https://github.com/rust-lang/rust/commit/0466a1256f46fac36cbdfcabe08153c8d0763cbd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0466a1256f46fac36cbdfcabe08153c8d0763cbd/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6a7ca196a707acd65e6cce1d337cd11786c59a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6a7ca196a707acd65e6cce1d337cd11786c59a5", "html_url": "https://github.com/rust-lang/rust/commit/c6a7ca196a707acd65e6cce1d337cd11786c59a5"}], "stats": {"total": 37, "additions": 34, "deletions": 3}, "files": [{"sha": "18c945e1c06b576b3e5925d73bad39729786f67a", "filename": "library/alloc/src/collections/vec_deque/mod.rs", "status": "modified", "additions": 34, "deletions": 3, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/0466a1256f46fac36cbdfcabe08153c8d0763cbd/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0466a1256f46fac36cbdfcabe08153c8d0763cbd/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs?ref=0466a1256f46fac36cbdfcabe08153c8d0763cbd", "patch": "@@ -2148,14 +2148,45 @@ impl<T, A: Allocator> VecDeque<T, A> {\n     pub fn retain<F>(&mut self, mut f: F)\n     where\n         F: FnMut(&T) -> bool,\n+    {\n+        self.retain_mut(|elem| f(elem));\n+    }\n+\n+    /// Retains only the elements specified by the predicate.\n+    ///\n+    /// In other words, remove all elements `e` such that `f(&e)` returns false.\n+    /// This method operates in place, visiting each element exactly once in the\n+    /// original order, and preserves the order of the retained elements.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(vec_retain_mut)]\n+    ///\n+    /// use std::collections::VecDeque;\n+    ///\n+    /// let mut buf = VecDeque::new();\n+    /// buf.extend(1..5);\n+    /// buf.retain_mut(|x| if *x % 2 == 0 {\n+    ///     *x += 1;\n+    ///     true\n+    /// } else {\n+    ///     false\n+    /// });\n+    /// assert_eq!(buf, [3, 5]);\n+    /// ```\n+    #[unstable(feature = \"vec_retain_mut\", issue = \"90829\")]\n+    pub fn retain_mut<F>(&mut self, mut f: F)\n+    where\n+        F: FnMut(&mut T) -> bool,\n     {\n         let len = self.len();\n         let mut idx = 0;\n         let mut cur = 0;\n \n         // Stage 1: All values are retained.\n         while cur < len {\n-            if !f(&self[cur]) {\n+            if !f(&mut self[cur]) {\n                 cur += 1;\n                 break;\n             }\n@@ -2164,7 +2195,7 @@ impl<T, A: Allocator> VecDeque<T, A> {\n         }\n         // Stage 2: Swap retained value into current idx.\n         while cur < len {\n-            if !f(&self[cur]) {\n+            if !f(&mut self[cur]) {\n                 cur += 1;\n                 continue;\n             }\n@@ -2173,7 +2204,7 @@ impl<T, A: Allocator> VecDeque<T, A> {\n             cur += 1;\n             idx += 1;\n         }\n-        // Stage 3: Trancate all values after idx.\n+        // Stage 3: Truncate all values after idx.\n         if cur != idx {\n             self.truncate(idx);\n         }"}]}