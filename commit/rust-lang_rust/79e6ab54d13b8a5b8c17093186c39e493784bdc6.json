{"sha": "79e6ab54d13b8a5b8c17093186c39e493784bdc6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5ZTZhYjU0ZDEzYjhhNWI4YzE3MDkzMTg2YzM5ZTQ5Mzc4NGJkYzY=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-02-28T04:37:40Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-02-28T20:24:50Z"}, "message": "std: Avoid using \"{:?}\" in format strings\n\nThis removes all usage of Poly in format strings from libstd. This doesn't\nprevent more future strings from coming in, but it at least removes the ones for\nnow.", "tree": {"sha": "68b51fc30c107e2c758fe3faef5f7bb65fa730a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68b51fc30c107e2c758fe3faef5f7bb65fa730a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79e6ab54d13b8a5b8c17093186c39e493784bdc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79e6ab54d13b8a5b8c17093186c39e493784bdc6", "html_url": "https://github.com/rust-lang/rust/commit/79e6ab54d13b8a5b8c17093186c39e493784bdc6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79e6ab54d13b8a5b8c17093186c39e493784bdc6/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d89074c8ae11d52b3b92d73bc684f5b964a05cf5", "url": "https://api.github.com/repos/rust-lang/rust/commits/d89074c8ae11d52b3b92d73bc684f5b964a05cf5", "html_url": "https://github.com/rust-lang/rust/commit/d89074c8ae11d52b3b92d73bc684f5b964a05cf5"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "6ac1f2b369244a3dacd51bd1ac58fc771769e297", "filename": "src/libnative/io/process.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/79e6ab54d13b8a5b8c17093186c39e493784bdc6/src%2Flibnative%2Fio%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79e6ab54d13b8a5b8c17093186c39e493784bdc6/src%2Flibnative%2Fio%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Fio%2Fprocess.rs?ref=79e6ab54d13b8a5b8c17093186c39e493784bdc6", "patch": "@@ -470,7 +470,7 @@ fn spawn_process_os(config: p::ProcessConfig,\n                 Err(e) => {\n                     assert!(e.kind == io::BrokenPipe ||\n                             e.kind == io::EndOfFile,\n-                            \"unexpected error: {:?}\", e);\n+                            \"unexpected error: {}\", e);\n                     Ok(SpawnProcessResult {\n                         pid: pid,\n                         handle: ptr::null()\n@@ -744,7 +744,7 @@ fn waitpid(pid: pid_t) -> p::ProcessExit {\n \n         let mut status = 0 as c_int;\n         match retry(|| unsafe { wait::waitpid(pid, &mut status, 0) }) {\n-            -1 => fail!(\"unknown waitpid error: {:?}\", super::last_error()),\n+            -1 => fail!(\"unknown waitpid error: {}\", super::last_error()),\n             _ => {\n                 if imp::WIFEXITED(status) {\n                     p::ExitStatus(imp::WEXITSTATUS(status) as int)"}, {"sha": "00497b6f0eaf06ffa0b66ceb06974a383e74fa2e", "filename": "src/libstd/num/strconv.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/79e6ab54d13b8a5b8c17093186c39e493784bdc6/src%2Flibstd%2Fnum%2Fstrconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79e6ab54d13b8a5b8c17093186c39e493784bdc6/src%2Flibstd%2Fnum%2Fstrconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fstrconv.rs?ref=79e6ab54d13b8a5b8c17093186c39e493784bdc6", "patch": "@@ -532,19 +532,19 @@ pub fn from_str_bytes_common<T:NumCast+Zero+One+Eq+Ord+Div<T,T>+\n         ) -> Option<T> {\n     match exponent {\n         ExpDec if radix >= DIGIT_E_RADIX       // decimal exponent 'e'\n-          => fail!(\"from_str_bytes_common: radix {:?} incompatible with \\\n+          => fail!(\"from_str_bytes_common: radix {} incompatible with \\\n                     use of 'e' as decimal exponent\", radix),\n         ExpBin if radix >= DIGIT_P_RADIX       // binary exponent 'p'\n-          => fail!(\"from_str_bytes_common: radix {:?} incompatible with \\\n+          => fail!(\"from_str_bytes_common: radix {} incompatible with \\\n                     use of 'p' as binary exponent\", radix),\n         _ if special && radix >= DIGIT_I_RADIX // first digit of 'inf'\n-          => fail!(\"from_str_bytes_common: radix {:?} incompatible with \\\n+          => fail!(\"from_str_bytes_common: radix {} incompatible with \\\n                     special values 'inf' and 'NaN'\", radix),\n         _ if (radix as int) < 2\n-          => fail!(\"from_str_bytes_common: radix {:?} to low, \\\n+          => fail!(\"from_str_bytes_common: radix {} to low, \\\n                     must lie in the range [2, 36]\", radix),\n         _ if (radix as int) > 36\n-          => fail!(\"from_str_bytes_common: radix {:?} to high, \\\n+          => fail!(\"from_str_bytes_common: radix {} to high, \\\n                     must lie in the range [2, 36]\", radix),\n         _ => ()\n     }"}]}