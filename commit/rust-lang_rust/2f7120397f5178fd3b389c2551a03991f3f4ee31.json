{"sha": "2f7120397f5178fd3b389c2551a03991f3f4ee31", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmNzEyMDM5N2Y1MTc4ZmQzYjM4OWMyNTUxYTAzOTkxZjNmNGVlMzE=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2019-02-08T13:55:44Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2019-02-13T17:00:18Z"}, "message": "Use convert::Infallible instead of never in the blanket TryFrom impl", "tree": {"sha": "edb763aa8743f70ce3a870b453b8bddd073dfcec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/edb763aa8743f70ce3a870b453b8bddd073dfcec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f7120397f5178fd3b389c2551a03991f3f4ee31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f7120397f5178fd3b389c2551a03991f3f4ee31", "html_url": "https://github.com/rust-lang/rust/commit/2f7120397f5178fd3b389c2551a03991f3f4ee31", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f7120397f5178fd3b389c2551a03991f3f4ee31/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85f13f0d42fe7ee0a5850a271e8a1c975ad5b85f", "url": "https://api.github.com/repos/rust-lang/rust/commits/85f13f0d42fe7ee0a5850a271e8a1c975ad5b85f", "html_url": "https://github.com/rust-lang/rust/commit/85f13f0d42fe7ee0a5850a271e8a1c975ad5b85f"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "06344ed5ff7685bd9c2905fedadbdb190d7f80d7", "filename": "src/libcore/convert.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2f7120397f5178fd3b389c2551a03991f3f4ee31/src%2Flibcore%2Fconvert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f7120397f5178fd3b389c2551a03991f3f4ee31/src%2Flibcore%2Fconvert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fconvert.rs?ref=2f7120397f5178fd3b389c2551a03991f3f4ee31", "patch": "@@ -467,7 +467,7 @@ impl<T, U> TryInto<U> for T where U: TryFrom<T>\n // with an uninhabited error type.\n #[unstable(feature = \"try_from\", issue = \"33417\")]\n impl<T, U> TryFrom<U> for T where U: Into<T> {\n-    type Error = !;\n+    type Error = Infallible;\n \n     fn try_from(value: U) -> Result<Self, Self::Error> {\n         Ok(U::into(value))"}, {"sha": "ae7f1fe98c994bd065e1577461601e34dd566f85", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2f7120397f5178fd3b389c2551a03991f3f4ee31/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f7120397f5178fd3b389c2551a03991f3f4ee31/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=2f7120397f5178fd3b389c2551a03991f3f4ee31", "patch": "@@ -2,7 +2,7 @@\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n \n-use convert::TryFrom;\n+use convert::{TryFrom, Infallible};\n use fmt;\n use intrinsics;\n use mem;\n@@ -4531,9 +4531,19 @@ impl fmt::Display for TryFromIntError {\n }\n \n #[unstable(feature = \"try_from\", issue = \"33417\")]\n+impl From<Infallible> for TryFromIntError {\n+    fn from(x: Infallible) -> TryFromIntError {\n+        match x {}\n+    }\n+}\n+\n+#[unstable(feature = \"never_type\", issue = \"35121\")]\n impl From<!> for TryFromIntError {\n     fn from(never: !) -> TryFromIntError {\n-        never\n+        // Match rather than coerce to make sure that code like\n+        // `From<Infallible> for TryFromIntError` above will keep working\n+        // when `Infallible` becomes an alias to `!`.\n+        match never {}\n     }\n }\n "}, {"sha": "797e7937045cd45438417ec00b020c702f5cd216", "filename": "src/test/run-pass/try_from.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2f7120397f5178fd3b389c2551a03991f3f4ee31/src%2Ftest%2Frun-pass%2Ftry_from.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f7120397f5178fd3b389c2551a03991f3f4ee31/src%2Ftest%2Frun-pass%2Ftry_from.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftry_from.rs?ref=2f7120397f5178fd3b389c2551a03991f3f4ee31", "patch": "@@ -6,7 +6,7 @@\n \n #![feature(try_from, never_type)]\n \n-use std::convert::TryInto;\n+use std::convert::{TryInto, Infallible};\n \n struct Foo<T> {\n     t: T,\n@@ -32,6 +32,6 @@ impl<T> Into<Vec<T>> for Foo<T> {\n }\n \n pub fn main() {\n-    let _: Result<Vec<i32>, !> = Foo { t: 10 }.try_into();\n+    let _: Result<Vec<i32>, Infallible> = Foo { t: 10 }.try_into();\n }\n "}]}