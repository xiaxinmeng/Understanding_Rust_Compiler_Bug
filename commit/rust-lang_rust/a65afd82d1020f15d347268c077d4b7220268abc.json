{"sha": "a65afd82d1020f15d347268c077d4b7220268abc", "node_id": "C_kwDOAAsO6NoAKGE2NWFmZDgyZDEwMjBmMTVkMzQ3MjY4YzA3N2Q0YjcyMjAyNjhhYmM", "commit": {"author": {"name": "Thayne McCombs", "email": "astrothayne@gmail.com", "date": "2022-05-20T06:15:26Z"}, "committer": {"name": "Thayne McCombs", "email": "astrothayne@gmail.com", "date": "2022-05-20T06:15:26Z"}, "message": "Remove references to guards in documentation for clear_poison", "tree": {"sha": "fda28371e263a6d045a54de80a2a37812d11c31d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fda28371e263a6d045a54de80a2a37812d11c31d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a65afd82d1020f15d347268c077d4b7220268abc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a65afd82d1020f15d347268c077d4b7220268abc", "html_url": "https://github.com/rust-lang/rust/commit/a65afd82d1020f15d347268c077d4b7220268abc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a65afd82d1020f15d347268c077d4b7220268abc/comments", "author": {"login": "tmccombs", "id": 2541726, "node_id": "MDQ6VXNlcjI1NDE3MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2541726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmccombs", "html_url": "https://github.com/tmccombs", "followers_url": "https://api.github.com/users/tmccombs/followers", "following_url": "https://api.github.com/users/tmccombs/following{/other_user}", "gists_url": "https://api.github.com/users/tmccombs/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmccombs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmccombs/subscriptions", "organizations_url": "https://api.github.com/users/tmccombs/orgs", "repos_url": "https://api.github.com/users/tmccombs/repos", "events_url": "https://api.github.com/users/tmccombs/events{/privacy}", "received_events_url": "https://api.github.com/users/tmccombs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmccombs", "id": 2541726, "node_id": "MDQ6VXNlcjI1NDE3MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2541726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmccombs", "html_url": "https://github.com/tmccombs", "followers_url": "https://api.github.com/users/tmccombs/followers", "following_url": "https://api.github.com/users/tmccombs/following{/other_user}", "gists_url": "https://api.github.com/users/tmccombs/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmccombs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmccombs/subscriptions", "organizations_url": "https://api.github.com/users/tmccombs/orgs", "repos_url": "https://api.github.com/users/tmccombs/repos", "events_url": "https://api.github.com/users/tmccombs/events{/privacy}", "received_events_url": "https://api.github.com/users/tmccombs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66d88c9a184e4a93a1ce5383a7bec75b435bc423", "url": "https://api.github.com/repos/rust-lang/rust/commits/66d88c9a184e4a93a1ce5383a7bec75b435bc423", "html_url": "https://github.com/rust-lang/rust/commit/66d88c9a184e4a93a1ce5383a7bec75b435bc423"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "b5832c5f7d52300b7ec655795e39b32e52d10e13", "filename": "library/std/src/sync/mutex.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a65afd82d1020f15d347268c077d4b7220268abc/library%2Fstd%2Fsrc%2Fsync%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a65afd82d1020f15d347268c077d4b7220268abc/library%2Fstd%2Fsrc%2Fsync%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Fmutex.rs?ref=a65afd82d1020f15d347268c077d4b7220268abc", "patch": "@@ -365,11 +365,11 @@ impl<T: ?Sized> Mutex<T> {\n \n     /// Clear the poisoned state from a mutex\n     ///\n-    /// If the mutex is poisoned, it will remain poisoned until this function is called\n-    /// with a mutex guard. This allows recovering from a poisoned state and marking\n-    /// that it has recovered. For example, if the value is overwritten by a known-good value,\n-    /// then the mutex can be marked as un-poisoned. Or possibly, the value could be inspected to\n-    /// determine if it is in a consistent state, and if so the poison is removed.\n+    /// If the mutex is poisoned, it will remain poisoned until this function is called. This\n+    /// allows recovering from a poisoned state and marking that it has recovered. For example, if\n+    /// the value is overwritten by a known-good value, then the mutex can be marked as\n+    /// un-poisoned. Or possibly, the value could be inspected to determine if it is in a\n+    /// consistent state, and if so the poison is removed.\n     ///\n     /// # Examples\n     ///"}, {"sha": "8d772a87bff2ecdb2836fc9f7626bc7eb87d63b7", "filename": "library/std/src/sync/rwlock.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a65afd82d1020f15d347268c077d4b7220268abc/library%2Fstd%2Fsrc%2Fsync%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a65afd82d1020f15d347268c077d4b7220268abc/library%2Fstd%2Fsrc%2Fsync%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Frwlock.rs?ref=a65afd82d1020f15d347268c077d4b7220268abc", "patch": "@@ -368,11 +368,11 @@ impl<T: ?Sized> RwLock<T> {\n \n     /// Clear the poisoned state from a lock\n     ///\n-    /// If the lock is poisoned, it will remain poisoned until this function is called\n-    /// with a write guard. This allows recovering from a poisoned state and marking\n-    /// that it has recovered. For example, if the value is overwritten by a known-good value,\n-    /// then the mutex can be marked as un-poisoned. Or possibly, the value could be inspected to\n-    /// determine if it is in a consistent state, and if so the poison is removed.\n+    /// If the lock is poisoned, it will remain poisoned until this function is called. This allows\n+    /// recovering from a poisoned state and marking that it has recovered. For example, if the\n+    /// value is overwritten by a known-good value, then the mutex can be marked as un-poisoned. Or\n+    /// possibly, the value could be inspected to determine if it is in a consistent state, and if\n+    /// so the poison is removed.\n     ///\n     /// # Examples\n     ///"}]}