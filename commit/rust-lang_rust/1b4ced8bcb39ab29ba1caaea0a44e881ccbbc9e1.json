{"sha": "1b4ced8bcb39ab29ba1caaea0a44e881ccbbc9e1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiNGNlZDhiY2IzOWFiMjliYTFjYWFlYTBhNDRlODgxY2NiYmM5ZTE=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-03-29T17:04:48Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-04-28T16:51:14Z"}, "message": "get rid of prec.rs\n\nprec.rs no longer had much to do with precedence; the token->binop\nfunction fits better in token.rs, and the one-liner defining the\nprecedence of 'as' can go next to the other precedence stuff in\nast_util.rs", "tree": {"sha": "f4be55a431eebc2f610f986fff3b57146c56c8c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4be55a431eebc2f610f986fff3b57146c56c8c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b4ced8bcb39ab29ba1caaea0a44e881ccbbc9e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b4ced8bcb39ab29ba1caaea0a44e881ccbbc9e1", "html_url": "https://github.com/rust-lang/rust/commit/1b4ced8bcb39ab29ba1caaea0a44e881ccbbc9e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b4ced8bcb39ab29ba1caaea0a44e881ccbbc9e1/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f8d30a128aa8a75a3304e0e91178dcfb5535554", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f8d30a128aa8a75a3304e0e91178dcfb5535554", "html_url": "https://github.com/rust-lang/rust/commit/9f8d30a128aa8a75a3304e0e91178dcfb5535554"}], "stats": {"total": 92, "additions": 34, "deletions": 58}, "files": [{"sha": "c28d369e7f8ad671c0de48ad3b23963d637595a9", "filename": "src/libsyntax/ast_util.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1b4ced8bcb39ab29ba1caaea0a44e881ccbbc9e1/src%2Flibsyntax%2Fast_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b4ced8bcb39ab29ba1caaea0a44e881ccbbc9e1/src%2Flibsyntax%2Fast_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_util.rs?ref=1b4ced8bcb39ab29ba1caaea0a44e881ccbbc9e1", "patch": "@@ -355,6 +355,10 @@ pub fn operator_prec(op: ast::binop) -> uint {\n   }\n }\n \n+/// Precedence of the `as` operator, which is a binary operator\n+/// not appearing in the prior table.\n+pub static as_prec: uint = 11u;\n+\n pub fn dtor_ty() -> @ast::Ty {\n     @ast::Ty {id: 0, node: ty_nil, span: dummy_sp()}\n }"}, {"sha": "d27d788e23a953ebde9cbec7387a69449dcdba65", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1b4ced8bcb39ab29ba1caaea0a44e881ccbbc9e1/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b4ced8bcb39ab29ba1caaea0a44e881ccbbc9e1/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=1b4ced8bcb39ab29ba1caaea0a44e881ccbbc9e1", "patch": "@@ -36,9 +36,6 @@ pub mod attr;\n /// Common routines shared by parser mods\n pub mod common;\n \n-/// Functions dealing with operator precedence\n-pub mod prec;\n-\n /// Routines the parser uses to classify AST nodes\n pub mod classify;\n "}, {"sha": "823a76171967fcb19237ba02f053328aa52cfd32", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1b4ced8bcb39ab29ba1caaea0a44e881ccbbc9e1/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b4ced8bcb39ab29ba1caaea0a44e881ccbbc9e1/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=1b4ced8bcb39ab29ba1caaea0a44e881ccbbc9e1", "patch": "@@ -58,7 +58,7 @@ use ast::{view_item_, view_item_extern_mod, view_item_use};\n use ast::{view_path, view_path_glob, view_path_list, view_path_simple};\n use ast::visibility;\n use ast;\n-use ast_util::{ident_to_path, operator_prec};\n+use ast_util::{as_prec, ident_to_path, operator_prec};\n use ast_util;\n use codemap::{span, BytePos, spanned, mk_sp};\n use codemap;\n@@ -82,9 +82,8 @@ use parse::obsolete::ObsoleteMode;\n use parse::obsolete::{ObsoleteLifetimeNotation, ObsoleteConstManagedPointer};\n use parse::obsolete::{ObsoletePurity, ObsoleteStaticMethod};\n use parse::obsolete::{ObsoleteConstItem, ObsoleteFixedLengthVectorType};\n-use parse::prec::{as_prec, token_to_binop};\n use parse::token::{can_begin_expr, is_ident, is_ident_or_path};\n-use parse::token::{is_plain_ident, INTERPOLATED, special_idents};\n+use parse::token::{is_plain_ident, INTERPOLATED, special_idents, token_to_binop};\n use parse::token;\n use parse::{new_sub_parser_from_file, next_node_id, ParseSess};\n use opt_vec;"}, {"sha": "5f37c922c1e10f49e518091d0dfe4a4403ae0409", "filename": "src/libsyntax/parse/prec.rs", "status": "removed", "additions": 0, "deletions": 52, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/9f8d30a128aa8a75a3304e0e91178dcfb5535554/src%2Flibsyntax%2Fparse%2Fprec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f8d30a128aa8a75a3304e0e91178dcfb5535554/src%2Flibsyntax%2Fparse%2Fprec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fprec.rs?ref=9f8d30a128aa8a75a3304e0e91178dcfb5535554", "patch": "@@ -1,52 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-use ast;\n-use ast::*;\n-use parse::token::*;\n-use parse::token::Token;\n-\n-/// Unary operators have higher precedence than binary\n-pub static unop_prec: uint = 100u;\n-\n-/**\n- * Precedence of the `as` operator, which is a binary operator\n- * but is not represented in the precedence table.\n- */\n-pub static as_prec: uint = 11u;\n-\n-/**\n- * Maps a token to a record specifying the corresponding binary\n- * operator and its precedence\n- */\n-pub fn token_to_binop(tok: Token) -> Option<ast::binop> {\n-  match tok {\n-      BINOP(STAR)    => Some(mul),\n-      BINOP(SLASH)   => Some(quot),\n-      BINOP(PERCENT) => Some(rem),\n-      // 'as' sits between here with 11\n-      BINOP(PLUS)    => Some(add),\n-      BINOP(MINUS)   => Some(subtract),\n-      BINOP(SHL)     => Some(shl),\n-      BINOP(SHR)     => Some(shr),\n-      BINOP(AND)     => Some(bitand),\n-      BINOP(CARET)   => Some(bitxor),\n-      BINOP(OR)      => Some(bitor),\n-      LT             => Some(lt),\n-      LE             => Some(le),\n-      GE             => Some(ge),\n-      GT             => Some(gt),\n-      EQEQ           => Some(eq),\n-      NE             => Some(ne),\n-      ANDAND         => Some(and),\n-      OROR           => Some(or),\n-      _              => None\n-  }\n-}"}, {"sha": "0327a3b80da87967f34524d4870d3eceb23c761b", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/1b4ced8bcb39ab29ba1caaea0a44e881ccbbc9e1/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b4ced8bcb39ab29ba1caaea0a44e881ccbbc9e1/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=1b4ced8bcb39ab29ba1caaea0a44e881ccbbc9e1", "patch": "@@ -364,6 +364,34 @@ impl<'self> to_bytes::IterBytes for StringRef<'self> {\n     }\n }\n \n+/**\n+ * Maps a token to a record specifying the corresponding binary\n+ * operator\n+ */\n+pub fn token_to_binop(tok: Token) -> Option<ast::binop> {\n+  match tok {\n+      BINOP(STAR)    => Some(ast::mul),\n+      BINOP(SLASH)   => Some(ast::quot),\n+      BINOP(PERCENT) => Some(ast::rem),\n+      BINOP(PLUS)    => Some(ast::add),\n+      BINOP(MINUS)   => Some(ast::subtract),\n+      BINOP(SHL)     => Some(ast::shl),\n+      BINOP(SHR)     => Some(ast::shr),\n+      BINOP(AND)     => Some(ast::bitand),\n+      BINOP(CARET)   => Some(ast::bitxor),\n+      BINOP(OR)      => Some(ast::bitor),\n+      LT             => Some(ast::lt),\n+      LE             => Some(ast::le),\n+      GE             => Some(ast::ge),\n+      GT             => Some(ast::gt),\n+      EQEQ           => Some(ast::eq),\n+      NE             => Some(ast::ne),\n+      ANDAND         => Some(ast::and),\n+      OROR           => Some(ast::or),\n+      _              => None\n+  }\n+}\n+\n pub struct ident_interner {\n     priv interner: Interner<@~str>,\n }"}]}