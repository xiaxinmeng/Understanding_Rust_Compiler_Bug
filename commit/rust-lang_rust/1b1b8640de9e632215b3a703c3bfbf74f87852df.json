{"sha": "1b1b8640de9e632215b3a703c3bfbf74f87852df", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiMWI4NjQwZGU5ZTYzMjIxNWIzYTcwM2MzYmZiZjc0Zjg3ODUyZGY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-03-30T06:51:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-03-30T06:51:40Z"}, "message": "Rollup merge of #59512 - euclio:stdio-locks, r=sfackler\n\nimplement `AsRawFd` for stdio locks\n\ncc https://github.com/rust-lang/rfcs/issues/2074.", "tree": {"sha": "d68d3b182a55f13f922ef2f8c2f7a65dd973324b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d68d3b182a55f13f922ef2f8c2f7a65dd973324b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b1b8640de9e632215b3a703c3bfbf74f87852df", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcnxH8CRBK7hj4Ov3rIwAAdHIIAGjCsL26hk+h9yRtWlPhsuFM\nAosdrvEtXxxqhF98XebGpo5kzcowTLhsIUFuueeBO5F2eqT0iDdxm3Nx3914KBuC\nCanAEdfWqO1jZjNKq1a3vRaxMotSjvokfePD/OJWgJma5N97FilP4n6mouxQEGKy\nXk3zD3EPwftFUCp1jPDTDrH8jvoQHUsvfeaRXjhfnhsUtwznw3WW+82+nsxqaD1g\nuXKyI/wI5Bouu0CdyLIrM6jzFFw8SU9KASX9cy16Cvc//ACj2+INaOiLHdROrOZR\nEostJJLzQnStdHS/tCcYqNI9ri2+6lsV0PcDHDTertIlKUFD/fUBvnmfOIq+GNw=\n=4GrP\n-----END PGP SIGNATURE-----\n", "payload": "tree d68d3b182a55f13f922ef2f8c2f7a65dd973324b\nparent 3de28218043d76d4fe5c796a6ae496fa1a57f626\nparent e995fa8aeaa4bfe92d270ddb9e1dd8b5516eaa25\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1553928700 +0100\ncommitter GitHub <noreply@github.com> 1553928700 +0100\n\nRollup merge of #59512 - euclio:stdio-locks, r=sfackler\n\nimplement `AsRawFd` for stdio locks\n\ncc https://github.com/rust-lang/rfcs/issues/2074.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b1b8640de9e632215b3a703c3bfbf74f87852df", "html_url": "https://github.com/rust-lang/rust/commit/1b1b8640de9e632215b3a703c3bfbf74f87852df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b1b8640de9e632215b3a703c3bfbf74f87852df/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3de28218043d76d4fe5c796a6ae496fa1a57f626", "url": "https://api.github.com/repos/rust-lang/rust/commits/3de28218043d76d4fe5c796a6ae496fa1a57f626", "html_url": "https://github.com/rust-lang/rust/commit/3de28218043d76d4fe5c796a6ae496fa1a57f626"}, {"sha": "e995fa8aeaa4bfe92d270ddb9e1dd8b5516eaa25", "url": "https://api.github.com/repos/rust-lang/rust/commits/e995fa8aeaa4bfe92d270ddb9e1dd8b5516eaa25", "html_url": "https://github.com/rust-lang/rust/commit/e995fa8aeaa4bfe92d270ddb9e1dd8b5516eaa25"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "c21d216478fb7a2c8e3d8482fb2d2556cc742725", "filename": "src/libstd/sys/redox/ext/io.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/1b1b8640de9e632215b3a703c3bfbf74f87852df/src%2Flibstd%2Fsys%2Fredox%2Fext%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b1b8640de9e632215b3a703c3bfbf74f87852df/src%2Flibstd%2Fsys%2Fredox%2Fext%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Fext%2Fio.rs?ref=1b1b8640de9e632215b3a703c3bfbf74f87852df", "patch": "@@ -115,6 +115,21 @@ impl AsRawFd for io::Stderr {\n     fn as_raw_fd(&self) -> RawFd { 2 }\n }\n \n+#[stable(feature = \"asraw_stdio_locks\", since = \"1.35.0\")]\n+impl<'a> AsRawFd for io::StdinLock<'a> {\n+    fn as_raw_fd(&self) -> RawFd { 0 }\n+}\n+\n+#[stable(feature = \"asraw_stdio_locks\", since = \"1.35.0\")]\n+impl<'a> AsRawFd for io::StdoutLock<'a> {\n+    fn as_raw_fd(&self) -> RawFd { 1 }\n+}\n+\n+#[stable(feature = \"asraw_stdio_locks\", since = \"1.35.0\")]\n+impl<'a> AsRawFd for io::StderrLock<'a> {\n+    fn as_raw_fd(&self) -> RawFd { 2 }\n+}\n+\n #[stable(feature = \"from_raw_os\", since = \"1.1.0\")]\n impl FromRawFd for net::TcpStream {\n     unsafe fn from_raw_fd(fd: RawFd) -> net::TcpStream {"}, {"sha": "6bcc59495e3635511bd7d63bbf807d8ec44e8a33", "filename": "src/libstd/sys/unix/ext/io.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/1b1b8640de9e632215b3a703c3bfbf74f87852df/src%2Flibstd%2Fsys%2Funix%2Fext%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b1b8640de9e632215b3a703c3bfbf74f87852df/src%2Flibstd%2Fsys%2Funix%2Fext%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fext%2Fio.rs?ref=1b1b8640de9e632215b3a703c3bfbf74f87852df", "patch": "@@ -95,3 +95,18 @@ impl AsRawFd for io::Stdout {\n impl AsRawFd for io::Stderr {\n     fn as_raw_fd(&self) -> RawFd { libc::STDERR_FILENO }\n }\n+\n+#[stable(feature = \"asraw_stdio_locks\", since = \"1.35.0\")]\n+impl<'a> AsRawFd for io::StdinLock<'a> {\n+    fn as_raw_fd(&self) -> RawFd { libc::STDIN_FILENO }\n+}\n+\n+#[stable(feature = \"asraw_stdio_locks\", since = \"1.35.0\")]\n+impl<'a> AsRawFd for io::StdoutLock<'a> {\n+    fn as_raw_fd(&self) -> RawFd { libc::STDOUT_FILENO }\n+}\n+\n+#[stable(feature = \"asraw_stdio_locks\", since = \"1.35.0\")]\n+impl<'a> AsRawFd for io::StderrLock<'a> {\n+    fn as_raw_fd(&self) -> RawFd { libc::STDERR_FILENO }\n+}"}, {"sha": "ec47c2e9d5afd0153fbbc8bbfc777eb5f875b821", "filename": "src/libstd/sys/windows/ext/io.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/1b1b8640de9e632215b3a703c3bfbf74f87852df/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b1b8640de9e632215b3a703c3bfbf74f87852df/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Fio.rs?ref=1b1b8640de9e632215b3a703c3bfbf74f87852df", "patch": "@@ -83,6 +83,27 @@ impl AsRawHandle for io::Stderr {\n     }\n }\n \n+#[stable(feature = \"asraw_stdio_locks\", since = \"1.35.0\")]\n+impl<'a> AsRawHandle for io::StdinLock<'a> {\n+    fn as_raw_handle(&self) -> RawHandle {\n+        unsafe { c::GetStdHandle(c::STD_INPUT_HANDLE) as RawHandle }\n+    }\n+}\n+\n+#[stable(feature = \"asraw_stdio_locks\", since = \"1.35.0\")]\n+impl<'a> AsRawHandle for io::StdoutLock<'a> {\n+    fn as_raw_handle(&self) -> RawHandle {\n+        unsafe { c::GetStdHandle(c::STD_OUTPUT_HANDLE) as RawHandle }\n+    }\n+}\n+\n+#[stable(feature = \"asraw_stdio_locks\", since = \"1.35.0\")]\n+impl<'a> AsRawHandle for io::StderrLock<'a> {\n+    fn as_raw_handle(&self) -> RawHandle {\n+        unsafe { c::GetStdHandle(c::STD_ERROR_HANDLE) as RawHandle }\n+    }\n+}\n+\n #[stable(feature = \"from_raw_os\", since = \"1.1.0\")]\n impl FromRawHandle for fs::File {\n     unsafe fn from_raw_handle(handle: RawHandle) -> fs::File {"}]}