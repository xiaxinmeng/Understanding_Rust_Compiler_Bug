{"sha": "7618163a1caf0d6dfa5618c8369742720c90ef6b", "node_id": "C_kwDOAAsO6NoAKDc2MTgxNjNhMWNhZjBkNmRmYTU2MThjODM2OTc0MjcyMGM5MGVmNmI", "commit": {"author": {"name": "Bryan Garza", "email": "1396101+bryangarza@users.noreply.github.com", "date": "2023-01-06T16:39:24Z"}, "committer": {"name": "Bryan Garza", "email": "1396101+bryangarza@users.noreply.github.com", "date": "2023-01-23T23:56:22Z"}, "message": "Add comments and remove unnecessary code", "tree": {"sha": "fdfa3f20af58bb9e609ad251dd1b9a6b64b665de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fdfa3f20af58bb9e609ad251dd1b9a6b64b665de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7618163a1caf0d6dfa5618c8369742720c90ef6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7618163a1caf0d6dfa5618c8369742720c90ef6b", "html_url": "https://github.com/rust-lang/rust/commit/7618163a1caf0d6dfa5618c8369742720c90ef6b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7618163a1caf0d6dfa5618c8369742720c90ef6b/comments", "author": {"login": "bryangarza", "id": 1396101, "node_id": "MDQ6VXNlcjEzOTYxMDE=", "avatar_url": "https://avatars.githubusercontent.com/u/1396101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryangarza", "html_url": "https://github.com/bryangarza", "followers_url": "https://api.github.com/users/bryangarza/followers", "following_url": "https://api.github.com/users/bryangarza/following{/other_user}", "gists_url": "https://api.github.com/users/bryangarza/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryangarza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryangarza/subscriptions", "organizations_url": "https://api.github.com/users/bryangarza/orgs", "repos_url": "https://api.github.com/users/bryangarza/repos", "events_url": "https://api.github.com/users/bryangarza/events{/privacy}", "received_events_url": "https://api.github.com/users/bryangarza/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bryangarza", "id": 1396101, "node_id": "MDQ6VXNlcjEzOTYxMDE=", "avatar_url": "https://avatars.githubusercontent.com/u/1396101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryangarza", "html_url": "https://github.com/bryangarza", "followers_url": "https://api.github.com/users/bryangarza/followers", "following_url": "https://api.github.com/users/bryangarza/following{/other_user}", "gists_url": "https://api.github.com/users/bryangarza/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryangarza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryangarza/subscriptions", "organizations_url": "https://api.github.com/users/bryangarza/orgs", "repos_url": "https://api.github.com/users/bryangarza/repos", "events_url": "https://api.github.com/users/bryangarza/events{/privacy}", "received_events_url": "https://api.github.com/users/bryangarza/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9982ea24a55a1912198bc49578f7af090e487e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9982ea24a55a1912198bc49578f7af090e487e9", "html_url": "https://github.com/rust-lang/rust/commit/f9982ea24a55a1912198bc49578f7af090e487e9"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "a5bc121485d8cde6a3beb7dd0b1a601b32e1c445", "filename": "compiler/rustc_const_eval/src/const_eval/machine.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7618163a1caf0d6dfa5618c8369742720c90ef6b/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7618163a1caf0d6dfa5618c8369742720c90ef6b/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Fmachine.rs?ref=7618163a1caf0d6dfa5618c8369742720c90ef6b", "patch": "@@ -561,11 +561,6 @@ impl<'mir, 'tcx> interpret::Machine<'mir, 'tcx> for CompileTimeInterpreter<'mir,\n         throw_unsup_format!(\"pointer arithmetic or comparison is not supported at compile-time\");\n     }\n \n-    // Not used here, but used by Miri (see `src/tools/miri/src/machine.rs`).\n-    fn before_terminator(_ecx: &mut InterpCx<'mir, 'tcx, Self>) -> InterpResult<'tcx> {\n-        Ok(())\n-    }\n-\n     fn increment_const_eval_counter(ecx: &mut InterpCx<'mir, 'tcx, Self>) -> InterpResult<'tcx> {\n         // The step limit has already been hit in a previous call to `increment_const_eval_counter`.\n         if ecx.machine.steps_remaining == 0 {"}, {"sha": "549bc65d6d79c7858a144fd038c107f1a07d85e5", "filename": "compiler/rustc_middle/src/mir/syntax.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7618163a1caf0d6dfa5618c8369742720c90ef6b/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fsyntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7618163a1caf0d6dfa5618c8369742720c90ef6b/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fsyntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fsyntax.rs?ref=7618163a1caf0d6dfa5618c8369742720c90ef6b", "patch": "@@ -286,10 +286,7 @@ pub enum StatementKind<'tcx> {\n     /// This is permitted for both generators and ADTs. This does not necessarily write to the\n     /// entire place; instead, it writes to the minimum set of bytes as required by the layout for\n     /// the type.\n-    SetDiscriminant {\n-        place: Box<Place<'tcx>>,\n-        variant_index: VariantIdx,\n-    },\n+    SetDiscriminant { place: Box<Place<'tcx>>, variant_index: VariantIdx },\n \n     /// Deinitializes the place.\n     ///\n@@ -358,6 +355,10 @@ pub enum StatementKind<'tcx> {\n     /// This avoids adding a new block and a terminator for simple intrinsics.\n     Intrinsic(Box<NonDivergingIntrinsic<'tcx>>),\n \n+    /// Instructs the const eval interpreter to increment a counter; this counter is used to track\n+    /// how many steps the interpreter has taken. It is used to prevent the user from writing const\n+    /// code that runs for too long or infinitely. Other than in the const eval interpreter, this\n+    /// is a no-op.\n     ConstEvalCounter,\n \n     /// No-op. Useful for deleting instructions without affecting statement indices."}, {"sha": "76db4a09d91533bab1e601ce5e78a7f9c06d2281", "filename": "compiler/rustc_mir_transform/src/ctfe_limit.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7618163a1caf0d6dfa5618c8369742720c90ef6b/compiler%2Frustc_mir_transform%2Fsrc%2Fctfe_limit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7618163a1caf0d6dfa5618c8369742720c90ef6b/compiler%2Frustc_mir_transform%2Fsrc%2Fctfe_limit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fctfe_limit.rs?ref=7618163a1caf0d6dfa5618c8369742720c90ef6b", "patch": "@@ -1,3 +1,5 @@\n+//! A pass that inserts the `ConstEvalCounter` instruction into any blocks that have a back edge\n+//! (thus indicating there is a loop in the CFG), or whose terminator is a function call.\n use crate::MirPass;\n \n use rustc_middle::mir::{"}]}