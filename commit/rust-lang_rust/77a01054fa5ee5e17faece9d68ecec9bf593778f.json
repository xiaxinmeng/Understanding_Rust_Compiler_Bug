{"sha": "77a01054fa5ee5e17faece9d68ecec9bf593778f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3YTAxMDU0ZmE1ZWU1ZTE3ZmFlY2U5ZDY4ZWNlYzliZjU5Mzc3OGY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-21T23:34:26Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-21T23:34:26Z"}, "message": "rustc: Generate crates with #ast", "tree": {"sha": "d03b035c1695979ce5d67215aec30475650cd0b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d03b035c1695979ce5d67215aec30475650cd0b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77a01054fa5ee5e17faece9d68ecec9bf593778f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77a01054fa5ee5e17faece9d68ecec9bf593778f", "html_url": "https://github.com/rust-lang/rust/commit/77a01054fa5ee5e17faece9d68ecec9bf593778f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77a01054fa5ee5e17faece9d68ecec9bf593778f/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a896eb326e00611434462191ca16efd38651e71c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a896eb326e00611434462191ca16efd38651e71c", "html_url": "https://github.com/rust-lang/rust/commit/a896eb326e00611434462191ca16efd38651e71c"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "3476584aecece6fb168f3fce81db0012ca967a30", "filename": "src/comp/syntax/ext/qquote.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/77a01054fa5ee5e17faece9d68ecec9bf593778f/src%2Fcomp%2Fsyntax%2Fext%2Fqquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77a01054fa5ee5e17faece9d68ecec9bf593778f/src%2Fcomp%2Fsyntax%2Fext%2Fqquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fext%2Fqquote.rs?ref=77a01054fa5ee5e17faece9d68ecec9bf593778f", "patch": "@@ -30,6 +30,16 @@ iface qq_helper {\n     fn mk_parse_fn(ext_ctxt,span) -> @ast::expr;\n     fn get_fold_fn() -> str;\n }\n+\n+impl of qq_helper for @ast::crate {\n+    fn span() -> span {self.span}\n+    fn visit(cx: aq_ctxt, v: vt<aq_ctxt>) {visit_crate(*self, cx, v);}\n+    fn extract_mac() -> option<ast::mac_> {fail}\n+    fn mk_parse_fn(cx: ext_ctxt, sp: span) -> @ast::expr {\n+        mk_path(cx, sp, [\"syntax\", \"ext\", \"qquote\", \"parse_crate\"])\n+    }\n+    fn get_fold_fn() -> str {\"fold_crate\"}\n+}\n impl of qq_helper for @ast::expr {\n     fn span() -> span {self.span}\n     fn visit(cx: aq_ctxt, v: vt<aq_ctxt>) {visit_expr(self, cx, v);}\n@@ -145,6 +155,7 @@ fn expand_ast(ecx: ext_ctxt, _sp: span,\n     let body = get_mac_body(ecx,_sp,body);\n \n     ret alt what {\n+      \"crate\" {finish(ecx, body, parse_crate)}\n       \"expr\" {finish(ecx, body, parser::parse_expr)}\n       \"ty\" {finish(ecx, body, parse_ty)}\n       \"item\" {finish(ecx, body, parse_item)}\n@@ -154,6 +165,10 @@ fn expand_ast(ecx: ext_ctxt, _sp: span,\n     };\n }\n \n+fn parse_crate(p: parser) -> @ast::crate {\n+    parser::parse_crate_mod(p, [])\n+}\n+\n fn parse_ty(p: parser) -> @ast::ty {\n     parser::parse_ty(p, false)\n }\n@@ -265,6 +280,9 @@ fn replace<T>(node: T, repls: [fragment], ff: fn (ast_fold, T) -> T)\n                  with *aft};\n     ret ff(make_fold(f_pre), node);\n }\n+fn fold_crate(f: ast_fold, &&n: @ast::crate) -> @ast::crate {\n+    @f.fold_crate(*n)\n+}\n fn fold_expr(f: ast_fold, &&n: @ast::expr) -> @ast::expr {f.fold_expr(n)}\n fn fold_ty(f: ast_fold, &&n: @ast::ty) -> @ast::ty {f.fold_ty(n)}\n fn fold_item(f: ast_fold, &&n: @ast::item) -> @ast::item {f.fold_item(n)}"}, {"sha": "7159d7310d67346f1b628f18cc54921214b211d8", "filename": "src/comp/syntax/print/pprust.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/77a01054fa5ee5e17faece9d68ecec9bf593778f/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77a01054fa5ee5e17faece9d68ecec9bf593778f/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs?ref=77a01054fa5ee5e17faece9d68ecec9bf593778f", "patch": "@@ -71,6 +71,10 @@ fn print_crate(cm: codemap, span_diagnostic: diagnostic::span_handler,\n           mutable cur_lit: 0u,\n           mutable boxes: boxes,\n           ann: ann};\n+    print_crate_(s, crate);\n+}\n+\n+fn print_crate_(s: ps, &&crate: @ast::crate) {\n     print_mod(s, crate.node.module, crate.node.attrs);\n     print_remaining_comments(s);\n     eof(s.s);"}, {"sha": "f5fa14dc85783247526db76a7416ae06e8a3f2ba", "filename": "src/test/run-pass/qquote.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/77a01054fa5ee5e17faece9d68ecec9bf593778f/src%2Ftest%2Frun-pass%2Fqquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77a01054fa5ee5e17faece9d68ecec9bf593778f/src%2Ftest%2Frun-pass%2Fqquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fqquote.rs?ref=77a01054fa5ee5e17faece9d68ecec9bf593778f", "patch": "@@ -88,6 +88,9 @@ fn main() {\n     let y = #ast{2};\n     let test3 = #ast{$(x) + $(y)};\n     check_pp(test3, pprust::print_expr, \"1 + 2\");\n+\n+    let crate = #ast(crate) { fn a() { } };\n+    check_pp(crate, pprust::print_crate_, \"fn a() { }\\n\");\n }\n \n fn check_pp<T>(expr: T, f: fn(pprust::ps, T), expect: str) {"}]}