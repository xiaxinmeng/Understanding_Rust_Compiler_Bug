{"sha": "fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6", "node_id": "C_kwDOAAsO6NoAKGZkNGYxMWRkNzY4ZTdkZTUwMTViNTdlZWY2YjE4YzFmNGQzMWUxZTY", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-07-09T05:58:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-09T05:58:03Z"}, "message": "Rollup merge of #98350 - pcwalton:dwarf5, r=michaelwoerister\n\nImplement support for DWARF version 5.\n\nDWARF version 5 brings a number of improvements over version 4. Quoting from\nthe announcement [1]:\n\n> Version 5 incorporates improvements in many areas: better data compression,\n> separation of debugging data from executable files, improved description of\n> macros and source files, faster searching for symbols, improved debugging\n> optimized code, as well as numerous improvements in functionality and\n> performance.\n\nOn platforms where DWARF version 5 is supported (Linux, primarily), this commit\nadds support for it behind a new `-Z dwarf-version=5` flag.\n\n[1]: https://dwarfstd.org/Public_Review.php\n\nr? ``@michaelwoerister``", "tree": {"sha": "f9466045a56d765104b6f6d1d70f0bd77c0b26a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f9466045a56d765104b6f6d1d70f0bd77c0b26a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiyRjrCRBK7hj4Ov3rIwAAF1oIAGeDTK/s6QF7MpyuIqdUCU8S\nnoMxVvLLVL0vmX7qOC1X9922qT0iK483iXXYPEqs5sh9B3NXfbjF1S5KB+jRuT0k\nAK3FoQTDJtGX0+Qp9UU1sxdZrlFT/RZbyiiaM289FkYjVHoe7fj7MsdT4kFFgHj2\n1y8YONMNx+8uLEOV9Yv5S+nK1Hg10EI37PYzlQGYeO3xTk5m6QzdU7yJRIwwL0jo\nJX/CE+RENOM0JvDpEF9FWZhucmdelnKIEI1SCo0mse1p3YfWUSB/e1uvMZyhCouQ\nI7HltJ1vHrHYiYkBo5dmLdB2SSndjNfB6MoFuBO69bbqJJTV4NXlcy70JA5FebQ=\n=Z7eD\n-----END PGP SIGNATURE-----\n", "payload": "tree f9466045a56d765104b6f6d1d70f0bd77c0b26a2\nparent db78ab70a88a0a5e89031d7ee4eccec835dcdbde\nparent 1e0ad0c1d4fdca7a37221e05fd5e39739d9084f5\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1657346283 +0530\ncommitter GitHub <noreply@github.com> 1657346283 +0530\n\nRollup merge of #98350 - pcwalton:dwarf5, r=michaelwoerister\n\nImplement support for DWARF version 5.\n\nDWARF version 5 brings a number of improvements over version 4. Quoting from\nthe announcement [1]:\n\n> Version 5 incorporates improvements in many areas: better data compression,\n> separation of debugging data from executable files, improved description of\n> macros and source files, faster searching for symbols, improved debugging\n> optimized code, as well as numerous improvements in functionality and\n> performance.\n\nOn platforms where DWARF version 5 is supported (Linux, primarily), this commit\nadds support for it behind a new `-Z dwarf-version=5` flag.\n\n[1]: https://dwarfstd.org/Public_Review.php\n\nr? ``@michaelwoerister``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6", "html_url": "https://github.com/rust-lang/rust/commit/fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db78ab70a88a0a5e89031d7ee4eccec835dcdbde", "url": "https://api.github.com/repos/rust-lang/rust/commits/db78ab70a88a0a5e89031d7ee4eccec835dcdbde", "html_url": "https://github.com/rust-lang/rust/commit/db78ab70a88a0a5e89031d7ee4eccec835dcdbde"}, {"sha": "1e0ad0c1d4fdca7a37221e05fd5e39739d9084f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e0ad0c1d4fdca7a37221e05fd5e39739d9084f5", "html_url": "https://github.com/rust-lang/rust/commit/1e0ad0c1d4fdca7a37221e05fd5e39739d9084f5"}], "stats": {"total": 80, "additions": 59, "deletions": 21}, "files": [{"sha": "730048d061b559201fb3e450de8c6d61e28812f1", "filename": "compiler/rustc_codegen_llvm/src/debuginfo/mod.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmod.rs?ref=fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6", "patch": "@@ -103,14 +103,14 @@ impl<'ll, 'tcx> CodegenUnitDebugContext<'ll, 'tcx> {\n             // for macOS to understand. For more info see #11352\n             // This can be overridden using --llvm-opts -dwarf-version,N.\n             // Android has the same issue (#22398)\n-            if let Some(version) = sess.target.dwarf_version {\n-                llvm::LLVMRustAddModuleFlag(\n-                    self.llmod,\n-                    llvm::LLVMModFlagBehavior::Warning,\n-                    \"Dwarf Version\\0\".as_ptr().cast(),\n-                    version,\n-                )\n-            }\n+            let dwarf_version =\n+                sess.opts.debugging_opts.dwarf_version.unwrap_or(sess.target.default_dwarf_version);\n+            llvm::LLVMRustAddModuleFlag(\n+                self.llmod,\n+                llvm::LLVMModFlagBehavior::Warning,\n+                \"Dwarf Version\\0\".as_ptr().cast(),\n+                dwarf_version,\n+            );\n \n             // Indicate that we want CodeView debug information on MSVC\n             if sess.target.is_like_msvc {"}, {"sha": "55827ff583affb6098928d32e4369927772f0c90", "filename": "compiler/rustc_interface/src/tests.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Ftests.rs?ref=fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6", "patch": "@@ -733,6 +733,7 @@ fn test_debugging_options_tracking_hash() {\n     tracked!(dep_info_omit_d_target, true);\n     tracked!(drop_tracking, true);\n     tracked!(dual_proc_macros, true);\n+    tracked!(dwarf_version, Some(5));\n     tracked!(fewer_names, Some(true));\n     tracked!(force_unstable_if_unmarked, true);\n     tracked!(fuel, Some((\"abc\".to_string(), 99)));"}, {"sha": "8f1057b793fa3004562d673441ab974b0a75117e", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6", "patch": "@@ -1272,6 +1272,8 @@ options! {\n         computed `block` spans (one span encompassing a block's terminator and \\\n         all statements). If `-Z instrument-coverage` is also enabled, create \\\n         an additional `.html` file showing the computed coverage spans.\"),\n+    dwarf_version: Option<u32> = (None, parse_opt_number, [TRACKED],\n+        \"version of DWARF debug information to emit (default: 2 or 4, depending on platform)\"),\n     emit_stack_sizes: bool = (false, parse_bool, [UNTRACKED],\n         \"emit a section containing stack size metadata (default: no)\"),\n     fewer_names: Option<bool> = (None, parse_opt_bool, [TRACKED],"}, {"sha": "1cccef2f64fec4809cb1e89ba943af94816bd5e2", "filename": "compiler/rustc_session/src/session.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fsession.rs?ref=fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6", "patch": "@@ -1498,6 +1498,12 @@ fn validate_commandline_args_with_session_available(sess: &Session) {\n             ))\n         }\n     }\n+\n+    if let Some(dwarf_version) = sess.opts.debugging_opts.dwarf_version {\n+        if dwarf_version > 5 {\n+            sess.err(&format!(\"requested DWARF version {} is greater than 5\", dwarf_version));\n+        }\n+    }\n }\n \n /// Holds data on the current incremental compilation session, if there is one."}, {"sha": "dc06597db6fd4a99728a837362248300b3b3075a", "filename": "compiler/rustc_target/src/spec/android_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6/compiler%2Frustc_target%2Fsrc%2Fspec%2Fandroid_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6/compiler%2Frustc_target%2Fsrc%2Fspec%2Fandroid_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fandroid_base.rs?ref=fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6", "patch": "@@ -3,7 +3,7 @@ use crate::spec::TargetOptions;\n pub fn opts() -> TargetOptions {\n     let mut base = super::linux_base::opts();\n     base.os = \"android\".into();\n-    base.dwarf_version = Some(2);\n+    base.default_dwarf_version = 2;\n     base.position_independent_executables = true;\n     base.has_thread_local = false;\n     // This is for backward compatibility, see https://github.com/rust-lang/rust/issues/49867"}, {"sha": "713dc9a1f0ea729f81ba9609f6eb16cd328a3bd8", "filename": "compiler/rustc_target/src/spec/apple_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6/compiler%2Frustc_target%2Fsrc%2Fspec%2Fapple_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6/compiler%2Frustc_target%2Fsrc%2Fspec%2Fapple_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fapple_base.rs?ref=fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6", "patch": "@@ -28,7 +28,7 @@ pub fn opts(os: &'static str) -> TargetOptions {\n         executables: true,\n         families: cvs![\"unix\"],\n         is_like_osx: true,\n-        dwarf_version: Some(2),\n+        default_dwarf_version: 2,\n         frame_pointer: FramePointer::Always,\n         has_rpath: true,\n         dll_suffix: \".dylib\".into(),"}, {"sha": "c1e469746cb4c61e0ebee704f772b86e1726669b", "filename": "compiler/rustc_target/src/spec/dragonfly_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6/compiler%2Frustc_target%2Fsrc%2Fspec%2Fdragonfly_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6/compiler%2Frustc_target%2Fsrc%2Fspec%2Fdragonfly_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fdragonfly_base.rs?ref=fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6", "patch": "@@ -9,7 +9,7 @@ pub fn opts() -> TargetOptions {\n         has_rpath: true,\n         position_independent_executables: true,\n         relro_level: RelroLevel::Full,\n-        dwarf_version: Some(2),\n+        default_dwarf_version: 2,\n         ..Default::default()\n     }\n }"}, {"sha": "36312d26e3700ae52d8daaa3535c980f9051c005", "filename": "compiler/rustc_target/src/spec/freebsd_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6/compiler%2Frustc_target%2Fsrc%2Fspec%2Ffreebsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6/compiler%2Frustc_target%2Fsrc%2Fspec%2Ffreebsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Ffreebsd_base.rs?ref=fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6", "patch": "@@ -10,7 +10,7 @@ pub fn opts() -> TargetOptions {\n         position_independent_executables: true,\n         relro_level: RelroLevel::Full,\n         abi_return_struct_as_int: true,\n-        dwarf_version: Some(2),\n+        default_dwarf_version: 2,\n         ..Default::default()\n     }\n }"}, {"sha": "48ccb10f214268a566029cd0ee6b7bc258f9582f", "filename": "compiler/rustc_target/src/spec/mod.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs?ref=fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6", "patch": "@@ -1275,9 +1275,9 @@ pub struct TargetOptions {\n     pub is_like_msvc: bool,\n     /// Whether a target toolchain is like WASM.\n     pub is_like_wasm: bool,\n-    /// Version of DWARF to use if not using the default.\n+    /// Default supported version of DWARF on this platform.\n     /// Useful because some platforms (osx, bsd) only want up to DWARF2.\n-    pub dwarf_version: Option<u32>,\n+    pub default_dwarf_version: u32,\n     /// Whether the linker support GNU-like arguments such as -O. Defaults to true.\n     pub linker_is_gnu: bool,\n     /// The MinGW toolchain has a known issue that prevents it from correctly\n@@ -1539,7 +1539,7 @@ impl Default for TargetOptions {\n             is_like_windows: false,\n             is_like_msvc: false,\n             is_like_wasm: false,\n-            dwarf_version: None,\n+            default_dwarf_version: 4,\n             linker_is_gnu: true,\n             allows_weak_linkage: true,\n             has_rpath: false,\n@@ -1778,13 +1778,13 @@ impl Target {\n                     base.$key_name = s;\n                 }\n             } );\n-            ($key_name:ident, Option<u32>) => ( {\n+            ($key_name:ident, u32) => ( {\n                 let name = (stringify!($key_name)).replace(\"_\", \"-\");\n                 if let Some(s) = obj.remove(&name).and_then(|b| b.as_u64()) {\n                     if s < 1 || s > 5 {\n                         return Err(\"Not a valid DWARF version number\".into());\n                     }\n-                    base.$key_name = Some(s as u32);\n+                    base.$key_name = s as u32;\n                 }\n             } );\n             ($key_name:ident, Option<u64>) => ( {\n@@ -2143,7 +2143,7 @@ impl Target {\n         key!(is_like_windows, bool);\n         key!(is_like_msvc, bool);\n         key!(is_like_wasm, bool);\n-        key!(dwarf_version, Option<u32>);\n+        key!(default_dwarf_version, u32);\n         key!(linker_is_gnu, bool);\n         key!(allows_weak_linkage, bool);\n         key!(has_rpath, bool);\n@@ -2387,7 +2387,7 @@ impl ToJson for Target {\n         target_option_val!(is_like_windows);\n         target_option_val!(is_like_msvc);\n         target_option_val!(is_like_wasm);\n-        target_option_val!(dwarf_version);\n+        target_option_val!(default_dwarf_version);\n         target_option_val!(linker_is_gnu);\n         target_option_val!(allows_weak_linkage);\n         target_option_val!(has_rpath);"}, {"sha": "40ef04ba04382308a1d9ec8b206ca904c111cecf", "filename": "compiler/rustc_target/src/spec/netbsd_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6/compiler%2Frustc_target%2Fsrc%2Fspec%2Fnetbsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6/compiler%2Frustc_target%2Fsrc%2Fspec%2Fnetbsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fnetbsd_base.rs?ref=fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6", "patch": "@@ -11,7 +11,7 @@ pub fn opts() -> TargetOptions {\n         position_independent_executables: true,\n         relro_level: RelroLevel::Full,\n         use_ctors_section: true,\n-        dwarf_version: Some(2),\n+        default_dwarf_version: 2,\n         ..Default::default()\n     }\n }"}, {"sha": "51cecdd47eab29e4d90da31403e7779065b8bb77", "filename": "compiler/rustc_target/src/spec/openbsd_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6/compiler%2Frustc_target%2Fsrc%2Fspec%2Fopenbsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6/compiler%2Frustc_target%2Fsrc%2Fspec%2Fopenbsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fopenbsd_base.rs?ref=fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6", "patch": "@@ -11,7 +11,7 @@ pub fn opts() -> TargetOptions {\n         position_independent_executables: true,\n         frame_pointer: FramePointer::Always, // FIXME 43575: should be MayOmit...\n         relro_level: RelroLevel::Full,\n-        dwarf_version: Some(2),\n+        default_dwarf_version: 2,\n         ..Default::default()\n     }\n }"}, {"sha": "c5e86f17df741dc8490bdd514582417c1b9e7c31", "filename": "src/doc/unstable-book/src/compiler-flags/dwarf-version.md", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fdwarf-version.md", "raw_url": "https://github.com/rust-lang/rust/raw/fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fdwarf-version.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fdwarf-version.md?ref=fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6", "patch": "@@ -0,0 +1,9 @@\n+## `dwarf-version`\n+\n+This option controls the version of DWARF that the compiler emits, on platforms\n+that use DWARF to encode debug information. It takes one of the following\n+values:\n+\n+* `2`: DWARF version 2 (the default on certain platforms, like macOS).\n+* `4`: DWARF version 4 (the default on certain platforms, like Linux).\n+* `5`: DWARF version 5."}, {"sha": "f41e6bd55be7ddb2a07a1fbccc8ce65577518f52", "filename": "src/test/assembly/dwarf5.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6/src%2Ftest%2Fassembly%2Fdwarf5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6/src%2Ftest%2Fassembly%2Fdwarf5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fassembly%2Fdwarf5.rs?ref=fd4f11dd768e7de5015b57eef6b18c1f4d31e1e6", "patch": "@@ -0,0 +1,20 @@\n+// Makes sure that `-Z dwarf-version=5` causes `rustc` to emit DWARF version 5.\n+// assembly-output: emit-asm\n+// compile-flags: -g --target x86_64-unknown-linux-gnu -Z dwarf-version=5\n+// needs-llvm-components: x86\n+\n+#![feature(no_core, lang_items)]\n+#![crate_type = \"rlib\"]\n+#![no_core]\n+\n+#[lang = \"sized\"]\n+trait Sized {}\n+#[lang = \"copy\"]\n+trait Copy {}\n+\n+pub fn wibble() {}\n+\n+// CHECK: .section .debug_info\n+// CHECK-NOT: .short 2\n+// CHECK-NOT: .short 4\n+// CHECK: .short 5"}]}