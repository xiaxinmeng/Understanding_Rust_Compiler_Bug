{"sha": "05886e28a4c3fbb7bc22d56bf5a52ba7cfa491d9", "node_id": "C_kwDOAAsO6NoAKDA1ODg2ZTI4YTRjM2ZiYjdiYzIyZDU2YmY1YTUyYmE3Y2ZhNDkxZDk", "commit": {"author": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-08-29T22:45:18Z"}, "committer": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-09-07T02:43:15Z"}, "message": "Further simplify the macros generated by `rustc_queries`\n\n- Add a new `rustc_query_names` macro. This allows a much simpler syntax for the matchers in the macros passed to it as a callback.\n- Convert `define_dep_nodes` and `alloc_once` to use `rustc_query_names`. This is possible because they only use the names\n  (despite the quite complicated matchers in `define_dep_nodes`, none of the other arguments are used).\n- Get rid of `rustc_dep_node_append`.", "tree": {"sha": "b75824da9685ce91f557a81b3204dbba8c5863ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b75824da9685ce91f557a81b3204dbba8c5863ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05886e28a4c3fbb7bc22d56bf5a52ba7cfa491d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05886e28a4c3fbb7bc22d56bf5a52ba7cfa491d9", "html_url": "https://github.com/rust-lang/rust/commit/05886e28a4c3fbb7bc22d56bf5a52ba7cfa491d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05886e28a4c3fbb7bc22d56bf5a52ba7cfa491d9/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "699bfa882b34a73b333e684e96984c1c565d2eff", "url": "https://api.github.com/repos/rust-lang/rust/commits/699bfa882b34a73b333e684e96984c1c565d2eff", "html_url": "https://github.com/rust-lang/rust/commit/699bfa882b34a73b333e684e96984c1c565d2eff"}], "stats": {"total": 50, "additions": 18, "deletions": 32}, "files": [{"sha": "2a1bb10fdfc829abd5363c3f176f89e396c994de", "filename": "compiler/rustc_macros/src/query.rs", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/05886e28a4c3fbb7bc22d56bf5a52ba7cfa491d9/compiler%2Frustc_macros%2Fsrc%2Fquery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05886e28a4c3fbb7bc22d56bf5a52ba7cfa491d9/compiler%2Frustc_macros%2Fsrc%2Fquery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_macros%2Fsrc%2Fquery.rs?ref=05886e28a4c3fbb7bc22d56bf5a52ba7cfa491d9", "patch": "@@ -328,7 +328,7 @@ pub fn rustc_queries(input: TokenStream) -> TokenStream {\n \n     let mut query_stream = quote! {};\n     let mut query_description_stream = quote! {};\n-    let mut dep_node_def_stream = quote! {};\n+    let mut all_names = quote! {};\n     let mut cached_queries = quote! {};\n \n     for query in queries.0 {\n@@ -344,6 +344,7 @@ pub fn rustc_queries(input: TokenStream) -> TokenStream {\n                 #name,\n             });\n         }\n+        all_names.extend(quote! { #name, });\n \n         let mut attributes = Vec::new();\n \n@@ -400,35 +401,30 @@ pub fn rustc_queries(input: TokenStream) -> TokenStream {\n             [#attribute_stream] fn #name(#arg) #result,\n         });\n \n-        // Create a dep node for the query\n-        dep_node_def_stream.extend(quote! {\n-            [#attribute_stream] #name(#arg),\n-        });\n-\n         add_query_description_impl(&query, &mut query_description_stream);\n     }\n \n     TokenStream::from(quote! {\n         #[macro_export]\n         macro_rules! rustc_query_append {\n-            ($macro:ident !) => {\n+            ($macro:ident!) => {\n                 $macro! {\n                     #query_stream\n                 }\n             }\n         }\n-        macro_rules! rustc_dep_node_append {\n-            ($macro:ident! [$($other:tt)*]) => {\n+        #[macro_export]\n+        macro_rules! rustc_query_names {\n+            ($macro:ident! $( [$($other:tt)*] )?) => {\n                 $macro!(\n-                    $($other)*\n-\n-                    #dep_node_def_stream\n+                    $( $($other)* )?\n+                    #all_names\n                 );\n             }\n         }\n         #[macro_export]\n         macro_rules! rustc_cached_queries {\n-            ( $macro:ident! ) => {\n+            ($macro:ident!) => {\n                 $macro!(#cached_queries);\n             }\n         }"}, {"sha": "f54d75c24e209a2b50b905a62f3120a271f3ed2b", "filename": "compiler/rustc_middle/src/dep_graph/dep_node.rs", "status": "modified", "additions": 7, "deletions": 17, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/05886e28a4c3fbb7bc22d56bf5a52ba7cfa491d9/compiler%2Frustc_middle%2Fsrc%2Fdep_graph%2Fdep_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05886e28a4c3fbb7bc22d56bf5a52ba7cfa491d9/compiler%2Frustc_middle%2Fsrc%2Fdep_graph%2Fdep_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fdep_graph%2Fdep_node.rs?ref=05886e28a4c3fbb7bc22d56bf5a52ba7cfa491d9", "patch": "@@ -144,10 +144,7 @@ impl DepKind {\n \n macro_rules! define_dep_nodes {\n     (\n-    $(\n-        [$($attrs:tt)*]\n-        $variant:ident $(( $tuple_arg_ty:ty $(,)? ))*\n-      ,)*\n+        $( $variant:ident, )*\n     ) => (\n         #[macro_export]\n         macro_rules! make_dep_kind_array {\n@@ -179,21 +176,14 @@ macro_rules! define_dep_nodes {\n     );\n }\n \n-rustc_dep_node_append!(define_dep_nodes![\n+rustc_query_names!(define_dep_nodes![\n     // We use this for most things when incr. comp. is turned off.\n-    [] Null,\n-\n+    Null,\n     // We use this to create a forever-red node.\n-    [] Red,\n-\n-    [anon] TraitSelect,\n-\n-    // WARNING: if `Symbol` is changed, make sure you update `make_compile_codegen_unit` below.\n-    [] CompileCodegenUnit(Symbol),\n-\n-    // WARNING: if `MonoItem` is changed, make sure you update `make_compile_mono_item` below.\n-    // Only used by rustc_codegen_cranelift\n-    [] CompileMonoItem(MonoItem),\n+    Red,\n+    TraitSelect,\n+    CompileCodegenUnit,\n+    CompileMonoItem,\n ]);\n \n // WARNING: `construct` is generic and does not know that `CompileCodegenUnit` takes `Symbol`s as keys."}, {"sha": "a8e0210e8d664e0da7d5909b5a7bbb9ac97de438", "filename": "compiler/rustc_query_impl/src/profiling_support.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/05886e28a4c3fbb7bc22d56bf5a52ba7cfa491d9/compiler%2Frustc_query_impl%2Fsrc%2Fprofiling_support.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05886e28a4c3fbb7bc22d56bf5a52ba7cfa491d9/compiler%2Frustc_query_impl%2Fsrc%2Fprofiling_support.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_impl%2Fsrc%2Fprofiling_support.rs?ref=05886e28a4c3fbb7bc22d56bf5a52ba7cfa491d9", "patch": "@@ -307,7 +307,7 @@ pub fn alloc_self_profile_query_strings(tcx: TyCtxt<'_>) {\n \n     macro_rules! alloc_once {\n         (\n-            $($(#[$attr:meta])* [$($modifiers:tt)*] fn $name:ident($K:ty) -> $V:ty,)*\n+            $($name:ident,)*\n         ) => {\n             $({\n                 alloc_self_profile_query_strings_for_query_cache(\n@@ -320,5 +320,5 @@ pub fn alloc_self_profile_query_strings(tcx: TyCtxt<'_>) {\n         }\n     }\n \n-    rustc_query_append! { alloc_once! }\n+    rustc_query_names! { alloc_once! }\n }"}]}