{"sha": "df402a5029a1e37d8fbf7f5a18d32efaf9ef751b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmNDAyYTUwMjlhMWUzN2Q4ZmJmN2Y1YTE4ZDMyZWZhZjllZjc1MWI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-15T23:09:17Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-16T17:29:09Z"}, "message": "Rename bitv::to_ivec to to_vec", "tree": {"sha": "091143c255ec7fbb578d60e66fc18494b5b3ec44", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/091143c255ec7fbb578d60e66fc18494b5b3ec44"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df402a5029a1e37d8fbf7f5a18d32efaf9ef751b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df402a5029a1e37d8fbf7f5a18d32efaf9ef751b", "html_url": "https://github.com/rust-lang/rust/commit/df402a5029a1e37d8fbf7f5a18d32efaf9ef751b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df402a5029a1e37d8fbf7f5a18d32efaf9ef751b/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bab29af449a200572d04593f6410dc94c1d20263", "url": "https://api.github.com/repos/rust-lang/rust/commits/bab29af449a200572d04593f6410dc94c1d20263", "html_url": "https://github.com/rust-lang/rust/commit/bab29af449a200572d04593f6410dc94c1d20263"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "0c80381c4fc062f6811dc8caa5a26d6f255377bc", "filename": "src/lib/bitv.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/df402a5029a1e37d8fbf7f5a18d32efaf9ef751b/src%2Flib%2Fbitv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df402a5029a1e37d8fbf7f5a18d32efaf9ef751b/src%2Flib%2Fbitv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fbitv.rs?ref=df402a5029a1e37d8fbf7f5a18d32efaf9ef751b", "patch": "@@ -14,7 +14,7 @@ export difference;\n export set;\n export is_true;\n export is_false;\n-export to_ivec;\n+export to_vec;\n export to_str;\n export eq_ivec;\n \n@@ -135,27 +135,27 @@ fn set(v: &t, i: uint, x: bool) {\n \n /* true if all bits are 1 */\n fn is_true(v: &t) -> bool {\n-    for i: uint in to_ivec(v) { if i != 1u { ret false; } }\n+    for i: uint in to_vec(v) { if i != 1u { ret false; } }\n     ret true;\n }\n \n \n /* true if all bits are non-1 */\n fn is_false(v: &t) -> bool {\n-    for i: uint in to_ivec(v) { if i == 1u { ret false; } }\n+    for i: uint in to_vec(v) { if i == 1u { ret false; } }\n     ret true;\n }\n \n fn init_to_vec(v: t, i: uint) -> uint { ret if get(v, i) { 1u } else { 0u }; }\n \n-fn to_ivec(v: &t) -> [uint] {\n+fn to_vec(v: &t) -> [uint] {\n     let sub = bind init_to_vec(v, _);\n     ret ivec::init_fn[uint](sub, v.nbits);\n }\n \n fn to_str(v: &t) -> str {\n     let rs = \"\";\n-    for i: uint in to_ivec(v) {\n+    for i: uint in to_vec(v) {\n         if i == 1u { rs += \"1\"; } else { rs += \"0\"; }\n     }\n     ret rs;"}]}