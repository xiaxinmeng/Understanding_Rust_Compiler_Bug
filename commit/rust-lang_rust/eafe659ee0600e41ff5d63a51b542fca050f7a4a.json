{"sha": "eafe659ee0600e41ff5d63a51b542fca050f7a4a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhZmU2NTllZTA2MDBlNDFmZjVkNjNhNTFiNTQyZmNhMDUwZjdhNGE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-07-12T00:24:15Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-07-12T00:24:15Z"}, "message": "hooking mmap is no longer needed", "tree": {"sha": "d70c734bba465613593a3be9750b200a12118af6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d70c734bba465613593a3be9750b200a12118af6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eafe659ee0600e41ff5d63a51b542fca050f7a4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eafe659ee0600e41ff5d63a51b542fca050f7a4a", "html_url": "https://github.com/rust-lang/rust/commit/eafe659ee0600e41ff5d63a51b542fca050f7a4a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eafe659ee0600e41ff5d63a51b542fca050f7a4a/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40755ecfb78033d28020a75df8f50d084d810cc3", "url": "https://api.github.com/repos/rust-lang/rust/commits/40755ecfb78033d28020a75df8f50d084d810cc3", "html_url": "https://github.com/rust-lang/rust/commit/40755ecfb78033d28020a75df8f50d084d810cc3"}], "stats": {"total": 6, "additions": 0, "deletions": 6}, "files": [{"sha": "dc6610a2213b0bab513fcea3ec313b3e7afdb0a5", "filename": "src/terminator/mod.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eafe659ee0600e41ff5d63a51b542fca050f7a4a/src%2Fterminator%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eafe659ee0600e41ff5d63a51b542fca050f7a4a/src%2Fterminator%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fterminator%2Fmod.rs?ref=eafe659ee0600e41ff5d63a51b542fca050f7a4a", "patch": "@@ -861,12 +861,6 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                 self.write_primval(dest, result, dest_ty)?;\n             }\n \n-            \"mmap\" => {\n-                // This is a horrible hack, but well... the guard page mechanism calls mmap and expects a particular return value, so we give it that value\n-                let addr = args[0].read_ptr(&self.memory)?;\n-                self.write_ptr(dest, addr, dest_ty)?;\n-            }\n-\n             // Hook pthread calls that go to the thread-local storage memory subsystem\n             \"pthread_key_create\" => {\n                 let key_ptr = args[0].read_ptr(&self.memory)?;"}]}