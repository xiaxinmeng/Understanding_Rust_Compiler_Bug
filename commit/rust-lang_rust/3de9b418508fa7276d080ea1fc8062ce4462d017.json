{"sha": "3de9b418508fa7276d080ea1fc8062ce4462d017", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkZTliNDE4NTA4ZmE3Mjc2ZDA4MGVhMWZjODA2MmNlNDQ2MmQwMTc=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-03-01T06:07:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-01T06:07:31Z"}, "message": "Rollup merge of #82309 - jyn514:rustdocflags, r=Mark-Simulacrum\n\nPropagate RUSTDOCFLAGS in the environment when documenting\n\nPreviously, RUSTDOCFLAGS would get overriden when bootstrap set\n`RUSTDOCFLAGS` itself. Propagate the flag manually, using the same logic\nas `RUSTFLAGS`.\n\nFixes https://github.com/rust-lang/rust/issues/75256.", "tree": {"sha": "b0167b87697a1ad231669487993e336e052aad9d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0167b87697a1ad231669487993e336e052aad9d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3de9b418508fa7276d080ea1fc8062ce4462d017", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgPISjCRBK7hj4Ov3rIwAAdHIIABX1HU+uoHNuaP2KXyXnji0q\nW1rm3feuUZdzPqZDh8aqGm8ucLtKHUy5TWV4nDOrDkLl2V4Sm3oEj6qqPEZSz2fM\n5JjMkmqgHa2+5Z5WrFUVWDOHY6ppObpIkLbGkLwXPo6Dnm6knlG561AggsJg+tgS\n++AZX61IZslALoWC5otII7SCWOxsjsyjqbDlCkg+3nWOglV/Q2I2PPdVNwoHRvRI\n1uMurxFWrUCovTf4gxd5+zgmndw6JM0SeIm/xE7T6xDurTkxaWVmJY6Cy/DB0U5N\nIyetQ8b8w+MMbcoNnJn/Ss8oCGhTHG7BxGqoUi76lVvtWv/FvGFOO+6sIx1pD3c=\n=H1Ol\n-----END PGP SIGNATURE-----\n", "payload": "tree b0167b87697a1ad231669487993e336e052aad9d\nparent 3b150b7a8f77874f26c617666f5608fe4a3e58df\nparent 0238986de7fc584d532f22c981625d666e8ea22b\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1614578851 +0900\ncommitter GitHub <noreply@github.com> 1614578851 +0900\n\nRollup merge of #82309 - jyn514:rustdocflags, r=Mark-Simulacrum\n\nPropagate RUSTDOCFLAGS in the environment when documenting\n\nPreviously, RUSTDOCFLAGS would get overriden when bootstrap set\n`RUSTDOCFLAGS` itself. Propagate the flag manually, using the same logic\nas `RUSTFLAGS`.\n\nFixes https://github.com/rust-lang/rust/issues/75256.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3de9b418508fa7276d080ea1fc8062ce4462d017", "html_url": "https://github.com/rust-lang/rust/commit/3de9b418508fa7276d080ea1fc8062ce4462d017", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3de9b418508fa7276d080ea1fc8062ce4462d017/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b150b7a8f77874f26c617666f5608fe4a3e58df", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b150b7a8f77874f26c617666f5608fe4a3e58df", "html_url": "https://github.com/rust-lang/rust/commit/3b150b7a8f77874f26c617666f5608fe4a3e58df"}, {"sha": "0238986de7fc584d532f22c981625d666e8ea22b", "url": "https://api.github.com/repos/rust-lang/rust/commits/0238986de7fc584d532f22c981625d666e8ea22b", "html_url": "https://github.com/rust-lang/rust/commit/0238986de7fc584d532f22c981625d666e8ea22b"}], "stats": {"total": 30, "additions": 21, "deletions": 9}, "files": [{"sha": "39c062769c811855257c2031415cc3acee17ae30", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 21, "deletions": 9, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/3de9b418508fa7276d080ea1fc8062ce4462d017/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3de9b418508fa7276d080ea1fc8062ce4462d017/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=3de9b418508fa7276d080ea1fc8062ce4462d017", "patch": "@@ -939,6 +939,12 @@ impl<'a> Builder<'a> {\n         // but this breaks CI. At the very least, stage0 `rustdoc` needs `--cfg bootstrap`. See\n         // #71458.\n         let mut rustdocflags = rustflags.clone();\n+        rustdocflags.propagate_cargo_env(\"RUSTDOCFLAGS\");\n+        if stage == 0 {\n+            rustdocflags.env(\"RUSTDOCFLAGS_BOOTSTRAP\");\n+        } else {\n+            rustdocflags.env(\"RUSTDOCFLAGS_NOT_BOOTSTRAP\");\n+        }\n \n         if let Ok(s) = env::var(\"CARGOFLAGS\") {\n             cargo.args(s.split_whitespace());\n@@ -1544,21 +1550,27 @@ impl<'a> Builder<'a> {\n mod tests;\n \n #[derive(Debug, Clone)]\n-struct Rustflags(String);\n+struct Rustflags(String, TargetSelection);\n \n impl Rustflags {\n     fn new(target: TargetSelection) -> Rustflags {\n-        let mut ret = Rustflags(String::new());\n+        let mut ret = Rustflags(String::new(), target);\n+        ret.propagate_cargo_env(\"RUSTFLAGS\");\n+        ret\n+    }\n \n+    /// By default, cargo will pick up on various variables in the environment. However, bootstrap\n+    /// reuses those variables to pass additional flags to rustdoc, so by default they get overriden.\n+    /// Explicitly add back any previous value in the environment.\n+    ///\n+    /// `prefix` is usually `RUSTFLAGS` or `RUSTDOCFLAGS`.\n+    fn propagate_cargo_env(&mut self, prefix: &str) {\n         // Inherit `RUSTFLAGS` by default ...\n-        ret.env(\"RUSTFLAGS\");\n-\n-        // ... and also handle target-specific env RUSTFLAGS if they're\n-        // configured.\n-        let target_specific = format!(\"CARGO_TARGET_{}_RUSTFLAGS\", crate::envify(&target.triple));\n-        ret.env(&target_specific);\n+        self.env(prefix);\n \n-        ret\n+        // ... and also handle target-specific env RUSTFLAGS if they're configured.\n+        let target_specific = format!(\"CARGO_TARGET_{}_{}\", crate::envify(&self.1.triple), prefix);\n+        self.env(&target_specific);\n     }\n \n     fn env(&mut self, env: &str) {"}]}