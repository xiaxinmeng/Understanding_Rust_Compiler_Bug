{"sha": "c97aa152dac4b27e7cba692abed0fea2fcce2bd4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5N2FhMTUyZGFjNGIyN2U3Y2JhNjkyYWJlZDBmZWEyZmNjZTJiZDQ=", "commit": {"author": {"name": "St\u00e9phane Campinas", "email": "stephane.campinas@gmail.com", "date": "2019-05-16T22:23:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-05-16T22:23:37Z"}, "message": "Merge pull request #3555 from rchaser53/issue-3554\n\nfix `Const generics are handled incorrectly`", "tree": {"sha": "4c29cc5714dcf763cf432b60dac3a30d657ead51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c29cc5714dcf763cf432b60dac3a30d657ead51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c97aa152dac4b27e7cba692abed0fea2fcce2bd4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc3eLpCRBK7hj4Ov3rIwAAdHIIAGGtDiomGub9l+jj39Whb1D0\n3Z7l4GVzrMBXlm1Y32AkH5zrbkrNrCT4ZoQGOwZJxiEATsAwWTDXpJi6yJnB6ZfQ\nY4aoTPkHIm4xF+QdtR+PkyIfY6EpnPoG6SlfJLdHDF9thRjPfLcc79jhpoeCjtTx\nXnfLnbQFb+8NQJdGBi6Gdzft7RB9GQCZgKW72dtIo30OUdEI79KBgDoM5v0EU0LR\nSifLakneHwXh+1cWPq7FEKVX/oKTJThgHm/o8noDn0+qdDJU3DD4Ds2Fj6/+PQJ2\nrVVZoL5kgHtMvVYSRtEyGzbZci/ruZwVz0+GDn5fJ0FBc0ItXE7id3Z7DqpKgN0=\n=ZJo6\n-----END PGP SIGNATURE-----\n", "payload": "tree 4c29cc5714dcf763cf432b60dac3a30d657ead51\nparent 531b2d9136c41908a44c0e45da6fdf0635c3e680\nparent 53142b486d847e2bf846fd82b02ad602bab85d41\nauthor St\u00e9phane Campinas <stephane.campinas@gmail.com> 1558045417 +0200\ncommitter GitHub <noreply@github.com> 1558045417 +0200\n\nMerge pull request #3555 from rchaser53/issue-3554\n\nfix `Const generics are handled incorrectly`"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c97aa152dac4b27e7cba692abed0fea2fcce2bd4", "html_url": "https://github.com/rust-lang/rust/commit/c97aa152dac4b27e7cba692abed0fea2fcce2bd4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c97aa152dac4b27e7cba692abed0fea2fcce2bd4/comments", "author": {"login": "scampi", "id": 795879, "node_id": "MDQ6VXNlcjc5NTg3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/795879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scampi", "html_url": "https://github.com/scampi", "followers_url": "https://api.github.com/users/scampi/followers", "following_url": "https://api.github.com/users/scampi/following{/other_user}", "gists_url": "https://api.github.com/users/scampi/gists{/gist_id}", "starred_url": "https://api.github.com/users/scampi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scampi/subscriptions", "organizations_url": "https://api.github.com/users/scampi/orgs", "repos_url": "https://api.github.com/users/scampi/repos", "events_url": "https://api.github.com/users/scampi/events{/privacy}", "received_events_url": "https://api.github.com/users/scampi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "531b2d9136c41908a44c0e45da6fdf0635c3e680", "url": "https://api.github.com/repos/rust-lang/rust/commits/531b2d9136c41908a44c0e45da6fdf0635c3e680", "html_url": "https://github.com/rust-lang/rust/commit/531b2d9136c41908a44c0e45da6fdf0635c3e680"}, {"sha": "53142b486d847e2bf846fd82b02ad602bab85d41", "url": "https://api.github.com/repos/rust-lang/rust/commits/53142b486d847e2bf846fd82b02ad602bab85d41", "html_url": "https://github.com/rust-lang/rust/commit/53142b486d847e2bf846fd82b02ad602bab85d41"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "202eb2cf1179fb73ed8e65446bcde538a37cfd87", "filename": "src/items.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c97aa152dac4b27e7cba692abed0fea2fcce2bd4/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c97aa152dac4b27e7cba692abed0fea2fcce2bd4/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=c97aa152dac4b27e7cba692abed0fea2fcce2bd4", "patch": "@@ -664,7 +664,6 @@ pub(crate) fn format_impl(\n     context: &RewriteContext<'_>,\n     item: &ast::Item,\n     offset: Indent,\n-    where_span_end: Option<BytePos>,\n ) -> Option<String> {\n     if let ast::ItemKind::Impl(_, _, _, ref generics, _, ref self_ty, ref items) = item.node {\n         let mut result = String::with_capacity(128);\n@@ -691,6 +690,8 @@ pub(crate) fn format_impl(\n             option.compress_where();\n         }\n \n+        let misssing_span = mk_sp(self_ty.span.hi(), item.span.hi());\n+        let where_span_end = context.snippet_provider.opt_span_before(misssing_span, \"{\");\n         let where_clause_str = rewrite_where_clause(\n             context,\n             &generics.where_clause,"}, {"sha": "5fdd0625dff8ee352985a4cce2f5d87180b4541d", "filename": "src/visitor.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c97aa152dac4b27e7cba692abed0fea2fcce2bd4/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c97aa152dac4b27e7cba692abed0fea2fcce2bd4/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=c97aa152dac4b27e7cba692abed0fea2fcce2bd4", "patch": "@@ -5,7 +5,7 @@ use syntax::source_map::{self, BytePos, Pos, SourceMap, Span};\n use syntax::{ast, visit};\n \n use crate::attr::*;\n-use crate::comment::{CodeCharKind, CommentCodeSlices, FindUncommented};\n+use crate::comment::{CodeCharKind, CommentCodeSlices};\n use crate::config::file_lines::FileName;\n use crate::config::{BraceStyle, Config, Version};\n use crate::expr::{format_expr, ExprType};\n@@ -359,13 +359,8 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n             match item.node {\n                 ast::ItemKind::Use(ref tree) => self.format_import(item, tree),\n                 ast::ItemKind::Impl(..) => {\n-                    let snippet = self.snippet(item.span);\n-                    let where_span_end = snippet\n-                        .find_uncommented(\"{\")\n-                        .map(|x| BytePos(x as u32) + source!(self, item.span).lo());\n                     let block_indent = self.block_indent;\n-                    let rw = self\n-                        .with_context(|ctx| format_impl(&ctx, item, block_indent, where_span_end));\n+                    let rw = self.with_context(|ctx| format_impl(&ctx, item, block_indent));\n                     self.push_rewrite(item.span, rw);\n                 }\n                 ast::ItemKind::Trait(..) => {"}, {"sha": "4ece90403e1f281de52409d2681c25d2d30add51", "filename": "tests/target/issue-3554.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c97aa152dac4b27e7cba692abed0fea2fcce2bd4/tests%2Ftarget%2Fissue-3554.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c97aa152dac4b27e7cba692abed0fea2fcce2bd4/tests%2Ftarget%2Fissue-3554.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-3554.rs?ref=c97aa152dac4b27e7cba692abed0fea2fcce2bd4", "patch": "@@ -0,0 +1,4 @@\n+#![feature(const_generics)]\n+\n+pub struct S<const N: usize>;\n+impl S<{ 0 }> {}"}]}