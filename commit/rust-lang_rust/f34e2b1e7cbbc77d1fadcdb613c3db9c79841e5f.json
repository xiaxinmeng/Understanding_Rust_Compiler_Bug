{"sha": "f34e2b1e7cbbc77d1fadcdb613c3db9c79841e5f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzNGUyYjFlN2NiYmM3N2QxZmFkY2RiNjEzYzNkYjljNzk4NDFlNWY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-29T18:34:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-29T18:34:14Z"}, "message": "Rollup merge of #64735 - GuillaumeGomez:long-err-explanation-E0533, r=Centril\n\nAdd long error explanation for E0533\n\nPart of https://github.com/rust-lang/rust/issues/61137", "tree": {"sha": "367aab863cb6b3b9228d957674f7a675307d1dde", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/367aab863cb6b3b9228d957674f7a675307d1dde"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f34e2b1e7cbbc77d1fadcdb613c3db9c79841e5f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdkPkmCRBK7hj4Ov3rIwAAdHIIADSNg58hC6oMuo+5M5XbZMcf\n4Dcm6YU4MJPJvv8e4xNy731jcMKnCuNdYKldTYsyqnRfmKt+5k/puo3ep+EivjvU\nyShe8W1z9gN8WRzaORwaTIHeuIqNH4jKiQZeNUJg9czpbKrldxHvsbjG+dgqaFyM\nADznuzEDIt2RZc1+LzqXgTE1B0ClglV2VcAjODVWt1eTZ9hPRWJSrbB02bJmyilf\n7/9fQix/+FvpR02vJG4vf8Kdbc/F9i1oFPXeRlHCSUM6EoIwAFqqdSGcuBGiNVjm\n9M3i5J2pS97auuvTzvYjtEVwB4Qu7ThxY1f7veUlbnl9znRTcVuSM1Q/x8ffUVU=\n=PjMm\n-----END PGP SIGNATURE-----\n", "payload": "tree 367aab863cb6b3b9228d957674f7a675307d1dde\nparent 0a2ddcc3464f53c23ffc5d3e904ba909753fe341\nparent e58e144e6634e3cbdfd6d415eb0ea24bc2a2bb87\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1569782054 +0200\ncommitter GitHub <noreply@github.com> 1569782054 +0200\n\nRollup merge of #64735 - GuillaumeGomez:long-err-explanation-E0533, r=Centril\n\nAdd long error explanation for E0533\n\nPart of https://github.com/rust-lang/rust/issues/61137\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f34e2b1e7cbbc77d1fadcdb613c3db9c79841e5f", "html_url": "https://github.com/rust-lang/rust/commit/f34e2b1e7cbbc77d1fadcdb613c3db9c79841e5f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f34e2b1e7cbbc77d1fadcdb613c3db9c79841e5f/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a2ddcc3464f53c23ffc5d3e904ba909753fe341", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a2ddcc3464f53c23ffc5d3e904ba909753fe341", "html_url": "https://github.com/rust-lang/rust/commit/0a2ddcc3464f53c23ffc5d3e904ba909753fe341"}, {"sha": "e58e144e6634e3cbdfd6d415eb0ea24bc2a2bb87", "url": "https://api.github.com/repos/rust-lang/rust/commits/e58e144e6634e3cbdfd6d415eb0ea24bc2a2bb87", "html_url": "https://github.com/rust-lang/rust/commit/e58e144e6634e3cbdfd6d415eb0ea24bc2a2bb87"}], "stats": {"total": 71, "additions": 67, "deletions": 4}, "files": [{"sha": "3a07171b12fb80160016eb7a83463f41d141aa5f", "filename": "src/librustc_typeck/error_codes.rs", "status": "modified", "additions": 37, "deletions": 1, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/f34e2b1e7cbbc77d1fadcdb613c3db9c79841e5f/src%2Flibrustc_typeck%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f34e2b1e7cbbc77d1fadcdb613c3db9c79841e5f/src%2Flibrustc_typeck%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Ferror_codes.rs?ref=f34e2b1e7cbbc77d1fadcdb613c3db9c79841e5f", "patch": "@@ -3610,6 +3610,43 @@ match r {\n ```\n \"##,\n \n+E0533: r##\"\n+An item which isn't a unit struct, a variant, nor a constant has been used as a\n+match pattern.\n+\n+Erroneous code example:\n+\n+```compile_fail,E0533\n+struct Tortoise;\n+\n+impl Tortoise {\n+    fn turtle(&self) -> u32 { 0 }\n+}\n+\n+match 0u32 {\n+    Tortoise::turtle => {} // Error!\n+    _ => {}\n+}\n+if let Tortoise::turtle = 0u32 {} // Same error!\n+```\n+\n+If you want to match against a value returned by a method, you need to bind the\n+value first:\n+\n+```\n+struct Tortoise;\n+\n+impl Tortoise {\n+    fn turtle(&self) -> u32 { 0 }\n+}\n+\n+match 0u32 {\n+    x if x == Tortoise.turtle() => {} // Bound into `x` then we compare it!\n+    _ => {}\n+}\n+```\n+\"##,\n+\n E0534: r##\"\n The `inline` attribute was malformed.\n \n@@ -4935,7 +4972,6 @@ and the pin is required to keep it in the same place in memory.\n     E0377, // the trait `CoerceUnsized` may only be implemented for a coercion\n            // between structures with the same definition\n //  E0558, // replaced with a generic attribute input check\n-    E0533, // `{}` does not name a unit variant, unit struct or a constant\n //  E0563, // cannot determine a type for this `impl Trait` removed in 6383de15\n     E0564, // only named lifetimes are allowed in `impl Trait`,\n            // but `{}` was found in the type `{}`"}, {"sha": "21a91f3f32b24fc25d2ef3319b909fef3c9345e6", "filename": "src/test/ui/methods/method-path-in-pattern.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f34e2b1e7cbbc77d1fadcdb613c3db9c79841e5f/src%2Ftest%2Fui%2Fmethods%2Fmethod-path-in-pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f34e2b1e7cbbc77d1fadcdb613c3db9c79841e5f/src%2Ftest%2Fui%2Fmethods%2Fmethod-path-in-pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmethods%2Fmethod-path-in-pattern.rs?ref=f34e2b1e7cbbc77d1fadcdb613c3db9c79841e5f", "patch": "@@ -23,4 +23,10 @@ fn main() {\n         <Foo>::trait_bar => {}\n         //~^ ERROR expected unit struct/variant or constant, found method `<Foo>::trait_bar`\n     }\n+    if let Foo::bar = 0u32 {}\n+    //~^ ERROR expected unit struct/variant or constant, found method `<Foo>::bar`\n+    if let <Foo>::bar = 0u32 {}\n+    //~^ ERROR expected unit struct/variant or constant, found method `<Foo>::bar`\n+    if let Foo::trait_bar = 0u32 {}\n+    //~^ ERROR expected unit struct/variant or constant, found method `<Foo>::trait_bar`\n }"}, {"sha": "257fff4c37dc0055f4c80978dde4f7d8a8768fac", "filename": "src/test/ui/methods/method-path-in-pattern.stderr", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/f34e2b1e7cbbc77d1fadcdb613c3db9c79841e5f/src%2Ftest%2Fui%2Fmethods%2Fmethod-path-in-pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f34e2b1e7cbbc77d1fadcdb613c3db9c79841e5f/src%2Ftest%2Fui%2Fmethods%2Fmethod-path-in-pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmethods%2Fmethod-path-in-pattern.stderr?ref=f34e2b1e7cbbc77d1fadcdb613c3db9c79841e5f", "patch": "@@ -16,5 +16,24 @@ error[E0533]: expected unit struct/variant or constant, found method `<Foo>::tra\n LL |         <Foo>::trait_bar => {}\n    |         ^^^^^^^^^^^^^^^^\n \n-error: aborting due to 3 previous errors\n+error[E0533]: expected unit struct/variant or constant, found method `<Foo>::bar`\n+  --> $DIR/method-path-in-pattern.rs:26:12\n+   |\n+LL |     if let Foo::bar = 0u32 {}\n+   |            ^^^^^^^^\n+\n+error[E0533]: expected unit struct/variant or constant, found method `<Foo>::bar`\n+  --> $DIR/method-path-in-pattern.rs:28:12\n+   |\n+LL |     if let <Foo>::bar = 0u32 {}\n+   |            ^^^^^^^^^^\n+\n+error[E0533]: expected unit struct/variant or constant, found method `<Foo>::trait_bar`\n+  --> $DIR/method-path-in-pattern.rs:30:12\n+   |\n+LL |     if let Foo::trait_bar = 0u32 {}\n+   |            ^^^^^^^^^^^^^^\n+\n+error: aborting due to 6 previous errors\n \n+For more information about this error, try `rustc --explain E0533`."}, {"sha": "3e8fcdc7ca3e28dd5ce74b5db8f767529dbda3a0", "filename": "src/test/ui/qualified/qualified-path-params.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f34e2b1e7cbbc77d1fadcdb613c3db9c79841e5f/src%2Ftest%2Fui%2Fqualified%2Fqualified-path-params.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f34e2b1e7cbbc77d1fadcdb613c3db9c79841e5f/src%2Ftest%2Fui%2Fqualified%2Fqualified-path-params.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fqualified%2Fqualified-path-params.stderr?ref=f34e2b1e7cbbc77d1fadcdb613c3db9c79841e5f", "patch": "@@ -15,4 +15,5 @@ LL |         0 ..= <S as Tr>::A::f::<u8> => {}\n \n error: aborting due to 2 previous errors\n \n-For more information about this error, try `rustc --explain E0029`.\n+Some errors have detailed explanations: E0029, E0533.\n+For more information about an error, try `rustc --explain E0029`."}, {"sha": "357b33de51b84e53b9f17baa8effccb7cbfd7c91", "filename": "src/test/ui/type-alias-enum-variants/incorrect-variant-form-through-Self-issue-58006.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f34e2b1e7cbbc77d1fadcdb613c3db9c79841e5f/src%2Ftest%2Fui%2Ftype-alias-enum-variants%2Fincorrect-variant-form-through-Self-issue-58006.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f34e2b1e7cbbc77d1fadcdb613c3db9c79841e5f/src%2Ftest%2Fui%2Ftype-alias-enum-variants%2Fincorrect-variant-form-through-Self-issue-58006.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-enum-variants%2Fincorrect-variant-form-through-Self-issue-58006.stderr?ref=f34e2b1e7cbbc77d1fadcdb613c3db9c79841e5f", "patch": "@@ -6,3 +6,4 @@ LL |             Self::A => (),\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0533`."}, {"sha": "c6528e417d8aecdacca3850c197d473f5e834c79", "filename": "src/test/ui/type-alias-enum-variants/incorrect-variant-form-through-alias-caught.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f34e2b1e7cbbc77d1fadcdb613c3db9c79841e5f/src%2Ftest%2Fui%2Ftype-alias-enum-variants%2Fincorrect-variant-form-through-alias-caught.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f34e2b1e7cbbc77d1fadcdb613c3db9c79841e5f/src%2Ftest%2Fui%2Ftype-alias-enum-variants%2Fincorrect-variant-form-through-alias-caught.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-enum-variants%2Fincorrect-variant-form-through-alias-caught.stderr?ref=f34e2b1e7cbbc77d1fadcdb613c3db9c79841e5f", "patch": "@@ -39,5 +39,5 @@ LL |     let Alias::Unit() = panic!();\n \n error: aborting due to 5 previous errors\n \n-Some errors have detailed explanations: E0164, E0618.\n+Some errors have detailed explanations: E0164, E0533, E0618.\n For more information about an error, try `rustc --explain E0164`."}]}