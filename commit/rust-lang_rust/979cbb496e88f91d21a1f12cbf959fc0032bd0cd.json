{"sha": "979cbb496e88f91d21a1f12cbf959fc0032bd0cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3OWNiYjQ5NmU4OGY5MWQyMWExZjEyY2JmOTU5ZmMwMDMyYmQwY2Q=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-12-20T17:58:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-20T17:58:59Z"}, "message": "Merge #2619\n\n2619: Coerce closures to fn pointers r=flodiebold a=flodiebold\n\nE.g. `let x: fn(A) -> B = |x| { y };`\n\nCo-authored-by: Florian Diebold <florian.diebold@freiheit.com>", "tree": {"sha": "0b00ef7d63064a4f60e03427abf0803bb17b4596", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b00ef7d63064a4f60e03427abf0803bb17b4596"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/979cbb496e88f91d21a1f12cbf959fc0032bd0cd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd/QvjCRBK7hj4Ov3rIwAAdHIIAJx2SqWpg7+jUFty0VYiO8jW\nAZPjepntQfhhebyuTomz3O+MCARv6xePqUhaeEIfCBl0gAJfA3xsyKe1mpf5Alsa\nBNkMKpQGS9FmbJM5o+1s62SW+PoIc57258BwpG2KjEoG3QgJBlA5sDdlwQtPrh/V\npHRO5FYXjmsyCsAkxbGqPkv7cBMLW6RNYtnfYpEqN77e4747qfs/NTHD0FM/Gv2X\ncWt3MVTtxh2j8axdy5XjdFnRO22OfenvV8hhlUU02BpWJYrJlwulct3FIpYhsy0/\nrkCny4aUgtZEcq/bwFdhmu3DIpgE5GBhfT+2XTHvHc+HX2752OKB6uCIIFXiOd0=\n=SMS5\n-----END PGP SIGNATURE-----\n", "payload": "tree 0b00ef7d63064a4f60e03427abf0803bb17b4596\nparent 1d7931e5ffeb2d65ebcc14a63da1b84cc131bfb8\nparent 44b00aed4a7d7e329fcbfa95a8685437cfb06e41\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1576864739 +0000\ncommitter GitHub <noreply@github.com> 1576864739 +0000\n\nMerge #2619\n\n2619: Coerce closures to fn pointers r=flodiebold a=flodiebold\n\nE.g. `let x: fn(A) -> B = |x| { y };`\n\nCo-authored-by: Florian Diebold <florian.diebold@freiheit.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/979cbb496e88f91d21a1f12cbf959fc0032bd0cd", "html_url": "https://github.com/rust-lang/rust/commit/979cbb496e88f91d21a1f12cbf959fc0032bd0cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/979cbb496e88f91d21a1f12cbf959fc0032bd0cd/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d7931e5ffeb2d65ebcc14a63da1b84cc131bfb8", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d7931e5ffeb2d65ebcc14a63da1b84cc131bfb8", "html_url": "https://github.com/rust-lang/rust/commit/1d7931e5ffeb2d65ebcc14a63da1b84cc131bfb8"}, {"sha": "44b00aed4a7d7e329fcbfa95a8685437cfb06e41", "url": "https://api.github.com/repos/rust-lang/rust/commits/44b00aed4a7d7e329fcbfa95a8685437cfb06e41", "html_url": "https://github.com/rust-lang/rust/commit/44b00aed4a7d7e329fcbfa95a8685437cfb06e41"}], "stats": {"total": 53, "additions": 48, "deletions": 5}, "files": [{"sha": "83c0c2c3f334cba765ac75b6384a3ccac54be83e", "filename": "crates/ra_hir_ty/src/infer/coerce.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/979cbb496e88f91d21a1f12cbf959fc0032bd0cd/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fcoerce.rs", "raw_url": "https://github.com/rust-lang/rust/raw/979cbb496e88f91d21a1f12cbf959fc0032bd0cd/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fcoerce.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fcoerce.rs?ref=979cbb496e88f91d21a1f12cbf959fc0032bd0cd", "patch": "@@ -134,6 +134,10 @@ impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n                 }\n             }\n \n+            (ty_app!(TypeCtor::Closure { .. }, params), ty_app!(TypeCtor::FnPtr { .. })) => {\n+                from_ty = params[0].clone();\n+            }\n+\n             _ => {}\n         }\n "}, {"sha": "7e99a42edc459e913900eb5f08765ae789a82731", "filename": "crates/ra_hir_ty/src/tests/coercion.rs", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/979cbb496e88f91d21a1f12cbf959fc0032bd0cd/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/979cbb496e88f91d21a1f12cbf959fc0032bd0cd/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fcoercion.rs?ref=979cbb496e88f91d21a1f12cbf959fc0032bd0cd", "patch": "@@ -487,3 +487,42 @@ fn foo() {\n     \"###\n     );\n }\n+\n+#[test]\n+fn coerce_fn_item_to_fn_ptr() {\n+    assert_snapshot!(\n+        infer_with_mismatches(r#\"\n+fn foo(x: u32) -> isize { 1 }\n+fn test() {\n+    let f: fn(u32) -> isize = foo;\n+}\n+\"#, true),\n+        @r###\"\n+    [8; 9) 'x': u32\n+    [25; 30) '{ 1 }': isize\n+    [27; 28) '1': isize\n+    [41; 79) '{     ...foo; }': ()\n+    [51; 52) 'f': fn(u32) -> isize\n+    [73; 76) 'foo': fn foo(u32) -> isize\n+    \"###\n+    );\n+}\n+\n+#[test]\n+fn coerce_closure_to_fn_ptr() {\n+    assert_snapshot!(\n+        infer_with_mismatches(r#\"\n+fn test() {\n+    let f: fn(u32) -> isize = |x| { 1 };\n+}\n+\"#, true),\n+        @r###\"\n+    [11; 55) '{     ...1 }; }': ()\n+    [21; 22) 'f': fn(u32) -> isize\n+    [43; 52) '|x| { 1 }': |u32| -> isize\n+    [44; 45) 'x': u32\n+    [47; 52) '{ 1 }': isize\n+    [49; 50) '1': isize\n+    \"###\n+    );\n+}"}, {"sha": "76e2198b6638474966767518cdd6b730047f6816", "filename": "crates/ra_hir_ty/src/tests/traits.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/979cbb496e88f91d21a1f12cbf959fc0032bd0cd/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/979cbb496e88f91d21a1f12cbf959fc0032bd0cd/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Ftraits.rs?ref=979cbb496e88f91d21a1f12cbf959fc0032bd0cd", "patch": "@@ -393,11 +393,11 @@ fn test() -> u64 {\n     [54; 55) 'a': S\n     [58; 59) 'S': S(fn(u32) -> u64) -> S\n     [58; 68) 'S(|i| 2*i)': S\n-    [60; 67) '|i| 2*i': |i32| -> i32\n-    [61; 62) 'i': i32\n-    [64; 65) '2': i32\n-    [64; 67) '2*i': i32\n-    [66; 67) 'i': i32\n+    [60; 67) '|i| 2*i': |u32| -> u64\n+    [61; 62) 'i': u32\n+    [64; 65) '2': u32\n+    [64; 67) '2*i': u32\n+    [66; 67) 'i': u32\n     [78; 79) 'b': u64\n     [82; 83) 'a': S\n     [82; 85) 'a.0': fn(u32) -> u64"}]}