{"sha": "549f0fd9f7740954cb14367d735db724669c8f79", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0OWYwZmQ5Zjc3NDA5NTRjYjE0MzY3ZDczNWRiNzI0NjY5YzhmNzk=", "commit": {"author": {"name": "John Renner", "email": "john@jrenner.net", "date": "2018-07-31T22:00:45Z"}, "committer": {"name": "John Renner", "email": "john@jrenner.net", "date": "2018-07-31T22:00:45Z"}, "message": "Address code review", "tree": {"sha": "3bff69fea0a0fdbdaa9904a941f8fa13f75a7d4c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3bff69fea0a0fdbdaa9904a941f8fa13f75a7d4c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/549f0fd9f7740954cb14367d735db724669c8f79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/549f0fd9f7740954cb14367d735db724669c8f79", "html_url": "https://github.com/rust-lang/rust/commit/549f0fd9f7740954cb14367d735db724669c8f79", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/549f0fd9f7740954cb14367d735db724669c8f79/comments", "author": {"login": "djrenren", "id": 634666, "node_id": "MDQ6VXNlcjYzNDY2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/634666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djrenren", "html_url": "https://github.com/djrenren", "followers_url": "https://api.github.com/users/djrenren/followers", "following_url": "https://api.github.com/users/djrenren/following{/other_user}", "gists_url": "https://api.github.com/users/djrenren/gists{/gist_id}", "starred_url": "https://api.github.com/users/djrenren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djrenren/subscriptions", "organizations_url": "https://api.github.com/users/djrenren/orgs", "repos_url": "https://api.github.com/users/djrenren/repos", "events_url": "https://api.github.com/users/djrenren/events{/privacy}", "received_events_url": "https://api.github.com/users/djrenren/received_events", "type": "User", "site_admin": false}, "committer": {"login": "djrenren", "id": 634666, "node_id": "MDQ6VXNlcjYzNDY2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/634666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djrenren", "html_url": "https://github.com/djrenren", "followers_url": "https://api.github.com/users/djrenren/followers", "following_url": "https://api.github.com/users/djrenren/following{/other_user}", "gists_url": "https://api.github.com/users/djrenren/gists{/gist_id}", "starred_url": "https://api.github.com/users/djrenren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djrenren/subscriptions", "organizations_url": "https://api.github.com/users/djrenren/orgs", "repos_url": "https://api.github.com/users/djrenren/repos", "events_url": "https://api.github.com/users/djrenren/events{/privacy}", "received_events_url": "https://api.github.com/users/djrenren/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7947c58d2dafefed7bfa7e8a24d5f90d11b43517", "url": "https://api.github.com/repos/rust-lang/rust/commits/7947c58d2dafefed7bfa7e8a24d5f90d11b43517", "html_url": "https://github.com/rust-lang/rust/commit/7947c58d2dafefed7bfa7e8a24d5f90d11b43517"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "96003be31522cada4a025d1fc3f105774cae73eb", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/549f0fd9f7740954cb14367d735db724669c8f79/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/549f0fd9f7740954cb14367d735db724669c8f79/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=549f0fd9f7740954cb14367d735db724669c8f79", "patch": "@@ -1373,24 +1373,29 @@ impl<'a, 'b> Folder for InvocationCollector<'a, 'b> {\n                 result\n             }\n             // Ensure that test functions are accessible from the test harness.\n+            // #[test] fn foo() {}\n+            // becomes:\n+            // #[test] pub fn foo_gensym(){}\n+            // use foo_gensym as foo;\n             ast::ItemKind::Fn(..) if self.cx.ecfg.should_test => {\n                 if self.tests_nameable && item.attrs.iter().any(|attr| is_test_or_bench(attr)) {\n-                    let orig_vis = item.vis.clone();\n+                    let orig_ident = item.ident;\n+                    let orig_vis   = item.vis.clone();\n \n                     // Publicize the item under gensymed name to avoid pollution\n                     item = item.map(|mut item| {\n                         item.vis = respan(item.vis.span, ast::VisibilityKind::Public);\n-                        item.ident = Ident::from_interned_str(\n-                                                item.ident.as_interned_str()).gensym();\n+                        item.ident = item.ident.gensym();\n                         item\n                     });\n \n                     // Use the gensymed name under the item's original visibility\n                     let use_item = self.cx.item_use_simple_(\n                         item.ident.span,\n                         orig_vis,\n-                        Some(Ident::from_interned_str(item.ident.as_interned_str())),\n-                        self.cx.path(item.ident.span, vec![Ident::from_str(\"self\"), item.ident]));\n+                        Some(orig_ident),\n+                        self.cx.path(item.ident.span,\n+                            vec![keywords::SelfValue.ident(), item.ident]));\n \n                     SmallVector::many(\n                         self.fold_unnameable(item).into_iter()"}]}