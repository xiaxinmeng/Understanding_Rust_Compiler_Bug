{"sha": "e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "node_id": "C_kwDOAAsO6NoAKGU5ZDNmZTA0ODQ0YThmMzM1ZGVjNGU0MGYzZWQ4ZTVjNGFmOTBjMzI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-10T19:51:04Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-10T19:51:04Z"}, "message": "Auto merge of #12502 - Veykril:deps, r=Veykril\n\ninternal: Bump Dependencies", "tree": {"sha": "4607b45586190d4fbf3174bf4b6706bdad015185", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4607b45586190d4fbf3174bf4b6706bdad015185"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "html_url": "https://github.com/rust-lang/rust/commit/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f58c26e0ba3e4cc0b3efe4307b17e875c629f3ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/f58c26e0ba3e4cc0b3efe4307b17e875c629f3ed", "html_url": "https://github.com/rust-lang/rust/commit/f58c26e0ba3e4cc0b3efe4307b17e875c629f3ed"}, {"sha": "76ae5434fabf019779067c85588045fe1a2e1399", "url": "https://api.github.com/repos/rust-lang/rust/commits/76ae5434fabf019779067c85588045fe1a2e1399", "html_url": "https://github.com/rust-lang/rust/commit/76ae5434fabf019779067c85588045fe1a2e1399"}], "stats": {"total": 349, "additions": 181, "deletions": 168}, "files": [{"sha": "49a73d60f56fedcc275598aa22e8cc5a261c3e4f", "filename": "Cargo.lock", "status": "modified", "additions": 46, "deletions": 48, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -43,9 +43,9 @@ checksum = \"08f9b8508dccb7687a1d6c4ce66b2b0ecef467c94667de27d8d7fe1f8d2a9cdc\"\n \n [[package]]\n name = \"anymap\"\n-version = \"0.12.1\"\n+version = \"1.0.0-beta.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"33954243bd79057c2de7338850b85983a44588021f8a5fee574a8888c6de4344\"\n+checksum = \"8f1f8f5a6f3d50d89e3797d7593a50f96bb2aaa20ca0cc7be1fb673232c91d72\"\n \n [[package]]\n name = \"arbitrary\"\n@@ -114,9 +114,9 @@ checksum = \"bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a\"\n \n [[package]]\n name = \"camino\"\n-version = \"1.0.8\"\n+version = \"1.0.9\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"07fd178c5af4d59e83498ef15cf3f154e1a6f9d091270cb86283c65ef44e9ef0\"\n+checksum = \"869119e97797867fd90f5e22af7d0bd274bd4635ebb9eb68c04f3f513ae6c412\"\n dependencies = [\n  \"serde\",\n ]\n@@ -350,9 +350,9 @@ dependencies = [\n \n [[package]]\n name = \"expect-test\"\n-version = \"1.2.2\"\n+version = \"1.3.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"7e3e6b28dccda91d8742195c71fbda412112c0c77febf56bf3d895d68b19db16\"\n+checksum = \"dced95c9dcd4e3241f95841aad395f9c8d7933a3b0b524bdeb2440885c72a271\"\n dependencies = [\n  \"dissimilar\",\n  \"once_cell\",\n@@ -378,13 +378,11 @@ checksum = \"37ab347416e802de484e4d03c7316c48f1ecb56574dfd4a46a80f173ce1de04d\"\n \n [[package]]\n name = \"flate2\"\n-version = \"1.0.23\"\n+version = \"1.0.24\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"b39522e96686d38f4bc984b9198e3a0613264abaebaff2c5c918bfa6b6da09af\"\n+checksum = \"f82b0f4c27ad9f8bfd1f3208d882da2b09c301bc1c828fd3a00d0216d2fbbff6\"\n dependencies = [\n- \"cfg-if\",\n  \"crc32fast\",\n- \"libc\",\n  \"miniz_oxide\",\n ]\n \n@@ -727,9 +725,9 @@ dependencies = [\n \n [[package]]\n name = \"indexmap\"\n-version = \"1.8.1\"\n+version = \"1.8.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"0f647032dfaa1f8b6dc29bd3edb7bbef4861b8b8007ebb118d6db284fd59f6ee\"\n+checksum = \"e6012d540c5baa3589337a98ce73408de9b5a25ec9fc2c6fd6be8f0d39e0ca5a\"\n dependencies = [\n  \"autocfg\",\n  \"hashbrown 0.11.2\",\n@@ -925,9 +923,9 @@ checksum = \"2dffe52ecf27772e601905b7522cb4ef790d2cc203488bbd0e2fe85fcb74566d\"\n \n [[package]]\n name = \"memmap2\"\n-version = \"0.5.3\"\n+version = \"0.5.4\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"057a3db23999c867821a7a59feb06a578fcb03685e983dff90daf9e7d24ac08f\"\n+checksum = \"d5172b50c23043ff43dd53e51392f36519d9b35a8f3a410d30ece5d1aedd58ae\"\n dependencies = [\n  \"libc\",\n ]\n@@ -952,9 +950,9 @@ dependencies = [\n \n [[package]]\n name = \"miniz_oxide\"\n-version = \"0.5.1\"\n+version = \"0.5.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"d2b29bd4bc3f33391105ebee3589c19197c4271e3e5a9ec9bfe8127eeff8f082\"\n+checksum = \"6f5c75688da582b8ffc1f1799e9db273f32133c49e048f614d22ec3256773ccc\"\n dependencies = [\n  \"adler\",\n ]\n@@ -1019,9 +1017,9 @@ dependencies = [\n \n [[package]]\n name = \"once_cell\"\n-version = \"1.11.0\"\n+version = \"1.12.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"7b10983b38c53aebdf33f542c6275b0f58a238129d00c4ae0e6fb59738d783ca\"\n+checksum = \"7709cef83f0c1f58f666e746a08b21e0085f7440fa6a29cc194d68aac97a4225\"\n \n [[package]]\n name = \"oorandom\"\n@@ -1042,9 +1040,9 @@ dependencies = [\n \n [[package]]\n name = \"parking_lot\"\n-version = \"0.12.0\"\n+version = \"0.12.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"87f5ec2493a61ac0506c0f4199f99070cbe83857b0337006a30f3e6719b8ef58\"\n+checksum = \"3742b2c103b9f06bc9fff0a37ff4912935851bee6d36f3c02bcc755bcfec228f\"\n dependencies = [\n  \"lock_api\",\n  \"parking_lot_core 0.9.3\",\n@@ -1291,9 +1289,9 @@ dependencies = [\n \n [[package]]\n name = \"regex\"\n-version = \"1.5.5\"\n+version = \"1.5.6\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"1a11647b6b25ff05a515cb92c365cec08801e83423a235b51e231e1808747286\"\n+checksum = \"d83f127d94bdbcda4c8cc2e50f6f84f4b611f69c902699ca385a39c3a75f9ff1\"\n dependencies = [\n  \"regex-syntax\",\n ]\n@@ -1309,15 +1307,15 @@ dependencies = [\n \n [[package]]\n name = \"regex-syntax\"\n-version = \"0.6.25\"\n+version = \"0.6.26\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"f497285884f3fcff424ffc933e56d7cbca511def0c9831a7f9b5f6153e3cc89b\"\n+checksum = \"49b3de9ec5dc0a3417da371aab17d729997c15010e7fd24ff707773a33bddb64\"\n \n [[package]]\n name = \"rowan\"\n-version = \"0.15.4\"\n+version = \"0.15.5\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"a4c1112d7b23c800be3a0dae244886b71d96b1461b57b31b56e4c679acbe614f\"\n+checksum = \"ce1f383129e417a6265b16ed78e6e9307748f0863b2ba75f78ff14717db5b017\"\n dependencies = [\n  \"countme\",\n  \"hashbrown 0.12.1\",\n@@ -1351,7 +1349,7 @@ dependencies = [\n  \"mimalloc\",\n  \"num_cpus\",\n  \"oorandom\",\n- \"parking_lot 0.12.0\",\n+ \"parking_lot 0.12.1\",\n  \"proc-macro-api\",\n  \"proc-macro-srv\",\n  \"profile\",\n@@ -1458,9 +1456,9 @@ checksum = \"d29ab0c6d3fc0ee92fe66e2d99f700eab17a8d57d1c1d3b748380fb20baa78cd\"\n \n [[package]]\n name = \"semver\"\n-version = \"1.0.9\"\n+version = \"1.0.10\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"8cb243bdfdb5936c8dc3c45762a19d12ab4550cdc753bc247637d4ec35a040fd\"\n+checksum = \"a41d061efea015927ac527063765e73601444cdc344ba855bc7bd44578b25e1c\"\n dependencies = [\n  \"serde\",\n ]\n@@ -1558,9 +1556,9 @@ dependencies = [\n \n [[package]]\n name = \"syn\"\n-version = \"1.0.95\"\n+version = \"1.0.96\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"fbaf6116ab8924f39d52792136fb74fd60a80194cf1b1c6ffa6453eef1c3f942\"\n+checksum = \"0748dd251e24453cb8717f0354206b91557e4ec8703673a4b30208f2abaf1ebf\"\n dependencies = [\n  \"proc-macro2\",\n  \"quote\",\n@@ -1649,9 +1647,9 @@ dependencies = [\n \n [[package]]\n name = \"tikv-jemalloc-ctl\"\n-version = \"0.4.2\"\n+version = \"0.5.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"eb833c46ecbf8b6daeccb347cefcabf9c1beb5c9b0f853e1cec45632d9963e69\"\n+checksum = \"e37706572f4b151dff7a0146e040804e9c26fe3a3118591112f05cf12a4216c1\"\n dependencies = [\n  \"libc\",\n  \"paste\",\n@@ -1660,9 +1658,9 @@ dependencies = [\n \n [[package]]\n name = \"tikv-jemalloc-sys\"\n-version = \"0.4.3+5.2.1-patched.2\"\n+version = \"0.5.0+5.3.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"a1792ccb507d955b46af42c123ea8863668fae24d03721e40cad6a41773dbb49\"\n+checksum = \"aeab4310214fe0226df8bfeb893a291a58b19682e8a07e1e1d4483ad4200d315\"\n dependencies = [\n  \"cc\",\n  \"fs_extra\",\n@@ -1671,9 +1669,9 @@ dependencies = [\n \n [[package]]\n name = \"tikv-jemallocator\"\n-version = \"0.4.3\"\n+version = \"0.5.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"a5b7bcecfafe4998587d636f9ae9d55eb9d0499877b88757767c346875067098\"\n+checksum = \"20612db8a13a6c06d57ec83953694185a367e16945f66565e8028d2c0bd76979\"\n dependencies = [\n  \"libc\",\n  \"tikv-jemalloc-sys\",\n@@ -1703,9 +1701,9 @@ dependencies = [\n \n [[package]]\n name = \"tracing\"\n-version = \"0.1.34\"\n+version = \"0.1.35\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"5d0ecdcb44a79f0fe9844f0c4f33a342cbcbb5117de8001e6ba0dc2351327d09\"\n+checksum = \"a400e31aa60b9d44a52a8ee0343b5b18566b03a8321e0d321f695cf56e940160\"\n dependencies = [\n  \"cfg-if\",\n  \"pin-project-lite\",\n@@ -1726,11 +1724,11 @@ dependencies = [\n \n [[package]]\n name = \"tracing-core\"\n-version = \"0.1.26\"\n+version = \"0.1.27\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"f54c8ca710e81886d498c2fd3331b56c93aa248d49de2222ad2742247c60072f\"\n+checksum = \"7709595b8878a4965ce5e87ebf880a7d39c9afc6837721b21a5a816a8117d921\"\n dependencies = [\n- \"lazy_static\",\n+ \"once_cell\",\n  \"valuable\",\n ]\n \n@@ -1763,9 +1761,9 @@ dependencies = [\n \n [[package]]\n name = \"tracing-tree\"\n-version = \"0.2.0\"\n+version = \"0.2.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"3ce989c9962c7f61fe084dd4a230eec784649dfc2392467c790007c3a6e134e7\"\n+checksum = \"d07e90b329c621ade432823988574e820212648aa40e7a2497777d58de0fb453\"\n dependencies = [\n  \"ansi_term\",\n  \"atty\",\n@@ -2041,18 +2039,18 @@ checksum = \"45d11d5fc2a97287eded8b170ca80533b3c42646dd7fa386a5eb045817921022\"\n \n [[package]]\n name = \"xshell\"\n-version = \"0.2.1\"\n+version = \"0.2.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"4884417669886d3abff14feec797179526ade713f212e54ec08b19bc6bdc86aa\"\n+checksum = \"6d47097dc5c85234b1e41851b3422dd6d19b3befdd35b4ae5ce386724aeca981\"\n dependencies = [\n  \"xshell-macros\",\n ]\n \n [[package]]\n name = \"xshell-macros\"\n-version = \"0.2.1\"\n+version = \"0.2.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"37d92065701c3611323f96eac5475b995421fc7eb2bcba1336cdd80b9b2fb68f\"\n+checksum = \"88301b56c26dd9bf5c43d858538f82d6f3f7764767defbc5d34e59459901c41a\"\n \n [[package]]\n name = \"xtask\""}, {"sha": "9db9bfdb6a41b67e991ebe2d6f604bc4c71adf16", "filename": "crates/cfg/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fcfg%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fcfg%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcfg%2FCargo.toml?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -17,7 +17,7 @@ tt = { path = \"../tt\", version = \"0.0.0\" }\n [dev-dependencies]\n mbe = { path = \"../mbe\" }\n syntax = { path = \"../syntax\" }\n-expect-test = \"1.2.2\"\n+expect-test = \"1.3.0\"\n oorandom = \"11.1.3\"\n # We depend on both individually instead of using `features = [\"derive\"]` to microoptimize the\n # build graph: if the feature was enabled, syn would be built early on in the graph if `smolstr`"}, {"sha": "ff1028cf623cb69c35aadd60dbaefeedde2ba235", "filename": "crates/flycheck/Cargo.toml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fflycheck%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fflycheck%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fflycheck%2FCargo.toml?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -11,10 +11,10 @@ doctest = false\n \n [dependencies]\n crossbeam-channel = \"0.5.4\"\n-tracing = \"0.1.32\"\n+tracing = \"0.1.35\"\n cargo_metadata = \"0.14.2\"\n-serde = { version = \"1.0.136\", features = [\"derive\"] }\n-serde_json = \"1.0.79\"\n+serde = { version = \"1.0.137\", features = [\"derive\"] }\n+serde_json = \"1.0.81\"\n jod-thread = \"0.1.2\"\n \n toolchain = { path = \"../toolchain\", version = \"0.0.0\" }"}, {"sha": "cc276d402bb02b45ad1a3ff7c40fa84c51b8e856", "filename": "crates/hir-def/Cargo.toml", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fhir-def%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fhir-def%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2FCargo.toml?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -10,7 +10,7 @@ rust-version = \"1.57\"\n doctest = false\n \n [dependencies]\n-anymap = \"0.12.1\"\n+anymap = \"1.0.0-beta.2\"\n arrayvec = \"0.7.2\"\n bitflags = \"1.3.2\"\n cov-mark = \"2.0.0-pre.1\"\n@@ -20,13 +20,13 @@ drop_bomb = \"0.1.5\"\n either = \"1.6.1\"\n fst = { version = \"0.4.7\", default-features = false }\n hashbrown = { version = \"0.12.1\", default-features = false }\n-indexmap = \"1.8.0\"\n+indexmap = \"1.8.2\"\n itertools = \"0.10.3\"\n la-arena = { version = \"0.3.0\", path = \"../../lib/la-arena\" }\n-once_cell = \"1.10.0\"\n+once_cell = \"1.12.0\"\n rustc-hash = \"1.1.0\"\n smallvec = \"1.8.0\"\n-tracing = \"0.1.32\"\n+tracing = \"0.1.35\"\n \n stdx = { path = \"../stdx\", version = \"0.0.0\" }\n base-db = { path = \"../base-db\", version = \"0.0.0\" }\n@@ -40,4 +40,4 @@ limit = { path = \"../limit\", version = \"0.0.0\" }\n \n [dev-dependencies]\n test-utils = { path = \"../test-utils\" }\n-expect-test = \"1.2.2\"\n+expect-test = \"1.3.0\""}, {"sha": "9e72f27ea4e61ec378e3934324070b84e0f616e2", "filename": "crates/hir-expand/Cargo.toml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fhir-expand%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fhir-expand%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-expand%2FCargo.toml?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -11,12 +11,12 @@ doctest = false\n \n [dependencies]\n cov-mark = \"2.0.0-pre.1\"\n-tracing = \"0.1.32\"\n+tracing = \"0.1.35\"\n either = \"1.6.1\"\n rustc-hash = \"1.1.0\"\n la-arena = { version = \"0.3.0\", path = \"../../lib/la-arena\" }\n itertools = \"0.10.3\"\n-hashbrown = { version = \"0.12.0\", features = [\n+hashbrown = { version = \"0.12.1\", features = [\n     \"inline-more\",\n ], default-features = false }\n \n@@ -29,4 +29,4 @@ mbe = { path = \"../mbe\", version = \"0.0.0\" }\n limit = { path = \"../limit\", version = \"0.0.0\" }\n \n [dev-dependencies]\n-expect-test = \"1.2.2\"\n+expect-test = \"1.3.0\""}, {"sha": "4c5bd2c89c9238f760e2e73e4b8d5b0620f024f9", "filename": "crates/hir-ty/Cargo.toml", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fhir-ty%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fhir-ty%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2FCargo.toml?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -15,14 +15,14 @@ itertools = \"0.10.3\"\n arrayvec = \"0.7.2\"\n smallvec = \"1.8.0\"\n ena = \"0.14.0\"\n-tracing = \"0.1.32\"\n+tracing = \"0.1.35\"\n rustc-hash = \"1.1.0\"\n scoped-tls = \"1.0.0\"\n chalk-solve = { version = \"0.82.0\", default-features = false }\n chalk-ir = \"0.82.0\"\n chalk-recursive = { version = \"0.82.0\", default-features = false }\n la-arena = { version = \"0.3.0\", path = \"../../lib/la-arena\" }\n-once_cell = \"1.10.0\"\n+once_cell = \"1.12.0\"\n typed-arena = \"2.0.1\"\n \n stdx = { path = \"../stdx\", version = \"0.0.0\" }\n@@ -35,10 +35,10 @@ limit = { path = \"../limit\", version = \"0.0.0\" }\n \n [dev-dependencies]\n test-utils = { path = \"../test-utils\" }\n-expect-test = \"1.2.2\"\n-tracing = \"0.1.32\"\n-tracing-subscriber = { version = \"0.3.9\", default-features = false, features = [\n+expect-test = \"1.3.0\"\n+tracing = \"0.1.35\"\n+tracing-subscriber = { version = \"0.3.11\", default-features = false, features = [\n     \"env-filter\",\n     \"registry\",\n ] }\n-tracing-tree = \"0.2.0\"\n+tracing-tree = \"0.2.1\""}, {"sha": "8f59d0dafea63c1806fb916e5f06b77d9f5d5f1c", "filename": "crates/hir/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fhir%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fhir%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2FCargo.toml?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -15,7 +15,7 @@ either = \"1.6.1\"\n arrayvec = \"0.7.2\"\n itertools = \"0.10.3\"\n smallvec = \"1.8.0\"\n-once_cell = \"1.10.0\"\n+once_cell = \"1.12.0\"\n \n stdx = { path = \"../stdx\", version = \"0.0.0\" }\n syntax = { path = \"../syntax\", version = \"0.0.0\" }"}, {"sha": "592e7d3b977aeb8c8a3a40ed83111f7df4c7c7fb", "filename": "crates/hir/src/semantics.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fhir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fhir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsemantics.rs?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -618,7 +618,7 @@ impl<'db> SemanticsImpl<'db> {\n \n         if first == last {\n             self.descend_into_macros_impl(first, &mut |InFile { value, .. }| {\n-                if let Some(node) = value.ancestors().find_map(N::cast) {\n+                if let Some(node) = value.parent_ancestors().find_map(N::cast) {\n                     res.push(node)\n                 }\n                 false\n@@ -737,7 +737,7 @@ impl<'db> SemanticsImpl<'db> {\n             let was_not_remapped = (|| {\n                 // are we inside an attribute macro call\n                 let containing_attribute_macro_call = self.with_ctx(|ctx| {\n-                    token.value.ancestors().filter_map(ast::Item::cast).find_map(|item| {\n+                    token.value.parent_ancestors().filter_map(ast::Item::cast).find_map(|item| {\n                         if item.attrs().next().is_none() {\n                             // Don't force populate the dyn cache for items that don't have an attribute anyways\n                             return None;\n@@ -758,7 +758,12 @@ impl<'db> SemanticsImpl<'db> {\n                 // or are we inside a function-like macro call\n                 if let Some(tt) =\n                     // FIXME replace map.while_some with take_while once stable\n-                    token.value.ancestors().map(ast::TokenTree::cast).while_some().last()\n+                    token\n+                        .value\n+                        .parent_ancestors()\n+                        .map(ast::TokenTree::cast)\n+                        .while_some()\n+                        .last()\n                 {\n                     let parent = tt.syntax().parent()?;\n                     // check for derive attribute here"}, {"sha": "9e7c99f74e4573aa1e3996f0168b39b3961f2f53", "filename": "crates/ide-assists/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide-assists%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide-assists%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2FCargo.toml?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -25,4 +25,4 @@ hir = { path = \"../hir\", version = \"0.0.0\" }\n [dev-dependencies]\n test-utils = { path = \"../test-utils\" }\n sourcegen = { path = \"../sourcegen\" }\n-expect-test = \"1.2.2\"\n+expect-test = \"1.3.0\""}, {"sha": "b5a5694d01cd199bca323aab83a765c2bbdaea13", "filename": "crates/ide-assists/src/handlers/expand_glob_import.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fexpand_glob_import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fexpand_glob_import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fexpand_glob_import.rs?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -93,7 +93,7 @@ pub(crate) fn expand_glob_import(acc: &mut Assists, ctx: &AssistContext) -> Opti\n fn find_parent_and_path(\n     star: &SyntaxToken,\n ) -> Option<(Either<ast::UseTree, ast::UseTreeList>, ast::Path)> {\n-    return star.ancestors().find_map(|n| {\n+    return star.parent_ancestors().find_map(|n| {\n         find_use_tree_list(n.clone())\n             .map(|(u, p)| (Either::Right(u), p))\n             .or_else(|| find_use_tree(n).map(|(u, p)| (Either::Left(u), p)))\n@@ -203,8 +203,13 @@ fn is_mod_visible_from(ctx: &AssistContext, module: Module, from: Module) -> boo\n // use baz::Baz;\n // \u2191 ---------------\n fn find_imported_defs(ctx: &AssistContext, star: SyntaxToken) -> Option<Vec<Definition>> {\n-    let parent_use_item_syntax =\n-        star.ancestors().find_map(|n| if ast::Use::can_cast(n.kind()) { Some(n) } else { None })?;\n+    let parent_use_item_syntax = star.parent_ancestors().find_map(|n| {\n+        if ast::Use::can_cast(n.kind()) {\n+            Some(n)\n+        } else {\n+            None\n+        }\n+    })?;\n \n     Some(\n         [Direction::Prev, Direction::Next]"}, {"sha": "463d6f338634d1e8fb40ab9fed9993fa3dd83a7c", "filename": "crates/ide-assists/src/handlers/extract_function.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fextract_function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fextract_function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fextract_function.rs?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -1017,7 +1017,7 @@ fn path_element_of_reference(\n         stdx::never!(false, \"cannot find token at variable usage: {:?}\", reference);\n         None\n     })?;\n-    let path = token.ancestors().find_map(ast::Expr::cast).or_else(|| {\n+    let path = token.parent_ancestors().find_map(ast::Expr::cast).or_else(|| {\n         stdx::never!(false, \"cannot find path parent of variable usage: {:?}\", token);\n         None\n     })?;"}, {"sha": "dc6965cfef3b49ce6f64e7f628a03b0025e8400d", "filename": "crates/ide-assists/src/handlers/flip_comma.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fflip_comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fflip_comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fflip_comma.rs?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -30,7 +30,7 @@ pub(crate) fn flip_comma(acc: &mut Assists, ctx: &AssistContext) -> Option<()> {\n \n     // Don't apply a \"flip\" inside the macro call\n     // since macro input are just mere tokens\n-    if comma.ancestors().any(|it| it.kind() == SyntaxKind::MACRO_CALL) {\n+    if comma.parent_ancestors().any(|it| it.kind() == SyntaxKind::MACRO_CALL) {\n         return None;\n     }\n "}, {"sha": "45336d704dff310d5d88ebc9ba8cece82fbe444c", "filename": "crates/ide-assists/src/handlers/unwrap_block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide-assists%2Fsrc%2Fhandlers%2Funwrap_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide-assists%2Fsrc%2Fhandlers%2Funwrap_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Fhandlers%2Funwrap_block.rs?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -30,7 +30,7 @@ pub(crate) fn unwrap_block(acc: &mut Assists, ctx: &AssistContext) -> Option<()>\n     let assist_label = \"Unwrap block\";\n \n     let l_curly_token = ctx.find_token_syntax_at_offset(T!['{'])?;\n-    let mut block = ast::BlockExpr::cast(l_curly_token.ancestors().nth(1)?)?;\n+    let mut block = ast::BlockExpr::cast(l_curly_token.parent_ancestors().nth(1)?)?;\n     let target = block.syntax().text_range();\n     let mut parent = block.syntax().parent()?;\n     if ast::MatchArm::can_cast(parent.kind()) {"}, {"sha": "2dee2579eb87d08228b40562b1bbc4d17aa0473f", "filename": "crates/ide-completion/Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide-completion%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide-completion%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2FCargo.toml?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -13,7 +13,7 @@ doctest = false\n cov-mark = \"2.0.0-pre.1\"\n itertools = \"0.10.3\"\n \n-once_cell = \"1.10.0\"\n+once_cell = \"1.12.0\"\n smallvec = \"1.8.0\"\n \n stdx = { path = \"../stdx\", version = \"0.0.0\" }\n@@ -28,6 +28,6 @@ profile = { path = \"../profile\", version = \"0.0.0\" }\n hir = { path = \"../hir\", version = \"0.0.0\" }\n \n [dev-dependencies]\n-expect-test = \"1.2.2\"\n+expect-test = \"1.3.0\"\n \n test-utils = { path = \"../test-utils\" }"}, {"sha": "67648ac17b5b07172e8b2568f26090df461a9b62", "filename": "crates/ide-completion/src/completions/fn_param.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide-completion%2Fsrc%2Fcompletions%2Ffn_param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide-completion%2Fsrc%2Fcompletions%2Ffn_param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcompletions%2Ffn_param.rs?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -73,7 +73,7 @@ fn fill_fn_params(\n         });\n     };\n \n-    for node in ctx.token.ancestors() {\n+    for node in ctx.token.parent_ancestors() {\n         match_ast! {\n             match node {\n                 ast::SourceFile(it) => it.items().filter_map(|item| match item {\n@@ -159,7 +159,7 @@ fn should_add_self_completions(ctx: &CompletionContext, param_list: &ast::ParamL\n }\n \n fn comma_wrapper(ctx: &CompletionContext) -> Option<(impl Fn(&str) -> String, TextRange)> {\n-    let param = ctx.token.ancestors().find(|node| node.kind() == SyntaxKind::PARAM)?;\n+    let param = ctx.token.parent_ancestors().find(|node| node.kind() == SyntaxKind::PARAM)?;\n \n     let next_token_kind = {\n         let t = param.last_token()?.next_token()?;"}, {"sha": "3e03528f0cda90eb9832716fb50b09306c622358", "filename": "crates/ide-completion/src/completions/mod_.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fmod_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fmod_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fmod_.rs?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -30,7 +30,9 @@ pub(crate) fn complete_mod(acc: &mut Completions, ctx: &CompletionContext) -> Op\n     // For `mod $0`, `ctx.module` is its parent, but for `mod f$0`, it's `mod f` itself, but we're\n     // interested in its parent.\n     if ctx.original_token.kind() == SyntaxKind::IDENT {\n-        if let Some(module) = ctx.original_token.ancestors().nth(1).and_then(ast::Module::cast) {\n+        if let Some(module) =\n+            ctx.original_token.parent_ancestors().nth(1).and_then(ast::Module::cast)\n+        {\n             match ctx.sema.to_def(&module) {\n                 Some(module) if module == current_module => {\n                     if let Some(parent) = current_module.parent(ctx.db) {"}, {"sha": "bc717f6da8ac2787a29d779c88e5adefae7b421c", "filename": "crates/ide-completion/src/completions/use_.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fuse_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fuse_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fuse_.rs?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -42,7 +42,7 @@ pub(crate) fn complete_use_tree(acc: &mut Completions, ctx: &CompletionContext)\n             };\n \n             let mut already_imported_names = FxHashSet::default();\n-            if let Some(list) = ctx.token.ancestors().find_map(ast::UseTreeList::cast) {\n+            if let Some(list) = ctx.token.parent_ancestors().find_map(ast::UseTreeList::cast) {\n                 let use_tree = list.parent_use_tree();\n                 if use_tree.path().as_ref() == Some(path) {\n                     for tree in list.use_trees().filter(|tree| tree.is_simple_path()) {"}, {"sha": "bc46ff7f2d7586cd9ec7f6223b241cb1637ae91e", "filename": "crates/ide-completion/src/patterns.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide-completion%2Fsrc%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide-completion%2Fsrc%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fpatterns.rs?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -178,7 +178,7 @@ pub(crate) fn is_in_token_of_for_loop(element: SyntaxElement) -> bool {\n     (|| {\n         let syntax_token = element.into_token()?;\n         let range = syntax_token.text_range();\n-        let for_expr = syntax_token.ancestors().find_map(ast::ForExpr::cast)?;\n+        let for_expr = syntax_token.parent_ancestors().find_map(ast::ForExpr::cast)?;\n \n         // check if the current token is the `in` token of a for loop\n         if let Some(token) = for_expr.in_token() {"}, {"sha": "d22f87994f63432b8ae952ff036c0d09aa36e15d", "filename": "crates/ide-db/Cargo.toml", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide-db%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide-db%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-db%2FCargo.toml?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -11,15 +11,15 @@ doctest = false\n \n [dependencies]\n cov-mark = \"2.0.0-pre.1\"\n-tracing = \"0.1.32\"\n-rayon = \"1.5.1\"\n+tracing = \"0.1.35\"\n+rayon = \"1.5.3\"\n fst = { version = \"0.4.7\", default-features = false }\n rustc-hash = \"1.1.0\"\n-once_cell = \"1.10.0\"\n+once_cell = \"1.12.0\"\n either = \"1.6.1\"\n itertools = \"0.10.3\"\n arrayvec = \"0.7.2\"\n-indexmap = \"1.8.0\"\n+indexmap = \"1.8.2\"\n \n stdx = { path = \"../stdx\", version = \"0.0.0\" }\n parser = { path = \"../parser\", version = \"0.0.0\" }\n@@ -35,5 +35,5 @@ limit = { path = \"../limit\", version = \"0.0.0\" }\n [dev-dependencies]\n test-utils = { path = \"../test-utils\" }\n sourcegen = { path = \"../sourcegen\" }\n-xshell = \"0.2.1\"\n-expect-test = \"1.2.2\"\n+xshell = \"0.2.2\"\n+expect-test = \"1.3.0\""}, {"sha": "f48a5700866560d7d919c33a100285ea4bf3617c", "filename": "crates/ide-db/src/syntax_helpers/format_string.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide-db%2Fsrc%2Fsyntax_helpers%2Fformat_string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide-db%2Fsrc%2Fsyntax_helpers%2Fformat_string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-db%2Fsrc%2Fsyntax_helpers%2Fformat_string.rs?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -14,7 +14,7 @@ pub fn is_format_string(string: &ast::String) -> bool {\n     // This setup lets us correctly highlight the components of `concat!(\"{}\", \"bla\")` format\n     // strings. It still fails for `concat!(\"{\", \"}\")`, but that is rare.\n     (|| {\n-        let macro_call = string.syntax().ancestors().find_map(ast::MacroCall::cast)?;\n+        let macro_call = string.syntax().parent_ancestors().find_map(ast::MacroCall::cast)?;\n         let name = macro_call.path()?.segment()?.name_ref()?;\n \n         if !matches!("}, {"sha": "f37e754feaf62499fb809a27d16bf3088f9ed8b4", "filename": "crates/ide-diagnostics/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide-diagnostics%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide-diagnostics%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-diagnostics%2FCargo.toml?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -25,7 +25,7 @@ hir = { path = \"../hir\", version = \"0.0.0\" }\n ide-db = { path = \"../ide-db\", version = \"0.0.0\" }\n \n [dev-dependencies]\n-expect-test = \"1.2.2\"\n+expect-test = \"1.3.0\"\n \n test-utils = { path = \"../test-utils\" }\n sourcegen = { path = \"../sourcegen\" }"}, {"sha": "20e02d478250d502a8e0d1e1c640f0e3ee30bfed", "filename": "crates/ide-ssr/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide-ssr%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide-ssr%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-ssr%2FCargo.toml?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -23,4 +23,4 @@ hir = { path = \"../hir\", version = \"0.0.0\" }\n \n [dev-dependencies]\n test-utils = { path = \"../test-utils\" }\n-expect-test = \"1.2.2\"\n+expect-test = \"1.3.0\""}, {"sha": "e27ef6e35ef42150fc28a413b63f06869057dc15", "filename": "crates/ide-ssr/src/replacing.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide-ssr%2Fsrc%2Freplacing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide-ssr%2Fsrc%2Freplacing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-ssr%2Fsrc%2Freplacing.rs?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -209,8 +209,10 @@ impl ReplacementRenderer<'_> {\n fn token_is_method_call_receiver(token: &SyntaxToken) -> bool {\n     // Find the first method call among the ancestors of `token`, then check if the only token\n     // within the receiver is `token`.\n-    if let Some(receiver) =\n-        token.ancestors().find_map(ast::MethodCallExpr::cast).and_then(|call| call.receiver())\n+    if let Some(receiver) = token\n+        .parent_ancestors()\n+        .find_map(ast::MethodCallExpr::cast)\n+        .and_then(|call| call.receiver())\n     {\n         let tokens = receiver.syntax().descendants_with_tokens().filter_map(|node_or_token| {\n             match node_or_token {"}, {"sha": "64263161a9b87c39c44a9d6b4fd554a6d9ae302d", "filename": "crates/ide/Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2FCargo.toml?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -14,7 +14,7 @@ cov-mark = \"2.0.0-pre.1\"\n crossbeam-channel = \"0.5.4\"\n either = \"1.6.1\"\n itertools = \"0.10.3\"\n-tracing = \"0.1.32\"\n+tracing = \"0.1.35\"\n oorandom = \"11.1.3\"\n pulldown-cmark-to-cmark = \"10.0.1\"\n pulldown-cmark = { version = \"0.9.1\", default-features = false }\n@@ -41,4 +41,4 @@ toolchain = { path = \"../toolchain\", version = \"0.0.0\" }\n \n [dev-dependencies]\n test-utils = { path = \"../test-utils\" }\n-expect-test = \"1.2.2\"\n+expect-test = \"1.3.0\""}, {"sha": "a18a6bea979881e517ceee1f13d065919995d108", "filename": "crates/ide/src/call_hierarchy.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide%2Fsrc%2Fcall_hierarchy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide%2Fsrc%2Fcall_hierarchy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fcall_hierarchy.rs?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -86,7 +86,7 @@ pub(crate) fn outgoing_calls(db: &RootDatabase, position: FilePosition) -> Optio\n \n     sema.descend_into_macros(token)\n         .into_iter()\n-        .filter_map(|it| it.ancestors().nth(1).and_then(ast::Item::cast))\n+        .filter_map(|it| it.parent_ancestors().nth(1).and_then(ast::Item::cast))\n         .filter_map(|item| match item {\n             ast::Item::Const(c) => c.body().map(|it| it.syntax().descendants()),\n             ast::Item::Fn(f) => f.body().map(|it| it.syntax().descendants()),"}, {"sha": "08085ac7841f2c514d0bbfcc92dfd895df19a2bf", "filename": "crates/ide/src/doc_links.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide%2Fsrc%2Fdoc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide%2Fsrc%2Fdoc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdoc_links.rs?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -231,7 +231,7 @@ pub(crate) fn token_as_doc_comment(doc_token: &SyntaxToken) -> Option<DocComment\n     (match_ast! {\n         match doc_token {\n             ast::Comment(comment) => TextSize::try_from(comment.prefix().len()).ok(),\n-            ast::String(string) => doc_token.ancestors().find_map(ast::Attr::cast)\n+            ast::String(string) => doc_token.parent_ancestors().find_map(ast::Attr::cast)\n                 .filter(|attr| attr.simple_name().as_deref() == Some(\"doc\")).and_then(|_| string.open_quote_text_range().map(|it| it.len())),\n             _ => None,\n         }\n@@ -255,7 +255,7 @@ impl DocCommentToken {\n             let (node, descended_prefix_len) = match_ast! {\n                 match t {\n                     ast::Comment(comment) => (t.parent()?, TextSize::try_from(comment.prefix().len()).ok()?),\n-                    ast::String(string) => (t.ancestors().skip_while(|n| n.kind() != ATTR).nth(1)?, string.open_quote_text_range()?.len()),\n+                    ast::String(string) => (t.parent_ancestors().skip_while(|n| n.kind() != ATTR).nth(1)?, string.open_quote_text_range()?.len()),\n                     _ => return None,\n                 }\n             };"}, {"sha": "2cba5081c11d80d864604a9aa62a851784f698df", "filename": "crates/ide/src/doc_links/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide%2Fsrc%2Fdoc_links%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide%2Fsrc%2Fdoc_links%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdoc_links%2Ftests.rs?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -61,7 +61,7 @@ fn def_under_cursor(\n         .token_at_offset(position.offset)\n         .left_biased()\n         .unwrap()\n-        .ancestors()\n+        .parent_ancestors()\n         .find_map(|it| node_to_def(sema, &it))\n         .expect(\"no def found\")\n         .unwrap();"}, {"sha": "d36670e983feee6035a8e35ef9fbed7e1ba7c557", "filename": "crates/ide/src/expand_macro.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide%2Fsrc%2Fexpand_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide%2Fsrc%2Fexpand_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fexpand_macro.rs?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -46,10 +46,10 @@ pub(crate) fn expand_macro(db: &RootDatabase, position: FilePosition) -> Option<\n             return None;\n         }\n \n-        let name = descended.ancestors().filter_map(ast::Path::cast).last()?.to_string();\n+        let name = descended.parent_ancestors().filter_map(ast::Path::cast).last()?.to_string();\n         // up map out of the #[derive] expansion\n         let token = hir::InFile::new(hir_file, descended).upmap(db)?.value;\n-        let attr = token.ancestors().find_map(ast::Attr::cast)?;\n+        let attr = token.parent_ancestors().find_map(ast::Attr::cast)?;\n         let expansions = sema.expand_derive_macro(&attr)?;\n         let idx = attr\n             .token_tree()?\n@@ -69,7 +69,7 @@ pub(crate) fn expand_macro(db: &RootDatabase, position: FilePosition) -> Option<\n \n     // FIXME: Intermix attribute and bang! expansions\n     // currently we only recursively expand one of the two types\n-    let mut anc = tok.ancestors();\n+    let mut anc = tok.parent_ancestors();\n     let (name, expanded, kind) = loop {\n         let node = anc.next()?;\n "}, {"sha": "5b235e71ace98920486b8628b5d3f8c773b7c04e", "filename": "crates/ide/src/highlight_related.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide%2Fsrc%2Fhighlight_related.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide%2Fsrc%2Fhighlight_related.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhighlight_related.rs?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -183,7 +183,7 @@ fn highlight_exit_points(\n         }\n         Some(highlights)\n     }\n-    for anc in token.ancestors() {\n+    for anc in token.parent_ancestors() {\n         return match_ast! {\n             match anc {\n                 ast::Fn(fn_) => hl(sema, fn_.body().map(ast::Expr::BlockExpr)),\n@@ -254,7 +254,7 @@ fn highlight_break_points(token: SyntaxToken) -> Option<Vec<HighlightedRange>> {\n         None => true,\n     };\n     let token_kind = token.kind();\n-    for anc in token.ancestors().flat_map(ast::Expr::cast) {\n+    for anc in token.parent_ancestors().flat_map(ast::Expr::cast) {\n         return match anc {\n             ast::Expr::LoopExpr(l) if label_matches(l.label()) => hl(\n                 token_kind,\n@@ -302,7 +302,7 @@ fn highlight_yield_points(token: SyntaxToken) -> Option<Vec<HighlightedRange>> {\n         }\n         Some(highlights)\n     }\n-    for anc in token.ancestors() {\n+    for anc in token.parent_ancestors() {\n         return match_ast! {\n             match anc {\n                 ast::Fn(fn_) => hl(fn_.async_token(), fn_.body().map(ast::Expr::BlockExpr)),"}, {"sha": "3372d74af6bc2a2c42ecbd17c97a1de6193b3179", "filename": "crates/ide/src/hover.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover.rs?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -119,7 +119,7 @@ pub(crate) fn hover(\n \n     // FIXME: Definition should include known lints and the like instead of having this special case here\n     let hovered_lint = descended.iter().find_map(|token| {\n-        let attr = token.ancestors().find_map(ast::Attr::cast)?;\n+        let attr = token.parent_ancestors().find_map(ast::Attr::cast)?;\n         render::try_for_lint(&attr, token)\n     });\n     if let Some(res) = hovered_lint {\n@@ -238,7 +238,7 @@ fn hover_type_fallback(\n     original_token: &SyntaxToken,\n ) -> Option<RangeInfo<HoverResult>> {\n     let node = token\n-        .ancestors()\n+        .parent_ancestors()\n         .take_while(|it| !ast::Item::can_cast(it.kind()))\n         .find(|n| ast::Expr::can_cast(n.kind()) || ast::Pat::can_cast(n.kind()))?;\n "}, {"sha": "08621addeef4d821f44a04eabbae7e406dd4bebd", "filename": "crates/ide/src/join_lines.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide%2Fsrc%2Fjoin_lines.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide%2Fsrc%2Fjoin_lines.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fjoin_lines.rs?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -209,7 +209,7 @@ fn remove_newline(\n }\n \n fn join_single_expr_block(edit: &mut TextEditBuilder, token: &SyntaxToken) -> Option<()> {\n-    let block_expr = ast::BlockExpr::cast(token.ancestors().nth(1)?)?;\n+    let block_expr = ast::BlockExpr::cast(token.parent_ancestors().nth(1)?)?;\n     if !block_expr.is_standalone() {\n         return None;\n     }"}, {"sha": "871c9951223aafa9939645c6eddc9e91cf2b4bc6", "filename": "crates/ide/src/signature_help.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide%2Fsrc%2Fsignature_help.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide%2Fsrc%2Fsignature_help.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsignature_help.rs?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -68,7 +68,7 @@ pub(crate) fn signature_help(db: &RootDatabase, position: FilePosition) -> Optio\n         .and_then(|tok| algo::skip_trivia_token(tok, Direction::Prev))?;\n     let token = sema.descend_into_macros_single(token);\n \n-    for node in token.ancestors() {\n+    for node in token.parent_ancestors() {\n         match_ast! {\n             match node {\n                 ast::ArgList(arg_list) => {"}, {"sha": "4c5bdfd967cadba109ea6222894b6487f2d788c7", "filename": "crates/ide/src/syntax_highlighting/highlight.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -27,7 +27,7 @@ pub(super) fn token(sema: &Semantics<RootDatabase>, token: SyntaxToken) -> Optio\n \n     let highlight: Highlight = match token.kind() {\n         STRING | BYTE_STRING => HlTag::StringLiteral.into(),\n-        INT_NUMBER if token.ancestors().nth(1).map(|it| it.kind()) == Some(FIELD_EXPR) => {\n+        INT_NUMBER if token.parent_ancestors().nth(1).map(|it| it.kind()) == Some(FIELD_EXPR) => {\n             SymbolKind::Field.into()\n         }\n         INT_NUMBER | FLOAT_NUMBER => HlTag::NumericLiteral.into(),"}, {"sha": "66581d6def93f714d4a71983ae50bc8d58573921", "filename": "crates/mbe/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fmbe%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fmbe%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2FCargo.toml?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -13,7 +13,7 @@ doctest = false\n cov-mark = \"2.0.0-pre.1\"\n rustc-hash = \"1.1.0\"\n smallvec = \"1.8.0\"\n-tracing = \"0.1.32\"\n+tracing = \"0.1.35\"\n \n syntax = { path = \"../syntax\", version = \"0.0.0\" }\n parser = { path = \"../parser\", version = \"0.0.0\" }"}, {"sha": "8b9a4c2d8991402fea52aaf4eda85f020490759d", "filename": "crates/parser/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fparser%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fparser%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2FCargo.toml?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -15,5 +15,5 @@ rustc_lexer = { version = \"725.0.0\", package = \"rustc-ap-rustc_lexer\" }\n limit = { path = \"../limit\", version = \"0.0.0\" }\n \n [dev-dependencies]\n-expect-test = \"1.2.2\"\n+expect-test = \"1.3.0\"\n sourcegen = { path = \"../sourcegen\" }"}, {"sha": "88bbaee5a8ecff0d2fa0bccbfb9748ef70667ec8", "filename": "crates/proc-macro-api/Cargo.toml", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fproc-macro-api%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fproc-macro-api%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc-macro-api%2FCargo.toml?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -10,17 +10,17 @@ rust-version = \"1.57\"\n doctest = false\n \n [dependencies]\n-object = { version = \"0.28.3\", default-features = false, features = [\n+object = { version = \"0.28.4\", default-features = false, features = [\n     \"std\",\n     \"read_core\",\n     \"elf\",\n     \"macho\",\n     \"pe\",\n ] }\n-serde = { version = \"1.0.136\", features = [\"derive\"] }\n-serde_json = { version = \"1.0.79\", features = [\"unbounded_depth\"] }\n-tracing = \"0.1.32\"\n-memmap2 = \"0.5.3\"\n+serde = { version = \"1.0.137\", features = [\"derive\"] }\n+serde_json = { version = \"1.0.81\", features = [\"unbounded_depth\"] }\n+tracing = \"0.1.35\"\n+memmap2 = \"0.5.4\"\n snap = \"1.0.5\"\n \n paths = { path = \"../paths\", version = \"0.0.0\" }"}, {"sha": "e7000a259ff230cfc7fea85cf85e5d6ccae25520", "filename": "crates/proc-macro-srv/Cargo.toml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fproc-macro-srv%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fproc-macro-srv%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc-macro-srv%2FCargo.toml?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -10,23 +10,23 @@ rust-version = \"1.57\"\n doctest = false\n \n [dependencies]\n-object = { version = \"0.28.3\", default-features = false, features = [\n+object = { version = \"0.28.4\", default-features = false, features = [\n     \"std\",\n     \"read_core\",\n     \"elf\",\n     \"macho\",\n     \"pe\",\n ] }\n libloading = \"0.7.3\"\n-memmap2 = \"0.5.3\"\n+memmap2 = \"0.5.4\"\n \n tt = { path = \"../tt\", version = \"0.0.0\" }\n mbe = { path = \"../mbe\", version = \"0.0.0\" }\n paths = { path = \"../paths\", version = \"0.0.0\" }\n proc-macro-api = { path = \"../proc-macro-api\", version = \"0.0.0\" }\n \n [dev-dependencies]\n-expect-test = \"1.2.2\"\n+expect-test = \"1.3.0\"\n \n # used as proc macro test targets\n proc-macro-test = { path = \"../proc-macro-test\" }"}, {"sha": "0b78a45a24b33c8fdff95ce353b01d665c33b4d9", "filename": "crates/profile/Cargo.toml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fprofile%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fprofile%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fprofile%2FCargo.toml?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -10,12 +10,12 @@ rust-version = \"1.57\"\n doctest = false\n \n [dependencies]\n-once_cell = \"1.10.0\"\n+once_cell = \"1.12.0\"\n cfg-if = \"1.0.0\"\n-libc = \"0.2.121\"\n+libc = \"0.2.126\"\n la-arena = { version = \"0.3.0\", path = \"../../lib/la-arena\" }\n countme = { version = \"3.0.1\", features = [\"enable\"] }\n-jemalloc-ctl = { version = \"0.4.2\", package = \"tikv-jemalloc-ctl\", optional = true }\n+jemalloc-ctl = { version = \"0.5.0\", package = \"tikv-jemalloc-ctl\", optional = true }\n \n [target.'cfg(target_os = \"linux\")'.dependencies]\n perf-event = \"0.4.7\""}, {"sha": "35465d0861fa59d30a3b8030cc348aa8e91e42be", "filename": "crates/project-model/Cargo.toml", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fproject-model%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fproject-model%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject-model%2FCargo.toml?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -10,14 +10,14 @@ rust-version = \"1.57\"\n doctest = false\n \n [dependencies]\n-tracing = \"0.1.32\"\n+tracing = \"0.1.35\"\n rustc-hash = \"1.1.0\"\n cargo_metadata = \"0.14.2\"\n-semver = \"1.0.6\"\n-serde = { version = \"1.0.136\", features = [\"derive\"] }\n-serde_json = \"1.0.79\"\n-anyhow = \"1.0.56\"\n-expect-test = \"1.2.2\"\n+semver = \"1.0.10\"\n+serde = { version = \"1.0.137\", features = [\"derive\"] }\n+serde_json = \"1.0.81\"\n+anyhow = \"1.0.57\"\n+expect-test = \"1.3.0\"\n la-arena = { version = \"0.3.0\", path = \"../../lib/la-arena\" }\n \n cfg = { path = \"../cfg\", version = \"0.0.0\" }"}, {"sha": "04c986f0f2e6776812f0b8fb5dbe062674863dc2", "filename": "crates/rust-analyzer/Cargo.toml", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Frust-analyzer%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Frust-analyzer%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2FCargo.toml?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -18,31 +18,31 @@ name = \"rust-analyzer\"\n path = \"src/bin/main.rs\"\n \n [dependencies]\n-anyhow = \"1.0.56\"\n+anyhow = \"1.0.57\"\n crossbeam-channel = \"0.5.4\"\n-dissimilar = \"1.0.3\"\n+dissimilar = \"1.0.4\"\n itertools = \"0.10.3\"\n-lsp-types = { version = \"0.93\", features = [\"proposed\"] }\n-parking_lot = \"0.12.0\"\n+lsp-types = { version = \"0.93.0\", features = [\"proposed\"] }\n+parking_lot = \"0.12.1\"\n xflags = \"0.2.4\"\n oorandom = \"11.1.3\"\n rustc-hash = \"1.1.0\"\n-serde = { version = \"1.0.136\", features = [\"derive\"] }\n-serde_json = { version = \"1.0.79\", features = [\"preserve_order\"] }\n+serde = { version = \"1.0.137\", features = [\"derive\"] }\n+serde_json = { version = \"1.0.81\", features = [\"preserve_order\"] }\n threadpool = \"1.8.1\"\n-rayon = \"1.5.1\"\n+rayon = \"1.5.3\"\n num_cpus = \"1.13.1\"\n-mimalloc = { version = \"0.1.28\", default-features = false, optional = true }\n+mimalloc = { version = \"0.1.29\", default-features = false, optional = true }\n lsp-server = { version = \"0.6.0\", path = \"../../lib/lsp-server\" }\n-tracing = \"0.1.32\"\n-tracing-subscriber = { version = \"0.3.9\", default-features = false, features = [\n+tracing = \"0.1.35\"\n+tracing-subscriber = { version = \"0.3.11\", default-features = false, features = [\n     \"env-filter\",\n     \"registry\",\n     \"fmt\",\n     \"tracing-log\",\n ] }\n-tracing-log = \"0.1.2\"\n-tracing-tree = \"0.2.0\"\n+tracing-log = \"0.1.3\"\n+tracing-tree = \"0.2.1\"\n always-assert = \"0.1.2\"\n \n stdx = { path = \"../stdx\", version = \"0.0.0\" }\n@@ -70,12 +70,12 @@ proc-macro-srv = { path = \"../proc-macro-srv\", version = \"0.0.0\" }\n winapi = \"0.3.9\"\n \n [target.'cfg(not(target_env = \"msvc\"))'.dependencies]\n-jemallocator = { version = \"0.4.3\", package = \"tikv-jemallocator\", optional = true }\n+jemallocator = { version = \"0.5.0\", package = \"tikv-jemallocator\", optional = true }\n \n [dev-dependencies]\n-expect-test = \"1.2.2\"\n+expect-test = \"1.3.0\"\n jod-thread = \"0.1.2\"\n-xshell = \"0.2.1\"\n+xshell = \"0.2.2\"\n \n test-utils = { path = \"../test-utils\" }\n sourcegen = { path = \"../sourcegen\" }"}, {"sha": "02ab6081296b51c9db0ce86830b35c1ce3b5848c", "filename": "crates/rust-analyzer/tests/slow-tests/tidy.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Frust-analyzer%2Ftests%2Fslow-tests%2Ftidy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Frust-analyzer%2Ftests%2Fslow-tests%2Ftidy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Ftests%2Fslow-tests%2Ftidy.rs?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -230,6 +230,7 @@ Apache-2.0 OR MIT\n Apache-2.0 WITH LLVM-exception OR Apache-2.0 OR MIT\n Apache-2.0/MIT\n BSD-3-Clause\n+BlueOak-1.0.0 OR MIT OR Apache-2.0\n CC0-1.0 OR Artistic-2.0\n ISC\n MIT"}, {"sha": "e75867e2d81cf59bf75b46a2a2f7af1b59a3ede0", "filename": "crates/sourcegen/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fsourcegen%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fsourcegen%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsourcegen%2FCargo.toml?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -10,4 +10,4 @@ rust-version = \"1.57\"\n doctest = false\n \n [dependencies]\n-xshell = \"0.2.1\"\n+xshell = \"0.2.2\""}, {"sha": "092b99ae5152d7d54dd638c3f83359ebb95075c1", "filename": "crates/stdx/Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fstdx%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fstdx%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fstdx%2FCargo.toml?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -10,8 +10,8 @@ rust-version = \"1.57\"\n doctest = false\n \n [dependencies]\n-libc = \"0.2.121\"\n-backtrace = { version = \"0.3.64\", optional = true }\n+libc = \"0.2.126\"\n+backtrace = { version = \"0.3.65\", optional = true }\n always-assert = { version = \"0.1.2\", features = [\"log\"] }\n # Think twice before adding anything here\n "}, {"sha": "1d1ca66ee6c4585d0f315eaf05844aec32a310ca", "filename": "crates/syntax/Cargo.toml", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fsyntax%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fsyntax%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2FCargo.toml?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -13,23 +13,23 @@ doctest = false\n [dependencies]\n cov-mark = \"2.0.0-pre.1\"\n itertools = \"0.10.3\"\n-rowan = \"0.15.4\"\n+rowan = \"0.15.5\"\n rustc_lexer = { version = \"725.0.0\", package = \"rustc-ap-rustc_lexer\" }\n rustc-hash = \"1.1.0\"\n-once_cell = \"1.10.0\"\n-indexmap = \"1.8.0\"\n-smol_str = \"0.1.21\"\n+once_cell = \"1.12.0\"\n+indexmap = \"1.8.2\"\n+smol_str = \"0.1.23\"\n \n stdx = { path = \"../stdx\", version = \"0.0.0\" }\n text-edit = { path = \"../text-edit\", version = \"0.0.0\" }\n parser = { path = \"../parser\", version = \"0.0.0\" }\n profile = { path = \"../profile\", version = \"0.0.0\" }\n \n [dev-dependencies]\n-rayon = \"1.5.1\"\n-expect-test = \"1.2.2\"\n-proc-macro2 = \"1.0.36\"\n-quote = \"1.0.16\"\n+rayon = \"1.5.3\"\n+expect-test = \"1.3.0\"\n+proc-macro2 = \"1.0.39\"\n+quote = \"1.0.18\"\n ungrammar = \"1.16.1\"\n \n test-utils = { path = \"../test-utils\" }"}, {"sha": "8b14789dd917da224e63250d6373942076d68b25", "filename": "crates/syntax/src/algo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fsyntax%2Fsrc%2Falgo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fsyntax%2Fsrc%2Falgo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Falgo.rs?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -22,7 +22,7 @@ pub fn ancestors_at_offset(\n     offset: TextSize,\n ) -> impl Iterator<Item = SyntaxNode> {\n     node.token_at_offset(offset)\n-        .map(|token| token.ancestors())\n+        .map(|token| token.parent_ancestors())\n         .kmerge_by(|node1, node2| node1.text_range().len() < node2.text_range().len())\n }\n "}, {"sha": "cceafe04e37770dd85517655d04db94aff6c74e3", "filename": "crates/test-utils/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Ftest-utils%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Ftest-utils%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftest-utils%2FCargo.toml?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -11,7 +11,7 @@ doctest = false\n \n [dependencies]\n # Avoid adding deps here, this crate is widely used in tests it should compile fast!\n-dissimilar = \"1.0.3\"\n+dissimilar = \"1.0.4\"\n text-size = \"1.1.0\"\n rustc-hash = \"1.1.0\"\n "}, {"sha": "52dfb86080418f3b3fbc467de35b82dbcc4b9575", "filename": "crates/tt/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Ftt%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Ftt%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftt%2FCargo.toml?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -10,6 +10,6 @@ rust-version = \"1.57\"\n doctest = false\n \n [dependencies]\n-smol_str = \"0.1.21\"\n+smol_str = \"0.1.23\"\n \n stdx = { path = \"../stdx\", version = \"0.0.0\" }"}, {"sha": "2b8e3318a983de8f4868246facde0ad56b72df16", "filename": "crates/vfs-notify/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fvfs-notify%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fvfs-notify%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fvfs-notify%2FCargo.toml?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -10,7 +10,7 @@ rust-version = \"1.57\"\n doctest = false\n \n [dependencies]\n-tracing = \"0.1.32\"\n+tracing = \"0.1.35\"\n jod-thread = \"0.1.2\"\n walkdir = \"2.3.2\"\n crossbeam-channel = \"0.5.4\""}, {"sha": "38222476b5c958f5a884ffd9ce25ba5014a0c0ce", "filename": "crates/vfs/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fvfs%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/crates%2Fvfs%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fvfs%2FCargo.toml?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -14,4 +14,4 @@ rustc-hash = \"1.1.0\"\n fst = \"0.4.7\"\n \n paths = { path = \"../paths\", version = \"0.0.0\" }\n-indexmap = \"1.8.0\"\n+indexmap = \"1.8.2\""}, {"sha": "b2476df78df90e86279d2d86e4bc39af52b5bea5", "filename": "lib/lsp-server/Cargo.toml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/lib%2Flsp-server%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/lib%2Flsp-server%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/lib%2Flsp-server%2FCargo.toml?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -7,9 +7,9 @@ repository = \"https://github.com/rust-analyzer/rust-analyzer/tree/master/lib/lsp\n edition = \"2021\"\n \n [dependencies]\n-log = \"0.4.3\"\n-serde_json = \"1.0.34\"\n-serde = { version = \"1.0.83\", features = [\"derive\"] }\n+log = \"0.4.17\"\n+serde_json = \"1.0.81\"\n+serde = { version = \"1.0.137\", features = [\"derive\"] }\n crossbeam-channel = \"0.5.4\"\n \n [dev-dependencies]"}, {"sha": "95d44e9b9d09f7c99e82511c9f9dd180f4e27905", "filename": "xtask/Cargo.toml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/xtask%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32/xtask%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2FCargo.toml?ref=e9d3fe04844a8f335dec4e40f3ed8e5c4af90c32", "patch": "@@ -7,9 +7,9 @@ edition = \"2021\"\n rust-version = \"1.57\"\n \n [dependencies]\n-anyhow = \"1.0.56\"\n-flate2 = \"1.0.22\"\n+anyhow = \"1.0.57\"\n+flate2 = \"1.0.24\"\n write-json = \"0.1.2\"\n-xshell = \"0.2.1\"\n+xshell = \"0.2.2\"\n xflags = \"0.2.4\"\n # Avoid adding more dependencies to this crate"}]}