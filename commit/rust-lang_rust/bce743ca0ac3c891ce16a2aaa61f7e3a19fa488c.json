{"sha": "bce743ca0ac3c891ce16a2aaa61f7e3a19fa488c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjZTc0M2NhMGFjM2M4OTFjZTE2YTJhYWE2MWY3ZTNhMTlmYTQ4OGM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-11-20T01:40:03Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-11-20T01:40:03Z"}, "message": "Auto merge of #29939 - mitaa:doc_const_fn, r=alexcrichton\n\nfixes #27362", "tree": {"sha": "f1d880b6cbce4f29c9dd833aba7bb53cdf54560f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1d880b6cbce4f29c9dd833aba7bb53cdf54560f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bce743ca0ac3c891ce16a2aaa61f7e3a19fa488c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bce743ca0ac3c891ce16a2aaa61f7e3a19fa488c", "html_url": "https://github.com/rust-lang/rust/commit/bce743ca0ac3c891ce16a2aaa61f7e3a19fa488c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bce743ca0ac3c891ce16a2aaa61f7e3a19fa488c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b289892b5d4acd52237fb88ab12f825e7602280c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b289892b5d4acd52237fb88ab12f825e7602280c", "html_url": "https://github.com/rust-lang/rust/commit/b289892b5d4acd52237fb88ab12f825e7602280c"}, {"sha": "82d37f3788fbd7541d79ac357da2e00a6f218a3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/82d37f3788fbd7541d79ac357da2e00a6f218a3b", "html_url": "https://github.com/rust-lang/rust/commit/82d37f3788fbd7541d79ac357da2e00a6f218a3b"}], "stats": {"total": 62, "additions": 57, "deletions": 5}, "files": [{"sha": "d6343abfd15363fede7fdb3e82ab3936da2db5f8", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/bce743ca0ac3c891ce16a2aaa61f7e3a19fa488c/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bce743ca0ac3c891ce16a2aaa61f7e3a19fa488c/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=bce743ca0ac3c891ce16a2aaa61f7e3a19fa488c", "patch": "@@ -170,12 +170,19 @@ fn build_external_function(cx: &DocContext, tcx: &ty::ctxt, did: DefId) -> clean\n         ty::TyBareFn(_, ref f) => ((did, &f.sig).clean(cx), f.unsafety, f.abi),\n         _ => panic!(\"bad function\"),\n     };\n+\n+    let constness = if csearch::is_const_fn(&tcx.sess.cstore, did) {\n+        hir::Constness::Const\n+    } else {\n+        hir::Constness::NotConst\n+    };\n+\n     let predicates = tcx.lookup_predicates(did);\n     clean::Function {\n         decl: decl,\n         generics: (&t.generics, &predicates, subst::FnSpace).clean(cx),\n         unsafety: style,\n-        constness: hir::Constness::NotConst,\n+        constness: constness,\n         abi: abi,\n     }\n }\n@@ -345,9 +352,15 @@ pub fn build_impl(cx: &DocContext,\n                     clean::TyMethodItem(clean::TyMethod {\n                         unsafety, decl, self_, generics, abi\n                     }) => {\n+                        let constness = if csearch::is_const_fn(&tcx.sess.cstore, did) {\n+                            hir::Constness::Const\n+                        } else {\n+                            hir::Constness::NotConst\n+                        };\n+\n                         clean::MethodItem(clean::Method {\n                             unsafety: unsafety,\n-                            constness: hir::Constness::NotConst,\n+                            constness: constness,\n                             decl: decl,\n                             self_: self_,\n                             generics: generics,"}, {"sha": "a45c09f59284b938c115475af12d84bed51696da", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bce743ca0ac3c891ce16a2aaa61f7e3a19fa488c/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bce743ca0ac3c891ce16a2aaa61f7e3a19fa488c/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=bce743ca0ac3c891ce16a2aaa61f7e3a19fa488c", "patch": "@@ -1829,12 +1829,12 @@ fn item_static(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,\n \n fn item_function(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,\n                  f: &clean::Function) -> fmt::Result {\n-    try!(write!(w, \"<pre class='rust fn'>{vis}{unsafety}{abi}{constness}fn \\\n+    try!(write!(w, \"<pre class='rust fn'>{vis}{constness}{unsafety}{abi}fn \\\n                     {name}{generics}{decl}{where_clause}</pre>\",\n            vis = VisSpace(it.visibility),\n+           constness = ConstnessSpace(f.constness),\n            unsafety = UnsafetySpace(f.unsafety),\n            abi = AbiSpace(f.abi),\n-           constness = ConstnessSpace(f.constness),\n            name = it.name.as_ref().unwrap(),\n            generics = f.generics,\n            where_clause = WhereClause(&f.generics),\n@@ -2055,8 +2055,8 @@ fn render_assoc_item(w: &mut fmt::Formatter, meth: &clean::Item,\n         };\n         write!(w, \"{}{}{}fn <a href='{href}' class='fnname'>{name}</a>\\\n                    {generics}{decl}{where_clause}\",\n-               UnsafetySpace(unsafety),\n                ConstnessSpace(constness),\n+               UnsafetySpace(unsafety),\n                match abi {\n                    Abi::Rust => String::new(),\n                    a => format!(\"extern {} \", a.to_string())"}, {"sha": "e551d623ae7dba1530584b4b9f4e87004a71d434", "filename": "src/test/auxiliary/issue-27362.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/bce743ca0ac3c891ce16a2aaa61f7e3a19fa488c/src%2Ftest%2Fauxiliary%2Fissue-27362.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bce743ca0ac3c891ce16a2aaa61f7e3a19fa488c/src%2Ftest%2Fauxiliary%2Fissue-27362.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-27362.rs?ref=bce743ca0ac3c891ce16a2aaa61f7e3a19fa488c", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(const_fn)]\n+\n+pub const fn foo() {}\n+pub const unsafe fn bar() {}\n+\n+pub struct Foo;\n+\n+impl Foo {\n+    pub const unsafe fn baz() {}\n+}"}, {"sha": "179778fd1283fa196642f2fafba3075a59da9151", "filename": "src/test/rustdoc/issue-27362.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/bce743ca0ac3c891ce16a2aaa61f7e3a19fa488c/src%2Ftest%2Frustdoc%2Fissue-27362.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bce743ca0ac3c891ce16a2aaa61f7e3a19fa488c/src%2Ftest%2Frustdoc%2Fissue-27362.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-27362.rs?ref=bce743ca0ac3c891ce16a2aaa61f7e3a19fa488c", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:issue-27362.rs\n+// ignore-cross-compile\n+\n+extern crate issue_27362;\n+pub use issue_27362 as quux;\n+\n+// @matches issue_27362/quux/fn.foo.html '//pre' \"pub const fn foo()\"\n+// @matches issue_27362/quux/fn.bar.html '//pre' \"pub const unsafe fn bar()\"\n+// @matches issue_27362/quux/struct.Foo.html '//code' \"const unsafe fn baz()\""}]}