{"sha": "2b2f91638f140aa5d5a889aff185aee964f0fe40", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiMmY5MTYzOGYxNDBhYTVkNWE4ODlhZmYxODVhZWU5NjRmMGZlNDA=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-03-24T17:26:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-03-24T17:26:41Z"}, "message": "Rollup merge of #49273 - michaelwoerister:fix-extern-proc-macro-defkey, r=eddyb\n\nFix DefKey lookup for proc-macro crates.\n\nAdd a special case for proc-macro crates for `def_key()` in the metadata decoder (like we already have for many other methods in there). In the long run, it would be preferable to get rid of the need for special casing proc-macro crates (see #49271).\n\nFixes https://github.com/rust-lang/rust/issues/48739 (though I wasn't able to come up with a regression test, unfortunately)\n\nr? @eddyb", "tree": {"sha": "01e1a004f94cbaf4d1d17ba39a2b713cf567a77d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01e1a004f94cbaf4d1d17ba39a2b713cf567a77d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b2f91638f140aa5d5a889aff185aee964f0fe40", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJatopRCRBK7hj4Ov3rIwAAdHIIAHzuIhU0kvTuq9dCayVeX6i0\n7hRWN25ACLeh1tWv2/mJRiMKsJd87IRdLFJqHNr+1+Hfh6ZMmxwXM2MxTpQZfstH\nRtM8z+l7JTb0VDuAgW9859mAglxZGfOdCIgFt5bh5GcUaz14Ubc5UCGolJvxoiI4\nhuLAYYv62v2g+XdMG7Xt+TDooOHQBS66ECyJgYaDSZmRVqjA0bKyMoZbdLLMkrHC\n81mf5rdkUBQj0XqpBpXnnwlMnC5V1lQCVKz8fprU8hER0SW/f+E66lI2WRUb5Ur2\nIjs3Kvo3dfW7z+qRwnnSlNlzseemlpsEGRtmpclmU7Zv3bCdR+RpESX9WZIDWEg=\n=NXGf\n-----END PGP SIGNATURE-----\n", "payload": "tree 01e1a004f94cbaf4d1d17ba39a2b713cf567a77d\nparent 3bc81f7f4dbf5cf0d1b87292848efe78c5fac516\nparent a1a3bf2b31af680ffbbed4270efc0a2cda80ca87\nauthor kennytm <kennytm@gmail.com> 1521912401 +0800\ncommitter GitHub <noreply@github.com> 1521912401 +0800\n\nRollup merge of #49273 - michaelwoerister:fix-extern-proc-macro-defkey, r=eddyb\n\nFix DefKey lookup for proc-macro crates.\n\nAdd a special case for proc-macro crates for `def_key()` in the metadata decoder (like we already have for many other methods in there). In the long run, it would be preferable to get rid of the need for special casing proc-macro crates (see #49271).\n\nFixes https://github.com/rust-lang/rust/issues/48739 (though I wasn't able to come up with a regression test, unfortunately)\n\nr? @eddyb\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b2f91638f140aa5d5a889aff185aee964f0fe40", "html_url": "https://github.com/rust-lang/rust/commit/2b2f91638f140aa5d5a889aff185aee964f0fe40", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b2f91638f140aa5d5a889aff185aee964f0fe40/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3bc81f7f4dbf5cf0d1b87292848efe78c5fac516", "url": "https://api.github.com/repos/rust-lang/rust/commits/3bc81f7f4dbf5cf0d1b87292848efe78c5fac516", "html_url": "https://github.com/rust-lang/rust/commit/3bc81f7f4dbf5cf0d1b87292848efe78c5fac516"}, {"sha": "a1a3bf2b31af680ffbbed4270efc0a2cda80ca87", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1a3bf2b31af680ffbbed4270efc0a2cda80ca87", "html_url": "https://github.com/rust-lang/rust/commit/a1a3bf2b31af680ffbbed4270efc0a2cda80ca87"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "e938d5c1a97fe4e9d1ff6e0ad4c44e9b448ddd0a", "filename": "src/librustc_metadata/decoder.rs", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/2b2f91638f140aa5d5a889aff185aee964f0fe40/src%2Flibrustc_metadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b2f91638f140aa5d5a889aff185aee964f0fe40/src%2Flibrustc_metadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fdecoder.rs?ref=2b2f91638f140aa5d5a889aff185aee964f0fe40", "patch": "@@ -14,7 +14,8 @@ use cstore::{self, CrateMetadata, MetadataBlob, NativeLibrary, ForeignModule};\n use schema::*;\n \n use rustc_data_structures::sync::{Lrc, ReadGuard};\n-use rustc::hir::map::{DefKey, DefPath, DefPathData, DefPathHash};\n+use rustc::hir::map::{DefKey, DefPath, DefPathData, DefPathHash,\n+                      DisambiguatedDefPathData};\n use rustc::hir;\n use rustc::middle::cstore::{LinkagePreference, ExternConstBody,\n                             ExternBodyNestedBodies};\n@@ -1125,7 +1126,23 @@ impl<'a, 'tcx> CrateMetadata {\n \n     #[inline]\n     pub fn def_key(&self, index: DefIndex) -> DefKey {\n-        self.def_path_table.def_key(index)\n+        if !self.is_proc_macro(index) {\n+            self.def_path_table.def_key(index)\n+        } else {\n+            // FIXME(#49271) - It would be better if the DefIds were consistent\n+            //                 with the DefPathTable, but for proc-macro crates\n+            //                 they aren't.\n+            let name = self.proc_macros\n+                           .as_ref()\n+                           .unwrap()[index.to_proc_macro_index()].0;\n+            DefKey {\n+                parent: Some(CRATE_DEF_INDEX),\n+                disambiguated_data: DisambiguatedDefPathData {\n+                    data: DefPathData::MacroDef(name.as_str()),\n+                    disambiguator: 0,\n+                }\n+            }\n+        }\n     }\n \n     // Returns the path leading to the thing with this `id`."}]}