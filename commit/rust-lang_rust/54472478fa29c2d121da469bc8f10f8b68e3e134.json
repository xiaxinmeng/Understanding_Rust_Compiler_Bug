{"sha": "54472478fa29c2d121da469bc8f10f8b68e3e134", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0NDcyNDc4ZmEyOWMyZDEyMWRhNDY5YmM4ZjEwZjhiNjhlM2UxMzQ=", "commit": {"author": {"name": "Ryan1729", "email": "Ryan1729@gmail.com", "date": "2020-08-06T10:18:14Z"}, "committer": {"name": "Ryan1729", "email": "Ryan1729@gmail.com", "date": "2020-08-06T10:24:25Z"}, "message": "change filter to assert, and update comments", "tree": {"sha": "63670c5b570caecb59059a8b5328aefa846f7f1e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63670c5b570caecb59059a8b5328aefa846f7f1e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54472478fa29c2d121da469bc8f10f8b68e3e134", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54472478fa29c2d121da469bc8f10f8b68e3e134", "html_url": "https://github.com/rust-lang/rust/commit/54472478fa29c2d121da469bc8f10f8b68e3e134", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54472478fa29c2d121da469bc8f10f8b68e3e134/comments", "author": {"login": "Ryan1729", "id": 2133026, "node_id": "MDQ6VXNlcjIxMzMwMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2133026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ryan1729", "html_url": "https://github.com/Ryan1729", "followers_url": "https://api.github.com/users/Ryan1729/followers", "following_url": "https://api.github.com/users/Ryan1729/following{/other_user}", "gists_url": "https://api.github.com/users/Ryan1729/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ryan1729/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ryan1729/subscriptions", "organizations_url": "https://api.github.com/users/Ryan1729/orgs", "repos_url": "https://api.github.com/users/Ryan1729/repos", "events_url": "https://api.github.com/users/Ryan1729/events{/privacy}", "received_events_url": "https://api.github.com/users/Ryan1729/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ryan1729", "id": 2133026, "node_id": "MDQ6VXNlcjIxMzMwMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2133026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ryan1729", "html_url": "https://github.com/Ryan1729", "followers_url": "https://api.github.com/users/Ryan1729/followers", "following_url": "https://api.github.com/users/Ryan1729/following{/other_user}", "gists_url": "https://api.github.com/users/Ryan1729/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ryan1729/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ryan1729/subscriptions", "organizations_url": "https://api.github.com/users/Ryan1729/orgs", "repos_url": "https://api.github.com/users/Ryan1729/repos", "events_url": "https://api.github.com/users/Ryan1729/events{/privacy}", "received_events_url": "https://api.github.com/users/Ryan1729/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "afd4909d41cd0316ef2a01fe583b95eab9cb6475", "url": "https://api.github.com/repos/rust-lang/rust/commits/afd4909d41cd0316ef2a01fe583b95eab9cb6475", "html_url": "https://github.com/rust-lang/rust/commit/afd4909d41cd0316ef2a01fe583b95eab9cb6475"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "9f356811f22043ea3e76111ca2a4e897fba94f12", "filename": "src/tools/clippy/clippy_lints/src/transmute.rs", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/54472478fa29c2d121da469bc8f10f8b68e3e134/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftransmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54472478fa29c2d121da469bc8f10f8b68e3e134/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftransmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftransmute.rs?ref=54472478fa29c2d121da469bc8f10f8b68e3e134", "patch": "@@ -697,7 +697,7 @@ fn is_layout_incompatible<'tcx>(cx: &LateContext<'tcx>, from: Ty<'tcx>, to: Ty<'\n /// Check if the the type conversion can be expressed as a pointer cast, instead of\n /// a transmute. In certain cases, including some invalid casts from array\n /// references to pointers, this may cause additional errors to be emitted and/or\n-/// ICE error messages.\n+/// ICE error messages. This function will panic if that occurs.\n fn can_be_expressed_as_pointer_cast<'tcx>(cx: &LateContext<'tcx>, e: &'tcx Expr<'_>, from_ty: Ty<'tcx>, to_ty: Ty<'tcx>) -> bool {\n     use CastKind::*;\n     matches!(\n@@ -716,7 +716,7 @@ fn can_be_expressed_as_pointer_cast<'tcx>(cx: &LateContext<'tcx>, e: &'tcx Expr<\n /// If a cast from from_ty to to_ty is valid, returns an Ok containing the kind of\n /// the cast. In certain cases, including some invalid casts from array references\n /// to pointers, this may cause additional errors to be emitted and/or ICE error\n-/// messages.\n+/// messages. This function will panic if that occurs.\n fn check_cast<'tcx>(cx: &LateContext<'tcx>, e: &'tcx Expr<'_>, from_ty: Ty<'tcx>, to_ty: Ty<'tcx>) -> Option<CastKind> {\n     let hir_id = e.hir_id;\n     let local_def_id = hir_id.owner;\n@@ -743,11 +743,17 @@ fn check_cast<'tcx>(cx: &LateContext<'tcx>, e: &'tcx Expr<'_>, from_ty: Ty<'tcx>\n             DUMMY_SP,\n             DUMMY_SP,\n         ) {\n-            check.do_check(&fn_ctxt)\n-                .ok()\n-                // do_check's documentation says that it might return Ok and create\n-                // errors in the fcx instead of returing Err in some cases.\n-                .filter(|_| !fn_ctxt.errors_reported_since_creation())\n+            let res = check.do_check(&fn_ctxt);\n+\n+            // do_check's documentation says that it might return Ok and create\n+            // errors in the fcx instead of returing Err in some cases. Those cases\n+            // should be filtered out before getting here.\n+            assert!(\n+                !fn_ctxt.errors_reported_since_creation(),\n+                \"`fn_ctxt` contained errors after cast check!\"\n+            );\n+\n+            res.ok()\n         } else {\n             None\n         }"}]}