{"sha": "87dc9d1fcc91b95c35c31b6ecee10ef3954bc286", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3ZGM5ZDFmY2M5MWI5NWMzNWMzMWI2ZWNlZTEwZWYzOTU0YmMyODY=", "commit": {"author": {"name": "Luiz Carlos Mour\u00e3o Paes de Carvalho", "email": "luizcarlosmpc@gmail.com", "date": "2021-03-10T02:55:26Z"}, "committer": {"name": "Luiz Carlos Mour\u00e3o Paes de Carvalho", "email": "luizcarlosmpc@gmail.com", "date": "2021-03-10T02:55:26Z"}, "message": "refactor: create block expressions and for loops using make", "tree": {"sha": "b17472c3620df6593371c46a517731ef18c0ce7f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b17472c3620df6593371c46a517731ef18c0ce7f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87dc9d1fcc91b95c35c31b6ecee10ef3954bc286", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87dc9d1fcc91b95c35c31b6ecee10ef3954bc286", "html_url": "https://github.com/rust-lang/rust/commit/87dc9d1fcc91b95c35c31b6ecee10ef3954bc286", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87dc9d1fcc91b95c35c31b6ecee10ef3954bc286/comments", "author": {"login": "saiintbrisson", "id": 29989290, "node_id": "MDQ6VXNlcjI5OTg5Mjkw", "avatar_url": "https://avatars.githubusercontent.com/u/29989290?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saiintbrisson", "html_url": "https://github.com/saiintbrisson", "followers_url": "https://api.github.com/users/saiintbrisson/followers", "following_url": "https://api.github.com/users/saiintbrisson/following{/other_user}", "gists_url": "https://api.github.com/users/saiintbrisson/gists{/gist_id}", "starred_url": "https://api.github.com/users/saiintbrisson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saiintbrisson/subscriptions", "organizations_url": "https://api.github.com/users/saiintbrisson/orgs", "repos_url": "https://api.github.com/users/saiintbrisson/repos", "events_url": "https://api.github.com/users/saiintbrisson/events{/privacy}", "received_events_url": "https://api.github.com/users/saiintbrisson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "saiintbrisson", "id": 29989290, "node_id": "MDQ6VXNlcjI5OTg5Mjkw", "avatar_url": "https://avatars.githubusercontent.com/u/29989290?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saiintbrisson", "html_url": "https://github.com/saiintbrisson", "followers_url": "https://api.github.com/users/saiintbrisson/followers", "following_url": "https://api.github.com/users/saiintbrisson/following{/other_user}", "gists_url": "https://api.github.com/users/saiintbrisson/gists{/gist_id}", "starred_url": "https://api.github.com/users/saiintbrisson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saiintbrisson/subscriptions", "organizations_url": "https://api.github.com/users/saiintbrisson/orgs", "repos_url": "https://api.github.com/users/saiintbrisson/repos", "events_url": "https://api.github.com/users/saiintbrisson/events{/privacy}", "received_events_url": "https://api.github.com/users/saiintbrisson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61fb16577b3264a6ff64e33a89031db41218c840", "url": "https://api.github.com/repos/rust-lang/rust/commits/61fb16577b3264a6ff64e33a89031db41218c840", "html_url": "https://github.com/rust-lang/rust/commit/61fb16577b3264a6ff64e33a89031db41218c840"}], "stats": {"total": 79, "additions": 50, "deletions": 29}, "files": [{"sha": "2dc4fbcd431c204e839efb1c2631a6e4f00ca93d", "filename": "crates/ide_assists/src/handlers/convert_iter_for_each_to_for.rs", "status": "modified", "additions": 50, "deletions": 29, "changes": 79, "blob_url": "https://github.com/rust-lang/rust/blob/87dc9d1fcc91b95c35c31b6ecee10ef3954bc286/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fconvert_iter_for_each_to_for.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87dc9d1fcc91b95c35c31b6ecee10ef3954bc286/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fconvert_iter_for_each_to_for.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fconvert_iter_for_each_to_for.rs?ref=87dc9d1fcc91b95c35c31b6ecee10ef3954bc286", "patch": "@@ -1,6 +1,5 @@\n use ide_db::helpers::FamousDefs;\n-use stdx::format_to;\n-use syntax::{AstNode, ast::{self, ArgListOwner}};\n+use syntax::{AstNode, ast::{self, make, ArgListOwner, edit::AstNodeEdit}};\n \n use crate::{AssistContext, AssistId, AssistKind, Assists};\n \n@@ -47,24 +46,23 @@ pub(crate) fn convert_iter_for_each_to_for(acc: &mut Assists, ctx: &AssistContex\n     let (total_expr, parent) = validate_method_call_expr(&ctx.sema, total_expr)?;\n \n     let param_list = closure.param_list()?;\n-    let param = param_list.params().next()?;\n+    let param = param_list.params().next()?.pat()?;\n     let body = closure.body()?;\n \n     acc.add(\n         AssistId(\"convert_iter_for_each_to_for\", AssistKind::RefactorRewrite),\n         \"Replace this `Iterator::for_each` with a for loop\",\n         total_expr.syntax().text_range(),\n         |builder| {\n-            let mut buf = String::new();\n+            let original_indentation = total_expr.indent_level();\n \n-            format_to!(buf, \"for {} in {} \", param, parent);\n+            let block = match body {\n+                ast::Expr::BlockExpr(block) => block,\n+                _ => make::block_expr(Vec::new(), Some(body))\n+            }.reset_indent().indent(original_indentation);\n \n-            match body {\n-                ast::Expr::BlockExpr(body) => format_to!(buf, \"{}\", body),\n-                _ => format_to!(buf, \"{{\\n{}\\n}}\", body)\n-            }\n-\n-            builder.replace(total_expr.syntax().text_range(), buf)\n+            let expr_for_loop = make::expr_for_loop(param, parent, block);\n+            builder.replace_ast(total_expr, expr_for_loop)\n         },\n     )\n }\n@@ -94,45 +92,68 @@ mod tests {\n \n     use super::*;\n \n+    fn check_assist_with_fixtures(before: &str, after: &str) {\n+        let before = &format!(\n+            \"//- /main.rs crate:main deps:core,empty_iter{}{}\",\n+            before,\n+            FamousDefs::FIXTURE,\n+        );\n+        check_assist(convert_iter_for_each_to_for, before, after);\n+    }\n+\n     #[test]\n     fn test_for_each_in_method() {\n-        check_assist(\n-            convert_iter_for_each_to_for,\n-            r\"\n+        check_assist_with_fixtures(\n+            r#\"\n fn main() {\n     let x = vec![(1, 1), (2, 2), (3, 3), (4, 4)];\n     x.iter().$0for_each(|(x, y)| {\n-        dbg!(x, y)\n+        println!(\"x: {}, y: {}\", x, y);\n     });\n-}\",\n-            r\"\n+}\"#,\n+            r#\"\n+fn main() {\n+    let x = vec![(1, 1), (2, 2), (3, 3), (4, 4)];\n+    for (x, y) in x.iter() {\n+        println!(\"x: {}, y: {}\", x, y);\n+    };\n+}\"#,\n+        )\n+    }\n+\n+    #[test]\n+    fn test_for_each_without_braces() {\n+        check_assist_with_fixtures(\n+            r#\"\n+fn main() {\n+    let x = vec![(1, 1), (2, 2), (3, 3), (4, 4)];\n+    x.iter().$0for_each(|(x, y)| println!(\"x: {}, y: {}\", x, y));\n+}\"#,\n+            r#\"\n fn main() {\n     let x = vec![(1, 1), (2, 2), (3, 3), (4, 4)];\n     for (x, y) in x.iter() {\n-        dbg!(x, y)\n+        println!(\"x: {}, y: {}\", x, y)\n     };\n-}\",\n+}\"#,\n         )\n     }\n \n     #[test]\n     fn test_for_each_in_closure() {\n-        check_assist(\n-            convert_iter_for_each_to_for,\n-            r\"\n+        check_assist_with_fixtures(\n+            r#\"\n fn main() {\n     let x = vec![(1, 1), (2, 2), (3, 3), (4, 4)];\n-    x.iter().for_each($0|(x, y)| {\n-        dbg!(x, y)\n-    });\n-}\",\n-            r\"\n+    x.iter().for_each($0|(x, y)| println!(\"x: {}, y: {}\", x, y));\n+}\"#,\n+            r#\"\n fn main() {\n     let x = vec![(1, 1), (2, 2), (3, 3), (4, 4)];\n     for (x, y) in x.iter() {\n-        dbg!(x, y)\n+        println!(\"x: {}, y: {}\", x, y)\n     };\n-}\",\n+}\"#,\n         )\n     }\n }\n\\ No newline at end of file"}]}