{"sha": "fa7a40cc6ee7e16c948a804dbb487d36b3d0ccc9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhN2E0MGNjNmVlN2UxNmM5NDhhODA0ZGJiNDg3ZDM2YjNkMGNjYzk=", "commit": {"author": {"name": "Observer42", "email": "yishengxu@outlook.com", "date": "2019-08-12T08:07:13Z"}, "committer": {"name": "Observer42", "email": "yishengxu@outlook.com", "date": "2019-08-12T08:07:13Z"}, "message": "Document From trait for BinaryHeap", "tree": {"sha": "b58f54fe7ec78ff280a8bd0fdf260d350d32c1fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b58f54fe7ec78ff280a8bd0fdf260d350d32c1fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa7a40cc6ee7e16c948a804dbb487d36b3d0ccc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa7a40cc6ee7e16c948a804dbb487d36b3d0ccc9", "html_url": "https://github.com/rust-lang/rust/commit/fa7a40cc6ee7e16c948a804dbb487d36b3d0ccc9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa7a40cc6ee7e16c948a804dbb487d36b3d0ccc9/comments", "author": {"login": "Observer42", "id": 2409663, "node_id": "MDQ6VXNlcjI0MDk2NjM=", "avatar_url": "https://avatars.githubusercontent.com/u/2409663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Observer42", "html_url": "https://github.com/Observer42", "followers_url": "https://api.github.com/users/Observer42/followers", "following_url": "https://api.github.com/users/Observer42/following{/other_user}", "gists_url": "https://api.github.com/users/Observer42/gists{/gist_id}", "starred_url": "https://api.github.com/users/Observer42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Observer42/subscriptions", "organizations_url": "https://api.github.com/users/Observer42/orgs", "repos_url": "https://api.github.com/users/Observer42/repos", "events_url": "https://api.github.com/users/Observer42/events{/privacy}", "received_events_url": "https://api.github.com/users/Observer42/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Observer42", "id": 2409663, "node_id": "MDQ6VXNlcjI0MDk2NjM=", "avatar_url": "https://avatars.githubusercontent.com/u/2409663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Observer42", "html_url": "https://github.com/Observer42", "followers_url": "https://api.github.com/users/Observer42/followers", "following_url": "https://api.github.com/users/Observer42/following{/other_user}", "gists_url": "https://api.github.com/users/Observer42/gists{/gist_id}", "starred_url": "https://api.github.com/users/Observer42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Observer42/subscriptions", "organizations_url": "https://api.github.com/users/Observer42/orgs", "repos_url": "https://api.github.com/users/Observer42/repos", "events_url": "https://api.github.com/users/Observer42/events{/privacy}", "received_events_url": "https://api.github.com/users/Observer42/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b78e10ac1454d2d4190c575f6ece03f484ac398", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b78e10ac1454d2d4190c575f6ece03f484ac398", "html_url": "https://github.com/rust-lang/rust/commit/2b78e10ac1454d2d4190c575f6ece03f484ac398"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "cc6c69d5738ea343a0d51b5f47de95dcc538fae7", "filename": "src/liballoc/collections/binary_heap.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fa7a40cc6ee7e16c948a804dbb487d36b3d0ccc9/src%2Fliballoc%2Fcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa7a40cc6ee7e16c948a804dbb487d36b3d0ccc9/src%2Fliballoc%2Fcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fbinary_heap.rs?ref=fa7a40cc6ee7e16c948a804dbb487d36b3d0ccc9", "patch": "@@ -1163,6 +1163,9 @@ impl<T> FusedIterator for Drain<'_, T> {}\n \n #[stable(feature = \"binary_heap_extras_15\", since = \"1.5.0\")]\n impl<T: Ord> From<Vec<T>> for BinaryHeap<T> {\n+    /// Converts a `Vec` into a `BinaryHeap`.\n+    ///\n+    /// This conversion happens in-place, and has O(n) time complexity.\n     fn from(vec: Vec<T>) -> BinaryHeap<T> {\n         let mut heap = BinaryHeap { data: vec };\n         heap.rebuild();"}]}