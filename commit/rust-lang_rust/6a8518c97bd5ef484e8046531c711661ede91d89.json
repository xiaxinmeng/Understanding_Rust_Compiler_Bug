{"sha": "6a8518c97bd5ef484e8046531c711661ede91d89", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhODUxOGM5N2JkNWVmNDg0ZTgwNDY1MzFjNzExNjYxZWRlOTFkODk=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-20T19:40:33Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-20T19:41:32Z"}, "message": "Trailing whitespace police.", "tree": {"sha": "e2a9494f735be7b87dae95310010ba1f77d82246", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2a9494f735be7b87dae95310010ba1f77d82246"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a8518c97bd5ef484e8046531c711661ede91d89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a8518c97bd5ef484e8046531c711661ede91d89", "html_url": "https://github.com/rust-lang/rust/commit/6a8518c97bd5ef484e8046531c711661ede91d89", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a8518c97bd5ef484e8046531c711661ede91d89/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7e9984999121c84c92a3236f29d4edf649e9431", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7e9984999121c84c92a3236f29d4edf649e9431", "html_url": "https://github.com/rust-lang/rust/commit/a7e9984999121c84c92a3236f29d4edf649e9431"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "d4cd64bdc5f84c8d378641b337355478d3afd9d4", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6a8518c97bd5ef484e8046531c711661ede91d89/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a8518c97bd5ef484e8046531c711661ede91d89/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=6a8518c97bd5ef484e8046531c711661ede91d89", "patch": "@@ -629,7 +629,7 @@ fn make_generic_glue(@crate_ctxt cx, @typeck.ty t, str name,\n \n         auto llrawptr = llvm.LLVMGetParam(llfn, 1u);\n         auto llval = bcx.build.BitCast(llrawptr, llty);\n-        \n+\n         re = helper(bcx, llval, t);\n     } else {\n         re = res(bcx, C_nil());\n@@ -1770,7 +1770,7 @@ impure fn trans_call(@block_ctxt cx, @ast.expr f,\n     auto fn_ty = typeck.expr_ty(f);\n     auto ret_ty = typeck.ann_to_type(ann);\n     auto args_res = trans_args(f_res._0.bcx, args, fn_ty);\n-    \n+\n     auto real_retval = args_res._0.build.FastCall(f_res._0.val, args_res._1);\n     auto retval;\n     if (typeck.type_is_nil(ret_ty)) {"}]}