{"sha": "4ea83bfb3d457770f2e54965dd86f672fbbc87c2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlYTgzYmZiM2Q0NTc3NzBmMmU1NDk2NWRkODZmNjcyZmJiYzg3YzI=", "commit": {"author": {"name": "ThinkChaos", "email": "ThinkChaos@users.noreply.github.com", "date": "2020-04-21T19:11:32Z"}, "committer": {"name": "ThinkChaos", "email": "ThinkChaos@users.noreply.github.com", "date": "2020-04-26T09:50:53Z"}, "message": "Use Cell::take in a couple places", "tree": {"sha": "7ee08d8b991be7406bb3cd706ea767b51d187643", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ee08d8b991be7406bb3cd706ea767b51d187643"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ea83bfb3d457770f2e54965dd86f672fbbc87c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ea83bfb3d457770f2e54965dd86f672fbbc87c2", "html_url": "https://github.com/rust-lang/rust/commit/4ea83bfb3d457770f2e54965dd86f672fbbc87c2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ea83bfb3d457770f2e54965dd86f672fbbc87c2/comments", "author": {"login": "ThinkChaos", "id": 4761135, "node_id": "MDQ6VXNlcjQ3NjExMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4761135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThinkChaos", "html_url": "https://github.com/ThinkChaos", "followers_url": "https://api.github.com/users/ThinkChaos/followers", "following_url": "https://api.github.com/users/ThinkChaos/following{/other_user}", "gists_url": "https://api.github.com/users/ThinkChaos/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThinkChaos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThinkChaos/subscriptions", "organizations_url": "https://api.github.com/users/ThinkChaos/orgs", "repos_url": "https://api.github.com/users/ThinkChaos/repos", "events_url": "https://api.github.com/users/ThinkChaos/events{/privacy}", "received_events_url": "https://api.github.com/users/ThinkChaos/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ThinkChaos", "id": 4761135, "node_id": "MDQ6VXNlcjQ3NjExMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4761135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThinkChaos", "html_url": "https://github.com/ThinkChaos", "followers_url": "https://api.github.com/users/ThinkChaos/followers", "following_url": "https://api.github.com/users/ThinkChaos/following{/other_user}", "gists_url": "https://api.github.com/users/ThinkChaos/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThinkChaos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThinkChaos/subscriptions", "organizations_url": "https://api.github.com/users/ThinkChaos/orgs", "repos_url": "https://api.github.com/users/ThinkChaos/repos", "events_url": "https://api.github.com/users/ThinkChaos/events{/privacy}", "received_events_url": "https://api.github.com/users/ThinkChaos/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f121f094fe4d4f4e92142984e9230373c311e1e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/f121f094fe4d4f4e92142984e9230373c311e1e6", "html_url": "https://github.com/rust-lang/rust/commit/f121f094fe4d4f4e92142984e9230373c311e1e6"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "a3ee14e85d22286df13e0dfcffef2f14ea9f3e27", "filename": "src/libstd/sync/once.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ea83bfb3d457770f2e54965dd86f672fbbc87c2/src%2Flibstd%2Fsync%2Fonce.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ea83bfb3d457770f2e54965dd86f672fbbc87c2/src%2Flibstd%2Fsync%2Fonce.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fonce.rs?ref=4ea83bfb3d457770f2e54965dd86f672fbbc87c2", "patch": "@@ -497,7 +497,7 @@ impl Drop for WaiterQueue<'_> {\n             let mut queue = (state_and_queue & !STATE_MASK) as *const Waiter;\n             while !queue.is_null() {\n                 let next = (*queue).next;\n-                let thread = (*queue).thread.replace(None).unwrap();\n+                let thread = (*queue).thread.take().unwrap();\n                 (*queue).signaled.store(true, Ordering::Release);\n                 // ^- FIXME (maybe): This is another case of issue #55005\n                 // `store()` has a potentially dangling ref to `signaled`."}, {"sha": "6df52affe399333863131ffe8ba84bb9c4d8a1c6", "filename": "src/test/run-make/wasm-panic-small/foo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ea83bfb3d457770f2e54965dd86f672fbbc87c2/src%2Ftest%2Frun-make%2Fwasm-panic-small%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ea83bfb3d457770f2e54965dd86f672fbbc87c2/src%2Ftest%2Frun-make%2Fwasm-panic-small%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fwasm-panic-small%2Ffoo.rs?ref=4ea83bfb3d457770f2e54965dd86f672fbbc87c2", "patch": "@@ -23,5 +23,5 @@ pub fn foo() {\n pub fn foo() -> usize {\n     use std::cell::Cell;\n     thread_local!(static A: Cell<Vec<u32>> = Cell::new(Vec::new()));\n-    A.try_with(|x| x.replace(Vec::new()).len()).unwrap_or(0)\n+    A.try_with(|x| x.take().len()).unwrap_or(0)\n }"}, {"sha": "a5b85646581bfe9b85cc395937162e05f3c342c2", "filename": "src/test/ui/traits/negative-impls/pin-unsound-issue-66544-clone.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ea83bfb3d457770f2e54965dd86f672fbbc87c2/src%2Ftest%2Fui%2Ftraits%2Fnegative-impls%2Fpin-unsound-issue-66544-clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ea83bfb3d457770f2e54965dd86f672fbbc87c2/src%2Ftest%2Fui%2Ftraits%2Fnegative-impls%2Fpin-unsound-issue-66544-clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fnegative-impls%2Fpin-unsound-issue-66544-clone.rs?ref=4ea83bfb3d457770f2e54965dd86f672fbbc87c2", "patch": "@@ -7,7 +7,7 @@ struct MyType<'a>(Cell<Option<&'a mut MyType<'a>>>, PhantomPinned);\n impl<'a> Clone for &'a mut MyType<'a> {\n     //~^ ERROR E0751\n     fn clone(&self) -> &'a mut MyType<'a> {\n-        self.0.replace(None).unwrap()\n+        self.0.take().unwrap()\n     }\n }\n "}, {"sha": "606cc65a84bc2612eec4da2674b5bf0f2981ee7c", "filename": "src/test/ui/traits/negative-impls/pin-unsound-issue-66544-derefmut.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ea83bfb3d457770f2e54965dd86f672fbbc87c2/src%2Ftest%2Fui%2Ftraits%2Fnegative-impls%2Fpin-unsound-issue-66544-derefmut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ea83bfb3d457770f2e54965dd86f672fbbc87c2/src%2Ftest%2Fui%2Ftraits%2Fnegative-impls%2Fpin-unsound-issue-66544-derefmut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fnegative-impls%2Fpin-unsound-issue-66544-derefmut.rs?ref=4ea83bfb3d457770f2e54965dd86f672fbbc87c2", "patch": "@@ -12,7 +12,7 @@ struct MyType<'a>(Cell<Option<&'a mut MyType<'a>>>, PhantomPinned);\n impl<'a> DerefMut for &'a MyType<'a> {\n     //~^ ERROR E0751\n     fn deref_mut(&mut self) -> &mut MyType<'a> {\n-        self.0.replace(None).unwrap()\n+        self.0.take().unwrap()\n     }\n }\n "}]}