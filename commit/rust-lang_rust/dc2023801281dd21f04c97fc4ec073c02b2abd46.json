{"sha": "dc2023801281dd21f04c97fc4ec073c02b2abd46", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjMjAyMzgwMTI4MWRkMjFmMDRjOTdmYzRlYzA3M2MwMmIyYWJkNDY=", "commit": {"author": {"name": "Dylan McKay", "email": "me@dylanmckay.io", "date": "2020-07-30T16:04:26Z"}, "committer": {"name": "Dylan McKay", "email": "me@dylanmckay.io", "date": "2020-08-24T06:43:31Z"}, "message": "[AVR] Merge the 'freestanding' base target spec into AVR base target spec\n\nThe 'freestanding' module was only ever used for AVR. It was an\nunnecessary layer of abstraction. This commit merges the\n'freestanding_base' module into 'avr_gnu_base'.", "tree": {"sha": "bdea81690de27b165e32a1d93f5bd04e9456dac5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bdea81690de27b165e32a1d93f5bd04e9456dac5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc2023801281dd21f04c97fc4ec073c02b2abd46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc2023801281dd21f04c97fc4ec073c02b2abd46", "html_url": "https://github.com/rust-lang/rust/commit/dc2023801281dd21f04c97fc4ec073c02b2abd46", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc2023801281dd21f04c97fc4ec073c02b2abd46/comments", "author": {"login": "dylanmckay", "id": 7722159, "node_id": "MDQ6VXNlcjc3MjIxNTk=", "avatar_url": "https://avatars.githubusercontent.com/u/7722159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dylanmckay", "html_url": "https://github.com/dylanmckay", "followers_url": "https://api.github.com/users/dylanmckay/followers", "following_url": "https://api.github.com/users/dylanmckay/following{/other_user}", "gists_url": "https://api.github.com/users/dylanmckay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dylanmckay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dylanmckay/subscriptions", "organizations_url": "https://api.github.com/users/dylanmckay/orgs", "repos_url": "https://api.github.com/users/dylanmckay/repos", "events_url": "https://api.github.com/users/dylanmckay/events{/privacy}", "received_events_url": "https://api.github.com/users/dylanmckay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dylanmckay", "id": 7722159, "node_id": "MDQ6VXNlcjc3MjIxNTk=", "avatar_url": "https://avatars.githubusercontent.com/u/7722159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dylanmckay", "html_url": "https://github.com/dylanmckay", "followers_url": "https://api.github.com/users/dylanmckay/followers", "following_url": "https://api.github.com/users/dylanmckay/following{/other_user}", "gists_url": "https://api.github.com/users/dylanmckay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dylanmckay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dylanmckay/subscriptions", "organizations_url": "https://api.github.com/users/dylanmckay/orgs", "repos_url": "https://api.github.com/users/dylanmckay/repos", "events_url": "https://api.github.com/users/dylanmckay/events{/privacy}", "received_events_url": "https://api.github.com/users/dylanmckay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53b940c74c4f56ef075ee3c71f3cb157aaff65af", "url": "https://api.github.com/repos/rust-lang/rust/commits/53b940c74c4f56ef075ee3c71f3cb157aaff65af", "html_url": "https://github.com/rust-lang/rust/commit/53b940c74c4f56ef075ee3c71f3cb157aaff65af"}], "stats": {"total": 56, "additions": 21, "deletions": 35}, "files": [{"sha": "ff559c2bfd684704edf616e683c36381b968a02b", "filename": "src/librustc_target/spec/avr_gnu_base.rs", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/dc2023801281dd21f04c97fc4ec073c02b2abd46/src%2Flibrustc_target%2Fspec%2Favr_gnu_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc2023801281dd21f04c97fc4ec073c02b2abd46/src%2Flibrustc_target%2Fspec%2Favr_gnu_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Favr_gnu_base.rs?ref=dc2023801281dd21f04c97fc4ec073c02b2abd46", "patch": "@@ -18,16 +18,34 @@ pub fn target(target_cpu: String) -> TargetResult {\n         options: TargetOptions {\n             cpu: target_cpu.clone(),\n             exe_suffix: \".elf\".to_string(),\n+\n             linker: Some(\"avr-gcc\".to_owned()),\n-            pre_link_args: vec![(LinkerFlavor::Gcc,\n-                vec![format!(\"-mmcu={}\", target_cpu)],\n+            dynamic_linking: false,\n+            executables: true,\n+            linker_is_gnu: true,\n+            has_rpath: false,\n+            position_independent_executables: false,\n+            eh_frame_header: false,\n+            pre_link_args: vec![(\n+                LinkerFlavor::Gcc,\n+                vec![\n+                    format!(\"-mmcu={}\", target_cpu),\n+                    // We want to be able to strip as much executable code as possible\n+                    // from the linker command line, and this flag indicates to the\n+                    // linker that it can avoid linking in dynamic libraries that don't\n+                    // actually satisfy any symbols up to that point (as with many other\n+                    // resolutions the linker does). This option only applies to all\n+                    // following libraries so we're sure to pass it as one of the first\n+                    // arguments.\n+                    \"-Wl,--as-needed\".to_string(),\n+                ],\n             )]\n             .into_iter()\n             .collect(),\n             late_link_args: vec![(LinkerFlavor::Gcc, vec![\"-lgcc\".to_owned()])]\n                 .into_iter()\n                 .collect(),\n-            ..super::freestanding_base::opts()\n+            ..TargetOptions::default()\n         },\n     })\n }"}, {"sha": "c338856228dc66b607304672531fe61243f4b3ce", "filename": "src/librustc_target/spec/freestanding_base.rs", "status": "removed", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/53b940c74c4f56ef075ee3c71f3cb157aaff65af/src%2Flibrustc_target%2Fspec%2Ffreestanding_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53b940c74c4f56ef075ee3c71f3cb157aaff65af/src%2Flibrustc_target%2Fspec%2Ffreestanding_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Ffreestanding_base.rs?ref=53b940c74c4f56ef075ee3c71f3cb157aaff65af", "patch": "@@ -1,31 +0,0 @@\n-use crate::spec::{LinkArgs, LinkerFlavor, TargetOptions};\n-use std::default::Default;\n-\n-pub fn opts() -> TargetOptions {\n-    let mut args = LinkArgs::new();\n-\n-    args.insert(\n-        LinkerFlavor::Gcc,\n-        vec![\n-            // We want to be able to strip as much executable code as possible\n-            // from the linker command line, and this flag indicates to the\n-            // linker that it can avoid linking in dynamic libraries that don't\n-            // actually satisfy any symbols up to that point (as with many other\n-            // resolutions the linker does). This option only applies to all\n-            // following libraries so we're sure to pass it as one of the first\n-            // arguments.\n-            \"-Wl,--as-needed\".to_string(),\n-        ],\n-    );\n-\n-    TargetOptions {\n-        dynamic_linking: false,\n-        executables: true,\n-        linker_is_gnu: true,\n-        has_rpath: false,\n-        pre_link_args: args,\n-        position_independent_executables: false,\n-        eh_frame_header: false,\n-        ..Default::default()\n-    }\n-}"}, {"sha": "d6e8b304380ca51a383dc927839164bedb20239f", "filename": "src/librustc_target/spec/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dc2023801281dd21f04c97fc4ec073c02b2abd46/src%2Flibrustc_target%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc2023801281dd21f04c97fc4ec073c02b2abd46/src%2Flibrustc_target%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmod.rs?ref=dc2023801281dd21f04c97fc4ec073c02b2abd46", "patch": "@@ -55,7 +55,6 @@ mod avr_gnu_base;\n mod cloudabi_base;\n mod dragonfly_base;\n mod freebsd_base;\n-mod freestanding_base;\n mod fuchsia_base;\n mod haiku_base;\n mod hermit_base;"}]}