{"sha": "635efdf69b20dc233516aad03ab14af80912cffe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzNWVmZGY2OWIyMGRjMjMzNTE2YWFkMDNhYjE0YWY4MDkxMmNmZmU=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2018-09-19T23:33:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-09-19T23:33:47Z"}, "message": "Merge pull request #3035 from topecongiro/issue-3006\n\nFormat generics on associated types", "tree": {"sha": "c17dafb7b6c0ef3fd55bc9054c3c5bf06f32d633", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c17dafb7b6c0ef3fd55bc9054c3c5bf06f32d633"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/635efdf69b20dc233516aad03ab14af80912cffe", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbotzbCRBK7hj4Ov3rIwAAdHIIACemE6qLnz82e1qzFlVNPHXJ\nujz93U6rwEBwfqRWXhwgFR4/cbVlITDvyR5vOBn5vKPhftEuQse8HZbBcXrdKX/B\nq5u+Sj7B6iZ+Tk5LKfGNhK5UsoI1ZmQuSOcWtXEU90Xbgwr48/p8+JL1YPaP77ny\nPB5ZopUdyqJlenN3bJbM0wO6h9rWk9MXiKLSb/niPzfvhhX31dNgjEqsO/gDM8qt\niVBy20ob25rkUtEXxOG5aXW55SaEjR2eYGCYuK1/aXDp5cVZDEBToZRpzYLVd9Hw\nHa9askDgMH+6ccV8fk+QhGhYbYJDLGktBGBnXJdoUDnUV8e5gmhAm+iQ6ycDPAk=\n=ADRU\n-----END PGP SIGNATURE-----\n", "payload": "tree c17dafb7b6c0ef3fd55bc9054c3c5bf06f32d633\nparent 829dbfabe94004b6a535c9e1ffdd55eefef7c59f\nparent 7eca33f8a53ddf0184d98b1808d953af072c1713\nauthor Nick Cameron <nrc@ncameron.org> 1537400027 +1200\ncommitter GitHub <noreply@github.com> 1537400027 +1200\n\nMerge pull request #3035 from topecongiro/issue-3006\n\nFormat generics on associated types"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/635efdf69b20dc233516aad03ab14af80912cffe", "html_url": "https://github.com/rust-lang/rust/commit/635efdf69b20dc233516aad03ab14af80912cffe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/635efdf69b20dc233516aad03ab14af80912cffe/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "829dbfabe94004b6a535c9e1ffdd55eefef7c59f", "url": "https://api.github.com/repos/rust-lang/rust/commits/829dbfabe94004b6a535c9e1ffdd55eefef7c59f", "html_url": "https://github.com/rust-lang/rust/commit/829dbfabe94004b6a535c9e1ffdd55eefef7c59f"}, {"sha": "7eca33f8a53ddf0184d98b1808d953af072c1713", "url": "https://api.github.com/repos/rust-lang/rust/commits/7eca33f8a53ddf0184d98b1808d953af072c1713", "html_url": "https://github.com/rust-lang/rust/commit/7eca33f8a53ddf0184d98b1808d953af072c1713"}], "stats": {"total": 34, "additions": 31, "deletions": 3}, "files": [{"sha": "d1522d4648182cdc4459de9128cd66f087b88312", "filename": "src/items.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/635efdf69b20dc233516aad03ab14af80912cffe/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/635efdf69b20dc233516aad03ab14af80912cffe/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=635efdf69b20dc233516aad03ab14af80912cffe", "patch": "@@ -1715,11 +1715,16 @@ fn rewrite_static(\n pub fn rewrite_associated_type(\n     ident: ast::Ident,\n     ty_opt: Option<&ptr::P<ast::Ty>>,\n+    generics: &ast::Generics,\n     generic_bounds_opt: Option<&ast::GenericBounds>,\n     context: &RewriteContext,\n     indent: Indent,\n ) -> Option<String> {\n-    let prefix = format!(\"type {}\", rewrite_ident(context, ident));\n+    let ident_str = rewrite_ident(context, ident);\n+    // 5 = \"type \"\n+    let generics_shape = Shape::indented(indent, context.config).offset_left(5)?;\n+    let generics_str = rewrite_generics(context, ident_str, generics, generics_shape)?;\n+    let prefix = format!(\"type {}\", generics_str);\n \n     let type_bounds_str = if let Some(bounds) = generic_bounds_opt {\n         if bounds.is_empty() {\n@@ -1746,21 +1751,23 @@ pub fn rewrite_associated_type(\n pub fn rewrite_existential_impl_type(\n     context: &RewriteContext,\n     ident: ast::Ident,\n+    generics: &ast::Generics,\n     generic_bounds: &ast::GenericBounds,\n     indent: Indent,\n ) -> Option<String> {\n-    rewrite_associated_type(ident, None, Some(generic_bounds), context, indent)\n+    rewrite_associated_type(ident, None, generics, Some(generic_bounds), context, indent)\n         .map(|s| format!(\"existential {}\", s))\n }\n \n pub fn rewrite_associated_impl_type(\n     ident: ast::Ident,\n     defaultness: ast::Defaultness,\n     ty_opt: Option<&ptr::P<ast::Ty>>,\n+    generics: &ast::Generics,\n     context: &RewriteContext,\n     indent: Indent,\n ) -> Option<String> {\n-    let result = rewrite_associated_type(ident, ty_opt, None, context, indent)?;\n+    let result = rewrite_associated_type(ident, ty_opt, generics, None, context, indent)?;\n \n     match defaultness {\n         ast::Defaultness::Default => Some(format!(\"default {}\", result)),"}, {"sha": "4591ff720a524937bb16d4aa6c098b0b0bfa7148", "filename": "src/visitor.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/635efdf69b20dc233516aad03ab14af80912cffe/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/635efdf69b20dc233516aad03ab14af80912cffe/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=635efdf69b20dc233516aad03ab14af80912cffe", "patch": "@@ -497,6 +497,7 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n                 let rewrite = rewrite_associated_type(\n                     ti.ident,\n                     type_default.as_ref(),\n+                    &ti.generics,\n                     Some(generic_bounds),\n                     &self.get_context(),\n                     self.block_indent,\n@@ -535,6 +536,7 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n                     ii.ident,\n                     ii.defaultness,\n                     Some(ty),\n+                    &ii.generics,\n                     &self.get_context(),\n                     self.block_indent,\n                 );\n@@ -544,6 +546,7 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n                 let rewrite = rewrite_existential_impl_type(\n                     &self.get_context(),\n                     ii.ident,\n+                    &ii.generics,\n                     generic_bounds,\n                     self.block_indent,\n                 );"}, {"sha": "2fa25d0802cf97262e0df39aa3c06312c3088749", "filename": "tests/source/trait.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/635efdf69b20dc233516aad03ab14af80912cffe/tests%2Fsource%2Ftrait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/635efdf69b20dc233516aad03ab14af80912cffe/tests%2Fsource%2Ftrait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Ftrait.rs?ref=635efdf69b20dc233516aad03ab14af80912cffe", "patch": "@@ -97,3 +97,12 @@ trait FooBar = Foo\n auto trait Example {}\n pub auto trait PubExample {}\n pub unsafe auto trait PubUnsafeExample {}\n+\n+// #3006\n+trait Foo<'a> {\n+    type Bar<  'a  >;\n+}\n+\n+impl<'a> Foo<'a> for i32 {\n+    type Bar<  'a  > = i32;\n+}"}, {"sha": "2eb2c12aa3056f15109ea1d6044be5eb93d939a6", "filename": "tests/target/trait.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/635efdf69b20dc233516aad03ab14af80912cffe/tests%2Ftarget%2Ftrait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/635efdf69b20dc233516aad03ab14af80912cffe/tests%2Ftarget%2Ftrait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ftrait.rs?ref=635efdf69b20dc233516aad03ab14af80912cffe", "patch": "@@ -135,3 +135,12 @@ trait FooBar = Foo\n auto trait Example {}\n pub auto trait PubExample {}\n pub unsafe auto trait PubUnsafeExample {}\n+\n+// #3006\n+trait Foo<'a> {\n+    type Bar<'a>;\n+}\n+\n+impl<'a> Foo<'a> for i32 {\n+    type Bar<'a> = i32;\n+}"}]}