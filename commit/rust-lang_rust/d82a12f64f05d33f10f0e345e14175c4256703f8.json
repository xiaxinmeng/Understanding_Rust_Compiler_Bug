{"sha": "d82a12f64f05d33f10f0e345e14175c4256703f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4MmExMmY2NGYwNWQzM2YxMGYwZTM0NWUxNDE3NWM0MjU2NzAzZjg=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2019-06-24T08:03:37Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2019-06-24T08:03:37Z"}, "message": "HirIdify driver::pretty::HirPrinterSupport::node_path", "tree": {"sha": "974bd455bbb01de05d2a52b36dc278923eae2e6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/974bd455bbb01de05d2a52b36dc278923eae2e6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d82a12f64f05d33f10f0e345e14175c4256703f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d82a12f64f05d33f10f0e345e14175c4256703f8", "html_url": "https://github.com/rust-lang/rust/commit/d82a12f64f05d33f10f0e345e14175c4256703f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d82a12f64f05d33f10f0e345e14175c4256703f8/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f05cbc98f8402f3146f96ebde63148427b3322f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f05cbc98f8402f3146f96ebde63148427b3322f1", "html_url": "https://github.com/rust-lang/rust/commit/f05cbc98f8402f3146f96ebde63148427b3322f1"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "d92f3aafa1c7e3dbfdc8f059861843729676f4dd", "filename": "src/librustc_driver/pretty.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d82a12f64f05d33f10f0e345e14175c4256703f8/src%2Flibrustc_driver%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d82a12f64f05d33f10f0e345e14175c4256703f8/src%2Flibrustc_driver%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fpretty.rs?ref=d82a12f64f05d33f10f0e345e14175c4256703f8", "patch": "@@ -253,10 +253,9 @@ trait HirPrinterSupport<'hir>: pprust_hir::PpAnn {\n     fn pp_ann<'a>(&'a self) -> &'a dyn pprust_hir::PpAnn;\n \n     /// Computes an user-readable representation of a path, if possible.\n-    fn node_path(&self, id: ast::NodeId) -> Option<String> {\n+    fn node_path(&self, id: hir::HirId) -> Option<String> {\n         self.hir_map().and_then(|map| {\n-            let hir_id = map.node_to_hir_id(id);\n-            map.def_path_from_hir_id(hir_id)\n+            map.def_path_from_hir_id(id)\n         }).map(|path| {\n             path.data\n                 .into_iter()\n@@ -471,8 +470,8 @@ impl<'b, 'tcx> HirPrinterSupport<'tcx> for TypedAnnotation<'b, 'tcx> {\n         self\n     }\n \n-    fn node_path(&self, id: ast::NodeId) -> Option<String> {\n-        Some(self.tcx.def_path_str(self.tcx.hir().local_def_id(id)))\n+    fn node_path(&self, id: hir::HirId) -> Option<String> {\n+        Some(self.tcx.def_path_str(self.tcx.hir().local_def_id_from_hir_id(id)))\n     }\n }\n \n@@ -834,7 +833,7 @@ pub fn print_after_hir_lowering<'tcx>(\n                         let node = hir_map.get(hir_id);\n                         pp_state.print_node(node)?;\n                         pp_state.s.space()?;\n-                        let path = annotation.node_path(node_id)\n+                        let path = annotation.node_path(hir_id)\n                             .expect(\"-Z unpretty missing node paths\");\n                         pp_state.synth_comment(path)?;\n                         pp_state.s.hardbreak()?;"}]}