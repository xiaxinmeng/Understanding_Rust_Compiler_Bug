{"sha": "b7fba973cb4b6547f24d89b901f7ac294c269503", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3ZmJhOTczY2I0YjY1NDdmMjRkODliOTAxZjdhYzI5NGMyNjk1MDM=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-02-10T17:20:22Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-03-17T21:17:31Z"}, "message": "Format", "tree": {"sha": "1e32e20c0c375ba27e67a030228e93ab2aa1babb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e32e20c0c375ba27e67a030228e93ab2aa1babb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7fba973cb4b6547f24d89b901f7ac294c269503", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7fba973cb4b6547f24d89b901f7ac294c269503", "html_url": "https://github.com/rust-lang/rust/commit/b7fba973cb4b6547f24d89b901f7ac294c269503", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7fba973cb4b6547f24d89b901f7ac294c269503/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f79a95a65dea5901cb020b41997fb4d4ca806b18", "url": "https://api.github.com/repos/rust-lang/rust/commits/f79a95a65dea5901cb020b41997fb4d4ca806b18", "html_url": "https://github.com/rust-lang/rust/commit/f79a95a65dea5901cb020b41997fb4d4ca806b18"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "9dcb2cea2ea716fec3fe90ebae734db9466143e4", "filename": "src/libcore/future/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b7fba973cb4b6547f24d89b901f7ac294c269503/src%2Flibcore%2Ffuture%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7fba973cb4b6547f24d89b901f7ac294c269503/src%2Flibcore%2Ffuture%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffuture%2Fmod.rs?ref=b7fba973cb4b6547f24d89b901f7ac294c269503", "patch": "@@ -47,7 +47,7 @@ unsafe impl Sync for ResumeTy {}\n #[inline]\n pub const fn from_generator<T>(gen: T) -> impl Future<Output = T::Return>\n where\n-    T: Generator<ResumeTy, Yield = ()>\n+    T: Generator<ResumeTy, Yield = ()>,\n {\n     #[derive(Copy, Clone, Debug, Eq, PartialEq, Ord, PartialOrd, Hash)]\n     struct GenFuture<T: Generator<ResumeTy, Yield = ()>>(T);"}, {"sha": "868b31d668c0cb7ecf829392705930c1c0acbd55", "filename": "src/librustc_ast_lowering/expr.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b7fba973cb4b6547f24d89b901f7ac294c269503/src%2Flibrustc_ast_lowering%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7fba973cb4b6547f24d89b901f7ac294c269503/src%2Flibrustc_ast_lowering%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Fexpr.rs?ref=b7fba973cb4b6547f24d89b901f7ac294c269503", "patch": "@@ -675,11 +675,8 @@ impl<'hir> LoweringContext<'_, 'hir> {\n \n             if let Some(task_context_hid) = self.task_context {\n                 let lhs = self.expr_ident(span, task_context_ident, task_context_hid);\n-                let assign = self.expr(\n-                    span,\n-                    hir::ExprKind::Assign(lhs, yield_expr, span),\n-                    AttrVec::new(),\n-                );\n+                let assign =\n+                    self.expr(span, hir::ExprKind::Assign(lhs, yield_expr, span), AttrVec::new());\n                 self.stmt_expr(span, assign)\n             } else {\n                 // Use of `await` outside of an async context. Return `yield_expr` so that we can\n@@ -688,8 +685,7 @@ impl<'hir> LoweringContext<'_, 'hir> {\n             }\n         };\n \n-        let loop_block =\n-            self.block_all(span, arena_vec![self; inner_match_stmt, yield_stmt], None);\n+        let loop_block = self.block_all(span, arena_vec![self; inner_match_stmt, yield_stmt], None);\n \n         // loop { ...; task_context = yield (); }\n         let loop_expr = self.arena.alloc(hir::Expr {"}]}