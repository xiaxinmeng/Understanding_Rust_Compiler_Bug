{"sha": "1296a4c689b3e2aa0ecc3122982d6b0f96b90e0c", "node_id": "C_kwDOAAsO6NoAKDEyOTZhNGM2ODliM2UyYWEwZWNjMzEyMjk4MmQ2YjBmOTZiOTBlMGM", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2023-01-02T15:05:49Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2023-01-02T15:05:49Z"}, "message": "tweaks to retag diagnostic handling", "tree": {"sha": "49c981b340b0f621f003d132107df518bb060ca9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49c981b340b0f621f003d132107df518bb060ca9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1296a4c689b3e2aa0ecc3122982d6b0f96b90e0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1296a4c689b3e2aa0ecc3122982d6b0f96b90e0c", "html_url": "https://github.com/rust-lang/rust/commit/1296a4c689b3e2aa0ecc3122982d6b0f96b90e0c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1296a4c689b3e2aa0ecc3122982d6b0f96b90e0c/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3487fe32490c7e6e522916bef7d8c66b31ab2f56", "url": "https://api.github.com/repos/rust-lang/rust/commits/3487fe32490c7e6e522916bef7d8c66b31ab2f56", "html_url": "https://github.com/rust-lang/rust/commit/3487fe32490c7e6e522916bef7d8c66b31ab2f56"}], "stats": {"total": 22, "additions": 9, "deletions": 13}, "files": [{"sha": "2cc8f03546602a880a7225ffcb6e938738cb8360", "filename": "src/tools/miri/src/borrow_tracker/stacked_borrows/diagnostics.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1296a4c689b3e2aa0ecc3122982d6b0f96b90e0c/src%2Ftools%2Fmiri%2Fsrc%2Fborrow_tracker%2Fstacked_borrows%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1296a4c689b3e2aa0ecc3122982d6b0f96b90e0c/src%2Ftools%2Fmiri%2Fsrc%2Fborrow_tracker%2Fstacked_borrows%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fborrow_tracker%2Fstacked_borrows%2Fdiagnostics.rs?ref=1296a4c689b3e2aa0ecc3122982d6b0f96b90e0c", "patch": "@@ -88,11 +88,7 @@ impl fmt::Display for InvalidationCause {\n         match self {\n             InvalidationCause::Access(kind) => write!(f, \"{kind}\"),\n             InvalidationCause::Retag(perm, kind) =>\n-                if *kind == RetagCause::FnEntry {\n-                    write!(f, \"{perm:?} FnEntry retag\")\n-                } else {\n-                    write!(f, \"{perm:?} retag\")\n-                },\n+                write!(f, \"{perm:?} {retag}\", retag = kind.summary()),\n         }\n     }\n }\n@@ -193,7 +189,7 @@ struct RetagOp {\n #[derive(Debug, Clone, Copy, PartialEq)]\n pub enum RetagCause {\n     Normal,\n-    FnReturn,\n+    FnReturnPlace,\n     FnEntry,\n     TwoPhase,\n }\n@@ -495,8 +491,8 @@ impl RetagCause {\n     fn summary(&self) -> String {\n         match self {\n             RetagCause::Normal => \"retag\",\n-            RetagCause::FnEntry => \"FnEntry retag\",\n-            RetagCause::FnReturn => \"FnReturn retag\",\n+            RetagCause::FnEntry => \"function-entry retag\",\n+            RetagCause::FnReturnPlace => \"return-place retag\",\n             RetagCause::TwoPhase => \"two-phase retag\",\n         }\n         .to_string()"}, {"sha": "ec555ba2895c8468b82bcaae0008fcfb34b13ad0", "filename": "src/tools/miri/src/borrow_tracker/stacked_borrows/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1296a4c689b3e2aa0ecc3122982d6b0f96b90e0c/src%2Ftools%2Fmiri%2Fsrc%2Fborrow_tracker%2Fstacked_borrows%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1296a4c689b3e2aa0ecc3122982d6b0f96b90e0c/src%2Ftools%2Fmiri%2Fsrc%2Fborrow_tracker%2Fstacked_borrows%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fborrow_tracker%2Fstacked_borrows%2Fmod.rs?ref=1296a4c689b3e2aa0ecc3122982d6b0f96b90e0c", "patch": "@@ -998,7 +998,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriInterpCxExt<'mir, 'tcx> {\n             access: Some(AccessKind::Write),\n             protector: Some(ProtectorKind::StrongProtector),\n         };\n-        let val = this.sb_retag_reference(&val, new_perm, RetagCause::FnReturn)?;\n+        let val = this.sb_retag_reference(&val, new_perm, RetagCause::FnReturnPlace)?;\n         // And use reborrowed pointer for return place.\n         let return_place = this.ref_to_mplace(&val)?;\n         this.frame_mut().return_place = return_place.into();"}, {"sha": "ae54d0248dc3d5689138062084612fa6317a4fcc", "filename": "src/tools/miri/tests/fail/stacked_borrows/aliasing_mut3.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1296a4c689b3e2aa0ecc3122982d6b0f96b90e0c/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Faliasing_mut3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1296a4c689b3e2aa0ecc3122982d6b0f96b90e0c/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Faliasing_mut3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Faliasing_mut3.stderr?ref=1296a4c689b3e2aa0ecc3122982d6b0f96b90e0c", "patch": "@@ -5,7 +5,7 @@ LL | pub fn safe(_x: &mut i32, _y: &i32) {}\n    |                           ^^\n    |                           |\n    |                           trying to retag from <TAG> for SharedReadOnly permission at ALLOC[0x0], but that tag does not exist in the borrow stack for this location\n-   |                           this error occurs as part of FnEntry retag at ALLOC[0x0..0x4]\n+   |                           this error occurs as part of function-entry retag at ALLOC[0x0..0x4]\n    |\n    = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental\n    = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information\n@@ -14,7 +14,7 @@ help: <TAG> was created by a SharedReadOnly retag at offsets [0x0..0x4]\n    |\n LL |     safe_raw(xraw, xshr);\n    |                    ^^^^\n-help: <TAG> was later invalidated at offsets [0x0..0x4] by a Unique FnEntry retag inside this call\n+help: <TAG> was later invalidated at offsets [0x0..0x4] by a Unique function-entry retag inside this call\n   --> $DIR/aliasing_mut3.rs:LL:CC\n    |\n LL |     safe_raw(xraw, xshr);"}, {"sha": "236c8fb0187de7b3a0ad90807f243bcf44a8bf45", "filename": "src/tools/miri/tests/fail/stacked_borrows/fnentry_invalidation.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1296a4c689b3e2aa0ecc3122982d6b0f96b90e0c/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Ffnentry_invalidation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1296a4c689b3e2aa0ecc3122982d6b0f96b90e0c/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Ffnentry_invalidation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Ffnentry_invalidation.stderr?ref=1296a4c689b3e2aa0ecc3122982d6b0f96b90e0c", "patch": "@@ -14,7 +14,7 @@ help: <TAG> was created by a SharedReadWrite retag at offsets [0x0..0x4]\n    |\n LL |     let z = &mut x as *mut i32;\n    |             ^^^^^^\n-help: <TAG> was later invalidated at offsets [0x0..0x4] by a Unique FnEntry retag inside this call\n+help: <TAG> was later invalidated at offsets [0x0..0x4] by a Unique function-entry retag inside this call\n   --> $DIR/fnentry_invalidation.rs:LL:CC\n    |\n LL |     x.do_bad();"}, {"sha": "45c2197050a1bd16e0a0bb161cf136e54402ae14", "filename": "src/tools/miri/tests/fail/stacked_borrows/fnentry_invalidation2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1296a4c689b3e2aa0ecc3122982d6b0f96b90e0c/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Ffnentry_invalidation2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1296a4c689b3e2aa0ecc3122982d6b0f96b90e0c/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Ffnentry_invalidation2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fstacked_borrows%2Ffnentry_invalidation2.stderr?ref=1296a4c689b3e2aa0ecc3122982d6b0f96b90e0c", "patch": "@@ -14,7 +14,7 @@ help: <TAG> was created by a SharedReadOnly retag at offsets [0x0..0xc]\n    |\n LL |     let ptr = t.sli.as_ptr();\n    |               ^^^^^^^^^^^^^^\n-help: <TAG> was later invalidated at offsets [0x0..0xc] by a Unique FnEntry retag inside this call\n+help: <TAG> was later invalidated at offsets [0x0..0xc] by a Unique function-entry retag inside this call\n   --> $DIR/fnentry_invalidation2.rs:LL:CC\n    |\n LL |     let _ = t.sli.as_mut_ptr();"}]}