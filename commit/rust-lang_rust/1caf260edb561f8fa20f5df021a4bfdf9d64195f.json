{"sha": "1caf260edb561f8fa20f5df021a4bfdf9d64195f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjYWYyNjBlZGI1NjFmOGZhMjBmNWRmMDIxYTRiZmRmOWQ2NDE5NWY=", "commit": {"author": {"name": "bcoopers", "email": "coopersmithbrian@gmail.com", "date": "2015-03-29T20:12:01Z"}, "committer": {"name": "bcoopers", "email": "coopersmithbrian@gmail.com", "date": "2015-03-29T20:12:01Z"}, "message": "change std::usize to usize", "tree": {"sha": "4da6778ad87a921e628101a34d3c842926b8e81d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4da6778ad87a921e628101a34d3c842926b8e81d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1caf260edb561f8fa20f5df021a4bfdf9d64195f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1caf260edb561f8fa20f5df021a4bfdf9d64195f", "html_url": "https://github.com/rust-lang/rust/commit/1caf260edb561f8fa20f5df021a4bfdf9d64195f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1caf260edb561f8fa20f5df021a4bfdf9d64195f/comments", "author": null, "committer": null, "parents": [{"sha": "c93760da9dbe0c3117c678c977d48cd56a356f8d", "url": "https://api.github.com/repos/rust-lang/rust/commits/c93760da9dbe0c3117c678c977d48cd56a356f8d", "html_url": "https://github.com/rust-lang/rust/commit/c93760da9dbe0c3117c678c977d48cd56a356f8d"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "6a6d55772f743d33922147f8552e18be50c9bde4", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1caf260edb561f8fa20f5df021a4bfdf9d64195f/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1caf260edb561f8fa20f5df021a4bfdf9d64195f/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=1caf260edb561f8fa20f5df021a4bfdf9d64195f", "patch": "@@ -642,10 +642,10 @@ impl<T> Vec<T> {\n         #[inline(never)]\n         fn resize<T>(vec: &mut Vec<T>) {\n             let old_size = vec.cap * mem::size_of::<T>();\n-            if old_size == std::usize::MAX { panic!(\"capacity overflow\") }\n+            if old_size == usize::MAX { panic!(\"capacity overflow\") }\n             let mut size = max(old_size, 2 * mem::size_of::<T>()) * 2;\n             if old_size > size {\n-                size = std::usize::MAX;\n+                size = usize::MAX;\n             }\n             unsafe {\n                 let ptr = alloc_or_realloc(*vec.ptr, old_size, size);"}]}