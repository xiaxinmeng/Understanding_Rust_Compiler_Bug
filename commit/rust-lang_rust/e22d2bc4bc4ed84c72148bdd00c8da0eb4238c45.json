{"sha": "e22d2bc4bc4ed84c72148bdd00c8da0eb4238c45", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyMmQyYmM0YmM0ZWQ4NGM3MjE0OGJkZDAwYzhkYTBlYjQyMzhjNDU=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-01-22T15:51:00Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-01-25T00:24:30Z"}, "message": "core: convert io::Res over to the Drop trait", "tree": {"sha": "d46136d6d3c27efb43ed410b8bafaf659223b695", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d46136d6d3c27efb43ed410b8bafaf659223b695"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e22d2bc4bc4ed84c72148bdd00c8da0eb4238c45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e22d2bc4bc4ed84c72148bdd00c8da0eb4238c45", "html_url": "https://github.com/rust-lang/rust/commit/e22d2bc4bc4ed84c72148bdd00c8da0eb4238c45", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e22d2bc4bc4ed84c72148bdd00c8da0eb4238c45/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4d4a1499bfa1d09f15b6d10a0bd063b25574ce4", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4d4a1499bfa1d09f15b6d10a0bd063b25574ce4", "html_url": "https://github.com/rust-lang/rust/commit/e4d4a1499bfa1d09f15b6d10a0bd063b25574ce4"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "4b828dd4bc7b2d28629bfdb4ba949bde109e5378", "filename": "src/libcore/io.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e22d2bc4bc4ed84c72148bdd00c8da0eb4238c45/src%2Flibcore%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e22d2bc4bc4ed84c72148bdd00c8da0eb4238c45/src%2Flibcore%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fio.rs?ref=e22d2bc4bc4ed84c72148bdd00c8da0eb4238c45", "patch": "@@ -1108,10 +1108,13 @@ pub mod fsync {\n     // Artifacts that need to fsync on destruction\n     pub struct Res<t: Copy> {\n         arg: Arg<t>,\n-        drop {\n+    }\n+\n+    impl<T: Copy> Res<T>: Drop {\n+        fn finalize(&self) {\n           match self.arg.opt_level {\n-            option::None => (),\n-            option::Some(level) => {\n+            None => (),\n+            Some(level) => {\n               // fail hard if not succesful\n               assert((self.arg.fsync_fn)(self.arg.val, level) != -1);\n             }"}]}