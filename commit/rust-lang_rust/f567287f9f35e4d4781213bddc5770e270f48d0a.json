{"sha": "f567287f9f35e4d4781213bddc5770e270f48d0a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1NjcyODdmOWYzNWU0ZDQ3ODEyMTNiZGRjNTc3MGUyNzBmNDhkMGE=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-09-15T20:44:43Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-09-15T20:49:50Z"}, "message": "don't convert types to the same type with try_into (clippy::useless_conversion)", "tree": {"sha": "12ef4fae8f1b0d83a1af772fff3977dc56cb2eb8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12ef4fae8f1b0d83a1af772fff3977dc56cb2eb8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f567287f9f35e4d4781213bddc5770e270f48d0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f567287f9f35e4d4781213bddc5770e270f48d0a", "html_url": "https://github.com/rust-lang/rust/commit/f567287f9f35e4d4781213bddc5770e270f48d0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f567287f9f35e4d4781213bddc5770e270f48d0a/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a874956d940ecb3ed524b6176a171219ac4787ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/a874956d940ecb3ed524b6176a171219ac4787ea", "html_url": "https://github.com/rust-lang/rust/commit/a874956d940ecb3ed524b6176a171219ac4787ea"}], "stats": {"total": 13, "additions": 4, "deletions": 9}, "files": [{"sha": "eb924616722596d6c588190943170a45a18de2a0", "filename": "compiler/rustc_mir/src/dataflow/move_paths/builder.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f567287f9f35e4d4781213bddc5770e270f48d0a/compiler%2Frustc_mir%2Fsrc%2Fdataflow%2Fmove_paths%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f567287f9f35e4d4781213bddc5770e270f48d0a/compiler%2Frustc_mir%2Fsrc%2Fdataflow%2Fmove_paths%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fdataflow%2Fmove_paths%2Fbuilder.rs?ref=f567287f9f35e4d4781213bddc5770e270f48d0a", "patch": "@@ -4,7 +4,6 @@ use rustc_middle::mir::*;\n use rustc_middle::ty::{self, TyCtxt};\n use smallvec::{smallvec, SmallVec};\n \n-use std::convert::TryInto;\n use std::mem;\n \n use super::abs_domain::Lift;\n@@ -482,10 +481,8 @@ impl<'b, 'a, 'tcx> Gatherer<'b, 'a, 'tcx> {\n             let base_ty = base_place.ty(self.builder.body, self.builder.tcx).ty;\n             let len: u64 = match base_ty.kind() {\n                 ty::Array(_, size) => {\n-                    let length = size.eval_usize(self.builder.tcx, self.builder.param_env);\n+                    let length: u64 = size.eval_usize(self.builder.tcx, self.builder.param_env);\n                     length\n-                        .try_into()\n-                        .expect(\"slice pattern of array with more than u32::MAX elements\")\n                 }\n                 _ => bug!(\"from_end: false slice pattern of non-array type\"),\n             };"}, {"sha": "3b22eb5d98719c18097843ca627414834061416f", "filename": "compiler/rustc_mir/src/interpret/place.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f567287f9f35e4d4781213bddc5770e270f48d0a/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f567287f9f35e4d4781213bddc5770e270f48d0a/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fplace.rs?ref=f567287f9f35e4d4781213bddc5770e270f48d0a", "patch": "@@ -551,7 +551,7 @@ where\n                 let n = base.len(self)?;\n                 if n < min_length {\n                     // This can only be reached in ConstProp and non-rustc-MIR.\n-                    throw_ub!(BoundsCheckFailed { len: min_length.into(), index: n });\n+                    throw_ub!(BoundsCheckFailed { len: min_length, index: n });\n                 }\n \n                 let index = if from_end {\n@@ -565,9 +565,7 @@ where\n                 self.mplace_index(base, index)?\n             }\n \n-            Subslice { from, to, from_end } => {\n-                self.mplace_subslice(base, u64::from(from), u64::from(to), from_end)?\n-            }\n+            Subslice { from, to, from_end } => self.mplace_subslice(base, from, to, from_end)?,\n         })\n     }\n "}, {"sha": "4ef88c25cadf3393663ba6a6b90b236a7d2b2857", "filename": "compiler/rustc_mir_build/src/build/matches/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f567287f9f35e4d4781213bddc5770e270f48d0a/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmatches%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f567287f9f35e4d4781213bddc5770e270f48d0a/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmatches%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmatches%2Futil.rs?ref=f567287f9f35e4d4781213bddc5770e270f48d0a", "patch": "@@ -33,7 +33,7 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n         let tcx = self.hir.tcx();\n         let (min_length, exact_size) = match place.ty(&self.local_decls, tcx).ty.kind() {\n             ty::Array(_, length) => {\n-                (length.eval_usize(tcx, self.hir.param_env).try_into().unwrap(), true)\n+                (length.eval_usize(tcx, self.hir.param_env), true)\n             }\n             _ => ((prefix.len() + suffix.len()).try_into().unwrap(), false),\n         };"}]}