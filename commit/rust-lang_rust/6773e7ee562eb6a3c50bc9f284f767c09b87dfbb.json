{"sha": "6773e7ee562eb6a3c50bc9f284f767c09b87dfbb", "node_id": "C_kwDOAAsO6NoAKDY3NzNlN2VlNTYyZWI2YTNjNTBiYzlmMjg0Zjc2N2MwOWI4N2RmYmI", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-11-03T08:17:32Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-11-25T08:00:49Z"}, "message": "More manual formatting", "tree": {"sha": "a6ab216b2e49ef84da76f1433974b852fee22a16", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6ab216b2e49ef84da76f1433974b852fee22a16"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6773e7ee562eb6a3c50bc9f284f767c09b87dfbb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6773e7ee562eb6a3c50bc9f284f767c09b87dfbb", "html_url": "https://github.com/rust-lang/rust/commit/6773e7ee562eb6a3c50bc9f284f767c09b87dfbb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6773e7ee562eb6a3c50bc9f284f767c09b87dfbb/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3eb8f27786482cac6b28b13eda8af0e919a556c", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3eb8f27786482cac6b28b13eda8af0e919a556c", "html_url": "https://github.com/rust-lang/rust/commit/c3eb8f27786482cac6b28b13eda8af0e919a556c"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "a4bd81fb73f8fee8b29829bd79fb37f254ecdda1", "filename": "compiler/rustc_const_eval/src/transform/validate.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6773e7ee562eb6a3c50bc9f284f767c09b87dfbb/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6773e7ee562eb6a3c50bc9f284f767c09b87dfbb/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs?ref=6773e7ee562eb6a3c50bc9f284f767c09b87dfbb", "patch": "@@ -226,12 +226,12 @@ impl<'a, 'tcx> Visitor<'tcx> for TypeChecker<'a, 'tcx> {\n                 let check_equal = |this: &Self, location, f_ty| {\n                     if !this.mir_assign_valid_types(ty, f_ty) {\n                         this.fail(\n-                        location,\n-                        format!(\n-                            \"Field projection `{:?}.{:?}` specified type `{:?}`, but actual type is `{:?}`\",\n-                            parent, f, ty, f_ty\n+                            location,\n+                            format!(\n+                                \"Field projection `{:?}.{:?}` specified type `{:?}`, but actual type is `{:?}`\",\n+                                parent, f, ty, f_ty\n+                            )\n                         )\n-                    )\n                     }\n                 };\n "}]}