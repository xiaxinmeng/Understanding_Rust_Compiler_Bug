{"sha": "45198456be60a6906d24abdc3c67a31b9206188e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1MTk4NDU2YmU2MGE2OTA2ZDI0YWJkYzNjNjdhMzFiOTIwNjE4OGU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-09-22T00:22:24Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-09-22T00:22:24Z"}, "message": "Auto merge of #76913 - vandenheuvel:performance_debug, r=lcnr\n\nFixing the performance regression of #76244\n\nIssue https://github.com/rust-lang/rust/issues/74865 suggested that removing the `def_id` field from `ParamEnv` would improve performance. PR https://github.com/rust-lang/rust/pull/76244 implemented this change.\n\nGenerally, [results](https://perf.rust-lang.org/compare.html?start=80fc9b0ecb29050d45b17c64af004200afd3cfc2&end=5ef250dd2ad618ee339f165e9b711a1b4746887d) were as expected: an instruction count decrease of about a percent. The instruction count for the unicode crates increased by about 3%, which `@nnethercote` speculated to be caused by a quirk of inlining or codegen. As the results were generally positive, and for chalk integration, this was also a step in the right direction, the PR was r+'d regardless.\n\nHowever, [wall-time performance results](https://perf.rust-lang.org/compare.html?start=a055c5a1bd95e029e9b31891db63b6dc8258b472&end=7402a394471a6738a40fea7d4f1891666e5a80c5&stat=task-clock) show a much larger performance degradation: 25%, as [mentioned](https://github.com/rust-lang/rust/pull/76244#issuecomment-694459840) by `@Mark-Simulacrum.`\n\nThis PR, for now, reverts #76244 and attempts to find out, which change caused the regression.", "tree": {"sha": "ab3f0e63d941c5d2f205312d195ccf696d1a4731", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab3f0e63d941c5d2f205312d195ccf696d1a4731"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45198456be60a6906d24abdc3c67a31b9206188e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45198456be60a6906d24abdc3c67a31b9206188e", "html_url": "https://github.com/rust-lang/rust/commit/45198456be60a6906d24abdc3c67a31b9206188e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45198456be60a6906d24abdc3c67a31b9206188e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f47df31ae5d7d9795399dca3a0003c1856900361", "url": "https://api.github.com/repos/rust-lang/rust/commits/f47df31ae5d7d9795399dca3a0003c1856900361", "html_url": "https://github.com/rust-lang/rust/commit/f47df31ae5d7d9795399dca3a0003c1856900361"}, {"sha": "ab83d372ed5b1799d418afe83c468e4c5973cc34", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab83d372ed5b1799d418afe83c468e4c5973cc34", "html_url": "https://github.com/rust-lang/rust/commit/ab83d372ed5b1799d418afe83c468e4c5973cc34"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "7e7c8588ffb40a6440bce2d38c4fdc69ad0d4fa8", "filename": "compiler/rustc_infer/src/traits/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45198456be60a6906d24abdc3c67a31b9206188e/compiler%2Frustc_infer%2Fsrc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45198456be60a6906d24abdc3c67a31b9206188e/compiler%2Frustc_infer%2Fsrc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Ftraits%2Fmod.rs?ref=45198456be60a6906d24abdc3c67a31b9206188e", "patch": "@@ -57,7 +57,7 @@ pub type TraitObligation<'tcx> = Obligation<'tcx, ty::PolyTraitPredicate<'tcx>>;\n \n // `PredicateObligation` is used a lot. Make sure it doesn't unintentionally get bigger.\n #[cfg(target_arch = \"x86_64\")]\n-static_assert_size!(PredicateObligation<'_>, 32);\n+static_assert_size!(PredicateObligation<'_>, 40);\n \n pub type Obligations<'tcx, O> = Vec<Obligation<'tcx, O>>;\n pub type PredicateObligations<'tcx> = Vec<PredicateObligation<'tcx>>;"}, {"sha": "637ef4c17ebc8c1ae6a5773acf490c41146faa48", "filename": "compiler/rustc_middle/src/ty/mod.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/45198456be60a6906d24abdc3c67a31b9206188e/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45198456be60a6906d24abdc3c67a31b9206188e/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs?ref=45198456be60a6906d24abdc3c67a31b9206188e", "patch": "@@ -1745,6 +1745,9 @@ pub struct ParamEnv<'tcx> {\n     ///\n     /// Note: This is packed, use the reveal() method to access it.\n     packed: CopyTaggedPtr<&'tcx List<Predicate<'tcx>>, traits::Reveal, true>,\n+\n+    /// FIXME: This field is not used, but removing it causes a performance degradation. See #76913.\n+    unused_field: Option<DefId>,\n }\n \n unsafe impl rustc_data_structures::tagged_ptr::Tag for traits::Reveal {\n@@ -1825,7 +1828,7 @@ impl<'tcx> ParamEnv<'tcx> {\n     /// Construct a trait environment with the given set of predicates.\n     #[inline]\n     pub fn new(caller_bounds: &'tcx List<Predicate<'tcx>>, reveal: Reveal) -> Self {\n-        ty::ParamEnv { packed: CopyTaggedPtr::new(caller_bounds, reveal) }\n+        ty::ParamEnv { packed: CopyTaggedPtr::new(caller_bounds, reveal), unused_field: None }\n     }\n \n     pub fn with_user_facing(mut self) -> Self {"}, {"sha": "77073f51eb7af786ac86a914569194979f6fd573", "filename": "compiler/rustc_trait_selection/src/traits/fulfill.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45198456be60a6906d24abdc3c67a31b9206188e/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ffulfill.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45198456be60a6906d24abdc3c67a31b9206188e/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ffulfill.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ffulfill.rs?ref=45198456be60a6906d24abdc3c67a31b9206188e", "patch": "@@ -87,7 +87,7 @@ pub struct PendingPredicateObligation<'tcx> {\n \n // `PendingPredicateObligation` is used a lot. Make sure it doesn't unintentionally get bigger.\n #[cfg(target_arch = \"x86_64\")]\n-static_assert_size!(PendingPredicateObligation<'_>, 56);\n+static_assert_size!(PendingPredicateObligation<'_>, 64);\n \n impl<'a, 'tcx> FulfillmentContext<'tcx> {\n     /// Creates a new fulfillment context."}]}