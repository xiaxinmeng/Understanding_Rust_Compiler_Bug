{"sha": "4572d328103b96ef0c80c00dc9b3455e526e8eab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1NzJkMzI4MTAzYjk2ZWYwYzgwYzAwZGM5YjM0NTVlNTI2ZThlYWI=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-04-24T15:34:56Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-05-08T08:59:08Z"}, "message": "Shrink visibility of the `AllocMap` and its methods", "tree": {"sha": "31f443bf2f72b630c2c218314c8fe8dec9aa4ff4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31f443bf2f72b630c2c218314c8fe8dec9aa4ff4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4572d328103b96ef0c80c00dc9b3455e526e8eab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4572d328103b96ef0c80c00dc9b3455e526e8eab", "html_url": "https://github.com/rust-lang/rust/commit/4572d328103b96ef0c80c00dc9b3455e526e8eab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4572d328103b96ef0c80c00dc9b3455e526e8eab/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1037f403ea74f73071d627d8f3c129d537090abb", "url": "https://api.github.com/repos/rust-lang/rust/commits/1037f403ea74f73071d627d8f3c129d537090abb", "html_url": "https://github.com/rust-lang/rust/commit/1037f403ea74f73071d627d8f3c129d537090abb"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "cb9f0bd0acaf72e5aa64ce6e901686b072195888", "filename": "src/librustc_middle/mir/interpret/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4572d328103b96ef0c80c00dc9b3455e526e8eab/src%2Flibrustc_middle%2Fmir%2Finterpret%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4572d328103b96ef0c80c00dc9b3455e526e8eab/src%2Flibrustc_middle%2Fmir%2Finterpret%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Finterpret%2Fmod.rs?ref=4572d328103b96ef0c80c00dc9b3455e526e8eab", "patch": "@@ -401,7 +401,7 @@ impl GlobalAlloc<'tcx> {\n     }\n }\n \n-pub struct AllocMap<'tcx> {\n+crate struct AllocMap<'tcx> {\n     /// Maps `AllocId`s to their corresponding allocations.\n     alloc_map: FxHashMap<AllocId, GlobalAlloc<'tcx>>,\n \n@@ -417,10 +417,10 @@ pub struct AllocMap<'tcx> {\n }\n \n impl<'tcx> AllocMap<'tcx> {\n-    pub fn new() -> Self {\n+    crate fn new() -> Self {\n         AllocMap { alloc_map: Default::default(), dedup: Default::default(), next_id: AllocId(0) }\n     }\n-    pub fn reserve(&mut self) -> AllocId {\n+    fn reserve(&mut self) -> AllocId {\n         let next = self.next_id;\n         self.next_id.0 = self.next_id.0.checked_add(1).expect(\n             \"You overflowed a u64 by incrementing by 1... \\"}]}