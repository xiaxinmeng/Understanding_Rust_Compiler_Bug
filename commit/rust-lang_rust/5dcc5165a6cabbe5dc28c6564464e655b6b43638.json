{"sha": "5dcc5165a6cabbe5dc28c6564464e655b6b43638", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkY2M1MTY1YTZjYWJiZTVkYzI4YzY1NjQ0NjRlNjU1YjZiNDM2Mzg=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-19T00:57:53Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T21:01:23Z"}, "message": "librustc: Remove unused `discrim_symbols` field from the crate context", "tree": {"sha": "f4acc96bef13bcacb855c36b1551984c191ea451", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4acc96bef13bcacb855c36b1551984c191ea451"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5dcc5165a6cabbe5dc28c6564464e655b6b43638", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5dcc5165a6cabbe5dc28c6564464e655b6b43638", "html_url": "https://github.com/rust-lang/rust/commit/5dcc5165a6cabbe5dc28c6564464e655b6b43638", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5dcc5165a6cabbe5dc28c6564464e655b6b43638/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f3e4fea4f9d5e38843429eb59c5b38be84087d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f3e4fea4f9d5e38843429eb59c5b38be84087d1", "html_url": "https://github.com/rust-lang/rust/commit/0f3e4fea4f9d5e38843429eb59c5b38be84087d1"}], "stats": {"total": 10, "additions": 0, "deletions": 10}, "files": [{"sha": "2dccf77da8ed0c40343d9431e7d89a696e0d2656", "filename": "src/librustc/metadata/encoder.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5dcc5165a6cabbe5dc28c6564464e655b6b43638/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5dcc5165a6cabbe5dc28c6564464e655b6b43638/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fencoder.rs?ref=5dcc5165a6cabbe5dc28c6564464e655b6b43638", "patch": "@@ -61,7 +61,6 @@ pub struct EncodeParams<'a> {\n     tcx: ty::ctxt,\n     reexports2: middle::resolve::ExportMap2,\n     item_symbols: &'a RefCell<HashMap<ast::NodeId, ~str>>,\n-    discrim_symbols: &'a HashMap<ast::NodeId, @str>,\n     non_inlineable_statics: &'a HashSet<ast::NodeId>,\n     link_meta: &'a LinkMeta,\n     cstore: @mut cstore::CStore,\n@@ -91,7 +90,6 @@ pub struct EncodeContext<'a> {\n     stats: @mut Stats,\n     reexports2: middle::resolve::ExportMap2,\n     item_symbols: &'a RefCell<HashMap<ast::NodeId, ~str>>,\n-    discrim_symbols: &'a HashMap<ast::NodeId, @str>,\n     non_inlineable_statics: &'a HashSet<ast::NodeId>,\n     link_meta: &'a LinkMeta,\n     cstore: &'a cstore::CStore,\n@@ -1745,7 +1743,6 @@ pub fn encode_metadata(parms: EncodeParams, crate: &Crate) -> ~[u8] {\n         diag,\n         tcx,\n         reexports2,\n-        discrim_symbols,\n         cstore,\n         encode_inlined_item,\n         link_meta,\n@@ -1761,7 +1758,6 @@ pub fn encode_metadata(parms: EncodeParams, crate: &Crate) -> ~[u8] {\n         stats: stats,\n         reexports2: reexports2,\n         item_symbols: item_symbols,\n-        discrim_symbols: discrim_symbols,\n         non_inlineable_statics: non_inlineable_statics,\n         link_meta: link_meta,\n         cstore: cstore,"}, {"sha": "60afadcb68a4d3e116b2dd42af54de68aa26db35", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5dcc5165a6cabbe5dc28c6564464e655b6b43638/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5dcc5165a6cabbe5dc28c6564464e655b6b43638/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=5dcc5165a6cabbe5dc28c6564464e655b6b43638", "patch": "@@ -3056,14 +3056,12 @@ pub fn crate_ctxt_to_encode_parms<'r>(cx: &'r CrateContext, ie: encoder::encode_\n \n         let diag = cx.sess.diagnostic();\n         let item_symbols = &cx.item_symbols;\n-        let discrim_symbols = &cx.discrim_symbols;\n         let link_meta = &cx.link_meta;\n         encoder::EncodeParams {\n             diag: diag,\n             tcx: cx.tcx,\n             reexports2: cx.exp_map2,\n             item_symbols: item_symbols,\n-            discrim_symbols: discrim_symbols,\n             non_inlineable_statics: &cx.non_inlineable_statics,\n             link_meta: link_meta,\n             cstore: cx.sess.cstore,"}, {"sha": "3c3e92d00adc200f2c939c95d7b79f969642717e", "filename": "src/librustc/middle/trans/context.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5dcc5165a6cabbe5dc28c6564464e655b6b43638/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5dcc5165a6cabbe5dc28c6564464e655b6b43638/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs?ref=5dcc5165a6cabbe5dc28c6564464e655b6b43638", "patch": "@@ -52,8 +52,6 @@ pub struct CrateContext {\n      reachable: @mut HashSet<ast::NodeId>,\n      item_symbols: RefCell<HashMap<ast::NodeId, ~str>>,\n      link_meta: LinkMeta,\n-     discrims: HashMap<ast::DefId, ValueRef>,\n-     discrim_symbols: HashMap<ast::NodeId, @str>,\n      tydescs: HashMap<ty::t, @mut tydesc_info>,\n      // Set when running emit_tydescs to enforce that no more tydescs are\n      // created.\n@@ -191,8 +189,6 @@ impl CrateContext {\n                   reachable: reachable,\n                   item_symbols: RefCell::new(HashMap::new()),\n                   link_meta: link_meta,\n-                  discrims: HashMap::new(),\n-                  discrim_symbols: HashMap::new(),\n                   tydescs: HashMap::new(),\n                   finished_tydescs: false,\n                   external: HashMap::new(),"}]}