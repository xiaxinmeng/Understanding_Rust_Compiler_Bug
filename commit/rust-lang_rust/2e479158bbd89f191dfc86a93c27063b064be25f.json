{"sha": "2e479158bbd89f191dfc86a93c27063b064be25f", "node_id": "C_kwDOAAsO6NoAKDJlNDc5MTU4YmJkODlmMTkxZGZjODZhOTNjMjcwNjNiMDY0YmUyNWY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-02-27T08:40:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-02-27T08:40:39Z"}, "message": "Auto merge of #14208 - Kohei316:master, r=Veykril\n\nfix:add a case in which remainig is None in resolveing types when resolving hir path.\n\nfix #14030 The variable type is being determined incorrectly\nThis PR fixed a problem in which `go to definition` is jumping to the incorrect position because it was failing to resolve the type in case it defined in the module when resolving hir.\nIn addition, I added a test for this issue and refactored the related code.\nThis is my first PR and I am using a translation tool to write this text. Let me know if you have any problems.", "tree": {"sha": "9b7673349be5c40d29005ac7ef33a5fd2c33e0db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b7673349be5c40d29005ac7ef33a5fd2c33e0db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e479158bbd89f191dfc86a93c27063b064be25f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e479158bbd89f191dfc86a93c27063b064be25f", "html_url": "https://github.com/rust-lang/rust/commit/2e479158bbd89f191dfc86a93c27063b064be25f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e479158bbd89f191dfc86a93c27063b064be25f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e29820f6d9880606a403e7bec6e91312e7f0575", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e29820f6d9880606a403e7bec6e91312e7f0575", "html_url": "https://github.com/rust-lang/rust/commit/4e29820f6d9880606a403e7bec6e91312e7f0575"}, {"sha": "aa877645a6d5b16884fe1bd553d6f5ca921ea102", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa877645a6d5b16884fe1bd553d6f5ca921ea102", "html_url": "https://github.com/rust-lang/rust/commit/aa877645a6d5b16884fe1bd553d6f5ca921ea102"}], "stats": {"total": 27, "additions": 22, "deletions": 5}, "files": [{"sha": "ef5434771d943d3ddd72240a792c1effd0dcc3a8", "filename": "crates/hir/src/source_analyzer.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2e479158bbd89f191dfc86a93c27063b064be25f/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e479158bbd89f191dfc86a93c27063b064be25f/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs?ref=2e479158bbd89f191dfc86a93c27063b064be25f", "patch": "@@ -943,17 +943,17 @@ fn resolve_hir_path_(\n                 res.map(|ty_ns| (ty_ns, path.segments().first()))\n             }\n             None => {\n-                let (ty, remaining) =\n+                let (ty, remaining_idx) =\n                     resolver.resolve_path_in_type_ns(db.upcast(), path.mod_path())?;\n-                match remaining {\n-                    Some(remaining) if remaining > 1 => {\n-                        if remaining + 1 == path.segments().len() {\n+                match remaining_idx {\n+                    Some(remaining_idx) => {\n+                        if remaining_idx + 1 == path.segments().len() {\n                             Some((ty, path.segments().last()))\n                         } else {\n                             None\n                         }\n                     }\n-                    _ => Some((ty, path.segments().get(1))),\n+                    None => Some((ty, None)),\n                 }\n             }\n         }?;"}, {"sha": "65d1181d0924493fdac93cfc358548ef26693a32", "filename": "crates/ide/src/goto_definition.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/2e479158bbd89f191dfc86a93c27063b064be25f/crates%2Fide%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e479158bbd89f191dfc86a93c27063b064be25f/crates%2Fide%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fgoto_definition.rs?ref=2e479158bbd89f191dfc86a93c27063b064be25f", "patch": "@@ -1065,6 +1065,23 @@ fn f() -> impl Sub<Item$0 = u8> {}\n         );\n     }\n \n+    #[test]\n+    fn goto_def_for_module_declaration_in_path_if_types_and_values_same_name() {\n+        check(\n+            r#\"\n+mod bar {\n+    pub struct Foo {}\n+             //^^^\n+    pub fn Foo() {}\n+}\n+\n+fn baz() {\n+    let _foo_enum: bar::Foo$0 = bar::Foo {};\n+}\n+        \"#,\n+        )\n+    }\n+\n     #[test]\n     fn unknown_assoc_ty() {\n         check_unresolved("}]}