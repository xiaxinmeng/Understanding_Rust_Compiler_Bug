{"sha": "02e9e46ed6443f053d2c22335ff57f98d5f64f05", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyZTllNDZlZDY0NDNmMDUzZDJjMjIzMzVmZjU3Zjk4ZDVmNjRmMDU=", "commit": {"author": {"name": "Alexander Andreev", "email": "andreevlex.as@gmail.com", "date": "2019-07-03T19:01:41Z"}, "committer": {"name": "Alexander Andreev", "email": "andreevlex.as@gmail.com", "date": "2019-07-03T19:01:41Z"}, "message": "Move resolve raw name in name.rs\n\nAdded test for check module resolution with raw name", "tree": {"sha": "9fda20ca35f6193e9ebcb05aa0d01b8b3e19e94b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9fda20ca35f6193e9ebcb05aa0d01b8b3e19e94b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02e9e46ed6443f053d2c22335ff57f98d5f64f05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02e9e46ed6443f053d2c22335ff57f98d5f64f05", "html_url": "https://github.com/rust-lang/rust/commit/02e9e46ed6443f053d2c22335ff57f98d5f64f05", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02e9e46ed6443f053d2c22335ff57f98d5f64f05/comments", "author": {"login": "ava57r", "id": 20382553, "node_id": "MDQ6VXNlcjIwMzgyNTUz", "avatar_url": "https://avatars.githubusercontent.com/u/20382553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ava57r", "html_url": "https://github.com/ava57r", "followers_url": "https://api.github.com/users/ava57r/followers", "following_url": "https://api.github.com/users/ava57r/following{/other_user}", "gists_url": "https://api.github.com/users/ava57r/gists{/gist_id}", "starred_url": "https://api.github.com/users/ava57r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ava57r/subscriptions", "organizations_url": "https://api.github.com/users/ava57r/orgs", "repos_url": "https://api.github.com/users/ava57r/repos", "events_url": "https://api.github.com/users/ava57r/events{/privacy}", "received_events_url": "https://api.github.com/users/ava57r/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ava57r", "id": 20382553, "node_id": "MDQ6VXNlcjIwMzgyNTUz", "avatar_url": "https://avatars.githubusercontent.com/u/20382553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ava57r", "html_url": "https://github.com/ava57r", "followers_url": "https://api.github.com/users/ava57r/followers", "following_url": "https://api.github.com/users/ava57r/following{/other_user}", "gists_url": "https://api.github.com/users/ava57r/gists{/gist_id}", "starred_url": "https://api.github.com/users/ava57r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ava57r/subscriptions", "organizations_url": "https://api.github.com/users/ava57r/orgs", "repos_url": "https://api.github.com/users/ava57r/repos", "events_url": "https://api.github.com/users/ava57r/events{/privacy}", "received_events_url": "https://api.github.com/users/ava57r/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "018bf3d7b1cdc070aa1a0926df0840f1cf9a03b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/018bf3d7b1cdc070aa1a0926df0840f1cf9a03b9", "html_url": "https://github.com/rust-lang/rust/commit/018bf3d7b1cdc070aa1a0926df0840f1cf9a03b9"}], "stats": {"total": 51, "additions": 40, "deletions": 11}, "files": [{"sha": "0bb7cae9959fd06bd0718d1c2a6ed3bd09bc6bc9", "filename": "crates/ra_hir/src/name.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/02e9e46ed6443f053d2c22335ff57f98d5f64f05/crates%2Fra_hir%2Fsrc%2Fname.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02e9e46ed6443f053d2c22335ff57f98d5f64f05/crates%2Fra_hir%2Fsrc%2Fname.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fname.rs?ref=02e9e46ed6443f053d2c22335ff57f98d5f64f05", "patch": "@@ -98,13 +98,15 @@ pub(crate) trait AsName {\n \n impl AsName for ast::NameRef {\n     fn as_name(&self) -> Name {\n-        Name::new(self.text().clone())\n+        let name = resolve_name(self.text().clone()); \n+        Name::new(name)\n     }\n }\n \n impl AsName for ast::Name {\n     fn as_name(&self) -> Name {\n-        Name::new(self.text().clone())\n+        let name = resolve_name(self.text().clone());\n+        Name::new(name)\n     }\n }\n \n@@ -184,3 +186,12 @@ impl AsName for KnownName {\n         Name::new(s.into())\n     }\n }\n+\n+fn resolve_name(text: SmolStr) -> SmolStr {\n+    let raw_start = \"r#\";\n+    if text.as_str().starts_with(raw_start) {\n+        SmolStr::new(&text[raw_start.len()..])\n+    } else {\n+        text\n+    }\n+}"}, {"sha": "ef4d1ed70f10a15b7b2badebb860624ed5d911f1", "filename": "crates/ra_hir/src/nameres/collector.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/02e9e46ed6443f053d2c22335ff57f98d5f64f05/crates%2Fra_hir%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02e9e46ed6443f053d2c22335ff57f98d5f64f05/crates%2Fra_hir%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fnameres%2Fcollector.rs?ref=02e9e46ed6443f053d2c22335ff57f98d5f64f05", "patch": "@@ -643,7 +643,6 @@ fn resolve_submodule(\n     let mod_name = path.file_stem().unwrap_or(\"unknown\");\n     let is_dir_owner = is_root || mod_name == \"mod\";\n \n-    let name = resolve_mod_name(name.to_string());\n     let file_mod = dir_path.join(format!(\"{}.rs\", name));\n     let dir_mod = dir_path.join(format!(\"{}/mod.rs\", name));\n     let file_dir_mod = dir_path.join(format!(\"{}/{}.rs\", mod_name, name));\n@@ -663,14 +662,6 @@ fn resolve_submodule(\n     }\n }\n \n-fn resolve_mod_name(name: String) -> String {\n-    if name.starts_with(\"r#\") {\n-        name.replace(\"r#\", \"\")\n-    } else {\n-        name\n-    }\n-}\n-\n #[cfg(test)]\n mod tests {\n     use ra_db::SourceDatabase;"}, {"sha": "78332ce7c4db37b61ea9a59b40ad9c7721703e6c", "filename": "crates/ra_hir/src/nameres/tests.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/02e9e46ed6443f053d2c22335ff57f98d5f64f05/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02e9e46ed6443f053d2c22335ff57f98d5f64f05/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests.rs?ref=02e9e46ed6443f053d2c22335ff57f98d5f64f05", "patch": "@@ -338,6 +338,33 @@ fn module_resolution_works_for_non_standard_filenames() {\n     \"###);\n }\n \n+#[test]\n+fn module_resolution_works_for_raw_modules() {\n+   let map = def_map_with_crate_graph(\n+        \"\n+        //- /library.rs\n+        mod r#async;\n+        use self::r#async::Bar;\n+\n+        //- /async.rs\n+        pub struct Bar;\n+        \",\n+        crate_graph! {\n+            \"library\": (\"/library.rs\", []),\n+        },\n+    );\n+\n+    assert_snapshot_matches!(map, @r###\"\n+        \u22eecrate\n+        \u22eeBar: t v\n+        \u22eeasync: t\n+        \u22ee\n+        \u22eecrate::async\n+        \u22eeBar: t v\n+    \"###);\n+\n+}\n+\n #[test]\n fn name_res_works_for_broken_modules() {\n     covers!(name_res_works_for_broken_modules);"}]}