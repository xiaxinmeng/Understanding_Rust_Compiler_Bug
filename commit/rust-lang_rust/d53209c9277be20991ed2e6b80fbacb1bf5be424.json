{"sha": "d53209c9277be20991ed2e6b80fbacb1bf5be424", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1MzIwOWM5Mjc3YmUyMDk5MWVkMmU2YjgwZmJhY2IxYmY1YmU0MjQ=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-09-24T23:41:01Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-09-24T23:41:01Z"}, "message": "Construct the crate constant in rustc.", "tree": {"sha": "d379b479baf3f9f21a1ab90230b93d223fcc5a3a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d379b479baf3f9f21a1ab90230b93d223fcc5a3a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d53209c9277be20991ed2e6b80fbacb1bf5be424", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d53209c9277be20991ed2e6b80fbacb1bf5be424", "html_url": "https://github.com/rust-lang/rust/commit/d53209c9277be20991ed2e6b80fbacb1bf5be424", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d53209c9277be20991ed2e6b80fbacb1bf5be424/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b69a0c137c344ae722abc176f9d7ea27f7bddd3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b69a0c137c344ae722abc176f9d7ea27f7bddd3e", "html_url": "https://github.com/rust-lang/rust/commit/b69a0c137c344ae722abc176f9d7ea27f7bddd3e"}], "stats": {"total": 63, "additions": 62, "deletions": 1}, "files": [{"sha": "80d87c247d5a49012c66e9337152b27cbaecfbb6", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 62, "deletions": 1, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/d53209c9277be20991ed2e6b80fbacb1bf5be424/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d53209c9277be20991ed2e6b80fbacb1bf5be424/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=d53209c9277be20991ed2e6b80fbacb1bf5be424", "patch": "@@ -89,6 +89,24 @@ fn T_task() -> TypeRef {\n                      ));\n }\n \n+fn T_crate() -> TypeRef {\n+    ret T_struct(vec(T_int(),      // ptrdiff_t image_base_off\n+                     T_int(),      // uintptr_t self_addr\n+                     T_int(),      // ptrdiff_t debug_abbrev_off\n+                     T_int(),      // size_t debug_abbrev_sz\n+                     T_int(),      // ptrdiff_t debug_info_off\n+                     T_int(),      // size_t debug_info_sz\n+                     T_int(),      // size_t activate_glue_off\n+                     T_int(),      // size_t yield_glue_off\n+                     T_int(),      // size_t unwind_glue_off\n+                     T_int(),      // size_t gc_glue_off\n+                     T_int(),      // size_t main_exit_task_glue_off\n+                     T_int(),      // int n_rust_syms\n+                     T_int(),      // int n_c_syms\n+                     T_int()       //int n_libs\n+                     ));\n+}\n+\n fn T_double() -> TypeRef {\n     ret llvm.LLVMDoubleType();\n }\n@@ -263,6 +281,49 @@ fn trans_mod(@trans_ctxt cx, &ast._mod m) {\n     }\n }\n \n+fn crate_constant(@trans_ctxt cx) -> ValueRef {\n+\n+    let ValueRef crate_ptr =\n+        llvm.LLVMAddGlobal(cx.llmod, T_ptr(T_crate()),\n+                           _str.buf(\"rust_crate\"));\n+\n+    fn p2i(ValueRef v) -> ValueRef {\n+        ret llvm.LLVMConstPtrToInt(v, T_int());\n+    }\n+\n+    let ValueRef crate_addr = p2i(crate_ptr);\n+\n+    let ValueRef activate_glue_off =\n+        llvm.LLVMConstSub(p2i(cx.glues.activate_glue), crate_addr);\n+\n+    let ValueRef yield_glue_off =\n+        llvm.LLVMConstSub(p2i(cx.glues.yield_glue), crate_addr);\n+\n+    // FIXME: we aren't generating the exit-task glue yet.\n+    // llvm.LLVMConstSub(p2i(cx.glues.exit_task_glue), crate_addr);\n+    let ValueRef exit_task_glue_off = C_null(T_int());\n+\n+    let ValueRef crate_val =\n+        C_struct(vec(C_null(T_int()),     // ptrdiff_t image_base_off\n+                     crate_ptr,           // uintptr_t self_addr\n+                     C_null(T_int()),     // ptrdiff_t debug_abbrev_off\n+                     C_null(T_int()),     // size_t debug_abbrev_sz\n+                     C_null(T_int()),     // ptrdiff_t debug_info_off\n+                     C_null(T_int()),     // size_t debug_info_sz\n+                     activate_glue_off,   // size_t activate_glue_off\n+                     yield_glue_off,      // size_t yield_glue_off\n+                     C_null(T_int()),     // size_t unwind_glue_off\n+                     C_null(T_int()),     // size_t gc_glue_off\n+                     exit_task_glue_off,  // size_t main_exit_task_glue_off\n+                     C_null(T_int()),     // int n_rust_syms\n+                     C_null(T_int()),     // int n_c_syms\n+                     C_null(T_int())      // int n_libs\n+                     ));\n+\n+    llvm.LLVMSetInitializer(crate_ptr, crate_val);\n+    ret crate_ptr;\n+}\n+\n fn trans_crate(session.session sess, ast.crate crate) {\n     auto llmod =\n         llvm.LLVMModuleCreateWithNameInContext(_str.buf(\"rust_out\"),\n@@ -281,7 +342,7 @@ fn trans_crate(session.session sess, ast.crate crate) {\n                    llmod = llmod,\n                    upcalls = new_str_hash[ValueRef](),\n                    glues = glues,\n-                   path = \"\");\n+                   path = \"_rust\");\n \n     trans_mod(cx, crate.module);\n "}]}