{"sha": "3d01ba11c0741a76a562c4b49246deea090d7c03", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkMDFiYTExYzA3NDFhNzZhNTYyYzRiNDkyNDZkZWVhMDkwZDdjMDM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-01-18T11:55:30Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-01-18T11:55:30Z"}, "message": "rustup; remove some intrinsics that are gone or moved to rustc", "tree": {"sha": "61837043fe31a224e836dc91fdac7143dfce0424", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61837043fe31a224e836dc91fdac7143dfce0424"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d01ba11c0741a76a562c4b49246deea090d7c03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d01ba11c0741a76a562c4b49246deea090d7c03", "html_url": "https://github.com/rust-lang/rust/commit/3d01ba11c0741a76a562c4b49246deea090d7c03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d01ba11c0741a76a562c4b49246deea090d7c03/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e3af26d663eb8b2cb2e771be4473ae00f75a9e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e3af26d663eb8b2cb2e771be4473ae00f75a9e5", "html_url": "https://github.com/rust-lang/rust/commit/7e3af26d663eb8b2cb2e771be4473ae00f75a9e5"}], "stats": {"total": 35, "additions": 1, "deletions": 34}, "files": [{"sha": "6da6e700194dad12308cde3e76b35b7a99481aae", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3d01ba11c0741a76a562c4b49246deea090d7c03/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/3d01ba11c0741a76a562c4b49246deea090d7c03/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=3d01ba11c0741a76a562c4b49246deea090d7c03", "patch": "@@ -1 +1 @@\n-4e208f6a3afb42528878b0f3464e337c4bf3bbc8\n+0677d9729318441a1cdb0c74812ec4140fa4d35f"}, {"sha": "840dd9f14336dd30644987a8e6c55778257a5463", "filename": "src/shims/intrinsics.rs", "status": "modified", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/3d01ba11c0741a76a562c4b49246deea090d7c03/src%2Fshims%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d01ba11c0741a76a562c4b49246deea090d7c03/src%2Fshims%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fintrinsics.rs?ref=3d01ba11c0741a76a562c4b49246deea090d7c03", "patch": "@@ -51,39 +51,6 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             }\n \n             // Raw memory accesses\n-            #[rustfmt::skip]\n-            | \"copy\"\n-            | \"copy_nonoverlapping\"\n-            => {\n-                let &[src, dest, count] = check_arg_count(args)?;\n-                let elem_ty = instance.substs.type_at(0);\n-                let elem_layout = this.layout_of(elem_ty)?;\n-                let count = this.read_scalar(count)?.to_machine_usize(this)?;\n-                let elem_align = elem_layout.align.abi;\n-\n-                let size = elem_layout.size.checked_mul(count, this)\n-                    .ok_or_else(|| err_ub_format!(\"overflow computing total size of `{}`\", intrinsic_name))?;\n-                let src = this.read_scalar(src)?.check_init()?;\n-                let src = this.memory.check_ptr_access(src, size, elem_align)?;\n-                let dest = this.read_scalar(dest)?.check_init()?;\n-                let dest = this.memory.check_ptr_access(dest, size, elem_align)?;\n-\n-                if let (Some(src), Some(dest)) = (src, dest) {\n-                    this.memory.copy(\n-                        src,\n-                        dest,\n-                        size,\n-                        intrinsic_name.ends_with(\"_nonoverlapping\"),\n-                    )?;\n-                }\n-            }\n-\n-            \"move_val_init\" => {\n-                let &[place, dest] = check_arg_count(args)?;\n-                let place = this.deref_operand(place)?;\n-                this.copy_op(dest, place.into())?;\n-            }\n-\n             \"volatile_load\" => {\n                 let &[place] = check_arg_count(args)?;\n                 let place = this.deref_operand(place)?;"}]}