{"sha": "04c9842ebecea8959ba3da36ab948f4a43b996e0", "node_id": "C_kwDOAAsO6NoAKDA0Yzk4NDJlYmVjZWE4OTU5YmEzZGEzNmFiOTQ4ZjRhNDNiOTk2ZTA", "commit": {"author": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2022-02-10T18:52:01Z"}, "committer": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2022-02-10T18:52:08Z"}, "message": "Clippy: Fix botstrap fallout", "tree": {"sha": "18764aeb849c4f109932088118a8ee7f88d6285e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18764aeb849c4f109932088118a8ee7f88d6285e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04c9842ebecea8959ba3da36ab948f4a43b996e0", "comment_count": 0, "verification": {"verified": false, "reason": "bad_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEij1UXJ/PQTcb99vTHKDfKvWdaKUFAmIFXt0ACgkQHKDfKvWd\naKWwVQ/+PAVWq2MzDfvZvQRSq7rQx44ReNr9tKwwd0bKDQv5wO1Xo8ncjonhAAcJ\ngzIuRcCs9oyhg0zNUtmfTZKPTDtLYn/Cneqm5/Zuf+hsBU0qbnHY2r8mhf2cYmJk\nSbIOpc9Z97zd7/jgidjhkxJn4sB7mHYcTtQ3dqjfiORbOtt5Q133URaHxtJaDNAy\ngxGIBUsNBHA1w+kLtV3n/Ym+DNtUKJzQTOd83fRzNldCsevb4gtkE9nNmnW2F2aM\ny8V038wZX4TFlh1zzFiQo6NCM/tyPqR/Dq8irnnXZ2+O3VZ25LFFQMyJCXXhPKFx\nhvxkDZB6RiEmxdKwgTfm+mbF1LKyV274cOhw+klTiUBnDkhz0yQE0jU+nee6VfVj\ng3Z+Y80hD+0mfvrpYepZC+ELn/hi3znPjstFPB1uKYfyTXnei4CgKmnWqOC4RgPu\nWFdNOrP5+Orvf1iR9vJEHxZBMgK8UYrkgbQf4j3yDc+chk8tzNghGFQB4MPBjGKg\nJPx/riBbvl7zNqUYbFx5vIfwD08btKj1MuVHnYSYjvJw+QqxDdRxasgjfWooH4d0\nnVuts6AnSRnkBpCUTM9cQshkKescUsxU1T7zFx/SlS2ESzG9FE+cYYiHO/73cCDL\n4aAvTfUc8B59Meb9EHIvrk9CidnhJrbvFDku4AdikRuoFb3R7cs=\n=hqtf\n-----END PGP SIGNATURE-----", "payload": "tree 18764aeb849c4f109932088118a8ee7f88d6285e\nparent 78ae132d5b87c9f7e1ea51d1585646da1958257f\nauthor flip1995 <philipp.krones@embecosm.com> 1644519121 +0100\ncommitter flip1995 <philipp.krones@embecosm.com> 1644519128 +0100\n\nClippy: Fix botstrap fallout\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04c9842ebecea8959ba3da36ab948f4a43b996e0", "html_url": "https://github.com/rust-lang/rust/commit/04c9842ebecea8959ba3da36ab948f4a43b996e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04c9842ebecea8959ba3da36ab948f4a43b996e0/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78ae132d5b87c9f7e1ea51d1585646da1958257f", "url": "https://api.github.com/repos/rust-lang/rust/commits/78ae132d5b87c9f7e1ea51d1585646da1958257f", "html_url": "https://github.com/rust-lang/rust/commit/78ae132d5b87c9f7e1ea51d1585646da1958257f"}], "stats": {"total": 45, "additions": 24, "deletions": 21}, "files": [{"sha": "5c45012ef0686c12bc2e9b5bdbb38bab033b7184", "filename": "src/tools/clippy/clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/04c9842ebecea8959ba3da36ab948f4a43b996e0/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04c9842ebecea8959ba3da36ab948f4a43b996e0/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Flib.rs?ref=04c9842ebecea8959ba3da36ab948f4a43b996e0", "patch": "@@ -5,7 +5,6 @@\n #![feature(control_flow_enum)]\n #![feature(drain_filter)]\n #![feature(iter_intersperse)]\n-#![feature(let_chains)]\n #![feature(let_else)]\n #![feature(once_cell)]\n #![feature(rustc_private)]\n@@ -19,7 +18,7 @@\n // warn on rustc internal lints\n #![warn(rustc::internal)]\n // Disable this rustc lint for now, as it was also done in rustc\n-#![allow(rustc::potential_query_instability)]\n+#![cfg_attr(not(bootstrap), allow(rustc::potential_query_instability))]\n \n // FIXME: switch to something more ergonomic here, once available.\n // (Currently there is no way to opt into sysroot crates without `extern crate`.)"}, {"sha": "030d2c23784886c7c7ebd11513970af7a2d226b9", "filename": "src/tools/clippy/clippy_lints/src/transmute/transmute_undefined_repr.rs", "status": "modified", "additions": 23, "deletions": 19, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/04c9842ebecea8959ba3da36ab948f4a43b996e0/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftransmute%2Ftransmute_undefined_repr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04c9842ebecea8959ba3da36ab948f4a43b996e0/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftransmute%2Ftransmute_undefined_repr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Ftransmute%2Ftransmute_undefined_repr.rs?ref=04c9842ebecea8959ba3da36ab948f4a43b996e0", "patch": "@@ -111,19 +111,21 @@ pub(super) fn check<'tcx>(\n                             from_ty_orig, to_ty_orig\n                         ),\n                         |diag| {\n-                            if let (Some(from_def), Some(to_def)) = (from_ty.ty_adt_def(), to_ty.ty_adt_def())\n-                                && from_def == to_def\n-                            {\n-                                diag.note(&format!(\n-                                    \"two instances of the same generic type (`{}`) may have different layouts\",\n-                                    cx.tcx.item_name(from_def.did)\n-                                ));\n-                            } else {\n-                                if from_ty_orig.peel_refs() != from_ty {\n-                                    diag.note(&format!(\"the contained type `{}` has an undefined layout\", from_ty));\n-                                }\n-                                if to_ty_orig.peel_refs() != to_ty {\n-                                    diag.note(&format!(\"the contained type `{}` has an undefined layout\", to_ty));\n+                            if_chain! {\n+                                if let (Some(from_def), Some(to_def)) = (from_ty.ty_adt_def(), to_ty.ty_adt_def());\n+                                if from_def == to_def;\n+                                then {\n+                                    diag.note(&format!(\n+                                        \"two instances of the same generic type (`{}`) may have different layouts\",\n+                                        cx.tcx.item_name(from_def.did)\n+                                    ));\n+                                } else {\n+                                    if from_ty_orig.peel_refs() != from_ty {\n+                                        diag.note(&format!(\"the contained type `{}` has an undefined layout\", from_ty));\n+                                    }\n+                                    if to_ty_orig.peel_refs() != to_ty {\n+                                        diag.note(&format!(\"the contained type `{}` has an undefined layout\", to_ty));\n+                                    }\n                                 }\n                             }\n                         },\n@@ -279,11 +281,13 @@ fn reduce_ty<'tcx>(cx: &LateContext<'tcx>, mut ty: Ty<'tcx>) -> ReducedTy<'tcx>\n }\n \n fn is_zero_sized_ty<'tcx>(cx: &LateContext<'tcx>, ty: Ty<'tcx>) -> bool {\n-    if let Ok(ty) = cx.tcx.try_normalize_erasing_regions(cx.param_env, ty)\n-        && let Ok(layout) = cx.tcx.layout_of(cx.param_env.and(ty))\n-    {\n-        layout.layout.size.bytes() == 0\n-    } else {\n-        false\n+    if_chain! {\n+        if let Ok(ty) = cx.tcx.try_normalize_erasing_regions(cx.param_env, ty);\n+        if let Ok(layout) = cx.tcx.layout_of(cx.param_env.and(ty));\n+        then {\n+            layout.layout.size.bytes() == 0\n+        } else {\n+            false\n+        }\n     }\n }"}]}