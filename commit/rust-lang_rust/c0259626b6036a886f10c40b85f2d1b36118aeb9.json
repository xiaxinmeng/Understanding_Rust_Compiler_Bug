{"sha": "c0259626b6036a886f10c40b85f2d1b36118aeb9", "node_id": "C_kwDOAAsO6NoAKGMwMjU5NjI2YjYwMzZhODg2ZjEwYzQwYjg1ZjJkMWIzNjExOGFlYjk", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-03-09T22:14:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-09T22:14:09Z"}, "message": "Rollup merge of #91804 - woppopo:const_clone, r=oli-obk\n\nMake some `Clone` impls `const`\n\nTracking issue: #91805\n`Clone::clone_from` and some impls (Option, Result) bounded on `~const Drop`.\n\n```rust\n// core::clone\nimpl const Clone for INTEGER\nimpl const Clone for FLOAT\nimpl const Clone for bool\nimpl const Clone for char\nimpl const Clone for !\nimpl<T: ?Sized> const Clone for *const T\nimpl<T: ?Sized> const Clone for *mut T\nimpl<T: ?Sized> const Clone for &T\n\n// core::option\nimpl<T> const Clone for Option<T>\nwhere\n    T: ~const Clone + ~const Drop\n\n// core::result\nimpl<T, E> const Clone for Result<T, E>\nwhere\n    T: ~const Clone + ~const Drop,\n    E: ~const Clone + ~const Drop,\n\n// core::convert\nimpl const Clone for Infallible\n\n// core::ptr\nimpl<T: ?Sized> const Clone for NonNull<T>\nimpl<T: ?Sized> const Clone for Unique<T>\n```", "tree": {"sha": "0cfe0a0ebd55c16df8992a965a3f2c813738c009", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0cfe0a0ebd55c16df8992a965a3f2c813738c009"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0259626b6036a886f10c40b85f2d1b36118aeb9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiKSaxCRBK7hj4Ov3rIwAA+xgIAHukCDehSme6qOk59zRtbcTZ\nACJvvWJ/H7zmFQhrBGvvxkYHMsELT3Y33n4vaGQrLfGWZ6leVHJe3WQ4i11sM6+6\nZgvJ3oeaUZR1psX3r5t4n52w24k6+C7B+C4bsJJbLKmcxymLannxU5wAcCFAyafQ\nz9lmYCNW4OCjv9HVWQ7rFN6H+xAw31mkcfHk95UhWMSUxeWrkU/ZgJggnCylodyJ\nnN7XCTfqajQx5YIlyXRrjp54FQCCa3SxmzuSsJ3H2QwBKYGIfgH5LDR9iZa5QXGd\nRXh78881NBInAs3IpAO1pm0NgjikiihKaee0RpljnXcVBI8S1QgXVLzc0Anewjk=\n=yNqa\n-----END PGP SIGNATURE-----\n", "payload": "tree 0cfe0a0ebd55c16df8992a965a3f2c813738c009\nparent 10dccdc7fcbdc64ee9efe2c1ed975ab8c1d61287\nparent 662024478deb04a8c71d779b66b4bedb0bf91dbe\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1646864049 +0100\ncommitter GitHub <noreply@github.com> 1646864049 +0100\n\nRollup merge of #91804 - woppopo:const_clone, r=oli-obk\n\nMake some `Clone` impls `const`\n\nTracking issue: #91805\n`Clone::clone_from` and some impls (Option, Result) bounded on `~const Drop`.\n\n```rust\n// core::clone\nimpl const Clone for INTEGER\nimpl const Clone for FLOAT\nimpl const Clone for bool\nimpl const Clone for char\nimpl const Clone for !\nimpl<T: ?Sized> const Clone for *const T\nimpl<T: ?Sized> const Clone for *mut T\nimpl<T: ?Sized> const Clone for &T\n\n// core::option\nimpl<T> const Clone for Option<T>\nwhere\n    T: ~const Clone + ~const Drop\n\n// core::result\nimpl<T, E> const Clone for Result<T, E>\nwhere\n    T: ~const Clone + ~const Drop,\n    E: ~const Clone + ~const Drop,\n\n// core::convert\nimpl const Clone for Infallible\n\n// core::ptr\nimpl<T: ?Sized> const Clone for NonNull<T>\nimpl<T: ?Sized> const Clone for Unique<T>\n```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0259626b6036a886f10c40b85f2d1b36118aeb9", "html_url": "https://github.com/rust-lang/rust/commit/c0259626b6036a886f10c40b85f2d1b36118aeb9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0259626b6036a886f10c40b85f2d1b36118aeb9/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10dccdc7fcbdc64ee9efe2c1ed975ab8c1d61287", "url": "https://api.github.com/repos/rust-lang/rust/commits/10dccdc7fcbdc64ee9efe2c1ed975ab8c1d61287", "html_url": "https://github.com/rust-lang/rust/commit/10dccdc7fcbdc64ee9efe2c1ed975ab8c1d61287"}, {"sha": "662024478deb04a8c71d779b66b4bedb0bf91dbe", "url": "https://api.github.com/repos/rust-lang/rust/commits/662024478deb04a8c71d779b66b4bedb0bf91dbe", "html_url": "https://github.com/rust-lang/rust/commit/662024478deb04a8c71d779b66b4bedb0bf91dbe"}], "stats": {"total": 44, "additions": 33, "deletions": 11}, "files": [{"sha": "1912694412b9874178aceb93db1234c9edbe78ae", "filename": "library/core/src/clone.rs", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/c0259626b6036a886f10c40b85f2d1b36118aeb9/library%2Fcore%2Fsrc%2Fclone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0259626b6036a886f10c40b85f2d1b36118aeb9/library%2Fcore%2Fsrc%2Fclone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fclone.rs?ref=c0259626b6036a886f10c40b85f2d1b36118aeb9", "patch": "@@ -127,7 +127,11 @@ pub trait Clone: Sized {\n     /// allocations.\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    fn clone_from(&mut self, source: &Self) {\n+    #[default_method_body_is_const]\n+    fn clone_from(&mut self, source: &Self)\n+    where\n+        Self: ~const Drop,\n+    {\n         *self = source.clone()\n     }\n }\n@@ -178,7 +182,8 @@ mod impls {\n         ($($t:ty)*) => {\n             $(\n                 #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-                impl Clone for $t {\n+                #[rustc_const_unstable(feature = \"const_clone\", issue = \"91805\")]\n+                impl const Clone for $t {\n                     #[inline]\n                     fn clone(&self) -> Self {\n                         *self\n@@ -196,23 +201,26 @@ mod impls {\n     }\n \n     #[unstable(feature = \"never_type\", issue = \"35121\")]\n-    impl Clone for ! {\n+    #[rustc_const_unstable(feature = \"const_clone\", issue = \"91805\")]\n+    impl const Clone for ! {\n         #[inline]\n         fn clone(&self) -> Self {\n             *self\n         }\n     }\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    impl<T: ?Sized> Clone for *const T {\n+    #[rustc_const_unstable(feature = \"const_clone\", issue = \"91805\")]\n+    impl<T: ?Sized> const Clone for *const T {\n         #[inline]\n         fn clone(&self) -> Self {\n             *self\n         }\n     }\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    impl<T: ?Sized> Clone for *mut T {\n+    #[rustc_const_unstable(feature = \"const_clone\", issue = \"91805\")]\n+    impl<T: ?Sized> const Clone for *mut T {\n         #[inline]\n         fn clone(&self) -> Self {\n             *self\n@@ -221,7 +229,8 @@ mod impls {\n \n     /// Shared references can be cloned, but mutable references *cannot*!\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    impl<T: ?Sized> Clone for &T {\n+    #[rustc_const_unstable(feature = \"const_clone\", issue = \"91805\")]\n+    impl<T: ?Sized> const Clone for &T {\n         #[inline]\n         #[rustc_diagnostic_item = \"noop_method_clone\"]\n         fn clone(&self) -> Self {"}, {"sha": "b911bbc3574e852ba338e243565bc72b30b069bd", "filename": "library/core/src/convert/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c0259626b6036a886f10c40b85f2d1b36118aeb9/library%2Fcore%2Fsrc%2Fconvert%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0259626b6036a886f10c40b85f2d1b36118aeb9/library%2Fcore%2Fsrc%2Fconvert%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fconvert%2Fmod.rs?ref=c0259626b6036a886f10c40b85f2d1b36118aeb9", "patch": "@@ -690,7 +690,8 @@ impl AsMut<str> for str {\n pub enum Infallible {}\n \n #[stable(feature = \"convert_infallible\", since = \"1.34.0\")]\n-impl Clone for Infallible {\n+#[rustc_const_unstable(feature = \"const_clone\", issue = \"91805\")]\n+impl const Clone for Infallible {\n     fn clone(&self) -> Infallible {\n         match *self {}\n     }"}, {"sha": "ddd8ae0c02ca5fb1198826fc16fbab34801492b8", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c0259626b6036a886f10c40b85f2d1b36118aeb9/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0259626b6036a886f10c40b85f2d1b36118aeb9/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=c0259626b6036a886f10c40b85f2d1b36118aeb9", "patch": "@@ -104,6 +104,7 @@\n #![feature(const_caller_location)]\n #![feature(const_cell_into_inner)]\n #![feature(const_char_convert)]\n+#![feature(const_clone)]\n #![feature(const_discriminant)]\n #![feature(const_eval_select)]\n #![feature(const_float_bits_conv)]"}, {"sha": "a6286f8d8d103495f1978b21cb1deb8fcb82319c", "filename": "library/core/src/option.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c0259626b6036a886f10c40b85f2d1b36118aeb9/library%2Fcore%2Fsrc%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0259626b6036a886f10c40b85f2d1b36118aeb9/library%2Fcore%2Fsrc%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Foption.rs?ref=c0259626b6036a886f10c40b85f2d1b36118aeb9", "patch": "@@ -1857,7 +1857,11 @@ const fn expect_failed(msg: &str) -> ! {\n /////////////////////////////////////////////////////////////////////////////\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<T: Clone> Clone for Option<T> {\n+#[rustc_const_unstable(feature = \"const_clone\", issue = \"91805\")]\n+impl<T> const Clone for Option<T>\n+where\n+    T: ~const Clone + ~const Drop,\n+{\n     #[inline]\n     fn clone(&self) -> Self {\n         match self {"}, {"sha": "77b93e0c24cc9827d3e4c8f7b9d0ed066946c0dc", "filename": "library/core/src/ptr/non_null.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c0259626b6036a886f10c40b85f2d1b36118aeb9/library%2Fcore%2Fsrc%2Fptr%2Fnon_null.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0259626b6036a886f10c40b85f2d1b36118aeb9/library%2Fcore%2Fsrc%2Fptr%2Fnon_null.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fnon_null.rs?ref=c0259626b6036a886f10c40b85f2d1b36118aeb9", "patch": "@@ -642,7 +642,8 @@ impl<T> NonNull<[T]> {\n }\n \n #[stable(feature = \"nonnull\", since = \"1.25.0\")]\n-impl<T: ?Sized> Clone for NonNull<T> {\n+#[rustc_const_unstable(feature = \"const_clone\", issue = \"91805\")]\n+impl<T: ?Sized> const Clone for NonNull<T> {\n     #[inline]\n     fn clone(&self) -> Self {\n         *self"}, {"sha": "cff68f64f78e08c3d793ee051aec959c8369920b", "filename": "library/core/src/ptr/unique.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c0259626b6036a886f10c40b85f2d1b36118aeb9/library%2Fcore%2Fsrc%2Fptr%2Funique.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0259626b6036a886f10c40b85f2d1b36118aeb9/library%2Fcore%2Fsrc%2Fptr%2Funique.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Funique.rs?ref=c0259626b6036a886f10c40b85f2d1b36118aeb9", "patch": "@@ -146,7 +146,8 @@ impl<T: ?Sized> Unique<T> {\n }\n \n #[unstable(feature = \"ptr_internals\", issue = \"none\")]\n-impl<T: ?Sized> Clone for Unique<T> {\n+#[rustc_const_unstable(feature = \"const_clone\", issue = \"91805\")]\n+impl<T: ?Sized> const Clone for Unique<T> {\n     #[inline]\n     fn clone(&self) -> Self {\n         *self"}, {"sha": "5a189f2b0981108b4ce2947ddc84a9eff2663985", "filename": "library/core/src/result.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c0259626b6036a886f10c40b85f2d1b36118aeb9/library%2Fcore%2Fsrc%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0259626b6036a886f10c40b85f2d1b36118aeb9/library%2Fcore%2Fsrc%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fresult.rs?ref=c0259626b6036a886f10c40b85f2d1b36118aeb9", "patch": "@@ -1801,7 +1801,12 @@ fn unwrap_failed<T>(_msg: &str, _error: &T) -> ! {\n /////////////////////////////////////////////////////////////////////////////\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<T: Clone, E: Clone> Clone for Result<T, E> {\n+#[rustc_const_unstable(feature = \"const_clone\", issue = \"91805\")]\n+impl<T, E> const Clone for Result<T, E>\n+where\n+    T: ~const Clone + ~const Drop,\n+    E: ~const Clone + ~const Drop,\n+{\n     #[inline]\n     fn clone(&self) -> Self {\n         match self {"}]}