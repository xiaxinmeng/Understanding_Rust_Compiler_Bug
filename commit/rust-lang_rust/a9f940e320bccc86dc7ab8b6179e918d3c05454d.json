{"sha": "a9f940e320bccc86dc7ab8b6179e918d3c05454d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5Zjk0MGUzMjBiY2NjODZkYzdhYjhiNjE3OWU5MThkM2MwNTQ1NGQ=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-02-21T19:25:23Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-02-23T16:54:13Z"}, "message": "Run the external doc tests in tools job.", "tree": {"sha": "3b83e20220a679b30eebffd544aabf4aa494291a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b83e20220a679b30eebffd544aabf4aa494291a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9f940e320bccc86dc7ab8b6179e918d3c05454d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlqQRzUACgkQ/vbIBR0O\nATwO1Q/+Iq4GOFfWrTdzpoD06o7hfxaWsuAgZo8NgkMNmPXFdVUdhJX+vJU/HilF\nyPp0PIk3sDOYpcDjKT6fWml9aKr5AjQGms1c5MQaGVGhF3N0GKLMWYrSuPT4VjCl\nTV4OcatbDzvVsJNFqHxC/ZW+7Ehh4u0vBCBacO4Gb9JviqOTBfazl7yNc6Wgl2XY\nbAQz1V0X1mu431WKTJpIOj5AsfDZtjmpNt0sVYFl6Ao4cUbNdSDOyxtWYfOj/DGI\n7dM7C+2In1ArfPpCm+KySrwEXt97CnPfHS98+FxXfLFbfIFMr9vauE6GwNDKXc2A\n61VEujkmpom05Ttv01Lo79ABuzGsqodnnoeXSTyAaEm+kbpNWidzXAVaDflK/oQG\ncTKkxCs5c5LOkA9wllrkiHwF89630s9VHsPGmtBoGxeAJGJ9C6IxVt3464ifwv3g\nbs/flye76KaOYfkSebuw5nBiUybtdaY/X0IiNfrzGUKrAqdTw+YT+eyAVxDy4tXk\nepvEWngjtLbHrx3zoJvgaqdxkTP1lfruxRikWv2R9s9pIDvvyWvD+mJgNI4V3BFN\nLgOhCVXIfMzHo9VXXfzGBuHK24UiuCVhjA2hSp8oJpRaX9DCyq4sv+V5mIM29QZu\n1SvDFTFJGr50r9LZ3B5iGDV8wn9b1pZo9IeJzzKkd86/LrEGDK0=\n=7u40\n-----END PGP SIGNATURE-----", "payload": "tree 3b83e20220a679b30eebffd544aabf4aa494291a\nparent 0d300d4b9d83b5243217aea98551c1f1676567d4\nauthor kennytm <kennytm@gmail.com> 1519241123 +0800\ncommitter kennytm <kennytm@gmail.com> 1519404853 +0800\n\nRun the external doc tests in tools job.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9f940e320bccc86dc7ab8b6179e918d3c05454d", "html_url": "https://github.com/rust-lang/rust/commit/a9f940e320bccc86dc7ab8b6179e918d3c05454d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9f940e320bccc86dc7ab8b6179e918d3c05454d/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d300d4b9d83b5243217aea98551c1f1676567d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d300d4b9d83b5243217aea98551c1f1676567d4", "html_url": "https://github.com/rust-lang/rust/commit/0d300d4b9d83b5243217aea98551c1f1676567d4"}], "stats": {"total": 67, "additions": 48, "deletions": 19}, "files": [{"sha": "b27ddfdbc5e583e2a3a91dfe7907390caf412e74", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a9f940e320bccc86dc7ab8b6179e918d3c05454d/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9f940e320bccc86dc7ab8b6179e918d3c05454d/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=a9f940e320bccc86dc7ab8b6179e918d3c05454d", "patch": "@@ -78,15 +78,17 @@ fn try_run(build: &Build, cmd: &mut Command) -> bool {\n     true\n }\n \n-fn try_run_quiet(build: &Build, cmd: &mut Command) {\n+fn try_run_quiet(build: &Build, cmd: &mut Command) -> bool {\n     if !build.fail_fast {\n         if !build.try_run_quiet(cmd) {\n             let mut failures = build.delayed_failures.borrow_mut();\n             failures.push(format!(\"{:?}\", cmd));\n+            return false;\n         }\n     } else {\n         build.run_quiet(cmd);\n     }\n+    true\n }\n \n #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]\n@@ -1042,7 +1044,15 @@ impl Step for DocTest {\n                 continue;\n             }\n \n-            markdown_test(builder, compiler, &p);\n+            let test_result = markdown_test(builder, compiler, &p);\n+            if self.is_ext_doc {\n+                let toolstate = if test_result {\n+                    ToolState::TestPass\n+                } else {\n+                    ToolState::TestFail\n+                };\n+                build.save_toolstate(self.name, toolstate);\n+            }\n         }\n     }\n }\n@@ -1142,13 +1152,13 @@ impl Step for ErrorIndex {\n     }\n }\n \n-fn markdown_test(builder: &Builder, compiler: Compiler, markdown: &Path) {\n+fn markdown_test(builder: &Builder, compiler: Compiler, markdown: &Path) -> bool {\n     let build = builder.build;\n     let mut file = t!(File::open(markdown));\n     let mut contents = String::new();\n     t!(file.read_to_string(&mut contents));\n     if !contents.contains(\"```\") {\n-        return;\n+        return true;\n     }\n \n     println!(\"doc tests for: {}\", markdown.display());\n@@ -1162,9 +1172,9 @@ fn markdown_test(builder: &Builder, compiler: Compiler, markdown: &Path) {\n     cmd.arg(\"--test-args\").arg(test_args);\n \n     if build.config.quiet_tests {\n-        try_run_quiet(build, &mut cmd);\n+        try_run_quiet(build, &mut cmd)\n     } else {\n-        try_run(build, &mut cmd);\n+        try_run(build, &mut cmd)\n     }\n }\n "}, {"sha": "da89aa9423b2daa18cf9a9bc500fd63c717ecc64", "filename": "src/ci/docker/x86_64-gnu-tools/checktools.sh", "status": "modified", "additions": 27, "deletions": 12, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/a9f940e320bccc86dc7ab8b6179e918d3c05454d/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Fchecktools.sh", "raw_url": "https://github.com/rust-lang/rust/raw/a9f940e320bccc86dc7ab8b6179e918d3c05454d/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Fchecktools.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Fchecktools.sh?ref=a9f940e320bccc86dc7ab8b6179e918d3c05454d", "patch": "@@ -25,34 +25,49 @@ touch \"$TOOLSTATE_FILE\"\n \n set +e\n python2.7 \"$X_PY\" test --no-fail-fast \\\n+    src/doc/book \\\n+    src/doc/nomicon \\\n+    src/doc/reference \\\n+    src/doc/rust-by-example \\\n     src/tools/rls \\\n     src/tools/rustfmt \\\n     src/tools/miri \\\n     src/tools/clippy\n set -e\n \n cat \"$TOOLSTATE_FILE\"\n+echo\n \n-# If this PR is intended to update one of these tools, do not let the build pass\n-# when they do not test-pass.\n-for TOOL in rls rustfmt clippy; do\n-    echo \"Verifying status of $TOOL...\"\n-    if echo \"$CHANGED_FILES\" | grep -q \"^M[[:blank:]]src/tools/$TOOL$\"; then\n-        echo \"This PR updated 'src/tools/$TOOL', verifying if status is 'test-pass'...\"\n-        if grep -vq '\"'\"$TOOL\"'[^\"]*\":\"test-pass\"' \"$TOOLSTATE_FILE\"; then\n+verify_status() {\n+    echo \"Verifying status of $1...\"\n+    if echo \"$CHANGED_FILES\" | grep -q \"^M[[:blank:]]$2$\"; then\n+        echo \"This PR updated '$2', verifying if status is 'test-pass'...\"\n+        if grep -vq '\"'\"$1\"'\":\"test-pass\"' \"$TOOLSTATE_FILE\"; then\n             echo\n-            echo \"\u26a0\ufe0f We detected that this PR updated '$TOOL', but its tests failed.\"\n+            echo \"\u26a0\ufe0f We detected that this PR updated '$1', but its tests failed.\"\n             echo\n-            echo \"If you do intend to update '$TOOL', please check the error messages above and\"\n+            echo \"If you do intend to update '$1', please check the error messages above and\"\n             echo \"commit another update.\"\n             echo\n-            echo \"If you do NOT intend to update '$TOOL', please ensure you did not accidentally\"\n-            echo \"change the submodule at 'src/tools/$TOOL'. You may ask your reviewer for the\"\n+            echo \"If you do NOT intend to update '$1', please ensure you did not accidentally\"\n+            echo \"change the submodule at '$2'. You may ask your reviewer for the\"\n             echo \"proper steps.\"\n             exit 3\n         fi\n     fi\n-done\n+}\n+\n+# If this PR is intended to update one of these tools, do not let the build pass\n+# when they do not test-pass.\n+\n+verify_status book src/doc/book\n+verify_status nomicon src/doc/nomicon\n+verify_status reference src/doc/reference\n+verify_status rust-by-example src/doc/rust-by-example\n+verify_status rls src/tool/rls\n+verify_status rustfmt src/tool/rustfmt\n+verify_status clippy-driver src/tool/clippy\n+#verify_status miri src/tool/miri\n \n if [ \"$RUST_RELEASE_CHANNEL\" = nightly -a -n \"${TOOLSTATE_REPO_ACCESS_TOKEN+is_set}\" ]; then\n     . \"$(dirname $0)/repo.sh\""}, {"sha": "8e23519f57ebca5130913b5ceda69605ff964cfa", "filename": "src/tools/publish_toolstate.py", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a9f940e320bccc86dc7ab8b6179e918d3c05454d/src%2Ftools%2Fpublish_toolstate.py", "raw_url": "https://github.com/rust-lang/rust/raw/a9f940e320bccc86dc7ab8b6179e918d3c05454d/src%2Ftools%2Fpublish_toolstate.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fpublish_toolstate.py?ref=a9f940e320bccc86dc7ab8b6179e918d3c05454d", "patch": "@@ -29,6 +29,10 @@\n     'clippy-driver': '@Manishearth @llogiq @mcarton @oli-obk',\n     'rls': '@nrc',\n     'rustfmt': '@nrc',\n+    'book': '@carols10cents @steveklabnik',\n+    'nomicon': '@frewsxcv @Gankro',\n+    'reference': '@steveklabnik @Havvy @matthewjasper @alercah',\n+    'rust-by-example': '@steveklabnik @marioidival @projektir',\n }\n \n \n@@ -83,7 +87,7 @@ def update_latest(\n                 elif new < old:\n                     changed = True\n                     message += '\ud83d\udc94 {} on {}: {} \u2192 {} (cc {}).\\n' \\\n-                        .format(tool, os, old, new, MAINTAINERS[tool])\n+                        .format(tool, os, old, new, MAINTAINERS.get(tool))\n \n             if changed:\n                 status['commit'] = current_commit"}]}