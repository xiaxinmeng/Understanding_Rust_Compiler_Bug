{"sha": "abc49c31399bf694fe0b7ffc848cd89027a801c2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiYzQ5YzMxMzk5YmY2OTRmZTBiN2ZmYzg0OGNkODkwMjdhODAxYzI=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-01-07T10:56:21Z"}, "committer": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-01-07T10:56:21Z"}, "message": "Bless 32bit test", "tree": {"sha": "d685880d51bfcfa61b734aec5eaebdd821ad0b82", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d685880d51bfcfa61b734aec5eaebdd821ad0b82"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/abc49c31399bf694fe0b7ffc848cd89027a801c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/abc49c31399bf694fe0b7ffc848cd89027a801c2", "html_url": "https://github.com/rust-lang/rust/commit/abc49c31399bf694fe0b7ffc848cd89027a801c2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/abc49c31399bf694fe0b7ffc848cd89027a801c2/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7a93f029ce721fc2d74d8ba12942d9cdfbb6c14", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7a93f029ce721fc2d74d8ba12942d9cdfbb6c14", "html_url": "https://github.com/rust-lang/rust/commit/f7a93f029ce721fc2d74d8ba12942d9cdfbb6c14"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "fba5b5e18b2001c7fc347d3d750697fe37bee4b9", "filename": "tests/ui/cast_size_32bit.stderr", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/abc49c31399bf694fe0b7ffc848cd89027a801c2/tests%2Fui%2Fcast_size_32bit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/abc49c31399bf694fe0b7ffc848cd89027a801c2/tests%2Fui%2Fcast_size_32bit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_size_32bit.stderr?ref=abc49c31399bf694fe0b7ffc848cd89027a801c2", "patch": "@@ -1,4 +1,4 @@\n-error: casting isize to i8 may truncate the value\n+error: casting `isize` to `i8` may truncate the value\n   --> $DIR/cast_size_32bit.rs:12:5\n    |\n LL |     1isize as i8;\n@@ -14,7 +14,7 @@ LL |     x0 as f64;\n    |\n    = note: `-D clippy::cast-precision-loss` implied by `-D warnings`\n \n-error: casting isize to f64 may become silently lossy if you later change the type\n+error: casting `isize` to `f64` may become silently lossy if you later change the type\n   --> $DIR/cast_size_32bit.rs:15:5\n    |\n LL |     x0 as f64;\n@@ -28,7 +28,7 @@ error: casting usize to f64 causes a loss of precision on targets with 64-bit wi\n LL |     x1 as f64;\n    |     ^^^^^^^^^\n \n-error: casting usize to f64 may become silently lossy if you later change the type\n+error: casting `usize` to `f64` may become silently lossy if you later change the type\n   --> $DIR/cast_size_32bit.rs:16:5\n    |\n LL |     x1 as f64;\n@@ -46,69 +46,69 @@ error: casting usize to f32 causes a loss of precision (usize is 32 or 64 bits w\n LL |     x1 as f32;\n    |     ^^^^^^^^^\n \n-error: casting isize to i32 may truncate the value on targets with 64-bit wide pointers\n+error: casting `isize` to `i32` may truncate the value on targets with 64-bit wide pointers\n   --> $DIR/cast_size_32bit.rs:19:5\n    |\n LL |     1isize as i32;\n    |     ^^^^^^^^^^^^^\n \n-error: casting isize to u32 may truncate the value on targets with 64-bit wide pointers\n+error: casting `isize` to `u32` may truncate the value on targets with 64-bit wide pointers\n   --> $DIR/cast_size_32bit.rs:20:5\n    |\n LL |     1isize as u32;\n    |     ^^^^^^^^^^^^^\n \n-error: casting usize to u32 may truncate the value on targets with 64-bit wide pointers\n+error: casting `usize` to `u32` may truncate the value on targets with 64-bit wide pointers\n   --> $DIR/cast_size_32bit.rs:21:5\n    |\n LL |     1usize as u32;\n    |     ^^^^^^^^^^^^^\n \n-error: casting usize to i32 may truncate the value on targets with 64-bit wide pointers\n+error: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers\n   --> $DIR/cast_size_32bit.rs:22:5\n    |\n LL |     1usize as i32;\n    |     ^^^^^^^^^^^^^\n \n-error: casting usize to i32 may wrap around the value on targets with 32-bit wide pointers\n+error: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers\n   --> $DIR/cast_size_32bit.rs:22:5\n    |\n LL |     1usize as i32;\n    |     ^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::cast-possible-wrap` implied by `-D warnings`\n \n-error: casting i64 to isize may truncate the value on targets with 32-bit wide pointers\n+error: casting `i64` to `isize` may truncate the value on targets with 32-bit wide pointers\n   --> $DIR/cast_size_32bit.rs:24:5\n    |\n LL |     1i64 as isize;\n    |     ^^^^^^^^^^^^^\n \n-error: casting i64 to usize may truncate the value on targets with 32-bit wide pointers\n+error: casting `i64` to `usize` may truncate the value on targets with 32-bit wide pointers\n   --> $DIR/cast_size_32bit.rs:25:5\n    |\n LL |     1i64 as usize;\n    |     ^^^^^^^^^^^^^\n \n-error: casting u64 to isize may truncate the value on targets with 32-bit wide pointers\n+error: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers\n   --> $DIR/cast_size_32bit.rs:26:5\n    |\n LL |     1u64 as isize;\n    |     ^^^^^^^^^^^^^\n \n-error: casting u64 to isize may wrap around the value on targets with 64-bit wide pointers\n+error: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers\n   --> $DIR/cast_size_32bit.rs:26:5\n    |\n LL |     1u64 as isize;\n    |     ^^^^^^^^^^^^^\n \n-error: casting u64 to usize may truncate the value on targets with 32-bit wide pointers\n+error: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers\n   --> $DIR/cast_size_32bit.rs:27:5\n    |\n LL |     1u64 as usize;\n    |     ^^^^^^^^^^^^^\n \n-error: casting u32 to isize may wrap around the value on targets with 32-bit wide pointers\n+error: casting `u32` to `isize` may wrap around the value on targets with 32-bit wide pointers\n   --> $DIR/cast_size_32bit.rs:28:5\n    |\n LL |     1u32 as isize;\n@@ -120,7 +120,7 @@ error: casting i32 to f32 causes a loss of precision (i32 is 32 bits wide, but f\n LL |     999_999_999 as f32;\n    |     ^^^^^^^^^^^^^^^^^^\n \n-error: casting integer literal to f64 is unnecessary\n+error: casting integer literal to `f64` is unnecessary\n   --> $DIR/cast_size_32bit.rs:34:5\n    |\n LL |     3_999_999_999usize as f64;"}]}