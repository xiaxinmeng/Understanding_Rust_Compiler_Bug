{"sha": "939692409da499ff3d498eae782620435f16a981", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzOTY5MjQwOWRhNDk5ZmYzZDQ5OGVhZTc4MjYyMDQzNWYxNmE5ODE=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-04-05T15:56:46Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-04-11T22:13:52Z"}, "message": "Reexport from core::unicode::char in core::char rather than vice versa", "tree": {"sha": "31a1c1a31d8db60179cbc2f4f9b3b4b568a9f333", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31a1c1a31d8db60179cbc2f4f9b3b4b568a9f333"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/939692409da499ff3d498eae782620435f16a981", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/939692409da499ff3d498eae782620435f16a981", "html_url": "https://github.com/rust-lang/rust/commit/939692409da499ff3d498eae782620435f16a981", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/939692409da499ff3d498eae782620435f16a981/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3613b0b52fec8cb7844149804efa76e6e904896c", "url": "https://api.github.com/repos/rust-lang/rust/commits/3613b0b52fec8cb7844149804efa76e6e904896c", "html_url": "https://github.com/rust-lang/rust/commit/3613b0b52fec8cb7844149804efa76e6e904896c"}], "stats": {"total": 45, "additions": 19, "deletions": 26}, "files": [{"sha": "29d759b1f00070727974cf9450a7d63cbc5ebeda", "filename": "src/liballoc/string.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/939692409da499ff3d498eae782620435f16a981/src%2Fliballoc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/939692409da499ff3d498eae782620435f16a981/src%2Fliballoc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fstring.rs?ref=939692409da499ff3d498eae782620435f16a981", "patch": "@@ -56,6 +56,7 @@\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n \n+use core::char::{decode_utf16, REPLACEMENT_CHARACTER};\n use core::fmt;\n use core::hash;\n use core::iter::{FromIterator, FusedIterator};\n@@ -64,7 +65,6 @@ use core::ops::{self, Add, AddAssign, Index, IndexMut, RangeBounds};\n use core::ptr;\n use core::str::pattern::Pattern;\n use core::str::lossy;\n-use core::unicode::char::{decode_utf16, REPLACEMENT_CHARACTER};\n \n use borrow::{Cow, ToOwned};\n use str::{self, from_boxed_utf8_unchecked, FromStr, Utf8Error, Chars};"}, {"sha": "17d53e4cf3e09c46fc4cdc1905916428816c11bd", "filename": "src/liballoc/tests/string.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/939692409da499ff3d498eae782620435f16a981/src%2Fliballoc%2Ftests%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/939692409da499ff3d498eae782620435f16a981/src%2Fliballoc%2Ftests%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fstring.rs?ref=939692409da499ff3d498eae782620435f16a981", "patch": "@@ -132,7 +132,7 @@ fn test_from_utf16() {\n         let s_as_utf16 = s.encode_utf16().collect::<Vec<u16>>();\n         let u_as_string = String::from_utf16(&u).unwrap();\n \n-        assert!(::core::unicode::char::decode_utf16(u.iter().cloned()).all(|r| r.is_ok()));\n+        assert!(::core::char::decode_utf16(u.iter().cloned()).all(|r| r.is_ok()));\n         assert_eq!(s_as_utf16, u);\n \n         assert_eq!(u_as_string, s);"}, {"sha": "3efa8396331efaa092e3616343c532b7e47f5ac0", "filename": "src/libcore/char/mod.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/939692409da499ff3d498eae782620435f16a981/src%2Flibcore%2Fchar%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/939692409da499ff3d498eae782620435f16a981/src%2Flibcore%2Fchar%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fchar%2Fmod.rs?ref=939692409da499ff3d498eae782620435f16a981", "patch": "@@ -15,6 +15,18 @@\n #![allow(non_snake_case)]\n #![stable(feature = \"core_char\", since = \"1.2.0\")]\n \n+// stable re-exports\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+pub use unicode::char::{ToLowercase, ToUppercase};\n+#[stable(feature = \"decode_utf16\", since = \"1.9.0\")]\n+pub use unicode::char::{decode_utf16, DecodeUtf16, DecodeUtf16Error};\n+\n+// unstable re-exports\n+#[unstable(feature = \"unicode\", issue = \"27783\")]\n+pub use unicode::tables::{UNICODE_VERSION};\n+#[unstable(feature = \"unicode\", issue = \"27783\")]\n+pub use unicode::version::UnicodeVersion;\n+\n mod printable;\n \n use self::printable::is_printable;"}, {"sha": "e75338aedf145048545bc688a7a30387f64bb211", "filename": "src/libcore/unicode/char.rs", "status": "modified", "additions": 1, "deletions": 20, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/939692409da499ff3d498eae782620435f16a981/src%2Flibcore%2Funicode%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/939692409da499ff3d498eae782620435f16a981/src%2Flibcore%2Funicode%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Funicode%2Fchar.rs?ref=939692409da499ff3d498eae782620435f16a981", "patch": "@@ -28,31 +28,12 @@\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n \n+use char::*;\n use char::CharExt as C;\n use iter::FusedIterator;\n use fmt::{self, Write};\n use unicode::tables::{conversions, derived_property, general_category, property};\n \n-// stable re-exports\n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub use char::{MAX, from_digit, from_u32, from_u32_unchecked};\n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub use char::{EscapeDebug, EscapeDefault, EscapeUnicode};\n-#[stable(feature = \"decode_utf16\", since = \"1.9.0\")]\n-pub use char::REPLACEMENT_CHARACTER;\n-#[stable(feature = \"char_from_str\", since = \"1.20.0\")]\n-pub use char::ParseCharError;\n-\n-// unstable re-exports\n-#[stable(feature = \"try_from\", since = \"1.26.0\")]\n-pub use char::CharTryFromError;\n-#[unstable(feature = \"decode_utf8\", issue = \"33906\")]\n-pub use char::{DecodeUtf8, decode_utf8};\n-#[unstable(feature = \"unicode\", issue = \"27783\")]\n-pub use unicode::tables::{UNICODE_VERSION};\n-#[unstable(feature = \"unicode\", issue = \"27783\")]\n-pub use unicode::version::UnicodeVersion;\n-\n /// Returns an iterator that yields the lowercase equivalent of a `char`.\n ///\n /// This `struct` is created by the [`to_lowercase`] method on [`char`]. See"}, {"sha": "0ea1aa12146f180cf3b502ceac55b206bcc4f476", "filename": "src/libcore/unicode/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/939692409da499ff3d498eae782620435f16a981/src%2Flibcore%2Funicode%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/939692409da499ff3d498eae782620435f16a981/src%2Flibcore%2Funicode%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Funicode%2Fmod.rs?ref=939692409da499ff3d498eae782620435f16a981", "patch": "@@ -12,11 +12,11 @@\n #![allow(missing_docs)]\n \n mod bool_trie;\n-mod tables;\n-mod version;\n+pub(crate) mod tables;\n+pub(crate) mod version;\n \n pub mod str;\n-pub mod char;\n+pub(crate) mod char;\n \n // For use in liballoc, not re-exported in libstd.\n pub mod derived_property {"}, {"sha": "94e48732c26e898fef9a42689b1058c2b2334e6d", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/939692409da499ff3d498eae782620435f16a981/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/939692409da499ff3d498eae782620435f16a981/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=939692409da499ff3d498eae782620435f16a981", "patch": "@@ -454,7 +454,7 @@ pub use alloc::string;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use alloc::vec;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub use core::unicode::char;\n+pub use core::char;\n #[stable(feature = \"i128\", since = \"1.26.0\")]\n pub use core::u128;\n "}]}