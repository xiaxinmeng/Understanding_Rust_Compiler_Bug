{"sha": "e5ecded392916860dfc9bad840a115572610f1fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1ZWNkZWQzOTI5MTY4NjBkZmM5YmFkODQwYTExNTU3MjYxMGYxZmI=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-06-21T00:42:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-21T00:42:18Z"}, "message": "Rollup merge of #86484 - fee1-dead:builtin-macro-recursion, r=petrochenkov\n\nDo not set depth to 0 in fully_expand_fragment\n\nFixes #84632.", "tree": {"sha": "0e2e5811cbd18d0d72de96143d9b5d5969462b88", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e2e5811cbd18d0d72de96143d9b5d5969462b88"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5ecded392916860dfc9bad840a115572610f1fb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgz+BrCRBK7hj4Ov3rIwAAJgEIAKWbawlLYyPCYPagWWVJsUnz\nOHfECVPEgl9SsSu70YhOQn99ORkrLYVVEEMlyFFwdoUHkrX0vYf/JCtSPwwEEXDq\nnns7ZDr/V7dPfXjEEh8zReIBTNHHRNHd2EB38Q7XbTtQhITLJ1I0eGAWwkEuqhQg\nBJ/KhmcvZ/DF5SwG1LFj78ztmd1qgn0L1JPveDO4rPXwNn8slH/R1ZDPyZ2G3iEQ\nKvSncG1osVFaqJiR+eTkb5qllZx0+/BGffxgG6g5qrEnXM0mFd6TEb3hh29HLwjO\nm+0T0olFjbHWt+KLZRTIPC9MJUwS9Kv10Dabi8ptuhgjd02Ly/voJE2PwYTxBQQ=\n=BwW+\n-----END PGP SIGNATURE-----\n", "payload": "tree 0e2e5811cbd18d0d72de96143d9b5d5969462b88\nparent 504c378159c43869c148b4a0396134ab9c17de3e\nparent 37d0d2705de7f4103527ab769e61934c9c4a8953\nauthor Yuki Okushi <jtitor@2k36.org> 1624236138 +0900\ncommitter GitHub <noreply@github.com> 1624236138 +0900\n\nRollup merge of #86484 - fee1-dead:builtin-macro-recursion, r=petrochenkov\n\nDo not set depth to 0 in fully_expand_fragment\n\nFixes #84632.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5ecded392916860dfc9bad840a115572610f1fb", "html_url": "https://github.com/rust-lang/rust/commit/e5ecded392916860dfc9bad840a115572610f1fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5ecded392916860dfc9bad840a115572610f1fb/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "504c378159c43869c148b4a0396134ab9c17de3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/504c378159c43869c148b4a0396134ab9c17de3e", "html_url": "https://github.com/rust-lang/rust/commit/504c378159c43869c148b4a0396134ab9c17de3e"}, {"sha": "37d0d2705de7f4103527ab769e61934c9c4a8953", "url": "https://api.github.com/repos/rust-lang/rust/commits/37d0d2705de7f4103527ab769e61934c9c4a8953", "html_url": "https://github.com/rust-lang/rust/commit/37d0d2705de7f4103527ab769e61934c9c4a8953"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "37a4765a4be2bfe569b02d81370f383f8fe0c913", "filename": "compiler/rustc_expand/src/expand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5ecded392916860dfc9bad840a115572610f1fb/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5ecded392916860dfc9bad840a115572610f1fb/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs?ref=e5ecded392916860dfc9bad840a115572610f1fb", "patch": "@@ -427,7 +427,6 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n     pub fn fully_expand_fragment(&mut self, input_fragment: AstFragment) -> AstFragment {\n         let orig_expansion_data = self.cx.current_expansion.clone();\n         let orig_force_mode = self.cx.force_mode;\n-        self.cx.current_expansion.depth = 0;\n \n         // Collect all macro invocations and replace them with placeholders.\n         let (mut fragment_with_placeholders, mut invocations) =\n@@ -488,6 +487,7 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n             };\n \n             let ExpansionData { depth, id: expn_id, .. } = invoc.expansion_data;\n+            let depth = depth - orig_expansion_data.depth;\n             self.cx.current_expansion = invoc.expansion_data.clone();\n             self.cx.force_mode = force;\n "}, {"sha": "9139775c805a22424010b12fb991f018a442ab46", "filename": "src/test/ui/macros/issue-84632-eager-expansion-recursion-limit.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e5ecded392916860dfc9bad840a115572610f1fb/src%2Ftest%2Fui%2Fmacros%2Fissue-84632-eager-expansion-recursion-limit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5ecded392916860dfc9bad840a115572610f1fb/src%2Ftest%2Fui%2Fmacros%2Fissue-84632-eager-expansion-recursion-limit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fissue-84632-eager-expansion-recursion-limit.rs?ref=e5ecded392916860dfc9bad840a115572610f1fb", "patch": "@@ -0,0 +1,16 @@\n+// Regression test for #84632: Recursion limit is ignored\n+// for builtin macros that eagerly expands.\n+\n+#![recursion_limit = \"15\"]\n+macro_rules! a {\n+    () => (\"\");\n+    (A) => (concat!(\"\", a!()));\n+    (A, $($A:ident),*) => (concat!(\"\", a!($($A),*)))\n+    //~^ ERROR recursion limit reached\n+    //~| HELP consider adding\n+}\n+\n+fn main() {\n+    a!(A, A, A, A, A);\n+    a!(A, A, A, A, A, A, A, A, A, A, A);\n+}"}, {"sha": "e6067e333498808231d917468045546a09b144c4", "filename": "src/test/ui/macros/issue-84632-eager-expansion-recursion-limit.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e5ecded392916860dfc9bad840a115572610f1fb/src%2Ftest%2Fui%2Fmacros%2Fissue-84632-eager-expansion-recursion-limit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e5ecded392916860dfc9bad840a115572610f1fb/src%2Ftest%2Fui%2Fmacros%2Fissue-84632-eager-expansion-recursion-limit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fissue-84632-eager-expansion-recursion-limit.stderr?ref=e5ecded392916860dfc9bad840a115572610f1fb", "patch": "@@ -0,0 +1,14 @@\n+error: recursion limit reached while expanding `concat!`\n+  --> $DIR/issue-84632-eager-expansion-recursion-limit.rs:8:28\n+   |\n+LL |     (A, $($A:ident),*) => (concat!(\"\", a!($($A),*)))\n+   |                            ^^^^^^^^^^^^^^^^^^^^^^^^\n+...\n+LL |     a!(A, A, A, A, A, A, A, A, A, A, A);\n+   |     ------------------------------------ in this macro invocation\n+   |\n+   = help: consider adding a `#![recursion_limit=\"30\"]` attribute to your crate (`issue_84632_eager_expansion_recursion_limit`)\n+   = note: this error originates in the macro `a` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: aborting due to previous error\n+"}]}