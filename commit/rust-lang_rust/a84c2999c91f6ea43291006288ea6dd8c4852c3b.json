{"sha": "a84c2999c91f6ea43291006288ea6dd8c4852c3b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4NGMyOTk5YzkxZjZlYTQzMjkxMDA2Mjg4ZWE2ZGQ4YzQ4NTJjM2I=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-10-13T02:02:46Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-10-16T05:27:10Z"}, "message": "Require module documentation with missing_doc\n\nCloses #9824", "tree": {"sha": "58ed8bd6c4fcde8731b6439cee3b8740df361015", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58ed8bd6c4fcde8731b6439cee3b8740df361015"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a84c2999c91f6ea43291006288ea6dd8c4852c3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a84c2999c91f6ea43291006288ea6dd8c4852c3b", "html_url": "https://github.com/rust-lang/rust/commit/a84c2999c91f6ea43291006288ea6dd8c4852c3b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a84c2999c91f6ea43291006288ea6dd8c4852c3b/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d2a402555aedd04affc978ef05324df7550fd07", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d2a402555aedd04affc978ef05324df7550fd07", "html_url": "https://github.com/rust-lang/rust/commit/4d2a402555aedd04affc978ef05324df7550fd07"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "372e2313de7b22aa4cd5e7828448678c6ee587d1", "filename": "src/libextra/crypto/digest.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a84c2999c91f6ea43291006288ea6dd8c4852c3b/src%2Flibextra%2Fcrypto%2Fdigest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a84c2999c91f6ea43291006288ea6dd8c4852c3b/src%2Flibextra%2Fcrypto%2Fdigest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fcrypto%2Fdigest.rs?ref=a84c2999c91f6ea43291006288ea6dd8c4852c3b", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+//! Common functionality related to cryptographic digest functions\n+\n use std::vec;\n \n use hex::ToHex;"}, {"sha": "864fc64f82bec9af50535848e15389f0d777f387", "filename": "src/libextra/crypto/md5.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a84c2999c91f6ea43291006288ea6dd8c4852c3b/src%2Flibextra%2Fcrypto%2Fmd5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a84c2999c91f6ea43291006288ea6dd8c4852c3b/src%2Flibextra%2Fcrypto%2Fmd5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fcrypto%2Fmd5.rs?ref=a84c2999c91f6ea43291006288ea6dd8c4852c3b", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[allow(missing_doc)];\n+\n use std::iter::range_step;\n \n use cryptoutil::{write_u32_le, read_u32v_le, FixedBuffer, FixedBuffer64, StandardPadding};"}, {"sha": "fb9a6df50e48c21df37b6f4e3b46ba8c2184e52c", "filename": "src/libextra/crypto/sha2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a84c2999c91f6ea43291006288ea6dd8c4852c3b/src%2Flibextra%2Fcrypto%2Fsha2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a84c2999c91f6ea43291006288ea6dd8c4852c3b/src%2Flibextra%2Fcrypto%2Fsha2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fcrypto%2Fsha2.rs?ref=a84c2999c91f6ea43291006288ea6dd8c4852c3b", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[allow(missing_doc)];\n+\n use std::iter::range_step;\n \n use cryptoutil::{write_u64_be, write_u32_be, read_u64v_be, read_u32v_be, add_bytes_to_bits,"}, {"sha": "da9e0a225ba1b47f9b35410912274b9db328e474", "filename": "src/libextra/enum_set.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a84c2999c91f6ea43291006288ea6dd8c4852c3b/src%2Flibextra%2Fenum_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a84c2999c91f6ea43291006288ea6dd8c4852c3b/src%2Flibextra%2Fenum_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fenum_set.rs?ref=a84c2999c91f6ea43291006288ea6dd8c4852c3b", "patch": "@@ -8,6 +8,11 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+//! A structure for holding a set of enum variants\n+//!\n+//! This module defines a container which uses an efficient bit mask\n+//! representation to hold C-like enum variants.\n+\n #[deriving(Clone, Eq, IterBytes, ToStr)]\n /// A specialized Set implementation to use enum types.\n pub struct EnumSet<E> {"}, {"sha": "904ed13eabbcc9f7ea12b09b6d79ab99746187df", "filename": "src/libextra/io_util.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a84c2999c91f6ea43291006288ea6dd8c4852c3b/src%2Flibextra%2Fio_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a84c2999c91f6ea43291006288ea6dd8c4852c3b/src%2Flibextra%2Fio_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fio_util.rs?ref=a84c2999c91f6ea43291006288ea6dd8c4852c3b", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[allow(missing_doc)];\n+\n use std::io::{Reader, BytesReader};\n use std::io;\n use std::cast;"}, {"sha": "96238986bf1c8ef81c376d3455999c33cfefc9fd", "filename": "src/libextra/md4.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a84c2999c91f6ea43291006288ea6dd8c4852c3b/src%2Flibextra%2Fmd4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a84c2999c91f6ea43291006288ea6dd8c4852c3b/src%2Flibextra%2Fmd4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fmd4.rs?ref=a84c2999c91f6ea43291006288ea6dd8c4852c3b", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[allow(missing_doc)];\n \n use std::vec;\n "}, {"sha": "c8a17451a705197cae4a141e48490903b960b98c", "filename": "src/libextra/rl.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a84c2999c91f6ea43291006288ea6dd8c4852c3b/src%2Flibextra%2Frl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a84c2999c91f6ea43291006288ea6dd8c4852c3b/src%2Flibextra%2Frl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Frl.rs?ref=a84c2999c91f6ea43291006288ea6dd8c4852c3b", "patch": "@@ -8,12 +8,14 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+//! Bindings for the ability to read lines of input from the console\n+\n use std::c_str::ToCStr;\n use std::libc::{c_char, c_int};\n use std::{local_data, str, rt};\n use std::unstable::finally::Finally;\n \n-pub mod rustrt {\n+mod rustrt {\n     use std::libc::{c_char, c_int};\n \n     externfn!(fn linenoise(prompt: *c_char) -> *c_char)"}, {"sha": "cc6ce715ad331c236b3d39750e31629f60ed5405", "filename": "src/libextra/stats.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a84c2999c91f6ea43291006288ea6dd8c4852c3b/src%2Flibextra%2Fstats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a84c2999c91f6ea43291006288ea6dd8c4852c3b/src%2Flibextra%2Fstats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fstats.rs?ref=a84c2999c91f6ea43291006288ea6dd8c4852c3b", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[allow(missing_doc)];\n+\n use sort;\n use std::cmp;\n use std::hashmap;"}, {"sha": "b5b182ea8c5809fe4678e580a88cbc44057fac7c", "filename": "src/libextra/sync.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a84c2999c91f6ea43291006288ea6dd8c4852c3b/src%2Flibextra%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a84c2999c91f6ea43291006288ea6dd8c4852c3b/src%2Flibextra%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fsync.rs?ref=a84c2999c91f6ea43291006288ea6dd8c4852c3b", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[allow(missing_doc)];\n+\n /**\n  * The concurrency primitives you know and love.\n  *"}, {"sha": "57e00885b2fb12e40431bb95bb83ba1d74b63561", "filename": "src/libextra/terminfo/terminfo.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a84c2999c91f6ea43291006288ea6dd8c4852c3b/src%2Flibextra%2Fterminfo%2Fterminfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a84c2999c91f6ea43291006288ea6dd8c4852c3b/src%2Flibextra%2Fterminfo%2Fterminfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fterminfo%2Fterminfo.rs?ref=a84c2999c91f6ea43291006288ea6dd8c4852c3b", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[allow(missing_doc)];\n+\n use std::hashmap::HashMap;\n \n /// A parsed terminfo entry."}, {"sha": "8b21ce320243234a8340c55673ae1b76f94879fe", "filename": "src/librustc/middle/lint.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a84c2999c91f6ea43291006288ea6dd8c4852c3b/src%2Flibrustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a84c2999c91f6ea43291006288ea6dd8c4852c3b/src%2Flibrustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flint.rs?ref=a84c2999c91f6ea43291006288ea6dd8c4852c3b", "patch": "@@ -955,6 +955,11 @@ impl Visitor<()> for MissingDocLintVisitor {\n                                  ~\"missing documentation for a function\");\n             }\n \n+            ast::item_mod(*) if it.vis == ast::public => {\n+                self.check_attrs(it.attrs, it.id, it.span,\n+                                 ~\"missing documentation for a module\");\n+            }\n+\n             ast::item_enum(ref edef, _) if it.vis == ast::public => {\n                 self.check_attrs(it.attrs, it.id, it.span,\n                                  ~\"missing documentation for an enum\");"}, {"sha": "f6669893170ae211f66217b632a460679f4bdcc8", "filename": "src/libstd/at_vec.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a84c2999c91f6ea43291006288ea6dd8c4852c3b/src%2Flibstd%2Fat_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a84c2999c91f6ea43291006288ea6dd8c4852c3b/src%2Flibstd%2Fat_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fat_vec.rs?ref=a84c2999c91f6ea43291006288ea6dd8c4852c3b", "patch": "@@ -135,6 +135,7 @@ impl<T> Clone for @[T] {\n }\n \n #[cfg(not(test))]\n+#[allow(missing_doc)]\n pub mod traits {\n     use at_vec::append;\n     use clone::Clone;\n@@ -152,6 +153,7 @@ pub mod traits {\n #[cfg(test)]\n pub mod traits {}\n \n+#[allow(missing_doc)]\n pub mod raw {\n     use at_vec::capacity;\n     use cast;"}, {"sha": "1b8998b5c6c952f05c8a47ed2d630ff3161982e2", "filename": "src/libstd/fmt/parse.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a84c2999c91f6ea43291006288ea6dd8c4852c3b/src%2Flibstd%2Ffmt%2Fparse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a84c2999c91f6ea43291006288ea6dd8c4852c3b/src%2Flibstd%2Ffmt%2Fparse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffmt%2Fparse.rs?ref=a84c2999c91f6ea43291006288ea6dd8c4852c3b", "patch": "@@ -8,6 +8,12 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+//! Parsing of format strings\n+//!\n+//! These structures are used when parsing format strings for the compiler.\n+//! Parsing does not currently happen at runtime (structures of std::fmt::rt are\n+//! generated instead).\n+\n use prelude::*;\n \n use char;"}, {"sha": "8ce23f4b53b276fbd9b60227771f87d9122bcd3d", "filename": "src/libstd/select.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a84c2999c91f6ea43291006288ea6dd8c4852c3b/src%2Flibstd%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a84c2999c91f6ea43291006288ea6dd8c4852c3b/src%2Flibstd%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fselect.rs?ref=a84c2999c91f6ea43291006288ea6dd8c4852c3b", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[allow(missing_doc)];\n+\n use cell::Cell;\n use comm;\n use container::Container;"}, {"sha": "decfbb0785c385b8c69630c51a2c275080529cf4", "filename": "src/libstd/str.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a84c2999c91f6ea43291006288ea6dd8c4852c3b/src%2Flibstd%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a84c2999c91f6ea43291006288ea6dd8c4852c3b/src%2Flibstd%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstr.rs?ref=a84c2999c91f6ea43291006288ea6dd8c4852c3b", "patch": "@@ -1253,6 +1253,7 @@ Section: Trait implementations\n */\n \n #[cfg(not(test))]\n+#[allow(missing_doc)]\n pub mod traits {\n     use ops::Add;\n     use cmp::{TotalOrd, Ordering, Less, Equal, Greater, Eq, Ord, Equiv, TotalEq};"}, {"sha": "f31dbfec78a96839b8a9f5bba2f2170f5997f30e", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a84c2999c91f6ea43291006288ea6dd8c4852c3b/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a84c2999c91f6ea43291006288ea6dd8c4852c3b/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=a84c2999c91f6ea43291006288ea6dd8c4852c3b", "patch": "@@ -603,6 +603,7 @@ impl<'self, T> RandomAccessIterator<&'self [T]> for ChunkIter<'self, T> {\n // Equality\n \n #[cfg(not(test))]\n+#[allow(missing_doc)]\n pub mod traits {\n     use super::*;\n "}, {"sha": "1114e3a9893f58e90c63a0b89ee9681ff14f526c", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a84c2999c91f6ea43291006288ea6dd8c4852c3b/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a84c2999c91f6ea43291006288ea6dd8c4852c3b/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=a84c2999c91f6ea43291006288ea6dd8c4852c3b", "patch": "@@ -991,6 +991,7 @@ pub fn std_macros() -> @str {\n             pub mod $c {\n                 #[allow(unused_imports)];\n                 #[allow(non_uppercase_statics)];\n+                #[allow(missing_doc)];\n \n                 use super::*;\n "}, {"sha": "22710ad90e873ad87341b15ef52e5f60552c29a6", "filename": "src/test/compile-fail/lint-missing-doc.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a84c2999c91f6ea43291006288ea6dd8c4852c3b/src%2Ftest%2Fcompile-fail%2Flint-missing-doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a84c2999c91f6ea43291006288ea6dd8c4852c3b/src%2Ftest%2Fcompile-fail%2Flint-missing-doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-missing-doc.rs?ref=a84c2999c91f6ea43291006288ea6dd8c4852c3b", "patch": "@@ -29,6 +29,9 @@ pub struct PubFoo2 {\n     c: int,\n }\n \n+mod module_no_dox {}\n+pub mod pub_module_no_dox {} //~ ERROR: missing documentation\n+\n /// dox\n pub fn foo() {}\n pub fn foo2() {} //~ ERROR: missing documentation"}]}