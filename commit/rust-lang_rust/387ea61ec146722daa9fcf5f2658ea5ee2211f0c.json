{"sha": "387ea61ec146722daa9fcf5f2658ea5ee2211f0c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4N2VhNjFlYzE0NjcyMmRhYTlmY2Y1ZjI2NThlYTVlZTIyMTFmMGM=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-01-09T10:13:39Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-03-15T11:25:10Z"}, "message": "rustc: make ppaux' print macro use only one closure.", "tree": {"sha": "20075a9d0a740ce44e7b198ac68d5ceefe1c81ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20075a9d0a740ce44e7b198ac68d5ceefe1c81ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/387ea61ec146722daa9fcf5f2658ea5ee2211f0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/387ea61ec146722daa9fcf5f2658ea5ee2211f0c", "html_url": "https://github.com/rust-lang/rust/commit/387ea61ec146722daa9fcf5f2658ea5ee2211f0c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/387ea61ec146722daa9fcf5f2658ea5ee2211f0c/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27ddf2cec8126fbf1a272cee6ce6cb1c18b97e2a", "url": "https://api.github.com/repos/rust-lang/rust/commits/27ddf2cec8126fbf1a272cee6ce6cb1c18b97e2a", "html_url": "https://github.com/rust-lang/rust/commit/27ddf2cec8126fbf1a272cee6ce6cb1c18b97e2a"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "a381f8f4e8a643647aebeb4fdb9e6fd12f04e39f", "filename": "src/librustc/util/ppaux.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/387ea61ec146722daa9fcf5f2658ea5ee2211f0c/src%2Flibrustc%2Futil%2Fppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/387ea61ec146722daa9fcf5f2658ea5ee2211f0c/src%2Flibrustc%2Futil%2Fppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fppaux.rs?ref=387ea61ec146722daa9fcf5f2658ea5ee2211f0c", "patch": "@@ -252,8 +252,11 @@ macro_rules! print_inner {\n     };\n }\n macro_rules! print {\n-    ( $cx:expr $(, $kind:ident $data:tt)+ ) => {\n-        Ok(())$(.and_then(|_| print_inner!($cx, $kind $data)))+\n+    ( $cx:expr, $($kind:ident $data:tt),+ ) => {\n+        (|| -> fmt::Result {\n+            $(print_inner!($cx, $kind $data)?;)+\n+            Ok(())\n+        })()\n     };\n }\n "}]}