{"sha": "d9db35785d33e2b6c6e9b4971dfdbe0984a69b9e", "node_id": "C_kwDOAAsO6NoAKGQ5ZGIzNTc4NWQzM2UyYjZjNmU5YjQ5NzFkZmRiZTA5ODRhNjliOWU", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2023-02-03T17:34:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-03T17:34:51Z"}, "message": "Rollup merge of #107539 - PossiblyAShrub:unused-parens-in-index, r=lcnr\n\nEmit warnings on unused parens in index expressions\n\nFixes: #96606.\n\nI am not sure what the best term for \"index expression\" is. Is there a better term we could use?", "tree": {"sha": "dd5a43214576713eb4d160c8b57367a987456b00", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd5a43214576713eb4d160c8b57367a987456b00"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d9db35785d33e2b6c6e9b4971dfdbe0984a69b9e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj3UW7CRBK7hj4Ov3rIwAAAC0IABFMFeptQrz96Bc5mdEroIo5\nfFhsSxlFIXOo7iNTt2nkcJfCbF0BPpqiKe8YtBgCLqNlcJw+tk6n4dbQ0hT4hCu+\n6Xggl1I+vXdSSJZYEmWqi8LFGw5Yzh3+pTda+xDsNqYCyNpy6UkdNHPNnd3l334B\nlA3ih/SQa4HBkPBSvGkN7eBLpGSg6Jeyx/6rekOM25XD+MxajzgedWmP494IU0O4\nJT4aGgQCLLWwRHgAACdWAf20L8mDO8udMe4boX9aVDYJCvWPD1IbDgj6flE37lDK\ngw31QY2a+8TW/31bo7R//p2aXNsCdioO1h+M2hZYMrFoXBW7QLo7R4DvNwdl6+U=\n=J125\n-----END PGP SIGNATURE-----\n", "payload": "tree dd5a43214576713eb4d160c8b57367a987456b00\nparent e1bf3a13869ceef2bd9a62f3153ba2241b0047d7\nparent c3a71ede7cc459b84ddac53f3435391712fa1f12\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1675445691 +0530\ncommitter GitHub <noreply@github.com> 1675445691 +0530\n\nRollup merge of #107539 - PossiblyAShrub:unused-parens-in-index, r=lcnr\n\nEmit warnings on unused parens in index expressions\n\nFixes: #96606.\n\nI am not sure what the best term for \"index expression\" is. Is there a better term we could use?\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d9db35785d33e2b6c6e9b4971dfdbe0984a69b9e", "html_url": "https://github.com/rust-lang/rust/commit/d9db35785d33e2b6c6e9b4971dfdbe0984a69b9e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d9db35785d33e2b6c6e9b4971dfdbe0984a69b9e/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1bf3a13869ceef2bd9a62f3153ba2241b0047d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1bf3a13869ceef2bd9a62f3153ba2241b0047d7", "html_url": "https://github.com/rust-lang/rust/commit/e1bf3a13869ceef2bd9a62f3153ba2241b0047d7"}, {"sha": "c3a71ede7cc459b84ddac53f3435391712fa1f12", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3a71ede7cc459b84ddac53f3435391712fa1f12", "html_url": "https://github.com/rust-lang/rust/commit/c3a71ede7cc459b84ddac53f3435391712fa1f12"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "d829ca43328fe651422bf31ad61ef2e955bbfe9c", "filename": "compiler/rustc_lint/src/unused.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d9db35785d33e2b6c6e9b4971dfdbe0984a69b9e/compiler%2Frustc_lint%2Fsrc%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9db35785d33e2b6c6e9b4971dfdbe0984a69b9e/compiler%2Frustc_lint%2Fsrc%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Funused.rs?ref=d9db35785d33e2b6c6e9b4971dfdbe0984a69b9e", "patch": "@@ -495,6 +495,7 @@ enum UnusedDelimsCtx {\n     ArrayLenExpr,\n     AnonConst,\n     MatchArmExpr,\n+    IndexExpr,\n }\n \n impl From<UnusedDelimsCtx> for &'static str {\n@@ -514,6 +515,7 @@ impl From<UnusedDelimsCtx> for &'static str {\n             UnusedDelimsCtx::LetScrutineeExpr => \"`let` scrutinee expression\",\n             UnusedDelimsCtx::ArrayLenExpr | UnusedDelimsCtx::AnonConst => \"const expression\",\n             UnusedDelimsCtx::MatchArmExpr => \"match arm expression\",\n+            UnusedDelimsCtx::IndexExpr => \"index expression\",\n         }\n     }\n }\n@@ -733,6 +735,8 @@ trait UnusedDelimLint {\n                 (value, UnusedDelimsCtx::ReturnValue, false, Some(left), None)\n             }\n \n+            Index(_, ref value) => (value, UnusedDelimsCtx::IndexExpr, false, None, None),\n+\n             Assign(_, ref value, _) | AssignOp(.., ref value) => {\n                 (value, UnusedDelimsCtx::AssignedValue, false, None, None)\n             }"}, {"sha": "4e7c290fa2a0200602b2c975adac7696537b4ce6", "filename": "tests/ui/lint/unused/issue-96606.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d9db35785d33e2b6c6e9b4971dfdbe0984a69b9e/tests%2Fui%2Flint%2Funused%2Fissue-96606.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9db35785d33e2b6c6e9b4971dfdbe0984a69b9e/tests%2Fui%2Flint%2Funused%2Fissue-96606.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint%2Funused%2Fissue-96606.rs?ref=d9db35785d33e2b6c6e9b4971dfdbe0984a69b9e", "patch": "@@ -0,0 +1,8 @@\n+#[deny(unused)]\n+fn main() {\n+    let arr = [0; 10];\n+    let _ = arr[(0)]; //~ ERROR unnecessary parentheses around index expression\n+    let _ = arr[{0}]; //~ ERROR unnecessary braces around index expression\n+    let _ = arr[1 + (0)];\n+    let _ = arr[{ let x = 0; x }];\n+}"}, {"sha": "e3627718116be11e01b5eba929532aeff856e4c8", "filename": "tests/ui/lint/unused/issue-96606.stderr", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/d9db35785d33e2b6c6e9b4971dfdbe0984a69b9e/tests%2Fui%2Flint%2Funused%2Fissue-96606.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d9db35785d33e2b6c6e9b4971dfdbe0984a69b9e/tests%2Fui%2Flint%2Funused%2Fissue-96606.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint%2Funused%2Fissue-96606.stderr?ref=d9db35785d33e2b6c6e9b4971dfdbe0984a69b9e", "patch": "@@ -0,0 +1,33 @@\n+error: unnecessary parentheses around index expression\n+  --> $DIR/issue-96606.rs:4:17\n+   |\n+LL |     let _ = arr[(0)];\n+   |                 ^ ^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/issue-96606.rs:1:8\n+   |\n+LL | #[deny(unused)]\n+   |        ^^^^^^\n+   = note: `#[deny(unused_parens)]` implied by `#[deny(unused)]`\n+help: remove these parentheses\n+   |\n+LL -     let _ = arr[(0)];\n+LL +     let _ = arr[0];\n+   |\n+\n+error: unnecessary braces around index expression\n+  --> $DIR/issue-96606.rs:5:17\n+   |\n+LL |     let _ = arr[{0}];\n+   |                 ^ ^\n+   |\n+   = note: `#[deny(unused_braces)]` implied by `#[deny(unused)]`\n+help: remove these braces\n+   |\n+LL -     let _ = arr[{0}];\n+LL +     let _ = arr[0];\n+   |\n+\n+error: aborting due to 2 previous errors\n+"}]}