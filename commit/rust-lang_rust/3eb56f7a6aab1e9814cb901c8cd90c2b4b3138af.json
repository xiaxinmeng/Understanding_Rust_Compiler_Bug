{"sha": "3eb56f7a6aab1e9814cb901c8cd90c2b4b3138af", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlYjU2ZjdhNmFhYjFlOTgxNGNiOTAxYzhjZDkwYzJiNGIzMTM4YWY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-03-20T20:35:24Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-03-20T20:38:59Z"}, "message": "introduce Analysis::from_single_file", "tree": {"sha": "807d6a51e6b949ca2932d2f93b39f38a4fdce532", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/807d6a51e6b949ca2932d2f93b39f38a4fdce532"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3eb56f7a6aab1e9814cb901c8cd90c2b4b3138af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3eb56f7a6aab1e9814cb901c8cd90c2b4b3138af", "html_url": "https://github.com/rust-lang/rust/commit/3eb56f7a6aab1e9814cb901c8cd90c2b4b3138af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3eb56f7a6aab1e9814cb901c8cd90c2b4b3138af/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90ff3ba64133c1bcae9d49709c4dd704ae59b1ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/90ff3ba64133c1bcae9d49709c4dd704ae59b1ee", "html_url": "https://github.com/rust-lang/rust/commit/90ff3ba64133c1bcae9d49709c4dd704ae59b1ee"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "81ca57035f1148242ff737a38e41cf7b70439837", "filename": "crates/ra_ide_api/src/lib.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/3eb56f7a6aab1e9814cb901c8cd90c2b4b3138af/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3eb56f7a6aab1e9814cb901c8cd90c2b4b3138af/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Flib.rs?ref=3eb56f7a6aab1e9814cb901c8cd90c2b4b3138af", "patch": "@@ -211,6 +211,23 @@ pub struct Analysis {\n // API, the API should in theory be usable as a library, or via a different\n // protocol.\n impl Analysis {\n+    // Creates an analysis instance for a single file, without any extenal\n+    // dependencies, stdlib support or ability to apply changes. See\n+    // `AnalysisHost` for creating a fully-featured analysis.\n+    pub fn from_single_file(text: String) -> (Analysis, FileId) {\n+        let mut host = AnalysisHost::default();\n+        let source_root = SourceRootId(0);\n+        let mut change = AnalysisChange::new();\n+        change.add_root(source_root, true);\n+        let mut crate_graph = CrateGraph::default();\n+        let file_id = FileId(0);\n+        crate_graph.add_crate_root(file_id, Edition::Edition2018);\n+        change.add_file(source_root, file_id, \"main.rs\".into(), Arc::new(text));\n+        change.set_crate_graph(crate_graph);\n+        host.apply_change(change);\n+        (host.analysis(), file_id)\n+    }\n+\n     /// Debug info about the current state of the analysis\n     pub fn status(&self) -> String {\n         status::status(&*self.db)"}]}