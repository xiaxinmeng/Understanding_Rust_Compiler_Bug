{"sha": "f19f8e4b4961e279cfe389bb177b86ea97613dbc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxOWY4ZTRiNDk2MWUyNzljZmUzODliYjE3N2I4NmVhOTc2MTNkYmM=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-11-05T17:27:10Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-11-05T17:27:10Z"}, "message": "Use tcx.collect_and_partition_mono_items", "tree": {"sha": "ae809fe94e5403878a682f248500372cbaadd411", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae809fe94e5403878a682f248500372cbaadd411"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f19f8e4b4961e279cfe389bb177b86ea97613dbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f19f8e4b4961e279cfe389bb177b86ea97613dbc", "html_url": "https://github.com/rust-lang/rust/commit/f19f8e4b4961e279cfe389bb177b86ea97613dbc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f19f8e4b4961e279cfe389bb177b86ea97613dbc/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d67fd1698286204e5491e4df9376b97e0e3392fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/d67fd1698286204e5491e4df9376b97e0e3392fe", "html_url": "https://github.com/rust-lang/rust/commit/d67fd1698286204e5491e4df9376b97e0e3392fe"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "c9ca758e55ab59e2daacbb9b1b6730123b98ba3c", "filename": "src/lib.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f19f8e4b4961e279cfe389bb177b86ea97613dbc/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f19f8e4b4961e279cfe389bb177b86ea97613dbc/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=f19f8e4b4961e279cfe389bb177b86ea97613dbc", "patch": "@@ -178,9 +178,6 @@ impl CodegenBackend for CraneliftCodegenBackend {\n             .unwrap()\n             .finish(flags);\n \n-        let mono_items =\n-            collector::collect_crate_mono_items(tcx, collector::MonoItemCollectionMode::Lazy).0;\n-\n         // TODO: move to the end of this function when compiling libcore doesn't have unimplemented stuff anymore\n         save_incremental(tcx);\n         tcx.sess.warn(\"Saved incremental data\");\n@@ -189,7 +186,7 @@ impl CodegenBackend for CraneliftCodegenBackend {\n             let mut jit_module: Module<SimpleJITBackend> = Module::new(SimpleJITBuilder::new());\n             assert_eq!(pointer_ty(tcx), jit_module.target_config().pointer_type());\n \n-            codegen_mono_items(tcx, &mut jit_module, mono_items);\n+            codegen_mono_items(tcx, &mut jit_module);\n \n             tcx.sess.abort_if_errors();\n             println!(\"Compiled everything\");\n@@ -230,7 +227,7 @@ impl CodegenBackend for CraneliftCodegenBackend {\n             );\n             assert_eq!(pointer_ty(tcx), faerie_module.target_config().pointer_type());\n \n-            codegen_mono_items(tcx, &mut faerie_module, mono_items);\n+            codegen_mono_items(tcx, &mut faerie_module);\n \n             tcx.sess.abort_if_errors();\n \n@@ -334,7 +331,6 @@ impl CodegenBackend for CraneliftCodegenBackend {\n fn codegen_mono_items<'a, 'tcx: 'a>(\n     tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     module: &mut Module<impl Backend + 'static>,\n-    mono_items: FxHashSet<MonoItem<'tcx>>,\n ) {\n     use std::io::Write;\n \n@@ -350,10 +346,15 @@ fn codegen_mono_items<'a, 'tcx: 'a>(\n         None\n     };\n \n+    let (_, cgus) = tcx.collect_and_partition_mono_items(LOCAL_CRATE);\n+    let mono_items = cgus.iter().map(|cgu| {\n+        cgu.items().iter()\n+    }).flatten().collect::<FxHashSet<(_, _)>>();\n+\n     let before = ::std::time::Instant::now();\n     println!(\"[codegen mono items] start\");\n \n-    for mono_item in mono_items {\n+    for (&mono_item, &(_linkage, _vis)) in mono_items {\n         let res = ::std::panic::catch_unwind(::std::panic::AssertUnwindSafe(|| {\n             base::trans_mono_item(tcx, module, &mut caches, &mut ccx, mono_item);\n         }));"}]}