{"sha": "cc53f1356d5f9d625b59f2f35873761e87e914ab", "node_id": "C_kwDOAAsO6NoAKGNjNTNmMTM1NmQ1ZjlkNjI1YjU5ZjJmMzU4NzM3NjFlODdlOTE0YWI", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2021-11-28T19:52:38Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2021-11-28T19:52:38Z"}, "message": "Delete an unreachable codepath from format_args implementation", "tree": {"sha": "7bacf3a35a79fe325e1ff6181532a816ddcb2e5f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7bacf3a35a79fe325e1ff6181532a816ddcb2e5f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc53f1356d5f9d625b59f2f35873761e87e914ab", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmGj3gYACgkQ+boUO5X/\nbYKyehAAlXS00+IfKOhmRjSR7rdPLUUVDiTtnqJ869a1dQY7XH48Oht4beZrlDU4\nwh3xHpGAddGO2y7reKOA6lxLswPK21/VUDnJ1kAHQU4O1dxOtgTdjJ5O8f8fNxo3\njIR7jlEnkDr1V8jtSKocfWBrjQpmzLqSQdqdQBVlBxDxoz+vLZ63U4s4NspeopgF\nkY0rCoxmxe9xSCQipDQ2bz9N47URrV07h1han7YGz8K3cKOFNd0QzrqisaY9XhrD\nChKDJBp/YQnANvjaoPFluEYbKFT0QfutV5bWPlf/ekiny8CZh7IuAUdbtvgHdcXI\nlt+DeuGAeVVGcVftT0ijJFjnNTXn2h4jSHsERrP1+2b9H8DqG3cR9sIhM1FvHQ6u\nUy3QRPlTA2itoc/PV4t0UA2sfQhMlCYEatmb+6OFmUVfJVFywJvcm8KzkHmo35Ku\nxbxVTH8NYyulBW2CkpzgXH7h65s719K7reSHjnUf939WjkkyMKiYSq7ZwXMKLVGA\nMRsUdR28lt3ha34sMJdjPkuz/knGsh1wJhHpOwys5XDzuPMo/s0RRZ6KABNrsUWZ\niVAWasLAl6apIBPr2lY6kCl0quOaNnFiF6QQCd5U1rZQlR0I8XCgSZlZLrbaRc6X\naux0oc7F8CGFsUEINoS4w3uL+a6ijPwHxMSGgf+5lvQZeNd1+iY=\n=5EGy\n-----END PGP SIGNATURE-----", "payload": "tree 7bacf3a35a79fe325e1ff6181532a816ddcb2e5f\nparent e6d2de9483a27f846f003fc745713339a9122473\nauthor David Tolnay <dtolnay@gmail.com> 1638129158 -0800\ncommitter David Tolnay <dtolnay@gmail.com> 1638129158 -0800\n\nDelete an unreachable codepath from format_args implementation\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc53f1356d5f9d625b59f2f35873761e87e914ab", "html_url": "https://github.com/rust-lang/rust/commit/cc53f1356d5f9d625b59f2f35873761e87e914ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc53f1356d5f9d625b59f2f35873761e87e914ab/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6d2de9483a27f846f003fc745713339a9122473", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6d2de9483a27f846f003fc745713339a9122473", "html_url": "https://github.com/rust-lang/rust/commit/e6d2de9483a27f846f003fc745713339a9122473"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "e46309f4f13fb9b2c1c1883677fdfb749a45fc77", "filename": "compiler/rustc_builtin_macros/src/format.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/cc53f1356d5f9d625b59f2f35873761e87e914ab/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc53f1356d5f9d625b59f2f35873761e87e914ab/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs?ref=cc53f1356d5f9d625b59f2f35873761e87e914ab", "patch": "@@ -88,8 +88,8 @@ struct Context<'a, 'b> {\n     /// * Implicit argument resolution: `\"{1:.0$} {2:.foo$} {1:.3$} {4:.0$}\"`\n     /// * Name resolution: `\"{1:.0$} {2:.5$} {1:.3$} {4:.0$}\"`\n     /// * `count_positions` (in JSON): `{0: 0, 5: 1, 3: 2}`\n-    /// * `count_args`: `vec![Exact(0), Exact(5), Exact(3)]`\n-    count_args: Vec<Position>,\n+    /// * `count_args`: `vec![0, 5, 3]`\n+    count_args: Vec<usize>,\n     /// Relative slot numbers for count arguments.\n     count_positions: FxHashMap<usize, usize>,\n     /// Number of count slots assigned.\n@@ -513,7 +513,7 @@ impl<'a, 'b> Context<'a, 'b> {\n                         if let Entry::Vacant(e) = self.count_positions.entry(arg) {\n                             let i = self.count_positions_count;\n                             e.insert(i);\n-                            self.count_args.push(Exact(arg));\n+                            self.count_args.push(arg);\n                             self.count_positions_count += 1;\n                         }\n                     }\n@@ -771,11 +771,7 @@ impl<'a, 'b> Context<'a, 'b> {\n             }\n             heads.push(self.ecx.expr_addr_of(e.span, e));\n         }\n-        for pos in self.count_args {\n-            let index = match pos {\n-                Exact(i) => i,\n-                _ => panic!(\"should never happen\"),\n-            };\n+        for index in self.count_args {\n             let span = spans_pos[index];\n             args.push(Context::format_arg(self.ecx, self.macsp, span, &Count, index));\n         }"}]}