{"sha": "5522177db6cb5ad95b2da0172fb22df8cc895126", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1MjIxNzdkYjZjYjVhZDk1YjJkYTAxNzJmYjIyZGY4Y2M4OTUxMjY=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-07-14T00:18:43Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-08-16T03:55:27Z"}, "message": "Only run expensive calculations if the method name is recognized", "tree": {"sha": "5a1b6f74702fc21d9540005e66e95c45d7b7d95b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a1b6f74702fc21d9540005e66e95c45d7b7d95b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5522177db6cb5ad95b2da0172fb22df8cc895126", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5522177db6cb5ad95b2da0172fb22df8cc895126", "html_url": "https://github.com/rust-lang/rust/commit/5522177db6cb5ad95b2da0172fb22df8cc895126", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5522177db6cb5ad95b2da0172fb22df8cc895126/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "402a9c9f5e143baaf37ef8b68d84edaadda253dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/402a9c9f5e143baaf37ef8b68d84edaadda253dd", "html_url": "https://github.com/rust-lang/rust/commit/402a9c9f5e143baaf37ef8b68d84edaadda253dd"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "e58ddcb178800781bba4073471bd9759ac10b20f", "filename": "compiler/rustc_lint/src/types.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5522177db6cb5ad95b2da0172fb22df8cc895126/compiler%2Frustc_lint%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5522177db6cb5ad95b2da0172fb22df8cc895126/compiler%2Frustc_lint%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Ftypes.rs?ref=5522177db6cb5ad95b2da0172fb22df8cc895126", "patch": "@@ -1434,6 +1434,7 @@ impl InvalidAtomicOrdering {\n     fn inherent_atomic_method_call<'hir>(\n         cx: &LateContext<'_>,\n         expr: &Expr<'hir>,\n+        recognized_names: &[Symbol], // used for fast path calculation\n     ) -> Option<(Symbol, &'hir [Expr<'hir>])> {\n         const ATOMIC_TYPES: &[Symbol] = &[\n             sym::AtomicBool,\n@@ -1453,6 +1454,7 @@ impl InvalidAtomicOrdering {\n         ];\n         if_chain! {\n             if let ExprKind::MethodCall(ref method_path, _, args, _) = &expr.kind;\n+            if recognized_names.contains(&method_path.ident.name);\n             if let Some(m_def_id) = cx.typeck_results().type_dependent_def_id(expr.hir_id);\n             if let Some(impl_did) = cx.tcx.impl_of_method(m_def_id);\n             if let Some(adt) = cx.tcx.type_of(impl_did).ty_adt_def();\n@@ -1494,7 +1496,7 @@ impl InvalidAtomicOrdering {\n         use rustc_hir::def::{DefKind, Res};\n         use rustc_hir::QPath;\n         if_chain! {\n-            if let Some((method, args)) = Self::inherent_atomic_method_call(cx, expr);\n+            if let Some((method, args)) = Self::inherent_atomic_method_call(cx, expr, &[sym::load, sym::store]);\n             if let Some((ordering_arg, invalid_ordering)) = match method {\n                 sym::load => Some((&args[1], sym::Release)),\n                 sym::store => Some((&args[2], sym::Acquire)),\n@@ -1543,7 +1545,7 @@ impl InvalidAtomicOrdering {\n \n     fn check_atomic_compare_exchange(cx: &LateContext<'_>, expr: &Expr<'_>) {\n         if_chain! {\n-            if let Some((method, args)) = Self::inherent_atomic_method_call(cx, expr);\n+            if let Some((method, args)) = Self::inherent_atomic_method_call(cx, expr, &[sym::fetch_update, sym::compare_exchange, sym::compare_exchange_weak]);\n             if let Some((success_order_arg, failure_order_arg)) = match method {\n                 sym::fetch_update => Some((&args[1], &args[2])),\n                 sym::compare_exchange | sym::compare_exchange_weak => Some((&args[3], &args[4])),"}]}