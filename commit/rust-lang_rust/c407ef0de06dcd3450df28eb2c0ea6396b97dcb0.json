{"sha": "c407ef0de06dcd3450df28eb2c0ea6396b97dcb0", "node_id": "C_kwDOAAsO6NoAKGM0MDdlZjBkZTA2ZGNkMzQ1MGRmMjhlYjJjMGVhNjM5NmI5N2RjYjA", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-07-30T15:48:06Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-07-30T15:48:06Z"}, "message": "Remove Clean trait implementation for hir::VariantData", "tree": {"sha": "38aabb224cd6b93580a4b63bfa220db4e3709602", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38aabb224cd6b93580a4b63bfa220db4e3709602"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c407ef0de06dcd3450df28eb2c0ea6396b97dcb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c407ef0de06dcd3450df28eb2c0ea6396b97dcb0", "html_url": "https://github.com/rust-lang/rust/commit/c407ef0de06dcd3450df28eb2c0ea6396b97dcb0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c407ef0de06dcd3450df28eb2c0ea6396b97dcb0/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21c812aa7a1a51a9583d7d90954079e9a21bc571", "url": "https://api.github.com/repos/rust-lang/rust/commits/21c812aa7a1a51a9583d7d90954079e9a21bc571", "html_url": "https://github.com/rust-lang/rust/commit/21c812aa7a1a51a9583d7d90954079e9a21bc571"}], "stats": {"total": 32, "additions": 13, "deletions": 19}, "files": [{"sha": "4067cf8441b3d65349a7554f1d4afc36307c1dfb", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 13, "deletions": 19, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/c407ef0de06dcd3450df28eb2c0ea6396b97dcb0/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c407ef0de06dcd3450df28eb2c0ea6396b97dcb0/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=c407ef0de06dcd3450df28eb2c0ea6396b97dcb0", "patch": "@@ -1824,16 +1824,6 @@ pub(crate) fn clean_visibility(vis: ty::Visibility) -> Visibility {\n     }\n }\n \n-fn clean_variant_data<'tcx>(\n-    variant: &hir::VariantData<'tcx>,\n-    cx: &mut DocContext<'tcx>,\n-) -> VariantStruct {\n-    VariantStruct {\n-        struct_type: CtorKind::from_hir(variant),\n-        fields: variant.fields().iter().map(|x| clean_field(x, cx)).collect(),\n-    }\n-}\n-\n pub(crate) fn clean_variant_def<'tcx>(variant: &ty::VariantDef, cx: &mut DocContext<'tcx>) -> Item {\n     let kind = match variant.ctor_kind {\n         CtorKind::Const => Variant::CLike,\n@@ -1851,15 +1841,19 @@ pub(crate) fn clean_variant_def<'tcx>(variant: &ty::VariantDef, cx: &mut DocCont\n     Item { visibility: Inherited, ..what_rustc_thinks }\n }\n \n-impl<'tcx> Clean<'tcx, Variant> for hir::VariantData<'tcx> {\n-    fn clean(&self, cx: &mut DocContext<'tcx>) -> Variant {\n-        match self {\n-            hir::VariantData::Struct(..) => Variant::Struct(clean_variant_data(self, cx)),\n-            hir::VariantData::Tuple(..) => {\n-                Variant::Tuple(self.fields().iter().map(|x| clean_field(x, cx)).collect())\n-            }\n-            hir::VariantData::Unit(..) => Variant::CLike,\n+fn clean_variant_data<'tcx>(\n+    variant: &hir::VariantData<'tcx>,\n+    cx: &mut DocContext<'tcx>,\n+) -> Variant {\n+    match variant {\n+        hir::VariantData::Struct(..) => Variant::Struct(VariantStruct {\n+            struct_type: CtorKind::from_hir(variant),\n+            fields: variant.fields().iter().map(|x| clean_field(x, cx)).collect(),\n+        }),\n+        hir::VariantData::Tuple(..) => {\n+            Variant::Tuple(variant.fields().iter().map(|x| clean_field(x, cx)).collect())\n         }\n+        hir::VariantData::Unit(..) => Variant::CLike,\n     }\n }\n \n@@ -2007,7 +2001,7 @@ fn clean_maybe_renamed_item<'tcx>(\n \n impl<'tcx> Clean<'tcx, Item> for hir::Variant<'tcx> {\n     fn clean(&self, cx: &mut DocContext<'tcx>) -> Item {\n-        let kind = VariantItem(self.data.clean(cx));\n+        let kind = VariantItem(clean_variant_data(&self.data, cx));\n         let what_rustc_thinks =\n             Item::from_hir_id_and_parts(self.id, Some(self.ident.name), kind, cx);\n         // don't show `pub` for variants, which are always public"}]}