{"sha": "d4beecaed36f6c8ba8f73f06d89fd20267887749", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0YmVlY2FlZDM2ZjZjOGJhOGY3M2YwNmQ4OWZkMjAyNjc4ODc3NDk=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2018-07-31T18:07:37Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2018-08-03T17:09:02Z"}, "message": "Move validate_crate_name to rustc_metadata", "tree": {"sha": "ea5786dc8d53fea0a48b71d52f56fb2280dfffa0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea5786dc8d53fea0a48b71d52f56fb2280dfffa0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4beecaed36f6c8ba8f73f06d89fd20267887749", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4beecaed36f6c8ba8f73f06d89fd20267887749", "html_url": "https://github.com/rust-lang/rust/commit/d4beecaed36f6c8ba8f73f06d89fd20267887749", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4beecaed36f6c8ba8f73f06d89fd20267887749/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88e0ff14a81a2122222e32cf7c285f585c516cfd", "url": "https://api.github.com/repos/rust-lang/rust/commits/88e0ff14a81a2122222e32cf7c285f585c516cfd", "html_url": "https://github.com/rust-lang/rust/commit/88e0ff14a81a2122222e32cf7c285f585c516cfd"}], "stats": {"total": 105, "additions": 75, "deletions": 30}, "files": [{"sha": "1455ea506e64ae96b30f6b995d8f6ea231da56ae", "filename": "src/Cargo.lock", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d4beecaed36f6c8ba8f73f06d89fd20267887749/src%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/d4beecaed36f6c8ba8f73f06d89fd20267887749/src%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FCargo.lock?ref=d4beecaed36f6c8ba8f73f06d89fd20267887749", "patch": "@@ -2219,6 +2219,7 @@ dependencies = [\n  \"rustc 0.0.0\",\n  \"rustc_data_structures 0.0.0\",\n  \"rustc_incremental 0.0.0\",\n+ \"rustc_metadata_utils 0.0.0\",\n  \"rustc_mir 0.0.0\",\n  \"rustc_target 0.0.0\",\n  \"syntax 0.0.0\",\n@@ -2352,13 +2353,22 @@ dependencies = [\n  \"rustc 0.0.0\",\n  \"rustc_data_structures 0.0.0\",\n  \"rustc_errors 0.0.0\",\n+ \"rustc_metadata_utils 0.0.0\",\n  \"rustc_target 0.0.0\",\n  \"serialize 0.0.0\",\n  \"syntax 0.0.0\",\n  \"syntax_ext 0.0.0\",\n  \"syntax_pos 0.0.0\",\n ]\n \n+[[package]]\n+name = \"rustc_metadata_utils\"\n+version = \"0.0.0\"\n+dependencies = [\n+ \"rustc 0.0.0\",\n+ \"syntax_pos 0.0.0\",\n+]\n+\n [[package]]\n name = \"rustc_mir\"\n version = \"0.0.0\""}, {"sha": "6132d8f2bf6a1701edf7e761a3646902d375b56b", "filename": "src/librustc/middle/cstore.rs", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/d4beecaed36f6c8ba8f73f06d89fd20267887749/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4beecaed36f6c8ba8f73f06d89fd20267887749/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcstore.rs?ref=d4beecaed36f6c8ba8f73f06d89fd20267887749", "patch": "@@ -260,33 +260,6 @@ pub trait CrateStore {\n \n pub type CrateStoreDyn = dyn CrateStore + sync::Sync;\n \n-// FIXME: find a better place for this?\n-pub fn validate_crate_name(sess: Option<&Session>, s: &str, sp: Option<Span>) {\n-    let mut err_count = 0;\n-    {\n-        let mut say = |s: &str| {\n-            match (sp, sess) {\n-                (_, None) => bug!(\"{}\", s),\n-                (Some(sp), Some(sess)) => sess.span_err(sp, s),\n-                (None, Some(sess)) => sess.err(s),\n-            }\n-            err_count += 1;\n-        };\n-        if s.is_empty() {\n-            say(\"crate name must not be empty\");\n-        }\n-        for c in s.chars() {\n-            if c.is_alphanumeric() { continue }\n-            if c == '_'  { continue }\n-            say(&format!(\"invalid character `{}` in crate name: `{}`\", c, s));\n-        }\n-    }\n-\n-    if err_count > 0 {\n-        sess.unwrap().abort_if_errors();\n-    }\n-}\n-\n /// A dummy crate store that does not support any non-local crates,\n /// for test purposes.\n pub struct DummyCrateStore;"}, {"sha": "a1f4a323f849ee3feecf5ec2f11526aee2bdb6b3", "filename": "src/librustc_codegen_utils/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d4beecaed36f6c8ba8f73f06d89fd20267887749/src%2Flibrustc_codegen_utils%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d4beecaed36f6c8ba8f73f06d89fd20267887749/src%2Flibrustc_codegen_utils%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2FCargo.toml?ref=d4beecaed36f6c8ba8f73f06d89fd20267887749", "patch": "@@ -20,3 +20,4 @@ rustc_target = { path = \"../librustc_target\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_mir = { path = \"../librustc_mir\" }\n rustc_incremental = { path = \"../librustc_incremental\" }\n+rustc_metadata_utils = { path = \"../librustc_metadata_utils\" }"}, {"sha": "3ff2388beea2ad55af1bbf216c3c513dcc777eee", "filename": "src/librustc_codegen_utils/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d4beecaed36f6c8ba8f73f06d89fd20267887749/src%2Flibrustc_codegen_utils%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4beecaed36f6c8ba8f73f06d89fd20267887749/src%2Flibrustc_codegen_utils%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2Flib.rs?ref=d4beecaed36f6c8ba8f73f06d89fd20267887749", "patch": "@@ -37,6 +37,7 @@ extern crate rustc_incremental;\n extern crate syntax;\n extern crate syntax_pos;\n #[macro_use] extern crate rustc_data_structures;\n+extern crate rustc_metadata_utils;\n \n use rustc::ty::TyCtxt;\n "}, {"sha": "b33482eb868ffb54cae93623c8a6b8653d002c9d", "filename": "src/librustc_codegen_utils/link.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d4beecaed36f6c8ba8f73f06d89fd20267887749/src%2Flibrustc_codegen_utils%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4beecaed36f6c8ba8f73f06d89fd20267887749/src%2Flibrustc_codegen_utils%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2Flink.rs?ref=d4beecaed36f6c8ba8f73f06d89fd20267887749", "patch": "@@ -10,11 +10,12 @@\n \n use rustc::session::config::{self, OutputFilenames, Input, OutputType};\n use rustc::session::Session;\n-use rustc::middle::cstore::{self, LinkMeta};\n+use rustc::middle::cstore::LinkMeta;\n use rustc::hir::svh::Svh;\n use std::path::{Path, PathBuf};\n use syntax::{ast, attr};\n use syntax_pos::Span;\n+use rustc_metadata_utils::validate_crate_name;\n \n pub fn out_filename(sess: &Session,\n                 crate_type: config::CrateType,\n@@ -61,7 +62,7 @@ pub fn find_crate_name(sess: Option<&Session>,\n                        attrs: &[ast::Attribute],\n                        input: &Input) -> String {\n     let validate = |s: String, span: Option<Span>| {\n-        cstore::validate_crate_name(sess, &s, span);\n+        validate_crate_name(sess, &s, span);\n         s\n     };\n "}, {"sha": "6142fe78149ce219c5715d8c43f629d0c07d71a9", "filename": "src/librustc_metadata/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d4beecaed36f6c8ba8f73f06d89fd20267887749/src%2Flibrustc_metadata%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d4beecaed36f6c8ba8f73f06d89fd20267887749/src%2Flibrustc_metadata%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2FCargo.toml?ref=d4beecaed36f6c8ba8f73f06d89fd20267887749", "patch": "@@ -20,3 +20,4 @@ serialize = { path = \"../libserialize\" }\n syntax = { path = \"../libsyntax\" }\n syntax_ext = { path = \"../libsyntax_ext\" }\n syntax_pos = { path = \"../libsyntax_pos\" }\n+rustc_metadata_utils = { path = \"../librustc_metadata_utils\" }"}, {"sha": "1910540f00b116c87b6cc1353a64949b6eba9291", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d4beecaed36f6c8ba8f73f06d89fd20267887749/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4beecaed36f6c8ba8f73f06d89fd20267887749/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=d4beecaed36f6c8ba8f73f06d89fd20267887749", "patch": "@@ -25,11 +25,13 @@ use rustc::session::config::{Sanitizer, self};\n use rustc_target::spec::{PanicStrategy, TargetTriple};\n use rustc::session::search_paths::PathKind;\n use rustc::middle;\n-use rustc::middle::cstore::{validate_crate_name, ExternCrate, ExternCrateSource};\n+use rustc::middle::cstore::{ExternCrate, ExternCrateSource};\n use rustc::util::common::record_time;\n use rustc::util::nodemap::FxHashSet;\n use rustc::hir::map::Definitions;\n \n+use rustc_metadata_utils::validate_crate_name;\n+\n use std::ops::Deref;\n use std::path::PathBuf;\n use std::{cmp, fs};"}, {"sha": "798b631989bd57ad642ed9cc4ae30e91f4c74306", "filename": "src/librustc_metadata/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d4beecaed36f6c8ba8f73f06d89fd20267887749/src%2Flibrustc_metadata%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4beecaed36f6c8ba8f73f06d89fd20267887749/src%2Flibrustc_metadata%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flib.rs?ref=d4beecaed36f6c8ba8f73f06d89fd20267887749", "patch": "@@ -37,6 +37,7 @@ extern crate serialize as rustc_serialize; // used by deriving\n extern crate rustc_errors as errors;\n extern crate syntax_ext;\n extern crate proc_macro;\n+extern crate rustc_metadata_utils;\n \n #[macro_use]\n extern crate rustc;"}, {"sha": "ef2e73f8e3fc7242f52d1a05c8650fd2541ba3d1", "filename": "src/librustc_metadata_utils/Cargo.toml", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d4beecaed36f6c8ba8f73f06d89fd20267887749/src%2Flibrustc_metadata_utils%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d4beecaed36f6c8ba8f73f06d89fd20267887749/src%2Flibrustc_metadata_utils%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata_utils%2FCargo.toml?ref=d4beecaed36f6c8ba8f73f06d89fd20267887749", "patch": "@@ -0,0 +1,13 @@\n+[package]\n+authors = [\"The Rust Project Developers\"]\n+name = \"rustc_metadata_utils\"\n+version = \"0.0.0\"\n+\n+[lib]\n+name = \"rustc_metadata_utils\"\n+path = \"lib.rs\"\n+crate-type = [\"dylib\"]\n+\n+[dependencies]\n+rustc = { path = \"../librustc\" }\n+syntax_pos = { path = \"../libsyntax_pos\" }"}, {"sha": "a1e5150390ac1bfd3c36dda01427fd9054947b9d", "filename": "src/librustc_metadata_utils/lib.rs", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/d4beecaed36f6c8ba8f73f06d89fd20267887749/src%2Flibrustc_metadata_utils%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4beecaed36f6c8ba8f73f06d89fd20267887749/src%2Flibrustc_metadata_utils%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata_utils%2Flib.rs?ref=d4beecaed36f6c8ba8f73f06d89fd20267887749", "patch": "@@ -0,0 +1,42 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[macro_use]\n+extern crate rustc;\n+extern crate syntax_pos;\n+\n+use rustc::session::Session;\n+use syntax_pos::Span;\n+\n+pub fn validate_crate_name(sess: Option<&Session>, s: &str, sp: Option<Span>) {\n+    let mut err_count = 0;\n+    {\n+        let mut say = |s: &str| {\n+            match (sp, sess) {\n+                (_, None) => bug!(\"{}\", s),\n+                (Some(sp), Some(sess)) => sess.span_err(sp, s),\n+                (None, Some(sess)) => sess.err(s),\n+            }\n+            err_count += 1;\n+        };\n+        if s.is_empty() {\n+            say(\"crate name must not be empty\");\n+        }\n+        for c in s.chars() {\n+            if c.is_alphanumeric() { continue }\n+            if c == '_'  { continue }\n+            say(&format!(\"invalid character `{}` in crate name: `{}`\", c, s));\n+        }\n+    }\n+\n+    if err_count > 0 {\n+        sess.unwrap().abort_if_errors();\n+    }\n+}"}]}