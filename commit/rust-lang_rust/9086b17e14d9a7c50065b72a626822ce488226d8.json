{"sha": "9086b17e14d9a7c50065b72a626822ce488226d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwODZiMTdlMTRkOWE3YzUwMDY1YjcyYTYyNjgyMmNlNDg4MjI2ZDg=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-12-31T00:17:56Z"}, "committer": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-12-31T00:17:56Z"}, "message": "Rustup to rust-lang/rust#67707", "tree": {"sha": "7ee731c98206d52db854a2267d3c86fa9c1bef38", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ee731c98206d52db854a2267d3c86fa9c1bef38"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9086b17e14d9a7c50065b72a626822ce488226d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9086b17e14d9a7c50065b72a626822ce488226d8", "html_url": "https://github.com/rust-lang/rust/commit/9086b17e14d9a7c50065b72a626822ce488226d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9086b17e14d9a7c50065b72a626822ce488226d8/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3036b0e6d548f2cf3340f636a807854db191017b", "url": "https://api.github.com/repos/rust-lang/rust/commits/3036b0e6d548f2cf3340f636a807854db191017b", "html_url": "https://github.com/rust-lang/rust/commit/3036b0e6d548f2cf3340f636a807854db191017b"}], "stats": {"total": 72, "additions": 36, "deletions": 36}, "files": [{"sha": "2336e1022d64edb0c3b0d68028ddbfe40d49e577", "filename": "clippy_lints/src/attrs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=9086b17e14d9a7c50065b72a626822ce488226d8", "patch": "@@ -15,11 +15,11 @@ use rustc::lint::{\n use rustc::ty;\n use rustc_errors::Applicability;\n use rustc_session::declare_tool_lint;\n+use rustc_span::symbol::Symbol;\n use semver::Version;\n use syntax::ast::{AttrKind, AttrStyle, Attribute, Lit, LitKind, MetaItemKind, NestedMetaItem};\n use syntax::source_map::Span;\n use syntax::util::lev_distance::find_best_match_for_name;\n-use syntax_pos::symbol::Symbol;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for items annotated with `#[inline(always)]`,"}, {"sha": "6eb643c392d796b739a480360e3e0b47388b2224", "filename": "clippy_lints/src/cognitive_complexity.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Fcognitive_complexity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Fcognitive_complexity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcognitive_complexity.rs?ref=9086b17e14d9a7c50065b72a626822ce488226d8", "patch": "@@ -5,9 +5,9 @@ use rustc::hir::*;\n use rustc::impl_lint_pass;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintContext, LintPass};\n use rustc_session::declare_tool_lint;\n+use rustc_span::BytePos;\n use syntax::ast::Attribute;\n use syntax::source_map::Span;\n-use syntax_pos::BytePos;\n \n use crate::utils::{match_type, paths, snippet_opt, span_help_and_lint, LimitStack};\n "}, {"sha": "331dd5cc0152ac8abe86f04e17ee8be0072110a0", "filename": "clippy_lints/src/consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fconsts.rs?ref=9086b17e14d9a7c50065b72a626822ce488226d8", "patch": "@@ -9,12 +9,12 @@ use rustc::ty::subst::{Subst, SubstsRef};\n use rustc::ty::{self, Ty, TyCtxt};\n use rustc::{bug, span_bug};\n use rustc_data_structures::sync::Lrc;\n+use rustc_span::symbol::Symbol;\n use std::cmp::Ordering::{self, Equal};\n use std::cmp::PartialOrd;\n use std::convert::TryInto;\n use std::hash::{Hash, Hasher};\n use syntax::ast::{FloatTy, LitKind};\n-use syntax_pos::symbol::Symbol;\n \n /// A `LitKind`-like enum to fold constant `Expr`s into.\n #[derive(Debug, Clone)]"}, {"sha": "6b07ee32c52c18e992095d1af9fd572ff369b18a", "filename": "clippy_lints/src/doc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdoc.rs?ref=9086b17e14d9a7c50065b72a626822ce488226d8", "patch": "@@ -5,10 +5,10 @@ use rustc::impl_lint_pass;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_session::declare_tool_lint;\n+use rustc_span::Pos;\n use std::ops::Range;\n use syntax::ast::{AttrKind, Attribute};\n use syntax::source_map::{BytePos, MultiSpan, Span};\n-use syntax_pos::Pos;\n use url::Url;\n \n declare_clippy_lint! {"}, {"sha": "e3bbb94ef117eba9d17fcd40d2d15d9f7340398f", "filename": "clippy_lints/src/excessive_precision.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Fexcessive_precision.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Fexcessive_precision.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fexcessive_precision.rs?ref=9086b17e14d9a7c50065b72a626822ce488226d8", "patch": "@@ -7,11 +7,11 @@ use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::ty;\n use rustc_errors::Applicability;\n use rustc_session::declare_tool_lint;\n+use rustc_span::symbol::Symbol;\n use std::f32;\n use std::f64;\n use std::fmt;\n use syntax::ast::*;\n-use syntax_pos::symbol::Symbol;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for float literals with a precision greater"}, {"sha": "7584615aa2fcca457a41d4c199d67b1dc2e4b975", "filename": "clippy_lints/src/fallible_impl_from.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Ffallible_impl_from.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Ffallible_impl_from.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffallible_impl_from.rs?ref=9086b17e14d9a7c50065b72a626822ce488226d8", "patch": "@@ -6,7 +6,7 @@ use rustc::hir;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::ty::{self, Ty};\n use rustc_session::declare_tool_lint;\n-use syntax_pos::Span;\n+use rustc_span::Span;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for impls of `From<..>` that contain `panic!()` or `unwrap()`"}, {"sha": "73b8d14c5b1405d7d9c5796505c20d4585723a76", "filename": "clippy_lints/src/inherent_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Finherent_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Finherent_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finherent_impl.rs?ref=9086b17e14d9a7c50065b72a626822ce488226d8", "patch": "@@ -6,7 +6,7 @@ use rustc::impl_lint_pass;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_session::declare_tool_lint;\n-use syntax_pos::Span;\n+use rustc_span::Span;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for multiple inherent implementations of a struct"}, {"sha": "49101695a58bddf5eeb2d0d67b8f348b1516ef69", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=9086b17e14d9a7c50065b72a626822ce488226d8", "patch": "@@ -36,13 +36,13 @@ extern crate rustc_parse;\n #[allow(unused_extern_crates)]\n extern crate rustc_session;\n #[allow(unused_extern_crates)]\n+extern crate rustc_span;\n+#[allow(unused_extern_crates)]\n extern crate rustc_target;\n #[allow(unused_extern_crates)]\n extern crate rustc_typeck;\n #[allow(unused_extern_crates)]\n extern crate syntax;\n-#[allow(unused_extern_crates)]\n-extern crate syntax_pos;\n \n use rustc::lint::{self, LintId};\n use rustc::session::Session;"}, {"sha": "95d13ae05ebf4e4e28999497a7229ebe02ed9fd2", "filename": "clippy_lints/src/literal_representation.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Fliteral_representation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Fliteral_representation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fliteral_representation.rs?ref=9086b17e14d9a7c50065b72a626822ce488226d8", "patch": "@@ -330,7 +330,7 @@ enum WarningType {\n }\n \n impl WarningType {\n-    fn display(&self, suggested_format: String, cx: &EarlyContext<'_>, span: syntax_pos::Span) {\n+    fn display(&self, suggested_format: String, cx: &EarlyContext<'_>, span: rustc_span::Span) {\n         match self {\n             Self::MistypedLiteralSuffix => span_lint_and_sugg(\n                 cx,\n@@ -450,7 +450,7 @@ impl LiteralDigitGrouping {\n     // Returns `false` if the check fails\n     fn check_for_mistyped_suffix(\n         cx: &EarlyContext<'_>,\n-        span: syntax_pos::Span,\n+        span: rustc_span::Span,\n         num_lit: &mut NumericLiteral<'_>,\n     ) -> bool {\n         if num_lit.suffix.is_some() {"}, {"sha": "c4061a3e330a098fed305fb676fc06046823a99f", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=9086b17e14d9a7c50065b72a626822ce488226d8", "patch": "@@ -17,12 +17,12 @@ use rustc::ty::subst::Subst;\n use rustc::ty::{self, Ty};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::Applicability;\n+use rustc_span::{BytePos, Symbol};\n use rustc_typeck::expr_use_visitor::*;\n use std::iter::{once, Iterator};\n use std::mem;\n use syntax::ast;\n use syntax::source_map::Span;\n-use syntax_pos::{BytePos, Symbol};\n \n use crate::utils::paths;\n use crate::utils::{"}, {"sha": "5a47f7d24619f120a00aa171dec1c98797f569d9", "filename": "clippy_lints/src/methods/option_map_unwrap_or.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Fmethods%2Foption_map_unwrap_or.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Fmethods%2Foption_map_unwrap_or.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Foption_map_unwrap_or.rs?ref=9086b17e14d9a7c50065b72a626822ce488226d8", "patch": "@@ -5,8 +5,8 @@ use rustc::hir::{self, *};\n use rustc::lint::LateContext;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::Applicability;\n+use rustc_span::symbol::Symbol;\n use syntax::source_map::Span;\n-use syntax_pos::symbol::Symbol;\n \n use super::OPTION_MAP_UNWRAP_OR;\n "}, {"sha": "289295c43a1200cb90ca20f8106344d66cec74a0", "filename": "clippy_lints/src/misc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc.rs?ref=9086b17e14d9a7c50065b72a626822ce488226d8", "patch": "@@ -603,7 +603,7 @@ fn is_used(cx: &LateContext<'_, '_>, expr: &Expr<'_>) -> bool {\n /// Tests whether an expression is in a macro expansion (e.g., something\n /// generated by `#[derive(...)]` or the like).\n fn in_attributes_expansion(expr: &Expr<'_>) -> bool {\n-    use syntax_pos::hygiene::MacroKind;\n+    use rustc_span::hygiene::MacroKind;\n     if expr.span.from_expansion() {\n         let data = expr.span.ctxt().outer_expn_data();\n "}, {"sha": "cddcba3cb010589ba89ddf78c31e220e26a17e29", "filename": "clippy_lints/src/missing_const_for_fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs?ref=9086b17e14d9a7c50065b72a626822ce488226d8", "patch": "@@ -6,8 +6,8 @@ use rustc::hir::{Body, Constness, FnDecl, HirId};\n use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintPass};\n use rustc_mir::transform::qualify_min_const_fn::is_min_const_fn;\n use rustc_session::declare_tool_lint;\n+use rustc_span::Span;\n use rustc_typeck::hir_ty_to_ty;\n-use syntax_pos::Span;\n \n declare_clippy_lint! {\n     /// **What it does:**"}, {"sha": "9a18bce9f2f41a302659733db2f6a45ef03e6cc7", "filename": "clippy_lints/src/mutable_debug_assertion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Fmutable_debug_assertion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Fmutable_debug_assertion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmutable_debug_assertion.rs?ref=9086b17e14d9a7c50065b72a626822ce488226d8", "patch": "@@ -6,7 +6,7 @@ use rustc::hir::{BorrowKind, Expr, ExprKind, Mutability, StmtKind, UnOp};\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint_pass, ty};\n use rustc_session::declare_tool_lint;\n-use syntax_pos::Span;\n+use rustc_span::Span;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for function/method calls with a mutable"}, {"sha": "4be858be377287d699cacf0e3a85c7b8d122d7f0", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=9086b17e14d9a7c50065b72a626822ce488226d8", "patch": "@@ -14,12 +14,12 @@ use rustc::ty::{self, RegionKind, TypeFoldable};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::Applicability;\n use rustc_session::declare_tool_lint;\n+use rustc_span::{Span, Symbol};\n use rustc_target::spec::abi::Abi;\n use rustc_typeck::expr_use_visitor as euv;\n use std::borrow::Cow;\n use syntax::ast::Attribute;\n use syntax::errors::DiagnosticBuilder;\n-use syntax_pos::{Span, Symbol};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for functions taking arguments by value, but not"}, {"sha": "e671f31ca6fbf8b52938b6ffe73e3ace724ad743", "filename": "clippy_lints/src/non_copy_const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Fnon_copy_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Fnon_copy_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_copy_const.rs?ref=9086b17e14d9a7c50065b72a626822ce488226d8", "patch": "@@ -11,8 +11,8 @@ use rustc::lint::{LateContext, LateLintPass, Lint, LintArray, LintPass};\n use rustc::ty::adjustment::Adjust;\n use rustc::ty::{Ty, TypeFlags};\n use rustc_session::declare_tool_lint;\n+use rustc_span::{InnerSpan, Span, DUMMY_SP};\n use rustc_typeck::hir_ty_to_ty;\n-use syntax_pos::{InnerSpan, Span, DUMMY_SP};\n \n use crate::utils::{in_constant, is_copy, qpath_res, span_lint_and_then};\n "}, {"sha": "93c0cbff07aa8ec0414efcee0341e06906b44c99", "filename": "clippy_lints/src/panic_unimplemented.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs?ref=9086b17e14d9a7c50065b72a626822ce488226d8", "patch": "@@ -4,8 +4,8 @@ use rustc::declare_lint_pass;\n use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc_session::declare_tool_lint;\n+use rustc_span::Span;\n use syntax::ast::LitKind;\n-use syntax_pos::Span;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for missing parameters in `panic!`."}, {"sha": "db7fbf7083ddab618a6e6885af5c4a77903e02eb", "filename": "clippy_lints/src/ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fptr.rs?ref=9086b17e14d9a7c50065b72a626822ce488226d8", "patch": "@@ -13,9 +13,9 @@ use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::ty;\n use rustc_errors::Applicability;\n use rustc_session::declare_tool_lint;\n+use rustc_span::{MultiSpan, Symbol};\n use std::borrow::Cow;\n use syntax::source_map::Span;\n-use syntax_pos::{MultiSpan, Symbol};\n \n declare_clippy_lint! {\n     /// **What it does:** This lint checks for function arguments of type `&String`"}, {"sha": "9fb2caaefbdf64236de5801af60be13807cdaa1b", "filename": "clippy_lints/src/returns.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Freturns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Freturns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freturns.rs?ref=9086b17e14d9a7c50065b72a626822ce488226d8", "patch": "@@ -3,10 +3,10 @@ use rustc::declare_lint_pass;\n use rustc::lint::{in_external_macro, EarlyContext, EarlyLintPass, LintArray, LintContext, LintPass};\n use rustc_errors::Applicability;\n use rustc_session::declare_tool_lint;\n+use rustc_span::BytePos;\n use syntax::ast;\n use syntax::source_map::Span;\n use syntax::visit::FnKind;\n-use syntax_pos::BytePos;\n \n use crate::utils::{match_path_ast, snippet_opt, span_lint_and_then};\n "}, {"sha": "f9e4e75a22bdb2cc2c727f40942ab388a8143b76", "filename": "clippy_lints/src/slow_vector_initialization.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs?ref=9086b17e14d9a7c50065b72a626822ce488226d8", "patch": "@@ -7,8 +7,8 @@ use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, Lint, LintArray, LintPass};\n use rustc_errors::Applicability;\n use rustc_session::declare_tool_lint;\n+use rustc_span::symbol::Symbol;\n use syntax::ast::LitKind;\n-use syntax_pos::symbol::Symbol;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks slow zero-filled vector initialization"}, {"sha": "fb3d7ecafc2a7f2d370a7f024bcbf6f25f41dab6", "filename": "clippy_lints/src/swap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Fswap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Fswap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fswap.rs?ref=9086b17e14d9a7c50065b72a626822ce488226d8", "patch": "@@ -11,7 +11,7 @@ use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::ty;\n use rustc_errors::Applicability;\n use rustc_session::declare_tool_lint;\n-use syntax_pos::Symbol;\n+use rustc_span::Symbol;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for manual swapping."}, {"sha": "04f9c47fa77a5343a24a166b4144ff93718defea", "filename": "clippy_lints/src/trivially_copy_pass_by_ref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Ftrivially_copy_pass_by_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Ftrivially_copy_pass_by_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftrivially_copy_pass_by_ref.rs?ref=9086b17e14d9a7c50065b72a626822ce488226d8", "patch": "@@ -12,9 +12,9 @@ use rustc::session::config::Config as SessionConfig;\n use rustc::ty;\n use rustc_errors::Applicability;\n use rustc_session::declare_tool_lint;\n+use rustc_span::Span;\n use rustc_target::abi::LayoutOf;\n use rustc_target::spec::abi::Abi;\n-use syntax_pos::Span;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for functions taking arguments by reference, where"}, {"sha": "3f865ff497131de2383509e59491687409720c4a", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=9086b17e14d9a7c50065b72a626822ce488226d8", "patch": "@@ -14,13 +14,13 @@ use rustc::ty::{self, InferTy, Ty, TyCtxt, TypeckTables};\n use rustc::{declare_lint_pass, impl_lint_pass};\n use rustc_errors::Applicability;\n use rustc_session::declare_tool_lint;\n+use rustc_span::hygiene::{ExpnKind, MacroKind};\n use rustc_target::spec::abi::Abi;\n use rustc_typeck::hir_ty_to_ty;\n use syntax::ast::{FloatTy, IntTy, LitFloatType, LitIntType, LitKind, UintTy};\n use syntax::errors::DiagnosticBuilder;\n use syntax::source_map::Span;\n use syntax::symbol::{sym, Symbol};\n-use syntax_pos::hygiene::{ExpnKind, MacroKind};\n \n use crate::consts::{constant, Constant};\n use crate::utils::paths;\n@@ -668,7 +668,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnitArg {\n }\n \n fn is_questionmark_desugar_marked_call(expr: &Expr<'_>) -> bool {\n-    use syntax_pos::hygiene::DesugaringKind;\n+    use rustc_span::hygiene::DesugaringKind;\n     if let ExprKind::Call(ref callee, _) = expr.kind {\n         callee.span.is_desugaring(DesugaringKind::QuestionMark)\n     } else {\n@@ -2045,7 +2045,7 @@ declare_lint_pass!(ImplicitHasher => [IMPLICIT_HASHER]);\n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for ImplicitHasher {\n     #[allow(clippy::cast_possible_truncation, clippy::too_many_lines)]\n     fn check_item(&mut self, cx: &LateContext<'a, 'tcx>, item: &'tcx Item<'_>) {\n-        use syntax_pos::BytePos;\n+        use rustc_span::BytePos;\n \n         fn suggestion<'a, 'tcx>(\n             cx: &LateContext<'a, 'tcx>,"}, {"sha": "4f3b2c188ea7817bf351db22b850f727ed178a47", "filename": "clippy_lints/src/use_self.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Fuse_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Fuse_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fuse_self.rs?ref=9086b17e14d9a7c50065b72a626822ce488226d8", "patch": "@@ -9,7 +9,7 @@ use rustc::ty;\n use rustc::ty::{DefIdTree, Ty};\n use rustc_errors::Applicability;\n use rustc_session::declare_tool_lint;\n-use syntax_pos::symbol::kw;\n+use rustc_span::symbol::kw;\n \n use crate::utils::{differing_macro_contexts, span_lint_and_sugg};\n "}, {"sha": "8f886d174f1ec3f09291523d7d49a9e67a5a5a1f", "filename": "clippy_lints/src/utils/attrs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Futils%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Futils%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fattrs.rs?ref=9086b17e14d9a7c50065b72a626822ce488226d8", "patch": "@@ -123,7 +123,7 @@ fn parse_attrs<F: FnMut(u64)>(sess: &Session, attrs: &[ast::Attribute], name: &'\n /// Return true if the attributes contain any of `proc_macro`,\n /// `proc_macro_derive` or `proc_macro_attribute`, false otherwise\n pub fn is_proc_macro(attrs: &[ast::Attribute]) -> bool {\n-    use syntax_pos::Symbol;\n+    use rustc_span::Symbol;\n \n     let syms = [\n         Symbol::intern(\"proc_macro\"),"}, {"sha": "c61b6faa9325ea444547f57f61c9d6bd5b311f63", "filename": "clippy_lints/src/utils/internal_lints.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs?ref=9086b17e14d9a7c50065b72a626822ce488226d8", "patch": "@@ -12,11 +12,11 @@ use rustc::{declare_lint_pass, impl_lint_pass};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::Applicability;\n use rustc_session::declare_tool_lint;\n+use rustc_span::symbol::SymbolStr;\n use syntax::ast;\n use syntax::ast::{Crate as AstCrate, ItemKind, Name};\n use syntax::source_map::Span;\n use syntax::visit::FnKind;\n-use syntax_pos::symbol::SymbolStr;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for various things we like to keep tidy in clippy."}, {"sha": "ebfa88fabfd6ea67f28ea869072ffb3158cc6511", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=9086b17e14d9a7c50065b72a626822ce488226d8", "patch": "@@ -40,12 +40,12 @@ use rustc::ty::{\n     Binder, Ty, TyCtxt,\n };\n use rustc_errors::Applicability;\n+use rustc_span::hygiene::ExpnKind;\n use smallvec::SmallVec;\n use syntax::ast::{self, Attribute, LitKind};\n use syntax::attr;\n use syntax::source_map::{Span, DUMMY_SP};\n use syntax::symbol::{kw, Symbol};\n-use syntax_pos::hygiene::ExpnKind;\n \n use crate::consts::{constant, Constant};\n use crate::reexport::*;"}, {"sha": "9338daf0574152782237c14abd6a367bf98fda00", "filename": "clippy_lints/src/utils/paths.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fpaths.rs?ref=9086b17e14d9a7c50065b72a626822ce488226d8", "patch": "@@ -104,7 +104,7 @@ pub const STD_CONVERT_IDENTITY: [&str; 3] = [\"std\", \"convert\", \"identity\"];\n pub const STD_MEM_TRANSMUTE: [&str; 3] = [\"std\", \"mem\", \"transmute\"];\n pub const STD_PTR_NULL: [&str; 3] = [\"std\", \"ptr\", \"null\"];\n pub const STRING: [&str; 3] = [\"alloc\", \"string\", \"String\"];\n-pub const SYNTAX_CONTEXT: [&str; 3] = [\"syntax_pos\", \"hygiene\", \"SyntaxContext\"];\n+pub const SYNTAX_CONTEXT: [&str; 3] = [\"rustc_span\", \"hygiene\", \"SyntaxContext\"];\n pub const TO_OWNED: [&str; 3] = [\"alloc\", \"borrow\", \"ToOwned\"];\n pub const TO_OWNED_METHOD: [&str; 4] = [\"alloc\", \"borrow\", \"ToOwned\", \"to_owned\"];\n pub const TO_STRING: [&str; 3] = [\"alloc\", \"string\", \"ToString\"];"}, {"sha": "a817d2a9e860751d2d0e918a6f6f8ea1d18bc86e", "filename": "clippy_lints/src/utils/sugg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fsugg.rs?ref=9086b17e14d9a7c50065b72a626822ce488226d8", "patch": "@@ -6,6 +6,7 @@ use matches::matches;\n use rustc::hir;\n use rustc::lint::{EarlyContext, LateContext, LintContext};\n use rustc_errors::Applicability;\n+use rustc_span::{BytePos, Pos};\n use std::borrow::Cow;\n use std::convert::TryInto;\n use std::fmt::Display;\n@@ -14,7 +15,6 @@ use syntax::print::pprust::token_kind_to_string;\n use syntax::source_map::{CharPos, Span};\n use syntax::token;\n use syntax::util::parser::AssocOp;\n-use syntax_pos::{BytePos, Pos};\n \n pub use crate::literal_representation::format_numeric_literal;\n "}, {"sha": "7d492783bda930c108789e9e1e31a1be89cdbb6c", "filename": "clippy_lints/src/write.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9086b17e14d9a7c50065b72a626822ce488226d8/clippy_lints%2Fsrc%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwrite.rs?ref=9086b17e14d9a7c50065b72a626822ce488226d8", "patch": "@@ -8,11 +8,11 @@ use rustc_errors::Applicability;\n use rustc_lexer::unescape::{self, EscapeError};\n use rustc_parse::parser;\n use rustc_session::declare_tool_lint;\n+use rustc_span::{BytePos, Span};\n use syntax::ast::*;\n use syntax::symbol::Symbol;\n use syntax::token;\n use syntax::tokenstream::TokenStream;\n-use syntax_pos::{BytePos, Span};\n \n declare_clippy_lint! {\n     /// **What it does:** This lint warns when you use `println!(\"\")` to"}, {"sha": "f140950e47fe51fa42e4af0ebf7c1544f6c929fa", "filename": "doc/adding_lints.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9086b17e14d9a7c50065b72a626822ce488226d8/doc%2Fadding_lints.md", "raw_url": "https://github.com/rust-lang/rust/raw/9086b17e14d9a7c50065b72a626822ce488226d8/doc%2Fadding_lints.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Fadding_lints.md?ref=9086b17e14d9a7c50065b72a626822ce488226d8", "patch": "@@ -432,12 +432,12 @@ don't hesitate to ask on Discord, IRC or in the issue/PR.\n [diagnostics]: https://github.com/rust-lang/rust-clippy/blob/master/clippy_lints/src/utils/diagnostics.rs\n [utils]: https://github.com/rust-lang/rust-clippy/blob/master/clippy_lints/src/utils/mod.rs\n [ident]: https://doc.rust-lang.org/nightly/nightly-rustc/syntax/source_map/symbol/struct.Ident.html\n-[span]: https://doc.rust-lang.org/nightly/nightly-rustc/syntax_pos/struct.Span.html\n+[span]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_span/struct.Span.html\n [applicability]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_errors/enum.Applicability.html\n [if_chain]: https://docs.rs/if_chain/*/if_chain/\n [ty]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc/ty/sty/index.html\n [ast]: https://doc.rust-lang.org/nightly/nightly-rustc/syntax/ast/index.html\n-[from_expansion]: https://doc.rust-lang.org/nightly/nightly-rustc/syntax_pos/struct.Span.html#method.from_expansion\n+[from_expansion]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_span/struct.Span.html#method.from_expansion\n [in_external_macro]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc/lint/fn.in_external_macro.html\n [play]: https://play.rust-lang.org\n [author_example]: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=f093b986e80ad62f3b67a1f24f5e66e2"}]}