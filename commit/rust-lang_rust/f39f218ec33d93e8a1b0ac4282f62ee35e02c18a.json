{"sha": "f39f218ec33d93e8a1b0ac4282f62ee35e02c18a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzOWYyMThlYzMzZDkzZThhMWIwYWM0MjgyZjYyZWUzNWUwMmMxOGE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-09-01T18:08:45Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-09-01T18:08:45Z"}, "message": "Auto merge of #53533 - withoutboats:error-source, r=withoutboats\n\nAdd Error::source method per RFC 2504.\n\nThis implements part of RFC 2504.\n\n* Adds `Error::source`, a replacement for `Error::cause` with the \"right\" signature, which will be instantly stable.\n* Deprecates `Error::cause` in 1.33 (this choice was based on the precedent in #52994, which we haven't finalized).\n* Redefines `Error::cause` to delegate to `Error::source` (the delegation can only go in this direction, not the other).\n\n@rfcbot fcp merge", "tree": {"sha": "e914134013b2f01af35a165cc497337e32c658c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e914134013b2f01af35a165cc497337e32c658c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f39f218ec33d93e8a1b0ac4282f62ee35e02c18a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f39f218ec33d93e8a1b0ac4282f62ee35e02c18a", "html_url": "https://github.com/rust-lang/rust/commit/f39f218ec33d93e8a1b0ac4282f62ee35e02c18a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f39f218ec33d93e8a1b0ac4282f62ee35e02c18a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "839d99c861dbabfd4fa97b66ede9a97b8255d179", "url": "https://api.github.com/repos/rust-lang/rust/commits/839d99c861dbabfd4fa97b66ede9a97b8255d179", "html_url": "https://github.com/rust-lang/rust/commit/839d99c861dbabfd4fa97b66ede9a97b8255d179"}, {"sha": "e2e4f57bf84ca3cbdb91ba9d235c12b46666d090", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2e4f57bf84ca3cbdb91ba9d235c12b46666d090", "html_url": "https://github.com/rust-lang/rust/commit/e2e4f57bf84ca3cbdb91ba9d235c12b46666d090"}], "stats": {"total": 67, "additions": 66, "deletions": 1}, "files": [{"sha": "3de4a1bd4170b62a454a5091fe05a6e4cdec29ed", "filename": "src/libstd/error.rs", "status": "modified", "additions": 66, "deletions": 1, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/f39f218ec33d93e8a1b0ac4282f62ee35e02c18a/src%2Flibstd%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f39f218ec33d93e8a1b0ac4282f62ee35e02c18a/src%2Flibstd%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ferror.rs?ref=f39f218ec33d93e8a1b0ac4282f62ee35e02c18a", "patch": "@@ -138,7 +138,72 @@ pub trait Error: Debug + Display {\n     /// }\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    fn cause(&self) -> Option<&dyn Error> { None }\n+    #[rustc_deprecated(since = \"1.33.0\", reason = \"replaced by Error::source, which can support \\\n+                                                   downcasting\")]\n+    fn cause(&self) -> Option<&dyn Error> {\n+        self.source()\n+    }\n+\n+    /// The lower-level source of this error, if any.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::error::Error;\n+    /// use std::fmt;\n+    ///\n+    /// #[derive(Debug)]\n+    /// struct SuperError {\n+    ///     side: SuperErrorSideKick,\n+    /// }\n+    ///\n+    /// impl fmt::Display for SuperError {\n+    ///     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+    ///         write!(f, \"SuperError is here!\")\n+    ///     }\n+    /// }\n+    ///\n+    /// impl Error for SuperError {\n+    ///     fn description(&self) -> &str {\n+    ///         \"I'm the superhero of errors\"\n+    ///     }\n+    ///\n+    ///     fn source(&self) -> Option<&(dyn Error + 'static)> {\n+    ///         Some(&self.side)\n+    ///     }\n+    /// }\n+    ///\n+    /// #[derive(Debug)]\n+    /// struct SuperErrorSideKick;\n+    ///\n+    /// impl fmt::Display for SuperErrorSideKick {\n+    ///     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+    ///         write!(f, \"SuperErrorSideKick is here!\")\n+    ///     }\n+    /// }\n+    ///\n+    /// impl Error for SuperErrorSideKick {\n+    ///     fn description(&self) -> &str {\n+    ///         \"I'm SuperError side kick\"\n+    ///     }\n+    /// }\n+    ///\n+    /// fn get_super_error() -> Result<(), SuperError> {\n+    ///     Err(SuperError { side: SuperErrorSideKick })\n+    /// }\n+    ///\n+    /// fn main() {\n+    ///     match get_super_error() {\n+    ///         Err(e) => {\n+    ///             println!(\"Error: {}\", e.description());\n+    ///             println!(\"Caused by: {}\", e.source().unwrap());\n+    ///         }\n+    ///         _ => println!(\"No error\"),\n+    ///     }\n+    /// }\n+    /// ```\n+    #[stable(feature = \"error_source\", since = \"1.30.0\")]\n+    fn source(&self) -> Option<&(dyn Error + 'static)> { None }\n \n     /// Get the `TypeId` of `self`\n     #[doc(hidden)]"}]}