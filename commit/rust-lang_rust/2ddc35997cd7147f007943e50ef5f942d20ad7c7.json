{"sha": "2ddc35997cd7147f007943e50ef5f942d20ad7c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkZGMzNTk5N2NkNzE0N2YwMDc5NDNlNTBlZjVmOTQyZDIwYWQ3Yzc=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-27T06:39:10Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-27T08:29:38Z"}, "message": "address some review comments", "tree": {"sha": "9ae7bd7a22951bb71cbd789415784df3d4a76f19", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ae7bd7a22951bb71cbd789415784df3d4a76f19"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ddc35997cd7147f007943e50ef5f942d20ad7c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ddc35997cd7147f007943e50ef5f942d20ad7c7", "html_url": "https://github.com/rust-lang/rust/commit/2ddc35997cd7147f007943e50ef5f942d20ad7c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ddc35997cd7147f007943e50ef5f942d20ad7c7/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2972bb37b8dc6e64ec31cf9b79245974e30f417b", "url": "https://api.github.com/repos/rust-lang/rust/commits/2972bb37b8dc6e64ec31cf9b79245974e30f417b", "html_url": "https://github.com/rust-lang/rust/commit/2972bb37b8dc6e64ec31cf9b79245974e30f417b"}], "stats": {"total": 163, "additions": 68, "deletions": 95}, "files": [{"sha": "dde734756517c099fcc94bb843ba64b8d5795ca7", "filename": "src/librustc_ast_lowering/path.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2ddc35997cd7147f007943e50ef5f942d20ad7c7/src%2Flibrustc_ast_lowering%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ddc35997cd7147f007943e50ef5f942d20ad7c7/src%2Flibrustc_ast_lowering%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Fpath.rs?ref=2ddc35997cd7147f007943e50ef5f942d20ad7c7", "patch": "@@ -367,9 +367,9 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n         mut itctx: ImplTraitContext<'_, 'hir>,\n     ) -> (GenericArgsCtor<'hir>, bool) {\n         let has_non_lt_args = data.args.iter().any(|arg| match arg {\n-            AngleBracketedArg::Arg(ast::GenericArg::Lifetime(_)) => false,\n-            AngleBracketedArg::Arg(ast::GenericArg::Type(_) | ast::GenericArg::Const(_))\n-            | AngleBracketedArg::Constraint(_) => true,\n+            AngleBracketedArg::Arg(ast::GenericArg::Lifetime(_))\n+            | AngleBracketedArg::Constraint(_) => false,\n+            AngleBracketedArg::Arg(ast::GenericArg::Type(_) | ast::GenericArg::Const(_)) => true,\n         });\n         let args = data\n             .args"}, {"sha": "592d3bf2e052f5001c984a31647e5dd629f251c1", "filename": "src/librustc_ast_passes/ast_validation.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2ddc35997cd7147f007943e50ef5f942d20ad7c7/src%2Flibrustc_ast_passes%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ddc35997cd7147f007943e50ef5f942d20ad7c7/src%2Flibrustc_ast_passes%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_passes%2Fast_validation.rs?ref=2ddc35997cd7147f007943e50ef5f942d20ad7c7", "patch": "@@ -660,12 +660,8 @@ impl<'a> AstValidator<'a> {\n         // ...and then error:\n         self.err_handler()\n             .struct_span_err(\n-                data.span,\n-                \"constraints in a path segment must come after generic arguments\",\n-            )\n-            .span_labels(\n                 misplaced_args,\n-                \"this generic argument must come before the first constraint\",\n+                \"generic arguments must come before the first constraint\",\n             )\n             .span_label(first.unwrap(), \"the first constraint is provided here\")\n             .emit();"}, {"sha": "9fa7bc027b87800379b3a0cad54b3dba6a897603", "filename": "src/librustc_parse/parser/path.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2ddc35997cd7147f007943e50ef5f942d20ad7c7/src%2Flibrustc_parse%2Fparser%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ddc35997cd7147f007943e50ef5f942d20ad7c7/src%2Flibrustc_parse%2Fparser%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fpath.rs?ref=2ddc35997cd7147f007943e50ef5f942d20ad7c7", "patch": "@@ -439,8 +439,8 @@ impl<'a> Parser<'a> {\n             Some(GenericArg::Type(ty)) => return Ok(ty),\n             Some(GenericArg::Const(expr)) => {\n                 self.struct_span_err(span, \"cannot constrain an associated constant to a value\")\n-                    .span_label(ident.span, \"the value constrains this associated constant\")\n-                    .span_label(expr.value.span, \"the value is given in this expression\")\n+                    .span_label(ident.span, \"this associated constant...\")\n+                    .span_label(expr.value.span, \"...cannot be constrained to this value\")\n                     .emit();\n             }\n             Some(GenericArg::Lifetime(lt)) => {\n@@ -450,15 +450,17 @@ impl<'a> Parser<'a> {\n                     .emit();\n             }\n             None => {\n-                self.struct_span_err(span, \"missing type to the right of `=`\")\n+                let after_eq = eq.shrink_to_hi();\n+                let before_next = self.token.span.shrink_to_lo();\n+                self.struct_span_err(after_eq.to(before_next), \"missing type to the right of `=`\")\n                     .span_suggestion(\n-                        span,\n+                        self.sess.source_map().next_point(eq).to(before_next),\n                         \"to constrain the associated type, add a type after `=`\",\n-                        format!(\"{} = TheType\", ident),\n+                        \" TheType\".to_string(),\n                         Applicability::HasPlaceholders,\n                     )\n                     .span_suggestion(\n-                        eq,\n+                        eq.to(before_next),\n                         &format!(\"remove the `=` if `{}` is a type\", ident),\n                         String::new(),\n                         Applicability::MaybeIncorrect,"}, {"sha": "1379eeb58e6e861c87fc0c175c415739ad097d9d", "filename": "src/test/ui/parser/issue-32214.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ddc35997cd7147f007943e50ef5f942d20ad7c7/src%2Ftest%2Fui%2Fparser%2Fissue-32214.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ddc35997cd7147f007943e50ef5f942d20ad7c7/src%2Ftest%2Fui%2Fparser%2Fissue-32214.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-32214.rs?ref=2ddc35997cd7147f007943e50ef5f942d20ad7c7", "patch": "@@ -1,6 +1,6 @@\n trait Trait<T> { type Item; }\n \n pub fn test<W, I: Trait<Item=(), W> >() {}\n-//~^ ERROR constraints in a path segment must come after generic arguments\n+//~^ ERROR generic arguments must come before the first constraint\n \n fn main() { }"}, {"sha": "d25d3a0963304271789c423509f6a9516acf0216", "filename": "src/test/ui/parser/issue-32214.stderr", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2ddc35997cd7147f007943e50ef5f942d20ad7c7/src%2Ftest%2Fui%2Fparser%2Fissue-32214.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ddc35997cd7147f007943e50ef5f942d20ad7c7/src%2Ftest%2Fui%2Fparser%2Fissue-32214.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-32214.stderr?ref=2ddc35997cd7147f007943e50ef5f942d20ad7c7", "patch": "@@ -1,10 +1,9 @@\n-error: constraints in a path segment must come after generic arguments\n-  --> $DIR/issue-32214.rs:3:24\n+error: generic arguments must come before the first constraint\n+  --> $DIR/issue-32214.rs:3:34\n    |\n LL | pub fn test<W, I: Trait<Item=(), W> >() {}\n-   |                        ^-------^^-^\n-   |                         |        |\n-   |                         |        this generic argument must come before the first constraint\n+   |                         -------  ^\n+   |                         |\n    |                         the first constraint is provided here\n \n error: aborting due to previous error"}, {"sha": "c6733b33faa58072d1cff7a65dba2549687aec34", "filename": "src/test/ui/parser/recover-assoc-const-constraint.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2ddc35997cd7147f007943e50ef5f942d20ad7c7/src%2Ftest%2Fui%2Fparser%2Frecover-assoc-const-constraint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ddc35997cd7147f007943e50ef5f942d20ad7c7/src%2Ftest%2Fui%2Fparser%2Frecover-assoc-const-constraint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Frecover-assoc-const-constraint.stderr?ref=2ddc35997cd7147f007943e50ef5f942d20ad7c7", "patch": "@@ -4,17 +4,17 @@ error: cannot constrain an associated constant to a value\n LL |     bar::<Item = 42>();\n    |           ----^^^--\n    |           |      |\n-   |           |      the value is given in this expression\n-   |           the value constrains this associated constant\n+   |           |      ...cannot be constrained to this value\n+   |           this associated constant...\n \n error: cannot constrain an associated constant to a value\n   --> $DIR/recover-assoc-const-constraint.rs:4:11\n    |\n LL |     bar::<Item = { 42 }>();\n    |           ----^^^------\n    |           |      |\n-   |           |      the value is given in this expression\n-   |           the value constrains this associated constant\n+   |           |      ...cannot be constrained to this value\n+   |           this associated constant...\n \n error: aborting due to 2 previous errors\n "}, {"sha": "4b42c44dc64e57d80ead836170bcec9b3b20b0d7", "filename": "src/test/ui/parser/recover-assoc-eq-missing-term.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ddc35997cd7147f007943e50ef5f942d20ad7c7/src%2Ftest%2Fui%2Fparser%2Frecover-assoc-eq-missing-term.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ddc35997cd7147f007943e50ef5f942d20ad7c7/src%2Ftest%2Fui%2Fparser%2Frecover-assoc-eq-missing-term.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Frecover-assoc-eq-missing-term.rs?ref=2ddc35997cd7147f007943e50ef5f942d20ad7c7", "patch": "@@ -1,6 +1,6 @@\n #[cfg(FALSE)]\n fn syntax() {\n-    bar::<Item = >(); //~ ERROR missing type to the right of `=`\n+    bar::<Item =   >(); //~ ERROR missing type to the right of `=`\n }\n \n fn main() {}"}, {"sha": "6e41e139220aeb058a5150a1f3b77e417cb7e367", "filename": "src/test/ui/parser/recover-assoc-eq-missing-term.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2ddc35997cd7147f007943e50ef5f942d20ad7c7/src%2Ftest%2Fui%2Fparser%2Frecover-assoc-eq-missing-term.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ddc35997cd7147f007943e50ef5f942d20ad7c7/src%2Ftest%2Fui%2Fparser%2Frecover-assoc-eq-missing-term.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Frecover-assoc-eq-missing-term.stderr?ref=2ddc35997cd7147f007943e50ef5f942d20ad7c7", "patch": "@@ -1,16 +1,16 @@\n error: missing type to the right of `=`\n-  --> $DIR/recover-assoc-eq-missing-term.rs:3:11\n+  --> $DIR/recover-assoc-eq-missing-term.rs:3:17\n    |\n-LL |     bar::<Item = >();\n-   |           ^^^^^^\n+LL |     bar::<Item =   >();\n+   |                 ^^^\n    |\n help: to constrain the associated type, add a type after `=`\n    |\n-LL |     bar::<Item = TheType >();\n-   |           ^^^^^^^^^^^^^^\n+LL |     bar::<Item = TheType>();\n+   |                  ^^^^^^^\n help: remove the `=` if `Item` is a type\n    |\n-LL |     bar::<Item  >();\n+LL |     bar::<Item >();\n    |               --\n \n error: aborting due to previous error"}, {"sha": "27930626a6209c52f601e5b316d65229a8bbb5bb", "filename": "src/test/ui/suggestions/suggest-move-types.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/2ddc35997cd7147f007943e50ef5f942d20ad7c7/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ddc35997cd7147f007943e50ef5f942d20ad7c7/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-types.rs?ref=2ddc35997cd7147f007943e50ef5f942d20ad7c7", "patch": "@@ -24,29 +24,29 @@ trait ThreeWithLifetime<'a, 'b, 'c, T, U, V> {\n }\n \n struct A<T, M: One<A=(), T>> {\n-//~^ ERROR constraints in a path segment must come after generic arguments\n+//~^ ERROR generic arguments must come before the first constraint\n     m: M,\n     t: T,\n }\n \n \n struct Al<'a, T, M: OneWithLifetime<A=(), T, 'a>> {\n-//~^ ERROR constraints in a path segment must come after generic arguments\n+//~^ ERROR generic arguments must come before the first constraint\n //~^^ ERROR type provided when a lifetime was expected\n     m: M,\n     t: &'a T,\n }\n \n struct B<T, U, V, M: Three<A=(), B=(), C=(), T, U, V>> {\n-//~^ ERROR constraints in a path segment must come after generic arguments\n+//~^ ERROR generic arguments must come before the first constraint\n     m: M,\n     t: T,\n     u: U,\n     v: V,\n }\n \n struct Bl<'a, 'b, 'c, T, U, V, M: ThreeWithLifetime<A=(), B=(), C=(), T, U, V, 'a, 'b, 'c>> {\n-//~^ ERROR constraints in a path segment must come after generic arguments\n+//~^ ERROR generic arguments must come before the first constraint\n //~^^ ERROR type provided when a lifetime was expected\n     m: M,\n     t: &'a T,\n@@ -55,15 +55,15 @@ struct Bl<'a, 'b, 'c, T, U, V, M: ThreeWithLifetime<A=(), B=(), C=(), T, U, V, '\n }\n \n struct C<T, U, V, M: Three<T, A=(), B=(), C=(), U, V>> {\n-//~^ ERROR constraints in a path segment must come after generic arguments\n+//~^ ERROR generic arguments must come before the first constraint\n     m: M,\n     t: T,\n     u: U,\n     v: V,\n }\n \n struct Cl<'a, 'b, 'c, T, U, V, M: ThreeWithLifetime<T, 'a, A=(), B=(), C=(), U, 'b, V, 'c>> {\n-//~^ ERROR constraints in a path segment must come after generic arguments\n+//~^ ERROR generic arguments must come before the first constraint\n //~^^ ERROR lifetime provided when a type was expected\n     m: M,\n     t: &'a T,\n@@ -72,15 +72,15 @@ struct Cl<'a, 'b, 'c, T, U, V, M: ThreeWithLifetime<T, 'a, A=(), B=(), C=(), U,\n }\n \n struct D<T, U, V, M: Three<T, A=(), B=(), U, C=(), V>> {\n-//~^ ERROR constraints in a path segment must come after generic arguments\n+//~^ ERROR generic arguments must come before the first constraint\n     m: M,\n     t: T,\n     u: U,\n     v: V,\n }\n \n struct Dl<'a, 'b, 'c, T, U, V, M: ThreeWithLifetime<T, 'a, A=(), B=(), U, 'b, C=(), V, 'c>> {\n-//~^ ERROR constraints in a path segment must come after generic arguments\n+//~^ ERROR generic arguments must come before the first constraint\n //~^^ ERROR lifetime provided when a type was expected\n     m: M,\n     t: &'a T,"}, {"sha": "a0a8c3fc3ba58fdef20693e907a48144d293e105", "filename": "src/test/ui/suggestions/suggest-move-types.stderr", "status": "modified", "additions": 32, "deletions": 56, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/2ddc35997cd7147f007943e50ef5f942d20ad7c7/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2ddc35997cd7147f007943e50ef5f942d20ad7c7/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-types.stderr?ref=2ddc35997cd7147f007943e50ef5f942d20ad7c7", "patch": "@@ -1,89 +1,65 @@\n-error: constraints in a path segment must come after generic arguments\n-  --> $DIR/suggest-move-types.rs:26:19\n+error: generic arguments must come before the first constraint\n+  --> $DIR/suggest-move-types.rs:26:26\n    |\n LL | struct A<T, M: One<A=(), T>> {\n-   |                   ^----^^-^\n-   |                    |     |\n-   |                    |     this generic argument must come before the first constraint\n+   |                    ----  ^\n+   |                    |\n    |                    the first constraint is provided here\n \n-error: constraints in a path segment must come after generic arguments\n-  --> $DIR/suggest-move-types.rs:33:36\n+error: generic arguments must come before the first constraint\n+  --> $DIR/suggest-move-types.rs:33:43\n    |\n LL | struct Al<'a, T, M: OneWithLifetime<A=(), T, 'a>> {\n-   |                                    ^----^^-^^--^\n-   |                                     |     |  |\n-   |                                     |     |  this generic argument must come before the first constraint\n-   |                                     |     this generic argument must come before the first constraint\n+   |                                     ----  ^  ^^\n+   |                                     |\n    |                                     the first constraint is provided here\n \n-error: constraints in a path segment must come after generic arguments\n-  --> $DIR/suggest-move-types.rs:40:27\n+error: generic arguments must come before the first constraint\n+  --> $DIR/suggest-move-types.rs:40:46\n    |\n LL | struct B<T, U, V, M: Three<A=(), B=(), C=(), T, U, V>> {\n-   |                           ^----^^^^^^^^^^^^^^-^^-^^-^\n-   |                            |                 |  |  |\n-   |                            |                 |  |  this generic argument must come before the first constraint\n-   |                            |                 |  this generic argument must come before the first constraint\n-   |                            |                 this generic argument must come before the first constraint\n+   |                            ----              ^  ^  ^\n+   |                            |\n    |                            the first constraint is provided here\n \n-error: constraints in a path segment must come after generic arguments\n-  --> $DIR/suggest-move-types.rs:48:52\n+error: generic arguments must come before the first constraint\n+  --> $DIR/suggest-move-types.rs:48:71\n    |\n LL | struct Bl<'a, 'b, 'c, T, U, V, M: ThreeWithLifetime<A=(), B=(), C=(), T, U, V, 'a, 'b, 'c>> {\n-   |                                                    ^----^^^^^^^^^^^^^^-^^-^^-^^--^^--^^--^\n-   |                                                     |                 |  |  |  |   |   |\n-   |                                                     |                 |  |  |  |   |   this generic argument must come before the first constraint\n-   |                                                     |                 |  |  |  |   this generic argument must come before the first constraint\n-   |                                                     |                 |  |  |  this generic argument must come before the first constraint\n-   |                                                     |                 |  |  this generic argument must come before the first constraint\n-   |                                                     |                 |  this generic argument must come before the first constraint\n-   |                                                     |                 this generic argument must come before the first constraint\n+   |                                                     ----              ^  ^  ^  ^^  ^^  ^^\n+   |                                                     |\n    |                                                     the first constraint is provided here\n \n-error: constraints in a path segment must come after generic arguments\n-  --> $DIR/suggest-move-types.rs:57:27\n+error: generic arguments must come before the first constraint\n+  --> $DIR/suggest-move-types.rs:57:49\n    |\n LL | struct C<T, U, V, M: Three<T, A=(), B=(), C=(), U, V>> {\n-   |                           ^^^^----^^^^^^^^^^^^^^-^^-^\n-   |                               |                 |  |\n-   |                               |                 |  this generic argument must come before the first constraint\n-   |                               |                 this generic argument must come before the first constraint\n+   |                               ----              ^  ^\n+   |                               |\n    |                               the first constraint is provided here\n \n-error: constraints in a path segment must come after generic arguments\n-  --> $DIR/suggest-move-types.rs:65:52\n+error: generic arguments must come before the first constraint\n+  --> $DIR/suggest-move-types.rs:65:78\n    |\n LL | struct Cl<'a, 'b, 'c, T, U, V, M: ThreeWithLifetime<T, 'a, A=(), B=(), C=(), U, 'b, V, 'c>> {\n-   |                                                    ^^^^^^^^----^^^^^^^^^^^^^^-^^--^^-^^--^\n-   |                                                            |                 |  |   |  |\n-   |                                                            |                 |  |   |  this generic argument must come before the first constraint\n-   |                                                            |                 |  |   this generic argument must come before the first constraint\n-   |                                                            |                 |  this generic argument must come before the first constraint\n-   |                                                            |                 this generic argument must come before the first constraint\n+   |                                                            ----              ^  ^^  ^  ^^\n+   |                                                            |\n    |                                                            the first constraint is provided here\n \n-error: constraints in a path segment must come after generic arguments\n-  --> $DIR/suggest-move-types.rs:74:27\n+error: generic arguments must come before the first constraint\n+  --> $DIR/suggest-move-types.rs:74:43\n    |\n LL | struct D<T, U, V, M: Three<T, A=(), B=(), U, C=(), V>> {\n-   |                           ^^^^----^^^^^^^^-^^^^^^^^-^\n-   |                               |           |        |\n-   |                               |           |        this generic argument must come before the first constraint\n-   |                               |           this generic argument must come before the first constraint\n+   |                               ----        ^        ^\n+   |                               |\n    |                               the first constraint is provided here\n \n-error: constraints in a path segment must come after generic arguments\n-  --> $DIR/suggest-move-types.rs:82:52\n+error: generic arguments must come before the first constraint\n+  --> $DIR/suggest-move-types.rs:82:72\n    |\n LL | struct Dl<'a, 'b, 'c, T, U, V, M: ThreeWithLifetime<T, 'a, A=(), B=(), U, 'b, C=(), V, 'c>> {\n-   |                                                    ^^^^^^^^----^^^^^^^^-^^--^^^^^^^^-^^--^\n-   |                                                            |           |  |         |  |\n-   |                                                            |           |  |         |  this generic argument must come before the first constraint\n-   |                                                            |           |  |         this generic argument must come before the first constraint\n-   |                                                            |           |  this generic argument must come before the first constraint\n-   |                                                            |           this generic argument must come before the first constraint\n+   |                                                            ----        ^  ^^        ^  ^^\n+   |                                                            |\n    |                                                            the first constraint is provided here\n \n error[E0747]: type provided when a lifetime was expected"}]}