{"sha": "50a908121620edbef02d124e8d7d94943c50d4a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwYTkwODEyMTYyMGVkYmVmMDJkMTI0ZThkN2Q5NDk0M2M1MGQ0YTE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-06-25T04:06:32Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-06-25T04:06:32Z"}, "message": "Auto merge of #85640 - bjorn3:custom_ice_hook, r=jackh726\n\nAllow changing the bug report url for the ice hook\n\ncc https://github.com/bjorn3/rustc_codegen_cranelift/issues/1174", "tree": {"sha": "2fffa5a217c9b10d7d5dc396b08a92e8512edd60", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2fffa5a217c9b10d7d5dc396b08a92e8512edd60"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50a908121620edbef02d124e8d7d94943c50d4a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50a908121620edbef02d124e8d7d94943c50d4a1", "html_url": "https://github.com/rust-lang/rust/commit/50a908121620edbef02d124e8d7d94943c50d4a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50a908121620edbef02d124e8d7d94943c50d4a1/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "079aa837d205960592ef479387fb272cba16e2da", "url": "https://api.github.com/repos/rust-lang/rust/commits/079aa837d205960592ef479387fb272cba16e2da", "html_url": "https://github.com/rust-lang/rust/commit/079aa837d205960592ef479387fb272cba16e2da"}, {"sha": "0bc60c09701a0d5c61875bdfceb11f1418ac7f77", "url": "https://api.github.com/repos/rust-lang/rust/commits/0bc60c09701a0d5c61875bdfceb11f1418ac7f77", "html_url": "https://github.com/rust-lang/rust/commit/0bc60c09701a0d5c61875bdfceb11f1418ac7f77"}], "stats": {"total": 44, "additions": 34, "deletions": 10}, "files": [{"sha": "2643fae0a810af7d3630ed01e4ae704c6b42f173", "filename": "compiler/rustc_codegen_cranelift/src/bin/cg_clif.rs", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/50a908121620edbef02d124e8d7d94943c50d4a1/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fbin%2Fcg_clif.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a908121620edbef02d124e8d7d94943c50d4a1/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fbin%2Fcg_clif.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fbin%2Fcg_clif.rs?ref=50a908121620edbef02d124e8d7d94943c50d4a1", "patch": "@@ -1,17 +1,38 @@\n-#![feature(rustc_private)]\n+#![feature(rustc_private, once_cell)]\n \n extern crate rustc_data_structures;\n extern crate rustc_driver;\n extern crate rustc_interface;\n extern crate rustc_session;\n extern crate rustc_target;\n \n+use std::panic;\n+use std::lazy::SyncLazy;\n+\n use rustc_data_structures::profiling::{get_resident_set_size, print_time_passes_entry};\n use rustc_interface::interface;\n use rustc_session::config::ErrorOutputType;\n use rustc_session::early_error;\n use rustc_target::spec::PanicStrategy;\n \n+const BUG_REPORT_URL: &str = \"https://github.com/bjorn3/rustc_codegen_cranelift/issues/new\";\n+\n+static DEFAULT_HOOK: SyncLazy<Box<dyn Fn(&panic::PanicInfo<'_>) + Sync + Send + 'static>> =\n+    SyncLazy::new(|| {\n+        let hook = panic::take_hook();\n+        panic::set_hook(Box::new(|info| {\n+            // Invoke the default handler, which prints the actual panic message and optionally a backtrace\n+            (*DEFAULT_HOOK)(info);\n+\n+            // Separate the output with an empty line\n+            eprintln!();\n+\n+            // Print the ICE message\n+            rustc_driver::report_ice(info, BUG_REPORT_URL);\n+        }));\n+        hook\n+    });\n+\n #[derive(Default)]\n pub struct CraneliftPassesCallbacks {\n     time_passes: bool,\n@@ -37,7 +58,7 @@ fn main() {\n     let start_rss = get_resident_set_size();\n     rustc_driver::init_rustc_env_logger();\n     let mut callbacks = CraneliftPassesCallbacks::default();\n-    rustc_driver::install_ice_hook();\n+    SyncLazy::force(&DEFAULT_HOOK); // Install ice hook\n     let exit_code = rustc_driver::catch_with_exit_code(|| {\n         let args = std::env::args_os()\n             .enumerate()"}, {"sha": "35a6495946ff0a67e9da6c778c7bd8de3c7484a7", "filename": "compiler/rustc_driver/src/lib.rs", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/50a908121620edbef02d124e8d7d94943c50d4a1/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a908121620edbef02d124e8d7d94943c50d4a1/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Flib.rs?ref=50a908121620edbef02d124e8d7d94943c50d4a1", "patch": "@@ -1167,23 +1167,26 @@ pub fn catch_with_exit_code(f: impl FnOnce() -> interface::Result<()>) -> i32 {\n static DEFAULT_HOOK: SyncLazy<Box<dyn Fn(&panic::PanicInfo<'_>) + Sync + Send + 'static>> =\n     SyncLazy::new(|| {\n         let hook = panic::take_hook();\n-        panic::set_hook(Box::new(|info| report_ice(info, BUG_REPORT_URL)));\n+        panic::set_hook(Box::new(|info| {\n+            // Invoke the default handler, which prints the actual panic message and optionally a backtrace\n+            (*DEFAULT_HOOK)(info);\n+\n+            // Separate the output with an empty line\n+            eprintln!();\n+\n+            // Print the ICE message\n+            report_ice(info, BUG_REPORT_URL);\n+        }));\n         hook\n     });\n \n-/// Prints the ICE message, including backtrace and query stack.\n+/// Prints the ICE message, including query stack, but without backtrace.\n ///\n /// The message will point the user at `bug_report_url` to report the ICE.\n ///\n /// When `install_ice_hook` is called, this function will be called as the panic\n /// hook.\n pub fn report_ice(info: &panic::PanicInfo<'_>, bug_report_url: &str) {\n-    // Invoke the default handler, which prints the actual panic message and optionally a backtrace\n-    (*DEFAULT_HOOK)(info);\n-\n-    // Separate the output with an empty line\n-    eprintln!();\n-\n     let emitter = Box::new(rustc_errors::emitter::EmitterWriter::stderr(\n         rustc_errors::ColorConfig::Auto,\n         None,"}]}