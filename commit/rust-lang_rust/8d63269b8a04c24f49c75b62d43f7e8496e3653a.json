{"sha": "8d63269b8a04c24f49c75b62d43f7e8496e3653a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkNjMyNjliOGEwNGMyNGY0OWM3NWI2MmQ0M2Y3ZTg0OTZlMzY1M2E=", "commit": {"author": {"name": "Jonathan Turner", "email": "jonathandturner@users.noreply.github.com", "date": "2016-08-11T13:34:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-11T13:34:00Z"}, "message": "Rollup merge of #35537 - munyari:e0038, r=jonathandturner\n\nUpdate E0038 to the new error format\n\nPart of #35233\n\nAddresses #35500\n\"r? @jonathandturner\n\nThis doesn't compile yet, and I need help. In my naive solution, adding the span label makes our error message a mutable `errors::DiagnosticBuilder` pointer.\n\n```bash\npython src/bootstrap/bootstrap.py --step check-cfail E0038 --stage 1\n```\n\n```\nBuilding stage0 std artifacts (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)\nBuilding stage0 test artifacts (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)\nBuilding stage0 compiler artifacts (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)\n   Compiling rustc v0.0.0 (file:///home/nash/code/rust/src/librustc)\nsrc/librustc/traits/error_reporting.rs:735:9: 735:12 error: mismatched types [E0308]\nsrc/librustc/traits/error_reporting.rs:735         err\n                                                   ^~~\nsrc/librustc/traits/error_reporting.rs:735:9: 735:12 help: run `rustc --explain E0308` to see a detailed explanation\nsrc/librustc/traits/error_reporting.rs:735:9: 735:12 note: expected type `core::option::Option<errors::DiagnosticBuilder<'tcx>>`\nsrc/librustc/traits/error_reporting.rs:735:9: 735:12 note:    found type `core::option::Option<&mut errors::DiagnosticBuilder<'_>>`\nerror: aborting due to previous error\nerror: Could not compile `rustc`.\n\nTo learn more, run the command again with --verbose.\n\ncommand did not execute successfully: \"/home/nash/code/rust/build/x86_64-unknown-linux-gnu/stage0/bin/cargo\" \"build\" \"-j\" \"4\" \"--target\" \"x86_64-unknown-linux-gnu\" \"--release\" \"--features\" \" jemalloc\" \"--manifest-path\" \"/home/nash/code/rust/src/rustc/Cargo.toml\"\nexpected success, got: exit code: 101\n```", "tree": {"sha": "6b4010236d165a7522141447c9f8d0b66cc41949", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b4010236d165a7522141447c9f8d0b66cc41949"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d63269b8a04c24f49c75b62d43f7e8496e3653a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d63269b8a04c24f49c75b62d43f7e8496e3653a", "html_url": "https://github.com/rust-lang/rust/commit/8d63269b8a04c24f49c75b62d43f7e8496e3653a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d63269b8a04c24f49c75b62d43f7e8496e3653a/comments", "author": {"login": "jonathandturner", "id": 111457284, "node_id": "O_kgDOBqS0BA", "avatar_url": "https://avatars.githubusercontent.com/u/111457284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathandturner", "html_url": "https://github.com/jonathandturner", "followers_url": "https://api.github.com/users/jonathandturner/followers", "following_url": "https://api.github.com/users/jonathandturner/following{/other_user}", "gists_url": "https://api.github.com/users/jonathandturner/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathandturner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathandturner/subscriptions", "organizations_url": "https://api.github.com/users/jonathandturner/orgs", "repos_url": "https://api.github.com/users/jonathandturner/repos", "events_url": "https://api.github.com/users/jonathandturner/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathandturner/received_events", "type": "Organization", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "294ac7b561600f257284e30a0215b20d2eaf3193", "url": "https://api.github.com/repos/rust-lang/rust/commits/294ac7b561600f257284e30a0215b20d2eaf3193", "html_url": "https://github.com/rust-lang/rust/commit/294ac7b561600f257284e30a0215b20d2eaf3193"}, {"sha": "20ea8cba53d63ae7183634b4a26986df87798107", "url": "https://api.github.com/repos/rust-lang/rust/commits/20ea8cba53d63ae7183634b4a26986df87798107", "html_url": "https://github.com/rust-lang/rust/commit/20ea8cba53d63ae7183634b4a26986df87798107"}], "stats": {"total": 31, "additions": 24, "deletions": 7}, "files": [{"sha": "4725272d2b69ae51d762663297639665d3c46d3a", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8d63269b8a04c24f49c75b62d43f7e8496e3653a/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d63269b8a04c24f49c75b62d43f7e8496e3653a/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=8d63269b8a04c24f49c75b62d43f7e8496e3653a", "patch": "@@ -670,10 +670,15 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n         let mut err = match warning_node_id {\n             Some(_) => None,\n             None => {\n-                Some(struct_span_err!(\n-                    self.sess, span, E0038,\n-                    \"the trait `{}` cannot be made into an object\",\n-                    self.item_path_str(trait_def_id)))\n+                let trait_str = self.item_path_str(trait_def_id);\n+                let mut db = struct_span_err!(\n+                            self.sess, span, E0038,\n+                            \"the trait `{}` cannot be made into an object\",\n+                            trait_str);\n+                db.span_label(span,\n+                              &format!(\"the trait `{}` cannot be made \\\n+                              into an object\", trait_str));\n+                Some(db)\n             }\n         };\n "}, {"sha": "6cf3f1ebf19e4526d1c8b6b37fe6af2a9b4bd894", "filename": "src/test/compile-fail/E0038.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8d63269b8a04c24f49c75b62d43f7e8496e3653a/src%2Ftest%2Fcompile-fail%2FE0038.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d63269b8a04c24f49c75b62d43f7e8496e3653a/src%2Ftest%2Fcompile-fail%2FE0038.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0038.rs?ref=8d63269b8a04c24f49c75b62d43f7e8496e3653a", "patch": "@@ -12,7 +12,10 @@ trait Trait {\n     fn foo(&self) -> Self;\n }\n \n-fn call_foo(x: Box<Trait>) { //~ ERROR E0038\n+fn call_foo(x: Box<Trait>) {\n+    //~^ ERROR E0038\n+    //~| NOTE the trait `Trait` cannot be made into an object\n+    //~| NOTE method `foo` references the `Self` type in its arguments or return type\n     let y = x.foo();\n }\n "}, {"sha": "3e44053875552cbf8fbc194c2939969c89a65365", "filename": "src/test/compile-fail/issue-20692.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8d63269b8a04c24f49c75b62d43f7e8496e3653a/src%2Ftest%2Fcompile-fail%2Fissue-20692.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d63269b8a04c24f49c75b62d43f7e8496e3653a/src%2Ftest%2Fcompile-fail%2Fissue-20692.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-20692.rs?ref=8d63269b8a04c24f49c75b62d43f7e8496e3653a", "patch": "@@ -15,10 +15,12 @@ fn f<T: Array>(x: &T) {\n     //~^ ERROR `Array` cannot be made into an object\n     //~| NOTE the trait cannot require that `Self : Sized`\n     //~| NOTE requirements on the impl of `std::ops::CoerceUnsized<&Array>`\n+    //~| NOTE the trait `Array` cannot be made into an object\n     as\n     &Array;\n     //~^ ERROR `Array` cannot be made into an object\n     //~| NOTE the trait cannot require that `Self : Sized`\n+    //~| NOTE the trait `Array` cannot be made into an object\n }\n \n fn main() {}"}, {"sha": "ded685152d49b63c83a0371c41e6cabcc301e369", "filename": "src/test/compile-fail/issue-26056.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8d63269b8a04c24f49c75b62d43f7e8496e3653a/src%2Ftest%2Fcompile-fail%2Fissue-26056.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d63269b8a04c24f49c75b62d43f7e8496e3653a/src%2Ftest%2Fcompile-fail%2Fissue-26056.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-26056.rs?ref=8d63269b8a04c24f49c75b62d43f7e8496e3653a", "patch": "@@ -28,6 +28,7 @@ impl<K> Map for K {\n fn main() {\n     let _ = &()\n         as &Map<Key=u32,MapValue=u32>;\n-    //~^ ERROR the trait `Map` cannot be made into an object\n+    //~^ ERROR E0038\n     //~| NOTE the trait cannot use `Self` as a type parameter\n+    //~| NOTE the trait `Map` cannot be made into an object\n }"}, {"sha": "6174d45b898d6971e00405c141930ba98590622c", "filename": "src/test/compile-fail/object-safety-generics.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8d63269b8a04c24f49c75b62d43f7e8496e3653a/src%2Ftest%2Fcompile-fail%2Fobject-safety-generics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d63269b8a04c24f49c75b62d43f7e8496e3653a/src%2Ftest%2Fcompile-fail%2Fobject-safety-generics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fobject-safety-generics.rs?ref=8d63269b8a04c24f49c75b62d43f7e8496e3653a", "patch": "@@ -24,12 +24,14 @@ trait Quux {\n fn make_bar<T:Bar>(t: &T) -> &Bar {\n         //~^ ERROR E0038\n         //~| NOTE method `bar` has generic type parameters\n+        //~| NOTE the trait `Bar` cannot be made into an object\n     t\n }\n \n fn make_bar_explicit<T:Bar>(t: &T) -> &Bar {\n     //~^ ERROR E0038\n-    //~^^ NOTE method `bar` has generic type parameters\n+    //~| NOTE method `bar` has generic type parameters\n+    //~| NOTE the trait `Bar` cannot be made into an object\n     t as &Bar\n }\n "}, {"sha": "d85614fa5b538845359fa196638ff58dea68f82e", "filename": "src/test/compile-fail/object-safety-mentions-Self.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8d63269b8a04c24f49c75b62d43f7e8496e3653a/src%2Ftest%2Fcompile-fail%2Fobject-safety-mentions-Self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d63269b8a04c24f49c75b62d43f7e8496e3653a/src%2Ftest%2Fcompile-fail%2Fobject-safety-mentions-Self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fobject-safety-mentions-Self.rs?ref=8d63269b8a04c24f49c75b62d43f7e8496e3653a", "patch": "@@ -27,12 +27,14 @@ trait Quux {\n fn make_bar<T:Bar>(t: &T) -> &Bar {\n         //~^ ERROR E0038\n         //~| NOTE method `bar` references the `Self` type in its arguments or return type\n+        //~| NOTE the trait `Bar` cannot be made into an object\n     loop { }\n }\n \n fn make_baz<T:Baz>(t: &T) -> &Baz {\n         //~^ ERROR E0038\n         //~| NOTE method `bar` references the `Self` type in its arguments or return type\n+        //~| NOTE the trait `Baz` cannot be made into an object\n     t\n }\n "}, {"sha": "accd7fa87ac29bf435af31c3f2307f7995625b61", "filename": "src/test/compile-fail/object-safety-sized.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8d63269b8a04c24f49c75b62d43f7e8496e3653a/src%2Ftest%2Fcompile-fail%2Fobject-safety-sized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d63269b8a04c24f49c75b62d43f7e8496e3653a/src%2Ftest%2Fcompile-fail%2Fobject-safety-sized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fobject-safety-sized.rs?ref=8d63269b8a04c24f49c75b62d43f7e8496e3653a", "patch": "@@ -18,6 +18,7 @@ trait Bar : Sized {\n fn make_bar<T:Bar>(t: &T) -> &Bar {\n         //~^ ERROR E0038\n         //~| NOTE the trait cannot require that `Self : Sized`\n+        //~| NOTE the trait `Bar` cannot be made into an object\n     t\n }\n "}, {"sha": "74d1ad62f14c3be3fb4d8c0d0c21bb4a77c652e7", "filename": "src/test/compile-fail/object-safety-supertrait-mentions-Self.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8d63269b8a04c24f49c75b62d43f7e8496e3653a/src%2Ftest%2Fcompile-fail%2Fobject-safety-supertrait-mentions-Self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d63269b8a04c24f49c75b62d43f7e8496e3653a/src%2Ftest%2Fcompile-fail%2Fobject-safety-supertrait-mentions-Self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fobject-safety-supertrait-mentions-Self.rs?ref=8d63269b8a04c24f49c75b62d43f7e8496e3653a", "patch": "@@ -25,6 +25,7 @@ fn make_bar<T:Bar<u32>>(t: &T) -> &Bar<u32> {\n fn make_baz<T:Baz>(t: &T) -> &Baz {\n     //~^ ERROR E0038\n     //~| NOTE the trait cannot use `Self` as a type parameter in the supertrait listing\n+    //~| NOTE the trait `Baz` cannot be made into an object\n     t\n }\n "}]}