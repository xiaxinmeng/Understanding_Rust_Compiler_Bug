{"sha": "5b3016134fef93d9bed343bb15da837acf50b635", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViMzAxNjEzNGZlZjkzZDliZWQzNDNiYjE1ZGE4MzdhY2Y1MGI2MzU=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-09-23T19:33:45Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-09-23T19:56:23Z"}, "message": "use array::from_ref for slices", "tree": {"sha": "e2d20f0b6e70b9c46ecb34399e0426d009cc2ec9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2d20f0b6e70b9c46ecb34399e0426d009cc2ec9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b3016134fef93d9bed343bb15da837acf50b635", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b3016134fef93d9bed343bb15da837acf50b635", "html_url": "https://github.com/rust-lang/rust/commit/5b3016134fef93d9bed343bb15da837acf50b635", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b3016134fef93d9bed343bb15da837acf50b635/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed97b421059d25a86b2f947734a8ae366b68f473", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed97b421059d25a86b2f947734a8ae366b68f473", "html_url": "https://github.com/rust-lang/rust/commit/ed97b421059d25a86b2f947734a8ae366b68f473"}], "stats": {"total": 13, "additions": 3, "deletions": 10}, "files": [{"sha": "09209306c9d0f75eb08706e68e89d2b36e62ecaa", "filename": "library/core/src/slice/raw.rs", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/5b3016134fef93d9bed343bb15da837acf50b635/library%2Fcore%2Fsrc%2Fslice%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b3016134fef93d9bed343bb15da837acf50b635/library%2Fcore%2Fsrc%2Fslice%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fraw.rs?ref=5b3016134fef93d9bed343bb15da837acf50b635", "patch": "@@ -1,5 +1,6 @@\n //! Free functions to create `&[T]` and `&mut [T]`.\n \n+use crate::array;\n use crate::intrinsics::is_aligned_and_not_null;\n use crate::mem;\n use crate::ptr;\n@@ -140,19 +141,11 @@ pub unsafe fn from_raw_parts_mut<'a, T>(data: *mut T, len: usize) -> &'a mut [T]\n /// Converts a reference to T into a slice of length 1 (without copying).\n #[stable(feature = \"from_ref\", since = \"1.28.0\")]\n pub fn from_ref<T>(s: &T) -> &[T] {\n-    // SAFETY: a reference is guaranteed to be valid for reads. The returned\n-    // reference cannot be mutated as it is an immutable reference.\n-    // `mem::size_of::<T>()` cannot be larger than `isize::MAX`.\n-    // Thus the call to `from_raw_parts` is safe.\n-    unsafe { from_raw_parts(s, 1) }\n+    array::from_ref(s)\n }\n \n /// Converts a reference to T into a slice of length 1 (without copying).\n #[stable(feature = \"from_ref\", since = \"1.28.0\")]\n pub fn from_mut<T>(s: &mut T) -> &mut [T] {\n-    // SAFETY: a mutable reference is guaranteed to be valid for writes.\n-    // The reference cannot be accessed by another pointer as it is an mutable reference.\n-    // `mem::size_of::<T>()` cannot be larger than `isize::MAX`.\n-    // Thus the call to `from_raw_parts_mut` is safe.\n-    unsafe { from_raw_parts_mut(s, 1) }\n+    array::from_mut(s)\n }"}]}