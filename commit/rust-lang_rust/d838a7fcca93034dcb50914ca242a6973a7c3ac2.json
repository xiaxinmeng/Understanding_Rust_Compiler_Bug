{"sha": "d838a7fcca93034dcb50914ca242a6973a7c3ac2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4MzhhN2ZjY2E5MzAzNGRjYjUwOTE0Y2EyNDJhNjk3M2E3YzNhYzI=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-10-12T12:35:07Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-10-13T08:15:46Z"}, "message": "rustc/driver: unwrap_or_else with function calls", "tree": {"sha": "aff1f56252cc375cf677bf52d6d498c163dcc189", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aff1f56252cc375cf677bf52d6d498c163dcc189"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d838a7fcca93034dcb50914ca242a6973a7c3ac2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d838a7fcca93034dcb50914ca242a6973a7c3ac2", "html_url": "https://github.com/rust-lang/rust/commit/d838a7fcca93034dcb50914ca242a6973a7c3ac2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d838a7fcca93034dcb50914ca242a6973a7c3ac2/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c46c4d7135a32cb8c5609ac1042858a4151fbd43", "url": "https://api.github.com/repos/rust-lang/rust/commits/c46c4d7135a32cb8c5609ac1042858a4151fbd43", "html_url": "https://github.com/rust-lang/rust/commit/c46c4d7135a32cb8c5609ac1042858a4151fbd43"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "976a50e9d696ccd840781c829d9b999b3a3de123", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d838a7fcca93034dcb50914ca242a6973a7c3ac2/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d838a7fcca93034dcb50914ca242a6973a7c3ac2/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=d838a7fcca93034dcb50914ca242a6973a7c3ac2", "patch": "@@ -44,7 +44,7 @@ use serialize::json;\n \n use std::any::Any;\n use std::env;\n-use std::ffi::{OsStr, OsString};\n+use std::ffi::OsString;\n use std::fs;\n use std::io::{self, Write};\n use std::iter;\n@@ -1648,14 +1648,14 @@ pub fn build_output_filenames(\n             // \"-\" as input file will cause the parser to read from stdin so we\n             // have to make up a name\n             // We want to toss everything after the final '.'\n-            let dirpath = (*odir).as_ref().cloned().unwrap_or_else(|| PathBuf::new());\n+            let dirpath = (*odir).as_ref().cloned().unwrap_or_default();\n \n             // If a crate name is present, we use it as the link name\n             let stem = sess.opts\n                 .crate_name\n                 .clone()\n                 .or_else(|| attr::find_crate_name(attrs).map(|n| n.to_string()))\n-                .unwrap_or(input.filestem());\n+                .unwrap_or_else(|| input.filestem());\n \n             OutputFilenames {\n                 out_directory: dirpath,\n@@ -1688,13 +1688,11 @@ pub fn build_output_filenames(\n                 sess.warn(\"ignoring -C extra-filename flag due to -o flag\");\n             }\n \n-            let cur_dir = Path::new(\"\");\n-\n             OutputFilenames {\n-                out_directory: out_file.parent().unwrap_or(cur_dir).to_path_buf(),\n+                out_directory: out_file.parent().unwrap_or_else(|| Path::new(\"\")).to_path_buf(),\n                 out_filestem: out_file\n                     .file_stem()\n-                    .unwrap_or(OsStr::new(\"\"))\n+                    .unwrap_or_default()\n                     .to_str()\n                     .unwrap()\n                     .to_string(),"}]}