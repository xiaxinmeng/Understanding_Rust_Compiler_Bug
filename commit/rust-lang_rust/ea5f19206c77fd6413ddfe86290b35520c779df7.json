{"sha": "ea5f19206c77fd6413ddfe86290b35520c779df7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhNWYxOTIwNmM3N2ZkNjQxM2RkZmU4NjI5MGIzNTUyMGM3NzlkZjc=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-07-13T01:08:55Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-07-13T01:09:31Z"}, "message": "Comments only: TODOs to FIXMEs; annotate", "tree": {"sha": "13c7077fb268360c647bfaf423ba624c04eb3608", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13c7077fb268360c647bfaf423ba624c04eb3608"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea5f19206c77fd6413ddfe86290b35520c779df7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea5f19206c77fd6413ddfe86290b35520c779df7", "html_url": "https://github.com/rust-lang/rust/commit/ea5f19206c77fd6413ddfe86290b35520c779df7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea5f19206c77fd6413ddfe86290b35520c779df7/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "407094e39a41ba2a6c69ee9cfaba5f600c5632b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/407094e39a41ba2a6c69ee9cfaba5f600c5632b0", "html_url": "https://github.com/rust-lang/rust/commit/407094e39a41ba2a6c69ee9cfaba5f600c5632b0"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "fda557f15b68220c293fa900d7937586e3a07a87", "filename": "src/libsyntax/ext/pipes/ast_builder.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ea5f19206c77fd6413ddfe86290b35520c779df7/src%2Flibsyntax%2Fext%2Fpipes%2Fast_builder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea5f19206c77fd6413ddfe86290b35520c779df7/src%2Flibsyntax%2Fext%2Fpipes%2Fast_builder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fpipes%2Fast_builder.rs?ref=ea5f19206c77fd6413ddfe86290b35520c779df7", "patch": "@@ -62,7 +62,7 @@ impl ast_builder for ext_ctxt {\n         {mode: ast::infer(self.next_id()),\n          ty: ty,\n          ident: name,\n-         // TODO: should this be the same as the infer id?\n+         // FIXME #2886: should this be the same as the infer id?\n          id: self.next_id()}\n     }\n \n@@ -90,7 +90,7 @@ impl ast_builder for ext_ctxt {\n          output: output,\n          purity: ast::impure_fn,\n          cf: ast::return_val,\n-         // TODO: we'll probably want a variant that does constrained\n+         // FIXME #2886: we'll probably want a variant that does constrained\n          // types.\n          constraints: ~[]}\n     }\n@@ -157,7 +157,7 @@ impl ast_builder for ext_ctxt {\n     }\n \n     fn ty_path(path: @ast::path) -> @ast::ty {\n-        // TODO: make sure the node ids are legal.\n+        // FIXME #2886: make sure the node ids are legal.\n         @{id: self.next_id(),\n           node: ast::ty_path(path, self.next_id()),\n           span: empty_span()}"}, {"sha": "df0c39bb266f111c2e72a9c6fe24bd91129be5d5", "filename": "src/libsyntax/ext/tt/transcribe.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ea5f19206c77fd6413ddfe86290b35520c779df7/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea5f19206c77fd6413ddfe86290b35520c779df7/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs?ref=ea5f19206c77fd6413ddfe86290b35520c779df7", "patch": "@@ -12,7 +12,8 @@ enum tt_frame_up { /* to break a circularity */\n     tt_frame_up(option<tt_frame>)\n }\n \n-/* TODO: figure out how to have a uniquely linked stack, and change to `~` */\n+/* FIXME #2811: figure out how to have a uniquely linked stack, and change to\n+   `~` */\n ///an unzipping of `token_tree`s\n type tt_frame = @{\n     readme: ~[ast::token_tree],\n@@ -185,7 +186,8 @@ fn tt_next_token(&&r: tt_reader) -> {tok: token, sp: span} {\n                     \"attempted to repeat an expression containing no syntax \\\n                      variables matched as repeating at this depth\");\n               }\n-              lis_contradiction(msg) { /* TODO blame macro invoker instead*/\n+              lis_contradiction(msg) { /* FIXME #2887 blame macro invoker\n+                                          instead*/\n                 r.sp_diag.span_fatal(sp, msg);\n               }\n               lis_constraint(len, _) {\n@@ -196,7 +198,8 @@ fn tt_next_token(&&r: tt_reader) -> {tok: token, sp: span} {\n \n                 if len == 0 {\n                     if !zerok {\n-                        r.sp_diag.span_fatal(sp, /* TODO blame invoker */\n+                        r.sp_diag.span_fatal(sp, /* FIXME #2887 blame invoker\n+                                                  */\n                                              \"this must repeat at least \\\n                                               once\");\n                     }\n@@ -206,7 +209,7 @@ fn tt_next_token(&&r: tt_reader) -> {tok: token, sp: span} {\n               }\n             }\n           }\n-          // TODO: think about span stuff here\n+          // FIXME #2887: think about span stuff here\n           tt_interpolate(sp, ident) {\n             alt *lookup_cur_ad(r, ident) {\n               /* sidestep the interpolation tricks for ident because"}, {"sha": "21ae0de60ec4ef41c7f6f0c20133cd0aabfa95d5", "filename": "src/libsyntax/fold.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea5f19206c77fd6413ddfe86290b35520c779df7/src%2Flibsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea5f19206c77fd6413ddfe86290b35520c779df7/src%2Flibsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffold.rs?ref=ea5f19206c77fd6413ddfe86290b35520c779df7", "patch": "@@ -280,7 +280,7 @@ fn noop_fold_item_underscore(i: item_, fld: ast_fold) -> item_ {\n                        /* FIXME (#2543) */ copy methods)\n           }\n       item_mac(m) {\n-        // TODO: we might actually want to do something here.\n+        // FIXME #2888: we might actually want to do something here.\n         item_mac(m)\n       }\n         };"}]}