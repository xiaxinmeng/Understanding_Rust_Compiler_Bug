{"sha": "3118b9fe4288c21dc0b81c90178cea092d0edfaf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxMThiOWZlNDI4OGMyMWRjMGI4MWM5MDE3OGNlYTA5MmQwZWRmYWY=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-08-04T14:25:10Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-08-04T14:25:29Z"}, "message": "Add misssing 'roundf32' and 'roundf64' intrinsics", "tree": {"sha": "f92b226972fdf46f974865586ee0bc337030dc2f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f92b226972fdf46f974865586ee0bc337030dc2f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3118b9fe4288c21dc0b81c90178cea092d0edfaf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAl1G6t4ACgkQtAh+UQ6Y\nsWRG7g//bCBHvHHETrq6d6ymdz4VcDakaq+AWNCCENprJLheUNFcQI2CgRdGzXJN\nDPL9Ba3ANA+pv2XpqCdpH1b71oooNyiXEPhPCTpYAocxvEzN3jBouhUztgAgCNs1\n2oc9BghtgXJY4mVnAWjgCDCIu6Pq04k1dMx97iNKEZodXbTBUEj1HD+8qFK9VpLj\nhwB2hfAhco8f+S5dPdziX7kAu4/9lFf4ygVZCdUHPIb9hKUfYgkqoyVg4kupu/g6\ni8tKu4DgFoafKMY5HkHH38wHQTzqBbIdzDxxVnDrmq2CkYWNK4wYYiy84TF48bAO\nK79wWmLEadLrFDdXzVnDjCPSU9AI5aKx0qMnbPO3qQPzuzR6vpRwFwtbX6G2/mK3\nk0Ky2TcBiqaqfvJjzcEQDxO+dJrGC0sxlvTHKHMC4T5Y7rTfefqooI7wY05fOaka\n7Wm5goaZJDs8oJMycQn5NGxeyO+oYytPw/sE/6Zld3yqkveAjoNQHHQF70kbR13o\nPFLns3wCX7xl6l/xQBSChr3SLxP1dmRCTaQ0dUXTgNEkah9sM+Izcnh/+apKj9kD\nHtaJhE/ktLbZT8Mrpob654COQfAKml/ylv0JQ5aHhDxVAL8f91PcVUQSZuXAk4qI\nIGm52lc07hZR4ba28B39HAQd+RmwApEPBaa1nvrpC8+fsLyFpqo=\n=2Voz\n-----END PGP SIGNATURE-----", "payload": "tree f92b226972fdf46f974865586ee0bc337030dc2f\nparent d82b24422d3778f595731981065873e015bb297b\nauthor Aaron Hill <aa1ronham@gmail.com> 1564928710 -0400\ncommitter Aaron Hill <aa1ronham@gmail.com> 1564928729 -0400\n\nAdd misssing 'roundf32' and 'roundf64' intrinsics\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3118b9fe4288c21dc0b81c90178cea092d0edfaf", "html_url": "https://github.com/rust-lang/rust/commit/3118b9fe4288c21dc0b81c90178cea092d0edfaf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3118b9fe4288c21dc0b81c90178cea092d0edfaf/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d82b24422d3778f595731981065873e015bb297b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d82b24422d3778f595731981065873e015bb297b", "html_url": "https://github.com/rust-lang/rust/commit/d82b24422d3778f595731981065873e015bb297b"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "52a17a92c2edabc84bd236edd439e28575342435", "filename": "src/shims/intrinsics.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3118b9fe4288c21dc0b81c90178cea092d0edfaf/src%2Fshims%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3118b9fe4288c21dc0b81c90178cea092d0edfaf/src%2Fshims%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fintrinsics.rs?ref=3118b9fe4288c21dc0b81c90178cea092d0edfaf", "patch": "@@ -225,7 +225,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             }\n \n             \"sinf32\" | \"fabsf32\" | \"cosf32\" | \"sqrtf32\" | \"expf32\" | \"exp2f32\" | \"logf32\" |\n-            \"log10f32\" | \"log2f32\" | \"floorf32\" | \"ceilf32\" | \"truncf32\" => {\n+            \"log10f32\" | \"log2f32\" | \"floorf32\" | \"ceilf32\" | \"truncf32\" | \"roundf32\" => {\n                 // FIXME: Using host floats.\n                 let f = f32::from_bits(this.read_scalar(args[0])?.to_u32()?);\n                 let f = match intrinsic_name.get() {\n@@ -241,13 +241,14 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                     \"floorf32\" => f.floor(),\n                     \"ceilf32\" => f.ceil(),\n                     \"truncf32\" => f.trunc(),\n+                    \"roundf32\" => f.round(),\n                     _ => bug!(),\n                 };\n                 this.write_scalar(Scalar::from_u32(f.to_bits()), dest)?;\n             }\n \n             \"sinf64\" | \"fabsf64\" | \"cosf64\" | \"sqrtf64\" | \"expf64\" | \"exp2f64\" | \"logf64\" |\n-            \"log10f64\" | \"log2f64\" | \"floorf64\" | \"ceilf64\" | \"truncf64\" => {\n+            \"log10f64\" | \"log2f64\" | \"floorf64\" | \"ceilf64\" | \"truncf64\" | \"roundf64\" => {\n                 // FIXME: Using host floats.\n                 let f = f64::from_bits(this.read_scalar(args[0])?.to_u64()?);\n                 let f = match intrinsic_name.get() {\n@@ -263,6 +264,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                     \"floorf64\" => f.floor(),\n                     \"ceilf64\" => f.ceil(),\n                     \"truncf64\" => f.trunc(),\n+                    \"roundf64\" => f.round(),\n                     _ => bug!(),\n                 };\n                 this.write_scalar(Scalar::from_u64(f.to_bits()), dest)?;"}]}