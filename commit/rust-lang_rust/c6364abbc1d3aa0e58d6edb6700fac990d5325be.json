{"sha": "c6364abbc1d3aa0e58d6edb6700fac990d5325be", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2MzY0YWJiYzFkM2FhMGU1OGQ2ZWRiNjcwMGZhYzk5MGQ1MzI1YmU=", "commit": {"author": {"name": "Tamir Duberstein", "email": "tamird@gmail.com", "date": "2015-04-22T05:10:22Z"}, "committer": {"name": "Tamir Duberstein", "email": "tamird@gmail.com", "date": "2015-04-29T00:52:37Z"}, "message": "#10356: Warnings", "tree": {"sha": "7f0aa252531de1980b927e6a444b12c4f133cb19", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f0aa252531de1980b927e6a444b12c4f133cb19"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c6364abbc1d3aa0e58d6edb6700fac990d5325be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c6364abbc1d3aa0e58d6edb6700fac990d5325be", "html_url": "https://github.com/rust-lang/rust/commit/c6364abbc1d3aa0e58d6edb6700fac990d5325be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c6364abbc1d3aa0e58d6edb6700fac990d5325be/comments", "author": {"login": "tamird", "id": 1535036, "node_id": "MDQ6VXNlcjE1MzUwMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1535036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamird", "html_url": "https://github.com/tamird", "followers_url": "https://api.github.com/users/tamird/followers", "following_url": "https://api.github.com/users/tamird/following{/other_user}", "gists_url": "https://api.github.com/users/tamird/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamird/subscriptions", "organizations_url": "https://api.github.com/users/tamird/orgs", "repos_url": "https://api.github.com/users/tamird/repos", "events_url": "https://api.github.com/users/tamird/events{/privacy}", "received_events_url": "https://api.github.com/users/tamird/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tamird", "id": 1535036, "node_id": "MDQ6VXNlcjE1MzUwMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1535036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamird", "html_url": "https://github.com/tamird", "followers_url": "https://api.github.com/users/tamird/followers", "following_url": "https://api.github.com/users/tamird/following{/other_user}", "gists_url": "https://api.github.com/users/tamird/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamird/subscriptions", "organizations_url": "https://api.github.com/users/tamird/orgs", "repos_url": "https://api.github.com/users/tamird/repos", "events_url": "https://api.github.com/users/tamird/events{/privacy}", "received_events_url": "https://api.github.com/users/tamird/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54de911f357608c61acee35d3448b77c8fcb7833", "url": "https://api.github.com/repos/rust-lang/rust/commits/54de911f357608c61acee35d3448b77c8fcb7833", "html_url": "https://github.com/rust-lang/rust/commit/54de911f357608c61acee35d3448b77c8fcb7833"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "9196a156ad1c9e2835c97082420b6f7536785f8d", "filename": "src/test/auxiliary/linkage-visibility.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c6364abbc1d3aa0e58d6edb6700fac990d5325be/src%2Ftest%2Fauxiliary%2Flinkage-visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6364abbc1d3aa0e58d6edb6700fac990d5325be/src%2Ftest%2Fauxiliary%2Flinkage-visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Flinkage-visibility.rs?ref=c6364abbc1d3aa0e58d6edb6700fac990d5325be", "patch": "@@ -10,6 +10,10 @@\n \n #![feature(std_misc)]\n \n+// We're testing linkage visibility; the compiler warns us, but we want to\n+// do the runtime check that these functions aren't exported.\n+#![allow(private_no_mangle_fns)]\n+\n use std::dynamic_lib::DynamicLibrary;\n \n #[no_mangle]\n@@ -25,6 +29,7 @@ pub fn foo2<T>() {\n #[no_mangle]\n fn bar() { }\n \n+#[allow(dead_code)]\n #[no_mangle]\n fn baz() { }\n "}]}