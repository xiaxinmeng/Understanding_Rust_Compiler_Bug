{"sha": "be981dce80f6d115b04a6898bb2d6bf316dc402d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlOTgxZGNlODBmNmQxMTViMDRhNjg5OGJiMmQ2YmYzMTZkYzQwMmQ=", "commit": {"author": {"name": "Mark-Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2016-12-16T18:32:59Z"}, "committer": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2016-12-21T03:02:53Z"}, "message": "Start FunctionContext privatization and reduction", "tree": {"sha": "0f8919d8a0ab5aebb97824035280d284011b85fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f8919d8a0ab5aebb97824035280d284011b85fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be981dce80f6d115b04a6898bb2d6bf316dc402d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be981dce80f6d115b04a6898bb2d6bf316dc402d", "html_url": "https://github.com/rust-lang/rust/commit/be981dce80f6d115b04a6898bb2d6bf316dc402d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be981dce80f6d115b04a6898bb2d6bf316dc402d/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc0b172f3b3944eea0a326e032a961d0f5f5df11", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc0b172f3b3944eea0a326e032a961d0f5f5df11", "html_url": "https://github.com/rust-lang/rust/commit/bc0b172f3b3944eea0a326e032a961d0f5f5df11"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "1025f9d4051f96c62aceec244ee2f05057daf204", "filename": "src/librustc_trans/common.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/be981dce80f6d115b04a6898bb2d6bf316dc402d/src%2Flibrustc_trans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be981dce80f6d115b04a6898bb2d6bf316dc402d/src%2Flibrustc_trans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcommon.rs?ref=be981dce80f6d115b04a6898bb2d6bf316dc402d", "patch": "@@ -269,7 +269,7 @@ pub struct FunctionContext<'a, 'tcx: 'a> {\n     pub llfn: ValueRef,\n \n     // always an empty parameter-environment NOTE: @jroesch another use of ParamEnv\n-    pub param_env: ty::ParameterEnvironment<'tcx>,\n+    param_env: ty::ParameterEnvironment<'tcx>,\n \n     // A pointer to where to store the return value. If the return type is\n     // immediate, this points to an alloca in the function. Otherwise, it's a\n@@ -314,8 +314,8 @@ pub struct FunctionContext<'a, 'tcx: 'a> {\n \n impl<'a, 'tcx> FunctionContext<'a, 'tcx> {\n     /// Create a function context for the given function.\n-    /// Beware that you must call `fcx.init` or `fcx.bind_args`\n-    /// before doing anything with the returned function context.\n+    /// Beware that you must call `fcx.init` before doing anything with the returned function\n+    /// context.\n     pub fn new(ccx: &'a CrateContext<'a, 'tcx>,\n                llfndecl: ValueRef,\n                fn_ty: FnType,\n@@ -603,10 +603,6 @@ impl<'blk, 'tcx> BlockAndBuilder<'blk, 'tcx> {\n     pub fn llbb(&self) -> BasicBlockRef {\n         self.llbb\n     }\n-\n-    pub fn mir(&self) -> Ref<'tcx, Mir<'tcx>> {\n-        self.fcx.mir()\n-    }\n }\n \n impl<'blk, 'tcx> Deref for BlockAndBuilder<'blk, 'tcx> {"}, {"sha": "c3cc5a7a9b39c8652f99fadee51fa22d51ec02e7", "filename": "src/librustc_trans/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/be981dce80f6d115b04a6898bb2d6bf316dc402d/src%2Flibrustc_trans%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be981dce80f6d115b04a6898bb2d6bf316dc402d/src%2Flibrustc_trans%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Fmod.rs?ref=be981dce80f6d115b04a6898bb2d6bf316dc402d", "patch": "@@ -182,7 +182,7 @@ impl<'tcx> LocalRef<'tcx> {\n \n pub fn trans_mir<'blk, 'tcx: 'blk>(fcx: &'blk FunctionContext<'blk, 'tcx>) {\n     let bcx = fcx.init(true);\n-    let mir = bcx.mir();\n+    let mir = fcx.mir();\n \n     // Analyze the temps to determine which must be lvalues\n     // FIXME"}]}