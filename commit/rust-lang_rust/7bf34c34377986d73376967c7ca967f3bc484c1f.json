{"sha": "7bf34c34377986d73376967c7ca967f3bc484c1f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiZjM0YzM0Mzc3OTg2ZDczMzc2OTY3YzdjYTk2N2YzYmM0ODRjMWY=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-07-02T00:59:54Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-07-08T07:41:21Z"}, "message": "vec: make vec_reserve_shared_actual private", "tree": {"sha": "3b0218055038276eec9d765b75e0cdb458e35bdb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b0218055038276eec9d765b75e0cdb458e35bdb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7bf34c34377986d73376967c7ca967f3bc484c1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7bf34c34377986d73376967c7ca967f3bc484c1f", "html_url": "https://github.com/rust-lang/rust/commit/7bf34c34377986d73376967c7ca967f3bc484c1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7bf34c34377986d73376967c7ca967f3bc484c1f/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e07ae9e6f9196096697935b96667ec272b039ad9", "url": "https://api.github.com/repos/rust-lang/rust/commits/e07ae9e6f9196096697935b96667ec272b039ad9", "html_url": "https://github.com/rust-lang/rust/commit/e07ae9e6f9196096697935b96667ec272b039ad9"}], "stats": {"total": 27, "additions": 7, "deletions": 20}, "files": [{"sha": "8c8874e2a751b640139c472a58d734609a04a4f2", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 7, "deletions": 20, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/7bf34c34377986d73376967c7ca967f3bc484c1f/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf34c34377986d73376967c7ca967f3bc484c1f/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=7bf34c34377986d73376967c7ca967f3bc484c1f", "patch": "@@ -33,28 +33,15 @@ use sys::size_of;\n use uint;\n use unstable::intrinsics;\n #[cfg(stage0)]\n-use intrinsic::{get_tydesc};\n+use intrinsic::{get_tydesc, TyDesc};\n #[cfg(not(stage0))]\n-use unstable::intrinsics::{get_tydesc, contains_managed};\n+use unstable::intrinsics::{get_tydesc, contains_managed, TyDesc};\n use vec;\n use util;\n \n-#[doc(hidden)]\n-pub mod rustrt {\n-    use libc;\n-    use vec::raw;\n-    #[cfg(stage0)]\n-    use intrinsic::{TyDesc};\n-    #[cfg(not(stage0))]\n-    use unstable::intrinsics::{TyDesc};\n-\n-    #[abi = \"cdecl\"]\n-    pub extern {\n-        #[fast_ffi]\n-        unsafe fn vec_reserve_shared_actual(t: *TyDesc,\n-                                            v: **raw::VecRepr,\n-                                            n: libc::size_t);\n-    }\n+extern {\n+    #[fast_ffi]\n+    unsafe fn vec_reserve_shared_actual(t: *TyDesc, v: **raw::VecRepr, n: libc::size_t);\n }\n \n /// Returns true if two vectors have the same length\n@@ -1152,7 +1139,7 @@ impl<T> OwnedVector<T> for ~[T] {\n                 let td = get_tydesc::<T>();\n                 if ((**ptr).box_header.ref_count ==\n                     managed::raw::RC_MANAGED_UNIQUE) {\n-                    rustrt::vec_reserve_shared_actual(td, ptr as **raw::VecRepr, n as libc::size_t);\n+                    vec_reserve_shared_actual(td, ptr as **raw::VecRepr, n as libc::size_t);\n                 } else {\n                     let alloc = n * sys::nonzero_size_of::<T>();\n                     *ptr = realloc_raw(*ptr as *mut c_void, alloc + size_of::<raw::VecRepr>())\n@@ -1182,7 +1169,7 @@ impl<T> OwnedVector<T> for ~[T] {\n                 let ptr: *mut *mut raw::VecRepr = cast::transmute(self);\n                 let td = get_tydesc::<T>();\n                 if contains_managed::<T>() {\n-                    rustrt::vec_reserve_shared_actual(td, ptr as **raw::VecRepr, n as libc::size_t);\n+                    vec_reserve_shared_actual(td, ptr as **raw::VecRepr, n as libc::size_t);\n                 } else {\n                     let alloc = n * sys::nonzero_size_of::<T>();\n                     *ptr = realloc_raw(*ptr as *mut c_void, alloc + size_of::<raw::VecRepr>())"}]}