{"sha": "2022cfce44f7c3d82dd354abeb2d40b570fa3ef4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwMjJjZmNlNDRmN2MzZDgyZGQzNTRhYmViMmQ0MGI1NzBmYTNlZjQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-06-02T15:21:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-02T15:21:17Z"}, "message": "Merge #9111\n\n9111: fix: make \"extract type alias\" place extracted type alias outside of impl r=jonas-schievink a=jonas-schievink\n\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "2be11f2d6a4f1434c7e4b22290ce9922dde21760", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2be11f2d6a4f1434c7e4b22290ce9922dde21760"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2022cfce44f7c3d82dd354abeb2d40b570fa3ef4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgt6HtCRBK7hj4Ov3rIwAAKnAIAEP54EbeyG4kVpXvUrlDRzen\n/rADg2VBKK0auSQOpYxk/HHwu7a4lCOh/HHrxY1od5VHAYKrYALLsuNff5pjBpqs\nPWc1xJbsz+n6IlTNlIZBSLA1j0aHcu/0rRZqfeQLfS7qKRBIdajjxOOi6XBiApsW\n4xv/t7ApsvmWSbxibRPyVPh+5+SpOZ3v1Ot46heaMo3DZqnjSJCPLQUYWqWIhb27\nxu4H+2II31Zg2JJEnTpfeUTQ2PMXo740rNxA0FwTN6vSM9f7vwOMzlnQI8lb23GK\nP7s0RIYAMfpe13ve4NsNJFAl3m8KKzA5VqANRsO0O3/T6wTtez7JS1a9DQVucSY=\n=G83K\n-----END PGP SIGNATURE-----\n", "payload": "tree 2be11f2d6a4f1434c7e4b22290ce9922dde21760\nparent 9d7343719ded81805b977000b4ad805458fe69c8\nparent 66a5fd375a60ec98c35acd9b4d5b03c6057aa36c\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1622647277 +0000\ncommitter GitHub <noreply@github.com> 1622647277 +0000\n\nMerge #9111\n\n9111: fix: make \"extract type alias\" place extracted type alias outside of impl r=jonas-schievink a=jonas-schievink\n\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2022cfce44f7c3d82dd354abeb2d40b570fa3ef4", "html_url": "https://github.com/rust-lang/rust/commit/2022cfce44f7c3d82dd354abeb2d40b570fa3ef4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2022cfce44f7c3d82dd354abeb2d40b570fa3ef4/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d7343719ded81805b977000b4ad805458fe69c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d7343719ded81805b977000b4ad805458fe69c8", "html_url": "https://github.com/rust-lang/rust/commit/9d7343719ded81805b977000b4ad805458fe69c8"}, {"sha": "66a5fd375a60ec98c35acd9b4d5b03c6057aa36c", "url": "https://api.github.com/repos/rust-lang/rust/commits/66a5fd375a60ec98c35acd9b4d5b03c6057aa36c", "html_url": "https://github.com/rust-lang/rust/commit/66a5fd375a60ec98c35acd9b4d5b03c6057aa36c"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "998e0de7b7646ec58248414fc107a55ca750e4cd", "filename": "crates/ide_assists/src/handlers/extract_type_alias.rs", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/2022cfce44f7c3d82dd354abeb2d40b570fa3ef4/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_type_alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2022cfce44f7c3d82dd354abeb2d40b570fa3ef4/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_type_alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_type_alias.rs?ref=2022cfce44f7c3d82dd354abeb2d40b570fa3ef4", "patch": "@@ -25,7 +25,12 @@ pub(crate) fn extract_type_alias(acc: &mut Assists, ctx: &AssistContext) -> Opti\n     }\n \n     let node = ctx.find_node_at_range::<ast::Type>()?;\n-    let insert = ctx.find_node_at_offset::<ast::Item>()?.syntax().text_range().start();\n+    let insert = ctx\n+        .find_node_at_offset::<ast::Impl>()\n+        .map(|imp| imp.syntax().clone())\n+        .or_else(|| ctx.find_node_at_offset::<ast::Item>().map(|item| item.syntax().clone()))?\n+        .text_range()\n+        .start();\n     let target = node.syntax().text_range();\n \n     acc.add(\n@@ -142,6 +147,27 @@ type $0Type = u8;\n \n struct S {\n     field: (Type,),\n+}\n+            \"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn extract_from_impl() {\n+        // When invoked in an impl, extracted type alias should be placed next to the impl, not\n+        // inside.\n+        check_assist(\n+            extract_type_alias,\n+            r#\"\n+impl S {\n+    fn f() -> $0(u8, u8)$0 {}\n+}\n+            \"#,\n+            r#\"\n+type $0Type = (u8, u8);\n+\n+impl S {\n+    fn f() -> Type {}\n }\n             \"#,\n         );"}]}