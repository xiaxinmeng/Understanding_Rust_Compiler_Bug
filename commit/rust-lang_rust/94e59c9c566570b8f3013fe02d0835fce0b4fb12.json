{"sha": "94e59c9c566570b8f3013fe02d0835fce0b4fb12", "node_id": "C_kwDOAAsO6NoAKDk0ZTU5YzljNTY2NTcwYjhmMzAxM2ZlMDJkMDgzNWZjZTBiNGZiMTI", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-02-21T12:34:05Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-02-22T09:20:45Z"}, "message": "Simplify", "tree": {"sha": "7605330185ffad1e212d5990885f214954531918", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7605330185ffad1e212d5990885f214954531918"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94e59c9c566570b8f3013fe02d0835fce0b4fb12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94e59c9c566570b8f3013fe02d0835fce0b4fb12", "html_url": "https://github.com/rust-lang/rust/commit/94e59c9c566570b8f3013fe02d0835fce0b4fb12", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94e59c9c566570b8f3013fe02d0835fce0b4fb12/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1bbef5af85f47a1c8a4dc0d98c8c76bdeb1359af", "url": "https://api.github.com/repos/rust-lang/rust/commits/1bbef5af85f47a1c8a4dc0d98c8c76bdeb1359af", "html_url": "https://github.com/rust-lang/rust/commit/1bbef5af85f47a1c8a4dc0d98c8c76bdeb1359af"}], "stats": {"total": 64, "additions": 37, "deletions": 27}, "files": [{"sha": "9f89bcf9c3d0b33ffad864d76be67972d2aa477e", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 2, "deletions": 22, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/94e59c9c566570b8f3013fe02d0835fce0b4fb12/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94e59c9c566570b8f3013fe02d0835fce0b4fb12/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=94e59c9c566570b8f3013fe02d0835fce0b4fb12", "patch": "@@ -1793,10 +1793,7 @@ impl MacroDef {\n     }\n \n     pub fn is_builtin_derive(&self) -> bool {\n-        match self.id.kind {\n-            MacroDefKind::BuiltInAttr(exp, _) => exp.is_derive(),\n-            _ => false,\n-        }\n+        matches!(self.id.kind, MacroDefKind::BuiltInAttr(exp, _) if exp.is_derive())\n     }\n \n     pub fn is_attr(&self) -> bool {\n@@ -2433,24 +2430,7 @@ impl Impl {\n \n     pub fn is_builtin_derive(self, db: &dyn HirDatabase) -> Option<InFile<ast::Attr>> {\n         let src = self.source(db)?;\n-        let item = src.file_id.is_builtin_derive(db.upcast())?;\n-        let hygenic = hir_expand::hygiene::Hygiene::new(db.upcast(), item.file_id);\n-\n-        // FIXME: handle `cfg_attr`\n-        let attr = item\n-            .value\n-            .attrs()\n-            .filter_map(|it| {\n-                let path = ModPath::from_src(db.upcast(), it.path()?, &hygenic)?;\n-                if path.as_ident()?.to_smol_str() == \"derive\" {\n-                    Some(it)\n-                } else {\n-                    None\n-                }\n-            })\n-            .last()?;\n-\n-        Some(item.with_value(attr))\n+        src.file_id.is_builtin_derive(db.upcast())\n     }\n }\n "}, {"sha": "ef4b47ea6602dc7ef127d51fdc641a1628d3f8a2", "filename": "crates/hir_expand/src/lib.rs", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/94e59c9c566570b8f3013fe02d0835fce0b4fb12/crates%2Fhir_expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94e59c9c566570b8f3013fe02d0835fce0b4fb12/crates%2Fhir_expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Flib.rs?ref=94e59c9c566570b8f3013fe02d0835fce0b4fb12", "patch": "@@ -262,16 +262,16 @@ impl HirFileId {\n     }\n \n     /// Indicate it is macro file generated for builtin derive\n-    pub fn is_builtin_derive(&self, db: &dyn db::AstDatabase) -> Option<InFile<ast::Item>> {\n+    pub fn is_builtin_derive(&self, db: &dyn db::AstDatabase) -> Option<InFile<ast::Attr>> {\n         match self.0 {\n             HirFileIdRepr::FileId(_) => None,\n             HirFileIdRepr::MacroFile(macro_file) => {\n                 let loc: MacroCallLoc = db.lookup_intern_macro_call(macro_file.macro_call_id);\n-                let item = match loc.def.kind {\n+                let attr = match loc.def.kind {\n                     MacroDefKind::BuiltInDerive(..) => loc.kind.to_node(db),\n                     _ => return None,\n                 };\n-                Some(item.with_value(ast::Item::cast(item.value.clone())?))\n+                Some(attr.with_value(ast::Attr::cast(attr.value.clone())?))\n             }\n         }\n     }\n@@ -383,10 +383,20 @@ impl MacroCallKind {\n             MacroCallKind::FnLike { ast_id, .. } => {\n                 ast_id.with_value(ast_id.to_node(db).syntax().clone())\n             }\n-            MacroCallKind::Derive { ast_id, .. } => {\n-                ast_id.with_value(ast_id.to_node(db).syntax().clone())\n+            MacroCallKind::Derive { ast_id, derive_attr_index, .. } => {\n+                // FIXME: handle `cfg_attr`\n+                ast_id.with_value(ast_id.to_node(db)).map(|it| {\n+                    it.doc_comments_and_attrs()\n+                        .nth(*derive_attr_index as usize)\n+                        .and_then(|it| match it {\n+                            Either::Left(attr) => Some(attr.syntax().clone()),\n+                            Either::Right(_) => None,\n+                        })\n+                        .unwrap_or_else(|| it.syntax().clone())\n+                })\n             }\n             MacroCallKind::Attr { ast_id, is_derive: true, invoc_attr_index, .. } => {\n+                // FIXME: handle `cfg_attr`\n                 ast_id.with_value(ast_id.to_node(db)).map(|it| {\n                     it.doc_comments_and_attrs()\n                         .nth(*invoc_attr_index as usize)"}, {"sha": "ae7ba7e055ce272b383521da04a77e6105eab5a7", "filename": "crates/ide_completion/src/tests/attribute.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/94e59c9c566570b8f3013fe02d0835fce0b4fb12/crates%2Fide_completion%2Fsrc%2Ftests%2Fattribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94e59c9c566570b8f3013fe02d0835fce0b4fb12/crates%2Fide_completion%2Fsrc%2Ftests%2Fattribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Ftests%2Fattribute.rs?ref=94e59c9c566570b8f3013fe02d0835fce0b4fb12", "patch": "@@ -735,6 +735,26 @@ mod derive {\n         )\n     }\n \n+    #[test]\n+    fn derive_no_attrs() {\n+        check_derive(\n+            r#\"\n+//- proc_macros: identity\n+//- minicore: derive\n+#[derive($0)] struct Test;\n+\"#,\n+            expect![[r#\"\"#]],\n+        );\n+        check_derive(\n+            r#\"\n+//- proc_macros: identity\n+//- minicore: derive\n+#[derive(i$0)] struct Test;\n+\"#,\n+            expect![[r#\"\"#]],\n+        );\n+    }\n+\n     #[test]\n     fn derive_flyimport() {\n         check_derive("}]}