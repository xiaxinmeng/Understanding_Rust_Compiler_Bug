{"sha": "9c74a5b2c02a14a2e2683962fe667f30211ddda0", "node_id": "C_kwDOAAsO6NoAKDljNzRhNWIyYzAyYTE0YTJlMjY4Mzk2MmZlNjY3ZjMwMjExZGRkYTA", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-10-02T12:24:32Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-10-02T12:24:32Z"}, "message": "minor: reduce duplication", "tree": {"sha": "3d886a536d90306e8862630994c9d036a5fd1ef9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d886a536d90306e8862630994c9d036a5fd1ef9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c74a5b2c02a14a2e2683962fe667f30211ddda0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c74a5b2c02a14a2e2683962fe667f30211ddda0", "html_url": "https://github.com/rust-lang/rust/commit/9c74a5b2c02a14a2e2683962fe667f30211ddda0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c74a5b2c02a14a2e2683962fe667f30211ddda0/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f04f8ddb0dc5ea9b2f38e6dc0ccac6a0ad0d48db", "url": "https://api.github.com/repos/rust-lang/rust/commits/f04f8ddb0dc5ea9b2f38e6dc0ccac6a0ad0d48db", "html_url": "https://github.com/rust-lang/rust/commit/f04f8ddb0dc5ea9b2f38e6dc0ccac6a0ad0d48db"}], "stats": {"total": 6, "additions": 1, "deletions": 5}, "files": [{"sha": "019e8b61607f750414944a561393bc4b2889e09a", "filename": "crates/ide_assists/src/handlers/replace_if_let_with_match.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9c74a5b2c02a14a2e2683962fe667f30211ddda0/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_if_let_with_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c74a5b2c02a14a2e2683962fe667f30211ddda0/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_if_let_with_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_if_let_with_match.rs?ref=9c74a5b2c02a14a2e2683962fe667f30211ddda0", "patch": "@@ -210,11 +210,7 @@ pub(crate) fn replace_match_with_if_let(acc: &mut Assists, ctx: &AssistContext)\n                 ast::Expr::BlockExpr(block) => block,\n                 expr => make::block_expr(iter::empty(), Some(expr)),\n             };\n-            let else_expr = match else_expr {\n-                ast::Expr::BlockExpr(block) if block.is_empty() => None,\n-                ast::Expr::TupleExpr(tuple) if tuple.fields().next().is_none() => None,\n-                expr => Some(expr),\n-            };\n+            let else_expr = if is_empty_expr(&else_expr) { None } else { Some(else_expr) };\n             let if_let_expr = make::expr_if(\n                 condition,\n                 then_block,"}]}