{"sha": "dcc8371d4e0eb2bf3151c6bba71dc3b23fd27688", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjYzgzNzFkNGUwZWIyYmYzMTUxYzZiYmE3MWRjM2IyM2ZkMjc2ODg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-06-23T14:31:16Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-06-23T14:31:16Z"}, "message": "move CheckInAllocMsg to more logical place", "tree": {"sha": "b50caa803a1a43a635774f0c940c328e2ce60d6c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b50caa803a1a43a635774f0c940c328e2ce60d6c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dcc8371d4e0eb2bf3151c6bba71dc3b23fd27688", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dcc8371d4e0eb2bf3151c6bba71dc3b23fd27688", "html_url": "https://github.com/rust-lang/rust/commit/dcc8371d4e0eb2bf3151c6bba71dc3b23fd27688", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dcc8371d4e0eb2bf3151c6bba71dc3b23fd27688/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c50b9d197f54016714ad45808450e018c2c253b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/c50b9d197f54016714ad45808450e018c2c253b3", "html_url": "https://github.com/rust-lang/rust/commit/c50b9d197f54016714ad45808450e018c2c253b3"}], "stats": {"total": 50, "additions": 25, "deletions": 25}, "files": [{"sha": "b7abf89e61c959bb26a6ff8dab5e58a3d6524ee4", "filename": "src/librustc/mir/interpret/allocation.rs", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/dcc8371d4e0eb2bf3151c6bba71dc3b23fd27688/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcc8371d4e0eb2bf3151c6bba71dc3b23fd27688/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs?ref=dcc8371d4e0eb2bf3151c6bba71dc3b23fd27688", "patch": "@@ -22,28 +22,6 @@ pub enum InboundsCheck {\n     MaybeDead,\n }\n \n-/// Used by `check_in_alloc` to indicate context of check\n-#[derive(Debug, Copy, Clone, RustcEncodable, RustcDecodable, HashStable)]\n-pub enum CheckInAllocMsg {\n-    MemoryAccessTest,\n-    NullPointerTest,\n-    PointerArithmeticTest,\n-    InboundsTest,\n-}\n-\n-impl Display for CheckInAllocMsg {\n-    /// When this is printed as an error the context looks like this\n-    /// \"{test name} failed: pointer must be in-bounds at offset...\"\n-    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        write!(f, \"{}\", match *self {\n-            CheckInAllocMsg::MemoryAccessTest => \"Memory access\",\n-            CheckInAllocMsg::NullPointerTest => \"Null pointer test\",\n-            CheckInAllocMsg::PointerArithmeticTest => \"Pointer arithmetic\",\n-            CheckInAllocMsg::InboundsTest => \"Inbounds test\",\n-        })\n-    }\n-}\n-\n #[derive(Clone, Debug, Eq, PartialEq, PartialOrd, Ord, Hash, RustcEncodable, RustcDecodable)]\n pub struct Allocation<Tag=(),Extra=()> {\n     /// The actual bytes of the allocation."}, {"sha": "4b1a69404dde6d7b19a38af8941455556702f857", "filename": "src/librustc/mir/interpret/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dcc8371d4e0eb2bf3151c6bba71dc3b23fd27688/src%2Flibrustc%2Fmir%2Finterpret%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcc8371d4e0eb2bf3151c6bba71dc3b23fd27688/src%2Flibrustc%2Fmir%2Finterpret%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fmod.rs?ref=dcc8371d4e0eb2bf3151c6bba71dc3b23fd27688", "patch": "@@ -19,10 +19,10 @@ pub use self::value::{Scalar, ScalarMaybeUndef, RawConst, ConstValue};\n \n pub use self::allocation::{\n     InboundsCheck, Allocation, AllocationExtra,\n-    Relocations, UndefMask, CheckInAllocMsg,\n+    Relocations, UndefMask,\n };\n \n-pub use self::pointer::{Pointer, PointerArithmetic};\n+pub use self::pointer::{Pointer, PointerArithmetic, CheckInAllocMsg};\n \n use std::fmt;\n use crate::mir;"}, {"sha": "f5c5469fe1b2d43aded8f571f56dbb372788c9ca", "filename": "src/librustc/mir/interpret/pointer.rs", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/dcc8371d4e0eb2bf3151c6bba71dc3b23fd27688/src%2Flibrustc%2Fmir%2Finterpret%2Fpointer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcc8371d4e0eb2bf3151c6bba71dc3b23fd27688/src%2Flibrustc%2Fmir%2Finterpret%2Fpointer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fpointer.rs?ref=dcc8371d4e0eb2bf3151c6bba71dc3b23fd27688", "patch": "@@ -5,9 +5,31 @@ use crate::ty::layout::{self, HasDataLayout, Size};\n use rustc_macros::HashStable;\n \n use super::{\n-    AllocId, InterpResult, CheckInAllocMsg\n+    AllocId, InterpResult,\n };\n \n+/// Used by `check_in_alloc` to indicate context of check\n+#[derive(Debug, Copy, Clone, RustcEncodable, RustcDecodable, HashStable)]\n+pub enum CheckInAllocMsg {\n+    MemoryAccessTest,\n+    NullPointerTest,\n+    PointerArithmeticTest,\n+    InboundsTest,\n+}\n+\n+impl Display for CheckInAllocMsg {\n+    /// When this is printed as an error the context looks like this\n+    /// \"{test name} failed: pointer must be in-bounds at offset...\"\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        write!(f, \"{}\", match *self {\n+            CheckInAllocMsg::MemoryAccessTest => \"Memory access\",\n+            CheckInAllocMsg::NullPointerTest => \"Null pointer test\",\n+            CheckInAllocMsg::PointerArithmeticTest => \"Pointer arithmetic\",\n+            CheckInAllocMsg::InboundsTest => \"Inbounds test\",\n+        })\n+    }\n+}\n+\n ////////////////////////////////////////////////////////////////////////////////\n // Pointer arithmetic\n ////////////////////////////////////////////////////////////////////////////////"}]}