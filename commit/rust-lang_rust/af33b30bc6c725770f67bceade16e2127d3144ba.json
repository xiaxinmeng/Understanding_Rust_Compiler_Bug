{"sha": "af33b30bc6c725770f67bceade16e2127d3144ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmMzNiMzBiYzZjNzI1NzcwZjY3YmNlYWRlMTZlMjEyN2QzMTQ0YmE=", "commit": {"author": {"name": "Andrew Brinker", "email": "me@andrewbrinker.com", "date": "2016-06-07T22:09:24Z"}, "committer": {"name": "Andrew Brinker", "email": "me@andrewbrinker.com", "date": "2016-06-07T22:09:24Z"}, "message": "Fixed based on feedback from steveklabnik", "tree": {"sha": "5ec02175ea22828ddf3c761b24d422d042332630", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ec02175ea22828ddf3c761b24d422d042332630"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af33b30bc6c725770f67bceade16e2127d3144ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af33b30bc6c725770f67bceade16e2127d3144ba", "html_url": "https://github.com/rust-lang/rust/commit/af33b30bc6c725770f67bceade16e2127d3144ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af33b30bc6c725770f67bceade16e2127d3144ba/comments", "author": null, "committer": null, "parents": [{"sha": "00e77d7489ce9c22e6d64ec3d6157dbf26e08443", "url": "https://api.github.com/repos/rust-lang/rust/commits/00e77d7489ce9c22e6d64ec3d6157dbf26e08443", "html_url": "https://github.com/rust-lang/rust/commit/00e77d7489ce9c22e6d64ec3d6157dbf26e08443"}], "stats": {"total": 18, "additions": 7, "deletions": 11}, "files": [{"sha": "c4f939a608b79ae49108db4caedc23f7ee1b0c60", "filename": "src/doc/nomicon/safe-unsafe-meaning.md", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/af33b30bc6c725770f67bceade16e2127d3144ba/src%2Fdoc%2Fnomicon%2Fsafe-unsafe-meaning.md", "raw_url": "https://github.com/rust-lang/rust/raw/af33b30bc6c725770f67bceade16e2127d3144ba/src%2Fdoc%2Fnomicon%2Fsafe-unsafe-meaning.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fnomicon%2Fsafe-unsafe-meaning.md?ref=af33b30bc6c725770f67bceade16e2127d3144ba", "patch": "@@ -4,17 +4,13 @@ What's the relationship between Safe Rust and Unsafe Rust? How do they\n interact?\n \n The separation between Safe Rust and Unsafe Rust is controlled with the\n-`unsafe` keyword, which acts as a sort of *foreign function interface*\n-from one to the other. This boundary is why we can say Safe Rust is a\n-safe language: all the unsafe parts are kept exclusively behind the FFI\n-boundary, *just like any other safe language*. Best of all, because Safe\n-Rust is a subset of Unsafe Rust, the two can be cleanly intermixed,\n-without headers, runtimes, or any other FFI boilerplate.\n-\n-The `unsafe` keyword has dual purposes: to declare the existence of\n-contracts the compiler can't check, and to declare that the adherence\n-of some code to those contracts has been checked by the programmer,\n-and the code can therefore be trusted.\n+`unsafe` keyword, which acts as an interface from one to the other. This is\n+why we can say Safe Rust is a safe language: all the unsafe parts are kept\n+exclusively behind the boundary.\n+\n+The `unsafe` keyword has two uses: to declare the existence of contracts the\n+compiler can't check, and to declare that the adherence of some code to\n+those contracts has been checked by the programmer.\n \n You can use `unsafe` to indicate the existence of unchecked contracts on\n _functions_ and on _trait declarations_. On functions, `unsafe` means that"}]}