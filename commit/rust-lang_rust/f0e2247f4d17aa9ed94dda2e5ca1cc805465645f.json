{"sha": "f0e2247f4d17aa9ed94dda2e5ca1cc805465645f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwZTIyNDdmNGQxN2FhOWVkOTRkZGEyZTVjYTFjYzgwNTQ2NTY0NWY=", "commit": {"author": {"name": "David Renshaw", "email": "david@sandstorm.io", "date": "2017-03-14T01:07:25Z"}, "committer": {"name": "David Renshaw", "email": "david@sandstorm.io", "date": "2017-03-14T01:07:25Z"}, "message": "fix argument order on check_align", "tree": {"sha": "ac9edb44cad434b35187ebb2e96a3ef62e5f9651", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac9edb44cad434b35187ebb2e96a3ef62e5f9651"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0e2247f4d17aa9ed94dda2e5ca1cc805465645f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0e2247f4d17aa9ed94dda2e5ca1cc805465645f", "html_url": "https://github.com/rust-lang/rust/commit/f0e2247f4d17aa9ed94dda2e5ca1cc805465645f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0e2247f4d17aa9ed94dda2e5ca1cc805465645f/comments", "author": null, "committer": null, "parents": [{"sha": "5c82b64ce65aff8d3ba91f4243df3a24d9430e35", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c82b64ce65aff8d3ba91f4243df3a24d9430e35", "html_url": "https://github.com/rust-lang/rust/commit/5c82b64ce65aff8d3ba91f4243df3a24d9430e35"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "91bd0462779579ea62f9c6ed46a978bcdf90105a", "filename": "src/terminator/intrinsic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f0e2247f4d17aa9ed94dda2e5ca1cc805465645f/src%2Fterminator%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0e2247f4d17aa9ed94dda2e5ca1cc805465645f/src%2Fterminator%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fterminator%2Fintrinsic.rs?ref=f0e2247f4d17aa9ed94dda2e5ca1cc805465645f", "patch": "@@ -410,7 +410,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                 let size = self.type_size(ty)?.expect(\"write_bytes() type must be sized\");\n                 let ptr = arg_vals[0].read_ptr(&self.memory)?;\n                 let count = self.value_to_primval(arg_vals[2], usize)?.to_u64()?;\n-                self.memory.check_align(ptr, size * count, ty_align)?;\n+                self.memory.check_align(ptr, ty_align, size * count)?;\n                 self.memory.write_repeat(ptr, val_byte, size * count)?;\n             }\n "}]}