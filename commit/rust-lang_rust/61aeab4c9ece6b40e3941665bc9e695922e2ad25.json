{"sha": "61aeab4c9ece6b40e3941665bc9e695922e2ad25", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxYWVhYjRjOWVjZTZiNDBlMzk0MTY2NWJjOWU2OTU5MjJlMmFkMjU=", "commit": {"author": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-11-04T10:35:53Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-11-04T10:35:53Z"}, "message": "Update for collections reform", "tree": {"sha": "4b61274b97d2d2fc0c7283d84b67e58f730b3b4c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b61274b97d2d2fc0c7283d84b67e58f730b3b4c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61aeab4c9ece6b40e3941665bc9e695922e2ad25", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61aeab4c9ece6b40e3941665bc9e695922e2ad25", "html_url": "https://github.com/rust-lang/rust/commit/61aeab4c9ece6b40e3941665bc9e695922e2ad25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61aeab4c9ece6b40e3941665bc9e695922e2ad25/comments", "author": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "87a753e5ce1885fb94235a227cf6de3a56f2061a", "url": "https://api.github.com/repos/rust-lang/rust/commits/87a753e5ce1885fb94235a227cf6de3a56f2061a", "html_url": "https://github.com/rust-lang/rust/commit/87a753e5ce1885fb94235a227cf6de3a56f2061a"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "0978fba2a2135a4982bb0bdffa8de00c4d2b0130", "filename": "src/librustc_back/target/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/61aeab4c9ece6b40e3941665bc9e695922e2ad25/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61aeab4c9ece6b40e3941665bc9e695922e2ad25/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmod.rs?ref=61aeab4c9ece6b40e3941665bc9e695922e2ad25", "patch": "@@ -217,7 +217,7 @@ impl Target {\n         let handler = diagnostic::default_handler(diagnostic::Auto, None);\n \n         let get_req_field = |name: &str| {\n-            match obj.find(&name.to_string())\n+            match obj.find(name)\n                      .map(|s| s.as_string())\n                      .and_then(|os| os.map(|s| s.to_string())) {\n                 Some(val) => val,\n@@ -240,16 +240,16 @@ impl Target {\n         macro_rules! key (\n             ($key_name:ident) => ( {\n                 let name = (stringify!($key_name)).replace(\"_\", \"-\");\n-                obj.find(&name).map(|o| o.as_string()\n+                obj.find(name[]).map(|o| o.as_string()\n                                     .map(|s| base.options.$key_name = s.to_string()));\n             } );\n             ($key_name:ident, bool) => ( {\n                 let name = (stringify!($key_name)).replace(\"_\", \"-\");\n-                obj.find(&name).map(|o| o.as_boolean().map(|s| base.options.$key_name = s));\n+                obj.find(name[]).map(|o| o.as_boolean().map(|s| base.options.$key_name = s));\n             } );\n             ($key_name:ident, list) => ( {\n                 let name = (stringify!($key_name)).replace(\"_\", \"-\");\n-                obj.find(&name).map(|o| o.as_list()\n+                obj.find(name[]).map(|o| o.as_list()\n                     .map(|v| base.options.$key_name = v.iter()\n                         .map(|a| a.as_string().unwrap().to_string()).collect()\n                         )"}]}