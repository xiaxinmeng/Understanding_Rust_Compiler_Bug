{"sha": "90cd795b8bc22719e43183444d1963eda5161de6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwY2Q3OTViOGJjMjI3MTllNDMxODM0NDRkMTk2M2VkYTUxNjFkZTY=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-01-19T09:22:19Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-01-19T09:22:43Z"}, "message": "Update docs to reflect pattern syntax change", "tree": {"sha": "e66d772a931fe274800edb006fe21aa4f1e6a1a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e66d772a931fe274800edb006fe21aa4f1e6a1a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90cd795b8bc22719e43183444d1963eda5161de6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90cd795b8bc22719e43183444d1963eda5161de6", "html_url": "https://github.com/rust-lang/rust/commit/90cd795b8bc22719e43183444d1963eda5161de6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90cd795b8bc22719e43183444d1963eda5161de6/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d887c0e7892a97af5464468c50887dea6e6dc91e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d887c0e7892a97af5464468c50887dea6e6dc91e", "html_url": "https://github.com/rust-lang/rust/commit/d887c0e7892a97af5464468c50887dea6e6dc91e"}], "stats": {"total": 22, "additions": 7, "deletions": 15}, "files": [{"sha": "68aaa414a692f7e1b47e0447fa4aaf4a001e8025", "filename": "doc/rust.texi", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/90cd795b8bc22719e43183444d1963eda5161de6/doc%2Frust.texi", "raw_url": "https://github.com/rust-lang/rust/raw/90cd795b8bc22719e43183444d1963eda5161de6/doc%2Frust.texi", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.texi?ref=90cd795b8bc22719e43183444d1963eda5161de6", "patch": "@@ -2702,7 +2702,7 @@ arbitrary depth.\n A @dfn{declaration statement} is one that introduces a @emph{name} into the\n enclosing statement block. The declared name may denote a new slot or a new\n item. The scope of the name extends to the entire containing block, both\n-before and after the declaration.\n+before and after the declaration. Tag names may not be shadowed by variable names.\n \n @menu\n * Ref.Stmt.Decl.Item::              Statement declaring an item.\n@@ -3274,7 +3274,7 @@ alt x @{\n     cons(10, _) @{\n         process_ten();\n     @}\n-    nil. @{\n+    nil @{\n         ret;\n     @}\n     _ @{\n@@ -3283,12 +3283,6 @@ alt x @{\n @}\n @end example\n \n-Note in the above example that @code{nil} is followed by a period. This is\n-required syntax for pattern matching a nullary tag variant, to distingush the\n-variant @code{nil} from a binding to variable @code{nil}. Without the period\n-the value of @code{x} would be bound to variable @code{nil} and the compiler\n-would issue an error about the final wildcard case being unreachable.\n-\n Records can also be pattern-matched and their fields bound to variables.\n When matching fields of a record, the fields being matched are specified\n first, then a placeholder (@code{_}) represents the remaining fields."}, {"sha": "79a0cb85ac5ab8e7e261901d2e8801903c94b370", "filename": "doc/tutorial/data.md", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/90cd795b8bc22719e43183444d1963eda5161de6/doc%2Ftutorial%2Fdata.md", "raw_url": "https://github.com/rust-lang/rust/raw/90cd795b8bc22719e43183444d1963eda5161de6/doc%2Ftutorial%2Fdata.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial%2Fdata.md?ref=90cd795b8bc22719e43183444d1963eda5161de6", "patch": "@@ -155,18 +155,16 @@ patterns, as in this definition of `area`:\n         }\n     }\n \n-For variants without arguments, you have to write `variantname.` (with\n-a dot at the end) to match them in a pattern. This to prevent\n-ambiguity between matching a variant name and binding a new variable.\n+Another example:\n \n     # type point = {x: float, y: float};\n     # enum direction { north; east; south; west; }\n     fn point_from_direction(dir: direction) -> point {\n         alt dir {\n-            north. { {x:  0f, y:  1f} }\n-            east.  { {x:  1f, y:  0f} }\n-            south. { {x:  0f, y: -1f} }\n-            west.  { {x: -1f, y:  0f} }\n+            north { {x:  0f, y:  1f} }\n+            east  { {x:  1f, y:  0f} }\n+            south { {x:  0f, y: -1f} }\n+            west  { {x: -1f, y:  0f} }\n         }\n     }\n "}]}