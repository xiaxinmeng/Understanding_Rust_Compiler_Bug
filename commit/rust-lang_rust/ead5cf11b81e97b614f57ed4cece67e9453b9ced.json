{"sha": "ead5cf11b81e97b614f57ed4cece67e9453b9ced", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhZDVjZjExYjgxZTk3YjYxNGY1N2VkNGNlY2U2N2U5NDUzYjljZWQ=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-03-15T09:17:04Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-04-15T18:53:03Z"}, "message": "Add misc timings", "tree": {"sha": "85378c4e1a2419705387d91a1c82c715ceb8b130", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85378c4e1a2419705387d91a1c82c715ceb8b130"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ead5cf11b81e97b614f57ed4cece67e9453b9ced", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ead5cf11b81e97b614f57ed4cece67e9453b9ced", "html_url": "https://github.com/rust-lang/rust/commit/ead5cf11b81e97b614f57ed4cece67e9453b9ced", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ead5cf11b81e97b614f57ed4cece67e9453b9ced/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3e4420906b23bbcb266d93f5ac3ac75300cce21", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3e4420906b23bbcb266d93f5ac3ac75300cce21", "html_url": "https://github.com/rust-lang/rust/commit/e3e4420906b23bbcb266d93f5ac3ac75300cce21"}], "stats": {"total": 39, "additions": 31, "deletions": 8}, "files": [{"sha": "f88e33c708e3685027e0aade041adf1ee5243e11", "filename": "src/librustc/ty/maps/on_disk_cache.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ead5cf11b81e97b614f57ed4cece67e9453b9ced/src%2Flibrustc%2Fty%2Fmaps%2Fon_disk_cache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ead5cf11b81e97b614f57ed4cece67e9453b9ced/src%2Flibrustc%2Fty%2Fmaps%2Fon_disk_cache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps%2Fon_disk_cache.rs?ref=ead5cf11b81e97b614f57ed4cece67e9453b9ced", "patch": "@@ -33,6 +33,7 @@ use ty;\n use ty::maps::job::QueryResult;\n use ty::codec::{self as ty_codec, TyDecoder, TyEncoder};\n use ty::context::TyCtxt;\n+use util::common::time;\n \n const TAG_FILE_FOOTER: u128 = 0xC0FFEE_C0FFEE_C0FFEE_C0FFEE_C0FFEE;\n \n@@ -214,7 +215,7 @@ impl<'sess> OnDiskCache<'sess> {\n             // Encode query results\n             let mut query_result_index = EncodedQueryResultIndex::new();\n \n-            {\n+            time(tcx.sess, \"encode query results\", || {\n                 use ty::maps::queries::*;\n                 let enc = &mut encoder;\n                 let qri = &mut query_result_index;\n@@ -258,7 +259,9 @@ impl<'sess> OnDiskCache<'sess> {\n                         }\n                     }\n                 }\n-            }\n+\n+                Ok(())\n+            })?;\n \n             // Encode diagnostics\n             let diagnostics_index = {\n@@ -1125,6 +1128,11 @@ fn encode_query_results<'enc, 'a, 'tcx, Q, E>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n           E: 'enc + TyEncoder,\n           Q::Value: Encodable,\n {\n+    let desc = &format!(\"encode_query_results for {}\",\n+        unsafe { ::std::intrinsics::type_name::<Q>() });\n+\n+    time(tcx.sess, desc, || {\n+\n     for (key, entry) in Q::get_cache_internal(tcx).map.iter() {\n         if Q::cache_on_disk(key.clone()) {\n             let entry = match *entry {\n@@ -1143,4 +1151,5 @@ fn encode_query_results<'enc, 'a, 'tcx, Q, E>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     }\n \n     Ok(())\n+    })\n }"}, {"sha": "ad25e834c479e41a4a476797d1d8b3b72336386d", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ead5cf11b81e97b614f57ed4cece67e9453b9ced/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ead5cf11b81e97b614f57ed4cece67e9453b9ced/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=ead5cf11b81e97b614f57ed4cece67e9453b9ced", "patch": "@@ -793,9 +793,13 @@ pub fn phase_2_configure_and_expand_inner<'a, F>(sess: &'a Session,\n         let mut ecx = ExtCtxt::new(&sess.parse_sess, cfg, &mut resolver);\n         let err_count = ecx.parse_sess.span_diagnostic.err_count();\n \n-        let krate = ecx.monotonic_expander().expand_crate(krate);\n+        let krate = time(sess, \"expand crate\", || {\n+            ecx.monotonic_expander().expand_crate(krate)\n+        });\n \n-        ecx.check_unused_macros();\n+        time(sess, \"check unused macros\", || {\n+            ecx.check_unused_macros();\n+        });\n \n         let mut missing_fragment_specifiers: Vec<_> =\n             ecx.parse_sess.missing_fragment_specifiers.borrow().iter().cloned().collect();"}, {"sha": "e524fcecf9094a3edce0a932d97ee83f2878272c", "filename": "src/librustc_incremental/persist/save.rs", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ead5cf11b81e97b614f57ed4cece67e9453b9ced/src%2Flibrustc_incremental%2Fpersist%2Fsave.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ead5cf11b81e97b614f57ed4cece67e9453b9ced/src%2Flibrustc_incremental%2Fpersist%2Fsave.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fsave.rs?ref=ead5cf11b81e97b614f57ed4cece67e9453b9ced", "patch": "@@ -43,7 +43,11 @@ pub fn save_dep_graph<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>) {\n             time(sess, \"persist dep-graph\", || {\n                 save_in(sess,\n                         dep_graph_path(sess),\n-                        |e| encode_dep_graph(tcx, e));\n+                        |e| {\n+                            time(sess, \"encode dep-graph\", || {\n+                                encode_dep_graph(tcx, e)\n+                            })\n+                        });\n             });\n         }\n \n@@ -145,7 +149,9 @@ fn encode_dep_graph(tcx: TyCtxt,\n     tcx.sess.opts.dep_tracking_hash().encode(encoder)?;\n \n     // Encode the graph data.\n-    let serialized_graph = tcx.dep_graph.serialize();\n+    let serialized_graph = time(tcx.sess, \"getting serialized graph\", || {\n+        tcx.dep_graph.serialize()\n+    });\n \n     if tcx.sess.opts.debugging_opts.incremental_info {\n         #[derive(Clone)]\n@@ -221,7 +227,9 @@ fn encode_dep_graph(tcx: TyCtxt,\n         println!(\"[incremental]\");\n     }\n \n-    serialized_graph.encode(encoder)?;\n+    time(tcx.sess, \"encoding serialized graph\", || {\n+        serialized_graph.encode(encoder)\n+    })?;\n \n     Ok(())\n }\n@@ -245,5 +253,7 @@ fn encode_work_products(dep_graph: &DepGraph,\n fn encode_query_cache(tcx: TyCtxt,\n                       encoder: &mut Encoder)\n                       -> io::Result<()> {\n-    tcx.serialize_query_result_cache(encoder)\n+    time(tcx.sess, \"serialize query result cache\", || {\n+        tcx.serialize_query_result_cache(encoder)\n+    })\n }"}]}