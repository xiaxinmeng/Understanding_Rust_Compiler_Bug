{"sha": "dacffd22a0a6803fb38e2c50cbbd726d52c94ad3", "node_id": "C_kwDOAAsO6NoAKGRhY2ZmZDIyYTBhNjgwM2ZiMzhlMmM1MGNiYmQ3MjZkNTJjOTRhZDM", "commit": {"author": {"name": "Nixon Enraght-Moony", "email": "nixon.emoony@gmail.com", "date": "2022-07-18T15:59:11Z"}, "committer": {"name": "Nixon Enraght-Moony", "email": "nixon.emoony@gmail.com", "date": "2022-07-18T15:59:11Z"}, "message": "Rustdoc-Json: Clean up tests", "tree": {"sha": "af344810fa788f9465bc5d328c1ab6288a0ef989", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af344810fa788f9465bc5d328c1ab6288a0ef989"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dacffd22a0a6803fb38e2c50cbbd726d52c94ad3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dacffd22a0a6803fb38e2c50cbbd726d52c94ad3", "html_url": "https://github.com/rust-lang/rust/commit/dacffd22a0a6803fb38e2c50cbbd726d52c94ad3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dacffd22a0a6803fb38e2c50cbbd726d52c94ad3/comments", "author": {"login": "aDotInTheVoid", "id": 28781354, "node_id": "MDQ6VXNlcjI4NzgxMzU0", "avatar_url": "https://avatars.githubusercontent.com/u/28781354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aDotInTheVoid", "html_url": "https://github.com/aDotInTheVoid", "followers_url": "https://api.github.com/users/aDotInTheVoid/followers", "following_url": "https://api.github.com/users/aDotInTheVoid/following{/other_user}", "gists_url": "https://api.github.com/users/aDotInTheVoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/aDotInTheVoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aDotInTheVoid/subscriptions", "organizations_url": "https://api.github.com/users/aDotInTheVoid/orgs", "repos_url": "https://api.github.com/users/aDotInTheVoid/repos", "events_url": "https://api.github.com/users/aDotInTheVoid/events{/privacy}", "received_events_url": "https://api.github.com/users/aDotInTheVoid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aDotInTheVoid", "id": 28781354, "node_id": "MDQ6VXNlcjI4NzgxMzU0", "avatar_url": "https://avatars.githubusercontent.com/u/28781354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aDotInTheVoid", "html_url": "https://github.com/aDotInTheVoid", "followers_url": "https://api.github.com/users/aDotInTheVoid/followers", "following_url": "https://api.github.com/users/aDotInTheVoid/following{/other_user}", "gists_url": "https://api.github.com/users/aDotInTheVoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/aDotInTheVoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aDotInTheVoid/subscriptions", "organizations_url": "https://api.github.com/users/aDotInTheVoid/orgs", "repos_url": "https://api.github.com/users/aDotInTheVoid/repos", "events_url": "https://api.github.com/users/aDotInTheVoid/events{/privacy}", "received_events_url": "https://api.github.com/users/aDotInTheVoid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ed0bf9f2bd63933785fb8a380c177d2d70e88ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ed0bf9f2bd63933785fb8a380c177d2d70e88ec", "html_url": "https://github.com/rust-lang/rust/commit/9ed0bf9f2bd63933785fb8a380c177d2d70e88ec"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "83171167744ab79783971ef8157148ee9d907559", "filename": "src/test/rustdoc-json/reexport/glob_extern.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dacffd22a0a6803fb38e2c50cbbd726d52c94ad3/src%2Ftest%2Frustdoc-json%2Freexport%2Fglob_extern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dacffd22a0a6803fb38e2c50cbbd726d52c94ad3/src%2Ftest%2Frustdoc-json%2Freexport%2Fglob_extern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Freexport%2Fglob_extern.rs?ref=dacffd22a0a6803fb38e2c50cbbd726d52c94ad3", "patch": "@@ -4,15 +4,19 @@\n #![feature(no_core)]\n \n // @is glob_extern.json \"$.index[*][?(@.name=='mod1')].kind\" \\\"module\\\"\n-// @is glob_extern.json \"$.index[*][?(@.name=='mod1')].inner.is_stripped\" \"true\"\n+// @is - \"$.index[*][?(@.name=='mod1')].inner.is_stripped\" \"true\"\n mod mod1 {\n     extern \"C\" {\n-        // @has - \"$.index[*][?(@.name=='public_fn')].id\"\n+        // @set public_fn_id = - \"$.index[*][?(@.name=='public_fn')].id\"\n         pub fn public_fn();\n         // @!has - \"$.index[*][?(@.name=='private_fn')]\"\n         fn private_fn();\n     }\n+    // @count - \"$.index[*][?(@.name=='mod1')].inner.items[*]\" 1\n+    // @has - \"$.index[*][?(@.name=='mod1')].inner.items[*]\" $public_fn_id\n+    // @set mod1_id = - \"$.index[*][?(@.name=='mod1')].id\"\n }\n \n // @is - \"$.index[*][?(@.kind=='import')].inner.glob\" true\n+// @is - \"$.index[*][?(@.kind=='import')].inner.id\" $mod1_id\n pub use mod1::*;"}, {"sha": "0340ea83a8e7412e77e43b4f40b62a1805e9442a", "filename": "src/test/rustdoc-json/reexport/private_twice_one_inline.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dacffd22a0a6803fb38e2c50cbbd726d52c94ad3/src%2Ftest%2Frustdoc-json%2Freexport%2Fprivate_twice_one_inline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dacffd22a0a6803fb38e2c50cbbd726d52c94ad3/src%2Ftest%2Frustdoc-json%2Freexport%2Fprivate_twice_one_inline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Freexport%2Fprivate_twice_one_inline.rs?ref=dacffd22a0a6803fb38e2c50cbbd726d52c94ad3", "patch": "@@ -1,7 +1,7 @@\n // aux-build:pub-struct.rs\n \n-// Test for the ICE in rust/83057\n-// Am external type re-exported with different attributes shouldn't cause an error\n+// Test for the ICE in https://github.com/rust-lang/rust/issues/83057\n+// An external type re-exported with different attributes shouldn't cause an error\n \n #![no_core]\n #![feature(no_core)]"}, {"sha": "f975895c4d9eed8b7c60bc072908511eee310e9b", "filename": "src/test/rustdoc-json/reexport/private_two_names.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/dacffd22a0a6803fb38e2c50cbbd726d52c94ad3/src%2Ftest%2Frustdoc-json%2Freexport%2Fprivate_two_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dacffd22a0a6803fb38e2c50cbbd726d52c94ad3/src%2Ftest%2Frustdoc-json%2Freexport%2Fprivate_two_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Freexport%2Fprivate_two_names.rs?ref=dacffd22a0a6803fb38e2c50cbbd726d52c94ad3", "patch": "@@ -1,4 +1,4 @@\n-// Test for the ICE in rust/83720\n+// Test for the ICE in https://github.com/rust-lang/rust/issues/83720\n // A pub-in-private type re-exported under two different names shouldn't cause an error\n \n #![no_core]\n@@ -7,11 +7,17 @@\n // @is private_two_names.json \"$.index[*][?(@.name=='style')].kind\" \\\"module\\\"\n // @is private_two_names.json \"$.index[*][?(@.name=='style')].inner.is_stripped\" \"true\"\n mod style {\n-    // @has - \"$.index[*](?(@.name=='Color'))\"\n+    // @set color_struct_id = - \"$.index[*][?(@.kind=='struct' && @.name=='Color')].id\"\n     pub struct Color;\n }\n \n-// @has - \"$.index[*][?(@.kind=='import' && @.inner.name=='Color')]\"\n+// @is - \"$.index[*][?(@.kind=='import' && @.inner.name=='Color')].inner.id\" $color_struct_id\n+// @set color_export_id = - \"$.index[*][?(@.kind=='import' && @.inner.name=='Color')].id\"\n pub use style::Color;\n-// @has - \"$.index[*][?(@.kind=='import' && @.inner.name=='Colour')]\"\n+// @is - \"$.index[*][?(@.kind=='import' && @.inner.name=='Colour')].inner.id\" $color_struct_id\n+// @set colour_export_id = - \"$.index[*][?(@.kind=='import' && @.inner.name=='Colour')].id\"\n pub use style::Color as Colour;\n+\n+// @count - \"$.index[*][?(@.name=='private_two_names')].inner.items[*]\" 2\n+// @has - \"$.index[*][?(@.name=='private_two_names')].inner.items[*]\" $color_export_id\n+// @has - \"$.index[*][?(@.name=='private_two_names')].inner.items[*]\" $colour_export_id"}]}