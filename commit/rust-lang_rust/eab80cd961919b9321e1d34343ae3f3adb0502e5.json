{"sha": "eab80cd961919b9321e1d34343ae3f3adb0502e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhYjgwY2Q5NjE5MTliOTMyMWUxZDM0MzQzYWUzZjNhZGIwNTAyZTU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-02-18T13:46:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-18T13:46:54Z"}, "message": "Merge #3218\n\n3218: Cut some deps r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "825fc70ee0abe5a15a9c55fd5f5a4b34b060f9c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/825fc70ee0abe5a15a9c55fd5f5a4b34b060f9c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eab80cd961919b9321e1d34343ae3f3adb0502e5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeS+rOCRBK7hj4Ov3rIwAAdHIIACvA74LipUKf2ifMiBzs/HQ9\nhZCDe0AZhsUanFsYiKFTat8V2L3xA6wpNOJDqe1cQkY3mJie6GOmzWs30Pe/3H5U\n198e9M8poumFPm24sC41kmqqg8zN5kATr9YXnRNi7vXTpI8PJYJo0hepd4G2yE24\n+mzPu7aUQM/6o3RW2I1EZ0HIuu1Dw5M1rFOgi+8v0p2mGQ7L0ejsNwljFMKfbOnZ\nAI3umh+JqBLR/KtwpWfNAXzH6iQwkh3q7iAjjC3J3L+VPyc6bDK8HyXfdLCv+mmC\n7RPUjre+Bc+o+WOFn6iIyHzvC/+qI4VGb8FqmMnfQ4gqwjbRPC6yWWJADZzsJOc=\n=s2WA\n-----END PGP SIGNATURE-----\n", "payload": "tree 825fc70ee0abe5a15a9c55fd5f5a4b34b060f9c5\nparent e59445cdde30cb73bc72e2266032f5e0125e6805\nparent 039f2039a4ec06c8e52734190ceaf43a21de5e39\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1582033614 +0000\ncommitter GitHub <noreply@github.com> 1582033614 +0000\n\nMerge #3218\n\n3218: Cut some deps r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eab80cd961919b9321e1d34343ae3f3adb0502e5", "html_url": "https://github.com/rust-lang/rust/commit/eab80cd961919b9321e1d34343ae3f3adb0502e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eab80cd961919b9321e1d34343ae3f3adb0502e5/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e59445cdde30cb73bc72e2266032f5e0125e6805", "url": "https://api.github.com/repos/rust-lang/rust/commits/e59445cdde30cb73bc72e2266032f5e0125e6805", "html_url": "https://github.com/rust-lang/rust/commit/e59445cdde30cb73bc72e2266032f5e0125e6805"}, {"sha": "039f2039a4ec06c8e52734190ceaf43a21de5e39", "url": "https://api.github.com/repos/rust-lang/rust/commits/039f2039a4ec06c8e52734190ceaf43a21de5e39", "html_url": "https://github.com/rust-lang/rust/commit/039f2039a4ec06c8e52734190ceaf43a21de5e39"}], "stats": {"total": 46, "additions": 14, "deletions": 32}, "files": [{"sha": "dc5ceca7fefeaab2c3dc4bf87bb4c10f77bb0973", "filename": ".gitignore", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eab80cd961919b9321e1d34343ae3f3adb0502e5/.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/eab80cd961919b9321e1d34343ae3f3adb0502e5/.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitignore?ref=eab80cd961919b9321e1d34343ae3f3adb0502e5", "patch": "@@ -6,3 +6,4 @@ crates/*/target\n *.log\n *.iml\n .vscode/settings.json\n+cargo-timing*.html"}, {"sha": "e7b87307698bd6bc0552ead8366a332e097b3512", "filename": "Cargo.lock", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/eab80cd961919b9321e1d34343ae3f3adb0502e5/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/eab80cd961919b9321e1d34343ae3f3adb0502e5/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=eab80cd961919b9321e1d34343ae3f3adb0502e5", "patch": "@@ -1043,7 +1043,6 @@ version = \"0.1.0\"\n dependencies = [\n  \"either\",\n  \"format-buf\",\n- \"fst\",\n  \"indexmap\",\n  \"insta\",\n  \"itertools\",\n@@ -1060,11 +1059,8 @@ dependencies = [\n  \"ra_syntax\",\n  \"ra_text_edit\",\n  \"rand\",\n- \"rayon\",\n  \"rustc-hash\",\n- \"superslice\",\n  \"test_utils\",\n- \"unicase\",\n ]\n \n [[package]]\n@@ -1091,7 +1087,6 @@ dependencies = [\n  \"rustc-hash\",\n  \"superslice\",\n  \"test_utils\",\n- \"unicase\",\n ]\n \n [[package]]\n@@ -1602,15 +1597,6 @@ dependencies = [\n  \"num_cpus\",\n ]\n \n-[[package]]\n-name = \"unicase\"\n-version = \"2.6.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"50f37be617794602aabbeee0be4f259dc1778fabe05e2d67ee8f79326d5cb4f6\"\n-dependencies = [\n- \"version_check\",\n-]\n-\n [[package]]\n name = \"unicode-bidi\"\n version = \"0.3.4\"\n@@ -1653,12 +1639,6 @@ dependencies = [\n  \"serde\",\n ]\n \n-[[package]]\n-name = \"version_check\"\n-version = \"0.9.1\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"078775d0255232fb988e6fccf26ddc9d1ac274299aaedcedce21c6f72cc533ce\"\n-\n [[package]]\n name = \"walkdir\"\n version = \"2.3.1\""}, {"sha": "97dea5ffde599fddbd50a57d338403fc6302aeed", "filename": "crates/ra_ide/Cargo.toml", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/eab80cd961919b9321e1d34343ae3f3adb0502e5/crates%2Fra_ide%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/eab80cd961919b9321e1d34343ae3f3adb0502e5/crates%2Fra_ide%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2FCargo.toml?ref=eab80cd961919b9321e1d34343ae3f3adb0502e5", "patch": "@@ -17,11 +17,7 @@ indexmap = \"1.3.0\"\n itertools = \"0.8.0\"\n join_to_string = \"0.1.3\"\n log = \"0.4.5\"\n-rayon = \"1.0.2\"\n-fst = { version = \"0.3.1\", default-features = false }\n rustc-hash = \"1.0\"\n-unicase = \"2.2.0\"\n-superslice = \"1.0.0\"\n rand = { version = \"0.7.0\", features = [\"small_rng\"] }\n once_cell = \"1.2.0\"\n "}, {"sha": "dbe98f3a0dc4262b0bfbc2cfb0411f38a0cdf341", "filename": "crates/ra_ide_db/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eab80cd961919b9321e1d34343ae3f3adb0502e5/crates%2Fra_ide_db%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/eab80cd961919b9321e1d34343ae3f3adb0502e5/crates%2Fra_ide_db%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2FCargo.toml?ref=eab80cd961919b9321e1d34343ae3f3adb0502e5", "patch": "@@ -20,7 +20,6 @@ log = \"0.4.5\"\n rayon = \"1.0.2\"\n fst = { version = \"0.3.1\", default-features = false }\n rustc-hash = \"1.0\"\n-unicase = \"2.2.0\"\n superslice = \"1.0.0\"\n once_cell = \"1.2.0\"\n "}, {"sha": "e6b3126b6469990c228b3488328fb5fa090168be", "filename": "crates/ra_ide_db/src/symbol_index.rs", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/eab80cd961919b9321e1d34343ae3f3adb0502e5/crates%2Fra_ide_db%2Fsrc%2Fsymbol_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eab80cd961919b9321e1d34343ae3f3adb0502e5/crates%2Fra_ide_db%2Fsrc%2Fsymbol_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Fsymbol_index.rs?ref=eab80cd961919b9321e1d34343ae3f3adb0502e5", "patch": "@@ -21,6 +21,7 @@\n //! those FSTs.\n \n use std::{\n+    cmp::Ordering,\n     fmt,\n     hash::{Hash, Hasher},\n     mem,\n@@ -187,29 +188,34 @@ impl Hash for SymbolIndex {\n \n impl SymbolIndex {\n     fn new(mut symbols: Vec<FileSymbol>) -> SymbolIndex {\n-        fn cmp_key<'a>(s1: &'a FileSymbol) -> impl Ord + 'a {\n-            unicase::Ascii::new(s1.name.as_str())\n+        fn cmp(lhs: &FileSymbol, rhs: &FileSymbol) -> Ordering {\n+            let lhs_chars = lhs.name.chars().map(|c| c.to_ascii_lowercase());\n+            let rhs_chars = rhs.name.chars().map(|c| c.to_ascii_lowercase());\n+            lhs_chars.cmp(rhs_chars)\n         }\n+\n         #[cfg(not(feature = \"wasm\"))]\n-        symbols.par_sort_by(|s1, s2| cmp_key(s1).cmp(&cmp_key(s2)));\n+        symbols.par_sort_by(cmp);\n \n         #[cfg(feature = \"wasm\")]\n-        symbols.sort_by(|s1, s2| cmp_key(s1).cmp(&cmp_key(s2)));\n+        symbols.sort_by(cmp);\n \n         let mut builder = fst::MapBuilder::memory();\n \n         let mut last_batch_start = 0;\n \n         for idx in 0..symbols.len() {\n-            if symbols.get(last_batch_start).map(cmp_key) == symbols.get(idx + 1).map(cmp_key) {\n-                continue;\n+            if let Some(next_symbol) = symbols.get(idx + 1) {\n+                if cmp(&symbols[last_batch_start], next_symbol) == Ordering::Equal {\n+                    continue;\n+                }\n             }\n \n             let start = last_batch_start;\n             let end = idx + 1;\n             last_batch_start = end;\n \n-            let key = symbols[start].name.as_str().to_lowercase();\n+            let key = symbols[start].name.as_str().to_ascii_lowercase();\n             let value = SymbolIndex::range_to_map_value(start, end);\n \n             builder.insert(key, value).unwrap();"}]}