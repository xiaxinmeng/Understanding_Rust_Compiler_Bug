{"sha": "d93b5200d50a6cfb6bc0cba7504e6c1628c568f3", "node_id": "C_kwDOAAsO6NoAKGQ5M2I1MjAwZDUwYTZjZmI2YmMwY2JhNzUwNGU2YzE2MjhjNTY4ZjM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-11-06T07:35:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-06T07:35:27Z"}, "message": "Rollup merge of #104002 - RalfJung:unsafecell-new, r=JohnTitor\n\nfix a comment in UnsafeCell::new\n\nThere are several safe methods that access the inner value: `into_inner` has existed since forever and `get_mut` also exists since recently. So this comment seems just wrong. But `&self` methods return raw pointers and thus require unsafe code (though the methods themselves are still safe).", "tree": {"sha": "72a85da9261367cda4133c41c20847e2d50d0915", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72a85da9261367cda4133c41c20847e2d50d0915"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d93b5200d50a6cfb6bc0cba7504e6c1628c568f3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjZ2O/CRBK7hj4Ov3rIwAACSUIAC9I8WaTKuwYWt1O044qk6ba\nmf8+fKxMK0S5MQ3KRRdFsg9+C4kSXni5Vv4dH7XO0N22Btj9c6C6VlIR1uX8YXSy\n42th6SdrnJgx4GBAfeKhe8Weoadk6VQR8LrxjTcktXkGdtL8TTe88q0zPpXIzHSn\nm5S4ctNnSUTmqMLbjdQkgd1gYDnbNuE6aUG4IAhxs/wjEMYgYQ/mR7JUDBB63Uqv\nRexw0KO7D1HQbj601J5VUS3jXBguQ5/Is15RlqtSRKvWVeGe5JftAl/3wBj9ctpL\nB68+LCQViUfyiXI4yEY0c+IprqFYTiPQqROR1Dk5j5wtZ+n1GLn0aQgsgiyGO1U=\n=U7n7\n-----END PGP SIGNATURE-----\n", "payload": "tree 72a85da9261367cda4133c41c20847e2d50d0915\nparent c013962695462a809163b30b8a3fe1e46eaf6a77\nparent dad327090af66f0519f5beaf471ae293834dae7f\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1667720127 +0100\ncommitter GitHub <noreply@github.com> 1667720127 +0100\n\nRollup merge of #104002 - RalfJung:unsafecell-new, r=JohnTitor\n\nfix a comment in UnsafeCell::new\n\nThere are several safe methods that access the inner value: `into_inner` has existed since forever and `get_mut` also exists since recently. So this comment seems just wrong. But `&self` methods return raw pointers and thus require unsafe code (though the methods themselves are still safe).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d93b5200d50a6cfb6bc0cba7504e6c1628c568f3", "html_url": "https://github.com/rust-lang/rust/commit/d93b5200d50a6cfb6bc0cba7504e6c1628c568f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d93b5200d50a6cfb6bc0cba7504e6c1628c568f3/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c013962695462a809163b30b8a3fe1e46eaf6a77", "url": "https://api.github.com/repos/rust-lang/rust/commits/c013962695462a809163b30b8a3fe1e46eaf6a77", "html_url": "https://github.com/rust-lang/rust/commit/c013962695462a809163b30b8a3fe1e46eaf6a77"}, {"sha": "dad327090af66f0519f5beaf471ae293834dae7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/dad327090af66f0519f5beaf471ae293834dae7f", "html_url": "https://github.com/rust-lang/rust/commit/dad327090af66f0519f5beaf471ae293834dae7f"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "f2975d054572cee34e28c0b8954ff7ec99a5a5f6", "filename": "library/core/src/cell.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d93b5200d50a6cfb6bc0cba7504e6c1628c568f3/library%2Fcore%2Fsrc%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d93b5200d50a6cfb6bc0cba7504e6c1628c568f3/library%2Fcore%2Fsrc%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fcell.rs?ref=d93b5200d50a6cfb6bc0cba7504e6c1628c568f3", "patch": "@@ -1936,7 +1936,7 @@ impl<T> UnsafeCell<T> {\n     /// Constructs a new instance of `UnsafeCell` which will wrap the specified\n     /// value.\n     ///\n-    /// All access to the inner value through methods is `unsafe`.\n+    /// All access to the inner value through `&UnsafeCell<T>` requires `unsafe` code.\n     ///\n     /// # Examples\n     ///"}]}