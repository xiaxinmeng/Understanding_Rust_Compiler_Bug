{"sha": "0b63512f4cb0aca1579b110d9104eeed4918a6eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiNjM1MTJmNGNiMGFjYTE1NzliMTEwZDkxMDRlZWVkNDkxOGE2ZWI=", "commit": {"author": {"name": "Lindsey Kuper", "email": "lkuper@mozilla.com", "date": "2011-03-23T21:52:22Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-03-23T23:01:29Z"}, "message": "Support for 'float' in type signatures.", "tree": {"sha": "bf9014f6261f2b15db81eec7e1d34aa1d3de2cd3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf9014f6261f2b15db81eec7e1d34aa1d3de2cd3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b63512f4cb0aca1579b110d9104eeed4918a6eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b63512f4cb0aca1579b110d9104eeed4918a6eb", "html_url": "https://github.com/rust-lang/rust/commit/0b63512f4cb0aca1579b110d9104eeed4918a6eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b63512f4cb0aca1579b110d9104eeed4918a6eb/comments", "author": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "865a2812b621d74ba35df735f8662684f148ae5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/865a2812b621d74ba35df735f8662684f148ae5f", "html_url": "https://github.com/rust-lang/rust/commit/865a2812b621d74ba35df735f8662684f148ae5f"}], "stats": {"total": 28, "additions": 25, "deletions": 3}, "files": [{"sha": "7c036fd6f7ae2dfe5dc8dcd899c6afbe63ac0898", "filename": "Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0b63512f4cb0aca1579b110d9104eeed4918a6eb/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/0b63512f4cb0aca1579b110d9104eeed4918a6eb/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=0b63512f4cb0aca1579b110d9104eeed4918a6eb", "patch": "@@ -528,7 +528,8 @@ docsnap: doc/rust.pdf\n # Float doesn't work in boot\n \n FLOAT_XFAILS := $(S)src/test/run-pass/float.rs \\\n-                $(S)src/test/run-pass/float2.rs\n+                $(S)src/test/run-pass/float2.rs \\\n+                $(S)src/test/run-pass/float-signature.rs\n \n # Temporarily xfail tests broken by the nominal-tags change.\n "}, {"sha": "5079548f11ad8c948f17109dcf4f45cf4b0aca60", "filename": "src/Makefile", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0b63512f4cb0aca1579b110d9104eeed4918a6eb/src%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/0b63512f4cb0aca1579b110d9104eeed4918a6eb/src%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FMakefile?ref=0b63512f4cb0aca1579b110d9104eeed4918a6eb", "patch": "@@ -420,7 +420,8 @@ self: $(CFG_RUSTC)\n # Float doesn't work in boot\n \n FLOAT_XFAILS := test/run-pass/float.rs \\\n-                test/run-pass/float2.rs\n+                test/run-pass/float2.rs \\\n+                test/run-pass/float-signature.rs\n \n # Temporarily xfail tests broken by the nominal-tags change.\n "}, {"sha": "063bc0e178fb1a56cf944f3c85b91bdd5498d8b0", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0b63512f4cb0aca1579b110d9104eeed4918a6eb/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b63512f4cb0aca1579b110d9104eeed4918a6eb/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=0b63512f4cb0aca1579b110d9104eeed4918a6eb", "patch": "@@ -349,6 +349,7 @@ impure fn parse_ty(parser p) -> @ast.ty {\n         case (token.BOOL) { p.bump(); t = ast.ty_bool; }\n         case (token.INT) { p.bump(); t = ast.ty_int; }\n         case (token.UINT) { p.bump(); t = ast.ty_uint; }\n+        case (token.FLOAT) { p.bump(); t = ast.ty_float; }\n         case (token.STR) { p.bump(); t = ast.ty_str; }\n         case (token.CHAR) { p.bump(); t = ast.ty_char; }\n         case (token.MACH(?tm)) { p.bump(); t = ast.ty_machine(tm); }"}, {"sha": "a1b7761201bac97248307cd6a22e2d8e546c39dd", "filename": "src/comp/middle/fold.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0b63512f4cb0aca1579b110d9104eeed4918a6eb/src%2Fcomp%2Fmiddle%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b63512f4cb0aca1579b110d9104eeed4918a6eb/src%2Fcomp%2Fmiddle%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ffold.rs?ref=0b63512f4cb0aca1579b110d9104eeed4918a6eb", "patch": "@@ -1,5 +1,5 @@\n import std.map.hashmap;\n-import std.option;\n+ import std.option;\n import std.option.some;\n import std.option.none;\n \n@@ -44,6 +44,7 @@ type ast_fold[ENV] =\n      (fn(&ENV e, &span sp) -> @ty)                fold_ty_bool,\n      (fn(&ENV e, &span sp) -> @ty)                fold_ty_int,\n      (fn(&ENV e, &span sp) -> @ty)                fold_ty_uint,\n+     (fn(&ENV e, &span sp) -> @ty)                fold_ty_float,\n      (fn(&ENV e, &span sp, ty_mach tm) -> @ty)    fold_ty_machine,\n      (fn(&ENV e, &span sp) -> @ty)                fold_ty_char,\n      (fn(&ENV e, &span sp) -> @ty)                fold_ty_str,\n@@ -337,6 +338,7 @@ fn fold_ty[ENV](&ENV env, ast_fold[ENV] fld, @ty t) -> @ty {\n         case (ast.ty_bool) { ret fld.fold_ty_bool(env_, t.span); }\n         case (ast.ty_int) { ret fld.fold_ty_int(env_, t.span); }\n         case (ast.ty_uint) { ret fld.fold_ty_uint(env_, t.span); }\n+        case (ast.ty_float) { ret fld.fold_ty_float(env_, t.span); }\n \n         case (ast.ty_machine(?m)) {\n             ret fld.fold_ty_machine(env_, t.span, m);\n@@ -1064,6 +1066,10 @@ fn identity_fold_ty_uint[ENV](&ENV env, &span sp) -> @ty {\n     ret @respan(sp, ast.ty_uint);\n }\n \n+fn identity_fold_ty_float[ENV](&ENV env, &span sp) -> @ty {\n+    ret @respan(sp, ast.ty_float);\n+}\n+\n fn identity_fold_ty_machine[ENV](&ENV env, &span sp,\n                                  ty_mach tm) -> @ty {\n     ret @respan(sp, ast.ty_machine(tm));\n@@ -1515,6 +1521,7 @@ fn new_identity_fold[ENV]() -> ast_fold[ENV] {\n          fold_ty_bool    = bind identity_fold_ty_bool[ENV](_,_),\n          fold_ty_int     = bind identity_fold_ty_int[ENV](_,_),\n          fold_ty_uint    = bind identity_fold_ty_uint[ENV](_,_),\n+         fold_ty_float   = bind identity_fold_ty_float[ENV](_,_),\n          fold_ty_machine = bind identity_fold_ty_machine[ENV](_,_,_),\n          fold_ty_char    = bind identity_fold_ty_char[ENV](_,_),\n          fold_ty_str     = bind identity_fold_ty_str[ENV](_,_),"}, {"sha": "e384092ba5d7759ec6672c6eb9c2191f00300d92", "filename": "src/comp/middle/metadata.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0b63512f4cb0aca1579b110d9104eeed4918a6eb/src%2Fcomp%2Fmiddle%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b63512f4cb0aca1579b110d9104eeed4918a6eb/src%2Fcomp%2Fmiddle%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fmetadata.rs?ref=0b63512f4cb0aca1579b110d9104eeed4918a6eb", "patch": "@@ -61,6 +61,7 @@ fn sty_str(ty.sty st, def_str ds) -> str {\n         case (ty.ty_bool) {ret \"b\";}\n         case (ty.ty_int) {ret \"i\";}\n         case (ty.ty_uint) {ret \"u\";}\n+        case (ty.ty_float) {ret \"l\";}\n         case (ty.ty_machine(?mach)) {\n             alt (mach) {\n                 case (common.ty_u8) {ret \"Mb\";}"}, {"sha": "a52b39e2ac8c1a176b7f4c2c33933ca1041e1fb7", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0b63512f4cb0aca1579b110d9104eeed4918a6eb/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b63512f4cb0aca1579b110d9104eeed4918a6eb/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=0b63512f4cb0aca1579b110d9104eeed4918a6eb", "patch": "@@ -306,6 +306,7 @@ fn ast_ty_to_ty(ty_getter getter, &@ast.ty ast_ty) -> @ty.t {\n         case (ast.ty_bool)         { sty = ty.ty_bool; }\n         case (ast.ty_int)          { sty = ty.ty_int; }\n         case (ast.ty_uint)         { sty = ty.ty_uint; }\n+        case (ast.ty_float)        { sty = ty.ty_float; }\n         case (ast.ty_machine(?tm)) { sty = ty.ty_machine(tm); }\n         case (ast.ty_char)         { sty = ty.ty_char; }\n         case (ast.ty_str)          { sty = ty.ty_str; }"}, {"sha": "da18390d69b9362b5a13b03928ab31936d0873f9", "filename": "src/test/run-pass/float-signature.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0b63512f4cb0aca1579b110d9104eeed4918a6eb/src%2Ftest%2Frun-pass%2Ffloat-signature.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b63512f4cb0aca1579b110d9104eeed4918a6eb/src%2Ftest%2Frun-pass%2Ffloat-signature.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffloat-signature.rs?ref=0b63512f4cb0aca1579b110d9104eeed4918a6eb", "patch": "@@ -0,0 +1,10 @@\n+fn main() {\n+    fn foo(float n) -> float {\n+        ret n + 0.12345;\n+    }\n+\n+    let float n = 0.1;\n+    let float m = foo(n);\n+\n+    log m;\n+}"}]}