{"sha": "4ae75cfa2e01f383ba610038aca2356197f8ac75", "node_id": "C_kwDOAAsO6NoAKDRhZTc1Y2ZhMmUwMWYzODNiYTYxMDAzOGFjYTIzNTYxOTdmOGFjNzU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-01T19:57:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-01T19:57:48Z"}, "message": "Rollup merge of #91430 - jyn514:normalize-fallible, r=jackh726\n\nAdd tests for `normalize-docs` overflow errors\n\n`@b-naber` do you understand why using `try_normalize_erasing_regions` doesn't silence these cycle errors? Rustdoc isn't emitting them, rustc is aborting before returning an error, even though the function has `try_` in the name.\n\ncc https://github.com/rust-lang/rust/issues/82692, https://github.com/rust-lang/rust/pull/91255", "tree": {"sha": "ea9745a86d63f054c964ecabae94042487978020", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea9745a86d63f054c964ecabae94042487978020"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ae75cfa2e01f383ba610038aca2356197f8ac75", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhp9O8CRBK7hj4Ov3rIwAA7YkIAFzsoNmBgZH2hUps+rfQEMd8\nBr5Iusy3rsRLjznteNijEp0d2E50e8C5RVVUJwq4uLz5klJhdgYStcSOUc/ch/Aw\n3nuYfnhS25fOsFMzJq8V+frG1b7Ys1pf81glNRuD9pzVuKBz70KfttJMF0lDkepa\n/JrX2aEuNjSrU2oj01ZkyuEWzfr39po03qxq4I9uPlsPBF+wmpOGVnLqPQj7Dhu3\nT8AN14WgCOzrJJ66WYlvu9+vMDbGAXczjlMfRjQBN/IvXr84FYVni/g+91jj31Uc\n0ycw2UexgIzzmUHa2TL6zJtNRvv8hKClyhNg/SaLffJbjp7EPP12fwH0oComuiA=\n=mwwa\n-----END PGP SIGNATURE-----\n", "payload": "tree ea9745a86d63f054c964ecabae94042487978020\nparent 4a6e8a9c93146e0e36c2d2bb8a3941de405ea078\nparent 18ddf8d636289444a3bc0eaffde9e6c24eb621b4\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1638388668 +0100\ncommitter GitHub <noreply@github.com> 1638388668 +0100\n\nRollup merge of #91430 - jyn514:normalize-fallible, r=jackh726\n\nAdd tests for `normalize-docs` overflow errors\n\n`@b-naber` do you understand why using `try_normalize_erasing_regions` doesn't silence these cycle errors? Rustdoc isn't emitting them, rustc is aborting before returning an error, even though the function has `try_` in the name.\n\ncc https://github.com/rust-lang/rust/issues/82692, https://github.com/rust-lang/rust/pull/91255\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ae75cfa2e01f383ba610038aca2356197f8ac75", "html_url": "https://github.com/rust-lang/rust/commit/4ae75cfa2e01f383ba610038aca2356197f8ac75", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ae75cfa2e01f383ba610038aca2356197f8ac75/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a6e8a9c93146e0e36c2d2bb8a3941de405ea078", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a6e8a9c93146e0e36c2d2bb8a3941de405ea078", "html_url": "https://github.com/rust-lang/rust/commit/4a6e8a9c93146e0e36c2d2bb8a3941de405ea078"}, {"sha": "18ddf8d636289444a3bc0eaffde9e6c24eb621b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/18ddf8d636289444a3bc0eaffde9e6c24eb621b4", "html_url": "https://github.com/rust-lang/rust/commit/18ddf8d636289444a3bc0eaffde9e6c24eb621b4"}], "stats": {"total": 64, "additions": 51, "deletions": 13}, "files": [{"sha": "e131089f361838d24a86781d536877fa294605b7", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 3, "deletions": 13, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/4ae75cfa2e01f383ba610038aca2356197f8ac75/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ae75cfa2e01f383ba610038aca2356197f8ac75/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=4ae75cfa2e01f383ba610038aca2356197f8ac75", "patch": "@@ -1337,25 +1337,15 @@ fn normalize(cx: &mut DocContext<'tcx>, ty: Ty<'_>) -> Option<Ty<'tcx>> {\n         return None;\n     }\n \n-    use crate::rustc_trait_selection::infer::TyCtxtInferExt;\n-    use crate::rustc_trait_selection::traits::query::normalize::AtExt;\n-    use rustc_middle::traits::ObligationCause;\n-\n     // Try to normalize `<X as Y>::T` to a type\n     let lifted = ty.lift_to_tcx(cx.tcx).unwrap();\n-    let normalized = cx.tcx.infer_ctxt().enter(|infcx| {\n-        infcx\n-            .at(&ObligationCause::dummy(), cx.param_env)\n-            .normalize(lifted)\n-            .map(|resolved| infcx.resolve_vars_if_possible(resolved.value))\n-    });\n-    match normalized {\n+    match cx.tcx.try_normalize_erasing_regions(cx.param_env, lifted) {\n         Ok(normalized_value) => {\n-            debug!(\"normalized {:?} to {:?}\", ty, normalized_value);\n+            trace!(\"normalized {:?} to {:?}\", ty, normalized_value);\n             Some(normalized_value)\n         }\n         Err(err) => {\n-            debug!(\"failed to normalize {:?}: {:?}\", ty, err);\n+            info!(\"failed to normalize {:?}: {:?}\", ty, err);\n             None\n         }\n     }"}, {"sha": "ff65936bec95e51f46672e8f913caab1933e9567", "filename": "src/test/rustdoc-ui/auxiliary/overflow.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/4ae75cfa2e01f383ba610038aca2356197f8ac75/src%2Ftest%2Frustdoc-ui%2Fauxiliary%2Foverflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ae75cfa2e01f383ba610038aca2356197f8ac75/src%2Ftest%2Frustdoc-ui%2Fauxiliary%2Foverflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fauxiliary%2Foverflow.rs?ref=4ae75cfa2e01f383ba610038aca2356197f8ac75", "patch": "@@ -0,0 +1,20 @@\n+pub struct B0;\n+pub struct B1;\n+use std::ops::Shl;\n+use std::ops::Sub;\n+pub type Shleft<A, B> = <A as Shl<B>>::Output;\n+pub type Sub1<A> = <A as Sub<B1>>::Output;\n+pub struct UInt<U, B> {\n+    pub(crate) msb: U,\n+    pub(crate) lsb: B,\n+}\n+impl<U, B, Ur, Br> Shl<UInt<Ur, Br>> for UInt<U, B>\n+where\n+    UInt<Ur, Br>: Sub<B1>,\n+    UInt<UInt<U, B>, B0>: Shl<Sub1<UInt<Ur, Br>>>,\n+{\n+    type Output = Shleft<UInt<UInt<U, B>, B0>, Sub1<UInt<Ur, Br>>>;\n+    fn shl(self, rhs: UInt<Ur, Br>) -> Self::Output {\n+        unimplemented!()\n+    }\n+}"}, {"sha": "f48cad373cdedc9b083305b0cd552df1bbd0f8e7", "filename": "src/test/rustdoc-ui/normalize-cycle.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/4ae75cfa2e01f383ba610038aca2356197f8ac75/src%2Ftest%2Frustdoc-ui%2Fnormalize-cycle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ae75cfa2e01f383ba610038aca2356197f8ac75/src%2Ftest%2Frustdoc-ui%2Fnormalize-cycle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fnormalize-cycle.rs?ref=4ae75cfa2e01f383ba610038aca2356197f8ac75", "patch": "@@ -0,0 +1,25 @@\n+// check-pass\n+// Regresion test for <https://github.com/rust-lang/rust/issues/79459>.\n+pub trait Query {}\n+\n+pub trait AsQuery {\n+    type Query;\n+}\n+\n+impl<T: Query> AsQuery for T {\n+    type Query = T;\n+}\n+\n+pub trait SelectDsl<Selection> {\n+    type Output;\n+}\n+\n+impl<T, Selection> SelectDsl<Selection> for T\n+where\n+    T: AsQuery,\n+    T::Query: SelectDsl<Selection>,\n+{\n+    type Output = <T::Query as SelectDsl<Selection>>::Output;\n+}\n+\n+pub type Select<Source, Selection> = <Source as SelectDsl<Selection>>::Output;"}, {"sha": "0cdcc88e3141fc4136f777e9a2a8ba5de5be9492", "filename": "src/test/rustdoc-ui/normalize-overflow.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4ae75cfa2e01f383ba610038aca2356197f8ac75/src%2Ftest%2Frustdoc-ui%2Fnormalize-overflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ae75cfa2e01f383ba610038aca2356197f8ac75/src%2Ftest%2Frustdoc-ui%2Fnormalize-overflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fnormalize-overflow.rs?ref=4ae75cfa2e01f383ba610038aca2356197f8ac75", "patch": "@@ -0,0 +1,3 @@\n+// aux-crate:overflow=overflow.rs\n+// check-pass\n+// Regression test for <https://github.com/rust-lang/rust/issues/79506>."}]}