{"sha": "871d1317e51fce142def29b7bde9dcb1225050bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3MWQxMzE3ZTUxZmNlMTQyZGVmMjliN2JkZTlkY2IxMjI1MDUwYmY=", "commit": {"author": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-08-10T21:38:49Z"}, "committer": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-08-15T16:26:51Z"}, "message": "Move mode for lib comm, converted a few tests.", "tree": {"sha": "9352e1f8698a2aa29716e635b1a249ff38f51fce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9352e1f8698a2aa29716e635b1a249ff38f51fce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/871d1317e51fce142def29b7bde9dcb1225050bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/871d1317e51fce142def29b7bde9dcb1225050bf", "html_url": "https://github.com/rust-lang/rust/commit/871d1317e51fce142def29b7bde9dcb1225050bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/871d1317e51fce142def29b7bde9dcb1225050bf/comments", "author": null, "committer": null, "parents": [{"sha": "39b16077bbcac64eb62f484486c703aed405ef2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/39b16077bbcac64eb62f484486c703aed405ef2f", "html_url": "https://github.com/rust-lang/rust/commit/39b16077bbcac64eb62f484486c703aed405ef2f"}], "stats": {"total": 53, "additions": 29, "deletions": 24}, "files": [{"sha": "96f5cb53262f8f1f055eb7c6de4b10e1786aaea7", "filename": "src/lib/comm.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/871d1317e51fce142def29b7bde9dcb1225050bf/src%2Flib%2Fcomm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/871d1317e51fce142def29b7bde9dcb1225050bf/src%2Flib%2Fcomm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fcomm.rs?ref=871d1317e51fce142def29b7bde9dcb1225050bf", "patch": "@@ -4,6 +4,7 @@ import unsafe;\n import task;\n import task::task_id;\n \n+export chan_t;\n export _chan;\n export _port;\n \n@@ -20,10 +21,8 @@ native \"rust\" mod rustrt {\n     fn take_chan(ch : *rust_chan);\n     fn drop_chan(ch : *rust_chan);\n     fn chan_send(ch: *rust_chan, v : *void);\n-    // FIXME: data should be -T, not &T, but this doesn't seem to be\n-    // supported yet.\n     fn chan_id_send[~T](target_task : task_id, target_port : port_id,\n-                        data : &T);\n+                        data : -T);\n \n     fn new_port(unit_sz : uint) -> *rust_port;\n     fn del_port(po : *rust_port);\n@@ -90,7 +89,6 @@ fn mk_port[~T]() -> _port[T] {\n     _port(@port_ptr(rustrt::new_port(sys::size_of[T]())))\n }\n \n-// FIXME: make data move-mode once the snapshot is updated.\n-fn send[~T](ch : chan_t[T], data : &T) {\n+fn send[~T](ch : chan_t[T], data : -T) {\n     rustrt::chan_id_send(ch.task, ch.port, data);\n-}\n\\ No newline at end of file\n+}"}, {"sha": "213a0faa991b1b5ae1813e4b57ea50584b9bd8b1", "filename": "src/test/run-pass/lazychan.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/871d1317e51fce142def29b7bde9dcb1225050bf/src%2Ftest%2Frun-pass%2Flazychan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/871d1317e51fce142def29b7bde9dcb1225050bf/src%2Ftest%2Frun-pass%2Flazychan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flazychan.rs?ref=871d1317e51fce142def29b7bde9dcb1225050bf", "patch": "@@ -2,16 +2,15 @@\n \n fn main() {\n     let p: port[int] = port();\n-    let c = chan(p);\n     let y: int;\n \n-    spawn child(c);\n+    spawn child(chan(p));\n     p |> y;\n     log \"received 1\";\n     log y;\n     assert (y == 10);\n \n-    spawn child(c);\n+    spawn child(chan(p));\n     p |> y;\n     log \"received 2\";\n     log y;"}, {"sha": "736504c6f67feaae334140ab880f6faa8651f734", "filename": "src/test/run-pass/task-comm-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/871d1317e51fce142def29b7bde9dcb1225050bf/src%2Ftest%2Frun-pass%2Ftask-comm-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/871d1317e51fce142def29b7bde9dcb1225050bf/src%2Ftest%2Frun-pass%2Ftask-comm-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-2.rs?ref=871d1317e51fce142def29b7bde9dcb1225050bf", "patch": "@@ -21,4 +21,4 @@ fn test00() {\n     for t: task  in tasks { task::join(t); }\n \n     log \"Joined all task.\";\n-}\n\\ No newline at end of file\n+}"}, {"sha": "fa2f220d1646d7d4d63349071dbcfa3c5ea0fe57", "filename": "src/test/run-pass/task-comm-3.rs", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/871d1317e51fce142def29b7bde9dcb1225050bf/src%2Ftest%2Frun-pass%2Ftask-comm-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/871d1317e51fce142def29b7bde9dcb1225050bf/src%2Ftest%2Frun-pass%2Ftask-comm-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-3.rs?ref=871d1317e51fce142def29b7bde9dcb1225050bf", "patch": "@@ -1,14 +1,21 @@\n+// xfail for now, due to some problem with polymorphic types.\n+// xfail-stage2\n use std;\n import std::task;\n import std::comm;\n+import std::comm::chan_t;\n+import std::comm::send;\n \n fn main() { log \"===== WITHOUT THREADS =====\"; test00(); }\n \n-fn test00_start(pch: *u8, message: int, count: int) {\n+fn test00_start(ch: chan_t[int], message: int, count: int) {\n     log \"Starting test00_start\";\n-    let ch = comm::chan_from_unsafe_ptr(pch);\n     let i: int = 0;\n-    while i < count { log \"Sending Message\"; ch.send(message); i = i + 1; }\n+    while i < count {\n+        log \"Sending Message\";\n+        send(ch, message);\n+        i = i + 1;\n+    }\n     log \"Ending test00_start\";\n }\n \n@@ -19,15 +26,15 @@ fn test00() {\n     log \"Creating tasks\";\n \n     let po = comm::mk_port();\n-    let ch = po.mk_chan();\n+    let ch = po.mk_chan2();\n \n     let i: int = 0;\n \n     // Create and spawn tasks...\n     let tasks: [task] = ~[];\n     while i < number_of_tasks {\n         tasks +=\n-            ~[spawn test00_start(ch.unsafe_ptr(), i, number_of_messages)];\n+            [spawn test00_start(ch.unsafe_ptr(), i, number_of_messages)];\n         i = i + 1;\n     }\n "}, {"sha": "e83fffca0e707c72ab15f56e3182b21edb9f75cf", "filename": "src/test/run-pass/task-comm-4.rs", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/871d1317e51fce142def29b7bde9dcb1225050bf/src%2Ftest%2Frun-pass%2Ftask-comm-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/871d1317e51fce142def29b7bde9dcb1225050bf/src%2Ftest%2Frun-pass%2Ftask-comm-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-4.rs?ref=871d1317e51fce142def29b7bde9dcb1225050bf", "patch": "@@ -1,17 +1,18 @@\n use std;\n import std::comm;\n+import std::comm::send;\n \n fn main() { test00(); }\n \n fn test00() {\n     let r: int = 0;\n     let sum: int = 0;\n     let p = comm::mk_port();\n-    let c = p.mk_chan();\n-    c.send(1);\n-    c.send(2);\n-    c.send(3);\n-    c.send(4);\n+    let c = p.mk_chan2();\n+    send(c, 1);\n+    send(c, 2);\n+    send(c, 3);\n+    send(c, 4);\n     r = p.recv();\n     sum += r;\n     log r;\n@@ -24,10 +25,10 @@ fn test00() {\n     r = p.recv();\n     sum += r;\n     log r;\n-    c.send(5);\n-    c.send(6);\n-    c.send(7);\n-    c.send(8);\n+    send(c, 5);\n+    send(c, 6);\n+    send(c, 7);\n+    send(c, 8);\n     r = p.recv();\n     sum += r;\n     log r;"}]}