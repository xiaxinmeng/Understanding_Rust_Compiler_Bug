{"sha": "b2d869dc8075a78d5f2f163f6691bad14b16e4b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyZDg2OWRjODA3NWE3OGQ1ZjJmMTYzZjY2OTFiYWQxNGIxNmU0YjA=", "commit": {"author": {"name": "gaurikholkar", "email": "f2013002@goa.bits-pilani.ac.in", "date": "2017-08-15T16:46:29Z"}, "committer": {"name": "gaurikholkar", "email": "f2013002@goa.bits-pilani.ac.in", "date": "2017-09-12T04:36:29Z"}, "message": "add logs", "tree": {"sha": "2a7bb106384dd57fb2f1bdb9738f0b949eca676a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a7bb106384dd57fb2f1bdb9738f0b949eca676a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2d869dc8075a78d5f2f163f6691bad14b16e4b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2d869dc8075a78d5f2f163f6691bad14b16e4b0", "html_url": "https://github.com/rust-lang/rust/commit/b2d869dc8075a78d5f2f163f6691bad14b16e4b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2d869dc8075a78d5f2f163f6691bad14b16e4b0/comments", "author": {"login": "gaurikholkar", "id": 117768111, "node_id": "U_kgDOBwT_rw", "avatar_url": "https://avatars.githubusercontent.com/u/117768111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaurikholkar", "html_url": "https://github.com/gaurikholkar", "followers_url": "https://api.github.com/users/gaurikholkar/followers", "following_url": "https://api.github.com/users/gaurikholkar/following{/other_user}", "gists_url": "https://api.github.com/users/gaurikholkar/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaurikholkar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaurikholkar/subscriptions", "organizations_url": "https://api.github.com/users/gaurikholkar/orgs", "repos_url": "https://api.github.com/users/gaurikholkar/repos", "events_url": "https://api.github.com/users/gaurikholkar/events{/privacy}", "received_events_url": "https://api.github.com/users/gaurikholkar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gaurikholkar", "id": 117768111, "node_id": "U_kgDOBwT_rw", "avatar_url": "https://avatars.githubusercontent.com/u/117768111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaurikholkar", "html_url": "https://github.com/gaurikholkar", "followers_url": "https://api.github.com/users/gaurikholkar/followers", "following_url": "https://api.github.com/users/gaurikholkar/following{/other_user}", "gists_url": "https://api.github.com/users/gaurikholkar/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaurikholkar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaurikholkar/subscriptions", "organizations_url": "https://api.github.com/users/gaurikholkar/orgs", "repos_url": "https://api.github.com/users/gaurikholkar/repos", "events_url": "https://api.github.com/users/gaurikholkar/events{/privacy}", "received_events_url": "https://api.github.com/users/gaurikholkar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed1181272e5f33c2a329c3cf0e267cae99fab06a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed1181272e5f33c2a329c3cf0e267cae99fab06a", "html_url": "https://github.com/rust-lang/rust/commit/ed1181272e5f33c2a329c3cf0e267cae99fab06a"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "186eda95fecbde4424d34a3325fbb723ed94cbd5", "filename": "fn.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b2d869dc8075a78d5f2f163f6691bad14b16e4b0/fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2d869dc8075a78d5f2f163f6691bad14b16e4b0/fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/fn.rs?ref=b2d869dc8075a78d5f2f163f6691bad14b16e4b0", "patch": "@@ -0,0 +1,8 @@\n+\n+fn foo(x:  fn(&u8, &u8), y: Vec<&u8>, z: &u8) {\n+// Debruijn   1    1            1        1\n+// Anon-Index 0    1            0        1\n+//            ------\n+//            debruijn indices are shifted by 1 in here\n+  y.push(z); // index will be zero or one\n+}"}, {"sha": "634f57886607139709d4f51025ba7ba065674ccb", "filename": "src/librustc/infer/error_reporting/anon_anon_conflict.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b2d869dc8075a78d5f2f163f6691bad14b16e4b0/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fanon_anon_conflict.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2d869dc8075a78d5f2f163f6691bad14b16e4b0/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fanon_anon_conflict.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fanon_anon_conflict.rs?ref=b2d869dc8075a78d5f2f163f6691bad14b16e4b0", "patch": "@@ -267,14 +267,17 @@ impl<'a, 'gcx, 'tcx> Visitor<'gcx> for FindNestedTypeVisitor<'a, 'gcx, 'tcx> {\n             }\n \n             hir::TyBareFn(ref fndecl) => {\n-                fndecl.lifetimes.iter().filter_map(|lf| {\n+                fndecl.lifetimes.iter().map(|lf| {\n+                                            debug!(\"arg we are handling is...{:?}\",arg);\n                     match self.infcx.tcx.named_region_map.defs.get(&lf.lifetime.id) {\n-\n                         Some(&rl::Region::LateBoundAnon(debuijn_index, anon_index)) => {\n+                            debug!(\"debuijn_index.depth ={:?} self.depth = {:?} anon_index ={:?} br_index={:?}\",\n+                            debuijn_index.depth, self.depth, anon_index, br_index);\n                         if debuijn_index.depth == self.depth && anon_index == br_index {\n+                            debug!(\"arg is {:?}\",Some(arg));\n                             self.found_type = Some(arg);\n                             return; // we can stop visiting now\n-                        }else{}\n+                        }\n                     }\n                     Some(&rl::Region::Static) |\n                     Some(&rl::Region::EarlyBound(_, _)) |\n@@ -292,6 +295,7 @@ impl<'a, 'gcx, 'tcx> Visitor<'gcx> for FindNestedTypeVisitor<'a, 'gcx, 'tcx> {\n         // walk the embedded contents: e.g., if we are visiting `Vec<&Foo>`,\n         // go on to visit `&Foo`\n         self.depth += 1;\n+        debug!(\"depth is {:?}\",self.depth);\n         intravisit::walk_ty(self, arg);\n         self.depth += 1;\n     }"}]}