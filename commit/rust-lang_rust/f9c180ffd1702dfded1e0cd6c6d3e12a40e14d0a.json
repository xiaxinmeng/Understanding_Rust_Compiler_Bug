{"sha": "f9c180ffd1702dfded1e0cd6c6d3e12a40e14d0a", "node_id": "C_kwDOAAsO6NoAKGY5YzE4MGZmZDE3MDJkZmRlZDFlMGNkNmM2ZDNlMTJhNDBlMTRkMGE", "commit": {"author": {"name": "austaras", "email": "austaras@outlook.com", "date": "2022-08-26T10:12:38Z"}, "committer": {"name": "austaras", "email": "austaras@outlook.com", "date": "2022-08-28T16:24:56Z"}, "message": "update tests", "tree": {"sha": "341e1a2ad51dc468af3a9dd60ae057edb23a1e51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/341e1a2ad51dc468af3a9dd60ae057edb23a1e51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9c180ffd1702dfded1e0cd6c6d3e12a40e14d0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9c180ffd1702dfded1e0cd6c6d3e12a40e14d0a", "html_url": "https://github.com/rust-lang/rust/commit/f9c180ffd1702dfded1e0cd6c6d3e12a40e14d0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9c180ffd1702dfded1e0cd6c6d3e12a40e14d0a/comments", "author": {"login": "Austaras", "id": 15013925, "node_id": "MDQ6VXNlcjE1MDEzOTI1", "avatar_url": "https://avatars.githubusercontent.com/u/15013925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Austaras", "html_url": "https://github.com/Austaras", "followers_url": "https://api.github.com/users/Austaras/followers", "following_url": "https://api.github.com/users/Austaras/following{/other_user}", "gists_url": "https://api.github.com/users/Austaras/gists{/gist_id}", "starred_url": "https://api.github.com/users/Austaras/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Austaras/subscriptions", "organizations_url": "https://api.github.com/users/Austaras/orgs", "repos_url": "https://api.github.com/users/Austaras/repos", "events_url": "https://api.github.com/users/Austaras/events{/privacy}", "received_events_url": "https://api.github.com/users/Austaras/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Austaras", "id": 15013925, "node_id": "MDQ6VXNlcjE1MDEzOTI1", "avatar_url": "https://avatars.githubusercontent.com/u/15013925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Austaras", "html_url": "https://github.com/Austaras", "followers_url": "https://api.github.com/users/Austaras/followers", "following_url": "https://api.github.com/users/Austaras/following{/other_user}", "gists_url": "https://api.github.com/users/Austaras/gists{/gist_id}", "starred_url": "https://api.github.com/users/Austaras/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Austaras/subscriptions", "organizations_url": "https://api.github.com/users/Austaras/orgs", "repos_url": "https://api.github.com/users/Austaras/repos", "events_url": "https://api.github.com/users/Austaras/events{/privacy}", "received_events_url": "https://api.github.com/users/Austaras/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0dd9eef1b9bce0b5b6260c620f5e37f50b618ae5", "url": "https://api.github.com/repos/rust-lang/rust/commits/0dd9eef1b9bce0b5b6260c620f5e37f50b618ae5", "html_url": "https://github.com/rust-lang/rust/commit/0dd9eef1b9bce0b5b6260c620f5e37f50b618ae5"}], "stats": {"total": 66, "additions": 58, "deletions": 8}, "files": [{"sha": "bc1122a9d234e7d87e67525ffa50e913d5be5c12", "filename": "crates/ide-assists/src/handlers/replace_or_with_or_else.rs", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/f9c180ffd1702dfded1e0cd6c6d3e12a40e14d0a/crates%2Fide-assists%2Fsrc%2Fhandlers%2Freplace_or_with_or_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9c180ffd1702dfded1e0cd6c6d3e12a40e14d0a/crates%2Fide-assists%2Fsrc%2Fhandlers%2Freplace_or_with_or_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Fhandlers%2Freplace_or_with_or_else.rs?ref=f9c180ffd1702dfded1e0cd6c6d3e12a40e14d0a", "patch": "@@ -14,13 +14,18 @@ use crate::{AssistContext, Assists};\n // Replace `unwrap_or` with `unwrap_or_else` and `ok_or` with `ok_or_else`.\n //\n // ```\n-// let a = Some(1);\n-// a.unwra$0p_or(2);\n+// # //- minicore:option\n+// fn foo() {\n+//     let a = Some(1);\n+//     a.unwra$0p_or(2);\n+// }\n // ```\n // ->\n // ```\n-// let a = Some(1);\n-// a.unwrap_or_else(|| 2);\n+// fn foo() {\n+//     let a = Some(1);\n+//     a.unwrap_or_else(|| 2);\n+// }\n // ```\n pub(crate) fn replace_or_with_or_else(acc: &mut Assists, ctx: &AssistContext<'_>) -> Option<()> {\n     let call: ast::MethodCallExpr = ctx.find_node_at_offset()?;\n@@ -71,13 +76,18 @@ pub(crate) fn replace_or_with_or_else(acc: &mut Assists, ctx: &AssistContext<'_>\n // Replace `unwrap_or_else` with `unwrap_or` and `ok_or_else` with `ok_or`.\n //\n // ```\n-// let a = Some(1);\n-// a.unwra$0p_or_else(|| 2);\n+// # //- minicore:option\n+// fn foo() {\n+//     let a = Some(1);\n+//     a.unwra$0p_or_else(|| 2);\n+// }\n // ```\n // ->\n // ```\n-// let a = Some(1);\n-// a.unwrap_or(2);\n+// fn foo() {\n+//     let a = Some(1);\n+//     a.unwrap_or(2);\n+// }\n // ```\n pub(crate) fn replace_or_else_with_or(acc: &mut Assists, ctx: &AssistContext<'_>) -> Option<()> {\n     let call: ast::MethodCallExpr = ctx.find_node_at_offset()?;"}, {"sha": "15992722b14f1f9b37a8f303e38b201c63ad2928", "filename": "crates/ide-assists/src/tests/generated.rs", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/f9c180ffd1702dfded1e0cd6c6d3e12a40e14d0a/crates%2Fide-assists%2Fsrc%2Ftests%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9c180ffd1702dfded1e0cd6c6d3e12a40e14d0a/crates%2Fide-assists%2Fsrc%2Ftests%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Ftests%2Fgenerated.rs?ref=f9c180ffd1702dfded1e0cd6c6d3e12a40e14d0a", "patch": "@@ -2009,6 +2009,46 @@ fn handle(action: Action) {\n     )\n }\n \n+#[test]\n+fn doctest_replace_or_else_with_or() {\n+    check_doc_test(\n+        \"replace_or_else_with_or\",\n+        r#####\"\n+//- minicore:option\n+fn foo() {\n+    let a = Some(1);\n+    a.unwra$0p_or_else(|| 2);\n+}\n+\"#####,\n+        r#####\"\n+fn foo() {\n+    let a = Some(1);\n+    a.unwrap_or(2);\n+}\n+\"#####,\n+    )\n+}\n+\n+#[test]\n+fn doctest_replace_or_with_or_else() {\n+    check_doc_test(\n+        \"replace_or_with_or_else\",\n+        r#####\"\n+//- minicore:option\n+fn foo() {\n+    let a = Some(1);\n+    a.unwra$0p_or(2);\n+}\n+\"#####,\n+        r#####\"\n+fn foo() {\n+    let a = Some(1);\n+    a.unwrap_or_else(|| 2);\n+}\n+\"#####,\n+    )\n+}\n+\n #[test]\n fn doctest_replace_qualified_name_with_use() {\n     check_doc_test("}]}