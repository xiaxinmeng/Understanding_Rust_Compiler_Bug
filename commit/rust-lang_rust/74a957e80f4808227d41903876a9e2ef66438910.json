{"sha": "74a957e80f4808227d41903876a9e2ef66438910", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0YTk1N2U4MGY0ODA4MjI3ZDQxOTAzODc2YTllMmVmNjY0Mzg5MTA=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2018-01-12T04:32:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-01-12T04:32:55Z"}, "message": "Merge pull request #2357 from topecongiro/issue-2342\n\nPut attributes and struct fields on different line by default", "tree": {"sha": "bfdead037db9345a76347ffd58c74a5b4904518f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bfdead037db9345a76347ffd58c74a5b4904518f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74a957e80f4808227d41903876a9e2ef66438910", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaWDp3CRBK7hj4Ov3rIwAAdHIIAKU3Yhkgnl4IUWnmiMmasn+K\nn7G5CtLQig0Xhjygc3+OKOeS/bByDjemSVP2rx0xQn6rUqrWahfgfaq3pBfH9MxG\ncqQaPKEErk8jLgLeQnGkIf0RhcL4jS4HCv+KoLPz2NNpTgtagPMl4VveY4ry5dnu\nazAEyIeOLSPFfmpTvsrEV1J2ZoM6i4wveMDVjAv/pIDE3oFUZHPHWqN1yYyJSMht\nP2jlbyvANifsqQ8lfAFkDifyctAUH8RoY2CRAOzJrf/+xV5cKOyeu6kodjKXQTM8\ncR/75Chli65Diu99sMaylL7XYE20i+4aGIv+4h4SrZRyr+A70guFu5oELPpHi6o=\n=gmIC\n-----END PGP SIGNATURE-----\n", "payload": "tree bfdead037db9345a76347ffd58c74a5b4904518f\nparent a7d1d1da0e621e7ba18182b2c504e33338eaa735\nparent fbbaab805170ac6092e5bb99e6a18fb5230751f0\nauthor Nick Cameron <nrc@ncameron.org> 1515731575 +1300\ncommitter GitHub <noreply@github.com> 1515731575 +1300\n\nMerge pull request #2357 from topecongiro/issue-2342\n\nPut attributes and struct fields on different line by default"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74a957e80f4808227d41903876a9e2ef66438910", "html_url": "https://github.com/rust-lang/rust/commit/74a957e80f4808227d41903876a9e2ef66438910", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74a957e80f4808227d41903876a9e2ef66438910/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7d1d1da0e621e7ba18182b2c504e33338eaa735", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7d1d1da0e621e7ba18182b2c504e33338eaa735", "html_url": "https://github.com/rust-lang/rust/commit/a7d1d1da0e621e7ba18182b2c504e33338eaa735"}, {"sha": "fbbaab805170ac6092e5bb99e6a18fb5230751f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/fbbaab805170ac6092e5bb99e6a18fb5230751f0", "html_url": "https://github.com/rust-lang/rust/commit/fbbaab805170ac6092e5bb99e6a18fb5230751f0"}], "stats": {"total": 184, "additions": 34, "deletions": 150}, "files": [{"sha": "c771de7d044b60107ac0a1196db9b037fd973510", "filename": "CHANGELOG.md", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/74a957e80f4808227d41903876a9e2ef66438910/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/74a957e80f4808227d41903876a9e2ef66438910/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=74a957e80f4808227d41903876a9e2ef66438910", "patch": "@@ -2,6 +2,10 @@\n \n ## [Unreleased]\n \n+### Changed\n+\n+- Remove `same_line_attributes` configuration option.\n+\n ## [0.3.4] 2017-12-23\n \n ### Added"}, {"sha": "4b19ea0791246186fbe5e9a81db9593bfa503f34", "filename": "Configurations.md", "status": "modified", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/74a957e80f4808227d41903876a9e2ef66438910/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/74a957e80f4808227d41903876a9e2ef66438910/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=74a957e80f4808227d41903876a9e2ef66438910", "patch": "@@ -246,53 +246,6 @@ fn lorem<Ipsum, Dolor, Sit, Amet>() -> T\n }\n ```\n \n-\n-## `same_line_attributes`\n-\n-Try to put attributes on the same line as fields and variants\n-\n-- **Default value**: `true`\n-- **Possible values**: `true`, `false`\n-- **Stable**: No\n-\n-#### `true` (default):\n-\n-```rust\n-struct Lorem {\n-    #[serde(rename = \"Ipsum\")] ipsum: usize,\n-    #[serde(rename = \"Dolor\")] dolor: usize,\n-    #[serde(rename = \"Amet\")] amet: usize,\n-}\n-\n-enum Lorem {\n-    #[serde(skip_serializing)] Ipsum,\n-    #[serde(skip_serializing)] Dolor,\n-    #[serde(skip_serializing)] Amet,\n-}\n-```\n-\n-#### `false`:\n-\n-```rust\n-struct Lorem {\n-    #[serde(rename = \"Ipsum\")]\n-    ipsum: usize,\n-    #[serde(rename = \"Dolor\")]\n-    dolor: usize,\n-    #[serde(rename = \"Amet\")]\n-    amet: usize,\n-}\n-\n-enum Lorem {\n-    #[serde(skip_serializing)]\n-    Ipsum,\n-    #[serde(skip_serializing)]\n-    Dolor,\n-    #[serde(skip_serializing)]\n-    Amet,\n-}\n-```\n-\n ## `use_small_heuristics`\n \n Whether to use different formatting for items and expressions if they satisfy a heuristic notion of 'small'."}, {"sha": "954858b93a6d757bea3bcef824357d863b810ccb", "filename": "src/config.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74a957e80f4808227d41903876a9e2ef66438910/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74a957e80f4808227d41903876a9e2ef66438910/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=74a957e80f4808227d41903876a9e2ef66438910", "patch": "@@ -648,8 +648,6 @@ create_config! {\n                                              threshold.\";\n     remove_blank_lines_at_start_or_end_of_block: bool, true, false,\n         \"Remove blank lines at start or end of a block\";\n-    same_line_attributes: bool, true, false,\n-        \"Try to put attributes on the same line as fields and variants.\";\n     match_arm_blocks: bool, true, false, \"Wrap the body of arms in blocks when it does not fit on \\\n         the same line with the pattern of arms\";\n     force_multiline_blocks: bool, false, false,"}, {"sha": "7f2273c6f6926a481a8e31c0156641ae3225ac8a", "filename": "src/file_lines.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/74a957e80f4808227d41903876a9e2ef66438910/src%2Ffile_lines.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74a957e80f4808227d41903876a9e2ef66438910/src%2Ffile_lines.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffile_lines.rs?ref=74a957e80f4808227d41903876a9e2ef66438910", "patch": "@@ -204,7 +204,8 @@ impl str::FromStr for FileLines {\n // For JSON decoding.\n #[derive(Clone, Debug, Deserialize)]\n struct JsonSpan {\n-    #[serde(deserialize_with = \"deserialize_filename\")] file: FileName,\n+    #[serde(deserialize_with = \"deserialize_filename\")]\n+    file: FileName,\n     range: (usize, usize),\n }\n "}, {"sha": "fcf545a37bd9ba49813579f7c8d9c362b0c11ef9", "filename": "src/items.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/74a957e80f4808227d41903876a9e2ef66438910/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74a957e80f4808227d41903876a9e2ef66438910/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=74a957e80f4808227d41903876a9e2ef66438910", "patch": "@@ -558,15 +558,13 @@ impl<'a> FmtVisitor<'a> {\n             }\n         };\n \n-        let attrs_extendable = attrs_str.is_empty()\n-            || (context.config.same_line_attributes() && is_attributes_extendable(&attrs_str));\n         combine_strs_with_missing_comments(\n             &context,\n             &attrs_str,\n             &variant_body,\n             span,\n             shape,\n-            attrs_extendable,\n+            is_attributes_extendable(&attrs_str),\n         )\n     }\n }\n@@ -1440,8 +1438,7 @@ pub fn rewrite_struct_field(\n     let prefix = rewrite_struct_field_prefix(context, field)?;\n \n     let attrs_str = field.attrs.rewrite(context, shape)?;\n-    let attrs_extendable = attrs_str.is_empty()\n-        || (context.config.same_line_attributes() && is_attributes_extendable(&attrs_str));\n+    let attrs_extendable = field.ident.is_none() && is_attributes_extendable(&attrs_str);\n     let missing_span = if field.attrs.is_empty() {\n         mk_sp(field.span.lo(), field.span.lo())\n     } else {"}, {"sha": "e56410202eb92f9a6f006e5c8575c7a7ca3593e7", "filename": "src/vertical.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/74a957e80f4808227d41903876a9e2ef66438910/src%2Fvertical.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74a957e80f4808227d41903876a9e2ef66438910/src%2Fvertical.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvertical.rs?ref=74a957e80f4808227d41903876a9e2ef66438910", "patch": "@@ -54,8 +54,7 @@ impl AlignedItem for ast::StructField {\n         } else {\n             mk_sp(self.attrs.last().unwrap().span.hi(), self.span.lo())\n         };\n-        let attrs_extendable =\n-            context.config.same_line_attributes() && is_attributes_extendable(&attrs_str);\n+        let attrs_extendable = self.ident.is_none() && is_attributes_extendable(&attrs_str);\n         rewrite_struct_field_prefix(context, self).and_then(|field_str| {\n             combine_strs_with_missing_comments(\n                 context,"}, {"sha": "a7983fdd0926ecab9e3ab8c98b279bd518c9c41b", "filename": "tests/source/configs/same_line_attributes/false.rs", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/a7d1d1da0e621e7ba18182b2c504e33338eaa735/tests%2Fsource%2Fconfigs%2Fsame_line_attributes%2Ffalse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7d1d1da0e621e7ba18182b2c504e33338eaa735/tests%2Fsource%2Fconfigs%2Fsame_line_attributes%2Ffalse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs%2Fsame_line_attributes%2Ffalse.rs?ref=a7d1d1da0e621e7ba18182b2c504e33338eaa735", "patch": "@@ -1,26 +0,0 @@\n-// rustfmt-same_line_attributes: false\n-// Option to place attributes on the same line as fields and variants where possible\n-\n-enum Lorem {\n-    #[ serde(skip_serializing) ]\n-    Ipsum,\n-    #[ serde(skip_serializing) ]\n-    Dolor,\n-    #[ serde(skip_serializing) ]\n-    Amet,\n-}\n-\n-struct Lorem {\n-    #[ serde(rename = \"Ipsum\") ]\n-    ipsum: usize,\n-    #[ serde(rename = \"Dolor\") ]\n-    dolor: usize,\n-    #[ serde(rename = \"Amet\") ]\n-    amet: usize,\n-}\n-\n-// #1943\n-pub struct Bzip2 {\n-    # [ serde (rename = \"level\") ]\n-     level: i32 ,\n-}"}, {"sha": "bf796954dd43259848b73ebcbbfb3412f0f265c6", "filename": "tests/source/configs/same_line_attributes/true.rs", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a7d1d1da0e621e7ba18182b2c504e33338eaa735/tests%2Fsource%2Fconfigs%2Fsame_line_attributes%2Ftrue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7d1d1da0e621e7ba18182b2c504e33338eaa735/tests%2Fsource%2Fconfigs%2Fsame_line_attributes%2Ftrue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs%2Fsame_line_attributes%2Ftrue.rs?ref=a7d1d1da0e621e7ba18182b2c504e33338eaa735", "patch": "@@ -1,20 +0,0 @@\n-// rustfmt-same_line_attributes: true\n-// Option to place attributes on the same line as fields and variants where possible\n-\n-enum Lorem {\n-    #[ serde(skip_serializing) ]\n-    Ipsum,\n-    #[ serde(skip_serializing) ]\n-    Dolor,\n-    #[ serde(skip_serializing) ]\n-    Amet,\n-}\n-\n-struct Lorem {\n-    #[ serde(rename = \"Ipsum\") ]\n-    ipsum: usize,\n-    #[ serde(rename = \"Dolor\") ]\n-    dolor: usize,\n-    #[ serde(rename = \"Amet\") ]\n-    amet: usize,\n-}"}, {"sha": "f86d24a146b436c9c7d7c2e0dc60244b31172c74", "filename": "tests/source/issue-2342.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/74a957e80f4808227d41903876a9e2ef66438910/tests%2Fsource%2Fissue-2342.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74a957e80f4808227d41903876a9e2ef66438910/tests%2Fsource%2Fissue-2342.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-2342.rs?ref=74a957e80f4808227d41903876a9e2ef66438910", "patch": "@@ -0,0 +1,5 @@\n+// rustfmt-max_width: 80\n+\n+struct Foo {\n+    #[cfg(feature = \"serde\")] bytes: [[u8; 17]; 5], // Same size as signature::ED25519_PKCS8_V2_LEN\n+}"}, {"sha": "43c4f9f327fd6ea5915113212927747c4aee481d", "filename": "tests/target/attrib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/74a957e80f4808227d41903876a9e2ef66438910/tests%2Ftarget%2Fattrib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74a957e80f4808227d41903876a9e2ef66438910/tests%2Ftarget%2Fattrib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fattrib.rs?ref=74a957e80f4808227d41903876a9e2ef66438910", "patch": "@@ -62,7 +62,8 @@ impl Bar {\n \n // #984\n struct Foo {\n-    #[derive(Clone, PartialEq, Debug, Deserialize, Serialize)] foo: usize,\n+    #[derive(Clone, PartialEq, Debug, Deserialize, Serialize)]\n+    foo: usize,\n }\n \n // #1668"}, {"sha": "84ac35174116aee6b3c5eef0eccddcac57419bdb", "filename": "tests/target/configs/same_line_attributes/false.rs", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/a7d1d1da0e621e7ba18182b2c504e33338eaa735/tests%2Ftarget%2Fconfigs%2Fsame_line_attributes%2Ffalse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7d1d1da0e621e7ba18182b2c504e33338eaa735/tests%2Ftarget%2Fconfigs%2Fsame_line_attributes%2Ffalse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs%2Fsame_line_attributes%2Ffalse.rs?ref=a7d1d1da0e621e7ba18182b2c504e33338eaa735", "patch": "@@ -1,26 +0,0 @@\n-// rustfmt-same_line_attributes: false\n-// Option to place attributes on the same line as fields and variants where possible\n-\n-enum Lorem {\n-    #[serde(skip_serializing)]\n-    Ipsum,\n-    #[serde(skip_serializing)]\n-    Dolor,\n-    #[serde(skip_serializing)]\n-    Amet,\n-}\n-\n-struct Lorem {\n-    #[serde(rename = \"Ipsum\")]\n-    ipsum: usize,\n-    #[serde(rename = \"Dolor\")]\n-    dolor: usize,\n-    #[serde(rename = \"Amet\")]\n-    amet: usize,\n-}\n-\n-// #1943\n-pub struct Bzip2 {\n-    #[serde(rename = \"level\")]\n-    level: i32,\n-}"}, {"sha": "c2d48bb0ba16ee216e199417ca22f1e47a669309", "filename": "tests/target/configs/same_line_attributes/true.rs", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a7d1d1da0e621e7ba18182b2c504e33338eaa735/tests%2Ftarget%2Fconfigs%2Fsame_line_attributes%2Ftrue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7d1d1da0e621e7ba18182b2c504e33338eaa735/tests%2Ftarget%2Fconfigs%2Fsame_line_attributes%2Ftrue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs%2Fsame_line_attributes%2Ftrue.rs?ref=a7d1d1da0e621e7ba18182b2c504e33338eaa735", "patch": "@@ -1,14 +0,0 @@\n-// rustfmt-same_line_attributes: true\n-// Option to place attributes on the same line as fields and variants where possible\n-\n-enum Lorem {\n-    #[serde(skip_serializing)] Ipsum,\n-    #[serde(skip_serializing)] Dolor,\n-    #[serde(skip_serializing)] Amet,\n-}\n-\n-struct Lorem {\n-    #[serde(rename = \"Ipsum\")] ipsum: usize,\n-    #[serde(rename = \"Dolor\")] dolor: usize,\n-    #[serde(rename = \"Amet\")] amet: usize,\n-}"}, {"sha": "b84afc56835f58889b37ce750767323facd46551", "filename": "tests/target/configs/struct_field_align_threshold/20.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/74a957e80f4808227d41903876a9e2ef66438910/tests%2Ftarget%2Fconfigs%2Fstruct_field_align_threshold%2F20.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74a957e80f4808227d41903876a9e2ef66438910/tests%2Ftarget%2Fconfigs%2Fstruct_field_align_threshold%2F20.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs%2Fstruct_field_align_threshold%2F20.rs?ref=74a957e80f4808227d41903876a9e2ef66438910", "patch": "@@ -40,7 +40,8 @@ pub struct Foo {\n     f :   SomeType, // Comment beside a field\n     f: SomeType, // Comment beside a field\n     // Comment on a field\n-    #[AnAttribute] g: SomeOtherType,\n+    #[AnAttribute]\n+    g: SomeOtherType,\n     /// A doc comment on a field\n     h: AThirdType,\n     pub i: TypeForPublicField,"}, {"sha": "09578d7ec24aa55dbaa654c95f51f9974e9befcc", "filename": "tests/target/enum.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/74a957e80f4808227d41903876a9e2ef66438910/tests%2Ftarget%2Fenum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74a957e80f4808227d41903876a9e2ef66438910/tests%2Ftarget%2Fenum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fenum.rs?ref=74a957e80f4808227d41903876a9e2ef66438910", "patch": "@@ -42,7 +42,8 @@ enum StructLikeVariants {\n     StructLike {\n         x: i32, // Test comment\n         // Pre-comment\n-        #[Attr50] y: SomeType, // Aanother Comment\n+        #[Attr50]\n+        y: SomeType, // Aanother Comment\n     },\n     SL {\n         a: A,"}, {"sha": "f9c26857e15c870a93514cf24ba173ea1d03d832", "filename": "tests/target/issue-2342.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/74a957e80f4808227d41903876a9e2ef66438910/tests%2Ftarget%2Fissue-2342.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74a957e80f4808227d41903876a9e2ef66438910/tests%2Ftarget%2Fissue-2342.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-2342.rs?ref=74a957e80f4808227d41903876a9e2ef66438910", "patch": "@@ -0,0 +1,6 @@\n+// rustfmt-max_width: 80\n+\n+struct Foo {\n+    #[cfg(feature = \"serde\")]\n+    bytes: [[u8; 17]; 5], // Same size as signature::ED25519_PKCS8_V2_LEN\n+}"}, {"sha": "5d6e92a91d9f3786d7eb81beccc2a09e1869be5d", "filename": "tests/target/struct-field-attributes.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/74a957e80f4808227d41903876a9e2ef66438910/tests%2Ftarget%2Fstruct-field-attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74a957e80f4808227d41903876a9e2ef66438910/tests%2Ftarget%2Fstruct-field-attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fstruct-field-attributes.rs?ref=74a957e80f4808227d41903876a9e2ef66438910", "patch": "@@ -4,7 +4,8 @@\n struct Foo {\n     bar: u64,\n \n-    #[cfg(test)] qux: u64,\n+    #[cfg(test)]\n+    qux: u64,\n }\n \n fn do_something() -> Foo {\n@@ -23,7 +24,8 @@ fn main() {\n // #1462\n struct Foo {\n     foo: usize,\n-    #[cfg(feature = \"include-bar\")] bar: usize,\n+    #[cfg(feature = \"include-bar\")]\n+    bar: usize,\n }\n \n fn new_foo() -> Foo {"}, {"sha": "0eedea6933c0f9b000124d81615fbd013f2fd637", "filename": "tests/target/structs.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/74a957e80f4808227d41903876a9e2ef66438910/tests%2Ftarget%2Fstructs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74a957e80f4808227d41903876a9e2ef66438910/tests%2Ftarget%2Fstructs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fstructs.rs?ref=74a957e80f4808227d41903876a9e2ef66438910", "patch": "@@ -8,7 +8,8 @@ pub struct Foo {\n     f :   SomeType, // Comment beside a field\n     f: SomeType, // Comment beside a field\n     // Comment on a field\n-    #[AnAttribute] g: SomeOtherType,\n+    #[AnAttribute]\n+    g: SomeOtherType,\n     /// A doc comment on a field\n     h: AThirdType,\n     pub i: TypeForPublicField,"}, {"sha": "eb6c3ae7e15d5faa20259a3ac0b124924e182664", "filename": "tests/target/unions.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/74a957e80f4808227d41903876a9e2ef66438910/tests%2Ftarget%2Funions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74a957e80f4808227d41903876a9e2ef66438910/tests%2Ftarget%2Funions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Funions.rs?ref=74a957e80f4808227d41903876a9e2ef66438910", "patch": "@@ -8,7 +8,8 @@ pub union Foo {\n     f :   SomeType, // Comment beside a field\n     f: SomeType, // Comment beside a field\n     // Comment on a field\n-    #[AnAttribute] g: SomeOtherType,\n+    #[AnAttribute]\n+    g: SomeOtherType,\n     /// A doc comment on a field\n     h: AThirdType,\n     pub i: TypeForPublicField,"}]}