{"sha": "eb9c6698ee36570efe79343d746afa3dcd04c7a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViOWM2Njk4ZWUzNjU3MGVmZTc5MzQzZDc0NmFmYTNkY2QwNGM3YTk=", "commit": {"author": {"name": "Bastian Kersting", "email": "bastian@cmbt.de", "date": "2020-12-20T10:48:56Z"}, "committer": {"name": "Bastian Kersting", "email": "bastian@cmbt.de", "date": "2021-02-05T19:19:22Z"}, "message": "First version of the lint", "tree": {"sha": "f214996d5bc4beb4cadf2ddd3561e94a53f214bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f214996d5bc4beb4cadf2ddd3561e94a53f214bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb9c6698ee36570efe79343d746afa3dcd04c7a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb9c6698ee36570efe79343d746afa3dcd04c7a9", "html_url": "https://github.com/rust-lang/rust/commit/eb9c6698ee36570efe79343d746afa3dcd04c7a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb9c6698ee36570efe79343d746afa3dcd04c7a9/comments", "author": {"login": "1c3t3a", "id": 45260993, "node_id": "MDQ6VXNlcjQ1MjYwOTkz", "avatar_url": "https://avatars.githubusercontent.com/u/45260993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1c3t3a", "html_url": "https://github.com/1c3t3a", "followers_url": "https://api.github.com/users/1c3t3a/followers", "following_url": "https://api.github.com/users/1c3t3a/following{/other_user}", "gists_url": "https://api.github.com/users/1c3t3a/gists{/gist_id}", "starred_url": "https://api.github.com/users/1c3t3a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1c3t3a/subscriptions", "organizations_url": "https://api.github.com/users/1c3t3a/orgs", "repos_url": "https://api.github.com/users/1c3t3a/repos", "events_url": "https://api.github.com/users/1c3t3a/events{/privacy}", "received_events_url": "https://api.github.com/users/1c3t3a/received_events", "type": "User", "site_admin": false}, "committer": {"login": "1c3t3a", "id": 45260993, "node_id": "MDQ6VXNlcjQ1MjYwOTkz", "avatar_url": "https://avatars.githubusercontent.com/u/45260993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1c3t3a", "html_url": "https://github.com/1c3t3a", "followers_url": "https://api.github.com/users/1c3t3a/followers", "following_url": "https://api.github.com/users/1c3t3a/following{/other_user}", "gists_url": "https://api.github.com/users/1c3t3a/gists{/gist_id}", "starred_url": "https://api.github.com/users/1c3t3a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1c3t3a/subscriptions", "organizations_url": "https://api.github.com/users/1c3t3a/orgs", "repos_url": "https://api.github.com/users/1c3t3a/repos", "events_url": "https://api.github.com/users/1c3t3a/events{/privacy}", "received_events_url": "https://api.github.com/users/1c3t3a/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a507c27660d05f37307369d30bee9e82ce3a11e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/a507c27660d05f37307369d30bee9e82ce3a11e1", "html_url": "https://github.com/rust-lang/rust/commit/a507c27660d05f37307369d30bee9e82ce3a11e1"}], "stats": {"total": 98, "additions": 98, "deletions": 0}, "files": [{"sha": "d0164d3be377f43f35c008897eb189f74d6521f9", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eb9c6698ee36570efe79343d746afa3dcd04c7a9/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/eb9c6698ee36570efe79343d746afa3dcd04c7a9/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=eb9c6698ee36570efe79343d746afa3dcd04c7a9", "patch": "@@ -2185,6 +2185,7 @@ Released 2018-09-13\n [`same_item_push`]: https://rust-lang.github.io/rust-clippy/master/index.html#same_item_push\n [`search_is_some`]: https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n [`self_assignment`]: https://rust-lang.github.io/rust-clippy/master/index.html#self_assignment\n+[`semicolon_if_nothing_returned`]: https://rust-lang.github.io/rust-clippy/master/index.html#semicolon_if_nothing_returned\n [`serde_api_misuse`]: https://rust-lang.github.io/rust-clippy/master/index.html#serde_api_misuse\n [`shadow_reuse`]: https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse\n [`shadow_same`]: https://rust-lang.github.io/rust-clippy/master/index.html#shadow_same"}, {"sha": "f6014c246d6857367a65fe72451e2328c2afe563", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/eb9c6698ee36570efe79343d746afa3dcd04c7a9/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb9c6698ee36570efe79343d746afa3dcd04c7a9/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=eb9c6698ee36570efe79343d746afa3dcd04c7a9", "patch": "@@ -310,6 +310,7 @@ mod regex;\n mod repeat_once;\n mod returns;\n mod self_assignment;\n+mod semicolon_if_nothing_returned;\n mod serde_api;\n mod shadow;\n mod single_component_path_imports;\n@@ -876,6 +877,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         &returns::LET_AND_RETURN,\n         &returns::NEEDLESS_RETURN,\n         &self_assignment::SELF_ASSIGNMENT,\n+        &semicolon_if_nothing_returned::SEMICOLON_IF_NOTHING_RETURNED,\n         &serde_api::SERDE_API_MISUSE,\n         &shadow::SHADOW_REUSE,\n         &shadow::SHADOW_SAME,\n@@ -1237,6 +1239,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(|| box manual_unwrap_or::ManualUnwrapOr);\n     store.register_late_pass(|| box manual_ok_or::ManualOkOr);\n     store.register_late_pass(|| box float_equality_without_abs::FloatEqualityWithoutAbs);\n+    store.register_late_pass(|| box semicolon_if_nothing_returned::SemicolonIfNothingReturned);\n     store.register_late_pass(|| box async_yields_async::AsyncYieldsAsync);\n     let disallowed_methods = conf.disallowed_methods.iter().cloned().collect::<FxHashSet<_>>();\n     store.register_late_pass(move || box disallowed_method::DisallowedMethod::new(&disallowed_methods));\n@@ -1364,6 +1367,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&ranges::RANGE_PLUS_ONE),\n         LintId::of(&redundant_else::REDUNDANT_ELSE),\n         LintId::of(&ref_option_ref::REF_OPTION_REF),\n+        LintId::of(&semicolon_if_nothing_returned::SEMICOLON_IF_NOTHING_RETURNED),\n         LintId::of(&shadow::SHADOW_UNRELATED),\n         LintId::of(&strings::STRING_ADD_ASSIGN),\n         LintId::of(&trait_bounds::TRAIT_DUPLICATION_IN_BOUNDS),"}, {"sha": "99e5841d5a99a8b326990d259840a83a76f01347", "filename": "clippy_lints/src/semicolon_if_nothing_returned.rs", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/eb9c6698ee36570efe79343d746afa3dcd04c7a9/clippy_lints%2Fsrc%2Fsemicolon_if_nothing_returned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb9c6698ee36570efe79343d746afa3dcd04c7a9/clippy_lints%2Fsrc%2Fsemicolon_if_nothing_returned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsemicolon_if_nothing_returned.rs?ref=eb9c6698ee36570efe79343d746afa3dcd04c7a9", "patch": "@@ -0,0 +1,58 @@\n+use crate::utils::{match_def_path, paths, span_lint_and_then, sugg};\n+use if_chain::if_chain;\n+use rustc_errors::Applicability;\n+use rustc_hir::*;\n+use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n+\n+declare_clippy_lint! {\n+    /// **What it does:**\n+    ///\n+    /// **Why is this bad?**\n+    ///\n+    /// **Known problems:** None.\n+    ///\n+    /// **Example:**\n+    ///\n+    /// ```rust\n+    /// // example code where clippy issues a warning\n+    /// ```\n+    /// Use instead:\n+    /// ```rust\n+    /// // example code which does not raise clippy warning\n+    /// ```\n+    pub SEMICOLON_IF_NOTHING_RETURNED,\n+    pedantic,\n+    \"default lint description\"\n+}\n+\n+declare_lint_pass!(SemicolonIfNothingReturned => [SEMICOLON_IF_NOTHING_RETURNED]);\n+\n+impl LateLintPass<'_> for SemicolonIfNothingReturned {\n+    fn check_block(&mut self, cx: &LateContext<'tcx>, block: &'tcx Block<'tcx>) {\n+        if_chain! {\n+            if let Some(expr) = block.expr;\n+            let t_expr = cx.typeck_results().expr_ty(expr);\n+            if t_expr.is_unit();\n+            then {\n+                let sugg = sugg::Sugg::hir(cx, &expr, \"..\");\n+                let suggestion = format!(\"{0};\", sugg);\n+                span_lint_and_then(\n+                    cx,\n+                    SEMICOLON_IF_NOTHING_RETURNED,\n+                    expr.span,\n+                    \"add `;` to terminate block\",\n+                    | diag | {\n+                        diag.span_suggestion(\n+                            expr.span,\n+                            \"add `;`\",\n+                            suggestion,\n+                            Applicability::MaybeIncorrect,\n+                        );\n+                    }\n+                )\n+            }\n+        }\n+    }\n+}"}, {"sha": "6790e91d813387de90f32c2abc69c7c337f19ee3", "filename": "tests/ui/semicolon_if_nothing_returned.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/eb9c6698ee36570efe79343d746afa3dcd04c7a9/tests%2Fui%2Fsemicolon_if_nothing_returned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb9c6698ee36570efe79343d746afa3dcd04c7a9/tests%2Fui%2Fsemicolon_if_nothing_returned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsemicolon_if_nothing_returned.rs?ref=eb9c6698ee36570efe79343d746afa3dcd04c7a9", "patch": "@@ -0,0 +1,18 @@\n+#![warn(clippy::semicolon_if_nothing_returned)]\n+\n+fn get_unit() {}\n+\n+// the functions below trigger the lint\n+fn main() {\n+    println!(\"Hello\")\n+}\n+\n+fn hello() {\n+    get_unit()\n+}\n+\n+// this is fine\n+fn print_sum(a: i32, b: i32) {\n+    println!(\"{}\", a + b);\n+    assert_eq!(true, false);\n+}"}, {"sha": "ecb284ecf045f3a4bffc6478d66970bad5ff653f", "filename": "tests/ui/semicolon_if_nothing_returned.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/eb9c6698ee36570efe79343d746afa3dcd04c7a9/tests%2Fui%2Fsemicolon_if_nothing_returned.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eb9c6698ee36570efe79343d746afa3dcd04c7a9/tests%2Fui%2Fsemicolon_if_nothing_returned.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsemicolon_if_nothing_returned.stderr?ref=eb9c6698ee36570efe79343d746afa3dcd04c7a9", "patch": "@@ -0,0 +1,17 @@\n+error: add `;` to terminate block\n+  --> $DIR/semicolon_if_nothing_returned.rs:7:5\n+   |\n+LL |     println!(\"Hello\")\n+   |     ^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `-D clippy::semicolon-if-nothing-returned` implied by `-D warnings`\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: add `;` to terminate block\n+  --> $DIR/semicolon_if_nothing_returned.rs:11:5\n+   |\n+LL |     get_unit()\n+   |     ^^^^^^^^^^ help: add `;`: `get_unit();`\n+\n+error: aborting due to 2 previous errors\n+"}]}