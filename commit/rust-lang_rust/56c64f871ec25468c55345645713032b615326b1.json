{"sha": "56c64f871ec25468c55345645713032b615326b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2YzY0Zjg3MWVjMjU0NjhjNTUzNDU2NDU3MTMwMzJiNjE1MzI2YjE=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-11-29T21:34:41Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-12-03T09:42:15Z"}, "message": "Add lint pass for doc keyword", "tree": {"sha": "b1b8c9036c53f6461d42713ae216326b08497e9f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1b8c9036c53f6461d42713ae216326b08497e9f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56c64f871ec25468c55345645713032b615326b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56c64f871ec25468c55345645713032b615326b1", "html_url": "https://github.com/rust-lang/rust/commit/56c64f871ec25468c55345645713032b615326b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56c64f871ec25468c55345645713032b615326b1/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7cff213e937c1bb301be807ce04fcf6092b9163", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7cff213e937c1bb301be807ce04fcf6092b9163", "html_url": "https://github.com/rust-lang/rust/commit/c7cff213e937c1bb301be807ce04fcf6092b9163"}], "stats": {"total": 49, "additions": 48, "deletions": 1}, "files": [{"sha": "b22657270325608d357112967399afca80431693", "filename": "compiler/rustc_lint/src/internal.rs", "status": "modified", "additions": 45, "deletions": 1, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/56c64f871ec25468c55345645713032b615326b1/compiler%2Frustc_lint%2Fsrc%2Finternal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56c64f871ec25468c55345645713032b615326b1/compiler%2Frustc_lint%2Fsrc%2Finternal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Finternal.rs?ref=56c64f871ec25468c55345645713032b615326b1", "patch": "@@ -10,7 +10,7 @@ use rustc_hir::{GenericArg, HirId, MutTy, Mutability, Path, PathSegment, QPath,\n use rustc_middle::ty;\n use rustc_session::{declare_lint_pass, declare_tool_lint, impl_lint_pass};\n use rustc_span::hygiene::{ExpnKind, MacroKind};\n-use rustc_span::symbol::{sym, Ident, Symbol};\n+use rustc_span::symbol::{kw, sym, Ident, Symbol};\n \n declare_tool_lint! {\n     pub rustc::DEFAULT_HASH_TYPES,\n@@ -267,3 +267,47 @@ impl EarlyLintPass for LintPassImpl {\n         }\n     }\n }\n+\n+declare_tool_lint! {\n+    pub rustc::EXISTING_DOC_KEYWORD,\n+    Deny,\n+    \"Check that documented keywords in std and core actually exist\",\n+    report_in_external_macro: true\n+}\n+\n+declare_lint_pass!(ExistingDocKeyword => [EXISTING_DOC_KEYWORD]);\n+\n+fn is_doc_keyword(s: Symbol) -> bool {\n+    s <= kw::Union\n+}\n+\n+impl<'tcx> LateLintPass<'tcx> for ExistingDocKeyword {\n+    fn check_item(&mut self, cx: &LateContext<'_>, item: &rustc_hir::Item<'_>) {\n+        for attr in item.attrs {\n+            if !attr.has_name(sym::doc) {\n+                continue;\n+            }\n+            if let Some(list) = attr.meta_item_list() {\n+                for nested in list {\n+                    if nested.has_name(sym::keyword) {\n+                        let v = nested\n+                            .value_str()\n+                            .expect(\"#[doc(keyword = \\\"...\\\")] expected a value!\");\n+                        if is_doc_keyword(v) {\n+                            return;\n+                        }\n+                        cx.struct_span_lint(EXISTING_DOC_KEYWORD, attr.span, |lint| {\n+                            lint.build(&format!(\n+                                \"Found non-existing keyword `{}` used in \\\n+                                     `#[doc(keyword = \\\"...\\\")]`\",\n+                                v,\n+                            ))\n+                            .help(\"only existing keywords are allowed in core/std\")\n+                            .emit();\n+                        });\n+                    }\n+                }\n+            }\n+        }\n+    }\n+}"}, {"sha": "80ef855c3859e14f650a46a7d061467719bb2675", "filename": "compiler/rustc_lint/src/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/56c64f871ec25468c55345645713032b615326b1/compiler%2Frustc_lint%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56c64f871ec25468c55345645713032b615326b1/compiler%2Frustc_lint%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flib.rs?ref=56c64f871ec25468c55345645713032b615326b1", "patch": "@@ -463,6 +463,8 @@ fn register_internals(store: &mut LintStore) {\n     store.register_early_pass(|| box DefaultHashTypes::new());\n     store.register_lints(&LintPassImpl::get_lints());\n     store.register_early_pass(|| box LintPassImpl);\n+    store.register_lints(&ExistingDocKeyword::get_lints());\n+    store.register_late_pass(|| box ExistingDocKeyword);\n     store.register_lints(&TyTyKind::get_lints());\n     store.register_late_pass(|| box TyTyKind);\n     store.register_group(\n@@ -475,6 +477,7 @@ fn register_internals(store: &mut LintStore) {\n             LintId::of(LINT_PASS_IMPL_WITHOUT_MACRO),\n             LintId::of(TY_PASS_BY_REFERENCE),\n             LintId::of(USAGE_OF_QUALIFIED_TY),\n+            LintId::of(EXISTING_DOC_KEYWORD),\n         ],\n     );\n }"}]}