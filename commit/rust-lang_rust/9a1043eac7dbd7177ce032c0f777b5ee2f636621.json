{"sha": "9a1043eac7dbd7177ce032c0f777b5ee2f636621", "node_id": "C_kwDOAAsO6NoAKDlhMTA0M2VhYzdkYmQ3MTc3Y2UwMzJjMGY3NzdiNWVlMmY2MzY2MjE", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-11-06T01:59:03Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-11-06T02:07:34Z"}, "message": "Normalize signature when deducing closure signature from supertraits", "tree": {"sha": "499edef51c9307b67b26c472d52fb59c0bdf293f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/499edef51c9307b67b26c472d52fb59c0bdf293f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a1043eac7dbd7177ce032c0f777b5ee2f636621", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a1043eac7dbd7177ce032c0f777b5ee2f636621", "html_url": "https://github.com/rust-lang/rust/commit/9a1043eac7dbd7177ce032c0f777b5ee2f636621", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a1043eac7dbd7177ce032c0f777b5ee2f636621/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1286ee23e4e2dec8c1696d3d76c6b26d97bbcf82", "url": "https://api.github.com/repos/rust-lang/rust/commits/1286ee23e4e2dec8c1696d3d76c6b26d97bbcf82", "html_url": "https://github.com/rust-lang/rust/commit/1286ee23e4e2dec8c1696d3d76c6b26d97bbcf82"}], "stats": {"total": 27, "additions": 24, "deletions": 3}, "files": [{"sha": "3001e7994767296fc940ee2e653953c89b0dd1a3", "filename": "compiler/rustc_hir_typeck/src/closure.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9a1043eac7dbd7177ce032c0f777b5ee2f636621/compiler%2Frustc_hir_typeck%2Fsrc%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a1043eac7dbd7177ce032c0f777b5ee2f636621/compiler%2Frustc_hir_typeck%2Fsrc%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fclosure.rs?ref=9a1043eac7dbd7177ce032c0f777b5ee2f636621", "patch": "@@ -10,6 +10,7 @@ use rustc_hir_analysis::astconv::AstConv;\n use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc_infer::infer::LateBoundRegionConversionTime;\n use rustc_infer::infer::{InferOk, InferResult};\n+use rustc_macros::{TypeFoldable, TypeVisitable};\n use rustc_middle::ty::subst::InternalSubsts;\n use rustc_middle::ty::visit::TypeVisitable;\n use rustc_middle::ty::{self, Ty};\n@@ -22,7 +23,7 @@ use std::cmp;\n use std::iter;\n \n /// What signature do we *expect* the closure to have from context?\n-#[derive(Debug)]\n+#[derive(Debug, Clone, TypeFoldable, TypeVisitable)]\n struct ExpectedSig<'tcx> {\n     /// Span that gave us this expectation, if we know that.\n     cause_span: Option<Span>,\n@@ -241,9 +242,12 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             if expected_sig.is_none()\n                 && let ty::PredicateKind::Projection(proj_predicate) = bound_predicate.skip_binder()\n             {\n-                expected_sig = self.deduce_sig_from_projection(\n+                expected_sig = self.normalize_associated_types_in(\n+                    obligation.cause.span,\n+                    self.deduce_sig_from_projection(\n                     Some(obligation.cause.span),\n-                    bound_predicate.rebind(proj_predicate),\n+                        bound_predicate.rebind(proj_predicate),\n+                    ),\n                 );\n             }\n "}, {"sha": "270bf14c35eca445458fe31e2d86fe03db7ca954", "filename": "src/test/ui/closures/supertrait-hint-references-assoc-ty.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/9a1043eac7dbd7177ce032c0f777b5ee2f636621/src%2Ftest%2Fui%2Fclosures%2Fsupertrait-hint-references-assoc-ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a1043eac7dbd7177ce032c0f777b5ee2f636621/src%2Ftest%2Fui%2Fclosures%2Fsupertrait-hint-references-assoc-ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fsupertrait-hint-references-assoc-ty.rs?ref=9a1043eac7dbd7177ce032c0f777b5ee2f636621", "patch": "@@ -0,0 +1,17 @@\n+// check-pass\n+\n+pub trait Fn0: Fn(i32) -> Self::Out {\n+    type Out;\n+}\n+\n+impl<F: Fn(i32) -> ()> Fn0 for F {\n+    type Out = ();\n+}\n+\n+pub fn closure_typer(_: impl Fn0) {}\n+\n+fn main() {\n+    closure_typer(move |x| {\n+        let _: i64 = x.into();\n+    });\n+}"}]}