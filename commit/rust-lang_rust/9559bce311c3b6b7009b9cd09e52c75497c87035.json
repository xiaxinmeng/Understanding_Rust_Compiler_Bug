{"sha": "9559bce311c3b6b7009b9cd09e52c75497c87035", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1NTliY2UzMTFjM2I2YjcwMDliOWNkMDllNTJjNzU0OTdjODcwMzU=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-11-24T20:57:51Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-11-24T20:57:51Z"}, "message": "Rename `parse_macro` to `parse_macro_expansion`\n\nThis does not parse macros, it expands a macro and parses the *result*", "tree": {"sha": "f28435190d7f830acb6335da5eeaa83a458b5e2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f28435190d7f830acb6335da5eeaa83a458b5e2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9559bce311c3b6b7009b9cd09e52c75497c87035", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9559bce311c3b6b7009b9cd09e52c75497c87035", "html_url": "https://github.com/rust-lang/rust/commit/9559bce311c3b6b7009b9cd09e52c75497c87035", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9559bce311c3b6b7009b9cd09e52c75497c87035/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9d0d511011b7071c621ac3f7c64c4aaec7f2dfb", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9d0d511011b7071c621ac3f7c64c4aaec7f2dfb", "html_url": "https://github.com/rust-lang/rust/commit/f9d0d511011b7071c621ac3f7c64c4aaec7f2dfb"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "8c767b249ded5f9fa38e236c45a9297670e02919", "filename": "crates/hir/src/db.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9559bce311c3b6b7009b9cd09e52c75497c87035/crates%2Fhir%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9559bce311c3b6b7009b9cd09e52c75497c87035/crates%2Fhir%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fdb.rs?ref=9559bce311c3b6b7009b9cd09e52c75497c87035", "patch": "@@ -11,7 +11,7 @@ pub use hir_def::db::{\n };\n pub use hir_expand::db::{\n     AstDatabase, AstDatabaseStorage, AstIdMapQuery, InternEagerExpansionQuery, InternMacroQuery,\n-    MacroArgTextQuery, MacroDefQuery, MacroExpandQuery, ParseMacroQuery,\n+    MacroArgTextQuery, MacroDefQuery, MacroExpandQuery, ParseMacroExpansionQuery,\n };\n pub use hir_ty::db::*;\n "}, {"sha": "a9099eb22a2dce9d076a2fc886d98c6bccda5057", "filename": "crates/hir_expand/src/db.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9559bce311c3b6b7009b9cd09e52c75497c87035/crates%2Fhir_expand%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9559bce311c3b6b7009b9cd09e52c75497c87035/crates%2Fhir_expand%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fdb.rs?ref=9559bce311c3b6b7009b9cd09e52c75497c87035", "patch": "@@ -88,7 +88,7 @@ pub trait AstDatabase: SourceDatabase {\n     #[salsa::transparent]\n     fn macro_arg(&self, id: MacroCallId) -> Option<Arc<(tt::Subtree, mbe::TokenMap)>>;\n     fn macro_def(&self, id: MacroDefId) -> Option<Arc<(TokenExpander, mbe::TokenMap)>>;\n-    fn parse_macro(\n+    fn parse_macro_expansion(\n         &self,\n         macro_file: MacroFile,\n     ) -> MacroResult<(Parse<SyntaxNode>, Arc<mbe::TokenMap>)>;\n@@ -283,12 +283,12 @@ fn parse_or_expand(db: &dyn AstDatabase, file_id: HirFileId) -> Option<SyntaxNod\n     match file_id.0 {\n         HirFileIdRepr::FileId(file_id) => Some(db.parse(file_id).tree().syntax().clone()),\n         HirFileIdRepr::MacroFile(macro_file) => {\n-            db.parse_macro(macro_file).map(|(it, _)| it.syntax_node()).value\n+            db.parse_macro_expansion(macro_file).map(|(it, _)| it.syntax_node()).value\n         }\n     }\n }\n \n-fn parse_macro(\n+fn parse_macro_expansion(\n     db: &dyn AstDatabase,\n     macro_file: MacroFile,\n ) -> MacroResult<(Parse<SyntaxNode>, Arc<mbe::TokenMap>)> {"}, {"sha": "83e09738b144842eaaafd2d4758ab3d2cf263133", "filename": "crates/hir_expand/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9559bce311c3b6b7009b9cd09e52c75497c87035/crates%2Fhir_expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9559bce311c3b6b7009b9cd09e52c75497c87035/crates%2Fhir_expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Flib.rs?ref=9559bce311c3b6b7009b9cd09e52c75497c87035", "patch": "@@ -144,7 +144,7 @@ impl HirFileId {\n                 let def_tt = loc.def.ast_id?.to_node(db).token_tree()?;\n \n                 let macro_def = db.macro_def(loc.def)?;\n-                let (parse, exp_map) = db.parse_macro(macro_file).value?;\n+                let (parse, exp_map) = db.parse_macro_expansion(macro_file).value?;\n                 let macro_arg = db.macro_arg(macro_file.macro_call_id)?;\n \n                 Some(ExpansionInfo {"}, {"sha": "b75f88ed996869a48e979d3355fcea4fff8da213", "filename": "crates/ide/src/status.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9559bce311c3b6b7009b9cd09e52c75497c87035/crates%2Fide%2Fsrc%2Fstatus.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9559bce311c3b6b7009b9cd09e52c75497c87035/crates%2Fide%2Fsrc%2Fstatus.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fstatus.rs?ref=9559bce311c3b6b7009b9cd09e52c75497c87035", "patch": "@@ -19,7 +19,7 @@ fn syntax_tree_stats(db: &RootDatabase) -> SyntaxTreeStats {\n     ide_db::base_db::ParseQuery.in_db(db).entries::<SyntaxTreeStats>()\n }\n fn macro_syntax_tree_stats(db: &RootDatabase) -> SyntaxTreeStats {\n-    hir::db::ParseMacroQuery.in_db(db).entries::<SyntaxTreeStats>()\n+    hir::db::ParseMacroExpansionQuery.in_db(db).entries::<SyntaxTreeStats>()\n }\n \n // Feature: Status"}, {"sha": "987191fe32b79d853dc1a40285153711f69b4ae3", "filename": "crates/ide_db/src/apply_change.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9559bce311c3b6b7009b9cd09e52c75497c87035/crates%2Fide_db%2Fsrc%2Fapply_change.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9559bce311c3b6b7009b9cd09e52c75497c87035/crates%2Fide_db%2Fsrc%2Fapply_change.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fapply_change.rs?ref=9559bce311c3b6b7009b9cd09e52c75497c87035", "patch": "@@ -76,7 +76,7 @@ impl RootDatabase {\n         let sweep = SweepStrategy::default().discard_values().sweep_all_revisions();\n \n         base_db::ParseQuery.in_db(self).sweep(sweep);\n-        hir::db::ParseMacroQuery.in_db(self).sweep(sweep);\n+        hir::db::ParseMacroExpansionQuery.in_db(self).sweep(sweep);\n \n         // Macros do take significant space, but less then the syntax trees\n         // self.query(hir::db::MacroDefQuery).sweep(sweep);\n@@ -143,7 +143,7 @@ impl RootDatabase {\n             hir::db::AstIdMapQuery\n             hir::db::MacroArgTextQuery\n             hir::db::MacroDefQuery\n-            hir::db::ParseMacroQuery\n+            hir::db::ParseMacroExpansionQuery\n             hir::db::MacroExpandQuery\n \n             // DefDatabase"}, {"sha": "05139a6515847ff16815787e1c119c061cb46fd1", "filename": "crates/ide_db/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9559bce311c3b6b7009b9cd09e52c75497c87035/crates%2Fide_db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9559bce311c3b6b7009b9cd09e52c75497c87035/crates%2Fide_db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Flib.rs?ref=9559bce311c3b6b7009b9cd09e52c75497c87035", "patch": "@@ -113,7 +113,7 @@ impl RootDatabase {\n     pub fn update_lru_capacity(&mut self, lru_capacity: Option<usize>) {\n         let lru_capacity = lru_capacity.unwrap_or(base_db::DEFAULT_LRU_CAP);\n         base_db::ParseQuery.in_db_mut(self).set_lru_capacity(lru_capacity);\n-        hir::db::ParseMacroQuery.in_db_mut(self).set_lru_capacity(lru_capacity);\n+        hir::db::ParseMacroExpansionQuery.in_db_mut(self).set_lru_capacity(lru_capacity);\n         hir::db::MacroExpandQuery.in_db_mut(self).set_lru_capacity(lru_capacity);\n     }\n }"}]}