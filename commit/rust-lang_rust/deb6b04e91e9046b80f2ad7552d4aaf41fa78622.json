{"sha": "deb6b04e91e9046b80f2ad7552d4aaf41fa78622", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlYjZiMDRlOTFlOTA0NmI4MGYyYWQ3NTUyZDRhYWY0MWZhNzg2MjI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-06-27T00:21:24Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-06-27T00:21:24Z"}, "message": "auto merge of #15206 : omasanori/rust/use-reexported, r=alexcrichton\n\nWe use re-exported pathes (e.g. std::io::Command) and original ones\r\n(e.g. std::io::process::Command) together in examples now. Using\r\nre-exported ones consistently avoids confusion.", "tree": {"sha": "21137841b37caecea2b3be14c588ba5bc48d710d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/21137841b37caecea2b3be14c588ba5bc48d710d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/deb6b04e91e9046b80f2ad7552d4aaf41fa78622", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/deb6b04e91e9046b80f2ad7552d4aaf41fa78622", "html_url": "https://github.com/rust-lang/rust/commit/deb6b04e91e9046b80f2ad7552d4aaf41fa78622", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/deb6b04e91e9046b80f2ad7552d4aaf41fa78622/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0f231072b8f9d5f1fe346e952fdc2e3404e0b94", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0f231072b8f9d5f1fe346e952fdc2e3404e0b94", "html_url": "https://github.com/rust-lang/rust/commit/c0f231072b8f9d5f1fe346e952fdc2e3404e0b94"}, {"sha": "dfef4220242227fb210e58eedc91bcc74de8921f", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfef4220242227fb210e58eedc91bcc74de8921f", "html_url": "https://github.com/rust-lang/rust/commit/dfef4220242227fb210e58eedc91bcc74de8921f"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "8014759c88ab0c3c239b51323d1ad1c8e13ff1c9", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/deb6b04e91e9046b80f2ad7552d4aaf41fa78622/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/deb6b04e91e9046b80f2ad7552d4aaf41fa78622/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=deb6b04e91e9046b80f2ad7552d4aaf41fa78622", "patch": "@@ -83,7 +83,7 @@ Some examples of obvious things you might want to do\n \n     ```rust\n     # #![allow(unused_must_use)]\n-    use std::io::net::tcp::TcpStream;\n+    use std::io::TcpStream;\n \n     # // connection doesn't fail if a server is running on 8080\n     # // locally, we still want to be type checking this code, so lets"}, {"sha": "b79e831ff61356e491d2d0174dc8eb5521581c88", "filename": "src/libstd/io/net/tcp.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/deb6b04e91e9046b80f2ad7552d4aaf41fa78622/src%2Flibstd%2Fio%2Fnet%2Ftcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/deb6b04e91e9046b80f2ad7552d4aaf41fa78622/src%2Flibstd%2Fio%2Fnet%2Ftcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fnet%2Ftcp.rs?ref=deb6b04e91e9046b80f2ad7552d4aaf41fa78622", "patch": "@@ -41,7 +41,7 @@ use rt::rtio;\n ///\n /// ```no_run\n /// # #![allow(unused_must_use)]\n-/// use std::io::net::tcp::TcpStream;\n+/// use std::io::TcpStream;\n ///\n /// let mut stream = TcpStream::connect(\"127.0.0.1\", 34254);\n ///\n@@ -162,7 +162,7 @@ impl TcpStream {\n     /// ```no_run\n     /// # #![allow(unused_must_use)]\n     /// use std::io::timer;\n-    /// use std::io::net::tcp::TcpStream;\n+    /// use std::io::TcpStream;\n     ///\n     /// let mut stream = TcpStream::connect(\"127.0.0.1\", 34254).unwrap();\n     /// let stream2 = stream.clone();\n@@ -406,7 +406,7 @@ impl TcpAcceptor {\n     ///\n     /// ```no_run\n     /// # #![allow(experimental)]\n-    /// use std::io::net::tcp::TcpListener;\n+    /// use std::io::TcpListener;\n     /// use std::io::{Listener, Acceptor, TimedOut};\n     ///\n     /// let mut a = TcpListener::bind(\"127.0.0.1\", 8482).listen().unwrap();"}, {"sha": "8e1747146e42eb31b9048b4d1daed112f13492f0", "filename": "src/libstd/io/process.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/deb6b04e91e9046b80f2ad7552d4aaf41fa78622/src%2Flibstd%2Fio%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/deb6b04e91e9046b80f2ad7552d4aaf41fa78622/src%2Flibstd%2Fio%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fprocess.rs?ref=deb6b04e91e9046b80f2ad7552d4aaf41fa78622", "patch": "@@ -476,8 +476,8 @@ impl Process {\n     ///\n     /// ```no_run\n     /// # #![allow(experimental)]\n-    /// use std::io::process::{Command, ProcessExit};\n-    /// use std::io::IoResult;\n+    /// use std::io::{Command, IoResult};\n+    /// use std::io::process::ProcessExit;\n     ///\n     /// fn run_gracefully(prog: &str) -> IoResult<ProcessExit> {\n     ///     let mut p = try!(Command::new(\"long-running-process\").spawn());"}, {"sha": "432461c46063493f4e471d5b42fb29bb0b1d2f07", "filename": "src/libstd/io/timer.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/deb6b04e91e9046b80f2ad7552d4aaf41fa78622/src%2Flibstd%2Fio%2Ftimer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/deb6b04e91e9046b80f2ad7552d4aaf41fa78622/src%2Flibstd%2Fio%2Ftimer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Ftimer.rs?ref=deb6b04e91e9046b80f2ad7552d4aaf41fa78622", "patch": "@@ -110,7 +110,7 @@ impl Timer {\n     /// # Example\n     ///\n     /// ```rust\n-    /// use std::io::timer::Timer;\n+    /// use std::io::Timer;\n     ///\n     /// let mut timer = Timer::new().unwrap();\n     /// let ten_milliseconds = timer.oneshot(10);\n@@ -122,7 +122,7 @@ impl Timer {\n     /// ```\n     ///\n     /// ```rust\n-    /// use std::io::timer::Timer;\n+    /// use std::io::Timer;\n     ///\n     /// // Incorrect, method chaining-style:\n     /// let mut five_ms = Timer::new().unwrap().oneshot(5);\n@@ -152,7 +152,7 @@ impl Timer {\n     /// # Example\n     ///\n     /// ```rust\n-    /// use std::io::timer::Timer;\n+    /// use std::io::Timer;\n     ///\n     /// let mut timer = Timer::new().unwrap();\n     /// let ten_milliseconds = timer.periodic(10);\n@@ -170,7 +170,7 @@ impl Timer {\n     /// ```\n     ///\n     /// ```rust\n-    /// use std::io::timer::Timer;\n+    /// use std::io::Timer;\n     ///\n     /// // Incorrect, method chaining-style.\n     /// let mut five_ms = Timer::new().unwrap().periodic(5);"}]}