{"sha": "28588e5df1747572110f0fc247d2efd653f3b398", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4NTg4ZTVkZjE3NDc1NzIxMTBmMGZjMjQ3ZDJlZmQ2NTNmM2IzOTg=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-09-18T16:30:08Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-09-18T18:09:31Z"}, "message": "Add missing examples on HashSet iter types", "tree": {"sha": "72bc13c5c9e3b94fc75dc5a4cb36e43d26f75f6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72bc13c5c9e3b94fc75dc5a4cb36e43d26f75f6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28588e5df1747572110f0fc247d2efd653f3b398", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28588e5df1747572110f0fc247d2efd653f3b398", "html_url": "https://github.com/rust-lang/rust/commit/28588e5df1747572110f0fc247d2efd653f3b398", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28588e5df1747572110f0fc247d2efd653f3b398/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "953f33c5cbe61817ed84e311731b132006a255ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/953f33c5cbe61817ed84e311731b132006a255ca", "html_url": "https://github.com/rust-lang/rust/commit/953f33c5cbe61817ed84e311731b132006a255ca"}], "stats": {"total": 86, "additions": 86, "deletions": 0}, "files": [{"sha": "a0c39852ad5d8b69180064d9eccea1326db4216f", "filename": "library/std/src/collections/hash/set.rs", "status": "modified", "additions": 86, "deletions": 0, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/28588e5df1747572110f0fc247d2efd653f3b398/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28588e5df1747572110f0fc247d2efd653f3b398/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs?ref=28588e5df1747572110f0fc247d2efd653f3b398", "patch": "@@ -1173,6 +1173,16 @@ where\n /// See its documentation for more.\n ///\n /// [`iter`]: HashSet::iter\n+///\n+/// # Examples\n+///\n+/// ```\n+/// use std::collections::HashSet;\n+///\n+/// let a: HashSet<u32> = vec![1, 2, 3].into_iter().collect();\n+///\n+/// let mut iter = a.iter();\n+/// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct Iter<'a, K: 'a> {\n     base: base::Iter<'a, K>,\n@@ -1184,6 +1194,16 @@ pub struct Iter<'a, K: 'a> {\n /// (provided by the `IntoIterator` trait). See its documentation for more.\n ///\n /// [`into_iter`]: IntoIterator::into_iter\n+///\n+/// # Examples\n+///\n+/// ```\n+/// use std::collections::HashSet;\n+///\n+/// let a: HashSet<u32> = vec![1, 2, 3].into_iter().collect();\n+///\n+/// let mut iter = a.into_iter();\n+/// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct IntoIter<K> {\n     base: base::IntoIter<K>,\n@@ -1195,6 +1215,16 @@ pub struct IntoIter<K> {\n /// See its documentation for more.\n ///\n /// [`drain`]: HashSet::drain\n+///\n+/// # Examples\n+///\n+/// ```\n+/// use std::collections::HashSet;\n+///\n+/// let mut a: HashSet<u32> = vec![1, 2, 3].into_iter().collect();\n+///\n+/// let mut drain = a.drain();\n+/// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct Drain<'a, K: 'a> {\n     base: base::Drain<'a, K>,\n@@ -1205,6 +1235,18 @@ pub struct Drain<'a, K: 'a> {\n /// This `struct` is created by the [`drain_filter`] method on [`HashSet`].\n ///\n /// [`drain_filter`]: HashSet::drain_filter\n+///\n+/// # Examples\n+///\n+/// ```\n+/// #![feature(hash_drain_filter)]\n+///\n+/// use std::collections::HashSet;\n+///\n+/// let mut a: HashSet<u32> = vec![1, 2, 3].into_iter().collect();\n+///\n+/// let mut drain_filtered = a.drain_filter(|v| v % 2 == 0);\n+/// ```\n #[unstable(feature = \"hash_drain_filter\", issue = \"59618\")]\n pub struct DrainFilter<'a, K, F>\n where\n@@ -1219,6 +1261,17 @@ where\n /// See its documentation for more.\n ///\n /// [`intersection`]: HashSet::intersection\n+///\n+/// # Examples\n+///\n+/// ```\n+/// use std::collections::HashSet;\n+///\n+/// let a: HashSet<u32> = vec![1, 2, 3].into_iter().collect();\n+/// let b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();\n+///\n+/// let mut intersection = a.intersection(&b);\n+/// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct Intersection<'a, T: 'a, S: 'a> {\n     // iterator of the first set\n@@ -1233,6 +1286,17 @@ pub struct Intersection<'a, T: 'a, S: 'a> {\n /// See its documentation for more.\n ///\n /// [`difference`]: HashSet::difference\n+///\n+/// # Examples\n+///\n+/// ```\n+/// use std::collections::HashSet;\n+///\n+/// let a: HashSet<u32> = vec![1, 2, 3].into_iter().collect();\n+/// let b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();\n+///\n+/// let mut difference = a.difference(&b);\n+/// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct Difference<'a, T: 'a, S: 'a> {\n     // iterator of the first set\n@@ -1247,6 +1311,17 @@ pub struct Difference<'a, T: 'a, S: 'a> {\n /// [`HashSet`]. See its documentation for more.\n ///\n /// [`symmetric_difference`]: HashSet::symmetric_difference\n+///\n+/// # Examples\n+///\n+/// ```\n+/// use std::collections::HashSet;\n+///\n+/// let a: HashSet<u32> = vec![1, 2, 3].into_iter().collect();\n+/// let b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();\n+///\n+/// let mut intersection = a.symmetric_difference(&b);\n+/// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct SymmetricDifference<'a, T: 'a, S: 'a> {\n     iter: Chain<Difference<'a, T, S>, Difference<'a, T, S>>,\n@@ -1258,6 +1333,17 @@ pub struct SymmetricDifference<'a, T: 'a, S: 'a> {\n /// See its documentation for more.\n ///\n /// [`union`]: HashSet::union\n+///\n+/// # Examples\n+///\n+/// ```\n+/// use std::collections::HashSet;\n+///\n+/// let a: HashSet<u32> = vec![1, 2, 3].into_iter().collect();\n+/// let b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();\n+///\n+/// let mut union_iter = a.union(&b);\n+/// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct Union<'a, T: 'a, S: 'a> {\n     iter: Chain<Iter<'a, T>, Difference<'a, T, S>>,"}]}