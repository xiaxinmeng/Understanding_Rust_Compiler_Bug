{"sha": "bf7aeaa617e309c31e6d28a469ea6092e28393df", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmN2FlYWE2MTdlMzA5YzMxZTZkMjhhNDY5ZWE2MDkyZTI4MzkzZGY=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@google.com", "date": "2020-09-29T22:50:57Z"}, "committer": {"name": "Tyler Mandry", "email": "tmandry@google.com", "date": "2020-09-29T22:50:57Z"}, "message": "Filter out empty items in bootstrap::flags::split", "tree": {"sha": "4ab7ec60153a4e816d5935acbc2eba23347571d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ab7ec60153a4e816d5935acbc2eba23347571d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf7aeaa617e309c31e6d28a469ea6092e28393df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf7aeaa617e309c31e6d28a469ea6092e28393df", "html_url": "https://github.com/rust-lang/rust/commit/bf7aeaa617e309c31e6d28a469ea6092e28393df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf7aeaa617e309c31e6d28a469ea6092e28393df/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63eaa60294ad5b67baf6c44d48ef67654f538710", "url": "https://api.github.com/repos/rust-lang/rust/commits/63eaa60294ad5b67baf6c44d48ef67654f538710", "html_url": "https://github.com/rust-lang/rust/commit/63eaa60294ad5b67baf6c44d48ef67654f538710"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "795244e7cd4a486c04ca9600a35b0f3e246ede7f", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf7aeaa617e309c31e6d28a469ea6092e28393df/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf7aeaa617e309c31e6d28a469ea6092e28393df/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=bf7aeaa617e309c31e6d28a469ea6092e28393df", "patch": "@@ -679,7 +679,7 @@ impl Subcommand {\n }\n \n fn split(s: &[String]) -> Vec<String> {\n-    s.iter().flat_map(|s| s.split(',')).map(|s| s.to_string()).collect()\n+    s.iter().flat_map(|s| s.split(',')).filter(|s| !s.is_empty()).map(|s| s.to_string()).collect()\n }\n \n fn parse_deny_warnings(matches: &getopts::Matches) -> Option<bool> {"}]}