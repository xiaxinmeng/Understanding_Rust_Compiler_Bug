{"sha": "9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliNGY4MTFiN2Y2NDZlYmI3MjczZmEzY2Y4ZjlkMDkyYTQ0MDU4YjU=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-10-12T21:31:23Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-10-28T16:57:36Z"}, "message": "Use more targeted spans for orphan rule errors", "tree": {"sha": "988f85a6094daf0b126442a4ed5afc054c4c2643", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/988f85a6094daf0b126442a4ed5afc054c4c2643"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "html_url": "https://github.com/rust-lang/rust/commit/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "adfe9a45d60198316952baa5088ae77a8a5e919a", "url": "https://api.github.com/repos/rust-lang/rust/commits/adfe9a45d60198316952baa5088ae77a8a5e919a", "html_url": "https://github.com/rust-lang/rust/commit/adfe9a45d60198316952baa5088ae77a8a5e919a"}], "stats": {"total": 511, "additions": 312, "deletions": 199}, "files": [{"sha": "71a39b21f779c759f702ec1372b8f32d26add75e", "filename": "src/librustc/traits/coherence.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Flibrustc%2Ftraits%2Fcoherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Flibrustc%2Ftraits%2Fcoherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fcoherence.rs?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -237,7 +237,7 @@ pub fn trait_ref_is_local_or_fundamental<'tcx>(\n }\n \n pub enum OrphanCheckErr<'tcx> {\n-    NonLocalInputType(Vec<Ty<'tcx>>),\n+    NonLocalInputType(Vec<(Ty<'tcx>, usize)>),\n     UncoveredTy(Ty<'tcx>),\n }\n \n@@ -391,8 +391,10 @@ fn orphan_check_trait_ref<'tcx>(\n         }\n \n         let mut non_local_spans = vec![];\n-        for input_ty in\n-            trait_ref.input_types().flat_map(|ty| uncover_fundamental_ty(tcx, ty, in_crate))\n+        for (i, input_ty) in trait_ref\n+            .input_types()\n+            .flat_map(|ty| uncover_fundamental_ty(tcx, ty, in_crate))\n+            .enumerate()\n         {\n             debug!(\"orphan_check_trait_ref: check ty `{:?}`\", input_ty);\n             if ty_is_local(tcx, input_ty, in_crate) {\n@@ -402,7 +404,7 @@ fn orphan_check_trait_ref<'tcx>(\n                 debug!(\"orphan_check_trait_ref: uncovered ty: `{:?}`\", input_ty);\n                 return Err(OrphanCheckErr::UncoveredTy(input_ty))\n             }\n-            non_local_spans.push(input_ty);\n+            non_local_spans.push((input_ty, i));\n         }\n         // If we exit above loop, never found a local type.\n         debug!(\"orphan_check_trait_ref: no local type\");\n@@ -413,7 +415,7 @@ fn orphan_check_trait_ref<'tcx>(\n         // parameters to the trait, with the self type appearing\n         // first.  Find the first input type that either references a\n         // type parameter OR some local type.\n-        for input_ty in trait_ref.input_types() {\n+        for (i, input_ty) in trait_ref.input_types().enumerate() {\n             if ty_is_local(tcx, input_ty, in_crate) {\n                 debug!(\"orphan_check_trait_ref: ty_is_local `{:?}`\", input_ty);\n \n@@ -442,7 +444,7 @@ fn orphan_check_trait_ref<'tcx>(\n                 return Err(OrphanCheckErr::UncoveredTy(param));\n             }\n \n-            non_local_spans.push(input_ty);\n+            non_local_spans.push((input_ty, i));\n         }\n         // If we exit above loop, never found a local type.\n         debug!(\"orphan_check_trait_ref: no local type\");"}, {"sha": "3bcea6d173aa5bda8f0b430996c08c6383fa0a16", "filename": "src/librustc_typeck/coherence/orphan.rs", "status": "modified", "additions": 32, "deletions": 17, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Flibrustc_typeck%2Fcoherence%2Forphan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Flibrustc_typeck%2Fcoherence%2Forphan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Forphan.rs?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -24,7 +24,7 @@ impl ItemLikeVisitor<'v> for OrphanChecker<'tcx> {\n     fn visit_item(&mut self, item: &hir::Item) {\n         let def_id = self.tcx.hir().local_def_id(item.hir_id);\n         // \"Trait\" impl\n-        if let hir::ItemKind::Impl(.., Some(_), _, _) = item.kind {\n+        if let hir::ItemKind::Impl(.., generics, Some(_), impl_ty, _) = &item.kind {\n             debug!(\"coherence2::orphan check: trait impl {}\",\n                    self.tcx.hir().node_to_string(item.hir_id));\n             let trait_ref = self.tcx.impl_trait_ref(def_id).unwrap();\n@@ -41,28 +41,43 @@ impl ItemLikeVisitor<'v> for OrphanChecker<'tcx> {\n                         \"only traits defined in the current crate can be implemented for \\\n                          arbitrary types\"\n                     );\n-                    err.span_label(sp, \"impl doesn't use types inside crate\");\n-                    for ty in &tys {\n-                        err.note(&format!(\"`{}` is not defined in the current create\", ty));\n+                    err.span_label(sp, \"impl doesn't use only types from inside the current crate\");\n+                    for (ty, i) in &tys {\n+                        let msg = format!(\"`{}` is not defined in the current crate\", ty);\n+                        if *i == 0 {\n+                            err.span_label(impl_ty.span, &msg);\n+                        } else {\n+                            err.note(&msg);\n+                        }\n                     }\n                     err.note(\"define and implement a trait or new type instead\");\n                     err.emit();\n                     return;\n                 }\n                 Err(traits::OrphanCheckErr::UncoveredTy(param_ty)) => {\n-                    struct_span_err!(self.tcx.sess,\n-                                     sp,\n-                                     E0210,\n-                                     \"type parameter `{}` must be used as the type parameter \\\n-                                      for some local type (e.g., `MyStruct<{}>`)\",\n-                                     param_ty,\n-                                     param_ty)\n-                        .span_label(sp,\n-                                    format!(\"type parameter `{}` must be used as the type \\\n-                                             parameter for some local type\", param_ty))\n-                        .note(\"only traits defined in the current crate can be implemented \\\n-                               for a type parameter\")\n-                        .emit();\n+                    let mut sp = sp;\n+                    for param in &generics.params {\n+                        if param.name.ident().to_string() == param_ty.to_string() {\n+                            sp = param.span;\n+                        }\n+                    }\n+                    let mut err = struct_span_err!(\n+                        self.tcx.sess,\n+                        sp,\n+                        E0210,\n+                        \"type parameter `{}` must be used as the type parameter for some local \\\n+                         type (e.g., `MyStruct<{}>`)\",\n+                        param_ty,\n+                        param_ty\n+                    );\n+                    err.span_label(sp, format!(\n+                        \"type parameter `{}` must be used as the type parameter for some local \\\n+                         type\",\n+                        param_ty,\n+                    ));\n+                    err.note(\"only traits defined in the current crate can be implemented for a \\\n+                              type parameter\");\n+                    err.emit();\n                     return;\n                 }\n             }"}, {"sha": "0541db2b8505f829a9573d01895f8cceab40e718", "filename": "src/test/ui/coherence/coherence-all-remote.old.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-all-remote.old.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-all-remote.old.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-all-remote.old.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -1,8 +1,8 @@\n error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n-  --> $DIR/coherence-all-remote.rs:9:1\n+  --> $DIR/coherence-all-remote.rs:9:6\n    |\n LL | impl<T> Remote1<T> for isize { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |      ^ type parameter `T` must be used as the type parameter for some local type\n    |\n    = note: only traits defined in the current crate can be implemented for a type parameter\n "}, {"sha": "0541db2b8505f829a9573d01895f8cceab40e718", "filename": "src/test/ui/coherence/coherence-all-remote.re.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-all-remote.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-all-remote.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-all-remote.re.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -1,8 +1,8 @@\n error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n-  --> $DIR/coherence-all-remote.rs:9:1\n+  --> $DIR/coherence-all-remote.rs:9:6\n    |\n LL | impl<T> Remote1<T> for isize { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |      ^ type parameter `T` must be used as the type parameter for some local type\n    |\n    = note: only traits defined in the current crate can be implemented for a type parameter\n "}, {"sha": "816ad949a2bce88eb677bb7043087188b72241ec", "filename": "src/test/ui/coherence/coherence-bigint-param.old.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-bigint-param.old.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-bigint-param.old.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-bigint-param.old.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -1,8 +1,8 @@\n error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n-  --> $DIR/coherence-bigint-param.rs:11:1\n+  --> $DIR/coherence-bigint-param.rs:11:6\n    |\n LL | impl<T> Remote1<BigInt> for T { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |      ^ type parameter `T` must be used as the type parameter for some local type\n    |\n    = note: only traits defined in the current crate can be implemented for a type parameter\n "}, {"sha": "816ad949a2bce88eb677bb7043087188b72241ec", "filename": "src/test/ui/coherence/coherence-bigint-param.re.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-bigint-param.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-bigint-param.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-bigint-param.re.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -1,8 +1,8 @@\n error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n-  --> $DIR/coherence-bigint-param.rs:11:1\n+  --> $DIR/coherence-bigint-param.rs:11:6\n    |\n LL | impl<T> Remote1<BigInt> for T { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |      ^ type parameter `T` must be used as the type parameter for some local type\n    |\n    = note: only traits defined in the current crate can be implemented for a type parameter\n "}, {"sha": "d3f8ba63f07eb911803117837238249a656a9f19", "filename": "src/test/ui/coherence/coherence-cow.a.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cow.a.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cow.a.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cow.a.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -1,8 +1,8 @@\n error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n-  --> $DIR/coherence-cow.rs:18:1\n+  --> $DIR/coherence-cow.rs:18:6\n    |\n LL | impl<T> Remote for Pair<T,Cover<T>> { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |      ^ type parameter `T` must be used as the type parameter for some local type\n    |\n    = note: only traits defined in the current crate can be implemented for a type parameter\n "}, {"sha": "d8db025cbcf2768dac7803fd112f2bb91527fee0", "filename": "src/test/ui/coherence/coherence-cow.b.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cow.b.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cow.b.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cow.b.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -1,8 +1,8 @@\n error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n-  --> $DIR/coherence-cow.rs:23:1\n+  --> $DIR/coherence-cow.rs:23:6\n    |\n LL | impl<T> Remote for Pair<Cover<T>,T> { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |      ^ type parameter `T` must be used as the type parameter for some local type\n    |\n    = note: only traits defined in the current crate can be implemented for a type parameter\n "}, {"sha": "ff46d7ea280323dbfa924b6f672dee4918ce4147", "filename": "src/test/ui/coherence/coherence-cow.c.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cow.c.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cow.c.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cow.c.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -1,8 +1,8 @@\n error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n-  --> $DIR/coherence-cow.rs:28:1\n+  --> $DIR/coherence-cow.rs:28:6\n    |\n LL | impl<T,U> Remote for Pair<Cover<T>,U> { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |      ^ type parameter `T` must be used as the type parameter for some local type\n    |\n    = note: only traits defined in the current crate can be implemented for a type parameter\n "}, {"sha": "69d391378c195d1d83cd28eeb7cd592a58a6b9d9", "filename": "src/test/ui/coherence/coherence-cow.re_a.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cow.re_a.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cow.re_a.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cow.re_a.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -2,9 +2,11 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n   --> $DIR/coherence-cow.rs:18:1\n    |\n LL | impl<T> Remote for Pair<T,Cover<T>> { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^^^^^^----------------\n+   | |                  |\n+   | |                  `lib::Pair<T, Cover<T>>` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `lib::Pair<T, Cover<T>>` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to previous error"}, {"sha": "9be92ef3e0eb39c1ed0206b154f63d351fe5adaa", "filename": "src/test/ui/coherence/coherence-cow.re_b.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cow.re_b.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cow.re_b.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cow.re_b.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -2,9 +2,11 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n   --> $DIR/coherence-cow.rs:23:1\n    |\n LL | impl<T> Remote for Pair<Cover<T>,T> { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^^^^^^----------------\n+   | |                  |\n+   | |                  `lib::Pair<Cover<T>, T>` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `lib::Pair<Cover<T>, T>` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to previous error"}, {"sha": "5e942978d5a330c176341bfbf0aba1f1d26fbd43", "filename": "src/test/ui/coherence/coherence-cow.re_c.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cow.re_c.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cow.re_c.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cow.re_c.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -2,9 +2,11 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n   --> $DIR/coherence-cow.rs:28:1\n    |\n LL | impl<T,U> Remote for Pair<Cover<T>,U> { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^^^^^^^^----------------\n+   | |                    |\n+   | |                    `lib::Pair<Cover<T>, U>` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `lib::Pair<Cover<T>, U>` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to previous error"}, {"sha": "971abe29639ff614b76a5c923bbde31334bbbaee", "filename": "src/test/ui/coherence/coherence-cross-crate-conflict.old.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cross-crate-conflict.old.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cross-crate-conflict.old.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cross-crate-conflict.old.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -8,10 +8,10 @@ LL | impl<A> Foo for A {\n            - impl trait_impl_conflict::Foo for isize;\n \n error[E0210]: type parameter `A` must be used as the type parameter for some local type (e.g., `MyStruct<A>`)\n-  --> $DIR/coherence-cross-crate-conflict.rs:12:1\n+  --> $DIR/coherence-cross-crate-conflict.rs:12:6\n    |\n LL | impl<A> Foo for A {\n-   | ^^^^^^^^^^^^^^^^^ type parameter `A` must be used as the type parameter for some local type\n+   |      ^ type parameter `A` must be used as the type parameter for some local type\n    |\n    = note: only traits defined in the current crate can be implemented for a type parameter\n "}, {"sha": "971abe29639ff614b76a5c923bbde31334bbbaee", "filename": "src/test/ui/coherence/coherence-cross-crate-conflict.re.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cross-crate-conflict.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cross-crate-conflict.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cross-crate-conflict.re.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -8,10 +8,10 @@ LL | impl<A> Foo for A {\n            - impl trait_impl_conflict::Foo for isize;\n \n error[E0210]: type parameter `A` must be used as the type parameter for some local type (e.g., `MyStruct<A>`)\n-  --> $DIR/coherence-cross-crate-conflict.rs:12:1\n+  --> $DIR/coherence-cross-crate-conflict.rs:12:6\n    |\n LL | impl<A> Foo for A {\n-   | ^^^^^^^^^^^^^^^^^ type parameter `A` must be used as the type parameter for some local type\n+   |      ^ type parameter `A` must be used as the type parameter for some local type\n    |\n    = note: only traits defined in the current crate can be implemented for a type parameter\n "}, {"sha": "2efa2702a2452ed2b08048acea039d4ebeb280d8", "filename": "src/test/ui/coherence/coherence-fundamental-trait-objects.old.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fundamental-trait-objects.old.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fundamental-trait-objects.old.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fundamental-trait-objects.old.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -2,9 +2,11 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n   --> $DIR/coherence-fundamental-trait-objects.rs:15:1\n    |\n LL | impl Misc for dyn Fundamental<Local> {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^----------------------\n+   | |             |\n+   | |             `(dyn coherence_fundamental_trait_lib::Fundamental<Local> + 'static)` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `(dyn coherence_fundamental_trait_lib::Fundamental<Local> + 'static)` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to previous error"}, {"sha": "2efa2702a2452ed2b08048acea039d4ebeb280d8", "filename": "src/test/ui/coherence/coherence-fundamental-trait-objects.re.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fundamental-trait-objects.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fundamental-trait-objects.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fundamental-trait-objects.re.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -2,9 +2,11 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n   --> $DIR/coherence-fundamental-trait-objects.rs:15:1\n    |\n LL | impl Misc for dyn Fundamental<Local> {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^----------------------\n+   | |             |\n+   | |             `(dyn coherence_fundamental_trait_lib::Fundamental<Local> + 'static)` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `(dyn coherence_fundamental_trait_lib::Fundamental<Local> + 'static)` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to previous error"}, {"sha": "5a157434fb48e380ba8912ad3aa14a2118df56e8", "filename": "src/test/ui/coherence/coherence-impl-trait-for-marker-trait-negative.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impl-trait-for-marker-trait-negative.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impl-trait-for-marker-trait-negative.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impl-trait-for-marker-trait-negative.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -14,9 +14,11 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n   --> $DIR/coherence-impl-trait-for-marker-trait-negative.rs:22:1\n    |\n LL | impl !Send for dyn Marker2 {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^^-----------\n+   | |              |\n+   | |              `(dyn Marker2 + 'static)` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `(dyn Marker2 + 'static)` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error[E0321]: cross-crate traits with a default impl, like `std::marker::Send`, can only be implemented for a struct/enum type, not `(dyn Object + 'static)`"}, {"sha": "9ba125d58dfc512c7c9e389be9894ab68828b6e7", "filename": "src/test/ui/coherence/coherence-impl-trait-for-marker-trait-positive.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impl-trait-for-marker-trait-positive.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impl-trait-for-marker-trait-positive.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impl-trait-for-marker-trait-positive.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -14,9 +14,11 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n   --> $DIR/coherence-impl-trait-for-marker-trait-positive.rs:22:1\n    |\n LL | unsafe impl Send for dyn Marker2 {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^^^^^^^^-----------\n+   | |                    |\n+   | |                    `(dyn Marker2 + 'static)` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `(dyn Marker2 + 'static)` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error[E0321]: cross-crate traits with a default impl, like `std::marker::Send`, can only be implemented for a struct/enum type, not `(dyn Object + 'static)`"}, {"sha": "4da32a9accd22a48d2ddd27fe2787cd016995451", "filename": "src/test/ui/coherence/coherence-impls-copy.old.stderr", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-copy.old.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-copy.old.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-copy.old.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -49,36 +49,44 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n   --> $DIR/coherence-impls-copy.rs:8:1\n    |\n LL | impl Copy for i32 {}\n-   | ^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^---\n+   | |             |\n+   | |             `i32` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `i32` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n   --> $DIR/coherence-impls-copy.rs:32:1\n    |\n LL | impl Copy for (MyType, MyType) {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^----------------\n+   | |             |\n+   | |             `(MyType, MyType)` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `(MyType, MyType)` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n   --> $DIR/coherence-impls-copy.rs:40:1\n    |\n LL | impl Copy for [MyType] {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^--------\n+   | |             |\n+   | |             `[MyType]` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `[MyType]` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n   --> $DIR/coherence-impls-copy.rs:45:1\n    |\n LL | impl Copy for &'static [NotSync] {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^------------------\n+   | |             |\n+   | |             `&'static [NotSync]` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `&'static [NotSync]` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to 10 previous errors"}, {"sha": "09aa8313190580036efc8cd23388e0a519a0003d", "filename": "src/test/ui/coherence/coherence-impls-copy.re.stderr", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-copy.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-copy.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-copy.re.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -49,36 +49,44 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n   --> $DIR/coherence-impls-copy.rs:8:1\n    |\n LL | impl Copy for i32 {}\n-   | ^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^---\n+   | |             |\n+   | |             `i32` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `i32` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n   --> $DIR/coherence-impls-copy.rs:32:1\n    |\n LL | impl Copy for (MyType, MyType) {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^----------------\n+   | |             |\n+   | |             `(MyType, MyType)` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `(MyType, MyType)` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n   --> $DIR/coherence-impls-copy.rs:40:1\n    |\n LL | impl Copy for [MyType] {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^--------\n+   | |             |\n+   | |             `[MyType]` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `[MyType]` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n   --> $DIR/coherence-impls-copy.rs:45:1\n    |\n LL | impl Copy for &'static [NotSync] {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^------------------\n+   | |             |\n+   | |             `[NotSync]` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `[NotSync]` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to 10 previous errors"}, {"sha": "0b49a6bf6dee711b03c21c15a1b83b6aa95f04f1", "filename": "src/test/ui/coherence/coherence-impls-send.old.stderr", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-send.old.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-send.old.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-send.old.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -2,9 +2,11 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n   --> $DIR/coherence-impls-send.rs:20:1\n    |\n LL | unsafe impl Send for (MyType, MyType) {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^^^^^^^^----------------\n+   | |                    |\n+   | |                    `(MyType, MyType)` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `(MyType, MyType)` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error[E0321]: cross-crate traits with a default impl, like `std::marker::Send`, can only be implemented for a struct/enum type, not `&'static NotSync`\n@@ -17,18 +19,22 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n   --> $DIR/coherence-impls-send.rs:28:1\n    |\n LL | unsafe impl Send for [MyType] {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^^^^^^^^--------\n+   | |                    |\n+   | |                    `[MyType]` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `[MyType]` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n   --> $DIR/coherence-impls-send.rs:32:1\n    |\n LL | unsafe impl Send for &'static [NotSync] {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^^^^^^^^------------------\n+   | |                    |\n+   | |                    `&'static [NotSync]` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `&'static [NotSync]` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to 4 previous errors"}, {"sha": "60d439a32354c20d7219dbf0e261f49b746d15ab", "filename": "src/test/ui/coherence/coherence-impls-send.re.stderr", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-send.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-send.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-send.re.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -2,9 +2,11 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n   --> $DIR/coherence-impls-send.rs:20:1\n    |\n LL | unsafe impl Send for (MyType, MyType) {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^^^^^^^^----------------\n+   | |                    |\n+   | |                    `(MyType, MyType)` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `(MyType, MyType)` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error[E0321]: cross-crate traits with a default impl, like `std::marker::Send`, can only be implemented for a struct/enum type, not `&'static NotSync`\n@@ -17,18 +19,22 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n   --> $DIR/coherence-impls-send.rs:28:1\n    |\n LL | unsafe impl Send for [MyType] {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^^^^^^^^--------\n+   | |                    |\n+   | |                    `[MyType]` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `[MyType]` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n   --> $DIR/coherence-impls-send.rs:32:1\n    |\n LL | unsafe impl Send for &'static [NotSync] {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^^^^^^^^------------------\n+   | |                    |\n+   | |                    `[NotSync]` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `[NotSync]` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to 4 previous errors"}, {"sha": "9da3c26931f4d433a40bc6fc504c3492c5bbd50d", "filename": "src/test/ui/coherence/coherence-impls-sized.old.stderr", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-sized.old.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-sized.old.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-sized.old.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -38,27 +38,33 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n   --> $DIR/coherence-impls-sized.rs:27:1\n    |\n LL | impl Sized for (MyType, MyType) {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^^----------------\n+   | |              |\n+   | |              `(MyType, MyType)` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `(MyType, MyType)` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n   --> $DIR/coherence-impls-sized.rs:39:1\n    |\n LL | impl Sized for [MyType] {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^^--------\n+   | |              |\n+   | |              `[MyType]` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `[MyType]` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n   --> $DIR/coherence-impls-sized.rs:46:1\n    |\n LL | impl Sized for &'static [NotSync] {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^^------------------\n+   | |              |\n+   | |              `&'static [NotSync]` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `&'static [NotSync]` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to 9 previous errors"}, {"sha": "4f5f31b80861e766f669e34c51dde8c0bc2b95ec", "filename": "src/test/ui/coherence/coherence-impls-sized.re.stderr", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-sized.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-sized.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-sized.re.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -38,27 +38,33 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n   --> $DIR/coherence-impls-sized.rs:27:1\n    |\n LL | impl Sized for (MyType, MyType) {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^^----------------\n+   | |              |\n+   | |              `(MyType, MyType)` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `(MyType, MyType)` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n   --> $DIR/coherence-impls-sized.rs:39:1\n    |\n LL | impl Sized for [MyType] {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^^--------\n+   | |              |\n+   | |              `[MyType]` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `[MyType]` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n   --> $DIR/coherence-impls-sized.rs:46:1\n    |\n LL | impl Sized for &'static [NotSync] {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^^------------------\n+   | |              |\n+   | |              `[NotSync]` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `[NotSync]` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to 9 previous errors"}, {"sha": "731752045cd34820a7167bf5823f05025195a6ae", "filename": "src/test/ui/coherence/coherence-lone-type-parameter.old.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-lone-type-parameter.old.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-lone-type-parameter.old.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-lone-type-parameter.old.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -1,8 +1,8 @@\n error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n-  --> $DIR/coherence-lone-type-parameter.rs:9:1\n+  --> $DIR/coherence-lone-type-parameter.rs:9:6\n    |\n LL | impl<T> Remote for T { }\n-   | ^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |      ^ type parameter `T` must be used as the type parameter for some local type\n    |\n    = note: only traits defined in the current crate can be implemented for a type parameter\n "}, {"sha": "731752045cd34820a7167bf5823f05025195a6ae", "filename": "src/test/ui/coherence/coherence-lone-type-parameter.re.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-lone-type-parameter.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-lone-type-parameter.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-lone-type-parameter.re.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -1,8 +1,8 @@\n error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n-  --> $DIR/coherence-lone-type-parameter.rs:9:1\n+  --> $DIR/coherence-lone-type-parameter.rs:9:6\n    |\n LL | impl<T> Remote for T { }\n-   | ^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |      ^ type parameter `T` must be used as the type parameter for some local type\n    |\n    = note: only traits defined in the current crate can be implemented for a type parameter\n "}, {"sha": "3594224abac44029e925f4fa82153b31daef7c9e", "filename": "src/test/ui/coherence/coherence-orphan.old.stderr", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-orphan.old.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-orphan.old.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-orphan.old.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -2,19 +2,23 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n   --> $DIR/coherence-orphan.rs:13:1\n    |\n LL | impl TheTrait<usize> for isize { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^-----\n+   | |                        |\n+   | |                        `isize` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `isize` is not defined in the current create\n-   = note: `usize` is not defined in the current create\n+   = note: `usize` is not defined in the current crate\n    = note: define and implement a trait or new type instead\n \n error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n   --> $DIR/coherence-orphan.rs:21:1\n    |\n LL | impl !Send for Vec<isize> { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^^----------\n+   | |              |\n+   | |              `std::vec::Vec<isize>` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `std::vec::Vec<isize>` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to 2 previous errors"}, {"sha": "3594224abac44029e925f4fa82153b31daef7c9e", "filename": "src/test/ui/coherence/coherence-orphan.re.stderr", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-orphan.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-orphan.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-orphan.re.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -2,19 +2,23 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n   --> $DIR/coherence-orphan.rs:13:1\n    |\n LL | impl TheTrait<usize> for isize { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^-----\n+   | |                        |\n+   | |                        `isize` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `isize` is not defined in the current create\n-   = note: `usize` is not defined in the current create\n+   = note: `usize` is not defined in the current crate\n    = note: define and implement a trait or new type instead\n \n error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n   --> $DIR/coherence-orphan.rs:21:1\n    |\n LL | impl !Send for Vec<isize> { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^^----------\n+   | |              |\n+   | |              `std::vec::Vec<isize>` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `std::vec::Vec<isize>` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to 2 previous errors"}, {"sha": "7c62716f7058cff687180bf988de1b0568b6f0f6", "filename": "src/test/ui/coherence/coherence-overlapping-pairs.old.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlapping-pairs.old.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlapping-pairs.old.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlapping-pairs.old.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -1,8 +1,8 @@\n error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n-  --> $DIR/coherence-overlapping-pairs.rs:11:1\n+  --> $DIR/coherence-overlapping-pairs.rs:11:6\n    |\n LL | impl<T> Remote for lib::Pair<T,Foo> { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |      ^ type parameter `T` must be used as the type parameter for some local type\n    |\n    = note: only traits defined in the current crate can be implemented for a type parameter\n "}, {"sha": "3b40137064f10ab7561055f369613468d5609d6d", "filename": "src/test/ui/coherence/coherence-overlapping-pairs.re.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlapping-pairs.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlapping-pairs.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlapping-pairs.re.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -2,9 +2,11 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n   --> $DIR/coherence-overlapping-pairs.rs:11:1\n    |\n LL | impl<T> Remote for lib::Pair<T,Foo> { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^^^^^^----------------\n+   | |                  |\n+   | |                  `lib::Pair<T, Foo>` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `lib::Pair<T, Foo>` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to previous error"}, {"sha": "9f55df4c974b8da20861878ca1673fee37d3dae9", "filename": "src/test/ui/coherence/coherence-pair-covered-uncovered-1.old.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-pair-covered-uncovered-1.old.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-pair-covered-uncovered-1.old.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-pair-covered-uncovered-1.old.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -1,8 +1,8 @@\n error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n-  --> $DIR/coherence-pair-covered-uncovered-1.rs:15:1\n+  --> $DIR/coherence-pair-covered-uncovered-1.rs:15:6\n    |\n LL | impl<T, U> Remote1<Pair<T, Local<U>>> for i32 { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |      ^ type parameter `T` must be used as the type parameter for some local type\n    |\n    = note: only traits defined in the current crate can be implemented for a type parameter\n "}, {"sha": "3af9d93833d2e1095fe2c66c313eb5839c97eee8", "filename": "src/test/ui/coherence/coherence-pair-covered-uncovered-1.re.stderr", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-pair-covered-uncovered-1.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-pair-covered-uncovered-1.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-pair-covered-uncovered-1.re.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -2,10 +2,12 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n   --> $DIR/coherence-pair-covered-uncovered-1.rs:15:1\n    |\n LL | impl<T, U> Remote1<Pair<T, Local<U>>> for i32 { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^---\n+   | |                                         |\n+   | |                                         `i32` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `i32` is not defined in the current create\n-   = note: `lib::Pair<T, Local<U>>` is not defined in the current create\n+   = note: `lib::Pair<T, Local<U>>` is not defined in the current crate\n    = note: define and implement a trait or new type instead\n \n error: aborting due to previous error"}, {"sha": "4084061eb4ac50fc71ae2670d5f32f9e550bd0f7", "filename": "src/test/ui/coherence/coherence-pair-covered-uncovered.old.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-pair-covered-uncovered.old.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-pair-covered-uncovered.old.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-pair-covered-uncovered.old.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -1,8 +1,8 @@\n error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n-  --> $DIR/coherence-pair-covered-uncovered.rs:11:1\n+  --> $DIR/coherence-pair-covered-uncovered.rs:11:6\n    |\n LL | impl<T,U> Remote for Pair<T,Local<U>> { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |      ^ type parameter `T` must be used as the type parameter for some local type\n    |\n    = note: only traits defined in the current crate can be implemented for a type parameter\n "}, {"sha": "44c829669515f0713739fec721e3064ab5f23438", "filename": "src/test/ui/coherence/coherence-pair-covered-uncovered.re.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-pair-covered-uncovered.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-pair-covered-uncovered.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-pair-covered-uncovered.re.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -2,9 +2,11 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n   --> $DIR/coherence-pair-covered-uncovered.rs:11:1\n    |\n LL | impl<T,U> Remote for Pair<T,Local<U>> { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^^^^^^^^----------------\n+   | |                    |\n+   | |                    `lib::Pair<T, Local<U>>` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `lib::Pair<T, Local<U>>` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to previous error"}, {"sha": "fbcf8fb762a010ff243079e249d0b2ba6b4403da", "filename": "src/test/ui/coherence/coherence-vec-local-2.old.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-vec-local-2.old.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-vec-local-2.old.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-vec-local-2.old.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -1,8 +1,8 @@\n error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n-  --> $DIR/coherence-vec-local-2.rs:14:1\n+  --> $DIR/coherence-vec-local-2.rs:14:6\n    |\n LL | impl<T> Remote for Vec<Local<T>> { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |      ^ type parameter `T` must be used as the type parameter for some local type\n    |\n    = note: only traits defined in the current crate can be implemented for a type parameter\n "}, {"sha": "640eb11ee636a75b667db779d2209c3daff198cf", "filename": "src/test/ui/coherence/coherence-vec-local-2.re.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-vec-local-2.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-vec-local-2.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-vec-local-2.re.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -2,9 +2,11 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n   --> $DIR/coherence-vec-local-2.rs:14:1\n    |\n LL | impl<T> Remote for Vec<Local<T>> { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^^^^^^-------------\n+   | |                  |\n+   | |                  `std::vec::Vec<Local<T>>` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `std::vec::Vec<Local<T>>` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to previous error"}, {"sha": "d441f9b25fa885e902f2fbe75e941565d50985b5", "filename": "src/test/ui/coherence/coherence-vec-local.old.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-vec-local.old.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-vec-local.old.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-vec-local.old.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -2,9 +2,11 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n   --> $DIR/coherence-vec-local.rs:14:1\n    |\n LL | impl Remote for Vec<Local> { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^^^----------\n+   | |               |\n+   | |               `std::vec::Vec<Local>` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `std::vec::Vec<Local>` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to previous error"}, {"sha": "d441f9b25fa885e902f2fbe75e941565d50985b5", "filename": "src/test/ui/coherence/coherence-vec-local.re.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-vec-local.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-vec-local.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-vec-local.re.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -2,9 +2,11 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n   --> $DIR/coherence-vec-local.rs:14:1\n    |\n LL | impl Remote for Vec<Local> { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^^^----------\n+   | |               |\n+   | |               `std::vec::Vec<Local>` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `std::vec::Vec<Local>` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to previous error"}, {"sha": "2d94edcd95d7bd24259e33b265d1411c121bd890", "filename": "src/test/ui/coherence/coherence_local_err_struct.old.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_local_err_struct.old.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_local_err_struct.old.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_local_err_struct.old.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -2,9 +2,11 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n   --> $DIR/coherence_local_err_struct.rs:17:1\n    |\n LL | impl lib::MyCopy for lib::MyStruct<MyType> { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^^^^^^^^---------------------\n+   | |                    |\n+   | |                    `lib::MyStruct<MyType>` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `lib::MyStruct<MyType>` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to previous error"}, {"sha": "2d94edcd95d7bd24259e33b265d1411c121bd890", "filename": "src/test/ui/coherence/coherence_local_err_struct.re.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_local_err_struct.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_local_err_struct.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_local_err_struct.re.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -2,9 +2,11 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n   --> $DIR/coherence_local_err_struct.rs:17:1\n    |\n LL | impl lib::MyCopy for lib::MyStruct<MyType> { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^^^^^^^^---------------------\n+   | |                    |\n+   | |                    `lib::MyStruct<MyType>` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `lib::MyStruct<MyType>` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to previous error"}, {"sha": "7c3c26f5b9204f58c054c3dff1876c23364af39f", "filename": "src/test/ui/coherence/coherence_local_err_tuple.old.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_local_err_tuple.old.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_local_err_tuple.old.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_local_err_tuple.old.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -2,9 +2,11 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n   --> $DIR/coherence_local_err_tuple.rs:17:1\n    |\n LL | impl lib::MyCopy for (MyType,) { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^^^^^^^^---------\n+   | |                    |\n+   | |                    `(MyType,)` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `(MyType,)` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to previous error"}, {"sha": "7c3c26f5b9204f58c054c3dff1876c23364af39f", "filename": "src/test/ui/coherence/coherence_local_err_tuple.re.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_local_err_tuple.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_local_err_tuple.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_local_err_tuple.re.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -2,9 +2,11 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n   --> $DIR/coherence_local_err_tuple.rs:17:1\n    |\n LL | impl lib::MyCopy for (MyType,) { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^^^^^^^^---------\n+   | |                    |\n+   | |                    `(MyType,)` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `(MyType,)` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to previous error"}, {"sha": "0a36f7cf3c692dfa314b5fc88767d21b5d5a376f", "filename": "src/test/ui/coherence/impl-foreign[foreign]-for-foreign.stderr", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bforeign%5D-for-foreign.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bforeign%5D-for-foreign.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bforeign%5D-for-foreign.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -2,10 +2,12 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n   --> $DIR/impl-foreign[foreign]-for-foreign.rs:12:1\n    |\n LL | impl Remote1<u32> for f64 {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^^^^^^^^^---\n+   | |                     |\n+   | |                     `f64` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `f64` is not defined in the current create\n-   = note: `u32` is not defined in the current create\n+   = note: `u32` is not defined in the current crate\n    = note: define and implement a trait or new type instead\n \n error: aborting due to previous error"}, {"sha": "cbead462e67904d23502fe9adb0d69364aa433f7", "filename": "src/test/ui/coherence/impl[t]-foreign[foreign]-for-fundamental[t].stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5D-for-fundamental%5Bt%5D.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5D-for-fundamental%5Bt%5D.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5D-for-fundamental%5Bt%5D.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -1,16 +1,16 @@\n error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n-  --> $DIR/impl[t]-foreign[foreign]-for-fundamental[t].rs:12:1\n+  --> $DIR/impl[t]-foreign[foreign]-for-fundamental[t].rs:12:6\n    |\n LL | impl<T> Remote1<u32> for Box<T> {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |      ^ type parameter `T` must be used as the type parameter for some local type\n    |\n    = note: only traits defined in the current crate can be implemented for a type parameter\n \n error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n-  --> $DIR/impl[t]-foreign[foreign]-for-fundamental[t].rs:16:1\n+  --> $DIR/impl[t]-foreign[foreign]-for-fundamental[t].rs:16:10\n    |\n LL | impl<'a, T> Remote1<u32> for &'a T {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |          ^ type parameter `T` must be used as the type parameter for some local type\n    |\n    = note: only traits defined in the current crate can be implemented for a type parameter\n "}, {"sha": "3d9afdf6cf6051f970ab65110a578db4b09e3810", "filename": "src/test/ui/coherence/impl[t]-foreign[foreign]-for-t.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5D-for-t.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5D-for-t.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5D-for-t.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -1,8 +1,8 @@\n error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n-  --> $DIR/impl[t]-foreign[foreign]-for-t.rs:12:1\n+  --> $DIR/impl[t]-foreign[foreign]-for-t.rs:12:6\n    |\n LL | impl<T> Remote1<u32> for T {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |      ^ type parameter `T` must be used as the type parameter for some local type\n    |\n    = note: only traits defined in the current crate can be implemented for a type parameter\n "}, {"sha": "150b1962acb840af48f55dd58b26e83133ecb9d2", "filename": "src/test/ui/coherence/impl[t]-foreign[fundamental[t]]-for-foreign.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-foreign.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-foreign.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-foreign.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -1,16 +1,16 @@\n error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n-  --> $DIR/impl[t]-foreign[fundamental[t]]-for-foreign.rs:12:1\n+  --> $DIR/impl[t]-foreign[fundamental[t]]-for-foreign.rs:12:6\n    |\n LL | impl<T> Remote1<Box<T>> for u32 {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |      ^ type parameter `T` must be used as the type parameter for some local type\n    |\n    = note: only traits defined in the current crate can be implemented for a type parameter\n \n error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n-  --> $DIR/impl[t]-foreign[fundamental[t]]-for-foreign.rs:16:1\n+  --> $DIR/impl[t]-foreign[fundamental[t]]-for-foreign.rs:16:10\n    |\n LL | impl<'a, T> Remote1<&'a T> for u32 {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |          ^ type parameter `T` must be used as the type parameter for some local type\n    |\n    = note: only traits defined in the current crate can be implemented for a type parameter\n "}, {"sha": "0d86e74788cf89c3a5deb24a44ce1685bf1948f3", "filename": "src/test/ui/coherence/impl[t]-foreign[fundamental[t]]-for-fundamental[t].stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-fundamental%5Bt%5D.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-fundamental%5Bt%5D.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-fundamental%5Bt%5D.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -1,16 +1,16 @@\n error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n-  --> $DIR/impl[t]-foreign[fundamental[t]]-for-fundamental[t].rs:12:1\n+  --> $DIR/impl[t]-foreign[fundamental[t]]-for-fundamental[t].rs:12:10\n    |\n LL | impl<'a, T> Remote1<Box<T>> for &'a T {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |          ^ type parameter `T` must be used as the type parameter for some local type\n    |\n    = note: only traits defined in the current crate can be implemented for a type parameter\n \n error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n-  --> $DIR/impl[t]-foreign[fundamental[t]]-for-fundamental[t].rs:15:1\n+  --> $DIR/impl[t]-foreign[fundamental[t]]-for-fundamental[t].rs:15:10\n    |\n LL | impl<'a, T> Remote1<&'a T> for Box<T> {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |          ^ type parameter `T` must be used as the type parameter for some local type\n    |\n    = note: only traits defined in the current crate can be implemented for a type parameter\n "}, {"sha": "04ac6a868fa1ab3009711c0ad49228333534a886", "filename": "src/test/ui/coherence/impl[t]-foreign[fundamental[t]]-for-t.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-t.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-t.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-t.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -1,16 +1,16 @@\n error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n-  --> $DIR/impl[t]-foreign[fundamental[t]]-for-t.rs:12:1\n+  --> $DIR/impl[t]-foreign[fundamental[t]]-for-t.rs:12:6\n    |\n LL | impl<T> Remote1<Box<T>> for T {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |      ^ type parameter `T` must be used as the type parameter for some local type\n    |\n    = note: only traits defined in the current crate can be implemented for a type parameter\n \n error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n-  --> $DIR/impl[t]-foreign[fundamental[t]]-for-t.rs:15:1\n+  --> $DIR/impl[t]-foreign[fundamental[t]]-for-t.rs:15:10\n    |\n LL | impl<'a, T> Remote1<&'a T> for T {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |          ^ type parameter `T` must be used as the type parameter for some local type\n    |\n    = note: only traits defined in the current crate can be implemented for a type parameter\n "}, {"sha": "f1fdcecf57df83315717761e7a4b8bb3522a1c6f", "filename": "src/test/ui/coherence/impl[t]-foreign[fundamental[t]_local]-for-foreign.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D_local%5D-for-foreign.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D_local%5D-for-foreign.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D_local%5D-for-foreign.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -1,16 +1,16 @@\n error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n-  --> $DIR/impl[t]-foreign[fundamental[t]_local]-for-foreign.rs:12:1\n+  --> $DIR/impl[t]-foreign[fundamental[t]_local]-for-foreign.rs:12:6\n    |\n LL | impl<T> Remote2<Box<T>, Local> for u32 {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |      ^ type parameter `T` must be used as the type parameter for some local type\n    |\n    = note: only traits defined in the current crate can be implemented for a type parameter\n \n error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n-  --> $DIR/impl[t]-foreign[fundamental[t]_local]-for-foreign.rs:16:1\n+  --> $DIR/impl[t]-foreign[fundamental[t]_local]-for-foreign.rs:16:10\n    |\n LL | impl<'a, T> Remote2<&'a T, Local> for u32 {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |          ^ type parameter `T` must be used as the type parameter for some local type\n    |\n    = note: only traits defined in the current crate can be implemented for a type parameter\n "}, {"sha": "99ccbb89fc2fc086595eb7611958bd8a3ac52a42", "filename": "src/test/ui/coherence/impl[t]-foreign[local]-for-fundamental[t].stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-fundamental%5Bt%5D.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-fundamental%5Bt%5D.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-fundamental%5Bt%5D.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -1,16 +1,16 @@\n error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n-  --> $DIR/impl[t]-foreign[local]-for-fundamental[t].rs:12:1\n+  --> $DIR/impl[t]-foreign[local]-for-fundamental[t].rs:12:6\n    |\n LL | impl<T> Remote1<Local> for Box<T> {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |      ^ type parameter `T` must be used as the type parameter for some local type\n    |\n    = note: only traits defined in the current crate can be implemented for a type parameter\n \n error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n-  --> $DIR/impl[t]-foreign[local]-for-fundamental[t].rs:16:1\n+  --> $DIR/impl[t]-foreign[local]-for-fundamental[t].rs:16:6\n    |\n LL | impl<T> Remote1<Local> for &T {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |      ^ type parameter `T` must be used as the type parameter for some local type\n    |\n    = note: only traits defined in the current crate can be implemented for a type parameter\n "}, {"sha": "08cf414c139af3b40d5edf0bb699ae59c4ac74ca", "filename": "src/test/ui/coherence/impl[t]-foreign[local]-for-t.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-t.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-t.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-t.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -1,8 +1,8 @@\n error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n-  --> $DIR/impl[t]-foreign[local]-for-t.rs:12:1\n+  --> $DIR/impl[t]-foreign[local]-for-t.rs:12:6\n    |\n LL | impl<T> Remote1<Local> for T {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |      ^ type parameter `T` must be used as the type parameter for some local type\n    |\n    = note: only traits defined in the current crate can be implemented for a type parameter\n "}, {"sha": "e9d1ea8a8157516c63f7865944e4f74c04be4a65", "filename": "src/test/ui/coherence/impl[t]-foreign[t]-for-foreign.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-foreign.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-foreign.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-foreign.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -1,8 +1,8 @@\n error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n-  --> $DIR/impl[t]-foreign[t]-for-foreign.rs:12:1\n+  --> $DIR/impl[t]-foreign[t]-for-foreign.rs:12:6\n    |\n LL | impl<T> Remote1<T> for u32 {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |      ^ type parameter `T` must be used as the type parameter for some local type\n    |\n    = note: only traits defined in the current crate can be implemented for a type parameter\n "}, {"sha": "d8b0d25a5782bbbb20dfcb7a42f52f709fa17483", "filename": "src/test/ui/coherence/impl[t]-foreign[t]-for-fundamental.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-fundamental.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-fundamental.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-fundamental.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -1,16 +1,16 @@\n error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n-  --> $DIR/impl[t]-foreign[t]-for-fundamental.rs:12:1\n+  --> $DIR/impl[t]-foreign[t]-for-fundamental.rs:12:6\n    |\n LL | impl<T> Remote1<T> for Box<T> {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |      ^ type parameter `T` must be used as the type parameter for some local type\n    |\n    = note: only traits defined in the current crate can be implemented for a type parameter\n \n error[E0210]: type parameter `B` must be used as the type parameter for some local type (e.g., `MyStruct<B>`)\n-  --> $DIR/impl[t]-foreign[t]-for-fundamental.rs:16:1\n+  --> $DIR/impl[t]-foreign[t]-for-fundamental.rs:16:13\n    |\n LL | impl<'a, A, B> Remote1<A> for &'a B {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `B` must be used as the type parameter for some local type\n+   |             ^ type parameter `B` must be used as the type parameter for some local type\n    |\n    = note: only traits defined in the current crate can be implemented for a type parameter\n "}, {"sha": "7b651e66c3dcb2a760b2d19a09a0bd17937aa20a", "filename": "src/test/ui/coherence/impl[t]-foreign[t]-for-t.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-t.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-t.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-t.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -1,8 +1,8 @@\n error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n-  --> $DIR/impl[t]-foreign[t]-for-t.rs:12:1\n+  --> $DIR/impl[t]-foreign[t]-for-t.rs:12:6\n    |\n LL | impl<T> Remote1<T> for T {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |      ^ type parameter `T` must be used as the type parameter for some local type\n    |\n    = note: only traits defined in the current crate can be implemented for a type parameter\n "}, {"sha": "91b146dee937e6392366d1b767a6b1854baff3d5", "filename": "src/test/ui/dropck/drop-on-non-struct.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fdropck%2Fdrop-on-non-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fdropck%2Fdrop-on-non-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdropck%2Fdrop-on-non-struct.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -8,9 +8,11 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n   --> $DIR/drop-on-non-struct.rs:1:1\n    |\n LL | impl<'a> Drop for &'a mut isize {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^^^^^-------------\n+   | |                 |\n+   | |                 `&'a mut isize` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `&'a mut isize` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to 2 previous errors"}, {"sha": "f0cfc8a2533248a6e50320df44388d07c7000056", "filename": "src/test/ui/error-codes/E0117.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Ferror-codes%2FE0117.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Ferror-codes%2FE0117.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0117.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -8,9 +8,11 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n   --> $DIR/E0117.rs:1:1\n    |\n LL | impl Drop for u32 {}\n-   | ^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^---\n+   | |             |\n+   | |             `u32` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `u32` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to 2 previous errors"}, {"sha": "12962e0d3d8765dd9c72f6464769f9c752aa689d", "filename": "src/test/ui/error-codes/E0206.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Ferror-codes%2FE0206.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Ferror-codes%2FE0206.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0206.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -14,9 +14,11 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n   --> $DIR/E0206.rs:3:1\n    |\n LL | impl Copy for Foo { }\n-   | ^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^---\n+   | |             |\n+   | |             `[u8; _]` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `[u8; _]` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to 3 previous errors"}, {"sha": "f7516d20af472562748d69793a60ebe07f2d6206", "filename": "src/test/ui/error-codes/e0119/complex-impl.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fcomplex-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fcomplex-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fcomplex-impl.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -9,10 +9,10 @@ LL | impl<R> External for (Q, R) {}\n              where <U as std::ops::FnOnce<(T,)>>::Output == V, <V as std::iter::Iterator>::Item == T, 'b : 'a, T : 'a, U: std::ops::FnOnce<(T,)>, U : 'static, V: std::iter::Iterator, V: std::clone::Clone, W: std::ops::Add, <W as std::ops::Add>::Output: std::marker::Copy;\n \n error[E0210]: type parameter `R` must be used as the type parameter for some local type (e.g., `MyStruct<R>`)\n-  --> $DIR/complex-impl.rs:9:1\n+  --> $DIR/complex-impl.rs:9:6\n    |\n LL | impl<R> External for (Q, R) {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `R` must be used as the type parameter for some local type\n+   |      ^ type parameter `R` must be used as the type parameter for some local type\n    |\n    = note: only traits defined in the current crate can be implemented for a type parameter\n "}, {"sha": "ec8e8144d42cfa6b5a756f25876ddb342531a94c", "filename": "src/test/ui/error-codes/e0119/issue-28981.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fissue-28981.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fissue-28981.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fissue-28981.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -9,10 +9,10 @@ LL | impl<Foo> Deref for Foo { }\n              where T: ?Sized;\n \n error[E0210]: type parameter `Foo` must be used as the type parameter for some local type (e.g., `MyStruct<Foo>`)\n-  --> $DIR/issue-28981.rs:5:1\n+  --> $DIR/issue-28981.rs:5:6\n    |\n LL | impl<Foo> Deref for Foo { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^ type parameter `Foo` must be used as the type parameter for some local type\n+   |      ^^^ type parameter `Foo` must be used as the type parameter for some local type\n    |\n    = note: only traits defined in the current crate can be implemented for a type parameter\n "}, {"sha": "504bfb56979609c0c0c6102ca84f58cf16077cb1", "filename": "src/test/ui/feature-gates/feature-gate-re-rebalance-coherence.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-re-rebalance-coherence.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-re-rebalance-coherence.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-re-rebalance-coherence.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -1,8 +1,8 @@\n error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n-  --> $DIR/feature-gate-re-rebalance-coherence.rs:10:1\n+  --> $DIR/feature-gate-re-rebalance-coherence.rs:10:10\n    |\n LL | impl<'a, T:'a, Tab> QueryFragment<Oracle> for BatchInsert<'a, T, Tab> {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |          ^ type parameter `T` must be used as the type parameter for some local type\n    |\n    = note: only traits defined in the current crate can be implemented for a type parameter\n "}, {"sha": "12d4da7159929b4cc0e4180aeb73b83c0c9ed62c", "filename": "src/test/ui/issues/issue-41974.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fissues%2Fissue-41974.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Fissues%2Fissue-41974.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-41974.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -16,10 +16,10 @@ LL | impl<T> Drop for T where T: A {\n    |                  ^ implementing Drop requires a struct\n \n error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n-  --> $DIR/issue-41974.rs:7:1\n+  --> $DIR/issue-41974.rs:7:6\n    |\n LL | impl<T> Drop for T where T: A {\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |      ^ type parameter `T` must be used as the type parameter for some local type\n    |\n    = note: only traits defined in the current crate can be implemented for a type parameter\n "}, {"sha": "cb21b26bba75af4e15b805b6d7fffc89cfcd3a64", "filename": "src/test/ui/orphan-check-diagnostics.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Forphan-check-diagnostics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Forphan-check-diagnostics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Forphan-check-diagnostics.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -1,8 +1,8 @@\n error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n-  --> $DIR/orphan-check-diagnostics.rs:11:1\n+  --> $DIR/orphan-check-diagnostics.rs:11:6\n    |\n LL | impl<T> RemoteTrait for T where T: LocalTrait {}\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n+   |      ^ type parameter `T` must be used as the type parameter for some local type\n    |\n    = note: only traits defined in the current crate can be implemented for a type parameter\n "}, {"sha": "69a8100096ceff241eb5062c99cd4aff4544d6ce", "filename": "src/test/ui/typeck/typeck-default-trait-impl-cross-crate-coherence.stderr", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Ftypeck%2Ftypeck-default-trait-impl-cross-crate-coherence.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b4f811b7f646ebb7273fa3cf8f9d092a44058b5/src%2Ftest%2Fui%2Ftypeck%2Ftypeck-default-trait-impl-cross-crate-coherence.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Ftypeck-default-trait-impl-cross-crate-coherence.stderr?ref=9b4f811b7f646ebb7273fa3cf8f9d092a44058b5", "patch": "@@ -2,18 +2,22 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n   --> $DIR/typeck-default-trait-impl-cross-crate-coherence.rs:13:1\n    |\n LL | impl DefaultedTrait for (A,) { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^----\n+   | |                       |\n+   | |                       `(A,)` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `(A,)` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n   --> $DIR/typeck-default-trait-impl-cross-crate-coherence.rs:16:1\n    |\n LL | impl !DefaultedTrait for (B,) { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^----\n+   | |                        |\n+   | |                        `(B,)` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `(B,)` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error[E0321]: cross-crate traits with a default impl, like `lib::DefaultedTrait`, can only be implemented for a struct/enum type defined in the current crate\n@@ -26,9 +30,11 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n   --> $DIR/typeck-default-trait-impl-cross-crate-coherence.rs:21:1\n    |\n LL | impl DefaultedTrait for lib::Something<C> { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^-----------------\n+   | |                       |\n+   | |                       `lib::Something<C>` is not defined in the current crate\n+   | impl doesn't use only types from inside the current crate\n    |\n-   = note: `lib::Something<C>` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to 4 previous errors"}]}