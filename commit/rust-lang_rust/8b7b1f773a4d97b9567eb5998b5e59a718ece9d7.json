{"sha": "8b7b1f773a4d97b9567eb5998b5e59a718ece9d7", "node_id": "C_kwDOAAsO6NoAKDhiN2IxZjc3M2E0ZDk3Yjk1NjdlYjU5OThiNWU1OWE3MThlY2U5ZDc", "commit": {"author": {"name": "Eric Holk", "email": "ericholk@microsoft.com", "date": "2022-08-17T20:07:17Z"}, "committer": {"name": "Eric Holk", "email": "ericholk@microsoft.com", "date": "2022-08-19T17:53:18Z"}, "message": "Minor syntax and formatting update to doc comment\n\nThe comment is on find_vtable_types_for_unsizing, but there is another\nunrelated typo fix as well.", "tree": {"sha": "8833584cc133d7a0c84ea7b2e43d792887627b18", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8833584cc133d7a0c84ea7b2e43d792887627b18"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b7b1f773a4d97b9567eb5998b5e59a718ece9d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b7b1f773a4d97b9567eb5998b5e59a718ece9d7", "html_url": "https://github.com/rust-lang/rust/commit/8b7b1f773a4d97b9567eb5998b5e59a718ece9d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b7b1f773a4d97b9567eb5998b5e59a718ece9d7/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c20b2a8cc7588decb6de25ac6a7912dcef24d65", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c20b2a8cc7588decb6de25ac6a7912dcef24d65", "html_url": "https://github.com/rust-lang/rust/commit/9c20b2a8cc7588decb6de25ac6a7912dcef24d65"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "82ef16a7f72fc526f5c9bbf3319e8cdd3fdb7ccc", "filename": "compiler/rustc_monomorphize/src/collector.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8b7b1f773a4d97b9567eb5998b5e59a718ece9d7/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b7b1f773a4d97b9567eb5998b5e59a718ece9d7/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs?ref=8b7b1f773a4d97b9567eb5998b5e59a718ece9d7", "patch": "@@ -128,7 +128,7 @@\n //! #### Unsizing Casts\n //! A subtle way of introducing neighbor edges is by casting to a trait object.\n //! Since the resulting fat-pointer contains a reference to a vtable, we need to\n-//! instantiate all object-save methods of the trait, as we need to store\n+//! instantiate all object-safe methods of the trait, as we need to store\n //! pointers to these functions even if they never get called anywhere. This can\n //! be seen as a special case of taking a function reference.\n //!\n@@ -1044,10 +1044,12 @@ fn should_codegen_locally<'tcx>(tcx: TyCtxt<'tcx>, instance: &Instance<'tcx>) ->\n /// them.\n ///\n /// For example, the source type might be `&SomeStruct` and the target type\n-/// might be `&SomeTrait` in a cast like:\n+/// might be `&dyn SomeTrait` in a cast like:\n ///\n+/// ```rust,ignore (not real code)\n /// let src: &SomeStruct = ...;\n-/// let target = src as &SomeTrait;\n+/// let target = src as &dyn SomeTrait;\n+/// ```\n ///\n /// Then the output of this function would be (SomeStruct, SomeTrait) since for\n /// constructing the `target` fat-pointer we need the vtable for that pair.\n@@ -1068,8 +1070,10 @@ fn should_codegen_locally<'tcx>(tcx: TyCtxt<'tcx>, instance: &Instance<'tcx>) ->\n /// for the pair of `T` (which is a trait) and the concrete type that `T` was\n /// originally coerced from:\n ///\n+/// ```rust,ignore (not real code)\n /// let src: &ComplexStruct<SomeStruct> = ...;\n-/// let target = src as &ComplexStruct<SomeTrait>;\n+/// let target = src as &ComplexStruct<dyn SomeTrait>;\n+/// ```\n ///\n /// Again, we want this `find_vtable_types_for_unsizing()` to provide the pair\n /// `(SomeStruct, SomeTrait)`."}]}