{"sha": "651f46376aa6bb259c58cbb3debad6e0edce31bf", "node_id": "C_kwDOAAsO6NoAKDY1MWY0NjM3NmFhNmJiMjU5YzU4Y2JiM2RlYmFkNmUwZWRjZTMxYmY", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2022-01-20T19:07:54Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2022-03-03T23:58:37Z"}, "message": "Adjusted diagnostic output so that if there is no `use` in a item sequence,\nthen we just suggest the first legal position where you could inject a use.\n\nTo do this, I added `inject_use_span` field to `ModSpans`, and populate it in\nparser (it is the span of the first token found after inner attributes, if any).\nThen I rewrote the use-suggestion code to utilize it, and threw out some stuff\nthat is now unnecessary with this in place. (I think the result is easier to\nunderstand.)\n\nThen I added a test of issue 87613.", "tree": {"sha": "f3039ee6c0dce674c3826486e17faecf391ce931", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3039ee6c0dce674c3826486e17faecf391ce931"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/651f46376aa6bb259c58cbb3debad6e0edce31bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/651f46376aa6bb259c58cbb3debad6e0edce31bf", "html_url": "https://github.com/rust-lang/rust/commit/651f46376aa6bb259c58cbb3debad6e0edce31bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/651f46376aa6bb259c58cbb3debad6e0edce31bf/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74876ef4e9b29184787f6d8f3ba447e78def3a47", "url": "https://api.github.com/repos/rust-lang/rust/commits/74876ef4e9b29184787f6d8f3ba447e78def3a47", "html_url": "https://github.com/rust-lang/rust/commit/74876ef4e9b29184787f6d8f3ba447e78def3a47"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "6983249c15d45404714abe79352ff8e39912f4c0", "filename": "src/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/651f46376aa6bb259c58cbb3debad6e0edce31bf/src%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/651f46376aa6bb259c58cbb3debad6e0edce31bf/src%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparse%2Fparser.rs?ref=651f46376aa6bb259c58cbb3debad6e0edce31bf", "patch": "@@ -113,7 +113,7 @@ impl<'a> Parser<'a> {\n         let result = catch_unwind(AssertUnwindSafe(|| {\n             let mut parser = new_parser_from_file(sess.inner(), path, Some(span));\n             match parser.parse_mod(&TokenKind::Eof) {\n-                Ok((a, i, ast::ModSpans { inner_span })) => Some((a, i, inner_span)),\n+                Ok((a, i, ast::ModSpans { inner_span, inject_use_span: _ })) => Some((a, i, inner_span)),\n                 Err(mut e) => {\n                     e.emit();\n                     if sess.can_reset_errors() {"}, {"sha": "dec977e98caf5580085bc3af7c9a6666dbe933ac", "filename": "src/visitor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/651f46376aa6bb259c58cbb3debad6e0edce31bf/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/651f46376aa6bb259c58cbb3debad6e0edce31bf/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=651f46376aa6bb259c58cbb3debad6e0edce31bf", "patch": "@@ -916,7 +916,7 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n         self.push_str(&ident_str);\n \n         if let ast::ModKind::Loaded(ref items, ast::Inline::Yes, ref spans) = mod_kind {\n-            let ast::ModSpans { inner_span } = *spans;\n+            let ast::ModSpans{ inner_span, inject_use_span: _ } = *spans;\n             match self.config.brace_style() {\n                 BraceStyle::AlwaysNextLine => {\n                     let indent_str = self.block_indent.to_string_with_newline(self.config);"}]}