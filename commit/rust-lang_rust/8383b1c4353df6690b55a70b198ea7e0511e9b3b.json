{"sha": "8383b1c4353df6690b55a70b198ea7e0511e9b3b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzODNiMWM0MzUzZGY2NjkwYjU1YTcwYjE5OGVhN2UwNTExZTliM2I=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-10T01:11:05Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-10T01:11:05Z"}, "message": "Fix token span tracking in lexer.", "tree": {"sha": "040872293afc482851c0d0119a21be809ccf3bf1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/040872293afc482851c0d0119a21be809ccf3bf1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8383b1c4353df6690b55a70b198ea7e0511e9b3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8383b1c4353df6690b55a70b198ea7e0511e9b3b", "html_url": "https://github.com/rust-lang/rust/commit/8383b1c4353df6690b55a70b198ea7e0511e9b3b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8383b1c4353df6690b55a70b198ea7e0511e9b3b/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3fa37eec9db68419c4197ee49ded6ccb4ee9fe35", "url": "https://api.github.com/repos/rust-lang/rust/commits/3fa37eec9db68419c4197ee49ded6ccb4ee9fe35", "html_url": "https://github.com/rust-lang/rust/commit/3fa37eec9db68419c4197ee49ded6ccb4ee9fe35"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "07efe21254d9eb394a77cd83bfd6577ac10578bc", "filename": "src/comp/front/lexer.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8383b1c4353df6690b55a70b198ea7e0511e9b3b/src%2Fcomp%2Ffront%2Flexer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8383b1c4353df6690b55a70b198ea7e0511e9b3b/src%2Fcomp%2Ffront%2Flexer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Flexer.rs?ref=8383b1c4353df6690b55a70b198ea7e0511e9b3b", "patch": "@@ -56,15 +56,18 @@ fn new_reader(stdio_reader rdr, str filename) -> reader\n             }\n \n             impure fn bump() {\n+\n+                let char prev = c;\n+\n                 c = n;\n \n                 if (c == (-1) as char) {\n                     ret;\n                 }\n \n-                if (c == '\\n') {\n+                if (prev == '\\n') {\n                     line += 1u;\n-                    col = 1u;\n+                    col = 0u;\n                 } else {\n                     col += 1u;\n                 }\n@@ -189,7 +192,7 @@ fn new_reader(stdio_reader rdr, str filename) -> reader\n     keywords.insert(\"f64\", token.MACH(common.ty_f64));\n \n     ret reader(rdr, filename, rdr.getc() as char, rdr.getc() as char,\n-               1u, 1u, 1u, 1u, keywords, reserved);\n+               1u, 0u, 1u, 0u, keywords, reserved);\n }\n \n \n@@ -403,6 +406,7 @@ impure fn next_token(reader rdr) -> token.token {\n \n     if (rdr.is_eof()) { ret token.EOF; }\n \n+    rdr.mark();\n     auto c = rdr.curr();\n \n     if (is_alpha(c) || c == '_') {"}]}