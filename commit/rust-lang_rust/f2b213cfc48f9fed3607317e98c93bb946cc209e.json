{"sha": "f2b213cfc48f9fed3607317e98c93bb946cc209e", "node_id": "C_kwDOAAsO6NoAKGYyYjIxM2NmYzQ4ZjlmZWQzNjA3MzE3ZTk4YzkzYmI5NDZjYzIwOWU", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2023-05-18T12:07:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-18T12:07:07Z"}, "message": "Rollup merge of #110986 - cjgillot:delay-feed-bug, r=WaffleLapkin\n\nDelay a bug when overwriting fed value.\n\nFixes https://github.com/rust-lang/rust/issues/110887", "tree": {"sha": "fde439dee1e33d35b9436db7dc3681661bf55559", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fde439dee1e33d35b9436db7dc3681661bf55559"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2b213cfc48f9fed3607317e98c93bb946cc209e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkZhTrCRBK7hj4Ov3rIwAAuIgIAEbNo3a+DhUZTzAgdKUgHLVT\nZak3GhnCquwidvasl9nZI3GMjU+fVSXZ0oFhaggcEk7FcvssSKe72Tr3LeIKdHum\naJ7NAfYDyiB69f7RjuQvAjYLcJ7vkLb6Iy/Q7VGkSI4FU10h9uife+UfdPxtcPDy\nivi/gIceugTcpu0QlOf32Zu9igjV4h8Cyf8tQpUskHVgujleVMjInyEw1Gh2oTZb\ndG9ExSWjBY9lhmMhlnoGd7DIESi5vUKoKpqh/yga8ECSW7fUsk4eK3MVrF6WgvTV\nRch9enw+O1ogiNs9SfQ42ryDBxQUjjEdbRUynXrEdeWOK41Ni7hjEXg2bmk1rqg=\n=LpLM\n-----END PGP SIGNATURE-----\n", "payload": "tree fde439dee1e33d35b9436db7dc3681661bf55559\nparent 9052ca9393d3182b6c029d1d34b30837a3747f34\nparent 3bb5d1dfc1a959d6eecc8c4025ffe96fc355af1b\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1684411627 +0530\ncommitter GitHub <noreply@github.com> 1684411627 +0530\n\nRollup merge of #110986 - cjgillot:delay-feed-bug, r=WaffleLapkin\n\nDelay a bug when overwriting fed value.\n\nFixes https://github.com/rust-lang/rust/issues/110887\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2b213cfc48f9fed3607317e98c93bb946cc209e", "html_url": "https://github.com/rust-lang/rust/commit/f2b213cfc48f9fed3607317e98c93bb946cc209e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2b213cfc48f9fed3607317e98c93bb946cc209e/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9052ca9393d3182b6c029d1d34b30837a3747f34", "url": "https://api.github.com/repos/rust-lang/rust/commits/9052ca9393d3182b6c029d1d34b30837a3747f34", "html_url": "https://github.com/rust-lang/rust/commit/9052ca9393d3182b6c029d1d34b30837a3747f34"}, {"sha": "3bb5d1dfc1a959d6eecc8c4025ffe96fc355af1b", "url": "https://api.github.com/repos/rust-lang/rust/commits/3bb5d1dfc1a959d6eecc8c4025ffe96fc355af1b", "html_url": "https://github.com/rust-lang/rust/commit/3bb5d1dfc1a959d6eecc8c4025ffe96fc355af1b"}], "stats": {"total": 61, "additions": 46, "deletions": 15}, "files": [{"sha": "17984bf7c4c9f1a21aee3e70714bfb0ae3c5885e", "filename": "compiler/rustc_middle/src/query/plumbing.rs", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f2b213cfc48f9fed3607317e98c93bb946cc209e/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2b213cfc48f9fed3607317e98c93bb946cc209e/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fplumbing.rs?ref=f2b213cfc48f9fed3607317e98c93bb946cc209e", "patch": "@@ -533,12 +533,20 @@ macro_rules! define_feedable {\n                             let (value_hash, old_hash): (Fingerprint, Fingerprint) = tcx.with_stable_hashing_context(|mut hcx|\n                                 (hasher(&mut hcx, &value), hasher(&mut hcx, &old))\n                             );\n-                            assert_eq!(\n-                                old_hash, value_hash,\n-                                \"Trying to feed an already recorded value for query {} key={key:?}:\\nold value: {old:?}\\nnew value: {value:?}\",\n-                                stringify!($name),\n-                            )\n+                            if old_hash != value_hash {\n+                                // We have an inconsistency. This can happen if one of the two\n+                                // results is tainted by errors. In this case, delay a bug to\n+                                // ensure compilation is doomed, and keep the `old` value.\n+                                tcx.sess.delay_span_bug(DUMMY_SP, format!(\n+                                    \"Trying to feed an already recorded value for query {} key={key:?}:\\n\\\n+                                    old value: {old:?}\\nnew value: {value:?}\",\n+                                    stringify!($name),\n+                                ));\n+                            }\n                         } else {\n+                            // The query is `no_hash`, so we have no way to perform a sanity check.\n+                            // If feeding the same value multiple times needs to be supported,\n+                            // the query should not be marked `no_hash`.\n                             bug!(\n                                 \"Trying to feed an already recorded value for query {} key={key:?}:\\nold value: {old:?}\\nnew value: {value:?}\",\n                                 stringify!($name),"}, {"sha": "730e4c8d30db35ec1d2d6182fdf27ae067c6c1e6", "filename": "compiler/rustc_query_system/src/query/plumbing.rs", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/f2b213cfc48f9fed3607317e98c93bb946cc209e/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2b213cfc48f9fed3607317e98c93bb946cc209e/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs?ref=f2b213cfc48f9fed3607317e98c93bb946cc209e", "patch": "@@ -433,16 +433,22 @@ where\n                 (hasher(&mut hcx, &cached_result), hasher(&mut hcx, &result))\n             });\n             let formatter = query.format_value();\n-            debug_assert_eq!(\n-                old_hash,\n-                new_hash,\n-                \"Computed query value for {:?}({:?}) is inconsistent with fed value,\\n\\\n-                computed={:#?}\\nfed={:#?}\",\n-                query.dep_kind(),\n-                key,\n-                formatter(&result),\n-                formatter(&cached_result),\n-            );\n+            if old_hash != new_hash {\n+                // We have an inconsistency. This can happen if one of the two\n+                // results is tainted by errors. In this case, delay a bug to\n+                // ensure compilation is doomed.\n+                qcx.dep_context().sess().delay_span_bug(\n+                    DUMMY_SP,\n+                    format!(\n+                        \"Computed query value for {:?}({:?}) is inconsistent with fed value,\\n\\\n+                        computed={:#?}\\nfed={:#?}\",\n+                        query.dep_kind(),\n+                        key,\n+                        formatter(&result),\n+                        formatter(&cached_result),\n+                    ),\n+                );\n+            }\n         }\n     }\n     job_owner.complete(cache, result, dep_node_index);"}, {"sha": "ca7b12e9e627b89b686065098e7cdc7361e81015", "filename": "tests/incremental/const-generic-type-cycle.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f2b213cfc48f9fed3607317e98c93bb946cc209e/tests%2Fincremental%2Fconst-generic-type-cycle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2b213cfc48f9fed3607317e98c93bb946cc209e/tests%2Fincremental%2Fconst-generic-type-cycle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fincremental%2Fconst-generic-type-cycle.rs?ref=f2b213cfc48f9fed3607317e98c93bb946cc209e", "patch": "@@ -0,0 +1,17 @@\n+// Verify that we do not ICE when we try to overwrite an anon-const's type because of a trait\n+// cycle.\n+//\n+// compile-flags: -Zincremental-ignore-spans\n+// revisions: cpass cfail\n+// error-pattern: cycle detected when computing type of `Bar::N`\n+\n+#![feature(trait_alias)]\n+#![crate_type=\"lib\"]\n+\n+#[cfg(cpass)]\n+trait Bar<const N: usize> {}\n+\n+#[cfg(cfail)]\n+trait Bar<const N: dyn BB> {}\n+\n+trait BB = Bar<{ 2 + 1 }>;"}]}