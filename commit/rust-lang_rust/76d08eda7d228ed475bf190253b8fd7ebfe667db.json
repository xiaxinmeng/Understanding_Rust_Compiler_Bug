{"sha": "76d08eda7d228ed475bf190253b8fd7ebfe667db", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2ZDA4ZWRhN2QyMjhlZDQ3NWJmMTkwMjUzYjhmZDdlYmZlNjY3ZGI=", "commit": {"author": {"name": "lukaramu", "email": "lukaramu@gmail.com", "date": "2017-03-26T12:30:03Z"}, "committer": {"name": "lukaramu", "email": "lukaramu@gmail.com", "date": "2017-03-26T12:35:12Z"}, "message": "Update std::net:Incoming's docs to use standard iterator boilerplate\n\nPart of #29363", "tree": {"sha": "2b086bef7e746b39322196ddd21b8d23646832f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b086bef7e746b39322196ddd21b8d23646832f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76d08eda7d228ed475bf190253b8fd7ebfe667db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76d08eda7d228ed475bf190253b8fd7ebfe667db", "html_url": "https://github.com/rust-lang/rust/commit/76d08eda7d228ed475bf190253b8fd7ebfe667db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76d08eda7d228ed475bf190253b8fd7ebfe667db/comments", "author": {"login": "chordowl", "id": 3811822, "node_id": "MDQ6VXNlcjM4MTE4MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/3811822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chordowl", "html_url": "https://github.com/chordowl", "followers_url": "https://api.github.com/users/chordowl/followers", "following_url": "https://api.github.com/users/chordowl/following{/other_user}", "gists_url": "https://api.github.com/users/chordowl/gists{/gist_id}", "starred_url": "https://api.github.com/users/chordowl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chordowl/subscriptions", "organizations_url": "https://api.github.com/users/chordowl/orgs", "repos_url": "https://api.github.com/users/chordowl/repos", "events_url": "https://api.github.com/users/chordowl/events{/privacy}", "received_events_url": "https://api.github.com/users/chordowl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chordowl", "id": 3811822, "node_id": "MDQ6VXNlcjM4MTE4MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/3811822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chordowl", "html_url": "https://github.com/chordowl", "followers_url": "https://api.github.com/users/chordowl/followers", "following_url": "https://api.github.com/users/chordowl/following{/other_user}", "gists_url": "https://api.github.com/users/chordowl/gists{/gist_id}", "starred_url": "https://api.github.com/users/chordowl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chordowl/subscriptions", "organizations_url": "https://api.github.com/users/chordowl/orgs", "repos_url": "https://api.github.com/users/chordowl/repos", "events_url": "https://api.github.com/users/chordowl/events{/privacy}", "received_events_url": "https://api.github.com/users/chordowl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "169facfc288586b7635652abace56d56da2a6f99", "url": "https://api.github.com/repos/rust-lang/rust/commits/169facfc288586b7635652abace56d56da2a6f99", "html_url": "https://github.com/rust-lang/rust/commit/169facfc288586b7635652abace56d56da2a6f99"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "c6cf748d981c7fc0c50bb9f0251ecfa03346eff8", "filename": "src/libstd/net/tcp.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/76d08eda7d228ed475bf190253b8fd7ebfe667db/src%2Flibstd%2Fnet%2Ftcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76d08eda7d228ed475bf190253b8fd7ebfe667db/src%2Flibstd%2Fnet%2Ftcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Ftcp.rs?ref=76d08eda7d228ed475bf190253b8fd7ebfe667db", "patch": "@@ -65,16 +65,14 @@ pub struct TcpStream(net_imp::TcpStream);\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct TcpListener(net_imp::TcpListener);\n \n-/// An infinite iterator over the connections from a `TcpListener`.\n-///\n-/// This iterator will infinitely yield [`Some`] of the accepted connections. It\n-/// is equivalent to calling `accept` in a loop.\n+/// An iterator that infinitely [`accept`]s connections on a [`TcpListener`].\n ///\n /// This `struct` is created by the [`incoming`] method on [`TcpListener`].\n+/// See its documentation for more.\n ///\n-/// [`Some`]: ../../std/option/enum.Option.html#variant.Some\n-/// [`incoming`]: struct.TcpListener.html#method.incoming\n-/// [`TcpListener`]: struct.TcpListener.html\n+/// [`accept`]: ../../std/net/struct.TcpListener.html#method.accept\n+/// [`incoming`]: ../../std/net/struct.TcpListener.html#method.incoming\n+/// [`TcpListener`]: ../../std/net/struct.TcpListener.html\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[derive(Debug)]\n pub struct Incoming<'a> { listener: &'a TcpListener }\n@@ -583,10 +581,12 @@ impl TcpListener {\n     /// listener.\n     ///\n     /// The returned iterator will never return [`None`] and will also not yield\n-    /// the peer's [`SocketAddr`] structure.\n+    /// the peer's [`SocketAddr`] structure. Iterating over it is equivalent to\n+    /// calling [`accept`] in a loop.\n     ///\n     /// [`None`]: ../../std/option/enum.Option.html#variant.None\n     /// [`SocketAddr`]: ../../std/net/enum.SocketAddr.html\n+    /// [`accept`]: #method.accept\n     ///\n     /// # Examples\n     ///"}]}