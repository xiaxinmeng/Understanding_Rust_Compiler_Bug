{"sha": "b615c0c85469c94041a5e68b9d8b68dcf799f9f1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2MTVjMGM4NTQ2OWM5NDA0MWE1ZTY4YjlkOGI2OGRjZjc5OWY5ZjE=", "commit": {"author": {"name": "Jacob Hoffman-Andrews", "email": "github@hoffman-andrews.com", "date": "2021-05-09T19:56:21Z"}, "committer": {"name": "Jacob Hoffman-Andrews", "email": "github@hoffman-andrews.com", "date": "2021-05-13T19:49:14Z"}, "message": "rustdoc: use focus for search navigation\n\nRather than keeping track of highlighted element inside the JS, take\nadvantage of `.focus()` and the :focus CSS pseudo-class.\n\nThis required wrapping each row of results in one big <a> tag (because\nanchors can be focused, but table rows cannot). That in turn required\nmoving from a table layout to a div layout with float.\n\nThis makes it so Ctrl+Enter opens links in new tabs, and using the arrow\nkeys to navigate off the bottom of the page scrolls the rest of the page\ninto view. It also simplifies the keyboard event handling. It eliminates\nthe need for click handlers on the search results, and for tracking\nmouse movements.\n\nThis changes the UI treatment of mouse hovering. A hovered element now\ngets a light grey background, but does not change the focused element.\nIt's possible to have two highlighted search results: one that is\nfocused (via keyboard) and one that is hovered (via mouse). Pressing\nenter will activate the focused link; clicking will activate the hovered\nlink. This matches up with how Firefox and Chrome handle suggestions in\ntheir URL bar, and avoids stray mouse movements changing the focus.\n\nSelecting tabs is now done with left/right arrows while any search\nresult is focused. The visibility of results on each search tab is\ncontrolled with the \"active\" class, rather than by setting display: none\ndirectly. Note that the old code kept track of highlighted search\nelement when tabbing back and forth. The new code doesn't.", "tree": {"sha": "4406ac781e0ba2b7b2fd0d37e06c341f4b2fe4d8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4406ac781e0ba2b7b2fd0d37e06c341f4b2fe4d8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b615c0c85469c94041a5e68b9d8b68dcf799f9f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b615c0c85469c94041a5e68b9d8b68dcf799f9f1", "html_url": "https://github.com/rust-lang/rust/commit/b615c0c85469c94041a5e68b9d8b68dcf799f9f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b615c0c85469c94041a5e68b9d8b68dcf799f9f1/comments", "author": {"login": "jsha", "id": 220205, "node_id": "MDQ6VXNlcjIyMDIwNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/220205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsha", "html_url": "https://github.com/jsha", "followers_url": "https://api.github.com/users/jsha/followers", "following_url": "https://api.github.com/users/jsha/following{/other_user}", "gists_url": "https://api.github.com/users/jsha/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsha/subscriptions", "organizations_url": "https://api.github.com/users/jsha/orgs", "repos_url": "https://api.github.com/users/jsha/repos", "events_url": "https://api.github.com/users/jsha/events{/privacy}", "received_events_url": "https://api.github.com/users/jsha/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsha", "id": 220205, "node_id": "MDQ6VXNlcjIyMDIwNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/220205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsha", "html_url": "https://github.com/jsha", "followers_url": "https://api.github.com/users/jsha/followers", "following_url": "https://api.github.com/users/jsha/following{/other_user}", "gists_url": "https://api.github.com/users/jsha/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsha/subscriptions", "organizations_url": "https://api.github.com/users/jsha/orgs", "repos_url": "https://api.github.com/users/jsha/repos", "events_url": "https://api.github.com/users/jsha/events{/privacy}", "received_events_url": "https://api.github.com/users/jsha/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "952c5732c2d25a875f90e5cd5dd29a1a21c1d4a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/952c5732c2d25a875f90e5cd5dd29a1a21c1d4a2", "html_url": "https://github.com/rust-lang/rust/commit/952c5732c2d25a875f90e5cd5dd29a1a21c1d4a2"}], "stats": {"total": 373, "additions": 178, "deletions": 195}, "files": [{"sha": "fcb06bc796ee0acfcd5846e6f5caab5f2166ed0f", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b615c0c85469c94041a5e68b9d8b68dcf799f9f1/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/b615c0c85469c94041a5e68b9d8b68dcf799f9f1/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=b615c0c85469c94041a5e68b9d8b68dcf799f9f1", "patch": "@@ -170,7 +170,8 @@ function hideThemeButtonState() {\n         // 1 for \"In Parameters\"\n         // 2 for \"In Return Types\"\n         currentTab: 0,\n-        mouseMovedAfterSearch: true,\n+        // tab and back preserves the element that was focused.\n+        focusedByTab: [null, null, null],\n         clearInputTimeout: function() {\n             if (searchState.timeout !== null) {\n                 clearTimeout(searchState.timeout);\n@@ -262,10 +263,6 @@ function hideThemeButtonState() {\n                 search_input.placeholder = searchState.input.origPlaceholder;\n             });\n \n-            document.addEventListener(\"mousemove\", function() {\n-                searchState.mouseMovedAfterSearch = true;\n-            });\n-\n             search_input.removeAttribute('disabled');\n \n             // `crates{version}.js` should always be loaded before this script, so we can use it\n@@ -1070,7 +1067,7 @@ function hideThemeButtonState() {\n             [\"T\", \"Focus the theme picker menu\"],\n             [\"\u2191\", \"Move up in search results\"],\n             [\"\u2193\", \"Move down in search results\"],\n-            [\"ctrl + \u2191 / \u2193\", \"Switch result tab\"],\n+            [\"\u2190 / \u2192\", \"Switch result tab (when results focused)\"],\n             [\"&#9166;\", \"Go to active search result\"],\n             [\"+\", \"Expand all sections\"],\n             [\"-\", \"Collapse all sections\"],"}, {"sha": "b03e657dce0f4b17f7ca8c25183d57d45c3f753e", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 19, "deletions": 13, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/b615c0c85469c94041a5e68b9d8b68dcf799f9f1/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/b615c0c85469c94041a5e68b9d8b68dcf799f9f1/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=b615c0c85469c94041a5e68b9d8b68dcf799f9f1", "patch": "@@ -144,7 +144,7 @@ h4.type.trait-impl, h4.associatedconstant.trait-impl, h4.associatedtype.trait-im\n }\n \n h1, h2, h3, h4,\n-.sidebar, a.source, .search-input, .content table td:first-child > a,\n+.sidebar, a.source, .search-input, .search-results .result-name,\n div.item-list .out-of-band,\n #source-sidebar, #sidebar-toggle,\n details.rustdoc-toggle > summary::before,\n@@ -748,6 +748,15 @@ a {\n \toutline: 0;\n }\n \n+.search-results {\n+\tdisplay: none;\n+\tpadding-bottom: 2em;\n+}\n+\n+.search-results.active {\n+\tdisplay: block;\n+}\n+\n .search-results .desc {\n \twhite-space: nowrap;\n \ttext-overflow: ellipsis;\n@@ -756,22 +765,14 @@ a {\n }\n \n .search-results a {\n+\t/* A little margin ensures the browser's outlining of focused links has room to display. */\n+\tmargin-left: 2px;\n+\tmargin-right: 2px;\n \tdisplay: block;\n }\n \n-.content .search-results td:first-child {\n-\tpadding-right: 0;\n+.result-name {\n \twidth: 50%;\n-}\n-.content .search-results td:first-child a {\n-\tpadding-right: 10px;\n-}\n-.content .search-results td:first-child a:after {\n-\tclear: both;\n-\tcontent: \"\";\n-\tdisplay: block;\n-}\n-.content .search-results td:first-child a span {\n \tfloat: left;\n }\n \n@@ -1134,6 +1135,11 @@ pre.rust {\n .search-failed {\n \ttext-align: center;\n \tmargin-top: 20px;\n+\tdisplay: none;\n+}\n+\n+.search-failed.active {\n+\tdisplay: block;\n }\n \n .search-failed > ul {"}, {"sha": "4de24d7328370ff1980328d058ce82c53374c4b8", "filename": "src/librustdoc/html/static/search.js", "status": "modified", "additions": 72, "deletions": 114, "changes": 186, "blob_url": "https://github.com/rust-lang/rust/blob/b615c0c85469c94041a5e68b9d8b68dcf799f9f1/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsearch.js", "raw_url": "https://github.com/rust-lang/rust/raw/b615c0c85469c94041a5e68b9d8b68dcf799f9f1/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsearch.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsearch.js?ref=b615c0c85469c94041a5e68b9d8b68dcf799f9f1", "patch": "@@ -48,9 +48,9 @@ function printTab(nb) {\n     });\n     onEachLazy(document.getElementById(\"results\").childNodes, function(elem) {\n         if (nb === 0) {\n-            elem.style.display = \"\";\n+            addClass(elem, \"active\");\n         } else {\n-            elem.style.display = \"none\";\n+            removeClass(elem, \"active\");\n         }\n         nb -= 1;\n     });\n@@ -875,106 +875,22 @@ window.initSearch = function(rawSearchIndex) {\n         };\n     }\n \n-    function initSearchNav() {\n-        var hoverTimeout;\n-\n-        var click_func = function(e) {\n-            var el = e.target;\n-            // to retrieve the real \"owner\" of the event.\n-            while (el.tagName !== \"TR\") {\n-                el = el.parentNode;\n-            }\n-            var dst = e.target.getElementsByTagName(\"a\");\n-            if (dst.length < 1) {\n-                return;\n-            }\n-            dst = dst[0];\n-            if (window.location.pathname === dst.pathname) {\n-                searchState.hideResults();\n-                document.location.href = dst.href;\n-            }\n-        };\n-        var mouseover_func = function(e) {\n-            if (searchState.mouseMovedAfterSearch) {\n-                var el = e.target;\n-                // to retrieve the real \"owner\" of the event.\n-                while (el.tagName !== \"TR\") {\n-                    el = el.parentNode;\n-                }\n-                clearTimeout(hoverTimeout);\n-                hoverTimeout = setTimeout(function() {\n-                    onEachLazy(document.getElementsByClassName(\"search-results\"), function(e) {\n-                        onEachLazy(e.getElementsByClassName(\"result\"), function(i_e) {\n-                            removeClass(i_e, \"highlighted\");\n-                        });\n-                    });\n-                    addClass(el, \"highlighted\");\n-                }, 20);\n-            }\n-        };\n-        onEachLazy(document.getElementsByClassName(\"search-results\"), function(e) {\n-            onEachLazy(e.getElementsByClassName(\"result\"), function(i_e) {\n-                i_e.onclick = click_func;\n-                i_e.onmouseover = mouseover_func;\n-            });\n-        });\n-\n-        searchState.input.onkeydown = function(e) {\n-            // \"actives\" references the currently highlighted item in each search tab.\n-            // Each array in \"actives\" represents a tab.\n-            var actives = [[], [], []];\n-            // \"current\" is used to know which tab we're looking into.\n-            var current = 0;\n-            onEachLazy(document.getElementById(\"results\").childNodes, function(e) {\n-                onEachLazy(e.getElementsByClassName(\"highlighted\"), function(h_e) {\n-                    actives[current].push(h_e);\n-                });\n-                current += 1;\n-            });\n-            var SHIFT = 16;\n-            var CTRL = 17;\n-            var ALT = 18;\n+    function nextTab(direction) {\n+        var next = (searchState.currentTab + direction + 3) % searchState.focusedByTab.length;\n+        searchState.focusedByTab[searchState.currentTab] = document.activeElement;\n+        printTab(next);\n+        focusSearchResult();\n+    }\n \n-            var currentTab = searchState.currentTab;\n-            if (e.which === 38) { // up\n-                if (e.ctrlKey) { // Going through result tabs.\n-                    printTab(currentTab > 0 ? currentTab - 1 : 2);\n-                } else {\n-                    if (!actives[currentTab].length ||\n-                        !actives[currentTab][0].previousElementSibling) {\n-                        return;\n-                    }\n-                    addClass(actives[currentTab][0].previousElementSibling, \"highlighted\");\n-                    removeClass(actives[currentTab][0], \"highlighted\");\n-                }\n-                e.preventDefault();\n-            } else if (e.which === 40) { // down\n-                if (e.ctrlKey) { // Going through result tabs.\n-                    printTab(currentTab > 1 ? 0 : currentTab + 1);\n-                } else if (!actives[currentTab].length) {\n-                    var results = document.getElementById(\"results\").childNodes;\n-                    if (results.length > 0) {\n-                        var res = results[currentTab].getElementsByClassName(\"result\");\n-                        if (res.length > 0) {\n-                            addClass(res[0], \"highlighted\");\n-                        }\n-                    }\n-                } else if (actives[currentTab][0].nextElementSibling) {\n-                    addClass(actives[currentTab][0].nextElementSibling, \"highlighted\");\n-                    removeClass(actives[currentTab][0], \"highlighted\");\n-                }\n-                e.preventDefault();\n-            } else if (e.which === 13) { // return\n-                if (actives[currentTab].length) {\n-                    var elem = actives[currentTab][0].getElementsByTagName(\"a\")[0];\n-                    document.location.href = elem.href;\n-                }\n-            } else if ([SHIFT, CTRL, ALT].indexOf(e.which) !== -1) {\n-                // Does nothing, it's just to avoid losing \"focus\" on the highlighted element.\n-            } else if (actives[currentTab].length > 0) {\n-                removeClass(actives[currentTab][0], \"highlighted\");\n-            }\n-        };\n+    // focus the first search result on the active tab, or the result that\n+    // was focused last time this tab was active.\n+    function focusSearchResult() {\n+        var target = searchState.focusedByTab[searchState.currentTab] ||\n+          document.querySelectorAll(\".search-results.active a\").item(0) ||\n+          document.querySelectorAll(\"#titles > button\").item(searchState.currentTab);\n+        if (target) {\n+            target.focus();\n+        }\n     }\n \n     function buildHrefAndPath(item) {\n@@ -1044,16 +960,16 @@ window.initSearch = function(rawSearchIndex) {\n     }\n \n     function addTab(array, query, display) {\n-        var extraStyle = \"\";\n-        if (display === false) {\n-            extraStyle = \" style=\\\"display: none;\\\"\";\n+        var extraClass = \"\";\n+        if (display === true) {\n+            extraClass = \" active\";\n         }\n \n         var output = \"\";\n         var duplicates = {};\n         var length = 0;\n         if (array.length > 0) {\n-            output = \"<table class=\\\"search-results\\\"\" + extraStyle + \">\";\n+            output = \"<div class=\\\"search-results \" + extraClass + \"\\\">\";\n \n             array.forEach(function(item) {\n                 var name, type;\n@@ -1069,20 +985,19 @@ window.initSearch = function(rawSearchIndex) {\n                 }\n                 length += 1;\n \n-                output += \"<tr class=\\\"\" + type + \" result\\\"><td>\" +\n-                          \"<a href=\\\"\" + item.href + \"\\\">\" +\n+                output += \"<a class=\\\"result-\" + type + \"\\\" href=\\\"\" + item.href + \"\\\">\" +\n+                          \"<div><div class=\\\"result-name\\\">\" +\n                           (item.is_alias === true ?\n                            (\"<span class=\\\"alias\\\"><b>\" + item.alias + \" </b></span><span \" +\n                               \"class=\\\"grey\\\"><i>&nbsp;- see&nbsp;</i></span>\") : \"\") +\n                           item.displayPath + \"<span class=\\\"\" + type + \"\\\">\" +\n-                          name + \"</span></a></td><td>\" +\n-                          \"<a href=\\\"\" + item.href + \"\\\">\" +\n+                          name + \"</span></div><div>\" +\n                           \"<span class=\\\"desc\\\">\" + item.desc +\n-                          \"&nbsp;</span></a></td></tr>\";\n+                          \"&nbsp;</span></div></div></a>\";\n             });\n-            output += \"</table>\";\n+            output += \"</div>\";\n         } else {\n-            output = \"<div class=\\\"search-failed\\\"\" + extraStyle + \">No results :(<br/>\" +\n+            output = \"<div class=\\\"search-failed\\\"\" + extraClass + \">No results :(<br/>\" +\n                 \"Try on <a href=\\\"https://duckduckgo.com/?q=\" +\n                 encodeURIComponent(\"rust \" + query.query) +\n                 \"\\\">DuckDuckGo</a>?<br/><br/>\" +\n@@ -1118,7 +1033,7 @@ window.initSearch = function(rawSearchIndex) {\n         {\n             var elem = document.createElement(\"a\");\n             elem.href = results.others[0].href;\n-            elem.style.display = \"none\";\n+            removeClass(elem, \"active\");\n             // For firefox, we need the element to be in the DOM so it can be clicked.\n             document.body.appendChild(elem);\n             elem.click();\n@@ -1159,7 +1074,6 @@ window.initSearch = function(rawSearchIndex) {\n \n         search.innerHTML = output;\n         searchState.showResults(search);\n-        initSearchNav();\n         var elems = document.getElementById(\"titles\").childNodes;\n         elems[0].onclick = function() { printTab(0); };\n         elems[1].onclick = function() { printTab(1); };\n@@ -1437,6 +1351,50 @@ window.initSearch = function(rawSearchIndex) {\n         };\n         searchState.input.onpaste = searchState.input.onchange;\n \n+        searchState.outputElement().addEventListener(\"keydown\", function(e) {\n+            // We only handle unmodified keystrokes here. We don't want to interfere with,\n+            // for instance, alt-left and alt-right for history navigation.\n+            if (e.altKey || e.ctrlKey || e.shiftKey || e.metaKey) {\n+                return;\n+            }\n+            // up and down arrow select next/previous search result, or the\n+            // search box if we're already at the top.\n+            if (e.which === 38) { // up\n+                var previous = document.activeElement.previousElementSibling;\n+                if (previous) {\n+                    console.log(\"previousElementSibling\", previous);\n+                    previous.focus();\n+                } else {\n+                    searchState.focus();\n+                }\n+                e.preventDefault();\n+            } else if (e.which === 40) { // down\n+                var next = document.activeElement.nextElementSibling;\n+                if (next) {\n+                    next.focus();\n+                }\n+                var rect = document.activeElement.getBoundingClientRect();\n+                if (window.innerHeight - rect.bottom < rect.height) {\n+                    window.scrollBy(0, rect.height);\n+                }\n+                e.preventDefault();\n+            } else if (e.which === 37) { // left\n+                nextTab(-1);\n+                e.preventDefault();\n+            } else if (e.which === 39) { // right\n+                nextTab(1);\n+                e.preventDefault();\n+            }\n+        });\n+\n+        searchState.input.addEventListener(\"keydown\", function(e) {\n+            if (e.which === 40) { // down\n+                focusSearchResult();\n+                e.preventDefault();\n+            }\n+        });\n+\n+\n         var selectCrate = document.getElementById(\"crate-search\");\n         if (selectCrate) {\n             selectCrate.onchange = function() {"}, {"sha": "cf3b4b4b9361f5667c400a8eca471364d6b9fe26", "filename": "src/librustdoc/html/static/themes/ayu.css", "status": "modified", "additions": 32, "deletions": 18, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/b615c0c85469c94041a5e68b9d8b68dcf799f9f1/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fayu.css", "raw_url": "https://github.com/rust-lang/rust/raw/b615c0c85469c94041a5e68b9d8b68dcf799f9f1/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fayu.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fayu.css?ref=b615c0c85469c94041a5e68b9d8b68dcf799f9f1", "patch": "@@ -151,13 +151,16 @@ pre, .rustdoc.source .example-wrap {\n \tcolor: #c5c5c5;\n }\n \n-.content .highlighted {\n+.content a:hover {\n+\tbackground-color: #777;\n+}\n+\n+.content a:focus {\n \tcolor: #000 !important;\n \tbackground-color: #c6afb3;\n }\n-.content .highlighted a, .content .highlighted span { color: #000 !important; }\n-.content .highlighted {\n-\tbackground-color: #c6afb3;\n+.content a:focus {\n+\tcolor: #000 !important;\n }\n .search-results a {\n \tcolor: #0096cf;\n@@ -432,31 +435,21 @@ individually rather than as a group) */\n /* FIXME: these rules should be at the bottom of the file but currently must be\n above the `@media (max-width: 700px)` rules due to a bug in the css checker */\n /* see https://github.com/rust-lang/rust/pull/71237#issuecomment-618170143 */\n-.content .highlighted.mod, .content .highlighted.externcrate {}\n .search-input:focus {}\n .content span.attr,.content a.attr,.block a.current.attr,.content span.derive,.content a.derive,\n .block a.current.derive,.content span.macro,.content a.macro,.block a.current.macro {}\n-.content .highlighted.trait {}\n .content span.struct,.content a.struct,.block a.current.struct {}\n #titles>button:hover,#titles>button.selected {}\n-.content .highlighted.traitalias {}\n .content span.type,.content a.type,.block a.current.type {}\n .content span.union,.content a.union,.block a.current.union {}\n-.content .highlighted.foreigntype {}\n pre.rust .lifetime {}\n-.content .highlighted.primitive {}\n-.content .highlighted.constant,.content .highlighted.static {}\n .stab.unstable {}\n-.content .highlighted.fn,.content .highlighted.method,.content .highlighted.tymethod {}\n h2,h3:not(.impl):not(.method):not(.type):not(.tymethod),h4:not(.method):not(.type):not(.tymethod) {}\n .content span.enum,.content a.enum,.block a.current.enum {}\n .content span.constant,.content a.constant,.block a.current.constant,.content span.static,\n-.content a.static,.block a.current.static {}\n+.content a.static, .block a.current.static {}\n .content span.keyword,.content a.keyword,.block a.current.keyword {}\n pre.rust .comment {}\n-.content .highlighted.enum {}\n-.content .highlighted.struct {}\n-.content .highlighted.keyword {}\n .content span.traitalias,.content a.traitalias,.block a.current.traitalias {}\n .content span.fn,.content a.fn,.block a.current.fn,.content span.method,.content a.method,\n .block a.current.method,.content span.tymethod,.content a.tymethod,.block a.current.tymethod,\n@@ -467,15 +460,36 @@ pre.rust .attribute .ident {}\n .content span.foreigntype,.content a.foreigntype,.block a.current.foreigntype {}\n pre.rust .doccomment {}\n .stab.deprecated {}\n-.content .highlighted.attr,.content .highlighted.derive,.content .highlighted.macro {}\n+.content a.attr,.content a.derive,.content a.macro {}\n .stab.portability {}\n-.content .highlighted.union {}\n .content span.primitive,.content a.primitive,.block a.current.primitive {}\n .content span.externcrate,.content span.mod,.content a.mod,.block a.current.mod {}\n-.content .highlighted.type {}\n pre.rust .kw-2,pre.rust .prelude-ty {}\n .content span.trait,.content a.trait,.block a.current.trait {}\n \n+.search-results a:focus span {}\n+a.result-trait:focus {}\n+a.result-traitalias:focus {}\n+a.result-mod:focus,\n+a.result-externcrate:focus {}\n+a.result-mod:focus {}\n+a.result-externcrate:focus {}\n+a.result-enum:focus {}\n+a.result-struct:focus {}\n+a.result-union:focus {}\n+a.result-fn:focus,\n+a.result-method:focus,\n+a.result-tymethod:focus {}\n+a.result-type:focus {}\n+a.result-foreigntype:focus {}\n+a.result-attr:focus,\n+a.result-derive:focus,\n+a.result-macro:focus {}\n+a.result-constant:focus,\n+a.result-static:focus {}\n+a.result-primitive:focus {}\n+a.result-keyword:focus {}\n+\n @media (max-width: 700px) {\n \t.sidebar-menu {\n \t\tbackground-color: #14191f;"}, {"sha": "f66f9bbbc893d70dfe63f082ae056b3b167b7f89", "filename": "src/librustdoc/html/static/themes/dark.css", "status": "modified", "additions": 27, "deletions": 23, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/b615c0c85469c94041a5e68b9d8b68dcf799f9f1/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css", "raw_url": "https://github.com/rust-lang/rust/raw/b615c0c85469c94041a5e68b9d8b68dcf799f9f1/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css?ref=b615c0c85469c94041a5e68b9d8b68dcf799f9f1", "patch": "@@ -109,32 +109,36 @@ pre, .rustdoc.source .example-wrap {\n \tcolor: #ddd;\n }\n \n-.content .highlighted {\n+.content a:hover {\n+\tbackground-color: #777;\n+}\n+\n+.content a:focus {\n \tcolor: #eee !important;\n \tbackground-color: #616161;\n }\n-.content .highlighted a, .content .highlighted span { color: #eee !important; }\n-.content .highlighted.trait { background-color: #013191; }\n-.content .highlighted.traitalias { background-color: #013191; }\n-.content .highlighted.mod,\n-.content .highlighted.externcrate { background-color: #afc6e4; }\n-.content .highlighted.mod { background-color: #803a1b; }\n-.content .highlighted.externcrate { background-color: #396bac; }\n-.content .highlighted.enum { background-color: #5b4e68; }\n-.content .highlighted.struct { background-color: #194e9f; }\n-.content .highlighted.union { background-color: #b7bd49; }\n-.content .highlighted.fn,\n-.content .highlighted.method,\n-.content .highlighted.tymethod { background-color: #4950ed; }\n-.content .highlighted.type { background-color: #38902c; }\n-.content .highlighted.foreigntype { background-color: #b200d6; }\n-.content .highlighted.attr,\n-.content .highlighted.derive,\n-.content .highlighted.macro { background-color: #217d1c; }\n-.content .highlighted.constant,\n-.content .highlighted.static { background-color: #0063cc; }\n-.content .highlighted.primitive { background-color: #00708a; }\n-.content .highlighted.keyword { background-color: #884719; }\n+.search-results a:focus span { color: #eee !important; }\n+a.result-trait:focus { background-color: #013191; }\n+a.result-traitalias:focus { background-color: #013191; }\n+a.result-mod:focus,\n+a.result-externcrate:focus { background-color: #afc6e4; }\n+a.result-mod:focus { background-color: #803a1b; }\n+a.result-externcrate:focus { background-color: #396bac; }\n+a.result-enum:focus { background-color: #5b4e68; }\n+a.result-struct:focus { background-color: #194e9f; }\n+a.result-union:focus { background-color: #b7bd49; }\n+a.result-fn:focus,\n+a.result-method:focus,\n+a.result-tymethod:focus { background-color: #4950ed; }\n+a.result-type:focus { background-color: #38902c; }\n+a.result-foreigntype:focus { background-color: #b200d6; }\n+a.result-attr:focus,\n+a.result-derive:focus,\n+a.result-macro:focus { background-color: #217d1c; }\n+a.result-constant:focus,\n+a.result-static:focus { background-color: #0063cc; }\n+a.result-primitive:focus { background-color: #00708a; }\n+a.result-keyword:focus { background-color: #884719; }\n \n .content .item-info::before { color: #ccc; }\n "}, {"sha": "872160863b2907e66459331fd680e271e304f341", "filename": "src/librustdoc/html/static/themes/light.css", "status": "modified", "additions": 25, "deletions": 21, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/b615c0c85469c94041a5e68b9d8b68dcf799f9f1/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css", "raw_url": "https://github.com/rust-lang/rust/raw/b615c0c85469c94041a5e68b9d8b68dcf799f9f1/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css?ref=b615c0c85469c94041a5e68b9d8b68dcf799f9f1", "patch": "@@ -109,30 +109,34 @@ pre, .rustdoc.source .example-wrap {\n \tcolor: #4E4C4C;\n }\n \n-.content .highlighted {\n+.content a:hover {\n+\tbackground-color: #ddd;\n+}\n+\n+.content a:focus {\n \tcolor: #000 !important;\n \tbackground-color: #ccc;\n }\n-.content .highlighted a, .content .highlighted span { color: #000 !important; }\n-.content .highlighted.trait { background-color: #c7b6ff; }\n-.content .highlighted.traitalias { background-color: #c7b6ff; }\n-.content .highlighted.mod,\n-.content .highlighted.externcrate { background-color: #afc6e4; }\n-.content .highlighted.enum { background-color: #b4d1b9; }\n-.content .highlighted.struct { background-color: #e7b1a0; }\n-.content .highlighted.union { background-color: #b7bd49; }\n-.content .highlighted.fn,\n-.content .highlighted.method,\n-.content .highlighted.tymethod { background-color: #c6afb3; }\n-.content .highlighted.type { background-color: #ffc891; }\n-.content .highlighted.foreigntype { background-color: #f5c4ff; }\n-.content .highlighted.attr,\n-.content .highlighted.derive,\n-.content .highlighted.macro { background-color: #8ce488; }\n-.content .highlighted.constant,\n-.content .highlighted.static { background-color: #c3e0ff; }\n-.content .highlighted.primitive { background-color: #9aecff; }\n-.content .highlighted.keyword { background-color: #f99650; }\n+.search-results a:focus span { color: #000 !important; }\n+a.result-trait:focus { background-color: #c7b6ff; }\n+a.result-traitalias:focus { background-color: #c7b6ff; }\n+a.result-mod:focus,\n+a.result-externcrate:focus { background-color: #afc6e4; }\n+a.result-enum:focus { background-color: #b4d1b9; }\n+a.result-struct:focus { background-color: #e7b1a0; }\n+a.result-union:focus { background-color: #b7bd49; }\n+a.result-fn:focus,\n+a.result-method:focus,\n+a.result-tymethod:focus { background-color: #c6afb3; }\n+a.result-type:focus { background-color: #ffc891; }\n+a.result-foreigntype:focus { background-color: #f5c4ff; }\n+a.result-attr:focus,\n+a.result-derive:focus,\n+a.result-macro:focus { background-color: #8ce488; }\n+a.result-constant:focus,\n+a.result-static:focus { background-color: #c3e0ff; }\n+a.result-primitive:focus { background-color: #9aecff; }\n+a.result-keyword:focus { background-color: #f99650; }\n \n .content .item-info::before { color: #ccc; }\n "}]}