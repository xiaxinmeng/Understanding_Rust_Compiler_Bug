{"sha": "af28dec7d151de3e0e00928ce66d51d8aaa3fbdb", "node_id": "C_kwDOAAsO6NoAKGFmMjhkZWM3ZDE1MWRlM2UwZTAwOTI4Y2U2NmQ1MWQ4YWFhM2ZiZGI", "commit": {"author": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2022-09-30T21:53:06Z"}, "committer": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2022-09-30T21:53:06Z"}, "message": "Add CI tests with a sysroot compiled in release mode", "tree": {"sha": "f1f34b52eef897dfabdc18f3603300f45e6e31af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1f34b52eef897dfabdc18f3603300f45e6e31af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af28dec7d151de3e0e00928ce66d51d8aaa3fbdb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af28dec7d151de3e0e00928ce66d51d8aaa3fbdb", "html_url": "https://github.com/rust-lang/rust/commit/af28dec7d151de3e0e00928ce66d51d8aaa3fbdb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af28dec7d151de3e0e00928ce66d51d8aaa3fbdb/comments", "author": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ead881fbf7355fa45f0cecf72e6913fc7027619", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ead881fbf7355fa45f0cecf72e6913fc7027619", "html_url": "https://github.com/rust-lang/rust/commit/8ead881fbf7355fa45f0cecf72e6913fc7027619"}], "stats": {"total": 114, "additions": 113, "deletions": 1}, "files": [{"sha": "25db3779a9cbbfcc0c05209abc2e620b19c1a457", "filename": ".github/workflows/release.yml", "status": "added", "additions": 112, "deletions": 0, "changes": 112, "blob_url": "https://github.com/rust-lang/rust/blob/af28dec7d151de3e0e00928ce66d51d8aaa3fbdb/.github%2Fworkflows%2Frelease.yml", "raw_url": "https://github.com/rust-lang/rust/raw/af28dec7d151de3e0e00928ce66d51d8aaa3fbdb/.github%2Fworkflows%2Frelease.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Frelease.yml?ref=af28dec7d151de3e0e00928ce66d51d8aaa3fbdb", "patch": "@@ -0,0 +1,112 @@\n+name: CI with sysroot compiled in release mode\n+\n+on:\n+  - push\n+  - pull_request\n+\n+permissions:\n+  contents: read\n+\n+env:\n+  # Enable backtraces for easier debugging\n+  RUST_BACKTRACE: 1\n+\n+jobs:\n+  build:\n+    runs-on: ubuntu-latest\n+\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        libgccjit_version:\n+          - { gcc: \"libgccjit.so\", artifacts_branch: \"master\" }\n+\n+    steps:\n+    - uses: actions/checkout@v2\n+\n+    - uses: actions/checkout@v2\n+      with:\n+        repository: llvm/llvm-project\n+        path: llvm\n+\n+    - name: Install packages\n+      run: sudo apt-get install ninja-build ripgrep\n+\n+    - name: Download artifact\n+      uses: dawidd6/action-download-artifact@v2\n+      with:\n+          workflow: main.yml\n+          name: ${{ matrix.libgccjit_version.gcc }}\n+          path: gcc-build\n+          repo: antoyo/gcc\n+          branch: ${{ matrix.libgccjit_version.artifacts_branch }}\n+          event: push\n+          search_artifacts: true # Because, instead, the action only check the last job ran and that won't work since we want multiple artifacts.\n+\n+    - name: Setup path to libgccjit\n+      run: |\n+          echo $(readlink -f gcc-build) > gcc_path\n+          # NOTE: the filename is still libgccjit.so even when the artifact name is different.\n+          ln gcc-build/libgccjit.so gcc-build/libgccjit.so.0\n+\n+    - name: Set env\n+      run: |\n+        echo \"LIBRARY_PATH=$(cat gcc_path)\" >> $GITHUB_ENV\n+        echo \"LD_LIBRARY_PATH=$(cat gcc_path)\" >> $GITHUB_ENV\n+        echo \"workspace=\"$GITHUB_WORKSPACE >> $GITHUB_ENV\n+\n+    - name: Set RUST_COMPILER_RT_ROOT\n+      run: echo \"RUST_COMPILER_RT_ROOT=\"${{ env.workspace }}/llvm/compiler-rt >> $GITHUB_ENV\n+\n+    # https://github.com/actions/cache/issues/133\n+    - name: Fixup owner of ~/.cargo/\n+      # Don't remove the trailing /. It is necessary to follow the symlink.\n+      run: sudo chown -R $(whoami):$(id -ng) ~/.cargo/\n+\n+    - name: Cache cargo installed crates\n+      uses: actions/cache@v1.1.2\n+      with:\n+        path: ~/.cargo/bin\n+        key: cargo-installed-crates2-ubuntu-latest\n+\n+    - name: Cache cargo registry\n+      uses: actions/cache@v1\n+      with:\n+        path: ~/.cargo/registry\n+        key: ${{ runner.os }}-cargo-registry2-${{ hashFiles('**/Cargo.lock') }}\n+\n+    - name: Cache cargo index\n+      uses: actions/cache@v1\n+      with:\n+        path: ~/.cargo/git\n+        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}\n+\n+    - name: Cache cargo target dir\n+      uses: actions/cache@v1.1.2\n+      with:\n+        path: target\n+        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('rust-toolchain') }}\n+\n+    - name: Build\n+      run: |\n+        ./prepare_build.sh\n+        ./build.sh --release --release-sysroot\n+        cargo test\n+        ./clean_all.sh\n+\n+    - name: Prepare dependencies\n+      run: |\n+        git config --global user.email \"user@example.com\"\n+        git config --global user.name \"User\"\n+        ./prepare.sh\n+\n+    # Compile is a separate step, as the actions-rs/cargo action supports error annotations\n+    - name: Compile\n+      uses: actions-rs/cargo@v1.0.3\n+      with:\n+        command: build\n+        args: --release\n+\n+    - name: Run tests\n+      run: |\n+        ./test.sh --release --clean --release-sysroot --build-sysroot --mini-tests --std-tests --test-libcore"}, {"sha": "4841922416c78f61a59cabe252392eca088016a4", "filename": "test.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af28dec7d151de3e0e00928ce66d51d8aaa3fbdb/test.sh", "raw_url": "https://github.com/rust-lang/rust/raw/af28dec7d151de3e0e00928ce66d51d8aaa3fbdb/test.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test.sh?ref=af28dec7d151de3e0e00928ce66d51d8aaa3fbdb", "patch": "@@ -44,7 +44,7 @@ while [[ $# -gt 0 ]]; do\n             shift\n             ;;\n         \"--test-rustc\")\n-            funcs=(test_rustc)\n+            funcs+=(test_rustc)\n             shift\n             ;;\n         \"--test-successful-rustc\")"}]}