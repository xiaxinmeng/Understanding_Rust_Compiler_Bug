{"sha": "5a42e6bff541d42d6366a93b619b20732bb48dcf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhNDJlNmJmZjU0MWQ0MmQ2MzY2YTkzYjYxOWIyMDczMmJiNDhkY2Y=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-11-28T15:14:08Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-11-28T15:14:08Z"}, "message": "Explain how we get precise spans for diagnostics.", "tree": {"sha": "1e0f7c141acdf5a330eac5e8db361fd3a3996eca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e0f7c141acdf5a330eac5e8db361fd3a3996eca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a42e6bff541d42d6366a93b619b20732bb48dcf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a42e6bff541d42d6366a93b619b20732bb48dcf", "html_url": "https://github.com/rust-lang/rust/commit/5a42e6bff541d42d6366a93b619b20732bb48dcf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a42e6bff541d42d6366a93b619b20732bb48dcf/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7ece77af49ce59762fc3246a4c721411efe637e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7ece77af49ce59762fc3246a4c721411efe637e", "html_url": "https://github.com/rust-lang/rust/commit/b7ece77af49ce59762fc3246a4c721411efe637e"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "bf0b85ce9d2390773271895b1edfa983ea713925", "filename": "crates/hir_expand/src/diagnostics.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5a42e6bff541d42d6366a93b619b20732bb48dcf/crates%2Fhir_expand%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a42e6bff541d42d6366a93b619b20732bb48dcf/crates%2Fhir_expand%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fdiagnostics.rs?ref=5a42e6bff541d42d6366a93b619b20732bb48dcf", "patch": "@@ -5,7 +5,7 @@\n //!\n //! `DiagnosticSink` struct is used as an emitter for diagnostic. When creating\n //! a `DiagnosticSink`, you supply a callback which can react to a `dyn\n-//! Diagnostic` or to any concrete diagnostic (downcasting is sued internally).\n+//! Diagnostic` or to any concrete diagnostic (downcasting is used internally).\n //!\n //! Because diagnostics store file offsets, it's a bad idea to store them\n //! directly in salsa. For this reason, every hir subsytem defines it's own\n@@ -32,7 +32,12 @@ impl DiagnosticCode {\n pub trait Diagnostic: Any + Send + Sync + fmt::Debug + 'static {\n     fn code(&self) -> DiagnosticCode;\n     fn message(&self) -> String;\n-    /// Used in highlighting and related purposes\n+    /// Source element that triggered the diagnostics.\n+    ///\n+    /// Note that this should reflect \"semantics\", rather than specific span we\n+    /// want to highlight. When rendering the diagnostics into an error message,\n+    /// the IDE will fetch the `SyntaxNode` and will narrow the span\n+    /// appropriately.\n     fn display_source(&self) -> InFile<SyntaxNodePtr>;\n     fn as_any(&self) -> &(dyn Any + Send + 'static);\n     fn is_experimental(&self) -> bool {"}]}