{"sha": "67c0bff934b0a45fb1344c4a6a27e63db291eb12", "node_id": "C_kwDOAAsO6NoAKDY3YzBiZmY5MzRiMGE0NWZiMTM0NGM0YTZhMjdlNjNkYjI5MWViMTI", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2022-11-09T20:39:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-09T20:39:05Z"}, "message": "Rollup merge of #104015 - alex:remove-kernel, r=oli-obk\n\nRemove linuxkernel targets\n\nThese are not used by the actual Rust-for-Linux project, so they're mostly just confusing.", "tree": {"sha": "9b2a802b2125dcec2d606f8aa043aabf71ceec17", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b2a802b2125dcec2d606f8aa043aabf71ceec17"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67c0bff934b0a45fb1344c4a6a27e63db291eb12", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjbA/pCRBK7hj4Ov3rIwAAw+cIACcWAx8PpCx6QgILy2ajqQ82\nfL5kaSzjHFH8ZDE8lllqgBWAISG2KHuv+pUn3PmAk7QSYJ8/sLSi4B3VF7PKGfkP\ns9GjPQBfEkY1J2UJSdh3qNBsGvXT3GaCPVKimfcGwalxpXLHKjL49WFb/M8Txzbq\nnaFZFreJAigdfDvWSBDWaCw8JaFUa0hoYTUbma66vF2YX4E+e1+nhaY6pGhRF91j\nTie+Uv132JKwABQv+GlRifW64MAUUvI3kNgJlR7+d1Ce1D6r6cUI0z9LbSt3Q02s\naZwNTg43u7nIK0IrzOcbmIds8VvccVSYGBi+0XS39fg07ogp5u4zcqf+hmuYQmY=\n=+M9L\n-----END PGP SIGNATURE-----\n", "payload": "tree 9b2a802b2125dcec2d606f8aa043aabf71ceec17\nparent 017c9aa4a008165f3d0a91f161d516c3a55caf7a\nparent c33ee13391e71d037499f584520aba58289d5791\nauthor Manish Goregaokar <manishsmail@gmail.com> 1668026345 -0500\ncommitter GitHub <noreply@github.com> 1668026345 -0500\n\nRollup merge of #104015 - alex:remove-kernel, r=oli-obk\n\nRemove linuxkernel targets\n\nThese are not used by the actual Rust-for-Linux project, so they're mostly just confusing.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67c0bff934b0a45fb1344c4a6a27e63db291eb12", "html_url": "https://github.com/rust-lang/rust/commit/67c0bff934b0a45fb1344c4a6a27e63db291eb12", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67c0bff934b0a45fb1344c4a6a27e63db291eb12/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "017c9aa4a008165f3d0a91f161d516c3a55caf7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/017c9aa4a008165f3d0a91f161d516c3a55caf7a", "html_url": "https://github.com/rust-lang/rust/commit/017c9aa4a008165f3d0a91f161d516c3a55caf7a"}, {"sha": "c33ee13391e71d037499f584520aba58289d5791", "url": "https://api.github.com/repos/rust-lang/rust/commits/c33ee13391e71d037499f584520aba58289d5791", "html_url": "https://github.com/rust-lang/rust/commit/c33ee13391e71d037499f584520aba58289d5791"}], "stats": {"total": 62, "additions": 5, "deletions": 57}, "files": [{"sha": "f41533a9548fe459aa0431e94a78ca210541d4af", "filename": "compiler/rustc_target/src/spec/linux_kernel_base.rs", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/017c9aa4a008165f3d0a91f161d516c3a55caf7a/compiler%2Frustc_target%2Fsrc%2Fspec%2Flinux_kernel_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/017c9aa4a008165f3d0a91f161d516c3a55caf7a/compiler%2Frustc_target%2Fsrc%2Fspec%2Flinux_kernel_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Flinux_kernel_base.rs?ref=017c9aa4a008165f3d0a91f161d516c3a55caf7a", "patch": "@@ -1,18 +0,0 @@\n-use crate::spec::TargetOptions;\n-use crate::spec::{FramePointer, PanicStrategy, RelocModel, RelroLevel, StackProbeType};\n-\n-pub fn opts() -> TargetOptions {\n-    TargetOptions {\n-        env: \"gnu\".into(),\n-        disable_redzone: true,\n-        panic_strategy: PanicStrategy::Abort,\n-        stack_probes: StackProbeType::X86,\n-        frame_pointer: FramePointer::Always,\n-        position_independent_executables: true,\n-        needs_plt: true,\n-        relro_level: RelroLevel::Full,\n-        relocation_model: RelocModel::Static,\n-\n-        ..Default::default()\n-    }\n-}"}, {"sha": "25f17fa077370d5c2aab9ad49a81c2dc7fc6b0c5", "filename": "compiler/rustc_target/src/spec/mod.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/67c0bff934b0a45fb1344c4a6a27e63db291eb12/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67c0bff934b0a45fb1344c4a6a27e63db291eb12/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs?ref=67c0bff934b0a45fb1344c4a6a27e63db291eb12", "patch": "@@ -70,7 +70,6 @@ mod illumos_base;\n mod l4re_base;\n mod linux_base;\n mod linux_gnu_base;\n-mod linux_kernel_base;\n mod linux_musl_base;\n mod linux_uclibc_base;\n mod msvc_base;\n@@ -1002,7 +1001,7 @@ macro_rules! supported_targets {\n             $(\n                 #[test] // `#[test]`\n                 fn $module() {\n-                    tests_impl::test_target(super::$module::target(), $triple);\n+                    tests_impl::test_target(super::$module::target());\n                 }\n             )+\n         }\n@@ -1070,8 +1069,6 @@ supported_targets! {\n     (\"thumbv7neon-linux-androideabi\", thumbv7neon_linux_androideabi),\n     (\"aarch64-linux-android\", aarch64_linux_android),\n \n-    (\"x86_64-unknown-none-linuxkernel\", x86_64_unknown_none_linuxkernel),\n-\n     (\"aarch64-unknown-freebsd\", aarch64_unknown_freebsd),\n     (\"armv6-unknown-freebsd\", armv6_unknown_freebsd),\n     (\"armv7-unknown-freebsd\", armv7_unknown_freebsd),"}, {"sha": "e0ecf8037c3e59a4086582342b9a18342ae6a67c", "filename": "compiler/rustc_target/src/spec/tests/tests_impl.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/67c0bff934b0a45fb1344c4a6a27e63db291eb12/compiler%2Frustc_target%2Fsrc%2Fspec%2Ftests%2Ftests_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67c0bff934b0a45fb1344c4a6a27e63db291eb12/compiler%2Frustc_target%2Fsrc%2Fspec%2Ftests%2Ftests_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Ftests%2Ftests_impl.rs?ref=67c0bff934b0a45fb1344c4a6a27e63db291eb12", "patch": "@@ -2,15 +2,15 @@ use super::super::*;\n use std::assert_matches::assert_matches;\n \n // Test target self-consistency and JSON encoding/decoding roundtrip.\n-pub(super) fn test_target(mut target: Target, triple: &str) {\n+pub(super) fn test_target(mut target: Target) {\n     let recycled_target = Target::from_json(target.to_json()).map(|(j, _)| j);\n     target.update_to_cli();\n-    target.check_consistency(triple);\n+    target.check_consistency();\n     assert_eq!(recycled_target, Ok(target));\n }\n \n impl Target {\n-    fn check_consistency(&self, triple: &str) {\n+    fn check_consistency(&self) {\n         assert_eq!(self.is_like_osx, self.vendor == \"apple\");\n         assert_eq!(self.is_like_solaris, self.os == \"solaris\" || self.os == \"illumos\");\n         assert_eq!(self.is_like_windows, self.os == \"windows\" || self.os == \"uefi\");\n@@ -129,8 +129,7 @@ impl Target {\n         if self.dynamic_linking && !(self.is_like_wasm && self.os != \"emscripten\") {\n             assert_eq!(self.relocation_model, RelocModel::Pic);\n         }\n-        // PIEs are supported but not enabled by default with linuxkernel target.\n-        if self.position_independent_executables && !triple.ends_with(\"-linuxkernel\") {\n+        if self.position_independent_executables {\n             assert_eq!(self.relocation_model, RelocModel::Pic);\n         }\n         // The UEFI targets do not support dynamic linking but still require PIC (#101377)."}, {"sha": "ebd9636ff5102094a7df96f5f1327d842f28e64e", "filename": "compiler/rustc_target/src/spec/x86_64_unknown_none_linuxkernel.rs", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/017c9aa4a008165f3d0a91f161d516c3a55caf7a/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_unknown_none_linuxkernel.rs", "raw_url": "https://github.com/rust-lang/rust/raw/017c9aa4a008165f3d0a91f161d516c3a55caf7a/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_unknown_none_linuxkernel.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_unknown_none_linuxkernel.rs?ref=017c9aa4a008165f3d0a91f161d516c3a55caf7a", "patch": "@@ -1,28 +0,0 @@\n-// This defines the amd64 target for the Linux Kernel. See the linux-kernel-base module for\n-// generic Linux kernel options.\n-\n-use crate::spec::{Cc, CodeModel, LinkerFlavor, Lld, Target};\n-\n-pub fn target() -> Target {\n-    let mut base = super::linux_kernel_base::opts();\n-    base.cpu = \"x86-64\".into();\n-    base.max_atomic_width = Some(64);\n-    base.features =\n-        \"-mmx,-sse,-sse2,-sse3,-ssse3,-sse4.1,-sse4.2,-3dnow,-3dnowa,-avx,-avx2,+soft-float\".into();\n-    base.code_model = Some(CodeModel::Kernel);\n-    base.add_pre_link_args(LinkerFlavor::Gnu(Cc::Yes, Lld::No), &[\"-m64\"]);\n-\n-    Target {\n-        // FIXME: Some dispute, the linux-on-clang folks think this should use\n-        // \"Linux\". We disagree because running *on* Linux is nothing like\n-        // running *as\" linux, and historically the \"os\" component as has always\n-        // been used to mean the \"on\" part.\n-        llvm_target: \"x86_64-unknown-none-elf\".into(),\n-        pointer_width: 64,\n-        data_layout: \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\n-            .into(),\n-        arch: \"x86_64\".into(),\n-\n-        options: base,\n-    }\n-}"}, {"sha": "32c0ef3e11688ebff944201ee8891608eaf91939", "filename": "library/unwind/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/67c0bff934b0a45fb1344c4a6a27e63db291eb12/library%2Funwind%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67c0bff934b0a45fb1344c4a6a27e63db291eb12/library%2Funwind%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Funwind%2Fsrc%2Flib.rs?ref=67c0bff934b0a45fb1344c4a6a27e63db291eb12", "patch": "@@ -15,7 +15,6 @@ cfg_if::cfg_if! {\n         target_os = \"espidf\",\n     ))] {\n         // These \"unix\" family members do not have unwinder.\n-        // Note this also matches x86_64-unknown-none-linuxkernel.\n     } else if #[cfg(any(\n         unix,\n         windows,"}, {"sha": "0315f1e3725ffe91970a3a10735202ef862549ec", "filename": "src/doc/rustc/src/platform-support.md", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/67c0bff934b0a45fb1344c4a6a27e63db291eb12/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md", "raw_url": "https://github.com/rust-lang/rust/raw/67c0bff934b0a45fb1344c4a6a27e63db291eb12/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md?ref=67c0bff934b0a45fb1344c4a6a27e63db291eb12", "patch": "@@ -310,7 +310,6 @@ target | std | host | notes\n `x86_64-unknown-haiku` | \u2713 | \u2713 | 64-bit Haiku\n `x86_64-unknown-hermit` | \u2713 |  | HermitCore\n `x86_64-unknown-l4re-uclibc` | ? |  |\n-`x86_64-unknown-none-linuxkernel` | * |  | Linux kernel modules\n [`x86_64-unknown-openbsd`](platform-support/openbsd.md) | \u2713 | \u2713 | 64-bit OpenBSD\n `x86_64-uwp-windows-gnu` | \u2713 |  |\n `x86_64-uwp-windows-msvc` | \u2713 |  |"}]}