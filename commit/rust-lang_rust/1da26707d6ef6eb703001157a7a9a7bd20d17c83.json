{"sha": "1da26707d6ef6eb703001157a7a9a7bd20d17c83", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkYTI2NzA3ZDZlZjZlYjcwMzAwMTE1N2E3YTlhN2JkMjBkMTdjODM=", "commit": {"author": {"name": "Irina Popa", "email": "irinagpopa@gmail.com", "date": "2018-07-04T16:16:13Z"}, "committer": {"name": "Irina Popa", "email": "irinagpopa@gmail.com", "date": "2018-07-30T16:32:20Z"}, "message": "rustc_codegen_llvm: remove #![allow(dead_code)] from llvm.", "tree": {"sha": "6df2cd73b71fc6cf7073145293a426763f9dd7aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6df2cd73b71fc6cf7073145293a426763f9dd7aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1da26707d6ef6eb703001157a7a9a7bd20d17c83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1da26707d6ef6eb703001157a7a9a7bd20d17c83", "html_url": "https://github.com/rust-lang/rust/commit/1da26707d6ef6eb703001157a7a9a7bd20d17c83", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1da26707d6ef6eb703001157a7a9a7bd20d17c83/comments", "author": {"login": "irinagpopa", "id": 32459019, "node_id": "MDQ6VXNlcjMyNDU5MDE5", "avatar_url": "https://avatars.githubusercontent.com/u/32459019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irinagpopa", "html_url": "https://github.com/irinagpopa", "followers_url": "https://api.github.com/users/irinagpopa/followers", "following_url": "https://api.github.com/users/irinagpopa/following{/other_user}", "gists_url": "https://api.github.com/users/irinagpopa/gists{/gist_id}", "starred_url": "https://api.github.com/users/irinagpopa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irinagpopa/subscriptions", "organizations_url": "https://api.github.com/users/irinagpopa/orgs", "repos_url": "https://api.github.com/users/irinagpopa/repos", "events_url": "https://api.github.com/users/irinagpopa/events{/privacy}", "received_events_url": "https://api.github.com/users/irinagpopa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "irinagpopa", "id": 32459019, "node_id": "MDQ6VXNlcjMyNDU5MDE5", "avatar_url": "https://avatars.githubusercontent.com/u/32459019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irinagpopa", "html_url": "https://github.com/irinagpopa", "followers_url": "https://api.github.com/users/irinagpopa/followers", "following_url": "https://api.github.com/users/irinagpopa/following{/other_user}", "gists_url": "https://api.github.com/users/irinagpopa/gists{/gist_id}", "starred_url": "https://api.github.com/users/irinagpopa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irinagpopa/subscriptions", "organizations_url": "https://api.github.com/users/irinagpopa/orgs", "repos_url": "https://api.github.com/users/irinagpopa/repos", "events_url": "https://api.github.com/users/irinagpopa/events{/privacy}", "received_events_url": "https://api.github.com/users/irinagpopa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50d764298e1b7fdc193f0f66c1a692015c852227", "url": "https://api.github.com/repos/rust-lang/rust/commits/50d764298e1b7fdc193f0f66c1a692015c852227", "html_url": "https://github.com/rust-lang/rust/commit/50d764298e1b7fdc193f0f66c1a692015c852227"}], "stats": {"total": 39, "additions": 2, "deletions": 37}, "files": [{"sha": "e25f66919614cd771d429ad9bf23a2b4cf397aba", "filename": "src/librustc_codegen_llvm/llvm/archive_ro.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1da26707d6ef6eb703001157a7a9a7bd20d17c83/src%2Flibrustc_codegen_llvm%2Fllvm%2Farchive_ro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1da26707d6ef6eb703001157a7a9a7bd20d17c83/src%2Flibrustc_codegen_llvm%2Fllvm%2Farchive_ro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm%2Farchive_ro.rs?ref=1da26707d6ef6eb703001157a7a9a7bd20d17c83", "patch": "@@ -25,8 +25,8 @@ pub struct ArchiveRO {\n unsafe impl Send for ArchiveRO {}\n \n pub struct Iter<'a> {\n-    archive: &'a ArchiveRO,\n     ptr: super::ArchiveIteratorRef,\n+    _data: marker::PhantomData<&'a ArchiveRO>,\n }\n \n pub struct Child<'a> {\n@@ -73,7 +73,7 @@ impl ArchiveRO {\n         unsafe {\n             Iter {\n                 ptr: super::LLVMRustArchiveIteratorNew(self.ptr),\n-                archive: self,\n+                _data: marker::PhantomData,\n             }\n         }\n     }"}, {"sha": "fcecb5c88c5f5d18c52e5e50291ba8fa6b353e79", "filename": "src/librustc_codegen_llvm/llvm/ffi.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1da26707d6ef6eb703001157a7a9a7bd20d17c83/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1da26707d6ef6eb703001157a7a9a7bd20d17c83/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs?ref=1da26707d6ef6eb703001157a7a9a7bd20d17c83", "patch": "@@ -392,8 +392,6 @@ extern { pub type PassManagerBuilder_opaque; }\n pub type PassManagerBuilderRef = *mut PassManagerBuilder_opaque;\n extern { pub type Use_opaque; }\n pub type UseRef = *mut Use_opaque;\n-extern { pub type TargetData_opaque; }\n-pub type TargetDataRef = *mut TargetData_opaque;\n extern { pub type ObjectFile_opaque; }\n pub type ObjectFileRef = *mut ObjectFile_opaque;\n extern { pub type SectionIterator_opaque; }\n@@ -1264,12 +1262,6 @@ extern \"C\" {\n     /// Writes a module to the specified path. Returns 0 on success.\n     pub fn LLVMWriteBitcodeToFile(M: &Module, Path: *const c_char) -> c_int;\n \n-    /// Creates target data from a target layout string.\n-    pub fn LLVMCreateTargetData(StringRep: *const c_char) -> TargetDataRef;\n-\n-    /// Disposes target data.\n-    pub fn LLVMDisposeTargetData(TD: TargetDataRef);\n-\n     /// Creates a pass manager.\n     pub fn LLVMCreatePassManager() -> PassManagerRef;\n "}, {"sha": "98d8932e612c3248afa5773954f81b7c4754b676", "filename": "src/librustc_codegen_llvm/llvm/mod.rs", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/1da26707d6ef6eb703001157a7a9a7bd20d17c83/src%2Flibrustc_codegen_llvm%2Fllvm%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1da26707d6ef6eb703001157a7a9a7bd20d17c83/src%2Flibrustc_codegen_llvm%2Fllvm%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm%2Fmod.rs?ref=1da26707d6ef6eb703001157a7a9a7bd20d17c83", "patch": "@@ -11,7 +11,6 @@\n #![allow(non_upper_case_globals)]\n #![allow(non_camel_case_types)]\n #![allow(non_snake_case)]\n-#![allow(dead_code)]\n #![deny(bare_trait_objects)]\n \n pub use self::IntPredicate::*;\n@@ -177,25 +176,6 @@ impl Attribute {\n     }\n }\n \n-// Memory-managed interface to target data.\n-\n-struct TargetData {\n-    lltd: TargetDataRef,\n-}\n-\n-impl Drop for TargetData {\n-    fn drop(&mut self) {\n-        unsafe {\n-            LLVMDisposeTargetData(self.lltd);\n-        }\n-    }\n-}\n-\n-fn mk_target_data(string_rep: &str) -> TargetData {\n-    let string_rep = CString::new(string_rep).unwrap();\n-    TargetData { lltd: unsafe { LLVMCreateTargetData(string_rep.as_ptr()) } }\n-}\n-\n // Memory-managed interface to object files.\n \n pub struct ObjectFile {\n@@ -254,13 +234,6 @@ pub fn get_param(llfn: ValueRef, index: c_uint) -> ValueRef {\n     }\n }\n \n-fn get_params(llfn: ValueRef) -> Vec<ValueRef> {\n-    unsafe {\n-        let num_params = LLVMCountParams(llfn);\n-        (0..num_params).map(|idx| LLVMGetParam(llfn, idx)).collect()\n-    }\n-}\n-\n pub fn build_string<F>(f: F) -> Option<String>\n     where F: FnOnce(RustStringRef)\n {"}]}