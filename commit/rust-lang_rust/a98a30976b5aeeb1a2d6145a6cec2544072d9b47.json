{"sha": "a98a30976b5aeeb1a2d6145a6cec2544072d9b47", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5OGEzMDk3NmI1YWVlYjFhMmQ2MTQ1YTZjZWMyNTQ0MDcyZDliNDc=", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2021-07-23T21:20:17Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2021-08-12T22:19:03Z"}, "message": "add benchmarks for 1, 2, 4, 8, 16 threads", "tree": {"sha": "963f254af5bb9b0e19a24b17b45b0e7ff15fd59d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/963f254af5bb9b0e19a24b17b45b0e7ff15fd59d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a98a30976b5aeeb1a2d6145a6cec2544072d9b47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a98a30976b5aeeb1a2d6145a6cec2544072d9b47", "html_url": "https://github.com/rust-lang/rust/commit/a98a30976b5aeeb1a2d6145a6cec2544072d9b47", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a98a30976b5aeeb1a2d6145a6cec2544072d9b47/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3914a7b0da839690ffdeb3e147ad84c76fdcd873", "url": "https://api.github.com/repos/rust-lang/rust/commits/3914a7b0da839690ffdeb3e147ad84c76fdcd873", "html_url": "https://github.com/rust-lang/rust/commit/3914a7b0da839690ffdeb3e147ad84c76fdcd873"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "3c578ed50512be3d888b06d77f4cfdb6aca532b1", "filename": "library/std/src/time/tests.rs", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/a98a30976b5aeeb1a2d6145a6cec2544072d9b47/library%2Fstd%2Fsrc%2Ftime%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a98a30976b5aeeb1a2d6145a6cec2544072d9b47/library%2Fstd%2Fsrc%2Ftime%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ftime%2Ftests.rs?ref=a98a30976b5aeeb1a2d6145a6cec2544072d9b47", "patch": "@@ -1,4 +1,5 @@\n use super::{Duration, Instant, SystemTime, UNIX_EPOCH};\n+use test::{black_box, Bencher};\n \n macro_rules! assert_almost_eq {\n     ($a:expr, $b:expr) => {{\n@@ -188,3 +189,45 @@ fn since_epoch() {\n     let hundred_twenty_years = thirty_years * 4;\n     assert!(a < hundred_twenty_years);\n }\n+\n+macro_rules! bench_instant_threaded {\n+    ($bench_name:ident, $thread_count:expr) => {\n+        #[bench]\n+        fn $bench_name(b: &mut Bencher) -> crate::thread::Result<()> {\n+            use crate::sync::atomic::{AtomicBool, Ordering};\n+            use crate::sync::Arc;\n+\n+            let running = Arc::new(AtomicBool::new(true));\n+\n+            let threads: Vec<_> = (0..$thread_count)\n+                .map(|_| {\n+                    let flag = Arc::clone(&running);\n+                    crate::thread::spawn(move || {\n+                        while flag.load(Ordering::Relaxed) {\n+                            black_box(Instant::now());\n+                        }\n+                    })\n+                })\n+                .collect();\n+\n+            b.iter(|| {\n+                let a = Instant::now();\n+                let b = Instant::now();\n+                assert!(b >= a);\n+            });\n+\n+            running.store(false, Ordering::Relaxed);\n+\n+            for t in threads {\n+                t.join()?;\n+            }\n+            Ok(())\n+        }\n+    };\n+}\n+\n+bench_instant_threaded!(instant_contention_01_threads, 0);\n+bench_instant_threaded!(instant_contention_02_threads, 1);\n+bench_instant_threaded!(instant_contention_04_threads, 3);\n+bench_instant_threaded!(instant_contention_08_threads, 7);\n+bench_instant_threaded!(instant_contention_16_threads, 15);"}]}