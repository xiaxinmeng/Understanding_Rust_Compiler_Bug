{"sha": "35f157073238b9e0e97d9e9d17b4861103d87962", "node_id": "C_kwDOAAsO6NoAKDM1ZjE1NzA3MzIzOGI5ZTBlOTdkOWU5ZDE3YjQ4NjExMDNkODc5NjI", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-10-19T02:53:47Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-10-19T02:55:23Z"}, "message": "instantiate -> construct", "tree": {"sha": "cdc8e6d73bd8713d43afc0aa66c9d57b3689c362", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cdc8e6d73bd8713d43afc0aa66c9d57b3689c362"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35f157073238b9e0e97d9e9d17b4861103d87962", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35f157073238b9e0e97d9e9d17b4861103d87962", "html_url": "https://github.com/rust-lang/rust/commit/35f157073238b9e0e97d9e9d17b4861103d87962", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35f157073238b9e0e97d9e9d17b4861103d87962/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7eb2d4e7d0e070eaf15955fc376498d9e5fa9e78", "url": "https://api.github.com/repos/rust-lang/rust/commits/7eb2d4e7d0e070eaf15955fc376498d9e5fa9e78", "html_url": "https://github.com/rust-lang/rust/commit/7eb2d4e7d0e070eaf15955fc376498d9e5fa9e78"}], "stats": {"total": 34, "additions": 16, "deletions": 18}, "files": [{"sha": "08b21b82faf5a0b47e8224039be9c5cecf27d290", "filename": "compiler/rustc_hir_analysis/src/check/fn_ctxt/suggestions.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/35f157073238b9e0e97d9e9d17b4861103d87962/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Ffn_ctxt%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35f157073238b9e0e97d9e9d17b4861103d87962/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Ffn_ctxt%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Ffn_ctxt%2Fsuggestions.rs?ref=35f157073238b9e0e97d9e9d17b4861103d87962", "patch": "@@ -102,10 +102,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n             let msg = match def_id_or_name {\n                 DefIdOrName::DefId(def_id) => match self.tcx.def_kind(def_id) {\n-                    DefKind::Ctor(CtorOf::Struct, _) => \"instantiate this tuple struct\".to_string(),\n-                    DefKind::Ctor(CtorOf::Variant, _) => {\n-                        \"instantiate this tuple variant\".to_string()\n-                    }\n+                    DefKind::Ctor(CtorOf::Struct, _) => \"construct this tuple struct\".to_string(),\n+                    DefKind::Ctor(CtorOf::Variant, _) => \"construct this tuple variant\".to_string(),\n                     kind => format!(\"call this {}\", kind.descr(def_id)),\n                 },\n                 DefIdOrName::Name(name) => format!(\"call this {name}\"),"}, {"sha": "8c41d9d240c704c00ee77240a97ab3ca1e0a9cef", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/35f157073238b9e0e97d9e9d17b4861103d87962/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35f157073238b9e0e97d9e9d17b4861103d87962/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=35f157073238b9e0e97d9e9d17b4861103d87962", "patch": "@@ -923,10 +923,10 @@ impl<'tcx> TypeErrCtxtExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n         let msg = match def_id_or_name {\n             DefIdOrName::DefId(def_id) => match self.tcx.def_kind(def_id) {\n                 DefKind::Ctor(CtorOf::Struct, _) => {\n-                    \"use parentheses to instantiate this tuple struct\".to_string()\n+                    \"use parentheses to construct this tuple struct\".to_string()\n                 }\n                 DefKind::Ctor(CtorOf::Variant, _) => {\n-                    \"use parentheses to instantiate this tuple variant\".to_string()\n+                    \"use parentheses to construct this tuple variant\".to_string()\n                 }\n                 kind => format!(\"use parentheses to call this {}\", kind.descr(def_id)),\n             },"}, {"sha": "42a78ed97e02524c9f0b710bfe5b9d4559d0f855", "filename": "src/test/ui/issues/issue-35241.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/35f157073238b9e0e97d9e9d17b4861103d87962/src%2Ftest%2Fui%2Fissues%2Fissue-35241.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/35f157073238b9e0e97d9e9d17b4861103d87962/src%2Ftest%2Fui%2Fissues%2Fissue-35241.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-35241.stderr?ref=35f157073238b9e0e97d9e9d17b4861103d87962", "patch": "@@ -11,7 +11,7 @@ LL | fn test() -> Foo { Foo }\n    |\n    = note: expected struct `Foo`\n              found fn item `fn(u32) -> Foo {Foo}`\n-help: use parentheses to instantiate this tuple struct\n+help: use parentheses to construct this tuple struct\n    |\n LL | fn test() -> Foo { Foo(/* u32 */) }\n    |                       +++++++++++"}, {"sha": "82a4211f08ac35fe6a5387a4e47552f0d2bf82a7", "filename": "src/test/ui/resolve/privacy-enum-ctor.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/35f157073238b9e0e97d9e9d17b4861103d87962/src%2Ftest%2Fui%2Fresolve%2Fprivacy-enum-ctor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/35f157073238b9e0e97d9e9d17b4861103d87962/src%2Ftest%2Fui%2Fresolve%2Fprivacy-enum-ctor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fprivacy-enum-ctor.stderr?ref=35f157073238b9e0e97d9e9d17b4861103d87962", "patch": "@@ -327,7 +327,7 @@ LL |         let _: Z = Z::Fn;\n    |\n    = note: expected enum `Z`\n            found fn item `fn(u8) -> Z {Z::Fn}`\n-help: use parentheses to instantiate this tuple variant\n+help: use parentheses to construct this tuple variant\n    |\n LL |         let _: Z = Z::Fn(/* u8 */);\n    |                         ++++++++++\n@@ -362,7 +362,7 @@ LL |     let _: E = m::E::Fn;\n    |\n    = note: expected enum `E`\n            found fn item `fn(u8) -> E {E::Fn}`\n-help: use parentheses to instantiate this tuple variant\n+help: use parentheses to construct this tuple variant\n    |\n LL |     let _: E = m::E::Fn(/* u8 */);\n    |                        ++++++++++\n@@ -397,7 +397,7 @@ LL |     let _: E = E::Fn;\n    |\n    = note: expected enum `E`\n            found fn item `fn(u8) -> E {E::Fn}`\n-help: use parentheses to instantiate this tuple variant\n+help: use parentheses to construct this tuple variant\n    |\n LL |     let _: E = E::Fn(/* u8 */);\n    |                     ++++++++++"}, {"sha": "5f811044eb349a14105043175417716b2314d646", "filename": "src/test/ui/suggestions/call-on-unimplemented-ctor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/35f157073238b9e0e97d9e9d17b4861103d87962/src%2Ftest%2Fui%2Fsuggestions%2Fcall-on-unimplemented-ctor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35f157073238b9e0e97d9e9d17b4861103d87962/src%2Ftest%2Fui%2Fsuggestions%2Fcall-on-unimplemented-ctor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fcall-on-unimplemented-ctor.rs?ref=35f157073238b9e0e97d9e9d17b4861103d87962", "patch": "@@ -2,7 +2,7 @@ fn main() {\n     insert_resource(Marker);\n     insert_resource(Time);\n     //~^ ERROR the trait bound `fn(u32) -> Time {Time}: Resource` is not satisfied\n-    //~| HELP use parentheses to instantiate this tuple struct\n+    //~| HELP use parentheses to construct this tuple struct\n }\n \n trait Resource {}"}, {"sha": "58612cbfb239e317f910b8df890cf75ac8147d8d", "filename": "src/test/ui/suggestions/call-on-unimplemented-ctor.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/35f157073238b9e0e97d9e9d17b4861103d87962/src%2Ftest%2Fui%2Fsuggestions%2Fcall-on-unimplemented-ctor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/35f157073238b9e0e97d9e9d17b4861103d87962/src%2Ftest%2Fui%2Fsuggestions%2Fcall-on-unimplemented-ctor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fcall-on-unimplemented-ctor.stderr?ref=35f157073238b9e0e97d9e9d17b4861103d87962", "patch": "@@ -11,7 +11,7 @@ note: required by a bound in `insert_resource`\n    |\n LL | fn insert_resource<R: Resource>(resource: R) {}\n    |                       ^^^^^^^^ required by this bound in `insert_resource`\n-help: use parentheses to instantiate this tuple struct\n+help: use parentheses to construct this tuple struct\n    |\n LL |     insert_resource(Time(/* u32 */));\n    |                         +++++++++++"}, {"sha": "597dc61c3f7e2e501dd977370bc3c421929cf5b0", "filename": "src/test/ui/suggestions/fn-or-tuple-struct-without-args.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/35f157073238b9e0e97d9e9d17b4861103d87962/src%2Ftest%2Fui%2Fsuggestions%2Ffn-or-tuple-struct-without-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/35f157073238b9e0e97d9e9d17b4861103d87962/src%2Ftest%2Fui%2Fsuggestions%2Ffn-or-tuple-struct-without-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Ffn-or-tuple-struct-without-args.stderr?ref=35f157073238b9e0e97d9e9d17b4861103d87962", "patch": "@@ -49,7 +49,7 @@ LL |     let _: S = S;\n    |\n    = note: expected struct `S`\n              found fn item `fn(usize, usize) -> S {S}`\n-help: use parentheses to instantiate this tuple struct\n+help: use parentheses to construct this tuple struct\n    |\n LL |     let _: S = S(/* usize */, /* usize */);\n    |                 ++++++++++++++++++++++++++\n@@ -85,7 +85,7 @@ LL |     let _: V = V;\n    |\n    = note: expected struct `V`\n              found fn item `fn() -> V {V}`\n-help: use parentheses to instantiate this tuple struct\n+help: use parentheses to construct this tuple struct\n    |\n LL |     let _: V = V();\n    |                 ++\n@@ -139,7 +139,7 @@ LL |     let _: E = E::A;\n    |\n    = note: expected enum `E`\n            found fn item `fn(usize) -> E {E::A}`\n-help: use parentheses to instantiate this tuple variant\n+help: use parentheses to construct this tuple variant\n    |\n LL |     let _: E = E::A(/* usize */);\n    |                    +++++++++++++"}, {"sha": "23e7b7cc363fec81063cda1ae800da5b0c3c159e", "filename": "src/test/ui/typeck/issue-87181/empty-tuple-method.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/35f157073238b9e0e97d9e9d17b4861103d87962/src%2Ftest%2Fui%2Ftypeck%2Fissue-87181%2Fempty-tuple-method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/35f157073238b9e0e97d9e9d17b4861103d87962/src%2Ftest%2Fui%2Ftypeck%2Fissue-87181%2Fempty-tuple-method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-87181%2Fempty-tuple-method.stderr?ref=35f157073238b9e0e97d9e9d17b4861103d87962", "patch": "@@ -4,7 +4,7 @@ error[E0599]: no method named `foo` found for fn item `fn() -> Foo {Foo}` in the\n LL |     thing.bar.foo();\n    |               ^^^ method not found in `fn() -> Foo {Foo}`\n    |\n-help: use parentheses to instantiate this tuple struct\n+help: use parentheses to construct this tuple struct\n    |\n LL |     (thing.bar)().foo();\n    |     +         +++"}, {"sha": "2247ea27021f45e1559f54adfcc2121157d49365", "filename": "src/test/ui/typeck/issue-87181/enum-variant.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/35f157073238b9e0e97d9e9d17b4861103d87962/src%2Ftest%2Fui%2Ftypeck%2Fissue-87181%2Fenum-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/35f157073238b9e0e97d9e9d17b4861103d87962/src%2Ftest%2Fui%2Ftypeck%2Fissue-87181%2Fenum-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-87181%2Fenum-variant.stderr?ref=35f157073238b9e0e97d9e9d17b4861103d87962", "patch": "@@ -4,7 +4,7 @@ error[E0599]: no method named `foo` found for fn item `fn() -> Foo {Foo::Tup}` i\n LL |     thing.bar.foo();\n    |               ^^^ method not found in `fn() -> Foo {Foo::Tup}`\n    |\n-help: use parentheses to instantiate this tuple variant\n+help: use parentheses to construct this tuple variant\n    |\n LL |     (thing.bar)().foo();\n    |     +         +++"}, {"sha": "0a7d30b615a635990599586121124f374557db29", "filename": "src/test/ui/typeck/issue-87181/tuple-field.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/35f157073238b9e0e97d9e9d17b4861103d87962/src%2Ftest%2Fui%2Ftypeck%2Fissue-87181%2Ftuple-field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/35f157073238b9e0e97d9e9d17b4861103d87962/src%2Ftest%2Fui%2Ftypeck%2Fissue-87181%2Ftuple-field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-87181%2Ftuple-field.stderr?ref=35f157073238b9e0e97d9e9d17b4861103d87962", "patch": "@@ -4,7 +4,7 @@ error[E0609]: no field `0` on type `fn(char, u16) -> Foo {Foo}`\n LL |     thing.bar.0;\n    |               ^\n    |\n-help: use parentheses to instantiate this tuple struct\n+help: use parentheses to construct this tuple struct\n    |\n LL |     (thing.bar)(/* char */, /* u16 */).0;\n    |     +         ++++++++++++++++++++++++"}]}