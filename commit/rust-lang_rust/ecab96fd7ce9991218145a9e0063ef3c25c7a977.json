{"sha": "ecab96fd7ce9991218145a9e0063ef3c25c7a977", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjYWI5NmZkN2NlOTk5MTIxODE0NWE5ZTAwNjNlZjNjMjVjN2E5Nzc=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-07-14T23:52:45Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-07-14T23:52:45Z"}, "message": "Ubsan this newly discovered dead code", "tree": {"sha": "d85bc6edd7eacb29f19a15443f15b8a3a86c8b74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d85bc6edd7eacb29f19a15443f15b8a3a86c8b74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ecab96fd7ce9991218145a9e0063ef3c25c7a977", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ecab96fd7ce9991218145a9e0063ef3c25c7a977", "html_url": "https://github.com/rust-lang/rust/commit/ecab96fd7ce9991218145a9e0063ef3c25c7a977", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ecab96fd7ce9991218145a9e0063ef3c25c7a977/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1caa593cb6bd9a33eb625ad313010d2b141dea5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1caa593cb6bd9a33eb625ad313010d2b141dea5c", "html_url": "https://github.com/rust-lang/rust/commit/1caa593cb6bd9a33eb625ad313010d2b141dea5c"}], "stats": {"total": 23, "additions": 9, "deletions": 14}, "files": [{"sha": "d36142af56c6540ad15af51d052e1bace989f8c9", "filename": "src/librustc_codegen_llvm/back/write.rs", "status": "modified", "additions": 9, "deletions": 14, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/ecab96fd7ce9991218145a9e0063ef3c25c7a977/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecab96fd7ce9991218145a9e0063ef3c25c7a977/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs?ref=ecab96fd7ce9991218145a9e0063ef3c25c7a977", "patch": "@@ -399,35 +399,30 @@ impl CodegenContext {\n }\n \n struct DiagnosticHandlers<'a> {\n-    #[allow(dead_code)]\n-    // This value is not actually dead, llcx has pointers to it and needs these pointers to be alive\n-    // until Drop is executed on this object\n-    inner: Box<(&'a CodegenContext, &'a Handler)>,\n+    data: *mut (&'a CodegenContext, &'a Handler),\n     llcx: ContextRef,\n }\n \n impl<'a> DiagnosticHandlers<'a> {\n     fn new(cgcx: &'a CodegenContext,\n            handler: &'a Handler,\n            llcx: ContextRef) -> DiagnosticHandlers<'a> {\n-        let data = Box::new((cgcx, handler));\n+        let data = Box::into_raw(Box::new((cgcx, handler)));\n         unsafe {\n-            let arg = &*data as &(_, _) as *const _ as *mut _;\n-            llvm::LLVMRustSetInlineAsmDiagnosticHandler(llcx, inline_asm_handler, arg);\n-            llvm::LLVMContextSetDiagnosticHandler(llcx, diagnostic_handler, arg);\n-        }\n-        DiagnosticHandlers {\n-            inner: data,\n-            llcx: llcx,\n+            llvm::LLVMRustSetInlineAsmDiagnosticHandler(llcx, inline_asm_handler, data as *mut _);\n+            llvm::LLVMContextSetDiagnosticHandler(llcx, diagnostic_handler, data as *mut _);\n         }\n+        DiagnosticHandlers { data, llcx }\n     }\n }\n \n impl<'a> Drop for DiagnosticHandlers<'a> {\n     fn drop(&mut self) {\n+        use std::ptr::null_mut;\n         unsafe {\n-            llvm::LLVMRustSetInlineAsmDiagnosticHandler(self.llcx, inline_asm_handler, 0 as *mut _);\n-            llvm::LLVMContextSetDiagnosticHandler(self.llcx, diagnostic_handler, 0 as *mut _);\n+            llvm::LLVMRustSetInlineAsmDiagnosticHandler(self.llcx, inline_asm_handler, null_mut());\n+            llvm::LLVMContextSetDiagnosticHandler(self.llcx, diagnostic_handler, null_mut());\n+            drop(Box::from_raw(self.data));\n         }\n     }\n }"}]}