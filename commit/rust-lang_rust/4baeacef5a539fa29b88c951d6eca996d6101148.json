{"sha": "4baeacef5a539fa29b88c951d6eca996d6101148", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiYWVhY2VmNWE1MzlmYTI5Yjg4Yzk1MWQ2ZWNhOTk2ZDYxMDExNDg=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-12-22T20:47:31Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-12-22T20:47:31Z"}, "message": "rollup merge of #20075: skade/remove-notrust\n\nInternally refactor all mentions of `notrust` to the\npositive statement `rust`.\n\n[breaking-change] Change remaining `notrust` markers to\nthe thing they actually represent, e.g. `sh` or `plain`.\n\nThis supersedes #19693 .", "tree": {"sha": "d61e4512ce33db7454c17dcb2dfc15328f944a51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d61e4512ce33db7454c17dcb2dfc15328f944a51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4baeacef5a539fa29b88c951d6eca996d6101148", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4baeacef5a539fa29b88c951d6eca996d6101148", "html_url": "https://github.com/rust-lang/rust/commit/4baeacef5a539fa29b88c951d6eca996d6101148", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4baeacef5a539fa29b88c951d6eca996d6101148/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7311b6347de4205b71e8a221140a527e789fd353", "url": "https://api.github.com/repos/rust-lang/rust/commits/7311b6347de4205b71e8a221140a527e789fd353", "html_url": "https://github.com/rust-lang/rust/commit/7311b6347de4205b71e8a221140a527e789fd353"}, {"sha": "ee9de3b10290290ae1a56d6fbc80307869fc5d01", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee9de3b10290290ae1a56d6fbc80307869fc5d01", "html_url": "https://github.com/rust-lang/rust/commit/ee9de3b10290290ae1a56d6fbc80307869fc5d01"}], "stats": {"total": 40, "additions": 19, "deletions": 21}, "files": [{"sha": "5581874ea3aff2a1f7d24244bbc2e16c9950e99b", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 19, "deletions": 21, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/4baeacef5a539fa29b88c951d6eca996d6101148/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4baeacef5a539fa29b88c951d6eca996d6101148/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=4baeacef5a539fa29b88c951d6eca996d6101148", "patch": "@@ -174,7 +174,7 @@ pub fn render(w: &mut fmt::Formatter, s: &str, print_toc: bool) -> fmt::Result {\n                 let rlang = slice::from_raw_buf(&(*lang).data,\n                                                 (*lang).size as uint);\n                 let rlang = str::from_utf8(rlang).unwrap();\n-                if LangString::parse(rlang).notrust {\n+                if !LangString::parse(rlang).rust {\n                     (my_opaque.dfltblk)(ob, orig_text, lang,\n                                         opaque as *mut libc::c_void);\n                     true\n@@ -320,7 +320,7 @@ pub fn find_testable_code(doc: &str, tests: &mut ::test::Collector) {\n                 let s = str::from_utf8(lang).unwrap();\n                 LangString::parse(s)\n             };\n-            if block_info.notrust { return }\n+            if !block_info.rust { return }\n             let text = slice::from_raw_buf(&(*text).data, (*text).size as uint);\n             let opaque = opaque as *mut hoedown_html_renderer_state;\n             let tests = &mut *((*opaque).opaque as *mut ::test::Collector);\n@@ -373,7 +373,7 @@ struct LangString {\n     should_fail: bool,\n     no_run: bool,\n     ignore: bool,\n-    notrust: bool,\n+    rust: bool,\n     test_harness: bool,\n }\n \n@@ -383,7 +383,7 @@ impl LangString {\n             should_fail: false,\n             no_run: false,\n             ignore: false,\n-            notrust: false,\n+            rust: false,\n             test_harness: false,\n         }\n     }\n@@ -403,14 +403,13 @@ impl LangString {\n                 \"should_fail\" => { data.should_fail = true; seen_rust_tags = true; },\n                 \"no_run\" => { data.no_run = true; seen_rust_tags = true; },\n                 \"ignore\" => { data.ignore = true; seen_rust_tags = true; },\n-                \"notrust\" => { data.notrust = true; seen_rust_tags = true; },\n-                \"rust\" => { data.notrust = false; seen_rust_tags = true; },\n+                \"rust\" => { data.rust = true; seen_rust_tags = true; },\n                 \"test_harness\" => { data.test_harness = true; seen_rust_tags = true; }\n                 _ => { seen_other_tags = true }\n             }\n         }\n \n-        data.notrust |= seen_other_tags && !seen_rust_tags;\n+        data.rust |=  !seen_other_tags || seen_rust_tags;\n \n         data\n     }\n@@ -452,28 +451,27 @@ mod tests {\n     #[test]\n     fn test_lang_string_parse() {\n         fn t(s: &str,\n-             should_fail: bool, no_run: bool, ignore: bool, notrust: bool, test_harness: bool) {\n+            should_fail: bool, no_run: bool, ignore: bool, rust: bool, test_harness: bool) {\n             assert_eq!(LangString::parse(s), LangString {\n                 should_fail: should_fail,\n                 no_run: no_run,\n                 ignore: ignore,\n-                notrust: notrust,\n+                rust: rust,\n                 test_harness: test_harness,\n             })\n         }\n \n-        t(\"\", false,false,false,false,false);\n-        t(\"rust\", false,false,false,false,false);\n-        t(\"sh\", false,false,false,true,false);\n-        t(\"notrust\", false,false,false,true,false);\n-        t(\"ignore\", false,false,true,false,false);\n-        t(\"should_fail\", true,false,false,false,false);\n-        t(\"no_run\", false,true,false,false,false);\n-        t(\"test_harness\", false,false,false,false,true);\n-        t(\"{.no_run .example}\", false,true,false,false,false);\n-        t(\"{.sh .should_fail}\", true,false,false,false,false);\n-        t(\"{.example .rust}\", false,false,false,false,false);\n-        t(\"{.test_harness .rust}\", false,false,false,false,true);\n+        t(\"\", false,false,false,true,false);\n+        t(\"rust\", false,false,false,true,false);\n+        t(\"sh\", false,false,false,false,false);\n+        t(\"ignore\", false,false,true,true,false);\n+        t(\"should_fail\", true,false,false,true,false);\n+        t(\"no_run\", false,true,false,true,false);\n+        t(\"test_harness\", false,false,false,true,true);\n+        t(\"{.no_run .example}\", false,true,false,true,false);\n+        t(\"{.sh .should_fail}\", true,false,false,true,false);\n+        t(\"{.example .rust}\", false,false,false,true,false);\n+        t(\"{.test_harness .rust}\", false,false,false,true,true);\n     }\n \n     #[test]"}]}