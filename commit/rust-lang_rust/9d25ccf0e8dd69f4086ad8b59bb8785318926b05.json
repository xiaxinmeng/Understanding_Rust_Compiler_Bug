{"sha": "9d25ccf0e8dd69f4086ad8b59bb8785318926b05", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkMjVjY2YwZThkZDY5ZjQwODZhZDhiNTliYjg3ODUzMTg5MjZiMDU=", "commit": {"author": {"name": "John Ericson", "email": "John.Ericson@Obsidian.Systems", "date": "2020-10-11T22:01:32Z"}, "committer": {"name": "John Ericson", "email": "John.Ericson@Obsidian.Systems", "date": "2021-03-01T17:46:25Z"}, "message": "Change built-in kernel targets to be os = none throughout\n\nWhether for Rust's own `target_os`, LLVM's triples, or GNU config's, the\nOS-related have fields have been for code running *on* that OS, not code\nthat is *part* of the OS.\n\nThe difference is huge, as syscall interfaces are nothing like\nfreestanding interfaces. Kernels are (hypervisors and other more exotic\nsituations aside) freestanding programs that use the interfaces provided\nby the hardware. It's *those* interfaces, the ones external to the\nprogram being built and its software dependencies, that are the content\nof the target.\n\nFor the Linux Kernel in particular, `target_env: \"gnu\"` is removed for\nthe same reason: that `-gnu` refers to glibc or GNU/linux, neither of\nwhich applies to the kernel itself.\n\nRelates to #74247\n\nThanks @ojeda for catching some things.", "tree": {"sha": "1c6cff81f8cf51472596d320c10d68ff5dab0d4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c6cff81f8cf51472596d320c10d68ff5dab0d4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d25ccf0e8dd69f4086ad8b59bb8785318926b05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d25ccf0e8dd69f4086ad8b59bb8785318926b05", "html_url": "https://github.com/rust-lang/rust/commit/9d25ccf0e8dd69f4086ad8b59bb8785318926b05", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d25ccf0e8dd69f4086ad8b59bb8785318926b05/comments", "author": {"login": "Ericson2314", "id": 1055245, "node_id": "MDQ6VXNlcjEwNTUyNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/1055245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ericson2314", "html_url": "https://github.com/Ericson2314", "followers_url": "https://api.github.com/users/Ericson2314/followers", "following_url": "https://api.github.com/users/Ericson2314/following{/other_user}", "gists_url": "https://api.github.com/users/Ericson2314/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ericson2314/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ericson2314/subscriptions", "organizations_url": "https://api.github.com/users/Ericson2314/orgs", "repos_url": "https://api.github.com/users/Ericson2314/repos", "events_url": "https://api.github.com/users/Ericson2314/events{/privacy}", "received_events_url": "https://api.github.com/users/Ericson2314/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ericson2314", "id": 1055245, "node_id": "MDQ6VXNlcjEwNTUyNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/1055245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ericson2314", "html_url": "https://github.com/Ericson2314", "followers_url": "https://api.github.com/users/Ericson2314/followers", "following_url": "https://api.github.com/users/Ericson2314/following{/other_user}", "gists_url": "https://api.github.com/users/Ericson2314/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ericson2314/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ericson2314/subscriptions", "organizations_url": "https://api.github.com/users/Ericson2314/orgs", "repos_url": "https://api.github.com/users/Ericson2314/repos", "events_url": "https://api.github.com/users/Ericson2314/events{/privacy}", "received_events_url": "https://api.github.com/users/Ericson2314/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5233edcf1c7ee70ac25e4ec1115c3546f53d8a2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/5233edcf1c7ee70ac25e4ec1115c3546f53d8a2d", "html_url": "https://github.com/rust-lang/rust/commit/5233edcf1c7ee70ac25e4ec1115c3546f53d8a2d"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "eb1916637529b2c7cdd052a2f0a15e4c0deb8b69", "filename": "compiler/rustc_target/src/spec/mod.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9d25ccf0e8dd69f4086ad8b59bb8785318926b05/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d25ccf0e8dd69f4086ad8b59bb8785318926b05/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs?ref=9d25ccf0e8dd69f4086ad8b59bb8785318926b05", "patch": "@@ -679,7 +679,7 @@ supported_targets! {\n     (\"thumbv7neon-linux-androideabi\", thumbv7neon_linux_androideabi),\n     (\"aarch64-linux-android\", aarch64_linux_android),\n \n-    (\"x86_64-linux-kernel\", x86_64_linux_kernel),\n+    (\"x86_64-unknown-none-linuxkernel\", x86_64_unknown_none_linuxkernel),\n \n     (\"aarch64-unknown-freebsd\", aarch64_unknown_freebsd),\n     (\"armv6-unknown-freebsd\", armv6_unknown_freebsd),\n@@ -777,7 +777,8 @@ supported_targets! {\n \n     (\"aarch64-unknown-hermit\", aarch64_unknown_hermit),\n     (\"x86_64-unknown-hermit\", x86_64_unknown_hermit),\n-    (\"x86_64-unknown-hermit-kernel\", x86_64_unknown_hermit_kernel),\n+\n+    (\"x86_64-unknown-none-hermitkernel\", x86_64_unknown_none_hermitkernel),\n \n     (\"riscv32i-unknown-none-elf\", riscv32i_unknown_none_elf),\n     (\"riscv32imc-unknown-none-elf\", riscv32imc_unknown_none_elf),"}, {"sha": "a357def190b83f489947272205f852986488a607", "filename": "compiler/rustc_target/src/spec/x86_64_unknown_none_hermitkernel.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d25ccf0e8dd69f4086ad8b59bb8785318926b05/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_unknown_none_hermitkernel.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d25ccf0e8dd69f4086ad8b59bb8785318926b05/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_unknown_none_hermitkernel.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_unknown_none_hermitkernel.rs?ref=9d25ccf0e8dd69f4086ad8b59bb8785318926b05", "patch": "@@ -10,7 +10,7 @@ pub fn target() -> Target {\n     base.stack_probes = StackProbeType::InlineOrCall { min_llvm_version_for_inline: (11, 0, 1) };\n \n     Target {\n-        llvm_target: \"x86_64-unknown-hermit\".to_string(),\n+        llvm_target: \"x86_64-unknown-none-elf\".to_string(),\n         pointer_width: 64,\n         data_layout: \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\n             .to_string(),", "previous_filename": "compiler/rustc_target/src/spec/x86_64_unknown_hermit_kernel.rs"}, {"sha": "68d80205e14724e2f8b862eabe979e63c1549771", "filename": "compiler/rustc_target/src/spec/x86_64_unknown_none_linuxkernel.rs", "status": "renamed", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9d25ccf0e8dd69f4086ad8b59bb8785318926b05/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_unknown_none_linuxkernel.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d25ccf0e8dd69f4086ad8b59bb8785318926b05/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_unknown_none_linuxkernel.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_unknown_none_linuxkernel.rs?ref=9d25ccf0e8dd69f4086ad8b59bb8785318926b05", "patch": "@@ -14,8 +14,11 @@ pub fn target() -> Target {\n     base.pre_link_args.get_mut(&LinkerFlavor::Gcc).unwrap().push(\"-m64\".to_string());\n \n     Target {\n-        // FIXME: Some dispute, the linux-on-clang folks think this should use \"Linux\"\n-        llvm_target: \"x86_64-elf\".to_string(),\n+        // FIXME: Some dispute, the linux-on-clang folks think this should use\n+        // \"Linux\". We disagree because running *on* Linux is nothing like\n+        // running *as\" linux, and historically the \"os\" component as has always\n+        // been used to mean the \"on\" part.\n+        llvm_target: \"x86_64-unknown-none-elf\".to_string(),\n         pointer_width: 64,\n         data_layout: \"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128\"\n             .to_string(),", "previous_filename": "compiler/rustc_target/src/spec/x86_64_linux_kernel.rs"}, {"sha": "be5e56c71e36f1fee0c97c09313eeee3e0e124ae", "filename": "library/unwind/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d25ccf0e8dd69f4086ad8b59bb8785318926b05/library%2Funwind%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d25ccf0e8dd69f4086ad8b59bb8785318926b05/library%2Funwind%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Funwind%2Fsrc%2Flib.rs?ref=9d25ccf0e8dd69f4086ad8b59bb8785318926b05", "patch": "@@ -15,7 +15,7 @@ cfg_if::cfg_if! {\n         target_os = \"none\",\n     ))] {\n         // These \"unix\" family members do not have unwinder.\n-        // Note this also matches x86_64-linux-kernel.\n+        // Note this also matches x86_64-unknown-none-linuxkernel.\n     } else if #[cfg(any(\n         unix,\n         windows,"}, {"sha": "611117788da88bc7b884b36ad462cdc0b003cd93", "filename": "src/doc/rustc/src/platform-support.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9d25ccf0e8dd69f4086ad8b59bb8785318926b05/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md", "raw_url": "https://github.com/rust-lang/rust/raw/9d25ccf0e8dd69f4086ad8b59bb8785318926b05/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md?ref=9d25ccf0e8dd69f4086ad8b59bb8785318926b05", "patch": "@@ -217,13 +217,13 @@ target | std | host | notes\n `thumbv4t-none-eabi` | * |  | ARMv4T T32\n `x86_64-apple-ios-macabi` | \u2713 |  | Apple Catalyst on x86_64\n `x86_64-apple-tvos` | * | | x86 64-bit tvOS\n-`x86_64-linux-kernel` | * |  | Linux kernel modules\n+`x86_64-unknown-none-linuxkernel` | * |  | Linux kernel modules\n `x86_64-sun-solaris` | ? |  | Deprecated target for 64-bit Solaris 10/11, illumos\n `x86_64-pc-windows-msvc` | \u2713 |  | 64-bit Windows XP support\n `x86_64-unknown-dragonfly` | \u2713 | \u2713 | 64-bit DragonFlyBSD\n `x86_64-unknown-haiku` | \u2713 | \u2713 | 64-bit Haiku\n `x86_64-unknown-hermit` | ? |  |\n-`x86_64-unknown-hermit-kernel` | ? |  | HermitCore kernel\n+`x86_64-unknown-none-hermitkernel` | ? |  | HermitCore kernel\n `x86_64-unknown-l4re-uclibc` | ? |  |\n `x86_64-unknown-openbsd` | \u2713 | \u2713 | 64-bit OpenBSD\n `x86_64-unknown-uefi` | ? |  |"}]}