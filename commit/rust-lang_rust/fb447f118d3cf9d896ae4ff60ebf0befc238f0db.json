{"sha": "fb447f118d3cf9d896ae4ff60ebf0befc238f0db", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiNDQ3ZjExOGQzY2Y5ZDg5NmFlNGZmNjBlYmYwYmVmYzIzOGYwZGI=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-05-26T08:41:48Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-05-27T12:07:43Z"}, "message": "Stabilize Formatter alignment", "tree": {"sha": "b64dfaef036607905acc61a6efd1c883aba1edc3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b64dfaef036607905acc61a6efd1c883aba1edc3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb447f118d3cf9d896ae4ff60ebf0befc238f0db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb447f118d3cf9d896ae4ff60ebf0befc238f0db", "html_url": "https://github.com/rust-lang/rust/commit/fb447f118d3cf9d896ae4ff60ebf0befc238f0db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb447f118d3cf9d896ae4ff60ebf0befc238f0db/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3fd82a5e6b3a707610fdc878e2b5608340e4969a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3fd82a5e6b3a707610fdc878e2b5608340e4969a", "html_url": "https://github.com/rust-lang/rust/commit/3fd82a5e6b3a707610fdc878e2b5608340e4969a"}], "stats": {"total": 35, "additions": 18, "deletions": 17}, "files": [{"sha": "0515eeed30b626532a107f9d2caecc7cf1aa4c85", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 18, "deletions": 17, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/fb447f118d3cf9d896ae4ff60ebf0befc238f0db/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb447f118d3cf9d896ae4ff60ebf0befc238f0db/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=fb447f118d3cf9d896ae4ff60ebf0befc238f0db", "patch": "@@ -25,18 +25,19 @@ mod float;\n mod num;\n mod builders;\n \n-#[unstable(feature = \"fmt_flags_align\", issue = \"27726\")]\n+#[stable(feature = \"fmt_flags_align\", since = \"1.28.0\")]\n /// Possible alignments returned by `Formatter::align`\n #[derive(Debug)]\n pub enum Alignment {\n+    #[stable(feature = \"fmt_flags_align\", since = \"1.28.0\")]\n     /// Indication that contents should be left-aligned.\n     Left,\n+    #[stable(feature = \"fmt_flags_align\", since = \"1.28.0\")]\n     /// Indication that contents should be right-aligned.\n     Right,\n+    #[stable(feature = \"fmt_flags_align\", since = \"1.28.0\")]\n     /// Indication that contents should be center-aligned.\n     Center,\n-    /// No alignment was requested.\n-    Unknown,\n }\n \n #[stable(feature = \"debug_builders\", since = \"1.2.0\")]\n@@ -1433,8 +1434,6 @@ impl<'a> Formatter<'a> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(fmt_flags_align)]\n-    ///\n     /// extern crate core;\n     ///\n     /// use std::fmt;\n@@ -1444,11 +1443,14 @@ impl<'a> Formatter<'a> {\n     ///\n     /// impl fmt::Display for Foo {\n     ///     fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {\n-    ///         let s = match formatter.align() {\n-    ///             Alignment::Left    => \"left\",\n-    ///             Alignment::Right   => \"right\",\n-    ///             Alignment::Center  => \"center\",\n-    ///             Alignment::Unknown => \"into the void\",\n+    ///         let s = if let Some(s) = formatter.align() {\n+    ///             match s {\n+    ///                 Alignment::Left    => \"left\",\n+    ///                 Alignment::Right   => \"right\",\n+    ///                 Alignment::Center  => \"center\",\n+    ///             }\n+    ///         } else {\n+    ///             \"into the void\"\n     ///         };\n     ///         write!(formatter, \"{}\", s)\n     ///     }\n@@ -1461,14 +1463,13 @@ impl<'a> Formatter<'a> {\n     ///     assert_eq!(&format!(\"{}\", Foo), \"into the void\");\n     /// }\n     /// ```\n-    #[unstable(feature = \"fmt_flags_align\", reason = \"method was just created\",\n-               issue = \"27726\")]\n-    pub fn align(&self) -> Alignment {\n+    #[stable(feature = \"fmt_flags_align\", since = \"1.28.0\")]\n+    pub fn align(&self) -> Option<Alignment> {\n         match self.align {\n-            rt::v1::Alignment::Left => Alignment::Left,\n-            rt::v1::Alignment::Right => Alignment::Right,\n-            rt::v1::Alignment::Center => Alignment::Center,\n-            rt::v1::Alignment::Unknown => Alignment::Unknown,\n+            rt::v1::Alignment::Left => Some(Alignment::Left),\n+            rt::v1::Alignment::Right => Some(Alignment::Right),\n+            rt::v1::Alignment::Center => Some(Alignment::Center),\n+            rt::v1::Alignment::Unknown => None,\n         }\n     }\n "}]}