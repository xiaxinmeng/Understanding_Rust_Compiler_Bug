{"sha": "6fc50dacd4a7949898d77cf14b7047bf17b76921", "node_id": "C_kwDOAAsO6NoAKDZmYzUwZGFjZDRhNzk0OTg5OGQ3N2NmMTRiNzA0N2JmMTdiNzY5MjE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-06-14T04:25:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-06-14T04:25:48Z"}, "message": "Rollup merge of #112197 - compiler-errors:next-solver-erase, r=lcnr\n\nErase regions even if normalization fails in writeback (in new solver)\n\nOr else we ICE during writeback on some programs that error", "tree": {"sha": "e023a7d7c3a7ecb979a1296e0a8dd178940e73b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e023a7d7c3a7ecb979a1296e0a8dd178940e73b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6fc50dacd4a7949898d77cf14b7047bf17b76921", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkiUFMCRBK7hj4Ov3rIwAAmYgIAFywKK029w2D8iLVhr28eAga\nd5H0d50NTsLO2/CvsD5O1npRYY3cIOW9zuKkfifiCMsH7x4UWstD+22S/cia2ftr\nKdegQTe3lfkMqRAEWoJj0hunfMOEM0jdmeil+zgDzc6Gg3zWfjtxAG7h2lMHvmuW\nDPxV9tUnrbJV2etSvZJDq92FBC+W4/DhQcVwXDQBpEDCi7rvE1lVNTCCoOLb6J+o\nOTOYB6lTv9BfRfSNAWO4sb21UwjnG5v1BVZQFPnQ83fpprWSXRwRxhZKqGh+8nMh\nn97AU+fSdSYD3I1Xhn5GW+LTL2QkShW77+zBxk7zr6I8VR+NipSACXmYbLOYFS0=\n=5ifE\n-----END PGP SIGNATURE-----\n", "payload": "tree e023a7d7c3a7ecb979a1296e0a8dd178940e73b0\nparent 6330daade9766bbf896495898c2347dc3be6da17\nparent 7ff79cf4aa45cf79365606fd652b821e366d3c86\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1686716748 +0200\ncommitter GitHub <noreply@github.com> 1686716748 +0200\n\nRollup merge of #112197 - compiler-errors:next-solver-erase, r=lcnr\n\nErase regions even if normalization fails in writeback (in new solver)\n\nOr else we ICE during writeback on some programs that error\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6fc50dacd4a7949898d77cf14b7047bf17b76921", "html_url": "https://github.com/rust-lang/rust/commit/6fc50dacd4a7949898d77cf14b7047bf17b76921", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6fc50dacd4a7949898d77cf14b7047bf17b76921/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6330daade9766bbf896495898c2347dc3be6da17", "url": "https://api.github.com/repos/rust-lang/rust/commits/6330daade9766bbf896495898c2347dc3be6da17", "html_url": "https://github.com/rust-lang/rust/commit/6330daade9766bbf896495898c2347dc3be6da17"}, {"sha": "7ff79cf4aa45cf79365606fd652b821e366d3c86", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ff79cf4aa45cf79365606fd652b821e366d3c86", "html_url": "https://github.com/rust-lang/rust/commit/7ff79cf4aa45cf79365606fd652b821e366d3c86"}], "stats": {"total": 57, "additions": 47, "deletions": 10}, "files": [{"sha": "29abe921bbdcdac80ade89658355311cde561473", "filename": "compiler/rustc_hir_typeck/src/writeback.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6fc50dacd4a7949898d77cf14b7047bf17b76921/compiler%2Frustc_hir_typeck%2Fsrc%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fc50dacd4a7949898d77cf14b7047bf17b76921/compiler%2Frustc_hir_typeck%2Fsrc%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fwriteback.rs?ref=6fc50dacd4a7949898d77cf14b7047bf17b76921", "patch": "@@ -136,7 +136,10 @@ impl<'cx, 'tcx> WritebackCx<'cx, 'tcx> {\n \n     fn write_ty_to_typeck_results(&mut self, hir_id: hir::HirId, ty: Ty<'tcx>) {\n         debug!(\"write_ty_to_typeck_results({:?}, {:?})\", hir_id, ty);\n-        assert!(!ty.has_infer() && !ty.has_placeholders() && !ty.has_free_regions());\n+        assert!(\n+            !ty.has_infer() && !ty.has_placeholders() && !ty.has_free_regions(),\n+            \"{ty} can't be put into typeck results\"\n+        );\n         self.typeck_results.node_types_mut().insert(hir_id, ty);\n     }\n \n@@ -803,7 +806,11 @@ impl<'cx, 'tcx> TypeFolder<TyCtxt<'tcx>> for Resolver<'cx, 'tcx> {\n                 // We must normalize erasing regions here, since later lints\n                 // expect that types that show up in the typeck are fully\n                 // normalized.\n-                self.fcx.tcx.try_normalize_erasing_regions(self.fcx.param_env, t).unwrap_or(t)\n+                if let Ok(t) = self.fcx.tcx.try_normalize_erasing_regions(self.fcx.param_env, t) {\n+                    t\n+                } else {\n+                    EraseEarlyRegions { tcx: self.fcx.tcx }.fold_ty(t)\n+                }\n             }\n             Ok(t) => {\n                 // Do not anonymize late-bound regions"}, {"sha": "55bf38110a6d58ea6f627ac191e37d26f06551df", "filename": "src/tools/tidy/src/ui_tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6fc50dacd4a7949898d77cf14b7047bf17b76921/src%2Ftools%2Ftidy%2Fsrc%2Fui_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fc50dacd4a7949898d77cf14b7047bf17b76921/src%2Ftools%2Ftidy%2Fsrc%2Fui_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fui_tests.rs?ref=6fc50dacd4a7949898d77cf14b7047bf17b76921", "patch": "@@ -10,7 +10,7 @@ use std::path::{Path, PathBuf};\n \n const ENTRY_LIMIT: usize = 900;\n // FIXME: The following limits should be reduced eventually.\n-const ISSUES_ENTRY_LIMIT: usize = 1898;\n+const ISSUES_ENTRY_LIMIT: usize = 1896;\n const ROOT_ENTRY_LIMIT: usize = 870;\n \n const EXPECTED_TEST_FILE_EXTENSIONS: &[&str] = &["}, {"sha": "b9a53cbd4fcb28bd2106f33e733664b89b6dc56d", "filename": "tests/ui/for/issue-20605.current.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6fc50dacd4a7949898d77cf14b7047bf17b76921/tests%2Fui%2Ffor%2Fissue-20605.current.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6fc50dacd4a7949898d77cf14b7047bf17b76921/tests%2Fui%2Ffor%2Fissue-20605.current.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor%2Fissue-20605.current.stderr?ref=6fc50dacd4a7949898d77cf14b7047bf17b76921", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the size for values of type `dyn Iterator<Item = &'a mut u8>` cannot be known at compilation time\n-  --> $DIR/issue-20605.rs:2:17\n+  --> $DIR/issue-20605.rs:5:17\n    |\n LL |     for item in *things { *item = 0 }\n    |                 ^^^^^^^ the trait `IntoIterator` is not implemented for `dyn Iterator<Item = &'a mut u8>`", "previous_filename": "tests/ui/issues/issue-20605.stderr"}, {"sha": "5362a68c834a3a9017df16b623f9947a56ed282c", "filename": "tests/ui/for/issue-20605.next.stderr", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/6fc50dacd4a7949898d77cf14b7047bf17b76921/tests%2Fui%2Ffor%2Fissue-20605.next.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6fc50dacd4a7949898d77cf14b7047bf17b76921/tests%2Fui%2Ffor%2Fissue-20605.next.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor%2Fissue-20605.next.stderr?ref=6fc50dacd4a7949898d77cf14b7047bf17b76921", "patch": "@@ -0,0 +1,25 @@\n+error[E0277]: the trait bound `dyn Iterator<Item = &'a mut u8>: IntoIterator` is not satisfied\n+  --> $DIR/issue-20605.rs:5:17\n+   |\n+LL |     for item in *things { *item = 0 }\n+   |                 ^^^^^^^ the trait `IntoIterator` is not implemented for `dyn Iterator<Item = &'a mut u8>`\n+\n+error[E0277]: the size for values of type `<dyn Iterator<Item = &'a mut u8> as IntoIterator>::IntoIter` cannot be known at compilation time\n+  --> $DIR/issue-20605.rs:5:17\n+   |\n+LL |     for item in *things { *item = 0 }\n+   |                 ^^^^^^^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `Sized` is not implemented for `<dyn Iterator<Item = &'a mut u8> as IntoIterator>::IntoIter`\n+   = note: all local variables must have a statically known size\n+   = help: unsized locals are gated as an unstable feature\n+\n+error: the type `<_ as IntoIterator>::IntoIter` is not well-formed\n+  --> $DIR/issue-20605.rs:5:17\n+   |\n+LL |     for item in *things { *item = 0 }\n+   |                 ^^^^^^^\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "499271fa92fa90c04d61aa5a0b274fdea9cf9c16", "filename": "tests/ui/for/issue-20605.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6fc50dacd4a7949898d77cf14b7047bf17b76921/tests%2Fui%2Ffor%2Fissue-20605.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fc50dacd4a7949898d77cf14b7047bf17b76921/tests%2Fui%2Ffor%2Fissue-20605.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor%2Fissue-20605.rs?ref=6fc50dacd4a7949898d77cf14b7047bf17b76921", "patch": "@@ -0,0 +1,11 @@\n+// revisions: current next\n+//[next] compile-flags: -Ztrait-solver=next\n+\n+fn changer<'a>(mut things: Box<dyn Iterator<Item=&'a mut u8>>) {\n+    for item in *things { *item = 0 }\n+    //~^ ERROR the size for values of type\n+    //[next]~^^ ERROR the type `<_ as IntoIterator>::IntoIter` is not well-formed\n+    //[next]~| ERROR the trait bound `dyn Iterator<Item = &'a mut u8>: IntoIterator` is not satisfied\n+}\n+\n+fn main() {}"}, {"sha": "17b7d32ebf59b95e47fd19df991b0d92838b2fad", "filename": "tests/ui/issues/issue-20605.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6330daade9766bbf896495898c2347dc3be6da17/tests%2Fui%2Fissues%2Fissue-20605.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6330daade9766bbf896495898c2347dc3be6da17/tests%2Fui%2Fissues%2Fissue-20605.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-20605.rs?ref=6330daade9766bbf896495898c2347dc3be6da17", "patch": "@@ -1,6 +0,0 @@\n-fn changer<'a>(mut things: Box<dyn Iterator<Item=&'a mut u8>>) {\n-    for item in *things { *item = 0 }\n-//~^ ERROR the size for values of type\n-}\n-\n-fn main() {}"}]}