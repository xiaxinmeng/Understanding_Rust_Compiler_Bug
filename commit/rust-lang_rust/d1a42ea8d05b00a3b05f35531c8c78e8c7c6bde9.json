{"sha": "d1a42ea8d05b00a3b05f35531c8c78e8c7c6bde9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxYTQyZWE4ZDA1YjAwYTNiMDVmMzU1MzFjOGM3OGU4YzdjNmJkZTk=", "commit": {"author": {"name": "Wim Looman", "email": "wim@nemo157.com", "date": "2019-01-03T20:04:35Z"}, "committer": {"name": "Wim Looman", "email": "wim@nemo157.com", "date": "2019-01-03T20:04:35Z"}, "message": "Add discoverable function for converting Box<T> -> Pin<Box<T>>", "tree": {"sha": "9da5029815bb7f8682af88e9710e53b61e46dd40", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9da5029815bb7f8682af88e9710e53b61e46dd40"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1a42ea8d05b00a3b05f35531c8c78e8c7c6bde9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1a42ea8d05b00a3b05f35531c8c78e8c7c6bde9", "html_url": "https://github.com/rust-lang/rust/commit/d1a42ea8d05b00a3b05f35531c8c78e8c7c6bde9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1a42ea8d05b00a3b05f35531c8c78e8c7c6bde9/comments", "author": {"login": "Nemo157", "id": 81079, "node_id": "MDQ6VXNlcjgxMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/81079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nemo157", "html_url": "https://github.com/Nemo157", "followers_url": "https://api.github.com/users/Nemo157/followers", "following_url": "https://api.github.com/users/Nemo157/following{/other_user}", "gists_url": "https://api.github.com/users/Nemo157/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nemo157/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nemo157/subscriptions", "organizations_url": "https://api.github.com/users/Nemo157/orgs", "repos_url": "https://api.github.com/users/Nemo157/repos", "events_url": "https://api.github.com/users/Nemo157/events{/privacy}", "received_events_url": "https://api.github.com/users/Nemo157/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nemo157", "id": 81079, "node_id": "MDQ6VXNlcjgxMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/81079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nemo157", "html_url": "https://github.com/Nemo157", "followers_url": "https://api.github.com/users/Nemo157/followers", "following_url": "https://api.github.com/users/Nemo157/following{/other_user}", "gists_url": "https://api.github.com/users/Nemo157/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nemo157/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nemo157/subscriptions", "organizations_url": "https://api.github.com/users/Nemo157/orgs", "repos_url": "https://api.github.com/users/Nemo157/repos", "events_url": "https://api.github.com/users/Nemo157/events{/privacy}", "received_events_url": "https://api.github.com/users/Nemo157/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e3a5602994287cd3ea5feb1e23af9043b63abdf", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e3a5602994287cd3ea5feb1e23af9043b63abdf", "html_url": "https://github.com/rust-lang/rust/commit/5e3a5602994287cd3ea5feb1e23af9043b63abdf"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "1c459f5c4250e462c63d86d094b0d21f2e8b5e21", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d1a42ea8d05b00a3b05f35531c8c78e8c7c6bde9/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1a42ea8d05b00a3b05f35531c8c78e8c7c6bde9/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=d1a42ea8d05b00a3b05f35531c8c78e8c7c6bde9", "patch": "@@ -257,6 +257,19 @@ impl<T: ?Sized> Box<T> {\n     {\n         unsafe { &mut *Box::into_raw(b) }\n     }\n+\n+    /// Converts a `Box<T>` into a `Pin<Box<T>>`\n+    ///\n+    /// This conversion does not allocate on the heap and happens in place.\n+    ///\n+    /// This is also available via [`From`].\n+    #[unstable(feature = \"box_into_pin\", issue = \"0\")]\n+    pub fn into_pin(boxed: Box<T>) -> Pin<Box<T>> {\n+        // It's not possible to move or replace the insides of a `Pin<Box<T>>`\n+        // when `T: !Unpin`,  so it's safe to pin it directly without any\n+        // additional requirements.\n+        unsafe { Pin::new_unchecked(boxed) }\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -456,10 +469,7 @@ impl<T: ?Sized> From<Box<T>> for Pin<Box<T>> {\n     ///\n     /// This conversion does not allocate on the heap and happens in place.\n     fn from(boxed: Box<T>) -> Self {\n-        // It's not possible to move or replace the insides of a `Pin<Box<T>>`\n-        // when `T: !Unpin`,  so it's safe to pin it directly without any\n-        // additional requirements.\n-        unsafe { Pin::new_unchecked(boxed) }\n+        Box::into_pin(boxed)\n     }\n }\n "}]}