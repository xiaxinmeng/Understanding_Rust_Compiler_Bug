{"sha": "bdc92f10e73b2e22574d8c7627baebb5013efcbf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkYzkyZjEwZTczYjJlMjI1NzRkOGM3NjI3YmFlYmI1MDEzZWZjYmY=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-08-10T19:18:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-10T19:18:34Z"}, "message": "Rollup merge of #87636 - Kixiron:unzip-option, r=scottmcm\n\nAdded the `Option::unzip()` method\n\n* Adds the `Option::unzip()` method to turn an `Option<(T, U)>` into `(Option<T>, Option<U>)` under the `unzip_option` feature\n* Adds tests for both `Option::unzip()` and `Option::zip()`, I noticed that `.zip()` didn't have any\n* Adds `#[inline]` to a few of `Option`'s methods that were missing it", "tree": {"sha": "9947d50b812befa63fdadc555cbdd17b83ed4745", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9947d50b812befa63fdadc555cbdd17b83ed4745"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bdc92f10e73b2e22574d8c7627baebb5013efcbf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhEtELCRBK7hj4Ov3rIwAAJzIIAEIFaEcuUbqNeWujx8YZ1+6P\nzBEnRtBm+n8QUjZvvrwkc4NQyxm3qukX/tYB60xh/o0C3O2T5rp/bQVFGrCEOwmp\nrhCrcvI3uYRKyR3vVS/FNGoRmXOSv39NNnK+t/q5MfE5CJHgrHRE0L+mxCUQ/eEb\nzb1v4C/hnxIiNTwRMQugQvtl5dOiSFtYLHSm52CdicedLHi4cYtwzFXDRgMe6/Da\n7kWwYiMpSrqO6Y52Tbp94Qbek18S0EUSac90ozFw4lfOg1nKC7E8wIG6fB3LAzeD\nNtESHRPIIN/y1Q7EjRGTZaoBFQsvITY1Y54nZZRI/cmmkHLbOIk7CD3YjlQECrI=\n=BZVM\n-----END PGP SIGNATURE-----\n", "payload": "tree 9947d50b812befa63fdadc555cbdd17b83ed4745\nparent 43b7cad3e548b1794d3ea5ddcfbfa93c09cbe346\nparent ab2c5902ca404cb21fc9fa8bd6f5c52f33d92949\nauthor Yuki Okushi <jtitor@2k36.org> 1628623114 +0900\ncommitter GitHub <noreply@github.com> 1628623114 +0900\n\nRollup merge of #87636 - Kixiron:unzip-option, r=scottmcm\n\nAdded the `Option::unzip()` method\n\n* Adds the `Option::unzip()` method to turn an `Option<(T, U)>` into `(Option<T>, Option<U>)` under the `unzip_option` feature\n* Adds tests for both `Option::unzip()` and `Option::zip()`, I noticed that `.zip()` didn't have any\n* Adds `#[inline]` to a few of `Option`'s methods that were missing it\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bdc92f10e73b2e22574d8c7627baebb5013efcbf", "html_url": "https://github.com/rust-lang/rust/commit/bdc92f10e73b2e22574d8c7627baebb5013efcbf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bdc92f10e73b2e22574d8c7627baebb5013efcbf/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43b7cad3e548b1794d3ea5ddcfbfa93c09cbe346", "url": "https://api.github.com/repos/rust-lang/rust/commits/43b7cad3e548b1794d3ea5ddcfbfa93c09cbe346", "html_url": "https://github.com/rust-lang/rust/commit/43b7cad3e548b1794d3ea5ddcfbfa93c09cbe346"}, {"sha": "ab2c5902ca404cb21fc9fa8bd6f5c52f33d92949", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab2c5902ca404cb21fc9fa8bd6f5c52f33d92949", "html_url": "https://github.com/rust-lang/rust/commit/ab2c5902ca404cb21fc9fa8bd6f5c52f33d92949"}], "stats": {"total": 62, "additions": 61, "deletions": 1}, "files": [{"sha": "3f9f04606b36a5f669b8cc999af47342f294ad68", "filename": "library/core/src/option.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/bdc92f10e73b2e22574d8c7627baebb5013efcbf/library%2Fcore%2Fsrc%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdc92f10e73b2e22574d8c7627baebb5013efcbf/library%2Fcore%2Fsrc%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Foption.rs?ref=bdc92f10e73b2e22574d8c7627baebb5013efcbf", "patch": "@@ -1399,6 +1399,33 @@ impl<T> Option<T> {\n     }\n }\n \n+impl<T, U> Option<(T, U)> {\n+    /// Unzips an option containing a tuple of two options\n+    ///\n+    /// If `self` is `Some((a, b))` this method returns `(Some(a), Some(b))`.\n+    /// Otherwise, `(None, None)` is returned.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(unzip_option)]\n+    ///\n+    /// let x = Some((1, \"hi\"));\n+    /// let y = None::<(u8, u32)>;\n+    ///\n+    /// assert_eq!(x.unzip(), (Some(1), Some(\"hi\")));\n+    /// assert_eq!(y.unzip(), (None, None));\n+    /// ```\n+    #[inline]\n+    #[unstable(feature = \"unzip_option\", issue = \"87800\", reason = \"recently added\")]\n+    pub const fn unzip(self) -> (Option<T>, Option<U>) {\n+        match self {\n+            Some((a, b)) => (Some(a), Some(b)),\n+            None => (None, None),\n+        }\n+    }\n+}\n+\n impl<T: Copy> Option<&T> {\n     /// Maps an `Option<&T>` to an `Option<T>` by copying the contents of the\n     /// option."}, {"sha": "13f483f19b770fcbc54a2e2fb1a644b5fb45205b", "filename": "library/core/tests/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bdc92f10e73b2e22574d8c7627baebb5013efcbf/library%2Fcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdc92f10e73b2e22574d8c7627baebb5013efcbf/library%2Fcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Flib.rs?ref=bdc92f10e73b2e22574d8c7627baebb5013efcbf", "patch": "@@ -68,6 +68,7 @@\n #![feature(slice_group_by)]\n #![feature(trusted_random_access)]\n #![feature(unsize)]\n+#![feature(unzip_option)]\n #![deny(unsafe_op_in_unsafe_fn)]\n \n extern crate test;"}, {"sha": "cd8fdebe36a05a1620ee90daf9417f1e45575afd", "filename": "library/core/tests/option.rs", "status": "modified", "additions": 33, "deletions": 1, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/bdc92f10e73b2e22574d8c7627baebb5013efcbf/library%2Fcore%2Ftests%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdc92f10e73b2e22574d8c7627baebb5013efcbf/library%2Fcore%2Ftests%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Foption.rs?ref=bdc92f10e73b2e22574d8c7627baebb5013efcbf", "patch": "@@ -399,11 +399,43 @@ fn test_unwrap_drop() {\n }\n \n #[test]\n-pub fn option_ext() {\n+fn option_ext() {\n     let thing = \"{{ f }}\";\n     let f = thing.find(\"{{\");\n \n     if f.is_none() {\n         println!(\"None!\");\n     }\n }\n+\n+#[test]\n+fn zip_options() {\n+    let x = Some(10);\n+    let y = Some(\"foo\");\n+    let z: Option<usize> = None;\n+\n+    assert_eq!(x.zip(y), Some((10, \"foo\")));\n+    assert_eq!(x.zip(z), None);\n+    assert_eq!(z.zip(x), None);\n+}\n+\n+#[test]\n+fn unzip_options() {\n+    let x = Some((10, \"foo\"));\n+    let y = None::<(bool, i32)>;\n+\n+    assert_eq!(x.unzip(), (Some(10), Some(\"foo\")));\n+    assert_eq!(y.unzip(), (None, None));\n+}\n+\n+#[test]\n+fn zip_unzip_roundtrip() {\n+    let x = Some(10);\n+    let y = Some(\"foo\");\n+\n+    let z = x.zip(y);\n+    assert_eq!(z, Some((10, \"foo\")));\n+\n+    let a = z.unzip();\n+    assert_eq!(a, (x, y));\n+}"}]}