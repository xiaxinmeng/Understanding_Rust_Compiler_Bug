{"sha": "64cca3ab2dfa7643fe6d67505001c43f7e8e2868", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0Y2NhM2FiMmRmYTc2NDNmZTZkNjc1MDUwMDFjNDNmN2U4ZTI4Njg=", "commit": {"author": {"name": "Pavel Sountsov", "email": "siege@google.com", "date": "2016-05-08T17:08:09Z"}, "committer": {"name": "SiegeLord", "email": "slabode@aim.com", "date": "2016-05-10T15:22:55Z"}, "message": "Rename after_ast to after_hir_lowering.", "tree": {"sha": "eb9c8cf0d8973d09f6fdac15fc1560b9576b31e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb9c8cf0d8973d09f6fdac15fc1560b9576b31e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64cca3ab2dfa7643fe6d67505001c43f7e8e2868", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64cca3ab2dfa7643fe6d67505001c43f7e8e2868", "html_url": "https://github.com/rust-lang/rust/commit/64cca3ab2dfa7643fe6d67505001c43f7e8e2868", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64cca3ab2dfa7643fe6d67505001c43f7e8e2868/comments", "author": {"login": "SiegeLordEx", "id": 43966695, "node_id": "MDQ6VXNlcjQzOTY2Njk1", "avatar_url": "https://avatars.githubusercontent.com/u/43966695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SiegeLordEx", "html_url": "https://github.com/SiegeLordEx", "followers_url": "https://api.github.com/users/SiegeLordEx/followers", "following_url": "https://api.github.com/users/SiegeLordEx/following{/other_user}", "gists_url": "https://api.github.com/users/SiegeLordEx/gists{/gist_id}", "starred_url": "https://api.github.com/users/SiegeLordEx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SiegeLordEx/subscriptions", "organizations_url": "https://api.github.com/users/SiegeLordEx/orgs", "repos_url": "https://api.github.com/users/SiegeLordEx/repos", "events_url": "https://api.github.com/users/SiegeLordEx/events{/privacy}", "received_events_url": "https://api.github.com/users/SiegeLordEx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SiegeLord", "id": 480550, "node_id": "MDQ6VXNlcjQ4MDU1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/480550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SiegeLord", "html_url": "https://github.com/SiegeLord", "followers_url": "https://api.github.com/users/SiegeLord/followers", "following_url": "https://api.github.com/users/SiegeLord/following{/other_user}", "gists_url": "https://api.github.com/users/SiegeLord/gists{/gist_id}", "starred_url": "https://api.github.com/users/SiegeLord/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SiegeLord/subscriptions", "organizations_url": "https://api.github.com/users/SiegeLord/orgs", "repos_url": "https://api.github.com/users/SiegeLord/repos", "events_url": "https://api.github.com/users/SiegeLord/events{/privacy}", "received_events_url": "https://api.github.com/users/SiegeLord/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "105aa8c30fc97fc7bfadc23bbf35eee412e164cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/105aa8c30fc97fc7bfadc23bbf35eee412e164cb", "html_url": "https://github.com/rust-lang/rust/commit/105aa8c30fc97fc7bfadc23bbf35eee412e164cb"}], "stats": {"total": 38, "additions": 19, "deletions": 19}, "files": [{"sha": "96aa0bb5de57900a3bcc08b4266dce0c69502fb4", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/64cca3ab2dfa7643fe6d67505001c43f7e8e2868/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64cca3ab2dfa7643fe6d67505001c43f7e8e2868/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=64cca3ab2dfa7643fe6d67505001c43f7e8e2868", "patch": "@@ -188,9 +188,9 @@ pub fn compile_input(sess: &Session,\n \n         {\n             let _ignore = hir_map.dep_graph.in_ignore();\n-            controller_entry_point!(after_ast,\n+            controller_entry_point!(after_hir_lowering,\n                                     sess,\n-                                    CompileState::state_after_ast(input,\n+                                    CompileState::state_after_hir_lowering(input,\n                                                                   sess,\n                                                                   outdir,\n                                                                   output,\n@@ -321,7 +321,7 @@ pub struct CompileController<'a> {\n     pub after_parse: PhaseController<'a>,\n     pub after_expand: PhaseController<'a>,\n     pub after_write_deps: PhaseController<'a>,\n-    pub after_ast: PhaseController<'a>,\n+    pub after_hir_lowering: PhaseController<'a>,\n     pub after_analysis: PhaseController<'a>,\n     pub after_llvm: PhaseController<'a>,\n \n@@ -334,7 +334,7 @@ impl<'a> CompileController<'a> {\n             after_parse: PhaseController::basic(),\n             after_expand: PhaseController::basic(),\n             after_write_deps: PhaseController::basic(),\n-            after_ast: PhaseController::basic(),\n+            after_hir_lowering: PhaseController::basic(),\n             after_analysis: PhaseController::basic(),\n             after_llvm: PhaseController::basic(),\n             make_glob_map: resolve::MakeGlobMap::No,\n@@ -458,19 +458,19 @@ impl<'a, 'b, 'ast, 'tcx> CompileState<'a, 'b, 'ast, 'tcx> {\n         }\n     }\n \n-    fn state_after_ast(input: &'a Input,\n-                              session: &'ast Session,\n-                              out_dir: &'a Option<PathBuf>,\n-                              out_file: &'a Option<PathBuf>,\n-                              arenas: &'ast ty::CtxtArenas<'ast>,\n-                              cstore: &'a CStore,\n-                              hir_map: &'a hir_map::Map<'ast>,\n-                              analysis: &'a ty::CrateAnalysis,\n-                              resolutions: &'a Resolutions,\n-                              krate: &'a ast::Crate,\n-                              hir_crate: &'a hir::Crate,\n-                              crate_name: &'a str)\n-                              -> CompileState<'a, 'b, 'ast, 'tcx> {\n+    fn state_after_hir_lowering(input: &'a Input,\n+                                session: &'ast Session,\n+                                out_dir: &'a Option<PathBuf>,\n+                                out_file: &'a Option<PathBuf>,\n+                                arenas: &'ast ty::CtxtArenas<'ast>,\n+                                cstore: &'a CStore,\n+                                hir_map: &'a hir_map::Map<'ast>,\n+                                analysis: &'a ty::CrateAnalysis,\n+                                resolutions: &'a Resolutions,\n+                                krate: &'a ast::Crate,\n+                                hir_crate: &'a hir::Crate,\n+                                crate_name: &'a str)\n+                                -> CompileState<'a, 'b, 'ast, 'tcx> {\n         CompileState {\n             crate_name: Some(crate_name),\n             arenas: Some(arenas),"}, {"sha": "796cf82c7751108405e9806abe82c48614420c6d", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/64cca3ab2dfa7643fe6d67505001c43f7e8e2868/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64cca3ab2dfa7643fe6d67505001c43f7e8e2868/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=64cca3ab2dfa7643fe6d67505001c43f7e8e2868", "patch": "@@ -461,12 +461,12 @@ impl<'a> CompilerCalls<'a> for RustcDefaultCalls {\n \n         if let Some((ppm, opt_uii)) = parse_pretty(sess, matches) {\n             if ppm.needs_ast_map(&opt_uii) {\n-                control.after_ast.stop = Compilation::Stop;\n+                control.after_hir_lowering.stop = Compilation::Stop;\n \n                 control.after_parse.callback = box move |state| {\n                     state.krate = Some(pretty::fold_crate(state.krate.take().unwrap(), ppm));\n                 };\n-                control.after_ast.callback = box move |state| {\n+                control.after_hir_lowering.callback = box move |state| {\n                     pretty::print_after_ast(state.session,\n                                             state.ast_map.unwrap(),\n                                             state.analysis.unwrap(),"}]}