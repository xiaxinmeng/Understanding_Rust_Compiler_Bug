{"sha": "ff3b382b14a329e597fa8f714f75c40344522ebb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmM2IzODJiMTRhMzI5ZTU5N2ZhOGY3MTRmNzVjNDAzNDQ1MjJlYmI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-04-16T16:35:42Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-04-16T16:36:03Z"}, "message": "ReadBytesAsPointer is always supported", "tree": {"sha": "1cd64a388b104f48991e27259984f926e020f194", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1cd64a388b104f48991e27259984f926e020f194"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff3b382b14a329e597fa8f714f75c40344522ebb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff3b382b14a329e597fa8f714f75c40344522ebb", "html_url": "https://github.com/rust-lang/rust/commit/ff3b382b14a329e597fa8f714f75c40344522ebb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff3b382b14a329e597fa8f714f75c40344522ebb/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d481e0818cb13bce75cb0b85c4343ed5c60862c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/d481e0818cb13bce75cb0b85c4343ed5c60862c9", "html_url": "https://github.com/rust-lang/rust/commit/d481e0818cb13bce75cb0b85c4343ed5c60862c9"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "ff52e2385e476508a59d4093f8af98b4d235bb74", "filename": "src/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff3b382b14a329e597fa8f714f75c40344522ebb/src%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff3b382b14a329e597fa8f714f75c40344522ebb/src%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdiagnostics.rs?ref=ff3b382b14a329e597fa8f714f75c40344522ebb", "patch": "@@ -92,6 +92,8 @@ pub fn report_error<'tcx, 'mir>(\n             let helps = match e.kind {\n                 Unsupported(UnsupportedOpInfo::NoMirFor(..)) =>\n                     vec![format!(\"make sure to use a Miri sysroot, which you can prepare with `cargo miri setup`\")],\n+                Unsupported(UnsupportedOpInfo::ReadBytesAsPointer) =>\n+                    panic!(\"`ReadBytesAsPointer` cannot be raised by Miri\"),\n                 Unsupported(_) =>\n                     vec![format!(\"this is likely not a bug in the program; it indicates that the program performed an operation that the interpreter does not support\")],\n                 UndefinedBehavior(UndefinedBehaviorInfo::AlignmentCheckFailed { .. }) =>"}]}