{"sha": "acd6014b806cdb2600218e63aa599012bb2507e6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjZDYwMTRiODA2Y2RiMjYwMDIxOGU2M2FhNTk5MDEyYmIyNTA3ZTY=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-11-25T21:45:24Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-03-09T18:09:35Z"}, "message": "Remove hir::Local::attrs.", "tree": {"sha": "01288ebfb59a0ebfae63d53727fbff46b8302d07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01288ebfb59a0ebfae63d53727fbff46b8302d07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/acd6014b806cdb2600218e63aa599012bb2507e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/acd6014b806cdb2600218e63aa599012bb2507e6", "html_url": "https://github.com/rust-lang/rust/commit/acd6014b806cdb2600218e63aa599012bb2507e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/acd6014b806cdb2600218e63aa599012bb2507e6/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e721b144559d1eab00178bf4cc06ff969a118d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e721b144559d1eab00178bf4cc06ff969a118d7", "html_url": "https://github.com/rust-lang/rust/commit/3e721b144559d1eab00178bf4cc06ff969a118d7"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e8646695e0b232ae9156a8452579e248b42da50c", "filename": "clippy_lints/src/returns.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/acd6014b806cdb2600218e63aa599012bb2507e6/clippy_lints%2Fsrc%2Freturns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acd6014b806cdb2600218e63aa599012bb2507e6/clippy_lints%2Fsrc%2Freturns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freturns.rs?ref=acd6014b806cdb2600218e63aa599012bb2507e6", "patch": "@@ -81,7 +81,7 @@ impl<'tcx> LateLintPass<'tcx> for Return {\n             if let Some(stmt) = block.stmts.iter().last();\n             if let StmtKind::Local(local) = &stmt.kind;\n             if local.ty.is_none();\n-            if local.attrs.is_empty();\n+            if cx.tcx.hir().attrs(local.hir_id).is_empty();\n             if let Some(initexpr) = &local.init;\n             if let PatKind::Binding(.., ident, _) = local.pat.kind;\n             if let ExprKind::Path(qpath) = &retexpr.kind;"}]}