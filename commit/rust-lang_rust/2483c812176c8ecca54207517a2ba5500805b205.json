{"sha": "2483c812176c8ecca54207517a2ba5500805b205", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0ODNjODEyMTc2YzhlY2NhNTQyMDc1MTdhMmJhNTUwMDgwNWIyMDU=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2018-05-22T11:56:37Z"}, "committer": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2018-05-22T11:56:37Z"}, "message": "Deduplicate match arms", "tree": {"sha": "15912bef0ac46b1859724d5b1c2fe1e776235168", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/15912bef0ac46b1859724d5b1c2fe1e776235168"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2483c812176c8ecca54207517a2ba5500805b205", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJgBAABCgBKFiEEvpMjxK4/cnPNfesJHVy0/Fl8MAQFAlsEBXUsHGdpdC1uby1y\nZXBseS05ODc5MTY1NzE2NDc5NDEzMTMxQG9saS1vYmsuZGUACgkQHVy0/Fl8MATV\nPQ/+JXIbeHCJfpFLeVMUOutGYZJwMpEntfnVkjs1YiWr/E9BGPUaKEoxouapUvWq\nA5UGL0GqGITTjr0cCtTGgS+4Obtam2uYXmW2DF2cfFDkmCk7SQj7Eb4NPizQpdSE\nGP/6fGJG5XdOZwnDCFz9Mr6RWaYZ23QJ0pPMav6ZQhDSjji+Z7JObKJR5AMCYsBj\nw+UHS2/wC7y74/QYXUzl33ShoWI25LDHcTqI1JorPCshsi15gVtmPyLIedXLM3vR\nfn6cmMuw8TF3sN75xzBI1Q4UFiVsFOskuykxH5Tae7WU7nKIjlEj0a6L/K2DPNmW\n3i+Ih2tzkL2+tOJzl+CM9K6v3adxZ8tECEYC8XgRvmN8KUrKXNKRRtt5c8rSkiP8\nXE268JMSFyXINKgNrsTAQ6Bg1OpvnPNVvKXwFLg7xLM0HLFIMdAe21TVMvAKzilF\nWHaJzFHhOevmbURcXGYIwEb6tUyIrbUgSLqiXQ/tJ2uwiYpqqvljmhx8r/I6ekVo\noEGD43QLxVZUfyjtYcyLKADWce+7gACxRxrs9WNU4OuV9KT/FFtN2nU/v+QGhvwf\nBM9q6Wos3ON8JaGEWsHNyD3zTzQqO7OqH0IbUvBS9ByNnreLORshwSsWRx7/RZoN\nUc0n0n/wkzdQf1408ChhLK+MYCMHwxZ+B24j0IvRx5KlJn4=\n=1LsO\n-----END PGP SIGNATURE-----", "payload": "tree 15912bef0ac46b1859724d5b1c2fe1e776235168\nparent 61c58c2f6710913a315c4c13dfc3b3cb088af18a\nauthor Oliver Schneider <git-no-reply-9879165716479413131@oli-obk.de> 1526990197 +0200\ncommitter Oliver Schneider <git-no-reply-9879165716479413131@oli-obk.de> 1526990197 +0200\n\nDeduplicate match arms\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2483c812176c8ecca54207517a2ba5500805b205", "html_url": "https://github.com/rust-lang/rust/commit/2483c812176c8ecca54207517a2ba5500805b205", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2483c812176c8ecca54207517a2ba5500805b205/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61c58c2f6710913a315c4c13dfc3b3cb088af18a", "url": "https://api.github.com/repos/rust-lang/rust/commits/61c58c2f6710913a315c4c13dfc3b3cb088af18a", "html_url": "https://github.com/rust-lang/rust/commit/61c58c2f6710913a315c4c13dfc3b3cb088af18a"}], "stats": {"total": 11, "additions": 4, "deletions": 7}, "files": [{"sha": "999e3d89fc7e4f3a666fba6f4362c50e9bd6c7eb", "filename": "src/librustc_mir/transform/qualify_consts.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/2483c812176c8ecca54207517a2ba5500805b205/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2483c812176c8ecca54207517a2ba5500805b205/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs?ref=2483c812176c8ecca54207517a2ba5500805b205", "patch": "@@ -293,14 +293,11 @@ impl<'a, 'tcx> Qualifier<'a, 'tcx, 'tcx> {\n                 debug!(\"store to var {:?}\", index);\n                 self.local_qualif[index] = Some(self.qualif);\n             }\n-            Place::Local(index) if self.mir.local_kind(index) == LocalKind::Temp => {\n-                debug!(\"store to temp {:?}\", index);\n+            Place::Local(index) if self.mir.local_kind(index) == LocalKind::Temp ||\n+                                   self.mir.local_kind(index) == LocalKind::ReturnPointer => {\n+                debug!(\"store to {:?} (temp or return pointer)\", index);\n                 store(&mut self.local_qualif[index])\n             }\n-            Place::Local(index) if self.mir.local_kind(index) == LocalKind::ReturnPointer => {\n-                debug!(\"store to return place {:?}\", index);\n-                store(&mut self.local_qualif[RETURN_PLACE])\n-            }\n \n             Place::Projection(box Projection {\n                 base: Place::Local(index),\n@@ -772,7 +769,7 @@ impl<'a, 'tcx> Visitor<'tcx> for Qualifier<'a, 'tcx, 'tcx> {\n                     }\n                     if let Place::Local(local) = *place {\n                         if self.mir.local_kind(local) == LocalKind::Temp {\n-                            if let Some(qualif) = self.temp_qualif[local] {\n+                            if let Some(qualif) = self.local_qualif[local] {\n                                 // `forbidden_mut` is false, so we can safely ignore\n                                 // `MUTABLE_INTERIOR` from the local's qualifications.\n                                 // This allows borrowing fields which don't have"}]}