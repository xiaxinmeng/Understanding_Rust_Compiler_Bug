{"sha": "06bb1ff1b58c8663493d2c3c8f3eee7a0cce46cc", "node_id": "C_kwDOAAsO6NoAKDA2YmIxZmYxYjU4Yzg2NjM0OTNkMmMzYzhmM2VlZTdhMGNjZTQ2Y2M", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-10-30T18:30:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-30T18:30:27Z"}, "message": "Rollup merge of #90375 - yanok:master, r=lcnr\n\nUse `is_global` in `candidate_should_be_dropped_in_favor_of`\n\nThis manifistated in #90195 with compiler being unable to keep\none candidate for a trait impl, if where is a global impl and more\nthan one trait bound in the where clause.\n\nBefore #87280 `candidate_should_be_dropped_in_favor_of` was using\n`TypeFoldable::is_global()` that was enough to discard the two\n`ParamCandidate`s. But #87280 changed it to use\n`TypeFoldable::is_known_global()` instead, which is pessimistic, so\nnow the compiler drops the global impl instead (because\n`is_known_global` is not sure) and then can't decide between the\ntwo `ParamCandidate`s.\n\nSwitching it to use `is_global` again solves the issue.\n\nFixes #90195.", "tree": {"sha": "ebf8f663487f3823c6fd21d7abb8278355a77dc0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ebf8f663487f3823c6fd21d7abb8278355a77dc0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/06bb1ff1b58c8663493d2c3c8f3eee7a0cce46cc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhfY9ECRBK7hj4Ov3rIwAApxIIALFGOrQah9jDbPRcT+QVxauJ\n///bqbcWK7bdX4g5eQZz7YRiPQFaaCH6vHj0I6bOHnNh+T3ZYMQXXXNGpcDCRgPL\nIitaaM8RlW6JSws2/yqhPnzFfjgWjeq5fBIPUxiwB2OHR8i3aRWaq7ROg1qwZbs1\n8LXZYW2Cw3EkMaVq6VbHdwI4gLGuqlEiumVfQEvi4yIqLAtxo7WOqpVOlj+3pCy7\nKdulwQoabzTPBIWWu9lE4dXdzZVc6Fp0z7e4do5aEfv7y3oNjblc7LsxaOBrqq4j\n+r/JLPqDBrxHAIME7hRvoLnqj7PEl2YljSFT4gxjoGje1ODJ3l98aEQYGms/GbI=\n=GhlA\n-----END PGP SIGNATURE-----\n", "payload": "tree ebf8f663487f3823c6fd21d7abb8278355a77dc0\nparent 1a1f525bb0d9897673b2445122ffd6f7aa265c9e\nparent 9a0a622a042d0ed04ad349d8bb778e40dd417a16\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1635618627 +0200\ncommitter GitHub <noreply@github.com> 1635618627 +0200\n\nRollup merge of #90375 - yanok:master, r=lcnr\n\nUse `is_global` in `candidate_should_be_dropped_in_favor_of`\n\nThis manifistated in #90195 with compiler being unable to keep\none candidate for a trait impl, if where is a global impl and more\nthan one trait bound in the where clause.\n\nBefore #87280 `candidate_should_be_dropped_in_favor_of` was using\n`TypeFoldable::is_global()` that was enough to discard the two\n`ParamCandidate`s. But #87280 changed it to use\n`TypeFoldable::is_known_global()` instead, which is pessimistic, so\nnow the compiler drops the global impl instead (because\n`is_known_global` is not sure) and then can't decide between the\ntwo `ParamCandidate`s.\n\nSwitching it to use `is_global` again solves the issue.\n\nFixes #90195.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/06bb1ff1b58c8663493d2c3c8f3eee7a0cce46cc", "html_url": "https://github.com/rust-lang/rust/commit/06bb1ff1b58c8663493d2c3c8f3eee7a0cce46cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/06bb1ff1b58c8663493d2c3c8f3eee7a0cce46cc/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a1f525bb0d9897673b2445122ffd6f7aa265c9e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a1f525bb0d9897673b2445122ffd6f7aa265c9e", "html_url": "https://github.com/rust-lang/rust/commit/1a1f525bb0d9897673b2445122ffd6f7aa265c9e"}, {"sha": "9a0a622a042d0ed04ad349d8bb778e40dd417a16", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a0a622a042d0ed04ad349d8bb778e40dd417a16", "html_url": "https://github.com/rust-lang/rust/commit/9a0a622a042d0ed04ad349d8bb778e40dd417a16"}], "stats": {"total": 46, "additions": 44, "deletions": 2}, "files": [{"sha": "60676ad3f4f606b9cec87aec869d4083b539f098", "filename": "compiler/rustc_trait_selection/src/traits/select/mod.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/06bb1ff1b58c8663493d2c3c8f3eee7a0cce46cc/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06bb1ff1b58c8663493d2c3c8f3eee7a0cce46cc/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs?ref=06bb1ff1b58c8663493d2c3c8f3eee7a0cce46cc", "patch": "@@ -1547,8 +1547,9 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n         // Check if a bound would previously have been removed when normalizing\n         // the param_env so that it can be given the lowest priority. See\n         // #50825 for the motivation for this.\n-        let is_global =\n-            |cand: &ty::PolyTraitRef<'_>| cand.is_known_global() && !cand.has_late_bound_regions();\n+        let is_global = |cand: &ty::PolyTraitRef<'tcx>| {\n+            cand.is_global(self.infcx.tcx) && !cand.has_late_bound_regions()\n+        };\n \n         // (*) Prefer `BuiltinCandidate { has_nested: false }`, `PointeeCandidate`,\n         // and `DiscriminantKindCandidate` to anything else."}, {"sha": "b739dc46e4e8b7b34369ce8ce61d618d796135ac", "filename": "src/test/ui/traits/issue-90195-2.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/06bb1ff1b58c8663493d2c3c8f3eee7a0cce46cc/src%2Ftest%2Fui%2Ftraits%2Fissue-90195-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06bb1ff1b58c8663493d2c3c8f3eee7a0cce46cc/src%2Ftest%2Fui%2Ftraits%2Fissue-90195-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fissue-90195-2.rs?ref=06bb1ff1b58c8663493d2c3c8f3eee7a0cce46cc", "patch": "@@ -0,0 +1,20 @@\n+// check-pass\n+pub trait Archive {\n+    type Archived;\n+}\n+\n+impl<T> Archive for Option<T> {\n+    type Archived = ();\n+}\n+pub type Archived<T> = <T as Archive>::Archived;\n+\n+pub trait Deserialize<D> {}\n+\n+const ARRAY_SIZE: usize = 32;\n+impl<__D> Deserialize<__D> for ()\n+where\n+    Option<[u8; ARRAY_SIZE]>: Archive,\n+    Archived<Option<[u8; ARRAY_SIZE]>>: Deserialize<__D>,\n+{\n+}\n+fn main() {}"}, {"sha": "543c9f197e1bb92e8d66603009bf88a67962858c", "filename": "src/test/ui/traits/issue-90195.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/06bb1ff1b58c8663493d2c3c8f3eee7a0cce46cc/src%2Ftest%2Fui%2Ftraits%2Fissue-90195.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06bb1ff1b58c8663493d2c3c8f3eee7a0cce46cc/src%2Ftest%2Fui%2Ftraits%2Fissue-90195.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fissue-90195.rs?ref=06bb1ff1b58c8663493d2c3c8f3eee7a0cce46cc", "patch": "@@ -0,0 +1,21 @@\n+// check-pass\n+pub trait Archive {\n+    type Archived;\n+}\n+\n+impl<T> Archive for Option<T> {\n+    type Archived = ();\n+}\n+pub type Archived<T> = <T as Archive>::Archived;\n+\n+pub trait Deserialize<D> {}\n+\n+const ARRAY_SIZE: usize = 32;\n+impl<__D> Deserialize<__D> for ()\n+where\n+    Option<[u8; ARRAY_SIZE]>: Archive,\n+    Option<[u8; ARRAY_SIZE]>: Archive,\n+    Archived<Option<[u8; ARRAY_SIZE]>>: Deserialize<__D>,\n+{\n+}\n+fn main() {}"}]}