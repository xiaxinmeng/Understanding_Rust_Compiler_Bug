{"sha": "7d466570f47f67819edb556ccd3658b9073ec088", "node_id": "C_kwDOAAsO6NoAKDdkNDY2NTcwZjQ3ZjY3ODE5ZWRiNTU2Y2NkMzY1OGI5MDczZWMwODg", "commit": {"author": {"name": "Junliang HU", "email": "jlhu@cse.cuhk.edu.hk", "date": "2022-12-09T13:11:46Z"}, "committer": {"name": "Junliang HU", "email": "jlhu@cse.cuhk.edu.hk", "date": "2022-12-09T13:35:06Z"}, "message": "Add numThreads in config to avoid spawning lots of threads every time", "tree": {"sha": "569b63f3789812765cd21b86ca48df0dfbb97a9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/569b63f3789812765cd21b86ca48df0dfbb97a9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d466570f47f67819edb556ccd3658b9073ec088", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d466570f47f67819edb556ccd3658b9073ec088", "html_url": "https://github.com/rust-lang/rust/commit/7d466570f47f67819edb556ccd3658b9073ec088", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d466570f47f67819edb556ccd3658b9073ec088/comments", "author": {"login": "vtta", "id": 41831480, "node_id": "MDQ6VXNlcjQxODMxNDgw", "avatar_url": "https://avatars.githubusercontent.com/u/41831480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vtta", "html_url": "https://github.com/vtta", "followers_url": "https://api.github.com/users/vtta/followers", "following_url": "https://api.github.com/users/vtta/following{/other_user}", "gists_url": "https://api.github.com/users/vtta/gists{/gist_id}", "starred_url": "https://api.github.com/users/vtta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vtta/subscriptions", "organizations_url": "https://api.github.com/users/vtta/orgs", "repos_url": "https://api.github.com/users/vtta/repos", "events_url": "https://api.github.com/users/vtta/events{/privacy}", "received_events_url": "https://api.github.com/users/vtta/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vtta", "id": 41831480, "node_id": "MDQ6VXNlcjQxODMxNDgw", "avatar_url": "https://avatars.githubusercontent.com/u/41831480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vtta", "html_url": "https://github.com/vtta", "followers_url": "https://api.github.com/users/vtta/followers", "following_url": "https://api.github.com/users/vtta/following{/other_user}", "gists_url": "https://api.github.com/users/vtta/gists{/gist_id}", "starred_url": "https://api.github.com/users/vtta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vtta/subscriptions", "organizations_url": "https://api.github.com/users/vtta/orgs", "repos_url": "https://api.github.com/users/vtta/repos", "events_url": "https://api.github.com/users/vtta/events{/privacy}", "received_events_url": "https://api.github.com/users/vtta/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e8a54d0f68702cf7981c8299357838eb0f4d5b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e8a54d0f68702cf7981c8299357838eb0f4d5b2", "html_url": "https://github.com/rust-lang/rust/commit/6e8a54d0f68702cf7981c8299357838eb0f4d5b2"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "a90775933c241a06c3808bcdd728bf306869d50d", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7d466570f47f67819edb556ccd3658b9073ec088/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d466570f47f67819edb556ccd3658b9073ec088/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=7d466570f47f67819edb556ccd3658b9073ec088", "patch": "@@ -403,6 +403,9 @@ config_data! {\n         /// Whether to show `can't find Cargo.toml` error message.\n         notifications_cargoTomlNotFound: bool      = \"true\",\n \n+        /// How many worker threads in the main loop. The default `null` means to pick automatically.\n+        numThreads: Option<usize> = \"null\",\n+\n         /// Expand attribute macros. Requires `#rust-analyzer.procMacro.enable#` to be set.\n         procMacro_attributes_enable: bool = \"true\",\n         /// Enable support for procedural macros, implies `#rust-analyzer.cargo.buildScripts.enable#`.\n@@ -1454,6 +1457,10 @@ impl Config {\n         }\n     }\n \n+    pub fn main_loop_num_threads(&self) -> usize {\n+        self.data.numThreads.unwrap_or(num_cpus::get_physical().try_into().unwrap_or(1))\n+    }\n+\n     pub fn typing_autoclose_angle(&self) -> bool {\n         self.data.typing_autoClosingAngleBrackets_enable\n     }"}, {"sha": "fb9415b5dc374919d9f36f9bb11aabd360c1871d", "filename": "crates/rust-analyzer/src/global_state.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d466570f47f67819edb556ccd3658b9073ec088/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d466570f47f67819edb556ccd3658b9073ec088/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs?ref=7d466570f47f67819edb556ccd3658b9073ec088", "patch": "@@ -134,7 +134,7 @@ impl GlobalState {\n \n         let task_pool = {\n             let (sender, receiver) = unbounded();\n-            let handle = TaskPool::new(sender);\n+            let handle = TaskPool::new_with_threads(sender, config.main_loop_num_threads());\n             Handle { handle, receiver }\n         };\n "}, {"sha": "616e449984ae6455c7b62901321f30c16feac20f", "filename": "crates/rust-analyzer/src/task_pool.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7d466570f47f67819edb556ccd3658b9073ec088/crates%2Frust-analyzer%2Fsrc%2Ftask_pool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d466570f47f67819edb556ccd3658b9073ec088/crates%2Frust-analyzer%2Fsrc%2Ftask_pool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Ftask_pool.rs?ref=7d466570f47f67819edb556ccd3658b9073ec088", "patch": "@@ -8,12 +8,13 @@ pub(crate) struct TaskPool<T> {\n }\n \n impl<T> TaskPool<T> {\n-    pub(crate) fn new(sender: Sender<T>) -> TaskPool<T> {\n+    pub(crate) fn new_with_threads(sender: Sender<T>, threads: usize) -> TaskPool<T> {\n         const STACK_SIZE: usize = 8 * 1024 * 1024;\n \n         let inner = threadpool::Builder::new()\n             .thread_name(\"Worker\".into())\n             .thread_stack_size(STACK_SIZE)\n+            .num_threads(threads)\n             .build();\n         TaskPool { sender, inner }\n     }"}]}