{"sha": "8c0cbd87671c283707cbaf4f60db36a5184d8cef", "node_id": "C_kwDOAAsO6NoAKDhjMGNiZDg3NjcxYzI4MzcwN2NiYWY0ZjYwZGIzNmE1MTg0ZDhjZWY", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-03-06T09:24:46Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-03-06T09:28:49Z"}, "message": "Do not ICE when failing to normalize in ConstProp.", "tree": {"sha": "386e61eec1d048953323b3dfd4dcd0b5c660e1a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/386e61eec1d048953323b3dfd4dcd0b5c660e1a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c0cbd87671c283707cbaf4f60db36a5184d8cef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c0cbd87671c283707cbaf4f60db36a5184d8cef", "html_url": "https://github.com/rust-lang/rust/commit/8c0cbd87671c283707cbaf4f60db36a5184d8cef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c0cbd87671c283707cbaf4f60db36a5184d8cef/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0fbfc3e76916521b509b63286296dd0762170d34", "url": "https://api.github.com/repos/rust-lang/rust/commits/0fbfc3e76916521b509b63286296dd0762170d34", "html_url": "https://github.com/rust-lang/rust/commit/0fbfc3e76916521b509b63286296dd0762170d34"}], "stats": {"total": 19, "additions": 9, "deletions": 10}, "files": [{"sha": "39c74191258295dc90a81a80f40994e03de9b55f", "filename": "compiler/rustc_const_eval/src/interpret/eval_context.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8c0cbd87671c283707cbaf4f60db36a5184d8cef/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c0cbd87671c283707cbaf4f60db36a5184d8cef/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Feval_context.rs?ref=8c0cbd87671c283707cbaf4f60db36a5184d8cef", "patch": "@@ -7,7 +7,7 @@ use either::{Either, Left, Right};\n use rustc_hir::{self as hir, def_id::DefId, definitions::DefPathData};\n use rustc_index::vec::IndexVec;\n use rustc_middle::mir;\n-use rustc_middle::mir::interpret::{ErrorHandled, InterpError, InvalidProgramInfo};\n+use rustc_middle::mir::interpret::{ErrorHandled, InterpError};\n use rustc_middle::ty::layout::{\n     self, FnAbiError, FnAbiOfHelpers, FnAbiRequest, LayoutError, LayoutOf, LayoutOfHelpers,\n     TyAndLayout,\n@@ -508,14 +508,7 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         frame\n             .instance\n             .try_subst_mir_and_normalize_erasing_regions(*self.tcx, self.param_env, value)\n-            .map_err(|e| {\n-                self.tcx.sess.delay_span_bug(\n-                    self.cur_span(),\n-                    format!(\"failed to normalize {}\", e.get_type_for_failure()).as_str(),\n-                );\n-\n-                InterpError::InvalidProgram(InvalidProgramInfo::TooGeneric)\n-            })\n+            .map_err(|_| err_inval!(TooGeneric))\n     }\n \n     /// The `substs` are assumed to already be in our interpreter \"universe\" (param_env)."}, {"sha": "c6920cf8d40c1538c35375bb791665a9e279264e", "filename": "tests/ui/associated-types/issue-67684.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8c0cbd87671c283707cbaf4f60db36a5184d8cef/tests%2Fui%2Fassociated-types%2Fissue-67684.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c0cbd87671c283707cbaf4f60db36a5184d8cef/tests%2Fui%2Fassociated-types%2Fissue-67684.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassociated-types%2Fissue-67684.rs?ref=8c0cbd87671c283707cbaf4f60db36a5184d8cef", "patch": "@@ -1,4 +1,10 @@\n-// check-pass\n+// revisions: check build\n+// [check]check-pass\n+//\n+// This second configuration aims to verify that we do not ICE in ConstProp because of\n+// normalization failure.\n+// [build]build-pass\n+// [build]compile-flags: -Zmir-opt-level=3 --emit=mir\n \n #![allow(dead_code)]\n "}]}