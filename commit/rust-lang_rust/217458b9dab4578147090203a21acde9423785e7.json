{"sha": "217458b9dab4578147090203a21acde9423785e7", "node_id": "C_kwDOAAsO6NoAKDIxNzQ1OGI5ZGFiNDU3ODE0NzA5MDIwM2EyMWFjZGU5NDIzNzg1ZTc", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-01-17T06:54:56Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-01-18T11:23:43Z"}, "message": "intra-doc links", "tree": {"sha": "b04df0ae21e0c90e73cd357c7b0a83c5d8519b9f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b04df0ae21e0c90e73cd357c7b0a83c5d8519b9f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/217458b9dab4578147090203a21acde9423785e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/217458b9dab4578147090203a21acde9423785e7", "html_url": "https://github.com/rust-lang/rust/commit/217458b9dab4578147090203a21acde9423785e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/217458b9dab4578147090203a21acde9423785e7/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cbc6d35a5745f56c69c11dd4125906e08826c959", "url": "https://api.github.com/repos/rust-lang/rust/commits/cbc6d35a5745f56c69c11dd4125906e08826c959", "html_url": "https://github.com/rust-lang/rust/commit/cbc6d35a5745f56c69c11dd4125906e08826c959"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "8d591d6781235d6861ece7b63210cd0fc7073591", "filename": "compiler/rustc_middle/src/ty/context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/217458b9dab4578147090203a21acde9423785e7/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/217458b9dab4578147090203a21acde9423785e7/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs?ref=217458b9dab4578147090203a21acde9423785e7", "patch": "@@ -1210,7 +1210,7 @@ impl<'tcx> TyCtxt<'tcx> {\n         self.mk_ty(Error(DelaySpanBugEmitted(())))\n     }\n \n-    /// Like [`ty_error`] but for constants.\n+    /// Like [TyCtxt::ty_error] but for constants.\n     #[track_caller]\n     pub fn const_error(self, ty: Ty<'tcx>) -> &'tcx Const<'tcx> {\n         self.const_error_with_message(\n@@ -1220,7 +1220,7 @@ impl<'tcx> TyCtxt<'tcx> {\n         )\n     }\n \n-    /// Like [`ty_error_with_message`] but for constants.\n+    /// Like [TyCtxt::ty_error_with_message] but for constants.\n     #[track_caller]\n     pub fn const_error_with_message<S: Into<MultiSpan>>(\n         self,"}]}