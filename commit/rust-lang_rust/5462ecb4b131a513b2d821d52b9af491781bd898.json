{"sha": "5462ecb4b131a513b2d821d52b9af491781bd898", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0NjJlY2I0YjEzMWE1MTNiMmQ4MjFkNTJiOWFmNDkxNzgxYmQ4OTg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-08-28T07:54:30Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-09-15T12:25:30Z"}, "message": "update intern classification comment", "tree": {"sha": "4afee457898190bc8e1b512be77822c9a2d5b548", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4afee457898190bc8e1b512be77822c9a2d5b548"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5462ecb4b131a513b2d821d52b9af491781bd898", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5462ecb4b131a513b2d821d52b9af491781bd898", "html_url": "https://github.com/rust-lang/rust/commit/5462ecb4b131a513b2d821d52b9af491781bd898", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5462ecb4b131a513b2d821d52b9af491781bd898/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "224e2e5e9e1d03db1a80455d08bb1d6d8686ec3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/224e2e5e9e1d03db1a80455d08bb1d6d8686ec3a", "html_url": "https://github.com/rust-lang/rust/commit/224e2e5e9e1d03db1a80455d08bb1d6d8686ec3a"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "95647ce642c5b6a5f9ec218da548805849ab1bc5", "filename": "src/librustc_mir/interpret/intern.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5462ecb4b131a513b2d821d52b9af491781bd898/src%2Flibrustc_mir%2Finterpret%2Fintern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5462ecb4b131a513b2d821d52b9af491781bd898/src%2Flibrustc_mir%2Finterpret%2Fintern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintern.rs?ref=5462ecb4b131a513b2d821d52b9af491781bd898", "patch": "@@ -278,9 +278,10 @@ pub fn intern_const_alloc_recursive(\n     // this `mutability` is the mutability of the place, ignoring the type\n     let (base_mutability, base_intern_mode) = match tcx.static_mutability(def_id) {\n         Some(hir::Mutability::MutImmutable) => (Mutability::Immutable, InternMode::Static),\n-        None => (Mutability::Immutable, InternMode::ConstBase),\n         // `static mut` doesn't care about interior mutability, it's mutable anyway\n         Some(hir::Mutability::MutMutable) => (Mutability::Mutable, InternMode::Static),\n+        // consts, promoteds. FIXME: what about array lengths, array initializers?\n+        None => (Mutability::Immutable, InternMode::ConstBase),\n     };\n \n     // Type based interning."}]}