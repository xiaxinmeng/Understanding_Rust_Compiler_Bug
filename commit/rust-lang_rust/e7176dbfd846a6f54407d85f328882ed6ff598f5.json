{"sha": "e7176dbfd846a6f54407d85f328882ed6ff598f5", "node_id": "C_kwDOAAsO6NoAKGU3MTc2ZGJmZDg0NmE2ZjU0NDA3ZDg1ZjMyODg4MmVkNmZmNTk4ZjU", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2023-05-17T05:43:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-17T05:43:56Z"}, "message": "Rollup merge of #111648 - Nilstrieb:language-items, r=WaffleLapkin\n\nRemove `LangItems::require`\n\nIt's just a short wrapper used by `tcx.require_lang_item`. Deleting it gives us a negative diff.", "tree": {"sha": "862a31dd3df8b993051a4828c521a4cb4f6535ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/862a31dd3df8b993051a4828c521a4cb4f6535ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7176dbfd846a6f54407d85f328882ed6ff598f5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkZGmcCRBK7hj4Ov3rIwAA2h0IAJ71u4hZG04UGal6WJD9fX0w\ne6EjAoJfYdYGGyZPQqoHi742AE35y4XK8lIJExJ2sl/1NSQH0prPKaiIfW7MM7Tq\ndMWB1wqjUot6u4fGR8LMzOjFwGrdX6YbAzFXcb+BvjRjxuI4GnVG1Um2yOWlD9LC\njXWIE+6hpUmCoMER/aqwjHm34e9ZcNsbd+x5jTKJvEC8sVKevwZR/Ml/qg+G8fpx\nbn4PMe97Or28fYe+JD6Et4iPVwM0hD9OSDVy+JN+9SAgsT68Ve3F35I87JHBlUtr\nsAVK08BrjiOUCTHZ2E8LcTCE+8P84Sex5nih3nQeZ3NKrdhuiv/BRlLQj5t1hyY=\n=PlrK\n-----END PGP SIGNATURE-----\n", "payload": "tree 862a31dd3df8b993051a4828c521a4cb4f6535ab\nparent 5b58471c4c1d4dd4a87c5deccb3678c8357a0f40\nparent c3efa51947c3b14652d1e85dd3bb406522c8af22\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1684302236 +0530\ncommitter GitHub <noreply@github.com> 1684302236 +0530\n\nRollup merge of #111648 - Nilstrieb:language-items, r=WaffleLapkin\n\nRemove `LangItems::require`\n\nIt's just a short wrapper used by `tcx.require_lang_item`. Deleting it gives us a negative diff.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7176dbfd846a6f54407d85f328882ed6ff598f5", "html_url": "https://github.com/rust-lang/rust/commit/e7176dbfd846a6f54407d85f328882ed6ff598f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7176dbfd846a6f54407d85f328882ed6ff598f5/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b58471c4c1d4dd4a87c5deccb3678c8357a0f40", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b58471c4c1d4dd4a87c5deccb3678c8357a0f40", "html_url": "https://github.com/rust-lang/rust/commit/5b58471c4c1d4dd4a87c5deccb3678c8357a0f40"}, {"sha": "c3efa51947c3b14652d1e85dd3bb406522c8af22", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3efa51947c3b14652d1e85dd3bb406522c8af22", "html_url": "https://github.com/rust-lang/rust/commit/c3efa51947c3b14652d1e85dd3bb406522c8af22"}], "stats": {"total": 58, "additions": 20, "deletions": 38}, "files": [{"sha": "25fd5ca3ae8bc3757b2397df0f51eaa89abdce5a", "filename": "compiler/rustc_codegen_cranelift/src/base.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e7176dbfd846a6f54407d85f328882ed6ff598f5/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7176dbfd846a6f54407d85f328882ed6ff598f5/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fbase.rs?ref=e7176dbfd846a6f54407d85f328882ed6ff598f5", "patch": "@@ -966,11 +966,7 @@ fn codegen_panic_inner<'tcx>(\n     args: &[Value],\n     span: Span,\n ) {\n-    let def_id = fx\n-        .tcx\n-        .lang_items()\n-        .require(lang_item)\n-        .unwrap_or_else(|e| fx.tcx.sess.span_fatal(span, e.to_string()));\n+    let def_id = fx.tcx.require_lang_item(lang_item, Some(span));\n \n     let instance = Instance::mono(fx.tcx, def_id).polymorphize(fx.tcx);\n     let symbol_name = fx.tcx.symbol_name(instance).name;"}, {"sha": "e593ed1044a5818e1f4cdb7765bd9bd75cb393d9", "filename": "compiler/rustc_hir/src/errors.rs", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5b58471c4c1d4dd4a87c5deccb3678c8357a0f40/compiler%2Frustc_hir%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b58471c4c1d4dd4a87c5deccb3678c8357a0f40/compiler%2Frustc_hir%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Ferrors.rs?ref=5b58471c4c1d4dd4a87c5deccb3678c8357a0f40", "patch": "@@ -1,10 +0,0 @@\n-use crate::LangItem;\n-\n-#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash, Encodable, Decodable)]\n-pub struct LangItemError(pub LangItem);\n-\n-impl ToString for LangItemError {\n-    fn to_string(&self) -> String {\n-        format!(\"requires `{}` lang_item\", self.0.name())\n-    }\n-}"}, {"sha": "4b3bc816b9531366afb44348148f17bc3ca71602", "filename": "compiler/rustc_hir/src/lang_items.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e7176dbfd846a6f54407d85f328882ed6ff598f5/compiler%2Frustc_hir%2Fsrc%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7176dbfd846a6f54407d85f328882ed6ff598f5/compiler%2Frustc_hir%2Fsrc%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Flang_items.rs?ref=e7176dbfd846a6f54407d85f328882ed6ff598f5", "patch": "@@ -8,7 +8,6 @@\n //! * Functions called by the compiler itself.\n \n use crate::def_id::DefId;\n-use crate::errors::LangItemError;\n use crate::{MethodKind, Target};\n \n use rustc_ast as ast;\n@@ -42,13 +41,6 @@ impl LanguageItems {\n         self.items[item as usize] = Some(def_id);\n     }\n \n-    /// Requires that a given `LangItem` was bound and returns the corresponding `DefId`.\n-    /// If it wasn't bound, e.g. due to a missing `#[lang = \"<it.name()>\"]`,\n-    /// returns an error encapsulating the `LangItem`.\n-    pub fn require(&self, it: LangItem) -> Result<DefId, LangItemError> {\n-        self.get(it).ok_or_else(|| LangItemError(it))\n-    }\n-\n     pub fn iter(&self) -> impl Iterator<Item = (LangItem, DefId)> + '_ {\n         self.items\n             .iter()"}, {"sha": "616de57dc6372109d3b03ae0c9c74c59eb634784", "filename": "compiler/rustc_hir/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e7176dbfd846a6f54407d85f328882ed6ff598f5/compiler%2Frustc_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7176dbfd846a6f54407d85f328882ed6ff598f5/compiler%2Frustc_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Flib.rs?ref=e7176dbfd846a6f54407d85f328882ed6ff598f5", "patch": "@@ -30,7 +30,6 @@ pub mod def;\n pub mod def_path_hash_map;\n pub mod definitions;\n pub mod diagnostic_items;\n-pub mod errors;\n pub use rustc_span::def_id;\n mod hir;\n pub mod hir_id;"}, {"sha": "a98d8e17153d851ae5f4edb9b2bbb7fa5163088c", "filename": "compiler/rustc_hir_analysis/src/coherence/builtin.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7176dbfd846a6f54407d85f328882ed6ff598f5/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7176dbfd846a6f54407d85f328882ed6ff598f5/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Fbuiltin.rs?ref=e7176dbfd846a6f54407d85f328882ed6ff598f5", "patch": "@@ -298,9 +298,7 @@ pub fn coerce_unsized_info<'tcx>(tcx: TyCtxt<'tcx>, impl_did: LocalDefId) -> Coe\n \n     let coerce_unsized_trait = tcx.require_lang_item(LangItem::CoerceUnsized, Some(span));\n \n-    let unsize_trait = tcx.lang_items().require(LangItem::Unsize).unwrap_or_else(|err| {\n-        tcx.sess.fatal(format!(\"`CoerceUnsized` implementation {}\", err.to_string()));\n-    });\n+    let unsize_trait = tcx.require_lang_item(LangItem::Unsize, Some(span));\n \n     let source = tcx.type_of(impl_did).subst_identity();\n     let trait_ref = tcx.impl_trait_ref(impl_did).unwrap().subst_identity();"}, {"sha": "64d511c261aa9a4952370239f03a927a8df3268d", "filename": "compiler/rustc_middle/messages.ftl", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7176dbfd846a6f54407d85f328882ed6ff598f5/compiler%2Frustc_middle%2Fmessages.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/e7176dbfd846a6f54407d85f328882ed6ff598f5/compiler%2Frustc_middle%2Fmessages.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fmessages.ftl?ref=e7176dbfd846a6f54407d85f328882ed6ff598f5", "patch": "@@ -39,5 +39,7 @@ middle_strict_coherence_needs_negative_coherence =\n     to use `strict_coherence` on this trait, the `with_negative_coherence` feature must be enabled\n     .label = due to this attribute\n \n+middle_requires_lang_item = requires `{$name}` lang_item\n+\n middle_const_not_used_in_type_alias =\n     const parameter `{$ct}` is part of concrete type but not used in parameter list for the `impl Trait` type alias"}, {"sha": "046186d274ca75f9b26ef1562ac2c92178764797", "filename": "compiler/rustc_middle/src/error.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e7176dbfd846a6f54407d85f328882ed6ff598f5/compiler%2Frustc_middle%2Fsrc%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7176dbfd846a6f54407d85f328882ed6ff598f5/compiler%2Frustc_middle%2Fsrc%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Ferror.rs?ref=e7176dbfd846a6f54407d85f328882ed6ff598f5", "patch": "@@ -1,5 +1,5 @@\n use rustc_macros::Diagnostic;\n-use rustc_span::Span;\n+use rustc_span::{Span, Symbol};\n \n use crate::ty::Ty;\n \n@@ -73,6 +73,14 @@ pub(crate) struct StrictCoherenceNeedsNegativeCoherence {\n     pub attr_span: Option<Span>,\n }\n \n+#[derive(Diagnostic)]\n+#[diag(middle_requires_lang_item)]\n+pub(crate) struct RequiresLangItem {\n+    #[primary_span]\n+    pub span: Option<Span>,\n+    pub name: Symbol,\n+}\n+\n #[derive(Diagnostic)]\n #[diag(middle_const_not_used_in_type_alias)]\n pub(super) struct ConstNotUsedTraitAlias {"}, {"sha": "9a633e04ce70d3f7629d64c9b90199e9ed2a62f1", "filename": "compiler/rustc_middle/src/middle/lang_items.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e7176dbfd846a6f54407d85f328882ed6ff598f5/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7176dbfd846a6f54407d85f328882ed6ff598f5/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Flang_items.rs?ref=e7176dbfd846a6f54407d85f328882ed6ff598f5", "patch": "@@ -18,12 +18,8 @@ impl<'tcx> TyCtxt<'tcx> {\n     /// Returns the `DefId` for a given `LangItem`.\n     /// If not found, fatally aborts compilation.\n     pub fn require_lang_item(self, lang_item: LangItem, span: Option<Span>) -> DefId {\n-        self.lang_items().require(lang_item).unwrap_or_else(|err| {\n-            if let Some(span) = span {\n-                self.sess.span_fatal(span, err.to_string())\n-            } else {\n-                self.sess.fatal(err.to_string())\n-            }\n+        self.lang_items().get(lang_item).unwrap_or_else(|| {\n+            self.sess.emit_fatal(crate::error::RequiresLangItem { span, name: lang_item.name() });\n         })\n     }\n "}, {"sha": "0809837d1fd7661aae2589914ed0afaab25d7f80", "filename": "src/tools/clippy/clippy_lints/src/matches/redundant_pattern_match.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e7176dbfd846a6f54407d85f328882ed6ff598f5/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmatches%2Fredundant_pattern_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7176dbfd846a6f54407d85f328882ed6ff598f5/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmatches%2Fredundant_pattern_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fmatches%2Fredundant_pattern_match.rs?ref=e7176dbfd846a6f54407d85f328882ed6ff598f5", "patch": "@@ -289,10 +289,11 @@ fn is_pat_variant(cx: &LateContext<'_>, pat: &Pat<'_>, path: &QPath<'_>, expecte\n     let Some(id) = cx.typeck_results().qpath_res(path, pat.hir_id).opt_def_id() else { return false };\n \n     match expected_item {\n-        Item::Lang(expected_lang_item) => {\n-            let expected_id = cx.tcx.lang_items().require(expected_lang_item).unwrap();\n-            cx.tcx.parent(id) == expected_id\n-        },\n+        Item::Lang(expected_lang_item) => cx\n+            .tcx\n+            .lang_items()\n+            .get(expected_lang_item)\n+            .map_or(false, |expected_id| cx.tcx.parent(id) == expected_id),\n         Item::Diag(expected_ty, expected_variant) => {\n             let ty = cx.typeck_results().pat_ty(pat);\n "}]}