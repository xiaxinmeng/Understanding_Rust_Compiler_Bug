{"sha": "86732ff6e0a0dc087a67927f3467622a4e4d1824", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2NzMyZmY2ZTBhMGRjMDg3YTY3OTI3ZjM0Njc2MjJhNGU0ZDE4MjQ=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-01-31T15:36:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-31T15:36:49Z"}, "message": "Rollup merge of #81566 - osa1:issue71202, r=jonas-schievink\n\nAdd a test for #71202\n\nCloses #71202\n\n---\n\nNote that the test normally generates this warning:\n\n```\nwarning: cannot use constants which depend on generic parameters in types\n  --> test.rs:10:5\n   |\n10 | /     const ITEM_IS_COPY: [(); 1 - {\n11 | |         trait NotCopy {\n12 | |             const VALUE: bool = false;\n13 | |         }\n...  |\n26 | |         <IsCopy<T>>::VALUE\n27 | |     } as usize] = [];\n   | |_____________________^\n   |\n   = note: `#[warn(const_evaluatable_unchecked)]` on by default\n   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n   = note: for more information, see issue #76200 <https://github.com/rust-lang/rust/issues/76200>\n```\n\nI added `allow(const_evaluatable_unchecked)`, but maybe we just don't want to add a test for this as the program is not really valid?", "tree": {"sha": "780b814e35877d3c9e23d1c6f87faf7a18f611f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/780b814e35877d3c9e23d1c6f87faf7a18f611f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86732ff6e0a0dc087a67927f3467622a4e4d1824", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgFs6SCRBK7hj4Ov3rIwAAdHIIAFpHTCZ7D1McrYLgCn4WgfDK\n2bqo/y6D+TQoP+Oni93Si+fzH3UwOcnORk/J4bVX6wBHvg1xcvcDXueX01AZhmPP\nwWALzuV+EEb3Ci8cohCnQr9q7JPx8BC0WKO0D5LkYIxxS8kidEN56ah6OXCKAS2Y\nSFD+R3vdZxZspGZbsjGJhpArQ9w8VOIuBso5Bvu1NhIY63Wp1tL6lxL345gDQlm1\nIAVf2N18ZYMmHW+oxLYytL6SDrU+AlE7H1WdZgDEtp1VcGHo9ZUIcmVqqqV4BvQT\nkILWdKFRuDeFs0qozf1w+PxKa5BFEF41JUHWcZJDE68xL4knitEsD7gsi/Gv4o4=\n=O8Q5\n-----END PGP SIGNATURE-----\n", "payload": "tree 780b814e35877d3c9e23d1c6f87faf7a18f611f4\nparent 47a5312c301490589cde1275adfde600bf769c79\nparent 5f1a7aa46d11129605b55b028a001bb40696f460\nauthor Jonas Schievink <jonasschievink@gmail.com> 1612107409 +0100\ncommitter GitHub <noreply@github.com> 1612107409 +0100\n\nRollup merge of #81566 - osa1:issue71202, r=jonas-schievink\n\nAdd a test for #71202\n\nCloses #71202\n\n---\n\nNote that the test normally generates this warning:\n\n```\nwarning: cannot use constants which depend on generic parameters in types\n  --> test.rs:10:5\n   |\n10 | /     const ITEM_IS_COPY: [(); 1 - {\n11 | |         trait NotCopy {\n12 | |             const VALUE: bool = false;\n13 | |         }\n...  |\n26 | |         <IsCopy<T>>::VALUE\n27 | |     } as usize] = [];\n   | |_____________________^\n   |\n   = note: `#[warn(const_evaluatable_unchecked)]` on by default\n   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n   = note: for more information, see issue #76200 <https://github.com/rust-lang/rust/issues/76200>\n```\n\nI added `allow(const_evaluatable_unchecked)`, but maybe we just don't want to add a test for this as the program is not really valid?\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86732ff6e0a0dc087a67927f3467622a4e4d1824", "html_url": "https://github.com/rust-lang/rust/commit/86732ff6e0a0dc087a67927f3467622a4e4d1824", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86732ff6e0a0dc087a67927f3467622a4e4d1824/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47a5312c301490589cde1275adfde600bf769c79", "url": "https://api.github.com/repos/rust-lang/rust/commits/47a5312c301490589cde1275adfde600bf769c79", "html_url": "https://github.com/rust-lang/rust/commit/47a5312c301490589cde1275adfde600bf769c79"}, {"sha": "5f1a7aa46d11129605b55b028a001bb40696f460", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f1a7aa46d11129605b55b028a001bb40696f460", "html_url": "https://github.com/rust-lang/rust/commit/5f1a7aa46d11129605b55b028a001bb40696f460"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "78dee1717f1fade104a9b6e0a931b8b7bb449e16", "filename": "src/test/ui/const-generics/issue-71202.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/86732ff6e0a0dc087a67927f3467622a4e4d1824/src%2Ftest%2Fui%2Fconst-generics%2Fissue-71202.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86732ff6e0a0dc087a67927f3467622a4e4d1824/src%2Ftest%2Fui%2Fconst-generics%2Fissue-71202.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissue-71202.rs?ref=86732ff6e0a0dc087a67927f3467622a4e4d1824", "patch": "@@ -0,0 +1,33 @@\n+// check-pass\n+\n+#![feature(const_generics)]\n+#![allow(incomplete_features, const_evaluatable_unchecked)]\n+\n+use std::marker::PhantomData;\n+\n+struct DataHolder<T> {\n+    item: T,\n+}\n+\n+impl<T: Copy> DataHolder<T> {\n+    const ITEM_IS_COPY: [(); 1 - {\n+        trait NotCopy {\n+            const VALUE: bool = false;\n+        }\n+\n+        impl<__Type: ?Sized> NotCopy for __Type {}\n+\n+        struct IsCopy<__Type: ?Sized>(PhantomData<__Type>);\n+\n+        impl<__Type> IsCopy<__Type>\n+        where\n+            __Type: Sized + Copy,\n+        {\n+            const VALUE: bool = true;\n+        }\n+\n+        <IsCopy<T>>::VALUE\n+    } as usize] = [];\n+}\n+\n+fn main() {}"}]}