{"sha": "3d7099a9682e1911b18cf440738ab97ae2fecc6d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkNzA5OWE5NjgyZTE5MTFiMThjZjQ0MDczOGFiOTdhZTJmZWNjNmQ=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-08-14T23:46:28Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-09-12T00:09:22Z"}, "message": "Do not emit E0277 on incorrect tuple destructured binding", "tree": {"sha": "29ad310ec1269216921cec575eb30e65ccded2e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/29ad310ec1269216921cec575eb30e65ccded2e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d7099a9682e1911b18cf440738ab97ae2fecc6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d7099a9682e1911b18cf440738ab97ae2fecc6d", "html_url": "https://github.com/rust-lang/rust/commit/3d7099a9682e1911b18cf440738ab97ae2fecc6d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d7099a9682e1911b18cf440738ab97ae2fecc6d/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ee72070bdb789f58f272fab50d49bd48dd9c11f", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ee72070bdb789f58f272fab50d49bd48dd9c11f", "html_url": "https://github.com/rust-lang/rust/commit/7ee72070bdb789f58f272fab50d49bd48dd9c11f"}], "stats": {"total": 56, "additions": 53, "deletions": 3}, "files": [{"sha": "ca2b892018b5f4ee8f8b1f00ebfc619ca326eb5c", "filename": "src/librustc_typeck/check/_match.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/3d7099a9682e1911b18cf440738ab97ae2fecc6d/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d7099a9682e1911b18cf440738ab97ae2fecc6d/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2F_match.rs?ref=3d7099a9682e1911b18cf440738ab97ae2fecc6d", "patch": "@@ -299,10 +299,19 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                 let element_tys = tcx.mk_type_list(element_tys_iter);\n                 let pat_ty = tcx.mk_ty(ty::Tuple(element_tys));\n                 self.demand_eqtype(pat.span, expected, pat_ty);\n-                for (i, elem) in elements.iter().enumerate_and_adjust(max_len, ddpos) {\n-                    self.check_pat_walk(elem, &element_tys[i], def_bm, true);\n+                if self.has_errors.get() {\n+                    let element_tys_iter = (0..max_len).map(|_| tcx.types.err);\n+                    let element_tys = tcx.mk_type_list(element_tys_iter);\n+                    for (_, elem) in elements.iter().enumerate_and_adjust(max_len, ddpos) {\n+                        self.check_pat_walk(elem, &tcx.types.err, def_bm, true);\n+                    }\n+                    tcx.mk_ty(ty::TyTuple(element_tys))\n+                } else {\n+                    for (i, elem) in elements.iter().enumerate_and_adjust(max_len, ddpos) {\n+                        self.check_pat_walk(elem, &element_tys[i], def_bm, true);\n+                    }\n+                    pat_ty\n                 }\n-                pat_ty\n             }\n             PatKind::Box(ref inner) => {\n                 let inner_ty = self.next_ty_var(TypeVariableOrigin::TypeInference(inner.span));"}, {"sha": "47bbc95aa496ba9098a4a6493e08d43f99cee314", "filename": "src/librustc_typeck/check/demand.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3d7099a9682e1911b18cf440738ab97ae2fecc6d/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d7099a9682e1911b18cf440738ab97ae2fecc6d/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs?ref=3d7099a9682e1911b18cf440738ab97ae2fecc6d", "patch": "@@ -50,6 +50,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n \n     pub fn demand_eqtype(&self, sp: Span, expected: Ty<'tcx>, actual: Ty<'tcx>) {\n         if let Some(mut err) = self.demand_eqtype_diag(sp, expected, actual) {\n+            self.has_errors.set(true);\n             err.emit();\n         }\n     }"}, {"sha": "68e579788bca1e063e7c2e69d053b483a3ddc4a7", "filename": "src/test/ui/elide-errors-on-mismatched-tuple.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/3d7099a9682e1911b18cf440738ab97ae2fecc6d/src%2Ftest%2Fui%2Felide-errors-on-mismatched-tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d7099a9682e1911b18cf440738ab97ae2fecc6d/src%2Ftest%2Fui%2Felide-errors-on-mismatched-tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Felide-errors-on-mismatched-tuple.rs?ref=3d7099a9682e1911b18cf440738ab97ae2fecc6d", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Hide irrelevant E0277 errors (#50333)\n+\n+trait T {}\n+\n+struct A;\n+impl T for A {}\n+impl A {\n+    fn new() -> Self {\n+        Self {}\n+    }\n+}\n+\n+fn main() {\n+    let (a, b, c) = (A::new(), A::new()); // This tuple is 2 elements, should be three\n+    //~^ ERROR mismatched types\n+    let ts: Vec<&T> = vec![&a, &b, &c];\n+    // There is no E0277 error above, as `a`, `b` and `c` are `TyErr`\n+}"}, {"sha": "b901175d53450b0bccf81719aabdb6931f49bdee", "filename": "src/test/ui/elide-errors-on-mismatched-tuple.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3d7099a9682e1911b18cf440738ab97ae2fecc6d/src%2Ftest%2Fui%2Felide-errors-on-mismatched-tuple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3d7099a9682e1911b18cf440738ab97ae2fecc6d/src%2Ftest%2Fui%2Felide-errors-on-mismatched-tuple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Felide-errors-on-mismatched-tuple.stderr?ref=3d7099a9682e1911b18cf440738ab97ae2fecc6d", "patch": "@@ -0,0 +1,12 @@\n+error[E0308]: mismatched types\n+  --> $DIR/elide-errors-on-mismatched-tuple.rs:24:9\n+   |\n+LL |     let (a, b, c) = (A::new(), A::new()); // This tuple is 2 elements, should be three\n+   |         ^^^^^^^^^ expected a tuple with 2 elements, found one with 3 elements\n+   |\n+   = note: expected type `(A, A)`\n+              found type `(_, _, _)`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}]}