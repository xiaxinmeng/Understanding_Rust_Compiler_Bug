{"sha": "e95bda62f94e9eeeef38c0aa105ee0c85a82cc2f", "node_id": "C_kwDOAAsO6NoAKGU5NWJkYTYyZjk0ZTllZWVlZjM4YzBhYTEwNWVlMGM4NWE4MmNjMmY", "commit": {"author": {"name": "Alec Goncharow", "email": "algo@cloudflare.com", "date": "2022-04-20T01:01:13Z"}, "committer": {"name": "Alec Goncharow", "email": "algo@cloudflare.com", "date": "2022-04-20T01:27:40Z"}, "message": "compiletest: combine `--*-python` args\n\nSince these arguments are now always the same, combine them into a\nsingular `--python` argument.", "tree": {"sha": "78936e47787b195d7bd1d8d1a96482f464eb97b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/78936e47787b195d7bd1d8d1a96482f464eb97b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e95bda62f94e9eeeef38c0aa105ee0c85a82cc2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e95bda62f94e9eeeef38c0aa105ee0c85a82cc2f", "html_url": "https://github.com/rust-lang/rust/commit/e95bda62f94e9eeeef38c0aa105ee0c85a82cc2f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e95bda62f94e9eeeef38c0aa105ee0c85a82cc2f/comments", "author": {"login": "AlecGoncharow", "id": 35583039, "node_id": "MDQ6VXNlcjM1NTgzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/35583039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlecGoncharow", "html_url": "https://github.com/AlecGoncharow", "followers_url": "https://api.github.com/users/AlecGoncharow/followers", "following_url": "https://api.github.com/users/AlecGoncharow/following{/other_user}", "gists_url": "https://api.github.com/users/AlecGoncharow/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlecGoncharow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlecGoncharow/subscriptions", "organizations_url": "https://api.github.com/users/AlecGoncharow/orgs", "repos_url": "https://api.github.com/users/AlecGoncharow/repos", "events_url": "https://api.github.com/users/AlecGoncharow/events{/privacy}", "received_events_url": "https://api.github.com/users/AlecGoncharow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "AlecGoncharow", "id": 35583039, "node_id": "MDQ6VXNlcjM1NTgzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/35583039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlecGoncharow", "html_url": "https://github.com/AlecGoncharow", "followers_url": "https://api.github.com/users/AlecGoncharow/followers", "following_url": "https://api.github.com/users/AlecGoncharow/following{/other_user}", "gists_url": "https://api.github.com/users/AlecGoncharow/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlecGoncharow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlecGoncharow/subscriptions", "organizations_url": "https://api.github.com/users/AlecGoncharow/orgs", "repos_url": "https://api.github.com/users/AlecGoncharow/repos", "events_url": "https://api.github.com/users/AlecGoncharow/events{/privacy}", "received_events_url": "https://api.github.com/users/AlecGoncharow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ca19e09d302a4cbde14f9cb1bc109179dc824cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ca19e09d302a4cbde14f9cb1bc109179dc824cd", "html_url": "https://github.com/rust-lang/rust/commit/4ca19e09d302a4cbde14f9cb1bc109179dc824cd"}], "stats": {"total": 30, "additions": 11, "deletions": 19}, "files": [{"sha": "9c376602d283f35af052c956683ca63e5580a691", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e95bda62f94e9eeeef38c0aa105ee0c85a82cc2f/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e95bda62f94e9eeeef38c0aa105ee0c85a82cc2f/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=e95bda62f94e9eeeef38c0aa105ee0c85a82cc2f", "patch": "@@ -1400,9 +1400,7 @@ note: if you're sure you want to do this, please open an issue as to why. In the\n         targetflags.extend(builder.lld_flags(target));\n         cmd.arg(\"--target-rustcflags\").arg(targetflags.join(\" \"));\n \n-        cmd.arg(\"--docck-python\").arg(builder.python());\n-\n-        cmd.arg(\"--lldb-python\").arg(builder.python());\n+        cmd.arg(\"--python\").arg(builder.python());\n \n         if let Some(ref gdb) = builder.config.gdb {\n             cmd.arg(\"--gdb\").arg(gdb);"}, {"sha": "2cb368c6881887cd6042740739bdfcbeb2c58fcd", "filename": "src/tools/compiletest/src/common.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e95bda62f94e9eeeef38c0aa105ee0c85a82cc2f/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e95bda62f94e9eeeef38c0aa105ee0c85a82cc2f/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs?ref=e95bda62f94e9eeeef38c0aa105ee0c85a82cc2f", "patch": "@@ -198,11 +198,8 @@ pub struct Config {\n     /// The rust-demangler executable.\n     pub rust_demangler_path: Option<PathBuf>,\n \n-    /// The Python executable to use for LLDB.\n-    pub lldb_python: String,\n-\n-    /// The Python executable to use for htmldocck.\n-    pub docck_python: String,\n+    /// The Python executable to use for LLDB and htmldocck.\n+    pub python: String,\n \n     /// The jsondocck executable.\n     pub jsondocck_path: Option<String>,"}, {"sha": "a8fd4880f078250191547ae4c743c12e35f6630f", "filename": "src/tools/compiletest/src/header/tests.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e95bda62f94e9eeeef38c0aa105ee0c85a82cc2f/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e95bda62f94e9eeeef38c0aa105ee0c85a82cc2f/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader%2Ftests.rs?ref=e95bda62f94e9eeeef38c0aa105ee0c85a82cc2f", "patch": "@@ -43,8 +43,7 @@ fn config() -> Config {\n         \"--compile-lib-path=\",\n         \"--run-lib-path=\",\n         \"--rustc-path=\",\n-        \"--lldb-python=\",\n-        \"--docck-python=\",\n+        \"--python=\",\n         \"--jsondocck-path=\",\n         \"--src-base=\",\n         \"--build-base=\","}, {"sha": "f4e6c2a2bb288818bbad52cd3eaa7f4a89756dd1", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e95bda62f94e9eeeef38c0aa105ee0c85a82cc2f/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e95bda62f94e9eeeef38c0aa105ee0c85a82cc2f/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=e95bda62f94e9eeeef38c0aa105ee0c85a82cc2f", "patch": "@@ -61,8 +61,7 @@ pub fn parse_config(args: Vec<String>) -> Config {\n         .reqopt(\"\", \"rustc-path\", \"path to rustc to use for compiling\", \"PATH\")\n         .optopt(\"\", \"rustdoc-path\", \"path to rustdoc to use for compiling\", \"PATH\")\n         .optopt(\"\", \"rust-demangler-path\", \"path to rust-demangler to use in tests\", \"PATH\")\n-        .reqopt(\"\", \"lldb-python\", \"path to python to use for doc tests\", \"PATH\")\n-        .reqopt(\"\", \"docck-python\", \"path to python to use for doc tests\", \"PATH\")\n+        .reqopt(\"\", \"python\", \"path to python to use for doc tests\", \"PATH\")\n         .optopt(\"\", \"jsondocck-path\", \"path to jsondocck to use for doc tests\", \"PATH\")\n         .optopt(\"\", \"valgrind-path\", \"path to Valgrind executable for Valgrind tests\", \"PROGRAM\")\n         .optflag(\"\", \"force-valgrind\", \"fail if Valgrind tests cannot be run under Valgrind\")\n@@ -222,8 +221,7 @@ pub fn parse_config(args: Vec<String>) -> Config {\n         rustc_path: opt_path(matches, \"rustc-path\"),\n         rustdoc_path: matches.opt_str(\"rustdoc-path\").map(PathBuf::from),\n         rust_demangler_path: matches.opt_str(\"rust-demangler-path\").map(PathBuf::from),\n-        lldb_python: matches.opt_str(\"lldb-python\").unwrap(),\n-        docck_python: matches.opt_str(\"docck-python\").unwrap(),\n+        python: matches.opt_str(\"python\").unwrap(),\n         jsondocck_path: matches.opt_str(\"jsondocck-path\"),\n         valgrind_path: matches.opt_str(\"valgrind-path\"),\n         force_valgrind: matches.opt_present(\"force-valgrind\"),"}, {"sha": "aedddedac6184c5214f5aff405794b1b4185a9c2", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e95bda62f94e9eeeef38c0aa105ee0c85a82cc2f/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e95bda62f94e9eeeef38c0aa105ee0c85a82cc2f/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=e95bda62f94e9eeeef38c0aa105ee0c85a82cc2f", "patch": "@@ -179,7 +179,7 @@ pub fn compute_stamp_hash(config: &Config) -> String {\n         }\n \n         Some(Debugger::Lldb) => {\n-            config.lldb_python.hash(&mut hash);\n+            config.python.hash(&mut hash);\n             config.lldb_python_dir.hash(&mut hash);\n             env::var_os(\"PATH\").hash(&mut hash);\n             env::var_os(\"PYTHONPATH\").hash(&mut hash);\n@@ -1141,7 +1141,7 @@ impl<'test> TestCx<'test> {\n         // Prepare the lldb_batchmode which executes the debugger script\n         let lldb_script_path = rust_src_root.join(\"src/etc/lldb_batchmode.py\");\n         self.cmd2procres(\n-            Command::new(&self.config.lldb_python)\n+            Command::new(&self.config.python)\n                 .arg(&lldb_script_path)\n                 .arg(test_executable)\n                 .arg(debugger_script)\n@@ -2256,7 +2256,7 @@ impl<'test> TestCx<'test> {\n             self.check_rustdoc_test_option(proc_res);\n         } else {\n             let root = self.config.find_rust_src_root().unwrap();\n-            let mut cmd = Command::new(&self.config.docck_python);\n+            let mut cmd = Command::new(&self.config.python);\n             cmd.arg(root.join(\"src/etc/htmldocck.py\")).arg(&out_dir).arg(&self.testpaths.file);\n             if self.config.bless {\n                 cmd.arg(\"--bless\");\n@@ -2457,7 +2457,7 @@ impl<'test> TestCx<'test> {\n         let mut json_out = out_dir.join(self.testpaths.file.file_stem().unwrap());\n         json_out.set_extension(\"json\");\n         let res = self.cmd2procres(\n-            Command::new(&self.config.docck_python)\n+            Command::new(&self.config.python)\n                 .arg(root.join(\"src/etc/check_missing_items.py\"))\n                 .arg(&json_out),\n         );\n@@ -2852,7 +2852,7 @@ impl<'test> TestCx<'test> {\n             .stdout(Stdio::piped())\n             .stderr(Stdio::piped())\n             .env(\"TARGET\", &self.config.target)\n-            .env(\"PYTHON\", &self.config.docck_python)\n+            .env(\"PYTHON\", &self.config.python)\n             .env(\"S\", src_root)\n             .env(\"RUST_BUILD_STAGE\", &self.config.stage_id)\n             .env(\"RUSTC\", cwd.join(&self.config.rustc_path))"}]}