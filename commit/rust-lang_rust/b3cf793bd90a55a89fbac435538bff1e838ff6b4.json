{"sha": "b3cf793bd90a55a89fbac435538bff1e838ff6b4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzY2Y3OTNiZDkwYTU1YTg5ZmJhYzQzNTUzOGJmZjFlODM4ZmY2YjQ=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-12T05:31:56Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-12T05:31:56Z"}, "message": "Fix post-stmt drop calculations. Closes #106.", "tree": {"sha": "adf474715bc1a9ff312578635fc7b87f2fc41cdb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/adf474715bc1a9ff312578635fc7b87f2fc41cdb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3cf793bd90a55a89fbac435538bff1e838ff6b4", "comment_count": 7, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3cf793bd90a55a89fbac435538bff1e838ff6b4", "html_url": "https://github.com/rust-lang/rust/commit/b3cf793bd90a55a89fbac435538bff1e838ff6b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3cf793bd90a55a89fbac435538bff1e838ff6b4/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30c4070e3d5bdfa5ddbb41e3e2d1590567cba3d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/30c4070e3d5bdfa5ddbb41e3e2d1590567cba3d8", "html_url": "https://github.com/rust-lang/rust/commit/30c4070e3d5bdfa5ddbb41e3e2d1590567cba3d8"}], "stats": {"total": 50, "additions": 40, "deletions": 10}, "files": [{"sha": "c7f0944b8483bef658be2b9bc42f637af4b74756", "filename": "src/Makefile", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b3cf793bd90a55a89fbac435538bff1e838ff6b4/src%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/b3cf793bd90a55a89fbac435538bff1e838ff6b4/src%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FMakefile?ref=b3cf793bd90a55a89fbac435538bff1e838ff6b4", "patch": "@@ -464,6 +464,7 @@ TEST_XFAILS_LLVM := $(addprefix test/run-pass/, \\\n                       vec-append.rs \\\n                       vec-concat.rs \\\n                       vec-drop.rs \\\n+                      vec-late-init.rs \\\n                       vec-slice.rs \\\n                       vec.rs \\\n                       writealias.rs \\"}, {"sha": "4c3dbe52914908d512c46d308e4006483708ff8a", "filename": "src/boot/me/typestate.ml", "status": "modified", "additions": 30, "deletions": 10, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/b3cf793bd90a55a89fbac435538bff1e838ff6b4/src%2Fboot%2Fme%2Ftypestate.ml", "raw_url": "https://github.com/rust-lang/rust/raw/b3cf793bd90a55a89fbac435538bff1e838ff6b4/src%2Fboot%2Fme%2Ftypestate.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftypestate.ml?ref=b3cf793bd90a55a89fbac435538bff1e838ff6b4", "patch": "@@ -988,23 +988,30 @@ let lifecycle_visitor\n    * used later on in translation.\n    *)\n \n-  let (live_block_slots:(node_id Stack.t) Stack.t) = Stack.create () in\n+  let (live_block_slots:(node_id, unit) Hashtbl.t) = Hashtbl.create 0 in\n+  let (block_slots:(node_id Stack.t) Stack.t) = Stack.create () in\n \n   let (implicit_init_block_slots:(node_id,node_id) Hashtbl.t) =\n     Hashtbl.create 0\n   in\n \n+  let push_slot sl =\n+    Stack.push sl (Stack.top block_slots)\n+  in\n+\n   let mark_slot_init sl =\n-    Stack.push sl (Stack.top live_block_slots)\n+    Hashtbl.replace live_block_slots sl ()\n   in\n \n \n   let visit_block_pre b =\n-    Stack.push (Stack.create()) live_block_slots;\n+    Stack.push (Stack.create()) block_slots;\n     begin\n       match htab_search implicit_init_block_slots b.id with\n           None -> ()\n-        | Some slot -> mark_slot_init slot\n+        | Some slot ->\n+            push_slot slot;\n+            mark_slot_init slot\n     end;\n     inner.Walk.visit_block_pre b\n   in\n@@ -1026,7 +1033,7 @@ let lifecycle_visitor\n \n   let visit_block_post b =\n     inner.Walk.visit_block_post b;\n-    let blk_live = Stack.pop live_block_slots in\n+    let blk_slots = Stack.pop block_slots in\n     let stmts = b.node in\n     let len = Array.length stmts in\n       if len > 0\n@@ -1038,8 +1045,13 @@ let lifecycle_visitor\n               | Ast.STMT_be _ ->\n                   () (* Taken care of in visit_stmt_post below. *)\n             | _ ->\n-                let slots = stk_elts_from_top blk_live in\n-                  note_drops s slots\n+                let slots = stk_elts_from_bot blk_slots in\n+                let live =\n+                  List.filter\n+                    (fun i -> Hashtbl.mem live_block_slots i)\n+                    slots\n+                in\n+                  note_drops s live\n         end;\n   in\n \n@@ -1081,6 +1093,9 @@ let lifecycle_visitor\n                     init_lval lv_dst\n                   end;\n \n+          | Ast.STMT_decl (Ast.DECL_slot (_, sloti)) ->\n+              push_slot sloti.id\n+\n           | Ast.STMT_init_rec (lv_dst, _, _)\n           | Ast.STMT_init_tup (lv_dst, _)\n           | Ast.STMT_init_vec (lv_dst, _)\n@@ -1117,9 +1132,14 @@ let lifecycle_visitor\n     match s.node with\n         Ast.STMT_ret _\n       | Ast.STMT_be _ ->\n-          let stks = stk_elts_from_top live_block_slots in\n-          let slots = List.concat (List.map stk_elts_from_top stks) in\n-            note_drops s slots\n+          let stks = stk_elts_from_top block_slots in\n+          let slots = List.concat (List.map stk_elts_from_bot stks) in\n+          let live =\n+            List.filter\n+              (fun i -> Hashtbl.mem live_block_slots i)\n+              slots\n+          in\n+            note_drops s live\n       | _ -> ()\n   in\n "}, {"sha": "39a0b6e89bc1bc29ec0499539fda1234e2e9f67b", "filename": "src/test/run-pass/vec-late-init.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b3cf793bd90a55a89fbac435538bff1e838ff6b4/src%2Ftest%2Frun-pass%2Fvec-late-init.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3cf793bd90a55a89fbac435538bff1e838ff6b4/src%2Ftest%2Frun-pass%2Fvec-late-init.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvec-late-init.rs?ref=b3cf793bd90a55a89fbac435538bff1e838ff6b4", "patch": "@@ -0,0 +1,9 @@\n+fn main() {\n+  let vec[int] later;\n+  if (true) {\n+    later = vec(1);\n+  } else {\n+    later = vec(2);\n+  }\n+  log later.(0);\n+}\n\\ No newline at end of file"}]}