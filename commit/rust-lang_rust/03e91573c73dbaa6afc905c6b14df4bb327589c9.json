{"sha": "03e91573c73dbaa6afc905c6b14df4bb327589c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzZTkxNTczYzczZGJhYTZhZmM5MDVjNmIxNGRmNGJiMzI3NTg5Yzk=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-01-06T22:17:23Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-01-07T00:32:51Z"}, "message": "Don't read forever on a file descriptor\n\nSimilarly to the recent commit to do this for networking, there's no reason that\na read on a file descriptor should continue reading until the entire buffer is\nfull. This makes sense when dealing with literal files, but when dealing with\nthings like stdin this doesn't make sense.", "tree": {"sha": "5518b4e70db6ece31171438d7eb74ca4393d59bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5518b4e70db6ece31171438d7eb74ca4393d59bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03e91573c73dbaa6afc905c6b14df4bb327589c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03e91573c73dbaa6afc905c6b14df4bb327589c9", "html_url": "https://github.com/rust-lang/rust/commit/03e91573c73dbaa6afc905c6b14df4bb327589c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03e91573c73dbaa6afc905c6b14df4bb327589c9/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3afa0b97c4ce81b3bbfd1e0dd4a6609742957678", "url": "https://api.github.com/repos/rust-lang/rust/commits/3afa0b97c4ce81b3bbfd1e0dd4a6609742957678", "html_url": "https://github.com/rust-lang/rust/commit/3afa0b97c4ce81b3bbfd1e0dd4a6609742957678"}], "stats": {"total": 32, "additions": 27, "deletions": 5}, "files": [{"sha": "dac1ca98cf9d4ef5c097a2767f16df7f301d74ad", "filename": "src/libnative/io/file.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/03e91573c73dbaa6afc905c6b14df4bb327589c9/src%2Flibnative%2Fio%2Ffile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03e91573c73dbaa6afc905c6b14df4bb327589c9/src%2Flibnative%2Fio%2Ffile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Fio%2Ffile.rs?ref=03e91573c73dbaa6afc905c6b14df4bb327589c9", "patch": "@@ -79,10 +79,10 @@ impl FileDesc {\n     pub fn inner_read(&mut self, buf: &mut [u8]) -> Result<uint, IoError> {\n         #[cfg(windows)] type rlen = libc::c_uint;\n         #[cfg(not(windows))] type rlen = libc::size_t;\n-        let ret = keep_going(buf, |buf, len| {\n-            unsafe {\n-                libc::read(self.fd, buf as *mut libc::c_void, len as rlen) as i64\n-            }\n+        let ret = retry(|| unsafe {\n+            libc::read(self.fd,\n+                       buf.as_ptr() as *mut libc::c_void,\n+                       buf.len() as rlen) as libc::c_int\n         });\n         if ret == 0 {\n             Err(io::standard_error(io::EndOfFile))"}, {"sha": "31395216f2b58cae92bafa4ce4d80e413c4dcbe7", "filename": "src/libnative/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/03e91573c73dbaa6afc905c6b14df4bb327589c9/src%2Flibnative%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03e91573c73dbaa6afc905c6b14df4bb327589c9/src%2Flibnative%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Flib.rs?ref=03e91573c73dbaa6afc905c6b14df4bb327589c9", "patch": "@@ -34,7 +34,7 @@ pub mod io;\n pub mod task;\n \n // XXX: this should not exist here\n-#[cfg(stage0)]\n+#[cfg(stage0, nativestart)]\n #[lang = \"start\"]\n pub fn lang_start(main: *u8, argc: int, argv: **u8) -> int {\n     use std::cast;"}, {"sha": "e3f2cc2384c2713e0b2e342961b7d8bf03a3a309", "filename": "src/libstd/io/pipe.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/03e91573c73dbaa6afc905c6b14df4bb327589c9/src%2Flibstd%2Fio%2Fpipe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03e91573c73dbaa6afc905c6b14df4bb327589c9/src%2Flibstd%2Fio%2Fpipe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fpipe.rs?ref=03e91573c73dbaa6afc905c6b14df4bb327589c9", "patch": "@@ -80,3 +80,25 @@ impl Writer for PipeStream {\n         }\n     }\n }\n+\n+#[cfg(test)]\n+mod test {\n+    iotest!(fn partial_read() {\n+        use os;\n+        use io::pipe::PipeStream;\n+\n+        let os::Pipe { input, out } = os::pipe();\n+        let out = PipeStream::open(out);\n+        let mut input = PipeStream::open(input);\n+        let (p, c) = Chan::new();\n+        do spawn {\n+            let mut out = out;\n+            out.write([10]);\n+            p.recv(); // don't close the pipe until the other read has finished\n+        }\n+\n+        let mut buf = [0, ..10];\n+        input.read(buf);\n+        c.send(());\n+    })\n+}"}]}