{"sha": "487fa9568b69753fecb74a8460109239f4bf3631", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4N2ZhOTU2OGI2OTc1M2ZlY2I3NGE4NDYwMTA5MjM5ZjRiZjM2MzE=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-04-03T21:09:16Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-04-04T00:11:26Z"}, "message": "Test fixes from the rollup", "tree": {"sha": "825968a6d9424674217c04ff35cc6f5daf42be43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/825968a6d9424674217c04ff35cc6f5daf42be43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/487fa9568b69753fecb74a8460109239f4bf3631", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/487fa9568b69753fecb74a8460109239f4bf3631", "html_url": "https://github.com/rust-lang/rust/commit/487fa9568b69753fecb74a8460109239f4bf3631", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/487fa9568b69753fecb74a8460109239f4bf3631/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57e0908af395af1c10e28600b785b5366a43660c", "url": "https://api.github.com/repos/rust-lang/rust/commits/57e0908af395af1c10e28600b785b5366a43660c", "html_url": "https://github.com/rust-lang/rust/commit/57e0908af395af1c10e28600b785b5366a43660c"}], "stats": {"total": 36, "additions": 23, "deletions": 13}, "files": [{"sha": "5c1b6cd47910addec9809d2f69af499161be96f7", "filename": "src/libstd/rt/global_heap.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/487fa9568b69753fecb74a8460109239f4bf3631/src%2Flibstd%2Frt%2Fglobal_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/487fa9568b69753fecb74a8460109239f4bf3631/src%2Flibstd%2Frt%2Fglobal_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fglobal_heap.rs?ref=487fa9568b69753fecb74a8460109239f4bf3631", "patch": "@@ -64,16 +64,16 @@ pub unsafe fn realloc_raw(ptr: *mut u8, size: uint) -> *mut u8 {\n     }\n }\n \n-// The compiler never calls `exchange_free` on ~ZeroSizeType, so zero-size\n-// allocations can point to this `static`. It would be incorrect to use a null\n-// pointer, due to enums assuming types like unique pointers are never null.\n-static EMPTY: () = ();\n-\n /// The allocator for unique pointers without contained managed pointers.\n #[cfg(not(test))]\n #[lang=\"exchange_malloc\"]\n #[inline]\n pub unsafe fn exchange_malloc(size: uint) -> *mut u8 {\n+    // The compiler never calls `exchange_free` on ~ZeroSizeType, so zero-size\n+    // allocations can point to this `static`. It would be incorrect to use a null\n+    // pointer, due to enums assuming types like unique pointers are never null.\n+    static EMPTY: () = ();\n+\n     if size == 0 {\n         &EMPTY as *() as *mut u8\n     } else {"}, {"sha": "17251d31351ab303b72be6c41091c02391280fba", "filename": "src/libsyntax/abi.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/487fa9568b69753fecb74a8460109239f4bf3631/src%2Flibsyntax%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/487fa9568b69753fecb74a8460109239f4bf3631/src%2Flibsyntax%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fabi.rs?ref=487fa9568b69753fecb74a8460109239f4bf3631", "patch": "@@ -193,12 +193,12 @@ fn indices_are_correct() {\n \n #[test]\n fn pick_uniplatform() {\n-    assert_eq!(Stdcall.for_arch(OsLinux, X86), Some(Stdcall));\n-    assert_eq!(Stdcall.for_arch(OsLinux, Arm), None);\n-    assert_eq!(System.for_arch(OsLinux, X86), Some(C));\n-    assert_eq!(System.for_arch(OsWin32, X86), Some(Stdcall));\n-    assert_eq!(System.for_arch(OsWin32, X86_64), Some(C));\n-    assert_eq!(System.for_arch(OsWin32, Arm), Some(C));\n-    assert_eq!(Stdcall.for_arch(OsWin32, X86), Some(Stdcall));\n-    assert_eq!(Stdcall.for_arch(OsWin32, X86_64), Some(Stdcall));\n+    assert_eq!(Stdcall.for_target(OsLinux, X86), Some(Stdcall));\n+    assert_eq!(Stdcall.for_target(OsLinux, Arm), None);\n+    assert_eq!(System.for_target(OsLinux, X86), Some(C));\n+    assert_eq!(System.for_target(OsWin32, X86), Some(Stdcall));\n+    assert_eq!(System.for_target(OsWin32, X86_64), Some(C));\n+    assert_eq!(System.for_target(OsWin32, Arm), Some(C));\n+    assert_eq!(Stdcall.for_target(OsWin32, X86), Some(Stdcall));\n+    assert_eq!(Stdcall.for_target(OsWin32, X86_64), Some(Stdcall));\n }"}, {"sha": "4f07660779b2692c8c5a3c9647cda6017f221fd2", "filename": "src/test/bench/rt-spawn-rate.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/487fa9568b69753fecb74a8460109239f4bf3631/src%2Ftest%2Fbench%2Frt-spawn-rate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/487fa9568b69753fecb74a8460109239f4bf3631/src%2Ftest%2Fbench%2Frt-spawn-rate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Frt-spawn-rate.rs?ref=487fa9568b69753fecb74a8460109239f4bf3631", "patch": "@@ -8,13 +8,23 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![no_start]\n+\n+extern crate green;\n+extern crate rustuv;\n+\n use std::task::spawn;\n use std::os;\n use std::uint;\n \n // Very simple spawn rate test. Spawn N tasks that do nothing and\n // return.\n \n+#[start]\n+fn start(argc: int, argv: **u8) -> int {\n+    green::start(argc, argv, rustuv::event_loop, main)\n+}\n+\n fn main() {\n \n     let args = os::args();"}]}