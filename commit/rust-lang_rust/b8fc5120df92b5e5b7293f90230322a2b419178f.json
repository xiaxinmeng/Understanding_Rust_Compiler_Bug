{"sha": "b8fc5120df92b5e5b7293f90230322a2b419178f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4ZmM1MTIwZGY5MmI1ZTViNzI5M2Y5MDIzMDMyMmEyYjQxOTE3OGY=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2016-11-13T16:54:39Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2016-11-13T16:54:39Z"}, "message": "coherence: skip impls with an erroneous trait ref\n\nImpls with a erroneous trait ref are already ignored in the first part\nof coherence, so ignore them in the second part too. This avoids\ncascading coherence errors when 1 impl of a trait has an error.", "tree": {"sha": "ef4b5978185669e2fc201c230ed2e73fe79ec1a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef4b5978185669e2fc201c230ed2e73fe79ec1a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8fc5120df92b5e5b7293f90230322a2b419178f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8fc5120df92b5e5b7293f90230322a2b419178f", "html_url": "https://github.com/rust-lang/rust/commit/b8fc5120df92b5e5b7293f90230322a2b419178f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8fc5120df92b5e5b7293f90230322a2b419178f/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6b98eaa40d2c81890cbeb31258aadb238f07279", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6b98eaa40d2c81890cbeb31258aadb238f07279", "html_url": "https://github.com/rust-lang/rust/commit/b6b98eaa40d2c81890cbeb31258aadb238f07279"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "df3a79f09bd06131e30f27971597af785d426cd1", "filename": "src/librustc_typeck/coherence/overlap.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b8fc5120df92b5e5b7293f90230322a2b419178f/src%2Flibrustc_typeck%2Fcoherence%2Foverlap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8fc5120df92b5e5b7293f90230322a2b419178f/src%2Flibrustc_typeck%2Fcoherence%2Foverlap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Foverlap.rs?ref=b8fc5120df92b5e5b7293f90230322a2b419178f", "patch": "@@ -14,7 +14,7 @@\n \n use hir::def_id::DefId;\n use rustc::traits::{self, Reveal};\n-use rustc::ty::{self, TyCtxt};\n+use rustc::ty::{self, TyCtxt, TypeFoldable};\n use syntax::ast;\n use rustc::dep_graph::DepNode;\n use rustc::hir;\n@@ -134,6 +134,12 @@ impl<'cx, 'tcx, 'v> intravisit::Visitor<'v> for OverlapChecker<'cx, 'tcx> {\n                 let trait_ref = self.tcx.impl_trait_ref(impl_def_id).unwrap();\n                 let trait_def_id = trait_ref.def_id;\n \n+                if trait_ref.references_error() {\n+                    debug!(\"coherence: skipping impl {:?} with error {:?}\",\n+                           impl_def_id, trait_ref);\n+                    return\n+                }\n+\n                 let _task =\n                     self.tcx.dep_graph.in_task(DepNode::CoherenceOverlapCheck(trait_def_id));\n "}, {"sha": "b33f27fbc8a03f43180f720f46c46d8e8e82b6b1", "filename": "src/test/compile-fail/coherence-error-suppression.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/b8fc5120df92b5e5b7293f90230322a2b419178f/src%2Ftest%2Fcompile-fail%2Fcoherence-error-suppression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8fc5120df92b5e5b7293f90230322a2b419178f/src%2Ftest%2Fcompile-fail%2Fcoherence-error-suppression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcoherence-error-suppression.rs?ref=b8fc5120df92b5e5b7293f90230322a2b419178f", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// check that error types in coherence do not cause error cascades.\n+\n+trait Foo {}\n+\n+impl Foo for i8 {}\n+impl Foo for i16 {}\n+impl Foo for i32 {}\n+impl Foo for i64 {}\n+impl Foo for DoesNotExist {} //~ ERROR `DoesNotExist` is undefined\n+impl Foo for u8 {}\n+impl Foo for u16 {}\n+impl Foo for u32 {}\n+impl Foo for u64 {}\n+\n+fn main() {}"}]}