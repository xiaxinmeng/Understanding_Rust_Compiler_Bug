{"sha": "889a4d9a0baf06497106eb705143e379c180bd70", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4OWE0ZDlhMGJhZjA2NDk3MTA2ZWI3MDUxNDNlMzc5YzE4MGJkNzA=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-07-20T20:56:50Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-07-22T20:12:34Z"}, "message": "Change error code number", "tree": {"sha": "e64b865915c455cb604e7889d67dbd707e26e712", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e64b865915c455cb604e7889d67dbd707e26e712"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/889a4d9a0baf06497106eb705143e379c180bd70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/889a4d9a0baf06497106eb705143e379c180bd70", "html_url": "https://github.com/rust-lang/rust/commit/889a4d9a0baf06497106eb705143e379c180bd70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/889a4d9a0baf06497106eb705143e379c180bd70/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53d96b5159ee4eb937728bbc33c28c3b98ebebd6", "url": "https://api.github.com/repos/rust-lang/rust/commits/53d96b5159ee4eb937728bbc33c28c3b98ebebd6", "html_url": "https://github.com/rust-lang/rust/commit/53d96b5159ee4eb937728bbc33c28c3b98ebebd6"}], "stats": {"total": 45, "additions": 22, "deletions": 23}, "files": [{"sha": "72302962d8603a240718f9ae4dea124d34a5eab0", "filename": "src/librustc_error_codes/error_codes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/889a4d9a0baf06497106eb705143e379c180bd70/src%2Flibrustc_error_codes%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/889a4d9a0baf06497106eb705143e379c180bd70/src%2Flibrustc_error_codes%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes.rs?ref=889a4d9a0baf06497106eb705143e379c180bd70", "patch": "@@ -633,5 +633,5 @@ E0771: include_str!(\"./error_codes/E0771.md\"),\n     E0755, // `#[ffi_pure]` is only allowed on foreign functions\n     E0756, // `#[ffi_const]` is only allowed on foreign functions\n     E0757, // `#[ffi_const]` functions cannot be `#[ffi_pure]`\n-    E0767, // `'static' obligation coming from `impl dyn Trait {}` or `impl Foo for dyn Bar {}`.\n+    E0772, // `'static' obligation coming from `impl dyn Trait {}` or `impl Foo for dyn Bar {}`.\n }"}, {"sha": "4fa6d9d2394242cb56b69ad0ad19f5b3e4b4e745", "filename": "src/librustc_infer/infer/error_reporting/nice_region_error/static_impl_trait.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/889a4d9a0baf06497106eb705143e379c180bd70/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/889a4d9a0baf06497106eb705143e379c180bd70/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs?ref=889a4d9a0baf06497106eb705143e379c180bd70", "patch": "@@ -48,7 +48,7 @@ impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {\n                     let mut err = struct_span_err!(\n                         tcx.sess,\n                         cause.span,\n-                        E0767,\n+                        E0772,\n                         \"{} has {} but calling `{}` introduces an implicit `'static` lifetime \\\n                          requirement\",\n                         param\n@@ -196,7 +196,7 @@ impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {\n         }\n         if let (Some(ident), true) = (override_error_code, fn_returns.is_empty()) {\n             // Provide a more targetted error code and description.\n-            err.code(rustc_errors::error_code!(E0767));\n+            err.code(rustc_errors::error_code!(E0772));\n             err.set_primary_message(&format!(\n                 \"{} has {} but calling `{}` introduces an implicit `'static` lifetime \\\n                 requirement\","}, {"sha": "acf0c0ece402010799a0af429648e19f0d4f98a4", "filename": "src/test/ui/suggestions/impl-on-dyn-trait-with-implicit-static-bound-needing-more-suggestions.nll.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/889a4d9a0baf06497106eb705143e379c180bd70/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-on-dyn-trait-with-implicit-static-bound-needing-more-suggestions.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/889a4d9a0baf06497106eb705143e379c180bd70/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-on-dyn-trait-with-implicit-static-bound-needing-more-suggestions.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-on-dyn-trait-with-implicit-static-bound-needing-more-suggestions.nll.stderr?ref=889a4d9a0baf06497106eb705143e379c180bd70", "patch": "@@ -1,5 +1,5 @@\n error[E0597]: `val` does not live long enough\n-  --> $DIR/impl-on-dyn-trait-with-implicit-static-bound-needing-more-suggestions.rs:22:9\n+  --> $DIR/impl-on-dyn-trait-with-implicit-static-bound-needing-more-suggestions.rs:21:9\n    |\n LL |     fn use_it<'a>(val: Box<dyn ObjectTrait<Assoc = i32>>) -> impl OtherTrait<'a> {\n    |               -- lifetime `'a` defined here                  ------------------- opaque type requires that `val` is borrowed for `'a`\n@@ -14,7 +14,7 @@ LL |     fn use_it<'a>(val: Box<dyn ObjectTrait<Assoc = i32>>) -> impl OtherTrai\n    |                                                                                  ^^^^\n \n error[E0515]: cannot return value referencing function parameter `val`\n-  --> $DIR/impl-on-dyn-trait-with-implicit-static-bound-needing-more-suggestions.rs:44:9\n+  --> $DIR/impl-on-dyn-trait-with-implicit-static-bound-needing-more-suggestions.rs:43:9\n    |\n LL |         val.use_self()\n    |         ---^^^^^^^^^^^\n@@ -23,7 +23,7 @@ LL |         val.use_self()\n    |         `val` is borrowed here\n \n error[E0515]: cannot return value referencing function parameter `val`\n-  --> $DIR/impl-on-dyn-trait-with-implicit-static-bound-needing-more-suggestions.rs:110:9\n+  --> $DIR/impl-on-dyn-trait-with-implicit-static-bound-needing-more-suggestions.rs:109:9\n    |\n LL |         val.use_self()\n    |         ---^^^^^^^^^^^"}, {"sha": "b2dc16a27e310006490f28118a9781421bc3b9d4", "filename": "src/test/ui/suggestions/impl-on-dyn-trait-with-implicit-static-bound-needing-more-suggestions.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/889a4d9a0baf06497106eb705143e379c180bd70/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-on-dyn-trait-with-implicit-static-bound-needing-more-suggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/889a4d9a0baf06497106eb705143e379c180bd70/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-on-dyn-trait-with-implicit-static-bound-needing-more-suggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-on-dyn-trait-with-implicit-static-bound-needing-more-suggestions.rs?ref=889a4d9a0baf06497106eb705143e379c180bd70", "patch": "@@ -1,4 +1,3 @@\n-\n // FIXME: the following cases need to suggest more things to make users reach a working end state.\n \n mod bav {\n@@ -64,7 +63,7 @@ mod bay {\n     impl Bar for i32 {}\n \n     fn use_it<'a>(val: Box<dyn ObjectTrait<Assoc = i32> + 'a>) -> &'a () {\n-        val.use_self() //~ ERROR E0767\n+        val.use_self() //~ ERROR E0772\n     }\n }\n "}, {"sha": "00971b41c7ce652e5b2bffc185aab7278d7324df", "filename": "src/test/ui/suggestions/impl-on-dyn-trait-with-implicit-static-bound-needing-more-suggestions.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/889a4d9a0baf06497106eb705143e379c180bd70/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-on-dyn-trait-with-implicit-static-bound-needing-more-suggestions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/889a4d9a0baf06497106eb705143e379c180bd70/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-on-dyn-trait-with-implicit-static-bound-needing-more-suggestions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-on-dyn-trait-with-implicit-static-bound-needing-more-suggestions.stderr?ref=889a4d9a0baf06497106eb705143e379c180bd70", "patch": "@@ -1,5 +1,5 @@\n error[E0597]: `val` does not live long enough\n-  --> $DIR/impl-on-dyn-trait-with-implicit-static-bound-needing-more-suggestions.rs:22:9\n+  --> $DIR/impl-on-dyn-trait-with-implicit-static-bound-needing-more-suggestions.rs:21:9\n    |\n LL |     fn use_it<'a>(val: Box<dyn ObjectTrait<Assoc = i32>>) -> impl OtherTrait<'a> {\n    |               -- lifetime `'a` defined here                  ------------------- opaque type requires that `val` is borrowed for `'a`\n@@ -14,7 +14,7 @@ LL |     fn use_it<'a>(val: Box<dyn ObjectTrait<Assoc = i32>>) -> impl OtherTrai\n    |                                                                                  ^^^^\n \n error[E0515]: cannot return value referencing function parameter `val`\n-  --> $DIR/impl-on-dyn-trait-with-implicit-static-bound-needing-more-suggestions.rs:44:9\n+  --> $DIR/impl-on-dyn-trait-with-implicit-static-bound-needing-more-suggestions.rs:43:9\n    |\n LL |         val.use_self()\n    |         ---^^^^^^^^^^^\n@@ -23,24 +23,24 @@ LL |         val.use_self()\n    |         `val` is borrowed here\n \n error[E0515]: cannot return value referencing function parameter `val`\n-  --> $DIR/impl-on-dyn-trait-with-implicit-static-bound-needing-more-suggestions.rs:110:9\n+  --> $DIR/impl-on-dyn-trait-with-implicit-static-bound-needing-more-suggestions.rs:109:9\n    |\n LL |         val.use_self()\n    |         ---^^^^^^^^^^^\n    |         |\n    |         returns a value referencing data owned by the current function\n    |         `val` is borrowed here\n \n-error[E0767]: `val` has lifetime `'a` but calling `use_self` introduces an implicit `'static` lifetime requirement\n-  --> $DIR/impl-on-dyn-trait-with-implicit-static-bound-needing-more-suggestions.rs:67:13\n+error[E0772]: `val` has lifetime `'a` but calling `use_self` introduces an implicit `'static` lifetime requirement\n+  --> $DIR/impl-on-dyn-trait-with-implicit-static-bound-needing-more-suggestions.rs:66:13\n    |\n LL |     fn use_it<'a>(val: Box<dyn ObjectTrait<Assoc = i32> + 'a>) -> &'a () {\n    |                        -------------------------------------- this data with lifetime `'a`...\n LL |         val.use_self()\n    |             ^^^^^^^^ ...is captured and required to live as long as `'static` here\n    |\n note: the used `impl` has a `'static` requirement\n-  --> $DIR/impl-on-dyn-trait-with-implicit-static-bound-needing-more-suggestions.rs:61:30\n+  --> $DIR/impl-on-dyn-trait-with-implicit-static-bound-needing-more-suggestions.rs:60:30\n    |\n LL |     impl MyTrait for Box<dyn ObjectTrait<Assoc = i32>> {\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^ this has an implicit `'static` lifetime requirement"}, {"sha": "3c10f85d9423a8997ad77f5b4e10006113d118ae", "filename": "src/test/ui/suggestions/impl-on-dyn-trait-with-implicit-static-bound.fixed", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/889a4d9a0baf06497106eb705143e379c180bd70/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-on-dyn-trait-with-implicit-static-bound.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/889a4d9a0baf06497106eb705143e379c180bd70/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-on-dyn-trait-with-implicit-static-bound.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-on-dyn-trait-with-implicit-static-bound.fixed?ref=889a4d9a0baf06497106eb705143e379c180bd70", "patch": "@@ -34,7 +34,7 @@ mod bar {\n     impl Irrelevant for dyn ObjectTrait {}\n \n     fn use_it<'a>(val: &'a dyn ObjectTrait) -> &'a () {\n-        val.use_self() //~ ERROR E0767\n+        val.use_self() //~ ERROR E0772\n     }\n }\n \n@@ -51,7 +51,7 @@ mod baz {\n     impl Irrelevant for Box<dyn ObjectTrait> {}\n \n     fn use_it<'a>(val: &'a Box<dyn ObjectTrait + 'a>) -> &'a () {\n-        val.use_self() //~ ERROR E0767\n+        val.use_self() //~ ERROR E0772\n     }\n }\n \n@@ -66,7 +66,7 @@ mod bat {\n     }\n \n     fn use_it<'a>(val: &'a dyn ObjectTrait) -> impl OtherTrait<'a> + 'a {\n-        val.use_self() //~ ERROR E0767\n+        val.use_self() //~ ERROR E0772\n     }\n }\n "}, {"sha": "88ab03dfc1ef1837d584cc9ffadbb40b4bf584a9", "filename": "src/test/ui/suggestions/impl-on-dyn-trait-with-implicit-static-bound.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/889a4d9a0baf06497106eb705143e379c180bd70/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-on-dyn-trait-with-implicit-static-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/889a4d9a0baf06497106eb705143e379c180bd70/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-on-dyn-trait-with-implicit-static-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-on-dyn-trait-with-implicit-static-bound.rs?ref=889a4d9a0baf06497106eb705143e379c180bd70", "patch": "@@ -34,7 +34,7 @@ mod bar {\n     impl Irrelevant for dyn ObjectTrait {}\n \n     fn use_it<'a>(val: &'a dyn ObjectTrait) -> &'a () {\n-        val.use_self() //~ ERROR E0767\n+        val.use_self() //~ ERROR E0772\n     }\n }\n \n@@ -51,7 +51,7 @@ mod baz {\n     impl Irrelevant for Box<dyn ObjectTrait> {}\n \n     fn use_it<'a>(val: &'a Box<dyn ObjectTrait + 'a>) -> &'a () {\n-        val.use_self() //~ ERROR E0767\n+        val.use_self() //~ ERROR E0772\n     }\n }\n \n@@ -66,7 +66,7 @@ mod bat {\n     }\n \n     fn use_it<'a>(val: &'a dyn ObjectTrait) -> impl OtherTrait<'a> + 'a {\n-        val.use_self() //~ ERROR E0767\n+        val.use_self() //~ ERROR E0772\n     }\n }\n "}, {"sha": "2fb6c25fd17028a417650e3419660658a11fa900", "filename": "src/test/ui/suggestions/impl-on-dyn-trait-with-implicit-static-bound.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/889a4d9a0baf06497106eb705143e379c180bd70/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-on-dyn-trait-with-implicit-static-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/889a4d9a0baf06497106eb705143e379c180bd70/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-on-dyn-trait-with-implicit-static-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-on-dyn-trait-with-implicit-static-bound.stderr?ref=889a4d9a0baf06497106eb705143e379c180bd70", "patch": "@@ -18,7 +18,7 @@ help: consider relaxing the implicit `'static` requirement\n LL |     impl<T> MyTrait<T> for dyn ObjectTrait<T> + '_ {\n    |                                               ^^^^\n \n-error[E0767]: `val` has lifetime `'a` but calling `use_self` introduces an implicit `'static` lifetime requirement\n+error[E0772]: `val` has lifetime `'a` but calling `use_self` introduces an implicit `'static` lifetime requirement\n   --> $DIR/impl-on-dyn-trait-with-implicit-static-bound.rs:69:13\n    |\n LL |     fn use_it<'a>(val: &'a dyn ObjectTrait) -> impl OtherTrait<'a> + 'a {\n@@ -89,7 +89,7 @@ help: consider relaxing the implicit `'static` requirement\n LL |     impl MyTrait for dyn ObjectTrait + '_ {}\n    |                                      ^^^^\n \n-error[E0767]: `val` has lifetime `'a` but calling `use_self` introduces an implicit `'static` lifetime requirement\n+error[E0772]: `val` has lifetime `'a` but calling `use_self` introduces an implicit `'static` lifetime requirement\n   --> $DIR/impl-on-dyn-trait-with-implicit-static-bound.rs:37:13\n    |\n LL |     fn use_it<'a>(val: &'a dyn ObjectTrait) -> &'a () {\n@@ -109,7 +109,7 @@ help: consider relaxing the implicit `'static` requirement\n LL |     impl MyTrait for dyn ObjectTrait + '_ {\n    |                                      ^^^^\n \n-error[E0767]: `val` has lifetime `'a` but calling `use_self` introduces an implicit `'static` lifetime requirement\n+error[E0772]: `val` has lifetime `'a` but calling `use_self` introduces an implicit `'static` lifetime requirement\n   --> $DIR/impl-on-dyn-trait-with-implicit-static-bound.rs:54:13\n    |\n LL |     fn use_it<'a>(val: &'a Box<dyn ObjectTrait + 'a>) -> &'a () {"}]}