{"sha": "d459e805df076ace12ed3f7f57f2b1378f0e2403", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0NTllODA1ZGYwNzZhY2UxMmVkM2Y3ZjU3ZjJiMTM3OGYwZTI0MDM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-31T07:11:49Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-31T07:11:49Z"}, "message": "auto merge of #11142 : alan-andrade/rust/improve_opts_example, r=cmr\n\nRan into this in practice, fixing it to improve example correctness.", "tree": {"sha": "5430196a041283ed23343205d30f43085e0a9e6a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5430196a041283ed23343205d30f43085e0a9e6a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d459e805df076ace12ed3f7f57f2b1378f0e2403", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d459e805df076ace12ed3f7f57f2b1378f0e2403", "html_url": "https://github.com/rust-lang/rust/commit/d459e805df076ace12ed3f7f57f2b1378f0e2403", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d459e805df076ace12ed3f7f57f2b1378f0e2403/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b88138a3ec4bb142fa514a863b62f955bf1c44e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/b88138a3ec4bb142fa514a863b62f955bf1c44e3", "html_url": "https://github.com/rust-lang/rust/commit/b88138a3ec4bb142fa514a863b62f955bf1c44e3"}, {"sha": "ff801d662ebdebee4845dcc825b366215e4b88bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff801d662ebdebee4845dcc825b366215e4b88bf", "html_url": "https://github.com/rust-lang/rust/commit/ff801d662ebdebee4845dcc825b366215e4b88bf"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "5debc9991928e489a151a32e6d14593c6c87a2d9", "filename": "src/libextra/getopts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d459e805df076ace12ed3f7f57f2b1378f0e2403/src%2Flibextra%2Fgetopts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d459e805df076ace12ed3f7f57f2b1378f0e2403/src%2Flibextra%2Fgetopts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fgetopts.rs?ref=d459e805df076ace12ed3f7f57f2b1378f0e2403", "patch": "@@ -31,7 +31,7 @@\n //!\n //! ~~~{.rust}\n //! extern mod extra;\n-//! use extra::getopts::*;\n+//! use extra::getopts::{optopt,optflag,getopts,Opt};\n //! use std::os;\n //!\n //! fn do_work(inp: &str, out: Option<~str>) {"}, {"sha": "b21b1db955f05c31269b2b612f6720d05efbbcdc", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d459e805df076ace12ed3f7f57f2b1378f0e2403/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d459e805df076ace12ed3f7f57f2b1378f0e2403/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=d459e805df076ace12ed3f7f57f2b1378f0e2403", "patch": "@@ -138,7 +138,6 @@ fn maketest(s: &str, cratename: &str) -> @str {\n     let mut prog = ~r\"\n #[deny(warnings)];\n #[allow(unused_variable, dead_assignment, unused_mut, attribute_usage, dead_code)];\n-#[feature(macro_rules, globs, struct_variant, managed_boxes)];\n \";\n     if s.contains(\"extra\") {\n         prog.push_str(\"extern mod extra;\\n\");"}, {"sha": "4516fb85f9095c0b2c0b8c24eede2e7aab487b72", "filename": "src/libstd/str.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d459e805df076ace12ed3f7f57f2b1378f0e2403/src%2Flibstd%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d459e805df076ace12ed3f7f57f2b1378f0e2403/src%2Flibstd%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstr.rs?ref=d459e805df076ace12ed3f7f57f2b1378f0e2403", "patch": "@@ -38,11 +38,15 @@ there are three common kinds of strings in rust:\n As an example, here's a few different kinds of strings.\n \n ```rust\n-let owned_string = ~\"I am an owned string\";\n-let managed_string = @\"This string is garbage-collected\";\n-let borrowed_string1 = \"This string is borrowed with the 'static lifetime\";\n-let borrowed_string2: &str = owned_string;   // owned strings can be borrowed\n-let borrowed_string3: &str = managed_string; // managed strings can also be borrowed\n+#[feature(managed_boxes)];\n+\n+fn main() {\n+    let owned_string = ~\"I am an owned string\";\n+    let managed_string = @\"This string is garbage-collected\";\n+    let borrowed_string1 = \"This string is borrowed with the 'static lifetime\";\n+    let borrowed_string2: &str = owned_string;   // owned strings can be borrowed\n+    let borrowed_string3: &str = managed_string; // managed strings can also be borrowed\n+}\n  ```\n \n From the example above, you can see that rust has 3 different kinds of string"}]}