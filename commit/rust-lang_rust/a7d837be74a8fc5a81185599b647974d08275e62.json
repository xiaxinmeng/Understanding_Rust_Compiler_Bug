{"sha": "a7d837be74a8fc5a81185599b647974d08275e62", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3ZDgzN2JlNzRhOGZjNWE4MTE4NTU5OWI2NDc5NzRkMDgyNzVlNjI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-19T22:26:52Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-20T18:04:00Z"}, "message": "Stop parsing .() indexes", "tree": {"sha": "c8da533586bc474a121364f85d18dee9b4d8aa82", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8da533586bc474a121364f85d18dee9b4d8aa82"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7d837be74a8fc5a81185599b647974d08275e62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7d837be74a8fc5a81185599b647974d08275e62", "html_url": "https://github.com/rust-lang/rust/commit/a7d837be74a8fc5a81185599b647974d08275e62", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7d837be74a8fc5a81185599b647974d08275e62/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "518dc52f85c2efb67aaa1208c02e9a7e0bdaca49", "url": "https://api.github.com/repos/rust-lang/rust/commits/518dc52f85c2efb67aaa1208c02e9a7e0bdaca49", "html_url": "https://github.com/rust-lang/rust/commit/518dc52f85c2efb67aaa1208c02e9a7e0bdaca49"}], "stats": {"total": 7, "additions": 0, "deletions": 7}, "files": [{"sha": "ea72bcdb680f0bcc3ea0814b6a21cfadeca77968", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a7d837be74a8fc5a81185599b647974d08275e62/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7d837be74a8fc5a81185599b647974d08275e62/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=a7d837be74a8fc5a81185599b647974d08275e62", "patch": "@@ -1107,13 +1107,6 @@ fn parse_dot_or_call_expr_with(p: &parser, e: @ast::expr) -> @ast::expr {\n                 p.bump();\n                 e = mk_expr(p, lo, hi, ast::expr_field(e, p.get_str(i)));\n               }\n-              token::LPAREN. {\n-                p.bump();\n-                let ix = parse_expr(p);\n-                hi = ix.span.hi;\n-                expect(p, token::RPAREN);\n-                e = mk_expr(p, lo, hi, ast::expr_index(e, ix));\n-              }\n               t { unexpected(p, t); }\n             }\n           }"}]}