{"sha": "9b16c7a712f439a1cf60b539643164401bf0c9b5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliMTZjN2E3MTJmNDM5YTFjZjYwYjUzOTY0MzE2NDQwMWJmMGM5YjU=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-03-15T15:22:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-15T15:22:58Z"}, "message": "Rollup merge of #83132 - Aaron1011:fix/incr-cache-dummy, r=estebank\n\nDon't encode file information for span with a dummy location\n\nFixes #83112\n\nThe location information for a dummy span isn't real, so don't encode\nit. This brings the incr comp cache code into line with the Span\n`StableHash` impl, which doesn't hash the location information for dummy\nspans.\n\nPreviously, we would attempt to load the 'original' file from a dummy\nspan - if the file id changed (e.g. due to being moved on disk), we would get an\nICE, since the Span was still valid due to its hash being unchanged.", "tree": {"sha": "4caf061febb63fc305fa86acb3f9e440218f1eb8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4caf061febb63fc305fa86acb3f9e440218f1eb8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b16c7a712f439a1cf60b539643164401bf0c9b5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgT3vSCRBK7hj4Ov3rIwAAdHIIACnpV3Zlh+SbAs7qL+U3uXvV\nlVx6FJ4TeA6EF7AFIcPcQid1EelMycLEfoouNt/Vj3HYLKOi+BUKGHHRRNdEf37o\n3PhnI/xWEkJQ98ASQLbE2FZsosLJQKZJnvjvkH6Cm56+ypdt7iGA6MOE1mUDRY/E\nhTpG2G8YiZNjczCSmS7jQawn+vVBYurK8cPdlBwt6axOhjYcviCxLw77Lr2fUUWe\nVwaXOQzwsQF20lt3H+qir8+eGAzh48wSAbY6950yoMWCQhZIP7hUfL14CqtVTRPR\nJmcIB4ssdScusxbM2MrUvmaHxauPQKvqspboCw8dyylAByfs7i+dwQWRlBV8XYc=\n=b/6P\n-----END PGP SIGNATURE-----\n", "payload": "tree 4caf061febb63fc305fa86acb3f9e440218f1eb8\nparent d1f5f1d156dc68b4ca13678f3a63515df0b2e348\nparent 7429c688a5988d1f7f836f870b8689c44fa3c9de\nauthor Dylan DPC <dylan.dpc@gmail.com> 1615821778 +0100\ncommitter GitHub <noreply@github.com> 1615821778 +0100\n\nRollup merge of #83132 - Aaron1011:fix/incr-cache-dummy, r=estebank\n\nDon't encode file information for span with a dummy location\n\nFixes #83112\n\nThe location information for a dummy span isn't real, so don't encode\nit. This brings the incr comp cache code into line with the Span\n`StableHash` impl, which doesn't hash the location information for dummy\nspans.\n\nPreviously, we would attempt to load the 'original' file from a dummy\nspan - if the file id changed (e.g. due to being moved on disk), we would get an\nICE, since the Span was still valid due to its hash being unchanged.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b16c7a712f439a1cf60b539643164401bf0c9b5", "html_url": "https://github.com/rust-lang/rust/commit/9b16c7a712f439a1cf60b539643164401bf0c9b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b16c7a712f439a1cf60b539643164401bf0c9b5/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1f5f1d156dc68b4ca13678f3a63515df0b2e348", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1f5f1d156dc68b4ca13678f3a63515df0b2e348", "html_url": "https://github.com/rust-lang/rust/commit/d1f5f1d156dc68b4ca13678f3a63515df0b2e348"}, {"sha": "7429c688a5988d1f7f836f870b8689c44fa3c9de", "url": "https://api.github.com/repos/rust-lang/rust/commits/7429c688a5988d1f7f836f870b8689c44fa3c9de", "html_url": "https://github.com/rust-lang/rust/commit/7429c688a5988d1f7f836f870b8689c44fa3c9de"}], "stats": {"total": 32, "additions": 29, "deletions": 3}, "files": [{"sha": "78193acc74acdfc729a3a2b03ac5de354692f82d", "filename": "compiler/rustc_middle/src/ty/query/on_disk_cache.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9b16c7a712f439a1cf60b539643164401bf0c9b5/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery%2Fon_disk_cache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b16c7a712f439a1cf60b539643164401bf0c9b5/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery%2Fon_disk_cache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery%2Fon_disk_cache.rs?ref=9b16c7a712f439a1cf60b539643164401bf0c9b5", "patch": "@@ -1045,12 +1045,12 @@ where\n     E: 'a + OpaqueEncoder,\n {\n     fn encode(&self, s: &mut CacheEncoder<'a, 'tcx, E>) -> Result<(), E::Error> {\n-        if *self == DUMMY_SP {\n+        let span_data = self.data();\n+        if self.is_dummy() {\n             TAG_PARTIAL_SPAN.encode(s)?;\n-            return SyntaxContext::root().encode(s);\n+            return span_data.ctxt.encode(s);\n         }\n \n-        let span_data = self.data();\n         let pos = s.source_map.byte_pos_to_line_and_col(span_data.lo);\n         let partial_span = match &pos {\n             Some((file_lo, _, _)) => !file_lo.contains(span_data.hi),"}, {"sha": "76ecaba0f6a0bbdf96a044280006c2a4255701ff", "filename": "src/test/run-make/issue-83112-incr-test-moved-file/Makefile", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/9b16c7a712f439a1cf60b539643164401bf0c9b5/src%2Ftest%2Frun-make%2Fissue-83112-incr-test-moved-file%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/9b16c7a712f439a1cf60b539643164401bf0c9b5/src%2Ftest%2Frun-make%2Fissue-83112-incr-test-moved-file%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-83112-incr-test-moved-file%2FMakefile?ref=9b16c7a712f439a1cf60b539643164401bf0c9b5", "patch": "@@ -0,0 +1,25 @@\n+include ../../run-make-fulldeps/tools.mk\n+\n+# FIXME https://github.com/rust-lang/rust/issues/78911\n+# ignore-32bit wrong/no cross compiler and sometimes we pass wrong gcc args (-m64)\n+\n+# Regression test for issue #83112\n+# The generated test harness code contains spans with a dummy location,\n+# but a non-dummy SyntaxContext. Previously, the incremental cache was encoding\n+# these spans as a full span (with a source file index), instead of skipping\n+# the encoding of the location information. If the file gest moved, the hash\n+# of the span will be unchanged (since it has a dummy location), so the incr\n+# cache would end up try to load a non-existent file using the previously\n+# enccoded source file id.\n+\n+SRC=$(TMPDIR)/src\n+INCR=$(TMPDIR)/incr\n+\n+all:\n+\tmkdir $(SRC)\n+\tmkdir $(SRC)/mydir\n+\tmkdir $(INCR)\n+\tcp main.rs $(SRC)/main.rs\n+\t$(RUSTC) --test -C incremental=$(INCR) $(SRC)/main.rs\n+\tmv $(SRC)/main.rs $(SRC)/mydir/main.rs\n+\t$(RUSTC) --test -C incremental=$(INCR) $(SRC)/mydir/main.rs"}, {"sha": "f328e4d9d04c31d0d70d16d21a07d1613be9d577", "filename": "src/test/run-make/issue-83112-incr-test-moved-file/main.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9b16c7a712f439a1cf60b539643164401bf0c9b5/src%2Ftest%2Frun-make%2Fissue-83112-incr-test-moved-file%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b16c7a712f439a1cf60b539643164401bf0c9b5/src%2Ftest%2Frun-make%2Fissue-83112-incr-test-moved-file%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-83112-incr-test-moved-file%2Fmain.rs?ref=9b16c7a712f439a1cf60b539643164401bf0c9b5", "patch": "@@ -0,0 +1 @@\n+fn main() {}"}]}