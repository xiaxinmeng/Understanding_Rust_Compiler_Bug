{"sha": "e733311a95fcde5d4d41210577d22f08a5f07f1a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3MzMzMTFhOTVmY2RlNWQ0ZDQxMjEwNTc3ZDIyZjA4YTVmMDdmMWE=", "commit": {"author": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-04-11T18:52:11Z"}, "committer": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-04-11T18:52:11Z"}, "message": "Make sure RustWrapper.cpp is linked in.", "tree": {"sha": "03a17098ed3c164303cadc45e43f2e07e1f553bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/03a17098ed3c164303cadc45e43f2e07e1f553bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e733311a95fcde5d4d41210577d22f08a5f07f1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e733311a95fcde5d4d41210577d22f08a5f07f1a", "html_url": "https://github.com/rust-lang/rust/commit/e733311a95fcde5d4d41210577d22f08a5f07f1a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e733311a95fcde5d4d41210577d22f08a5f07f1a/comments", "author": null, "committer": null, "parents": [{"sha": "1f04c3dcefa7e01b3618cb79a0d2989c61fd1841", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f04c3dcefa7e01b3618cb79a0d2989c61fd1841", "html_url": "https://github.com/rust-lang/rust/commit/1f04c3dcefa7e01b3618cb79a0d2989c61fd1841"}], "stats": {"total": 36, "additions": 20, "deletions": 16}, "files": [{"sha": "1d04ea9cdb8efe27876d4ccab92fa04400b8a686", "filename": "Makefile.in", "status": "modified", "additions": 20, "deletions": 16, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/e733311a95fcde5d4d41210577d22f08a5f07f1a/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/e733311a95fcde5d4d41210577d22f08a5f07f1a/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=e733311a95fcde5d4d41210577d22f08a5f07f1a", "patch": "@@ -367,17 +367,18 @@ RUNTIME_LIBS := $(CFG_GCC_POST_LIB_FLAGS)\n # rustc LLVM-extensions (C++) library variables\n ######################################################################\n \n-RUSTLLVM_CS := $(addprefix rustllvm/, \\\n-                MachOObjectFile.cpp Object.cpp RustWrapper.cpp)\n+RUSTLLVM_LIB_CS := $(addprefix rustllvm/, \\\n+                     MachOObjectFile.cpp Object.cpp)\n+\n+RUSTLLVM_OBJS_CS := $(addprefix rustllvm/, RustWrapper.cpp)\n \n RUSTLLVM_HDR := rustllvm/include/llvm-c/Object.h\n RUSTLLVM_DEF := rustllvm/rustllvm$(CFG_DEF_SUFFIX)\n \n RUSTLLVM_INCS := -iquote $(CFG_LLVM_INCDIR) \\\n                  -iquote $(S)src/rustllvm/include\n-RUSTLLVM_OBJS := $(RUSTLLVM_CS:.cpp=.o)\n-RUSTLLVM_LIBS := $(CFG_LLVM_LDFLAGS) $(CFG_LLVM_LIBS) \\\n-                 $(CFG_GCC_POST_LIB_FLAGS)\n+RUSTLLVM_LIB_OBJS := $(RUSTLLVM_LIB_CS:.cpp=.o)\n+RUSTLLVM_OBJS_OBJS := $(RUSTLLVM_OBJS_CS:.cpp=.o)\n \n ######################################################################\n # Standard library variables\n@@ -426,16 +427,17 @@ rt/$(CFG_RUNTIME): $(RUNTIME_OBJS) $(MKFILES) $(RUNTIME_HDR) $(RUNTIME_DEF)\n # FIXME: Building a .a is a hack so that we build with both older and newer\n # versions of LLVM. In newer versions some of the bits of this library are\n # already in LLVM itself, so they are skipped.\n-rustllvm/rustllvmbits.a: $(RUSTLLVM_OBJS)\n+rustllvm/rustllvmbits.a: $(RUSTLLVM_LIB_OBJS)\n \trm -f $@\n \tar crs $@ $^\n \n-rustllvm/$(CFG_RUSTLLVM): rustllvm/rustllvmbits.a $(MKFILES) $(RUSTLLVM_HDR) \\\n-                          $(RUSTLLVM_DEF)\n+rustllvm/$(CFG_RUSTLLVM): rustllvm/rustllvmbits.a $(RUSTLLVM_OBJS_OBJS) \\\n+                          $(MKFILES) $(RUSTLLVM_HDR) $(RUSTLLVM_DEF)\n \t@$(call E, link: $@)\n-\t$(Q)$(call CFG_LINK_C,$@,$(RUSTLLVM_LIBS) rustllvm/rustllvmbits.a \\\n-          $(CFG_GCC_PRE_LIB_FLAGS) $(CFG_LLVM_LIBS) \\\n-          $(CFG_GCC_POST_LIB_FLAGS) $(CFG_LLVM_LDFLAGS),$(RUSTLLVM_DEF))\n+\t$(Q)$(call CFG_LINK_C,$@,$(RUSTLLVM_OBJS_OBJS) \\\n+\t  $(CFG_GCC_PRE_LIB_FLAGS) $(CFG_LLVM_LIBS) \\\n+          $(CFG_GCC_POST_LIB_FLAGS) rustllvm/rustllvmbits.a \\\n+          $(CFG_LLVM_LDFLAGS),$(RUSTLLVM_DEF))\n \n ifdef CFG_BOOT_NATIVE\n boot/rustboot$(X): $(BOOT_CMXS) $(MKFILES)\n@@ -893,7 +895,8 @@ test/compile-fail/%.stage0.out.tmp: test/compile-fail/%.rs $(SREQ0)\n ######################################################################\n \n ML_DEPFILES := $(BOOT_MLS:%.ml=%.d)\n-C_DEPFILES := $(RUNTIME_CS:%.cpp=%.d) $(RUSTLLVM_CS:%.cpp=%.d)\n+C_DEPFILES := $(RUNTIME_CS:%.cpp=%.d) $(RUSTLLVM_LIB_CS:%.cpp=%.d) \\\n+              $(RUSTLLVM_OBJS_CS:%.cpp=%.d)\n \n rt/%.d: rt/%.cpp $(MKFILES)\n \t@$(call E, dep: $@)\n@@ -1007,7 +1010,8 @@ PKG_FILES = \\\n       README boot/README comp/README           \\\n       $(filter-out $(GENERATED), $(BOOT_MLS))  \\\n       $(RUNTIME_CS) $(RUNTIME_HDR)             \\\n-      $(RUSTLLVM_CS) $(RUSTLLVM_HDR)           \\\n+      $(RUSTLLVM_LIB_CS) $(RUSTLLVM_OBJS_CS)   \\\n+      $(RUSTLLVM_HDR)                          \\\n       $(PKG_3RDPARTY))                         \\\n     $(GENERATED)                               \\\n     $(S)src/boot/fe/lexer.ml                   \\\n@@ -1055,15 +1059,15 @@ tidy:\n \t@$(call E, check: formatting)\n \t$(Q)echo \\\n       $(filter-out $(GENERATED) $(addprefix $(S)src/, $(GENERATED)) \\\n-        $(addprefix $(S)src/, $(RUSTLLVM_CS) $(RUSTLLVM_HDR) \\\n-          $(PKG_3RDPARTY)) \\\n+        $(addprefix $(S)src/, $(RUSTLLVM_LIB_CS) $(RUSTLLVM_OBJS_CS) \\\n+          $(RUSTLLVM_HDR) $(PKG_3RDPARTY)) \\\n         $(S)src/etc/%, $(PKG_FILES)) \\\n     | xargs -n 10 python $(S)src/etc/tidy.py\n \n clean:\n \t@$(call E, cleaning)\n \t$(Q)rm -f $(RUNTIME_OBJS) $(RUNTIME_DEF)\n-\t$(Q)rm -f $(RUSTLLVM_OBJS) $(RUSTLLVM_DEF)\n+\t$(Q)rm -f $(RUSTLLVM_LIB_OBJS) $(RUSTLLVM_OBJS_OBJS) $(RUSTLLVM_DEF)\n \t$(Q)rm -f $(BOOT_CMOS) $(BOOT_CMIS) $(BOOT_CMXS) $(BOOT_OBJS)\n \t$(Q)rm -f $(ML_DEPFILES) $(C_DEPFILES) $(CRATE_DEPFILES)\n \t$(Q)rm -f $(ML_DEPFILES:%.d=%.d.tmp)"}]}