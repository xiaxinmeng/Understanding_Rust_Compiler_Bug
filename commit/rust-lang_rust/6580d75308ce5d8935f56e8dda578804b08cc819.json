{"sha": "6580d75308ce5d8935f56e8dda578804b08cc819", "node_id": "C_kwDOAAsO6NoAKDY1ODBkNzUzMDhjZTVkODkzNWY1NmU4ZGRhNTc4ODA0YjA4Y2M4MTk", "commit": {"author": {"name": "XFFXFF", "email": "1247714429@qq.com", "date": "2022-04-17T12:26:06Z"}, "committer": {"name": "XFFXFF", "email": "1247714429@qq.com", "date": "2022-04-17T12:26:06Z"}, "message": "update parser to support associated const equality", "tree": {"sha": "4551fc23401143fafe4d061624c4c6470e64dc13", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4551fc23401143fafe4d061624c4c6470e64dc13"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6580d75308ce5d8935f56e8dda578804b08cc819", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6580d75308ce5d8935f56e8dda578804b08cc819", "html_url": "https://github.com/rust-lang/rust/commit/6580d75308ce5d8935f56e8dda578804b08cc819", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6580d75308ce5d8935f56e8dda578804b08cc819/comments", "author": {"login": "xffxff", "id": 30254428, "node_id": "MDQ6VXNlcjMwMjU0NDI4", "avatar_url": "https://avatars.githubusercontent.com/u/30254428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xffxff", "html_url": "https://github.com/xffxff", "followers_url": "https://api.github.com/users/xffxff/followers", "following_url": "https://api.github.com/users/xffxff/following{/other_user}", "gists_url": "https://api.github.com/users/xffxff/gists{/gist_id}", "starred_url": "https://api.github.com/users/xffxff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xffxff/subscriptions", "organizations_url": "https://api.github.com/users/xffxff/orgs", "repos_url": "https://api.github.com/users/xffxff/repos", "events_url": "https://api.github.com/users/xffxff/events{/privacy}", "received_events_url": "https://api.github.com/users/xffxff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xffxff", "id": 30254428, "node_id": "MDQ6VXNlcjMwMjU0NDI4", "avatar_url": "https://avatars.githubusercontent.com/u/30254428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xffxff", "html_url": "https://github.com/xffxff", "followers_url": "https://api.github.com/users/xffxff/followers", "following_url": "https://api.github.com/users/xffxff/following{/other_user}", "gists_url": "https://api.github.com/users/xffxff/gists{/gist_id}", "starred_url": "https://api.github.com/users/xffxff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xffxff/subscriptions", "organizations_url": "https://api.github.com/users/xffxff/orgs", "repos_url": "https://api.github.com/users/xffxff/repos", "events_url": "https://api.github.com/users/xffxff/events{/privacy}", "received_events_url": "https://api.github.com/users/xffxff/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bdecd9374e025853a1a4cb7b1bdaf56ae9ac7e2a", "url": "https://api.github.com/repos/rust-lang/rust/commits/bdecd9374e025853a1a4cb7b1bdaf56ae9ac7e2a", "html_url": "https://github.com/rust-lang/rust/commit/bdecd9374e025853a1a4cb7b1bdaf56ae9ac7e2a"}], "stats": {"total": 122, "additions": 119, "deletions": 3}, "files": [{"sha": "862d3b259feb6ab76f2d650f3987f9b1207454e5", "filename": "crates/parser/src/grammar/generic_args.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6580d75308ce5d8935f56e8dda578804b08cc819/crates%2Fparser%2Fsrc%2Fgrammar%2Fgeneric_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6580d75308ce5d8935f56e8dda578804b08cc819/crates%2Fparser%2Fsrc%2Fgrammar%2Fgeneric_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fgeneric_args.rs?ref=6580d75308ce5d8935f56e8dda578804b08cc819", "patch": "@@ -40,11 +40,19 @@ fn generic_arg(p: &mut Parser) {\n             name_ref(p);\n             opt_generic_arg_list(p, false);\n             match p.current() {\n-                // test assoc_type_eq\n-                // type T = StreamingIterator<Item<'a> = &'a T>;\n                 T![=] => {\n                     p.bump_any();\n-                    types::type_(p);\n+                    if types::TYPE_FIRST.contains(p.current()) {\n+                        // test assoc_type_eq\n+                        // type T = StreamingIterator<Item<'a> = &'a T>;\n+                        types::type_(p);\n+                    } else {\n+                        // test assoc_const_eq\n+                        // fn foo<F: Foo<N=3>>() {}\n+                        // const TEST: usize = 3;\n+                        // fn bar<F: Foo<N={TEST}>>() {}\n+                        const_arg(p);\n+                    }\n                     m.complete(p, ASSOC_TYPE_ARG);\n                 }\n                 // test assoc_type_bound"}, {"sha": "fa2733e7f96c316ae20e528feb94316e5ffff978", "filename": "crates/parser/test_data/parser/inline/ok/0200_assoc_const_eq.rast", "status": "added", "additions": 105, "deletions": 0, "changes": 105, "blob_url": "https://github.com/rust-lang/rust/blob/6580d75308ce5d8935f56e8dda578804b08cc819/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0200_assoc_const_eq.rast", "raw_url": "https://github.com/rust-lang/rust/raw/6580d75308ce5d8935f56e8dda578804b08cc819/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0200_assoc_const_eq.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0200_assoc_const_eq.rast?ref=6580d75308ce5d8935f56e8dda578804b08cc819", "patch": "@@ -0,0 +1,105 @@\n+SOURCE_FILE\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"foo\"\n+    GENERIC_PARAM_LIST\n+      L_ANGLE \"<\"\n+      TYPE_PARAM\n+        NAME\n+          IDENT \"F\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        TYPE_BOUND_LIST\n+          TYPE_BOUND\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"Foo\"\n+                  GENERIC_ARG_LIST\n+                    L_ANGLE \"<\"\n+                    ASSOC_TYPE_ARG\n+                      NAME_REF\n+                        IDENT \"N\"\n+                      EQ \"=\"\n+                      CONST_ARG\n+                        LITERAL\n+                          INT_NUMBER \"3\"\n+                    R_ANGLE \">\"\n+      R_ANGLE \">\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\"\n+  CONST\n+    CONST_KW \"const\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"TEST\"\n+    COLON \":\"\n+    WHITESPACE \" \"\n+    PATH_TYPE\n+      PATH\n+        PATH_SEGMENT\n+          NAME_REF\n+            IDENT \"usize\"\n+    WHITESPACE \" \"\n+    EQ \"=\"\n+    WHITESPACE \" \"\n+    LITERAL\n+      INT_NUMBER \"3\"\n+    SEMICOLON \";\"\n+  WHITESPACE \"\\n\"\n+  FN\n+    FN_KW \"fn\"\n+    WHITESPACE \" \"\n+    NAME\n+      IDENT \"bar\"\n+    GENERIC_PARAM_LIST\n+      L_ANGLE \"<\"\n+      TYPE_PARAM\n+        NAME\n+          IDENT \"F\"\n+        COLON \":\"\n+        WHITESPACE \" \"\n+        TYPE_BOUND_LIST\n+          TYPE_BOUND\n+            PATH_TYPE\n+              PATH\n+                PATH_SEGMENT\n+                  NAME_REF\n+                    IDENT \"Foo\"\n+                  GENERIC_ARG_LIST\n+                    L_ANGLE \"<\"\n+                    ASSOC_TYPE_ARG\n+                      NAME_REF\n+                        IDENT \"N\"\n+                      EQ \"=\"\n+                      CONST_ARG\n+                        BLOCK_EXPR\n+                          STMT_LIST\n+                            L_CURLY \"{\"\n+                            PATH_EXPR\n+                              PATH\n+                                PATH_SEGMENT\n+                                  NAME_REF\n+                                    IDENT \"TEST\"\n+                            R_CURLY \"}\"\n+                    R_ANGLE \">\"\n+      R_ANGLE \">\"\n+    PARAM_LIST\n+      L_PAREN \"(\"\n+      R_PAREN \")\"\n+    WHITESPACE \" \"\n+    BLOCK_EXPR\n+      STMT_LIST\n+        L_CURLY \"{\"\n+        R_CURLY \"}\"\n+  WHITESPACE \"\\n\""}, {"sha": "b43c4e36acd99fd677c882c5c17ec7864d0bfe39", "filename": "crates/parser/test_data/parser/inline/ok/0200_assoc_const_eq.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6580d75308ce5d8935f56e8dda578804b08cc819/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0200_assoc_const_eq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6580d75308ce5d8935f56e8dda578804b08cc819/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0200_assoc_const_eq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0200_assoc_const_eq.rs?ref=6580d75308ce5d8935f56e8dda578804b08cc819", "patch": "@@ -0,0 +1,3 @@\n+fn foo<F: Foo<N=3>>() {}\n+const TEST: usize = 3;\n+fn bar<F: Foo<N={TEST}>>() {}"}]}