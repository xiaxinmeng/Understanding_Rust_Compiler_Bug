{"sha": "1b6b802b99a1c0ce575bb80eca6d8f53db20af0a", "node_id": "C_kwDOAAsO6NoAKDFiNmI4MDJiOTlhMWMwY2U1NzViYjgwZWNhNmQ4ZjUzZGIyMGFmMGE", "commit": {"author": {"name": "bing", "email": "tanbinghwang@gmail.com", "date": "2022-04-20T15:11:54Z"}, "committer": {"name": "bing", "email": "tanbinghwang@gmail.com", "date": "2022-04-20T15:11:54Z"}, "message": "Better documentation wording and add known problems section", "tree": {"sha": "f238339dd61710404fab4efa6eaa51a59d7ec17d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f238339dd61710404fab4efa6eaa51a59d7ec17d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b6b802b99a1c0ce575bb80eca6d8f53db20af0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b6b802b99a1c0ce575bb80eca6d8f53db20af0a", "html_url": "https://github.com/rust-lang/rust/commit/1b6b802b99a1c0ce575bb80eca6d8f53db20af0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b6b802b99a1c0ce575bb80eca6d8f53db20af0a/comments", "author": null, "committer": null, "parents": [{"sha": "7a73e09e35900703d2d58353f30358cfeb1cb4ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a73e09e35900703d2d58353f30358cfeb1cb4ea", "html_url": "https://github.com/rust-lang/rust/commit/7a73e09e35900703d2d58353f30358cfeb1cb4ea"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "a6c685df721d6fac310117306cb98cd2b46f9a96", "filename": "clippy_lints/src/stable_sort_primitive.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1b6b802b99a1c0ce575bb80eca6d8f53db20af0a/clippy_lints%2Fsrc%2Fstable_sort_primitive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b6b802b99a1c0ce575bb80eca6d8f53db20af0a/clippy_lints%2Fsrc%2Fstable_sort_primitive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fstable_sort_primitive.rs?ref=1b6b802b99a1c0ce575bb80eca6d8f53db20af0a", "patch": "@@ -9,15 +9,25 @@ use rustc_session::{declare_lint_pass, declare_tool_lint};\n declare_clippy_lint! {\n     /// ### What it does\n     /// When sorting primitive values (integers, bools, chars, as well\n-    /// as arrays, slices, and tuples of such items), it is better to\n+    /// as arrays, slices, and tuples of such items), it is typically better to\n     /// use an unstable sort than a stable sort.\n     ///\n     /// ### Why is this bad?\n-    /// Using a stable sort consumes more memory and cpu cycles. Because\n-    /// values which compare equal are identical, preserving their\n+    /// Typically, using a stable sort consumes more memory and cpu cycles.\n+    /// Because values which compare equal are identical, preserving their\n     /// relative order (the guarantee that a stable sort provides) means\n     /// nothing, while the extra costs still apply.\n     ///\n+    /// ### Known problems\n+    ///\n+    /// As pointed out in\n+    /// [issue #8241](https://github.com/rust-lang/rust-clippy/issues/8241),\n+    /// a stable sort can instead be significantly faster for certain scenarios\n+    /// (eg. when a sorted vector is extended with new data and resorted).\n+    ///\n+    /// For more information and benchmarking results, please refer to the\n+    /// issue linked above.\n+    ///\n     /// ### Example\n     /// ```rust\n     /// let mut vec = vec![2, 1, 3];"}]}