{"sha": "21725774a228771862f5b8b1c971eb77d54ec261", "node_id": "C_kwDOAAsO6NoAKDIxNzI1Nzc0YTIyODc3MTg2MmY1YjhiMWM5NzFlYjc3ZDU0ZWMyNjE", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-17T03:09:49Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-17T03:09:49Z"}, "message": "note -> help", "tree": {"sha": "5b6bda93b1d49d444574327a5dbe8fb6df3917b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b6bda93b1d49d444574327a5dbe8fb6df3917b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21725774a228771862f5b8b1c971eb77d54ec261", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21725774a228771862f5b8b1c971eb77d54ec261", "html_url": "https://github.com/rust-lang/rust/commit/21725774a228771862f5b8b1c971eb77d54ec261", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21725774a228771862f5b8b1c971eb77d54ec261/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "716ea5f19cf28c4d2ce6b87ee17ab855ff837385", "url": "https://api.github.com/repos/rust-lang/rust/commits/716ea5f19cf28c4d2ce6b87ee17ab855ff837385", "html_url": "https://github.com/rust-lang/rust/commit/716ea5f19cf28c4d2ce6b87ee17ab855ff837385"}], "stats": {"total": 52, "additions": 26, "deletions": 26}, "files": [{"sha": "f24e405018b7474eb71b969e4fea74b8aaf56995", "filename": "compiler/rustc_resolve/src/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/21725774a228771862f5b8b1c971eb77d54ec261/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21725774a228771862f5b8b1c971eb77d54ec261/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs?ref=21725774a228771862f5b8b1c971eb77d54ec261", "patch": "@@ -2465,7 +2465,7 @@ fn show_candidates(\n                 msg.push_str(&candidate.0);\n             }\n \n-            err.note(&msg);\n+            err.help(&msg);\n         }\n     } else if !matches!(mode, DiagnosticMode::Import) {\n         assert!(!inaccessible_path_strings.is_empty());"}, {"sha": "e0b3b8685d6eb02ea62254083bbe848c6d168596", "filename": "tests/ui/empty/empty-macro-use.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/21725774a228771862f5b8b1c971eb77d54ec261/tests%2Fui%2Fempty%2Fempty-macro-use.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/21725774a228771862f5b8b1c971eb77d54ec261/tests%2Fui%2Fempty%2Fempty-macro-use.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fempty%2Fempty-macro-use.stderr?ref=21725774a228771862f5b8b1c971eb77d54ec261", "patch": "@@ -4,7 +4,7 @@ error: cannot find macro `macro_two` in this scope\n LL |     macro_two!();\n    |     ^^^^^^^^^\n    |\n-   = note: consider importing this macro:\n+   = help: consider importing this macro:\n            two_macros::macro_two\n \n error: aborting due to previous error"}, {"sha": "c01901be5fe78d976d102700253637731c744ba0", "filename": "tests/ui/hygiene/globs.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/21725774a228771862f5b8b1c971eb77d54ec261/tests%2Fui%2Fhygiene%2Fglobs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/21725774a228771862f5b8b1c971eb77d54ec261/tests%2Fui%2Fhygiene%2Fglobs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fhygiene%2Fglobs.stderr?ref=21725774a228771862f5b8b1c971eb77d54ec261", "patch": "@@ -51,7 +51,7 @@ LL | n!(f);\n LL |         n!(f);\n    |            ^ not found in this scope\n    |\n-   = note: consider importing this function:\n+   = help: consider importing this function:\n            foo::f\n    = note: this error originates in the macro `n` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -64,7 +64,7 @@ LL | n!(f);\n LL |                 f\n    |                 ^ not found in this scope\n    |\n-   = note: consider importing this function:\n+   = help: consider importing this function:\n            foo::f\n    = note: this error originates in the macro `n` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "3f31b041b62038d329f16c08de10ac3cae1d36c0", "filename": "tests/ui/hygiene/no_implicit_prelude-2018.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/21725774a228771862f5b8b1c971eb77d54ec261/tests%2Fui%2Fhygiene%2Fno_implicit_prelude-2018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/21725774a228771862f5b8b1c971eb77d54ec261/tests%2Fui%2Fhygiene%2Fno_implicit_prelude-2018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fhygiene%2Fno_implicit_prelude-2018.stderr?ref=21725774a228771862f5b8b1c971eb77d54ec261", "patch": "@@ -4,7 +4,7 @@ error: cannot find macro `print` in this scope\n LL |         print!();\n    |         ^^^^^\n    |\n-   = note: consider importing this macro:\n+   = help: consider importing this macro:\n            std::print\n \n error: aborting due to previous error"}, {"sha": "b6b1bc5fccf022a3bcd278ecdf527dcb2296b5dd", "filename": "tests/ui/imports/bad-import-in-nested.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/21725774a228771862f5b8b1c971eb77d54ec261/tests%2Fui%2Fimports%2Fbad-import-in-nested.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/21725774a228771862f5b8b1c971eb77d54ec261/tests%2Fui%2Fimports%2Fbad-import-in-nested.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimports%2Fbad-import-in-nested.stderr?ref=21725774a228771862f5b8b1c971eb77d54ec261", "patch": "@@ -4,7 +4,7 @@ error[E0432]: unresolved import `super::super::C::D::AA`\n LL |         use super::{super::C::D::AA, AA as _};\n    |                     ^^^^^^^^^^^^^^^ no `AA` in `C::D`\n    |\n-   = note: consider importing this type alias instead:\n+   = help: consider importing this type alias instead:\n            crate::A::AA\n \n error[E0432]: unresolved import `crate::C::AA`\n@@ -13,7 +13,7 @@ error[E0432]: unresolved import `crate::C::AA`\n LL |     use crate::C::{self, AA};\n    |                          ^^ no `AA` in `C`\n    |\n-   = note: consider importing this type alias instead:\n+   = help: consider importing this type alias instead:\n            crate::A::AA\n \n error[E0432]: unresolved import `crate::C::BB`\n@@ -22,7 +22,7 @@ error[E0432]: unresolved import `crate::C::BB`\n LL |     use crate::{A, C::BB};\n    |                    ^^^^^ no `BB` in `C`\n    |\n-   = note: consider importing this type alias instead:\n+   = help: consider importing this type alias instead:\n            crate::A::BB\n \n error: aborting due to 3 previous errors"}, {"sha": "60ba2eab7a7bfbe8dbfb6f62383a68a2842482da", "filename": "tests/ui/macros/issue-88228.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/21725774a228771862f5b8b1c971eb77d54ec261/tests%2Fui%2Fmacros%2Fissue-88228.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21725774a228771862f5b8b1c971eb77d54ec261/tests%2Fui%2Fmacros%2Fissue-88228.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmacros%2Fissue-88228.rs?ref=21725774a228771862f5b8b1c971eb77d54ec261", "patch": "@@ -8,7 +8,7 @@ mod hey {\n \n #[derive(Bla)]\n //~^ ERROR cannot find derive macro `Bla`\n-//~| NOTE consider importing this derive macro\n+//~| HELP consider importing this derive macro\n struct A;\n \n #[derive(println)]\n@@ -19,5 +19,5 @@ struct B;\n fn main() {\n     bla!();\n     //~^ ERROR cannot find macro `bla`\n-    //~| NOTE consider importing this macro\n+    //~| HELP consider importing this macro\n }"}, {"sha": "fe8a1deaedd77e2f2029b333344f6bc30b258697", "filename": "tests/ui/macros/issue-88228.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/21725774a228771862f5b8b1c971eb77d54ec261/tests%2Fui%2Fmacros%2Fissue-88228.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/21725774a228771862f5b8b1c971eb77d54ec261/tests%2Fui%2Fmacros%2Fissue-88228.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmacros%2Fissue-88228.stderr?ref=21725774a228771862f5b8b1c971eb77d54ec261", "patch": "@@ -4,7 +4,7 @@ error: cannot find macro `bla` in this scope\n LL |     bla!();\n    |     ^^^\n    |\n-   = note: consider importing this macro:\n+   = help: consider importing this macro:\n            crate::hey::bla\n \n error: cannot find derive macro `println` in this scope\n@@ -21,7 +21,7 @@ error: cannot find derive macro `Bla` in this scope\n LL | #[derive(Bla)]\n    |          ^^^\n    |\n-   = note: consider importing this derive macro:\n+   = help: consider importing this derive macro:\n            crate::hey::Bla\n \n error: aborting due to 3 previous errors"}, {"sha": "ca5f0f190e8ba445c34214361d8b5d9ab54b762c", "filename": "tests/ui/macros/macro-use-wrong-name.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/21725774a228771862f5b8b1c971eb77d54ec261/tests%2Fui%2Fmacros%2Fmacro-use-wrong-name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/21725774a228771862f5b8b1c971eb77d54ec261/tests%2Fui%2Fmacros%2Fmacro-use-wrong-name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmacros%2Fmacro-use-wrong-name.stderr?ref=21725774a228771862f5b8b1c971eb77d54ec261", "patch": "@@ -9,7 +9,7 @@ LL |     macro_two!();\n LL | macro_rules! macro_one { () => (\"one\") }\n    | ---------------------- similarly named macro `macro_one` defined here\n    |\n-   = note: consider importing this macro:\n+   = help: consider importing this macro:\n            two_macros::macro_two\n \n error: aborting due to previous error"}, {"sha": "99e291cda0377ccb0e3b05362b0683372529a128", "filename": "tests/ui/missing/missing-macro-use.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/21725774a228771862f5b8b1c971eb77d54ec261/tests%2Fui%2Fmissing%2Fmissing-macro-use.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/21725774a228771862f5b8b1c971eb77d54ec261/tests%2Fui%2Fmissing%2Fmissing-macro-use.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing%2Fmissing-macro-use.stderr?ref=21725774a228771862f5b8b1c971eb77d54ec261", "patch": "@@ -4,7 +4,7 @@ error: cannot find macro `macro_two` in this scope\n LL |     macro_two!();\n    |     ^^^^^^^^^\n    |\n-   = note: consider importing this macro:\n+   = help: consider importing this macro:\n            two_macros::macro_two\n \n error: aborting due to previous error"}, {"sha": "de2c27a878c678688db5b389f07658344d79de47", "filename": "tests/ui/proc-macro/derive-helper-shadowing.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/21725774a228771862f5b8b1c971eb77d54ec261/tests%2Fui%2Fproc-macro%2Fderive-helper-shadowing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/21725774a228771862f5b8b1c971eb77d54ec261/tests%2Fui%2Fproc-macro%2Fderive-helper-shadowing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fproc-macro%2Fderive-helper-shadowing.stderr?ref=21725774a228771862f5b8b1c971eb77d54ec261", "patch": "@@ -16,7 +16,7 @@ error: cannot find attribute `empty_helper` in this scope\n LL |             #[derive(GenHelperUse)]\n    |                      ^^^^^^^^^^^^\n    |\n-   = note: consider importing this attribute macro:\n+   = help: consider importing this attribute macro:\n            empty_helper\n    = note: this error originates in the derive macro `GenHelperUse` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -29,7 +29,7 @@ LL |         #[empty_helper]\n LL |             gen_helper_use!();\n    |             ----------------- in this macro invocation\n    |\n-   = note: consider importing this attribute macro:\n+   = help: consider importing this attribute macro:\n            crate::empty_helper\n    = note: this error originates in the macro `gen_helper_use` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "2c55abf38c399a62b2d2430444d7fc5925a857b3", "filename": "tests/ui/proc-macro/generate-mod.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/21725774a228771862f5b8b1c971eb77d54ec261/tests%2Fui%2Fproc-macro%2Fgenerate-mod.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/21725774a228771862f5b8b1c971eb77d54ec261/tests%2Fui%2Fproc-macro%2Fgenerate-mod.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fproc-macro%2Fgenerate-mod.stderr?ref=21725774a228771862f5b8b1c971eb77d54ec261", "patch": "@@ -4,7 +4,7 @@ error[E0412]: cannot find type `FromOutside` in this scope\n LL | generate_mod::check!();\n    | ^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n    |\n-   = note: consider importing this struct:\n+   = help: consider importing this struct:\n            FromOutside\n    = note: this error originates in the macro `generate_mod::check` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -14,7 +14,7 @@ error[E0412]: cannot find type `Outer` in this scope\n LL | generate_mod::check!();\n    | ^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n    |\n-   = note: consider importing this struct:\n+   = help: consider importing this struct:\n            Outer\n    = note: this error originates in the macro `generate_mod::check` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -24,7 +24,7 @@ error[E0412]: cannot find type `FromOutside` in this scope\n LL | #[generate_mod::check_attr]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n    |\n-   = note: consider importing this struct:\n+   = help: consider importing this struct:\n            FromOutside\n    = note: this error originates in the attribute macro `generate_mod::check_attr` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -34,7 +34,7 @@ error[E0412]: cannot find type `OuterAttr` in this scope\n LL | #[generate_mod::check_attr]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n    |\n-   = note: consider importing this struct:\n+   = help: consider importing this struct:\n            OuterAttr\n    = note: this error originates in the attribute macro `generate_mod::check_attr` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -44,7 +44,7 @@ error[E0412]: cannot find type `FromOutside` in this scope\n LL | #[derive(generate_mod::CheckDerive)]\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n    |\n-   = note: consider importing this struct:\n+   = help: consider importing this struct:\n            FromOutside\n    = note: this error originates in the derive macro `generate_mod::CheckDerive` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -54,7 +54,7 @@ error[E0412]: cannot find type `OuterDerive` in this scope\n LL | #[derive(generate_mod::CheckDerive)]\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n    |\n-   = note: consider importing this struct:\n+   = help: consider importing this struct:\n            OuterDerive\n    = note: this error originates in the derive macro `generate_mod::CheckDerive` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -64,7 +64,7 @@ error[E0412]: cannot find type `FromOutside` in this scope\n LL |     #[derive(generate_mod::CheckDerive)]\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n    |\n-   = note: consider importing this struct:\n+   = help: consider importing this struct:\n            FromOutside\n    = note: this error originates in the derive macro `generate_mod::CheckDerive` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -74,7 +74,7 @@ error[E0412]: cannot find type `OuterDerive` in this scope\n LL |     #[derive(generate_mod::CheckDerive)]\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n    |\n-   = note: consider importing this struct:\n+   = help: consider importing this struct:\n            OuterDerive\n    = note: this error originates in the derive macro `generate_mod::CheckDerive` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -84,7 +84,7 @@ error[E0412]: cannot find type `FromOutside` in this scope\n LL | #[derive(generate_mod::CheckDeriveLint)]\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n    |\n-   = note: consider importing this struct:\n+   = help: consider importing this struct:\n            FromOutside\n    = note: this error originates in the derive macro `generate_mod::CheckDeriveLint` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -94,7 +94,7 @@ error[E0412]: cannot find type `OuterDeriveLint` in this scope\n LL | #[derive(generate_mod::CheckDeriveLint)]\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n    |\n-   = note: consider importing this struct:\n+   = help: consider importing this struct:\n            OuterDeriveLint\n    = note: this error originates in the derive macro `generate_mod::CheckDeriveLint` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}]}