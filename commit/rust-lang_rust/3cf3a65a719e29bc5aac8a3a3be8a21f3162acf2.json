{"sha": "3cf3a65a719e29bc5aac8a3a3be8a21f3162acf2", "node_id": "C_kwDOAAsO6NoAKDNjZjNhNjVhNzE5ZTI5YmM1YWFjOGEzYTNiZThhMjFmMzE2MmFjZjI", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-11-19T06:24:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-19T06:24:47Z"}, "message": "Rollup merge of #104580 - notriddle:notriddle/issue-102354-hide-sugg, r=compiler-errors\n\ndiagnostics: only show one suggestion for method -> assoc fn\n\nFixes #102354", "tree": {"sha": "b3c1cb60370e9195576083b367a68464deebf57d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3c1cb60370e9195576083b367a68464deebf57d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3cf3a65a719e29bc5aac8a3a3be8a21f3162acf2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjeHavCRBK7hj4Ov3rIwAAhUoIABzwDZXSBRWWdoaD9WEjCmJ3\nqYdQ1V7q3WGK8zD7N7EzsLA5TPKSp7A/3JyDDWD/94js05KULvJ1LbbuE/VWiCmo\n255RAo18JFvtmUtKY116fGVOkN+UyTevu8I9LHJl0q0hi3Fcs6GeQR4th7YnjBEJ\nPGMLmrXfG9syHES2S/Os9c0oObFy7pi+J5XewTnZGPVfmwpHkkluLpgfeDGxGb+v\nur9Tipj2Um6AvT9YRfFfoKqwL1Ufy8uNcbCJ1lYhzwLD0quJXOmsxNCBrZFE/8Ei\nhDN/HVaxGPqRB0kehclcAnuc+s4+uuc00nCPcjqLXBuIdjMakjyCq3Ik//Wj7Ls=\n=HS3G\n-----END PGP SIGNATURE-----\n", "payload": "tree b3c1cb60370e9195576083b367a68464deebf57d\nparent 686c170751abe59ee81eb1f0f913a572f10c9a9c\nparent df7ecbcb1116915cb4557dccc5a4839a13fbf5b0\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1668839087 +0530\ncommitter GitHub <noreply@github.com> 1668839087 +0530\n\nRollup merge of #104580 - notriddle:notriddle/issue-102354-hide-sugg, r=compiler-errors\n\ndiagnostics: only show one suggestion for method -> assoc fn\n\nFixes #102354\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3cf3a65a719e29bc5aac8a3a3be8a21f3162acf2", "html_url": "https://github.com/rust-lang/rust/commit/3cf3a65a719e29bc5aac8a3a3be8a21f3162acf2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3cf3a65a719e29bc5aac8a3a3be8a21f3162acf2/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "686c170751abe59ee81eb1f0f913a572f10c9a9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/686c170751abe59ee81eb1f0f913a572f10c9a9c", "html_url": "https://github.com/rust-lang/rust/commit/686c170751abe59ee81eb1f0f913a572f10c9a9c"}, {"sha": "df7ecbcb1116915cb4557dccc5a4839a13fbf5b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/df7ecbcb1116915cb4557dccc5a4839a13fbf5b0", "html_url": "https://github.com/rust-lang/rust/commit/df7ecbcb1116915cb4557dccc5a4839a13fbf5b0"}], "stats": {"total": 54, "additions": 26, "deletions": 28}, "files": [{"sha": "4ac4914bd447954bc9776401f2c42e387ca5674d", "filename": "compiler/rustc_hir_typeck/src/method/suggest.rs", "status": "modified", "additions": 22, "deletions": 19, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/3cf3a65a719e29bc5aac8a3a3be8a21f3162acf2/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cf3a65a719e29bc5aac8a3a3be8a21f3162acf2/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fsuggest.rs?ref=3cf3a65a719e29bc5aac8a3a3be8a21f3162acf2", "patch": "@@ -114,7 +114,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         let report_candidates = |span: Span,\n                                  err: &mut Diagnostic,\n                                  sources: &mut Vec<CandidateSource>,\n-                                 sugg_span: Span| {\n+                                 sugg_span: Option<Span>| {\n             sources.sort();\n             sources.dedup();\n             // Dynamic limit to avoid hiding just one candidate, which is silly.\n@@ -175,7 +175,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         } else {\n                             err.note(&note_str);\n                         }\n-                        if let Some(trait_ref) = self.tcx.impl_trait_ref(impl_did) {\n+                        if let Some(sugg_span) = sugg_span\n+                            && let Some(trait_ref) = self.tcx.impl_trait_ref(impl_did) {\n                             let path = self.tcx.def_path_str(trait_ref.def_id);\n \n                             let ty = match item.kind {\n@@ -224,20 +225,22 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                             err.span_note(item_span, msg);\n                             None\n                         };\n-                        let path = self.tcx.def_path_str(trait_did);\n-                        print_disambiguation_help(\n-                            item_name,\n-                            args,\n-                            err,\n-                            path,\n-                            rcvr_ty,\n-                            item.kind,\n-                            item.def_id,\n-                            sugg_span,\n-                            idx,\n-                            self.tcx.sess.source_map(),\n-                            item.fn_has_self_parameter,\n-                        );\n+                        if let Some(sugg_span) = sugg_span {\n+                            let path = self.tcx.def_path_str(trait_did);\n+                            print_disambiguation_help(\n+                                item_name,\n+                                args,\n+                                err,\n+                                path,\n+                                rcvr_ty,\n+                                item.kind,\n+                                item.def_id,\n+                                sugg_span,\n+                                idx,\n+                                self.tcx.sess.source_map(),\n+                                item.fn_has_self_parameter,\n+                            );\n+                        }\n                     }\n                 }\n             }\n@@ -407,9 +410,9 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         sugg_span,\n                     );\n \n-                    report_candidates(span, &mut err, &mut static_candidates, sugg_span);\n+                    report_candidates(span, &mut err, &mut static_candidates, None);\n                 } else if static_candidates.len() > 1 {\n-                    report_candidates(span, &mut err, &mut static_candidates, sugg_span);\n+                    report_candidates(span, &mut err, &mut static_candidates, Some(sugg_span));\n                 }\n \n                 let mut bound_spans = vec![];\n@@ -1015,7 +1018,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 );\n                 err.span_label(item_name.span, format!(\"multiple `{}` found\", item_name));\n \n-                report_candidates(span, &mut err, &mut sources, sugg_span);\n+                report_candidates(span, &mut err, &mut sources, Some(sugg_span));\n                 err.emit();\n             }\n "}, {"sha": "08d4b99559031e9c9f63d7a357e9e45d4c5f2733", "filename": "src/test/ui/suggestions/issue-102354.stderr", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/3cf3a65a719e29bc5aac8a3a3be8a21f3162acf2/src%2Ftest%2Fui%2Fsuggestions%2Fissue-102354.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3cf3a65a719e29bc5aac8a3a3be8a21f3162acf2/src%2Ftest%2Fui%2Fsuggestions%2Fissue-102354.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-102354.stderr?ref=3cf3a65a719e29bc5aac8a3a3be8a21f3162acf2", "patch": "@@ -2,22 +2,17 @@ error[E0599]: no method named `func` found for type `i32` in the current scope\n   --> $DIR/issue-102354.rs:9:7\n    |\n LL |     x.func();\n-   |       ^^^^ this is an associated function, not a method\n+   |     --^^^^--\n+   |     | |\n+   |     | this is an associated function, not a method\n+   |     help: use associated function syntax instead: `i32::func()`\n    |\n    = note: found the following associated functions; to be used as methods, functions must have a `self` parameter\n note: the candidate is defined in the trait `Trait`\n   --> $DIR/issue-102354.rs:2:5\n    |\n LL |     fn func() {}\n    |     ^^^^^^^^^\n-help: use associated function syntax instead\n-   |\n-LL |     i32::func();\n-   |     ~~~~~~~~~~~\n-help: disambiguate the associated function for the candidate\n-   |\n-LL |     <i32 as Trait>::func(x);\n-   |     ~~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to previous error\n "}]}