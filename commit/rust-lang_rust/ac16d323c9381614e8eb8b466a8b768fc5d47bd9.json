{"sha": "ac16d323c9381614e8eb8b466a8b768fc5d47bd9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjMTZkMzIzYzkzODE2MTRlOGViOGI0NjZhOGI3NjhmYzVkNDdiZDk=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2016-01-14T00:55:46Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2016-01-15T18:27:53Z"}, "message": "Fix translation for all other discriminated ADTs\n\nAgain.", "tree": {"sha": "cf467330bd10c0db37ae79ad6e833fa183d3a547", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf467330bd10c0db37ae79ad6e833fa183d3a547"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac16d323c9381614e8eb8b466a8b768fc5d47bd9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac16d323c9381614e8eb8b466a8b768fc5d47bd9", "html_url": "https://github.com/rust-lang/rust/commit/ac16d323c9381614e8eb8b466a8b768fc5d47bd9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac16d323c9381614e8eb8b466a8b768fc5d47bd9/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b17e2b71ac92f52fb5d1da381f6c397f08dc7c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b17e2b71ac92f52fb5d1da381f6c397f08dc7c3", "html_url": "https://github.com/rust-lang/rust/commit/4b17e2b71ac92f52fb5d1da381f6c397f08dc7c3"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "7b9eac4317d24b06e88ab426801db348a18f436e", "filename": "src/librustc_trans/trans/mir/rvalue.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ac16d323c9381614e8eb8b466a8b768fc5d47bd9/src%2Flibrustc_trans%2Ftrans%2Fmir%2Frvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac16d323c9381614e8eb8b466a8b768fc5d47bd9/src%2Flibrustc_trans%2Ftrans%2Fmir%2Frvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmir%2Frvalue.rs?ref=ac16d323c9381614e8eb8b466a8b768fc5d47bd9", "patch": "@@ -98,13 +98,19 @@ impl<'bcx, 'tcx> MirContext<'bcx, 'tcx> {\n \n             mir::Rvalue::Aggregate(ref kind, ref operands) => {\n                 match *kind {\n-                    // Unit struct or variant; both are translated very differently compared to any\n-                    // other aggregate\n-                    mir::AggregateKind::Adt(adt_def, index, _)\n-                    if adt_def.variants[index].kind() == ty::VariantKind::Unit => {\n+                    mir::AggregateKind::Adt(adt_def, index, _) => {\n                         let repr = adt::represent_type(bcx.ccx(), dest.ty.to_ty(bcx.tcx()));\n                         let disr = adt_def.variants[index].disr_val;\n                         adt::trans_set_discr(bcx, &*repr, dest.llval, disr);\n+                        for (i, operand) in operands.iter().enumerate() {\n+                            let op = self.trans_operand(bcx, operand);\n+                            // Do not generate stores and GEPis for zero-sized fields.\n+                            if !common::type_is_zero_size(bcx.ccx(), op.ty) {\n+                                let val = adt::MaybeSizedValue::sized(dest.llval);\n+                                let lldest_i = adt::trans_field_ptr(bcx, &*repr, val, disr, i);\n+                                self.store_operand(bcx, lldest_i, op);\n+                            }\n+                        }\n                     },\n                     _ => {\n                         for (i, operand) in operands.iter().enumerate() {"}]}