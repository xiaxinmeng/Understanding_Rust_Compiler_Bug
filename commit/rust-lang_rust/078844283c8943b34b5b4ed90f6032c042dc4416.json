{"sha": "078844283c8943b34b5b4ed90f6032c042dc4416", "node_id": "C_kwDOAAsO6NoAKDA3ODg0NDI4M2M4OTQzYjM0YjViNGVkOTBmNjAzMmMwNDJkYzQ0MTY", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-08-19T06:56:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-19T06:56:38Z"}, "message": "Rollup merge of #99576 - compiler-errors:foreign-fundamental-drop-is-bad, r=TaKO8Ki\n\nDo not allow `Drop` impl on foreign fundamental types\n\n`Drop` should not be implemented on `Pin<T>` even if `T` is local.\n\nThis does not trigger regular orphan rules is because `Pin` is `#[fundamental]`... but we don't allow specialized `Drop` impls anyways, so these rules are not sufficient to prevent this impl on stable. Let's just choose even stricter rules, since we shouldn't be implementing `Drop` on a foreign ADT ever.\n\nFixes #99575", "tree": {"sha": "c31a6cc068545e1a3f8cd514bd67228906bd0296", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c31a6cc068545e1a3f8cd514bd67228906bd0296"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/078844283c8943b34b5b4ed90f6032c042dc4416", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi/zQmCRBK7hj4Ov3rIwAAq/UIACjE/DR3BSQlPS28QajjUUKc\nlBE53kYRKqD0gx3DS67l0N5yyR+RHvuzngsaZ6dLbIQDjZ8V5kxVQw+t7obwM5Dv\nK9ZbXh4tk+yKZhbDhGGND37JH5Cl+VSwaX0tKsnG+dLQRVLn8TfqR0GBn3QcyLWj\n1IP4TT2psqaejQ3pIz2y8tertx8agkYlf8zbYeQQ7AA1tG78Llj4I/smzU6fjwjT\nvAIzcGOJ/4yUis89h8bzgiW+egUmkWKqLqPbpOLUkvxizGoa7vRKo4unbntMoymH\nL00Jb+EQ7kaInHRuSerGaT8GmWpiy2wfAZahTNyWHuYvP1RIqunfAIkGF15H56U=\n=Ef0d\n-----END PGP SIGNATURE-----\n", "payload": "tree c31a6cc068545e1a3f8cd514bd67228906bd0296\nparent 6c943bad02626dddc5e5135b23c77429b6e4a063\nparent fd934c99bcf1a930ef44a27129ef24b323d3c54f\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1660892198 +0530\ncommitter GitHub <noreply@github.com> 1660892198 +0530\n\nRollup merge of #99576 - compiler-errors:foreign-fundamental-drop-is-bad, r=TaKO8Ki\n\nDo not allow `Drop` impl on foreign fundamental types\n\n`Drop` should not be implemented on `Pin<T>` even if `T` is local.\n\nThis does not trigger regular orphan rules is because `Pin` is `#[fundamental]`... but we don't allow specialized `Drop` impls anyways, so these rules are not sufficient to prevent this impl on stable. Let's just choose even stricter rules, since we shouldn't be implementing `Drop` on a foreign ADT ever.\n\nFixes #99575\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/078844283c8943b34b5b4ed90f6032c042dc4416", "html_url": "https://github.com/rust-lang/rust/commit/078844283c8943b34b5b4ed90f6032c042dc4416", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/078844283c8943b34b5b4ed90f6032c042dc4416/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c943bad02626dddc5e5135b23c77429b6e4a063", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c943bad02626dddc5e5135b23c77429b6e4a063", "html_url": "https://github.com/rust-lang/rust/commit/6c943bad02626dddc5e5135b23c77429b6e4a063"}, {"sha": "fd934c99bcf1a930ef44a27129ef24b323d3c54f", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd934c99bcf1a930ef44a27129ef24b323d3c54f", "html_url": "https://github.com/rust-lang/rust/commit/fd934c99bcf1a930ef44a27129ef24b323d3c54f"}], "stats": {"total": 69, "additions": 51, "deletions": 18}, "files": [{"sha": "22b32ff838e59650fdf0eba8ebfb68e96e3e8b50", "filename": "compiler/rustc_error_messages/locales/en-US/typeck.ftl", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/078844283c8943b34b5b4ed90f6032c042dc4416/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Ftypeck.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/078844283c8943b34b5b4ed90f6032c042dc4416/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Ftypeck.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Ftypeck.ftl?ref=078844283c8943b34b5b4ed90f6032c042dc4416", "patch": "@@ -24,8 +24,8 @@ typeck_lifetimes_or_bounds_mismatch_on_trait =\n     .generics_label = lifetimes in impl do not match this {$item_kind} in trait\n \n typeck_drop_impl_on_wrong_item =\n-    the `Drop` trait may only be implemented for structs, enums, and unions\n-    .label = must be a struct, enum, or union\n+    the `Drop` trait may only be implemented for local structs, enums, and unions\n+    .label = must be a struct, enum, or union in the current crate\n \n typeck_field_already_declared =\n     field `{$field_name}` is already declared"}, {"sha": "2467a81638f75bfa0828c61473d9cfde368154a3", "filename": "compiler/rustc_typeck/src/coherence/builtin.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/078844283c8943b34b5b4ed90f6032c042dc4416/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/078844283c8943b34b5b4ed90f6032c042dc4416/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Fbuiltin.rs?ref=078844283c8943b34b5b4ed90f6032c042dc4416", "patch": "@@ -47,9 +47,11 @@ impl<'tcx> Checker<'tcx> {\n }\n \n fn visit_implementation_of_drop(tcx: TyCtxt<'_>, impl_did: LocalDefId) {\n-    // Destructors only work on nominal types.\n-    if let ty::Adt(..) | ty::Error(_) = tcx.type_of(impl_did).kind() {\n-        return;\n+    // Destructors only work on local ADT types.\n+    match tcx.type_of(impl_did).kind() {\n+        ty::Adt(def, _) if def.did().is_local() => return,\n+        ty::Error(_) => return,\n+        _ => {}\n     }\n \n     let sp = match tcx.hir().expect_item(impl_did).kind {"}, {"sha": "c43df40d6c26ad1a374a820881eb9b1ed6381cda", "filename": "src/test/ui/drop/drop-foreign-fundamental.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/078844283c8943b34b5b4ed90f6032c042dc4416/src%2Ftest%2Fui%2Fdrop%2Fdrop-foreign-fundamental.rs", "raw_url": "https://github.com/rust-lang/rust/raw/078844283c8943b34b5b4ed90f6032c042dc4416/src%2Ftest%2Fui%2Fdrop%2Fdrop-foreign-fundamental.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdrop%2Fdrop-foreign-fundamental.rs?ref=078844283c8943b34b5b4ed90f6032c042dc4416", "patch": "@@ -0,0 +1,23 @@\n+use std::ops::Deref;\n+use std::pin::Pin;\n+\n+struct Whatever<T>(T);\n+\n+impl<T> Deref for Whatever<T> {\n+    type Target = T;\n+\n+    fn deref(&self) -> &T {\n+        &self.0\n+    }\n+}\n+\n+struct A;\n+\n+impl Drop for Pin<Whatever<A>> {\n+    //~^ ERROR  the `Drop` trait may only be implemented for local structs, enums, and unions\n+    fn drop(&mut self) {}\n+}\n+\n+fn main() {\n+    let x = Pin::new(Whatever(1.0f32));\n+}"}, {"sha": "fbd1ba0859134b8ea4b33b54655bed8bdb2d59e6", "filename": "src/test/ui/drop/drop-foreign-fundamental.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/078844283c8943b34b5b4ed90f6032c042dc4416/src%2Ftest%2Fui%2Fdrop%2Fdrop-foreign-fundamental.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/078844283c8943b34b5b4ed90f6032c042dc4416/src%2Ftest%2Fui%2Fdrop%2Fdrop-foreign-fundamental.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdrop%2Fdrop-foreign-fundamental.stderr?ref=078844283c8943b34b5b4ed90f6032c042dc4416", "patch": "@@ -0,0 +1,9 @@\n+error[E0120]: the `Drop` trait may only be implemented for local structs, enums, and unions\n+  --> $DIR/drop-foreign-fundamental.rs:16:15\n+   |\n+LL | impl Drop for Pin<Whatever<A>> {\n+   |               ^^^^^^^^^^^^^^^^ must be a struct, enum, or union in the current crate\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0120`."}, {"sha": "145eab126c28deb1771cde394d7c2a120696c419", "filename": "src/test/ui/dropck/drop-on-non-struct.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/078844283c8943b34b5b4ed90f6032c042dc4416/src%2Ftest%2Fui%2Fdropck%2Fdrop-on-non-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/078844283c8943b34b5b4ed90f6032c042dc4416/src%2Ftest%2Fui%2Fdropck%2Fdrop-on-non-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdropck%2Fdrop-on-non-struct.rs?ref=078844283c8943b34b5b4ed90f6032c042dc4416", "patch": "@@ -1,5 +1,5 @@\n impl<'a> Drop for &'a mut isize {\n-    //~^ ERROR the `Drop` trait may only be implemented for structs, enums, and unions\n+    //~^ ERROR the `Drop` trait may only be implemented for local structs, enums, and unions\n     //~^^ ERROR E0117\n     fn drop(&mut self) {\n         println!(\"kaboom\");\n@@ -8,8 +8,7 @@ impl<'a> Drop for &'a mut isize {\n \n impl Drop for Nonexistent {\n     //~^ ERROR cannot find type `Nonexistent`\n-    fn drop(&mut self) { }\n+    fn drop(&mut self) {}\n }\n \n-fn main() {\n-}\n+fn main() {}"}, {"sha": "e8fbe5e972642ebc870ba85f308fa70bb2e1bf0a", "filename": "src/test/ui/dropck/drop-on-non-struct.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/078844283c8943b34b5b4ed90f6032c042dc4416/src%2Ftest%2Fui%2Fdropck%2Fdrop-on-non-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/078844283c8943b34b5b4ed90f6032c042dc4416/src%2Ftest%2Fui%2Fdropck%2Fdrop-on-non-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdropck%2Fdrop-on-non-struct.stderr?ref=078844283c8943b34b5b4ed90f6032c042dc4416", "patch": "@@ -15,11 +15,11 @@ LL | impl<'a> Drop for &'a mut isize {\n    |\n    = note: define and implement a trait or new type instead\n \n-error[E0120]: the `Drop` trait may only be implemented for structs, enums, and unions\n+error[E0120]: the `Drop` trait may only be implemented for local structs, enums, and unions\n   --> $DIR/drop-on-non-struct.rs:1:19\n    |\n LL | impl<'a> Drop for &'a mut isize {\n-   |                   ^^^^^^^^^^^^^ must be a struct, enum, or union\n+   |                   ^^^^^^^^^^^^^ must be a struct, enum, or union in the current crate\n \n error: aborting due to 3 previous errors\n "}, {"sha": "406d24e36661449a7ab28ea6eb36dc75314daa8c", "filename": "src/test/ui/error-codes/E0117.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/078844283c8943b34b5b4ed90f6032c042dc4416/src%2Ftest%2Fui%2Ferror-codes%2FE0117.rs", "raw_url": "https://github.com/rust-lang/rust/raw/078844283c8943b34b5b4ed90f6032c042dc4416/src%2Ftest%2Fui%2Ferror-codes%2FE0117.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0117.rs?ref=078844283c8943b34b5b4ed90f6032c042dc4416", "patch": "@@ -1,4 +1,4 @@\n impl Drop for u32 {} //~ ERROR E0117\n-//~| ERROR the `Drop` trait may only be implemented for structs, enums, and unions\n+//~| ERROR the `Drop` trait may only be implemented for local structs, enums, and unions\n \n fn main() {}"}, {"sha": "f144aa9f72c131d0e1dfd1140ac2668df3bbdbe8", "filename": "src/test/ui/error-codes/E0117.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/078844283c8943b34b5b4ed90f6032c042dc4416/src%2Ftest%2Fui%2Ferror-codes%2FE0117.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/078844283c8943b34b5b4ed90f6032c042dc4416/src%2Ftest%2Fui%2Ferror-codes%2FE0117.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0117.stderr?ref=078844283c8943b34b5b4ed90f6032c042dc4416", "patch": "@@ -9,11 +9,11 @@ LL | impl Drop for u32 {}\n    |\n    = note: define and implement a trait or new type instead\n \n-error[E0120]: the `Drop` trait may only be implemented for structs, enums, and unions\n+error[E0120]: the `Drop` trait may only be implemented for local structs, enums, and unions\n   --> $DIR/E0117.rs:1:15\n    |\n LL | impl Drop for u32 {}\n-   |               ^^^ must be a struct, enum, or union\n+   |               ^^^ must be a struct, enum, or union in the current crate\n \n error: aborting due to 2 previous errors\n "}, {"sha": "75778f1f94a16ac61cc233b183cd7c30cbfd6f0c", "filename": "src/test/ui/error-codes/E0120.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/078844283c8943b34b5b4ed90f6032c042dc4416/src%2Ftest%2Fui%2Ferror-codes%2FE0120.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/078844283c8943b34b5b4ed90f6032c042dc4416/src%2Ftest%2Fui%2Ferror-codes%2FE0120.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0120.stderr?ref=078844283c8943b34b5b4ed90f6032c042dc4416", "patch": "@@ -1,8 +1,8 @@\n-error[E0120]: the `Drop` trait may only be implemented for structs, enums, and unions\n+error[E0120]: the `Drop` trait may only be implemented for local structs, enums, and unions\n   --> $DIR/E0120.rs:3:15\n    |\n LL | impl Drop for dyn MyTrait {\n-   |               ^^^^^^^^^^^ must be a struct, enum, or union\n+   |               ^^^^^^^^^^^ must be a struct, enum, or union in the current crate\n \n error: aborting due to previous error\n "}, {"sha": "e249db9df5324998595eecbf2e3d0c92ad13a053", "filename": "src/test/ui/issues/issue-41974.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/078844283c8943b34b5b4ed90f6032c042dc4416/src%2Ftest%2Fui%2Fissues%2Fissue-41974.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/078844283c8943b34b5b4ed90f6032c042dc4416/src%2Ftest%2Fui%2Fissues%2Fissue-41974.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-41974.stderr?ref=078844283c8943b34b5b4ed90f6032c042dc4416", "patch": "@@ -7,11 +7,11 @@ LL | impl<T> Drop for T where T: A {\n    = note: implementing a foreign trait is only possible if at least one of the types for which it is implemented is local\n    = note: only traits defined in the current crate can be implemented for a type parameter\n \n-error[E0120]: the `Drop` trait may only be implemented for structs, enums, and unions\n+error[E0120]: the `Drop` trait may only be implemented for local structs, enums, and unions\n   --> $DIR/issue-41974.rs:7:18\n    |\n LL | impl<T> Drop for T where T: A {\n-   |                  ^ must be a struct, enum, or union\n+   |                  ^ must be a struct, enum, or union in the current crate\n \n error: aborting due to 2 previous errors\n "}]}