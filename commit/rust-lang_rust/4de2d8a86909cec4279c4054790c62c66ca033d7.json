{"sha": "4de2d8a86909cec4279c4054790c62c66ca033d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkZTJkOGE4NjkwOWNlYzQyNzljNDA1NDc5MGM2MmM2NmNhMDMzZDc=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-04-25T17:23:15Z"}, "committer": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-04-25T17:23:15Z"}, "message": "Give GeneratorLayout a list of fields for each variant\n\nBut don't really use it yet.", "tree": {"sha": "46cdfd59bc76e6be3ea96b164b9c4e8a7afafb55", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/46cdfd59bc76e6be3ea96b164b9c4e8a7afafb55"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4de2d8a86909cec4279c4054790c62c66ca033d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4de2d8a86909cec4279c4054790c62c66ca033d7", "html_url": "https://github.com/rust-lang/rust/commit/4de2d8a86909cec4279c4054790c62c66ca033d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4de2d8a86909cec4279c4054790c62c66ca033d7/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70c1b6c530bfe86a2b54dbd40a7628fc2105c0b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/70c1b6c530bfe86a2b54dbd40a7628fc2105c0b9", "html_url": "https://github.com/rust-lang/rust/commit/70c1b6c530bfe86a2b54dbd40a7628fc2105c0b9"}], "stats": {"total": 29, "additions": 16, "deletions": 13}, "files": [{"sha": "5372f868aa9ab6cfbc8edafac64088a914fbffa3", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4de2d8a86909cec4279c4054790c62c66ca033d7/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4de2d8a86909cec4279c4054790c62c66ca033d7/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=4de2d8a86909cec4279c4054790c62c66ca033d7", "patch": "@@ -2998,7 +2998,7 @@ pub struct UnsafetyCheckResult {\n /// The layout of generator state\n #[derive(Clone, Debug, RustcEncodable, RustcDecodable, HashStable)]\n pub struct GeneratorLayout<'tcx> {\n-    pub fields: Vec<LocalDecl<'tcx>>,\n+    pub variant_fields: Vec<Vec<LocalDecl<'tcx>>>,\n }\n \n #[derive(Clone, Debug, RustcEncodable, RustcDecodable, HashStable)]\n@@ -3187,7 +3187,7 @@ BraceStructTypeFoldableImpl! {\n \n BraceStructTypeFoldableImpl! {\n     impl<'tcx> TypeFoldable<'tcx> for GeneratorLayout<'tcx> {\n-        fields\n+        variant_fields\n     }\n }\n "}, {"sha": "edd6014618e7824e205cde9e58c2df8bd8c3524a", "filename": "src/librustc/ty/sty.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/4de2d8a86909cec4279c4054790c62c66ca033d7/src%2Flibrustc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4de2d8a86909cec4279c4054790c62c66ca033d7/src%2Flibrustc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fsty.rs?ref=4de2d8a86909cec4279c4054790c62c66ca033d7", "patch": "@@ -475,16 +475,16 @@ impl<'a, 'gcx, 'tcx> GeneratorSubsts<'tcx> {\n     /// This returns the types of the MIR locals which had to be stored across suspension points.\n     /// It is calculated in rustc_mir::transform::generator::StateTransform.\n     /// All the types here must be in the tuple in GeneratorInterior.\n-    pub fn state_tys(\n-        self,\n-        def_id: DefId,\n-        tcx: TyCtxt<'a, 'gcx, 'tcx>,\n-    ) -> impl Iterator<Item=Ty<'tcx>> + Captures<'gcx> + 'a {\n-        let state = tcx.generator_layout(def_id).fields.iter();\n-        state.map(move |d| d.ty.subst(tcx, self.substs))\n+    pub fn state_tys(self, def_id: DefId, tcx: TyCtxt<'a, 'gcx, 'tcx>) ->\n+        impl Iterator<Item=Ty<'tcx>> + Captures<'gcx> + 'a\n+    {\n+        // TODO remove so we can handle variants properly\n+        tcx.generator_layout(def_id)\n+            .variant_fields[0].iter()\n+            .map(move |d| d.ty.subst(tcx, self.substs))\n     }\n \n-    /// This is the types of the fields of a generate which\n+    /// This is the types of the fields of a generator which\n     /// is available before the generator transformation.\n     /// It includes the upvars and the state discriminant.\n     pub fn pre_transforms_tys(self, def_id: DefId, tcx: TyCtxt<'a, 'gcx, 'tcx>) ->"}, {"sha": "4387d77a925b25f9d26e7893d5a174e1a8ce93b9", "filename": "src/librustc_codegen_ssa/mir/mod.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4de2d8a86909cec4279c4054790c62c66ca033d7/src%2Flibrustc_codegen_ssa%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4de2d8a86909cec4279c4054790c62c66ca033d7/src%2Flibrustc_codegen_ssa%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fmod.rs?ref=4de2d8a86909cec4279c4054790c62c66ca033d7", "patch": "@@ -655,10 +655,12 @@ fn arg_local_refs<'a, 'tcx: 'a, Bx: BuilderMethods<'a, 'tcx>>(\n                         ty::Generator(def_id, substs, _) => (def_id, substs),\n                         _ => bug!(\"generator layout without generator substs\"),\n                     };\n+                    // TODO handle variant scopes here\n                     let state_tys = gen_substs.state_tys(def_id, tcx);\n \n-                    let upvar_count = upvar_debuginfo.len();\n-                    generator_layout.fields\n+                    // TODO remove assumption of only one variant\n+                    let upvar_count = mir.upvar_decls.len();\n+                    generator_layout.variant_fields[0]\n                         .iter()\n                         .zip(state_tys)\n                         .enumerate()"}, {"sha": "253038fd03037dbcaefe054e89236479d461518d", "filename": "src/librustc_mir/transform/generator.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4de2d8a86909cec4279c4054790c62c66ca033d7/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4de2d8a86909cec4279c4054790c62c66ca033d7/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs?ref=4de2d8a86909cec4279c4054790c62c66ca033d7", "patch": "@@ -549,7 +549,8 @@ fn compute_layout<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     }).unzip();\n \n     let layout = GeneratorLayout {\n-        fields: vars\n+        // Put everything in one variant, for now.\n+        variant_fields: vec![vars]\n     };\n \n     (remap, layout, storage_liveness)"}]}