{"sha": "838c62bb288d0fa6b395a9807ad8a519406e48c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzOGM2MmJiMjg4ZDBmYTZiMzk1YTk4MDdhZDhhNTE5NDA2ZTQ4YzM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-02-10T18:16:31Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-02-10T18:16:31Z"}, "message": "auto merge of #12132 : brunoabinader/rust/list-matches-predicate, r=alexcrichton\n\nThis is needed for cases where we only need to know if a list item matches the given predicate (eg. in Servo, we need to know if attributes from different DOM elements are equal).", "tree": {"sha": "4b9a6c4628367f5083acb7ffeef3adac8ffd93cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b9a6c4628367f5083acb7ffeef3adac8ffd93cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/838c62bb288d0fa6b395a9807ad8a519406e48c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/838c62bb288d0fa6b395a9807ad8a519406e48c3", "html_url": "https://github.com/rust-lang/rust/commit/838c62bb288d0fa6b395a9807ad8a519406e48c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/838c62bb288d0fa6b395a9807ad8a519406e48c3/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f16e519f13cbfd78cd6c06fc0639df401bc0077", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f16e519f13cbfd78cd6c06fc0639df401bc0077", "html_url": "https://github.com/rust-lang/rust/commit/4f16e519f13cbfd78cd6c06fc0639df401bc0077"}, {"sha": "cb1fad3b28475eceff3de26380297a2c92fe5deb", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb1fad3b28475eceff3de26380297a2c92fe5deb", "html_url": "https://github.com/rust-lang/rust/commit/cb1fad3b28475eceff3de26380297a2c92fe5deb"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "0dc13aa2b49e28da45f858c80fcdc5c2b8356bdf", "filename": "src/libcollections/list.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/838c62bb288d0fa6b395a9807ad8a519406e48c3/src%2Flibcollections%2Flist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/838c62bb288d0fa6b395a9807ad8a519406e48c3/src%2Flibcollections%2Flist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flist.rs?ref=838c62bb288d0fa6b395a9807ad8a519406e48c3", "patch": "@@ -63,6 +63,26 @@ pub fn find<T:Clone>(ls: @List<T>, f: |&T| -> bool) -> Option<T> {\n     };\n }\n \n+/**\n+ * Returns true if a list contains an element that matches a given predicate\n+ *\n+ * Apply function `f` to each element of `ls`, starting from the first.\n+ * When function `f` returns true then it also returns true. If `f` matches no\n+ * elements then false is returned.\n+ */\n+pub fn any<T>(ls: @List<T>, f: |&T| -> bool) -> bool {\n+    let mut ls = ls;\n+    loop {\n+        ls = match *ls {\n+            Cons(ref hd, tl) => {\n+                if f(hd) { return true; }\n+                tl\n+            }\n+            Nil => return false\n+        }\n+    };\n+}\n+\n /// Returns true if a list contains an element with the given value\n pub fn has<T:Eq>(ls: @List<T>, elt: T) -> bool {\n     let mut found = false;\n@@ -222,6 +242,15 @@ mod tests {\n         assert_eq!(list::find(empty, match_), option::None::<int>);\n     }\n \n+    #[test]\n+    fn test_any() {\n+        fn match_(i: &int) -> bool { return *i == 2; }\n+        let l = from_vec([0, 1, 2]);\n+        let empty = @list::Nil::<int>;\n+        assert_eq!(list::any(l, match_), true);\n+        assert_eq!(list::any(empty, match_), false);\n+    }\n+\n     #[test]\n     fn test_has() {\n         let l = from_vec([5, 8, 6]);"}]}