{"sha": "4e03ffdb6547d9541de84b61d7798b497235472b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlMDNmZmRiNjU0N2Q5NTQxZGU4NGI2MWQ3Nzk4YjQ5NzIzNTQ3MmI=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-10-18T15:03:04Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-10-18T15:03:04Z"}, "message": "rustc: optimize away some mallocs when building GEP args", "tree": {"sha": "5575a019b2718f29ca08dac619185c1234610175", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5575a019b2718f29ca08dac619185c1234610175"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e03ffdb6547d9541de84b61d7798b497235472b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e03ffdb6547d9541de84b61d7798b497235472b", "html_url": "https://github.com/rust-lang/rust/commit/4e03ffdb6547d9541de84b61d7798b497235472b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e03ffdb6547d9541de84b61d7798b497235472b/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e28a161b720e267c837905e5f1b0760f71ebee14", "url": "https://api.github.com/repos/rust-lang/rust/commits/e28a161b720e267c837905e5f1b0760f71ebee14", "html_url": "https://github.com/rust-lang/rust/commit/e28a161b720e267c837905e5f1b0760f71ebee14"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "ea992600ae19b7a537f7ae1f865c366e20589aa4", "filename": "src/rustc/middle/trans/build.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4e03ffdb6547d9541de84b61d7798b497235472b/src%2Frustc%2Fmiddle%2Ftrans%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e03ffdb6547d9541de84b61d7798b497235472b/src%2Frustc%2Fmiddle%2Ftrans%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fbuild.rs?ref=4e03ffdb6547d9541de84b61d7798b497235472b", "patch": "@@ -433,8 +433,7 @@ fn GEP(cx: block, Pointer: ValueRef, Indices: ~[ValueRef]) -> ValueRef {\n //\n // XXX: Use a small-vector optimization to avoid allocations here.\n fn GEPi(cx: block, base: ValueRef, ixs: &[uint]) -> ValueRef {\n-    let mut v: ~[ValueRef] = ~[];\n-    for vec::each(ixs) |i| { v.push(C_i32(*i as i32)); }\n+    let v = do vec::map(ixs) |i| { C_i32(*i as i32) };\n     count_insn(cx, \"gepi\");\n     return InBoundsGEP(cx, base, v);\n }"}]}