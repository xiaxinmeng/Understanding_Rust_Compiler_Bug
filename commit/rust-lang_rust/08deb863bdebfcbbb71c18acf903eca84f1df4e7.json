{"sha": "08deb863bdebfcbbb71c18acf903eca84f1df4e7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4ZGViODYzYmRlYmZjYmJiNzFjMThhY2Y5MDNlY2E4NGYxZGY0ZTc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-09-03T05:53:48Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-09-03T05:53:48Z"}, "message": "Auto merge of #76235 - jyn514:std-intra-links, r=poliorcetics\n\nConvert many files to intra-doc links\n\nHelps with https://github.com/rust-lang/rust/issues/75080\nr? @poliorcetics\nI recommend reviewing one commit at a time, but the diff is small enough you can do it all at once if you like :)", "tree": {"sha": "2d3aa4dadd1b91d2506952df2fd6e1bbc12ad6af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d3aa4dadd1b91d2506952df2fd6e1bbc12ad6af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/08deb863bdebfcbbb71c18acf903eca84f1df4e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/08deb863bdebfcbbb71c18acf903eca84f1df4e7", "html_url": "https://github.com/rust-lang/rust/commit/08deb863bdebfcbbb71c18acf903eca84f1df4e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/08deb863bdebfcbbb71c18acf903eca84f1df4e7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e33c742ca572a93d97106876041c241c23a562a", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e33c742ca572a93d97106876041c241c23a562a", "html_url": "https://github.com/rust-lang/rust/commit/1e33c742ca572a93d97106876041c241c23a562a"}, {"sha": "bb103476a9375787f7e610ab1883093f8358ed70", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb103476a9375787f7e610ab1883093f8358ed70", "html_url": "https://github.com/rust-lang/rust/commit/bb103476a9375787f7e610ab1883093f8358ed70"}], "stats": {"total": 113, "additions": 34, "deletions": 79}, "files": [{"sha": "5c8c2c5a5a8682654b82423a4759b52c1682199b", "filename": "library/alloc/src/boxed.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/08deb863bdebfcbbb71c18acf903eca84f1df4e7/library%2Falloc%2Fsrc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08deb863bdebfcbbb71c18acf903eca84f1df4e7/library%2Falloc%2Fsrc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fboxed.rs?ref=08deb863bdebfcbbb71c18acf903eca84f1df4e7", "patch": "@@ -217,7 +217,7 @@ impl<T> Box<T> {\n     /// assert_eq!(*zero, 0)\n     /// ```\n     ///\n-    /// [zeroed]: ../../std/mem/union.MaybeUninit.html#method.zeroed\n+    /// [zeroed]: mem::MaybeUninit::zeroed\n     #[unstable(feature = \"new_uninit\", issue = \"63291\")]\n     pub fn new_zeroed() -> Box<mem::MaybeUninit<T>> {\n         let layout = alloc::Layout::new::<mem::MaybeUninit<T>>();\n@@ -289,7 +289,7 @@ impl<T> Box<[T]> {\n     /// assert_eq!(*values, [0, 0, 0])\n     /// ```\n     ///\n-    /// [zeroed]: ../../std/mem/union.MaybeUninit.html#method.zeroed\n+    /// [zeroed]: mem::MaybeUninit::zeroed\n     #[unstable(feature = \"new_uninit\", issue = \"63291\")]\n     pub fn new_zeroed_slice(len: usize) -> Box<[mem::MaybeUninit<T>]> {\n         unsafe { RawVec::with_capacity_zeroed(len).into_box(len) }\n@@ -307,7 +307,7 @@ impl<T> Box<mem::MaybeUninit<T>> {\n     /// Calling this when the content is not yet fully initialized\n     /// causes immediate undefined behavior.\n     ///\n-    /// [`MaybeUninit::assume_init`]: ../../std/mem/union.MaybeUninit.html#method.assume_init\n+    /// [`MaybeUninit::assume_init`]: mem::MaybeUninit::assume_init\n     ///\n     /// # Examples\n     ///\n@@ -343,7 +343,7 @@ impl<T> Box<[mem::MaybeUninit<T>]> {\n     /// Calling this when the content is not yet fully initialized\n     /// causes immediate undefined behavior.\n     ///\n-    /// [`MaybeUninit::assume_init`]: ../../std/mem/union.MaybeUninit.html#method.assume_init\n+    /// [`MaybeUninit::assume_init`]: mem::MaybeUninit::assume_init\n     ///\n     /// # Examples\n     ///"}, {"sha": "2f0a374015af63090c63f639a8ed89700ca7a01b", "filename": "library/alloc/src/rc.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/08deb863bdebfcbbb71c18acf903eca84f1df4e7/library%2Falloc%2Fsrc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08deb863bdebfcbbb71c18acf903eca84f1df4e7/library%2Falloc%2Fsrc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Frc.rs?ref=08deb863bdebfcbbb71c18acf903eca84f1df4e7", "patch": "@@ -376,7 +376,7 @@ impl<T> Rc<T> {\n     /// assert_eq!(*zero, 0)\n     /// ```\n     ///\n-    /// [zeroed]: ../../std/mem/union.MaybeUninit.html#method.zeroed\n+    /// [zeroed]: mem::MaybeUninit::zeroed\n     #[unstable(feature = \"new_uninit\", issue = \"63291\")]\n     pub fn new_zeroed() -> Rc<mem::MaybeUninit<T>> {\n         unsafe {\n@@ -484,7 +484,7 @@ impl<T> Rc<[T]> {\n     /// assert_eq!(*values, [0, 0, 0])\n     /// ```\n     ///\n-    /// [zeroed]: ../../std/mem/union.MaybeUninit.html#method.zeroed\n+    /// [zeroed]: mem::MaybeUninit::zeroed\n     #[unstable(feature = \"new_uninit\", issue = \"63291\")]\n     pub fn new_zeroed_slice(len: usize) -> Rc<[mem::MaybeUninit<T>]> {\n         unsafe {\n@@ -511,7 +511,7 @@ impl<T> Rc<mem::MaybeUninit<T>> {\n     /// Calling this when the content is not yet fully initialized\n     /// causes immediate undefined behavior.\n     ///\n-    /// [`MaybeUninit::assume_init`]: ../../std/mem/union.MaybeUninit.html#method.assume_init\n+    /// [`MaybeUninit::assume_init`]: mem::MaybeUninit::assume_init\n     ///\n     /// # Examples\n     ///\n@@ -550,7 +550,7 @@ impl<T> Rc<[mem::MaybeUninit<T>]> {\n     /// Calling this when the content is not yet fully initialized\n     /// causes immediate undefined behavior.\n     ///\n-    /// [`MaybeUninit::assume_init`]: ../../std/mem/union.MaybeUninit.html#method.assume_init\n+    /// [`MaybeUninit::assume_init`]: mem::MaybeUninit::assume_init\n     ///\n     /// # Examples\n     ///"}, {"sha": "6a240fbb42a998228b01c44a45a9dfe3273cb7c1", "filename": "library/alloc/src/sync.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/08deb863bdebfcbbb71c18acf903eca84f1df4e7/library%2Falloc%2Fsrc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08deb863bdebfcbbb71c18acf903eca84f1df4e7/library%2Falloc%2Fsrc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fsync.rs?ref=08deb863bdebfcbbb71c18acf903eca84f1df4e7", "patch": "@@ -152,7 +152,7 @@ macro_rules! acquire {\n /// [upgrade]: Weak::upgrade\n /// [`RefCell<T>`]: core::cell::RefCell\n /// [`std::sync`]: ../../std/sync/index.html\n-/// [`Arc::clone(&from)`]: #method.clone\n+/// [`Arc::clone(&from)`]: Arc::clone\n ///\n /// # Examples\n ///\n@@ -201,7 +201,7 @@ macro_rules! acquire {\n /// See the [`rc` documentation][rc_examples] for more examples of reference\n /// counting in general.\n ///\n-/// [rc_examples]: ../../std/rc/index.html#examples\n+/// [rc_examples]: crate::rc#examples\n #[cfg_attr(not(test), rustc_diagnostic_item = \"Arc\")]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct Arc<T: ?Sized> {"}, {"sha": "a12a22fa26d8bc9120c7573db136a0186b4b063b", "filename": "library/core/src/pin.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/08deb863bdebfcbbb71c18acf903eca84f1df4e7/library%2Fcore%2Fsrc%2Fpin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08deb863bdebfcbbb71c18acf903eca84f1df4e7/library%2Fcore%2Fsrc%2Fpin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fpin.rs?ref=08deb863bdebfcbbb71c18acf903eca84f1df4e7", "patch": "@@ -661,7 +661,7 @@ impl<'a, T: ?Sized> Pin<&'a T> {\n     /// because it is one of the fields of that value), and also that you do\n     /// not move out of the argument you receive to the interior function.\n     ///\n-    /// [`pin` module]: ../../std/pin/index.html#projections-and-structural-pinning\n+    /// [`pin` module]: self#projections-and-structural-pinning\n     #[stable(feature = \"pin\", since = \"1.33.0\")]\n     pub unsafe fn map_unchecked<U, F>(self, func: F) -> Pin<&'a U>\n     where\n@@ -692,7 +692,7 @@ impl<'a, T: ?Sized> Pin<&'a T> {\n     /// the `Pin` itself. This method allows turning the `Pin` into a reference\n     /// with the same lifetime as the original `Pin`.\n     ///\n-    /// [\"pinning projections\"]: ../../std/pin/index.html#projections-and-structural-pinning\n+    /// [\"pinning projections\"]: self#projections-and-structural-pinning\n     #[stable(feature = \"pin\", since = \"1.33.0\")]\n     #[inline(always)]\n     pub fn get_ref(self) -> &'a T {\n@@ -756,7 +756,7 @@ impl<'a, T: ?Sized> Pin<&'a mut T> {\n     /// because it is one of the fields of that value), and also that you do\n     /// not move out of the argument you receive to the interior function.\n     ///\n-    /// [`pin` module]: ../../std/pin/index.html#projections-and-structural-pinning\n+    /// [`pin` module]: self#projections-and-structural-pinning\n     #[stable(feature = \"pin\", since = \"1.33.0\")]\n     pub unsafe fn map_unchecked_mut<U, F>(self, func: F) -> Pin<&'a mut U>\n     where"}, {"sha": "035cd9f243bf87786b189091a994403f0aef2746", "filename": "library/std/src/ascii.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/08deb863bdebfcbbb71c18acf903eca84f1df4e7/library%2Fstd%2Fsrc%2Fascii.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08deb863bdebfcbbb71c18acf903eca84f1df4e7/library%2Fstd%2Fsrc%2Fascii.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fascii.rs?ref=08deb863bdebfcbbb71c18acf903eca84f1df4e7", "patch": "@@ -70,7 +70,6 @@ pub trait AsciiExt {\n     /// inherent methods on `u8`, `char`, `[u8]` and `str`.\n     ///\n     /// [`make_ascii_uppercase`]: AsciiExt::make_ascii_uppercase\n-    /// [`str::to_uppercase`]: ../primitive.str.html#method.to_uppercase\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[allow(deprecated)]\n     fn to_ascii_uppercase(&self) -> Self::Owned;\n@@ -91,7 +90,6 @@ pub trait AsciiExt {\n     /// inherent methods on `u8`, `char`, `[u8]` and `str`.\n     ///\n     /// [`make_ascii_lowercase`]: AsciiExt::make_ascii_lowercase\n-    /// [`str::to_lowercase`]: ../primitive.str.html#method.to_lowercase\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[allow(deprecated)]\n     fn to_ascii_lowercase(&self) -> Self::Owned;"}, {"sha": "161bfe3795c2c3d052588ac3c9697ff59419abc4", "filename": "library/std/src/fs.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/08deb863bdebfcbbb71c18acf903eca84f1df4e7/library%2Fstd%2Fsrc%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08deb863bdebfcbbb71c18acf903eca84f1df4e7/library%2Fstd%2Fsrc%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ffs.rs?ref=08deb863bdebfcbbb71c18acf903eca84f1df4e7", "patch": "@@ -553,7 +553,7 @@ impl File {\n     /// the `SetFileInformationByHandle` function on Windows. Note that, this\n     /// [may change in the future][changes].\n     ///\n-    /// [changes]: ../io/index.html#platform-specific-behavior\n+    /// [changes]: io#platform-specific-behavior\n     ///\n     /// # Errors\n     ///\n@@ -1503,7 +1503,7 @@ impl AsInner<fs_imp::DirEntry> for DirEntry {\n /// and the `DeleteFile` function on Windows.\n /// Note that, this [may change in the future][changes].\n ///\n-/// [changes]: ../io/index.html#platform-specific-behavior\n+/// [changes]: io#platform-specific-behavior\n ///\n /// # Errors\n ///\n@@ -1541,7 +1541,7 @@ pub fn remove_file<P: AsRef<Path>>(path: P) -> io::Result<()> {\n /// and the `GetFileAttributesEx` function on Windows.\n /// Note that, this [may change in the future][changes].\n ///\n-/// [changes]: ../io/index.html#platform-specific-behavior\n+/// [changes]: io#platform-specific-behavior\n ///\n /// # Errors\n ///\n@@ -1575,7 +1575,7 @@ pub fn metadata<P: AsRef<Path>>(path: P) -> io::Result<Metadata> {\n /// and the `GetFileAttributesEx` function on Windows.\n /// Note that, this [may change in the future][changes].\n ///\n-/// [changes]: ../io/index.html#platform-specific-behavior\n+/// [changes]: io#platform-specific-behavior\n ///\n /// # Errors\n ///\n@@ -1618,7 +1618,7 @@ pub fn symlink_metadata<P: AsRef<Path>>(path: P) -> io::Result<Metadata> {\n ///\n /// Note that, this [may change in the future][changes].\n ///\n-/// [changes]: ../io/index.html#platform-specific-behavior\n+/// [changes]: io#platform-specific-behavior\n ///\n /// # Errors\n ///\n@@ -1669,7 +1669,7 @@ pub fn rename<P: AsRef<Path>, Q: AsRef<Path>>(from: P, to: Q) -> io::Result<()>\n /// `fcopyfile`.\n /// Note that, this [may change in the future][changes].\n ///\n-/// [changes]: ../io/index.html#platform-specific-behavior\n+/// [changes]: io#platform-specific-behavior\n ///\n /// # Errors\n ///\n@@ -1707,7 +1707,7 @@ pub fn copy<P: AsRef<Path>, Q: AsRef<Path>>(from: P, to: Q) -> io::Result<u64> {\n /// and the `CreateHardLink` function on Windows.\n /// Note that, this [may change in the future][changes].\n ///\n-/// [changes]: ../io/index.html#platform-specific-behavior\n+/// [changes]: io#platform-specific-behavior\n ///\n /// # Errors\n ///\n@@ -1772,7 +1772,7 @@ pub fn soft_link<P: AsRef<Path>, Q: AsRef<Path>>(src: P, dst: Q) -> io::Result<(\n /// `FILE_FLAG_BACKUP_SEMANTICS` flags on Windows.\n /// Note that, this [may change in the future][changes].\n ///\n-/// [changes]: ../io/index.html#platform-specific-behavior\n+/// [changes]: io#platform-specific-behavior\n ///\n /// # Errors\n ///\n@@ -1812,7 +1812,7 @@ pub fn read_link<P: AsRef<Path>>(path: P) -> io::Result<PathBuf> {\n /// with other applications (if passed to the application on the command-line,\n /// or written to a file another application may read).\n ///\n-/// [changes]: ../io/index.html#platform-specific-behavior\n+/// [changes]: io#platform-specific-behavior\n /// [path]: https://docs.microsoft.com/en-us/windows/win32/fileio/naming-a-file\n ///\n /// # Errors\n@@ -1846,7 +1846,7 @@ pub fn canonicalize<P: AsRef<Path>>(path: P) -> io::Result<PathBuf> {\n /// and the `CreateDirectory` function on Windows.\n /// Note that, this [may change in the future][changes].\n ///\n-/// [changes]: ../io/index.html#platform-specific-behavior\n+/// [changes]: io#platform-specific-behavior\n ///\n /// **NOTE**: If a parent of the given path doesn't exist, this function will\n /// return an error. To create a directory and all its missing parents at the\n@@ -1887,7 +1887,7 @@ pub fn create_dir<P: AsRef<Path>>(path: P) -> io::Result<()> {\n /// and the `CreateDirectory` function on Windows.\n /// Note that, this [may change in the future][changes].\n ///\n-/// [changes]: ../io/index.html#platform-specific-behavior\n+/// [changes]: io#platform-specific-behavior\n ///\n /// # Errors\n ///\n@@ -1930,7 +1930,7 @@ pub fn create_dir_all<P: AsRef<Path>>(path: P) -> io::Result<()> {\n /// and the `RemoveDirectory` function on Windows.\n /// Note that, this [may change in the future][changes].\n ///\n-/// [changes]: ../io/index.html#platform-specific-behavior\n+/// [changes]: io#platform-specific-behavior\n ///\n /// # Errors\n ///\n@@ -1970,7 +1970,7 @@ pub fn remove_dir<P: AsRef<Path>>(path: P) -> io::Result<()> {\n /// on Windows.\n /// Note that, this [may change in the future][changes].\n ///\n-/// [changes]: ../io/index.html#platform-specific-behavior\n+/// [changes]: io#platform-specific-behavior\n ///\n /// # Errors\n ///\n@@ -2006,7 +2006,7 @@ pub fn remove_dir_all<P: AsRef<Path>>(path: P) -> io::Result<()> {\n /// currently corresponds to `readdir` on Unix and `FindNextFile` on Windows.\n /// Note that, this [may change in the future][changes].\n ///\n-/// [changes]: ../io/index.html#platform-specific-behavior\n+/// [changes]: io#platform-specific-behavior\n ///\n /// The order in which this iterator returns entries is platform and filesystem\n /// dependent.\n@@ -2075,7 +2075,7 @@ pub fn read_dir<P: AsRef<Path>>(path: P) -> io::Result<ReadDir> {\n /// and the `SetFileAttributes` function on Windows.\n /// Note that, this [may change in the future][changes].\n ///\n-/// [changes]: ../io/index.html#platform-specific-behavior\n+/// [changes]: io#platform-specific-behavior\n ///\n /// # Errors\n ///"}, {"sha": "499b1137dcba5bcaa32cb700724e1e3fb4e813a6", "filename": "library/std/src/net/addr.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/08deb863bdebfcbbb71c18acf903eca84f1df4e7/library%2Fstd%2Fsrc%2Fnet%2Faddr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08deb863bdebfcbbb71c18acf903eca84f1df4e7/library%2Fstd%2Fsrc%2Fnet%2Faddr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fnet%2Faddr.rs?ref=08deb863bdebfcbbb71c18acf903eca84f1df4e7", "patch": "@@ -213,8 +213,6 @@ impl SocketAddr {\n     ///\n     /// [IP address]: IpAddr\n     /// [`IPv4` address]: IpAddr::V4\n-    /// [`false`]: ../../std/primitive.bool.html\n-    /// [`true`]: ../../std/primitive.bool.html\n     ///\n     /// # Examples\n     ///\n@@ -235,8 +233,6 @@ impl SocketAddr {\n     ///\n     /// [IP address]: IpAddr\n     /// [`IPv6` address]: IpAddr::V6\n-    /// [`false`]: ../../std/primitive.bool.html\n-    /// [`true`]: ../../std/primitive.bool.html\n     ///\n     /// # Examples\n     ///"}, {"sha": "e2fc7edb87e2c1902a099feddf5ad1a04b528c0d", "filename": "library/std/src/net/ip.rs", "status": "modified", "additions": 0, "deletions": 42, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/08deb863bdebfcbbb71c18acf903eca84f1df4e7/library%2Fstd%2Fsrc%2Fnet%2Fip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08deb863bdebfcbbb71c18acf903eca84f1df4e7/library%2Fstd%2Fsrc%2Fnet%2Fip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fnet%2Fip.rs?ref=08deb863bdebfcbbb71c18acf903eca84f1df4e7", "patch": "@@ -140,8 +140,6 @@ impl IpAddr {\n     /// See the documentation for [`Ipv4Addr::is_unspecified()`] and\n     /// [`Ipv6Addr::is_unspecified()`] for more details.\n     ///\n-    /// [`true`]: ../../std/primitive.bool.html\n-    ///\n     /// # Examples\n     ///\n     /// ```\n@@ -163,8 +161,6 @@ impl IpAddr {\n     /// See the documentation for [`Ipv4Addr::is_loopback()`] and\n     /// [`Ipv6Addr::is_loopback()`] for more details.\n     ///\n-    /// [`true`]: ../../std/primitive.bool.html\n-    ///\n     /// # Examples\n     ///\n     /// ```\n@@ -186,8 +182,6 @@ impl IpAddr {\n     /// See the documentation for [`Ipv4Addr::is_global()`] and\n     /// [`Ipv6Addr::is_global()`] for more details.\n     ///\n-    /// [`true`]: ../../std/primitive.bool.html\n-    ///\n     /// # Examples\n     ///\n     /// ```\n@@ -210,8 +204,6 @@ impl IpAddr {\n     /// See the documentation for [`Ipv4Addr::is_multicast()`] and\n     /// [`Ipv6Addr::is_multicast()`] for more details.\n     ///\n-    /// [`true`]: ../../std/primitive.bool.html\n-    ///\n     /// # Examples\n     ///\n     /// ```\n@@ -233,8 +225,6 @@ impl IpAddr {\n     /// See the documentation for [`Ipv4Addr::is_documentation()`] and\n     /// [`Ipv6Addr::is_documentation()`] for more details.\n     ///\n-    /// [`true`]: ../../std/primitive.bool.html\n-    ///\n     /// # Examples\n     ///\n     /// ```\n@@ -258,8 +248,6 @@ impl IpAddr {\n     /// Returns [`true`] if this address is an [`IPv4` address], and [`false`]\n     /// otherwise.\n     ///\n-    /// [`true`]: ../../std/primitive.bool.html\n-    /// [`false`]: ../../std/primitive.bool.html\n     /// [`IPv4` address]: IpAddr::V4\n     ///\n     /// # Examples\n@@ -278,8 +266,6 @@ impl IpAddr {\n     /// Returns [`true`] if this address is an [`IPv6` address], and [`false`]\n     /// otherwise.\n     ///\n-    /// [`true`]: ../../std/primitive.bool.html\n-    /// [`false`]: ../../std/primitive.bool.html\n     /// [`IPv6` address]: IpAddr::V6\n     ///\n     /// # Examples\n@@ -377,7 +363,6 @@ impl Ipv4Addr {\n     /// This property is defined in _UNIX Network Programming, Second Edition_,\n     /// W. Richard Stevens, p. 891; see also [ip7].\n     ///\n-    /// [`true`]: ../../std/primitive.bool.html\n     /// [ip7]: http://man7.org/linux/man-pages/man7/ip.7.html\n     ///\n     /// # Examples\n@@ -398,7 +383,6 @@ impl Ipv4Addr {\n     ///\n     /// This property is defined by [IETF RFC 1122].\n     ///\n-    /// [`true`]: ../../std/primitive.bool.html\n     /// [IETF RFC 1122]: https://tools.ietf.org/html/rfc1122\n     ///\n     /// # Examples\n@@ -423,7 +407,6 @@ impl Ipv4Addr {\n     ///  - 172.16.0.0/12\n     ///  - 192.168.0.0/16\n     ///\n-    /// [`true`]: ../../std/primitive.bool.html\n     /// [IETF RFC 1918]: https://tools.ietf.org/html/rfc1918\n     ///\n     /// # Examples\n@@ -454,7 +437,6 @@ impl Ipv4Addr {\n     ///\n     /// This property is defined by [IETF RFC 3927].\n     ///\n-    /// [`true`]: ../../std/primitive.bool.html\n     /// [IETF RFC 3927]: https://tools.ietf.org/html/rfc3927\n     ///\n     /// # Examples\n@@ -494,8 +476,6 @@ impl Ipv4Addr {\n     /// - addresses reserved for networking devices benchmarking (see\n     /// [`Ipv4Addr::is_benchmarking()`])\n     ///\n-    /// [`true`]: ../../std/primitive.bool.html\n-    /// [`false`]: ../../std/primitive.bool.html\n     /// [ipv4-sr]: https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml\n     ///\n     /// # Examples\n@@ -571,7 +551,6 @@ impl Ipv4Addr {\n     /// Returns [`true`] if this address is part of the Shared Address Space defined in\n     /// [IETF RFC 6598] (`100.64.0.0/10`).\n     ///\n-    /// [`true`]: ../../std/primitive.bool.html\n     /// [IETF RFC 6598]: https://tools.ietf.org/html/rfc6598\n     ///\n     /// # Examples\n@@ -598,7 +577,6 @@ impl Ipv4Addr {\n     /// - `192.0.0.9/32` is the \"Port Control Protocol Anycast\" (see [IETF RFC 7723])\n     /// - `192.0.0.10/32` is used for NAT traversal (see [IETF RFC 8155])\n     ///\n-    /// [`true`]: ../../std/primitive.bool.html\n     /// [IETF RFC 6890]: https://tools.ietf.org/html/rfc6890\n     /// [IETF RFC 7600]: https://tools.ietf.org/html/rfc7600\n     /// [IETF RFC 7723]: https://tools.ietf.org/html/rfc7723\n@@ -626,7 +604,6 @@ impl Ipv4Addr {\n     /// network devices benchmarking. This range is defined in [IETF RFC 2544] as `192.18.0.0`\n     /// through `198.19.255.255` but [errata 423] corrects it to `198.18.0.0/15`.\n     ///\n-    /// [`true`]: ../../std/primitive.bool.html\n     /// [IETF RFC 2544]: https://tools.ietf.org/html/rfc2544\n     /// [errata 423]: https://www.rfc-editor.org/errata/eid423\n     ///\n@@ -651,7 +628,6 @@ impl Ipv4Addr {\n     /// broadcast address `255.255.255.255`, but this implementation explicitly excludes it, since\n     /// it is obviously not reserved for future use.\n     ///\n-    /// [`true`]: ../../std/primitive.bool.html\n     /// [IETF RFC 1112]: https://tools.ietf.org/html/rfc1112\n     ///\n     /// # Warning\n@@ -684,7 +660,6 @@ impl Ipv4Addr {\n     /// Multicast addresses have a most significant octet between 224 and 239,\n     /// and is defined by [IETF RFC 5771].\n     ///\n-    /// [`true`]: ../../std/primitive.bool.html\n     /// [IETF RFC 5771]: https://tools.ietf.org/html/rfc5771\n     ///\n     /// # Examples\n@@ -706,7 +681,6 @@ impl Ipv4Addr {\n     ///\n     /// A broadcast address has all octets set to 255 as defined in [IETF RFC 919].\n     ///\n-    /// [`true`]: ../../std/primitive.bool.html\n     /// [IETF RFC 919]: https://tools.ietf.org/html/rfc919\n     ///\n     /// # Examples\n@@ -731,7 +705,6 @@ impl Ipv4Addr {\n     /// - 198.51.100.0/24 (TEST-NET-2)\n     /// - 203.0.113.0/24 (TEST-NET-3)\n     ///\n-    /// [`true`]: ../../std/primitive.bool.html\n     /// [IETF RFC 5737]: https://tools.ietf.org/html/rfc5737\n     ///\n     /// # Examples\n@@ -1148,7 +1121,6 @@ impl Ipv6Addr {\n     ///\n     /// This property is defined in [IETF RFC 4291].\n     ///\n-    /// [`true`]: ../../std/primitive.bool.html\n     /// [IETF RFC 4291]: https://tools.ietf.org/html/rfc4291\n     ///\n     /// # Examples\n@@ -1169,7 +1141,6 @@ impl Ipv6Addr {\n     ///\n     /// This property is defined in [IETF RFC 4291].\n     ///\n-    /// [`true`]: ../../std/primitive.bool.html\n     /// [IETF RFC 4291]: https://tools.ietf.org/html/rfc4291\n     ///\n     /// # Examples\n@@ -1194,9 +1165,6 @@ impl Ipv6Addr {\n     /// - link-local and unique local unicast addresses\n     /// - interface-, link-, realm-, admin- and site-local multicast addresses\n     ///\n-    /// [`true`]: ../../std/primitive.bool.html\n-    /// [`false`]: ../../std/primitive.bool.html\n-    ///\n     /// # Examples\n     ///\n     /// ```\n@@ -1223,8 +1191,6 @@ impl Ipv6Addr {\n     ///\n     /// [IETF RFC 4193]: https://tools.ietf.org/html/rfc4193\n     ///\n-    /// [`true`]: ../../std/primitive.bool.html\n-    ///\n     /// # Examples\n     ///\n     /// ```\n@@ -1257,8 +1223,6 @@ impl Ipv6Addr {\n     /// addresses such as `fe80:0:0:1::` or `fe81::` as unicast link-local addresses for example.\n     /// If you need a less strict validation use [`Ipv6Addr::is_unicast_link_local()`] instead.\n     ///\n-    /// [`true`]: ../../std/primitive.bool.html\n-    ///\n     /// # Examples\n     ///\n     /// ```\n@@ -1317,8 +1281,6 @@ impl Ipv6Addr {\n     /// If you need a strict validation fully compliant with the RFC, use\n     /// [`Ipv6Addr::is_unicast_link_local_strict()`] instead.\n     ///\n-    /// [`true`]: ../../std/primitive.bool.html\n-    ///\n     /// # Examples\n     ///\n     /// ```\n@@ -1365,7 +1327,6 @@ impl Ipv6Addr {\n     /// +----------+-------------------------+----------------------------+\n     /// ```\n     ///\n-    /// [`true`]: ../../std/primitive.bool.html\n     /// [RFC 4291 section 2.5.7]: https://tools.ietf.org/html/rfc4291#section-2.5.7\n     ///\n     /// # Examples\n@@ -1399,7 +1360,6 @@ impl Ipv6Addr {\n     ///\n     /// This property is defined in [IETF RFC 3849].\n     ///\n-    /// [`true`]: ../../std/primitive.bool.html\n     /// [IETF RFC 3849]: https://tools.ietf.org/html/rfc3849\n     ///\n     /// # Examples\n@@ -1435,7 +1395,6 @@ impl Ipv6Addr {\n     /// Global Unicast).\n     /// ```\n     ///\n-    /// [`true`]: ../../std/primitive.bool.html\n     /// [RFC 4291 section 2.5.7]: https://tools.ietf.org/html/rfc4291#section-2.5.7\n     ///\n     /// # Examples\n@@ -1495,7 +1454,6 @@ impl Ipv6Addr {\n     ///\n     /// This property is defined by [IETF RFC 4291].\n     ///\n-    /// [`true`]: ../../std/primitive.bool.html\n     /// [IETF RFC 4291]: https://tools.ietf.org/html/rfc4291\n     ///\n     /// # Examples"}, {"sha": "c7a7c779d3c57c451de7280fd04d5f2e55034c4f", "filename": "library/std/src/prelude/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/08deb863bdebfcbbb71c18acf903eca84f1df4e7/library%2Fstd%2Fsrc%2Fprelude%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08deb863bdebfcbbb71c18acf903eca84f1df4e7/library%2Fstd%2Fsrc%2Fprelude%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprelude%2Fmod.rs?ref=08deb863bdebfcbbb71c18acf903eca84f1df4e7", "patch": "@@ -75,7 +75,7 @@\n //! [`std::result`]: crate::result\n //! [`std::slice`]: crate::slice\n //! [`std::string`]: crate::string\n-//! [`std::vec`]: ../vec/index.html\n+//! [`std::vec`]: mod@crate::vec\n //! [`to_owned`]: crate::borrow::ToOwned::to_owned\n //! [book-closures]: ../../book/ch13-01-closures.html\n //! [book-dtor]: ../../book/ch15-03-drop.html"}, {"sha": "e48e950928a50a379acbb60deb24c6bfe049cc34", "filename": "library/std/src/sys/unix/ext/fs.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/08deb863bdebfcbbb71c18acf903eca84f1df4e7/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08deb863bdebfcbbb71c18acf903eca84f1df4e7/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Ffs.rs?ref=08deb863bdebfcbbb71c18acf903eca84f1df4e7", "patch": "@@ -8,6 +8,9 @@ use crate::path::Path;\n use crate::sys;\n use crate::sys::platform::fs::MetadataExt as UnixMetadataExt;\n use crate::sys_common::{AsInner, AsInnerMut, FromInner};\n+// Used for `File::read` on intra-doc links\n+#[allow(unused_imports)]\n+use io::{Read, Write};\n \n /// Unix-specific extensions to [`fs::File`].\n #[stable(feature = \"file_offset\", since = \"1.15.0\")]\n@@ -24,7 +27,7 @@ pub trait FileExt {\n     /// Note that similar to [`File::read`], it is not an error to return with a\n     /// short read.\n     ///\n-    /// [`File::read`]: ../../../../std/fs/struct.File.html#method.read\n+    /// [`File::read`]: fs::File::read\n     ///\n     /// # Examples\n     ///\n@@ -127,7 +130,7 @@ pub trait FileExt {\n     /// Note that similar to [`File::write`], it is not an error to return a\n     /// short write.\n     ///\n-    /// [`File::write`]: ../../../../std/fs/struct.File.html#method.write\n+    /// [`File::write`]: fs::File::write\n     ///\n     /// # Examples\n     ///"}]}