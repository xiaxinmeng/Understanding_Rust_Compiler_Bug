{"sha": "9c8bf51f142090de5c30341b744a7d7456bc309e", "node_id": "C_kwDOAAsO6NoAKDljOGJmNTFmMTQyMDkwZGU1YzMwMzQxYjc0NGE3ZDc0NTZiYzMwOWU", "commit": {"author": {"name": "Deep Majumder", "email": "deep.majumder2019@gmail.com", "date": "2022-12-13T10:27:48Z"}, "committer": {"name": "Deep Majumder", "email": "deep.majumder2019@gmail.com", "date": "2022-12-13T10:27:48Z"}, "message": "Remove invalid case for mutable borrow suggestion\n\nIf we have a call such as `foo(&mut buf)` and after reference\ncollapsing the type is inferred as `&T` where-as the required type is\n`&mut T`, don't suggest `foo(&mut mut buf)`. This is wrong syntactically\nand the issue lies elsewhere, not in the borrow.\n\nFixes #105645", "tree": {"sha": "93fed72ed3a7f2cfb4eb4e779d59bacdb7c297c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/93fed72ed3a7f2cfb4eb4e779d59bacdb7c297c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c8bf51f142090de5c30341b744a7d7456bc309e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c8bf51f142090de5c30341b744a7d7456bc309e", "html_url": "https://github.com/rust-lang/rust/commit/9c8bf51f142090de5c30341b744a7d7456bc309e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c8bf51f142090de5c30341b744a7d7456bc309e/comments", "author": {"login": "RedDocMD", "id": 54888685, "node_id": "MDQ6VXNlcjU0ODg4Njg1", "avatar_url": "https://avatars.githubusercontent.com/u/54888685?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RedDocMD", "html_url": "https://github.com/RedDocMD", "followers_url": "https://api.github.com/users/RedDocMD/followers", "following_url": "https://api.github.com/users/RedDocMD/following{/other_user}", "gists_url": "https://api.github.com/users/RedDocMD/gists{/gist_id}", "starred_url": "https://api.github.com/users/RedDocMD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RedDocMD/subscriptions", "organizations_url": "https://api.github.com/users/RedDocMD/orgs", "repos_url": "https://api.github.com/users/RedDocMD/repos", "events_url": "https://api.github.com/users/RedDocMD/events{/privacy}", "received_events_url": "https://api.github.com/users/RedDocMD/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RedDocMD", "id": 54888685, "node_id": "MDQ6VXNlcjU0ODg4Njg1", "avatar_url": "https://avatars.githubusercontent.com/u/54888685?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RedDocMD", "html_url": "https://github.com/RedDocMD", "followers_url": "https://api.github.com/users/RedDocMD/followers", "following_url": "https://api.github.com/users/RedDocMD/following{/other_user}", "gists_url": "https://api.github.com/users/RedDocMD/gists{/gist_id}", "starred_url": "https://api.github.com/users/RedDocMD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RedDocMD/subscriptions", "organizations_url": "https://api.github.com/users/RedDocMD/orgs", "repos_url": "https://api.github.com/users/RedDocMD/repos", "events_url": "https://api.github.com/users/RedDocMD/events{/privacy}", "received_events_url": "https://api.github.com/users/RedDocMD/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71ec1457ee9868a838e4521a3510cdd416c0c295", "url": "https://api.github.com/repos/rust-lang/rust/commits/71ec1457ee9868a838e4521a3510cdd416c0c295", "html_url": "https://github.com/rust-lang/rust/commit/71ec1457ee9868a838e4521a3510cdd416c0c295"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "2323161039a2bffa75d9944f1cfe5f4e89d249eb", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/9c8bf51f142090de5c30341b744a7d7456bc309e/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c8bf51f142090de5c30341b744a7d7456bc309e/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=9c8bf51f142090de5c30341b744a7d7456bc309e", "patch": "@@ -1368,6 +1368,17 @@ impl<'tcx> TypeErrCtxtExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n                         .source_map()\n                         .span_take_while(span, |c| c.is_whitespace() || *c == '&');\n                     if points_at_arg && mutability.is_not() && refs_number > 0 {\n+                        // If we have a call like foo(&mut buf), then don't suggest foo(&mut mut buf)\n+                        if \"mut\"\n+                            == snippet\n+                                .chars()\n+                                .filter(|c| !c.is_whitespace())\n+                                .skip(refs_number)\n+                                .take(3)\n+                                .collect::<String>()\n+                        {\n+                            return;\n+                        }\n                         err.span_suggestion_verbose(\n                             sp,\n                             \"consider changing this borrow's mutability\","}, {"sha": "681ce1c6e37a64d4466f82f36b2ac6d84f1efd66", "filename": "src/test/ui/suggestions/issue-105645.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9c8bf51f142090de5c30341b744a7d7456bc309e/src%2Ftest%2Fui%2Fsuggestions%2Fissue-105645.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c8bf51f142090de5c30341b744a7d7456bc309e/src%2Ftest%2Fui%2Fsuggestions%2Fissue-105645.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-105645.rs?ref=9c8bf51f142090de5c30341b744a7d7456bc309e", "patch": "@@ -0,0 +1,8 @@\n+fn main() {\n+    let mut buf = [0u8; 50];\n+    let mut bref = buf.as_slice();\n+    foo(&mut bref);\n+    //~^ ERROR 4:9: 4:18: the trait bound `&[u8]: std::io::Write` is not satisfied [E0277]\n+}\n+\n+fn foo(_: &mut impl std::io::Write) {}"}, {"sha": "895f5ffd1e1c74fba68aae7d08b32c1c0856e3b9", "filename": "src/test/ui/suggestions/issue-105645.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/9c8bf51f142090de5c30341b744a7d7456bc309e/src%2Ftest%2Fui%2Fsuggestions%2Fissue-105645.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c8bf51f142090de5c30341b744a7d7456bc309e/src%2Ftest%2Fui%2Fsuggestions%2Fissue-105645.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-105645.stderr?ref=9c8bf51f142090de5c30341b744a7d7456bc309e", "patch": "@@ -0,0 +1,18 @@\n+error[E0277]: the trait bound `&[u8]: std::io::Write` is not satisfied\n+  --> $DIR/issue-105645.rs:4:9\n+   |\n+LL |     foo(&mut bref);\n+   |     --- ^^^^^^^^^ the trait `std::io::Write` is not implemented for `&[u8]`\n+   |     |\n+   |     required by a bound introduced by this call\n+   |\n+   = help: the trait `std::io::Write` is implemented for `&mut [u8]`\n+note: required by a bound in `foo`\n+  --> $DIR/issue-105645.rs:8:21\n+   |\n+LL | fn foo(_: &mut impl std::io::Write) {}\n+   |                     ^^^^^^^^^^^^^^ required by this bound in `foo`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}]}