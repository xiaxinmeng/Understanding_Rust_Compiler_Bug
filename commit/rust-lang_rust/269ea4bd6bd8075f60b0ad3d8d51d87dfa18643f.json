{"sha": "269ea4bd6bd8075f60b0ad3d8d51d87dfa18643f", "node_id": "C_kwDOAAsO6NoAKDI2OWVhNGJkNmJkODA3NWY2MGIwYWQzZDhkNTFkODdkZmExODY0M2Y", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-06-14T04:25:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-06-14T04:25:49Z"}, "message": "Rollup merge of #112520 - chenyukang:yukang-fix-112505, r=fee1-dead\n\nFix the overflow issue for transmute_generic_consts\n\nFixes #112505", "tree": {"sha": "8e16f2e494aff3fc0df7d3f293e2d15d0f54b2b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e16f2e494aff3fc0df7d3f293e2d15d0f54b2b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/269ea4bd6bd8075f60b0ad3d8d51d87dfa18643f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkiUFNCRBK7hj4Ov3rIwAAKLYIALJMDWL2Mf3PQqd8JD7ql5UD\nKZzyS0FOy+d0VrxIPDF1J61aioYRihQa4lqozbw7w5hkxGRMA0fNMB4tH2/lVVOa\nZOJeYFgYIdwQkmmmtwxiVLy5t6EL1OuQp88azwoEk45mGnEXvDLIi1pxwr6AcRoX\nJao7fJEMfcwi9EEjvC5mfKv2vvP9KyocY4Mvi+ymKd4AtDL9Wk+IbOkTPnezhTVr\nnwwBsXiDu1XKGWbC4BOFM0ClOAplWXVY3JVW9xVRaKFz7NpaaPIxauYRuOz0eXcH\n0Nxgd4ffddGJYu3TCp6/aK2uw2f931SVN2RcjvpHhawK1uI8jnSwLsxsHH5zlyk=\n=WyuX\n-----END PGP SIGNATURE-----\n", "payload": "tree 8e16f2e494aff3fc0df7d3f293e2d15d0f54b2b7\nparent 98f6e9644bc008df72eeacbd6d8ba34fcda6422b\nparent 3bbc598d16bbaab62ec3f460d1832236908607d8\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1686716749 +0200\ncommitter GitHub <noreply@github.com> 1686716749 +0200\n\nRollup merge of #112520 - chenyukang:yukang-fix-112505, r=fee1-dead\n\nFix the overflow issue for transmute_generic_consts\n\nFixes #112505\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/269ea4bd6bd8075f60b0ad3d8d51d87dfa18643f", "html_url": "https://github.com/rust-lang/rust/commit/269ea4bd6bd8075f60b0ad3d8d51d87dfa18643f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/269ea4bd6bd8075f60b0ad3d8d51d87dfa18643f/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98f6e9644bc008df72eeacbd6d8ba34fcda6422b", "url": "https://api.github.com/repos/rust-lang/rust/commits/98f6e9644bc008df72eeacbd6d8ba34fcda6422b", "html_url": "https://github.com/rust-lang/rust/commit/98f6e9644bc008df72eeacbd6d8ba34fcda6422b"}, {"sha": "3bbc598d16bbaab62ec3f460d1832236908607d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/3bbc598d16bbaab62ec3f460d1832236908607d8", "html_url": "https://github.com/rust-lang/rust/commit/3bbc598d16bbaab62ec3f460d1832236908607d8"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "362c07431e0a2f6ae05264dbe835b06198095d63", "filename": "compiler/rustc_hir_typeck/src/intrinsicck.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/269ea4bd6bd8075f60b0ad3d8d51d87dfa18643f/compiler%2Frustc_hir_typeck%2Fsrc%2Fintrinsicck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/269ea4bd6bd8075f60b0ad3d8d51d87dfa18643f/compiler%2Frustc_hir_typeck%2Fsrc%2Fintrinsicck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fintrinsicck.rs?ref=269ea4bd6bd8075f60b0ad3d8d51d87dfa18643f", "patch": "@@ -82,8 +82,17 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n         // Try to display a sensible error with as much information as possible.\n         let skeleton_string = |ty: Ty<'tcx>, sk| match sk {\n-            Ok(SizeSkeleton::Known(size)) => format!(\"{} bits\", size.bits()),\n             Ok(SizeSkeleton::Pointer { tail, .. }) => format!(\"pointer to `{tail}`\"),\n+            Ok(SizeSkeleton::Known(size)) => {\n+                if let Some(v) = u128::from(size.bytes()).checked_mul(8) {\n+                    format!(\"{} bits\", v)\n+                } else {\n+                    // `u128` should definitely be able to hold the size of different architectures\n+                    // larger sizes should be reported as error `are too big for the current architecture`\n+                    // otherwise we have a bug somewhere\n+                    bug!(\"{:?} overflow for u128\", size)\n+                }\n+            }\n             Ok(SizeSkeleton::Generic(size)) => {\n                 if let Some(size) = size.try_eval_target_usize(tcx, self.param_env) {\n                     format!(\"{size} bytes\")"}, {"sha": "0dd7776d5954426f97d94d4954d65a9079d235c6", "filename": "tests/ui/const-generics/issue-112505-overflow.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/269ea4bd6bd8075f60b0ad3d8d51d87dfa18643f/tests%2Fui%2Fconst-generics%2Fissue-112505-overflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/269ea4bd6bd8075f60b0ad3d8d51d87dfa18643f/tests%2Fui%2Fconst-generics%2Fissue-112505-overflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fissue-112505-overflow.rs?ref=269ea4bd6bd8075f60b0ad3d8d51d87dfa18643f", "patch": "@@ -0,0 +1,7 @@\n+#![feature(transmute_generic_consts)]\n+\n+fn overflow(v: [[[u32; 8888888]; 9999999]; 777777777]) -> [[[u32; 9999999]; 777777777]; 239] {\n+    unsafe { std::mem::transmute(v) } //~ ERROR cannot transmute between types of different sizes\n+}\n+\n+fn main() { }"}, {"sha": "0432f2fa8be5da8fd427b0591f806928df922b4f", "filename": "tests/ui/const-generics/issue-112505-overflow.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/269ea4bd6bd8075f60b0ad3d8d51d87dfa18643f/tests%2Fui%2Fconst-generics%2Fissue-112505-overflow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/269ea4bd6bd8075f60b0ad3d8d51d87dfa18643f/tests%2Fui%2Fconst-generics%2Fissue-112505-overflow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fissue-112505-overflow.stderr?ref=269ea4bd6bd8075f60b0ad3d8d51d87dfa18643f", "patch": "@@ -0,0 +1,12 @@\n+error[E0512]: cannot transmute between types of different sizes, or dependently-sized types\n+  --> $DIR/issue-112505-overflow.rs:4:14\n+   |\n+LL |     unsafe { std::mem::transmute(v) }\n+   |              ^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: source type: `[[[u32; 8888888]; 9999999]; 777777777]` (values of the type `[[[u32; 8888888]; 9999999]; 777777777]` are too big for the current architecture)\n+   = note: target type: `[[[u32; 9999999]; 777777777]; 239]` (59484438436515561504 bits)\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0512`."}]}