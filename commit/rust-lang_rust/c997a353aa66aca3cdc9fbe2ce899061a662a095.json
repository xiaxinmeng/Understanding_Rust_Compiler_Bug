{"sha": "c997a353aa66aca3cdc9fbe2ce899061a662a095", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5OTdhMzUzYWE2NmFjYTNjZGM5ZmJlMmNlODk5MDYxYTY2MmEwOTU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2011-11-11T20:22:48Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2011-11-16T23:16:41Z"}, "message": "make check-stage2-perf target work again, along with rustc, std", "tree": {"sha": "b248382ce0bfed33b58e8d16bc40da8b5ede0495", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b248382ce0bfed33b58e8d16bc40da8b5ede0495"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c997a353aa66aca3cdc9fbe2ce899061a662a095", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c997a353aa66aca3cdc9fbe2ce899061a662a095", "html_url": "https://github.com/rust-lang/rust/commit/c997a353aa66aca3cdc9fbe2ce899061a662a095", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c997a353aa66aca3cdc9fbe2ce899061a662a095/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "895822a61cef0fcf1e9207eb0993cf8be27133c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/895822a61cef0fcf1e9207eb0993cf8be27133c4", "html_url": "https://github.com/rust-lang/rust/commit/895822a61cef0fcf1e9207eb0993cf8be27133c4"}], "stats": {"total": 33, "additions": 19, "deletions": 14}, "files": [{"sha": "086c2cef473576aeaa7d887c0c1d0eaea20ad7b7", "filename": "mk/tests.mk", "status": "modified", "additions": 19, "deletions": 14, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/c997a353aa66aca3cdc9fbe2ce899061a662a095/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/c997a353aa66aca3cdc9fbe2ce899061a662a095/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=c997a353aa66aca3cdc9fbe2ce899061a662a095", "patch": "@@ -184,56 +184,56 @@ CTEST_COMMON_ARGS$(1)-$(2) := --compile-lib-path $$(HOST_LIB$(1)) \\\n                          --rustc-path $$(HOST_BIN$(1))/rustc$$(X) \\\n                          --stage-id stage$(1)-$(2) \\\n                          --rustcflags \"$$(CFG_RUSTC_FLAGS) --target=$(2)\" \\\n-                         $$(CTEST_TESTARGS) \\\n+                         $$(CTEST_TESTARGS)\n \n CFAIL_ARGS$(1)-$(2) := $$(CTEST_COMMON_ARGS$(1)-$(2)) \\\n                   --src-base $$(S)src/test/compile-fail/ \\\n                   --build-base test/compile-fail/ \\\n-                  --mode compile-fail \\\n+                  --mode compile-fail\n \n RFAIL_ARGS$(1)-$(2) := $$(CTEST_COMMON_ARGS$(1)-$(2)) \\\n                   --src-base $$(S)src/test/run-fail/ \\\n                   --build-base test/run-fail/ \\\n                   --mode run-fail \\\n-                  $$(CTEST_RUNTOOL) \\\n+                  $$(CTEST_RUNTOOL)\n \n RPASS_ARGS$(1)-$(2) := $$(CTEST_COMMON_ARGS$(1)-$(2)) \\\n                   --src-base $$(S)src/test/run-pass/ \\\n                   --build-base test/run-pass/ \\\n                   --mode run-pass \\\n-                  $$(CTEST_RUNTOOL) \\\n+                  $$(CTEST_RUNTOOL)\n \n BENCH_ARGS$(1)-$(2) := $$(CTEST_COMMON_ARGS$(1)-$(2)) \\\n                   --src-base $$(S)src/test/bench/ \\\n                   --build-base test/bench/ \\\n                   --mode run-pass \\\n-                  $$(CTEST_RUNTOOL) \\\n+                  $$(CTEST_RUNTOOL)\n \n PERF_ARGS$(1)-$(2) := $$(CTEST_COMMON_ARGS$(1)-$(2)) \\\n                   --src-base $$(S)src/test/bench/ \\\n                   --build-base test/perf/ \\\n                   --mode run-pass \\\n-                  $$(CTEST_PERF_RUNTOOL) \\\n+                  $$(CTEST_PERF_RUNTOOL)\n \n PRETTY_RPASS_ARGS$(1)-$(2) := $$(CTEST_COMMON_ARGS$(1)-$(2)) \\\n                          --src-base $$(S)src/test/run-pass/ \\\n                          --build-base test/run-pass/ \\\n-                         --mode pretty \\\n+                         --mode pretty\n \n PRETTY_RFAIL_ARGS$(1)-$(2) := $$(CTEST_COMMON_ARGS$(1)-$(2)) \\\n                          --src-base $$(S)src/test/run-fail/ \\\n                          --build-base test/run-fail/ \\\n-                         --mode pretty \\\n+                         --mode pretty\n \n PRETTY_BENCH_ARGS$(1)-$(2) := $$(CTEST_COMMON_ARGS$(1)-$(2)) \\\n                          --src-base $$(S)src/test/bench/ \\\n                          --build-base test/bench/ \\\n-                         --mode pretty \\\n+                         --mode pretty\n \n PRETTY_PRETTY_ARGS$(1)-$(2) := $$(CTEST_COMMON_ARGS$(1)-$(2)) \\\n                           --src-base $$(S)src/test/pretty/ \\\n                           --build-base test/pretty/ \\\n-                          --mode pretty \\\n+                          --mode pretty\n \n check-stage$(1)-$(2)-cfail-dummy: $$(HOST_BIN$(1))/compiletest$$(X) \\\n                              $$(SREQ$(1)$$(CFG_HOST_TRIPLE)) \\\n@@ -299,10 +299,15 @@ $(foreach target,$(CFG_TARGET_TRIPLES), \\\n  $(eval $(call TEST_STAGEN,2,$(target))) \\\n  $(eval $(call TEST_STAGEN,3,$(target))))\n \n-check-stage0: check-stage0-$(CFG_HOST_TRIPLE)\n-check-stage1: check-stage1-$(CFG_HOST_TRIPLE)\n-check-stage2: check-stage2-$(CFG_HOST_TRIPLE)\n-check-stage3: check-stage3-$(CFG_HOST_TRIPLE)\n+# Make convenient Shorthand Targets for use on command\n+# line or by other rules:\n+check-stage0:        check-stage0-$(CFG_HOST_TRIPLE)\n+check-stage1:        check-stage1-$(CFG_HOST_TRIPLE)\n+check-stage2:        check-stage2-$(CFG_HOST_TRIPLE)\n+check-stage2-perf:   check-stage2-$(CFG_HOST_TRIPLE)-perf\n+check-stage2-rustc:  check-stage2-$(CFG_HOST_TRIPLE)-rustc\n+check-stage2-std:    check-stage2-$(CFG_HOST_TRIPLE)-std\n+check-stage3:        check-stage3-$(CFG_HOST_TRIPLE)\n \n ######################################################################\n # Fast-test rules"}]}