{"sha": "0c511ab5c7fae69635ea4f296a1ffae25a22b0f0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjNTExYWI1YzdmYWU2OTYzNWVhNGYyOTZhMWZmYWUyNWEyMmIwZjA=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-07-16T09:10:22Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-07-16T09:13:05Z"}, "message": "update help message", "tree": {"sha": "f1fe57141f6e3927fd9af4de20f0a1026fe3ba84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1fe57141f6e3927fd9af4de20f0a1026fe3ba84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c511ab5c7fae69635ea4f296a1ffae25a22b0f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c511ab5c7fae69635ea4f296a1ffae25a22b0f0", "html_url": "https://github.com/rust-lang/rust/commit/0c511ab5c7fae69635ea4f296a1ffae25a22b0f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c511ab5c7fae69635ea4f296a1ffae25a22b0f0/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f5d8bf5c8ec9a62d62623e59fceb8abd0996f1b", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f5d8bf5c8ec9a62d62623e59fceb8abd0996f1b", "html_url": "https://github.com/rust-lang/rust/commit/6f5d8bf5c8ec9a62d62623e59fceb8abd0996f1b"}], "stats": {"total": 35, "additions": 22, "deletions": 13}, "files": [{"sha": "575049c6bac2fa52ba7f1aba2abb7e78420568f0", "filename": "src/librustc_resolve/diagnostics.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0c511ab5c7fae69635ea4f296a1ffae25a22b0f0/src%2Flibrustc_resolve%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c511ab5c7fae69635ea4f296a1ffae25a22b0f0/src%2Flibrustc_resolve%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdiagnostics.rs?ref=0c511ab5c7fae69635ea4f296a1ffae25a22b0f0", "patch": "@@ -442,14 +442,17 @@ impl<'a> Resolver<'a> {\n                 );\n                 err\n             }\n-            ResolutionError::ParamInTyOfConstArg => {\n+            ResolutionError::ParamInTyOfConstArg(name) => {\n                 let mut err = struct_span_err!(\n                     self.session,\n                     span,\n                     E0770,\n                     \"the type of const parameters must not depend on other generic parameters\"\n                 );\n-                err.span_label(span, \"const parameters must have a concrete type\");\n+                err.span_label(\n+                    span,\n+                    format!(\"the type must not depend on the parameter `{}`\", name),\n+                );\n                 err\n             }\n             ResolutionError::SelfInTyParamDefault => {"}, {"sha": "c3686ca4899bcee8db67fde1ee51902820a539e3", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0c511ab5c7fae69635ea4f296a1ffae25a22b0f0/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c511ab5c7fae69635ea4f296a1ffae25a22b0f0/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=0c511ab5c7fae69635ea4f296a1ffae25a22b0f0", "patch": "@@ -215,7 +215,7 @@ enum ResolutionError<'a> {\n     /// Error E0128: type parameters with a default cannot use forward-declared identifiers.\n     ForwardDeclaredTyParam, // FIXME(const_generics:defaults)\n     /// ERROR E0770: the type of const parameters must not depend on other generic parameters.\n-    ParamInTyOfConstArg,\n+    ParamInTyOfConstArg(Symbol),\n     /// Error E0735: type parameters with a default cannot use `Self`\n     SelfInTyParamDefault,\n     /// Error E0767: use of unreachable label\n@@ -2484,7 +2484,7 @@ impl<'a> Resolver<'a> {\n                         }\n                         ConstParamTyRibKind => {\n                             if record_used {\n-                                self.report_error(span, ParamInTyOfConstArg);\n+                                self.report_error(span, ParamInTyOfConstArg(rib_ident.name));\n                             }\n                             return Res::Err;\n                         }\n@@ -2513,7 +2513,10 @@ impl<'a> Resolver<'a> {\n                         FnItemRibKind => HasGenericParams::Yes,\n                         ConstParamTyRibKind => {\n                             if record_used {\n-                                self.report_error(span, ResolutionError::ParamInTyOfConstArg);\n+                                self.report_error(\n+                                    span,\n+                                    ResolutionError::ParamInTyOfConstArg(rib_ident.name),\n+                                );\n                             }\n                             return Res::Err;\n                         }\n@@ -2552,7 +2555,10 @@ impl<'a> Resolver<'a> {\n                         FnItemRibKind => HasGenericParams::Yes,\n                         ConstParamTyRibKind => {\n                             if record_used {\n-                                self.report_error(span, ResolutionError::ParamInTyOfConstArg);\n+                                self.report_error(\n+                                    span,\n+                                    ResolutionError::ParamInTyOfConstArg(rib_ident.name),\n+                                );\n                             }\n                             return Res::Err;\n                         }"}, {"sha": "ece31b5fab20073c03555dd172fb75a6c3583b41", "filename": "src/test/ui/const-generics/const-param-type-depends-on-const-param.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0c511ab5c7fae69635ea4f296a1ffae25a22b0f0/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-const-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0c511ab5c7fae69635ea4f296a1ffae25a22b0f0/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-const-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-const-param.stderr?ref=0c511ab5c7fae69635ea4f296a1ffae25a22b0f0", "patch": "@@ -2,13 +2,13 @@ error[E0770]: the type of const parameters must not depend on other generic para\n   --> $DIR/const-param-type-depends-on-const-param.rs:9:52\n    |\n LL | pub struct Dependent<const N: usize, const X: [u8; N]>([(); N]);\n-   |                                                    ^ const parameters must have a concrete type\n+   |                                                    ^ the type must not depend on the parameter `N`\n \n error[E0770]: the type of const parameters must not depend on other generic parameters\n   --> $DIR/const-param-type-depends-on-const-param.rs:12:40\n    |\n LL | pub struct SelfDependent<const N: [u8; N]>;\n-   |                                        ^ const parameters must have a concrete type\n+   |                                        ^ the type must not depend on the parameter `N`\n \n warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/const-param-type-depends-on-const-param.rs:1:12"}, {"sha": "7a2ee689c3318d163c3d5ddf7d163eaca9f889dd", "filename": "src/test/ui/const-generics/const-param-type-depends-on-type-param-ungated.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0c511ab5c7fae69635ea4f296a1ffae25a22b0f0/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param-ungated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0c511ab5c7fae69635ea4f296a1ffae25a22b0f0/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param-ungated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param-ungated.stderr?ref=0c511ab5c7fae69635ea4f296a1ffae25a22b0f0", "patch": "@@ -2,7 +2,7 @@ error[E0770]: the type of const parameters must not depend on other generic para\n   --> $DIR/const-param-type-depends-on-type-param-ungated.rs:3:22\n    |\n LL | struct B<T, const N: T>(PhantomData<[T; N]>);\n-   |                      ^ const parameters must have a concrete type\n+   |                      ^ the type must not depend on the parameter `T`\n \n error[E0658]: const generics are unstable\n   --> $DIR/const-param-type-depends-on-type-param-ungated.rs:3:19"}, {"sha": "fa566b5536fee86c596962774688d659656ddcff", "filename": "src/test/ui/const-generics/const-param-type-depends-on-type-param.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0c511ab5c7fae69635ea4f296a1ffae25a22b0f0/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0c511ab5c7fae69635ea4f296a1ffae25a22b0f0/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.stderr?ref=0c511ab5c7fae69635ea4f296a1ffae25a22b0f0", "patch": "@@ -2,7 +2,7 @@ error[E0770]: the type of const parameters must not depend on other generic para\n   --> $DIR/const-param-type-depends-on-type-param.rs:9:34\n    |\n LL | pub struct Dependent<T, const X: T>([(); X]);\n-   |                                  ^ const parameters must have a concrete type\n+   |                                  ^ the type must not depend on the parameter `T`\n \n warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n   --> $DIR/const-param-type-depends-on-type-param.rs:1:12"}, {"sha": "fe6d5125223dc9e5e45371698c9f186c958c0331", "filename": "src/test/ui/const-generics/issues/issue-71381.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0c511ab5c7fae69635ea4f296a1ffae25a22b0f0/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-71381.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0c511ab5c7fae69635ea4f296a1ffae25a22b0f0/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-71381.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-71381.stderr?ref=0c511ab5c7fae69635ea4f296a1ffae25a22b0f0", "patch": "@@ -2,13 +2,13 @@ error[E0770]: the type of const parameters must not depend on other generic para\n   --> $DIR/issue-71381.rs:13:82\n    |\n LL |     pub fn call_me<Args: Sized, const IDX: usize, const FN: unsafe extern \"C\" fn(Args)>(&self) {\n-   |                                                                                  ^^^^ const parameters must have a concrete type\n+   |                                                                                  ^^^^ the type must not depend on the parameter `Args`\n \n error[E0770]: the type of const parameters must not depend on other generic parameters\n   --> $DIR/issue-71381.rs:22:40\n    |\n LL |         const FN: unsafe extern \"C\" fn(Args),\n-   |                                        ^^^^ const parameters must have a concrete type\n+   |                                        ^^^^ the type must not depend on the parameter `Args`\n \n error: using function pointers as const generic parameters is forbidden\n   --> $DIR/issue-71381.rs:13:61"}, {"sha": "a8363cdff78d53b1f0471f94921412bcc5fa6489", "filename": "src/test/ui/const-generics/issues/issue-71611.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0c511ab5c7fae69635ea4f296a1ffae25a22b0f0/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-71611.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0c511ab5c7fae69635ea4f296a1ffae25a22b0f0/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-71611.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-71611.stderr?ref=0c511ab5c7fae69635ea4f296a1ffae25a22b0f0", "patch": "@@ -2,7 +2,7 @@ error[E0770]: the type of const parameters must not depend on other generic para\n   --> $DIR/issue-71611.rs:4:31\n    |\n LL | fn func<A, const F: fn(inner: A)>(outer: A) {\n-   |                               ^ const parameters must have a concrete type\n+   |                               ^ the type must not depend on the parameter `A`\n \n error: using function pointers as const generic parameters is forbidden\n   --> $DIR/issue-71611.rs:4:21"}]}