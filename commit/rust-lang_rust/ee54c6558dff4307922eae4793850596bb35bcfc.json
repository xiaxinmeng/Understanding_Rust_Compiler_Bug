{"sha": "ee54c6558dff4307922eae4793850596bb35bcfc", "node_id": "C_kwDOAAsO6NoAKGVlNTRjNjU1OGRmZjQzMDc5MjJlYWU0NzkzODUwNTk2YmIzNWJjZmM", "commit": {"author": {"name": "bruno-ortiz", "email": "brunortiz11@gmail.com", "date": "2022-02-26T01:37:09Z"}, "committer": {"name": "Bruno Ortiz", "email": "brunortiz11@gmail.com", "date": "2023-05-02T13:56:13Z"}, "message": "fixing linting problemas", "tree": {"sha": "48667bf99b214e76cf1dc03c174bbd525fd8a9f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48667bf99b214e76cf1dc03c174bbd525fd8a9f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee54c6558dff4307922eae4793850596bb35bcfc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee54c6558dff4307922eae4793850596bb35bcfc", "html_url": "https://github.com/rust-lang/rust/commit/ee54c6558dff4307922eae4793850596bb35bcfc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee54c6558dff4307922eae4793850596bb35bcfc/comments", "author": {"login": "bruno-ortiz", "id": 5748995, "node_id": "MDQ6VXNlcjU3NDg5OTU=", "avatar_url": "https://avatars.githubusercontent.com/u/5748995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bruno-ortiz", "html_url": "https://github.com/bruno-ortiz", "followers_url": "https://api.github.com/users/bruno-ortiz/followers", "following_url": "https://api.github.com/users/bruno-ortiz/following{/other_user}", "gists_url": "https://api.github.com/users/bruno-ortiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/bruno-ortiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bruno-ortiz/subscriptions", "organizations_url": "https://api.github.com/users/bruno-ortiz/orgs", "repos_url": "https://api.github.com/users/bruno-ortiz/repos", "events_url": "https://api.github.com/users/bruno-ortiz/events{/privacy}", "received_events_url": "https://api.github.com/users/bruno-ortiz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bruno-ortiz", "id": 5748995, "node_id": "MDQ6VXNlcjU3NDg5OTU=", "avatar_url": "https://avatars.githubusercontent.com/u/5748995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bruno-ortiz", "html_url": "https://github.com/bruno-ortiz", "followers_url": "https://api.github.com/users/bruno-ortiz/followers", "following_url": "https://api.github.com/users/bruno-ortiz/following{/other_user}", "gists_url": "https://api.github.com/users/bruno-ortiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/bruno-ortiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bruno-ortiz/subscriptions", "organizations_url": "https://api.github.com/users/bruno-ortiz/orgs", "repos_url": "https://api.github.com/users/bruno-ortiz/repos", "events_url": "https://api.github.com/users/bruno-ortiz/events{/privacy}", "received_events_url": "https://api.github.com/users/bruno-ortiz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8215dd42695e8f0b9e02f65986c6dc6933aab0a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8215dd42695e8f0b9e02f65986c6dc6933aab0a", "html_url": "https://github.com/rust-lang/rust/commit/f8215dd42695e8f0b9e02f65986c6dc6933aab0a"}], "stats": {"total": 66, "additions": 36, "deletions": 30}, "files": [{"sha": "028a2573cc2e0d75fe575dda8244702b631d6c22", "filename": "editors/code/src/dependencies_provider.ts", "status": "modified", "additions": 36, "deletions": 30, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/ee54c6558dff4307922eae4793850596bb35bcfc/editors%2Fcode%2Fsrc%2Fdependencies_provider.ts", "raw_url": "https://github.com/rust-lang/rust/raw/ee54c6558dff4307922eae4793850596bb35bcfc/editors%2Fcode%2Fsrc%2Fdependencies_provider.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fdependencies_provider.ts?ref=ee54c6558dff4307922eae4793850596bb35bcfc", "patch": "@@ -5,13 +5,15 @@ import { CtxInit } from \"./ctx\";\n import * as ra from \"./lsp_ext\";\n import { FetchDependencyGraphResult } from \"./lsp_ext\";\n \n-export class RustDependenciesProvider\n-    implements vscode.TreeDataProvider<Dependency | DependencyFile> {\n-    dependenciesMap: { [id: string]: Dependency | DependencyFile };\n-    ctx: CtxInit;\n \n-    constructor(private readonly workspaceRoot: string, ctx: CtxInit) {\n-        this.dependenciesMap = {};\n+\n+export class RustDependenciesProvider implements vscode.TreeDataProvider<Dependency | DependencyFile>{\n+\n+    dependenciesMap: { [id: string]: Dependency | DependencyFile };ctx: CtxInit;\n+\n+    constructor(\n+        private readonly workspaceRoot: string,ctx: CtxInit) {\n+    this.dependenciesMap = {};\n         this.ctx = ctx;\n     }\n \n@@ -47,25 +49,31 @@ export class RustDependenciesProvider\n         return element;\n     }\n \n-    getChildren(\n-        element?: Dependency | DependencyFile\n-    ): vscode.ProviderResult<Dependency[] | DependencyFile[]> {\n+    getChildren(element?: Dependency | DependencyFile): vscode.ProviderResult<Dependency[] | DependencyFile[]> {\n         return new Promise((resolve, _reject) => {\n             if (!this.workspaceRoot) {\n                 void vscode.window.showInformationMessage(\"No dependency in empty workspace\");\n                 return Promise.resolve([]);\n             }\n+\n             if (element) {\n                 const files = fs.readdirSync(element.dependencyPath).map((fileName) => {\n                     const filePath = fspath.join(element.dependencyPath, fileName);\n                     const collapsibleState = fs.lstatSync(filePath).isDirectory()\n                         ? vscode.TreeItemCollapsibleState.Collapsed\n-                        : vscode.TreeItemCollapsibleState.None;\n-                    const dep = new DependencyFile(fileName, filePath, element, collapsibleState);\n+                        :vscode.TreeItemCollapsibleState.None;\n+                    const dep = new DependencyFile(\n+                        fileName,\n+                        filePath,\n+                        element,\n+                        collapsibleState);\n+\n                     this.dependenciesMap[dep.dependencyPath.toLowerCase()] = dep;\n                     return dep;\n                 });\n-                return resolve(files);\n+                return resolve(\n+                    files\n+                );\n             } else {\n                 return resolve(this.getRootDependencies());\n             }\n@@ -75,25 +83,24 @@ export class RustDependenciesProvider\n     private async getRootDependencies(): Promise<Dependency[]> {\n         const dependenciesResult: FetchDependencyGraphResult = await this.ctx.client.sendRequest(ra.fetchDependencyGraph, {});\n         const crates = dependenciesResult.crates;\n-\n         const deps = crates.map((crate) => {\n-            const dep = this.toDep(crate.name, crate.version, crate.path);\n+        const dep = this.toDep(crate.name, crate.version, crate.path);\n             this.dependenciesMap[dep.dependencyPath.toLowerCase()] = dep;\n-            this.dependenciesMap[stdlib.dependencyPath.toLowerCase()] = stdlib;\n-    return dep;\n+        this.dependenciesMap[stdlib.dependencyPath.toLowerCase()] = stdlib;\n+        return dep;\n         });\n         return deps;\n     }\n \n-    private toDep(moduleName: string, version: string, path: string): Dependency {\n-        // const cratePath = fspath.join(basePath, `${moduleName}-${version}`);\n-        return new Dependency(\n-            moduleName,\n-            version,\n-            path,\n-            vscode.TreeItemCollapsibleState.Collapsed\n-        );\n-    }\n+    private toDep(moduleName: string, version: string, path: string): Dependency  {\n+            //const cratePath = fspath.join(basePath, `${moduleName}-${version}`);\n+            return new Dependency(\n+                moduleName,\n+                version,\n+                path,\n+                vscode.TreeItemCollapsibleState.Collapsed\n+            );\n+        }\n }\n \n export class Dependency extends vscode.TreeItem {\n@@ -111,6 +118,7 @@ export class Dependency extends vscode.TreeItem {\n }\n \n export class DependencyFile extends vscode.TreeItem {\n+\n     constructor(\n         readonly label: string,\n         readonly dependencyPath: string,\n@@ -121,13 +129,11 @@ export class DependencyFile extends vscode.TreeItem {\n         const isDir = fs.lstatSync(this.dependencyPath).isDirectory();\n         this.id = this.dependencyPath.toLowerCase();\n         if (!isDir) {\n-            this.command = {\n-                command: \"vscode.open\",\n+            this.command = { command: \"vscode.open\",\n                 title: \"Open File\",\n                 arguments: [vscode.Uri.file(this.dependencyPath)],\n-            };\n-        }\n-    }\n+        };\n+    }}\n }\n \n export type DependencyId = { id: string };"}]}