{"sha": "872d107dea229fdeaae2cf3d904fb348d6f75dde", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3MmQxMDdkZWEyMjlmZGVhYWUyY2YzZDkwNGZiMzQ4ZDZmNzVkZGU=", "commit": {"author": {"name": "Sylvestre Ledru", "email": "sylvestre@debian.org", "date": "2016-07-03T08:00:52Z"}, "committer": {"name": "Sylvestre Ledru", "email": "sylvestre@debian.org", "date": "2016-07-03T08:02:24Z"}, "message": "Fix a few typos in the code", "tree": {"sha": "da799875ed247a6c82ea51ce8f4bea9b474e355b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da799875ed247a6c82ea51ce8f4bea9b474e355b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/872d107dea229fdeaae2cf3d904fb348d6f75dde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/872d107dea229fdeaae2cf3d904fb348d6f75dde", "html_url": "https://github.com/rust-lang/rust/commit/872d107dea229fdeaae2cf3d904fb348d6f75dde", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/872d107dea229fdeaae2cf3d904fb348d6f75dde/comments", "author": {"login": "sylvestre", "id": 733326, "node_id": "MDQ6VXNlcjczMzMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/733326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sylvestre", "html_url": "https://github.com/sylvestre", "followers_url": "https://api.github.com/users/sylvestre/followers", "following_url": "https://api.github.com/users/sylvestre/following{/other_user}", "gists_url": "https://api.github.com/users/sylvestre/gists{/gist_id}", "starred_url": "https://api.github.com/users/sylvestre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sylvestre/subscriptions", "organizations_url": "https://api.github.com/users/sylvestre/orgs", "repos_url": "https://api.github.com/users/sylvestre/repos", "events_url": "https://api.github.com/users/sylvestre/events{/privacy}", "received_events_url": "https://api.github.com/users/sylvestre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sylvestre", "id": 733326, "node_id": "MDQ6VXNlcjczMzMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/733326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sylvestre", "html_url": "https://github.com/sylvestre", "followers_url": "https://api.github.com/users/sylvestre/followers", "following_url": "https://api.github.com/users/sylvestre/following{/other_user}", "gists_url": "https://api.github.com/users/sylvestre/gists{/gist_id}", "starred_url": "https://api.github.com/users/sylvestre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sylvestre/subscriptions", "organizations_url": "https://api.github.com/users/sylvestre/orgs", "repos_url": "https://api.github.com/users/sylvestre/repos", "events_url": "https://api.github.com/users/sylvestre/events{/privacy}", "received_events_url": "https://api.github.com/users/sylvestre/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ecbfa4749ab306160cee0c45fde3b0c04356ece1", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecbfa4749ab306160cee0c45fde3b0c04356ece1", "html_url": "https://github.com/rust-lang/rust/commit/ecbfa4749ab306160cee0c45fde3b0c04356ece1"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "70447bf35881f56dc807bf5481509ba8dd122883", "filename": "src/librustdoc/html/highlight.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/872d107dea229fdeaae2cf3d904fb348d6f75dde/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/872d107dea229fdeaae2cf3d904fb348d6f75dde/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs?ref=872d107dea229fdeaae2cf3d904fb348d6f75dde", "patch": "@@ -107,7 +107,7 @@ pub enum Class {\n ///\n /// The classifier will call into the `Writer` implementation as it finds spans\n /// of text to highlight. Exactly how that text should be highlighted is up to\n-/// the implemention.\n+/// the implementation.\n pub trait Writer {\n     /// Called when we start processing a span of text that should be highlighted.\n     /// The `Class` argument specifies how it should be highlighted."}, {"sha": "bc1984827c6d7f9a45e2f00393f03e1549c574af", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/872d107dea229fdeaae2cf3d904fb348d6f75dde/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/872d107dea229fdeaae2cf3d904fb348d6f75dde/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=872d107dea229fdeaae2cf3d904fb348d6f75dde", "patch": "@@ -2721,7 +2721,7 @@ impl<'a> fmt::Display for Sidebar<'a> {\n         let parentlen = cx.current.len() - if it.is_mod() {1} else {0};\n \n         // the sidebar is designed to display sibling functions, modules and\n-        // other miscellaneous informations. since there are lots of sibling\n+        // other miscellaneous information. since there are lots of sibling\n         // items (and that causes quadratic growth in large modules),\n         // we refactor common parts into a shared JavaScript file per module.\n         // still, we don't move everything into JS because we want to preserve"}, {"sha": "a408b4378e19e6b14cdb0f68478adf628f527dc0", "filename": "src/libstd/memchr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/872d107dea229fdeaae2cf3d904fb348d6f75dde/src%2Flibstd%2Fmemchr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/872d107dea229fdeaae2cf3d904fb348d6f75dde/src%2Flibstd%2Fmemchr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fmemchr.rs?ref=872d107dea229fdeaae2cf3d904fb348d6f75dde", "patch": "@@ -239,7 +239,7 @@ mod fallback {\n         text[..offset].iter().rposition(|elt| *elt == x)\n     }\n \n-    // test fallback implementations on all plattforms\n+    // test fallback implementations on all platforms\n     #[test]\n     fn matches_one() {\n         assert_eq!(Some(0), memchr(b'a', b\"a\"));"}]}