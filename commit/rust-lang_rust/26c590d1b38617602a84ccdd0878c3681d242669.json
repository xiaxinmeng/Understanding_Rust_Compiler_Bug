{"sha": "26c590d1b38617602a84ccdd0878c3681d242669", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2YzU5MGQxYjM4NjE3NjAyYTg0Y2NkZDA4NzhjMzY4MWQyNDI2Njk=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-12T18:35:54Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-12T18:35:54Z"}, "message": "Improve fallback span for closure migration lint.", "tree": {"sha": "ef48f764ddbedb84081e4aba992ec833e841132f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef48f764ddbedb84081e4aba992ec833e841132f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26c590d1b38617602a84ccdd0878c3681d242669", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26c590d1b38617602a84ccdd0878c3681d242669", "html_url": "https://github.com/rust-lang/rust/commit/26c590d1b38617602a84ccdd0878c3681d242669", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26c590d1b38617602a84ccdd0878c3681d242669/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd7f96031492397bdaba87c6768269d2d622a3b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd7f96031492397bdaba87c6768269d2d622a3b2", "html_url": "https://github.com/rust-lang/rust/commit/cd7f96031492397bdaba87c6768269d2d622a3b2"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "a9c0c9e65e345f9925a809dd53522889396dc1dc", "filename": "compiler/rustc_typeck/src/check/upvar.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/26c590d1b38617602a84ccdd0878c3681d242669/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26c590d1b38617602a84ccdd0878c3681d242669/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs?ref=26c590d1b38617602a84ccdd0878c3681d242669", "patch": "@@ -655,7 +655,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         closure_body_span = closure_body_span.parent().unwrap_or(DUMMY_SP);\n                     }\n \n-                    let (sugg, app) =\n+                    let (span, sugg, app) =\n                         match self.tcx.sess.source_map().span_to_snippet(closure_body_span) {\n                             Ok(s) => {\n                                 let trimmed = s.trim_start();\n@@ -667,9 +667,9 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                                 } else {\n                                     format!(\"{{ {}; {} }}\", migration_string, s)\n                                 };\n-                                (sugg, Applicability::MachineApplicable)\n+                                (closure_body_span, sugg, Applicability::MachineApplicable)\n                             }\n-                            Err(_) => (migration_string.clone(), Applicability::HasPlaceholders),\n+                            Err(_) => (closure_span, migration_string.clone(), Applicability::HasPlaceholders),\n                         };\n \n                     let diagnostic_msg = format!(\n@@ -678,7 +678,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     );\n \n                     diagnostics_builder.span_suggestion(\n-                        closure_body_span,\n+                        span,\n                         &diagnostic_msg,\n                         sugg,\n                         app,"}]}