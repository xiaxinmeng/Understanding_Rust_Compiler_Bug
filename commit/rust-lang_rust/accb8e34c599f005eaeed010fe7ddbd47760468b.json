{"sha": "accb8e34c599f005eaeed010fe7ddbd47760468b", "node_id": "C_kwDOAAsO6NoAKGFjY2I4ZTM0YzU5OWYwMDVlYWVlZDAxMGZlN2RkYmQ0Nzc2MDQ2OGI", "commit": {"author": {"name": "Obei Sideg", "email": "obei.sideg@gmail.com", "date": "2022-08-03T15:45:26Z"}, "committer": {"name": "Obei Sideg", "email": "obei.sideg@gmail.com", "date": "2022-08-03T22:23:14Z"}, "message": "Suggest removing `let` if `let const` is used", "tree": {"sha": "e39a81f466e249d32c32386a9f5e1e0c959a8bc5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e39a81f466e249d32c32386a9f5e1e0c959a8bc5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/accb8e34c599f005eaeed010fe7ddbd47760468b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/accb8e34c599f005eaeed010fe7ddbd47760468b", "html_url": "https://github.com/rust-lang/rust/commit/accb8e34c599f005eaeed010fe7ddbd47760468b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/accb8e34c599f005eaeed010fe7ddbd47760468b/comments", "author": {"login": "obeis", "id": 54103142, "node_id": "MDQ6VXNlcjU0MTAzMTQy", "avatar_url": "https://avatars.githubusercontent.com/u/54103142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/obeis", "html_url": "https://github.com/obeis", "followers_url": "https://api.github.com/users/obeis/followers", "following_url": "https://api.github.com/users/obeis/following{/other_user}", "gists_url": "https://api.github.com/users/obeis/gists{/gist_id}", "starred_url": "https://api.github.com/users/obeis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/obeis/subscriptions", "organizations_url": "https://api.github.com/users/obeis/orgs", "repos_url": "https://api.github.com/users/obeis/repos", "events_url": "https://api.github.com/users/obeis/events{/privacy}", "received_events_url": "https://api.github.com/users/obeis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "obeis", "id": 54103142, "node_id": "MDQ6VXNlcjU0MTAzMTQy", "avatar_url": "https://avatars.githubusercontent.com/u/54103142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/obeis", "html_url": "https://github.com/obeis", "followers_url": "https://api.github.com/users/obeis/followers", "following_url": "https://api.github.com/users/obeis/following{/other_user}", "gists_url": "https://api.github.com/users/obeis/gists{/gist_id}", "starred_url": "https://api.github.com/users/obeis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/obeis/subscriptions", "organizations_url": "https://api.github.com/users/obeis/orgs", "repos_url": "https://api.github.com/users/obeis/repos", "events_url": "https://api.github.com/users/obeis/events{/privacy}", "received_events_url": "https://api.github.com/users/obeis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2af92bbf2ec353cd5eafb3bd5cb1ea5c1de448d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/2af92bbf2ec353cd5eafb3bd5cb1ea5c1de448d3", "html_url": "https://github.com/rust-lang/rust/commit/2af92bbf2ec353cd5eafb3bd5cb1ea5c1de448d3"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "6990d0782b772925dc25f350426d86dbf395c0b7", "filename": "compiler/rustc_parse/src/parser/stmt.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/accb8e34c599f005eaeed010fe7ddbd47760468b/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fstmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/accb8e34c599f005eaeed010fe7ddbd47760468b/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fstmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fstmt.rs?ref=accb8e34c599f005eaeed010fe7ddbd47760468b", "patch": "@@ -247,6 +247,22 @@ impl<'a> Parser<'a> {\n     /// Parses a local variable declaration.\n     fn parse_local(&mut self, attrs: AttrVec) -> PResult<'a, P<Local>> {\n         let lo = self.prev_token.span;\n+\n+        if self.token.is_keyword(kw::Const) && self.look_ahead(1, |t| t.is_ident()) {\n+            self.struct_span_err(\n+                lo.to(self.token.span),\n+                \"`const` and `let` are mutually exclusive\",\n+            )\n+            .span_suggestion(\n+                lo.to(self.token.span),\n+                \"remove `let`\",\n+                \"const\",\n+                Applicability::MaybeIncorrect,\n+            )\n+            .emit();\n+            self.bump();\n+        }\n+\n         let (pat, colon) = self.parse_pat_before_ty(None, RecoverComma::Yes, \"`let` bindings\")?;\n \n         let (err, ty) = if colon {"}]}