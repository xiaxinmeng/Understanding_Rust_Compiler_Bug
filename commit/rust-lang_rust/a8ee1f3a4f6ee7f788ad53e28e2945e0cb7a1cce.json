{"sha": "a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce", "node_id": "C_kwDOAAsO6NoAKGE4ZWUxZjNhNGY2ZWU3Zjc4OGFkNTNlMjhlMjk0NWUwY2I3YTFjY2U", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2022-04-08T15:20:57Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2022-06-09T19:12:58Z"}, "message": "Stabilize the `bundle` native library modifier", "tree": {"sha": "5cfc8da3609aaa072a25b4829b193b4a6f2fc876", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5cfc8da3609aaa072a25b4829b193b4a6f2fc876"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce", "html_url": "https://github.com/rust-lang/rust/commit/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa", "html_url": "https://github.com/rust-lang/rust/commit/d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa"}], "stats": {"total": 287, "additions": 91, "deletions": 196}, "files": [{"sha": "1f5e2b76bf0dcd95372fd98a553ac88209fd5ea2", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce", "patch": "@@ -1952,7 +1952,7 @@ fn linker_with_args<'a, B: ArchiveBuilder<'a>>(\n         add_local_native_libraries(cmd, sess, codegen_results);\n     }\n \n-    // Upstream rust libraries and their nobundle static libraries\n+    // Upstream rust libraries and their non-bundled static libraries\n     add_upstream_rust_crates::<B>(cmd, sess, codegen_results, crate_type, tmpdir);\n \n     // Upstream dynamic native libraries linked with `#[link]` attributes at and `-l`\n@@ -2237,7 +2237,7 @@ fn add_local_native_libraries(\n     }\n }\n \n-/// # Linking Rust crates and their nobundle static libraries\n+/// # Linking Rust crates and their non-bundled static libraries\n ///\n /// Rust crates are not considered at all when creating an rlib output. All dependencies will be\n /// linked when producing the final output (instead of the intermediate rlib version)."}, {"sha": "54b10c886ccced7b83900e15f3fde26ee43fcec6", "filename": "compiler/rustc_error_codes/src/error_codes/E0060.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0060.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0060.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0060.md?ref=a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce", "patch": "@@ -16,10 +16,10 @@ Using this declaration, it must be called with at least one argument, so\n simply calling `printf()` is invalid. But the following uses are allowed:\n \n ```\n-# #![feature(static_nobundle)]\n # use std::os::raw::{c_char, c_int};\n # #[cfg_attr(all(windows, target_env = \"msvc\"),\n-#            link(name = \"legacy_stdio_definitions\", kind = \"static-nobundle\"))]\n+#            link(name = \"legacy_stdio_definitions\",\n+#                 kind = \"static\", modifiers = \"-bundle\"))]\n # extern \"C\" { fn printf(_: *const c_char, ...) -> c_int; }\n # fn main() {\n unsafe {"}, {"sha": "0abd45c621d2429675f7dec1ec069c84a4edb32f", "filename": "compiler/rustc_feature/src/accepted.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/compiler%2Frustc_feature%2Fsrc%2Faccepted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/compiler%2Frustc_feature%2Fsrc%2Faccepted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Faccepted.rs?ref=a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce", "patch": "@@ -219,6 +219,8 @@ declare_features! (\n     (accepted, move_ref_pattern, \"1.49.0\", Some(68354), None),\n     /// Allows specifying modifiers in the link attribute: `#[link(modifiers = \"...\")]`\n     (accepted, native_link_modifiers, \"1.61.0\", Some(81490), None),\n+    /// Allows specifying the bundle link modifier\n+    (accepted, native_link_modifiers_bundle, \"1.63.0\", Some(81490), None),\n     /// Allows specifying the whole-archive link modifier\n     (accepted, native_link_modifiers_whole_archive, \"1.61.0\", Some(81490), None),\n     /// Allows using non lexical lifetimes (RFC 2094)."}, {"sha": "1798bf8d42823aecdb90ac4070cbc6d796232077", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce", "patch": "@@ -451,8 +451,6 @@ declare_features! (\n     (active, naked_functions, \"1.9.0\", Some(32408), None),\n     /// Allows specifying the as-needed link modifier\n     (active, native_link_modifiers_as_needed, \"1.53.0\", Some(81490), None),\n-    /// Allows specifying the bundle link modifier\n-    (active, native_link_modifiers_bundle, \"1.53.0\", Some(81490), None),\n     /// Allows specifying the verbatim link modifier\n     (active, native_link_modifiers_verbatim, \"1.53.0\", Some(81490), None),\n     /// Allow negative trait implementations.\n@@ -502,8 +500,6 @@ declare_features! (\n     (active, simd_ffi, \"1.0.0\", Some(27731), None),\n     /// Allows specialization of implementations (RFC 1210).\n     (incomplete, specialization, \"1.7.0\", Some(31844), None),\n-    /// Allows `#[link(kind=\"static-nobundle\"...)]`.\n-    (active, static_nobundle, \"1.16.0\", Some(37403), None),\n     /// Allows attributes on expressions and non-item statements.\n     (active, stmt_expr_attributes, \"1.6.0\", Some(15701), None),\n     /// Allows lints part of the strict provenance effort."}, {"sha": "7194416cd1d6051035d92f14e9eb2c1c62bcbd96", "filename": "compiler/rustc_feature/src/removed.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/compiler%2Frustc_feature%2Fsrc%2Fremoved.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/compiler%2Frustc_feature%2Fsrc%2Fremoved.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Fremoved.rs?ref=a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce", "patch": "@@ -169,6 +169,9 @@ declare_features! (\n     (removed, sanitizer_runtime, \"1.17.0\", None, None, None),\n     (removed, simd, \"1.0.0\", Some(27731), None,\n      Some(\"removed in favor of `#[repr(simd)]`\")),\n+    /// Allows `#[link(kind = \"static-nobundle\", ...)]`.\n+    (removed, static_nobundle, \"1.16.0\", Some(37403), None,\n+     Some(r#\"subsumed by `#[link(kind = \"static\", modifiers = \"-bundle\", ...)]`\"#)),\n     (removed, struct_inherit, \"1.0.0\", None, None, None),\n     (removed, test_removed_feature, \"1.0.0\", None, None, None),\n     /// Allows using items which are missing stability attributes"}, {"sha": "c33219e4700501eb326dfabfe7838414de4f259c", "filename": "compiler/rustc_metadata/src/native_libs.rs", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/compiler%2Frustc_metadata%2Fsrc%2Fnative_libs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/compiler%2Frustc_metadata%2Fsrc%2Fnative_libs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Fnative_libs.rs?ref=a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce", "patch": "@@ -97,24 +97,6 @@ impl<'tcx> Collector<'tcx> {\n                         let span = item.name_value_literal_span().unwrap();\n                         let link_kind = match link_kind.as_str() {\n                             \"static\" => NativeLibKind::Static { bundle: None, whole_archive: None },\n-                            \"static-nobundle\" => {\n-                                sess.struct_span_warn(\n-                                    span,\n-                                    \"link kind `static-nobundle` has been superseded by specifying \\\n-                                     modifier `-bundle` with link kind `static`\",\n-                                )\n-                                .emit();\n-                                if !features.static_nobundle {\n-                                    feature_err(\n-                                        &sess.parse_sess,\n-                                        sym::static_nobundle,\n-                                        span,\n-                                        \"link kind `static-nobundle` is unstable\",\n-                                    )\n-                                    .emit();\n-                                }\n-                                NativeLibKind::Static { bundle: Some(false), whole_archive: None }\n-                            }\n                             \"dylib\" => NativeLibKind::Dylib { as_needed: None },\n                             \"framework\" => {\n                                 if !sess.target.is_like_osx {\n@@ -264,7 +246,6 @@ impl<'tcx> Collector<'tcx> {\n                     };\n                     match (modifier, &mut kind) {\n                         (\"bundle\", Some(NativeLibKind::Static { bundle, .. })) => {\n-                            report_unstable_modifier!(native_link_modifiers_bundle);\n                             assign_modifier(bundle)\n                         }\n                         (\"bundle\", _) => {"}, {"sha": "c4a67006504fd37dd801ae1a35a0329d1a117e9c", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 1, "deletions": 19, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce", "patch": "@@ -1920,21 +1920,6 @@ fn parse_native_lib_kind(\n \n     let kind = match kind {\n         \"static\" => NativeLibKind::Static { bundle: None, whole_archive: None },\n-        \"static-nobundle\" => {\n-            early_warn(\n-                error_format,\n-                \"library kind `static-nobundle` has been superseded by specifying \\\n-                 modifier `-bundle` with library kind `static`. Try `static:-bundle`\",\n-            );\n-            if !nightly_options::match_is_nightly_build(matches) {\n-                early_error(\n-                    error_format,\n-                    \"library kind `static-nobundle` is unstable \\\n-                     and only accepted on the nightly compiler\",\n-                );\n-            }\n-            NativeLibKind::Static { bundle: Some(false), whole_archive: None }\n-        }\n         \"dylib\" => NativeLibKind::Dylib { as_needed: None },\n         \"framework\" => NativeLibKind::Framework { as_needed: None },\n         _ => early_error(\n@@ -1987,10 +1972,7 @@ fn parse_native_lib_modifiers(\n             }\n         };\n         match (modifier, &mut kind) {\n-            (\"bundle\", NativeLibKind::Static { bundle, .. }) => {\n-                report_unstable_modifier();\n-                assign_modifier(bundle)\n-            }\n+            (\"bundle\", NativeLibKind::Static { bundle, .. }) => assign_modifier(bundle),\n             (\"bundle\", _) => early_error(\n                 error_format,\n                 \"linking modifier `bundle` is only compatible with `static` linking kind\","}, {"sha": "52d737de7aef8db2ce0c45089fc0a17eba8e5a54", "filename": "library/unwind/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/library%2Funwind%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/library%2Funwind%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Funwind%2Fsrc%2Flib.rs?ref=a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce", "patch": "@@ -1,7 +1,7 @@\n #![no_std]\n #![unstable(feature = \"panic_unwind\", issue = \"32837\")]\n #![feature(link_cfg)]\n-#![feature(native_link_modifiers_bundle)]\n+#![cfg_attr(bootstrap, feature(native_link_modifiers_bundle))]\n #![feature(staged_api)]\n #![feature(c_unwind)]\n #![feature(cfg_target_abi)]"}, {"sha": "bc04dfd4433f6c463a9efed9b851e19389efd22b", "filename": "src/doc/rustc/src/command-line-arguments.md", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/src%2Fdoc%2Frustc%2Fsrc%2Fcommand-line-arguments.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/src%2Fdoc%2Frustc%2Fsrc%2Fcommand-line-arguments.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fcommand-line-arguments.md?ref=a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce", "patch": "@@ -84,6 +84,26 @@ The default for this modifier is `-whole-archive`. \\\n NOTE: The default may currently be different in some cases for backward compatibility,\n but it is not guaranteed. If you need whole archive semantics use `+whole-archive` explicitly.\n \n+### Linking modifiers: `bundle`\n+\n+This modifier is only compatible with the `static` linking kind.\n+Using any other kind will result in a compiler error.\n+\n+When building a rlib or staticlib `+bundle` means that all object files from the native static\n+library will be added to the rlib or staticlib archive, and then used from it during linking of\n+the final binary.\n+\n+When building a rlib `-bundle` means that the native static library is registered as a dependency\n+of that rlib \"by name\", and object files from it are included only during linking of the final\n+binary, the file search by that name is also performed during final linking. \\\n+When building a staticlib `-bundle` means that the native static library is simply not included\n+into the archive and some higher level build system will need to add it later during linking of\n+the final binary.\n+\n+This modifier has no effect when building other targets like executables or dynamic libraries.\n+\n+The default for this modifier is `+bundle`.\n+\n <a id=\"option-crate-type\"></a>\n ## `--crate-type`: a list of types of crates for the compiler to emit\n "}, {"sha": "ac192cff13a3d2ecbbaf244120af4d37cd85160d", "filename": "src/doc/unstable-book/src/language-features/native-link-modifiers-bundle.md", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fnative-link-modifiers-bundle.md", "raw_url": "https://github.com/rust-lang/rust/raw/d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fnative-link-modifiers-bundle.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fnative-link-modifiers-bundle.md?ref=d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa", "patch": "@@ -1,19 +0,0 @@\n-# `native_link_modifiers_bundle`\n-\n-The tracking issue for this feature is: [#81490]\n-\n-[#81490]: https://github.com/rust-lang/rust/issues/81490\n-\n-------------------------\n-\n-The `native_link_modifiers_bundle` feature allows you to use the `bundle` modifier.\n-\n-Only compatible with the `static` linking kind. Using any other kind will result in a compiler error.\n-\n-`+bundle` means objects from the static library are bundled into the produced crate (a rlib, for example) and are used from this crate later during linking of the final binary.\n-\n-`-bundle` means the static library is included into the produced rlib \"by name\" and object files from it are included only during linking of the final binary, the file search by that name is also performed during final linking.\n-\n-This modifier is supposed to supersede the `static-nobundle` linking kind defined by [RFC 1717](https://github.com/rust-lang/rfcs/pull/1717).\n-\n-The default for this modifier is currently `+bundle`, but it could be changed later on some future edition boundary."}, {"sha": "001081798a6e439b85d31989fec216819ed24cf0", "filename": "src/test/run-make-fulldeps/static-nobundle/Makefile", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa/src%2Ftest%2Frun-make-fulldeps%2Fstatic-nobundle%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa/src%2Ftest%2Frun-make-fulldeps%2Fstatic-nobundle%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fstatic-nobundle%2FMakefile?ref=d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa", "patch": "@@ -1,23 +0,0 @@\n--include ../tools.mk\n-\n-# aaa is a native static library\n-# bbb is a rlib\n-# ccc is a dylib\n-# ddd is an executable\n-\n-all: $(call NATIVE_STATICLIB,aaa)\n-\t$(RUSTC) bbb.rs --crate-type=rlib\n-\n-\t# Check that bbb does NOT contain the definition of `native_func`\n-\t# We're using the llvm-nm instead of the system nm to ensure it\n-\t# is compatible with the LLVM bitcode generated by rustc.\n-\t\"$(LLVM_BIN_DIR)/llvm-nm\" $(TMPDIR)/libbbb.rlib | $(CGREP) -ve \"T _*native_func\"\n-\t\"$(LLVM_BIN_DIR)/llvm-nm\" $(TMPDIR)/libbbb.rlib | $(CGREP) -e \"U _*native_func\"\n-\n-\t# Check that aaa gets linked (either as `-l aaa` or `aaa.lib`) when building ccc.\n-\t$(RUSTC) ccc.rs -C prefer-dynamic --crate-type=dylib --print link-args | $(CGREP) -e '-l[\" ]*aaa|aaa\\.lib'\n-\n-\t# Check that aaa does NOT get linked when building ddd.\n-\t$(RUSTC) ddd.rs --print link-args | $(CGREP) -ve '-l[\" ]*aaa|aaa\\.lib'\n-\n-\t$(call RUN,ddd)"}, {"sha": "69d1668d4f643b901d11fcec0e7aa09c7806fe18", "filename": "src/test/run-make-fulldeps/static-nobundle/bbb.rs", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa/src%2Ftest%2Frun-make-fulldeps%2Fstatic-nobundle%2Fbbb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa/src%2Ftest%2Frun-make-fulldeps%2Fstatic-nobundle%2Fbbb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fstatic-nobundle%2Fbbb.rs?ref=d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa", "patch": "@@ -1,13 +0,0 @@\n-#![crate_type = \"rlib\"]\n-#![feature(static_nobundle)]\n-\n-#[link(name = \"aaa\", kind = \"static-nobundle\")]\n-extern \"C\" {\n-    pub fn native_func();\n-}\n-\n-pub fn wrapped_func() {\n-    unsafe {\n-        native_func();\n-    }\n-}"}, {"sha": "a1f875a52d514b45d17fedf769221d1042d650bd", "filename": "src/test/run-make-fulldeps/static-nobundle/ccc.rs", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa/src%2Ftest%2Frun-make-fulldeps%2Fstatic-nobundle%2Fccc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa/src%2Ftest%2Frun-make-fulldeps%2Fstatic-nobundle%2Fccc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fstatic-nobundle%2Fccc.rs?ref=d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa", "patch": "@@ -1,13 +0,0 @@\n-#![crate_type = \"dylib\"]\n-\n-extern crate bbb;\n-\n-pub fn do_work() {\n-    unsafe { bbb::native_func(); }\n-    bbb::wrapped_func();\n-}\n-\n-pub fn do_work_generic<T>() {\n-    unsafe { bbb::native_func(); }\n-    bbb::wrapped_func();\n-}"}, {"sha": "50b41211ff02b6b866ab2c72b3c02bf094d31f1f", "filename": "src/test/run-make-fulldeps/static-nobundle/ddd.rs", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa/src%2Ftest%2Frun-make-fulldeps%2Fstatic-nobundle%2Fddd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa/src%2Ftest%2Frun-make-fulldeps%2Fstatic-nobundle%2Fddd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fstatic-nobundle%2Fddd.rs?ref=d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa", "patch": "@@ -1,7 +0,0 @@\n-extern crate ccc;\n-\n-fn main() {\n-    ccc::do_work();\n-    ccc::do_work_generic::<i16>();\n-    ccc::do_work_generic::<i32>();\n-}"}, {"sha": "a14f6e3ab95a5b7fcdac3662f6b5ca8532d425ed", "filename": "src/test/run-make-fulldeps/tools.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/src%2Ftest%2Frun-make-fulldeps%2Ftools.mk", "raw_url": "https://github.com/rust-lang/rust/raw/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/src%2Ftest%2Frun-make-fulldeps%2Ftools.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Ftools.mk?ref=a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce", "patch": "@@ -120,7 +120,7 @@ else\n \t# So we end up with the following hack: we link use static:-bundle to only\n \t# link the parts of libstdc++ that we actually use, which doesn't include\n \t# the dependency on the pthreads DLL.\n-\tEXTRARSCXXFLAGS := -l static:-bundle=stdc++ -Z unstable-options\n+\tEXTRARSCXXFLAGS := -l static:-bundle=stdc++\n endif\n else\n ifeq ($(UNAME),Darwin)"}, {"sha": "723bb4689fe40e7583e6364927e0be15efa375fc", "filename": "src/test/run-make/native-link-modifier-bundle/Makefile", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/src%2Ftest%2Frun-make%2Fnative-link-modifier-bundle%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/src%2Ftest%2Frun-make%2Fnative-link-modifier-bundle%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fnative-link-modifier-bundle%2FMakefile?ref=a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce", "patch": "@@ -0,0 +1,29 @@\n+# ignore-cross-compile\n+# ignore-windows-msvc\n+\n+-include ../../run-make-fulldeps/tools.mk\n+\n+all: $(call NATIVE_STATICLIB,native-staticlib)\n+\t# Build a staticlib and a rlib, the `native_func` symbol will be bundled into them\n+\t$(RUSTC) bundled.rs --crate-type=staticlib --crate-type=rlib\n+\tnm $(TMPDIR)/libbundled.a | $(CGREP) -e \"T _*native_func\"\n+\tnm $(TMPDIR)/libbundled.a | $(CGREP) -e \"U _*native_func\"\n+\tnm $(TMPDIR)/libbundled.rlib | $(CGREP) -e \"T _*native_func\"\n+\tnm $(TMPDIR)/libbundled.rlib | $(CGREP) -e \"U _*native_func\"\n+\n+\t# Build a staticlib and a rlib, the `native_func` symbol will not be bundled into it\n+\t$(RUSTC) non-bundled.rs --crate-type=staticlib --crate-type=rlib\n+\tnm $(TMPDIR)/libnon_bundled.a | $(CGREP) -ve \"T _*native_func\"\n+\tnm $(TMPDIR)/libnon_bundled.a | $(CGREP) -e \"U _*native_func\"\n+\tnm $(TMPDIR)/libnon_bundled.rlib | $(CGREP) -ve \"T _*native_func\"\n+\tnm $(TMPDIR)/libnon_bundled.rlib | $(CGREP) -e \"U _*native_func\"\n+\n+\t# Build a cdylib, `native-staticlib` will not appear on the linker line because it was bundled previously\n+\t# The cdylib will contain the `native_func` symbol in the end\n+\t$(RUSTC) cdylib-bundled.rs --crate-type=cdylib --print link-args | $(CGREP) -ve '-l[\" ]*native-staticlib'\n+\tnm $(call DYLIB,cdylib_bundled) | $(CGREP) -e \"[Tt] _*native_func\"\n+\n+\t# Build a cdylib, `native-staticlib` will appear on the linker line because it was not bundled previously\n+\t# The cdylib will contain the `native_func` symbol in the end\n+\t$(RUSTC) cdylib-non-bundled.rs --crate-type=cdylib --print link-args | $(CGREP) -e '-l[\" ]*native-staticlib'\n+\tnm $(call DYLIB,cdylib_non_bundled) | $(CGREP) -e \"[Tt] _*native_func\""}, {"sha": "0bbae8752d7b3ff0da9f3235becc3656a757ffe0", "filename": "src/test/run-make/native-link-modifier-bundle/bundled.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/src%2Ftest%2Frun-make%2Fnative-link-modifier-bundle%2Fbundled.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/src%2Ftest%2Frun-make%2Fnative-link-modifier-bundle%2Fbundled.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fnative-link-modifier-bundle%2Fbundled.rs?ref=a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce", "patch": "@@ -0,0 +1,11 @@\n+#[link(name = \"native-staticlib\", kind = \"static\", modifiers = \"+bundle\")]\n+extern \"C\" {\n+    pub fn native_func();\n+}\n+\n+#[no_mangle]\n+pub extern \"C\" fn wrapped_func() {\n+    unsafe {\n+        native_func();\n+    }\n+}"}, {"sha": "7291309168a485c15cb391aaed3b527f6e61fbb1", "filename": "src/test/run-make/native-link-modifier-bundle/cdylib-bundled.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/src%2Ftest%2Frun-make%2Fnative-link-modifier-bundle%2Fcdylib-bundled.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/src%2Ftest%2Frun-make%2Fnative-link-modifier-bundle%2Fcdylib-bundled.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fnative-link-modifier-bundle%2Fcdylib-bundled.rs?ref=a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce", "patch": "@@ -0,0 +1 @@\n+extern crate bundled;"}, {"sha": "1df81fd101f757e49c3833eb2411f3bfbf7a5878", "filename": "src/test/run-make/native-link-modifier-bundle/cdylib-non-bundled.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/src%2Ftest%2Frun-make%2Fnative-link-modifier-bundle%2Fcdylib-non-bundled.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/src%2Ftest%2Frun-make%2Fnative-link-modifier-bundle%2Fcdylib-non-bundled.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fnative-link-modifier-bundle%2Fcdylib-non-bundled.rs?ref=a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce", "patch": "@@ -0,0 +1 @@\n+extern crate non_bundled;"}, {"sha": "d300fdf1c1742457d38238032f368dc10853d629", "filename": "src/test/run-make/native-link-modifier-bundle/native-staticlib.c", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/src%2Ftest%2Frun-make%2Fnative-link-modifier-bundle%2Fnative-staticlib.c", "raw_url": "https://github.com/rust-lang/rust/raw/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/src%2Ftest%2Frun-make%2Fnative-link-modifier-bundle%2Fnative-staticlib.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fnative-link-modifier-bundle%2Fnative-staticlib.c?ref=a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce", "previous_filename": "src/test/run-make-fulldeps/static-nobundle/aaa.c"}, {"sha": "8181e6387c5c7ce18de9148d0757cb6ab0f7e7b2", "filename": "src/test/run-make/native-link-modifier-bundle/non-bundled.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/src%2Ftest%2Frun-make%2Fnative-link-modifier-bundle%2Fnon-bundled.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/src%2Ftest%2Frun-make%2Fnative-link-modifier-bundle%2Fnon-bundled.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fnative-link-modifier-bundle%2Fnon-bundled.rs?ref=a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce", "patch": "@@ -0,0 +1,11 @@\n+#[link(name = \"native-staticlib\", kind = \"static\", modifiers = \"-bundle\")]\n+extern \"C\" {\n+    pub fn native_func();\n+}\n+\n+#[no_mangle]\n+pub extern \"C\" fn wrapped_func() {\n+    unsafe {\n+        native_func();\n+    }\n+}"}, {"sha": "3b49d1188ae6bda93ef2b57dae9993f27b2b3768", "filename": "src/test/run-make/native-link-modifier-whole-archive/Makefile", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/src%2Ftest%2Frun-make%2Fnative-link-modifier-whole-archive%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/src%2Ftest%2Frun-make%2Fnative-link-modifier-whole-archive%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fnative-link-modifier-whole-archive%2FMakefile?ref=a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce", "patch": "@@ -17,7 +17,7 @@ all: $(TMPDIR)/$(call BIN,directly_linked) $(TMPDIR)/$(call BIN,indirectly_linke\n \n # Native lib linked directly into executable\n $(TMPDIR)/$(call BIN,directly_linked): $(call NATIVE_STATICLIB,c_static_lib_with_constructor)\n-\t$(RUSTC) directly_linked.rs -Z unstable-options -l static:+whole-archive=c_static_lib_with_constructor\n+\t$(RUSTC) directly_linked.rs -l static:+whole-archive=c_static_lib_with_constructor\n \n # Native lib linked into RLIB via `-l static:-bundle,+whole-archive`, RLIB linked into executable\n $(TMPDIR)/$(call BIN,indirectly_linked): $(TMPDIR)/librlib_with_cmdline_native_lib.rlib\n@@ -29,7 +29,7 @@ $(TMPDIR)/$(call BIN,indirectly_linked_via_attr): $(TMPDIR)/libnative_lib_in_src\n \n # Native lib linked into rlib with via commandline\n $(TMPDIR)/librlib_with_cmdline_native_lib.rlib: $(call NATIVE_STATICLIB,c_static_lib_with_constructor)\n-\t$(RUSTC) rlib_with_cmdline_native_lib.rs -Z unstable-options --crate-type=rlib -l static:-bundle,+whole-archive=c_static_lib_with_constructor\n+\t$(RUSTC) rlib_with_cmdline_native_lib.rs --crate-type=rlib -l static:-bundle,+whole-archive=c_static_lib_with_constructor\n \n # Native lib linked into rlib via `#[link()]` attribute on extern block.\n $(TMPDIR)/libnative_lib_in_src.rlib: $(call NATIVE_STATICLIB,c_static_lib_with_constructor)"}, {"sha": "971f3be7a61e99b06a1a3670d6633fc7c03b1bd9", "filename": "src/test/run-make/native-link-modifier-whole-archive/native_lib_in_src.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/src%2Ftest%2Frun-make%2Fnative-link-modifier-whole-archive%2Fnative_lib_in_src.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/src%2Ftest%2Frun-make%2Fnative-link-modifier-whole-archive%2Fnative_lib_in_src.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fnative-link-modifier-whole-archive%2Fnative_lib_in_src.rs?ref=a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce", "patch": "@@ -1,5 +1,3 @@\n-#![feature(native_link_modifiers_bundle)]\n-\n use std::io::Write;\n \n #[link(name = \"c_static_lib_with_constructor\","}, {"sha": "e229564950fcfaee2a6cbf7d04c46cebb622179a", "filename": "src/test/ui/feature-gates/feature-gate-native_link_modifiers_bundle-2.rs", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-native_link_modifiers_bundle-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-native_link_modifiers_bundle-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-native_link_modifiers_bundle-2.rs?ref=d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa", "patch": "@@ -1,9 +0,0 @@\n-// Test native_link_modifiers_bundle don't need static-nobundle\n-// check-pass\n-\n-#![feature(native_link_modifiers_bundle)]\n-\n-#[link(name = \"foo\", kind = \"static\", modifiers = \"-bundle\")]\n-extern \"C\" {}\n-\n-fn main() {}"}, {"sha": "3da943ee4a963049be79adbc1b03a48be1bd633a", "filename": "src/test/ui/feature-gates/feature-gate-native_link_modifiers_bundle-3.rs", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-native_link_modifiers_bundle-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-native_link_modifiers_bundle-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-native_link_modifiers_bundle-3.rs?ref=d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa", "patch": "@@ -1,3 +0,0 @@\n-// compile-flags: -l static:-bundle=nonexistent\n-\n-fn main() {}"}, {"sha": "743bcc9a1b3818ed29989cbc0ddeaf63babd1e67", "filename": "src/test/ui/feature-gates/feature-gate-native_link_modifiers_bundle-3.stderr", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-native_link_modifiers_bundle-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-native_link_modifiers_bundle-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-native_link_modifiers_bundle-3.stderr?ref=d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa", "patch": "@@ -1,2 +0,0 @@\n-error: linking modifier `bundle` is unstable and only accepted on the nightly compiler\n-"}, {"sha": "c1d5a31aaa4dfe8c715ef80be6b9cf52791416c0", "filename": "src/test/ui/feature-gates/feature-gate-native_link_modifiers_bundle.rs", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-native_link_modifiers_bundle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-native_link_modifiers_bundle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-native_link_modifiers_bundle.rs?ref=d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa", "patch": "@@ -1,5 +0,0 @@\n-#[link(name = \"foo\", kind = \"static\", modifiers = \"+bundle\")]\n-//~^ ERROR: linking modifier `bundle` is unstable\n-extern \"C\" {}\n-\n-fn main() {}"}, {"sha": "dcaa7fcc64f02bb7d5ce4f6f1337b8a48182417e", "filename": "src/test/ui/feature-gates/feature-gate-native_link_modifiers_bundle.stderr", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-native_link_modifiers_bundle.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-native_link_modifiers_bundle.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-native_link_modifiers_bundle.stderr?ref=d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa", "patch": "@@ -1,12 +0,0 @@\n-error[E0658]: linking modifier `bundle` is unstable\n-  --> $DIR/feature-gate-native_link_modifiers_bundle.rs:1:51\n-   |\n-LL | #[link(name = \"foo\", kind = \"static\", modifiers = \"+bundle\")]\n-   |                                                   ^^^^^^^^^\n-   |\n-   = note: see issue #81490 <https://github.com/rust-lang/rust/issues/81490> for more information\n-   = help: add `#![feature(native_link_modifiers_bundle)]` to the crate attributes to enable\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0658`."}, {"sha": "ad0662b6892d25bda2bbc372ab57156e0944f005", "filename": "src/test/ui/feature-gates/feature-gate-static-nobundle-2.rs", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-static-nobundle-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-static-nobundle-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-static-nobundle-2.rs?ref=d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa", "patch": "@@ -1,4 +0,0 @@\n-// check-pass\n-// compile-flags: -l static-nobundle=nonexistent\n-\n-fn main() {}"}, {"sha": "782d9e39456159362ccdda5da977d900254f7d52", "filename": "src/test/ui/feature-gates/feature-gate-static-nobundle-2.stderr", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-static-nobundle-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-static-nobundle-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-static-nobundle-2.stderr?ref=d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa", "patch": "@@ -1,2 +0,0 @@\n-warning: library kind `static-nobundle` has been superseded by specifying modifier `-bundle` with library kind `static`. Try `static:-bundle`\n-"}, {"sha": "50f1b7ff3fc48f67282591054f9c440c8d75001c", "filename": "src/test/ui/feature-gates/feature-gate-static-nobundle.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-static-nobundle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-static-nobundle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-static-nobundle.rs?ref=d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa", "patch": "@@ -1,6 +0,0 @@\n-#[link(name = \"foo\", kind = \"static-nobundle\")]\n-//~^ WARNING: link kind `static-nobundle` has been superseded by specifying modifier `-bundle` with link kind `static`\n-//~^^ ERROR: link kind `static-nobundle` is unstable\n-extern \"C\" {}\n-\n-fn main() {}"}, {"sha": "094661aeb57af9ce3f0426507f94643f0700d9a0", "filename": "src/test/ui/feature-gates/feature-gate-static-nobundle.stderr", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-static-nobundle.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-static-nobundle.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-static-nobundle.stderr?ref=d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa", "patch": "@@ -1,18 +0,0 @@\n-warning: link kind `static-nobundle` has been superseded by specifying modifier `-bundle` with link kind `static`\n-  --> $DIR/feature-gate-static-nobundle.rs:1:29\n-   |\n-LL | #[link(name = \"foo\", kind = \"static-nobundle\")]\n-   |                             ^^^^^^^^^^^^^^^^^\n-\n-error[E0658]: link kind `static-nobundle` is unstable\n-  --> $DIR/feature-gate-static-nobundle.rs:1:29\n-   |\n-LL | #[link(name = \"foo\", kind = \"static-nobundle\")]\n-   |                             ^^^^^^^^^^^^^^^^^\n-   |\n-   = note: see issue #37403 <https://github.com/rust-lang/rust/issues/37403> for more information\n-   = help: add `#![feature(static_nobundle)]` to the crate attributes to enable\n-\n-error: aborting due to previous error; 1 warning emitted\n-\n-For more information about this error, try `rustc --explain E0658`."}, {"sha": "066048795c8a2371db1fa903bc4279e83dc9584c", "filename": "src/test/ui/native-library-link-flags/mix-bundle-and-whole-archive-link-attr.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/src%2Ftest%2Fui%2Fnative-library-link-flags%2Fmix-bundle-and-whole-archive-link-attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/src%2Ftest%2Fui%2Fnative-library-link-flags%2Fmix-bundle-and-whole-archive-link-attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnative-library-link-flags%2Fmix-bundle-and-whole-archive-link-attr.rs?ref=a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce", "patch": "@@ -2,8 +2,6 @@\n // build-fail\n // error-pattern: the linking modifiers `+bundle` and `+whole-archive` are not compatible with each other when generating rlibs\n \n-#![feature(native_link_modifiers_bundle)]\n-\n #[link(name = \"mylib\", kind = \"static\", modifiers = \"+bundle,+whole-archive\")]\n extern \"C\" { }\n "}, {"sha": "42cdb5004adcb49366ea4e8db283a77717232f4e", "filename": "src/test/ui/native-library-link-flags/modifiers-override.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/src%2Ftest%2Fui%2Fnative-library-link-flags%2Fmodifiers-override.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/src%2Ftest%2Fui%2Fnative-library-link-flags%2Fmodifiers-override.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnative-library-link-flags%2Fmodifiers-override.rs?ref=a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce", "patch": "@@ -1,7 +1,5 @@\n // compile-flags:-ldylib:+as-needed=foo -lstatic=bar -Zunstable-options\n \n-#![feature(native_link_modifiers_bundle)]\n-\n #[link(name = \"foo\")]\n #[link(\n     name = \"bar\","}, {"sha": "eb3ab55c31044874bb7b86bee8ac09376e043d41", "filename": "src/test/ui/native-library-link-flags/modifiers-override.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/src%2Ftest%2Fui%2Fnative-library-link-flags%2Fmodifiers-override.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce/src%2Ftest%2Fui%2Fnative-library-link-flags%2Fmodifiers-override.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnative-library-link-flags%2Fmodifiers-override.stderr?ref=a8ee1f3a4f6ee7f788ad53e28e2945e0cb7a1cce", "patch": "@@ -1,23 +1,23 @@\n error: multiple `modifiers` arguments in a single `#[link]` attribute\n-  --> $DIR/modifiers-override.rs:11:5\n+  --> $DIR/modifiers-override.rs:9:5\n    |\n LL |     modifiers = \"+bundle\"\n    |     ^^^^^^^^^^^^^^^^^^^^^\n \n error: multiple `whole-archive` modifiers in a single `modifiers` argument\n-  --> $DIR/modifiers-override.rs:9:17\n+  --> $DIR/modifiers-override.rs:7:17\n    |\n LL |     modifiers = \"+whole-archive,-whole-archive\",\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: overriding linking modifiers from command line is not supported\n-  --> $DIR/modifiers-override.rs:14:1\n+  --> $DIR/modifiers-override.rs:12:1\n    |\n LL | extern \"C\" {}\n    | ^^^^^^^^^^^^^\n \n error: overriding linking modifiers from command line is not supported\n-  --> $DIR/modifiers-override.rs:14:1\n+  --> $DIR/modifiers-override.rs:12:1\n    |\n LL | extern \"C\" {}\n    | ^^^^^^^^^^^^^"}]}