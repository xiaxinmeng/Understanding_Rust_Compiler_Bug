{"sha": "49f01d823fc936919a4f093c45ad858d27fda2e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5ZjAxZDgyM2ZjOTM2OTE5YTRmMDkzYzQ1YWQ4NThkMjdmZGEyZTk=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-05-23T20:39:27Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-05-23T20:39:27Z"}, "message": "Fix missing overflowing literal lint in for loop", "tree": {"sha": "7c91fecb931991db58d6507a8c1d167486279659", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c91fecb931991db58d6507a8c1d167486279659"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49f01d823fc936919a4f093c45ad858d27fda2e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49f01d823fc936919a4f093c45ad858d27fda2e9", "html_url": "https://github.com/rust-lang/rust/commit/49f01d823fc936919a4f093c45ad858d27fda2e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49f01d823fc936919a4f093c45ad858d27fda2e9/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27cc0db7a248308fc2634ac68d7608a20b4a1c09", "url": "https://api.github.com/repos/rust-lang/rust/commits/27cc0db7a248308fc2634ac68d7608a20b4a1c09", "html_url": "https://github.com/rust-lang/rust/commit/27cc0db7a248308fc2634ac68d7608a20b4a1c09"}], "stats": {"total": 31, "additions": 16, "deletions": 15}, "files": [{"sha": "fc2fff6a81fe00ff35fea7b428302f98ed17e730", "filename": "src/librustc/lint/mod.rs", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/49f01d823fc936919a4f093c45ad858d27fda2e9/src%2Flibrustc%2Flint%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49f01d823fc936919a4f093c45ad858d27fda2e9/src%2Flibrustc%2Flint%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fmod.rs?ref=49f01d823fc936919a4f093c45ad858d27fda2e9", "patch": "@@ -35,7 +35,7 @@ use crate::util::nodemap::NodeMap;\n use errors::{DiagnosticBuilder, DiagnosticId};\n use std::{hash, ptr};\n use syntax::ast;\n-use syntax::source_map::{MultiSpan, ExpnFormat};\n+use syntax::source_map::{MultiSpan, ExpnFormat, CompilerDesugaringKind};\n use syntax::early_buffered_lints::BufferedEarlyLintId;\n use syntax::edition::Edition;\n use syntax::symbol::{Symbol, sym};\n@@ -887,21 +887,22 @@ pub fn in_external_macro(sess: &Session, span: Span) -> bool {\n     };\n \n     match info.format {\n-        ExpnFormat::MacroAttribute(..) => return true, // definitely a plugin\n-        ExpnFormat::CompilerDesugaring(_) => return true, // well, it's \"external\"\n-        ExpnFormat::MacroBang(..) => {} // check below\n-    }\n-\n-    let def_site = match info.def_site {\n-        Some(span) => span,\n-        // no span for the def_site means it's an external macro\n-        None => return true,\n-    };\n+        ExpnFormat::MacroAttribute(..) => true, // definitely a plugin\n+        ExpnFormat::CompilerDesugaring(CompilerDesugaringKind::ForLoop) => false,\n+        ExpnFormat::CompilerDesugaring(_) => true, // well, it's \"external\"\n+        ExpnFormat::MacroBang(..) => {\n+            let def_site = match info.def_site {\n+                Some(span) => span,\n+                // no span for the def_site means it's an external macro\n+                None => return true,\n+            };\n \n-    match sess.source_map().span_to_snippet(def_site) {\n-        Ok(code) => !code.starts_with(\"macro_rules\"),\n-        // no snippet = external macro or compiler-builtin expansion\n-        Err(_) => true,\n+            match sess.source_map().span_to_snippet(def_site) {\n+                Ok(code) => !code.starts_with(\"macro_rules\"),\n+                // no snippet = external macro or compiler-builtin expansion\n+                Err(_) => true,\n+            }\n+        }\n     }\n }\n "}]}