{"sha": "9d3caecdd7f16137dbba14178a3e54d2a4113e07", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkM2NhZWNkZDdmMTYxMzdkYmJhMTQxNzhhM2U1NGQyYTQxMTNlMDc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-10-28T10:11:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-10-28T10:11:56Z"}, "message": "Auto merge of #37321 - nrc:lib-proc-macro, r=@alexcrichton\n\nSplit up libproc_macro_plugin\n\nSeparate the plugin code from non-plugin code to break a potential cycle in crates.\n\nThis will allow us to merge the new libproc_macro_tokens into libproc_macro.\n\nr? @alexcrichton", "tree": {"sha": "fcf6f409dc774cb99aac12b210c1329105c396bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fcf6f409dc774cb99aac12b210c1329105c396bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d3caecdd7f16137dbba14178a3e54d2a4113e07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d3caecdd7f16137dbba14178a3e54d2a4113e07", "html_url": "https://github.com/rust-lang/rust/commit/9d3caecdd7f16137dbba14178a3e54d2a4113e07", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d3caecdd7f16137dbba14178a3e54d2a4113e07/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0da37c585e66c0d69b62edccfab6ae93869487fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/0da37c585e66c0d69b62edccfab6ae93869487fc", "html_url": "https://github.com/rust-lang/rust/commit/0da37c585e66c0d69b62edccfab6ae93869487fc"}, {"sha": "15821caee9b6f6eecbf8e405c7ee3d6278b932ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/15821caee9b6f6eecbf8e405c7ee3d6278b932ca", "html_url": "https://github.com/rust-lang/rust/commit/15821caee9b6f6eecbf8e405c7ee3d6278b932ca"}], "stats": {"total": 229, "additions": 142, "deletions": 87}, "files": [{"sha": "c7abf271e5127ec0c5f63cba0672d4d3705eee54", "filename": "mk/crates.mk", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9d3caecdd7f16137dbba14178a3e54d2a4113e07/mk%2Fcrates.mk", "raw_url": "https://github.com/rust-lang/rust/raw/9d3caecdd7f16137dbba14178a3e54d2a4113e07/mk%2Fcrates.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fcrates.mk?ref=9d3caecdd7f16137dbba14178a3e54d2a4113e07", "patch": "@@ -60,8 +60,8 @@ RUSTC_CRATES := rustc rustc_typeck rustc_mir rustc_borrowck rustc_resolve rustc_\n                 rustc_data_structures rustc_platform_intrinsics rustc_errors \\\n                 rustc_plugin rustc_metadata rustc_passes rustc_save_analysis \\\n                 rustc_const_eval rustc_const_math rustc_incremental proc_macro\n-HOST_CRATES := syntax syntax_ext proc_macro_plugin syntax_pos $(RUSTC_CRATES) rustdoc fmt_macros \\\n-\t\tflate arena graphviz log serialize\n+HOST_CRATES := syntax syntax_ext proc_macro_tokens proc_macro_plugin syntax_pos $(RUSTC_CRATES) \\\n+\t\trustdoc fmt_macros flate arena graphviz log serialize\n TOOLS := compiletest rustdoc rustc rustbook error_index_generator\n \n DEPS_core :=\n@@ -102,8 +102,9 @@ DEPS_test := std getopts term native:rust_test_helpers\n \n DEPS_syntax := std term serialize log arena libc rustc_bitflags rustc_unicode rustc_errors syntax_pos\n DEPS_syntax_ext := syntax syntax_pos rustc_errors fmt_macros proc_macro\n-DEPS_proc_macro_plugin := syntax syntax_pos rustc_plugin log\n DEPS_syntax_pos := serialize\n+DEPS_proc_macro_tokens := syntax syntax_pos log\n+DEPS_proc_macro_plugin := syntax syntax_pos rustc_plugin log proc_macro_tokens\n \n DEPS_rustc_const_math := std syntax log serialize\n DEPS_rustc_const_eval := rustc_const_math rustc syntax log serialize \\"}, {"sha": "64c8ec101916b7226a0502fbef5fdeb8cfb91b80", "filename": "src/Cargo.lock", "status": "modified", "additions": 36, "deletions": 26, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/9d3caecdd7f16137dbba14178a3e54d2a4113e07/src%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/9d3caecdd7f16137dbba14178a3e54d2a4113e07/src%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FCargo.lock?ref=9d3caecdd7f16137dbba14178a3e54d2a4113e07", "patch": "@@ -19,7 +19,7 @@ version = \"0.0.0\"\n dependencies = [\n  \"build_helper 0.1.0\",\n  \"core 0.0.0\",\n- \"gcc 0.3.35 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"gcc 0.3.38 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libc 0.0.0\",\n ]\n \n@@ -42,10 +42,10 @@ dependencies = [\n  \"build_helper 0.1.0\",\n  \"cmake 0.1.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"filetime 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"gcc 0.3.35 (git+https://github.com/alexcrichton/gcc-rs)\",\n+ \"gcc 0.3.38 (git+https://github.com/alexcrichton/gcc-rs)\",\n  \"getopts 0.2.14 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"libc 0.2.15 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"md5 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"num_cpus 0.2.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-serialize 0.3.19 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -66,7 +66,7 @@ name = \"cmake\"\n version = \"0.1.17\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"gcc 0.3.35 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"gcc 0.3.38 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -83,7 +83,7 @@ name = \"compiler_builtins\"\n version = \"0.0.0\"\n dependencies = [\n  \"core 0.0.0\",\n- \"gcc 0.3.35 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"gcc 0.3.38 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -116,15 +116,15 @@ name = \"filetime\"\n version = \"0.1.10\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.15 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"flate\"\n version = \"0.0.0\"\n dependencies = [\n  \"build_helper 0.1.0\",\n- \"gcc 0.3.35 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"gcc 0.3.38 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -133,12 +133,12 @@ version = \"0.0.0\"\n \n [[package]]\n name = \"gcc\"\n-version = \"0.3.35\"\n-source = \"git+https://github.com/alexcrichton/gcc-rs#03e22a4425c011fa8c96681591432456fa70d60c\"\n+version = \"0.3.38\"\n+source = \"git+https://github.com/alexcrichton/gcc-rs#be620ac6d3ddb498cd0c700d5312c6a4c3c19597\"\n \n [[package]]\n name = \"gcc\"\n-version = \"0.3.35\"\n+version = \"0.3.38\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n@@ -159,7 +159,7 @@ name = \"idna\"\n version = \"0.1.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"matches 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"matches 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"unicode-bidi 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"unicode-normalization 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -182,14 +182,14 @@ dependencies = [\n \n [[package]]\n name = \"libc\"\n-version = \"0.2.15\"\n+version = \"0.2.17\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"linkchecker\"\n version = \"0.1.0\"\n dependencies = [\n- \"url 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"url 1.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -203,7 +203,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"matches\"\n-version = \"0.1.2\"\n+version = \"0.1.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n@@ -216,7 +216,7 @@ name = \"num_cpus\"\n version = \"0.2.13\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"libc 0.2.15 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -249,11 +249,21 @@ name = \"proc_macro_plugin\"\n version = \"0.0.0\"\n dependencies = [\n  \"log 0.0.0\",\n+ \"proc_macro_tokens 0.0.0\",\n  \"rustc_plugin 0.0.0\",\n  \"syntax 0.0.0\",\n  \"syntax_pos 0.0.0\",\n ]\n \n+[[package]]\n+name = \"proc_macro_tokens\"\n+version = \"0.0.0\"\n+dependencies = [\n+ \"log 0.0.0\",\n+ \"syntax 0.0.0\",\n+ \"syntax_pos 0.0.0\",\n+]\n+\n [[package]]\n name = \"rand\"\n version = \"0.0.0\"\n@@ -431,7 +441,7 @@ name = \"rustc_llvm\"\n version = \"0.0.0\"\n dependencies = [\n  \"build_helper 0.1.0\",\n- \"gcc 0.3.35 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"gcc 0.3.38 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc_bitflags 0.0.0\",\n ]\n \n@@ -585,7 +595,7 @@ version = \"0.0.0\"\n dependencies = [\n  \"arena 0.0.0\",\n  \"build_helper 0.1.0\",\n- \"gcc 0.3.35 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"gcc 0.3.38 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.0.0\",\n  \"rustc 0.0.0\",\n  \"rustc_back 0.0.0\",\n@@ -621,7 +631,7 @@ dependencies = [\n  \"collections 0.0.0\",\n  \"compiler_builtins 0.0.0\",\n  \"core 0.0.0\",\n- \"gcc 0.3.35 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"gcc 0.3.38 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libc 0.0.0\",\n  \"panic_abort 0.0.0\",\n  \"panic_unwind 0.0.0\",\n@@ -704,7 +714,7 @@ name = \"unicode-bidi\"\n version = \"0.2.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"matches 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"matches 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -714,11 +724,11 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"url\"\n-version = \"1.2.0\"\n+version = \"1.2.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"idna 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"matches 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"matches 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -735,20 +745,20 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum cmake 0.1.17 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dfcf5bcece56ef953b8ea042509e9dcbdfe97820b7e20d86beb53df30ed94978\"\n \"checksum env_logger 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"15abd780e45b3ea4f76b4e9a26ff4843258dd8a3eed2775a0e7368c2e7936c2f\"\n \"checksum filetime 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5363ab8e4139b8568a6237db5248646e5a8a2f89bd5ccb02092182b11fd3e922\"\n-\"checksum gcc 0.3.35 (git+https://github.com/alexcrichton/gcc-rs)\" = \"<none>\"\n-\"checksum gcc 0.3.35 (registry+https://github.com/rust-lang/crates.io-index)\" = \"91ecd03771effb0c968fd6950b37e89476a578aaf1c70297d8e92b6516ec3312\"\n+\"checksum gcc 0.3.38 (git+https://github.com/alexcrichton/gcc-rs)\" = \"<none>\"\n+\"checksum gcc 0.3.38 (registry+https://github.com/rust-lang/crates.io-index)\" = \"553f11439bdefe755bf366b264820f1da70f3aaf3924e594b886beb9c831bcf5\"\n \"checksum getopts 0.2.14 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d9047cfbd08a437050b363d35ef160452c5fe8ea5187ae0a624708c91581d685\"\n \"checksum idna 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1053236e00ce4f668aeca4a769a09b3bf5a682d802abd6f3cb39374f6b162c11\"\n \"checksum kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7507624b29483431c0ba2d82aece8ca6cdba9382bff4ddd0f7490560c056098d\"\n-\"checksum libc 0.2.15 (registry+https://github.com/rust-lang/crates.io-index)\" = \"23e3757828fa702a20072c37ff47938e9dd331b92fac6e223d26d4b7a55f7ee2\"\n+\"checksum libc 0.2.17 (registry+https://github.com/rust-lang/crates.io-index)\" = \"044d1360593a78f5c8e5e710beccdc24ab71d1f01bc19a29bcacdba22e8475d8\"\n \"checksum log 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ab83497bf8bf4ed2a74259c1c802351fcd67a65baa86394b6ba73c36f4838054\"\n-\"checksum matches 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"15305656809ce5a4805b1ff2946892810992197ce1270ff79baded852187942e\"\n+\"checksum matches 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bcc3ad8109fa4b522f9b0cd81440422781f564aaf8c195de6b9d6642177ad0dd\"\n \"checksum md5 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a5539a8dee9b4ae308c9c406a379838b435a8f2c84cf9fedc6d5a576be9888db\"\n \"checksum num_cpus 0.2.13 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cee7e88156f3f9e19bdd598f8d6c9db7bf4078f99f8381f43a55b09648d1a6e3\"\n \"checksum rustc-serialize 0.3.19 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6159e4e6e559c81bd706afe9c8fd68f547d3e851ce12e76b1de7914bab61691b\"\n \"checksum toml 0.1.30 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0590d72182e50e879c4da3b11c6488dae18fccb1ae0c7a3eda18e16795844796\"\n \"checksum unicode-bidi 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c1f7ceb96afdfeedee42bade65a0d585a6a0106f681b6749c8ff4daa8df30b3f\"\n \"checksum unicode-normalization 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"26643a2f83bac55f1976fb716c10234485f9202dcd65cfbdf9da49867b271172\"\n-\"checksum url 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"afe9ec54bc4db14bc8744b7fed060d785ac756791450959b2248443319d5b119\"\n+\"checksum url 1.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9ba5a45db1d2e0effb7a1c00cc73ffc63a973da8c7d1fcd5b46f24285ade6c54\"\n \"checksum winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"167dc9d6949a9b857f3451275e911c3f44255842c1f7a76f33c55103a909087a\"\n \"checksum winapi-build 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2d315eee3b34aca4797b2da6b13ed88266e6d612562a0c46390af8299fc699bc\""}, {"sha": "4bc3f488d32808fd7743c57b23157abf6a07c4ce", "filename": "src/libproc_macro_plugin/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9d3caecdd7f16137dbba14178a3e54d2a4113e07/src%2Flibproc_macro_plugin%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/9d3caecdd7f16137dbba14178a3e54d2a4113e07/src%2Flibproc_macro_plugin%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibproc_macro_plugin%2FCargo.toml?ref=9d3caecdd7f16137dbba14178a3e54d2a4113e07", "patch": "@@ -12,3 +12,4 @@ log = { path = \"../liblog\" }\n rustc_plugin = { path = \"../librustc_plugin\" }\n syntax = { path = \"../libsyntax\" }\n syntax_pos = { path = \"../libsyntax_pos\" }\n+proc_macro_tokens = { path = \"../libproc_macro_tokens\" }"}, {"sha": "c45762bfb6e71525a9a1605152fbfd902c1399dc", "filename": "src/libproc_macro_plugin/lib.rs", "status": "modified", "additions": 6, "deletions": 36, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/9d3caecdd7f16137dbba14178a3e54d2a4113e07/src%2Flibproc_macro_plugin%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d3caecdd7f16137dbba14178a3e54d2a4113e07/src%2Flibproc_macro_plugin%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibproc_macro_plugin%2Flib.rs?ref=9d3caecdd7f16137dbba14178a3e54d2a4113e07", "patch": "@@ -13,43 +13,14 @@\n //! A library for procedural macro writers.\n //!\n //! ## Usage\n-//! This package provides the `qquote!` macro for syntax creation, and the prelude\n-//! (at libproc_macro::prelude) provides a number of operations:\n-//! - `concat`, for concatenating two TokenStreams.\n-//! - `ident_eq`, for checking if two identifiers are equal regardless of syntax context.\n-//! - `str_to_token_ident`, for converting an `&str` into a Token.\n-//! - `keyword_to_token_delim`, for converting a `parse::token::keywords::Keyword` into a\n-//!    Token.\n-//! - `build_delimited`, for creating a new TokenStream from an existing one and a delimiter\n-//!    by wrapping the TokenStream in the delimiter.\n-//! - `build_bracket_delimited`, `build_brace_delimited`, and `build_paren_delimited`, for\n-//!    easing the above.\n-//! - `build_empty_args`, which returns a TokenStream containing `()`.\n-//! - `lex`, which takes an `&str` and returns the TokenStream it represents.\n-//!\n-//! The `qquote!` macro also imports `syntax::ext::proc_macro_shim::prelude::*`, so you\n+//! This crate provides the `qquote!` macro for syntax creation.\n+//!\n+//! The `qquote!` macro imports `syntax::ext::proc_macro_shim::prelude::*`, so you\n //! will need to `extern crate syntax` for usage. (This is a temporary solution until more\n-//! of the external API in libproc_macro is stabilized to support the token construction\n+//! of the external API in libproc_macro_tokens is stabilized to support the token construction\n //! operations that the qausiquoter relies on.) The shim file also provides additional\n //! operations, such as `build_block_emitter` (as used in the `cond` example below).\n //!\n-//! ## TokenStreams\n-//!\n-//! TokenStreams serve as the basis of the macro system. They are, in essence, vectors of\n-//! TokenTrees, where indexing treats delimited values as a single term. That is, the term\n-//! `even(a+c) && even(b)` will be indexibly encoded as `even | (a+c) | even | (b)` where,\n-//! in reality, `(a+c)` is actually a decorated pointer to `a | + | c`.\n-//!\n-//! If a user has a TokenStream that is a single, delimited value, they can use\n-//! `maybe_delimited` to destruct it and receive the internal vector as a new TokenStream\n-//! as:\n-//! ```\n-//! `(a+c)`.maybe_delimited() ~> Some(a | + | c)`\n-//! ```\n-//!\n-//! Check the TokenStream documentation for more information; the structure also provides\n-//! cheap concatenation and slicing.\n-//!\n //! ## Quasiquotation\n //!\n //! The quasiquoter creates output that, when run, constructs the tokenstream specified as\n@@ -118,12 +89,11 @@\n extern crate rustc_plugin;\n extern crate syntax;\n extern crate syntax_pos;\n+extern crate proc_macro_tokens;\n #[macro_use] extern crate log;\n \n mod qquote;\n-pub mod build;\n-pub mod parse;\n-pub mod prelude;\n+\n use qquote::qquote;\n \n use rustc_plugin::Registry;"}, {"sha": "e5a3abc2ea982e01a8e06bd95d0905790c086ec3", "filename": "src/libproc_macro_plugin/qquote.rs", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/9d3caecdd7f16137dbba14178a3e54d2a4113e07/src%2Flibproc_macro_plugin%2Fqquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d3caecdd7f16137dbba14178a3e54d2a4113e07/src%2Flibproc_macro_plugin%2Fqquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibproc_macro_plugin%2Fqquote.rs?ref=9d3caecdd7f16137dbba14178a3e54d2a4113e07", "patch": "@@ -24,12 +24,9 @@\n //! TokenStream that resembles the output syntax.\n //!\n \n-extern crate rustc_plugin;\n-extern crate syntax;\n-extern crate syntax_pos;\n+use proc_macro_tokens::build::*;\n+use proc_macro_tokens::parse::lex;\n \n-use build::*;\n-use parse::lex;\n use qquote::int_build::*;\n \n use syntax::ast::Ident;\n@@ -51,7 +48,7 @@ pub fn qquote<'cx>(cx: &'cx mut ExtCtxt, sp: Span, tts: &[TokenTree])\n     let output = qquoter(cx, TokenStream::from_tts(tts.clone().to_owned()));\n     debug!(\"\\nQQ out: {}\\n\", pprust::tts_to_string(&output.to_tts()[..]));\n     let imports = concat(lex(\"use syntax::ext::proc_macro_shim::prelude::*;\"),\n-                         lex(\"use proc_macro_plugin::prelude::*;\"));\n+                         lex(\"use proc_macro_tokens::prelude::*;\"));\n     build_block_emitter(cx, sp, build_brace_delimited(concat(imports, output)))\n }\n \n@@ -219,7 +216,7 @@ fn convert_complex_tts<'cx>(cx: &'cx mut ExtCtxt, tts: Vec<QTT>) -> (Bindings, T\n \n                 let sep = build_delim_tok(qdl.delim);\n \n-                pushes.push(build_mod_call(vec![str_to_ident(\"proc_macro_plugin\"),\n+                pushes.push(build_mod_call(vec![str_to_ident(\"proc_macro_tokens\"),\n                                                str_to_ident(\"build\"),\n                                                str_to_ident(\"build_delimited\")],\n                                           concat(from_tokens(vec![Token::Ident(new_id)]),\n@@ -264,11 +261,8 @@ fn is_qquote(id: Ident) -> bool {\n }\n \n mod int_build {\n-    extern crate syntax;\n-    extern crate syntax_pos;\n-\n-    use parse::*;\n-    use build::*;\n+    use proc_macro_tokens::build::*;\n+    use proc_macro_tokens::parse::*;\n \n     use syntax::ast::{self, Ident};\n     use syntax::codemap::{DUMMY_SP};"}, {"sha": "2b66d56759f35b220debeab20ea604f5f51f07bb", "filename": "src/libproc_macro_tokens/Cargo.toml", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/9d3caecdd7f16137dbba14178a3e54d2a4113e07/src%2Flibproc_macro_tokens%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/9d3caecdd7f16137dbba14178a3e54d2a4113e07/src%2Flibproc_macro_tokens%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibproc_macro_tokens%2FCargo.toml?ref=9d3caecdd7f16137dbba14178a3e54d2a4113e07", "patch": "@@ -0,0 +1,13 @@\n+[package]\n+authors = [\"The Rust Project Developers\"]\n+name = \"proc_macro_tokens\"\n+version = \"0.0.0\"\n+\n+[lib]\n+path = \"lib.rs\"\n+crate-type = [\"dylib\"]\n+\n+[dependencies]\n+syntax = { path = \"../libsyntax\" }\n+syntax_pos = { path = \"../libsyntax_pos\" }\n+log = { path = \"../liblog\" }"}, {"sha": "7b7590b863b71aa5e5eba1e63d13a5f707dea352", "filename": "src/libproc_macro_tokens/build.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9d3caecdd7f16137dbba14178a3e54d2a4113e07/src%2Flibproc_macro_tokens%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d3caecdd7f16137dbba14178a3e54d2a4113e07/src%2Flibproc_macro_tokens%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibproc_macro_tokens%2Fbuild.rs?ref=9d3caecdd7f16137dbba14178a3e54d2a4113e07", "previous_filename": "src/libproc_macro_plugin/build.rs"}, {"sha": "3bfa2fbb29fbdab24e1493859a35a66d4ec7dd86", "filename": "src/libproc_macro_tokens/lib.rs", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/9d3caecdd7f16137dbba14178a3e54d2a4113e07/src%2Flibproc_macro_tokens%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d3caecdd7f16137dbba14178a3e54d2a4113e07/src%2Flibproc_macro_tokens%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibproc_macro_tokens%2Flib.rs?ref=9d3caecdd7f16137dbba14178a3e54d2a4113e07", "patch": "@@ -0,0 +1,66 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//! # Proc_Macro\n+//!\n+//! A library for procedural macro writers.\n+//!\n+//! ## Usage\n+//! This crate provides the prelude (at libproc_macro_tokens::prelude), which\n+//! provides a number of operations:\n+//! - `concat`, for concatenating two TokenStreams.\n+//! - `ident_eq`, for checking if two identifiers are equal regardless of syntax context.\n+//! - `str_to_token_ident`, for converting an `&str` into a Token.\n+//! - `keyword_to_token_delim`, for converting a `parse::token::keywords::Keyword` into a\n+//!    Token.\n+//! - `build_delimited`, for creating a new TokenStream from an existing one and a delimiter\n+//!    by wrapping the TokenStream in the delimiter.\n+//! - `build_bracket_delimited`, `build_brace_delimited`, and `build_paren_delimited`, for\n+//!    easing the above.\n+//! - `build_empty_args`, which returns a TokenStream containing `()`.\n+//! - `lex`, which takes an `&str` and returns the TokenStream it represents.\n+//!\n+//! ## TokenStreams\n+//!\n+//! TokenStreams serve as the basis of the macro system. They are, in essence, vectors of\n+//! TokenTrees, where indexing treats delimited values as a single term. That is, the term\n+//! `even(a+c) && even(b)` will be indexibly encoded as `even | (a+c) | even | (b)` where,\n+//! in reality, `(a+c)` is actually a decorated pointer to `a | + | c`.\n+//!\n+//! If a user has a TokenStream that is a single, delimited value, they can use\n+//! `maybe_delimited` to destruct it and receive the internal vector as a new TokenStream\n+//! as:\n+//! ```\n+//! `(a+c)`.maybe_delimited() ~> Some(a | + | c)`\n+//! ```\n+//!\n+//! Check the TokenStream documentation for more information; the structure also provides\n+//! cheap concatenation and slicing.\n+//!\n+\n+#![crate_name = \"proc_macro_tokens\"]\n+#![unstable(feature = \"rustc_private\", issue = \"27812\")]\n+#![crate_type = \"dylib\"]\n+#![crate_type = \"rlib\"]\n+#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n+       html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n+       html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n+#![cfg_attr(not(stage0), deny(warnings))]\n+\n+#![feature(staged_api)]\n+#![feature(rustc_private)]\n+\n+extern crate syntax;\n+extern crate syntax_pos;\n+#[macro_use] extern crate log;\n+\n+pub mod build;\n+pub mod parse;\n+pub mod prelude;"}, {"sha": "9af8a68cdcf497887b75e09a94f5917215d33bee", "filename": "src/libproc_macro_tokens/parse.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9d3caecdd7f16137dbba14178a3e54d2a4113e07/src%2Flibproc_macro_tokens%2Fparse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d3caecdd7f16137dbba14178a3e54d2a4113e07/src%2Flibproc_macro_tokens%2Fparse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibproc_macro_tokens%2Fparse.rs?ref=9d3caecdd7f16137dbba14178a3e54d2a4113e07", "previous_filename": "src/libproc_macro_plugin/parse.rs"}, {"sha": "4c0c8ba6c6684b1c375236a4e13fefa2a5cbcfab", "filename": "src/libproc_macro_tokens/prelude.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9d3caecdd7f16137dbba14178a3e54d2a4113e07/src%2Flibproc_macro_tokens%2Fprelude.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d3caecdd7f16137dbba14178a3e54d2a4113e07/src%2Flibproc_macro_tokens%2Fprelude.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibproc_macro_tokens%2Fprelude.rs?ref=9d3caecdd7f16137dbba14178a3e54d2a4113e07", "previous_filename": "src/libproc_macro_plugin/prelude.rs"}, {"sha": "48919fe876a221cad38d87ba119f86eae212d934", "filename": "src/test/run-pass-fulldeps/auxiliary/cond_noprelude_plugin.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9d3caecdd7f16137dbba14178a3e54d2a4113e07/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcond_noprelude_plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d3caecdd7f16137dbba14178a3e54d2a4113e07/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcond_noprelude_plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcond_noprelude_plugin.rs?ref=9d3caecdd7f16137dbba14178a3e54d2a4113e07", "patch": "@@ -15,10 +15,10 @@\n #![plugin(proc_macro_plugin)]\n \n extern crate rustc_plugin;\n-extern crate proc_macro_plugin;\n+extern crate proc_macro_tokens;\n extern crate syntax;\n \n-use proc_macro_plugin::build::ident_eq;\n+use proc_macro_tokens::build::ident_eq;\n \n use syntax::ext::base::{ExtCtxt, MacResult};\n use syntax::ext::proc_macro_shim::build_block_emitter;"}, {"sha": "0ea4cec75cdda5ae6b726e59c7f4142664089921", "filename": "src/test/run-pass-fulldeps/auxiliary/cond_plugin.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9d3caecdd7f16137dbba14178a3e54d2a4113e07/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcond_plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d3caecdd7f16137dbba14178a3e54d2a4113e07/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcond_plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcond_plugin.rs?ref=9d3caecdd7f16137dbba14178a3e54d2a4113e07", "patch": "@@ -15,10 +15,10 @@\n #![plugin(proc_macro_plugin)]\n \n extern crate rustc_plugin;\n-extern crate proc_macro_plugin;\n+extern crate proc_macro_tokens;\n extern crate syntax;\n \n-use proc_macro_plugin::prelude::*;\n+use proc_macro_tokens::prelude::*;\n \n use rustc_plugin::Registry;\n "}, {"sha": "169c96b438529166ebbdee1f3eef6d9e0dc800a9", "filename": "src/test/run-pass-fulldeps/auxiliary/cond_prelude_plugin.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9d3caecdd7f16137dbba14178a3e54d2a4113e07/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcond_prelude_plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d3caecdd7f16137dbba14178a3e54d2a4113e07/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcond_prelude_plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fcond_prelude_plugin.rs?ref=9d3caecdd7f16137dbba14178a3e54d2a4113e07", "patch": "@@ -15,11 +15,11 @@\n #![plugin(proc_macro_plugin)]\n \n extern crate rustc_plugin;\n-extern crate proc_macro_plugin;\n+extern crate proc_macro_tokens;\n extern crate syntax;\n \n use syntax::ext::proc_macro_shim::prelude::*;\n-use proc_macro_plugin::prelude::*;\n+use proc_macro_tokens::prelude::*;\n \n use rustc_plugin::Registry;\n "}, {"sha": "9fce19f46f65c7a4bdfafa445ca69a40289f6ca3", "filename": "src/test/run-pass-fulldeps/auxiliary/proc_macro_def.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9d3caecdd7f16137dbba14178a3e54d2a4113e07/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fproc_macro_def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d3caecdd7f16137dbba14178a3e54d2a4113e07/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fproc_macro_def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fauxiliary%2Fproc_macro_def.rs?ref=9d3caecdd7f16137dbba14178a3e54d2a4113e07", "patch": "@@ -10,11 +10,11 @@\n \n #![feature(plugin, plugin_registrar, rustc_private)]\n \n-extern crate proc_macro_plugin;\n+extern crate proc_macro_tokens;\n extern crate rustc_plugin;\n extern crate syntax;\n \n-use proc_macro_plugin::prelude::*;\n+use proc_macro_tokens::prelude::*;\n use rustc_plugin::Registry;\n use syntax::ext::base::SyntaxExtension;\n use syntax::ext::proc_macro_shim::prelude::*;"}, {"sha": "914da3f746773fe69d731c8ee2e24de1c426f960", "filename": "src/test/run-pass-fulldeps/macro-quote-1.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9d3caecdd7f16137dbba14178a3e54d2a4113e07/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-quote-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d3caecdd7f16137dbba14178a3e54d2a4113e07/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-quote-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-quote-1.rs?ref=9d3caecdd7f16137dbba14178a3e54d2a4113e07", "patch": "@@ -14,8 +14,8 @@\n #![feature(rustc_private)]\n #![plugin(proc_macro_plugin)]\n \n-extern crate proc_macro_plugin;\n-use proc_macro_plugin::prelude::*;\n+extern crate proc_macro_tokens;\n+use proc_macro_tokens::prelude::*;\n \n extern crate syntax;\n use syntax::ast::Ident;"}]}