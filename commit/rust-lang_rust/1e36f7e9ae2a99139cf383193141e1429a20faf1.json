{"sha": "1e36f7e9ae2a99139cf383193141e1429a20faf1", "node_id": "C_kwDOAAsO6NoAKDFlMzZmN2U5YWUyYTk5MTM5Y2YzODMxOTMxNDFlMTQyOWEyMGZhZjE", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2023-06-11T06:08:44Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2023-06-11T06:08:44Z"}, "message": "`suspicious_double_ref_op`: don't lint on `.borrow()`", "tree": {"sha": "a053ba391d57c2e98f870c1d80cf89fef3f7ee58", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a053ba391d57c2e98f870c1d80cf89fef3f7ee58"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e36f7e9ae2a99139cf383193141e1429a20faf1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e36f7e9ae2a99139cf383193141e1429a20faf1", "html_url": "https://github.com/rust-lang/rust/commit/1e36f7e9ae2a99139cf383193141e1429a20faf1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e36f7e9ae2a99139cf383193141e1429a20faf1/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "970058e16b307e1cff01e2ddb084d2e8d14ea8be", "url": "https://api.github.com/repos/rust-lang/rust/commits/970058e16b307e1cff01e2ddb084d2e8d14ea8be", "html_url": "https://github.com/rust-lang/rust/commit/970058e16b307e1cff01e2ddb084d2e8d14ea8be"}], "stats": {"total": 50, "additions": 35, "deletions": 15}, "files": [{"sha": "04bb34983af7e1996fc23ac08372b6270f1415c8", "filename": "compiler/rustc_lint/src/noop_method_call.rs", "status": "modified", "additions": 18, "deletions": 15, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/1e36f7e9ae2a99139cf383193141e1429a20faf1/compiler%2Frustc_lint%2Fsrc%2Fnoop_method_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e36f7e9ae2a99139cf383193141e1429a20faf1/compiler%2Frustc_lint%2Fsrc%2Fnoop_method_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fnoop_method_call.rs?ref=1e36f7e9ae2a99139cf383193141e1429a20faf1", "patch": "@@ -76,22 +76,22 @@ impl<'tcx> LateLintPass<'tcx> for NoopMethodCall {\n \n         // We only care about method calls corresponding to the `Clone`, `Deref` and `Borrow`\n         // traits and ignore any other method call.\n-        let did = match cx.typeck_results().type_dependent_def(expr.hir_id) {\n-            // Verify we are dealing with a method/associated function.\n-            Some((DefKind::AssocFn, did)) => match cx.tcx.trait_of_item(did) {\n-                // Check that we're dealing with a trait method for one of the traits we care about.\n-                Some(trait_id)\n-                    if matches!(\n-                        cx.tcx.get_diagnostic_name(trait_id),\n-                        Some(sym::Borrow | sym::Clone | sym::Deref)\n-                    ) =>\n-                {\n-                    did\n-                }\n-                _ => return,\n-            },\n-            _ => return,\n+\n+        let Some((DefKind::AssocFn, did)) =\n+            cx.typeck_results().type_dependent_def(expr.hir_id)\n+        else {\n+            return;\n+        };\n+\n+        let Some(trait_id) = cx.tcx.trait_of_item(did) else { return };\n+\n+        if !matches!(\n+            cx.tcx.get_diagnostic_name(trait_id),\n+            Some(sym::Borrow | sym::Clone | sym::Deref)\n+        ) {\n+            return;\n         };\n+\n         let substs = cx\n             .tcx\n             .normalize_erasing_regions(cx.param_env, cx.typeck_results().node_substs(expr.hir_id));\n@@ -129,6 +129,9 @@ impl<'tcx> LateLintPass<'tcx> for NoopMethodCall {\n                 NoopMethodCallDiag { method: call.ident.name, receiver_ty, label: span },\n             );\n         } else {\n+            if op == \"borrow\" {\n+                return;\n+            }\n             cx.emit_spanned_lint(\n                 SUSPICIOUS_DOUBLE_REF_OP,\n                 span,"}, {"sha": "559edf0e4f23caffd685063a3a932661bbad6020", "filename": "tests/ui/lint/issue-112489.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/1e36f7e9ae2a99139cf383193141e1429a20faf1/tests%2Fui%2Flint%2Fissue-112489.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e36f7e9ae2a99139cf383193141e1429a20faf1/tests%2Fui%2Flint%2Fissue-112489.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint%2Fissue-112489.rs?ref=1e36f7e9ae2a99139cf383193141e1429a20faf1", "patch": "@@ -0,0 +1,17 @@\n+// check-pass\n+use std::borrow::Borrow;\n+\n+struct S;\n+\n+trait T: Sized {\n+    fn foo(self) {}\n+}\n+\n+impl T for S {}\n+impl T for &S {}\n+\n+fn main() {\n+    let s = S;\n+    s.borrow().foo();\n+    s.foo();\n+}"}]}