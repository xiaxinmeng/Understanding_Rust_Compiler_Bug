{"sha": "b5081a6a825f23b45920cf72896076039f30386d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1MDgxYTZhODI1ZjIzYjQ1OTIwY2Y3Mjg5NjA3NjAzOWYzMDM4NmQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-02-26T00:45:43Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-02-26T00:45:43Z"}, "message": "Add a tag_variant_count() function to trans that doesn't go through the soon-to-be-deprecated tag info table", "tree": {"sha": "bafefc0a703c81ad26a6c56734807b385cbd17ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bafefc0a703c81ad26a6c56734807b385cbd17ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b5081a6a825f23b45920cf72896076039f30386d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b5081a6a825f23b45920cf72896076039f30386d", "html_url": "https://github.com/rust-lang/rust/commit/b5081a6a825f23b45920cf72896076039f30386d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b5081a6a825f23b45920cf72896076039f30386d/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2cd7fbbdf1edf84d962c62e9990acc0906998413", "url": "https://api.github.com/repos/rust-lang/rust/commits/2cd7fbbdf1edf84d962c62e9990acc0906998413", "html_url": "https://github.com/rust-lang/rust/commit/2cd7fbbdf1edf84d962c62e9990acc0906998413"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "cfe07caa1335572365fefec78f310743355201f7", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b5081a6a825f23b45920cf72896076039f30386d/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5081a6a825f23b45920cf72896076039f30386d/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=b5081a6a825f23b45920cf72896076039f30386d", "patch": "@@ -1442,6 +1442,8 @@ fn decr_refcnt_and_if_zero(@block_ctxt cx,\n     ret res(next_cx, phi);\n }\n \n+// Tag information\n+\n fn type_of_variant(@crate_ctxt cx, &ast.variant v) -> TypeRef {\n     let vec[TypeRef] lltys = vec();\n     alt (ty.ann_to_type(v.ann).struct) {\n@@ -1455,6 +1457,17 @@ fn type_of_variant(@crate_ctxt cx, &ast.variant v) -> TypeRef {\n     ret T_struct(lltys);\n }\n \n+// Returns the number of variants in a tag.\n+fn tag_variant_count(@crate_ctxt cx, ast.def_id id) -> uint {\n+    check (cx.items.contains_key(id));\n+    alt (cx.items.get(id).node) {\n+        case (ast.item_tag(_, ?variants, _, _)) {\n+            ret _vec.len[ast.variant](variants);\n+        }\n+    }\n+    fail;   // not reached\n+}\n+\n type val_and_ty_fn = fn(@block_ctxt cx, ValueRef v, @ty.t t) -> result;\n \n // Iterates through the elements of a structural type.\n@@ -1506,7 +1519,7 @@ fn iter_structural_ty(@block_ctxt cx,\n         case (ty.ty_tag(?tid, ?tps)) {\n             check (cx.fcx.ccx.tags.contains_key(tid));\n             auto info = cx.fcx.ccx.tags.get(tid);\n-            auto n_variants = _vec.len[tup(ast.def_id,arity)](info.variants);\n+            auto n_variants = tag_variant_count(cx.fcx.ccx, tid);\n \n             // Look up the tag in the typechecked AST.\n             check (cx.fcx.ccx.items.contains_key(tid));"}]}