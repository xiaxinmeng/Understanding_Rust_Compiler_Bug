{"sha": "8de36f14233421fa3988b4b649dbdee75c76e3ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkZTM2ZjE0MjMzNDIxZmEzOTg4YjRiNjQ5ZGJkZWU3NWM3NmUzZWM=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2016-07-26T21:21:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-26T21:21:13Z"}, "message": "Rollup merge of #35010 - GuillaumeGomez:file_doc, r=steveklabnik\n\nImprove Open doc\n\nPart of #29356.\n\nr? @steveklabnik", "tree": {"sha": "f8f7dc3062866a79bbb9c94b01645da67bb2f0d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8f7dc3062866a79bbb9c94b01645da67bb2f0d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8de36f14233421fa3988b4b649dbdee75c76e3ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8de36f14233421fa3988b4b649dbdee75c76e3ec", "html_url": "https://github.com/rust-lang/rust/commit/8de36f14233421fa3988b4b649dbdee75c76e3ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8de36f14233421fa3988b4b649dbdee75c76e3ec/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57d50299a7621d652fc668045d8f85e5703514d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/57d50299a7621d652fc668045d8f85e5703514d6", "html_url": "https://github.com/rust-lang/rust/commit/57d50299a7621d652fc668045d8f85e5703514d6"}, {"sha": "debb2ac76bd8b4ef8de0f470351a2b187afc91df", "url": "https://api.github.com/repos/rust-lang/rust/commits/debb2ac76bd8b4ef8de0f470351a2b187afc91df", "html_url": "https://github.com/rust-lang/rust/commit/debb2ac76bd8b4ef8de0f470351a2b187afc91df"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "48753ccf1c353cfe8ba172dbb347cf47c54f4f5e", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 23, "deletions": 5, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/8de36f14233421fa3988b4b649dbdee75c76e3ec/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8de36f14233421fa3988b4b649dbdee75c76e3ec/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=8de36f14233421fa3988b4b649dbdee75c76e3ec", "patch": "@@ -173,12 +173,14 @@ pub struct DirBuilder {\n impl File {\n     /// Attempts to open a file in read-only mode.\n     ///\n-    /// See the `OpenOptions::open` method for more details.\n+    /// See the [`OpenOptions::open`] method for more details.\n     ///\n     /// # Errors\n     ///\n     /// This function will return an error if `path` does not already exist.\n-    /// Other errors may also be returned according to `OpenOptions::open`.\n+    /// Other errors may also be returned according to [`OpenOptions::open`].\n+    ///\n+    /// [`OpenOptions::open`]: struct.OpenOptions.html#method.open\n     ///\n     /// # Examples\n     ///\n@@ -200,7 +202,9 @@ impl File {\n     /// This function will create a file if it does not exist,\n     /// and will truncate it if it does.\n     ///\n-    /// See the `OpenOptions::open` function for more details.\n+    /// See the [`OpenOptions::open`] function for more details.\n+    ///\n+    /// [`OpenOptions::open`]: struct.OpenOptions.html#method.open\n     ///\n     /// # Examples\n     ///\n@@ -241,15 +245,17 @@ impl File {\n         self.inner.fsync()\n     }\n \n-    /// This function is similar to `sync_all`, except that it may not\n+    /// This function is similar to [`sync_all`], except that it may not\n     /// synchronize file metadata to the filesystem.\n     ///\n     /// This is intended for use cases that must synchronize content, but don't\n     /// need the metadata on disk. The goal of this method is to reduce disk\n     /// operations.\n     ///\n     /// Note that some platforms may simply implement this in terms of\n-    /// `sync_all`.\n+    /// [`sync_all`].\n+    ///\n+    /// [`sync_all`]: struct.File.html#method.sync_all\n     ///\n     /// # Examples\n     ///\n@@ -321,6 +327,18 @@ impl File {\n     /// The returned `File` is a reference to the same state that this object\n     /// references. Both handles will read and write with the same cursor\n     /// position.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```no_run\n+    /// use std::fs::File;\n+    ///\n+    /// # fn foo() -> std::io::Result<()> {\n+    /// let mut f = try!(File::open(\"foo.txt\"));\n+    /// let file_copy = try!(f.try_clone());\n+    /// # Ok(())\n+    /// # }\n+    /// ```\n     #[stable(feature = \"file_try_clone\", since = \"1.9.0\")]\n     pub fn try_clone(&self) -> io::Result<File> {\n         Ok(File {"}]}