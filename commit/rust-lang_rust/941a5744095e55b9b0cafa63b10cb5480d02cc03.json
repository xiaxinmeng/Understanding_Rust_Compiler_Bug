{"sha": "941a5744095e55b9b0cafa63b10cb5480d02cc03", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0MWE1NzQ0MDk1ZTU1YjliMGNhZmE2M2IxMGNiNTQ4MGQwMmNjMDM=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2020-03-07T16:53:22Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2020-03-07T16:53:22Z"}, "message": "Fix CompletionContext module field (by removing it)\n\nTwo uses only needed the crate; one was wrong and should use the module from the\nscope instead.", "tree": {"sha": "ea4470b4aba752a930203b81c87f28c226231c77", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea4470b4aba752a930203b81c87f28c226231c77"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/941a5744095e55b9b0cafa63b10cb5480d02cc03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/941a5744095e55b9b0cafa63b10cb5480d02cc03", "html_url": "https://github.com/rust-lang/rust/commit/941a5744095e55b9b0cafa63b10cb5480d02cc03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/941a5744095e55b9b0cafa63b10cb5480d02cc03/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "020c00e44df1514b921669edc85129b37bce1610", "url": "https://api.github.com/repos/rust-lang/rust/commits/020c00e44df1514b921669edc85129b37bce1610", "html_url": "https://github.com/rust-lang/rust/commit/020c00e44df1514b921669edc85129b37bce1610"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "00fd158de1b2651051c6f2fbd17acf599c81d76b", "filename": "crates/ra_ide/src/completion/complete_dot.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/941a5744095e55b9b0cafa63b10cb5480d02cc03/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_dot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/941a5744095e55b9b0cafa63b10cb5480d02cc03/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_dot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_dot.rs?ref=941a5744095e55b9b0cafa63b10cb5480d02cc03", "patch": "@@ -38,7 +38,7 @@ pub(super) fn complete_dot(acc: &mut Completions, ctx: &CompletionContext) {\n fn complete_fields(acc: &mut Completions, ctx: &CompletionContext, receiver: &Type) {\n     for receiver in receiver.autoderef(ctx.db) {\n         for (field, ty) in receiver.fields(ctx.db) {\n-            if ctx.module.map_or(false, |m| !field.is_visible_from(ctx.db, m)) {\n+            if ctx.scope().module().map_or(false, |m| !field.is_visible_from(ctx.db, m)) {\n                 // Skip private field. FIXME: If the definition location of the\n                 // field is editable, we should show the completion\n                 continue;\n@@ -53,7 +53,7 @@ fn complete_fields(acc: &mut Completions, ctx: &CompletionContext, receiver: &Ty\n }\n \n fn complete_methods(acc: &mut Completions, ctx: &CompletionContext, receiver: &Type) {\n-    if let Some(krate) = ctx.module.map(|it| it.krate()) {\n+    if let Some(krate) = ctx.krate {\n         let mut seen_methods = FxHashSet::default();\n         let traits_in_scope = ctx.scope().traits_in_scope();\n         receiver.iterate_method_candidates(ctx.db, krate, &traits_in_scope, None, |_ty, func| {"}, {"sha": "d43486d1a8c31138af0e75deacfb38aa5681774e", "filename": "crates/ra_ide/src/completion/complete_path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/941a5744095e55b9b0cafa63b10cb5480d02cc03/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/941a5744095e55b9b0cafa63b10cb5480d02cc03/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_path.rs?ref=941a5744095e55b9b0cafa63b10cb5480d02cc03", "patch": "@@ -47,7 +47,7 @@ pub(super) fn complete_path(acc: &mut Completions, ctx: &CompletionContext) {\n             };\n             // Iterate assoc types separately\n             // FIXME: complete T::AssocType\n-            let krate = ctx.module.map(|m| m.krate());\n+            let krate = ctx.krate;\n             if let Some(krate) = krate {\n                 let traits_in_scope = ctx.scope().traits_in_scope();\n                 ty.iterate_path_candidates(ctx.db, krate, &traits_in_scope, None, |_ty, item| {"}, {"sha": "e7a8c78d008d2b35ee153ed51b7d854f65ca2f08", "filename": "crates/ra_ide/src/completion/completion_context.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/941a5744095e55b9b0cafa63b10cb5480d02cc03/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/941a5744095e55b9b0cafa63b10cb5480d02cc03/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs?ref=941a5744095e55b9b0cafa63b10cb5480d02cc03", "patch": "@@ -24,7 +24,7 @@ pub(crate) struct CompletionContext<'a> {\n     pub(super) original_token: SyntaxToken,\n     /// The token before the cursor, in the macro-expanded file.\n     pub(super) token: SyntaxToken,\n-    pub(super) module: Option<hir::Module>,\n+    pub(super) krate: Option<hir::Crate>,\n     pub(super) name_ref_syntax: Option<ast::NameRef>,\n     pub(super) function_syntax: Option<ast::FnDef>,\n     pub(super) use_item_syntax: Option<ast::UseItem>,\n@@ -73,8 +73,7 @@ impl<'a> CompletionContext<'a> {\n         let fake_ident_token =\n             file_with_fake_ident.syntax().token_at_offset(position.offset).right_biased().unwrap();\n \n-        // TODO: shouldn't this take the position into account? (in case we're inside a mod {})\n-        let module = sema.to_module_def(position.file_id);\n+        let krate = sema.to_module_def(position.file_id).map(|m| m.krate());\n         let original_token =\n             original_file.syntax().token_at_offset(position.offset).left_biased()?;\n         let token = sema.descend_into_macros(original_token.clone());\n@@ -84,7 +83,7 @@ impl<'a> CompletionContext<'a> {\n             original_token,\n             token,\n             offset: position.offset,\n-            module,\n+            krate,\n             name_ref_syntax: None,\n             function_syntax: None,\n             use_item_syntax: None,\n@@ -132,7 +131,6 @@ impl<'a> CompletionContext<'a> {\n                 if new_offset >= actual_expansion.text_range().end() {\n                     break;\n                 }\n-                // TODO check that the expansions 'look the same' up to the inserted token?\n                 original_file = actual_expansion;\n                 hypothetical_file = hypothetical_expansion.0;\n                 fake_ident_token = hypothetical_expansion.1;"}]}