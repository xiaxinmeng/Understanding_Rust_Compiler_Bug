{"sha": "138472bdc6b428eafc755dbc97b2706fa13a268c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzODQ3MmJkYzZiNDI4ZWFmYzc1NWRiYzk3YjI3MDZmYTEzYTI2OGM=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-03-24T18:07:18Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-04-02T22:02:29Z"}, "message": "Checking location and syntax of non_exhaustive attribute.", "tree": {"sha": "eaae47d996071a68142d2625b0f12316617aad68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eaae47d996071a68142d2625b0f12316617aad68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/138472bdc6b428eafc755dbc97b2706fa13a268c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAlrCqHYACgkQAXYLT59T\n8VQU+RAAmf74PkKuxI4l/XZ0jHo+BPwlnyB4E9XsP9stImbERqtH+QYSdIbP0Ixi\ns1thZ4UyilMG+FAHpMAtv3gq+w1DBj5cEPwPWU5RUFBKxnUnGfr8GWOILdp8yxqG\nphbjwj+9+MqqGRmRbYEG1gcSdL+MQJxWa5hsMyDq99dHtSPivf6Mxi1xq84gnu1N\nEVzTKhA4LWFSxdefaJ7++i3qGVsDFE4Paa1tCPjItJBHTMJCzekQ33kl+wehOIk6\n4Cly8bJ4p42McLkU8j/l1rQL1Oyc+C+mvof4MZKyJ9XkCzgchzt0LZkDAgLCRf5t\nnvghc2GXjKDFYiv/3lvtfffjFS8dOFee1oHVCaaQAbb71x2zirpf7OovJyKVNI4Z\nb5QHmDGq8l6XlBt8GXSXwG5V7rie0wpe8wxR9q8A7WqHkYnIGAILTuZLgOtu225+\nI+7S1eeG8EBpSq+hnog7oh1sexHF+pNhovc0xY1YjT1DrjcKhlngeyrkINnX4CJo\nrS74vYXV6ZR1aNkRBMUUDGmiQrMpoDpuZMDjtgrEtx/R5p+Z2ifUzF89PiRjsZeG\nsw2xe0zaQa/o4NTTXfH0okfeCuVCOhJPvIyb7m7dvOYNDZQg57PS6aBcn2H6cI01\nVzLVc0CCQQgESZiumd1aF3c23TMgs6bHISp6dzUkn41RVDCDrRw=\n=cufk\n-----END PGP SIGNATURE-----", "payload": "tree eaae47d996071a68142d2625b0f12316617aad68\nparent 934902af61d8024ddd7db290b33a7076dad7b107\nauthor David Wood <david@davidtw.co> 1521914838 +0000\ncommitter David Wood <david@davidtw.co> 1522706549 +0100\n\nChecking location and syntax of non_exhaustive attribute.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/138472bdc6b428eafc755dbc97b2706fa13a268c", "html_url": "https://github.com/rust-lang/rust/commit/138472bdc6b428eafc755dbc97b2706fa13a268c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/138472bdc6b428eafc755dbc97b2706fa13a268c/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "934902af61d8024ddd7db290b33a7076dad7b107", "url": "https://api.github.com/repos/rust-lang/rust/commits/934902af61d8024ddd7db290b33a7076dad7b107", "html_url": "https://github.com/rust-lang/rust/commit/934902af61d8024ddd7db290b33a7076dad7b107"}], "stats": {"total": 82, "additions": 82, "deletions": 0}, "files": [{"sha": "2662e70999196f458de10c16608a9f55b52e1558", "filename": "src/librustc/diagnostics.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/138472bdc6b428eafc755dbc97b2706fa13a268c/src%2Flibrustc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/138472bdc6b428eafc755dbc97b2706fa13a268c/src%2Flibrustc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdiagnostics.rs?ref=138472bdc6b428eafc755dbc97b2706fa13a268c", "patch": "@@ -2058,6 +2058,33 @@ where 'x: 'y\n ```\n \"##,\n \n+E0910: r##\"\n+This error indicates that a `#[non_exhaustive]` attribute was incorrectly placed\n+on something other than a struct or enum.\n+\n+Examples of erroneous code:\n+\n+```compile_fail,E0910\n+# #![feature(non_exhaustive)]\n+\n+#[non_exhaustive]\n+trait Foo { }\n+```\n+\"##,\n+\n+E0911: r##\"\n+This error indicates that a `#[non_exhaustive]` attribute had a value. The\n+`#[non_exhaustive]` should be empty.\n+\n+Examples of erroneous code:\n+\n+```compile_fail,E0911\n+# #![feature(non_exhaustive)]\n+\n+#[non_exhaustive(anything)]\n+struct Foo;\n+```\n+\"##,\n \n }\n "}, {"sha": "956cd17f38f214cd91f47550641f74cdb667742a", "filename": "src/librustc/hir/check_attr.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/138472bdc6b428eafc755dbc97b2706fa13a268c/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/138472bdc6b428eafc755dbc97b2706fa13a268c/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fcheck_attr.rs?ref=138472bdc6b428eafc755dbc97b2706fa13a268c", "patch": "@@ -66,6 +66,8 @@ impl<'a, 'tcx> CheckAttrVisitor<'a, 'tcx> {\n         for attr in &item.attrs {\n             if attr.check_name(\"inline\") {\n                 self.check_inline(attr, &item.span, target)\n+            } else if attr.check_name(\"non_exhaustive\") {\n+                self.check_non_exhaustive(attr, item, target)\n             } else if attr.check_name(\"wasm_import_module\") {\n                 has_wasm_import_module = true;\n                 if attr.value_str().is_none() {\n@@ -113,6 +115,31 @@ impl<'a, 'tcx> CheckAttrVisitor<'a, 'tcx> {\n         }\n     }\n \n+    /// Check if the `#[non_exhaustive]` attribute on an `item` is valid.\n+    fn check_non_exhaustive(&self, attr: &hir::Attribute, item: &hir::Item, target: Target) {\n+        match target {\n+            Target::Struct | Target::Enum => { /* Valid */ },\n+            _ => {\n+                struct_span_err!(self.tcx.sess,\n+                                 attr.span,\n+                                 E0910,\n+                                 \"attribute can only be applied to a struct or enum\")\n+                    .span_label(item.span, \"not a struct or enum\")\n+                    .emit();\n+                return;\n+            }\n+        }\n+\n+        if attr.meta_item_list().is_some() || attr.value_str().is_some() {\n+            struct_span_err!(self.tcx.sess,\n+                             attr.span,\n+                             E0911,\n+                             \"attribute should be empty\")\n+                .span_label(item.span, \"not empty\")\n+                .emit();\n+        }\n+    }\n+\n     /// Check if the `#[repr]` attributes on `item` are valid.\n     fn check_repr(&self, item: &hir::Item, target: Target) {\n         // Extract the names of all repr hints, e.g., [foo, bar, align] for:"}, {"sha": "e48d989c01d61030db2da36fbb68e181253ec00e", "filename": "src/test/compile-fail/rfc-2008-non-exhaustive/invalid-attribute.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/138472bdc6b428eafc755dbc97b2706fa13a268c/src%2Ftest%2Fcompile-fail%2Frfc-2008-non-exhaustive%2Finvalid-attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/138472bdc6b428eafc755dbc97b2706fa13a268c/src%2Ftest%2Fcompile-fail%2Frfc-2008-non-exhaustive%2Finvalid-attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frfc-2008-non-exhaustive%2Finvalid-attribute.rs?ref=138472bdc6b428eafc755dbc97b2706fa13a268c", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(non_exhaustive)]\n+\n+#[non_exhaustive(anything)]\n+//~^ ERROR attribute should be empty [E0911]\n+struct Foo;\n+\n+#[non_exhaustive]\n+//~^ ERROR attribute can only be applied to a struct or enum [E0910]\n+trait Bar { }\n+\n+#[non_exhaustive]\n+//~^ ERROR attribute can only be applied to a struct or enum [E0910]\n+union Baz {\n+    f1: u16,\n+    f2: u16\n+}\n+\n+fn main() { }"}]}