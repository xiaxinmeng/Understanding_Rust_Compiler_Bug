{"sha": "f4f7704eddb007c9b5b5a0c5663ab3efe778ca57", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0Zjc3MDRlZGRiMDA3YzliNWI1YTBjNTY2M2FiM2VmZTc3OGNhNTc=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-09-17T05:09:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-17T05:09:43Z"}, "message": "Rollup merge of #86382 - JohnTitor:try-desugar, r=estebank\n\nMake diagnostics clearer for `?` operators\n\nRe-submission of #75029, fixes #71309\nThis also revives the `content` methods removed by #83185.\nr? `@estebank`", "tree": {"sha": "8a982f7ef97c997308268d9de13532a72e313104", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a982f7ef97c997308268d9de13532a72e313104"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f4f7704eddb007c9b5b5a0c5663ab3efe778ca57", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhRCMYCRBK7hj4Ov3rIwAAdQAIAIt2/GS7J2FomqTf1PjY62vY\nnYe8xPG3E9Bn0cMclxUoA4ibrBspPlGfFrYhAkuyezOcjKsADiUa/p/rX9rL1FRE\n7YI/nJx8lBkXGYM8MHgtjm9JER5jR/t4X0L3S07xUsg8qgM7M9TowqazGMdzVjw/\n3t1e9TrSqhLE/oTfj4p49zihMWivAkmZIJEJKXhdg9bRPKir3GSE7Puh8tbYakvS\nOC3rKob0SiR75HLMJDBlTrYy0+z0t3HfWkLyzN6gKnK+Ggr/HCaq2MMQS1aDiC1S\nhXv4D49xqIN3saQKZWfx/YvnogEn41xJ9QfgxlSu72WIKSmwn8vbV81XLNffwpQ=\n=d2Aj\n-----END PGP SIGNATURE-----\n", "payload": "tree 8a982f7ef97c997308268d9de13532a72e313104\nparent 78a46efff06558674b51c10d8d81758285746ab5\nparent 378300a63d1951e2718a6b0a077439fc1b14742b\nauthor Yuki Okushi <jtitor@2k36.org> 1631855383 +0900\ncommitter GitHub <noreply@github.com> 1631855383 +0900\n\nRollup merge of #86382 - JohnTitor:try-desugar, r=estebank\n\nMake diagnostics clearer for `?` operators\n\nRe-submission of #75029, fixes #71309\nThis also revives the `content` methods removed by #83185.\nr? `@estebank`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f4f7704eddb007c9b5b5a0c5663ab3efe778ca57", "html_url": "https://github.com/rust-lang/rust/commit/f4f7704eddb007c9b5b5a0c5663ab3efe778ca57", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f4f7704eddb007c9b5b5a0c5663ab3efe778ca57/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78a46efff06558674b51c10d8d81758285746ab5", "url": "https://api.github.com/repos/rust-lang/rust/commits/78a46efff06558674b51c10d8d81758285746ab5", "html_url": "https://github.com/rust-lang/rust/commit/78a46efff06558674b51c10d8d81758285746ab5"}, {"sha": "378300a63d1951e2718a6b0a077439fc1b14742b", "url": "https://api.github.com/repos/rust-lang/rust/commits/378300a63d1951e2718a6b0a077439fc1b14742b", "html_url": "https://github.com/rust-lang/rust/commit/378300a63d1951e2718a6b0a077439fc1b14742b"}], "stats": {"total": 58, "additions": 53, "deletions": 5}, "files": [{"sha": "41a73268f467345df99ff6b6e57fb967fd2aada6", "filename": "compiler/rustc_errors/src/diagnostic.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f4f7704eddb007c9b5b5a0c5663ab3efe778ca57/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4f7704eddb007c9b5b5a0c5663ab3efe778ca57/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic.rs?ref=f4f7704eddb007c9b5b5a0c5663ab3efe778ca57", "patch": "@@ -74,6 +74,10 @@ impl DiagnosticStyledString {\n     pub fn highlighted<S: Into<String>>(t: S) -> DiagnosticStyledString {\n         DiagnosticStyledString(vec![StringPart::Highlighted(t.into())])\n     }\n+\n+    pub fn content(&self) -> String {\n+        self.0.iter().map(|x| x.content()).collect::<String>()\n+    }\n }\n \n #[derive(Debug, PartialEq, Eq)]\n@@ -82,6 +86,14 @@ pub enum StringPart {\n     Highlighted(String),\n }\n \n+impl StringPart {\n+    pub fn content(&self) -> &str {\n+        match self {\n+            &StringPart::Normal(ref s) | &StringPart::Highlighted(ref s) => s,\n+        }\n+    }\n+}\n+\n impl Diagnostic {\n     pub fn new(level: Level, message: &str) -> Self {\n         Diagnostic::new_with_code(level, None, message)"}, {"sha": "b8089b2499b66524bef2f6ef2da45291c4e6af9c", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f4f7704eddb007c9b5b5a0c5663ab3efe778ca57/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4f7704eddb007c9b5b5a0c5663ab3efe778ca57/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=f4f7704eddb007c9b5b5a0c5663ab3efe778ca57", "patch": "@@ -1971,6 +1971,8 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n         trace: TypeTrace<'tcx>,\n         terr: &TypeError<'tcx>,\n     ) -> DiagnosticBuilder<'tcx> {\n+        use crate::traits::ObligationCauseCode::MatchExpressionArm;\n+\n         debug!(\"report_and_explain_type_error(trace={:?}, terr={:?})\", trace, terr);\n \n         let span = trace.cause.span(self.tcx);\n@@ -2013,6 +2015,19 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                         _ => {}\n                     }\n                 }\n+                if let MatchExpressionArm(box MatchExpressionArmCause { source, .. }) =\n+                    trace.cause.code\n+                {\n+                    if let hir::MatchSource::TryDesugar = source {\n+                        if let Some((expected_ty, found_ty)) = self.values_str(trace.values) {\n+                            err.note(&format!(\n+                                \"`?` operator cannot convert from `{}` to `{}`\",\n+                                found_ty.content(),\n+                                expected_ty.content(),\n+                            ));\n+                        }\n+                    }\n+                }\n                 err\n             }\n             FailureCode::Error0644(failure_str) => {\n@@ -2585,9 +2600,7 @@ impl<'tcx> ObligationCauseExt<'tcx> for ObligationCause<'tcx> {\n             CompareImplTypeObligation { .. } => Error0308(\"type not compatible with trait\"),\n             MatchExpressionArm(box MatchExpressionArmCause { source, .. }) => {\n                 Error0308(match source {\n-                    hir::MatchSource::TryDesugar => {\n-                        \"try expression alternatives have incompatible types\"\n-                    }\n+                    hir::MatchSource::TryDesugar => \"`?` operator has incompatible types\",\n                     _ => \"`match` arms have incompatible types\",\n                 })\n             }"}, {"sha": "c31107d8fed0525e45d6e81445a0528a9f290692", "filename": "src/test/ui/inference/issue-71309.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f4f7704eddb007c9b5b5a0c5663ab3efe778ca57/src%2Ftest%2Fui%2Finference%2Fissue-71309.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4f7704eddb007c9b5b5a0c5663ab3efe778ca57/src%2Ftest%2Fui%2Finference%2Fissue-71309.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Fissue-71309.rs?ref=f4f7704eddb007c9b5b5a0c5663ab3efe778ca57", "patch": "@@ -0,0 +1,7 @@\n+fn foo(x: Result<i32, ()>) -> Result<(), ()> {\n+    let y: u32 = x?;\n+    //~^ ERROR: `?` operator has incompatible types\n+    Ok(())\n+}\n+\n+fn main() {}"}, {"sha": "af8714f1c808303ac02d10194a669c3fd3851f62", "filename": "src/test/ui/inference/issue-71309.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f4f7704eddb007c9b5b5a0c5663ab3efe778ca57/src%2Ftest%2Fui%2Finference%2Fissue-71309.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f4f7704eddb007c9b5b5a0c5663ab3efe778ca57/src%2Ftest%2Fui%2Finference%2Fissue-71309.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Fissue-71309.stderr?ref=f4f7704eddb007c9b5b5a0c5663ab3efe778ca57", "patch": "@@ -0,0 +1,15 @@\n+error[E0308]: `?` operator has incompatible types\n+  --> $DIR/issue-71309.rs:2:18\n+   |\n+LL |     let y: u32 = x?;\n+   |                  ^^ expected `u32`, found `i32`\n+   |\n+   = note: `?` operator cannot convert from `i32` to `u32`\n+help: you can convert an `i32` to a `u32` and panic if the converted value doesn't fit\n+   |\n+LL |     let y: u32 = x?.try_into().unwrap();\n+   |                    ++++++++++++++++++++\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "35402dff675534f769bfe47a343d58b254ce7fb1", "filename": "src/test/ui/issues/issue-51632-try-desugar-incompatible-types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f4f7704eddb007c9b5b5a0c5663ab3efe778ca57/src%2Ftest%2Fui%2Fissues%2Fissue-51632-try-desugar-incompatible-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4f7704eddb007c9b5b5a0c5663ab3efe778ca57/src%2Ftest%2Fui%2Fissues%2Fissue-51632-try-desugar-incompatible-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-51632-try-desugar-incompatible-types.rs?ref=f4f7704eddb007c9b5b5a0c5663ab3efe778ca57", "patch": "@@ -6,7 +6,7 @@ fn missing_discourses() -> Result<isize, ()> {\n \n fn forbidden_narratives() -> Result<isize, ()> {\n     missing_discourses()?\n-    //~^ ERROR try expression alternatives have incompatible types\n+    //~^ ERROR: `?` operator has incompatible types\n }\n \n fn main() {}"}, {"sha": "0f61e03c3b58fb522d4d34d44407b74703719a54", "filename": "src/test/ui/issues/issue-51632-try-desugar-incompatible-types.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f4f7704eddb007c9b5b5a0c5663ab3efe778ca57/src%2Ftest%2Fui%2Fissues%2Fissue-51632-try-desugar-incompatible-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f4f7704eddb007c9b5b5a0c5663ab3efe778ca57/src%2Ftest%2Fui%2Fissues%2Fissue-51632-try-desugar-incompatible-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-51632-try-desugar-incompatible-types.stderr?ref=f4f7704eddb007c9b5b5a0c5663ab3efe778ca57", "patch": "@@ -1,9 +1,10 @@\n-error[E0308]: try expression alternatives have incompatible types\n+error[E0308]: `?` operator has incompatible types\n   --> $DIR/issue-51632-try-desugar-incompatible-types.rs:8:5\n    |\n LL |     missing_discourses()?\n    |     ^^^^^^^^^^^^^^^^^^^^^ expected enum `Result`, found `isize`\n    |\n+   = note: `?` operator cannot convert from `isize` to `Result<isize, ()>`\n    = note: expected enum `Result<isize, ()>`\n               found type `isize`\n help: try removing this `?`"}]}