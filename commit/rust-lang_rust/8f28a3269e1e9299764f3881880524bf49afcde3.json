{"sha": "8f28a3269e1e9299764f3881880524bf49afcde3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmMjhhMzI2OWUxZTkyOTk3NjRmMzg4MTg4MDUyNGJmNDlhZmNkZTM=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-01-21T16:12:14Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-01-21T17:30:15Z"}, "message": "Turn alloc's force_expr macro into a regular macro_rules!{}.\n\nOtherwise rust-analyzer doesn't understand vec![].", "tree": {"sha": "b3b6bdcdb417c4653256dd4c74793b8504535f53", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3b6bdcdb417c4653256dd4c74793b8504535f53"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f28a3269e1e9299764f3881880524bf49afcde3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f28a3269e1e9299764f3881880524bf49afcde3", "html_url": "https://github.com/rust-lang/rust/commit/8f28a3269e1e9299764f3881880524bf49afcde3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f28a3269e1e9299764f3881880524bf49afcde3/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "339e19697a39a78f4d669c217b7d21109215de41", "url": "https://api.github.com/repos/rust-lang/rust/commits/339e19697a39a78f4d669c217b7d21109215de41", "html_url": "https://github.com/rust-lang/rust/commit/339e19697a39a78f4d669c217b7d21109215de41"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "d7ae353282e799decf035238000f86db0420b5cd", "filename": "library/alloc/src/lib.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8f28a3269e1e9299764f3881880524bf49afcde3/library%2Falloc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f28a3269e1e9299764f3881880524bf49afcde3/library%2Falloc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Flib.rs?ref=8f28a3269e1e9299764f3881880524bf49afcde3", "patch": "@@ -189,11 +189,4 @@ pub mod vec;\n #[unstable(feature = \"liballoc_internals\", issue = \"none\", reason = \"implementation detail\")]\n pub mod __export {\n     pub use core::format_args;\n-\n-    /// Force AST node to an expression to improve diagnostics in pattern position.\n-    #[rustc_macro_transparency = \"semitransparent\"]\n-    #[unstable(feature = \"liballoc_internals\", issue = \"none\", reason = \"implementation detail\")]\n-    pub macro force_expr($e:expr) {\n-        $e\n-    }\n }"}, {"sha": "9e5e81595cfdb3c1d14c452d6674946cb31795e4", "filename": "library/alloc/src/macros.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8f28a3269e1e9299764f3881880524bf49afcde3/library%2Falloc%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f28a3269e1e9299764f3881880524bf49afcde3/library%2Falloc%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fmacros.rs?ref=8f28a3269e1e9299764f3881880524bf49afcde3", "patch": "@@ -40,13 +40,13 @@\n #[allow_internal_unstable(box_syntax, liballoc_internals)]\n macro_rules! vec {\n     () => (\n-        $crate::__export::force_expr!($crate::vec::Vec::new())\n+        $crate::force_expr!($crate::vec::Vec::new())\n     );\n     ($elem:expr; $n:expr) => (\n-        $crate::__export::force_expr!($crate::vec::from_elem($elem, $n))\n+        $crate::force_expr!($crate::vec::from_elem($elem, $n))\n     );\n     ($($x:expr),+ $(,)?) => (\n-        $crate::__export::force_expr!(<[_]>::into_vec(box [$($x),+]))\n+        $crate::force_expr!(<[_]>::into_vec(box [$($x),+]))\n     );\n }\n \n@@ -111,3 +111,13 @@ macro_rules! format {\n         res\n     }}\n }\n+\n+/// Force AST node to an expression to improve diagnostics in pattern position.\n+#[doc(hidden)]\n+#[macro_export]\n+#[unstable(feature = \"liballoc_internals\", issue = \"none\", reason = \"implementation detail\")]\n+macro_rules! force_expr {\n+    ($e:expr) => {\n+        $e\n+    };\n+}"}]}