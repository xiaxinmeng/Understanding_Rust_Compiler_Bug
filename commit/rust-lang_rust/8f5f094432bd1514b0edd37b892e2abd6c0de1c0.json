{"sha": "8f5f094432bd1514b0edd37b892e2abd6c0de1c0", "node_id": "C_kwDOAAsO6NoAKDhmNWYwOTQ0MzJiZDE1MTRiMGVkZDM3Yjg5MmUyYWJkNmMwZGUxYzA", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2021-11-16T20:03:28Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2021-11-16T20:03:28Z"}, "message": "Mark `<*const _>::align_offset` and `<*mut _>::align_offset` as `const fn`", "tree": {"sha": "8286615b7b8e62dc4dbefa4ea25c12d9880179ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8286615b7b8e62dc4dbefa4ea25c12d9880179ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f5f094432bd1514b0edd37b892e2abd6c0de1c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f5f094432bd1514b0edd37b892e2abd6c0de1c0", "html_url": "https://github.com/rust-lang/rust/commit/8f5f094432bd1514b0edd37b892e2abd6c0de1c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f5f094432bd1514b0edd37b892e2abd6c0de1c0/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d914f17ca71a33a89b2dc3436fca51b1a091559e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d914f17ca71a33a89b2dc3436fca51b1a091559e", "html_url": "https://github.com/rust-lang/rust/commit/d914f17ca71a33a89b2dc3436fca51b1a091559e"}], "stats": {"total": 42, "additions": 36, "deletions": 6}, "files": [{"sha": "3d85f97cbbe5cb0e2f3efb67b3e843da84281599", "filename": "library/core/src/ptr/const_ptr.rs", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/8f5f094432bd1514b0edd37b892e2abd6c0de1c0/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f5f094432bd1514b0edd37b892e2abd6c0de1c0/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs?ref=8f5f094432bd1514b0edd37b892e2abd6c0de1c0", "patch": "@@ -879,15 +879,30 @@ impl<T: ?Sized> *const T {\n     /// # } }\n     /// ```\n     #[stable(feature = \"align_offset\", since = \"1.36.0\")]\n-    pub fn align_offset(self, align: usize) -> usize\n+    #[rustc_const_unstable(feature = \"const_align_offset\", issue = \"none\")]\n+    pub const fn align_offset(self, align: usize) -> usize\n     where\n         T: Sized,\n     {\n         if !align.is_power_of_two() {\n             panic!(\"align_offset: align is not a power-of-two\");\n         }\n-        // SAFETY: `align` has been checked to be a power of 2 above\n-        unsafe { align_offset(self, align) }\n+\n+        fn rt_impl<T>(p: *const T, align: usize) -> usize {\n+            // SAFETY: `align` has been checked to be a power of 2 above\n+            unsafe { align_offset(p, align) }\n+        }\n+\n+        const fn ctfe_impl<T>(_: *const T, _: usize) -> usize {\n+            usize::MAX\n+        }\n+\n+        // SAFETY:\n+        // It is permisseble for `align_offset` to always return `usize::MAX`,\n+        // algorithm correctness can not depend on `align_offset` returning non-max values.\n+        //\n+        // As such the behaviour can't change after replacing `align_offset` with `usize::MAX`, only performance can.\n+        unsafe { intrinsics::const_eval_select((self, align), ctfe_impl, rt_impl) }\n     }\n }\n "}, {"sha": "98308ac387314bf961612599376b50519a1b1c15", "filename": "library/core/src/ptr/mut_ptr.rs", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/8f5f094432bd1514b0edd37b892e2abd6c0de1c0/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f5f094432bd1514b0edd37b892e2abd6c0de1c0/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs?ref=8f5f094432bd1514b0edd37b892e2abd6c0de1c0", "patch": "@@ -1142,15 +1142,30 @@ impl<T: ?Sized> *mut T {\n     /// # } }\n     /// ```\n     #[stable(feature = \"align_offset\", since = \"1.36.0\")]\n-    pub fn align_offset(self, align: usize) -> usize\n+    #[rustc_const_unstable(feature = \"const_align_offset\", issue = \"none\")]\n+    pub const fn align_offset(self, align: usize) -> usize\n     where\n         T: Sized,\n     {\n         if !align.is_power_of_two() {\n             panic!(\"align_offset: align is not a power-of-two\");\n         }\n-        // SAFETY: `align` has been checked to be a power of 2 above\n-        unsafe { align_offset(self, align) }\n+\n+        fn rt_impl<T>(p: *mut T, align: usize) -> usize {\n+            // SAFETY: `align` has been checked to be a power of 2 above\n+            unsafe { align_offset(p, align) }\n+        }\n+\n+        const fn ctfe_impl<T>(_: *mut T, _: usize) -> usize {\n+            usize::MAX\n+        }\n+\n+        // SAFETY:\n+        // It is permisseble for `align_offset` to always return `usize::MAX`,\n+        // algorithm correctness can not depend on `align_offset` returning non-max values.\n+        //\n+        // As such the behaviour can't change after replacing `align_offset` with `usize::MAX`, only performance can.\n+        unsafe { intrinsics::const_eval_select((self, align), ctfe_impl, rt_impl) }\n     }\n }\n "}]}