{"sha": "0c9896bfaa6c7bfd5d34119b7aecffbcc036b201", "node_id": "C_kwDOAAsO6NoAKDBjOTg5NmJmYWE2YzdiZmQ1ZDM0MTE5YjdhZWNmZmJjYzAzNmIyMDE", "commit": {"author": {"name": "onestacked", "email": "chrisi.schrefl@gmail.com", "date": "2022-11-07T16:41:58Z"}, "committer": {"name": "onestacked", "email": "chrisi.schrefl@gmail.com", "date": "2022-11-07T16:41:58Z"}, "message": "Fix `const_fn_trait_ref_impl`, add test for it", "tree": {"sha": "15389963f70e50dfde8f3f6950680cc46bcc66f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/15389963f70e50dfde8f3f6950680cc46bcc66f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c9896bfaa6c7bfd5d34119b7aecffbcc036b201", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c9896bfaa6c7bfd5d34119b7aecffbcc036b201", "html_url": "https://github.com/rust-lang/rust/commit/0c9896bfaa6c7bfd5d34119b7aecffbcc036b201", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c9896bfaa6c7bfd5d34119b7aecffbcc036b201/comments", "author": {"login": "chriss0612", "id": 18047460, "node_id": "MDQ6VXNlcjE4MDQ3NDYw", "avatar_url": "https://avatars.githubusercontent.com/u/18047460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chriss0612", "html_url": "https://github.com/chriss0612", "followers_url": "https://api.github.com/users/chriss0612/followers", "following_url": "https://api.github.com/users/chriss0612/following{/other_user}", "gists_url": "https://api.github.com/users/chriss0612/gists{/gist_id}", "starred_url": "https://api.github.com/users/chriss0612/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chriss0612/subscriptions", "organizations_url": "https://api.github.com/users/chriss0612/orgs", "repos_url": "https://api.github.com/users/chriss0612/repos", "events_url": "https://api.github.com/users/chriss0612/events{/privacy}", "received_events_url": "https://api.github.com/users/chriss0612/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chriss0612", "id": 18047460, "node_id": "MDQ6VXNlcjE4MDQ3NDYw", "avatar_url": "https://avatars.githubusercontent.com/u/18047460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chriss0612", "html_url": "https://github.com/chriss0612", "followers_url": "https://api.github.com/users/chriss0612/followers", "following_url": "https://api.github.com/users/chriss0612/following{/other_user}", "gists_url": "https://api.github.com/users/chriss0612/gists{/gist_id}", "starred_url": "https://api.github.com/users/chriss0612/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chriss0612/subscriptions", "organizations_url": "https://api.github.com/users/chriss0612/orgs", "repos_url": "https://api.github.com/users/chriss0612/repos", "events_url": "https://api.github.com/users/chriss0612/events{/privacy}", "received_events_url": "https://api.github.com/users/chriss0612/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "391ba78ab442610a63310b9a3d24646082628081", "url": "https://api.github.com/repos/rust-lang/rust/commits/391ba78ab442610a63310b9a3d24646082628081", "html_url": "https://github.com/rust-lang/rust/commit/391ba78ab442610a63310b9a3d24646082628081"}], "stats": {"total": 60, "additions": 50, "deletions": 10}, "files": [{"sha": "11b43b621c7b883029cbc6d8b9db546bc21d72d0", "filename": "library/core/src/ops/function.rs", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/0c9896bfaa6c7bfd5d34119b7aecffbcc036b201/library%2Fcore%2Fsrc%2Fops%2Ffunction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c9896bfaa6c7bfd5d34119b7aecffbcc036b201/library%2Fcore%2Fsrc%2Fops%2Ffunction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fops%2Ffunction.rs?ref=0c9896bfaa6c7bfd5d34119b7aecffbcc036b201", "patch": "@@ -576,29 +576,32 @@ mod impls {\n     use crate::marker::Tuple;\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    impl<A: Tuple, F: ?Sized> Fn<A> for &F\n+    #[rustc_const_unstable(feature = \"const_fn_trait_ref_impls\", issue = \"101803\")]\n+    impl<A: Tuple, F: ?Sized> const Fn<A> for &F\n     where\n-        F: Fn<A>,\n+        F: ~const Fn<A>,\n     {\n         extern \"rust-call\" fn call(&self, args: A) -> F::Output {\n             (**self).call(args)\n         }\n     }\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    impl<A: Tuple, F: ?Sized> FnMut<A> for &F\n+    #[rustc_const_unstable(feature = \"const_fn_trait_ref_impls\", issue = \"101803\")]\n+    impl<A: Tuple, F: ?Sized> const FnMut<A> for &F\n     where\n-        F: Fn<A>,\n+        F: ~const Fn<A>,\n     {\n         extern \"rust-call\" fn call_mut(&mut self, args: A) -> F::Output {\n             (**self).call(args)\n         }\n     }\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    impl<A: Tuple, F: ?Sized> FnOnce<A> for &F\n+    #[rustc_const_unstable(feature = \"const_fn_trait_ref_impls\", issue = \"101803\")]\n+    impl<A: Tuple, F: ?Sized> const FnOnce<A> for &F\n     where\n-        F: Fn<A>,\n+        F: ~const Fn<A>,\n     {\n         type Output = F::Output;\n \n@@ -608,19 +611,21 @@ mod impls {\n     }\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    impl<A: Tuple, F: ?Sized> FnMut<A> for &mut F\n+    #[rustc_const_unstable(feature = \"const_fn_trait_ref_impls\", issue = \"101803\")]\n+    impl<A: Tuple, F: ?Sized> const FnMut<A> for &mut F\n     where\n-        F: FnMut<A>,\n+        F: ~const FnMut<A>,\n     {\n         extern \"rust-call\" fn call_mut(&mut self, args: A) -> F::Output {\n             (*self).call_mut(args)\n         }\n     }\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    impl<A: Tuple, F: ?Sized> FnOnce<A> for &mut F\n+    #[rustc_const_unstable(feature = \"const_fn_trait_ref_impls\", issue = \"101803\")]\n+    impl<A: Tuple, F: ?Sized> const FnOnce<A> for &mut F\n     where\n-        F: FnMut<A>,\n+        F: ~const FnMut<A>,\n     {\n         type Output = F::Output;\n         extern \"rust-call\" fn call_once(self, args: A) -> F::Output {"}, {"sha": "57465c5592580c295e07c7ef68e58740e1b28808", "filename": "src/test/ui/consts/fn_trait_refs.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/0c9896bfaa6c7bfd5d34119b7aecffbcc036b201/src%2Ftest%2Fui%2Fconsts%2Ffn_trait_refs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c9896bfaa6c7bfd5d34119b7aecffbcc036b201/src%2Ftest%2Fui%2Fconsts%2Ffn_trait_refs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Ffn_trait_refs.rs?ref=0c9896bfaa6c7bfd5d34119b7aecffbcc036b201", "patch": "@@ -0,0 +1,35 @@\n+// run-pass\n+#![feature(const_fn_trait_ref_impls)]\n+#![feature(fn_traits)]\n+#![feature(unboxed_closures)]\n+#![feature(const_trait_impl)]\n+#![feature(const_mut_refs)]\n+\n+use std::marker::Destruct;\n+\n+const fn test(i: i32) -> i32 {\n+    i + 1\n+}\n+\n+const fn call<F: ~const FnMut(i32) -> i32 + ~const Destruct>(mut f: F) -> F::Output {\n+    f(5)\n+}\n+\n+const fn use_fn<F: ~const FnMut(i32) -> i32 + ~const Destruct>(mut f: F) -> F::Output {\n+    call(&mut f)\n+}\n+\n+const fn test_fn() {}\n+\n+const fn tester<T>(_fn: T)\n+where\n+    T: ~const Fn() + ~const Destruct,\n+{\n+}\n+\n+const fn main() {\n+    tester(test_fn);\n+    let test_ref = &test_fn;\n+    tester(test_ref);\n+    assert!(use_fn(test) == 6);\n+}"}]}