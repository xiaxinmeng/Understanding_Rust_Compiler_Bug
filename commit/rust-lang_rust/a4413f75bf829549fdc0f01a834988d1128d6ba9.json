{"sha": "a4413f75bf829549fdc0f01a834988d1128d6ba9", "node_id": "C_kwDOAAsO6NoAKGE0NDEzZjc1YmY4Mjk1NDlmZGMwZjAxYTgzNDk4OGQxMTI4ZDZiYTk", "commit": {"author": {"name": "Nahua Kang", "email": "kangnahua@gmail.com", "date": "2022-08-02T20:37:40Z"}, "committer": {"name": "Nahua Kang", "email": "kangnahua@gmail.com", "date": "2022-08-19T17:49:15Z"}, "message": "Register new lint collapsible_str_replace to methods", "tree": {"sha": "360596aa8b3a9ffdf3f6c09324d2fe16385c25f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/360596aa8b3a9ffdf3f6c09324d2fe16385c25f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4413f75bf829549fdc0f01a834988d1128d6ba9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4413f75bf829549fdc0f01a834988d1128d6ba9", "html_url": "https://github.com/rust-lang/rust/commit/a4413f75bf829549fdc0f01a834988d1128d6ba9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4413f75bf829549fdc0f01a834988d1128d6ba9/comments", "author": {"login": "nahuakang", "id": 18533347, "node_id": "MDQ6VXNlcjE4NTMzMzQ3", "avatar_url": "https://avatars.githubusercontent.com/u/18533347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nahuakang", "html_url": "https://github.com/nahuakang", "followers_url": "https://api.github.com/users/nahuakang/followers", "following_url": "https://api.github.com/users/nahuakang/following{/other_user}", "gists_url": "https://api.github.com/users/nahuakang/gists{/gist_id}", "starred_url": "https://api.github.com/users/nahuakang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nahuakang/subscriptions", "organizations_url": "https://api.github.com/users/nahuakang/orgs", "repos_url": "https://api.github.com/users/nahuakang/repos", "events_url": "https://api.github.com/users/nahuakang/events{/privacy}", "received_events_url": "https://api.github.com/users/nahuakang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nahuakang", "id": 18533347, "node_id": "MDQ6VXNlcjE4NTMzMzQ3", "avatar_url": "https://avatars.githubusercontent.com/u/18533347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nahuakang", "html_url": "https://github.com/nahuakang", "followers_url": "https://api.github.com/users/nahuakang/followers", "following_url": "https://api.github.com/users/nahuakang/following{/other_user}", "gists_url": "https://api.github.com/users/nahuakang/gists{/gist_id}", "starred_url": "https://api.github.com/users/nahuakang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nahuakang/subscriptions", "organizations_url": "https://api.github.com/users/nahuakang/orgs", "repos_url": "https://api.github.com/users/nahuakang/repos", "events_url": "https://api.github.com/users/nahuakang/events{/privacy}", "received_events_url": "https://api.github.com/users/nahuakang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a54117ffcb4ac496ebcc53a3b52bf26656775fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a54117ffcb4ac496ebcc53a3b52bf26656775fd", "html_url": "https://github.com/rust-lang/rust/commit/3a54117ffcb4ac496ebcc53a3b52bf26656775fd"}], "stats": {"total": 94, "additions": 94, "deletions": 0}, "files": [{"sha": "6c4a0cc91aadb20c913a44b1c525da302eb4a72a", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a4413f75bf829549fdc0f01a834988d1128d6ba9/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/a4413f75bf829549fdc0f01a834988d1128d6ba9/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=a4413f75bf829549fdc0f01a834988d1128d6ba9", "patch": "@@ -3642,6 +3642,7 @@ Released 2018-09-13\n [`collapsible_else_if`]: https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if\n [`collapsible_if`]: https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n [`collapsible_match`]: https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_match\n+[`collapsible_str_replace`]: https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_str_replace\n [`comparison_chain`]: https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain\n [`comparison_to_empty`]: https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n [`const_static_lifetime`]: https://rust-lang.github.io/rust-clippy/master/index.html#const_static_lifetime"}, {"sha": "65eda429989902c8a800f1db4691a86a2a9bc80f", "filename": "clippy_lints/src/lib.register_all.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a4413f75bf829549fdc0f01a834988d1128d6ba9/clippy_lints%2Fsrc%2Flib.register_all.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4413f75bf829549fdc0f01a834988d1128d6ba9/clippy_lints%2Fsrc%2Flib.register_all.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_all.rs?ref=a4413f75bf829549fdc0f01a834988d1128d6ba9", "patch": "@@ -154,6 +154,7 @@ store.register_group(true, \"clippy::all\", Some(\"clippy_all\"), vec![\n     LintId::of(methods::CHARS_NEXT_CMP),\n     LintId::of(methods::CLONE_DOUBLE_REF),\n     LintId::of(methods::CLONE_ON_COPY),\n+    LintId::of(methods::COLLAPSIBLE_STR_REPLACE),\n     LintId::of(methods::ERR_EXPECT),\n     LintId::of(methods::EXPECT_FUN_CALL),\n     LintId::of(methods::EXTEND_WITH_DRAIN),"}, {"sha": "e64a473d068e562c98dd8dd46b6ecab49e1f8680", "filename": "clippy_lints/src/lib.register_lints.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a4413f75bf829549fdc0f01a834988d1128d6ba9/clippy_lints%2Fsrc%2Flib.register_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4413f75bf829549fdc0f01a834988d1128d6ba9/clippy_lints%2Fsrc%2Flib.register_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_lints.rs?ref=a4413f75bf829549fdc0f01a834988d1128d6ba9", "patch": "@@ -287,6 +287,7 @@ store.register_lints(&[\n     methods::CLONE_DOUBLE_REF,\n     methods::CLONE_ON_COPY,\n     methods::CLONE_ON_REF_PTR,\n+    methods::COLLAPSIBLE_STR_REPLACE,\n     methods::ERR_EXPECT,\n     methods::EXPECT_FUN_CALL,\n     methods::EXPECT_USED,"}, {"sha": "531fc47f8fac2be16277402e4f53fd984b290408", "filename": "clippy_lints/src/lib.register_perf.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a4413f75bf829549fdc0f01a834988d1128d6ba9/clippy_lints%2Fsrc%2Flib.register_perf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4413f75bf829549fdc0f01a834988d1128d6ba9/clippy_lints%2Fsrc%2Flib.register_perf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_perf.rs?ref=a4413f75bf829549fdc0f01a834988d1128d6ba9", "patch": "@@ -13,6 +13,7 @@ store.register_group(true, \"clippy::perf\", Some(\"clippy_perf\"), vec![\n     LintId::of(loops::MISSING_SPIN_LOOP),\n     LintId::of(loops::NEEDLESS_COLLECT),\n     LintId::of(manual_retain::MANUAL_RETAIN),\n+    LintId::of(methods::COLLAPSIBLE_STR_REPLACE),\n     LintId::of(methods::EXPECT_FUN_CALL),\n     LintId::of(methods::EXTEND_WITH_DRAIN),\n     LintId::of(methods::ITER_NTH),"}, {"sha": "e5547b50471357b078110af00b09749579340c26", "filename": "clippy_lints/src/methods/collapsible_str_replace.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a4413f75bf829549fdc0f01a834988d1128d6ba9/clippy_lints%2Fsrc%2Fmethods%2Fcollapsible_str_replace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4413f75bf829549fdc0f01a834988d1128d6ba9/clippy_lints%2Fsrc%2Fmethods%2Fcollapsible_str_replace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fcollapsible_str_replace.rs?ref=a4413f75bf829549fdc0f01a834988d1128d6ba9", "patch": "@@ -0,0 +1,6 @@\n+use rustc_hir as hir;\n+use rustc_hir::*;\n+use rustc_lint::{LateContext, LateLintPass};\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n+\n+pub(super) fn check<'tcx>(cx: &LateContext<'tcx>, expr: &hir::Expr<'_>) {}"}, {"sha": "8f7cb105c220804a9d400200de1a3aa9c86ef671", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/a4413f75bf829549fdc0f01a834988d1128d6ba9/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4413f75bf829549fdc0f01a834988d1128d6ba9/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=a4413f75bf829549fdc0f01a834988d1128d6ba9", "patch": "@@ -12,6 +12,7 @@ mod chars_next_cmp_with_unwrap;\n mod clone_on_copy;\n mod clone_on_ref_ptr;\n mod cloned_instead_of_copied;\n+mod collapsible_str_replace;\n mod err_expect;\n mod expect_fun_call;\n mod expect_used;\n@@ -137,6 +138,32 @@ declare_clippy_lint! {\n     \"used `cloned` where `copied` could be used instead\"\n }\n \n+declare_clippy_lint! {\n+    /// ### What it does\n+    /// Checks for consecutive calls to `str::replace` (2 or more)\n+    /// that can be collapsed into a single call.\n+    ///\n+    /// ### Why is this bad?\n+    /// Consecutive `str::replace` calls scan the string multiple times\n+    /// with repetitive code.\n+    ///\n+    /// ### Example\n+    /// ```rust\n+    /// let hello = \"hesuo worpd\"\n+    ///     .replace('s', \"l\")\n+    ///     .replace(\"u\", \"l\")\n+    ///     .replace('p', \"l\")\n+    /// ```\n+    /// Use instead:\n+    /// ```rust\n+    /// let hello = \"hesuo worpd\".replace(|c| matches!(c, 's' | 'u' | 'p'), \"l\")\n+    /// ```\n+    #[clippy::version = \"1.64.0\"]\n+    pub COLLAPSIBLE_STR_REPLACE,\n+    perf,\n+    \"collapse consecutive calls to str::replace (2 or more) into a single call\"\n+}\n+\n declare_clippy_lint! {\n     /// ### What it does\n     /// Checks for usage of `_.cloned().<func>()` where call to `.cloned()` can be postponed.\n@@ -3001,6 +3028,7 @@ impl_lint_pass!(Methods => [\n     CLONE_ON_COPY,\n     CLONE_ON_REF_PTR,\n     CLONE_DOUBLE_REF,\n+    COLLAPSIBLE_STR_REPLACE,\n     ITER_OVEREAGER_CLONED,\n     CLONED_INSTEAD_OF_COPIED,\n     FLAT_MAP_OPTION,\n@@ -3491,6 +3519,7 @@ impl Methods {\n                 (\"sort_unstable_by\", [arg]) => {\n                     unnecessary_sort_by::check(cx, expr, recv, arg, true);\n                 },\n+                (\"replace\", [_, _]) => collapsible_str_replace::check(cx, expr, recv, args),\n                 (\"splitn\" | \"rsplitn\", [count_arg, pat_arg]) => {\n                     if let Some((Constant::Int(count), _)) = constant(cx, cx.typeck_results(), count_arg) {\n                         suspicious_splitn::check(cx, name, expr, recv, count);"}, {"sha": "c91809bc8409b2e7eb6d7abb62961309db4ab7b7", "filename": "tests/ui/collapsible_str_replace.rs", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/a4413f75bf829549fdc0f01a834988d1128d6ba9/tests%2Fui%2Fcollapsible_str_replace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4413f75bf829549fdc0f01a834988d1128d6ba9/tests%2Fui%2Fcollapsible_str_replace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcollapsible_str_replace.rs?ref=a4413f75bf829549fdc0f01a834988d1128d6ba9", "patch": "@@ -0,0 +1,55 @@\n+#![warn(clippy::collapsible_str_replace)]\n+\n+fn main() {\n+    let misspelled = \"hesuo worpd\";\n+\n+    let p = 'p';\n+    let s = 's';\n+    let u = 'u';\n+\n+    // If the first argument to a single `str::replace` call is a slice and none of the chars\n+    // are variables, recommend `collapsible_str_replace`\n+    let replacement = misspelled.replace(&['s', 'u', 'p'], \"l\");\n+    println!(\"{replacement}\");\n+\n+    // The first iteration of `collapsible_str_replace` will not create lint if the first argument to\n+    // a single `str::replace` call is a slice and one or more of its chars are variables\n+    let replacement = misspelled.replace(&['s', u, 'p'], \"l\");\n+    println!(\"{replacement}\");\n+\n+    let replacement = misspelled.replace(&[s, u, 'p'], \"l\");\n+    println!(\"{replacement}\");\n+\n+    let replacement = misspelled.replace(&[s, u, p], \"l\");\n+    println!(\"{replacement}\");\n+\n+    // If there is a single call to `str::replace` and the first argument is a char or a variable, don't\n+    // not recommend `collapsible_str_replace`\n+    let replacement = misspelled.replace('s', \"l\");\n+    println!(\"{replacement}\");\n+\n+    let replacement = misspelled.replace(s, \"l\");\n+    println!(\"{replacement}\");\n+\n+    // If there are consecutive calls to `str::replace` and none of the chars are variables,\n+    // recommend `collapsible_str_replace`\n+    let replacement = misspelled.replace('s', \"l\").replace('u', \"l\");\n+    println!(\"{replacement}\");\n+\n+    let replacement = misspelled.replace('s', \"l\").replace('u', \"l\").replace('p', \"l\");\n+    println!(\"{replacement}\");\n+\n+    // If there are consecutive calls to `str::replace` and all or any chars are variables,\n+    // recommend the fallback `misspelled.replace(&[s, u, p], \"l\")`\n+    let replacement = misspelled.replace(s, \"l\").replace('u', \"l\");\n+    println!(\"{replacement}\");\n+\n+    let replacement = misspelled.replace(s, \"l\").replace('u', \"l\").replace('p', \"l\");\n+    println!(\"{replacement}\");\n+\n+    let replacement = misspelled.replace(s, \"l\").replace(u, \"l\").replace('p', \"l\");\n+    println!(\"{replacement}\");\n+\n+    let replacement = misspelled.replace(s, \"l\").replace(u, \"l\").replace(p, \"l\");\n+    println!(\"{replacement}\");\n+}"}]}