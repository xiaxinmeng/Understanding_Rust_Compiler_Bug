{"sha": "4e4c9ea4ac9827c3e6b099c262418ba172910df3", "node_id": "C_kwDOAAsO6NoAKDRlNGM5ZWE0YWM5ODI3YzNlNmIwOTljMjYyNDE4YmExNzI5MTBkZjM", "commit": {"author": {"name": "unexge", "email": "unexge@gmail.com", "date": "2022-03-22T21:30:29Z"}, "committer": {"name": "unexge", "email": "unexge@gmail.com", "date": "2022-03-22T21:30:29Z"}, "message": "fix: Correctly suggest auto importing traits from aliases", "tree": {"sha": "faaf38a1be2616fab00571c0e0b940151a61790d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/faaf38a1be2616fab00571c0e0b940151a61790d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e4c9ea4ac9827c3e6b099c262418ba172910df3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e4c9ea4ac9827c3e6b099c262418ba172910df3", "html_url": "https://github.com/rust-lang/rust/commit/4e4c9ea4ac9827c3e6b099c262418ba172910df3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e4c9ea4ac9827c3e6b099c262418ba172910df3/comments", "author": {"login": "unexge", "id": 16212576, "node_id": "MDQ6VXNlcjE2MjEyNTc2", "avatar_url": "https://avatars.githubusercontent.com/u/16212576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unexge", "html_url": "https://github.com/unexge", "followers_url": "https://api.github.com/users/unexge/followers", "following_url": "https://api.github.com/users/unexge/following{/other_user}", "gists_url": "https://api.github.com/users/unexge/gists{/gist_id}", "starred_url": "https://api.github.com/users/unexge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unexge/subscriptions", "organizations_url": "https://api.github.com/users/unexge/orgs", "repos_url": "https://api.github.com/users/unexge/repos", "events_url": "https://api.github.com/users/unexge/events{/privacy}", "received_events_url": "https://api.github.com/users/unexge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "unexge", "id": 16212576, "node_id": "MDQ6VXNlcjE2MjEyNTc2", "avatar_url": "https://avatars.githubusercontent.com/u/16212576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unexge", "html_url": "https://github.com/unexge", "followers_url": "https://api.github.com/users/unexge/followers", "following_url": "https://api.github.com/users/unexge/following{/other_user}", "gists_url": "https://api.github.com/users/unexge/gists{/gist_id}", "starred_url": "https://api.github.com/users/unexge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unexge/subscriptions", "organizations_url": "https://api.github.com/users/unexge/orgs", "repos_url": "https://api.github.com/users/unexge/repos", "events_url": "https://api.github.com/users/unexge/events{/privacy}", "received_events_url": "https://api.github.com/users/unexge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1dbc2acd455592b1def80a8108fe75d38d2f18b", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1dbc2acd455592b1def80a8108fe75d38d2f18b", "html_url": "https://github.com/rust-lang/rust/commit/f1dbc2acd455592b1def80a8108fe75d38d2f18b"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "b47a7100065f57eebaa0ac12dc0b02f7ef7dc6b3", "filename": "crates/ide_completion/src/tests/flyimport.rs", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/4e4c9ea4ac9827c3e6b099c262418ba172910df3/crates%2Fide_completion%2Fsrc%2Ftests%2Fflyimport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e4c9ea4ac9827c3e6b099c262418ba172910df3/crates%2Fide_completion%2Fsrc%2Ftests%2Fflyimport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Ftests%2Fflyimport.rs?ref=4e4c9ea4ac9827c3e6b099c262418ba172910df3", "patch": "@@ -297,6 +297,47 @@ fn main() {\n     );\n }\n \n+#[test]\n+fn trait_method_from_alias() {\n+    let fixture = r#\"\n+//- /lib.rs crate:dep\n+pub mod test_mod {\n+    pub trait TestTrait {\n+        fn random_method();\n+    }\n+    pub struct TestStruct {}\n+    impl TestTrait for TestStruct {\n+        fn random_method() {}\n+    }\n+    pub type TestAlias = TestStruct;\n+}\n+\n+//- /main.rs crate:main deps:dep\n+fn main() {\n+    dep::test_mod::TestAlias::ran$0\n+}\n+\"#;\n+\n+    check(\n+        fixture,\n+        expect![[r#\"\n+                fn random_method() (use dep::test_mod::TestTrait) fn()\n+            \"#]],\n+    );\n+\n+    check_edit(\n+        \"random_method\",\n+        fixture,\n+        r#\"\n+use dep::test_mod::TestTrait;\n+\n+fn main() {\n+    dep::test_mod::TestAlias::random_method()$0\n+}\n+\"#,\n+    );\n+}\n+\n #[test]\n fn no_trait_type_fuzzy_completion() {\n     check("}, {"sha": "d6246c7ad649c825a74f0e22733450ab52373e68", "filename": "crates/ide_db/src/imports/import_assets.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4e4c9ea4ac9827c3e6b099c262418ba172910df3/crates%2Fide_db%2Fsrc%2Fimports%2Fimport_assets.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e4c9ea4ac9827c3e6b099c262418ba172910df3/crates%2Fide_db%2Fsrc%2Fimports%2Fimport_assets.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fimports%2Fimport_assets.rs?ref=4e4c9ea4ac9827c3e6b099c262418ba172910df3", "patch": "@@ -639,6 +639,17 @@ fn path_import_candidate(\n                     assoc_item_name: name,\n                 })\n             }\n+            Some(PathResolution::Def(ModuleDef::TypeAlias(alias))) => {\n+                let ty = alias.ty(sema.db);\n+                if ty.as_adt().is_some() {\n+                    ImportCandidate::TraitAssocItem(TraitImportCandidate {\n+                        receiver_ty: ty,\n+                        assoc_item_name: name,\n+                    })\n+                } else {\n+                    return None;\n+                }\n+            }\n             Some(_) => return None,\n         },\n         None => ImportCandidate::Path(PathImportCandidate { qualifier: None, name }),"}]}