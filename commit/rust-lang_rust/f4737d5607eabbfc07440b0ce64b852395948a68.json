{"sha": "f4737d5607eabbfc07440b0ce64b852395948a68", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0NzM3ZDU2MDdlYWJiZmMwNzQ0MGIwY2U2NGI4NTIzOTU5NDhhNjg=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-06-18T20:06:00Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-06-18T20:06:00Z"}, "message": "Make Place::ty iterate", "tree": {"sha": "59fc2c68678831f85e0b1dbe40ba1645d959bd85", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59fc2c68678831f85e0b1dbe40ba1645d959bd85"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f4737d5607eabbfc07440b0ce64b852395948a68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f4737d5607eabbfc07440b0ce64b852395948a68", "html_url": "https://github.com/rust-lang/rust/commit/f4737d5607eabbfc07440b0ce64b852395948a68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f4737d5607eabbfc07440b0ce64b852395948a68/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44fb88d25282d9362774536965f2455f677734f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/44fb88d25282d9362774536965f2455f677734f3", "html_url": "https://github.com/rust-lang/rust/commit/44fb88d25282d9362774536965f2455f677734f3"}], "stats": {"total": 26, "additions": 19, "deletions": 7}, "files": [{"sha": "2079a2a34e7effb5813492e1f875c47e64a7d7b3", "filename": "src/librustc/mir/tcx.rs", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/f4737d5607eabbfc07440b0ce64b852395948a68/src%2Flibrustc%2Fmir%2Ftcx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4737d5607eabbfc07440b0ce64b852395948a68/src%2Flibrustc%2Fmir%2Ftcx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Ftcx.rs?ref=f4737d5607eabbfc07440b0ce64b852395948a68", "patch": "@@ -122,13 +122,25 @@ impl<'tcx> Place<'tcx> {\n     where\n         D: HasLocalDecls<'tcx>,\n     {\n-        match *self {\n-            Place::Base(PlaceBase::Local(index)) =>\n-                PlaceTy::from_ty(local_decls.local_decls()[index].ty),\n-            Place::Base(PlaceBase::Static(ref data)) =>\n-                PlaceTy::from_ty(data.ty),\n-            Place::Projection(ref proj) =>\n-                proj.base.ty(local_decls, tcx).projection_ty(tcx, &proj.elem),\n+        self.iterate(|place_base, place_projections| {\n+            let mut place_ty = place_base.ty(local_decls);\n+\n+            for proj in place_projections {\n+                place_ty = place_ty.projection_ty(tcx, &proj.elem);\n+            }\n+\n+            place_ty\n+        })\n+    }\n+}\n+\n+impl<'tcx> PlaceBase<'tcx> {\n+    pub fn ty<D>(&self, local_decls: &D) -> PlaceTy<'tcx>\n+        where D: HasLocalDecls<'tcx>\n+    {\n+        match self {\n+            PlaceBase::Local(index) => PlaceTy::from_ty(local_decls.local_decls()[*index].ty),\n+            PlaceBase::Static(data) => PlaceTy::from_ty(data.ty),\n         }\n     }\n }"}]}