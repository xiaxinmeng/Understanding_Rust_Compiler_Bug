{"sha": "7171fec13f3a3091f702a8e55f495ad1563dc4cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxNzFmZWMxM2YzYTMwOTFmNzAyYThlNTVmNDk1YWQxNTYzZGM0Y2Q=", "commit": {"author": {"name": "Christiaan Dirkx", "email": "christiaan@dirkx.email", "date": "2021-04-21T14:21:10Z"}, "committer": {"name": "Christiaan Dirkx", "email": "christiaan@dirkx.email", "date": "2021-04-22T16:00:18Z"}, "message": "Remove `Once` from `init`", "tree": {"sha": "541d31cfe0177172d964bb095866eac6cf10a246", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/541d31cfe0177172d964bb095866eac6cf10a246"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7171fec13f3a3091f702a8e55f495ad1563dc4cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7171fec13f3a3091f702a8e55f495ad1563dc4cd", "html_url": "https://github.com/rust-lang/rust/commit/7171fec13f3a3091f702a8e55f495ad1563dc4cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7171fec13f3a3091f702a8e55f495ad1563dc4cd/comments", "author": {"login": "CDirkx", "id": 11176562, "node_id": "MDQ6VXNlcjExMTc2NTYy", "avatar_url": "https://avatars.githubusercontent.com/u/11176562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDirkx", "html_url": "https://github.com/CDirkx", "followers_url": "https://api.github.com/users/CDirkx/followers", "following_url": "https://api.github.com/users/CDirkx/following{/other_user}", "gists_url": "https://api.github.com/users/CDirkx/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDirkx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDirkx/subscriptions", "organizations_url": "https://api.github.com/users/CDirkx/orgs", "repos_url": "https://api.github.com/users/CDirkx/repos", "events_url": "https://api.github.com/users/CDirkx/events{/privacy}", "received_events_url": "https://api.github.com/users/CDirkx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CDirkx", "id": 11176562, "node_id": "MDQ6VXNlcjExMTc2NTYy", "avatar_url": "https://avatars.githubusercontent.com/u/11176562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDirkx", "html_url": "https://github.com/CDirkx", "followers_url": "https://api.github.com/users/CDirkx/followers", "following_url": "https://api.github.com/users/CDirkx/following{/other_user}", "gists_url": "https://api.github.com/users/CDirkx/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDirkx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDirkx/subscriptions", "organizations_url": "https://api.github.com/users/CDirkx/orgs", "repos_url": "https://api.github.com/users/CDirkx/repos", "events_url": "https://api.github.com/users/CDirkx/events{/privacy}", "received_events_url": "https://api.github.com/users/CDirkx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1b1081d2ff80f49129da2002ce3f5efa6186825", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1b1081d2ff80f49129da2002ce3f5efa6186825", "html_url": "https://github.com/rust-lang/rust/commit/e1b1081d2ff80f49129da2002ce3f5efa6186825"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "1e19aff51f8d6bb8054298096333b013590490f1", "filename": "library/std/src/rt.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7171fec13f3a3091f702a8e55f495ad1563dc4cd/library%2Fstd%2Fsrc%2Frt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7171fec13f3a3091f702a8e55f495ad1563dc4cd/library%2Fstd%2Fsrc%2Frt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Frt.rs?ref=7171fec13f3a3091f702a8e55f495ad1563dc4cd", "patch": "@@ -28,8 +28,11 @@ fn lang_start_internal(\n     use crate::panic;\n     use crate::sys_common;\n \n-    sys_common::rt::init(argc, argv);\n+    // SAFETY: Only called once during runtime initialization.\n+    unsafe { sys_common::rt::init(argc, argv) };\n+\n     let exit_code = panic::catch_unwind(main);\n+\n     sys_common::rt::cleanup();\n \n     exit_code.unwrap_or(101) as isize"}, {"sha": "c70f2ecc04e3a9caff6af4a1d49d045c4e7cf1ff", "filename": "library/std/src/sys_common/rt.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7171fec13f3a3091f702a8e55f495ad1563dc4cd/library%2Fstd%2Fsrc%2Fsys_common%2Frt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7171fec13f3a3091f702a8e55f495ad1563dc4cd/library%2Fstd%2Fsrc%2Fsys_common%2Frt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Frt.rs?ref=7171fec13f3a3091f702a8e55f495ad1563dc4cd", "patch": "@@ -1,16 +1,17 @@\n+#![deny(unsafe_op_in_unsafe_fn)]\n+\n use crate::sync::Once;\n use crate::sys;\n use crate::sys_common::thread_info;\n use crate::thread::Thread;\n \n // One-time runtime initialization.\n // Runs before `main`.\n+// SAFETY: must be called only once during runtime initialization.\n // NOTE: this is not guaranteed to run, for example when Rust code is called externally.\n #[cfg_attr(test, allow(dead_code))]\n-pub fn init(argc: isize, argv: *const *const u8) {\n-    static INIT: Once = Once::new();\n-    INIT.call_once(|| unsafe {\n-        // SAFETY: Only called once during runtime initialization.\n+pub unsafe fn init(argc: isize, argv: *const *const u8) {\n+    unsafe {\n         sys::init(argc, argv);\n \n         let main_guard = sys::thread::guard::init();\n@@ -20,7 +21,7 @@ pub fn init(argc: isize, argv: *const *const u8) {\n         // info about the stack bounds.\n         let thread = Thread::new(Some(\"main\".to_owned()));\n         thread_info::set(main_guard, thread);\n-    });\n+    }\n }\n \n // One-time runtime cleanup."}]}